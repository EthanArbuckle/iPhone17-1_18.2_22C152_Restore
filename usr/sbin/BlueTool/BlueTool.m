BOOL sub_100000E88()
{
  BOOL result;
  NSObject *v1;

  qword_1004E4A48 = (uint64_t)dlopen("/usr/lib/AppleConvergedTransport.dylib", 1);
  if (qword_1004E4A48)
  {
    dlerror();
    off_1004E4A50 = (uint64_t (*)(void))dlsym((void *)qword_1004E4A48, "AppleConvergedTransportInitParameters");
    if (dlerror() || !off_1004E4A50)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DC708);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100046888();
      }
    }
    else
    {
      off_1004E4A58 = (uint64_t (*)(void, void))dlsym((void *)qword_1004E4A48, "AppleConvergedTransportCreate");
      if (dlerror() || !off_1004E4A58)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DC748);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100046814();
        }
      }
      else
      {
        off_1004E4A60 = (uint64_t (*)(void, void, void, void, void, void, void))dlsym((void *)qword_1004E4A48, "AppleConvergedTransportSendImage");
        if (dlerror() || !off_1004E4A60)
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DC788);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_1000467A0();
          }
        }
        else
        {
          off_1004E4A68 = (uint64_t (*)(void, void, void, void, void, void))dlsym((void *)qword_1004E4A48, "AppleConvergedTransportRead");
          if (dlerror() || !off_1004E4A68)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DC7C8);
            }
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_10004672C();
            }
          }
          else
          {
            off_1004E4A70 = (uint64_t (*)(void, void, void, void, void, void))dlsym((void *)qword_1004E4A48, "AppleConvergedTransportWrite");
            if (dlerror() || !off_1004E4A70)
            {
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DC808);
              }
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_1000466B8();
              }
            }
            else
            {
              off_1004E4A78 = (uint64_t (*)(void))dlsym((void *)qword_1004E4A48, "AppleConvergedTransportFree");
              if (!dlerror() && off_1004E4A78) {
                return 1;
              }
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DC848);
              }
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_100046644();
              }
            }
          }
        }
      }
    }
    dlclose((void *)qword_1004E4A48);
    return 0;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DC6C8);
  }
  v1 = qword_1004E6428;
  result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR);
  if (result)
  {
    sub_1000465B0(v1);
    return 0;
  }
  return result;
}

void sub_10000124C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001280(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000012B4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000012E8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000131C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001350(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001384(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000013B8(uint64_t a1, void *a2, unint64_t a3, size_t *a4)
{
  if (!a1 || !*(void *)a1 || !a4 || (int v5 = *(_DWORD *)(a1 + 12), v5 == -1))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DC888);
    }
    v10 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000468FC(v10, v11, v12, v13, v14, v15, v16, v17);
    }
    return 0xFFFFFFFFLL;
  }
  os_channel_ring_id();
  os_channel_rx_ring();
  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  *(_OWORD *)__src = 0u;
  memset(&v35, 0, sizeof(v35));
  if (kevent(v5, 0, 0, &v35, 1, 0) == -1 || (unsigned __int16)v35.filter != 0xFFFF)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DC8C8);
    }
    v19 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046974(v19, v20, v21, v22, v23, v24, v25, v26);
    }
    return 0xFFFFFFFFLL;
  }
  if (!os_channel_get_next_slot())
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCA08);
    }
    v27 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000469EC(v27, v28, v29, v30, v31, v32, v33, v34);
    }
    return 0xFFFFFFFFLL;
  }
  size_t v8 = WORD1(v36);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DC908);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
    sub_100046BD8();
  }
  if (v8 > a3)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DC948);
    }
    v9 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046A64(v8, a3, v9);
    }
    return 0xFFFFFFFFLL;
  }
  memcpy(a2, __src[0], v8);
  *a4 = v8;
  if (os_channel_advance_slot())
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DC988);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046B60();
    }
    return 0xFFFFFFFFLL;
  }
  uint64_t result = os_channel_sync();
  if (result)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DC9C8);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046AE8();
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

void sub_100001718(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000174C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001780(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000017B4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000017E8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000181C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001850(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100001884()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DCA48);
  }
  io_connect_t connect = 0;
  v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIe FLR\n", buf, 2u);
  }
  CFDictionaryRef v1 = IOServiceMatching("AppleBluetoothModule");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCA88);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046C60();
    }
    return 0xFFFFFFFFLL;
  }
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCAC8);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046CFC();
    }
    return 0xFFFFFFFFLL;
  }
  if (IOConnectCallScalarMethod(connect, 5u, 0, 0, 0, 0))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCB08);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046C94();
    }
    IOServiceClose(connect);
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DCB48);
  }
  v4 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v7 = "pcie_flr";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "IOConnectCallScalarMethod succeed and ready to close IO service from %s", buf, 0xCu);
  }
  IOServiceClose(connect);
  uint64_t result = 0;
  byte_1004E4A80 = 0;
  return result;
}

void sub_100001B24(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001B58(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001B8C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001BC0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001BF4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100001C28()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DCB88);
  }
  io_connect_t connect = 0;
  v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIe powercycle\n", v4, 2u);
  }
  CFDictionaryRef v1 = IOServiceMatching("AppleBluetoothModule");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCBC8);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046C60();
    }
    return 0xFFFFFFFFLL;
  }
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, &connect))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCC08);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046CFC();
    }
    return 0xFFFFFFFFLL;
  }
  if (IOConnectCallScalarMethod(connect, 3u, 0, 0, 0, 0))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCC48);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046D64();
    }
    IOServiceClose(connect);
    return 0xFFFFFFFFLL;
  }
  IOServiceClose(connect);
  uint64_t result = 0;
  byte_1004E4A80 = 0;
  return result;
}

void sub_100001E2C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001E60(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001E94(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100001EC8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100001EFC()
{
  fwrite("-D           - Open pci transport (boot/hci)\n", 0x2DuLL, 1uLL, __stderrp);
  fwrite("-h           - Print device help prompt\n", 0x28uLL, 1uLL, __stderrp);
  v0 = __stderrp;

  return fputc(10, v0);
}

uint64_t sub_100001F68()
{
  uint64_t v5 = 0;
  v6 = &v5;
  uint64_t v7 = 0x2000000000;
  char v8 = 1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_1000020C4;
  block[3] = &unk_1004DCC70;
  block[4] = &v5;
  if (qword_1004E4A88 != -1) {
    dispatch_once(&qword_1004E4A88, block);
  }
  if (*((unsigned char *)v6 + 24))
  {
    if (byte_1004E4A80) {
      int v0 = 2;
    }
    else {
      int v0 = 1;
    }
    if (sub_100002128(v0))
    {
      if (byte_1004E4A80) {
        int v1 = 1;
      }
      else {
        int v1 = 2;
      }
      uint64_t v2 = sub_100002128(v1);
    }
    else
    {
      uint64_t v2 = 0;
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCCB0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046DCC();
    }
    uint64_t v2 = 0xFFFFFFFFLL;
  }
  _Block_object_dispose(&v5, 8);
  return v2;
}

BOOL sub_1000020C4(uint64_t a1)
{
  BOOL result = sub_100000E88();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_1000020F4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100002128(int a1)
{
  if (a1 != 2) {
    goto LABEL_19;
  }
  *(_DWORD *)notification = 0;
  uint64_t v2 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v2);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  CFMutableDictionaryRef v5 = IOServiceMatching("AppleConvergedIPCInterface");
  if (!v5)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCE90);
    }
    v9 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046E84(v9, v10, v11, v12, v13, v14, v15, v16);
    }
    goto LABEL_19;
  }
  CFMutableDictionaryRef v6 = v5;
  CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorDefault, "hci", 0x600u);
  if (!v7)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCED0);
    }
    uint64_t v17 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046EFC(v17, v18, v19, v20, v21, v22, v23, v24);
    }
    CFRelease(v6);
    goto LABEL_19;
  }
  CFStringRef v8 = v7;
  CFDictionarySetValue(v6, @"ACIPCInterfaceProtocol", v7);
  CFRelease(v8);
  if (IOServiceAddMatchingNotification(v2, "IOServiceFirstMatch", v6, (IOServiceMatchingCallback)sub_100003B04, Current, (io_iterator_t *)notification))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCF10);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000472E4();
    }
    CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
    IONotificationPortDestroy(v2);
    goto LABEL_19;
  }
  io_object_t v38 = IOIteratorNext(*(io_iterator_t *)notification);
  if (v38)
  {
    io_registry_entry_t v39 = v38;
    BOOL v40 = 0;
    CFRunLoopRunResult v41 = 0xFFFF;
  }
  else
  {
    do
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DCF50);
      }
      v49 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buffer = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "ACIPCInterface not found, waiting for it to appear", (uint8_t *)buffer, 2u);
      }
      CFRunLoopRunResult v41 = CFRunLoopRunInMode(kCFRunLoopDefaultMode, 5.0, 0);
      io_registry_entry_t v39 = IOIteratorNext(*(io_iterator_t *)notification);
      BOOL v40 = v39 == 0;
    }
    while (!v39 && v41 != kCFRunLoopRunTimedOut);
  }
  CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  IONotificationPortDestroy(v2);
  IOObjectRelease(*(io_object_t *)notification);
  if (!v40 && (v41 == 0xFFFF || v41 == kCFRunLoopRunStopped))
  {
    CFStringRef v42 = (const __CFString *)IORegistryEntrySearchCFProperty(v39, "IOService", @"ACIPCInterfaceTransport", kCFAllocatorDefault, 1u);
    if (!v42)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD0D0);
      }
      v50 = qword_1004E6428;
      int v46 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buffer = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "ACIPCInterface found, ACIPCInterfaceTransport property not found", (uint8_t *)buffer, 2u);
        int v46 = 0;
      }
      goto LABEL_79;
    }
    CFStringRef v43 = v42;
    *(void *)buffer = 0;
    *(void *)&buffer[8] = 0;
    if (CFStringGetCString(v42, buffer, 16, 0x600u))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DCFD0);
      }
      v44 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf.ident) = 136315138;
        *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)buffer;
        _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "ACIPCInterfaceTransport \"%s\"\n", (uint8_t *)&buf, 0xCu);
      }
      if (*(void *)buffer == 0x6B6C6177796B73)
      {
        int v66 = 0;
        while (1)
        {
          CFTypeRef v67 = IORegistryEntrySearchCFProperty(v39, "IOService", @"IOSkywalkNexusUUID", kCFAllocatorDefault, 1u);
          if (v67) {
            break;
          }
          usleep(0x30D40u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DD050);
          }
          v68 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            LODWORD(buf.ident) = 67109120;
            HIDWORD(buf.ident) = v66;
            _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "Retry: %d - trying to find ACIPCInterfaceTransport + IOSkywalkNexusUUID\n", (uint8_t *)&buf, 8u);
          }
          if (++v66 == 25)
          {
            int v46 = 0;
            goto LABEL_78;
          }
        }
        v85 = v67;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DD010);
        }
        v86 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf.ident) = 0;
          _os_log_impl((void *)&_mh_execute_header, v86, OS_LOG_TYPE_DEFAULT, "ACIPCInterfaceTransport + IOSkywalkNexusUUID found\n", (uint8_t *)&buf, 2u);
        }
        CFRelease(v85);
        int v46 = 1;
        goto LABEL_78;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD090);
      }
      v45 = qword_1004E6428;
      int v46 = 0;
      if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
LABEL_78:
        CFRelease(v43);
LABEL_79:
        BOOL v48 = v46 != 0;
        goto LABEL_80;
      }
      LOWORD(buf.ident) = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "ACIPCInterfaceTransport is not skywalk\n", (uint8_t *)&buf, 2u);
    }
    else
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DCF90);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_1000472B0();
      }
    }
    int v46 = 0;
    goto LABEL_78;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD110);
  }
  v47 = qword_1004E6428;
  BOOL v48 = 0;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buffer = 67109120;
    *(_DWORD *)&buffer[4] = v41;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "ACIPCInterface not found after 5 second -- runLoopResult = 0x%02x", (uint8_t *)buffer, 8u);
    BOOL v48 = 0;
  }
LABEL_80:
  if (!v39)
  {
    if (v48) {
      goto LABEL_84;
    }
LABEL_19:
    uint64_t v102 = 0;
    long long v100 = 0u;
    long long v101 = 0u;
    memset(buffer, 0, sizeof(buffer));
    if (!qword_1004E4AA8)
    {
      uint64_t v25 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
      qword_1004E4AA8 = (uint64_t)dispatch_queue_create("com.apple.BlueTool.pcie", v25);
    }
    off_1004E4A50(buffer);
    *(_DWORD *)buffer = a1;
    *(_DWORD *)&buffer[24] = 1000;
    *(void *)&buffer[8] = qword_1004E4AA8;
    if (a1 == 2) {
      *(_DWORD *)&buffer[32] |= 8u;
    }
    v95[0] = _NSConcreteStackBlock;
    v95[1] = 0x40000000;
    v95[2] = sub_10000366C;
    v95[3] = &unk_1004DCD90;
    int v96 = a1;
    *(void *)&buffer[16] = v95;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCDD0);
    }
    uint64_t v26 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      v27 = "BTI";
      if (a1 == 2) {
        v27 = "HCI";
      }
      LODWORD(buf.ident) = 136315138;
      *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)v27;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "PCIe creating %s transport\n", (uint8_t *)&buf, 0xCu);
    }
    if (off_1004E4A58(buffer, &qword_1004E4A90))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DCE50);
      }
      uint64_t v28 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        uint64_t v29 = "BTI";
        if (a1 == 2) {
          uint64_t v29 = "HCI";
        }
        LODWORD(buf.ident) = 136315138;
        *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)v29;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "PCIe successfully created %s transport\n", (uint8_t *)&buf, 0xCu);
      }
      uint64_t result = 0;
      strcpy((char *)&xmmword_1004E5FC0, "PCIE");
      dword_1004E6418 = 0;
      off_1004E63D0 = (uint64_t (*)(void, void, void))sub_100003864;
      off_1004E63D8 = sub_10000386C;
      off_1004E63E0 = (uint64_t (*)(void))sub_100003878;
      off_1004E63E8 = sub_100003880;
      off_1004E63F0 = (uint64_t (*)(void, void, void, void))sub_1000039B8;
      off_1004E6400 = (uint64_t (*)(void))sub_100003A88;
      off_1004E63F8 = (uint64_t (*)(void, void))sub_100003A8C;
      qword_1004E63C0 = 0;
      dword_1004E63C8 = 1;
      off_1004E6408 = (uint64_t (*)(void))nullsub_1;
      off_1004E6410 = (uint64_t (*)(void))nullsub_2;
      byte_1004E641C = 1;
      return result;
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCE10);
    }
    uint64_t v31 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046E00(a1 == 2, v31, v32, v33, v34, v35, v36, v37);
    }
    return 0xFFFFFFFFLL;
  }
  IOObjectRelease(v39);
  if (!v48) {
    goto LABEL_19;
  }
LABEL_84:
  qword_1004E4A98 = 0;
  qword_1004E4AA0 = -1;
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD3D0);
  }
  memset(&buf, 0, sizeof(buf));
  memset(uu, 0, sizeof(uu));
  memset(buffer, 0, 37);
  v51 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)notification = 136315138;
    *(void *)&notification[4] = "hci";
    _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "retrieving uuid for %s", notification, 0xCu);
  }
  CFMutableDictionaryRef v52 = IOServiceMatching("AppleConvergedIPCInterface");
  if (!v52)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD410);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046FEC();
    }
    goto LABEL_139;
  }
  v53 = v52;
  CFStringRef v54 = CFStringCreateWithCString(kCFAllocatorDefault, "hci", 0x600u);
  if (!v54)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD450);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047020();
    }
    goto LABEL_122;
  }
  CFStringRef v55 = v54;
  CFDictionarySetValue(v53, @"ACIPCInterfaceProtocol", v54);
  CFRelease(v55);
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v53);
  if (!MatchingService)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD550);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047054();
    }
    goto LABEL_139;
  }
  io_object_t v57 = MatchingService;
  v53 = (__CFDictionary *)IORegistryEntrySearchCFProperty(MatchingService, "IOService", @"IOSkywalkNexusUUID", kCFAllocatorDefault, 1u);
  IOObjectRelease(v57);
  if (!v53)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD510);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047088();
    }
    goto LABEL_139;
  }
  if (!CFStringGetCString((CFStringRef)v53, buffer, 37, 0x600u))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD490);
    }
    v77 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000470BC(v77, v78, v79, v80, v81, v82, v83, v84);
    }
LABEL_122:
    CFRelease(v53);
LABEL_139:
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD190);
    }
    v69 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100046F74(v69, v70, v71, v72, v73, v74, v75, v76);
    }
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD4D0);
  }
  v58 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)notification = 136315394;
    *(void *)&notification[4] = "hci";
    __int16 v106 = 2080;
    v107 = buffer;
    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "protocol: %s, uuidstr: %s", notification, 0x16u);
  }
  uuid_parse(buffer, uu);
  CFRelease(v53);
  uint64_t v59 = os_channel_create();
  if (!v59)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD1D0);
    }
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      goto LABEL_174;
    }
    sub_1000471AC();
    goto LABEL_172;
  }
  qword_1004E4A98 = v59;
  if (os_channel_attr_create())
  {
    if (!os_channel_read_attr())
    {
      *(void *)notification = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      os_channel_attr_get();
      os_channel_attr_get();
      os_channel_attr_get();
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD210);
      }
      v60 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buffer = 134218496;
        *(void *)&buffer[4] = *(void *)notification;
        *(_WORD *)&buffer[12] = 2048;
        *(void *)&buffer[14] = v98;
        *(_WORD *)&buffer[22] = 2048;
        *(void *)&buffer[24] = v97;
        _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "skywalk channel slotlen: %llu, rxslots: %llu, txslots: %llu", (uint8_t *)buffer, 0x20u);
      }
    }
    os_channel_attr_destroy();
  }
  int v61 = kqueue();
  if (v61 == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD250);
    }
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      goto LABEL_174;
    }
    sub_1000471E0();
    goto LABEL_172;
  }
  int v62 = v61;
  LODWORD(qword_1004E4AA0) = v61;
  buf.ident = (int)os_channel_get_fd();
  memset(&buf.fflags, 0, 20);
  *(_DWORD *)&buf.filter = 393214;
  if (kevent(v62, &buf, 1, 0, 0, 0) == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD290);
    }
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      goto LABEL_174;
    }
    sub_100047214();
    goto LABEL_172;
  }
  int v63 = kqueue();
  if (v63 == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD2D0);
    }
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      goto LABEL_174;
    }
    sub_100047248();
    goto LABEL_172;
  }
  int v64 = v63;
  HIDWORD(qword_1004E4AA0) = v63;
  buf.ident = (int)os_channel_get_fd();
  *(_DWORD *)&buf.filter = 393215;
  *(void *)((unint64_t)&buf | 0xC) = 0;
  *(void *)(((unint64_t)&buf | 0xC) + 8) = 0;
  *(_DWORD *)(((unint64_t)&buf | 0xC) + 0x10) = 0;
  if (kevent(v64, &buf, 1, 0, 0, 0) == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD310);
    }
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      goto LABEL_174;
    }
    sub_10004727C();
LABEL_172:
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD390);
    }
LABEL_174:
    v87 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047134(v87, v88, v89, v90, v91, v92, v93, v94);
    }
    sub_100004450((uint64_t)&qword_1004E4A98);
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD350);
  }
  v65 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buffer = 136315138;
    *(void *)&buffer[4] = "hci";
    _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "channel created successfully for %s", (uint8_t *)buffer, 0xCu);
  }
  uint64_t result = 0;
  strcpy((char *)&xmmword_1004E5FC0, "PCIE");
  dword_1004E6418 = 0;
  off_1004E63D0 = (uint64_t (*)(void, void, void))sub_100003F4C;
  off_1004E63D8 = sub_100003F54;
  off_1004E63E0 = (uint64_t (*)(void))sub_100003F60;
  off_1004E63E8 = sub_100003F68;
  off_1004E63F0 = (uint64_t (*)(void, void, void, void))sub_100004330;
  off_1004E6400 = (uint64_t (*)(void))sub_1000043EC;
  off_1004E63F8 = (uint64_t (*)(void, void))sub_10000440C;
  qword_1004E63C0 = 0;
  dword_1004E63C8 = 1;
  off_1004E6408 = (uint64_t (*)(void))nullsub_3;
  off_1004E6410 = (uint64_t (*)(void))nullsub_4;
  byte_1004E641C = 1;
  return result;
}

uint64_t sub_100003428(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = 0;
  if (off_1004E4A60(qword_1004E4A90, a1, a2, (char *)&v5 + 4, 2000, &v5, 0))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCD30);
    }
    uint64_t v2 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PCIe successfully transferred FW File\n", v4, 2u);
    }
    sub_1000035BC();
    byte_1004E4A80 = 1;
    return sub_100002128(2);
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DCCF0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004734C();
    }
    return 0xFFFFFFFFLL;
  }
}

void sub_100003554(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003588(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000035BC()
{
  if (dword_1004E63C8)
  {
    if ((off_1004E4A78(&qword_1004E4A90) & 1) == 0)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD910);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100047380();
      }
    }
    dispatch_release((dispatch_object_t)qword_1004E4AA8);
    qword_1004E4AA8 = 0;
    dword_1004E63C8 = 0;
    byte_1004E641C = 0;
  }
}

void sub_10000366C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DCD70);
  }
  CFStringRef v8 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    int v9 = *(_DWORD *)(a1 + 32);
    int v11 = 136315906;
    if (v9 == 2) {
      uint64_t v10 = "HCI";
    }
    else {
      uint64_t v10 = "BTI";
    }
    uint64_t v12 = v10;
    __int16 v13 = 1024;
    int v14 = a2;
    __int16 v15 = 2048;
    uint64_t v16 = a3;
    __int16 v17 = 2048;
    uint64_t v18 = a4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "PCIe %s transport got status %u with args %p and %p\n", (uint8_t *)&v11, 0x26u);
  }
}

void sub_100003794(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000037C8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000037FC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003830(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100003864()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_10000386C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100003880(a1, a2 + 1, a3 - 1);
}

uint64_t sub_100003878()
{
  return 0;
}

uint64_t sub_100003880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v8 = 0;
  int v4 = off_1004E4A70(qword_1004E4A90, a2, a3, &v8, 0xFFFFFFFFLL, 0);
  uint64_t result = 0;
  if (v4) {
    BOOL v6 = v8 == a3;
  }
  else {
    BOOL v6 = 0;
  }
  if (!v6)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD890);
    }
    CFStringRef v7 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)kevent buf = 67109632;
      int v10 = v4;
      __int16 v11 = 1024;
      int v12 = v8;
      __int16 v13 = 2048;
      uint64_t v14 = a3;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PCIe write failed: ret %u, written %u, expected %zu\n", buf, 0x18u);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_1000039B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unsigned int v8 = 0;
  if (off_1004E4A68(qword_1004E4A90, a2, a3, &v8, 0xFFFFFFFFLL, 0))
  {
    uint64_t result = 0;
    uint64_t v7 = v8;
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD8D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000473B4((uint64_t)&v8, a3);
    }
    uint64_t v7 = 0;
    uint64_t result = 0xFFFFFFFFLL;
  }
  *a4 = v7;
  return result;
}

uint64_t sub_100003A8C()
{
  return 0;
}

void sub_100003A9C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003AD0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003B04(__CFRunLoop *a1)
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD150);
  }
  uint64_t v2 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "ACIPCInterface found, releasing waiting thread", v3, 2u);
  }
  CFRunLoopStop(a1);
}

void sub_100003BA4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003BD8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003C0C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003C40(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003C74(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003CA8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003CDC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003D10(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003D44(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003D78(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003DAC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003DE0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003E14(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003E48(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003E7C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003EB0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003EE4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100003F18(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100003F4C()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_100003F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100003F68(a1, a2 + 1, a3 - 1);
}

uint64_t sub_100003F60()
{
  return 0;
}

uint64_t sub_100003F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!qword_1004E4A98 || !a2 || (int v3 = qword_1004E4AA0, qword_1004E4AA0 == -1))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD590);
    }
    BOOL v6 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047430(v6, v7, v8, v9, v10, v11, v12, v13);
    }
    return 0xFFFFFFFFLL;
  }
  os_channel_ring_id();
  os_channel_tx_ring();
  if (!os_channel_get_next_slot())
  {
    while (1)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD5D0);
      }
      uint64_t v5 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf.ident) = 136315138;
        *(uintptr_t *)((char *)&buf.ident + 4) = (uintptr_t)"skywalk_write_channel";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s: empty slot. waiting for slot to become available", (uint8_t *)&buf, 0xCu);
      }
      memset(&buf, 0, sizeof(buf));
      if (kevent(v3, 0, 0, &buf, 1, 0) == -1 || (unsigned __int16)buf.filter != 65534) {
        break;
      }
      if (os_channel_get_next_slot()) {
        goto LABEL_23;
      }
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD610);
    }
    __int16 v15 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000476B8(v15, v16, v17, v18, v19, v20, v21, v22);
    }
    return 0xFFFFFFFFLL;
  }
LABEL_23:
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD650);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
    sub_100047630();
  }
  if (a3)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD690);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000474A8();
    }
    return 0xFFFFFFFFLL;
  }
  os_channel_set_slot_properties();
  if (os_channel_advance_slot())
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD6D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000475B8();
    }
    return 0xFFFFFFFFLL;
  }
  uint64_t result = os_channel_sync();
  if (result)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD710);
    }
    uint64_t v23 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047540(v23, v24, v25, v26, v27, v28, v29, v30);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_100004330(uint64_t a1, void *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v9 = 0;
  uint64_t result = sub_1000013B8((uint64_t)&qword_1004E4A98, a2, a3, (size_t *)&v9);
  if (result)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD750);
    }
    uint64_t v7 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047730(&v9, a3, v7);
    }
    uint64_t v8 = 0;
    uint64_t result = 0xFFFFFFFFLL;
  }
  else
  {
    uint64_t v8 = v9;
  }
  *a4 = v8;
  return result;
}

void sub_1000043EC()
{
  if (dword_1004E63C8) {
    sub_100004450((uint64_t)&qword_1004E4A98);
  }
}

uint64_t sub_10000440C()
{
  return 0;
}

void sub_10000441C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004450(uint64_t a1)
{
  if (a1)
  {
    int v2 = *(_DWORD *)(a1 + 8);
    if (v2 != -1)
    {
      close(v2);
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD7D0);
      }
      int v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)kevent buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "closed sw_kq_write", buf, 2u);
      }
      *(_DWORD *)(a1 + 8) = -1;
    }
    int v4 = *(_DWORD *)(a1 + 12);
    if (v4 != -1)
    {
      close(v4);
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD810);
      }
      uint64_t v5 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "closed sw_kq_read", v8, 2u);
      }
      *(_DWORD *)(a1 + 12) = -1;
    }
    if (*(void *)a1)
    {
      os_channel_destroy();
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DD850);
      }
      BOOL v6 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "closed sk_channel", v7, 2u);
      }
      *(void *)a1 = 0;
    }
    dword_1004E63C8 = 0;
    byte_1004E641C = 0;
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD790);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000477CC();
    }
  }
}

void sub_10000465C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004690(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000046C4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000046F8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000472C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004760(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004794(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000047C8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000047FC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004830(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004864(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004898(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000048CC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004900(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004934(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004968(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000499C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000049D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004A04(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004A38(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004A6C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004AA0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100004AD4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_100004AF0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100004B2C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100004B48(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_100004B88(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x12u);
}

uint64_t sub_100004BAC()
{
  int v0 = __chkstk_darwin();
  int v2 = v1;
  int v3 = v0;
  optind = 1;
  while (2)
  {
    uint64_t v4 = getopt(v3, v2, "rhAa:NnBb:FptWcsSo:OURVQKw:q:");
    switch((int)v4)
    {
      case 'A':
        uint64_t v5 = qword_1004E63C0;
        BOOL v6 = 0;
        goto LABEL_64;
      case 'B':
        if (sub_100040DFC() == 6) {
          return 0;
        }
        int v7 = qword_1004E63C0;
        uint64_t v8 = 0;
        goto LABEL_69;
      case 'C':
      case 'D':
      case 'E':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'L':
      case 'M':
      case 'P':
      case 'T':
      case 'X':
      case 'Y':
      case 'Z':
      case '[':
      case '\\':
      case ']':
      case '^':
      case '_':
      case 'd':
      case 'e':
      case 'f':
      case 'g':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'u':
      case 'v':
        goto LABEL_4;
      case 'F':
        if (!dword_1004E63C8) {
          goto LABEL_146;
        }
        uint64_t v9 = qword_1004E63C0;
        LOWORD(v225) = 0;
        off_1004E6408(qword_1004E63C0);
        sleep(2u);
        unsigned int v10 = sub_1000084D4();
        sub_100017B2C(&v225, 0, 0, 0, 0, 0);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DDF90);
        }
        uint64_t v11 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100047BCC((unsigned __int16 *)&v225, v10, v11);
        }
        uint64_t v12 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
        {
          uint64_t v13 = off_1004E40B8[v10];
          *(_DWORD *)kevent buf = 136315650;
          *(void *)&uint8_t buf[4] = v13;
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = dword_1004E40D0;
          *(_WORD *)&buf[18] = 1024;
          *(_DWORD *)&buf[20] = dword_1004E40D4;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "ACI %s chip with sw version major=%d, minor=%d.\n", buf, 0x18u);
        }
        int v14 = sub_100007F70();
        long long v170 = 0u;
        long long v171 = 0u;
        long long v168 = 0u;
        long long v169 = 0u;
        long long v166 = 0u;
        long long v167 = 0u;
        long long v164 = 0u;
        long long v165 = 0u;
        long long v162 = 0u;
        long long v163 = 0u;
        long long v160 = 0u;
        long long v161 = 0u;
        long long v158 = 0u;
        long long v159 = 0u;
        memset(buf, 0, sizeof(buf));
        __int16 v15 = fopen("/etc/bluetool/bin_id.aci", "r");
        if (v15)
        {
          uint64_t v16 = v15;
          if (fgets((char *)buf, 32, v15))
          {
            int v17 = strtoul((const char *)buf, 0, 10);
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE190);
            }
            uint64_t v18 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)v140 = 67109120;
              *(_DWORD *)&v140[4] = v17;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "CPF bin id: 0x%08x.\n", v140, 8u);
            }
          }
          else
          {
            int v17 = 0;
          }
          fclose(v16);
        }
        else
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE150);
          }
          v86 = qword_1004E6428;
          if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
          {
            int v17 = 0;
            uint64_t v94 = -1;
            goto LABEL_234;
          }
          sub_100047B54(v86, v87, v88, v89, v90, v91, v92, v93);
          int v17 = 0;
        }
        uint64_t v94 = qword_1004E6420;
LABEL_234:
        if (v14 && v14 == v17)
        {
          if (v94 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE010);
          }
          uint64_t v112 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
          {
            v113 = off_1004E40B8[v10];
            *(_DWORD *)kevent buf = 136315394;
            *(void *)&uint8_t buf[4] = v113;
            *(_WORD *)&buf[12] = 1024;
            *(_DWORD *)&buf[14] = v14;
            v114 = "ACI %s chip BIN_ID=%08x equals CPF bin_id -> Skip the boot.\n";
            v115 = v112;
            uint32_t v116 = 18;
            goto LABEL_273;
          }
        }
        else
        {
          if (v94 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE050);
          }
          v117 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
          {
            v118 = off_1004E40B8[v10];
            *(_DWORD *)kevent buf = 136315650;
            *(void *)&uint8_t buf[4] = v118;
            *(_WORD *)&buf[12] = 1024;
            *(_DWORD *)&buf[14] = v14;
            *(_WORD *)&buf[18] = 1024;
            *(_DWORD *)&buf[20] = v17;
            _os_log_impl((void *)&_mh_execute_header, v117, OS_LOG_TYPE_INFO, "ACI %s chip BIN_ID %08x differ from CPF bin_id %08x -> Go boot.\n", buf, 0x18u);
          }
          if (v10 > 1)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE090);
            }
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_100047AEC();
            }
          }
          else if (sub_1000090F0("/etc/bluetool/aci_boot.hcd") {
                 || !sub_1000073B4(v9, "/etc/bluetool/aci_boot.hcd"))
          }
          {
            sub_10001AC20("power off", 0);
            usleep(0xC350u);
            sub_10001AC20("power on", 0);
            usleep(0xC350u);
            sub_10001AC20("device -D", 0);
            if (!v10) {
              sleep(2u);
            }
            sub_10001AC20("aci -B", 0);
            usleep(0xC350u);
            sub_10001AC20("hci info", 0);
            sub_10001AC20("hci cmd 0xfe1f", 0);
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE110);
            }
            uint64_t v119 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)kevent buf = 67109120;
              *(_DWORD *)&uint8_t buf[4] = v10;
              v114 = "BOOT Done! for aci_platform=%d\n";
              goto LABEL_272;
            }
          }
          else
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE0D0);
            }
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_100047A84();
            }
          }
        }
        return 0;
      case 'K':
        long long v177 = 0u;
        memset(v178, 0, sizeof(v178));
        long long v175 = 0u;
        long long v176 = 0u;
        long long v173 = 0u;
        long long v174 = 0u;
        long long v171 = 0u;
        long long v172 = 0u;
        long long v169 = 0u;
        long long v170 = 0u;
        long long v167 = 0u;
        long long v168 = 0u;
        long long v165 = 0u;
        long long v166 = 0u;
        long long v163 = 0u;
        long long v164 = 0u;
        long long v161 = 0u;
        long long v162 = 0u;
        long long v159 = 0u;
        long long v160 = 0u;
        long long v158 = 0u;
        memset(buf, 0, sizeof(buf));
        uint64_t v19 = sub_100043434();
        uint64_t v20 = (const char *)sub_100043B94();
        if (v20 && !strcmp(v20, "APPLE_M1"))
        {
          int v29 = 98;
        }
        else
        {
          int v226 = -871113647;
          long long v225 = xmmword_10004C666;
          int v224 = 1530707451;
          long long v223 = xmmword_10004C67A;
          char __streamb = MGIsDeviceOneOfType();
          int v222 = 1472775220;
          long long v221 = xmmword_10004C68E;
          int v220 = 483476120;
          long long v219 = xmmword_10004C6A2;
          char v135 = MGIsDeviceOneOfType();
          int v218 = 282158961;
          long long v217 = xmmword_10004C6B6;
          int v216 = 56502976;
          long long v215 = xmmword_10004C6CA;
          char v134 = MGIsDeviceOneOfType();
          int v214 = -961843768;
          long long v213 = xmmword_10004C6DE;
          int v212 = 1282132887;
          long long v211 = xmmword_10004C6F2;
          char v133 = MGIsDeviceOneOfType();
          int v210 = -1092155788;
          long long v209 = xmmword_10004C706;
          int v208 = 763775061;
          long long v207 = xmmword_10004C71A;
          char v132 = MGIsDeviceOneOfType();
          int v206 = -63049871;
          long long v205 = xmmword_10004C72E;
          int v204 = -557458837;
          long long v203 = xmmword_10004C742;
          char v21 = MGIsDeviceOneOfType();
          int v202 = 1730000236;
          long long v201 = xmmword_10004C756;
          char v22 = MGIsDeviceOneOfType();
          int v200 = 1530338216;
          long long v199 = xmmword_10004C76A;
          int v198 = 406601745;
          long long v197 = xmmword_10004C77E;
          char v23 = MGIsDeviceOneOfType();
          int v196 = 1654218604;
          long long v195 = xmmword_10004C792;
          int v194 = -1930811061;
          long long v193 = xmmword_10004C7A6;
          char v24 = MGIsDeviceOneOfType();
          int v192 = -182498503;
          long long v191 = xmmword_10004C7BA;
          char v25 = MGIsDeviceOneOfType();
          int v190 = 841005628;
          long long v189 = xmmword_10004C7CE;
          int v188 = -2030489149;
          long long v187 = xmmword_10004C7E2;
          char v26 = MGIsDeviceOneOfType();
          int v186 = 1219348060;
          long long v185 = xmmword_10004C7F6;
          int v184 = 223445260;
          long long v183 = xmmword_10004C80A;
          char v27 = MGIsDeviceOneOfType();
          int v182 = -584398440;
          long long v181 = xmmword_10004C81E;
          BOOL v28 = (((MGIsDeviceOneOfType() | v27 | v26 | v25 | v24 | v23 | v22 | v21 | v132 | v133 | v134) | (v135 | __streamb)) & 1) == 0;
          int v29 = 379;
          if (v28) {
            int v30 = 187;
          }
          else {
            int v30 = 379;
          }
          int v180 = -879476163;
          long long v179 = xmmword_10004C832;
          if (!MGIsDeviceOneOfType()) {
            int v29 = v30;
          }
        }
        if (sub_100016704((uint64_t)v19, buf))
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE450);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_100047A50();
          }
          off_1004E6408(qword_1004E63C0);
          uint64_t v36 = 22;
          goto LABEL_164;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE410);
        }
        v95 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)v140 = 67109634;
          *(_DWORD *)&v140[4] = v29;
          *(_WORD *)&v140[8] = 1040;
          *(_DWORD *)&v140[10] = v29;
          *(_WORD *)&v140[14] = 2096;
          *(void *)&long long v141 = buf;
          _os_log_impl((void *)&_mh_execute_header, v95, OS_LOG_TYPE_INFO, "Regulatory Data (%d bytes): %.*P", v140, 0x18u);
        }
        off_1004E6408(qword_1004E63C0);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE2D0);
        }
        int v96 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v140 = 0;
          _os_log_impl((void *)&_mh_execute_header, v96, OS_LOG_TYPE_INFO, "Power tables exist for this device", v140, 2u);
        }
        if (!sub_100043B94())
        {
          *__error() = 94;
          uint64_t v36 = 30;
          goto LABEL_164;
        }
        uint64_t v97 = buf;
        do
        {
          if (*v97 != 1)
          {
            *__error() = 94;
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE490);
            }
            v121 = qword_1004E6428;
            if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
            {
              uint64_t v36 = 24;
              goto LABEL_166;
            }
            sub_1000479E0((uint64_t)v97, v121, v122, v123, v124, v125, v126, v127);
            uint64_t v36 = 24;
            goto LABEL_164;
          }
          uint64_t v98 = v97[3] + 4;
          if (off_1004E63D8(qword_1004E63C0, v97, v98) == -1)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE4D0);
            }
            if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
            {
              uint64_t v36 = 3;
              goto LABEL_166;
            }
            sub_100047978();
            uint64_t v36 = 3;
LABEL_164:
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE310);
            }
            goto LABEL_166;
          }
          unsigned int v99 = *(unsigned __int16 *)(v97 + 1);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE510);
          }
          long long v100 = qword_1004E6428;
          BOOL v101 = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
          if (v101)
          {
            *(_DWORD *)v140 = 67109120;
            *(_DWORD *)&v140[4] = v99;
            _os_log_impl((void *)&_mh_execute_header, v100, OS_LOG_TYPE_INFO, "aci_download_power_tables: Handle opcode 0x%04x", v140, 8u);
          }
          if (v99 == 65411)
          {
            usleep(0xBB8u);
            goto LABEL_196;
          }
          if ((sub_10000810C(v101, v99) & 0x80000000) != 0)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DE550);
            }
            if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
            {
              uint64_t v36 = 255;
LABEL_166:
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_100047944();
              }
              goto LABEL_168;
            }
            sub_1000479AC();
            uint64_t v36 = 255;
            goto LABEL_164;
          }
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE590);
          }
          uint64_t v102 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)v140 = 67109120;
            *(_DWORD *)&v140[4] = v99;
            _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_INFO, "aci_download_power_tables: opcode 0x%04x pass", v140, 8u);
          }
LABEL_196:
          v97 += v98;
          v29 -= v98;
        }
        while ((_WORD)v29);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE350);
        }
        v128 = qword_1004E6428;
        uint64_t v36 = 0;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v140 = 0;
          _os_log_impl((void *)&_mh_execute_header, v128, OS_LOG_TYPE_DEFAULT, "Power tables download Done!", v140, 2u);
          uint64_t v36 = 0;
        }
LABEL_168:
        *(void *)&long long v225 = 0;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long v144 = 0u;
        long long v145 = 0u;
        long long v142 = 0u;
        long long v143 = 0u;
        *(_OWORD *)v140 = 0u;
        long long v141 = 0u;
        LOBYTE(v223) = 0;
        sub_100018AA8(64817, (uint64_t)&v223, 1uLL, (uint64_t)v140, &v225, 14);
        if (v140[3])
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE3D0);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_100047910();
          }
        }
        else
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE390);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
            sub_1000478D0();
          }
        }
        return v36;
      case 'N':
        uint64_t v31 = qword_1004E63C0;
        uint64_t v32 = 0;
        goto LABEL_81;
      case 'O':
        if (!dword_1004E63C8) {
          goto LABEL_146;
        }
        uint64_t v33 = (const char *)sub_100043B94();
        if (v33 && !strcmp(v33, "ACIFPGA")) {
          sleep(2u);
        }
        else {
          usleep(0xC350u);
        }
        return 0;
      case 'Q':
        uint64_t v34 = 0;
        goto LABEL_86;
      case 'R':
        memset(&buf[4], 0, 24);
        *(_DWORD *)kevent buf = 419316737;
        CCRandomGenerateBytes(&buf[4], 0x18uLL);
        uint64_t v35 = off_1004E63D8(qword_1004E63C0, buf, 28);
        if (v35 != -1) {
          return (unsigned __int16)sub_10000810C(v35, 0xFE44u);
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE850);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100047C90();
        }
        return 0xFFFFLL;
      case 'S':
        uint64_t v37 = qword_1004E63C0;
        bzero(buf, 0x780uLL);
        bzero(v140, 0x780uLL);
        *(void *)&buf[8] = "cmd";
        *(void *)&uint8_t buf[16] = "0x1009";
        sub_100017D90(3, (const char **)buf, (char **)v140);
        *(void *)&buf[8] = "cmd";
        *(void *)&uint8_t buf[16] = "0xc1a";
        *(void *)&buf[24] = "0x03";
        sub_100017D90(4, (const char **)buf, (char **)v140);
        *(void *)&buf[8] = "cmd";
        *(void *)&uint8_t buf[16] = "0xc05";
        *(void *)&buf[24] = "0x02";
        *(void *)&long long v158 = "0x00";
        *((void *)&v158 + 1) = "0x03";
        sub_100017D90(6, (const char **)buf, (char **)v140);
        *(void *)&buf[8] = "cmd";
        *(void *)&uint8_t buf[16] = "0xfe10";
        *(void *)&buf[24] = "0x01";
        *(void *)&long long v158 = "0x78";
        *((void *)&v158 + 1) = "0xff";
        *(void *)&long long v159 = "0x01";
        *((void *)&v159 + 1) = "0xff";
        sub_100017D90(8, (const char **)buf, (char **)v140);
        *(void *)&buf[8] = "cmd";
        *(void *)&uint8_t buf[16] = "0xfe11";
        sub_100017D90(3, (const char **)buf, (char **)v140);
        sub_100007768(v37, "06:05:04:03:02:01");
        return 0;
      case 'U':
        WORD4(v223) = 0;
        *(void *)&long long v223 = 0;
        __int16 v156 = 0;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long v144 = 0u;
        long long v145 = 0u;
        long long v142 = 0u;
        long long v143 = 0u;
        *(_OWORD *)v140 = 0u;
        long long v141 = 0u;
        *(void *)&long long v221 = 0;
        bzero(buf, 0x400uLL);
        io_object_t v38 = (const char *)sub_100043B94();
        off_1004E63E8(qword_1004E63C0, &unk_10004C663, 3);
        do
          off_1004E63F0(qword_1004E63C0, v140, 258, &v221);
        while (v140[0] != 14);
        int __stream = *(unsigned __int16 *)&v140[6];
        int v136 = *(unsigned __int16 *)&v140[8];
        int v39 = *(unsigned __int16 *)&v140[10];
        int v40 = *(unsigned __int16 *)&v140[12];
        if (!v38) {
          goto LABEL_44;
        }
        if (!strcmp(v38, "APPLE_M1"))
        {
          LODWORD(v38) = *(unsigned __int16 *)&v140[14];
          int v42 = (unsigned __int16)v141;
          int v41 = WORD1(v141);
        }
        else
        {
          if (strcmp(v38, "APPLE_M2") && strcmp(v38, "APPLE_M2_5"))
          {
            LODWORD(v38) = 0;
LABEL_44:
            int v41 = 0;
            int v42 = 0;
            int v43 = 0;
LABEL_204:
            sub_1000165AC();
            LODWORD(v223) = 16654081;
            if (off_1004E63D8(qword_1004E63C0, &v223, 4) == -1)
            {
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DE710);
              }
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_100047C90();
              }
            }
            else
            {
              __int16 v156 = 0;
              long long v154 = 0u;
              long long v155 = 0u;
              long long v152 = 0u;
              long long v153 = 0u;
              long long v150 = 0u;
              long long v151 = 0u;
              long long v148 = 0u;
              long long v149 = 0u;
              long long v146 = 0u;
              long long v147 = 0u;
              long long v144 = 0u;
              long long v145 = 0u;
              long long v142 = 0u;
              long long v143 = 0u;
              *(_OWORD *)v140 = 0u;
              long long v141 = 0u;
              do
                off_1004E63F0(qword_1004E63C0, v140, 258, &v221);
              while (v140[0] != 14);
              printf("pktlen %lu\n", (void)v221);
              v103.i32[0] = *(_DWORD *)&v140[2];
              if (vmovn_s16((int16x8_t)vmovl_u8(v103)).u32[0] == 16654081)
              {
                dword_1004E40D0 = v140[6];
                dword_1004E40D4 = v140[7];
                if (v140[6] == 8 && v140[7] == 32)
                {
                  int v104 = v42;
                  int v105 = v41;
                  int v106 = (int)v38;
                  if (qword_1004E6420 != -1) {
                    dispatch_once(&qword_1004E6420, &stru_1004DE790);
                  }
                  v107 = qword_1004E6428;
                  if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO)) {
                    goto LABEL_296;
                  }
                  LODWORD(v225) = 67109888;
                  DWORD1(v225) = v140[6];
                  WORD4(v225) = 1024;
                  *(_DWORD *)((char *)&v225 + 10) = v140[7];
                  HIWORD(v225) = 1024;
                  int v226 = v140[8];
                  __int16 v227 = 1024;
                  int v228 = v140[9];
                  v108 = "Default ACI BGA SW version: %d.%d, chip revision: %d, chip mode=%d";
                }
                else
                {
                  int v104 = v42;
                  if (v140[6] > 1u || v140[6] == 1 && v140[7] >= 0xBu)
                  {
                    int v105 = v41;
                    int v106 = (int)v38;
                    if (qword_1004E6420 != -1) {
                      dispatch_once(&qword_1004E6420, &stru_1004DE7D0);
                    }
                    v110 = qword_1004E6428;
                    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
                    {
                      LODWORD(v225) = 67110144;
                      DWORD1(v225) = v140[6];
                      WORD4(v225) = 1024;
                      *(_DWORD *)((char *)&v225 + 10) = v140[7];
                      HIWORD(v225) = 1024;
                      int v226 = v140[8];
                      __int16 v227 = 1024;
                      int v228 = v140[9];
                      __int16 v229 = 1024;
                      int v230 = v140[10];
                      _os_log_impl((void *)&_mh_execute_header, v110, OS_LOG_TYPE_INFO, "SW version: %d.%d.%d, chip revision: %d, chip mode=%d", (uint8_t *)&v225, 0x20u);
                    }
                    dword_1004E5FA8 = v140[8];
                    unsigned int v111 = 9;
LABEL_297:
                    uint64_t v129 = v111;
                    int v130 = *(unsigned __int8 *)((unint64_t)v140 | v111);
                    switch(v130)
                    {
                      case 255:
                        v131 = "CHIP is: FPGA";
                        break;
                      case 32:
                        v131 = "CHIP is: BGA";
                        break;
                      case 15:
                        v131 = "CHIP is: TRIO";
                        break;
                      default:
LABEL_304:
                        printf("MAC FW Version:              %d.%d.%d.%d\n", __stream, v136, v39, v40);
                        printf("PHY FW Version:              %d.%d.%d.%d\n", v106, v104, v105, v43);
                        printf("Chip Revision:               %02x\n", *(unsigned __int8 *)(v129 | (unint64_t)v140));
                        printf("Chip mode:                   %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 1));
                        printf("ROOT Clock:                  %02x%02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 3), *(unsigned __int8 *)(v129 | (unint64_t)v140 | 2));
                        printf("Slow Clock used:             %02x\n", *(unsigned __int8 *)(v129 | (unint64_t)v140 | 4));
                        printf("Process Type:                %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 5));
                        printf("ODP proccess:                %02x\n", *(unsigned __int8 *)(v129 | (unint64_t)v140 | 6));
                        if ((unint64_t)v221 >= 0x3D)
                        {
                          printf("Deep Sleep Mode:             %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 7));
                          printf("Whitening Mode:              %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 8));
                          printf("CDC Mode:                    %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 9));
                          printf("Hopping Mode:                %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0xA));
                          printf("HCI UART Baud Rate:          %02x%02x%02x%02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0xE), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0xD), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0xC), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0xB));
                          printf("Temperature Index:           %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0xF));
                          printf("Detected Temperature:        %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x10));
                          printf("FREF/TCXO Clock:             %02x%02x\n", v140[v129 | 0x12], *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x11));
                          printf("PLL Sharing Running Mode:    %02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x13));
                          printf("RF Type:                     %02x\n", v140[v129 | 0x14]);
                          printf("RTL Version:                 %02x%02x\n", v140[v129 | 0x16], *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x15));
                          printf("FPGA User Code:              %02x%02x%02x%02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x1A), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x19), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x18), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x17));
                          printf("MAC bin id:                  %02x%02x%02x%02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x1E), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x1D), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x1C), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x1B));
                          printf("PHY bin id:                  %02x%02x%02x%02x\n", *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x22), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x21), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x20), *(unsigned __int8 *)((v129 | (unint64_t)v140) + 0x1F));
                        }
                        off_1004E63E8(qword_1004E63C0, &unk_10004CA61, 3);
                        do
                          off_1004E63F0(qword_1004E63C0, v140, 258, &v221);
                        while (v140[0] != 14);
                        printf("Bluetooth Address:           %02x:%02x:%02x:%02x:%02x:%02x\n");
                        return 0;
                    }
                    puts(v131);
                    goto LABEL_304;
                  }
                  int v105 = v41;
                  int v106 = (int)v38;
                  if (qword_1004E6420 != -1) {
                    dispatch_once(&qword_1004E6420, &stru_1004DE810);
                  }
                  v107 = qword_1004E6428;
                  if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
                  {
LABEL_296:
                    unsigned int v111 = 8;
                    goto LABEL_297;
                  }
                  LODWORD(v225) = 67109888;
                  DWORD1(v225) = v140[6];
                  WORD4(v225) = 1024;
                  *(_DWORD *)((char *)&v225 + 10) = v140[7];
                  HIWORD(v225) = 1024;
                  int v226 = v140[8];
                  __int16 v227 = 1024;
                  int v228 = v140[9];
                  v108 = "SW version: %d.%d, chip revision: %d, chip mode=%d";
                }
                _os_log_impl((void *)&_mh_execute_header, v107, OS_LOG_TYPE_INFO, v108, (uint8_t *)&v225, 0x1Au);
                goto LABEL_296;
              }
              *__error() = 94;
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DE750);
              }
              v109 = qword_1004E6428;
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
              {
                LODWORD(v225) = 67110656;
                DWORD1(v225) = v140[2];
                WORD4(v225) = 1024;
                *(_DWORD *)((char *)&v225 + 10) = v140[3];
                HIWORD(v225) = 1024;
                int v226 = v140[4];
                __int16 v227 = 1024;
                int v228 = v140[5];
                __int16 v229 = 1024;
                int v230 = v140[6];
                __int16 v231 = 1024;
                int v232 = v140[7];
                __int16 v233 = 1024;
                int v234 = 65055;
                _os_log_error_impl((void *)&_mh_execute_header, v109, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", (uint8_t *)&v225, 0x2Cu);
              }
            }
            return 0xFFFFLL;
          }
          LODWORD(v38) = *(unsigned __int16 *)&v140[14];
          int v41 = (unsigned __int16)v141;
          int v42 = WORD1(v141);
        }
        int v43 = WORD2(v141);
        __sprintf_chk((char *)buf, 0, 0x400uLL, "MAC FW Version: %d.%d.%d.%d, PHY FW Version: %d.%d.%d.%d", __stream, v136, v39, v40, v38, v42, v41, WORD2(v141));
        goto LABEL_204;
      case 'V':
        if (sub_100040DFC() == 6) {
          v44 = "Using ACI Chipset changes (ACI_BT_SW_%d_%04d_%04d, transport AppleBTHci)\n\n";
        }
        else {
          v44 = "Using ACI Chipset changes (ACI_BT_SW_%d_%04d_%04d)\n\n";
        }
        printf(v44, 9, 27, 25);
        return 0;
      case 'W':
        if (!dword_1004E63C8)
        {
LABEL_146:
          uint64_t v36 = 1;
          fwrite("First open the port with device -D command\n", 0x2BuLL, 1uLL, __stderrp);
          return v36;
        }
        uint64_t v45 = qword_1004E63C0;
        off_1004E6408(qword_1004E63C0);
        unsigned int v46 = sub_1000084D4();
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DDC50);
        }
        v47 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)kevent buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v46;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "aci_platform=%d\n", buf, 8u);
        }
        if (v46 > 1)
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DDC90);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_100047868();
          }
        }
        else
        {
          if (sub_1000090F0("/etc/bluetool/aci_init.hcd"))
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DDD10);
            }
            BOOL v48 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)kevent buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_INFO, "Using default init file\n", buf, 2u);
            }
            if (sub_1000142B8()) {
              sub_1000165AC();
            }
            int v49 = sub_100009304(v45, (uint64_t (*)(unsigned char *))sub_10000952C);
          }
          else
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DDCD0);
            }
            v120 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)kevent buf = 136315138;
              *(void *)&uint8_t buf[4] = "/etc/bluetool/aci_init.hcd";
              _os_log_impl((void *)&_mh_execute_header, v120, OS_LOG_TYPE_INFO, "Using non-default init file: %s\n", buf, 0xCu);
            }
            int v49 = sub_1000073B4(v45, "/etc/bluetool/aci_init.hcd");
          }
          if (v49)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DDD50);
            }
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_100047800();
            }
          }
          else
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DDD90);
            }
            uint64_t v119 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)kevent buf = 67109120;
              *(_DWORD *)&uint8_t buf[4] = v46;
              v114 = "INIT Done! for aci_platform=%d\n";
LABEL_272:
              v115 = v119;
              uint32_t v116 = 8;
LABEL_273:
              _os_log_impl((void *)&_mh_execute_header, v115, OS_LOG_TYPE_INFO, v114, buf, v116);
            }
          }
        }
        return 0;
      case 'a':
        uint64_t v5 = qword_1004E63C0;
        BOOL v6 = optarg;
LABEL_64:
        return sub_100007768(v5, v6);
      case 'b':
        if (sub_100040DFC() == 6) {
          return 0;
        }
        int v7 = qword_1004E63C0;
        uint64_t v8 = optarg;
LABEL_69:
        return sub_100007610(v7, v8);
      case 'c':
        int v51 = qword_1004E63C0;
        long long v170 = 0u;
        long long v171 = 0u;
        long long v168 = 0u;
        long long v169 = 0u;
        long long v166 = 0u;
        long long v167 = 0u;
        long long v164 = 0u;
        long long v165 = 0u;
        long long v162 = 0u;
        long long v163 = 0u;
        long long v160 = 0u;
        long long v161 = 0u;
        long long v158 = 0u;
        long long v159 = 0u;
        memset(buf, 0, sizeof(buf));
        v140[0] = 0;
        off_1004E6408(qword_1004E63C0);
        CFMutableDictionaryRef v52 = fopen("/Users/doronk/test_temp/acl_data.txt", "w+");
        while (!read(v51, v140, 1uLL))
          ;
        if (v140[0] == 2)
        {
          read(v51, buf, 4uLL);
          size_t v53 = buf[2] | (buf[3] << 8);
          fprintf(__stderrp, "ACL data header 4 bytes=0x%x, 0x%x, 0x%x, 0x%x\n", buf[0], buf[1], buf[2], buf[3]);
          fprintf(__stderrp, "ACL data length=%d\n", v53);
          read(v51, buf, v53);
          if (v53)
          {
            for (uint64_t i = 0; i != v53; ++i)
            {
              fprintf(__stderrp, "Data %d = 0x%x\n", i, buf[i]);
              fprintf(v52, "%d", buf[i]);
            }
          }
        }
        else
        {
          fprintf(__stderrp, "No ACL data, first byte=%d\n", v140[0]);
        }
        v85 = v52;
        goto LABEL_141;
      case 'h':
        fprintf(__stderrp, "%s - ACI Specific Commands\n", *(const char **)v2);
        fwrite("-V    - Print ACI version information\n", 0x26uLL, 1uLL, __stderrp);
        fwrite("-W    - Download ACI init script internally or from /etc/bluetool/\n", 0x43uLL, 1uLL, __stderrp);
        fwrite("-w    - Download HCD file from /path/to/hcd/file.hcd\n", 0x35uLL, 1uLL, __stderrp);
        fwrite("-b    - Set the baud rate - Baud Rate (UART only)\n", 0x32uLL, 1uLL, __stderrp);
        fwrite("-B    - Set the baud rate using a predefined value (UART only)\n", 0x3FuLL, 1uLL, __stderrp);
        fwrite("-a    - Set BDADDR - 00:00:00:00:00:00\n", 0x27uLL, 1uLL, __stderrp);
        fwrite("-A    - Set BDADDR using devicetree\n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-n    - Set the local name - Local Name\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-p    - Routes sco over PCM\n", 0x1CuLL, 1uLL, __stderrp);
        fwrite("-t    - Routes sco over Transport (HCI)\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-c    - Get ACL data, up to 256 bytes\n", 0x26uLL, 1uLL, __stderrp);
        fwrite("-s    - Get SCO data to file\n", 0x1DuLL, 1uLL, __stderrp);
        fwrite("-S    - Set device for SCO over HCI, Set Event filter to accept any connection and change the bT address to 123456\n", 0x73uLL, 1uLL, __stderrp);
        fwrite("-o    - For ACI options: \n\t addr1- to change BT address to 123456, \n\t hcivoice- for voice over HCI (UART), \n\t pcmvoice- for voice over PCM include Trio L codec configuration script\n", 0xB5uLL, 1uLL, __stderrp);
        fwrite("-O    - Sleep delay after \"power on\", adapted to different ACI chipsets (BGA, FPGA, etc...)\n", 0x5CuLL, 1uLL, __stderrp);
        fwrite("-F    - Download FW RAM image HCD file from /etc/bluetool/\n", 0x3BuLL, 1uLL, __stderrp);
        fwrite("-U    - Get System Status \n", 0x1BuLL, 1uLL, __stderrp);
        fwrite("-R    - Set Rand Seed \n", 0x17uLL, 1uLL, __stderrp);
        fwrite("-Q    - Download MSF from ioreg\n", 0x20uLL, 1uLL, __stderrp);
        fwrite("-q    - Download MSF from /path/to/msf/msf.bin\n", 0x2FuLL, 1uLL, __stderrp);
        fwrite("-K    - Download power regulatory HCD file internally\n", 0x36uLL, 1uLL, __stderrp);
        fputc(10, __stderrp);
        return 0;
      case 'n':
        uint64_t v31 = qword_1004E63C0;
        uint64_t v32 = optarg;
LABEL_81:
        return sub_10000797C(v31, (uint64_t)v32);
      case 'o':
        return 0;
      case 'p':
        *(_DWORD *)kevent buf = 33519616;
        goto LABEL_133;
      case 'q':
        uint64_t v34 = optarg;
LABEL_86:
        sub_100007BF4(v34);
        return 0;
      case 'r':
        return sub_100014C84(1);
      case 's':
        int v55 = qword_1004E63C0;
        long long v162 = 0u;
        long long v163 = 0u;
        long long v160 = 0u;
        long long v161 = 0u;
        long long v158 = 0u;
        long long v159 = 0u;
        memset(buf, 0, sizeof(buf));
        v140[0] = 0;
        off_1004E6408(qword_1004E63C0);
        __streama = fopen("/Users/doronk/test_temp/sco_data.txt", "w");
        do
        {
          ssize_t v56 = read(v55, v140, 1uLL);
          usleep(0x3E8u);
        }
        while ((unint64_t)(v56 + 1) < 2);
        int v57 = 0;
        char v58 = 1;
        while (1)
        {
          if ((v58 & 1) == 0)
          {
            while ((unint64_t)(read(v55, v140, 1uLL) + 1) < 2)
              ;
          }
          fprintf(__stderrp, "header=0x%x\n", v140[0]);
          if (v140[0] == 3)
          {
            unsigned int v72 = 0;
            int v73 = 0;
            do
            {
              unsigned int v74 = v72;
              ssize_t v75 = read(v55, &buf[(unsigned __int16)v73], 1uLL);
              v73 += v75 & ~(v75 >> 63);
              unsigned int v72 = v74 + 1;
            }
            while ((unsigned __int16)v73 <= 2u && v74 < 0x752F);
            if (v74 <= 0x752E)
            {
              size_t v77 = buf[2];
              if (!buf[2]) {
                goto LABEL_130;
              }
              unsigned int v78 = 0;
              int v79 = 0;
              do
              {
                unsigned int v80 = v78;
                ssize_t v81 = read(v55, &buf[(unsigned __int16)v79], 1uLL);
                v79 += v81 & ~(v81 >> 63);
                unsigned int v78 = v80 + 1;
              }
              while (v77 > (unsigned __int16)v79 && v80 < 0x752F);
              if (v80 <= 0x752E)
              {
LABEL_130:
                fprintf(__stderrp, "count = %d, length=%d\n", (unsigned __int16)++v57, v77);
                fwrite(buf, 1uLL, v77, __streama);
LABEL_131:
                char v58 = 0;
                continue;
              }
            }
            return 1;
          }
          if (v140[0] != 4) {
            break;
          }
          unsigned int v59 = 0;
          int v60 = 0;
          do
          {
            unsigned int v61 = v59;
            ssize_t v62 = read(v55, &buf[(unsigned __int16)v60], 1uLL);
            v60 += v62 & ~(v62 >> 63);
            unsigned int v59 = v61 + 1;
          }
          while ((unsigned __int16)v60 <= 1u && v61 < 0x752F);
          if (v61 > 0x752E) {
            return 1;
          }
          fprintf(__stderrp, "Event opcode=0x%x, length=%d\n", buf[0], buf[1]);
          char v58 = 0;
          uint64_t v64 = buf[1];
          if (buf[1])
          {
            unsigned int v65 = 0;
            int v66 = 0;
            do
            {
              unsigned int v67 = v65;
              ssize_t v68 = read(v55, &buf[(unsigned __int16)v66], 1uLL);
              v66 += v68 & ~(v68 >> 63);
              unsigned int v65 = v67 + 1;
            }
            while (v64 > (unsigned __int16)v66 && v67 < 0x752F);
            if (v67 <= 0x752E)
            {
              uint64_t v70 = buf;
              do
              {
                int v71 = *v70++;
                fprintf(__stderrp, "R: 0x%02x\n", v71);
                --v64;
              }
              while (v64);
              goto LABEL_131;
            }
            return 1;
          }
        }
        fprintf(__stderrp, "No H4 data, first byte=%d, finish reading\n", v140[0]);
        v85 = __streama;
LABEL_141:
        fclose(v85);
        return 0;
      case 't':
        *(_DWORD *)kevent buf = 33519617;
LABEL_133:
        uint8_t buf[4] = -1;
        sub_100018AA8(65040, (uint64_t)buf, 5uLL, 0, 0, 0);
        return 0;
      case 'w':
        uint64_t v83 = qword_1004E63C0;
        uint64_t v84 = optarg;
        return sub_1000073B4(v83, v84);
      default:
        if (v4 == -1) {
          return 0;
        }
LABEL_4:
        fprintf(__stderrp, "Invalid option '%c'\n", v4);
        continue;
    }
  }
}

uint64_t sub_1000073B4(uint64_t a1, char *a2)
{
  memset(&v10, 0, sizeof(v10));
  int v4 = stat(a2, &v10);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DE1D0);
  }
  uint64_t v5 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)kevent buf = 67109378;
    *(_DWORD *)uint64_t v12 = v4;
    *(_WORD *)&v12[4] = 2080;
    *(void *)&v12[6] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "stat_result=%d file path=%s", buf, 0x12u);
  }
  if (v4)
  {
    perror("stat ");
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE210);
    }
    BOOL v6 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      int v7 = ctime(&v10.st_mtimespec.tv_sec);
      *(_DWORD *)kevent buf = 136315394;
      *(void *)uint64_t v12 = v7;
      *(_WORD *)&v12[8] = 2048;
      *(void *)&v12[10] = v10.st_size;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "File last changed:%s File size=%lld Bytes", buf, 0x16u);
    }
  }
  qword_1004E5FA0 = (uint64_t)fopen(a2, "r");
  if (qword_1004E5FA0)
  {
    sub_1000165AC();
    uint64_t v8 = sub_100009304(a1, sub_100009ADC);
    fclose((FILE *)qword_1004E5FA0);
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE250);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047CC4();
    }
    return 0xFFFFFFFFLL;
  }
  return v8;
}

uint64_t sub_100007610(int a1, char *__str)
{
  if (__str)
  {
    if (*__str == 36)
    {
      int v2 = __str + 1;
      int v3 = getenv(__str + 1);
      fprintf(__stderrp, "Overriding baud rate from environment variable: %s = %s\n", v2, v3);
      unint64_t v4 = strtoul(v3, 0, 0);
    }
    else
    {
      unint64_t v4 = strtoul(__str, 0, 0);
    }
  }
  else
  {
    unsigned int v5 = sub_100040B14();
    if (v5) {
      unint64_t v4 = v5;
    }
    else {
      unint64_t v4 = 2400000;
    }
  }
  __int16 v12 = 0;
  int v8 = 83834369;
  __int16 v9 = v4;
  char v10 = BYTE2(v4);
  char v11 = BYTE3(v4);
  uint64_t v6 = off_1004E63D8(qword_1004E63C0, &v8, 8);
  if (v6)
  {
    if ((v6 & 0x80000000) == 0) {
      *__error() = 5;
    }
  }
  else if ((sub_10000810C(v6, 0xFF36u) & 0x80000000) == 0)
  {
    off_1004E63F8(qword_1004E63C0, v4);
    return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_100007768(uint64_t a1, const char *a2)
{
  memset(v13, 0, 6);
  if (!a2)
  {
    WORD2(v14) = 0;
    LODWORD(v14) = 0;
    if (sub_1000410E4((unsigned __int8 *)&v14))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DDA50);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100047D94();
      }
      return 0xFFFFFFFFLL;
    }
    v5.i32[0] = *(_DWORD *)((char *)&v14 + 2);
    int16x8_t v8 = (int16x8_t)vmovl_u8(v5);
    *(int16x4_t *)v8.i8 = vrev64_s16(*(int16x4_t *)v8.i8);
    v13[0] = vmovn_s16(v8).u32[0];
    LOBYTE(v13[1]) = BYTE1(v14);
    BYTE1(v13[1]) = v14;
LABEL_12:
    LODWORD(v9) = 117179905;
    v6.i32[0] = *(_DWORD *)((char *)v13 + 2);
    int16x8_t v10 = (int16x8_t)vmovl_u8(v6);
    *(int16x4_t *)v10.i8 = vrev64_s16(*(int16x4_t *)v10.i8);
    HIDWORD(v9) = vmovn_s16(v10).u32[0];
    uint64_t v14 = v9;
    char v15 = BYTE1(v13[0]);
    char v16 = v13[0];
    uint64_t v11 = off_1004E63D8(qword_1004E63C0, &v14, 10);
    if (!v11) {
      return sub_10000810C(v11, 0xFC06u);
    }
    int v12 = v11;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DDA90);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_100047D2C();
      if (v12 < 0) {
        return 0xFFFFFFFFLL;
      }
    }
    else if (v12 < 0)
    {
      return 0xFFFFFFFFLL;
    }
    *__error() = 5;
    return 0xFFFFFFFFLL;
  }
  int v2 = a2;
  if (*a2 == 36)
  {
    int v3 = a2 + 1;
    unint64_t v4 = getenv(a2 + 1);
    fprintf(__stderrp, "Overriding BDADDR from environment variable: %s = %s\n", v3, v4);
    int v2 = v4;
  }
  uint64_t result = sub_100008980(v2, (uint64_t)v13);
  if (result != -1) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10000797C(uint64_t a1, uint64_t a2)
{
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  *(_OWORD *)__s = 0u;
  long long v21 = 0u;
  if (a2)
  {
    int v2 = (char *)a2;
    if (*(unsigned char *)a2 == 36)
    {
      int v2 = getenv((const char *)(a2 + 1));
      fprintf(__stderrp, "Overriding hostname from environment variable: %s = %s\n");
    }
    else
    {
      fprintf(__stderrp, "Using passed hostname: %s\n");
    }
  }
  else
  {
    long long v34 = 0uLL;
    long long v35 = 0uLL;
    long long v32 = 0uLL;
    long long v33 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v28 = 0uLL;
    long long v29 = 0uLL;
    long long v26 = 0uLL;
    long long v27 = 0uLL;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    *(_OWORD *)__s = 0uLL;
    long long v21 = 0uLL;
    j__gethostname(__s, 0x100uLL);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DDB10);
    }
    int v2 = __s;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
      sub_100047E3C();
    }
  }
  int v3 = strlen(v2);
  if (v3)
  {
    memset(v19, 0, sizeof(v19));
    int v18 = -133426431;
    unsigned int v4 = v3 - 1;
    if (v3 >= 1)
    {
      if (v4 >= 0xF7) {
        unsigned int v4 = 247;
      }
      uint64_t v5 = v4 + 1;
      uint8x8_t v6 = v19;
      do
      {
        char v7 = *v2++;
        *v6++ = v7;
        --v5;
      }
      while (v5);
    }
    uint64_t v8 = off_1004E63D8(qword_1004E63C0, &v18, 252);
    if (v8 != -1) {
      return sub_10000810C(v8, 0xC13u);
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DDB50);
    }
    int16x8_t v10 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047DC8(v10, v11, v12, v13, v14, v15, v16, v17);
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_100007BF4(const char *a1)
{
  int v2 = (const char *)sub_100043B94();
  if (!v2)
  {
    int v3 = "UNKNOWN";
    goto LABEL_9;
  }
  int v3 = v2;
  if (strcmp(v2, "APPLE_M1"))
  {
    if (!strcmp(v3, "APPLE_M2") || !strcmp(v3, "APPLE_M2_5"))
    {
      sub_10000A354(a1, 7);
      sub_10000A354(a1, 6);
      return;
    }
LABEL_9:
    fprintf(__stderrp, "No MSF supported for chip %s\n", v3);
    return;
  }
  uint64_t v16 = 0;
  unsigned __int16 v15 = 0;
  uint64_t v14 = 0;
  memset(v37, 0, 256);
  if (!a1)
  {
    if (sub_1000417C4((UInt8 **)&v16, &v15)) {
      goto LABEL_12;
    }
LABEL_14:
    if (v15 % 0xF0u) {
      unsigned int v7 = v15 / 0xF0u + 1;
    }
    else {
      unsigned int v7 = v15 / 0xF0u;
    }
    fprintf(__stderrp, "MSF: size %d. numberOfChunks %d. chunkSize %d.\n", v15, v7, 240);
    if (v7)
    {
      __int16 v8 = 0;
      int v9 = 0;
      unsigned __int16 v10 = v15;
      do
      {
        long long v35 = 0u;
        long long v36 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        long long v27 = 0u;
        long long v28 = 0u;
        long long v25 = 0u;
        long long v26 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        long long v22 = 0u;
        if (v10 >= 0xF0u) {
          int v11 = 240;
        }
        else {
          int v11 = v10;
        }
        __int16 v19 = v8;
        char v20 = v11;
        BOOL v21 = v10 < 0xF1u;
        __memcpy_chk();
        sub_100018AA8(64791, (uint64_t)&v19, (v11 + 4), (uint64_t)v37, &v14, 14);
        int v12 = v37[4];
        if (v37[4])
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DE890);
          }
          uint64_t v13 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)kevent buf = 67109120;
            int v18 = v12;
            _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "MSF Error in Cal data. reason %d", buf, 8u);
          }
        }
        ++v9;
        unsigned __int16 v10 = v15 - 240;
        v15 -= 240;
        v8 += 240;
      }
      while (v9 < v7);
    }
    unsigned int v4 = __stderrp;
    uint64_t v5 = "MSF: Finished sending MSF file to device\n";
    size_t v6 = 41;
    goto LABEL_29;
  }
  if (!sub_10000A138(a1, &v16, &v15)) {
    goto LABEL_14;
  }
LABEL_12:
  unsigned int v4 = __stderrp;
  uint64_t v5 = "No MSF cal data in ioreg.\n";
  size_t v6 = 26;
LABEL_29:
  fwrite(v5, v6, 1uLL, v4);
  if (v16) {
    free(v16);
  }
}

uint64_t sub_100007F68()
{
  return 0;
}

uint64_t sub_100007F70()
{
  __int16 v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v12 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v7 = 0u;
  memset(v6, 0, sizeof(v6));
  unint64_t v3 = 0;
  off_1004E63E8(qword_1004E63C0, &unk_10004C660, 3);
  do
    off_1004E63F0(qword_1004E63C0, v6, 258, &v3);
  while (LOBYTE(v6[0]) != 14);
  if (v3 < 0x3D) {
    return 0;
  }
  uint64_t v0 = DWORD1(v7);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DD950);
  }
  int v1 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)kevent buf = 67109120;
    int v5 = v0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "MAC bin id: 0x%08x.\n", buf, 8u);
  }
  return v0;
}

void sub_1000080D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000810C(uint64_t a1, unsigned int a2)
{
  unint64_t v7 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  __int16 v38 = 0;
  off_1004E63F0(qword_1004E63C0, &v22, 258, &v7);
  if (v7 < 4)
  {
LABEL_2:
    *__error() = 5;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD990);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047EB0();
    }
    return 0xFFFFFFFFLL;
  }
  while (v22 != 14)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DD9D0);
    }
    unint64_t v3 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)kevent buf = 67109120;
      int v9 = v22;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "EVNT: Previous command did not complete yet: %02X", buf, 8u);
    }
    __int16 v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v22 = 0u;
    off_1004E63F0(qword_1004E63C0, &v22, 258, &v7);
    if (v7 < 4) {
      goto LABEL_2;
    }
  }
  if (BYTE2(v22) != 1
    || BYTE3(v22) != a2
    || (BYTE4(v22) == a2 >> 8 ? (BOOL v4 = BYTE5(v22) == 0) : (BOOL v4 = 0), !v4))
  {
    *__error() = 94;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DDA10);
    }
    int v5 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)kevent buf = 67110656;
      int v9 = v22;
      __int16 v10 = 1024;
      int v11 = BYTE1(v22);
      __int16 v12 = 1024;
      int v13 = BYTE2(v22);
      __int16 v14 = 1024;
      int v15 = BYTE3(v22);
      __int16 v16 = 1024;
      int v17 = BYTE4(v22);
      __int16 v18 = 1024;
      int v19 = BYTE5(v22);
      __int16 v20 = 1024;
      unsigned int v21 = a2;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", buf, 0x2Cu);
    }
    return 0xFFFFFFFFLL;
  }
  return 0;
}

void sub_100008434(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100008468(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000849C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000084D4()
{
  __int16 v26 = 0;
  v25[1] = 0;
  uint64_t v8 = 0;
  v25[0] = 16654081;
  if (off_1004E63D8(qword_1004E63C0, v25, 4) == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE5D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047C90();
    }
    return 255;
  }
  __int16 v24 = 0;
  memset(v23, 0, sizeof(v23));
  do
    off_1004E63F0(qword_1004E63C0, v23, 258, &v8);
  while (LOBYTE(v23[0]) != 14);
  v0.i32[0] = *(_DWORD *)((char *)v23 + 2);
  if (vmovn_s16((int16x8_t)vmovl_u8(v0)).u32[0] != 16654081)
  {
    *__error() = 94;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE610);
    }
    unint64_t v3 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)kevent buf = 67110656;
      int v10 = BYTE2(v23[0]);
      __int16 v11 = 1024;
      int v12 = BYTE3(v23[0]);
      __int16 v13 = 1024;
      int v14 = BYTE4(v23[0]);
      __int16 v15 = 1024;
      int v16 = BYTE5(v23[0]);
      __int16 v17 = 1024;
      int v18 = BYTE6(v23[0]);
      __int16 v19 = 1024;
      int v20 = BYTE7(v23[0]);
      __int16 v21 = 1024;
      int v22 = 65055;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", buf, 0x2Cu);
    }
    return 255;
  }
  dword_1004E40D0 = BYTE6(v23[0]);
  dword_1004E40D4 = BYTE7(v23[0]);
  if (BYTE6(v23[0]) == 8 && BYTE7(v23[0]) == 32)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE650);
    }
    int v1 = qword_1004E6428;
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO)) {
      goto LABEL_33;
    }
    *(_DWORD *)kevent buf = 67109888;
    int v10 = BYTE6(v23[0]);
    __int16 v11 = 1024;
    int v12 = BYTE7(v23[0]);
    __int16 v13 = 1024;
    int v14 = BYTE8(v23[0]);
    __int16 v15 = 1024;
    int v16 = BYTE9(v23[0]);
    int v2 = "Default ACI BGA SW version: %d.%d, chip revision: %d, chip mode=%d";
LABEL_32:
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, v2, buf, 0x1Au);
LABEL_33:
    uint64_t v6 = 8;
    goto LABEL_34;
  }
  if (BYTE6(v23[0]) <= 1u && (BYTE6(v23[0]) != 1 || BYTE7(v23[0]) < 0xBu))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE6D0);
    }
    int v1 = qword_1004E6428;
    if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO)) {
      goto LABEL_33;
    }
    *(_DWORD *)kevent buf = 67109888;
    int v10 = BYTE6(v23[0]);
    __int16 v11 = 1024;
    int v12 = BYTE7(v23[0]);
    __int16 v13 = 1024;
    int v14 = BYTE8(v23[0]);
    __int16 v15 = 1024;
    int v16 = BYTE9(v23[0]);
    int v2 = "SW version: %d.%d, chip revision: %d, chip mode=%d";
    goto LABEL_32;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DE690);
  }
  int v5 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)kevent buf = 67110144;
    int v10 = BYTE6(v23[0]);
    __int16 v11 = 1024;
    int v12 = BYTE7(v23[0]);
    __int16 v13 = 1024;
    int v14 = BYTE8(v23[0]);
    __int16 v15 = 1024;
    int v16 = BYTE9(v23[0]);
    __int16 v17 = 1024;
    int v18 = BYTE10(v23[0]);
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "SW version: %d.%d.%d, chip revision: %d, chip mode=%d", buf, 0x20u);
  }
  dword_1004E5FA8 = BYTE8(v23[0]);
  uint64_t v6 = 9;
LABEL_34:
  int v7 = *(unsigned __int8 *)((unint64_t)v23 | v6);
  if (v7 == 255) {
    return 0;
  }
  if (v7 != 32)
  {
    if (v7 == 15) {
      return 2;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_100008980(const char *a1, uint64_t a2)
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DDAD0);
  }
  BOOL v4 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
  {
    sub_100047EE4(a1, v4);
    if (!a1) {
      return 0xFFFFFFFFLL;
    }
  }
  else if (!a1)
  {
    return 0xFFFFFFFFLL;
  }
  if (strlen(a1) < 0x11) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v6 = (unsigned __int8 *)(a1 + 1);
  for (uint64_t i = 5; i != -1; --i)
  {
    int v8 = *(v6 - 1);
    unsigned int v9 = v8 - 48;
    unsigned int v10 = v8 - 97;
    if ((v8 - 65) >= 6) {
      char v11 = 0;
    }
    else {
      char v11 = v8 - 55;
    }
    char v12 = v8 - 87;
    if (v10 > 5) {
      char v12 = v11;
    }
    if (v9 < 0xA) {
      char v12 = v9;
    }
    char v13 = 16 * v12;
    *(unsigned char *)(a2 + i) = v13;
    int v15 = *v6;
    v6 += 3;
    char v14 = v15;
    unsigned int v16 = v15 - 48;
    unsigned int v17 = v15 - 97;
    char v18 = v15 - 55;
    if ((v15 - 65) >= 6) {
      char v19 = 0;
    }
    else {
      char v19 = v18;
    }
    char v20 = v14 - 87;
    if (v17 > 5) {
      char v20 = v19;
    }
    if (v16 < 0xA) {
      char v20 = v16;
    }
    *(unsigned char *)(a2 + i) = v20 | v13;
  }
  return 0;
}

void sub_100008AAC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100008AE0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100008B14(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100008B48(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100008B7C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100008BB0()
{
  __int16 v8 = 0;
  memset(v7, 0, sizeof(v7));
  uint64_t v2 = 0;
  off_1004E63E8(qword_1004E63C0, &unk_10004CA5B, 3);
  do
    off_1004E63F0(qword_1004E63C0, v7, 258, &v2);
  while (LOBYTE(v7[0]) != 14);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DDB90);
  }
  uint8x8_t v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)kevent buf = 67109376;
    int v4 = BYTE13(v7[0]);
    __int16 v5 = 1024;
    int v6 = BYTE12(v7[0]);
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "LMP Subversion: 0x%02X%02x", buf, 0xEu);
  }
  return WORD6(v7[0]);
}

void sub_100008D0C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_100008D40(char *a1)
{
  int v1 = a1;
  if (strchr(a1, 58) && strchr(v1, 44))
  {
    int v2 = sub_100008BB0();
    unint64_t v3 = strtok(v1, ":,");
    if (v3)
    {
      __endptr = 0;
      while (1)
      {
        uint64_t v4 = strtol(v3, &__endptr, 0);
        __int16 v5 = strtok(0, ":,");
        int v1 = v5;
        if (v4 == v2) {
          break;
        }
        if (!v5) {
          return v1;
        }
        unint64_t v3 = strtok(0, ":,");
        if (!v3) {
          return 0;
        }
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DDBD0);
      }
      int v7 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)kevent buf = 136315138;
        unsigned int v10 = v1;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Using HCD File: %s", buf, 0xCu);
      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_100008EA8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100008EDC(int a1, char *__str)
{
  int v11 = 0;
  uint64_t v10 = 0;
  uint64_t result = (uint64_t)strtok(__str, ",");
  if (result)
  {
    uint64_t v3 = 0;
    int v6 = 0;
    do
    {
      *((unsigned char *)&v10 + v3) = strtol((const char *)result, &v6, 0);
      uint64_t result = (uint64_t)strtok(0, ",");
      ++v3;
    }
    while (result);
    if (v3 < 0xA) {
      return 0;
    }
    int v7 = 217851649;
    uint64_t v8 = v10;
    int v9 = v11;
    uint64_t v4 = off_1004E63D8(qword_1004E63C0, &v7, 16);
    if (v4)
    {
      int v5 = v4;
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DDC10);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
      {
        sub_100047F6C();
        if (v5 < 0) {
          return 0xFFFFFFFFLL;
        }
      }
      else if (v5 < 0)
      {
        return 0xFFFFFFFFLL;
      }
      *__error() = 5;
      return 0xFFFFFFFFLL;
    }
    return sub_10000810C(v4, 0xFC27u);
  }
  return result;
}

void sub_100009054(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009088(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000090BC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000090F0(const char *a1)
{
  memset(&v7, 0, sizeof(v7));
  uint64_t v2 = stat(a1, &v7);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DDDD0);
  }
  uint64_t v3 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)kevent buf = 67109378;
    *(_DWORD *)int v9 = v2;
    *(_WORD *)&v9[4] = 2080;
    *(void *)&v9[6] = a1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "stat_result=%d file path=%s", buf, 0x12u);
  }
  if (!v2)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DDE10);
    }
    uint64_t v4 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      int v5 = ctime(&v7.st_mtimespec.tv_sec);
      *(_DWORD *)kevent buf = 136315394;
      *(void *)int v9 = v5;
      *(_WORD *)&v9[8] = 2048;
      *(void *)&v9[10] = v7.st_size;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "File last changed:%s File size=%lld Bytes", buf, 0x16u);
    }
  }
  return v2;
}

void sub_10000929C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000092D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100009304(uint64_t a1, uint64_t (*a2)(unsigned char *))
{
  memset(v12, 0, sizeof(v12));
  if (sub_100043B94())
  {
    uint64_t result = a2(v12);
    if ((int)result < 1) {
      return result;
    }
    while (v12[0] == 1)
    {
      uint64_t v4 = off_1004E63D8(qword_1004E63C0, v12, result);
      if (v4 == -1)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DDE90);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100047FD4();
        }
        return 0xFFFFFFFFLL;
      }
      if (*(unsigned __int16 *)&v12[1] == 65411)
      {
        usleep(0xBB8u);
      }
      else if ((sub_10000810C(v4, *(unsigned __int16 *)&v12[1]) & 0x80000000) != 0)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DDED0);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048008();
        }
        return 0xFFFFFFFFLL;
      }
      uint64_t result = a2(v12);
      if ((int)result <= 0) {
        return result;
      }
    }
    *__error() = 94;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DDE50);
    }
    int v5 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004803C((uint64_t)v12, v5, v6, v7, v8, v9, v10, v11);
    }
  }
  else
  {
    *__error() = 94;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_10000952C(_DWORD *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = sub_100013CD4(4, a1);
  uint64_t v3 = v2;
  if (v2)
  {
    if (v2 != 4)
    {
      if ((v2 & 0x80000000) == 0) {
        *__error() = 94;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DDF10);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_1000480AC();
      }
      return 0xFFFFFFFFLL;
    }
    if (*(unsigned char *)a1 == 1)
    {
      unsigned int v4 = 4;
    }
    else
    {
      *(_DWORD *)((char *)a1 + 1) = *a1;
      *(unsigned char *)a1 = 1;
      unsigned int v4 = 5;
    }
    uint64_t v3 = *((unsigned __int8 *)a1 + 3) + 4;
    int v5 = v3 - v4;
    int v6 = sub_100013CD4(v3 - v4, (char *)a1 + v4);
    if (v6 != v5)
    {
      if ((v6 & 0x80000000) == 0) {
        *__error() = 94;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DDF50);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048114();
      }
      return 0xFFFFFFFFLL;
    }
  }
  return v3;
}

void sub_100009698(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000096CC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009700(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009734(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009768(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000979C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000097D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009804(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009838(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000986C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000098A0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000098D4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009908(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000993C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009970(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000099A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000099D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009A0C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009A40(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009A74(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009AA8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100009ADC(unsigned __int8 *a1)
{
  fread(a1, 1uLL, 4uLL, (FILE *)qword_1004E5FA0);
  uint64_t v2 = (FILE *)qword_1004E5FA0;
  if (ferror((FILE *)qword_1004E5FA0))
  {
    uint64_t v8 = "Error reading command header file";
  }
  else
  {
    if (feof(v2)) {
      return 0;
    }
    size_t v4 = a1[3];
    size_t v5 = fread(a1 + 4, 1uLL, v4, (FILE *)qword_1004E5FA0);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DE290);
    }
    int v6 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 136315138;
      uint64_t v10 = "aci_download_config_fd_cb";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "we are going to read the entire packet within %s", (uint8_t *)&v9, 0xCu);
    }
    if (v5 == v4) {
      return (v4 + 4);
    }
    uint64_t v7 = (FILE *)qword_1004E5FA0;
    if (!ferror((FILE *)qword_1004E5FA0))
    {
      if (feof(v7)) {
        return 0;
      }
      return (v4 + 4);
    }
    uint64_t v8 = "Error reading command payload from file";
  }
  perror(v8);
  return 0xFFFFFFFFLL;
}

void sub_100009C58(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009C8C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009CC0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009CF4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009D28(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009D5C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009D90(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009DC4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009DF8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009E2C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009E60(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009E94(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009EC8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009EFC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009F30(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009F64(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009F98(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100009FCC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A000(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A034(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A068(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A09C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A0D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A104(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000A138(const char *a1, void **a2, _WORD *a3)
{
  fprintf(__stderrp, "read_msf_file: MSF File %s.\n", a1);
  memset(&v13, 0, sizeof(v13));
  int v6 = stat(a1, &v13);
  fprintf(__stderrp, "read_msf_file: stat_result=%d file path=%s\n", v6, a1);
  if (v6)
  {
    perror("stat ");
  }
  else
  {
    uint64_t v7 = __stderrp;
    uint64_t v8 = ctime(&v13.st_mtimespec.tv_sec);
    fprintf(v7, "read_msf_file: MSF File last changed:%s File size=%lld Bytes\n", v8, v13.st_size);
  }
  size_t st_size = v13.st_size;
  *a3 = v13.st_size;
  *a2 = malloc_type_malloc(st_size, 0x4B41AF32uLL);
  fwrite("read_msf_file: Open MSF File\n", 0x1DuLL, 1uLL, __stderrp);
  qword_1004E5FA0 = (uint64_t)fopen(a1, "r");
  if (!qword_1004E5FA0)
  {
    fprintf(__stderrp, "Unable to open MSF, file path=%s\n", a1);
    return 0xFFFFFFFFLL;
  }
  fwrite("read_msf_file: Read MSF File to buffer\n", 0x27uLL, 1uLL, __stderrp);
  size_t v10 = fread(*a2, 1uLL, v13.st_size, (FILE *)qword_1004E5FA0);
  fprintf(__stderrp, "read_msf_file: Read MSF File to buffer. read_result %zu.\n", v10);
  uint64_t v11 = (FILE *)qword_1004E5FA0;
  if (ferror((FILE *)qword_1004E5FA0))
  {
    perror("Error reading msf file");
    return 0xFFFFFFFFLL;
  }
  if (feof(v11))
  {
    fprintf(__stderrp, "MSF EOF found, file path=%s\n", a1);
  }
  else
  {
    fwrite("read_msf_file: Close MSF File\n", 0x1EuLL, 1uLL, __stderrp);
    fclose((FILE *)qword_1004E5FA0);
  }
  return 0;
}

void sub_10000A320(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A354(const char *a1, int a2)
{
  int v15 = 0;
  unsigned __int16 v14 = 0;
  uint64_t v13 = 0;
  memset(v34, 0, 256);
  if (a1) {
    int v3 = sub_10000A138(a1, &v15, &v14);
  }
  else {
    int v3 = sub_100041914((UInt8 **)&v15, &v14, a2);
  }
  int v4 = v3;
  fprintf(__stderrp, "MSF-M2: type %d. file 0x%x. size %d.\n", a2, v15, v14);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DE8D0);
  }
  size_t v5 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)kevent buf = 67109634;
    *(_DWORD *)&uint8_t buf[4] = v14;
    *(_WORD *)&buf[8] = 1040;
    *(_DWORD *)&buf[10] = v14;
    *(_WORD *)&buf[14] = 2096;
    *(void *)&uint8_t buf[16] = v15;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Cal data (Size %d bytes): %.*P", buf, 0x18u);
  }
  if (v4)
  {
    fprintf(__stderrp, "No MSF-M2 type %d cal data in ioreg.\n");
    goto LABEL_24;
  }
  unsigned __int16 v6 = v14;
  unsigned int v7 = v14 / 0xF0u;
  if (v14 % 0xF0u)
  {
    ++v7;
    goto LABEL_13;
  }
  if (v14 >= 0xF0u)
  {
LABEL_13:
    __int16 v8 = 0;
    int v9 = 0;
    do
    {
      long long v32 = 0u;
      long long v33 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v21 = 0u;
      memset(&buf[7], 0, 32);
      if (v6 >= 0xF0u) {
        int v10 = 240;
      }
      else {
        int v10 = v6;
      }
      buf[0] = a2;
      *(_WORD *)&buf[1] = 0;
      *(_WORD *)&buf[3] = v8;
      buf[5] = v10;
      buf[6] = v6 < 0xF1u;
      __memcpy_chk();
      sub_100018AA8(64793, (uint64_t)buf, (v10 + 7), (uint64_t)v34, &v13, 14);
      int v11 = v34[4];
      if (v34[4])
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE910);
        }
        char v12 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)unsigned int v16 = 67109376;
          int v17 = a2;
          __int16 v18 = 1024;
          int v19 = v11;
          _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "MSF-M2 type %d Error in Cal data. reason %d", v16, 0xEu);
        }
      }
      ++v9;
      unsigned __int16 v6 = v14 - 240;
      v14 -= 240;
      v8 += 240;
    }
    while (v7 > v9);
  }
  fprintf(__stderrp, "MSF-M2: Finished sending MSF type %d file to device\n");
LABEL_24:
  if (v15) {
    free(v15);
  }
}

void sub_10000A6A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000A6D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000A718(int a1, char **a2, char **a3)
{
  optind = 1;
  while (2)
  {
    uint64_t v6 = getopt(a1, a2, "hw:Aa:Nn:Bb:s:ptgm:PeWvr:lQR:xuLq");
    switch((int)v6)
    {
      case 'A':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE970);
        }
        long long v25 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "ready to write BDADDR using devicetree from %s", (uint8_t *)&buf, 0xCu);
        }
        int v26 = qword_1004E63C0;
        long long v27 = 0;
        return sub_10000D1EC(v26, v27);
      case 'B':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE9B0);
        }
        long long v28 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "ready to set baudrate using a predefined value from %s", (uint8_t *)&buf, 0xCu);
        }
        int v29 = qword_1004E63C0;
        long long v30 = 0;
        return sub_10000D4E0(v29, v30);
      case 'C':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'M':
      case 'O':
      case 'S':
      case 'T':
      case 'U':
      case 'V':
      case 'X':
      case 'Y':
      case 'Z':
      case '[':
      case '\\':
      case ']':
      case '^':
      case '_':
      case 'c':
      case 'd':
      case 'f':
      case 'i':
      case 'j':
      case 'k':
      case 'o':
        goto LABEL_4;
      case 'L':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEB90);
        }
        long long v31 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "ready to download Low power mode FW from %s", (uint8_t *)&buf, 0xCu);
        }
        int v32 = qword_1004E63C0;
        long long v33 = (char *)sub_1000144F8();
        if (v33)
        {
          long long v34 = v33;
          long long v35 = sub_100010E0C(1);
          if (v35)
          {
            long long v36 = v35;
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF1B0);
            }
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_1000481E4();
            }
          }
          else
          {
            long long v36 = v34;
          }
          goto LABEL_196;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF190);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_1000481B0();
        }
        return 0xFFFFFFFFLL;
      case 'N':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEA50);
        }
        long long v37 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "ready to set local name same as host name from %s", (uint8_t *)&buf, 0xCu);
        }
        uint64_t v15 = qword_1004E63C0;
        unsigned int v16 = 0;
        return sub_10000D750(v15, (uint64_t)v16);
      case 'P':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEA90);
        }
        __int16 v38 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "ready to configure I2S PCM and GPIO pins from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(v137) = 0;
        LODWORD(v137) = 0;
        *(void *)char v134 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        int v39 = (uint64_t *)&v137;
        int v40 = (long long *)v134;
        __int16 v41 = -86;
        goto LABEL_137;
      case 'Q':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEBD0);
        }
        int v42 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "ready to load calibration data from %s", (uint8_t *)&buf, 0xCu);
        }
        int v20 = 0;
        goto LABEL_82;
      case 'R':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEBF0);
        }
        unsigned int v7 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "ready to run RSSI sweep from %s", (uint8_t *)&buf, 0xCu);
        }
        __int16 v8 = optarg;
        uint64_t v143 = 0;
        v141[4] = 0;
        *(_DWORD *)long long v141 = 921601;
        uint64_t v133 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        int v10 = [+[NSString stringWithUTF8String:v8] componentsSeparatedByString:@", "];
        if ([(NSArray *)v10 count] >= 5)
        {
          int v11 = "RSSI Sweep requires 4 arguments -- iterations, F_start F_stop Gain";
          goto LABEL_192;
        }
        long long v139 = 0u;
        long long v140 = 0u;
        long long v137 = 0u;
        long long v138 = 0u;
        id v73 = [(NSArray *)v10 countByEnumeratingWithState:&v137 objects:v134 count:16];
        if (v73)
        {
          int v74 = 0;
          uint64_t v75 = *(void *)v138;
          while (1)
          {
            uint64_t v76 = 0;
            uint64_t v77 = v74;
            do
            {
              if (*(void *)v138 != v75) {
                objc_enumerationMutation(v10);
              }
              unsigned int v78 = [*(id *)(*((void *)&v137 + 1) + 8 * (void)v76) intValue];
              if (v78 >= 0x10000)
              {
                int v11 = "Parameter out of range";
LABEL_192:
                puts(v11);
LABEL_193:
                uint64_t v24 = 0xFFFFFFFFLL;
                goto LABEL_194;
              }
              int v74 = v77 + 1;
              *((_WORD *)&v143 + v77) = v78;
              uint64_t v76 = (char *)v76 + 1;
              ++v77;
            }
            while (v73 != v76);
            id v73 = [(NSArray *)v10 countByEnumeratingWithState:&v137 objects:v134 count:16];
            if (!v73)
            {
              int v79 = (unsigned __int16)v143;
              LODWORD(v73) = WORD1(v143);
              int v80 = WORD2(v143);
              int v81 = HIWORD(v143);
              goto LABEL_209;
            }
          }
        }
        int v81 = 0;
        int v80 = 0;
        int v79 = 0;
LABEL_209:
        fprintf(__stderrp, "RSSI Sweep Results:\n# Iteration: %d\nStart Frequency: %d MHz \nStop Frequency: %d MHz \nGain: %d\n", v79, v73, v80, v81);
        *(_WORD *)&v141[1] = v79;
        *(_WORD *)&v141[5] = (_WORD)v73;
        *(_WORD *)&v141[7] = v80;
        char v142 = v81;
        sub_100018AA8(64767, (uint64_t)v141, 0xAuLL, (uint64_t)&buf, &v133, 14);
        if (BYTE3(buf))
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF050);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_10004824C();
          }
          printf("RSSI Sweep failed! Error code %02X", BYTE3(buf));
          goto LABEL_193;
        }
        if (v80 - (int)v73 >= 0)
        {
          uint64_t v126 = (v80 - v73 + 8) - 7;
          uint64_t v127 = (char *)&buf + 7;
          do
          {
            unsigned __int8 v128 = *v127++;
            fprintf(__stderrp, "%d MHz: %d dBm \n", v73, v128 | 0xFFFFFF00);
            LODWORD(v73) = v73 + 1;
            --v126;
          }
          while (v126);
        }
        fputc(10, __stderrp);
        uint64_t v24 = 0;
LABEL_194:
        return v24;
      case 'W':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEB50);
        }
        int v43 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "ready to download default HCD file from %s", (uint8_t *)&buf, 0xCu);
        }
        int v32 = qword_1004E63C0;
        v44 = sub_100010E0C(0);
        if (v44)
        {
          long long v36 = v44;
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF090);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_100048148();
          }
LABEL_196:
          int v65 = v32;
          int v66 = v36;
          return sub_10000DE34(v65, v66);
        }
        else
        {
          if (sub_1000142B8()) {
            sub_1000165AC();
          }
          return sub_10000F130(v32, (uint64_t (*)(_OWORD *))sub_100011188);
        }
      case 'a':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE950);
        }
        uint64_t v45 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "ready to write all zero BDADDR from %s", (uint8_t *)&buf, 0xCu);
        }
        int v26 = qword_1004E63C0;
        long long v27 = optarg;
        return sub_10000D1EC(v26, v27);
      case 'b':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE990);
        }
        unsigned int v46 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "ready to set baudrate from %s", (uint8_t *)&buf, 0xCu);
        }
        int v29 = qword_1004E63C0;
        long long v30 = optarg;
        return sub_10000D4E0(v29, v30);
      case 'e':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE9D0);
        }
        char v12 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "ready to read power counter from %s", (uint8_t *)&buf, 0xCu);
        }
        *(_WORD *)long long v141 = 1008;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        *(void *)char v134 = 0;
        sub_100018C88((uint64_t)v141, 2uLL, (uint64_t)&buf, v134);
        if (*(void *)v134 == 15 && (unsigned __int16)buf == 240 && BYTE2(buf) == 3)
        {
          int v88 = 5 * *(_DWORD *)((char *)&buf + 3);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF1F0);
          }
          int v89 = 2 * v88;
          uint64_t v90 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            LODWORD(v137) = 67109120;
            DWORD1(v137) = v89;
            _os_log_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_DEFAULT, "power=%u", (uint8_t *)&v137, 8u);
          }
          if (a3)
          {
            uint64_t v91 = (char *)malloc_type_calloc(0x40uLL, 1uLL, 0x100004077774924uLL);
            *a3 = v91;
            if (v91) {
              __sprintf_chk(v91, 0, 0x40uLL, "power=%u", v89);
            }
          }
          return 0;
        }
        *__error() = -94;
        return 0xFFFFFFFFLL;
      case 'g':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DE9F0);
        }
        v47 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "ready to set I2S GPIO lines from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE2(v137) = 0;
        LOWORD(v137) = 2307;
        v141[2] = 0;
        *(_WORD *)long long v141 = 2308;
        strcpy((char *)&v143, "\a\t");
        *(void *)char v134 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        sub_100018AA8(64537, (uint64_t)&v137, 3uLL, (uint64_t)&buf, v134, 14);
        sub_100018AA8(64537, (uint64_t)v141, 3uLL, (uint64_t)&buf, v134, 14);
        int v39 = &v143;
        int v40 = (long long *)v134;
        __int16 v41 = -999;
        unint64_t v48 = 3;
        goto LABEL_138;
      case 'h':
        fprintf(__stderrp, "%s - Broadcom Specific Commands\n", *a2);
        fwrite("-w    - Download HCD configuration file /path/to/hcd/file.hcd\n", 0x3EuLL, 1uLL, __stderrp);
        fwrite("-W    - Download default HCD \n", 0x1EuLL, 1uLL, __stderrp);
        fwrite("-L    - Download Low power mode FW \n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-v    - prints the default hcd file loaded \n", 0x2CuLL, 1uLL, __stderrp);
        fwrite("-a    - Set BDADDR - 00:00:00:00:00:00\n", 0x27uLL, 1uLL, __stderrp);
        fwrite("-A    - Set BDADDR using devicetree\n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-b    - Set the baud rate - Baud Rate\n", 0x26uLL, 1uLL, __stderrp);
        fwrite("-B    - Set the baud rate using a predefined value\n", 0x33uLL, 1uLL, __stderrp);
        fwrite("-P    - Configure I2S PCM and GPIO pins (inactive function/mode)\n", 0x41uLL, 1uLL, __stderrp);
        fwrite("-g    - Setup the I2S GPIO lines\n", 0x21uLL, 1uLL, __stderrp);
        fwrite("-p    - Routes sco over PCM\n", 0x1CuLL, 1uLL, __stderrp);
        fwrite("-t    - Routes sco over Transport (HCI)\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-n    - Set the local name - Local Name\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-N    - Set the local name to equal the host name\n", 0x32uLL, 1uLL, __stderrp);
        fwrite("-s    - Set the sleep mode - Sleep Mode, (0x09 = H5)\n", 0x35uLL, 1uLL, __stderrp);
        fwrite("                             Idle Threshold Host, (Not applicable to \n", 0x46uLL, 1uLL, __stderrp);
        fwrite("                             Idle Threshold HC,\n", 0x30uLL, 1uLL, __stderrp);
        fwrite("                             BT WAKE Active Mode,\n", 0x32uLL, 1uLL, __stderrp);
        fwrite("                             Host WAKE Active Mode,\n", 0x34uLL, 1uLL, __stderrp);
        fwrite("                             Allow Host Sleep During SCO,\n", 0x3AuLL, 1uLL, __stderrp);
        fwrite("                             Combine Sleep Mode and LPM,\n", 0x39uLL, 1uLL, __stderrp);
        fwrite("                             Enable Tristate Control of UART TX Line,\n", 0x46uLL, 1uLL, __stderrp);
        fwrite("                             Active Connection Handling On Suspend,\n", 0x44uLL, 1uLL, __stderrp);
        fwrite("                             Resume Timeout,\n", 0x2DuLL, 1uLL, __stderrp);
        fwrite("                             Enable Break to Host,\n", 0x33uLL, 1uLL, __stderrp);
        fwrite("                             Pulsed Host Wake,\n", 0x2FuLL, 1uLL, __stderrp);
        fwrite("-m    - Checks manufacturer\n", 0x1CuLL, 1uLL, __stderrp);
        fwrite("-R    - Run RSSI sweep (MFG FW required)\n", 0x29uLL, 1uLL, __stderrp);
        fwrite("-r    - Writes to RAM\n", 0x16uLL, 1uLL, __stderrp);
        fwrite("-x    - Load regulatory power table\n", 0x24uLL, 1uLL, __stderrp);
        fwrite("-u    - Update firmware in serial flash\n", 0x28uLL, 1uLL, __stderrp);
        fwrite("-Q    - Load calibration data\n", 0x1EuLL, 1uLL, __stderrp);
        fwrite("-q    - Load calibration data and print complete calibration data to stdio\n", 0x4BuLL, 1uLL, __stderrp);
        fputc(10, __stderrp);
        return 0;
      case 'l':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEB70);
        }
        int v49 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "ready to enable LMP_log from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(buf) = 0;
        LODWORD(buf) = 117567495;
        off_1004E63D0(qword_1004E63C0, &buf, 5);
        usleep(0xC3500u);
        off_1004E6408(qword_1004E63C0);
        return 0;
      case 'm':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEA10);
        }
        v50 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "ready to check manufacturer from %s", (uint8_t *)&buf, 0xCu);
          int v51 = optarg;
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF1D0);
          }
        }
        else
        {
          int v51 = optarg;
        }
        uint64_t v82 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "int check_manufacturer(const char *)";
          _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&buf, 0xCu);
        }
        int v83 = sub_100042E80();
        if (!v83) {
          return 0;
        }
        return v83 == strtol(v51, 0, 10);
      case 'n':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEA30);
        }
        unsigned __int16 v14 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "ready to set local name from %s", (uint8_t *)&buf, 0xCu);
        }
        uint64_t v15 = qword_1004E63C0;
        unsigned int v16 = optarg;
        return sub_10000D750(v15, (uint64_t)v16);
      case 'p':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEA70);
        }
        int v17 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "ready to route SCO over PCM from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(v137) = 0;
        LODWORD(v137) = 0x10000;
        v141[4] = 9;
        int v18 = 134809857;
        goto LABEL_136;
      case 'q':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEBB0);
        }
        int v19 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "ready to load calibration data (complete printed to stdio) from %s", (uint8_t *)&buf, 0xCu);
        }
        int v20 = 1;
LABEL_82:
        sub_10000DFDC(v20);
        return 0;
      case 'r':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEAB0);
        }
        CFMutableDictionaryRef v52 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "ready to write RAM from %s", (uint8_t *)&buf, 0xCu);
        }
        size_t v53 = optarg;
        CFStringRef v54 = strchr(optarg, 61);
        memset(v136, 0, sizeof(v136));
        long long v135 = 0u;
        memset(&v134[4], 0, 208);
        *(void *)&long long v137 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        if (!v54) {
          return 0xFFFFFFFFLL;
        }
        int v55 = v54;
        uint64_t v56 = strtol(v53, 0, 0);
        uint64_t v24 = 0xFFFFFFFFLL;
        if (v56 > 0xFFFFFFFFLL) {
          return v24;
        }
        *(_DWORD *)char v134 = v56;
        unint64_t v57 = 4;
        while (*v55)
        {
          *int v55 = 0;
          char v58 = v55 + 1;
          v134[v57] = strtol(v58, 0, 0);
          unsigned int v59 = strchr(v58, 44);
          unsigned int v60 = v57 + 1;
          if (v57 <= 0xFD)
          {
            int v55 = v59;
            ++v57;
            if (v59) {
              continue;
            }
          }
          goto LABEL_216;
        }
        unsigned int v60 = v57;
LABEL_216:
        unint64_t v48 = v60;
        int v39 = (uint64_t *)v134;
        int v40 = &v137;
        __int16 v41 = -948;
LABEL_138:
        sub_100018AA8(v41, (uint64_t)v39, v48, (uint64_t)&buf, v40, 14);
        return 0;
      case 's':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEAD0);
        }
        long long v21 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "ready to set sleep mode from %s", (uint8_t *)&buf, 0xCu);
        }
        return sub_10000DACC(qword_1004E63C0, (uint64_t)optarg);
      case 't':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEAF0);
        }
        unsigned int v61 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "ready to route SCO over HCI from %s", (uint8_t *)&buf, 0xCu);
        }
        BYTE4(v137) = 0;
        LODWORD(v137) = 65537;
        v141[4] = 9;
        int v18 = 151587073;
LABEL_136:
        *(_DWORD *)long long v141 = v18;
        *(void *)char v134 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        sub_100018AA8(64609, (uint64_t)v141, 5uLL, (uint64_t)&buf, v134, 14);
        int v39 = (uint64_t *)&v137;
        int v40 = (long long *)v134;
        __int16 v41 = -996;
LABEL_137:
        unint64_t v48 = 5;
        goto LABEL_138;
      case 'u':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEC30);
        }
        long long v23 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "ready to update FW in serial flash from %s", (uint8_t *)&buf, 0xCu);
        }
        sub_10000EEE0();
        return 5;
      case 'v':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEB10);
        }
        ssize_t v62 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, "ready to print the default hcd file loaded from %s", (uint8_t *)&buf, 0xCu);
        }
        int v63 = sub_100043434();
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        sub_100043B94();
        if (sub_100010E0C(0))
        {
          fprintf(__stdoutp, "File firmware is %s\n");
        }
        else
        {
          memset(v134, 0, 144);
          snprintf((char *)&buf, 0x80uLL, "/etc/bluetool/%s.boot.script", v63);
          if (!stat((const char *)&buf, (stat *)v134))
          {
            uint64_t v93 = fopen((const char *)&buf, "r");
            if (v93)
            {
              uint64_t v94 = v93;
              v95 = (char *)malloc_type_malloc(0x400uLL, 0x33368D36uLL);
              if (v95)
              {
                int v96 = v95;
                while (!feof(v94))
                {
                  uint64_t v97 = fgets(v96, 1024, v94);
                  if (v97)
                  {
                    uint64_t v98 = v97;
                    size_t v99 = strlen(v97);
                    if (v99 >= 0xA)
                    {
                      v98[v99 - 1] = 0;
                      if (!strncmp(v98, "bcm -w ", 7uLL)) {
                        fprintf(__stdoutp, "File firmware is %s\n", v98 + 7);
                      }
                    }
                  }
                }
                fclose(v94);
                free(v96);
              }
              else
              {
                fclose(v94);
              }
            }
          }
          uint64_t v84 = __stdoutp;
          v85 = (const char *)sub_1000142B8();
          fprintf(v84, "Default firmware is %s\n", v85);
          v86 = __stdoutp;
          sub_100043B94();
          fprintf(v86, "Chipset is %s\n");
        }
        return 0;
      case 'w':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEB30);
        }
        uint64_t v64 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "ready to download HCD file at /path/to/hcd/file.hcd from %s", (uint8_t *)&buf, 0xCu);
        }
        int v65 = qword_1004E63C0;
        int v66 = optarg;
        return sub_10000DE34(v65, v66);
      case 'x':
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEC10);
        }
        unsigned int v67 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 136315138;
          *(void *)((char *)&buf + 4) = "bluetool_command_broadcom";
          _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, "ready to load regulatory power table from %s", (uint8_t *)&buf, 0xCu);
        }
        *(void *)long long v141 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        long long v156 = 0u;
        long long v157 = 0u;
        long long v154 = 0u;
        long long v155 = 0u;
        long long v152 = 0u;
        long long v153 = 0u;
        long long v150 = 0u;
        long long v151 = 0u;
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        long long buf = 0u;
        long long v145 = 0u;
        ssize_t v68 = (const char *)sub_100043B94();
        v69 = sub_100043434();
        uint64_t v70 = (const char *)sub_1000165A0();
        if (strcmp(v68, "BCM4377B2"))
        {
          if (!strcmp(v68, "BCM4377B3"))
          {
            BOOL v71 = 0;
            unsigned int v72 = 250;
            goto LABEL_245;
          }
          if (!strcmp(v68, "BCM4387C2"))
          {
            if (strnstr(v70, "Maldives", 0x400uLL)
              || strnstr(v70, "Madagascar", 0x400uLL)
              || strnstr(v70, "Okinawa", 0x400uLL))
            {
              goto LABEL_242;
            }
            uint64_t v92 = "Macadamia";
          }
          else
          {
            if (!strcmp(v68, "BCM4387C0"))
            {
              unsigned int v72 = 260;
              goto LABEL_244;
            }
            if (strcmp(v68, "BCM4378B1") && strcmp(v68, "BCM4378B3"))
            {
              if (!strcmp(v68, "BCM4388B0"))
              {
                if (strnstr(v70, "Amami", 0x400uLL) || strnstr(v70, "Tokara", 0x400uLL)) {
                  return 0;
                }
                unsigned int v72 = 1572;
              }
              else
              {
                if (strcmp(v68, "BCM4388C0") && strcmp(v68, "BCM4388C2"))
                {
                  BOOL v71 = 0;
                  unsigned int v72 = 210;
                  goto LABEL_245;
                }
                if (!strnstr(v70, "MahoganyA", 0x400uLL)
                  && !strnstr(v70, "MahoganyB", 0x400uLL)
                  && !strnstr(v70, "HickoryA", 0x400uLL)
                  && !strnstr(v70, "HickoryB", 0x400uLL)
                  && !strnstr(v70, "Miyake", 0x400uLL)
                  && !strnstr(v70, "Tasmania", 0x400uLL)
                  && !strnstr(v70, "Sumatra", 0x400uLL)
                  && !strnstr(v70, "Java", 0x400uLL)
                  && !strnstr(v70, "Amami", 0x400uLL)
                  && !strnstr(v70, "Iona", 0x400uLL)
                  && !strnstr(v70, "Azores", 0x400uLL)
                  && !strnstr(v70, "Tokara", 0x400uLL)
                  && !strnstr(v70, "Tresco", 0x400uLL))
                {
                  return 0;
                }
                unsigned int v72 = 3144;
              }
              goto LABEL_244;
            }
            if (strnstr(v70, "Marlin", 0x400uLL)
              || strnstr(v70, "Atlantis", 0x400uLL)
              || strnstr(v70, "AtlantisB", 0x400uLL)
              || strnstr(v70, "Capri", 0x400uLL)
              || strnstr(v70, "Santorini", 0x400uLL)
              || strnstr(v70, "Hazel", 0x400uLL))
            {
              goto LABEL_242;
            }
            uint64_t v92 = "Redwood";
          }
          if (!strnstr(v70, v92, 0x400uLL))
          {
            unsigned int v72 = 520;
            goto LABEL_244;
          }
LABEL_242:
          unsigned int v72 = 786;
          goto LABEL_244;
        }
        if (strnstr(v70, "Monstro", 0x400uLL))
        {
          unsigned int v72 = 378;
LABEL_244:
          BOOL v71 = 1;
          goto LABEL_245;
        }
        unsigned int v72 = 378;
        if (strnstr(v70, "Pinocchio", 0x400uLL)) {
          goto LABEL_244;
        }
        long long v100 = strnstr(v70, "MeekoB", 0x400uLL);
        BOOL v71 = v100 != 0;
        if (v100) {
          unsigned int v72 = 378;
        }
        else {
          unsigned int v72 = 250;
        }
LABEL_245:
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF610);
        }
        BOOL v101 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)char v134 = 67109120;
          *(_DWORD *)&v134[4] = v72;
          _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_DEFAULT, "Expected ptb size is %d", v134, 8u);
        }
        uint64_t v102 = (char *)malloc_type_calloc(v72, 1uLL, 0x100004077774924uLL);
        if (strcmp(v68, "BCM4355C0")
          && strcmp(v68, "BCM43430B1")
          && strcmp(v68, "BCM4357B1")
          && strcmp(v68, "BCM4355C1")
          && strcmp(v68, "BCM4377B2")
          && strcmp(v68, "BCM4377B3")
          && strcmp(v68, "BCM4378B1")
          && strcmp(v68, "BCM4378B3")
          && strcmp(v68, "BCM4387C0")
          && strcmp(v68, "BCM4387C2")
          && strcmp(v68, "BCM4388B0")
          && strcmp(v68, "BCM4388C0")
          && strcmp(v68, "BCM4388C2"))
        {
          v131 = v102;
          goto LABEL_339;
        }
        if (!strcmp(v68, "BCM4377B2")
          || !strcmp(v68, "BCM4377B3")
          || !strcmp(v68, "BCM4378B1")
          || !strcmp(v68, "BCM4378B3")
          || !strcmp(v68, "BCM4387C0")
          || !strcmp(v68, "BCM4387C2")
          || !strcmp(v68, "BCM4388B0")
          || !strcmp(v68, "BCM4388C0")
          || !strcmp(v68, "BCM4388C2"))
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF630);
          }
          int v104 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)char v134 = 136315138;
            *(void *)&v134[4] = v68;
            _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_DEFAULT, "Chipset is %s, load regulatory data from file system", v134, 0xCu);
          }
          uint64_t v103 = sub_100016810(v72, v102);
        }
        else
        {
          uint64_t v103 = sub_100016704((uint64_t)v69, v102);
        }
        uint64_t v24 = v103;
        if (!v103)
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF6B0);
          }
          v113 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)char v134 = 68157954;
            *(_DWORD *)&v134[4] = v72;
            *(_WORD *)&v134[8] = 2096;
            *(void *)&v134[10] = v102;
            _os_log_impl((void *)&_mh_execute_header, v113, OS_LOG_TYPE_DEFAULT, "Regulatory data : %.*P", v134, 0x12u);
          }
          v131 = v102;
          if (v71)
          {
            uint64_t v24 = 0;
            unsigned int v114 = (40525 * v72) >> 23;
            if (v72 == 207 * v114) {
              uint64_t v115 = v114;
            }
            else {
              uint64_t v115 = v114 + 1;
            }
            int v116 = 1;
            v117 = v102;
            int v132 = v115;
            uint64_t v118 = v115;
            do
            {
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DF6D0);
              }
              uint64_t v119 = qword_1004E6428;
              unsigned int v120 = (unsigned __int16)v72;
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)char v134 = 67109632;
                *(_DWORD *)&v134[4] = v116;
                *(_WORD *)&v134[8] = 1024;
                *(_DWORD *)&v134[10] = v132;
                *(_WORD *)&v134[14] = 1024;
                *(_DWORD *)&v134[16] = (unsigned __int16)v72;
                _os_log_impl((void *)&_mh_execute_header, v119, OS_LOG_TYPE_DEFAULT, "Now sending ptb chunk %u of %u, %u bytes remaining", v134, 0x14u);
                uint64_t v121 = qword_1004E6420;
              }
              else
              {
                uint64_t v121 = -1;
              }
              memset(&v134[2], 0, 207);
              LOWORD(v72) = v72 - 207;
              if (v120 >= 0xCF) {
                int v122 = 207;
              }
              else {
                int v122 = v120;
              }
              *(_WORD *)char v134 = v118 - 1;
              __memcpy_chk();
              if (v121 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DF6F0);
              }
              uint64_t v123 = qword_1004E6428;
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
              {
                LODWORD(v137) = 67109634;
                DWORD1(v137) = v122;
                WORD4(v137) = 1040;
                *(_DWORD *)((char *)&v137 + 10) = 209;
                HIWORD(v137) = 2096;
                *(void *)&long long v138 = v134;
                _os_log_impl((void *)&_mh_execute_header, v123, OS_LOG_TYPE_DEFAULT, "Loading %u bytes of ptb data: %.*P", (uint8_t *)&v137, 0x18u);
              }
              sub_100018AA8(65037, (uint64_t)v134, 0xD1uLL, (uint64_t)&buf, v141, 14);
              if (BYTE3(buf))
              {
                if (qword_1004E6420 != -1) {
                  dispatch_once(&qword_1004E6420, &stru_1004DF710);
                }
                uint64_t v124 = qword_1004E6428;
                if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
                {
                  LODWORD(v137) = 67109120;
                  DWORD1(v137) = v116;
                  _os_log_error_impl((void *)&_mh_execute_header, v124, OS_LOG_TYPE_ERROR, "Error in sending regulatory data in chunk %u", (uint8_t *)&v137, 8u);
                }
                uint64_t v24 = 23;
              }
              ++v116;
              v117 += 207;
              --v118;
            }
            while (v118);
            if (v24) {
              goto LABEL_340;
            }
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF730);
            }
            uint64_t v125 = qword_1004E6428;
            uint64_t v24 = 0;
            if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_340;
            }
            *(_WORD *)char v134 = 0;
          }
          else
          {
            sub_100018AA8(64920, (uint64_t)v102, v72, (uint64_t)&buf, v141, 14);
            if (BYTE3(buf))
            {
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DF750);
              }
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_1000482B8();
              }
              uint64_t v24 = 23;
              goto LABEL_340;
            }
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF770);
            }
            uint64_t v125 = qword_1004E6428;
            uint64_t v24 = 0;
            if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_340;
            }
            *(_WORD *)char v134 = 0;
          }
          _os_log_impl((void *)&_mh_execute_header, v125, OS_LOG_TYPE_DEFAULT, "Regulatory data loaded successfully", v134, 2u);
LABEL_339:
          uint64_t v24 = 0;
LABEL_340:
          if (v131) {
            free(v131);
          }
          return v24;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF650);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048320();
        }
        int v105 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)char v134 = 136315394;
          *(void *)&v134[4] = v68;
          *(_WORD *)&v134[12] = 2080;
          *(void *)&v134[14] = v69;
          _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, "Chipset is %s, Platform is %s", v134, 0x16u);
        }
        io_registry_entry_t v106 = IORegistryEntryFromPath(kIOMainPortDefault, "IODeviceTree:/");
        if (v106)
        {
          io_object_t v107 = v106;
          CFDataRef CFProperty = (const __CFData *)IORegistryEntryCreateCFProperty(v106, @"board-id", 0, 0);
          if (!CFProperty)
          {
LABEL_345:
            IOObjectRelease(v107);
            return v24;
          }
          CFDataRef v109 = CFProperty;
          CFTypeID v110 = CFGetTypeID(CFProperty);
          if (v110 != CFDataGetTypeID()) {
            goto LABEL_344;
          }
          memset(v134, 0, 32);
          unint64_t Length = CFDataGetLength(v109);
          BytePtr = (const char *)CFDataGetBytePtr(v109);
          if (Length > 0x1F)
          {
            strncpy(v134, BytePtr, 0x20uLL);
          }
          else
          {
            CFDataGetLength(v109);
            __strncpy_chk();
          }
          size_t v129 = strlen(v134);
          if (strncmp(v134, "Mac-E43C1C25D4880AD6", v129))
          {
LABEL_344:
            CFRelease(v109);
            goto LABEL_345;
          }
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF790);
          }
          int v130 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v137) = 0;
            _os_log_impl((void *)&_mh_execute_header, v130, OS_LOG_TYPE_DEFAULT, "[isBoardJ52FrankenStein] It is a J52 FrankenStein Setup\n", (uint8_t *)&v137, 2u);
          }
          CFRelease(v109);
          IOObjectRelease(v107);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF690);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_1000482EC();
          }
          return 0;
        }
        return v24;
      default:
        if (v6 == -1) {
          return 0;
        }
LABEL_4:
        fprintf(__stderrp, "Invalid option '%c'\n", v6);
        continue;
    }
  }
}

void sub_10000D1B8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000D1EC(int a1, const char *a2)
{
  __int16 v13 = 0;
  unsigned __int32 v12 = 0;
  if (!a2)
  {
    WORD2(__buf) = 0;
    LODWORD(__buf) = 0;
    if (sub_1000410E4((unsigned __int8 *)&__buf))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DEE10);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100047D94();
      }
      return 0xFFFFFFFFLL;
    }
    v6.i32[0] = *(_DWORD *)((char *)&__buf + 2);
    int16x8_t v8 = (int16x8_t)vmovl_u8(v6);
    *(int16x4_t *)v8.i8 = vrev64_s16(*(int16x4_t *)v8.i8);
    unsigned __int32 v12 = vmovn_s16(v8).u32[0];
    LOBYTE(v13) = BYTE1(__buf);
    HIBYTE(v13) = __buf;
LABEL_13:
    LODWORD(v9) = 117178625;
    HIDWORD(v9) = v12;
    __long long buf = v9;
    __int16 v15 = v13;
    if (byte_1004E641C)
    {
      ssize_t v10 = off_1004E63D8(qword_1004E63C0, &__buf, 10);
      if ((v10 & 0x80000000) != 0)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEE30);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048388();
        }
        return 0xFFFFFFFFLL;
      }
      return sub_10000F9BC(v10, 0xFC01u);
    }
    ssize_t v10 = write(a1, &__buf, 0xAuLL);
    if (v10 == 10) {
      return sub_10000F9BC(v10, 0xFC01u);
    }
    ssize_t v11 = v10;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEE50);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_100047D2C();
      if (v11 < 0) {
        return 0xFFFFFFFFLL;
      }
    }
    else if (v11 < 0)
    {
      return 0xFFFFFFFFLL;
    }
    *__error() = 5;
    return 0xFFFFFFFFLL;
  }
  if (*a2 == 36)
  {
    int v3 = a2 + 1;
    int v4 = getenv(a2 + 1);
    fprintf(__stderrp, "Overriding BDADDR from environment variable: %s = %s\n", v3, v4);
    size_t v5 = v4;
  }
  else
  {
    size_t v5 = a2;
  }
  uint64_t result = sub_10000FEB8(v5, (uint64_t)&v12);
  if (result != -1) {
    goto LABEL_13;
  }
  return result;
}

void sub_10000D478(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000D4AC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000D4E0(int a1, char *__str)
{
  if (byte_1004E641C) {
    return 0;
  }
  if (__str)
  {
    if (*__str == 36)
    {
      int v4 = __str + 1;
      size_t v5 = getenv(__str + 1);
      fprintf(__stderrp, "Overriding baud rate from environment variable: %s = %s\n", v4, v5);
      unint64_t v6 = strtoul(v5, 0, 0);
    }
    else
    {
      unint64_t v6 = strtoul(__str, 0, 0);
    }
  }
  else
  {
    unsigned int v7 = sub_100040B14();
    if (v7) {
      unint64_t v6 = v7;
    }
    else {
      unint64_t v6 = 2400000;
    }
  }
  __long long buf = 117184513;
  __int16 v10 = 0;
  __int16 v11 = v6;
  char v12 = BYTE2(v6);
  char v13 = BYTE3(v6);
  ssize_t v8 = write(a1, &__buf, 0xAuLL);
  if (v8 == 10)
  {
    if ((sub_10000F9BC(10, 0xFC18u) & 0x80000000) == 0)
    {
      off_1004E63F8(qword_1004E63C0, v6);
      return 0;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    *__error() = 5;
  }
  return 0xFFFFFFFFLL;
}

void sub_10000D64C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000D680(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000D6B4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000D6E8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000D71C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000D750(uint64_t a1, uint64_t a2)
{
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  *(_OWORD *)__s = 0u;
  long long v21 = 0u;
  if (a2)
  {
    uint64_t v2 = (char *)a2;
    if (*(unsigned char *)a2 == 36)
    {
      uint64_t v2 = getenv((const char *)(a2 + 1));
      fprintf(__stderrp, "Overriding hostname from environment variable: %s = %s\n");
    }
    else
    {
      fprintf(__stderrp, "Using passed hostname: %s\n");
    }
  }
  else
  {
    long long v34 = 0uLL;
    long long v35 = 0uLL;
    long long v32 = 0uLL;
    long long v33 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v28 = 0uLL;
    long long v29 = 0uLL;
    long long v26 = 0uLL;
    long long v27 = 0uLL;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    *(_OWORD *)__s = 0uLL;
    long long v21 = 0uLL;
    j__gethostname(__s, 0x100uLL);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEE70);
    }
    uint64_t v2 = __s;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
      sub_100047E3C();
    }
  }
  int v3 = strlen(v2);
  if (v3)
  {
    memset(v19, 0, sizeof(v19));
    int v18 = -133426431;
    unsigned int v4 = v3 - 1;
    if (v3 >= 1)
    {
      if (v4 >= 0xF7) {
        unsigned int v4 = 247;
      }
      uint64_t v5 = v4 + 1;
      unint64_t v6 = v19;
      do
      {
        char v7 = *v2++;
        *v6++ = v7;
        --v5;
      }
      while (v5);
    }
    uint64_t v8 = off_1004E63D8(qword_1004E63C0, &v18, 252);
    if (v8 != -1) {
      return sub_10000F9BC(v8, 0xC13u);
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEE90);
    }
    __int16 v10 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100047DC8(v10, v11, v12, v13, v14, v15, v16, v17);
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_10000D9C8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000D9FC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DA30(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DA64(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DA98(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000DACC(int a1, uint64_t a2)
{
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v5 = [+[NSString stringWithUTF8String:a2] componentsSeparatedByString:@","];
  if ([(NSArray *)v5 count] <= 0x18 && [(NSArray *)v5 count] > 9)
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v8 = [(NSArray *)v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v8)
    {
      id v9 = v8;
      int v10 = 0;
      uint64_t v11 = *(void *)v21;
      do
      {
        uint64_t v12 = 0;
        int v13 = v10;
        uint64_t v14 = (char *)&v28 + v10;
        do
        {
          if (*(void *)v21 != v11) {
            objc_enumerationMutation(v5);
          }
          *((unsigned char *)v12 + (void)v14) = strtol((const char *)[*(id *)(*((void *)&v20 + 1) + 8 * (void)v12) UTF8String], 0, 0);
          uint64_t v12 = (char *)v12 + 1;
        }
        while (v9 != v12);
        id v9 = [(NSArray *)v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
        int v10 = v13 + v12;
      }
      while (v9);
      uint64_t v16 = v28;
      v15.i32[0] = v29;
      int16x8_t v17 = (int16x8_t)vmovl_u8(v15);
    }
    else
    {
      uint64_t v16 = 0;
      int16x8_t v17 = 0uLL;
    }
    __long long buf = 217851649;
    uint64_t v26 = v16;
    unsigned __int32 v27 = vmovn_s16(v17).u32[0];
    if (byte_1004E641C)
    {
      ssize_t v18 = off_1004E63D8(qword_1004E63C0, &__buf, 16);
      if ((v18 & 0x80000000) != 0)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEEF0);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_1000483F0();
        }
        goto LABEL_4;
      }
    }
    else
    {
      ssize_t v18 = write(a1, &__buf, 0x10uLL);
      if (v18 != 16)
      {
        ssize_t v19 = v18;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEF10);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
        {
          sub_100047F6C();
          if (v19 < 0) {
            goto LABEL_4;
          }
        }
        else if (v19 < 0)
        {
          goto LABEL_4;
        }
        *__error() = 5;
        goto LABEL_4;
      }
    }
    uint64_t v6 = sub_10000F9BC(v18, 0xFC27u);
    goto LABEL_5;
  }
  puts("Sleep mode requires less than 24 parameters");
LABEL_4:
  uint64_t v6 = 0xFFFFFFFFLL;
LABEL_5:
  return v6;
}

void sub_10000DD98(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DDCC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DE00(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000DE34(int a1, char *a2)
{
  int v3 = sub_10000EF78(a2);
  int v4 = open(v3, 0);
  if (v4 < 0)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEC50);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048424();
    }
    return 0xFFFFFFFFLL;
  }
  else
  {
    int v5 = v4;
    sub_1000165AC();
    dword_1004E5FB0 = v5;
    uint64_t v6 = sub_10000F130(a1, (uint64_t (*)(_OWORD *))sub_10000F60C);
    close(v5);
    return v6;
  }
}

void sub_10000DF0C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DF40(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DF74(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DFA8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000DFDC(int a1)
{
  ssize_t v68 = 0;
  unsigned __int16 v67 = 0;
  int v66 = 0;
  unsigned __int16 v65 = 0;
  uint64_t v64 = 0;
  unsigned __int16 v63 = 0;
  uint64_t v62 = 0;
  memset(v71, 0, 256);
  uint64_t v2 = (const char *)sub_100043B94();
  sub_100043434();
  bzero(__str, 0x400uLL);
  size_t v61 = 1024;
  if (sysctlbyname("kern.bootargs", __str, &v61, 0, 0) || (int16x8_t v17 = strtok(__str, " ")) == 0)
  {
LABEL_2:
    int v3 = (const char *)sub_100043B94();
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF3D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
      sub_10004880C();
    }
    if (strcmp(v3, "BCM4355B3")
      && strcmp(v3, "BCM4355C0")
      && strcmp(v3, "BCM43430B1")
      && strcmp(v3, "BCM4357B1")
      && strcmp(v3, "BCM4355C1")
      && strcmp(v3, "BCM4377B2")
      && strcmp(v3, "BCM4377B3")
      && strcmp(v3, "BCM4378B1")
      && strcmp(v3, "BCM4378B3")
      && strcmp(v3, "BCM4387C0")
      && strcmp(v3, "BCM4387C2")
      && strcmp(v3, "BCM4388B0")
      && strcmp(v3, "BCM4388C0")
      && strcmp(v3, "BCM4388C2"))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF3F0);
      }
      int v4 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        int v5 = "Chipset does not support taurus cal";
LABEL_62:
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)buf, 2u);
        goto LABEL_63;
      }
      goto LABEL_63;
    }
    if (strcmp(v2, "BCM4378B1")
      && strcmp(v2, "BCM4378B3")
      && strcmp(v2, "BCM4387C2")
      && strcmp(v2, "BCM4388B0")
      && strcmp(v2, "BCM4388C0")
      && strcmp(v2, "BCM4388C2"))
    {
      uint64_t v6 = sub_10004198C((UInt8 **)&v64, &v63);
      if (v6)
      {
        uint64_t v7 = v6;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF2B0);
        }
        id v8 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
        {
          sub_1000487A0(v7, v8, v9, v10, v11, v12, v13, v14);
          goto LABEL_134;
        }
        goto LABEL_60;
      }
      if (a1) {
        sub_1000102B8((unsigned __int8 *)v64, v63);
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF290);
      }
      long long v33 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf[0]) = 67109634;
        DWORD1(buf[0]) = v63;
        WORD4(buf[0]) = 1040;
        *(_DWORD *)((char *)buf + 10) = v63;
        HIWORD(buf[0]) = 2096;
        *(void *)&buf[1] = v64;
        long long v34 = "Cal data to be loaded (%d bytes): %.*P";
        goto LABEL_83;
      }
      goto LABEL_84;
    }
    LODWORD(buf[1]) = -1962371525;
    buf[0] = xmmword_10004C8A1;
    if (MGIsDeviceOneOfType())
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF230);
      }
      uint8x8_t v15 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Loading Calibration from FDR ... ", (uint8_t *)buf, 2u);
        *(void *)uint64_t v75 = 0;
        *(void *)&long long v73 = 0;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF410);
        }
      }
      else
      {
        *(void *)uint64_t v75 = 0;
        *(void *)&long long v73 = 0;
      }
      ssize_t v18 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Loading calibration of FATP stage ... \n", (uint8_t *)buf, 2u);
      }
      if (sub_1000121A4((const void **)&v73) == -1)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF430);
        }
        long long v31 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "FATP stage calibration not found, looking for Golden calibration from SMT ... \n", (uint8_t *)buf, 2u);
        }
        if (sub_1000121A4((const void **)&v73))
        {
          if (*(void *)v75)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF470);
            }
            long long v32 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_100048714((CFErrorRef *)v75, v32);
            }
          }
          uint64_t v16 = 7;
LABEL_57:
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF270);
          }
          long long v22 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
          {
            sub_1000486A8(v16, v22, v23, v24, v25, v26, v27, v28);
LABEL_134:
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF330);
            }
          }
LABEL_60:
          int v4 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(buf[0]) = 0;
            int v5 = "No taurus cal data. Load extended calibration for Simba";
            goto LABEL_62;
          }
LABEL_63:
          uint64_t v29 = sub_100041978((UInt8 **)&v68, &v67);
          if (v29
            || (!strcmp(v2, "BCM4355B3")
              ? (uint64_t v30 = sub_100041964((UInt8 **)&v66, &v65))
              : (uint64_t v30 = sub_100041950((UInt8 **)&v66, &v65)),
                uint64_t v29 = v30,
                v30))
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF350);
            }
            int v49 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
              sub_10004863C(v29, v49, v50, v51, v52, v53, v54, v55);
            }
          }
          else
          {
            if (v65 != 20 && v65 != 320 && v65 != 1360)
            {
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DF370);
              }
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_100048568();
              }
              goto LABEL_118;
            }
            if (v67 != 206)
            {
              if (qword_1004E6420 != -1) {
                dispatch_once(&qword_1004E6420, &stru_1004DF390);
              }
              if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                sub_100048608();
              }
              goto LABEL_118;
            }
            if (!strcmp(v2, "BCM4355B3"))
            {
              char v58 = malloc_type_malloc(0x550uLL, 0x1000040B4D46FCDuLL);
              unsigned int v59 = v66;
              _DWORD *v58 = *(_DWORD *)v66;
              v58[1] = v59[1];
              LODWORD(v59) = v59[2];
              v58[2] = v59;
              if (v59 != 32)
              {
                if (qword_1004E6420 != -1) {
                  dispatch_once(&qword_1004E6420, &stru_1004DF3B0);
                }
                if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
                  sub_10004859C();
                }
                free(v58);
                goto LABEL_118;
              }
              for (uint64_t i = 12; i != 1356; i += 42)
                sub_100018AA8(64792, (uint64_t)v66 + i, 0x2AuLL, (uint64_t)v71, &v62, 14);
              free(v58);
            }
            else
            {
              uint64_t v56 = 0;
              unint64_t v57 = 0;
              do
              {
                sub_100018AA8(64792, (uint64_t)v66 + v56, 0x14uLL, (uint64_t)v71, &v62, 14);
                ++v57;
                v56 += 20;
              }
              while (v57 < v65 / 0x14u);
            }
            sub_100018AA8(64798, (uint64_t)v68, v67, (uint64_t)v71, &v62, 14);
          }
LABEL_118:
          if (v66) {
            free(v66);
          }
          if (v67) {
            free(v68);
          }
          if (v64) {
            free(v64);
          }
          return;
        }
      }
      size_t Length = CFDataGetLength((CFDataRef)v73);
      CFIndex v20 = Length;
      if (Length)
      {
        uint64_t v64 = malloc_type_malloc(Length, 0x100004077774924uLL);
        v77.location = 0;
        v77.length = v20;
        CFDataGetBytes((CFDataRef)v73, v77, (UInt8 *)v64);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF450);
        }
        long long v21 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf[0]) = 134217984;
          *(void *)((char *)buf + 4) = v20;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "btbf length %ld\n", (uint8_t *)buf, 0xCu);
        }
      }
      unsigned __int16 v63 = v20;
    }
    else
    {
      uint64_t v16 = sub_1000419A0((UInt8 **)&v64, &v63);
      if (v16) {
        goto LABEL_57;
      }
    }
    if (a1) {
      sub_1000102B8((unsigned __int8 *)v64, v63);
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF250);
    }
    long long v33 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0]) = 67109634;
      DWORD1(buf[0]) = v63;
      WORD4(buf[0]) = 1040;
      *(_DWORD *)((char *)buf + 10) = v63;
      HIWORD(buf[0]) = 2096;
      *(void *)&buf[1] = v64;
      long long v34 = "Cal data for beamforming to be loaded (%d bytes): %.*P";
LABEL_83:
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, v34, (uint8_t *)buf, 0x18u);
    }
LABEL_84:
    if (!strcmp(v2, "BCM4355C0"))
    {
      LODWORD(buf[1]) = -350584140;
      buf[0] = xmmword_10004C8B5;
      int v76 = 368778837;
      *(_OWORD *)uint64_t v75 = xmmword_10004C8C9;
      int v74 = -1418383976;
      long long v73 = xmmword_10004C8DD;
      int v72 = -1213485500;
      v71[16] = xmmword_10004C8F1;
      if (MGIsDeviceOneOfType())
      {
        if (!*((unsigned char *)v64 + 37) && sub_1000117A8((unsigned int *)v64))
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF2D0);
          }
          long long v35 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_1000484F4(v35, v36, v37, v38, v39, v40, v41, v42);
          }
        }
      }
    }
    unsigned int v43 = v63 / 0xE6u;
    if (v63 % 0xE6u)
    {
      ++v43;
    }
    else if (v63 < 0xE6u)
    {
      goto LABEL_118;
    }
    __int16 v44 = 0;
    int v45 = 0;
    while (dword_1004E63C8)
    {
      *(_OWORD *)((char *)&buf[12] + 3) = 0u;
      memset((char *)&buf[13] + 3, 0, 22);
      *(_OWORD *)((char *)&buf[10] + 3) = 0u;
      *(_OWORD *)((char *)&buf[11] + 3) = 0u;
      *(_OWORD *)((char *)&buf[8] + 3) = 0u;
      *(_OWORD *)((char *)&buf[9] + 3) = 0u;
      *(_OWORD *)((char *)&buf[6] + 3) = 0u;
      *(_OWORD *)((char *)&buf[7] + 3) = 0u;
      *(_OWORD *)((char *)&buf[4] + 3) = 0u;
      *(_OWORD *)((char *)&buf[5] + 3) = 0u;
      *(_OWORD *)((char *)&buf[2] + 3) = 0u;
      *(_OWORD *)((char *)&buf[3] + 3) = 0u;
      memset((char *)buf + 3, 0, 32);
      LOBYTE(buf[0]) = 3;
      *(_WORD *)((char *)buf + 1) = ~v44 + v43;
      __memcpy_chk();
      sub_100018AA8(64919, (uint64_t)buf, 0xE9uLL, (uint64_t)v71, &v62, 14);
      char v46 = BYTE4(v71[0]);
      if (BYTE4(v71[0]))
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF310);
        }
        v47 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_10004848C(v75, v46, (const char **)&v75[4], v47);
        }
      }
      ++v45;
      v63 -= 230;
      __int16 v44 = v45;
      if (v45 >= v43) {
        goto LABEL_118;
      }
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF2F0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048458();
    }
    goto LABEL_118;
  }
  while (!strstr(v17, "wifibt-external"))
  {
    int16x8_t v17 = strtok(0, " ");
    if (!v17) {
      goto LABEL_2;
    }
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF210);
  }
  unint64_t v48 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "Thunderbolt to PCIe expansion chassis, so skip loading calibration data", (uint8_t *)buf, 2u);
  }
}

void sub_10000EE10(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000EE44(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000EE78(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000EEAC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000EEE0()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF010);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
    sub_1000488B4();
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
    sub_100048880();
  }
  return 5;
}

char *sub_10000EF78(char *a1)
{
  int v1 = a1;
  if (strchr(a1, 58) && strchr(v1, 44))
  {
    int v2 = sub_10001008C();
    int v3 = strtok(v1, ":,");
    if (v3)
    {
      __endptr = 0;
      while (1)
      {
        uint64_t v4 = strtol(v3, &__endptr, 0);
        int v5 = strtok(0, ":,");
        int v1 = v5;
        if (v4 == v2) {
          break;
        }
        if (!v5) {
          return v1;
        }
        int v3 = strtok(0, ":,");
        if (!v3) {
          return 0;
        }
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DEED0);
      }
      uint64_t v7 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        uint64_t v10 = v1;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Using HCD File: %s", buf, 0xCu);
      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_10000F0E0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000F114(int a1, int a2)
{
  dword_1004E5FB0 = a2;
  return sub_10000F130(a1, (uint64_t (*)(_OWORD *))sub_10000F60C);
}

uint64_t sub_10000F130(int a1, uint64_t (*a2)(_OWORD *))
{
  uint64_t v4 = sub_100043B94();
  memset(__buf, 0, 259);
  if (byte_1004E641C) {
    return a2(__buf);
  }
  uint64_t v6 = (const char *)v4;
  LODWORD(__buf[0]) = 16526849;
  ssize_t v7 = write(a1, __buf, 4uLL);
  if (v7 != 4)
  {
    if ((v7 & 0x8000000000000000) == 0) {
      *__error() = 5;
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DECD0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000489F8();
    }
    return 0xFFFFFFFFLL;
  }
  if ((sub_10000F9BC(4, 0xFC2Eu) & 0x80000000) != 0)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DECF0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048928();
    }
    return 0xFFFFFFFFLL;
  }
  usleep(0xC350u);
  if (!v6) {
    uint64_t v6 = (const char *)&unk_1004CA20E;
  }
  if (!strcmp(v6, "BCM4325") || !strcmp(v6, "BCM4329B1") || !strcmp(v6, "BCM4329C0") || !strcmp(v6, "BCM20710"))
  {
    ssize_t v8 = read(a1, __buf, 2uLL);
    if (v8 == 2)
    {
      if (LOBYTE(__buf[0]) - 48 <= 9 && BYTE1(__buf[0]) >= 0x30u && BYTE1(__buf[0]) < 0x3Au) {
        goto LABEL_15;
      }
      *__error() = 94;
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DED30);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048990();
      }
    }
    else
    {
      if ((v8 & 0x8000000000000000) == 0) {
        *__error() = 5;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DED10);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_1000489C4();
      }
    }
    return 0xFFFFFFFFLL;
  }
LABEL_15:
  int v9 = 0;
  for (unsigned int i = 1; ; ++i)
  {
    uint64_t v5 = a2(__buf);
    if (50 * (i / 0x32) - 1 == v9)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DED50);
      }
      uint64_t v11 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 67109120;
        int v15 = v9 + 1;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Loading segment %d", buf, 8u);
      }
    }
    if ((int)v5 < 1) {
      break;
    }
    if (LOBYTE(__buf[0]) != 1 || BYTE2(__buf[0]) != 252)
    {
      *__error() = 94;
      return 0xFFFFFFFFLL;
    }
    uint64_t v12 = off_1004E63D8(qword_1004E63C0, __buf, v5);
    if (v12 == -1)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DED70);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100047C90();
      }
      return 0xFFFFFFFFLL;
    }
    ++v9;
    if ((sub_10000F9BC(v12, *(unsigned __int16 *)((char *)__buf + 1)) & 0x80000000) != 0)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DED90);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004895C();
      }
      return 0xFFFFFFFFLL;
    }
  }
  return v5;
}

uint64_t sub_10000F60C(char *a1)
{
  if (!byte_1004E641C)
  {
    ssize_t v6 = read(dword_1004E5FB0, a1, 4uLL);
    if (!v6) {
      return 0;
    }
    if (v6 == 4)
    {
      if (*a1 == 1)
      {
        unsigned int v7 = 4;
      }
      else
      {
        *(_DWORD *)(a1 + 1) = *(_DWORD *)a1;
        *a1 = 1;
        unsigned int v7 = 5;
      }
      if (a1[2] == 252)
      {
        uint64_t v4 = a1[3] + 4;
        ssize_t v8 = &a1[v7];
        size_t v9 = v4 - v7;
        ssize_t v10 = read(dword_1004E5FB0, v8, v9);
        if (v10 == v9) {
          return v4;
        }
        if ((v10 & 0x8000000000000000) == 0) {
          *__error() = 94;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DECB0);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048A60();
        }
      }
      else
      {
        *__error() = 94;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DEC90);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048A94();
        }
      }
    }
    else
    {
      if ((v6 & 0x8000000000000000) == 0) {
        *__error() = 94;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DEC70);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048A2C();
      }
    }
    return 0xFFFFFFFFLL;
  }
  memset(&v12, 0, sizeof(v12));
  if (fstat(dword_1004E5FB0, &v12) == -1) {
    size_t st_size_low = 0xFFFFFFFFLL;
  }
  else {
    size_t st_size_low = LODWORD(v12.st_size);
  }
  if ((int)st_size_low < 1) {
    return 0xFFFFFFFFLL;
  }
  int v2 = malloc_type_malloc(st_size_low, 0x2B7C2E49uLL);
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  int v3 = v2;
  if (st_size_low == read(dword_1004E5FB0, v2, st_size_low))
  {
    uint64_t v4 = sub_100003428((uint64_t)v3, st_size_low);
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF070);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048B10();
    }
    uint64_t v4 = 0xFFFFFFFFLL;
  }
  free(v3);
  return v4;
}

void sub_10000F8EC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000F920(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000F954(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000F988(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000F9BC(uint64_t a1, unsigned int a2)
{
  unint64_t v7 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  __int16 v38 = 0;
  off_1004E63F0(qword_1004E63C0, &v22, 258, &v7);
  if (v7 < 4)
  {
LABEL_2:
    *__error() = 5;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEDB0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048B84();
    }
    return 0xFFFFFFFFLL;
  }
  while (v22 != 14)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEDD0);
    }
    int v3 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v9 = v22;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "EVNT: Previous command did not complete yet: %02X", buf, 8u);
    }
    __int16 v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v22 = 0u;
    off_1004E63F0(qword_1004E63C0, &v22, 258, &v7);
    if (v7 < 4) {
      goto LABEL_2;
    }
  }
  if (BYTE2(v22) != 1
    || BYTE3(v22) != a2
    || (BYTE4(v22) == a2 >> 8 ? (BOOL v4 = BYTE5(v22) == 0) : (BOOL v4 = 0), !v4))
  {
    *__error() = 94;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEDF0);
    }
    uint64_t v5 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67110656;
      int v9 = v22;
      __int16 v10 = 1024;
      int v11 = BYTE1(v22);
      __int16 v12 = 1024;
      int v13 = BYTE2(v22);
      __int16 v14 = 1024;
      int v15 = BYTE3(v22);
      __int16 v16 = 1024;
      int v17 = BYTE4(v22);
      __int16 v18 = 1024;
      int v19 = BYTE5(v22);
      __int16 v20 = 1024;
      unsigned int v21 = a2;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "EVNT: Invalid opcode Got:[0x%x 0x%x 0x%x 0x%x 0x%x 0x%x], waiting for [0x%x] !", buf, 0x2Cu);
    }
    return 0xFFFFFFFFLL;
  }
  return 0;
}

void sub_10000FCE4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FD18(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FD4C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FD80(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FDB4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FDE8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FE1C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FE50(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FE84(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10000FEB8(const char *a1, uint64_t a2)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  if (strlen(a1) < 0x11) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v5 = (unsigned __int8 *)(a1 + 1);
  for (uint64_t i = 5; i != -1; --i)
  {
    int v7 = *(v5 - 1);
    unsigned int v8 = v7 - 48;
    unsigned int v9 = v7 - 97;
    if ((v7 - 65) >= 6) {
      char v10 = 0;
    }
    else {
      char v10 = v7 - 55;
    }
    char v11 = v7 - 87;
    if (v9 > 5) {
      char v11 = v10;
    }
    if (v8 < 0xA) {
      char v11 = v8;
    }
    char v12 = 16 * v11;
    *(unsigned char *)(a2 + i) = v12;
    int v14 = *v5;
    v5 += 3;
    char v13 = v14;
    unsigned int v15 = v14 - 48;
    unsigned int v16 = v14 - 97;
    char v17 = v14 - 55;
    if ((v14 - 65) >= 6) {
      char v18 = 0;
    }
    else {
      char v18 = v17;
    }
    char v19 = v13 - 87;
    if (v16 > 5) {
      char v19 = v18;
    }
    if (v15 < 0xA) {
      char v19 = v15;
    }
    *(unsigned char *)(a2 + i) = v19 | v12;
  }
  return 0;
}

void sub_10000FF88(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FFBC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10000FFF0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010024(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010058(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001008C()
{
  __int16 v8 = 0;
  memset(v7, 0, sizeof(v7));
  uint64_t v2 = 0;
  off_1004E63E8(qword_1004E63C0, &unk_10004CA5B, 3);
  do
    off_1004E63F0(qword_1004E63C0, v7, 258, &v2);
  while (LOBYTE(v7[0]) != 14);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DEEB0);
  }
  uint8x8_t v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109376;
    int v4 = BYTE13(v7[0]);
    __int16 v5 = 1024;
    int v6 = BYTE12(v7[0]);
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "LMP Subversion: 0x%02X%02x", buf, 0xEu);
  }
  return WORD6(v7[0]);
}

void sub_1000101E8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001021C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010250(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010284(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

size_t sub_1000102B8(unsigned __int8 *a1, int a2)
{
  size_t result = fwrite("Cal data for beamforming to be loaded:\n", 0x27uLL, 1uLL, __stdoutp);
  if (a2)
  {
    __int16 v5 = &a1[a2];
    do
    {
      int v6 = *a1++;
      size_t result = fprintf(__stdoutp, "%02X ", v6);
    }
    while (a1 < v5);
  }
  return result;
}

void sub_100010338(uint64_t a1, unsigned int *a2, char *__s)
{
  if (a1)
  {
    if (a2)
    {
      int v4 = __s;
      size_t v6 = strlen(__s);
      int v7 = malloc_type_malloc(v6 + 1, 0x68D00A07uLL);
      if (v7)
      {
        __int16 v8 = v7;
        int v9 = 0;
        while (*v4)
        {
          unsigned __int8 v10 = __tolower(*v4);
          if ((v10 & 0x80) != 0) {
            __uint32_t v11 = 0;
          }
          else {
            __uint32_t v11 = HIWORD(_DefaultRuneLocale.__runetype[v10]) & 1;
          }
          ++v4;
          if (v11) {
            v8[v9++] = v10;
          }
        }
        v8[v9] = 0;
        LOBYTE(v12) = *v8;
        if (*v8)
        {
          unsigned int v13 = 0;
          int v14 = v8;
          do
          {
            char v15 = __tolower((char)v12);
            if ((v15 - 48) >= 0xA) {
              char v16 = v15 - 87;
            }
            else {
              char v16 = v15 - 48;
            }
            if (v14[1]) {
              uint64_t v17 = 2;
            }
            else {
              uint64_t v17 = 1;
            }
            if (v14[1]) {
              char v18 = v14 + 2;
            }
            else {
              char v18 = v14 + 1;
            }
            if (v14[1]) {
              char v19 = v14[1];
            }
            else {
              char v19 = 48;
            }
            char v20 = __tolower(v19);
            unsigned int v21 = v20 - 48;
            if (v21 >= 0xA) {
              LOBYTE(v21) = v20 - 87;
            }
            *(unsigned char *)(a1 + v13++) = v21 | (16 * v16);
            int v12 = v14[v17];
            int v14 = v18;
          }
          while (v12);
        }
        else
        {
          unsigned int v13 = 0;
        }
        free(v8);
        *a2 = v13;
      }
    }
  }
}

uint64_t sub_100010490(const char *a1, int *a2)
{
  memset(v51, 0, sizeof(v51));
  unsigned __int8 v40 = 0;
  unsigned __int16 v39 = 0;
  unsigned __int8 v38 = 0;
  unsigned __int16 v37 = 0;
  memset(v50, 0, sizeof(v50));
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  memset(v49, 0, sizeof(v49));
  __int16 v48 = 0;
  memset(v47, 0, sizeof(v47));
  uint64_t v2 = fopen(a1, "r");
  if (fgets((char *)v51, 128, v2))
  {
    int v32 = 0;
    char v3 = 0;
    __s = (char *)((unint64_t)v51 | 9);
    int v4 = &qword_1004E6420;
    __int16 v5 = (os_log_t *)&qword_1004E6428;
    do
    {
      if (sscanf((const char *)v51, ":%2hhx%4hx%2hhx", &v40, &v39, &v38) == 3)
      {
        if (*v4 != -1) {
          dispatch_once(v4, &stru_1004DEF30);
        }
        size_t v6 = *v5;
        if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)long long buf = 67109632;
          *(_DWORD *)uint64_t v42 = v40;
          *(_WORD *)&v42[4] = 1024;
          *(_DWORD *)&v42[6] = v39;
          *(_WORD *)unsigned int v43 = 1024;
          *(_DWORD *)&v43[2] = v38;
          _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "count = 0x%02X addressOffset = 0x%04X type = 0x%02X", buf, 0x14u);
        }
        if (v38 == 4)
        {
          sscanf(__s, "%4hx", &v37);
          int v15 = v37;
          int v16 = v39;
          if (*v4 != -1) {
            dispatch_once(v4, &stru_1004DEFB0);
          }
          uint64_t v17 = *v5;
          if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long buf = 67109632;
            *(_DWORD *)uint64_t v42 = v39;
            *(_WORD *)&v42[4] = 1024;
            *(_DWORD *)&v42[6] = v37;
            *(_WORD *)unsigned int v43 = 1024;
            *(_DWORD *)&v43[2] = v16 | (v15 << 16);
            _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, " addressOffset = 0x%04X addressBase = 0x%04X inAddress = 0x%08X", buf, 0x14u);
          }
        }
        else if (!v38)
        {
          int v7 = v4;
          __int16 v8 = v5;
          unsigned __int16 v9 = v37;
          unsigned __int16 v10 = v39;
          int v11 = v39 | (v37 << 16);
          if (v3)
          {
            HIDWORD(v36) = 0;
            sub_100010338((uint64_t)v50, (unsigned int *)&v36 + 1, __s);
            if (*v7 != -1) {
              dispatch_once(v7, &stru_1004DEF70);
            }
            int v12 = *v8;
            if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEBUG))
            {
              int v19 = v50[0];
              if (!HIDWORD(v36)) {
                int v19 = 0;
              }
              int v20 = v50[1];
              if (HIDWORD(v36) <= 1) {
                int v20 = 0;
              }
              int v21 = v50[2];
              if (HIDWORD(v36) <= 2) {
                int v21 = 0;
              }
              int v22 = v50[3];
              if (HIDWORD(v36) <= 3) {
                int v22 = 0;
              }
              *(_DWORD *)long long buf = 67110400;
              *(_DWORD *)uint64_t v42 = v11;
              *(_WORD *)&v42[4] = 1024;
              *(_DWORD *)&v42[6] = HIDWORD(v36);
              *(_WORD *)unsigned int v43 = 1024;
              *(_DWORD *)&v43[2] = v19;
              *(_WORD *)__int16 v44 = 1024;
              *(_DWORD *)&v44[2] = v20;
              *(_WORD *)int v45 = 1024;
              *(_DWORD *)&v45[2] = v21;
              LOWORD(v46[0]) = 1024;
              *(_DWORD *)((char *)v46 + 2) = v22;
              _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, " inAddress = 0x%08X insize_t Length = 0x%08X inData[0-3] = 0x%02X%02X%02X%02X...", buf, 0x26u);
            }
            LOWORD(v47[0]) = v10;
            WORD1(v47[0]) = v9;
            int v13 = HIDWORD(v36);
            __memcpy_chk();
            sub_100018AA8(64588, (uint64_t)v47, (v13 + 3), (uint64_t)v47, &v35, 14);
            if (*v7 != -1) {
              dispatch_once(v7, &stru_1004DEF90);
            }
            __int16 v5 = v8;
            int v14 = *v8;
            if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)long long buf = 134219008;
              *(void *)uint64_t v42 = v35;
              *(_WORD *)&v42[8] = 1024;
              *(_DWORD *)unsigned int v43 = LOBYTE(v47[0]);
              *(_WORD *)&v43[4] = 1024;
              *(_DWORD *)__int16 v44 = BYTE1(v47[0]);
              *(_WORD *)&v44[4] = 1024;
              *(_DWORD *)int v45 = BYTE2(v47[0]);
              *(_WORD *)&v45[4] = 1024;
              v46[0] = BYTE3(v47[0]);
              _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "pktLength %zu WriteRAM 0x%02X%02X%02X%02X", buf, 0x24u);
            }
            int v4 = v7;
            if (BYTE3(v47[0])) {
              goto LABEL_42;
            }
            char v3 = 1;
          }
          else
          {
            *a2 = v11;
            if (*v7 != -1) {
              dispatch_once(v7, &stru_1004DEF50);
            }
            __int16 v5 = v8;
            char v18 = *v8;
            if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEBUG))
            {
              int v23 = *a2;
              *(_DWORD *)long long buf = 67109120;
              *(_DWORD *)uint64_t v42 = v23;
              _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, " addressLaunch = 0x%08X", buf, 8u);
            }
            LODWORD(v36) = 0;
            sub_100010338((uint64_t)v49, (unsigned int *)&v36, __s);
            char v3 = 1;
            int v32 = v11;
            int v4 = v7;
          }
        }
      }
    }
    while (fgets((char *)v51, 128, v2));
    if ((v3 & 1) == 0) {
      return fclose(v2);
    }
LABEL_42:
    if (*v4 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEFD0);
    }
    long long v24 = *v5;
    if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
    {
      int v28 = v49[0];
      if (!v36) {
        int v28 = 0;
      }
      int v29 = v49[1];
      if (v36 <= 1) {
        int v29 = 0;
      }
      int v30 = v49[2];
      if (v36 <= 2) {
        int v30 = 0;
      }
      int v31 = v49[3];
      if (v36 <= 3) {
        int v31 = 0;
      }
      *(_DWORD *)long long buf = 67110400;
      *(_DWORD *)uint64_t v42 = v32;
      *(_WORD *)&v42[4] = 1024;
      *(_DWORD *)&v42[6] = v36;
      *(_WORD *)unsigned int v43 = 1024;
      *(_DWORD *)&v43[2] = v28;
      *(_WORD *)__int16 v44 = 1024;
      *(_DWORD *)&v44[2] = v29;
      *(_WORD *)int v45 = 1024;
      *(_DWORD *)&v45[2] = v30;
      LOWORD(v46[0]) = 1024;
      *(_DWORD *)((char *)v46 + 2) = v31;
      _os_log_debug_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, " firstAddress = 0x%08X firstsize_t Length = 0x%08X firstData[0-3] = 0x%02X%02X%02X%02X...", buf, 0x26u);
    }
    LODWORD(v47[0]) = v32;
    int v25 = v36;
    __memcpy_chk();
    sub_100018AA8(64588, (uint64_t)v47, (v25 + 3), (uint64_t)v47, &v35, 14);
    if (*v4 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DEFF0);
    }
    long long v26 = *v5;
    if (os_log_type_enabled(*v5, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 134219008;
      *(void *)uint64_t v42 = v35;
      *(_WORD *)&v42[8] = 1024;
      *(_DWORD *)unsigned int v43 = LOBYTE(v47[0]);
      *(_WORD *)&v43[4] = 1024;
      *(_DWORD *)__int16 v44 = BYTE1(v47[0]);
      *(_WORD *)&v44[4] = 1024;
      *(_DWORD *)int v45 = BYTE2(v47[0]);
      *(_WORD *)&v45[4] = 1024;
      v46[0] = BYTE3(v47[0]);
      _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "pktLength %zu WriteRAM 0x%02X%02X%02X%02X", buf, 0x24u);
    }
  }
  return fclose(v2);
}

void sub_100010BD0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010C04(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010C38(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010C6C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010CA0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010CD4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010D08(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010D3C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010D70(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010DA4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100010DD8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_100010E0C(int a1)
{
  int v1 = &byte_1004E4AB0;
  if (!byte_1004E4AB0)
  {
    uint64_t v3 = sub_100043B94();
    if (!v3) {
      return 0;
    }
    int v4 = (const char *)v3;
    __int16 v5 = (const void *)MGCopyAnswer();
    if (!v5) {
      return 0;
    }
    size_t v6 = v5;
    int v7 = CFEqual(v5, @"Vendor");
    int v8 = CFEqual(v6, @"Internal");
    int v9 = CFEqual(v6, @"NonUI");
    int v10 = CFEqual(v6, @"VendorNonUI");
    CFRelease(v6);
    if (!v7 && !v8 && !v9 && !v10) {
      return 0;
    }
    int v11 = opendir("/etc/bluetool");
    if (v11)
    {
      int v12 = v11;
      int v13 = readdir(v11);
      if (v13)
      {
        int v14 = v13;
        while (1)
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF0B0);
          }
          int v15 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 136315138;
            d_name = v14->d_name;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Looking at file %s", buf, 0xCu);
          }
          int v16 = v14->d_name;
          size_t v17 = strlen(v4);
          if (!strncmp(v16, v4, v17) && (strstr(v16, "LPM") == 0) != a1)
          {
            bzero(&byte_1004E4AB0, 0x400uLL);
            __strlcat_chk();
            __strlcat_chk();
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004DF0D0);
            }
            char v18 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)long long buf = 136315138;
              d_name = &byte_1004E4AB0;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Looking at firmware file %s", buf, 0xCu);
            }
            if (!access(&byte_1004E4AB0, 4)) {
              break;
            }
          }
          readdir(v12);
          int v14 = readdir(v12);
          if (!v14) {
            goto LABEL_26;
          }
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF0F0);
        }
        int v20 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136315138;
          d_name = v16;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Have access to file %s", buf, 0xCu);
        }
        int v1 = &byte_1004E4AB0;
      }
      else
      {
LABEL_26:
        int v1 = 0;
      }
      closedir(v12);
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_100011154(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100011188(_DWORD *a1)
{
  if (byte_1004E641C)
  {
    uint64_t v1 = sub_100014BFC();
    if ((int)v1 >= 1)
    {
      uint64_t v2 = v1;
      uint64_t v3 = malloc_type_malloc(v1, 0xE04AF8E8uLL);
      if (v3)
      {
        int v4 = v3;
        if ((sub_1000139D8() & 0x80000000) == 0)
        {
          if (sub_100013CD4(v2, v4) == v2)
          {
            uint64_t v5 = sub_100003428((uint64_t)v4, v2);
LABEL_24:
            free(v4);
            return v5;
          }
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DF170);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_100048BB8();
          }
        }
        uint64_t v5 = 0xFFFFFFFFLL;
        goto LABEL_24;
      }
    }
    return 0xFFFFFFFFLL;
  }
  if (!a1) {
    return 0;
  }
  uint64_t v7 = sub_100013CD4(4, a1);
  uint64_t v5 = v7;
  if (v7)
  {
    if (v7 == 4)
    {
      if (*(unsigned char *)a1 == 1)
      {
        unsigned int v8 = 4;
      }
      else
      {
        *(_DWORD *)((char *)a1 + 1) = *a1;
        *(unsigned char *)a1 = 1;
        unsigned int v8 = 5;
      }
      if (*((unsigned __int8 *)a1 + 2) == 252)
      {
        uint64_t v5 = *((unsigned __int8 *)a1 + 3) + 4;
        int v9 = v5 - v8;
        int v10 = sub_100013CD4(v5 - v8, (char *)a1 + v8);
        if (v10 == v9) {
          return v5;
        }
        if ((v10 & 0x80000000) == 0) {
          *__error() = 94;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF150);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048A60();
        }
      }
      else
      {
        *__error() = 94;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF130);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048A94();
        }
      }
    }
    else
    {
      if ((v7 & 0x80000000) == 0) {
        *__error() = 94;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF110);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048A2C();
      }
    }
    return 0xFFFFFFFFLL;
  }
  return v5;
}

void sub_100011434(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011468(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001149C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000114D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011504(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011538(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001156C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000115A0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000115D4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011608(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001163C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011670(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000116A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000116D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001170C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011740(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011774(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000117A8(unsigned int *a1)
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF490);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
    sub_100048D48();
  }
  int v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t)a1 + a1[6];
  while (*(unsigned char *)(v4 + v3 + 46) != 38)
  {
    v3 += 40;
    ++v2;
    if (v3 == 600) {
      return 20;
    }
  }
  unsigned __int16 v37 = (unsigned char *)(v4 + v3 + 46);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF4B0);
  }
  size_t v6 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *v37;
    *(_DWORD *)long long buf = 67109376;
    *(_DWORD *)&uint8_t buf[4] = v7;
    __int16 v45 = 1024;
    int v46 = v2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "9.5dBm found : %d at row : %d", buf, 0xEu);
    int v8 = a1[6] + v3 + 46;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF4D0);
    }
  }
  else
  {
    int v8 = a1[6] + v3 + 46;
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
    sub_100048C9C();
  }
  int v9 = qword_1004E6428;
  unsigned __int8 v35 = v8;
  uint64_t v36 = a1;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "old calibration EDR data", buf, 2u);
    uint64_t v10 = qword_1004E6420;
  }
  else
  {
    uint64_t v10 = -1;
  }
  uint64_t v11 = 13;
  int v12 = (unsigned __int8 *)(v4 + v3 + 46);
  do
  {
    if (v10 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF510);
    }
    int v13 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *v12;
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v14;
      _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "%x", buf, 8u);
      uint64_t v10 = qword_1004E6420;
    }
    else
    {
      uint64_t v10 = -1;
    }
    ++v12;
    --v11;
  }
  while (v11);
  uint64_t v15 = 0;
  char v48 = 0;
  uint64_t v47 = 0;
  *unsigned __int16 v37 = 54;
  *(unsigned char *)(v4 + v3 + 47) = 10;
  *(void *)long long buf = *(void *)(v4 + v3 + 50);
  LOBYTE(v45) = *(unsigned char *)(v4 + v3 + 58);
  do
  {
    uint64_t v16 = 0;
    while (*(unsigned __int8 *)(v4 + 11 + v15) != byte_10004CA00[v16])
    {
      if (++v16 == 31)
      {
        signed int v17 = *((unsigned __int8 *)&v47 + v15);
        signed int v18 = buf[v15];
        goto LABEL_32;
      }
    }
    signed int v18 = buf[v15];
    signed int v17 = llroundf(flt_10004C984[v16] + (float)((float)(char)v18 * flt_10004C908[v16]));
    *((unsigned char *)&v47 + v15) = v17;
LABEL_32:
    if (v17 > (char)v18 && v17 - (char)v18 >= 11)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF5B0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048C64(&v42, v43);
      }
LABEL_49:
      *((unsigned char *)&v47 + v15) = v18;
      signed int v17 = v18;
      goto LABEL_50;
    }
    if ((char)v18 > v17 && (char)v18 - v17 >= 11)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF5D0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048C64(&v40, v41);
      }
      goto LABEL_49;
    }
LABEL_50:
    if (v17 >= 0x97)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF5F0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
        sub_100048C2C(&v38, v39);
      }
      LOBYTE(v17) = -106;
      *((unsigned char *)&v47 + v15) = -106;
    }
    *(unsigned char *)(v4 + v15++ + v3 + 50) = v17;
  }
  while (v15 != 9);
  int v21 = (void *)((char *)v36 + v35);
  uint64_t v22 = *(void *)v37;
  *(void *)((char *)v21 + 5) = *(void *)(v4 + v3 + 51);
  *int v21 = v22;
  *(unsigned int *)((char *)v36 + v36[6] + v36[7] - 4) = crc32(0, (const Bytef *)v36 + v36[6], v36[7] - 4);
  v36[8] = crc32(0, (const Bytef *)v36 + v36[6], v36[7]);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF530);
  }
  int v23 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "Updated taurus cal data :", buf, 2u);
    uint64_t v24 = qword_1004E6420;
  }
  else
  {
    uint64_t v24 = -1;
  }
  for (uint64_t i = 0; i != 13; ++i)
  {
    if (v24 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF550);
    }
    long long v26 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
    {
      int v27 = *((unsigned __int8 *)v21 + i);
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v27;
      _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "%x", buf, 8u);
      uint64_t v24 = qword_1004E6420;
    }
    else
    {
      uint64_t v24 = -1;
    }
  }
  uint64_t v28 = -4;
  do
  {
    if (v24 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF570);
    }
    int v29 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
    {
      int v31 = *((unsigned __int8 *)v36 + v36[6] + (unint64_t)v36[7] + v28);
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v31;
      _os_log_debug_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "Updated crc in tx segment : %x", buf, 8u);
      uint64_t v24 = qword_1004E6420;
    }
    else
    {
      uint64_t v24 = -1;
    }
  }
  while (!__CFADD__(v28++, 1));
  for (uint64_t j = 0; j != 4; ++j)
  {
    if (v24 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF590);
    }
    long long v33 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
    {
      int v34 = *((unsigned __int8 *)v36 + j + 32);
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v34;
      _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "Updated header segment crc : %x", buf, 8u);
      uint64_t v24 = qword_1004E6420;
    }
    else
    {
      uint64_t v24 = -1;
    }
  }
  return 0;
}

void sub_100011F68(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011F9C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100011FD0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012004(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012038(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001206C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000120A0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000120D4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012108(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001213C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012170(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000121A4(const void **a1)
{
  CFDictionaryRef v2 = (const __CFDictionary *)AMFDRSealingMapCopyLocalDictForClass();
  if (!a1 || !v2)
  {
    if (!a1) {
      return 0xFFFFFFFFLL;
    }
    Value = *a1;
    if (!*a1) {
      return 0xFFFFFFFFLL;
    }
LABEL_7:
    CFRetain(Value);
    return 0;
  }
  Value = CFDictionaryGetValue(v2, @"BTBF");
  *a1 = Value;
  if (Value) {
    goto LABEL_7;
  }
  return 0xFFFFFFFFLL;
}

void sub_100012238(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001226C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000122A0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000122D4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012308(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001233C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012370(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000123A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000123D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001240C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012440(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012474(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000124A8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000124DC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012510(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012544(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012578(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000125AC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000125E0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012614(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012648(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001267C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000126B0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000126E4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012718(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001274C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100012780(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000127B4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

unsigned char *sub_100012804(unsigned char *result, unsigned char *a2)
{
  *size_t result = 0;
  *a2 = 0;
  return result;
}

void sub_100012820(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x18u);
}

void sub_100012840(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

uint64_t sub_100012860(int a1)
{
  uint64_t v4 = 0;
  memset(&v3[1], 0, 192);
  if (a1) {
    unsigned __int16 v1 = 16387;
  }
  else {
    unsigned __int16 v1 = 16388;
  }
  v3[0] = 0uLL;
  return sub_1000128C0(2u, v1, (unsigned __int16 *)v3, 8, 0);
}

uint64_t sub_1000128C0(unsigned __int16 a1, unsigned __int16 a2, unsigned __int16 *a3, uint64_t a4, int a5)
{
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  *a3 = a1;
  a3[1] = (unint64_t)(a4 + 10) >> 1;
  int v8 = (unsigned __int16)word_1004E4EB0++;
  a3[2] = v8;
  a3[3] = a2;
  a3[4] = 0;
  char v12 = -62;
  __memcpy_chk();
  if (a5)
  {
    uint64_t v11 = 217;
    int v9 = sub_100018C88((uint64_t)&v12, a4 + 11, (uint64_t)&v12, &v11);
    memcpy(a3, v13, v11 - 1);
    if (!v9) {
      goto LABEL_5;
    }
    return 0xFFFFFFFFLL;
  }
  if (sub_100018C88((uint64_t)&v12, a4 + 11, 0, 0)) {
    return 0xFFFFFFFFLL;
  }
LABEL_5:
  if (v8 != a3[2] || a3[4]) {
    return 0xFFFFFFFFLL;
  }
  return 0;
}

uint64_t sub_100012A24(int a1)
{
  uint64_t v4 = 0;
  memset(&v3[1], 0, 192);
  if (a1) {
    unsigned __int16 v1 = 16385;
  }
  else {
    unsigned __int16 v1 = 16386;
  }
  v3[0] = 0uLL;
  return sub_1000128C0(2u, v1, (unsigned __int16 *)v3, 8, 0);
}

uint64_t sub_100012A84(__int16 a1)
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  WORD5(v2[0]) = 11;
  WORD6(v2[0]) = a1;
  return sub_1000128C0(2u, 0x5004u, (unsigned __int16 *)v2, 8, 0);
}

uint64_t sub_100012AE8()
{
  uint64_t v2 = 0;
  memset(v1, 0, sizeof(v1));
  WORD5(v1[0]) = 10;
  return sub_1000128C0(2u, 0x5004u, (unsigned __int16 *)v1, 8, 1);
}

uint64_t sub_100012B48(__int16 *a1, __int16 *a2, _WORD *a3)
{
  uint64_t v26 = -1;
  *(void *)&long long v6 = -1;
  *((void *)&v6 + 1) = -1;
  long long v24 = v6;
  long long v25 = v6;
  long long v22 = v6;
  long long v23 = v6;
  long long v20 = v6;
  long long v21 = v6;
  long long v18 = v6;
  long long v19 = v6;
  long long v16 = v6;
  long long v17 = v6;
  long long v14 = v6;
  long long v15 = v6;
  long long v13 = v6;
  if (sub_1000128C0(0, 0x281Au, (unsigned __int16 *)&v13, 8, 1)) {
    return 0xFFFFFFFFLL;
  }
  *a1 = WORD5(v13);
  *(void *)&long long v7 = -1;
  *((void *)&v7 + 1) = -1;
  long long v13 = v7;
  long long v14 = v7;
  long long v15 = v7;
  long long v16 = v7;
  long long v17 = v7;
  long long v18 = v7;
  long long v19 = v7;
  long long v20 = v7;
  long long v21 = v7;
  long long v22 = v7;
  long long v23 = v7;
  long long v24 = v7;
  long long v25 = v7;
  uint64_t v26 = -1;
  if (sub_1000128C0(0, 0x281Bu, (unsigned __int16 *)&v13, 8, 1)) {
    return 0xFFFFFFFFLL;
  }
  *a2 = WORD5(v13);
  *(void *)&long long v8 = -1;
  *((void *)&v8 + 1) = -1;
  long long v13 = v8;
  long long v14 = v8;
  long long v15 = v8;
  long long v16 = v8;
  long long v17 = v8;
  long long v18 = v8;
  long long v19 = v8;
  long long v20 = v8;
  long long v21 = v8;
  long long v22 = v8;
  long long v23 = v8;
  long long v24 = v8;
  long long v25 = v8;
  uint64_t v26 = -1;
  if (sub_1000128C0(0, 0x2819u, (unsigned __int16 *)&v13, 8, 1)) {
    return 0xFFFFFFFFLL;
  }
  int v10 = WORD5(v13);
  *a3 = WORD5(v13);
  if (*a1 == -1) {
    return 0xFFFFFFFFLL;
  }
  int v12 = *a2 == -1 || v10 == 0xFFFF;
  return (v12 << 31 >> 31);
}

uint64_t sub_100012C8C(__int16 a1, void *a2, uint64_t a3)
{
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  long long v8 = 0u;
  WORD5(v8) = a1;
  size_t v5 = 2 * a3;
  WORD6(v8) = a3;
  uint64_t v6 = sub_1000128C0(0, 0x7003u, (unsigned __int16 *)&v8, 2 * a3 + 6, 1);
  if (!v6 && a3) {
    memcpy(a2, v9, v5);
  }
  return v6;
}

uint64_t sub_100012D34(__int16 a1, const void *a2, unint64_t a3)
{
  if (a3 > 0x64) {
    return 1;
  }
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  long long v8 = 0u;
  WORD5(v8) = a1;
  WORD6(v8) = a3;
  if (a3)
  {
    uint64_t v6 = 2 * a3;
    memcpy(v9, a2, 2 * a3);
    uint64_t v7 = v6 + 6;
  }
  else
  {
    uint64_t v7 = 6;
  }
  return sub_1000128C0(2u, 0x7003u, (unsigned __int16 *)&v8, v7, 1);
}

uint64_t sub_100012DD0(__int16 a1, _WORD *a2)
{
  uint64_t v5 = 0;
  memset(v4, 0, sizeof(v4));
  WORD5(v4[0]) = a1;
  HIWORD(v4[0]) = 0;
  uint64_t result = sub_1000128C0(0, 0x3006u, (unsigned __int16 *)v4, 8, 1);
  if (!result) {
    *a2 = WORD6(v4[0]);
  }
  return result;
}

uint64_t sub_100012E48(int a1, char **a2)
{
  uint64_t v4 = "Warm";
  optind = 1;
  uint64_t v5 = &optarg;
  while (2)
  {
    while (1)
    {
      uint64_t v6 = getopt(a1, a2, "hVrwRp:l:sicBT");
      int v7 = v6;
      if ((int)v6 > 83) {
        break;
      }
      switch(v6)
      {
        case 0x52:
LABEL_14:
          int v12 = sub_100012A24(v6 == 82);
          if (v12)
          {
            fprintf(__stderrp, "Unable to reset chip: %d\n", v12);
          }
          else
          {
            if (v7 == 82) {
              long long v14 = "Cold";
            }
            else {
              long long v14 = v4;
            }
            fprintf(__stderrp, "%s reset complete!\n", v14);
          }
          break;
        case 0xFFFFFFFF:
          return 0;
        case 0x42:
          unsigned int v36 = sub_100040B14();
          if (v36) {
            unsigned int v37 = v36;
          }
          else {
            unsigned int v37 = 2400000;
          }
          switch(v37)
          {
            case 0x1C200u:
              LOWORD(v38) = 472;
              break;
            case 0x2DC6C0u:
              LOWORD(v38) = 12288;
              break;
            case 0x249F00u:
              LOWORD(v38) = 9830;
              break;
            default:
              int v38 = (int)((double)v37 * 0.004096);
              break;
          }
          *(_WORD *)__s = v38;
          __int16 v41 = 446;
          return sub_100012D34(v41, __s, 1uLL);
        default:
LABEL_40:
          fprintf(__stderrp, "Invalid option '%c'\n", v6);
          break;
      }
    }
    switch((int)v6)
    {
      case 'h':
        fprintf(__stderrp, "%s - CSR Specific Commnads\n", *a2);
        fwrite("-V        - Get BlueCore specific version/revision information.\n", 0x40uLL, 1uLL, __stderrp);
        fwrite("-r        - Warm Reset.\n", 0x18uLL, 1uLL, __stderrp);
        fwrite("-R        - Cold Reset.\n", 0x18uLL, 1uLL, __stderrp);
        fwrite("-w        - Warm Halt.\n", 0x17uLL, 1uLL, __stderrp);
        fwrite("-s        - Deep Sleep\n", 0x17uLL, 1uLL, __stderrp);
        fwrite("-p <key>  - Read a given PSKEY\n", 0x1FuLL, 1uLL, __stderrp);
        fwrite("-l <mode> - Put device into PCM loopback\n", 0x29uLL, 1uLL, __stderrp);
        fwrite("-i\t       - Write device name and address\n", 0x2AuLL, 1uLL, __stderrp);
        fwrite("-c        - Check for wifi presence.\n", 0x25uLL, 1uLL, __stderrp);
        fwrite("-B        - Set the baud rate using a predefined value\n", 0x37uLL, 1uLL, __stderrp);
        fwrite("-T        - Set the transport using a predefined value\n", 0x37uLL, 1uLL, __stderrp);
        fputc(10, __stderrp);
        return 0;
      case 'i':
        long long v58 = 0u;
        long long v59 = 0u;
        long long v56 = 0u;
        long long v57 = 0u;
        long long v54 = 0u;
        long long v55 = 0u;
        long long v52 = 0u;
        long long v53 = 0u;
        long long v50 = 0u;
        long long v51 = 0u;
        long long v48 = 0u;
        long long v49 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        *(_OWORD *)__s = 0u;
        long long v45 = 0u;
        if (!j__gethostname(__s, 0x100uLL))
        {
          int v8 = strlen(__s);
          int v9 = v8 + 1 >= 0 ? v8 + 1 : v8 + 2;
          int v10 = sub_100012D34(264, __s, (uint64_t)v9 >> 1);
          if (v10) {
            fprintf(__stderrp, "Unable to write Device Name (%d)\n", v10);
          }
        }
        if (!sub_1000410E4((unsigned __int8 *)__s))
        {
          v43[0] = __s[3];
          v43[1] = bswap32(*(unsigned __int16 *)&__s[4]) >> 16;
          v43[2] = __s[2];
          v43[3] = bswap32(*(unsigned __int16 *)__s) >> 16;
          int v11 = sub_100012D34(1, v43, 4uLL);
          if (v11) {
            fprintf(__stderrp, "Unable to write BDADDR (%d)\n", v11);
          }
        }
        continue;
      case 'j':
      case 'k':
      case 'm':
      case 'n':
      case 'o':
      case 'q':
      case 't':
      case 'u':
      case 'v':
        goto LABEL_40;
      case 'l':
        int v15 = strtoul(*v5, 0, 0);
        if (sub_100012A84(v15)) {
          fprintf(__stderrp, "Unable to put chip into PCM Loopback Mode %d\n", v15);
        }
        else {
          fprintf(__stderrp, "Chip now in PCM Loopback Mode %d\n", v15);
        }
        continue;
      case 'p':
        *(_WORD *)__s = 0;
        long long v16 = v5;
        long long v17 = *v5;
        long long v18 = strchr(*v5, 61);
        if (v18)
        {
          long long v19 = v18;
          *long long v18 = 0;
          __int16 v20 = strtoul(v17, 0, 0);
          strcpy(__s, "d");
          long long v21 = malloc_type_malloc(0xC8uLL, 0x1000040BDFB0063uLL);
          if (!v21) {
            goto LABEL_60;
          }
          long long v22 = v21;
          long long v23 = strtok(v19 + 1, ",:");
          if (v23)
          {
            long long v24 = v4;
            unint64_t v25 = 0;
            uint64_t v26 = 0xFFFFFFFF00000000;
            while (v25 < *(unsigned __int16 *)__s)
            {
              v22[v25++] = strtoul(v23, 0, 0);
              long long v23 = strtok(0, ",:");
              v26 += (uint64_t)&_mh_execute_header;
              if (!v23) {
                goto LABEL_56;
              }
            }
            fprintf(__stderrp, "Too many values given, skipping all past 0x%04x\n", *(unsigned __int16 *)((char *)v22 + (v26 >> 31)));
LABEL_56:
            uint64_t v4 = v24;
          }
          else
          {
            LOWORD(v25) = 0;
          }
          *(_WORD *)__s = v25;
          if (sub_100012D34(v20, v22, (unsigned __int16)v25)) {
            fprintf(__stderrp, "Unable to write PSKEY 0x%04x values: %d\n");
          }
LABEL_59:
          free(v22);
          goto LABEL_60;
        }
        unsigned __int16 v30 = strtoul(v17, 0, 0);
        if (sub_100012DD0(v30, __s))
        {
          *(_WORD *)__s = 1;
          uint64_t v31 = 1;
        }
        else
        {
          uint64_t v31 = *(unsigned __int16 *)__s;
        }
        int v34 = malloc_type_malloc(2 * v31, 0x1000040BDFB0063uLL);
        if (v34)
        {
          long long v22 = v34;
          if (sub_100012C8C(v30, v34, *(unsigned __int16 *)__s))
          {
            fprintf(__stderrp, "Unable to read PSKEY 0x%04x: %d\n");
          }
          else
          {
            fprintf(__stderrp, "PSKEY 0x%04x = ", v30);
            if (*(_WORD *)__s)
            {
              unint64_t v35 = 0;
              do
                fprintf(__stderrp, "0x%04x ", (unsigned __int16)v22[v35++]);
              while (v35 < *(unsigned __int16 *)__s);
            }
            fputc(10, __stderrp);
          }
          goto LABEL_59;
        }
LABEL_60:
        uint64_t v5 = v16;
        continue;
      case 'r':
        goto LABEL_14;
      case 's':
        int v27 = sub_100012AE8();
        uint64_t v28 = __stderrp;
        if (v27)
        {
          fprintf(__stderrp, "Unable to deep sleep chip: %d\n", v27);
          continue;
        }
        int v32 = "Deep Sleep Entered!\n";
        size_t v33 = 20;
        goto LABEL_46;
      case 'w':
        int v29 = sub_100012860(0);
        uint64_t v28 = __stderrp;
        if (v29)
        {
          fprintf(__stderrp, "Unable to warm halt chip: %d\n", v29);
        }
        else
        {
          int v32 = "Warm Halt Entered!\n";
          size_t v33 = 19;
LABEL_46:
          fwrite(v32, v33, 1uLL, v28);
        }
        continue;
      default:
        if (v6 == 86)
        {
          *(_WORD *)__s = 0;
          v43[0] = 0;
          unsigned __int16 v42 = 0;
          int v13 = sub_100012B48((__int16 *)__s, v43, &v42);
          if (v13)
          {
            fprintf(__stderrp, "Unable to get CSR specific revision information: %d\n", v13);
          }
          else
          {
            fprintf(__stderrp, "CSR BlueCore Version 0x%04x, Revision 0x%04x, Build: ", *(unsigned __int16 *)__s, (unsigned __int16)v43[0]);
            if (v42 == 3164)
            {
              puts("A06");
            }
            else if (v42 == 1120)
            {
              puts("A05");
            }
            else
            {
              printf("Unknown: 0x%04x\n", v42);
            }
          }
          continue;
        }
        if (v6 != 84) {
          goto LABEL_40;
        }
        switch(sub_100040DFC())
        {
          case 0u:
            __int16 v40 = 2;
            goto LABEL_87;
          case 1u:
          case 3u:
            __int16 v40 = 3;
            goto LABEL_87;
          case 2u:
            __int16 v40 = 7;
            goto LABEL_87;
          case 4u:
            __int16 v40 = 6;
            goto LABEL_87;
          case 5u:
            __int16 v40 = 1;
LABEL_87:
            *(_WORD *)__s = v40;
            break;
          default:
            *(_WORD *)__s = 0;
            break;
        }
        __int16 v41 = 505;
        return sub_100012D34(v41, __s, 1uLL);
    }
  }
}

uint64_t sub_10001369C()
{
  BOOL v1 = 1;
  if (!MGGetBoolAnswer() || (uint64_t result = MGIsDeviceOneOfType(), (result & 1) == 0))
  {
    uint64_t result = MGIsDeviceOneOfType();
    if (!result
      || (uint64_t result = MGGetStringAnswer()) == 0
      || (uint64_t result = (uint64_t)objc_msgSend((id)result, "UTF8String", 0)) == 0
      || (uint64_t result = strcmp((const char *)result, "rack"), result))
    {
      BOOL v1 = 0;
    }
  }
  byte_1004E4EB8 = v1;
  return result;
}

uint64_t sub_100013788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12 = a2;
  long long v14 = &qword_1004E4EC8;
  if (a12) {
    long long v14 = &qword_1004E4EC0;
  }
  int v15 = (char *)*v14;
  long long v16 = &dword_1004E4ED0;
  if (!a12) {
    long long v16 = &dword_1004E4ED4;
  }
  unsigned int v17 = *v16;
  if (!v15)
  {
    uint64_t v19 = a3;
    uint64_t v20 = a6;
    uint64_t v21 = a5;
    uint64_t v22 = a4;
    uint64_t v23 = a8;
    uint64_t v24 = a7;
    int v15 = (char *)malloc_type_calloc(0x200uLL, 0x60uLL, 0x10D00408759784FuLL);
    a7 = v24;
    a8 = v23;
    a4 = v22;
    a5 = v21;
    a6 = v20;
    a3 = v19;
    uint64_t v12 = a2;
    unint64_t v25 = &qword_1004E4EC0;
    if (!a12) {
      unint64_t v25 = &qword_1004E4EC8;
    }
    *unint64_t v25 = (uint64_t)v15;
    if (!v15) {
      return 4661;
    }
  }
  if (v17 >= 0x201)
  {
    uint64_t v26 = a3;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF7B0);
    }
    int v27 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      int v30 = 136315650;
      uint64_t v31 = a1;
      __int16 v32 = 2080;
      uint64_t v33 = v12;
      __int16 v34 = 2080;
      uint64_t v35 = v26;
      _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "Out of memory, can't add %s_%s_%s.", (uint8_t *)&v30, 0x20u);
    }
    return 4661;
  }
  int v29 = &v15[96 * v17];
  *(void *)int v29 = a1;
  *((void *)v29 + 1) = v12;
  *((void *)v29 + 2) = a3;
  *((void *)v29 + 3) = a7;
  *((void *)v29 + 4) = a8;
  *((void *)v29 + 5) = a9;
  *((void *)v29 + 6) = a10;
  *((void *)v29 + 7) = a11;
  *((void *)v29 + 8) = a4;
  *((void *)v29 + 9) = a5;
  *((void *)v29 + 10) = a6;
  *((void *)v29 + 11) = 0;
  uint64_t result = 0;
  if (a12) {
    dword_1004E4ED0 = v17 + 1;
  }
  else {
    dword_1004E4ED4 = v17 + 1;
  }
  return result;
}

void sub_1000139A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000139D8()
{
  uint8x8_t v0 = sub_100043434();
  BOOL v1 = (const char *)sub_100043B94();
  sub_100042E80();
  uint64_t v2 = sub_100013A68();
  int v3 = byte_1004E4EB8;
  uint64_t v4 = qword_1004E4EC0;
  uint64_t v5 = qword_1004E4EC8;
  uint64_t result = sub_100013BC0(v0, v1, v2);
  if (result != -1)
  {
    int v7 = result;
    uint64_t result = 0;
    if (v3) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = v5;
    }
    *(_DWORD *)(v8 + 96 * v7 + 88) = 0;
  }
  return result;
}

const char *sub_100013A68()
{
  int v0 = sub_100042E80();
  if (v0 > 1835627634)
  {
    if (v0 <= 1886547811)
    {
      if (v0 == 1835627635)
      {
        return "MIT";
      }
      else
      {
        if (v0 != 1836413537) {
          return "ALL";
        }
        return "MUR";
      }
    }
    else
    {
      switch(v0)
      {
        case 1886547812:
          return "PROD";
        case 1936548719:
          return "SMC";
        case 1937006964:
          return "STA";
        default:
          return "ALL";
      }
    }
  }
  else if (v0 <= 544498794)
  {
    if (v0 == 538997881)
    {
      return "TY";
    }
    else
    {
      if (v0 != 543450486) {
        return "ALL";
      }
      return "DEV";
    }
  }
  else if (v0 == 544498795)
  {
    return "TDK";
  }
  else
  {
    if (v0 != 544568169) {
      return "ALL";
    }
    return "USI";
  }
}

uint64_t sub_100013BC0(char *__s1, const char *a2, const char *a3)
{
  uint64_t v3 = dword_1004E49DC;
  if (dword_1004E49DC == -1)
  {
    if (byte_1004E4EB8) {
      uint64_t v4 = &qword_1004E4EC0;
    }
    else {
      uint64_t v4 = &qword_1004E4EC8;
    }
    uint64_t v5 = &dword_1004E4ED0;
    if (!byte_1004E4EB8) {
      uint64_t v5 = &dword_1004E4ED4;
    }
    uint64_t v6 = *v5;
    if (v6)
    {
      uint64_t v3 = 0;
      for (uint64_t i = (const char **)(*v4 + 16); ; i += 12)
      {
        if (!strcmp(__s1, *(i - 2)) && (!a2 || !strcmp(a2, *(i - 1))))
        {
          int v11 = *i;
          if (!strcmp(a3, *i) || !strcmp("ALL", v11)) {
            break;
          }
        }
        if (v6 == ++v3) {
          return 0xFFFFFFFFLL;
        }
      }
      if (a2) {
        dword_1004E49DC = v3;
      }
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return v3;
}

uint64_t sub_100013CD4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100043434();
  uint64_t v5 = sub_100043B94();
  if (!v4) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v6 = (const char *)v5;
  if (dword_1004E49D8 == -1)
  {
    int v7 = sub_100042E80();
    if (v7 == -1) {
      int v8 = 0;
    }
    else {
      int v8 = v7;
    }
    dword_1004E49D8 = v8;
  }
  int v9 = sub_100013A68();
  int v10 = sub_100013BC0(v4, v6, v9);
  int v11 = byte_1004E4EB8 ? &qword_1004E4EC0 : &qword_1004E4EC8;
  if (v10 == -1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v12 = *v11;
  uint64_t v13 = v12 + 96 * v10;
  uint64_t v16 = *(int *)(v13 + 88);
  long long v14 = (int *)(v13 + 88);
  uint64_t v15 = v16;
  int v17 = v10;
  uint64_t v18 = v12 + 96 * v10;
  LODWORD(v16) = *(_DWORD *)(v18 + 40);
  uint64_t v20 = (int *)(v18 + 40);
  unsigned int v19 = v16;
  if (v16 <= v15)
  {
    a1 = 0;
    *long long v14 = 0;
    return a1;
  }
  uint64_t v21 = *(void *)(v12 + 96 * v10 + 48);
  if (v21)
  {
    uint64_t v22 = (const void *)(v21 + v15);
    if ((int)v15 + (int)a1 >= v19)
    {
      memcpy(a2, v22, v19 - v15);
      int v25 = *v20;
      *long long v14 = *v20;
      return (v25 - v15);
    }
    else
    {
      memcpy(a2, v22, a1);
      *v14 += a1;
    }
    return a1;
  }
  bzero(&byte_1004E5AF0, 0x400uLL);
  __strlcat_chk();
  __strlcat_chk();
  if (!byte_1004E5AF0)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFDF0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048D88();
    }
    return 0xFFFFFFFFLL;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFE10);
  }
  uint64_t v23 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    buf.st_dev = 136315138;
    *(void *)&buf.st_mode = &byte_1004E5AF0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Expecting firmware file: %s", (uint8_t *)&buf, 0xCu);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFCF0);
    }
  }
  uint64_t v24 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    buf.st_dev = 136315138;
    *(void *)&buf.st_mode = &byte_1004E5AF0;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Opening firmware file: %s", (uint8_t *)&buf, 0xCu);
  }
  if (sub_100014760(v17, (uint64_t)&byte_1004E5AF0, 0))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFD10);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048EC0();
    }
    return 0xFFFFFFFFLL;
  }
  int v27 = open(&byte_1004E5AF0, 0);
  if (v27 < 0)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFD30);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048DBC();
    }
    return 0xFFFFFFFFLL;
  }
  int v28 = v27;
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFD50);
  }
  int v29 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    buf.st_dev = 136315138;
    *(void *)&buf.st_mode = &byte_1004E5AF0;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Firmware file %s successfully opened", (uint8_t *)&buf, 0xCu);
  }
  memset(&buf, 0, sizeof(buf));
  if (fstat(v28, &buf) == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFD70);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_100048DF0();
      if (!v28) {
        return 0xFFFFFFFFLL;
      }
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (LODWORD(buf.st_size) != a1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFDD0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_100048E8C();
      if (!v28) {
        return 0xFFFFFFFFLL;
      }
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (read(v28, a2, SLODWORD(buf.st_size)) != a1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFD90);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_100048E24();
      if (!v28) {
        return 0xFFFFFFFFLL;
      }
      goto LABEL_66;
    }
LABEL_65:
    if (!v28) {
      return 0xFFFFFFFFLL;
    }
LABEL_66:
    close(v28);
    return 0xFFFFFFFFLL;
  }
  close(v28);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFDB0);
  }
  int v30 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    v31[0] = 68157954;
    v31[1] = a1;
    __int16 v32 = 2096;
    uint64_t v33 = a2;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "Raw firmware data loaded: %.*P", (uint8_t *)v31, 0x12u);
  }
  return a1;
}

uint64_t sub_1000142B8()
{
  int v0 = sub_100043434();
  BOOL v1 = (const char *)sub_100043B94();
  sub_100042E80();
  uint64_t v2 = sub_100013A68();
  if (!v0) {
    return 0;
  }
  int v3 = sub_100013BC0(v0, v1, v2);
  if (v3 == -1) {
    return 0;
  }
  if (byte_1004E4EB8) {
    uint64_t v4 = &qword_1004E4EC0;
  }
  else {
    uint64_t v4 = &qword_1004E4EC8;
  }
  return *(void *)(*v4 + 96 * v3 + 24);
}

uint64_t sub_100014340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v12 = (char *)qword_1004E4ED8;
  if (!qword_1004E4ED8)
  {
    uint64_t v12 = (char *)malloc_type_calloc(0x100uLL, 0x30uLL, 0x1050040F2291469uLL);
    qword_1004E4ED8 = (uint64_t)v12;
    if (!v12) {
      return 4661;
    }
  }
  int v13 = dword_1004E4EE0;
  if (dword_1004E4EE0 >= 0x100)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF7D0);
    }
    long long v14 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      int v17 = 136315650;
      uint64_t v18 = a1;
      __int16 v19 = 2080;
      uint64_t v20 = a2;
      __int16 v21 = 2080;
      uint64_t v22 = a3;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Out of memory, can't add %s_%s_%s.", (uint8_t *)&v17, 0x20u);
    }
    return 4661;
  }
  uint64_t result = 0;
  uint64_t v16 = &v12[48 * dword_1004E4EE0];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = a2;
  *((void *)v16 + 2) = a3;
  *((void *)v16 + 3) = a4;
  *((_DWORD *)v16 + 8) = a5;
  *((_DWORD *)v16 + 9) = 0;
  *((void *)v16 + 5) = a6;
  dword_1004E4EE0 = v13 + 1;
  return result;
}

void sub_1000144C4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void *sub_1000144F8()
{
  int v0 = sub_100043434();
  BOOL v1 = (const char *)sub_100043B94();
  sub_100042E80();
  uint64_t v2 = sub_100013A68();
  bzero(&unk_1004E4EE4, 0x400uLL);
  __strlcat_chk();
  int v3 = 0;
  if (v0 && v1)
  {
    uint64_t v4 = dword_1004E4EE0;
    if (!dword_1004E4EE0) {
      return 0;
    }
    uint64_t v5 = 0;
    for (uint64_t i = (const char **)(qword_1004E4ED8 + 16); ; i += 6)
    {
      if (!strcmp(v0, *(i - 2)) && !strcmp(v1, *(i - 1)))
      {
        int v7 = *i;
        if (!strcmp(v2, *i) || !strcmp("ALL", v7)) {
          break;
        }
      }
      if (v4 == ++v5) {
        return 0;
      }
    }
    __strlcat_chk();
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF7F0);
    }
    int v9 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 136315138;
      int v11 = &unk_1004E4EE4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Opening firmware file: %s", (uint8_t *)&v10, 0xCu);
    }
    int v3 = &unk_1004E4EE4;
    if (sub_100014760(v5, (uint64_t)&unk_1004E4EE4, 1))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF810);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100048EC0();
      }
      return 0;
    }
  }
  return v3;
}

void sub_10001472C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100014760(int a1, uint64_t a2, int a3)
{
  char v3 = a3;
  if (a3)
  {
    if (!**(unsigned char **)(qword_1004E4ED8 + 48 * a1 + 40))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFE30);
      }
      if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        return 10;
      }
      goto LABEL_28;
    }
  }
  else
  {
    if (byte_1004E4EB8) {
      uint64_t v6 = &qword_1004E4EC0;
    }
    else {
      uint64_t v6 = &qword_1004E4EC8;
    }
    if (!**(unsigned char **)(*v6 + 96 * a1 + 56))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFE50);
      }
      if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        return 10;
      }
LABEL_28:
      sub_100048EF4();
      return 10;
    }
  }
  int v7 = +[NSFileManager defaultManager];
  int v8 = +[NSString stringWithUTF8String:a2];
  if (![(NSFileManager *)v7 fileExistsAtPath:v8 isDirectory:0])
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFED0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048F90();
    }
    return 10;
  }
  int v9 = +[NSData dataWithContentsOfFile:v8];
  *(_OWORD *)md = 0u;
  long long v17 = 0u;
  int v10 = +[NSMutableString stringWithCapacity:64];
  if (!CC_SHA256([(NSData *)v9 bytes], (CC_LONG)[(NSData *)v9 length], md))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFE70);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100048F28();
    }
    return 14;
  }
  for (uint64_t i = 0; i != 32; ++i)
    [(NSMutableString *)v10 appendFormat:@"%02x", md[i]];
  uint64_t v12 = (const char *)[(NSMutableString *)v10 cStringUsingEncoding:4];
  if (v3)
  {
    if (strcmp(*(const char **)(qword_1004E4ED8 + 48 * a1 + 40), v12))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFE90);
      }
      if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        return 14;
      }
      goto LABEL_41;
    }
  }
  else
  {
    if (byte_1004E4EB8) {
      long long v14 = &qword_1004E4EC0;
    }
    else {
      long long v14 = &qword_1004E4EC8;
    }
    if (strcmp(*(const char **)(*v14 + 96 * a1 + 56), v12))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFEB0);
      }
      if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        return 14;
      }
LABEL_41:
      sub_100048F5C();
      return 14;
    }
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFEF0);
  }
  uint64_t v15 = qword_1004E6428;
  uint64_t result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
  if (result)
  {
    *(_WORD *)md = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "firmeare file SHA check passed", md, 2u);
    return 0;
  }
  return result;
}

void sub_100014BC8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100014BFC()
{
  int v0 = sub_100043434();
  BOOL v1 = (const char *)sub_100043B94();
  sub_100042E80();
  uint64_t v2 = sub_100013A68();
  int v3 = byte_1004E4EB8;
  uint64_t v4 = qword_1004E4EC0;
  uint64_t v5 = qword_1004E4EC8;
  uint64_t result = sub_100013BC0(v0, v1, v2);
  if (result != -1)
  {
    if (v3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = v5;
    }
    return *(unsigned int *)(v7 + 96 * (int)result + 40);
  }
  return result;
}

uint64_t sub_100014C84(int a1)
{
  uint64_t v2 = sub_100043434();
  int v3 = (const char *)sub_100043B94();
  sub_100042E80();
  uint64_t v4 = sub_100013A68();
  if (byte_1004E4EB8) {
    uint64_t v5 = &qword_1004E4EC0;
  }
  else {
    uint64_t v5 = &qword_1004E4EC8;
  }
  uint64_t v6 = *v5;
  long long v90 = 0u;
  long long v91 = 0u;
  long long v88 = 0u;
  long long v89 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  *(_OWORD *)__str = 0u;
  long long v77 = 0u;
  if (!v2) {
    return 10;
  }
  uint64_t v7 = v4;
  int v8 = (const void *)MGCopyAnswer();
  if (v8)
  {
    int v9 = v8;
    BOOL v10 = CFEqual(v8, @"Vendor") != 0;
    BOOL v11 = CFEqual(v9, @"Internal") != 0;
    CFRelease(v9);
  }
  else
  {
    BOOL v11 = 0;
    BOOL v10 = 0;
  }
  int v72 = a1;
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF830);
  }
  memset(&v73, 0, sizeof(v73));
  int v13 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315394;
    *(void *)uint64_t v75 = v2;
    *(_WORD *)&v75[8] = 2080;
    *(void *)&v75[10] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "platform = %s from %s", buf, 0x16u);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF850);
    }
  }
  long long v14 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315394;
    *(void *)uint64_t v75 = v3;
    *(_WORD *)&v75[8] = 2080;
    *(void *)&v75[10] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "chip = %s from %s", buf, 0x16u);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF870);
    }
  }
  uint64_t v15 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315394;
    *(void *)uint64_t v75 = v7;
    *(_WORD *)&v75[8] = 2080;
    *(void *)&v75[10] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "vendor = %s from %s", buf, 0x16u);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF890);
    }
  }
  uint64_t v16 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 67109634;
    *(_DWORD *)uint64_t v75 = v10;
    *(_WORD *)&v75[4] = 1024;
    *(_DWORD *)&v75[6] = v11;
    *(_WORD *)&v75[10] = 2080;
    *(void *)&v75[12] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "_isVendorInstall = %d and _isInternalInstall = %d from %s", buf, 0x18u);
  }
  if (v10 || v11)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF8B0);
    }
    long long v17 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      *(void *)uint64_t v75 = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "we are going to look for override script in %s", buf, 0xCu);
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF8D0);
    }
    __int16 v19 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      *(void *)uint64_t v75 = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "entered autoreleasepool from %s", buf, 0xCu);
    }
    uint64_t v20 = (void *)MGCopyAnswer();
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF8F0);
    }
    __int16 v21 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      id v22 = [v20 UTF8String];
      *(_DWORD *)stat buf = 136315394;
      *(void *)uint64_t v75 = v22;
      *(_WORD *)&v75[8] = 2080;
      *(void *)&v75[10] = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "HW Model = %s from %s", buf, 0x16u);
    }
    if (v20)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF910);
      }
      uint64_t v23 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315138;
        *(void *)uint64_t v75 = "runCommandForCurrentConfig";
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "entered HW Model section from %s", buf, 0xCu);
      }
      uint64_t v24 = (const char *)[v20 UTF8String];
      int v25 = "init";
      if (a1 != 2) {
        int v25 = "deepsleep";
      }
      if (a1 == 1) {
        int v25 = "boot";
      }
      snprintf(__str, 0x80uLL, "/etc/bluetool/%s.%s.script", v24, v25);
      CFRelease(v20);
      if (!stat(__str, &v73))
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF930);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100048FC4();
        }
        uint64_t v62 = fopen(__str, "r");
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DF950);
        }
        unsigned __int16 v63 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 136315394;
          *(void *)uint64_t v75 = __str;
          *(_WORD *)&v75[8] = 2080;
          *(void *)&v75[10] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "HW Model there is override script file %s and use it from %s", buf, 0x16u);
        }
        if (v62)
        {
          uint64_t v64 = (char *)malloc_type_malloc(0x400uLL, 0xEBC5F1E0uLL);
          if (v64)
          {
            unsigned __int16 v65 = v64;
            while (!feof(v62))
            {
              int v66 = fgets(v65, 1024, v62);
              if (v66)
              {
                unsigned __int16 v67 = v66;
                size_t v68 = strlen(v66);
                if (v68)
                {
                  v67[v68 - 1] = 0;
                  sub_10001AC20(v67, 0);
                }
              }
            }
            fclose(v62);
            free(v65);
          }
          else
          {
            fclose(v62);
          }
          return 0;
        }
      }
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF970);
    }
    uint64_t v26 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      *(void *)uint64_t v75 = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "didn't find HWModel override script. Continue to look for platform override script from %s", buf, 0xCu);
    }
    int v27 = "init";
    if (a1 != 2) {
      int v27 = "deepsleep";
    }
    if (a1 == 1) {
      int v27 = "boot";
    }
    snprintf(__str, 0x80uLL, "/etc/bluetool/%s.%s.script", v2, v27);
    if (!stat(__str, &v73))
    {
      long long v55 = fopen(__str, "r");
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DF990);
      }
      long long v56 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315394;
        *(void *)uint64_t v75 = __str;
        *(_WORD *)&v75[8] = 2080;
        *(void *)&v75[10] = "runCommandForCurrentConfig";
        _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "platform there is override script file %s and use it from %s", buf, 0x16u);
      }
      if (v55)
      {
        long long v57 = (char *)malloc_type_malloc(0x400uLL, 0xA812F090uLL);
        if (v57)
        {
          long long v58 = v57;
          while (!feof(v55))
          {
            long long v59 = fgets(v58, 1024, v55);
            if (v59)
            {
              unsigned int v60 = v59;
              size_t v61 = strlen(v59);
              if (v61)
              {
                v60[v61 - 1] = 0;
                sub_10001AC20(v60, 0);
              }
            }
          }
          fclose(v55);
          free(v58);
        }
        else
        {
          fclose(v55);
        }
        return 0;
      }
    }
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF9B0);
  }
  int v28 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315138;
    *(void *)uint64_t v75 = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "didn't find platform override script either. Will use builtinScript in firmwareList array from %s", buf, 0xCu);
  }
  int v29 = sub_100013BC0(v2, v3, v7);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DF9D0);
  }
  int v30 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 67109378;
    *(_DWORD *)uint64_t v75 = v29;
    *(_WORD *)&v75[4] = 2080;
    *(void *)&v75[6] = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "getFirmwarePosForPlatform fwPos = %d from %s", buf, 0x12u);
    uint64_t v31 = qword_1004E6420;
    if (v29 != -1) {
      goto LABEL_77;
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DF9F0);
    }
  }
  else if (v29 != -1)
  {
    goto LABEL_79;
  }
  __int16 v32 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315138;
    *(void *)uint64_t v75 = "runCommandForCurrentConfig";
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "entered fwPos == NO_FW_FOUND from %s", buf, 0xCu);
  }
  uint64_t v71 = v6;
  unsigned int v33 = 0;
  do
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFA10);
    }
    __int16 v34 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)stat buf = 67109120;
      *(_DWORD *)uint64_t v75 = v33;
      _os_log_error_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "No WiFi - Iteration %d", buf, 8u);
    }
    usleep(0x7A120u);
    int v35 = sub_100042E80();
    unsigned int v36 = sub_100013A68();
    int v37 = sub_100013BC0(v2, v3, v36);
    int v29 = v37;
    if (v33 > 8) {
      break;
    }
    if (v35 != -1) {
      break;
    }
    ++v33;
  }
  while (v37 == -1);
  uint64_t v31 = qword_1004E6420;
  if (v37 != -1)
  {
    uint64_t v6 = v71;
LABEL_77:
    if (v31 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFA50);
    }
LABEL_79:
    int v38 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 67109378;
      *(_DWORD *)uint64_t v75 = v29;
      *(_WORD *)&v75[4] = 2080;
      *(void *)&v75[6] = "runCommandForCurrentConfig";
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "final fwPos = %d from %s", buf, 0x12u);
    }
    switch(v72)
    {
      case 3:
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DFB70);
        }
        long long v45 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFB90);
          }
        }
        long long v46 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 67109378;
          *(_DWORD *)uint64_t v75 = v29;
          *(_WORD *)&v75[4] = 2080;
          *(void *)&v75[6] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "running deepsleep builtin script in firmwareList array at fwPos %d from %s", buf, 0x12u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFBB0);
          }
        }
        long long v47 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFBD0);
          }
        }
        long long v48 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v49 = *(void *)(v6 + 96 * v29 + 80);
          *(_DWORD *)stat buf = 134218242;
          *(void *)uint64_t v75 = v49;
          *(_WORD *)&v75[8] = 2080;
          *(void *)&v75[10] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "firmwareList at fwPos has deepsleep function pointer at %p from %s", buf, 0x16u);
        }
        uint64_t v70 = *(uint64_t (**)(void))(v6 + 96 * v29 + 80);
        if (v70) {
          return v70();
        }
        break;
      case 2:
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DFAF0);
        }
        long long v50 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFB10);
          }
        }
        long long v51 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 67109378;
          *(_DWORD *)uint64_t v75 = v29;
          *(_WORD *)&v75[4] = 2080;
          *(void *)&v75[6] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "running init builtin script in firmwareList array at fwPos %d from %s", buf, 0x12u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFB30);
          }
        }
        long long v52 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFB50);
          }
        }
        long long v53 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v54 = *(void *)(v6 + 96 * v29 + 72);
          *(_DWORD *)stat buf = 134218242;
          *(void *)uint64_t v75 = v54;
          *(_WORD *)&v75[8] = 2080;
          *(void *)&v75[10] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "firmwareList at fwPos has init function pointer %p from %s", buf, 0x16u);
        }
        uint64_t v70 = *(uint64_t (**)(void))(v6 + 96 * v29 + 72);
        if (v70) {
          return v70();
        }
        break;
      case 1:
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DFA70);
        }
        unsigned __int16 v39 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFA90);
          }
        }
        __int16 v40 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 67109378;
          *(_DWORD *)uint64_t v75 = v29;
          *(_WORD *)&v75[4] = 2080;
          *(void *)&v75[6] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "running boot builtin script in firmwareList array at fwPos %d from %s", buf, 0x12u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFAB0);
          }
        }
        __int16 v41 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "******************************", buf, 2u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004DFAD0);
          }
        }
        unsigned __int16 v42 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v43 = *(void *)(v6 + 96 * v29 + 64);
          int v44 = v29;
          *(_DWORD *)stat buf = 67109634;
          *(_DWORD *)uint64_t v75 = v29;
          *(_WORD *)&v75[4] = 2048;
          *(void *)&v75[6] = v43;
          *(_WORD *)&v75[14] = 2080;
          *(void *)&uint8_t v75[16] = "runCommandForCurrentConfig";
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "firmwareList at fwPos %d has boot function pointer %p from %s", buf, 0x1Cu);
        }
        else
        {
          int v44 = v29;
        }
        uint64_t v70 = *(uint64_t (**)(void))(v6 + 96 * v44 + 64);
        if (!v70) {
          return 5;
        }
        return v70();
      default:
        return 15;
    }
    return 5;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFA30);
  }
  v69 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)stat buf = 136315650;
    *(void *)uint64_t v75 = v2;
    *(_WORD *)&v75[8] = 2080;
    *(void *)&v75[10] = v3;
    *(_WORD *)&v75[18] = 2080;
    *(void *)&v75[20] = v36;
    _os_log_error_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_ERROR, "Error - no firmware for this platform.  Looking for %s %s %s", buf, 0x20u);
  }
  if (v35 == -1) {
    return 13;
  }
  else {
    return 10;
  }
}

void sub_100015F88(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100015FBC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100015FF0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016024(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016058(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001608C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000160C0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000160F4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016128(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001615C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016190(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000161C4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000161F8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001622C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016260(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016294(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000162C8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000162FC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016330(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016364(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016398(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000163CC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016400(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016434(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016468(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001649C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000164D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016504(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016538(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001656C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void *sub_1000165A0()
{
  return &unk_1004E52E4;
}

uint64_t sub_1000165AC()
{
  return __strlcpy_chk();
}

uint64_t sub_1000165C4(uint64_t a1, uint64_t a2, int a3)
{
  if (!qword_1004E56E8) {
    qword_1004E56E8 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
  }
  id v6 = [objc_alloc((Class)NSString) initWithUTF8String:a1];
  if (![(id)qword_1004E56E8 objectForKey:v6])
  {
    id v7 = [objc_alloc((Class)NSData) initWithBytes:a2 length:a3];
    [(id)qword_1004E56E8 setObject:v7 forKey:v6];
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFBF0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
      sub_10004902C();
    }
  }
  return 0;
}

void sub_1000166D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100016704(uint64_t a1, void *a2)
{
  int v3 = +[NSString stringWithUTF8String:a1];
  id v4 = [(id)qword_1004E56E8 objectForKey:v3];
  if (v4)
  {
    memcpy(a2, [v4 bytes], (size_t)[v4 length]);
    return 0;
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFC10);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000490A0();
    }
    return 22;
  }
}

void sub_1000167DC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100016810(int a1, void *a2)
{
  id v4 = sub_100043434();
  uint64_t v5 = (const char *)sub_100043B94();
  sub_100042E80();
  id v6 = sub_100013A68();
  id v7 = sub_10004386C();
  int v8 = sub_100013BC0(v4, v5, v6);
  if (v8 == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFC30);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100049108();
    }
    return 22;
  }
  int v9 = v8;
  if (byte_1004E4EB8) {
    BOOL v10 = &qword_1004E4EC0;
  }
  else {
    BOOL v10 = &qword_1004E4EC8;
  }
  if (!*(void *)(*v10 + 96 * v8 + 32))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFF10);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004913C();
    }
    return 22;
  }
  bzero(byte_1004E56F0, 0x400uLL);
  __strlcat_chk();
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFF30);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
    sub_100049498();
  }
  if (sub_1000173C4(v9, v7) == -1)
  {
    if (v7)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFF50);
      }
      __int16 v19 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)stat buf = 136315138;
        long long v47 = v7;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "SKU=%s specific PTB file not found. Attempting to load default (non-SKU) PTB file", buf, 0xCu);
      }
      if (sub_1000173C4(v9, "R") == -1)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004DFF70);
        }
        int v37 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_100049420(v37, v38, v39, v40, v41, v42, v43, v44);
        }
        return 22;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFF90);
      }
      uint64_t v20 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)stat buf = 136315138;
        long long v47 = byte_1004E56F0;
        uint64_t v12 = "Loaded default non-SKU PTB file: %s";
        int v13 = v20;
        uint32_t v14 = 12;
        goto LABEL_15;
      }
    }
    else
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFFB0);
      }
      __int16 v21 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_1000493A8(v21, v22, v23, v24, v25, v26, v27, v28);
      }
      if (sub_1000173C4(v9, "R") == -1) {
        return 22;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004DFFD0);
      }
      int v29 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100049330(v29, v30, v31, v32, v33, v34, v35, v36);
      }
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFFF0);
    }
    uint64_t v11 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)stat buf = 136315394;
      long long v47 = v7;
      __int16 v48 = 2080;
      uint64_t v49 = byte_1004E56F0;
      uint64_t v12 = "Loaded SKU=%s PTB file: %s";
      int v13 = v11;
      uint32_t v14 = 22;
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, v12, buf, v14);
    }
  }
  if (strlen(byte_1004E56F0) <= 0x1E)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0010);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100049170();
    }
    return 22;
  }
  int v15 = open(byte_1004E56F0, 0);
  if (v15 < 0)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFC50);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_1000491A4();
    }
    return 22;
  }
  int v16 = v15;
  memset(&v45, 0, sizeof(v45));
  if (fstat(v15, &v45) == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFC70);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_1000491D8();
      if (!v16) {
        return 22;
      }
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (LODWORD(v45.st_size) != a1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFCD0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_1000492FC();
      if (!v16) {
        return 22;
      }
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (read(v16, a2, SLODWORD(v45.st_size)) != a1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004DFC90);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      sub_100049294();
      if (!v16) {
        return 22;
      }
      goto LABEL_78;
    }
LABEL_77:
    if (!v16) {
      return 22;
    }
LABEL_78:
    close(v16);
    return 22;
  }
  close(v16);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004DFCB0);
  }
  long long v17 = qword_1004E6428;
  uint64_t result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG);
  if (result)
  {
    sub_10004920C((uint64_t)a2, a1, v17);
    return 0;
  }
  return result;
}

void sub_100016EB0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016EE4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016F18(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016F4C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016F80(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016FB4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100016FE8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001701C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017050(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017084(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000170B8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000170EC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017120(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017154(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017188(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000171BC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000171F0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017224(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017258(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001728C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000172C0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000172F4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017328(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001735C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017390(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000173C4(int a1, const char *a2)
{
  if (byte_1004E4EB8) {
    uint64_t v2 = &qword_1004E4EC0;
  }
  else {
    uint64_t v2 = &qword_1004E4EC8;
  }
  int v3 = "R";
  if (a2) {
    int v3 = a2;
  }
  id v4 = +[NSString stringWithFormat:@"%sK_%s_*.ptb", *(void *)(*v2 + 96 * a1 + 32), v3];
  uint64_t v13 = 0;
  uint64_t v5 = [(NSArray *)[+[NSFileManager defaultManager](NSFileManager, "defaultManager") contentsOfDirectoryAtPath:@"/usr/share/firmware/bluetooth/" error:&v13] filteredArrayUsingPredicate:+[NSPredicate predicateWithFormat:@"SELF like %@", v4]];
  if ([(NSArray *)v5 count])
  {
    id v6 = [(NSArray *)v5 objectAtIndex:0];
    [v6 UTF8String];
    __strlcat_chk();
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0030);
    }
    id v7 = qword_1004E6428;
    uint64_t result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
    if (result)
    {
      int v9 = [(NSString *)v4 UTF8String];
      id v10 = [v6 UTF8String];
      *(_DWORD *)stat buf = 136315394;
      int v15 = v9;
      __int16 v16 = 2080;
      long long v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "PTB file matching %s is %s", buf, 0x16u);
      return 0;
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0050);
    }
    uint64_t v11 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = [(NSString *)v4 UTF8String];
      *(_DWORD *)stat buf = 136315394;
      int v15 = v12;
      __int16 v16 = 2080;
      long long v17 = &unk_1004E56F0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "No PTB file matching %s in %s", buf, 0x16u);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

void sub_10001763C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017670(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000176A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000176D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001770C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017740(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017774(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000177A8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000177DC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100017828(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0xEu);
}

uint64_t sub_100017848()
{
  __int16 v7 = 0;
  memset(v6, 0, sizeof(v6));
  unint64_t v5 = 0;
  time_t v0 = time(0);
  time(0);
  do
  {
    off_1004E63F0(qword_1004E63C0, v6, 258, &v5);
    fwrite("Receive Test Statistics: ", 0x19uLL, 1uLL, __stderrp);
    if (v5)
    {
      uint64_t v1 = 0;
      int v2 = 0;
      do
      {
        fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v6 + v1));
        uint64_t v1 = ++v2;
      }
      while (v5 > v2);
    }
    fputc(10, __stderrp);
  }
  while (time(0) - v0 < qword_1004E4A28 && byte_1004E5EF0 == 0);
  return 0;
}

uint64_t sub_1000179B8(void *a1, unsigned char *a2, int a3)
{
  if (dword_1004E63C8)
  {
    __int16 v13 = 0;
    memset(v12, 0, sizeof(v12));
    uint64_t v11 = 0;
    off_1004E63E8(qword_1004E63C0, &unk_10004CA5E, 3);
    do
      off_1004E63F0(qword_1004E63C0, v12, 258, &v11);
    while (LOBYTE(v12[0]) != 14 && BYTE3(v12[0]) != 12 && BYTE4(v12[0]) != 20);
    if (a3) {
      printf("Local Name: %s\n", (const char *)v12 + 6);
    }
    if (a1)
    {
      size_t v8 = strlen((const char *)v12 + 6);
      memcpy(a1, (char *)v12 + 6, v8);
    }
    if (a2)
    {
      char v9 = strlen((const char *)v12 + 6);
      uint64_t result = 0;
      *a2 = v9;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    fwrite("Device not open yet, use 'device' to open it.\n", 0x2EuLL, 1uLL, __stderrp);
    return 3;
  }
  return result;
}

uint64_t sub_100017B2C(_WORD *a1, unsigned char *a2, _WORD *a3, unsigned char *a4, _WORD *a5, int a6)
{
  if (!dword_1004E63C8)
  {
    fwrite("Device not open yet, use 'device' to open it.\n", 0x2EuLL, 1uLL, __stderrp);
    return 3;
  }
  __int16 v19 = 0;
  memset(v18, 0, sizeof(v18));
  uint64_t v17 = 0;
  off_1004E63E8(qword_1004E63C0, &unk_10004CA5B, 3);
  do
    off_1004E63F0(qword_1004E63C0, v18, 258, &v17);
  while (LOBYTE(v18[0]) != 14 && BYTE3(v18[0]) != 16 && BYTE4(v18[0]) != 1);
  if (a6)
  {
    if (WORD5(v18[0]) > 0xEu)
    {
      if (WORD5(v18[0]) == 76)
      {
        uint32_t v14 = "Apple";
        goto LABEL_23;
      }
      if (WORD5(v18[0]) == 15)
      {
        uint32_t v14 = "Broadcom";
        goto LABEL_23;
      }
    }
    else
    {
      if (WORD5(v18[0]) == 10)
      {
        uint32_t v14 = "CSR";
        goto LABEL_23;
      }
      if (WORD5(v18[0]) == 13)
      {
        uint32_t v14 = "Texas Instruments";
LABEL_23:
        printf("Radio Manufacturer:            %s\n", v14);
        if (BYTE6(v18[0]) <= 8uLL) {
          __int16 v16 = off_1004E49E0[BYTE6(v18[0])];
        }
        else {
          __int16 v16 = "NULL";
        }
        printf("Bluetooth HCI Specification:   %s\n", v16);
        printf("Bluetooth HCI Revision:        0x%02X%02X\n", BYTE7(v18[0]), BYTE8(v18[0]));
        printf("Bluetooth LMP Version:         0x%02X\n", BYTE9(v18[0]));
        printf("Bluetooth LMP Subversion:      0x%02X%02X\n", BYTE13(v18[0]), BYTE12(v18[0]));
        goto LABEL_27;
      }
    }
    uint32_t v14 = "<Unknown>";
    goto LABEL_23;
  }
LABEL_27:
  if (a1) {
    *a1 = WORD5(v18[0]);
  }
  if (a2) {
    *a2 = BYTE6(v18[0]);
  }
  if (a3) {
    *a3 = *(_WORD *)((char *)v18 + 7);
  }
  if (a4) {
    *a4 = BYTE9(v18[0]);
  }
  uint64_t result = 0;
  if (a5) {
    *a5 = WORD6(v18[0]);
  }
  return result;
}

BOOL sub_100017D90(int a1, const char **a2, char **a3)
{
  __int16 v44 = 0;
  memset(v43, 0, sizeof(v43));
  unint64_t v41 = 0;
  if (a1 >= 2 && !strcmp(a2[1], "-h"))
  {
    fwrite("usage: hci <command>\n", 0x15uLL, 1uLL, __stderrp);
    fwrite("where <command> is one of:\n", 0x1BuLL, 1uLL, __stderrp);
    fprintf(__stderrp, "  %-16s : %s\n", "info", "Sends read local version to device");
    fprintf(__stderrp, "  %-16s : %s\n", "reset", "Sends reset command to device");
    fprintf(__stderrp, "  %-16s : %s\n", "dut", "Places device into dut test mode");
    fprintf(__stderrp, "  %-16s : %s\n", "sef", "Set event filter (Type, Condition, AutoAccept)");
    fprintf(__stderrp, "  %-16s : %s\n", "wse", "Write scan enable (Scan)");
    fprintf(__stderrp, "  %-16s : %s\n", "cmd", "Send HCI command (Command, Param1, Param2, Param3, ..., ParamN)");
    fprintf(__stderrp, "  %-16s : %s\n", "localName", "Sends the read local name command to device");
    fprintf(__stderrp, "  %-16s : %s\n", "rxTest", "Configure test time, run test or abort the test");
    return 0;
  }
  if (!dword_1004E63C8)
  {
    fwrite("Device not open yet, use 'device' to open it.\n", 0x2EuLL, 1uLL, __stderrp);
    return 0;
  }
  id v6 = a2[1];
  if (!strcmp(v6, "reset"))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0090);
    }
    __int16 v7 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      *(void *)&uint8_t buf[4] = "bluetool_command_hci";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "ready to send HCI_Reset command from %s", buf, 0xCu);
    }
    off_1004E63E8(qword_1004E63C0, &unk_10004CA58, 3);
    do
    {
      do
        off_1004E63F0(qword_1004E63C0, v43, 258, &v41);
      while (LOBYTE(v43[0]) != 14);
    }
    while (BYTE3(v43[0]) != 3 || BYTE4(v43[0]) != 12);
    if (BYTE5(v43[0]))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E0110);
      }
      char v9 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100049550(v9);
      }
      if (v41)
      {
        unint64_t v10 = 0;
        uint64_t v11 = qword_1004E6420;
        do
        {
          if (v11 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E0150);
          }
          uint64_t v12 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
          {
            int v13 = *((unsigned __int8 *)v43 + v10);
            *(_DWORD *)stat buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = v13;
            _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, " %02X", buf, 8u);
            uint64_t v11 = qword_1004E6420;
          }
          else
          {
            uint64_t v11 = -1;
          }
          ++v10;
        }
        while (v10 < v41);
      }
      goto LABEL_55;
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E00D0);
    }
    int v15 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      *(void *)&uint8_t buf[4] = "bluetool_command_hci";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "HCI_Reset completed from %s", buf, 0xCu);
    }
    __int16 v16 = "Issued HCI Reset";
LABEL_54:
    puts(v16);
    goto LABEL_55;
  }
  if (!strcmp(v6, "localName"))
  {
    sub_1000179B8(0, 0, 1);
    goto LABEL_55;
  }
  if (!strcmp(v6, "info"))
  {
    sub_100017B2C(0, 0, 0, 0, 0, 1);
    off_1004E63E8(qword_1004E63C0, &unk_10004CA61, 3);
    do
      off_1004E63F0(qword_1004E63C0, v43, 258, &v41);
    while (LOBYTE(v43[0]) != 14);
    printf("Bluetooth Address:             %02x:%02x:%02x:%02x:%02x:%02x\n", BYTE11(v43[0]), BYTE10(v43[0]), BYTE9(v43[0]), BYTE8(v43[0]), BYTE7(v43[0]), BYTE6(v43[0]));
    goto LABEL_55;
  }
  if (!strcmp(v6, "dut"))
  {
    off_1004E63E8(qword_1004E63C0, &unk_10004CA64, 3);
    do
      off_1004E63F0(qword_1004E63C0, v43, 258, &v41);
    while (LOBYTE(v43[0]) != 14);
    __int16 v16 = "DUT Mode Enabled!";
    goto LABEL_54;
  }
  if (!strcmp(v6, "sef"))
  {
    *(void *)stat buf = 0;
    if (a1 < 5) {
      return 0;
    }
    LOBYTE(v43[0]) = strtol(a2[2], (char **)buf, 0);
    BYTE1(v43[0]) = strtol(a2[3], (char **)buf, 0);
    BYTE2(v43[0]) = strtol(a2[4], (char **)buf, 0);
    sub_100018AA8(3077, (uint64_t)v43, 3uLL, (uint64_t)v43, &v41, 14);
    fwrite("Set Event Filter Response: ", 0x1BuLL, 1uLL, __stderrp);
    if (v41)
    {
      uint64_t v24 = 0;
      int v25 = 0;
      do
      {
        fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v43 + v24));
        uint64_t v24 = ++v25;
      }
      while (v41 > v25);
    }
    goto LABEL_101;
  }
  if (!strcmp(v6, "rfc"))
  {
    *(void *)stat buf = 0;
    if (a1 >= 3)
    {
      unsigned __int8 v26 = strtol(a2[2], (char **)buf, 0);
      LOBYTE(v43[0]) = v26;
      if (v26 != 49)
      {
        int v27 = v26;
        unint64_t v28 = 1;
LABEL_88:
        if (v27 == 80)
        {
          if (a1 < 6) {
            return 1;
          }
          BYTE1(v43[0]) = strtol(a2[3], (char **)buf, 0);
          BYTE2(v43[0]) = strtol(a2[4], (char **)buf, 0);
          BYTE3(v43[0]) = strtol(a2[5], (char **)buf, 0);
          unint64_t v28 = 4;
        }
        sub_100018AA8(64795, (uint64_t)v43, v28, (uint64_t)v43, &v41, 14);
        fwrite("Factory Calibration Read Table Response: ", 0x29uLL, 1uLL, __stderrp);
        if (v41)
        {
          for (unint64_t i = 0; i < v41; ++i)
            fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v43 + i));
        }
LABEL_101:
        fputc(10, __stderrp);
        goto LABEL_55;
      }
      if (a1 >= 7)
      {
        BYTE1(v43[0]) = strtol(a2[3], (char **)buf, 0);
        BYTE2(v43[0]) = strtol(a2[4], (char **)buf, 0);
        BYTE3(v43[0]) = strtol(a2[5], (char **)buf, 0);
        BYTE4(v43[0]) = strtol(a2[6], (char **)buf, 0);
        int v27 = LOBYTE(v43[0]);
        unint64_t v28 = 5;
        goto LABEL_88;
      }
    }
    return 1;
  }
  if (!strcmp(v6, "wse"))
  {
    *(void *)stat buf = 0;
    if (a1 < 3) {
      return 0;
    }
    LOBYTE(v43[0]) = strtol(a2[2], (char **)buf, 0);
    sub_100018AA8(3098, (uint64_t)v43, 1uLL, (uint64_t)v43, &v41, 14);
    fwrite("Write Scan Enable Response: ", 0x1CuLL, 1uLL, __stderrp);
    if (v41)
    {
      uint64_t v29 = 0;
      int v30 = 0;
      do
      {
        fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v43 + v29));
        uint64_t v29 = ++v30;
      }
      while (v41 > v30);
    }
    goto LABEL_101;
  }
  if (!strcmp(v6, "rxTest"))
  {
    *(void *)stat buf = 0;
    if (a1 < 3) {
      return 0;
    }
    uint64_t v31 = a2[2];
    if (!strcmp(v31, "-t"))
    {
      qword_1004E4A28 = strtol(a2[3], (char **)buf, 0);
      __int16 v16 = "Set test time";
    }
    else
    {
      if (strcmp(v31, "-a")) {
        goto LABEL_55;
      }
      byte_1004E5EF0 = 1;
      __int16 v16 = "Abort Receiving Rx test events";
    }
    goto LABEL_54;
  }
  if (!strcmp(v6, "cmd"))
  {
    *(void *)stat buf = 0;
    if (a1 < 3) {
      return 0;
    }
    unsigned __int16 v32 = strtol(a2[2], (char **)buf, 0);
    if (v32)
    {
      if (a1 < 4)
      {
        unint64_t v35 = 0;
      }
      else
      {
        unsigned __int8 v33 = 0;
        int v34 = 3;
        do
          *((unsigned char *)v43 + v33++) = strtol(a2[v34++], (char **)buf, 0);
        while (a1 > v34);
        unint64_t v35 = v33;
      }
      sub_100018AA8(v32, (uint64_t)v43, v35, (uint64_t)v43 + 2, &v41, 14);
      LOBYTE(v43[0]) = 14;
      BYTE1(v43[0]) = v41;
      v41 += 2;
      fwrite("HCI Command Response: ", 0x16uLL, 1uLL, __stderrp);
      if (v41)
      {
        uint64_t v37 = 0;
        int v38 = 0;
        do
        {
          fprintf(__stderrp, "%02X ", *((unsigned __int8 *)v43 + v37));
          uint64_t v37 = ++v38;
        }
        while (v41 > v38);
      }
      fputc(10, __stderrp);
      if (v32 == 64594 && pthread_create(&qword_1004E5FB8, 0, (void *(__cdecl *)(void *))sub_100017848, 0))
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E0190);
        }
        uint64_t v39 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v40 = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Create thread failed\n", v40, 2u);
        }
      }
    }
  }
  else
  {
    fwrite("Invalid HCI command!\n", 0x15uLL, 1uLL, __stderrp);
  }
LABEL_55:
  BOOL result = 0;
  if (!a3 || !v41) {
    return result;
  }
  uint64_t v17 = (char *)malloc_type_malloc(5 * v41, 0x33E2B6B2uLL);
  *a3 = v17;
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v19 = v41;
    if (v41)
    {
      unint64_t v20 = 0;
      __int16 v21 = v17;
      do
      {
        snprintf(v21, 5 * v19, "0x%02x", *((unsigned __int8 *)v43 + v20));
        v21[4] = 32;
        ++v20;
        unint64_t v19 = v41;
        v21 += 5;
      }
      while (v20 < v41);
      uint64_t v22 = 5 * v41 - 1;
    }
    else
    {
      uint64_t v22 = -1;
    }
    BOOL result = 0;
    v18[v22] = 0;
    return result;
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E01D0);
  }
  uint64_t v23 = qword_1004E6428;
  BOOL result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR);
  if (result)
  {
    sub_10004950C(v23);
    return 0;
  }
  return result;
}

void sub_1000189D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018A0C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018A40(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018A74(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100018AA8(__int16 a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, int a6)
{
  memset(v29, 0, sizeof(v29));
  long long v28 = 0u;
  long long v27 = 0u;
  long long v26 = 0u;
  long long v25 = 0u;
  long long v24 = 0u;
  long long v23 = 0u;
  long long v22 = 0u;
  long long v21 = 0u;
  long long v20 = 0u;
  long long v19 = 0u;
  long long v18 = 0u;
  long long v17 = 0u;
  long long v16 = 0u;
  long long __n_2 = 0u;
  if (a3 < 0x100)
  {
    uint64_t v6 = a4;
    uint64_t v12 = 0;
    __int16 v13 = a1;
    char __n_1 = a3;
    __memcpy_chk();
    off_1004E63E8(qword_1004E63C0, &v13, a3 + 3);
    if (v6)
    {
      do
        off_1004E63F0(qword_1004E63C0, &v13, 258, &v12);
      while (v13 != a6);
      uint64_t v10 = HIBYTE(v13);
      memcpy((void *)v6, &__n_1, HIBYTE(v13));
      uint64_t v6 = 0;
      *a5 = v10;
    }
  }
  else
  {
    uint64_t v6 = 1;
    fwrite("Invalid packet size specified. Ignoring command.", 0x30uLL, 1uLL, __stderrp);
  }
  return v6;
}

void sub_100018C20(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100018C54(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100018C88(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  return sub_100018AA8(64512, a1, a2, a3, a4, 255);
}

uint64_t sub_100018CA4()
{
  uint64_t result = sub_10001DA78();
  if (!result)
  {
    strcpy((char *)&xmmword_1004E5FC0, "AppleBT HCI device");
    dword_1004E6418 = 0;
    off_1004E63D0 = (uint64_t (*)(void, void, void))sub_100018D84;
    off_1004E63D8 = sub_100018D8C;
    off_1004E63E0 = (uint64_t (*)(void))sub_100018E6C;
    off_1004E63E8 = sub_100018E74;
    off_1004E63F0 = (uint64_t (*)(void, void, void, void))sub_100018F3C;
    off_1004E6400 = (uint64_t (*)(void))sub_10001917C;
    off_1004E63F8 = (uint64_t (*)(void, void))sub_1000191A0;
    qword_1004E63C0 = 0;
    dword_1004E63C8 = 1;
    off_1004E6408 = (uint64_t (*)(void))nullsub_5;
    off_1004E6410 = (uint64_t (*)(void))nullsub_6;
  }
  return result;
}

uint64_t sub_100018D84()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_100018D8C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = 1;
  if (a3 <= 0x406)
  {
    __int16 v4 = a3;
    bzero(v11, 0x406uLL);
    __int16 v8 = v4;
    char v5 = byte_1004E5EF1++;
    char v9 = v5;
    char v10 = 0;
    __memcpy_chk();
    inputStruct[0] = 0x10700000100;
    inputStruct[1] = &v8;
    if (sub_10001E594(1, (unsigned __int8 *)inputStruct)) {
      return 0xFFFFFFFFLL;
    }
    else {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_100018E6C()
{
  return 0;
}

uint64_t sub_100018E74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  memset(v22, 0, sizeof(v22));
  long long v21 = 0u;
  long long v20 = 0u;
  long long v19 = 0u;
  long long v18 = 0u;
  long long v17 = 0u;
  long long v16 = 0u;
  long long v15 = 0u;
  long long v14 = 0u;
  long long v13 = 0u;
  long long v12 = 0u;
  long long v11 = 0u;
  long long v10 = 0u;
  long long v9 = 0u;
  long long v8 = 0u;
  uint64_t result = 1;
  long long v7 = 0u;
  if (a3 <= 0x103)
  {
    char v6 = 1;
    uint64_t v5 = __memcpy_chk();
    return sub_100018D8C(v5, (uint64_t)&v6, a3 + 1);
  }
  return result;
}

uint64_t sub_100018F3C(uint64_t a1, void *a2, unint64_t a3, uint64_t *a4)
{
  bzero(&v17, 0x40AuLL);
  uint64_t outputStruct = 0;
  inputStruct[0] = 0x10600000105;
  inputStruct[1] = &v17;
  uint64_t v7 = sub_10001EA2C(1, inputStruct, &outputStruct);
  int v8 = byte_1004E5EF2++;
  if (v18[0] != v8)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0210);
    }
    long long v9 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004971C(v18, v9);
    }
    long long v10 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004969C(v18, v10);
    }
    byte_1004E5EF2 = v18[0] + 1;
  }
  if (BYTE4(outputStruct) == 1)
  {
    size_t v11 = v17 - 1;
    *a4 = v11;
    if (v11 > a3)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E02D0);
      }
      long long v12 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_100049594(a4, a3, v12);
      }
      *a4 = a3;
      size_t v11 = a3;
    }
    memcpy(a2, v19, v11);
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0290);
    }
    long long v13 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_100049620((unsigned __int8 *)&outputStruct + 4, v13);
    }
    return 0xFFFFFFFFLL;
  }
  return v7;
}

uint64_t sub_10001917C()
{
  uint64_t result = sub_10001E128();
  dword_1004E63C8 = 0;
  return result;
}

uint64_t sub_1000191A0()
{
  return 0xFFFFFFFFLL;
}

void sub_1000191B0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000191E4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100019218(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001924C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

BOOL sub_100019280()
{
  return sub_1000192A0() == 0;
}

uint64_t sub_1000192A0()
{
  if (dword_1004E5EF8) {
    return 0;
  }
  if (byte_1004E5EFC) {
    return 5;
  }
  CFDictionaryRef v1 = IOServiceNameMatching("AppleBTMgmt");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    byte_1004E5EFC = 1;
    return 5;
  }
  io_object_t v3 = MatchingService;
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, (io_connect_t *)&dword_1004E5EF8))
  {
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0310);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_1000497F0();
    }
    uint64_t v0 = 5;
  }
  else
  {
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0350);
    }
    __int16 v4 = qword_1004E5F08;
    uint64_t v0 = 0;
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 136315138;
      uint64_t v7 = "AppleBTMgmt";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_mgmt_connect: Service %s connected!\n", (uint8_t *)&v6, 0xCu);
      uint64_t v0 = 0;
    }
  }
  IOObjectRelease(v3);
  return v0;
}

void sub_100019450(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019480(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_1000194B0()
{
  if (qword_1004E5F00 != -1) {
    dispatch_once(&qword_1004E5F00, &stru_1004E0390);
  }
  uint64_t v0 = qword_1004E5F08;
  if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)stat buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "applebt_power_on: Calling method kAppleBTMgmtPowerOn!\n", buf, 2u);
  }
  uint64_t v1 = sub_1000192A0();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E03D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_1000498C0();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1004E5EF8, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0410);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049858();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0450);
      }
      __int16 v4 = qword_1004E5F08;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_power_on: BT device powered on/reset!\n", v6, 2u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001967C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000196AC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000196DC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001970C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001973C()
{
  uint64_t v0 = sub_1000192A0();
  if (v0)
  {
    uint64_t v1 = v0;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0490);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049990();
    }
  }
  else
  {
    uint64_t v2 = IOConnectCallMethod(dword_1004E5EF8, 1u, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v2)
    {
      uint64_t v1 = v2;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E04D0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049928();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0510);
      }
      uint64_t v3 = qword_1004E5F08;
      uint64_t v1 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "applebt_power_off: BT device powered off!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v1;
}

void sub_1000198AC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_1000198DC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001990C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001993C()
{
  uint64_t v0 = sub_1000192A0();
  if (v0)
  {
    uint64_t v1 = v0;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0550);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049A60();
    }
  }
  else
  {
    uint64_t v2 = IOConnectCallMethod(dword_1004E5EF8, 8u, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v2)
    {
      uint64_t v1 = v2;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0590);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_1000499F8();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E05D0);
      }
      uint64_t v3 = qword_1004E5F08;
      uint64_t v1 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "applebt_power_sleep: BT device powered Sleep!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v1;
}

void sub_100019AAC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019ADC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019B0C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_100019B3C()
{
  uint64_t v0 = sub_1000192A0();
  if (v0)
  {
    uint64_t v1 = v0;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0610);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049B30();
    }
  }
  else
  {
    uint64_t v2 = IOConnectCallMethod(dword_1004E5EF8, 9u, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v2)
    {
      uint64_t v1 = v2;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0650);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049AC8();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0690);
      }
      uint64_t v3 = qword_1004E5F08;
      uint64_t v1 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "applebt_exit_power_sleep: BT device exited power Sleep!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v1;
}

void sub_100019CAC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019CDC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019D0C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_100019D3C(unsigned __int8 a1)
{
  unsigned __int8 inputStruct = a1;
  uint64_t v1 = sub_1000192A0();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E06D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049C00();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1004E5EF8, 2u, 0, 0, &inputStruct, 1uLL, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0710);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049B98();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0750);
      }
      __int16 v4 = qword_1004E5F08;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_mode: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_100019EEC(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019F1C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100019F4C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_100019F7C(unsigned __int8 a1)
{
  unsigned __int8 inputStruct = a1;
  uint64_t v1 = sub_1000192A0();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0790);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049CD0();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1004E5EF8, 3u, 0, 0, &inputStruct, 1uLL, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E07D0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049C68();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0810);
      }
      __int16 v4 = qword_1004E5F08;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_level: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001A12C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A15C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A18C(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001A1BC(uint64_t *a1)
{
  uint64_t v2 = sub_1000192A0();
  if (v2)
  {
    uint64_t v3 = v2;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0850);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049DA0();
    }
  }
  else
  {
    uint64_t v4 = IOConnectCallMethod(dword_1004E5EF8, 4u, 0, 0, a1, 0x20uLL, 0, 0, 0, 0);
    if (v4)
    {
      uint64_t v3 = v4;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0890);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049D38();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E08D0);
      }
      uint64_t v5 = qword_1004E5F08;
      uint64_t v3 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *a1;
        uint64_t v7 = a1[1];
        uint64_t v8 = a1[2];
        uint64_t v9 = a1[3];
        *(_DWORD *)stat buf = 134218752;
        uint64_t v12 = v6;
        __int16 v13 = 2048;
        uint64_t v14 = v7;
        __int16 v15 = 2048;
        uint64_t v16 = v8;
        __int16 v17 = 2048;
        uint64_t v18 = v9;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_mask: set to <%016llX%016llX%016llX%016llX>!\n", buf, 0x2Au);
        return 0;
      }
    }
  }
  return v3;
}

void sub_10001A394(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A3C4(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A3F4(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001A424(int a1)
{
  int inputStruct = a1;
  uint64_t v1 = sub_1000192A0();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0910);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049E70();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1004E5EF8, 5u, 0, 0, &inputStruct, 4uLL, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0950);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049E08();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0990);
      }
      uint64_t v4 = qword_1004E5F08;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_capture_timeout: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10001A5D4(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A604(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A634(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001A664(int a1)
{
  int inputStruct = a1;
  uint64_t v1 = sub_1000192A0();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E09D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_100049F40();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_1004E5EF8, 6u, 0, 0, &inputStruct, 4uLL, 0, 0, 0, 0);
    uint64_t v2 = v3;
    if (v3 != -536870201 && v3 != 0)
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0A10);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049ED8();
      }
    }
  }
  return v2;
}

void sub_10001A780(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A7B0(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001A7E0(uint32_t a1, const void *a2, unsigned int a3)
{
  uint64_t v6 = sub_1000192A0();
  if (v6)
  {
    uint64_t v7 = v6;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0A50);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_10004A010();
    }
  }
  else
  {
    uint64_t v8 = IOConnectCallMethod(dword_1004E5EF8, a1, 0, 0, a2, a3, 0, 0, 0, 0);
    if (v8)
    {
      uint64_t v7 = v8;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0A90);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_100049FA8();
      }
    }
    else
    {
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0AD0);
      }
      uint64_t v9 = qword_1004E5F08;
      uint64_t v7 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "applebt_general_debug: completed!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v7;
}

void sub_10001A964(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A994(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001A9C4(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001A9F4(void *a1, size_t *a2)
{
  uint64_t v4 = sub_1000192A0();
  if (v4)
  {
    uint64_t v5 = v4;
    if (qword_1004E5F00 != -1) {
      dispatch_once(&qword_1004E5F00, &stru_1004E0B10);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
      sub_10004A0E0();
    }
  }
  else
  {
    uint64_t output = 0;
    uint32_t outputCnt = 1;
    uint64_t v6 = IOConnectCallMethod(dword_1004E5EF8, 7u, 0, 0, 0, 0, &output, &outputCnt, a1, a2);
    if (v6)
    {
      uint64_t v5 = v6;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0B50);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_ERROR)) {
        sub_10004A078();
      }
    }
    else
    {
      *a2 = output;
      if (qword_1004E5F00 != -1) {
        dispatch_once(&qword_1004E5F00, &stru_1004E0B90);
      }
      uint64_t v7 = qword_1004E5F08;
      uint64_t v5 = 0;
      if (os_log_type_enabled((os_log_t)qword_1004E5F08, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "applebt_read_crash_info: completed!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v5;
}

void sub_10001AB90(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001ABC0(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10001ABF0(id a1)
{
  qword_1004E5F08 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10001AC20(const char *a1, uint64_t a2)
{
  uint64_t v4 = strdup(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    bzero(__s2, 0x808uLL);
    uint64_t v6 = 0;
    uint64_t v7 = v5;
LABEL_3:
    while (1)
    {
      for (unint64_t i = v7; ; ++i)
      {
        ++v7;
        int v9 = *i;
        if (v9 != 9 && v9 != 32) {
          break;
        }
      }
      if (!*i) {
        break;
      }
      __s2[v6] = i;
      if (v6 == 256)
      {
        uint64_t v14 = 1;
        fwrite("Too many arguments.\n", 0x14uLL, 1uLL, __stderrp);
        goto LABEL_42;
      }
      ++v6;
      while (1)
      {
        int v11 = *v7++;
        int v10 = v11;
        if (!v11) {
          break;
        }
        if (v10 == 32 || v10 == 9)
        {
          *(v7 - 1) = 0;
          goto LABEL_3;
        }
      }
      --v7;
    }
    if (!v6 || (__int16 v13 = __s2[0], *__s2[0] == 35))
    {
LABEL_20:
      free(v5);
      return 0;
    }
    if (byte_1004E5F10 == 1) {
      add_history(a1);
    }
    if (strcmp("?", v13))
    {
      uint64_t v16 = &off_1004E0BD8;
      while (1)
      {
        __int16 v17 = *v16;
        if (!*v16) {
          break;
        }
        int v18 = strcmp((const char *)*(v16 - 2), v13);
        v16 += 3;
        if (!v18) {
          goto LABEL_31;
        }
      }
      if (!strcmp(v13, "quit") || !strcmp(v13, "exit"))
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E0D50);
        }
        long long v19 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 136315138;
          long long v21 = "invoke_command";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "ready to quit from %s", buf, 0xCu);
        }
        sub_10001AF50();
      }
      else
      {
        fprintf(__stderrp, "%s - unknown command.\n", v13);
      }
      goto LABEL_20;
    }
    __int16 v17 = sub_10001B7E4;
LABEL_31:
    optreset = 1;
    optind = 1;
    uint64_t v14 = ((uint64_t (*)(uint64_t, char **, uint64_t))v17)(v6, __s2, a2);
    if (v14) {
      fprintf(__stderrp, "%s returned %d\n", __s2[0], v14);
    }
    else {
LABEL_42:
    }
      free(v5);
  }
  else
  {
    fwrite("Unable to allocate memory!  Abort! Abort!\n", 0x2AuLL, 1uLL, __stderrp);
    return 2;
  }
  return v14;
}

void sub_10001AF1C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001AF50()
{
  sub_1000425C8();
  if (dword_1004E63C8)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0E90);
    }
    uint64_t v0 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v1 = 136315138;
      uint64_t v2 = "handleQuit";
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Device is opened and ready to close it from %s", (uint8_t *)&v1, 0xCu);
    }
    off_1004E6400(qword_1004E63C0);
  }
  if ((byte_1004E5F14 & 1) == 0) {
    exit(0);
  }
}

uint64_t sub_10001B05C(const char *a1)
{
  uint64_t v2 = fopen(a1, "r");
  if (v2)
  {
    uint64_t v3 = v2;
    fprintf(__stderrp, "Running %s.\n", a1);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0DD0);
    }
    uint64_t v4 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315394;
      *(void *)__int16 v13 = a1;
      *(_WORD *)&v13[8] = 2080;
      *(void *)&v13[10] = "runScriptFile";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "running script file %s from %s", buf, 0x16u);
    }
    uint64_t v5 = (char *)malloc_type_malloc(0x800uLL, 0xD38EFA3BuLL);
    if (v5)
    {
      while (!feof(v3))
      {
        uint64_t v6 = fgets(v5, 2048, v3);
        if (v6)
        {
          uint64_t v7 = v6;
          size_t v8 = strlen(v6);
          if (v8)
          {
            v7[v8 - 1] = 0;
            sub_10001AC20(v7, 0);
          }
        }
      }
    }
    free(v5);
    fclose(v3);
    return 0;
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0D90);
    }
    int v10 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *__error();
      *(_DWORD *)stat buf = 67109634;
      *(_DWORD *)__int16 v13 = v11;
      *(_WORD *)&v13[4] = 2080;
      *(void *)&v13[6] = a1;
      *(_WORD *)&v13[14] = 2080;
      *(void *)&v13[16] = "runScriptFile";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "got error %d when opening script file %s from %s", buf, 0x1Cu);
    }
    fprintf(__stderrp, "Unable to open file %s.\n", a1);
    return 3;
  }
}

void sub_10001B2AC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001B2E0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t start(int a1, char *const *a2)
{
  setvbuf(__stdoutp, 0, 2, 0);
  setvbuf(__stderrp, 0, 2, 0);
  sub_10001369C();
  while (1)
  {
    while (1)
    {
      int v4 = getopt(a1, a2, "c:hf:F:R");
      if (v4 <= 98) {
        break;
      }
      switch(v4)
      {
        case 'c':
          for (uint64_t result = (uint64_t)strtok(optarg, "\n"); result; uint64_t result = (uint64_t)strtok(0, "\n"))
            sub_10001AC20((const char *)result, 0);
          return result;
        case 'h':
          puts("BlueTool -- A Bluetooth Config/Control Tool");
          putchar(10);
          puts("Options:");
          puts("\t-h              This message.");
          puts("\t-f <filename>   Read commands from file at startup.");
          puts("\t-F sequence\t\truns the default script for a given sequence.");
          puts("\t-c <commands>   Execute commands from string at startup.");
          putchar(10);
          return 0;
        case 'f':
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E0E10);
          }
          int v9 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            int v13 = 136315394;
            uint64_t v14 = optarg;
            __int16 v15 = 2080;
            uint64_t v16 = "main";
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "try to run from command line an external script %s from %s", (uint8_t *)&v13, 0x16u);
          }
          return sub_10001B05C(optarg);
      }
    }
    if (v4 == 70)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E0E50);
      }
      int v10 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 136315394;
        uint64_t v14 = optarg;
        __int16 v15 = 2080;
        uint64_t v16 = "main";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "try to run from command line a builtinScript %s from %s", (uint8_t *)&v13, 0x16u);
      }
      int v11 = optarg;
      if (!strncmp(optarg, "boot", 5uLL))
      {
        int v12 = 1;
      }
      else if (!strncmp(v11, "init", 5uLL))
      {
        int v12 = 2;
      }
      else
      {
        if (strncmp(v11, "deepsleep", 0xAuLL)) {
          return 1;
        }
        int v12 = 3;
      }
      sub_100014C84(v12);
      return 0;
    }
    if (v4 == 82) {
      break;
    }
    if (v4 == -1)
    {
      bzero((char *)&xmmword_1004E5FC0 + 7, 0x459uLL);
      strcpy((char *)&xmmword_1004E5FC0, "<NONE>");
      rl_readline_name = "BlueTool";
      byte_1004E5F10 = 1;
      puts("\nWelcome to BlueTool... Rev 6.0\n");
      uint64_t v5 = getenv("BT_CHIP");
      if (v5 && !strcmp(v5, "ACI BT")) {
        sub_10001AC20("aci -V", 0);
      }
      for (unint64_t i = readline("bluetool-> "); i; unint64_t i = readline("bluetool-> "))
      {
        if (*i)
        {
          uint64_t v7 = strdup(i);
          sub_10001AC20(v7, 0);
          free(v7);
        }
      }
      sub_10001AF50();
      exit(0);
    }
  }
  byte_1004E5F14 = 1;

  return sub_100044968();
}

void sub_10001B77C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001B7B0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001B7E4()
{
  fwrite("BlueTool Help\n", 0xEuLL, 1uLL, __stderrp);
  uint64_t v0 = off_1004E0BB0;
  do
  {
    fprintf(__stderrp, "  %-16s : %s\n", *v0, v0[1]);
    int v1 = v0[5];
    v0 += 3;
  }
  while (v1);
  fwrite("Give any commands '-h' for more details.\n", 0x29uLL, 1uLL, __stderrp);
  return 0;
}

uint64_t sub_10001B87C(int a1, uint64_t a2)
{
  if (a1 == 2)
  {
    int v2 = strtoul(*(const char **)(a2 + 8), 0, 0);
    if (v2 >= 1) {
      usleep(1000 * v2);
    }
    return 0;
  }
  else
  {
    uint64_t v3 = 1;
    fwrite("usage: msleep <msec>\n", 0x15uLL, 1uLL, __stderrp);
  }
  return v3;
}

uint64_t sub_10001B8F4()
{
  return 0;
}

uint64_t sub_10001B920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((int)a1 < 6)
  {
    uint64_t v3 = 1;
    fwrite("usage: if <test> ? a : b", 0x18uLL, 1uLL, __stderrp);
    return v3;
  }
  uint64_t v7 = 0;
  int v8 = a1;
  uint64_t v9 = a2 + 8;
  while (strcmp(*(const char **)(v9 + 8 * v7), "?"))
  {
    if (v8 == ++v7)
    {
      uint64_t v7 = a1;
      goto LABEL_8;
    }
  }
  int v8 = v7 + 1;
LABEL_8:
  int v10 = v8 + 1;
  uint64_t v11 = (a1 - (v8 + 1));
  if ((int)a1 <= v8 + 1)
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = a2 + 8 * v10;
    while (strcmp(*(const char **)(v13 + 8 * v12), ":"))
    {
      if (!(1 - a1 + v8 + ++v12))
      {
        int v10 = v8 + v12 + 1;
        goto LABEL_15;
      }
    }
    int v10 = v8 + v12 + 2;
    uint64_t v11 = v12;
  }
LABEL_15:
  uint64_t v14 = (const char **)(a2 + 8);
  if ((int)a1 <= v10)
  {
    if (!sub_10001BBDC(v7, v14, 0)) {
      return 0;
    }
  }
  else if (!sub_10001BBDC(v7, v14, 0))
  {
    if (a1 != v10)
    {
      __int16 v15 = (const char **)(a2 + 8 * (v7 + v11 + 3));
      uint64_t v16 = (a1 - v10);
      goto LABEL_22;
    }
    return 0;
  }
  if (!v11) {
    return 1;
  }
  __int16 v15 = (const char **)(a2 + 8 * (v7 + 2));
  uint64_t v16 = v11;
LABEL_22:

  return sub_10001BBDC(v16, v15, a3);
}

uint64_t sub_10001BAC8()
{
  return 0;
}

uint64_t sub_10001BAD0()
{
  return 1;
}

uint64_t sub_10001BAD8(int a1, uint64_t a2, void *a3)
{
  if (a1 < 2)
  {
    uint64_t v5 = 0;
  }
  else
  {
    int v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = (const char **)(a2 + 8);
    uint64_t v7 = a1 - 1;
    do
    {
      fprintf(__stderrp, " %s", *v6);
      if (a3)
      {
        size_t v8 = strlen(*v6);
        uint64_t v9 = reallocf(v5, v8 + v4 + 1);
        uint64_t v5 = v9;
        if (v9)
        {
          int v10 = *v6;
          strcpy((char *)v9 + v4, *v6);
          int v11 = v4 + strlen(v10);
          int v4 = v11 + 1;
          *((unsigned char *)v5 + v11) = 32;
        }
      }
      ++v6;
      --v7;
    }
    while (v7);
  }
  fputc(10, __stderrp);
  if (a3) {
    *a3 = v5;
  }
  return 0;
}

uint64_t sub_10001BBDC(uint64_t a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (!strcmp("?", *a2))
  {
    uint64_t v9 = sub_10001B7E4;
LABEL_7:
    return ((uint64_t (*)(uint64_t, const char **, uint64_t))v9)(a1, a2, a3);
  }
  else
  {
    uint64_t v7 = &off_1004E0BD8;
    while (*v7)
    {
      int v11 = *v7;
      int v8 = strcmp((const char *)*(v7 - 2), v6);
      v7 += 3;
      if (!v8)
      {
        uint64_t v9 = v11;
        goto LABEL_7;
      }
    }
    return 1;
  }
}

void sub_10001BCAC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001BCE0(int a1, const char **a2)
{
  if (sub_100040DFC() == 6)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0ED0);
    }
    int v4 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      unsigned __int8 v33 = "bluetool_command_device";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HCI transport is hciTransportAPPLEBT from %s", buf, 0xCu);
    }
    char v5 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          char v6 = v5;
          int v7 = getopt(a1, (char *const *)a2, "hDC");
          if (v7 != 67) {
            break;
          }
          if (dword_1004E63C8)
          {
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004E0F50);
            }
            uint64_t v9 = qword_1004E6428;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)stat buf = 136315138;
              unsigned __int8 v33 = "bluetool_command_device";
              _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Device is opened and ready to close it for transport AppleBT from %s", buf, 0xCu);
            }
            off_1004E6400(qword_1004E63C0);
            if (qword_1004E6420 != -1) {
              dispatch_once(&qword_1004E6420, &stru_1004E0F90);
            }
            int v10 = qword_1004E6428;
            char v5 = 1;
            if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)stat buf = 136315138;
              unsigned __int8 v33 = "bluetool_command_device";
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Device is closed from %s", buf, 0xCu);
              char v5 = 1;
            }
          }
          else
          {
            char v5 = 1;
            fwrite("Device not Opened\n", 0x12uLL, 1uLL, __stderrp);
          }
        }
        if (v7 != 68) {
          break;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E0F10);
        }
        int v8 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 136315138;
          unsigned __int8 v33 = "bluetool_command_device";
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "IOS device and ready to open device IO from %s", buf, 0xCu);
        }
        sub_100018CA4();
        char v5 = 1;
      }
      char v5 = 0;
    }
    while (v7 != -1);
    if ((v6 & 1) == 0)
    {
      fprintf(__stderrp, "%s - Pick a device\n", *a2);
      fwrite("-D           - Open the default device.\n", 0x28uLL, 1uLL, __stderrp);
      __int16 v17 = __stderrp;
      int v18 = "-C           - Close the default device.\n";
      size_t v19 = 41;
LABEL_85:
      fwrite(v18, v19, 1uLL, v17);
      fputc(10, __stderrp);
    }
    return 0;
  }
  if (sub_100040DFC() == 7)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E0FD0);
    }
    int v11 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      unsigned __int8 v33 = "bluetool_command_device";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "HCI transport is PCIE and ready to open device from %s", buf, 0xCu);
    }
    while (1)
    {
      int v12 = getopt(a1, (char *const *)a2, "hD");
      if (v12 != 68) {
        break;
      }
      if (dword_1004E63C8) {
        BOOL v13 = off_1004E6400 == 0;
      }
      else {
        BOOL v13 = 1;
      }
      if (!v13)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E1010);
        }
        uint64_t v14 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 136315138;
          unsigned __int8 v33 = "bluetool_command_device";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Device is opened and ready to close it for transport PCIE from %s", buf, 0xCu);
        }
        off_1004E6400(qword_1004E63C0);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E1050);
        }
        __int16 v15 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat buf = 136315138;
          unsigned __int8 v33 = "bluetool_command_device";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Device is closed from %s", buf, 0xCu);
        }
        if (dword_1004E63C8) {
          goto LABEL_84;
        }
      }
      if (sub_100001F68()) {
        goto LABEL_93;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1090);
      }
      uint64_t v16 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315138;
        unsigned __int8 v33 = "bluetool_command_device";
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Device opened successfully from %s", buf, 0xCu);
      }
    }
    if (v12 != -1)
    {
      if (v12 != 104)
      {
        sub_100001EFC();
        return 1;
      }
      sub_100001EFC();
    }
    return 0;
  }
  optind = 1;
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E10D0);
  }
  long long v20 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315138;
    unsigned __int8 v33 = "bluetool_command_device";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "HCI transport is other types from %s", buf, 0xCu);
  }
  unint64_t v21 = 0;
  long long v22 = 0;
  while (1)
  {
    while (1)
    {
      int v23 = getopt(a1, (char *const *)a2, "hd:Ds:Sc");
      if (v23 < 99) {
        break;
      }
      if (v23 > 99)
      {
        switch(v23)
        {
          case 'd':
            long long v22 = optarg;
            break;
          case 's':
            unint64_t v21 = strtoul(optarg, 0, 0);
            break;
          case 'h':
            fprintf(__stderrp, "%s - Pick a device\n", *a2);
            fwrite("-d <device>  - Open the specified UART device.\n", 0x2FuLL, 1uLL, __stderrp);
            fwrite("-D           - Open the default device.\n", 0x28uLL, 1uLL, __stderrp);
            fwrite("-s <#>       - Configure the device for the given speed/baudrate.\n", 0x42uLL, 1uLL, __stderrp);
            __int16 v17 = __stderrp;
            int v18 = "-S           - Configure the device for using the speed/baudrate from the device tree.\n";
            size_t v19 = 87;
            goto LABEL_85;
        }
      }
      else
      {
        sub_10001CB9C(qword_1004E63C0);
      }
    }
    if (v23 == -1) {
      break;
    }
    if (v23 == 68)
    {
      long long v25 = getenv("BT_UART");
      if (v25) {
        long long v22 = v25;
      }
      else {
        long long v22 = "com.apple.uart.bluetooth";
      }
    }
    else if (v23 == 83)
    {
      unsigned int v24 = sub_100040B14();
      if (v24) {
        unint64_t v21 = v24;
      }
      else {
        unint64_t v21 = 2400000;
      }
    }
  }
  if (v22)
  {
    if (dword_1004E63C8) {
      BOOL v26 = off_1004E6400 == 0;
    }
    else {
      BOOL v26 = 1;
    }
    if (!v26)
    {
      off_1004E6400(qword_1004E63C0);
      if (dword_1004E63C8)
      {
LABEL_84:
        long long v27 = __stderrp;
        long long v28 = "Failed to close already opened device.\n";
        size_t v29 = 39;
LABEL_94:
        fwrite(v28, v29, 1uLL, v27);
        return 3;
      }
    }
    if (v21) {
      unsigned int v31 = v21;
    }
    else {
      unsigned int v31 = 115200;
    }
    printf("Opening %s @ %d baud.\n", v22, v31);
    if (sub_10001CCD8(v22, v31))
    {
LABEL_93:
      long long v27 = __stderrp;
      long long v28 = "Unable to open device.\n";
      size_t v29 = 23;
      goto LABEL_94;
    }
    off_1004E6408(qword_1004E63C0);
    return 0;
  }
  printf("Current Device: %s\n", (const char *)&xmmword_1004E5FC0);
  uint64_t result = 0;
  if (v21 && dword_1004E63C8)
  {
    printf("Setting speed to %d\n", v21);
    off_1004E63F8(qword_1004E63C0, v21);
    return 0;
  }
  return result;
}

void sub_10001C550(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C584(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C5B8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C5EC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C620(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C654(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C688(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C6BC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001C6F0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001C724(int a1, uint64_t a2)
{
  if (sub_100040DFC() == 6)
  {
    fwrite("autobaud not supported for AppleBT!\n", 0x24uLL, 1uLL, __stderrp);
    fflush(__stderrp);
    return 0;
  }
  __int16 v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v15 = 0;
  puts("bluetool_command_autobaud");
  useconds_t v4 = 1000;
  if (a1 >= 1)
  {
    if (a2)
    {
      char v5 = *(const char **)(a2 + 8);
      if (v5)
      {
        int v6 = atoi(v5);
        if (v6 >= 0) {
          useconds_t v4 = v6;
        }
        else {
          useconds_t v4 = 3000;
        }
      }
    }
  }
  if (dword_1004E63C8)
  {
    int v7 = 1;
    while (2)
    {
      if (v7 <= 8) {
        int v8 = 8;
      }
      else {
        int v8 = v7;
      }
LABEL_14:
      puts("bluetool_command_autobaud : reset ON");
      sub_100042824();
      usleep(0x3D090u);
      puts("bluetool_command_autobaud : reset OFF");
      sub_1000428F4();
      puts("bluetool_command_autobaud : flush");
      if (off_1004E6408)
      {
        usleep(0x3D090u);
        off_1004E6408(qword_1004E63C0);
      }
      int v9 = 0;
      while (!off_1004E63E0(qword_1004E63C0))
      {
        unint64_t v10 = 0;
        do
        {
          usleep(v4);
          off_1004E63D0(qword_1004E63C0, (char *)&unk_10004CA70 + v10, 1);
          usleep(0x3E8u);
          if (off_1004E63E0(qword_1004E63C0)) {
            BOOL v11 = 1;
          }
          else {
            BOOL v11 = v10 >= 0xF;
          }
          ++v10;
        }
        while (!v11);
        if (++v9 == 11)
        {
LABEL_29:
          if (v7++ != v8) {
            goto LABEL_14;
          }
LABEL_36:
          fwrite("BlueTool: ERROR -- unable to autobaud chip.\n", 0x2CuLL, 1uLL, __stderrp);
          return 6;
        }
      }
      while (off_1004E63E0(qword_1004E63C0))
      {
        __int16 v32 = 0;
        long long v30 = 0u;
        long long v31 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        long long v26 = 0u;
        long long v27 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        long long v18 = 0u;
        long long v19 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        if ((off_1004E63F0(qword_1004E63C0, &v16, 258, &v15) & 0x80000000) != 0) {
          goto LABEL_29;
        }
        puts("bluetool_command_autobaud : sleep again");
        usleep(0xEA60u);
      }
      usleep(0x493E0u);
      puts("bluetool_command_autobaud : HCI reset !");
      off_1004E63E8(qword_1004E63C0, &unk_10004CA58, 3);
      do
      {
        usleep(0x4E20u);
        long long v16 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        long long v19 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        long long v26 = 0u;
        long long v27 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        long long v31 = 0u;
        __int16 v32 = 0;
        off_1004E63F0(qword_1004E63C0, &v16, 258, &v15);
      }
      while (v16 == 15);
      if (v16 != 14)
      {
        printf("We got packet 0x%02x\n", v16);
        if (v7++ <= 7) {
          continue;
        }
        goto LABEL_36;
      }
      break;
    }
    puts("autobaud complete!");
    return 0;
  }
  fwrite("Device not currently opened.\n", 0x1DuLL, 1uLL, __stderrp);
  return 3;
}

uint64_t sub_10001CAB0(int a1, char **a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = getopt(a1, a2, "ht:");
      if (v4 != 116) {
        break;
      }
      strtoul(optarg, 0, 0);
    }
    if (v4 == -1) {
      break;
    }
    if (v4 == 104)
    {
      fwrite("(No Parameters)  - Places device in test mode indefinitely\n", 0x3BuLL, 1uLL, __stderrp);
      fwrite("-t <#>           - Places device in test mode for # seconds\n", 0x3CuLL, 1uLL, __stderrp);
      fputc(10, __stderrp);
      return 0;
    }
  }
  fwrite("not implemented", 0xFuLL, 1uLL, __stderrp);
  return 5;
}

uint64_t sub_10001CB9C(int a1)
{
  int v4 = 0;
  ioctl(a1, 0x4004746AuLL, &v4);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E1110);
  }
  int v1 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
  {
    if ((v4 & 0x20) != 0) {
      int v2 = "ASSERTED";
    }
    else {
      int v2 = "DEASSERTED";
    }
    *(_DWORD *)stat buf = 136315138;
    int v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "CTS is %s", buf, 0xCu);
  }
  return v4 & 0x20;
}

void sub_10001CCA4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001CCD8(const char *a1, unsigned int a2)
{
  uint64_t v8 = 0;
  *(void *)&v7[12] = 0;
  int v9 = 0;
  int v4 = socket(32, 1, 2);
  if (v4 < 0)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1150);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004A148();
    }
    return 0xFFFFFFFFLL;
  }
  unsigned int v5 = v4;
  *(_DWORD *)int v7 = 139296;
  memset(v10, 0, sizeof(v10));
  int v11 = 0;
  __strlcpy_chk();
  if (ioctl(v5, 0xC0644E03uLL, v10))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1190);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004A258();
    }
    return 0xFFFFFFFFLL;
  }
  *(_DWORD *)&v7[4] = v10[0];
  *(_DWORD *)&v7[8] = 0;
  if (connect(v5, (const sockaddr *)v7, 0x20u) == -1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E11D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004A1D4();
    }
    return 0xFFFFFFFFLL;
  }
  sub_10001D048(v5, a2);
  snprintf((char *)&xmmword_1004E5FC0, 0x3FFuLL, "UART - %s", a1);
  uint64_t result = 0;
  dword_1004E6418 = 0;
  off_1004E63D0 = (uint64_t (*)(void, void, void))sub_10001D11C;
  off_1004E63D8 = (uint64_t (*)(void, void, void))sub_10001D124;
  off_1004E63E0 = (uint64_t (*)(void))sub_10001D12C;
  off_1004E63E8 = (uint64_t (*)(void, void, void))sub_10001D1C0;
  off_1004E63F0 = (uint64_t (*)(void, void, void, void))sub_10001D298;
  off_1004E6400 = (uint64_t (*)(void))sub_10001D51C;
  off_1004E63F8 = (uint64_t (*)(void, void))sub_10001D048;
  qword_1004E63C0 = v5;
  dword_1004E63C8 = 1;
  off_1004E6408 = (uint64_t (*)(void))sub_10001D540;
  off_1004E6410 = (uint64_t (*)(void))sub_10001D548;
  return result;
}

void sub_10001CFAC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001CFE0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D014(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001D048(int a1, unsigned int a2)
{
  memset(&v6, 0, sizeof(v6));
  socklen_t v5 = 72;
  getsockopt(a1, 2, 1078490131, &v6, &v5);
  cfmakeraw(&v6);
  cfsetspeed(&v6, a2);
  v6.c_iflag |= 4uLL;
  v6.c_cflag = 232192;
  setsockopt(a1, 2, -2142735340, &v6, 0x48u);
  return 0;
}

uint64_t sub_10001D11C(int a1, char *a2, uint64_t a3)
{
  return sub_10001D71C(a1, a2, a3, 1uLL);
}

uint64_t sub_10001D124(int a1, char *a2, unint64_t a3)
{
  return sub_10001D71C(a1, a2, a3, a3);
}

BOOL sub_10001D12C(int a1)
{
  v3.tv_sec = 0;
  *(void *)&v3.tv_usec = 0;
  memset(&v4, 0, sizeof(v4));
  if (__darwin_check_fd_set_overflow(a1, &v4, 0)) {
    *(__int32_t *)((char *)v4.fds_bits + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << a1;
  }
  return select(a1 + 1, &v4, 0, 0, &v3) > 0;
}

uint64_t sub_10001D1C0(int a1, char *a2, uint64_t a3)
{
  __stat buf = 1;
  if (write(a1, &__buf, 1uLL) != 1)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1250);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004A2DC();
    }
    *__error() = 0;
  }
  return sub_10001D71C(a1, a2, a3, 1uLL);
}

uint64_t sub_10001D298(int a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v8 = (unsigned __int8 *)(a2 + 2);
  int v9 = &__stderrp;
  while (2)
  {
    while (1)
    {
      int v10 = 0;
      unsigned __int8 v25 = 0;
      while (1)
      {
        int v11 = read(a1, &v25 + v10, (1 - v10));
        if (v11 < 1)
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E1290);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_10004A388();
          }
          return 0xFFFFFFFFLL;
        }
        v10 += v11;
        if (v10 >= 1)
        {
          int v10 = 0;
          if (v25 - 5 >= 0xFFFFFFFD) {
            break;
          }
        }
      }
      if (v25 - 2 >= 2) {
        break;
      }
      fwrite("ACL/SCO DATA?!?!? What do you think I am? A Bluetooth stack?\n", 0x3DuLL, 1uLL, *v9);
      if (v25 == 2) {
        int v12 = 4;
      }
      else {
        int v12 = 3;
      }
      if ((int)sub_10001D8F0(a1, a2, v12) <= 0)
      {
        long long v19 = "read() H4_HCI_DATA header";
        goto LABEL_34;
      }
      BOOL v13 = v9;
      uint64_t v14 = a4;
      if (v25 == 2) {
        int v15 = *(unsigned __int8 *)(a2 + 3) << 8;
      }
      else {
        int v15 = 0;
      }
      unsigned int v16 = v15 | *v8;
      long long v17 = malloc_type_malloc(v16, 0x9ED3F775uLL);
      int v18 = sub_10001D8F0(a1, (uint64_t)v17, v16);
      free(v17);
      a4 = v14;
      int v9 = v13;
      if (v18 <= 0)
      {
        long long v19 = "read() H4_HCI_DATA body";
        goto LABEL_34;
      }
    }
    if (v25 != 4) {
      continue;
    }
    break;
  }
  long long v21 = v9;
  for (int i = 0; i <= 1; i += v23)
  {
    int v23 = read(a1, (void *)(a2 + i), (2 - i));
    if (v23 < 1)
    {
      long long v19 = "read() H4_HCI_EVENT header";
      goto LABEL_34;
    }
  }
  unint64_t v24 = *v8 + 2;
  if (v24 > a3)
  {
    fprintf(*v21, "buffer passed into %s is too small to hold %d bytes\n", "uart_get_hci_event", v24);
    return 0xFFFFFFFFLL;
  }
  if ((int)sub_10001D8F0(a1, (uint64_t)v8, *(unsigned __int8 *)(a2 + 1)) <= 0)
  {
    long long v19 = "read() H4_HCI_EVENT body";
LABEL_34:
    perror(v19);
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  if (a4) {
    *a4 = *(unsigned __int8 *)(a2 + 1);
  }
  return result;
}

uint64_t sub_10001D51C(int a1)
{
  uint64_t result = close(a1);
  dword_1004E63C8 = 0;
  return result;
}

uint64_t sub_10001D540(int a1)
{
  return tcflush(a1, 3);
}

void sub_10001D548(int a1)
{
  __stat buf = -86;
  tcflush(a1, 3);
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E12D0);
  }
  int v2 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)stat buf = 67109120;
    LODWORD(v8) = 170;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Spaming %02X to UART", buf, 8u);
  }
  while (1)
  {
    while (write(a1, &__buf, 1uLL) > 0)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1350);
      }
      timeval v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)stat buf = 67109120;
        LODWORD(v8) = __buf;
        _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "W: 0x%02x", buf, 8u);
      }
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1310);
    }
    fd_set v4 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      socklen_t v5 = __error();
      termios v6 = strerror(*v5);
      *(_DWORD *)stat buf = 136315138;
      uint64_t v8 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error writing byte to device: %s", buf, 0xCu);
    }
  }
}

uint64_t sub_10001D71C(int __fd, char *__buf, uint64_t a3, unint64_t a4)
{
  if (a3 < 1)
  {
LABEL_9:
    tcdrain(__fd);
    return 0;
  }
  else
  {
    ssize_t v8 = a3;
    while (1)
    {
      size_t v9 = v8 >= a4 ? a4 : v8;
      ssize_t v10 = write(__fd, __buf, v9);
      if (v10 <= 0) {
        break;
      }
      __buf += v10;
      BOOL v11 = v8 <= v10;
      v8 -= v10;
      if (v11) {
        goto LABEL_9;
      }
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1210);
    }
    BOOL v13 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = __error();
      int v15 = strerror(*v14);
      int v16 = 134218754;
      size_t v17 = v9;
      __int16 v18 = 2048;
      uint64_t v19 = a3 - v8;
      __int16 v20 = 2048;
      uint64_t v21 = a3;
      __int16 v22 = 2080;
      int v23 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Error writing %zu bytes %zd / %zu to device: %s", (uint8_t *)&v16, 0x2Au);
    }
    return 0xFFFFFFFFLL;
  }
}

void sub_10001D888(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D8BC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_10001D8F0(int a1, uint64_t a2, int a3)
{
  if (a3 >= 1)
  {
    LODWORD(v6) = 0;
    while (1)
    {
      int v7 = read(a1, (void *)(a2 + (int)v6), a3 - (int)v6);
      if (v7 < 1) {
        break;
      }
      uint64_t v6 = (v6 + v7);
      if ((int)v6 >= a3) {
        return v6;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_10001D960(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D994(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D9C8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001D9FC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10001DA58(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_10001DA78()
{
  if (byte_1004E5F18) {
    return 0;
  }
  mach_port_t v1 = dword_1004E5F30;
  if (dword_1004E5F30) {
    goto LABEL_4;
  }
  io_iterator_t notification = 0;
  timeval v3 = IONotificationPortCreate(kIOMainPortDefault);
  RunLoopSource = IONotificationPortGetRunLoopSource(v3);
  Current = CFRunLoopGetCurrent();
  CFRunLoopAddSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  CFDictionaryRef v6 = IOServiceNameMatching("AppleBTHci");
  uint64_t v7 = IOServiceAddMatchingNotification(v3, "IOServiceFirstMatch", v6, (IOServiceMatchingCallback)sub_10001ED5C, Current, &notification);
  if (v7)
  {
    uint64_t v0 = v7;
    if (qword_1004E5F20 != -1) {
      dispatch_once(&qword_1004E5F20, &stru_1004E1810);
    }
    ssize_t v8 = qword_1004E5F28;
    if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
      sub_10004A560(v0, v8, v9, v10, v11, v12, v13, v14);
    }
  }
  else
  {
    io_service_t v16 = IOIteratorNext(notification);
    for (dword_1004E5F34 = v16; !v16; dword_1004E5F34 = v16)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1850);
      }
      size_t v17 = qword_1004E5F28;
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315138;
        uint64_t v36 = "AppleBTHci";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "applebt_hci_connect: Couldn't find %s service, waiting for first match\n", buf, 0xCu);
      }
      CFRunLoopRun();
      io_service_t v16 = IOIteratorNext(notification);
    }
    uint64_t v0 = IOServiceOpen(v16, mach_task_self_, 0, (io_connect_t *)&dword_1004E5F30);
    if (v0)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1890);
      }
      __int16 v18 = qword_1004E5F28;
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        sub_10004A4F4(v0, v18, v19, v20, v21, v22, v23, v24);
      }
    }
  }
  CFRunLoopRemoveSource(Current, RunLoopSource, kCFRunLoopDefaultMode);
  IONotificationPortDestroy(v3);
  IOObjectRelease(notification);
  if (qword_1004E5F20 != -1) {
    dispatch_once(&qword_1004E5F20, &stru_1004E18D0);
  }
  unsigned __int8 v25 = qword_1004E5F28;
  if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315138;
    uint64_t v36 = "AppleBTHci";
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "applebt_hci_connect: Service %s connected!\n", buf, 0xCu);
  }
  if (!v0)
  {
    mach_port_t v1 = dword_1004E5F30;
LABEL_4:
    uint64_t v2 = IOConnectCallMethod(v1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v2)
    {
      uint64_t v0 = v2;
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E13D0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        sub_10004A410();
      }
    }
    else
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1410);
      }
      int v15 = qword_1004E5F28;
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315138;
        uint64_t v36 = "AppleBTHci";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "applebt_hci_open: Service %s opened!\n", buf, 0xCu);
      }
      uint64_t v0 = 0;
      byte_1004E5F18 = 1;
    }
    return v0;
  }
  if (qword_1004E5F20 != -1) {
    dispatch_once(&qword_1004E5F20, &stru_1004E1390);
  }
  long long v26 = qword_1004E5F28;
  if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
    sub_10004A488(v0, v26, v27, v28, v29, v30, v31, v32);
  }
  return v0;
}

void sub_10001DEF8(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001DF28(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

const char *sub_10001DF58(int a1)
{
  if (a1 > -536870182)
  {
    if (a1 > -536870161)
    {
      switch(a1)
      {
        case -536870160:
          return "kIOReturnNotFound";
        case 0:
          return "kIOReturnSuccess";
        case 5:
          return "KERN_FAILURE";
      }
    }
    else
    {
      switch(a1)
      {
        case -536870181:
          return "kIOReturnNoSpace";
        case -536870167:
          return "kIOReturnDeviceError";
        case -536870165:
          return "kIOReturnAborted";
      }
    }
    return "UNKNOWN";
  }
  if (a1 <= -536870199)
  {
    if (a1 == -536870211) {
      return "kIOReturnNoMemory";
    }
    if (a1 == -536870206) {
      return "kIOReturnBadArgument";
    }
    return "UNKNOWN";
  }
  switch(a1)
  {
    case -536870198:
      uint64_t result = "kIOReturnIOError";
      break;
    case -536870197:
    case -536870196:
      return "UNKNOWN";
    case -536870195:
      uint64_t result = "kIOReturnNotOpen";
      break;
    case -536870194:
      uint64_t result = "kIOReturnNotReadable";
      break;
    case -536870193:
      uint64_t result = "kIOReturnNotWritable";
      break;
    default:
      if (a1 != -536870185) {
        return "UNKNOWN";
      }
      uint64_t result = "kIOReturnOffline";
      break;
  }
  return result;
}

void sub_10001E0F8(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_10001E128()
{
  if (byte_1004E5F18)
  {
    byte_1004E5F18 = 0;
    uint64_t v0 = IOConnectCallMethod(dword_1004E5F30, 1u, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v0)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1490);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        sub_10004A5CC();
      }
    }
    IOServiceClose(dword_1004E5F30);
    dword_1004E5F30 = 0;
    IOObjectRelease(dword_1004E5F34);
    dword_1004E5F34 = 0;
    if (qword_1004E5F20 != -1) {
      dispatch_once(&qword_1004E5F20, &stru_1004E14D0);
    }
    mach_port_t v1 = qword_1004E5F28;
    if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 136315138;
      fd_set v4 = "AppleBTHci";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "applebt_hci_close: Service %s closed and disconnected!\n", buf, 0xCu);
    }
  }
  else
  {
    if (qword_1004E5F20 != -1) {
      dispatch_once(&qword_1004E5F20, &stru_1004E1450);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
      sub_10004A644();
    }
    return 5;
  }
  return v0;
}

void sub_10001E304(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E334(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E364(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_10001E394()
{
  if (byte_1004E5F18)
  {
    uint64_t v0 = IOConnectCallMethod(dword_1004E5F30, 4u, 0, 0, 0, 0, 0, 0, 0, 0);
    if (v0)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1550);
      }
      if (!os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
      sub_10004A678();
    }
    if (qword_1004E5F20 != -1) {
      dispatch_once(&qword_1004E5F20, &stru_1004E1590);
    }
LABEL_9:
    mach_port_t v1 = qword_1004E5F28;
    if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)stat buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "applebt_hci_transport_reset: HCI Transport was reset!\n", buf, 2u);
    }
    return v0;
  }
  if (qword_1004E5F20 != -1) {
    dispatch_once(&qword_1004E5F20, &stru_1004E1510);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
    sub_10004A6F0();
  }
  return 5;
}

void sub_10001E504(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E534(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E564(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_10001E594(int a1, unsigned __int8 *inputStruct)
{
  if (byte_1004E5F18)
  {
    uint64_t v34 = 0;
    memset(outputStruct, 0, sizeof(outputStruct));
    uint64_t v26 = 8 * a1;
    uint64_t v4 = IOConnectCallMethod(dword_1004E5F30, 2u, 0, 0, inputStruct, 16 * a1, 0, 0, outputStruct, (size_t *)&v26);
    if (v4)
    {
      uint64_t v5 = v4;
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1610);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        sub_10004A724();
      }
      return v5;
    }
    if (a1 < 1) {
      return 0;
    }
    uint64_t v5 = 0;
    uint64_t v7 = a1;
    ssize_t v8 = inputStruct + 1;
    for (int i = (unsigned __int8 *)outputStruct + 4; ; i += 8)
    {
      int v10 = *((_DWORD *)i - 1);
      if (v10) {
        break;
      }
LABEL_30:
      v8 += 16;
      if (!--v7) {
        return v5;
      }
    }
    if (v10 == -536870181)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1690);
      }
      __int16 v18 = qword_1004E5F28;
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
      {
        int v19 = *(v8 - 1);
        int v20 = *i;
        int v21 = *v8;
        *(_DWORD *)stat buf = 67109632;
        int v28 = v19;
        __int16 v29 = 1024;
        int v30 = v20;
        __int16 v31 = 1024;
        LODWORD(v32) = v21;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "applebt_hci_write: write to discardable pipe %d failed with no space, written %d out of %d packets\n", buf, 0x14u);
      }
      goto LABEL_30;
    }
    if (v10 == -536870198)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1650);
      }
      uint64_t v11 = qword_1004E5F28;
      if (!os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      int v12 = *(v8 - 1);
      int v13 = *i;
      int v14 = *v8;
      *(_DWORD *)stat buf = 67109632;
      int v28 = v12;
      __int16 v29 = 1024;
      int v30 = v13;
      __int16 v31 = 1024;
      LODWORD(v32) = v14;
      int v15 = v11;
      io_service_t v16 = "applebt_hci_write: write to non-discardable pipe %d failed with no space, written %d out of %d packets\n";
      uint32_t v17 = 20;
    }
    else
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E16D0);
      }
      uint64_t v22 = qword_1004E5F28;
      if (!os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      int v23 = *(v8 - 1);
      int v24 = *((_DWORD *)i - 1);
      unsigned __int8 v25 = sub_10001DF58(v24);
      *(_DWORD *)stat buf = 67109634;
      int v28 = v23;
      __int16 v29 = 1024;
      int v30 = v24;
      __int16 v31 = 2080;
      uint64_t v32 = v25;
      int v15 = v22;
      io_service_t v16 = "applebt_hci_write: write to pipe %d failed with (0x%08X, %s)\n";
      uint32_t v17 = 24;
    }
    _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v16, buf, v17);
LABEL_29:
    uint64_t v5 = 5;
    goto LABEL_30;
  }
  if (qword_1004E5F20 != -1) {
    dispatch_once(&qword_1004E5F20, &stru_1004E15D0);
  }
  if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
    sub_10004A79C();
  }
  return 5;
}

void sub_10001E93C(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E96C(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E99C(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E9CC(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001E9FC(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

uint64_t sub_10001EA2C(int a1, void *inputStruct, void *outputStruct)
{
  if (byte_1004E5F18)
  {
    uint64_t v11 = 8 * a1;
    size_t v5 = 16 * a1;
    while (1)
    {
      uint64_t v6 = IOConnectCallMethod(dword_1004E5F30, 3u, 0, 0, inputStruct, v5, 0, 0, outputStruct, (size_t *)&v11);
      if (v6 != -536870165) {
        break;
      }
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1790);
      }
      uint64_t v7 = qword_1004E5F28;
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "applebt_hci_read: method kAppleBTHciRead was aborted by signal! Read again\n", buf, 2u);
      }
    }
    uint64_t v8 = v6;
    if (v6)
    {
      if (qword_1004E5F20 != -1) {
        dispatch_once(&qword_1004E5F20, &stru_1004E1750);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
        sub_10004A7D0();
      }
    }
  }
  else
  {
    if (qword_1004E5F20 != -1) {
      dispatch_once(&qword_1004E5F20, &stru_1004E1710);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
      sub_10004A848();
    }
    return 5;
  }
  return v8;
}

void sub_10001EBE8(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EC18(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EC48(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

CFTypeRef sub_10001EC78()
{
  io_registry_entry_t v0 = dword_1004E5F34;
  if (dword_1004E5F34)
  {
    return IORegistryEntrySearchCFProperty(v0, "IODeviceTree", @"pipes", kCFAllocatorDefault, 1u);
  }
  else
  {
    if (qword_1004E5F20 != -1) {
      dispatch_once(&qword_1004E5F20, &stru_1004E17D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_ERROR)) {
      sub_10004A87C();
    }
    return 0;
  }
}

void sub_10001ED2C(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001ED5C(__CFRunLoop *a1)
{
  if (qword_1004E5F20 != -1) {
    dispatch_once(&qword_1004E5F20, &stru_1004E1910);
  }
  uint64_t v2 = qword_1004E5F28;
  if (os_log_type_enabled((os_log_t)qword_1004E5F28, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)timeval v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "DeviceFoundCB: releasing waiting thread\n", v3, 2u);
  }
  CFRunLoopStop(a1);
}

void sub_10001EDF4(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EE24(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EE54(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EE84(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EEB4(id a1)
{
  qword_1004E5F28 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_hci");
}

void sub_10001EEFC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

uint64_t sub_10001EF28()
{
  return sub_100013788((uint64_t)"f2281db3d48d320762314a16f0b2d337d5705cac", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_10002895C, (uint64_t)sub_100028B24, (uint64_t)sub_100028B34, (uint64_t)"BCM4350C5_19.1.235.4922_Pinotnoir_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_10004CA88, 0, 0);
}

uint64_t sub_10001EFB8()
{
  return sub_100013788((uint64_t)"f2281db3d48d320762314a16f0b2d337d5705cac", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100028BD0, (uint64_t)sub_100028D98, (uint64_t)sub_100028DA8, (uint64_t)"BCM4350C5_19.1.235.4923_Pinotnoir_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_1000606E7, 0, 0);
}

uint64_t sub_10001F048()
{
  return sub_100013788((uint64_t)"da743fdfcc2a22982c4961e06474a9baa478752b", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100028E44, (uint64_t)sub_10002900C, (uint64_t)sub_10002901C, (uint64_t)"BCM4350C5_19.1.235.4922_Pinotnoir_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_100074347, 0, 0);
}

uint64_t sub_10001F0D8()
{
  return sub_100013788((uint64_t)"da743fdfcc2a22982c4961e06474a9baa478752b", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_1000290B8, (uint64_t)sub_100029280, (uint64_t)sub_100029290, (uint64_t)"BCM4350C5_19.1.235.4923_Pinotnoir_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_100087FA6, 0, 0);
}

uint64_t sub_10001F168()
{
  return sub_100013788((uint64_t)"58d9c8f15fe9815df57e1e03ee6c1c54214bcbe2", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_10002932C, (uint64_t)sub_1000294F4, (uint64_t)sub_100029504, (uint64_t)"BCM4350C5_19.1.235.4920_Albarossa_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_10009BC06, 0, 0);
}

uint64_t sub_10001F1F8()
{
  return sub_100013788((uint64_t)"58d9c8f15fe9815df57e1e03ee6c1c54214bcbe2", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_1000295A0, (uint64_t)sub_100029768, (uint64_t)sub_100029778, (uint64_t)"BCM4350C5_19.1.235.4921_Albarossa_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_1000AF865, 0, 0);
}

uint64_t sub_10001F288()
{
  return sub_100013788((uint64_t)"cf6ae0d725548493801a64450abffb4626a6dc34", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100029814, (uint64_t)sub_1000299DC, (uint64_t)sub_1000299EC, (uint64_t)"BCM4350C5_19.1.235.4920_Albarossa_OS_MUR_BM_MCC_20210628.hcd", 0, 0x13C5Eu, (uint64_t)&unk_1000C34C5, 0, 0);
}

uint64_t sub_10001F318()
{
  return sub_100013788((uint64_t)"cf6ae0d725548493801a64450abffb4626a6dc34", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100029A88, (uint64_t)sub_100029C50, (uint64_t)sub_100029C60, (uint64_t)"BCM4350C5_19.1.235.4921_Albarossa_OS_USI_BM_MCC_20210628.hcd", 0, 0x13C5Fu, (uint64_t)&unk_1000D7124, 0, 0);
}

uint64_t sub_10001F3A8()
{
  return sub_100013788((uint64_t)"62374b79ab4ea32a2153b8702c4d05e76efe643e", (uint64_t)"BCM43452A2", (uint64_t)"MUR", (uint64_t)sub_100029CFC, (uint64_t)sub_100029ED8, (uint64_t)sub_100029EE8, (uint64_t)"BCM43452A2_19.1.144.601_Hans_OS_MUR_20210524.hcd", 0, 0x116BAu, (uint64_t)&unk_1000EAD84, 0, 0);
}

uint64_t sub_10001F438()
{
  return sub_100013788((uint64_t)"62374b79ab4ea32a2153b8702c4d05e76efe643e", (uint64_t)"BCM43452A2", (uint64_t)"TDK", (uint64_t)sub_100029F84, (uint64_t)sub_10002A160, (uint64_t)sub_10002A170, (uint64_t)"BCM43452A2_19.1.144.602_Hans_OS_TDK_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_1000FC43F, 0, 0);
}

uint64_t sub_10001F4C8()
{
  return sub_100013788((uint64_t)"62374b79ab4ea32a2153b8702c4d05e76efe643e", (uint64_t)"BCM43452A2", (uint64_t)"USI", (uint64_t)sub_10002A20C, (uint64_t)sub_10002A3E8, (uint64_t)sub_10002A3F8, (uint64_t)"BCM43452A2_19.1.144.603_Hans_OS_USI_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_10010DB37, 0, 0);
}

uint64_t sub_10001F558()
{
  return sub_100013788((uint64_t)"bd44635a8f05ab73f759d0531caff9e88fbcbff4", (uint64_t)"BCM43452A2", (uint64_t)"MUR", (uint64_t)sub_10002A494, (uint64_t)sub_10002A670, (uint64_t)sub_10002A680, (uint64_t)"BCM43452A2_19.1.144.601_Hans_OS_MUR_20210524.hcd", 0, 0x116BAu, (uint64_t)&unk_10011F22F, 0, 0);
}

uint64_t sub_10001F5E8()
{
  return sub_100013788((uint64_t)"bd44635a8f05ab73f759d0531caff9e88fbcbff4", (uint64_t)"BCM43452A2", (uint64_t)"TDK", (uint64_t)sub_10002A71C, (uint64_t)sub_10002A8F8, (uint64_t)sub_10002A908, (uint64_t)"BCM43452A2_19.1.144.602_Hans_OS_TDK_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_1001308EA, 0, 0);
}

uint64_t sub_10001F678()
{
  return sub_100013788((uint64_t)"bd44635a8f05ab73f759d0531caff9e88fbcbff4", (uint64_t)"BCM43452A2", (uint64_t)"USI", (uint64_t)sub_10002A9A4, (uint64_t)sub_10002AB80, (uint64_t)sub_10002AB90, (uint64_t)"BCM43452A2_19.1.144.603_Hans_OS_USI_20210524.hcd", 0, 0x116F7u, (uint64_t)&unk_100141FE2, 0, 0);
}

uint64_t sub_10001F708()
{
  return sub_100013788((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002AC2C, (uint64_t)sub_10002AE08, (uint64_t)sub_10002AE18, (uint64_t)"BCM4355C0_19.1.206.5415_Kristoff_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x16A22u, (uint64_t)&unk_1001536DA, 0, 0);
}

uint64_t sub_10001F798()
{
  return sub_1000165C4((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)&unk_1004C78F0, 210);
}

uint64_t sub_10001F7B0()
{
  return sub_100013788((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002AEB4, (uint64_t)sub_10002B090, (uint64_t)sub_10002B0A0, (uint64_t)"BCM4355C0_19.1.206.5417_Kristoff_OS_USI_MCC_TRS_20210531.hcd", 0, 0x16A22u, (uint64_t)&unk_10016A0FD, 0, 0);
}

uint64_t sub_10001F840()
{
  return sub_1000165C4((uint64_t)"5308f5a2a893cd444946cab7aec4ab2eb4821aeb", (uint64_t)&unk_1004C79C2, 210);
}

uint64_t sub_10001F858()
{
  return sub_100013788((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002B13C, (uint64_t)sub_10002B318, (uint64_t)sub_10002B328, (uint64_t)"BCM4355C0_19.1.206.5422_Sven_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x16A1Eu, (uint64_t)&unk_100180B20, 0, 0);
}

uint64_t sub_10001F8E8()
{
  return sub_1000165C4((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)&unk_1004C7A94, 210);
}

uint64_t sub_10001F900()
{
  return sub_100013788((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002B3C4, (uint64_t)sub_10002B5A0, (uint64_t)sub_10002B5B0, (uint64_t)"BCM4355C0_19.1.206.5423_Sven_OS_USI_MCC_TRS_20210531.hcd", 0, 0x16A1Eu, (uint64_t)&unk_10019753F, 0, 0);
}

uint64_t sub_10001F990()
{
  return sub_1000165C4((uint64_t)"9cb119b5ec7048720181a59cd70a45bd551efb15", (uint64_t)&unk_1004C7B66, 210);
}

uint64_t sub_10001F9A8()
{
  return sub_100013788((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002B64C, (uint64_t)sub_10002B828, (uint64_t)sub_10002B838, (uint64_t)"BCM4355C0_19.1.206.5405_Elsa_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001ADF5E, 0, 0);
}

uint64_t sub_10001FA38()
{
  return sub_1000165C4((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)&unk_1004C7C38, 210);
}

uint64_t sub_10001FA50()
{
  return sub_100013788((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002B8D4, (uint64_t)sub_10002BAB0, (uint64_t)sub_10002BAC0, (uint64_t)"BCM4355C0_19.1.206.5406_Elsa_OS_USI_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001C42EE, 0, 0);
}

uint64_t sub_10001FAE0()
{
  return sub_1000165C4((uint64_t)"a94c45df4cbe703d55f22864d18bdee9982d75ab", (uint64_t)&unk_1004C7D0A, 210);
}

uint64_t sub_10001FAF8()
{
  return sub_100013788((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)"BCM4355C0", (uint64_t)"MUR", (uint64_t)sub_10002BB5C, (uint64_t)sub_10002BD38, (uint64_t)sub_10002BD48, (uint64_t)"BCM4355C0_19.1.206.5420_Olaf_OS_MUR_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001DA67E, 0, 0);
}

uint64_t sub_10001FB88()
{
  return sub_1000165C4((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)&unk_1004C7DDC, 210);
}

uint64_t sub_10001FBA0()
{
  return sub_100013788((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)"BCM4355C0", (uint64_t)"USI", (uint64_t)sub_10002BDE4, (uint64_t)sub_10002BFC0, (uint64_t)sub_10002BFD0, (uint64_t)"BCM4355C0_19.1.206.5421_Olaf_OS_USI_MCC_TRS_20210531.hcd", 0, 0x1638Fu, (uint64_t)&unk_1001F0A0E, 0, 0);
}

uint64_t sub_10001FC30()
{
  return sub_1000165C4((uint64_t)"a819bec4fdfaa9e3845d57122e334f6844aeabb7", (uint64_t)&unk_1004C7EAE, 210);
}

uint64_t sub_10001FC48()
{
  return sub_100013788((uint64_t)"5aaa8971a82e827670bed8a5a6e819d1996e25f2", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10002C06C, (uint64_t)sub_10002C144, (uint64_t)sub_10002C154, (uint64_t)"BCM4377B2_21.1.238.6947_PCIE_Aladdin_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_Aladdin_OS_MUR_*", 0x37CA8u, 0, (uint64_t)"9401b7dc718c37a0057c0ed9ff7a288de9338e89e304625f229b8492d8e9882c", 0);
}

uint64_t sub_10001FCDC()
{
  return sub_100013788((uint64_t)"5aaa8971a82e827670bed8a5a6e819d1996e25f2", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10002C1C8, (uint64_t)sub_10002C2A0, (uint64_t)sub_10002C2B0, (uint64_t)"BCM4377B2_21.1.238.6948_PCIE_Aladdin_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_Aladdin_OS_USI_*", 0x37CA8u, 0, (uint64_t)"2d29d05d97aea5f47b13398019fbc2b1abde8947151f94b8b71e1c22555186f5", 0);
}

uint64_t sub_10001FD70()
{
  return sub_100013788((uint64_t)"6b8380a7888b152359a8a931bbda252fcd4285e6", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10002C324, (uint64_t)sub_10002C3FC, (uint64_t)sub_10002C40C, (uint64_t)"BCM4377B2_21.1.238.6949_PCIE_Genie_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_MUR_*", 0x37CA6u, 0, (uint64_t)"65ede5e78cb6d090596b8d521e59b3ea60fc87d8c96e96b45909e2bd77618440", 0);
}

uint64_t sub_10001FE04()
{
  return sub_100013788((uint64_t)"6b8380a7888b152359a8a931bbda252fcd4285e6", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10002C480, (uint64_t)sub_10002C558, (uint64_t)sub_10002C568, (uint64_t)"BCM4377B2_21.1.238.6950_PCIE_Genie_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_USI_*", 0x37CA6u, 0, (uint64_t)"52d9ed0ef51368235ced2eb5ba2bad17f381b70f2fee8dba7a5a23a9b4b65d0b", 0);
}

uint64_t sub_10001FE98()
{
  return sub_100013788((uint64_t)"21419d3e868feba477deda86fe09715abd611158", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10002C5DC, (uint64_t)sub_10002C6B4, (uint64_t)sub_10002C6C4, (uint64_t)"BCM4377B2_21.1.238.6949_PCIE_Genie_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_MUR_*", 0x37CA6u, 0, (uint64_t)"65ede5e78cb6d090596b8d521e59b3ea60fc87d8c96e96b45909e2bd77618440", 0);
}

uint64_t sub_10001FF2C()
{
  return sub_100013788((uint64_t)"21419d3e868feba477deda86fe09715abd611158", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10002C738, (uint64_t)sub_10002C810, (uint64_t)sub_10002C820, (uint64_t)"BCM4377B2_21.1.238.6950_PCIE_Genie_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_Genie_OS_USI_*", 0x37CA6u, 0, (uint64_t)"52d9ed0ef51368235ced2eb5ba2bad17f381b70f2fee8dba7a5a23a9b4b65d0b", 0);
}

uint64_t sub_10001FFC0()
{
  return sub_100013788((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)"BCM4357B1", (uint64_t)"MUR", (uint64_t)sub_10002C894, (uint64_t)sub_10002CA70, (uint64_t)sub_10002CA80, (uint64_t)"BCM4357B1_19.1.282.5167_Yoda_OS_MUR_20210524.hcd", 0, 0x2A1A9u, (uint64_t)&unk_100206D9E, 0, 0);
}

uint64_t sub_100020050()
{
  return sub_1000165C4((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)&unk_100230F48, 210);
}

uint64_t sub_100020068()
{
  return sub_100013788((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)"BCM4357B1", (uint64_t)"USI", (uint64_t)sub_10002CB1C, (uint64_t)sub_10002CCF8, (uint64_t)sub_10002CD08, (uint64_t)"BCM4357B1_19.1.282.5168_Yoda_OS_USI_20210524.hcd", 0, 0x2A1A6u, (uint64_t)&unk_10023101A, 0, 0);
}

uint64_t sub_1000200F8()
{
  return sub_1000165C4((uint64_t)"5f77620e1b58b059cd4c6be0a3568d4e5f7d2492", (uint64_t)&unk_10025B1C1, 210);
}

uint64_t sub_100020110()
{
  return sub_100013788((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002CDA4, (uint64_t)sub_10002CE7C, (uint64_t)sub_10002CE8C, (uint64_t)"BCM4378B1_22.3.540.3935_PCIE_Moana_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_Moana_OS_MUR_*", 0x5B177u, 0, (uint64_t)"a1d52737d316cc96359c73da03da8648f3cf873199607f0134f72f73c2c209bc", 0);
}

uint64_t sub_1000201A4()
{
  return sub_100013788((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002CF00, (uint64_t)sub_10002CFD8, (uint64_t)sub_10002CFE8, (uint64_t)"BCM4378B1_22.3.540.3936_PCIE_Moana_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_Moana_OS_USI_*", 0x5B177u, 0, (uint64_t)"1f4c2075be8f076e81b4b1e7207f39479e862eb5f0ebe284a1181847b91915fa", 0);
}

uint64_t sub_100020238()
{
  return sub_100013788((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002D05C, (uint64_t)sub_10002D134, (uint64_t)sub_10002D144, (uint64_t)"BCM4378B1_22.3.540.3933_PCIE_Hei_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_Hei_OS_MUR_*", 0x5B175u, 0, (uint64_t)"48b1f51fde1157f12514a60aec8851bf0d6e1e4badba69402bd30726a0add2b8", 0);
}

uint64_t sub_1000202CC()
{
  return sub_100013788((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002D1B8, (uint64_t)sub_10002D290, (uint64_t)sub_10002D2A0, (uint64_t)"BCM4378B1_22.3.540.3934_PCIE_Hei_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_Hei_OS_USI_*", 0x5B175u, 0, (uint64_t)"78d1340db81c708517ec1690c552eadac80d51da59e893371749a4b1797b5201", 0);
}

uint64_t sub_100020360()
{
  return sub_100013788((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002D314, (uint64_t)sub_10002D3EC, (uint64_t)sub_10002D3FC, (uint64_t)"BCM4378B1_22.3.540.3937_PCIE_Tala_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_Tala_OS_MUR_*", 0x5B176u, 0, (uint64_t)"dfdea023e5a43f4fc5b233489e49cd6b710c02b2e1caa6a8ca08c80c1de812a0", 0);
}

uint64_t sub_1000203F4()
{
  return sub_100013788((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002D470, (uint64_t)sub_10002D548, (uint64_t)sub_10002D558, (uint64_t)"BCM4378B1_22.3.540.3938_PCIE_Tala_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_Tala_OS_USI_*", 0x5B176u, 0, (uint64_t)"5b895976fd816af2870f0e0f2c07b37be65c5931c069dde9ae3c2126e54531e7", 0);
}

uint64_t sub_100020488()
{
  return sub_100013788((uint64_t)"c459fdb0eef455588dbc6f587c20a5372792bbf8", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10002D5CC, (uint64_t)sub_10002D6A4, (uint64_t)sub_10002D6B4, (uint64_t)"BCM4378B1_22.3.540.3939_PCIE_Fiti_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_Fiti_OS_MUR_*", 0x58EAEu, 0, (uint64_t)"bfa7c39632446c00bc99d2d871c9266e46d1b6f49f192ff95c522b058a16a9f5", 0);
}

uint64_t sub_10002051C()
{
  return sub_100013788((uint64_t)"c459fdb0eef455588dbc6f587c20a5372792bbf8", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_10002D728, (uint64_t)sub_10002D800, (uint64_t)sub_10002D810, (uint64_t)"BCM4378B1_22.3.540.3940_PCIE_Fiti_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_Fiti_OS_USI_*", 0x58EAEu, 0, (uint64_t)"317f7b4faaa30fe67634719a0938d4eabe29e1b37635ac81f01e7f435a775e9b", 0);
}

uint64_t sub_1000205B0()
{
  return sub_100013788((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002D884, (uint64_t)sub_10002D95C, (uint64_t)sub_10002D96C, (uint64_t)"BCM4387C2_22.2.603.2924_PCIE_Pistachio_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Pistachio*_OS_USI_*", 0x854D9u, 0, (uint64_t)"a53aa5af17c37b83d16d632ec27ae022acc6757e07e3fe546d77a1a4c55d4f41", 0);
}

uint64_t sub_100020644()
{
  return sub_100013788((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002D9E0, (uint64_t)sub_10002DAB8, (uint64_t)sub_10002DAC8, (uint64_t)"BCM4387C2_22.2.603.2923_PCIE_Pistachio_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Pistachio*_OS_STATS_*", 0x854DBu, 0, (uint64_t)"43f6dd91bcb112a885f917a7e5902e610594ece1c392948a43d653f84976451d", 0);
}

uint64_t sub_1000206D8()
{
  return sub_100014340((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2922_PCIE_Pistachio_CLPC_OS_LPM_USI_20240822.bin", 546009, (uint64_t)"3b4feb7f00d436cb3cef0aab37b862b8985f0adfc80515e19dd3a7c91be65bc9");
}

uint64_t sub_10002070C()
{
  return sub_100014340((uint64_t)"ddeeb91dc0e9cf1f146bff1f0289ec95d9c7e43f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2921_PCIE_Pistachio_CLPC_OS_LPM_STATS_20240822.bin", 546011, (uint64_t)"6e5caf324f1fe5a48f7051991b8feb44c1fe79ffa8b67761d520de750c4104b6");
}

uint64_t sub_100020740()
{
  return sub_100013788((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002DB3C, (uint64_t)sub_10002DC14, (uint64_t)sub_10002DC24, (uint64_t)"BCM4387C2_22.2.603.2920_PCIE_Cashew_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Cashew*_OS_USI_*", 0x854D6u, 0, (uint64_t)"0fefcfe35474273505e9c94e8427fa63e35a404a14e3e3b7780913e7b22f1499", 0);
}

uint64_t sub_1000207D4()
{
  return sub_100013788((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002DC98, (uint64_t)sub_10002DD70, (uint64_t)sub_10002DD80, (uint64_t)"BCM4387C2_22.2.603.2919_PCIE_Cashew_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Cashew*_OS_STATS_*", 0x854D8u, 0, (uint64_t)"49f71002e560884cd0f95851c94797963e8698de8f08ae4e8d98a9bdd2a5ce7a", 0);
}

uint64_t sub_100020868()
{
  return sub_100014340((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2918_PCIE_Cashew_CLPC_OS_LPM_USI_20240822.bin", 546006, (uint64_t)"46bdb19bd7d8100e692640f05704c296cdbcbe81e9e13a094892a7f3e7be9e62");
}

uint64_t sub_10002089C()
{
  return sub_100014340((uint64_t)"1297870ae430050765cdaff76c1998211f07221a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2917_PCIE_Cashew_CLPC_OS_LPM_STATS_20240822.bin", 546008, (uint64_t)"6b323ebca07a15e2bd493313495a8f45070e8c92c6a1c71455284bbfe79c933d");
}

uint64_t sub_1000208D0()
{
  return sub_100013788((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002DDF4, (uint64_t)sub_10002DECC, (uint64_t)sub_10002DEDC, (uint64_t)"BCM4387C2_22.2.603.2900_PCIE_Hazelnut_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Hazelnut*_OS_USI_*", 0x854D8u, 0, (uint64_t)"80923edbe424e5a4881188eb8343a7b4cb326e86b81247e5844c30d8bb9f6027", 0);
}

uint64_t sub_100020964()
{
  return sub_100013788((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002DF50, (uint64_t)sub_10002E028, (uint64_t)sub_10002E038, (uint64_t)"BCM4387C2_22.2.603.2899_PCIE_Hazelnut_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Hazelnut*_OS_STATS_*", 0x854DAu, 0, (uint64_t)"5da7ba42aa6d4acf58b154b1a622fb96daeec6870b14055cffe39a828b698a7d", 0);
}

uint64_t sub_1000209F8()
{
  return sub_100014340((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2898_PCIE_Hazelnut_CLPC_OS_LPM_USI_20240822.bin", 546008, (uint64_t)"953ab519b8138b264d2b2d168fb3d6981ea72462801cbbdbecc3bc7eebbfa60d");
}

uint64_t sub_100020A2C()
{
  return sub_100014340((uint64_t)"80c4b6a6939b496300b06364e53cc0e5850b2fe9", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2897_PCIE_Hazelnut_CLPC_OS_LPM_STATS_20240822.bin", 546010, (uint64_t)"6fb3520aea6a7455084098771caeadb422c149bceaddf69cd9f482469a4d1441");
}

uint64_t sub_100020A60()
{
  return sub_100013788((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E0AC, (uint64_t)sub_10002E184, (uint64_t)sub_10002E194, (uint64_t)"BCM4387C2_22.2.603.2916_PCIE_Almond_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Almond*_OS_USI_*", 0x854D6u, 0, (uint64_t)"d7a15570e84f6d178ff6d29da8d8ab5b780d34aa28dbedf00f5271a89a5514ec", 0);
}

uint64_t sub_100020AF4()
{
  return sub_100013788((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E208, (uint64_t)sub_10002E2E0, (uint64_t)sub_10002E2F0, (uint64_t)"BCM4387C2_22.2.603.2915_PCIE_Almond_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Almond*_OS_STATS_*", 0x854D8u, 0, (uint64_t)"b5354f6facce16a371a5e74f3cc1f0643d0b7b2b37cbbfbf04f1adb4ce287df5", 0);
}

uint64_t sub_100020B88()
{
  return sub_100014340((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2914_PCIE_Almond_CLPC_OS_LPM_USI_20240822.bin", 546006, (uint64_t)"28fd9937ff464dbf0b193c0c909eda02a625f841d93f4815aa7560ee0aa25e5e");
}

uint64_t sub_100020BBC()
{
  return sub_100014340((uint64_t)"a1ff9324325843097f0e83afdb841592167ae25d", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2913_PCIE_Almond_CLPC_OS_LPM_STATS_20240822.bin", 546008, (uint64_t)"92ee8a347effb4fd9230342c9cffcf299e4047b800281a26185e358f31799f98");
}

uint64_t sub_100020BF0()
{
  return sub_100013788((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E364, (uint64_t)sub_10002E43C, (uint64_t)sub_10002E44C, (uint64_t)"BCM4387C2_22.2.603.2948_PCIE_Mimosa_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Mimosa*_OS_USI_*", 0x86CCCu, 0, (uint64_t)"70f10944fbb56c182d4494a4b1e912acc8d372c4e6698a48a5ac5a74e79ea5ba", 0);
}

uint64_t sub_100020C84()
{
  return sub_100013788((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E4C0, (uint64_t)sub_10002E598, (uint64_t)sub_10002E5A8, (uint64_t)"BCM4387C2_22.2.603.2947_PCIE_Mimosa_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Mimosa*_OS_STATS_*", 0x86CCEu, 0, (uint64_t)"b8dfe42fa7168d5bf23479f6f162f8d9216a87f0242e03c61649fdea4de054f1", 0);
}

uint64_t sub_100020D18()
{
  return sub_100014340((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2946_PCIE_Mimosa_CLPC_OS_LPM_USI_20240822.bin", 552140, (uint64_t)"eae34420292a4b760d711a007eacc2f39d2d86d992947c2ab4c9f45684e26dc4");
}

uint64_t sub_100020D4C()
{
  return sub_100014340((uint64_t)"e153ccb9f39350dfd963a37f6de50e33b9f05607", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2945_PCIE_Mimosa_CLPC_OS_LPM_STATS_20240822.bin", 552142, (uint64_t)"f577639219050fcd77f07807d34f6ee025eb4af684e2b22dc2d7f4f43d695451");
}

uint64_t sub_100020D80()
{
  return sub_100013788((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E61C, (uint64_t)sub_10002E6F4, (uint64_t)sub_10002E704, (uint64_t)"BCM4387C2_22.2.603.2940_PCIE_Lilac_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Lilac*_OS_USI_*", 0x86CD0u, 0, (uint64_t)"a4920b4651cd5768d502e6ac03f6bb60cca1e561c79d24f09ad7a7b10ff84a7c", 0);
}

uint64_t sub_100020E14()
{
  return sub_100013788((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002E778, (uint64_t)sub_10002E850, (uint64_t)sub_10002E860, (uint64_t)"BCM4387C2_22.2.603.2939_PCIE_Lilac_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Lilac*_OS_STATS_*", 0x86CCDu, 0, (uint64_t)"7747fadfbc008c76b3cba56fa848ee69afda5a05cca80132b8fd7af7b0f3f0aa", 0);
}

uint64_t sub_100020EA8()
{
  return sub_100014340((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2938_PCIE_Lilac_CLPC_OS_LPM_USI_20240822.bin", 552144, (uint64_t)"b3b9e397a3cf3e29721fbf649968372a13265682c224aad4bf694924fa302e73");
}

uint64_t sub_100020EDC()
{
  return sub_100014340((uint64_t)"5372a3e8dacaa21c3b4ef319f8d37b32a90a9f28", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2937_PCIE_Lilac_CLPC_OS_LPM_STATS_20240822.bin", 552141, (uint64_t)"44d3f52b1b3747ad5f4366a6afc2272c1eb4e0369ab5b2c7534b8105278676ff");
}

uint64_t sub_100020F10()
{
  return sub_100013788((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002E8D4, (uint64_t)sub_10002E9AC, (uint64_t)sub_10002E9BC, (uint64_t)"BCM4387C2_22.2.603.2936_PCIE_Acacia_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Acacia*_OS_USI_*", 0x86CCCu, 0, (uint64_t)"c0198109f399475f494b1aa787153a49446716873e1f8964c6a2ab7e941f8794", 0);
}

uint64_t sub_100020FA4()
{
  return sub_100013788((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002EA30, (uint64_t)sub_10002EB08, (uint64_t)sub_10002EB18, (uint64_t)"BCM4387C2_22.2.603.2935_PCIE_Acacia_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Acacia*_OS_STATS_*", 0x86CCEu, 0, (uint64_t)"3375d0a7ac2b61005b17adaac5d449d6462b36d2d21ddaacb35074534545a35a", 0);
}

uint64_t sub_100021038()
{
  return sub_100014340((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2934_PCIE_Acacia_CLPC_OS_LPM_USI_20240822.bin", 552140, (uint64_t)"3fba79737a808bbd13da6c1fd1c064ce5bd68d16fcc07b4784683e6005267e02");
}

uint64_t sub_10002106C()
{
  return sub_100014340((uint64_t)"1ee557dba0574cdd597fe5a73c6a7b25c332872a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2933_PCIE_Acacia_CLPC_OS_LPM_STATS_20240822.bin", 552142, (uint64_t)"2f4fe38239ea8024b78f9297096118487ebc36130b3cc45b7e439e30204be9bd");
}

uint64_t sub_1000210A0()
{
  return sub_100013788((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002EB8C, (uint64_t)sub_10002EC64, (uint64_t)sub_10002EC74, (uint64_t)"BCM4387C2_22.2.603.2908_PCIE_Camellia_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Camellia*_OS_USI_*", 0x86CCEu, 0, (uint64_t)"c017b32dcf64802e9c771cb456c989c007e53d41d1c445229c8e06a5de8f7196", 0);
}

uint64_t sub_100021134()
{
  return sub_100013788((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002ECE8, (uint64_t)sub_10002EDC0, (uint64_t)sub_10002EDD0, (uint64_t)"BCM4387C2_22.2.603.2907_PCIE_Camellia_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Camellia*_OS_STATS_*", 0x86CD0u, 0, (uint64_t)"85d4d1e5e1e02072c5128e299d415bafed283e08e821541b0e04495f02b4e701", 0);
}

uint64_t sub_1000211C8()
{
  return sub_100014340((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2906_PCIE_Camellia_CLPC_OS_LPM_USI_20240822.bin", 552142, (uint64_t)"c2465151054d8760b9f1d7a6abf1947f289c24ce80e3511be6994e79da442e4f");
}

uint64_t sub_1000211FC()
{
  return sub_100014340((uint64_t)"e187b2b2dfa8f91c42089c199b6af4f1c633ae9e", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2905_PCIE_Camellia_CLPC_OS_LPM_STATS_20240822.bin", 552144, (uint64_t)"cdf0ed072283a5ca3c170167e39f7d7f7c70464201fd4a0e25cc1a8ee919e556");
}

uint64_t sub_100021230()
{
  return sub_100013788((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002EE44, (uint64_t)sub_10002EF1C, (uint64_t)sub_10002EF2C, (uint64_t)"BCM4387C2_22.2.603.2944_PCIE_Mahonia_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Mahonia*_OS_USI_*", 0x86E19u, 0, (uint64_t)"448075cc8e60b0f40ce90dab46f81c116a91c34ef8d9b7f6c8f70112a3f9d9c8", 0);
}

uint64_t sub_1000212C4()
{
  return sub_100013788((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002EFA0, (uint64_t)sub_10002F078, (uint64_t)sub_10002F088, (uint64_t)"BCM4387C2_22.2.603.2943_PCIE_Mahonia_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Mahonia*_OS_STATS_*", 0x86E1Bu, 0, (uint64_t)"13a16b0e030d14aa5c7adda97c2e778046cb6f60a06657b454e21ca66872f9ff", 0);
}

uint64_t sub_100021358()
{
  return sub_100014340((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2942_PCIE_Mahonia_CLPC_OS_LPM_USI_20240822.bin", 552473, (uint64_t)"3038cc195f11d0a727aaf5ac9a94fbb735bf1bd9f73ea8de88d36b0c0f86193e");
}

uint64_t sub_10002138C()
{
  return sub_100014340((uint64_t)"3bcf064f8c14171ba8fcea074bd60aed79caa8aa", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2941_PCIE_Mahonia_CLPC_OS_LPM_STATS_20240822.bin", 552475, (uint64_t)"503852dcc991ede81e160e8093763df3bb42d941ee6729801029f22355c118b9");
}

uint64_t sub_1000213C0()
{
  return sub_100013788((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002F0FC, (uint64_t)sub_10002F1D4, (uint64_t)sub_10002F1E4, (uint64_t)"BCM4387C2_22.2.603.2976_PCIE_Koa_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Koa*_OS_USI_*", 0x871B8u, 0, (uint64_t)"a989d91933ae5b0071b23161c490ef1c43b47a217ff29c500ec67a1fabe3174d", 0);
}

uint64_t sub_100021454()
{
  return sub_100013788((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002F258, (uint64_t)sub_10002F330, (uint64_t)sub_10002F340, (uint64_t)"BCM4387C2_22.2.603.2975_PCIE_Koa_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Koa*_OS_STATS_*", 0x871BAu, 0, (uint64_t)"d8e5ea8ec8f9694b77ed25504d0f3e5e42d2107e288822b7e4cdc4fe56e6e1c7", 0);
}

uint64_t sub_1000214E8()
{
  return sub_100013788((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002F3B4, (uint64_t)sub_10002F48C, (uint64_t)sub_10002F49C, (uint64_t)"BCM4387C2_22.2.603.2971_PCIE_Koa_CLPC_OS_Amkor_20240822.bin", (uint64_t)"BCM4387C2_*_Koa*_OS_Amkor_*", 0x871BAu, 0, (uint64_t)"d8d415802af041d07a6a999da8e57066e0aae8f9a38434c87cd40436042bf5f8", 0);
}

uint64_t sub_10002157C()
{
  return sub_100014340((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2974_PCIE_Koa_CLPC_OS_LPM_USI_20240822.bin", 553400, (uint64_t)"682e7bd897abd054409f3cca6028b5caab5b6b48c0eab26a9f345fa6c1794784");
}

uint64_t sub_1000215B0()
{
  return sub_100014340((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2973_PCIE_Koa_CLPC_OS_LPM_STATS_20240822.bin", 553402, (uint64_t)"4cd443cac79a3c9dd5e9cdd7d5b2bd41635b121310ce0ac051c78910501570ce");
}

uint64_t sub_1000215E4()
{
  return sub_100014340((uint64_t)"c495d34c5d5b2b33e0e978ef0aeed9ef9654cb1f", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.2.603.2972_PCIE_Koa_CLPC_OS_LPM_Amkor_20240822.bin", 553402, (uint64_t)"886901f00b39105913489f29d84c6c2ca3764df88d7a99ff6db272b617f9a525");
}

uint64_t sub_100021618()
{
  return sub_100013788((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002F510, (uint64_t)sub_10002F5E8, (uint64_t)sub_10002F5F8, (uint64_t)"BCM4387C2_22.2.603.2970_PCIE_Oakley_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Oakley*_OS_USI_*", 0x871BBu, 0, (uint64_t)"617dc1c6e8c656ace819f35bf2781ff29c51ca07d7fc1471cd7384608ff43939", 0);
}

uint64_t sub_1000216AC()
{
  return sub_100013788((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002F66C, (uint64_t)sub_10002F744, (uint64_t)sub_10002F754, (uint64_t)"BCM4387C2_22.2.603.2969_PCIE_Oakley_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Oakley*_OS_STATS_*", 0x871BDu, 0, (uint64_t)"f8dbc45501b1540d87d12c97025abfa656d189e277de25feafa5585a94c379d1", 0);
}

uint64_t sub_100021740()
{
  return sub_100013788((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002F7C8, (uint64_t)sub_10002F8A0, (uint64_t)sub_10002F8B0, (uint64_t)"BCM4387C2_22.2.603.2965_PCIE_Oakley_CLPC_OS_Amkor_20240822.bin", (uint64_t)"BCM4387C2_*_Oakley*_OS_Amkor_*", 0x871BDu, 0, (uint64_t)"fef8d4a1996879ffd95eaa4074e9b6cb2ea503785b60791965f29647a81b579a", 0);
}

uint64_t sub_1000217D4()
{
  return sub_100014340((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2968_PCIE_Oakley_CLPC_OS_LPM_USI_20240822.bin", 553403, (uint64_t)"f97638518bdcab30a5698f1082798278b8309ed4724262d5fdd060d98b470152");
}

uint64_t sub_100021808()
{
  return sub_100014340((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2967_PCIE_Oakley_CLPC_OS_LPM_STATS_20240822.bin", 553405, (uint64_t)"fa8e6383ffa4c94308c4127f71cb0bac43cc6872954c919353b5bb095abffe82");
}

uint64_t sub_10002183C()
{
  return sub_100014340((uint64_t)"d2484c5800370d4dbf279bc608211742be2afb41", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.2.603.2966_PCIE_Oakley_CLPC_OS_LPM_Amkor_20240822.bin", 553405, (uint64_t)"4a6b35d81e00c54046706e86b9c7226277b54648c526477bd25a9d5ddb233e0f");
}

uint64_t sub_100021870()
{
  return sub_100013788((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002F924, (uint64_t)sub_10002F9FC, (uint64_t)sub_10002FA0C, (uint64_t)"BCM4387C2_22.2.603.2896_PCIE_Juniper_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Juniper*_OS_USI_*", 0x871BCu, 0, (uint64_t)"ba063575d6efd6a09f553459219939517f1406c2e0e8dfa316771d05c26c38d5", 0);
}

uint64_t sub_100021904()
{
  return sub_100013788((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002FA80, (uint64_t)sub_10002FB58, (uint64_t)sub_10002FB68, (uint64_t)"BCM4387C2_22.2.603.2895_PCIE_Juniper_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Juniper*_OS_STATS_*", 0x871BEu, 0, (uint64_t)"e30a9ec8e59c5dfd2c59a7b8346a6825002c8489ed2611d44f66ad9e414fc816", 0);
}

uint64_t sub_100021998()
{
  return sub_100013788((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002FBDC, (uint64_t)sub_10002FCB4, (uint64_t)sub_10002FCC4, (uint64_t)"BCM4387C2_22.2.603.2891_PCIE_Juniper_CLPC_OS_Amkor_20240822.bin", (uint64_t)"BCM4387C2_*_Juniper*_OS_Amkor_*", 0x871BEu, 0, (uint64_t)"51c69f9e417f0820c2f710c1329bdb1d5d4723f21c31fe6031f6a492e5373fa5", 0);
}

uint64_t sub_100021A2C()
{
  return sub_100014340((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2894_PCIE_Juniper_CLPC_OS_LPM_USI_20240822.bin", 553404, (uint64_t)"cc9910a29bcfa603414af928b7cc02b67f4f370590b53d30bdadb3c36d91091b");
}

uint64_t sub_100021A60()
{
  return sub_100014340((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2893_PCIE_Juniper_CLPC_OS_LPM_STATS_20240822.bin", 553406, (uint64_t)"0845055e3b67c8c7909b255a69803c092a7f562c695361b4d352445b838e9204");
}

uint64_t sub_100021A94()
{
  return sub_100014340((uint64_t)"d3b5ffca33e4604460655adfd77fdfa4757e7e93", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.2.603.2892_PCIE_Juniper_CLPC_OS_LPM_Amkor_20240822.bin", 553406, (uint64_t)"0cb2212e374941817e81cc2fe0178babd647e9300dc870d6699fd4a7532bd525");
}

uint64_t sub_100021AC8()
{
  return sub_100013788((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10002FD38, (uint64_t)sub_10002FE10, (uint64_t)sub_10002FE20, (uint64_t)"BCM4387C2_22.2.603.2964_PCIE_Nash_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_Nash*_OS_USI_*", 0x871B9u, 0, (uint64_t)"36f76cdde4922e01a5fb19111896e6ec6ba023fedccaccea3944a6960e6ce297", 0);
}

uint64_t sub_100021B5C()
{
  return sub_100013788((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10002FE94, (uint64_t)sub_10002FF6C, (uint64_t)sub_10002FF7C, (uint64_t)"BCM4387C2_22.2.603.2963_PCIE_Nash_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_Nash*_OS_STATS_*", 0x871BBu, 0, (uint64_t)"abbbd6960b55f452679d40033d869b49c7586c9b5697854b5e9b79a2b9671cb6", 0);
}

uint64_t sub_100021BF0()
{
  return sub_100013788((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_10002FFF0, (uint64_t)sub_1000300C8, (uint64_t)sub_1000300D8, (uint64_t)"BCM4387C2_22.2.603.2959_PCIE_Nash_CLPC_OS_Amkor_20240822.bin", (uint64_t)"BCM4387C2_*_Nash*_OS_Amkor_*", 0x871BBu, 0, (uint64_t)"57060d0bba2e5f6c15c7341da9641dad29ca3d98d6a76bf90692145f5b9f3772", 0);
}

uint64_t sub_100021C84()
{
  return sub_100014340((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2962_PCIE_Nash_CLPC_OS_LPM_USI_20240822.bin", 553401, (uint64_t)"21277840a7790513e6041fff13bd573227af5482b9d99cd18eb78a5780dc19f7");
}

uint64_t sub_100021CB8()
{
  return sub_100014340((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2961_PCIE_Nash_CLPC_OS_LPM_STATS_20240822.bin", 553403, (uint64_t)"38531b01f1cd07a08b864177cdcef399ff36bc31ca1ad5c6c9e37042d3dbbb90");
}

uint64_t sub_100021CEC()
{
  return sub_100014340((uint64_t)"96c26ae5143d4462c09151ca85b7957d748d1cc8", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.2.603.2960_PCIE_Nash_CLPC_OS_LPM_Amkor_20240822.bin", 553403, (uint64_t)"9e58d3e814dfa084058712ddd08e38cdceda29e3b00c484a77db6cae68708309");
}

uint64_t sub_100021D20()
{
  return sub_100013788((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003014C, (uint64_t)sub_100030224, (uint64_t)sub_100030234, (uint64_t)"BCM4387C2_22.2.603.2982_PCIE_Muscari_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_Muscari_CLPC_OS_USI_*", 0x87A8Du, 0, (uint64_t)"698237aa3aeedf26b1ab82fb6564799a771c01ec78cca12138e80acf5291bb1a", 0);
}

uint64_t sub_100021DB4()
{
  return sub_100013788((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_1000302A8, (uint64_t)sub_100030380, (uint64_t)sub_100030390, (uint64_t)"BCM4387C2_22.2.603.2981_PCIE_Muscari_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_Muscari_CLPC_OS_STATS_*", 0x87A8Fu, 0, (uint64_t)"ffbad50c5d6675307140ad266d8d8e9c7ff9bc38765b401d467ea1396e4db72a", 0);
}

uint64_t sub_100021E48()
{
  return sub_100013788((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_100030404, (uint64_t)sub_1000304DC, (uint64_t)sub_1000304EC, (uint64_t)"BCM4387C2_22.2.603.2977_PCIE_Muscari_CLPC_OS_Amkor_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_Muscari_CLPC_OS_Amkor_*", 0x87A8Fu, 0, (uint64_t)"b8c3bddc47271b937f123107a343b2976dae18b1bb64c2ac3fa88c9a6d49f24f", 0);
}

uint64_t sub_100021EDC()
{
  return sub_100014340((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2980_PCIE_Muscari_CLPC_OS_LPM_USI_20240822.bin", 555661, (uint64_t)"44c91b67ed30e21eb36f5bbd469824d0d3b5150a98efafc849e36749d062b3ef");
}

uint64_t sub_100021F10()
{
  return sub_100014340((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2979_PCIE_Muscari_CLPC_OS_LPM_STATS_20240822.bin", 555663, (uint64_t)"b9420889cc769e01f5dd8f6583db087c3996344f86eb1f6f4f0412b00a90f0bc");
}

uint64_t sub_100021F44()
{
  return sub_100014340((uint64_t)"97c20c842033f8450421fde63adf58f999b2aadb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.2.603.2978_PCIE_Muscari_CLPC_OS_LPM_Amkor_20240822.bin", 555663, (uint64_t)"c9c76af387da782359f5c07be097edad371a98863bad6cb8a96bb6ab9257ac45");
}

uint64_t sub_100021F78()
{
  return sub_100013788((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100030560, (uint64_t)sub_100030638, (uint64_t)sub_100030648, (uint64_t)"BCM4387C2_22.2.603.2988_PCIE_Marigold_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_Marigold_CLPC_OS_USI_*", 0x87A96u, 0, (uint64_t)"03b54a6671f4b2cf86f63233f67676dd20a552ba246d5253c8395849f6d16b62", 0);
}

uint64_t sub_10002200C()
{
  return sub_100013788((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_1000306BC, (uint64_t)sub_100030794, (uint64_t)sub_1000307A4, (uint64_t)"BCM4387C2_22.2.603.2987_PCIE_Marigold_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_Marigold_CLPC_OS_STATS_*", 0x87A98u, 0, (uint64_t)"63eb4665205b984ac495643c94b5137de4a74f234a80edf1a7f958e77ec7a541", 0);
}

uint64_t sub_1000220A0()
{
  return sub_100013788((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)sub_100030818, (uint64_t)sub_1000308F0, (uint64_t)sub_100030900, (uint64_t)"BCM4387C2_22.2.603.2983_PCIE_Marigold_CLPC_OS_Amkor_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_Marigold_CLPC_OS_Amkor_*", 0x87A98u, 0, (uint64_t)"fe5c51bf4cb586ab16b0d01cc53eae16aabb2fcea698534402ef922da5c0b18e", 0);
}

uint64_t sub_100022134()
{
  return sub_100014340((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)"BCM4387C2_22.2.603.2986_PCIE_Marigold_CLPC_OS_LPM_USI_20240822.bin", 555670, (uint64_t)"361e41b62919b488bb0ba41c83a184cade99771b0ec1b23c806a6fa0ddc84a13");
}

uint64_t sub_100022168()
{
  return sub_100014340((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)"BCM4387C2_22.2.603.2985_PCIE_Marigold_CLPC_OS_LPM_STATS_20240822.bin", 555672, (uint64_t)"ecdfe702bb77348e46a4bddf32b2cfbdda061f0a65cc524b15e948a2f3f7f598");
}

uint64_t sub_10002219C()
{
  return sub_100014340((uint64_t)"2f7332dce3b75d5d7dc66131929e3ef12d12dccb", (uint64_t)"BCM4387C2", (uint64_t)"ALL", (uint64_t)"BCM4387C2_22.2.603.2984_PCIE_Marigold_CLPC_OS_LPM_Amkor_20240822.bin", 555672, (uint64_t)"2791e0cb886aabf01231314332b70aa318b7f34d2698a7de4fed6d76a27e89e6");
}

uint64_t sub_1000221D0()
{
  return sub_100013788((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_100030974, (uint64_t)sub_100030A4C, (uint64_t)sub_100030A5C, (uint64_t)"BCM4388C0_22.2.507.1344_PCIE_Petunia_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_Petunia_CLPC_OS_USI_*", 0xCF36Eu, 0, (uint64_t)"cebfd6466f3ed47aae16d3d1f97665b0a2cd70521a394ce64ea9df50740d3dcf", 0);
}

uint64_t sub_100022264()
{
  return sub_100013788((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_100030AD0, (uint64_t)sub_100030BA8, (uint64_t)sub_100030BB8, (uint64_t)"BCM4388C0_22.2.507.1343_PCIE_Petunia_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_Petunia_CLPC_OS_STATS_*", 0xCF370u, 0, (uint64_t)"40447155141df7921e408c514b5d391dc581ceddd813ffe37b413a8e79e681fb", 0);
}

uint64_t sub_1000222F8()
{
  return sub_100014340((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1342_PCIE_Petunia_CLPC_OS_LPM_USI_20241003.bin", 848750, (uint64_t)"4525ad41f7f10d8312a5783235fa98e00301b945dbcf224291b14ea983ce5778");
}

uint64_t sub_10002232C()
{
  return sub_100014340((uint64_t)"4f2b231e0de7fd321395ca8a6a1d67fd435ab76f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1341_PCIE_Petunia_CLPC_OS_LPM_STATS_20241003.bin", 848752, (uint64_t)"10d759c8d3e14e03b473702991a4dfd80f2a7d7fb9dbfcf713e7cc0b896d531e");
}

uint64_t sub_100022360()
{
  return sub_100013788((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_100030C2C, (uint64_t)sub_100030D04, (uint64_t)sub_100030D14, (uint64_t)"BCM4388C0_22.2.507.1324_PCIE_Poppy_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_Poppy_CLPC_OS_USI_*", 0xCF36Cu, 0, (uint64_t)"4f347bd4489e66354eac2a79381991586e4f9a754cebccc640a8df110dcd9c68", 0);
}

uint64_t sub_1000223F4()
{
  return sub_100013788((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_100030D88, (uint64_t)sub_100030E60, (uint64_t)sub_100030E70, (uint64_t)"BCM4388C0_22.2.507.1323_PCIE_Poppy_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_Poppy_CLPC_OS_STATS_*", 0xCF36Eu, 0, (uint64_t)"0e64b5bdd6370e75f12e099960dc2c4477ce484d31af109801225919a3f87ba4", 0);
}

uint64_t sub_100022488()
{
  return sub_100014340((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1322_PCIE_Poppy_CLPC_OS_LPM_USI_20241003.bin", 848748, (uint64_t)"2e667bb840fe06d112e5483193c5e09af3b5dc8aec59a42b77872290c98f6e6c");
}

uint64_t sub_1000224BC()
{
  return sub_100014340((uint64_t)"a67ab8192d314e67ef1b21f79aab0d9e45ee6dd1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1321_PCIE_Poppy_CLPC_OS_LPM_STATS_20241003.bin", 848750, (uint64_t)"f11bee7bc1d4063c945bd18279c14ea84dd2b84c1248123dea9d0db0182e2081");
}

uint64_t sub_1000224F0()
{
  return sub_100013788((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_100030EE4, (uint64_t)sub_100030FBC, (uint64_t)sub_100030FCC, (uint64_t)"BCM4399B0_22.1.83.131_PCIE_Cephalotus_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Cephalotus_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"c3d724bade828c4d64b4e123c8e94409ac1ceb21af300e4fafd45a282dedb64a", 0);
}

uint64_t sub_100022584()
{
  return sub_100013788((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_100031040, (uint64_t)sub_100031118, (uint64_t)sub_100031128, (uint64_t)"BCM4399B0_22.1.83.136_PCIE_Cephalotus_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Cephalotus_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"2e2c6384a90fa8301461cb3b27db55134612df2405633390e27461e83a0cd4a1", 0);
}

uint64_t sub_100022618()
{
  return sub_100013788((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_10003119C, (uint64_t)sub_100031274, (uint64_t)sub_100031284, (uint64_t)"BCM4399C0_22.1.83.261_PCIE_Cephalotus_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Cephalotus_CLPC_OS_USI_*", 0x8D5AEu, 0, (uint64_t)"9eae52dacc7df0f18df617d334af4614705034fca295c506d2cf66c539c70196", 0);
}

uint64_t sub_1000226AC()
{
  return sub_100013788((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_1000312F8, (uint64_t)sub_1000313D0, (uint64_t)sub_1000313E0, (uint64_t)"BCM4399C0_22.1.83.266_PCIE_Cephalotus_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Cephalotus_CLPC_OS_STATS_*", 0x8D5C8u, 0, (uint64_t)"4a30009d1e341eff22c002df7a1170eaaa0275a1691d4f2d5399ffa06ee90d8c", 0);
}

uint64_t sub_100022740()
{
  return sub_100013788((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_100031454, (uint64_t)sub_10003152C, (uint64_t)sub_10003153C, (uint64_t)"BCM4399C2_22.2.134.532_PCIE_Cephalotus_CLPC_OS_USI_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Cephalotus_CLPC_OS_USI_*", 0x8FF94u, 0, (uint64_t)"ce85bc1259a6a8203cd8696af29d4ca3775b60f21415719cf45e58d2f3855972", 0);
}

uint64_t sub_1000227D4()
{
  return sub_100013788((uint64_t)"a351ffa1679865574bc0d49e674d563e3b996948", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_1000315B0, (uint64_t)sub_100031688, (uint64_t)sub_100031698, (uint64_t)"BCM4399C2_22.2.134.531_PCIE_Cephalotus_CLPC_OS_STATS_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Cephalotus_CLPC_OS_STATS_*", 0x8FF96u, 0, (uint64_t)"459fe703837cdcf03e893e63801cebcb19f0276d79235b2c92bba7a612881f2d", 0);
}

uint64_t sub_100022868()
{
  return sub_100013788((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_10003170C, (uint64_t)sub_1000317E4, (uint64_t)sub_1000317F4, (uint64_t)"BCM4399B0_22.1.83.132_PCIE_Nepenthes_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Nepenthes_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"3a9176cfa32e5786b9f69dbd19c2bfa0f57ade22c73a1742163d82753aea442e", 0);
}

uint64_t sub_1000228FC()
{
  return sub_100013788((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_100031868, (uint64_t)sub_100031940, (uint64_t)sub_100031950, (uint64_t)"BCM4399B0_22.1.83.137_PCIE_Nepenthes_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Nepenthes_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"5174ff99997e38932aba54cc47e7396793276788176091f2e8fb00c91488c0b8", 0);
}

uint64_t sub_100022990()
{
  return sub_100013788((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_1000319C4, (uint64_t)sub_100031A9C, (uint64_t)sub_100031AAC, (uint64_t)"BCM4399C0_22.1.83.262_PCIE_Nepenthes_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Nepenthes_CLPC_OS_USI_*", 0x8D5ADu, 0, (uint64_t)"dab0d9f46a04b42723afe1b8e80cb41f0bd623674721d3aae6e9d0d8dc8fc6c4", 0);
}

uint64_t sub_100022A24()
{
  return sub_100013788((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_100031B20, (uint64_t)sub_100031BF8, (uint64_t)sub_100031C08, (uint64_t)"BCM4399C0_22.1.83.267_PCIE_Nepenthes_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Nepenthes_CLPC_OS_STATS_*", 0x8D5C7u, 0, (uint64_t)"c0cc7cfa7688d1f538d0eed752cc93e4754de5f167ea4c211fa4b69a2de00aea", 0);
}

uint64_t sub_100022AB8()
{
  return sub_100013788((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_100031C7C, (uint64_t)sub_100031D54, (uint64_t)sub_100031D64, (uint64_t)"BCM4399C2_22.2.134.534_PCIE_Nepenthes_CLPC_OS_USI_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Nepenthes_CLPC_OS_USI_*", 0x8FF93u, 0, (uint64_t)"42861f7ea1a5f96a0a8f9fd85f39930069f18ea48ff8531874c34985a329f3a1", 0);
}

uint64_t sub_100022B4C()
{
  return sub_100013788((uint64_t)"4fcb57a0bb4e68fc2ae70383735295e2a9bc6919", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100031DD8, (uint64_t)sub_100031EB0, (uint64_t)sub_100031EC0, (uint64_t)"BCM4399C2_22.2.134.533_PCIE_Nepenthes_CLPC_OS_STATS_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Nepenthes_CLPC_OS_STATS_*", 0x8FF95u, 0, (uint64_t)"8bca2d1e6a570aa5b164810724914c3cd34a6fa03b8bac354dae7d101a2441f0", 0);
}

uint64_t sub_100022BE0()
{
  return sub_100013788((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_100031F34, (uint64_t)sub_10003200C, (uint64_t)sub_10003201C, (uint64_t)"BCM4399B0_22.1.83.133_PCIE_Sundew_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Sundew_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"adfcf936ca580eeb9ee376446fb9f31e11dc9b9296d123b849499ff9c711bb3b", 0);
}

uint64_t sub_100022C74()
{
  return sub_100013788((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_100032090, (uint64_t)sub_100032168, (uint64_t)sub_100032178, (uint64_t)"BCM4399B0_22.1.83.138_PCIE_Sundew_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Sundew_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"9a2e2a125d51dc104112d123512d7a8ef378c46c1a01a3ab77a105ebb238879b", 0);
}

uint64_t sub_100022D08()
{
  return sub_100013788((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_1000321EC, (uint64_t)sub_1000322C4, (uint64_t)sub_1000322D4, (uint64_t)"BCM4399C0_22.1.83.263_PCIE_Sundew_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Sundew_CLPC_OS_USI_*", 0x8D5AAu, 0, (uint64_t)"941c9d04363b87ea65e0e80c6293cb505102c68d49c95a5f061ca7d5eb7ce437", 0);
}

uint64_t sub_100022D9C()
{
  return sub_100013788((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_100032348, (uint64_t)sub_100032420, (uint64_t)sub_100032430, (uint64_t)"BCM4399C0_22.1.83.268_PCIE_Sundew_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Sundew_CLPC_OS_STATS_*", 0x8D5C4u, 0, (uint64_t)"bd234cf322ffa650ea4590bf19b135d30d69d36b87faa92558252bfad3a26963", 0);
}

uint64_t sub_100022E30()
{
  return sub_100013788((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_1000324A4, (uint64_t)sub_10003257C, (uint64_t)sub_10003258C, (uint64_t)"BCM4399C2_22.2.134.536_PCIE_Sundew_CLPC_OS_USI_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Sundew_CLPC_OS_USI_*", 0x8FF90u, 0, (uint64_t)"c8b5c96e7c820d4c6ba6d3ed82dcab384b854cd0f6c66f51bbab2efcd09fc405", 0);
}

uint64_t sub_100022EC4()
{
  return sub_100013788((uint64_t)"1c2775a019ca5e2a44e6477a56ff010d8e6ef248", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100032600, (uint64_t)sub_1000326D8, (uint64_t)sub_1000326E8, (uint64_t)"BCM4399C2_22.2.134.535_PCIE_Sundew_CLPC_OS_STATS_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Sundew_CLPC_OS_STATS_*", 0x8FF92u, 0, (uint64_t)"1ce986abff4da304336560885129bd30bbc0c7d7d7d66401f3773eb2340997ef", 0);
}

uint64_t sub_100022F58()
{
  return sub_100013788((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399B0", (uint64_t)"USI", (uint64_t)sub_10003275C, (uint64_t)sub_100032834, (uint64_t)sub_100032844, (uint64_t)"BCM4399B0_22.1.83.134_PCIE_Audreyii_CLPC_OS_USI_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Audreyii_CLPC_OS_USI_*", 0x69F22u, 0, (uint64_t)"9c02201ddf402c5b15289cdcb6fda4972a53d8abe0338492b043b4021921fc5a", 0);
}

uint64_t sub_100022FEC()
{
  return sub_100013788((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399B0", (uint64_t)"STA", (uint64_t)sub_1000328B8, (uint64_t)sub_100032990, (uint64_t)sub_1000329A0, (uint64_t)"BCM4399B0_22.1.83.139_PCIE_Audreyii_CLPC_OS_STATS_20231109.bin", (uint64_t)"BCM4399B0_*_PCIE_Audreyii_CLPC_OS_STATS_*", 0x69FBCu, 0, (uint64_t)"85eac92971ec615830ee2b59f7e921b3408e5825dfea52e69b3343fba5784680", 0);
}

uint64_t sub_100023080()
{
  return sub_100013788((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C0", (uint64_t)"USI", (uint64_t)sub_100032A14, (uint64_t)sub_100032AEC, (uint64_t)sub_100032AFC, (uint64_t)"BCM4399C0_22.1.83.264_PCIE_Audreyii_CLPC_OS_USI_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Audreyii_CLPC_OS_USI_*", 0x8D5ACu, 0, (uint64_t)"c90d04b724ce7dea04b0f4867cd435133527f595e078195269a9ac9723d1c585", 0);
}

uint64_t sub_100023114()
{
  return sub_100013788((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C0", (uint64_t)"STA", (uint64_t)sub_100032B70, (uint64_t)sub_100032C48, (uint64_t)sub_100032C58, (uint64_t)"BCM4399C0_22.1.83.269_PCIE_Audreyii_CLPC_OS_STATS_20240430.bin", (uint64_t)"BCM4399C0_*_PCIE_Audreyii_CLPC_OS_STATS_*", 0x8D5C6u, 0, (uint64_t)"fef57617bee1edf5a66b03090f1cc2cee9ee6cae5ed2a4c02902df503be990f8", 0);
}

uint64_t sub_1000231A8()
{
  return sub_100013788((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C2", (uint64_t)"USI", (uint64_t)sub_100032CCC, (uint64_t)sub_100032DA4, (uint64_t)sub_100032DB4, (uint64_t)"BCM4399C2_22.2.134.538_PCIE_Audreyii_CLPC_OS_USI_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Audreyii_CLPC_OS_USI_*", 0x8FF92u, 0, (uint64_t)"333fedf3284eef6b59938b0f077baa97bc4e091ca94dc5ecd47b0b6db2c2f661", 0);
}

uint64_t sub_10002323C()
{
  return sub_100013788((uint64_t)"9b65e985f9f058219203d1a869e232e84cbb0f0b", (uint64_t)"BCM4399C2", (uint64_t)"STA", (uint64_t)sub_100032E28, (uint64_t)sub_100032F00, (uint64_t)sub_100032F10, (uint64_t)"BCM4399C2_22.2.134.537_PCIE_Audreyii_CLPC_OS_STATS_20241010.bin", (uint64_t)"BCM4399C2_*_PCIE_Audreyii_CLPC_OS_STATS_*", 0x8FF94u, 0, (uint64_t)"b53fe72737bee1fbf2dadf47c3fc2425a092235d583c08d5ed94f5dd22a9660b", 0);
}

uint64_t sub_1000232D0()
{
  return sub_100013788((uint64_t)"0fd3e04e3e8b617d8d2c17db8182fea74235f681", (uint64_t)"BCM43452A2", (uint64_t)"MUR", (uint64_t)sub_100032F84, (uint64_t)sub_100033160, (uint64_t)sub_100033170, (uint64_t)"BCM43452A2_19.1.143.598_Bacchus2_OS_MUR_20210503.hcd", 0, 0x121B7u, (uint64_t)&unk_10025B293, 0, 0);
}

uint64_t sub_100023360()
{
  return sub_100013788((uint64_t)"0fd3e04e3e8b617d8d2c17db8182fea74235f681", (uint64_t)"BCM43452A2", (uint64_t)"TDK", (uint64_t)sub_10003320C, (uint64_t)sub_1000333E8, (uint64_t)sub_1000333F8, (uint64_t)"BCM43452A2_19.1.143.599_Bacchus2_OS_TDK_20210503.hcd", 0, 0x121EDu, (uint64_t)&unk_10026D44B, 0, 0);
}

uint64_t sub_1000233F0()
{
  return sub_100013788((uint64_t)"0fd3e04e3e8b617d8d2c17db8182fea74235f681", (uint64_t)"BCM43452A2", (uint64_t)"USI", (uint64_t)sub_100033494, (uint64_t)sub_100033670, (uint64_t)sub_100033680, (uint64_t)"BCM43452A2_19.1.143.600_Bacchus2_OS_USI_20210503.hcd", 0, 0x121EDu, (uint64_t)&unk_10027F639, 0, 0);
}

uint64_t sub_100023480()
{
  return sub_100013788((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_10003371C, (uint64_t)sub_1000338F8, (uint64_t)sub_100033908, (uint64_t)"BCM4355C1_20.3.170.1323_RudderA_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_100291827, 0, 0);
}

uint64_t sub_100023510()
{
  return sub_1000165C4((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)&unk_1004C7F80, 210);
}

uint64_t sub_100023528()
{
  return sub_100013788((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_1000339A4, (uint64_t)sub_100033B80, (uint64_t)sub_100033B90, (uint64_t)"BCM4355C1_20.3.170.1324_RudderA_OS_USI_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_1002A41C0, 0, 0);
}

uint64_t sub_1000235B8()
{
  return sub_1000165C4((uint64_t)"4d013e8fae976e61a7b3b69cdb5a015fa7ff04bb", (uint64_t)&unk_1004C8052, 210);
}

uint64_t sub_1000235D0()
{
  return sub_100013788((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100033C2C, (uint64_t)sub_100033E08, (uint64_t)sub_100033E18, (uint64_t)"BCM4355C1_20.3.170.1325_RudderB_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_1002B6B59, 0, 0);
}

uint64_t sub_100023660()
{
  return sub_1000165C4((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)&unk_1004C8124, 210);
}

uint64_t sub_100023678()
{
  return sub_100013788((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_100033EB4, (uint64_t)sub_100034090, (uint64_t)sub_1000340A0, (uint64_t)"BCM4355C1_20.3.170.1326_RudderB_OS_USI_MCC_TRS_20221017.hcd", 0, 0x12998u, (uint64_t)&unk_1002C94F2, 0, 0);
}

uint64_t sub_100023708()
{
  return sub_1000165C4((uint64_t)"ae5208f95834c10486a11d761fe2e38c7a10e280", (uint64_t)&unk_1004C81F6, 210);
}

uint64_t sub_100023720()
{
  return sub_100013788((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_10003413C, (uint64_t)sub_100034318, (uint64_t)sub_100034328, (uint64_t)"BCM4355C1_20.3.170.1334_MagnoliaA_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_1002DBE8B, 0, 0);
}

uint64_t sub_1000237B0()
{
  return sub_1000165C4((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)&unk_1004C82C8, 210);
}

uint64_t sub_1000237C8()
{
  return sub_100013788((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_1000343C4, (uint64_t)sub_1000345A0, (uint64_t)sub_1000345B0, (uint64_t)"BCM4355C1_20.3.170.1335_MagnoliaA_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_1002EF2E9, 0, 0);
}

uint64_t sub_100023858()
{
  return sub_1000165C4((uint64_t)"e329f81a9f2572f5bf38e1469ec4ff2ea7213816", (uint64_t)&unk_1004C839A, 210);
}

uint64_t sub_100023870()
{
  return sub_100013788((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_10003464C, (uint64_t)sub_100034828, (uint64_t)sub_100034838, (uint64_t)"BCM4355C1_20.3.170.1336_MagnoliaB_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_100302747, 0, 0);
}

uint64_t sub_100023900()
{
  return sub_1000165C4((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)&unk_1004C846C, 210);
}

uint64_t sub_100023918()
{
  return sub_100013788((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_1000348D4, (uint64_t)sub_100034AB0, (uint64_t)sub_100034AC0, (uint64_t)"BCM4355C1_20.3.170.1337_MagnoliaB_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Du, (uint64_t)&unk_100315BA5, 0, 0);
}

uint64_t sub_1000239A8()
{
  return sub_1000165C4((uint64_t)"65ba2027292c7e4bcd6c7d818b20ee3f9abedacc", (uint64_t)&unk_1004C853E, 210);
}

uint64_t sub_1000239C0()
{
  return sub_100013788((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_100034B5C, (uint64_t)sub_100034D38, (uint64_t)sub_100034D48, (uint64_t)"BCM4355C1_20.3.170.1338_LonganA_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_100329003, 0, 0);
}

uint64_t sub_100023A50()
{
  return sub_1000165C4((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)&unk_1004C8610, 210);
}

uint64_t sub_100023A68()
{
  return sub_100013788((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_100034DE4, (uint64_t)sub_100034FC0, (uint64_t)sub_100034FD0, (uint64_t)"BCM4355C1_20.3.170.1339_LonganA_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_10033C45F, 0, 0);
}

uint64_t sub_100023AF8()
{
  return sub_1000165C4((uint64_t)"9bb321c15706c8c4e8518012b35dcd444d2655f3", (uint64_t)&unk_1004C86E2, 210);
}

uint64_t sub_100023B10()
{
  return sub_100013788((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)"BCM4355C1", (uint64_t)"MUR", (uint64_t)sub_10003506C, (uint64_t)sub_100035248, (uint64_t)sub_100035258, (uint64_t)"BCM4355C1_20.3.170.1340_LonganB_OS_MUR_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_10034F8BB, 0, 0);
}

uint64_t sub_100023BA0()
{
  return sub_1000165C4((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)&unk_1004C87B4, 210);
}

uint64_t sub_100023BB8()
{
  return sub_100013788((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)"BCM4355C1", (uint64_t)"USI", (uint64_t)sub_1000352F4, (uint64_t)sub_1000354D0, (uint64_t)sub_1000354E0, (uint64_t)"BCM4355C1_20.3.170.1341_LonganB_OS_USI_MCC_TRS_20221017.hcd", 0, 0x1345Bu, (uint64_t)&unk_100362D17, 0, 0);
}

uint64_t sub_100023C48()
{
  return sub_1000165C4((uint64_t)"d99e0eebda08b7d57e90479e679381e2a0b58226", (uint64_t)&unk_1004C8886, 210);
}

uint64_t sub_100023C60()
{
  return sub_100013788((uint64_t)"14991972ff57eeff834172b65c18210836e18d3d", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_10003557C, (uint64_t)sub_100035758, (uint64_t)sub_100035768, (uint64_t)"BCM4350C5_19.1.235.4930_Zinfandel_OS_MUR_STC_20210628.hcd", 0, 0xD202u, (uint64_t)&unk_100376173, 0, 0);
}

uint64_t sub_100023CEC()
{
  return sub_100013788((uint64_t)"14991972ff57eeff834172b65c18210836e18d3d", (uint64_t)"BCM4350C5", (uint64_t)"TY", (uint64_t)sub_100035804, (uint64_t)sub_1000359E0, (uint64_t)sub_1000359F0, (uint64_t)"BCM4350C5_19.1.235.4931_Zinfandel_OS_TY_STC_20210628.hcd", 0, 0xD1FEu, (uint64_t)&unk_100383376, 0, 0);
}

uint64_t sub_100023D78()
{
  return sub_100013788((uint64_t)"14991972ff57eeff834172b65c18210836e18d3d", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100035A8C, (uint64_t)sub_100035C68, (uint64_t)sub_100035C78, (uint64_t)"BCM4350C5_19.1.235.4933_Zinfandel_OS_USI_STC_20210628.hcd", 0, 0xD1FFu, (uint64_t)&unk_100390575, 0, 0);
}

uint64_t sub_100023E04()
{
  return sub_100013788((uint64_t)"8f079bbe2ababe5158d76f2a4cd199e05b73812b", (uint64_t)"BCM4350C5", (uint64_t)"MUR", (uint64_t)sub_100035D14, (uint64_t)sub_100035EF0, (uint64_t)sub_100035F00, (uint64_t)"BCM4350C5_19.1.235.4929_Zinfandel_OS_MUR_ST_20210628.hcd", 0, 0x10DA8u, (uint64_t)&unk_10039D775, 0, 0);
}

uint64_t sub_100023E94()
{
  return sub_100013788((uint64_t)"8f079bbe2ababe5158d76f2a4cd199e05b73812b", (uint64_t)"BCM4350C5", (uint64_t)"USI", (uint64_t)sub_100035F9C, (uint64_t)sub_100036178, (uint64_t)sub_100036188, (uint64_t)"BCM4350C5_19.1.235.4932_Zinfandel_OS_USI_ST_20210628.hcd", 0, 0x10DA5u, (uint64_t)&unk_1003AE51E, 0, 0);
}

uint64_t sub_100023F24()
{
  return sub_100013788((uint64_t)"40d66158a9da2cae42932fb7737aa5a829a94d9e", (uint64_t)"BCM4350C2", (uint64_t)"MUR", (uint64_t)sub_100036224, (uint64_t)sub_1000363EC, (uint64_t)sub_1000363FC, (uint64_t)"BCM4350C2_18.1.452.1526_Riesling_OS_MUR_STC_20200320.hcd", 0, 0x11AA7u, (uint64_t)&unk_1003BF2C4, 0, 0);
}

uint64_t sub_100023FB4()
{
  return sub_100013788((uint64_t)"40d66158a9da2cae42932fb7737aa5a829a94d9e", (uint64_t)"BCM4350C2", (uint64_t)"TY", (uint64_t)sub_100036498, (uint64_t)sub_100036660, (uint64_t)sub_100036670, (uint64_t)"BCM4350C2_18.1.452.1527_Riesling_OS_TY_20200320.hcd", 0, 0x11AA3u, (uint64_t)&unk_1003D0D6C, 0, 0);
}

uint64_t sub_100024044()
{
  return sub_100013788((uint64_t)"40d66158a9da2cae42932fb7737aa5a829a94d9e", (uint64_t)"BCM4350C2", (uint64_t)"USI", (uint64_t)sub_10003670C, (uint64_t)sub_1000368D4, (uint64_t)sub_1000368E4, (uint64_t)"BCM4350C2_18.1.452.1529_Riesling_OS_USI_STC_20200320.hcd", 0, 0x11AA8u, (uint64_t)&unk_1003E2810, 0, 0);
}

uint64_t sub_1000240D4()
{
  return sub_100013788((uint64_t)"94005630427bf66340961950594dfdcaa3f22d14", (uint64_t)"BCM4350C2", (uint64_t)"MUR", (uint64_t)sub_100036980, (uint64_t)sub_100036B48, (uint64_t)sub_100036B58, (uint64_t)"BCM4350C2_18.1.452.1525_Riesling_OS_MUR_ST_20200320.hcd", 0, 0x11AA7u, (uint64_t)&unk_1003F42B9, 0, 0);
}

uint64_t sub_100024164()
{
  return sub_100013788((uint64_t)"94005630427bf66340961950594dfdcaa3f22d14", (uint64_t)"BCM4350C2", (uint64_t)"TY", (uint64_t)sub_100036BF4, (uint64_t)sub_100036DBC, (uint64_t)sub_100036DCC, (uint64_t)"BCM4350C2_18.1.452.1527_Riesling_OS_TY_20200320.hcd", 0, 0x11AA3u, (uint64_t)&unk_100405D61, 0, 0);
}

uint64_t sub_1000241F4()
{
  return sub_100013788((uint64_t)"94005630427bf66340961950594dfdcaa3f22d14", (uint64_t)"BCM4350C2", (uint64_t)"USI", (uint64_t)sub_100036E68, (uint64_t)sub_100037030, (uint64_t)sub_100037040, (uint64_t)"BCM4350C2_18.1.452.1528_Riesling_OS_USI_ST_20200320.hcd", 0, 0x11AA7u, (uint64_t)&unk_100417805, 0, 0);
}

uint64_t sub_100024284()
{
  return sub_100013788((uint64_t)"d3485ae0ea2596be668f204f8cce168f073b0779", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000370DC, (uint64_t)sub_1000371B4, (uint64_t)sub_1000371C4, (uint64_t)"BCM4377B2_21.1.238.6956_PCIE_MonstroA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_USI_*", 0x39D29u, 0, (uint64_t)"f46a5aa758db242535eeadac57ad2f0960f313d7903c18f476ac082fbcfbcc13", 0);
}

uint64_t sub_100024318()
{
  return sub_100013788((uint64_t)"d3485ae0ea2596be668f204f8cce168f073b0779", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100037238, (uint64_t)sub_100037310, (uint64_t)sub_100037320, (uint64_t)"BCM4377B2_21.1.238.6955_PCIE_MonstroA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_MUR_*", 0x3A0B5u, 0, (uint64_t)"6be22b5012a5701f0ab876f4e34adb6dd44c0ea44ec802b82f3c224cbc89f3c4", 0);
}

uint64_t sub_1000243AC()
{
  return sub_100013788((uint64_t)"18aa232bdabcf077c518c93b988e975f9b9ff1b3", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100037394, (uint64_t)sub_10003746C, (uint64_t)sub_10003747C, (uint64_t)"BCM4377B2_21.1.238.6956_PCIE_MonstroA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_USI_*", 0x39D29u, 0, (uint64_t)"f46a5aa758db242535eeadac57ad2f0960f313d7903c18f476ac082fbcfbcc13", 0);
}

uint64_t sub_100024440()
{
  return sub_100013788((uint64_t)"18aa232bdabcf077c518c93b988e975f9b9ff1b3", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_1000374F0, (uint64_t)sub_1000375C8, (uint64_t)sub_1000375D8, (uint64_t)"BCM4377B2_21.1.238.6955_PCIE_MonstroA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroA_OS_MUR_*", 0x3A0B5u, 0, (uint64_t)"6be22b5012a5701f0ab876f4e34adb6dd44c0ea44ec802b82f3c224cbc89f3c4", 0);
}

uint64_t sub_1000244D4()
{
  return sub_100013788((uint64_t)"74552176fcf284dc472c0a10df8323eb336e8dd2", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10003764C, (uint64_t)sub_100037724, (uint64_t)sub_100037734, (uint64_t)"BCM4377B2_21.1.238.6958_PCIE_MonstroB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_USI_*", 0x39D81u, 0, (uint64_t)"89794a6c4ff8d7e98afdc35f97e6219808cec2c419eae6c6ec7178f6be1274fe", 0);
}

uint64_t sub_100024568()
{
  return sub_100013788((uint64_t)"74552176fcf284dc472c0a10df8323eb336e8dd2", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_1000377A8, (uint64_t)sub_100037880, (uint64_t)sub_100037890, (uint64_t)"BCM4377B2_21.1.238.6957_PCIE_MonstroB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_MUR_*", 0x3A10Du, 0, (uint64_t)"6326601cf82a5bc73033cf0e023112c2f574774fa0c93f24fca3c6af4d8fe057", 0);
}

uint64_t sub_1000245FC()
{
  return sub_100013788((uint64_t)"9e581c149ca718b65cc247f8228061b24444258d", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100037904, (uint64_t)sub_1000379DC, (uint64_t)sub_1000379EC, (uint64_t)"BCM4377B2_21.1.238.6958_PCIE_MonstroB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_USI_*", 0x39D81u, 0, (uint64_t)"89794a6c4ff8d7e98afdc35f97e6219808cec2c419eae6c6ec7178f6be1274fe", 0);
}

uint64_t sub_100024690()
{
  return sub_100013788((uint64_t)"9e581c149ca718b65cc247f8228061b24444258d", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100037A60, (uint64_t)sub_100037B38, (uint64_t)sub_100037B48, (uint64_t)"BCM4377B2_21.1.238.6957_PCIE_MonstroB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MonstroB_OS_MUR_*", 0x3A10Du, 0, (uint64_t)"6326601cf82a5bc73033cf0e023112c2f574774fa0c93f24fca3c6af4d8fe057", 0);
}

uint64_t sub_100024724()
{
  return sub_100013788((uint64_t)"7222e8221d3eb7874810c899b8d1f9474c9a968e", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100037BBC, (uint64_t)sub_100037C94, (uint64_t)sub_100037CA4, (uint64_t)"BCM4377B2_21.1.238.6964_PCIE_PinocchioA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_USI_*", 0x39D2Au, 0, (uint64_t)"9aee0eda04a208161f1c7c249994a08ee4746f5e3fd814146c66e6db0666c490", 0);
}

uint64_t sub_1000247B8()
{
  return sub_100013788((uint64_t)"7222e8221d3eb7874810c899b8d1f9474c9a968e", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100037D18, (uint64_t)sub_100037DF0, (uint64_t)sub_100037E00, (uint64_t)"BCM4377B2_21.1.238.6963_PCIE_PinocchioA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_MUR_*", 0x3A0B6u, 0, (uint64_t)"5a972601e7544319771a8d84395d8946861d8fd8c1234e4cf497eb3ab72c337a", 0);
}

uint64_t sub_10002484C()
{
  return sub_100013788((uint64_t)"eca1ea9fd896a4d821dd03ba9b40221fb40998eb", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100037E74, (uint64_t)sub_100037F4C, (uint64_t)sub_100037F5C, (uint64_t)"BCM4377B2_21.1.238.6964_PCIE_PinocchioA_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_USI_*", 0x39D2Au, 0, (uint64_t)"9aee0eda04a208161f1c7c249994a08ee4746f5e3fd814146c66e6db0666c490", 0);
}

uint64_t sub_1000248E0()
{
  return sub_100013788((uint64_t)"eca1ea9fd896a4d821dd03ba9b40221fb40998eb", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100037FD0, (uint64_t)sub_1000380A8, (uint64_t)sub_1000380B8, (uint64_t)"BCM4377B2_21.1.238.6963_PCIE_PinocchioA_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioA_OS_MUR_*", 0x3A0B6u, 0, (uint64_t)"5a972601e7544319771a8d84395d8946861d8fd8c1234e4cf497eb3ab72c337a", 0);
}

uint64_t sub_100024974()
{
  return sub_100013788((uint64_t)"7e36889100a477ebc6eb3b07f67cdc7dce63e811", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_10003812C, (uint64_t)sub_100038204, (uint64_t)sub_100038214, (uint64_t)"BCM4377B2_21.1.238.6966_PCIE_PinocchioB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_USI_*", 0x39E6Eu, 0, (uint64_t)"fa5d6370d20d51888416514332e995baa366c72ef6129a5b88d664427685fe75", 0);
}

uint64_t sub_100024A08()
{
  return sub_100013788((uint64_t)"7e36889100a477ebc6eb3b07f67cdc7dce63e811", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100038288, (uint64_t)sub_100038360, (uint64_t)sub_100038370, (uint64_t)"BCM4377B2_21.1.238.6965_PCIE_PinocchioB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_MUR_*", 0x3A1FAu, 0, (uint64_t)"301018514f18d594e944038ca370cc70ebcc8516833e9bd5f50110f54468f7ad", 0);
}

uint64_t sub_100024A9C()
{
  return sub_100013788((uint64_t)"a7865e5dfa1b55408bd1c74c169126a9a73edcb2", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000383E4, (uint64_t)sub_1000384BC, (uint64_t)sub_1000384CC, (uint64_t)"BCM4377B2_21.1.238.6966_PCIE_PinocchioB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_USI_*", 0x39E6Eu, 0, (uint64_t)"fa5d6370d20d51888416514332e995baa366c72ef6129a5b88d664427685fe75", 0);
}

uint64_t sub_100024B30()
{
  return sub_100013788((uint64_t)"a7865e5dfa1b55408bd1c74c169126a9a73edcb2", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100038540, (uint64_t)sub_100038618, (uint64_t)sub_100038628, (uint64_t)"BCM4377B2_21.1.238.6965_PCIE_PinocchioB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_PinocchioB_OS_MUR_*", 0x3A1FAu, 0, (uint64_t)"301018514f18d594e944038ca370cc70ebcc8516833e9bd5f50110f54468f7ad", 0);
}

uint64_t sub_100024BC4()
{
  return sub_100013788((uint64_t)"425d6bb3008eca94bf232eafc913ecce5cbc2e4c", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_10003869C, (uint64_t)sub_100038774, (uint64_t)sub_100038784, (uint64_t)"BCM4377B2_21.1.238.6951_PCIE_MeekoA_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoA_OS_MUR_*", 0x3889Eu, 0, (uint64_t)"bf13720c38093703df69aa7e16b308fa9c2350393d452efc23cd9ab599f75721", 0);
}

uint64_t sub_100024C58()
{
  return sub_100013788((uint64_t)"425d6bb3008eca94bf232eafc913ecce5cbc2e4c", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_1000387F8, (uint64_t)sub_1000388D0, (uint64_t)sub_1000388E0, (uint64_t)"BCM4377B2_21.1.238.6952_PCIE_MeekoA_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoA_OS_USI_*", 0x3889Eu, 0, (uint64_t)"4e5400c71f660a5ef33cd1b2774543d3c7e175caeca62fb063949fe994fb5c45", 0);
}

uint64_t sub_100024CEC()
{
  return sub_100013788((uint64_t)"53494ff98fc4636cea2ed1ffc9390f89a8b33992", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100038954, (uint64_t)sub_100038A2C, (uint64_t)sub_100038A3C, (uint64_t)"BCM4377B2_21.1.238.6953_PCIE_MeekoB_OS_MUR_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoB_OS_MUR_*", 0x39FA7u, 0, (uint64_t)"ec59ac022f9feb9d123439129aaf855721feb5f11dc783943204ac7f25929ed2", 0);
}

uint64_t sub_100024D80()
{
  return sub_100013788((uint64_t)"53494ff98fc4636cea2ed1ffc9390f89a8b33992", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100038AB0, (uint64_t)sub_100038B88, (uint64_t)sub_100038B98, (uint64_t)"BCM4377B2_21.1.238.6954_PCIE_MeekoB_OS_USI_3ANT_20221212.bin", (uint64_t)"BCM4377B2_*_MeekoB_OS_USI_*", 0x39C1Bu, 0, (uint64_t)"15d5b0687f09a1d193ed6977c494fff1e56a0938768cbb68d108f184e7336152", 0);
}

uint64_t sub_100024E14()
{
  return sub_100013788((uint64_t)"c0fb2dbccf234d5bceae57bcc137a1368e464f27", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100038C0C, (uint64_t)sub_100038CE4, (uint64_t)sub_100038CF4, (uint64_t)"BCM4377B2_21.1.238.6959_PCIE_NemoA_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_NemoA_OS_MUR_*", 0x3889Du, 0, (uint64_t)"1b85ab6e33b26e0640c880d19afc84ba3722fbded79e63486e5e961e821c7f8f", 0);
}

uint64_t sub_100024EA8()
{
  return sub_100013788((uint64_t)"c0fb2dbccf234d5bceae57bcc137a1368e464f27", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100038D68, (uint64_t)sub_100038E40, (uint64_t)sub_100038E50, (uint64_t)"BCM4377B2_21.1.238.6960_PCIE_NemoA_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_NemoA_OS_USI_*", 0x3889Du, 0, (uint64_t)"6c4f2d37ed0441d9bcb7f3f4eb986f54371c1f10025f2649b6f3fcb9e260ebe5", 0);
}

uint64_t sub_100024F3C()
{
  return sub_100013788((uint64_t)"b418d24e5436117129fa6dda5fab49391a82bd0c", (uint64_t)"BCM4377B2", (uint64_t)"MUR", (uint64_t)sub_100038EC4, (uint64_t)sub_100038F9C, (uint64_t)sub_100038FAC, (uint64_t)"BCM4377B2_21.1.238.6961_PCIE_NemoB_OS_MUR_20221212.bin", (uint64_t)"BCM4377B2_*_NemoB_OS_MUR_*", 0x388B1u, 0, (uint64_t)"e91b5ed1c2a3b00cdc450a2cfde148958234b842508f9ca6ee31fcb1b958da0c", 0);
}

uint64_t sub_100024FD0()
{
  return sub_100013788((uint64_t)"b418d24e5436117129fa6dda5fab49391a82bd0c", (uint64_t)"BCM4377B2", (uint64_t)"USI", (uint64_t)sub_100039020, (uint64_t)sub_1000390F8, (uint64_t)sub_100039108, (uint64_t)"BCM4377B2_21.1.238.6962_PCIE_NemoB_OS_USI_20221212.bin", (uint64_t)"BCM4377B2_*_NemoB_OS_USI_*", 0x388B1u, 0, (uint64_t)"e5bd7abaa7389368acf4edc52dafbb4e8e88548f712508405c03bb1154813ae0", 0);
}

uint64_t sub_100025064()
{
  return sub_100013788((uint64_t)"f410387dacc391c8cb729a621cb28b456c7e2843", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_10003917C, (uint64_t)sub_100039254, (uint64_t)sub_100039264, (uint64_t)"BCM4378B1_22.3.540.3941_PCIE_MulanA_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_MulanA_OS_MUR_*", 0x58EDAu, 0, (uint64_t)"c556fd03e7092f2454c08469ac2e71499ddb825495c031856e92b70e2427d6ab", 0);
}

uint64_t sub_1000250F8()
{
  return sub_100013788((uint64_t)"f410387dacc391c8cb729a621cb28b456c7e2843", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_1000392D8, (uint64_t)sub_1000393B0, (uint64_t)sub_1000393C0, (uint64_t)"BCM4378B1_22.3.540.3942_PCIE_MulanA_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_MulanA_OS_USI_*", 0x58EDAu, 0, (uint64_t)"8cf53e6214f99ebe04f5607a637e044b41271e4a4045a96ca05009281d96a9c9", 0);
}

uint64_t sub_10002518C()
{
  return sub_100013788((uint64_t)"99c7aaa19f3179b9025522bfe4eee93f2b9fe311", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_100039434, (uint64_t)sub_10003950C, (uint64_t)sub_10003951C, (uint64_t)"BCM4378B1_22.3.540.3943_PCIE_MulanB_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_MulanB_OS_MUR_*", 0x595D0u, 0, (uint64_t)"58c85906407ef27eab38803c39ab3ec7a0d1db9efe97b950bad12fd61e55c6bf", 0);
}

uint64_t sub_100025220()
{
  return sub_100013788((uint64_t)"99c7aaa19f3179b9025522bfe4eee93f2b9fe311", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100039590, (uint64_t)sub_100039668, (uint64_t)sub_100039678, (uint64_t)"BCM4378B1_22.3.540.3944_PCIE_MulanB_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_MulanB_OS_USI_*", 0x595D0u, 0, (uint64_t)"d5394b6d44e8a47345f6e8cb87073036b32f5eb2accce5593ace168ddb12e160", 0);
}

uint64_t sub_1000252B4()
{
  return sub_100013788((uint64_t)"80450133500158c25645d8432c247433e4327e14", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_1000396EC, (uint64_t)sub_1000397C4, (uint64_t)sub_1000397D4, (uint64_t)"BCM4378B1_22.3.540.3945_PCIE_MushuA_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_MushuA_OS_MUR_*", 0x58EDAu, 0, (uint64_t)"f939c54da799a65c4f2f222abbb70a8c28417c42413cfc94c1baa4a8df50ae01", 0);
}

uint64_t sub_100025348()
{
  return sub_100013788((uint64_t)"80450133500158c25645d8432c247433e4327e14", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100039848, (uint64_t)sub_100039920, (uint64_t)sub_100039930, (uint64_t)"BCM4378B1_22.3.540.3946_PCIE_MushuA_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_MushuA_OS_USI_*", 0x58EDAu, 0, (uint64_t)"58b7e3f1e3f74b12496c68fe09da64b7bc0cd0300d13596e8d8b4f5e2d02ae60", 0);
}

uint64_t sub_1000253DC()
{
  return sub_100013788((uint64_t)"15ca9efe1cddfea0b8e350eb2a4d8a04ef4a1b9c", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)sub_1000399A4, (uint64_t)sub_100039A7C, (uint64_t)sub_100039A8C, (uint64_t)"BCM4378B1_22.3.540.3947_PCIE_MushuB_OS_MUR_20241009.bin", (uint64_t)"BCM4378B1_*_MushuB_OS_MUR_*", 0x595D0u, 0, (uint64_t)"985fa2561b6e15bf8a8925053edde6e10452949d90e215e438a6b6329d62ba90", 0);
}

uint64_t sub_100025470()
{
  return sub_100013788((uint64_t)"15ca9efe1cddfea0b8e350eb2a4d8a04ef4a1b9c", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)sub_100039B00, (uint64_t)sub_100039BD8, (uint64_t)sub_100039BE8, (uint64_t)"BCM4378B1_22.3.540.3948_PCIE_MushuB_OS_USI_20241009.bin", (uint64_t)"BCM4378B1_*_MushuB_OS_USI_*", 0x595D0u, 0, (uint64_t)"35f2c688fa2108add775375f761569648f4e774ccd0289a10c6373a5df304d6c", 0);
}

uint64_t sub_100025504()
{
  return sub_100013788((uint64_t)"8c710cd87a3297e16c10ed18e12ea4abf7479314", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100039C5C, (uint64_t)sub_100039D34, (uint64_t)sub_100039D44, (uint64_t)"BCM4387C2_22.2.603.2902_PCIE_PomegranateA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateA_CLPC_OS_USI_*", 0x7EE0Fu, 0, (uint64_t)"bbc3b413b679be41a7facec690bd272a91c0bc1e2ed9a2cd0d7144b5bce18cfb", 0);
}

uint64_t sub_100025598()
{
  return sub_100013788((uint64_t)"8c710cd87a3297e16c10ed18e12ea4abf7479314", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_100039DB8, (uint64_t)sub_100039E90, (uint64_t)sub_100039EA0, (uint64_t)"BCM4387C2_22.2.603.2901_PCIE_PomegranateA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateA_CLPC_OS_STATS_*", 0x7EE11u, 0, (uint64_t)"3820552ecc549b714dbdb47dd3757b49cd870c9f61a62b9bc317eda4e849f3a5", 0);
}

uint64_t sub_10002562C()
{
  return sub_100013788((uint64_t)"b0bf53342772a8b91637b5c902accb7dd85a481a", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_100039F14, (uint64_t)sub_100039FEC, (uint64_t)sub_100039FFC, (uint64_t)"BCM4387C2_22.2.603.2904_PCIE_PomegranateB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateB_CLPC_OS_USI_*", 0x7EE1Bu, 0, (uint64_t)"ad50652e711f1e5d32c1816d6ec32f68cf7ed48c550f97ac7e7b42bb0f8140ca", 0);
}

uint64_t sub_1000256C0()
{
  return sub_100013788((uint64_t)"b0bf53342772a8b91637b5c902accb7dd85a481a", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A070, (uint64_t)sub_10003A148, (uint64_t)sub_10003A158, (uint64_t)"BCM4387C2_22.2.603.2903_PCIE_PomegranateB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_PomegranateB_CLPC_OS_STATS_*", 0x7EE1Du, 0, (uint64_t)"555c49d1d758720e185f0078185cfd6119d054f9e2b429f7412cf06a7412a282", 0);
}

uint64_t sub_100025754()
{
  return sub_100013788((uint64_t)"0c1bbe1ed1f972193dc40144a98b28307aab0a29", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A1CC, (uint64_t)sub_10003A2A4, (uint64_t)sub_10003A2B4, (uint64_t)"BCM4387C2_22.2.603.2956_PCIE_RambutanA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanA_CLPC_OS_USI_*", 0x7F027u, 0, (uint64_t)"8d9a335174ae6de7bd08b558969d1b157e72977a45746aadd65b52d7b74dad53", 0);
}

uint64_t sub_1000257E8()
{
  return sub_100013788((uint64_t)"0c1bbe1ed1f972193dc40144a98b28307aab0a29", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A328, (uint64_t)sub_10003A400, (uint64_t)sub_10003A410, (uint64_t)"BCM4387C2_22.2.603.2955_PCIE_RambutanA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanA_CLPC_OS_STATS_*", 0x7F029u, 0, (uint64_t)"dc4a902320452c3c2d763665dfee8cd8898c5fc4f59d68b22f2624f690f1a57f", 0);
}

uint64_t sub_10002587C()
{
  return sub_100013788((uint64_t)"e255efceab97cb4b4299e997a5bef8cd660697e2", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A484, (uint64_t)sub_10003A55C, (uint64_t)sub_10003A56C, (uint64_t)"BCM4387C2_22.2.603.2958_PCIE_RambutanB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanB_CLPC_OS_USI_*", 0x80799u, 0, (uint64_t)"90be6b05d0fe3ec4c06af5bda9bba9b6a7befbf609c9938400d62dfe7b810e9e", 0);
}

uint64_t sub_100025910()
{
  return sub_100013788((uint64_t)"e255efceab97cb4b4299e997a5bef8cd660697e2", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A5E0, (uint64_t)sub_10003A6B8, (uint64_t)sub_10003A6C8, (uint64_t)"BCM4387C2_22.2.603.2957_PCIE_RambutanB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_RambutanB_CLPC_OS_STATS_*", 0x8079Bu, 0, (uint64_t)"485014255d16fe055c3b13077cb0731201a660d00c8f8bdf75f0af9698088321", 0);
}

uint64_t sub_1000259A4()
{
  return sub_100013788((uint64_t)"9c99218366efb85adcd182800ac2b6c3ec9d7adf", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A73C, (uint64_t)sub_10003A814, (uint64_t)sub_10003A824, (uint64_t)"BCM4387C2_22.2.603.2952_PCIE_LycheeA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeA_CLPC_OS_USI_*", 0x7F0B2u, 0, (uint64_t)"cb14e8250e1ba808496e9bb052d67e17dd4ae1ff4da663c8dda99e072b8d093f", 0);
}

uint64_t sub_100025A38()
{
  return sub_100013788((uint64_t)"9c99218366efb85adcd182800ac2b6c3ec9d7adf", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003A898, (uint64_t)sub_10003A970, (uint64_t)sub_10003A980, (uint64_t)"BCM4387C2_22.2.603.2951_PCIE_LycheeA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeA_CLPC_OS_STATS_*", 0x7F0B4u, 0, (uint64_t)"aa1ae22f19b6545c48d776fcea3ac750767685095194b3cab5495cd39e187e06", 0);
}

uint64_t sub_100025ACC()
{
  return sub_100013788((uint64_t)"671ab6461038006837f6613e6131a24d6ecf3746", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003A9F4, (uint64_t)sub_10003AACC, (uint64_t)sub_10003AADC, (uint64_t)"BCM4387C2_22.2.603.2954_PCIE_LycheeB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeB_CLPC_OS_USI_*", 0x808DFu, 0, (uint64_t)"283905807af4a2a96281834fba520515cb8ccafce1388de8f4d97d3df479a773", 0);
}

uint64_t sub_100025B60()
{
  return sub_100013788((uint64_t)"671ab6461038006837f6613e6131a24d6ecf3746", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003AB50, (uint64_t)sub_10003AC28, (uint64_t)sub_10003AC38, (uint64_t)"BCM4387C2_22.2.603.2953_PCIE_LycheeB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_LycheeB_CLPC_OS_STATS_*", 0x808E1u, 0, (uint64_t)"2b2e1f5aef541e9b7791382d0b6a7963156b112b32bbb795ca8133cefdb03ab8", 0);
}

uint64_t sub_100025BF4()
{
  return sub_100013788((uint64_t)"469e8eaff261198443795930e976ca46f182b6eb", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003ACAC, (uint64_t)sub_10003AD84, (uint64_t)sub_10003AD94, (uint64_t)"BCM4387C2_22.2.603.2910_PCIE_CarambolaA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaA_CLPC_OS_USI_*", 0x7F015u, 0, (uint64_t)"dd4dc85782a9e48446ca642ec89898be109aac1dabe11c01799683b911ebb677", 0);
}

uint64_t sub_100025C88()
{
  return sub_100013788((uint64_t)"469e8eaff261198443795930e976ca46f182b6eb", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003AE08, (uint64_t)sub_10003AEE0, (uint64_t)sub_10003AEF0, (uint64_t)"BCM4387C2_22.2.603.2909_PCIE_CarambolaA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaA_CLPC_OS_STATS_*", 0x7F017u, 0, (uint64_t)"1a6bbf1bd816c9953c32f9bf49ad0a92cd550ee97bad016bdb24f6153779d740", 0);
}

uint64_t sub_100025D1C()
{
  return sub_100013788((uint64_t)"eeda5238acfd44909d7fa64eed1671e6abe3ad5f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003AF64, (uint64_t)sub_10003B03C, (uint64_t)sub_10003B04C, (uint64_t)"BCM4387C2_22.2.603.2912_PCIE_CarambolaB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaB_CLPC_OS_USI_*", 0x8091Eu, 0, (uint64_t)"ac2fdd05a99da53b407db4d50c217f0dad093ed1f09b8231bb150786b528a673", 0);
}

uint64_t sub_100025DB0()
{
  return sub_100013788((uint64_t)"eeda5238acfd44909d7fa64eed1671e6abe3ad5f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003B0C0, (uint64_t)sub_10003B198, (uint64_t)sub_10003B1A8, (uint64_t)"BCM4387C2_22.2.603.2911_PCIE_CarambolaB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_PCIE_CarambolaB_CLPC_OS_STATS_*", 0x80920u, 0, (uint64_t)"ec6db673097fbc44ec78510685b1b44ec10283fa7cc855ff99503783f9420208", 0);
}

uint64_t sub_100025E44()
{
  return sub_100013788((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003B21C, (uint64_t)sub_10003B2F4, (uint64_t)sub_10003B304, (uint64_t)"BCM4388C0_22.2.507.1364_PCIE_PineDA_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDA_CLPC_OS_USI_*", 0xC96EAu, 0, (uint64_t)"3cb41d4d7dffab778bc3b68c717572cff3ef2a4ee0e6ee639cd6daa1124bc655", 0);
}

uint64_t sub_100025ED8()
{
  return sub_100013788((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003B378, (uint64_t)sub_10003B450, (uint64_t)sub_10003B460, (uint64_t)"BCM4388C0_22.2.507.1363_PCIE_PineDA_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDA_CLPC_OS_STATS_*", 0xC96ECu, 0, (uint64_t)"2a25bedf33184c4f12198aa9e80ce3306a0a5a016b5dbcf4c76941fb079c0bf0", 0);
}

uint64_t sub_100025F6C()
{
  return sub_100014340((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1362_PCIE_PineDA_CLPC_OS_LPM_USI_20241003.bin", 825066, (uint64_t)"b5ae02c64413c0206d855c84d04b43ae6435ce80f3414bc7f36439798c7e4316");
}

uint64_t sub_100025FA0()
{
  return sub_100014340((uint64_t)"cd0e337fdabd4cb9decd57700c8189532a4f2239", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1361_PCIE_PineDA_CLPC_OS_LPM_STATS_20241003.bin", 825068, (uint64_t)"29fa5c8379ed881efeb43b2f4054e079a22317a7c4f189b9b1406f62d837d95d");
}

uint64_t sub_100025FD4()
{
  return sub_100013788((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003B4D4, (uint64_t)sub_10003B5AC, (uint64_t)sub_10003B5BC, (uint64_t)"BCM4388C0_22.2.507.1368_PCIE_PineDB_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDB_CLPC_OS_USI_*", 0xCCA68u, 0, (uint64_t)"8225955a07e4f0f7f5a28942b0b3abf1d67f1d3a1fe2beb1505dbc5f53f4131b", 0);
}

uint64_t sub_100026068()
{
  return sub_100013788((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003B630, (uint64_t)sub_10003B708, (uint64_t)sub_10003B718, (uint64_t)"BCM4388C0_22.2.507.1367_PCIE_PineDB_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PineDB_CLPC_OS_STATS_*", 0xCCA6Au, 0, (uint64_t)"0e1a670497a76ef219c54ed8c7deebcf15b4f7a02585629133cd12a2e6021681", 0);
}

uint64_t sub_1000260FC()
{
  return sub_100014340((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1366_PCIE_PineDB_CLPC_OS_LPM_USI_20241003.bin", 838248, (uint64_t)"a81d7e3593532ad78a08ef283e796469b22fa3d5a06a9d4d004db4cb5928cf6f");
}

uint64_t sub_100026130()
{
  return sub_100014340((uint64_t)"bab75d83e78e7bfb7a26484e9f86b7c1174c41ff", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1365_PCIE_PineDB_CLPC_OS_LPM_STATS_20241003.bin", 838250, (uint64_t)"385f6d7225b19bfd433752e3bf935f20cf8cc2581b3d5ff3744ee07cb719de3d");
}

uint64_t sub_100026164()
{
  return sub_100013788((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003B78C, (uint64_t)sub_10003B864, (uint64_t)sub_10003B874, (uint64_t)"BCM4388C0_22.2.507.1356_PCIE_MapleDA_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDA_CLPC_OS_USI_*", 0xCA037u, 0, (uint64_t)"481a50a4c67ea7ee02b0ebb1ec80b272d8cf92537244a918d1006d419ffee146", 0);
}

uint64_t sub_1000261F8()
{
  return sub_100013788((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003B8E8, (uint64_t)sub_10003B9C0, (uint64_t)sub_10003B9D0, (uint64_t)"BCM4388C0_22.2.507.1355_PCIE_MapleDA_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDA_CLPC_OS_STATS_*", 0xCA039u, 0, (uint64_t)"56b9829da970ebb6c7a0ab3c5985966a92edef25d1a99aadf537bf31513085b9", 0);
}

uint64_t sub_10002628C()
{
  return sub_100014340((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1354_PCIE_MapleDA_CLPC_OS_LPM_USI_20241003.bin", 827447, (uint64_t)"a46f854b3e6cb07b93747d54ccedfe9f370c39d8a8b87696bd1d4e3fde6487e0");
}

uint64_t sub_1000262C0()
{
  return sub_100014340((uint64_t)"8bbcb19183f4b6143b7b9c201712daf113991b52", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1353_PCIE_MapleDA_CLPC_OS_LPM_STATS_20241003.bin", 827449, (uint64_t)"6960e5846c1531f7346bbe1db4b489e7bdc1266498d38869c3373f96ded7e6db");
}

uint64_t sub_1000262F4()
{
  return sub_100013788((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003BA44, (uint64_t)sub_10003BB1C, (uint64_t)sub_10003BB2C, (uint64_t)"BCM4388C0_22.2.507.1360_PCIE_MapleDB_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDB_CLPC_OS_USI_*", 0xCCA79u, 0, (uint64_t)"ee8f307220d07a022a570c60440c9988d9a593ee8fa41184fdaa8cbd18427b57", 0);
}

uint64_t sub_100026388()
{
  return sub_100013788((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003BBA0, (uint64_t)sub_10003BC78, (uint64_t)sub_10003BC88, (uint64_t)"BCM4388C0_22.2.507.1359_PCIE_MapleDB_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MapleDB_CLPC_OS_STATS_*", 0xCCA7Bu, 0, (uint64_t)"9d07074fe5ba4b4d55ce2481d848cfa652eb560d0d31f6c672e19f4eb99487f4", 0);
}

uint64_t sub_10002641C()
{
  return sub_100014340((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1358_PCIE_MapleDB_CLPC_OS_LPM_USI_20241003.bin", 838265, (uint64_t)"5b5e2cffcf01c4e4cb528b8f2192478c2389305a7510bcb3fbb16ef34b60d3a2");
}

uint64_t sub_100026450()
{
  return sub_100014340((uint64_t)"caacad8370623331ff148fa8e3422166c1181ee1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1357_PCIE_MapleDB_CLPC_OS_LPM_STATS_20241003.bin", 838267, (uint64_t)"a22483b8547f2a7447eee6cffa1d2d88006b58fe3676f000af882cac0bf2d7ad");
}

uint64_t sub_100026484()
{
  return sub_100013788((uint64_t)"d3fc929a4e75941e0f19747f3ce027b6b0978ed6", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003BCFC, (uint64_t)sub_10003BDD4, (uint64_t)sub_10003BDE4, (uint64_t)"BCM4387C2_22.2.603.2930_PCIE_BoabA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_USI_*", 0x7EEA4u, 0, (uint64_t)"e68eee48f21945f867f4b53c41a2bfe6a2dcd6ecff91ab5a4fe1afde5de3c1b4", 0);
}

uint64_t sub_100026518()
{
  return sub_100013788((uint64_t)"d3fc929a4e75941e0f19747f3ce027b6b0978ed6", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003BE58, (uint64_t)sub_10003BF30, (uint64_t)sub_10003BF40, (uint64_t)"BCM4387C2_22.2.603.2929_PCIE_BoabA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_STATS_*", 0x7EEA6u, 0, (uint64_t)"547b729240449dc7f68d0a583c714d2c3318b1f388494ee26703b949804a6083", 0);
}

uint64_t sub_1000265AC()
{
  return sub_100013788((uint64_t)"4b18f9c0baffdf5ff5d13972497c8e93a983f32f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003BFB4, (uint64_t)sub_10003C08C, (uint64_t)sub_10003C09C, (uint64_t)"BCM4387C2_22.2.603.2930_PCIE_BoabA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_USI_*", 0x7EEA4u, 0, (uint64_t)"e68eee48f21945f867f4b53c41a2bfe6a2dcd6ecff91ab5a4fe1afde5de3c1b4", 0);
}

uint64_t sub_100026640()
{
  return sub_100013788((uint64_t)"4b18f9c0baffdf5ff5d13972497c8e93a983f32f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003C110, (uint64_t)sub_10003C1E8, (uint64_t)sub_10003C1F8, (uint64_t)"BCM4387C2_22.2.603.2929_PCIE_BoabA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BoabA_*_OS_STATS_*", 0x7EEA6u, 0, (uint64_t)"547b729240449dc7f68d0a583c714d2c3318b1f388494ee26703b949804a6083", 0);
}

uint64_t sub_1000266D4()
{
  return sub_100013788((uint64_t)"b43f2151332cf7b48f51472d3dae9843039b3c60", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003C26C, (uint64_t)sub_10003C344, (uint64_t)sub_10003C354, (uint64_t)"BCM4387C2_22.2.603.2932_PCIE_BoabB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_USI_*", 0x7EED0u, 0, (uint64_t)"545bb5834b16451f7112fc7f0ad6d2280bd8e4f91d6159ab100712a07ffe758d", 0);
}

uint64_t sub_100026768()
{
  return sub_100013788((uint64_t)"b43f2151332cf7b48f51472d3dae9843039b3c60", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003C3C8, (uint64_t)sub_10003C4A0, (uint64_t)sub_10003C4B0, (uint64_t)"BCM4387C2_22.2.603.2931_PCIE_BoabB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_STATS_*", 0x7EED2u, 0, (uint64_t)"d44586c86683c75de3064140cce10e4f58947937b6ed307436a5c3f01527b34c", 0);
}

uint64_t sub_1000267FC()
{
  return sub_100013788((uint64_t)"5503841f5e12c7ebbd59d490bf195bb600415413", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003C524, (uint64_t)sub_10003C5FC, (uint64_t)sub_10003C60C, (uint64_t)"BCM4387C2_22.2.603.2932_PCIE_BoabB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_USI_*", 0x7EED0u, 0, (uint64_t)"545bb5834b16451f7112fc7f0ad6d2280bd8e4f91d6159ab100712a07ffe758d", 0);
}

uint64_t sub_100026890()
{
  return sub_100013788((uint64_t)"5503841f5e12c7ebbd59d490bf195bb600415413", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003C680, (uint64_t)sub_10003C758, (uint64_t)sub_10003C768, (uint64_t)"BCM4387C2_22.2.603.2931_PCIE_BoabB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BoabB_*_OS_STATS_*", 0x7EED2u, 0, (uint64_t)"d44586c86683c75de3064140cce10e4f58947937b6ed307436a5c3f01527b34c", 0);
}

uint64_t sub_100026924()
{
  return sub_100013788((uint64_t)"1e8cde9590626720064ec3ad3ca99379505f6e1b", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003C7DC, (uint64_t)sub_10003C8B4, (uint64_t)sub_10003C8C4, (uint64_t)"BCM4387C2_22.2.603.2926_PCIE_BaobabA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_USI_*", 0x7EEA6u, 0, (uint64_t)"a674f9011fe13e7e0d3842668ed884050e0dbaeccb6182bdbf86f84e0022b6ba", 0);
}

uint64_t sub_1000269B8()
{
  return sub_100013788((uint64_t)"1e8cde9590626720064ec3ad3ca99379505f6e1b", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003C938, (uint64_t)sub_10003CA10, (uint64_t)sub_10003CA20, (uint64_t)"BCM4387C2_22.2.603.2925_PCIE_BaobabA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_STATS_*", 0x7EEA8u, 0, (uint64_t)"691e9e96f9062259c01cccea13570ae8bd2e8a9709f45889dd81aaa916050282", 0);
}

uint64_t sub_100026A4C()
{
  return sub_100013788((uint64_t)"1738c33ad98962e15b468aacf72f9d2431a7d87f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003CA94, (uint64_t)sub_10003CB6C, (uint64_t)sub_10003CB7C, (uint64_t)"BCM4387C2_22.2.603.2926_PCIE_BaobabA_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_USI_*", 0x7EEA6u, 0, (uint64_t)"a674f9011fe13e7e0d3842668ed884050e0dbaeccb6182bdbf86f84e0022b6ba", 0);
}

uint64_t sub_100026AE0()
{
  return sub_100013788((uint64_t)"1738c33ad98962e15b468aacf72f9d2431a7d87f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003CBF0, (uint64_t)sub_10003CCC8, (uint64_t)sub_10003CCD8, (uint64_t)"BCM4387C2_22.2.603.2925_PCIE_BaobabA_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabA_*_OS_STATS_*", 0x7EEA8u, 0, (uint64_t)"691e9e96f9062259c01cccea13570ae8bd2e8a9709f45889dd81aaa916050282", 0);
}

uint64_t sub_100026B74()
{
  return sub_100013788((uint64_t)"44050c1747b24c055300ff2304fefd11a8839f07", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003CD4C, (uint64_t)sub_10003CE24, (uint64_t)sub_10003CE34, (uint64_t)"BCM4387C2_22.2.603.2928_PCIE_BaobabB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_USI_*", 0x7EED2u, 0, (uint64_t)"799c307c42c2ef93fe0eb77e87a9a62256a8c2a8c52ff9c432bb568213a684b8", 0);
}

uint64_t sub_100026C08()
{
  return sub_100013788((uint64_t)"44050c1747b24c055300ff2304fefd11a8839f07", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003CEA8, (uint64_t)sub_10003CF80, (uint64_t)sub_10003CF90, (uint64_t)"BCM4387C2_22.2.603.2927_PCIE_BaobabB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_STATS_*", 0x7EED4u, 0, (uint64_t)"e9d8d874544159b5265d0ebeab173ad54ab6425dd7bf42fa95bec8d64cb51e34", 0);
}

uint64_t sub_100026C9C()
{
  return sub_100013788((uint64_t)"d0ab5982f1f1fee517ea387c5cd59879dc1fd63f", (uint64_t)"BCM4387C2", (uint64_t)"USI", (uint64_t)sub_10003D004, (uint64_t)sub_10003D0DC, (uint64_t)sub_10003D0EC, (uint64_t)"BCM4387C2_22.2.603.2928_PCIE_BaobabB_CLPC_OS_USI_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_USI_*", 0x7EED2u, 0, (uint64_t)"799c307c42c2ef93fe0eb77e87a9a62256a8c2a8c52ff9c432bb568213a684b8", 0);
}

uint64_t sub_100026D30()
{
  return sub_100013788((uint64_t)"d0ab5982f1f1fee517ea387c5cd59879dc1fd63f", (uint64_t)"BCM4387C2", (uint64_t)"STA", (uint64_t)sub_10003D160, (uint64_t)sub_10003D238, (uint64_t)sub_10003D248, (uint64_t)"BCM4387C2_22.2.603.2927_PCIE_BaobabB_CLPC_OS_STATS_20240822.bin", (uint64_t)"BCM4387C2_*_BaobabB_*_OS_STATS_*", 0x7EED4u, 0, (uint64_t)"e9d8d874544159b5265d0ebeab173ad54ab6425dd7bf42fa95bec8d64cb51e34", 0);
}

uint64_t sub_100026DC4()
{
  return sub_100013788((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003D2BC, (uint64_t)sub_10003D394, (uint64_t)sub_10003D3A4, (uint64_t)"BCM4388B0_20.1.168.493_PCIE_MahoganyA_CLPC_OS_USI_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyA_CLPC_OS_USI_*", 0x49D09u, 0, (uint64_t)"089076ee02c3b27760be76c41f47e26e1a03b4905ea5dfe53f147842794f303d", 0);
}

uint64_t sub_100026E58()
{
  return sub_100013788((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003D418, (uint64_t)sub_10003D4F0, (uint64_t)sub_10003D500, (uint64_t)"BCM4388B0_20.1.168.492_PCIE_MahoganyA_CLPC_OS_STATS_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyA_CLPC_OS_STATS_*", 0x49D63u, 0, (uint64_t)"f74240c983523a1ab26e7e6cae037b405332025a2bbb731f4617e020579124d3", 0);
}

uint64_t sub_100026EEC()
{
  return sub_100013788((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003D574, (uint64_t)sub_10003D64C, (uint64_t)sub_10003D65C, (uint64_t)"BCM4388B0_20.1.168.493_PCIE_MahoganyB_CLPC_OS_USI_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyB_CLPC_OS_USI_*", 0x49D09u, 0, (uint64_t)"089076ee02c3b27760be76c41f47e26e1a03b4905ea5dfe53f147842794f303d", 0);
}

uint64_t sub_100026F80()
{
  return sub_100013788((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003D6D0, (uint64_t)sub_10003D7A8, (uint64_t)sub_10003D7B8, (uint64_t)"BCM4388B0_20.1.168.492_PCIE_MahoganyB_CLPC_OS_STATS_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_MahoganyB_CLPC_OS_STATS_*", 0x49D63u, 0, (uint64_t)"f74240c983523a1ab26e7e6cae037b405332025a2bbb731f4617e020579124d3", 0);
}

uint64_t sub_100027014()
{
  return sub_100013788((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003D82C, (uint64_t)sub_10003D904, (uint64_t)sub_10003D914, (uint64_t)"BCM4388B0_20.1.168.489_PCIE_HickoryA_CLPC_OS_USI_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryA_CLPC_OS_USI_*", 0x49CE8u, 0, (uint64_t)"309356afa7290b0a43bf2454ba3818de1a03f910926f93d12f9949c9aba16edd", 0);
}

uint64_t sub_1000270A8()
{
  return sub_100013788((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003D988, (uint64_t)sub_10003DA60, (uint64_t)sub_10003DA70, (uint64_t)"BCM4388B0_20.1.168.488_PCIE_HickoryA_CLPC_OS_STATS_20220318.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryA_CLPC_OS_STATS_*", 0x49D3Au, 0, (uint64_t)"19424b455e7e94012c4ab529bb0f098aad8ffc553b8029d126371fd2250441e2", 0);
}

uint64_t sub_10002713C()
{
  return sub_100013788((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388B0", (uint64_t)"USI", (uint64_t)sub_10003DAE4, (uint64_t)sub_10003DBBC, (uint64_t)sub_10003DBCC, (uint64_t)"BCM4388B0_20.1.168.489_PCIE_HickoryB_CLPC_OS_USI_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryB_CLPC_OS_USI_*", 0x49CE8u, 0, (uint64_t)"309356afa7290b0a43bf2454ba3818de1a03f910926f93d12f9949c9aba16edd", 0);
}

uint64_t sub_1000271D0()
{
  return sub_100013788((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388B0", (uint64_t)"STA", (uint64_t)sub_10003DC40, (uint64_t)sub_10003DD18, (uint64_t)sub_10003DD28, (uint64_t)"BCM4388B0_20.1.168.488_PCIE_HickoryB_CLPC_OS_STATS_20220302.bin", (uint64_t)"BCM4388B0_*_PCIE_HickoryB_CLPC_OS_STATS_*", 0x49D3Au, 0, (uint64_t)"19424b455e7e94012c4ab529bb0f098aad8ffc553b8029d126371fd2250441e2", 0);
}

uint64_t sub_100027264()
{
  return sub_100013788((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003DD9C, (uint64_t)sub_10003DE74, (uint64_t)sub_10003DE84, (uint64_t)"BCM4388C0_22.2.507.1328_PCIE_MahoganyA_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyA_CLPC_OS_USI_*", 0xA08BDu, 0, (uint64_t)"560e9b9ba24661dcdc3918a68e178490c9cf066c7f334fae884a03a7fcb7820e", 0);
}

uint64_t sub_1000272F8()
{
  return sub_100013788((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003DEF8, (uint64_t)sub_10003DFD0, (uint64_t)sub_10003DFE0, (uint64_t)"BCM4388C0_22.2.507.1327_PCIE_MahoganyA_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyA_CLPC_OS_STATS_*", 0xA08BFu, 0, (uint64_t)"fc34f601c134eceeae80a3e0121998b9a5d18a525b9c5a8187380e7ab571dadf", 0);
}

uint64_t sub_10002738C()
{
  return sub_100014340((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1326_PCIE_MahoganyA_CLPC_OS_LPM_USI_20241003.bin", 657597, (uint64_t)"1854ddee649a972f0a673791d6eeaba84ac4f917904e140b993705e2c0b6a642");
}

uint64_t sub_1000273C0()
{
  return sub_100014340((uint64_t)"d973ac72c319475a1b4d61c8ba836b40ec64f06f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1325_PCIE_MahoganyA_CLPC_OS_LPM_STATS_20241003.bin", 657599, (uint64_t)"59cee544668067c06d5da2eeb11e7b96f570bd36c9e1e605fe6be64136f7ee92");
}

uint64_t sub_1000273F4()
{
  return sub_100013788((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003E054, (uint64_t)sub_10003E12C, (uint64_t)sub_10003E13C, (uint64_t)"BCM4388C0_22.2.507.1332_PCIE_MahoganyB_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyB_CLPC_OS_USI_*", 0xA3351u, 0, (uint64_t)"accf1cf7c11388b7a87b12fc7e7d605d72566da3e893edb91960dd94f00abd2e", 0);
}

uint64_t sub_100027488()
{
  return sub_100013788((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003E1B0, (uint64_t)sub_10003E288, (uint64_t)sub_10003E298, (uint64_t)"BCM4388C0_22.2.507.1331_PCIE_MahoganyB_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_MahoganyB_CLPC_OS_STATS_*", 0xA3353u, 0, (uint64_t)"7a83bff10a53f2021fb4634e6cd80a90581adf8e21da7cbb369cd8820c97bc5d", 0);
}

uint64_t sub_10002751C()
{
  return sub_100014340((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1330_PCIE_MahoganyB_CLPC_OS_LPM_USI_20241003.bin", 668497, (uint64_t)"057e40e8fb486a73aef1163e81b3189b1e203ffc00bae470f58e81f8baec2d4e");
}

uint64_t sub_100027550()
{
  return sub_100014340((uint64_t)"ecec03b5d2a104f38c04890833c815d7ce03e066", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1329_PCIE_MahoganyB_CLPC_OS_LPM_STATS_20241003.bin", 668499, (uint64_t)"99859c319a33b7f7c24314c438b28b1da3a1fff26993617ef6341460f35b8213");
}

uint64_t sub_100027584()
{
  return sub_100013788((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003E30C, (uint64_t)sub_10003E3E4, (uint64_t)sub_10003E3F4, (uint64_t)"BCM4388C0_22.2.507.1336_PCIE_HickoryA_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryA_CLPC_OS_USI_*", 0xA08BCu, 0, (uint64_t)"103a26beb54dc724812e8571f0aa2fe470bef4893ce7529bf8e6468e6c6d6dab", 0);
}

uint64_t sub_100027618()
{
  return sub_100013788((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003E468, (uint64_t)sub_10003E540, (uint64_t)sub_10003E550, (uint64_t)"BCM4388C0_22.2.507.1335_PCIE_HickoryA_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryA_CLPC_OS_STATS_*", 0xA08BEu, 0, (uint64_t)"6465d528eb091f1594401dccf9759b1bc22d700c61f76e193cb3fcfd847e9978", 0);
}

uint64_t sub_1000276AC()
{
  return sub_100014340((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1334_PCIE_HickoryA_CLPC_OS_LPM_USI_20241003.bin", 657596, (uint64_t)"a1d9a5f46842fb4d423130ea2f265adc1190881d12a2002f9292fdeb609f12fb");
}

uint64_t sub_1000276E0()
{
  return sub_100014340((uint64_t)"799fc3d0a43972cc867dd8cd0babc49587fd1f20", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1333_PCIE_HickoryA_CLPC_OS_LPM_STATS_20241003.bin", 657598, (uint64_t)"6ff36d716ff0ba854c9387200e70f33a2dd1f2284639227d24a816b4eb5858f6");
}

uint64_t sub_100027714()
{
  return sub_100013788((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003E5C4, (uint64_t)sub_10003E69C, (uint64_t)sub_10003E6AC, (uint64_t)"BCM4388C0_22.2.507.1340_PCIE_HickoryB_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryB_CLPC_OS_USI_*", 0xA3350u, 0, (uint64_t)"920deb5091d956afd4e53cbcc8dd5aa98be32a50326b3579ec38933b8a09c55f", 0);
}

uint64_t sub_1000277A8()
{
  return sub_100013788((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003E720, (uint64_t)sub_10003E7F8, (uint64_t)sub_10003E808, (uint64_t)"BCM4388C0_22.2.507.1339_PCIE_HickoryB_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_HickoryB_CLPC_OS_STATS_*", 0xA3352u, 0, (uint64_t)"7ca8f8441fa09c73a284a2d549ef3e15c68046b3ed391ed2503b74de633a6f39", 0);
}

uint64_t sub_10002783C()
{
  return sub_100014340((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1338_PCIE_HickoryB_CLPC_OS_LPM_USI_20241003.bin", 668496, (uint64_t)"5f63351332ee7fa24bf2fd0a141a3740cc5331423929b337fc81801883983a28");
}

uint64_t sub_100027870()
{
  return sub_100014340((uint64_t)"9293cbbd22b61f1c7a55d12571c98c68d7f8d37a", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1337_PCIE_HickoryB_CLPC_OS_LPM_STATS_20241003.bin", 668498, (uint64_t)"33a74823b22e1111fb44bb5cd4445983933de5a0f922672b89b33d7efd8bacb1");
}

uint64_t sub_1000278A4()
{
  return sub_100013788((uint64_t)"9d11e98933edc56758a166edcf9b4058fb20ecd1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003E87C, (uint64_t)sub_10003E954, (uint64_t)sub_10003E964, (uint64_t)"BCM4388C0_22.2.507.1348_PCIE_MangosteenA_CLPC_OS_USI_20241003.bin", (uint64_t)&unk_1004CA20E, 0xC963Fu, 0, (uint64_t)"b3b5fe92142d9321a0fac90789f4c53cd46862746c9525a39a32a2dd7bf8cf5a", 0);
}

uint64_t sub_100027938()
{
  return sub_100013788((uint64_t)"9d11e98933edc56758a166edcf9b4058fb20ecd1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003E9D8, (uint64_t)sub_10003EAB0, (uint64_t)sub_10003EAC0, (uint64_t)"BCM4388C0_22.2.507.1347_PCIE_MangosteenA_CLPC_OS_STATS_20241003.bin", (uint64_t)&unk_1004CA20E, 0xC9641u, 0, (uint64_t)"0477b2c4c7cac423f2bd5a45aef5c82400384ba5c37aee5b516158bf46cbb4bb", 0);
}

uint64_t sub_1000279CC()
{
  return sub_100014340((uint64_t)"9d11e98933edc56758a166edcf9b4058fb20ecd1", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1346_PCIE_MangosteenA_CLPC_OS_LPM_USI_20241003.bin", 824895, (uint64_t)"458e4883bde4ef32af1b6e1a31a87140cd1bb7d022443710be4c2738ad7a49b8");
}

uint64_t sub_100027A00()
{
  return sub_100014340((uint64_t)"9d11e98933edc56758a166edcf9b4058fb20ecd1", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1345_PCIE_MangosteenA_CLPC_OS_LPM_STATS_20241003.bin", 824897, (uint64_t)"6b69a658d289bcd0bc00520a3591968b90d77f7734ed9ac6da2ff4818a336687");
}

uint64_t sub_100027A34()
{
  return sub_100013788((uint64_t)"9d11e98933edc56758a166edcf9b4058fb20ecd1", (uint64_t)"BCM4388C2", (uint64_t)"USI", (uint64_t)sub_10003EB34, (uint64_t)sub_10003EC0C, (uint64_t)sub_10003EC1C, (uint64_t)"BCM4388C2_22.2.144.1489_PCIE_MangosteenA_CLPC_OS_USI_20240903.bin", (uint64_t)"BCM4388C2_*_PCIE_MangosteenA_CLPC_OS_USI_*", 0x85401u, 0, (uint64_t)"4f743e443f1056392b5137729b4fb3ed1adec26af3eac28b13510dd4ea99a12e", 0);
}

uint64_t sub_100027AC8()
{
  return sub_100013788((uint64_t)"9d11e98933edc56758a166edcf9b4058fb20ecd1", (uint64_t)"BCM4388C2", (uint64_t)"STA", (uint64_t)sub_10003EC90, (uint64_t)sub_10003ED68, (uint64_t)sub_10003ED78, (uint64_t)"BCM4388C2_22.2.144.1488_PCIE_MangosteenA_CLPC_OS_STATS_20240903.bin", (uint64_t)"BCM4388C2_*_PCIE_MangosteenA_CLPC_OS_STATS_*", 0x85423u, 0, (uint64_t)"0e4cc776bf6436d5c822f66a4e3096f772188232294187de1a279a6d66c4d2a8", 0);
}

uint64_t sub_100027B5C()
{
  return sub_100013788((uint64_t)"21a6e4a9b280786063951785460d28b6b40036b8", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003EDEC, (uint64_t)sub_10003EEC4, (uint64_t)sub_10003EED4, (uint64_t)"BCM4388C0_22.2.507.1352_PCIE_MangosteenB_CLPC_OS_USI_20241003.bin", (uint64_t)&unk_1004CA20E, 0xCC9BDu, 0, (uint64_t)"5fb304c2311057f9d8953b2ef28e8bcc2dc9d56db11ad9e23ad595964ae3da8a", 0);
}

uint64_t sub_100027BF0()
{
  return sub_100013788((uint64_t)"21a6e4a9b280786063951785460d28b6b40036b8", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003EF48, (uint64_t)sub_10003F020, (uint64_t)sub_10003F030, (uint64_t)"BCM4388C0_22.2.507.1351_PCIE_MangosteenB_CLPC_OS_STATS_20241003.bin", (uint64_t)&unk_1004CA20E, 0xCC9BFu, 0, (uint64_t)"b8fbc595b3a8172d7a507d8312e96b0560b4f3dc59790940d3149ae98ce7d735", 0);
}

uint64_t sub_100027C84()
{
  return sub_100014340((uint64_t)"21a6e4a9b280786063951785460d28b6b40036b8", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1350_PCIE_MangosteenB_CLPC_OS_LPM_USI_20241003.bin", 838077, (uint64_t)"0b729eba58d4d3a79049e8628bca584f66a6fa054ab191131b55561613901bac");
}

uint64_t sub_100027CB8()
{
  return sub_100014340((uint64_t)"21a6e4a9b280786063951785460d28b6b40036b8", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1349_PCIE_MangosteenB_CLPC_OS_LPM_STATS_20241003.bin", 838079, (uint64_t)"45a31f80304f1ca62499cda8946e35a4640c56a734ecee728e6231a8f1d02fa3");
}

uint64_t sub_100027CEC()
{
  return sub_100013788((uint64_t)"21a6e4a9b280786063951785460d28b6b40036b8", (uint64_t)"BCM4388C2", (uint64_t)"USI", (uint64_t)sub_10003F0A4, (uint64_t)sub_10003F17C, (uint64_t)sub_10003F18C, (uint64_t)"BCM4388C2_22.2.144.1491_PCIE_MangosteenB_CLPC_OS_USI_20240903.bin", (uint64_t)"BCM4388C2_*_PCIE_MangosteenB_CLPC_OS_USI_*", 0x86249u, 0, (uint64_t)"e1fca5982f45dd440432d828f91f28c7e846b68e755b3441510addd3ff835cea", 0);
}

uint64_t sub_100027D80()
{
  return sub_100013788((uint64_t)"21a6e4a9b280786063951785460d28b6b40036b8", (uint64_t)"BCM4388C2", (uint64_t)"STA", (uint64_t)sub_10003F200, (uint64_t)sub_10003F2D8, (uint64_t)sub_10003F2E8, (uint64_t)"BCM4388C2_22.2.144.1490_PCIE_MangosteenB_CLPC_OS_STATS_20240903.bin", (uint64_t)"BCM4388C2_*_PCIE_MangosteenB_CLPC_OS_STATS_*", 0x8626Bu, 0, (uint64_t)"79e51ad3df1eebc8f4bb7e83fe1706782b52ac97c80a753b1dcedcdbd2ab9f56", 0);
}

uint64_t sub_100027E14()
{
  return sub_100013788((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003F35C, (uint64_t)sub_10003F434, (uint64_t)sub_10003F444, (uint64_t)"BCM4388C0_22.2.507.1372_PCIE_PlumA_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumA_CLPC_OS_USI_*", 0xCA617u, 0, (uint64_t)"c86e73bc352bfc2668eeebefa49b1e29c6295c957d7408359140bbbc930dd194", 0);
}

uint64_t sub_100027EA8()
{
  return sub_100013788((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003F4B8, (uint64_t)sub_10003F590, (uint64_t)sub_10003F5A0, (uint64_t)"BCM4388C0_22.2.507.1371_PCIE_PlumA_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumA_CLPC_OS_STATS_*", 0xCA619u, 0, (uint64_t)"29390fe19a96ce27151a7813b00c292d66bded016fe5b9825e638364c53b57fb", 0);
}

uint64_t sub_100027F3C()
{
  return sub_100014340((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1370_PCIE_PlumA_CLPC_OS_LPM_USI_20241003.bin", 828951, (uint64_t)"a61b7239cf9351acedaea5277b29df03a22e93fefbb3e136fa204de229525681");
}

uint64_t sub_100027F70()
{
  return sub_100014340((uint64_t)"399f8896caa9a7c75233dcec968ce192136ed52f", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1369_PCIE_PlumA_CLPC_OS_LPM_STATS_20241003.bin", 828953, (uint64_t)"7ee7ba1fbdba8e75c30149e8721d271bd661085fc0ab92c36937e15d57bd6077");
}

uint64_t sub_100027FA4()
{
  return sub_100013788((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003F614, (uint64_t)sub_10003F6EC, (uint64_t)sub_10003F6FC, (uint64_t)"BCM4388C0_22.2.507.1376_PCIE_PlumB_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumB_CLPC_OS_USI_*", 0xCCC5Bu, 0, (uint64_t)"4d81da3263a41e94f79df0499b70a95ae4a82797af2a3cf860872c93fe8606f8", 0);
}

uint64_t sub_100028038()
{
  return sub_100013788((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003F770, (uint64_t)sub_10003F848, (uint64_t)sub_10003F858, (uint64_t)"BCM4388C0_22.2.507.1375_PCIE_PlumB_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PlumB_CLPC_OS_STATS_*", 0xCCC5Du, 0, (uint64_t)"da2006d929f47bc54613e726429276fdaa057561db7d14f4f05ffe512cb8b665", 0);
}

uint64_t sub_1000280CC()
{
  return sub_100014340((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1374_PCIE_PlumB_CLPC_OS_LPM_USI_20241003.bin", 838747, (uint64_t)"9db35eb24a1fe8f278167ae0bb2b00730677c5b3e45e0d490b2cb34bef611475");
}

uint64_t sub_100028100()
{
  return sub_100014340((uint64_t)"afde173f92a5b7b9226437d48a3ce8dfd86e998d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1373_PCIE_PlumB_CLPC_OS_LPM_STATS_20241003.bin", 838749, (uint64_t)"0a97c792f229793b920d26199e3531d1af00029a9cdcb3ef6aa76104ae2bb2d1");
}

uint64_t sub_100028134()
{
  return sub_100013788((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003F8CC, (uint64_t)sub_10003F9A4, (uint64_t)sub_10003F9B4, (uint64_t)"BCM4388C0_22.2.507.1380_PCIE_PersimmonA_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonA_CLPC_OS_USI_*", 0xCA61Cu, 0, (uint64_t)"bfb5cebb3b6fba933cd3cc2eebaf7f5de96b38ab34216338e2d417fce025f604", 0);
}

uint64_t sub_1000281C8()
{
  return sub_100013788((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003FA28, (uint64_t)sub_10003FB00, (uint64_t)sub_10003FB10, (uint64_t)"BCM4388C0_22.2.507.1379_PCIE_PersimmonA_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonA_CLPC_OS_STATS_*", 0xCA61Eu, 0, (uint64_t)"04bfd3230c3e541cbddc660b7e0ee33ec6a95d8233b3e59c8ba24503cc5e625b", 0);
}

uint64_t sub_10002825C()
{
  return sub_100014340((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1378_PCIE_PersimmonA_CLPC_OS_LPM_USI_20241003.bin", 828956, (uint64_t)"00bb5ba014177f4e6f7f10c5a0ccdf1f9f46b15dc2e6091d2b97ac97431c5c14");
}

uint64_t sub_100028290()
{
  return sub_100014340((uint64_t)"73fd0a58aac62c06235d178961aadf3732733b43", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1377_PCIE_PersimmonA_CLPC_OS_LPM_STATS_20241003.bin", 828958, (uint64_t)"cca1f50550ee989c109d66f23fd3af1632f79974ac99dec8e90930918fb14a7d");
}

uint64_t sub_1000282C4()
{
  return sub_100013788((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)sub_10003FB84, (uint64_t)sub_10003FC5C, (uint64_t)sub_10003FC6C, (uint64_t)"BCM4388C0_22.2.507.1384_PCIE_PersimmonB_CLPC_OS_USI_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonB_CLPC_OS_USI_*", 0xCCC60u, 0, (uint64_t)"70d7f0abefbd0f72dc9f1e469324cb88420f290ce97963ccc6d5ee435cc2bf8c", 0);
}

uint64_t sub_100028358()
{
  return sub_100013788((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)sub_10003FCE0, (uint64_t)sub_10003FDB8, (uint64_t)sub_10003FDC8, (uint64_t)"BCM4388C0_22.2.507.1383_PCIE_PersimmonB_CLPC_OS_STATS_20241003.bin", (uint64_t)"BCM4388C0_*_PCIE_PersimmonB_CLPC_OS_STATS_*", 0xCCC62u, 0, (uint64_t)"e4d780367b6d5323281f9ff59f8351957497394fba44a6aba05dba8b06ac09e6", 0);
}

uint64_t sub_1000283EC()
{
  return sub_100014340((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"USI", (uint64_t)"BCM4388C0_22.2.507.1382_PCIE_PersimmonB_CLPC_OS_LPM_USI_20241003.bin", 838752, (uint64_t)"187617f50d19da0fbc3d9840e7b258c7b4aeb8b808b4ae09961be53505a05afb");
}

uint64_t sub_100028420()
{
  return sub_100014340((uint64_t)"ab0e3dc0e7e9bebb3f0544980ef4922e6580024d", (uint64_t)"BCM4388C0", (uint64_t)"STA", (uint64_t)"BCM4388C0_22.2.507.1381_PCIE_PersimmonB_CLPC_OS_LPM_STATS_20241003.bin", 838754, (uint64_t)"82c8e26007561226b0383df804d24feee8f8dc2a8642aec499957515d3fe70e7");
}

uint64_t sub_100028454()
{
  return sub_100013788((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)"BCM4357B1", (uint64_t)"MUR", (uint64_t)sub_10003FE3C, (uint64_t)sub_100040018, (uint64_t)sub_100040028, (uint64_t)"BCM4357B1_19.1.282.5161_Tuborg_OS_MUR_20210524.hcd", 0, 0x27861u, (uint64_t)&unk_1004292AD, 0, 0);
}

uint64_t sub_1000284E4()
{
  return sub_1000165C4((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)&unk_100450B0F, 210);
}

uint64_t sub_1000284FC()
{
  return sub_100013788((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)"BCM4357B1", (uint64_t)"USI", (uint64_t)sub_1000400C4, (uint64_t)sub_1000402A0, (uint64_t)sub_1000402B0, (uint64_t)"BCM4357B1_19.1.282.5162_Tuborg_OS_USI_20210524.hcd", 0, 0x278BDu, (uint64_t)&unk_100450BE1, 0, 0);
}

uint64_t sub_10002858C()
{
  return sub_1000165C4((uint64_t)"75ca7dd93c5ac33c4811050d8987504774003971", (uint64_t)&unk_10047849F, 210);
}

uint64_t sub_1000285A4()
{
  return sub_100013788((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)"BCM4357B1", (uint64_t)"MUR", (uint64_t)sub_10004034C, (uint64_t)sub_100040528, (uint64_t)sub_100040538, (uint64_t)"BCM4357B1_19.1.282.5161_Tuborg_OS_MUR_20210524.hcd", 0, 0x27861u, (uint64_t)&unk_100478571, 0, 0);
}

uint64_t sub_100028634()
{
  return sub_1000165C4((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)&unk_10049FDD3, 210);
}

uint64_t sub_10002864C()
{
  return sub_100013788((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)"BCM4357B1", (uint64_t)"USI", (uint64_t)sub_1000405D4, (uint64_t)sub_1000407B0, (uint64_t)sub_1000407C0, (uint64_t)"BCM4357B1_19.1.282.5162_Tuborg_OS_USI_20210524.hcd", 0, 0x278BDu, (uint64_t)&unk_10049FEA5, 0, 0);
}

uint64_t sub_1000286DC()
{
  return sub_1000165C4((uint64_t)"2dd42fd91f1ffb3344956ece1867a06a12aaf354", (uint64_t)&unk_1004C7763, 210);
}

uint64_t sub_1000286F4()
{
  return sub_100013788((uint64_t)"63a62c65c42a4b575b6f86f913dfdb7d2bcd8a67", (uint64_t)"APPLE_M2", (uint64_t)"ALL", (uint64_t)sub_10004085C, (uint64_t)sub_10004086C, (uint64_t)sub_100040980, (uint64_t)"aci_marconi2_init.hcd", 0, 0x34u, (uint64_t)&unk_1004C8958, 0, 0);
}

uint64_t sub_100028780()
{
  return sub_1000165C4((uint64_t)"63a62c65c42a4b575b6f86f913dfdb7d2bcd8a67", (uint64_t)&unk_1004C7835, 187);
}

uint64_t sub_100028798()
{
  return sub_100013788((uint64_t)"c8f7d956382d069f92bb1c488458f5e8281faa8d", (uint64_t)"APPLE_M2_5", (uint64_t)"ALL", (uint64_t)sub_1000409CC, (uint64_t)sub_1000409DC, (uint64_t)sub_100040AC8, (uint64_t)"aci_marconi2_5_init.hcd", 0, 0x34u, (uint64_t)&unk_1004C898D, 0, 0);
}

uint64_t sub_100028824()
{
  return sub_100014340((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)"BCM4378B1_22.3.540.3953_PCIE_Moana_LPM_iOS_MUR_20241009.bin", 380071, (uint64_t)"9932ad44b227f8d19d4e7a72d28dc19928f5866a0b3b1ff6ac91d290b3d9f409");
}

uint64_t sub_100028858()
{
  return sub_100014340((uint64_t)"4e9bbf98c3d9b4e58450eb4d7a2cc2a4464418cf", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)"BCM4378B1_22.3.540.3954_PCIE_Moana_LPM_iOS_USI_20241009.bin", 380071, (uint64_t)"026dcf947bfbc8b01ee89916ed39fac20b74cb3488ab5bb38fb48af7b3d3dcc3");
}

uint64_t sub_10002888C()
{
  return sub_100014340((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)"BCM4378B1_22.3.540.3951_PCIE_Hei_LPM_iOS_MUR_20241009.bin", 380069, (uint64_t)"daf8f86063346a3259f2170ae63e42859b7579c5343800597272a9a635865cc4");
}

uint64_t sub_1000288C0()
{
  return sub_100014340((uint64_t)"fc9b492bd286df58e958cf073cbb0d97ab185dfc", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)"BCM4378B1_22.3.540.3952_PCIE_Hei_LPM_iOS_USI_20241009.bin", 380069, (uint64_t)"644dd6f93412aea2ad4c3c1d44b2a9270d3a020e60271d9ea4286345e4e9eba6");
}

uint64_t sub_1000288F4()
{
  return sub_100014340((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"MUR", (uint64_t)"BCM4378B1_22.3.540.3955_PCIE_Tala_LPM_iOS_MUR_20241009.bin", 380070, (uint64_t)"60f1cf76086a5518338462a559c4d472da9bdada8fe7782745ce6ec2e7b91350");
}

uint64_t sub_100028928()
{
  return sub_100014340((uint64_t)"db26827f74a26f71e1b75fe586ff403e56d4f7f1", (uint64_t)"BCM4378B1", (uint64_t)"USI", (uint64_t)"BCM4378B1_22.3.540.3956_PCIE_Tala_LPM_iOS_USI_20241009.bin", 380070, (uint64_t)"b908cb08abc2c0e76757d1d42dc44341658fab3ab169d9cc4b60871aeb93b10e");
}

uint64_t sub_10002895C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028B24()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100028B34()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028BD0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028D98()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100028DA8()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100028E44()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002900C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002901C()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000290B8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029280()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100029290()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002932C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000294F4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100029504()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000295A0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029768()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100029778()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029814()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000299DC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000299EC()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029A88()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029C50()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100029C60()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029CFC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029ED8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100029EE8()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100029F84()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A160()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002A170()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A20C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A3E8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002A3F8()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A494()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A670()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002A680()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A71C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A8F8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002A908()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002A9A4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AB80()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002AB90()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AC2C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AE08()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002AE18()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002AEB4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B090()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002B0A0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B13C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B318()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002B328()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B3C4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B5A0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002B5B0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B64C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B828()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002B838()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002B8D4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BAB0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002BAC0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BB5C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BD38()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002BD48()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BDE4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002BFC0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002BFD0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C06C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C144()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002C154()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002C1C8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C2A0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002C2B0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002C324()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C3FC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002C40C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002C480()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C558()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002C568()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002C5DC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C6B4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002C6C4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002C738()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002C810()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002C820()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002C894()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CA70()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002CA80()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CB1C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CCF8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002CD08()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CDA4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CE7C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002CE8C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002CF00()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002CFD8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002CFE8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D05C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D134()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D144()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D1B8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D290()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D2A0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D314()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D3EC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D3FC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D470()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D548()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D558()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D5CC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D6A4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D6B4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D728()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D800()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D810()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D884()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002D95C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002D96C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002D9E0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DAB8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002DAC8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002DB3C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DC14()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002DC24()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002DC98()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DD70()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002DD80()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002DDF4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002DECC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002DEDC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002DF50()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E028()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E038()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E0AC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E184()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E194()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E208()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E2E0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E2F0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E364()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E43C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E44C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E4C0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E598()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E5A8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E61C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E6F4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E704()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E778()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E850()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E860()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002E8D4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002E9AC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002E9BC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002EA30()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EB08()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002EB18()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002EB8C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EC64()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002EC74()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002ECE8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EDC0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002EDD0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002EE44()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002EF1C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002EF2C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002EFA0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F078()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F088()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F0FC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F1D4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F1E4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F258()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F330()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F340()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F3B4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F48C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F49C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F510()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F5E8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F5F8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F66C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F744()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F754()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F7C8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F8A0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002F8B0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002F924()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F9FC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002FA0C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002FA80()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FB58()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002FB68()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002FBDC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FCB4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002FCC4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002FD38()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FE10()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002FE20()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002FE94()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002FF6C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10002FF7C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10002FFF0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000300C8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000300D8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003014C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030224()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030234()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000302A8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030380()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030390()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030404()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000304DC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000304EC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030560()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030638()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030648()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000306BC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030794()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000307A4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030818()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000308F0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030900()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030974()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030A4C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030A5C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030AD0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030BA8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030BB8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030C2C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030D04()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030D14()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030D88()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030E60()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030E70()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100030EE4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100030FBC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100030FCC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031040()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031118()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031128()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003119C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031274()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031284()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000312F8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000313D0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000313E0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031454()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003152C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003153C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000315B0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031688()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031698()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003170C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000317E4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000317F4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031868()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031940()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031950()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000319C4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031A9C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031AAC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031B20()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031BF8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031C08()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031C7C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031D54()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031D64()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031DD8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100031EB0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100031EC0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100031F34()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003200C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003201C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032090()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032168()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032178()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000321EC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000322C4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000322D4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032348()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032420()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032430()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000324A4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003257C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003258C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032600()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000326D8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000326E8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003275C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032834()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032844()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000328B8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032990()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000329A0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032A14()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032AEC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032AFC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032B70()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032C48()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032C58()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032CCC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032DA4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032DB4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032E28()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100032F00()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100032F10()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100032F84()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033160()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100033170()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003320C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000333E8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000333F8()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033494()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033670()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100033680()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003371C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000338F8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100033908()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000339A4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033B80()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100033B90()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033C2C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033E08()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100033E18()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100033EB4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034090()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000340A0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003413C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034318()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100034328()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000343C4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000345A0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000345B0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003464C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034828()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100034838()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000348D4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034AB0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100034AC0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034B5C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034D38()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100034D48()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034DE4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100034FC0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100034FD0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003506C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035248()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100035258()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000352F4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000354D0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000354E0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003557C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035758()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100035768()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035804()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000359E0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000359F0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035A8C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035C68()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100035C78()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035D14()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035EF0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100035F00()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100035F9C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("hci reset", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -A", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -N", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -Q", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036178()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100036188()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036224()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000363EC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000363FC()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036498()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036660()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100036670()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003670C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000368D4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000368E4()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036980()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036B48()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100036B58()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036BF4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036DBC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100036DCC()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100036E68()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -B", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("msleep 200", 0);
                                        if (!result)
                                        {
                                          return sub_10001AC20("quit", 0);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037030()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037040()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x01", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000370DC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000371B4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000371C4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037238()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037310()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037320()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037394()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003746C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003747C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000374F0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000375C8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000375D8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003764C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037724()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037734()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000377A8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037880()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037890()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037904()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000379DC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000379EC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037A60()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037B38()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037B48()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037BBC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037C94()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037CA4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037D18()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037DF0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037E00()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037E74()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100037F4C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100037F5C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100037FD0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000380A8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000380B8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003812C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038204()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038214()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038288()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038360()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038370()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000383E4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000384BC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000384CC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038540()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038618()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038628()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003869C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038774()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038784()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000387F8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000388D0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000388E0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038954()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038A2C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038A3C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038AB0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038B88()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038B98()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038C0C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038CE4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038CF4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038D68()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038E40()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038E50()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100038EC4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100038F9C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100038FAC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039020()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000390F8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039108()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003917C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039254()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039264()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000392D8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000393B0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000393C0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039434()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003950C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003951C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039590()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039668()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039678()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000396EC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000397C4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000397D4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039848()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039920()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039930()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_1000399A4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039A7C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039A8C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039B00()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039BD8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039BE8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039C5C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039D34()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039D44()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039DB8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039E90()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039EA0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039F14()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100039FEC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100039FFC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A070()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A148()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A158()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A1CC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A2A4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A2B4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A328()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A400()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A410()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A484()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A55C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A56C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A5E0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A6B8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A6C8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A73C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A814()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A824()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A898()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003A970()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003A980()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003A9F4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AACC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003AADC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003AB50()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AC28()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003AC38()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003ACAC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AD84()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003AD94()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003AE08()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003AEE0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003AEF0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003AF64()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B03C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B04C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B0C0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B198()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B1A8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B21C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B2F4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B304()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B378()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B450()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B460()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B4D4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B5AC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B5BC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B630()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B708()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B718()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B78C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B864()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B874()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003B8E8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003B9C0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003B9D0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003BA44()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BB1C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003BB2C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003BBA0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BC78()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003BC88()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003BCFC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BDD4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003BDE4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003BE58()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003BF30()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003BF40()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003BFB4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C08C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C09C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C110()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C1E8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C1F8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C26C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C344()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C354()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C3C8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C4A0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C4B0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C524()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C5FC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C60C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C680()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C758()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C768()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C7DC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003C8B4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003C8C4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003C938()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CA10()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003CA20()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003CA94()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CB6C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003CB7C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003CBF0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CCC8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003CCD8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003CD4C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CE24()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003CE34()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003CEA8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003CF80()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003CF90()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D004()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D0DC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D0EC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D160()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D238()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D248()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D2BC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D394()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D3A4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D418()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D4F0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D500()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D574()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D64C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D65C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D6D0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D7A8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D7B8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D82C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003D904()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003D914()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003D988()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DA60()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003DA70()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003DAE4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DBBC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003DBCC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003DC40()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DD18()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003DD28()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003DD9C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DE74()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003DE84()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003DEF8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003DFD0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003DFE0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E054()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E12C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E13C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E1B0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E288()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E298()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E30C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E3E4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E3F4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E468()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E540()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E550()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E5C4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E69C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E6AC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E720()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E7F8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E808()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E87C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003E954()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003E964()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003E9D8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003EAB0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003EAC0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003EB34()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003EC0C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003EC1C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003EC90()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003ED68()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003ED78()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003EDEC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003EEC4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003EED4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003EF48()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F020()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F030()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F0A4()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F17C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F18C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F200()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F2D8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F2E8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F35C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F434()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F444()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F4B8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F590()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F5A0()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F614()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F6EC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F6FC()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F770()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F848()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F858()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003F8CC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003F9A4()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003F9B4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003FA28()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003FB00()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003FB10()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003FB84()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003FC5C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003FC6C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003FCE0()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("device -D", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -W", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -A", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("bcm -N", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("bcm -Q", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("bcm -x", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
                if (!result)
                {
                  return sub_10001AC20("quit", 0);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10003FDB8()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10003FDC8()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("hci reset", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("bcm -s 0x0f,0x00,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00", 0);
      if (!result)
      {
        return sub_10001AC20("quit", 0);
      }
    }
  }
  return result;
}

uint64_t sub_10003FE3C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100040018()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100040028()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000400C4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000402A0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000402B0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10004034C()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100040528()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_100040538()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000405D4()
{
  uint64_t result = sub_10001AC20("device -D", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("power off", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("msleep 100", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("power on", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("msleep 100", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("hci reset", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("bcm -b 1500000", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("msleep 200 ", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("bcm -W", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("msleep 200 ", 0);
                      if (!result)
                      {
                        uint64_t result = sub_10001AC20("device -s 115200", 0);
                        if (!result)
                        {
                          uint64_t result = sub_10001AC20("msleep 200 ", 0);
                          if (!result)
                          {
                            uint64_t result = sub_10001AC20("bcm -B", 0);
                            if (!result)
                            {
                              uint64_t result = sub_10001AC20("msleep 200 ", 0);
                              if (!result)
                              {
                                uint64_t result = sub_10001AC20("bcm -A", 0);
                                if (!result)
                                {
                                  uint64_t result = sub_10001AC20("bcm -N", 0);
                                  if (!result)
                                  {
                                    uint64_t result = sub_10001AC20("bcm -Q", 0);
                                    if (!result)
                                    {
                                      uint64_t result = sub_10001AC20("bcm -x", 0);
                                      if (!result)
                                      {
                                        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
                                        if (!result)
                                        {
                                          uint64_t result = sub_10001AC20("msleep 200", 0);
                                          if (!result)
                                          {
                                            return sub_10001AC20("quit", 0);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000407B0()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000407C0()
{
  uint64_t result = sub_10001AC20("device -D -S", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("wake on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("hci reset", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("bcm -s 0x01,0x00,0x00,0x01,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("wake off", 0);
          if (!result)
          {
            return sub_10001AC20("quit", 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10004085C()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_10004086C()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("power on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("device -D", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("aci -Q", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("aci -K", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("aci -W", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("aci -R", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("aci -A", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("aci -N", 0);
                  if (!result)
                  {
                    uint64_t result = sub_10001AC20("aci -V", 0);
                    if (!result)
                    {
                      uint64_t result = sub_10001AC20("aci -U", 0);
                      if (!result)
                      {
                        return sub_10001AC20("quit", 0);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100040980()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    return sub_10001AC20("quit", 0);
  }
  return result;
}

uint64_t sub_1000409CC()
{
  return sub_10001AC20("quit", 0);
}

uint64_t sub_1000409DC()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    uint64_t result = sub_10001AC20("power on", 0);
    if (!result)
    {
      uint64_t result = sub_10001AC20("device -D", 0);
      if (!result)
      {
        uint64_t result = sub_10001AC20("aci -W", 0);
        if (!result)
        {
          uint64_t result = sub_10001AC20("aci -R", 0);
          if (!result)
          {
            uint64_t result = sub_10001AC20("aci -A", 0);
            if (!result)
            {
              uint64_t result = sub_10001AC20("aci -N", 0);
              if (!result)
              {
                uint64_t result = sub_10001AC20("aci -V", 0);
                if (!result)
                {
                  uint64_t result = sub_10001AC20("aci -U", 0);
                  if (!result)
                  {
                    return sub_10001AC20("quit", 0);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100040AC8()
{
  uint64_t result = sub_10001AC20("power off", 0);
  if (!result)
  {
    return sub_10001AC20("quit", 0);
  }
  return result;
}

unint64_t sub_100040B14()
{
  *(_DWORD *)buffer = 0;
  io_registry_entry_t v0 = getenv("BT_BAUDRATE");
  if (v0) {
    return strtoul(v0, 0, 0);
  }
  CFDictionaryRef v2 = IOServiceNameMatching("bluetooth");
  if (!v2) {
    return 0;
  }
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
  if (!MatchingService) {
    return 0;
  }
  io_object_t v4 = MatchingService;
  CFDataRef v5 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", @"transport-speed", kCFAllocatorDefault, 1u);
  if (v5)
  {
    CFDataRef v6 = v5;
    v9.location = 0;
    v9.length = 4;
    CFDataGetBytes(v5, v9, buffer);
    CFRelease(v6);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1950);
    }
    uint64_t v7 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
      sub_10004A8B0((int *)buffer, v7);
    }
  }
  IOObjectRelease(v4);
  unint64_t result = *(unsigned int *)buffer;
  if (*(_DWORD *)buffer >> 9 <= 0xE0u) {
    return 0;
  }
  return result;
}

void sub_100040C40(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100040C74(const char *a1)
{
  unsigned __int16 v1 = 10;
  *(_DWORD *)buffer = 10;
  CFDictionaryRef v2 = IOServiceNameMatching(a1);
  if (v2)
  {
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
    if (MatchingService)
    {
      io_object_t v4 = MatchingService;
      CFDataRef v5 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", @"transport-encoding", kCFAllocatorDefault, 1u);
      if (v5)
      {
        CFDataRef v6 = v5;
        v13.location = 0;
        v13.length = 4;
        CFDataGetBytes(v5, v13, buffer);
        CFRelease(v6);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E1990);
        }
        uint64_t v7 = qword_1004E6428;
        BOOL v8 = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG);
        unsigned __int16 v1 = *(_WORD *)buffer;
        if (v8)
        {
          *(_DWORD *)stat buf = 67109120;
          int v12 = *(_DWORD *)buffer;
          _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "DeviceTree transport = %d", buf, 8u);
          return *(unsigned __int16 *)buffer;
        }
      }
      else
      {
        IOObjectRelease(v4);
      }
    }
  }
  return v1;
}

void sub_100040DC8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100040DFC()
{
  if (qword_1004E5F38 != -1) {
    dispatch_once(&qword_1004E5F38, &stru_1004E19D0);
  }
  return (unsigned __int16)dword_1004E4A30;
}

void sub_100040E40(id a1)
{
  bzero(__str, 0x400uLL);
  size_t v6 = 1024;
  if (!sysctlbyname("kern.bootargs", __str, &v6, 0, 0))
  {
    CFDictionaryRef v2 = strtok(__str, " ");
    if (v2)
    {
      timeval v3 = v2;
      while (!strstr(v3, "bt-transport-override"))
      {
        timeval v3 = strtok(0, " ");
        if (!v3) {
          goto LABEL_2;
        }
      }
      io_object_t v4 = strchr(v3, 61);
      unint64_t v1 = strtol(v4 + 1, 0, 10);
      if (v1 < 0xA) {
        goto LABEL_15;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1A10);
      }
      CFDataRef v5 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
        sub_10004A92C(v1, v5);
      }
    }
  }
LABEL_2:
  if (dword_1004E4A30 == 10)
  {
    dword_1004E4A30 = sub_100040C74("marconi-bt");
    if (dword_1004E4A30 == 10)
    {
      LODWORD(v1) = sub_100040C74("bluetooth");
LABEL_15:
      dword_1004E4A30 = v1;
    }
  }
}

void sub_100040FE0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100041014(const char *a1, uint64_t a2)
{
  __int16 v11 = 0;
  *(_DWORD *)buffer = 0;
  CFDictionaryRef v3 = IOServiceNameMatching(a1);
  if (!v3) {
    return 6;
  }
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v3);
  if (!MatchingService) {
    return 6;
  }
  io_object_t v5 = MatchingService;
  CFDataRef v6 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", @"local-mac-address", kCFAllocatorDefault, 1u);
  if (v6)
  {
    CFDataRef v7 = v6;
    v12.location = 0;
    v12.length = 6;
    CFDataGetBytes(v6, v12, buffer);
    *(_DWORD *)a2 = *(_DWORD *)buffer;
    *(_WORD *)(a2 + 4) = v11;
    CFRelease(v7);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 6;
  }
  IOObjectRelease(v5);
  return v8;
}

uint64_t sub_1000410E4(unsigned __int8 *a1)
{
  CFDictionaryRef v2 = getenv("BT_DEVICE_ADDRESS");
  if (v2 && (CFDictionaryRef v3 = v2, strlen(v2) == 17))
  {
    sscanf(v3, "%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx", a1, a1 + 1, a1 + 2, a1 + 3, a1 + 4, a1 + 5);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1A50);
    }
    uint64_t v4 = qword_1004E6428;
    uint64_t v5 = 0;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = *a1;
      int v7 = a1[1];
      int v8 = a1[2];
      int v9 = a1[3];
      int v10 = a1[4];
      int v11 = a1[5];
      *(_DWORD *)stat buf = 136316674;
      long long v58 = v3;
      __int16 v59 = 1024;
      int v60 = v6;
      __int16 v61 = 1024;
      int v62 = v7;
      __int16 v63 = 1024;
      int v64 = v8;
      __int16 v65 = 1024;
      int v66 = v9;
      __int16 v67 = 1024;
      int v68 = v10;
      __int16 v69 = 1024;
      int v70 = v11;
      CFRange v12 = "BT_DEVICE_ADDRESS address (%s) %02x:%02x:%02x:%02x:%02x:%02x";
      CFRange v13 = v4;
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v12, buf, 0x30u);
      return 0;
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1A90);
    }
    int v14 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)stat buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "could not find BT_DEVICE_ADDRESS env variable", buf, 2u);
    }
    int v15 = (const char *)sub_1000448A8();
    if (v15)
    {
      io_service_t v16 = v15;
      LOWORD(v46) = 0;
      *(_DWORD *)stat v45 = 0;
      WORD2(v44) = 0;
      LODWORD(v44) = 0;
      sscanf(v15, "%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx", v45, &v45[1], &v45[2], &v45[3], &v46, (char *)&v46 + 1);
      if (*(_DWORD *)v45 || (unsigned __int16)v46 != 0)
      {
        *(_DWORD *)a1 = *(_DWORD *)v45;
        *((_WORD *)a1 + 2) = v46;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E1AD0);
        }
        uint64_t v18 = qword_1004E6428;
        if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT)) {
          return 0;
        }
        int v19 = *a1;
        int v20 = a1[1];
        int v21 = a1[2];
        int v22 = a1[3];
        int v23 = a1[4];
        int v24 = a1[5];
        *(_DWORD *)stat buf = 136316674;
        long long v58 = v16;
        __int16 v59 = 1024;
        int v60 = v19;
        __int16 v61 = 1024;
        int v62 = v20;
        __int16 v63 = 1024;
        int v64 = v21;
        __int16 v65 = 1024;
        int v66 = v22;
        __int16 v67 = 1024;
        int v68 = v23;
        __int16 v69 = 1024;
        int v70 = v24;
        CFRange v12 = "XPC Device address (%s) %02x:%02x:%02x:%02x:%02x:%02x";
        CFRange v13 = v18;
        goto LABEL_20;
      }
    }
    if (!sub_100041014("marconi-bt", (uint64_t)a1)) {
      return 0;
    }
    uint64_t v5 = sub_100041014("bluetooth", (uint64_t)a1);
    if (v5)
    {
      bzero(buf, 0x400uLL);
      size_t v44 = 1024;
      int v25 = sysctlbyname("kern.bootargs", buf, &v44, 0, 0);
      if (v25)
      {
        int v26 = v25;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E1B90);
        }
        uint64_t v27 = qword_1004E6428;
        if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT)) {
          return v5;
        }
        *(_DWORD *)stat v45 = 67109120;
        int v46 = v26;
        int v28 = "did not find bootargs sysctlbyname returned %d";
        __int16 v29 = v27;
        uint32_t v30 = 8;
      }
      else
      {
        uint64_t v32 = strtok((char *)buf, " ");
        if (v32)
        {
          unsigned __int8 v33 = v32;
          while (!strstr(v33, "wlan.debug.generate-mac"))
          {
            if (strstr(v33, "wlan.factory"))
            {
              uint64_t v34 = strchr(v33, 61);
              if ((strtol(v34 + 1, 0, 16) & 4) != 0) {
                break;
              }
            }
            unsigned __int8 v33 = strtok(0, " ");
            if (!v33) {
              goto LABEL_36;
            }
          }
          for (uint64_t i = 0; i != 6; ++i)
            a1[i] = arc4random_uniform(0xFFu);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E1B10);
          }
          uint64_t v37 = qword_1004E6428;
          if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT)) {
            return v5;
          }
          int v38 = *a1;
          int v39 = a1[1];
          int v40 = a1[2];
          int v41 = a1[3];
          int v42 = a1[4];
          int v43 = a1[5];
          *(_DWORD *)stat v45 = 67110400;
          int v46 = v38;
          __int16 v47 = 1024;
          int v48 = v39;
          __int16 v49 = 1024;
          int v50 = v40;
          __int16 v51 = 1024;
          int v52 = v41;
          __int16 v53 = 1024;
          int v54 = v42;
          __int16 v55 = 1024;
          int v56 = v43;
          int v28 = "RANDOM address %02x:%02x:%02x:%02x:%02x:%02x";
          __int16 v29 = v37;
          uint32_t v30 = 38;
        }
        else
        {
LABEL_36:
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E1B50);
          }
          uint64_t v35 = qword_1004E6428;
          if (!os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT)) {
            return v5;
          }
          *(_WORD *)stat v45 = 0;
          int v28 = "did not find bootargs for random address generation";
          __int16 v29 = v35;
          uint32_t v30 = 2;
        }
      }
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, v28, v45, v30);
    }
  }
  return v5;
}

void sub_10004168C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000416C0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000416F4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041728(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004175C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041790(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000417C4(UInt8 **a1, _WORD *a2)
{
  return sub_1000417D8(@"bluetooth-aci-calibration", a1, a2);
}

uint64_t sub_1000417D8(const __CFString *a1, UInt8 **a2, _WORD *a3)
{
  CFDictionaryRef v6 = IOServiceNameMatching("marconi-bt");
  if (!v6) {
    return 6;
  }
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v6);
  if (!MatchingService)
  {
    CFDictionaryRef v15 = IOServiceNameMatching("bluetooth");
    if (!v15) {
      return 6;
    }
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v15);
    if (!MatchingService) {
      return 6;
    }
  }
  CFDataRef v8 = (const __CFData *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", a1, kCFAllocatorDefault, 1u);
  if (v8)
  {
    CFDataRef v9 = v8;
    CFTypeID TypeID = CFDataGetTypeID();
    if (TypeID == CFGetTypeID(v9))
    {
      size_t Length = CFDataGetLength(v9);
      CFIndex v12 = Length;
      if (Length)
      {
        CFRange v13 = (UInt8 *)malloc_type_malloc(Length, 0x100004077774924uLL);
        *a2 = v13;
        v17.location = 0;
        v17.length = v12;
        CFDataGetBytes(v9, v17, v13);
      }
      *a3 = v12;
    }
    CFRelease(v9);
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 6;
  }
  IOObjectRelease(MatchingService);
  return v14;
}

uint64_t sub_100041914(UInt8 **a1, _WORD *a2, int a3)
{
  if (a3 == 6)
  {
    CFStringRef v5 = @"bluetooth-aci-wbcl-calibration";
    return sub_1000417D8(v5, a1, a2);
  }
  if (a3 == 7)
  {
    CFStringRef v5 = @"bluetooth-aci-bcal-calibration";
    return sub_1000417D8(v5, a1, a2);
  }
  return 1;
}

uint64_t sub_100041950(UInt8 **a1, _WORD *a2)
{
  return sub_1000417D8(@"bluetooth-tx-calibration", a1, a2);
}

uint64_t sub_100041964(UInt8 **a1, _WORD *a2)
{
  return sub_1000417D8(@"bluetooth-tx-calibration-ext", a1, a2);
}

uint64_t sub_100041978(UInt8 **a1, _WORD *a2)
{
  return sub_1000417D8(@"bluetooth-rx-calibration", a1, a2);
}

uint64_t sub_10004198C(UInt8 **a1, _WORD *a2)
{
  return sub_1000417D8(@"bluetooth-taurus-calibration", a1, a2);
}

uint64_t sub_1000419A0(UInt8 **a1, _WORD *a2)
{
  return sub_1000417D8(@"bluetooth-taurus-calibration-bf", a1, a2);
}

uint64_t sub_1000419B4(int a1, uint64_t a2)
{
  if (a1 != 2) {
    goto LABEL_4;
  }
  CFDictionaryRef v2 = *(const char **)(a2 + 8);
  if (!strcmp(v2, "on"))
  {
    if (sub_100040DFC() == 7
      || sub_100040DFC() == 6
      || (int v5 = access("/dev/btpoweroff", 0), result = 0, !v5))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1C10);
      }
      CFDictionaryRef v6 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 67109634;
        *(_DWORD *)uint64_t v14 = sub_100040DFC();
        *(_WORD *)&v14[4] = 1024;
        *(_DWORD *)&v14[6] = access("/dev/btpoweroff", 0);
        __int16 v15 = 2080;
        io_service_t v16 = "bluetool_command_power";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "ready to power on with HCI transport %d, access powerOff %d from %s", (uint8_t *)&v13, 0x18u);
      }
      sub_100042A30();
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1C50);
      }
      int v7 = qword_1004E6428;
      BOOL v8 = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0;
      if (v8)
      {
        int v13 = 136315138;
        *(void *)uint64_t v14 = "bluetool_command_power";
        CFDataRef v9 = "bluetooth power is now ON in %s";
LABEL_32:
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v13, 0xCu);
        return 0;
      }
    }
  }
  else
  {
    if (strcmp(v2, "off"))
    {
LABEL_4:
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1BD0);
      }
      CFDictionaryRef v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004A9A4(v3);
      }
      return 1;
    }
    if (sub_100040DFC() == 7
      || sub_100040DFC() == 6
      || (v10 = access("/dev/btpoweroff", 0), uint64_t result = 0, !v10))
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1C90);
      }
      int v11 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 67109634;
        *(_DWORD *)uint64_t v14 = sub_100040DFC();
        *(_WORD *)&v14[4] = 1024;
        *(_DWORD *)&v14[6] = access("/dev/btpoweroff", 0);
        __int16 v15 = 2080;
        io_service_t v16 = "bluetool_command_power";
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "ready to power off with HCI transport %d, access powerOff %d from %s", (uint8_t *)&v13, 0x18u);
      }
      sub_100042C08();
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1CD0);
      }
      int v7 = qword_1004E6428;
      BOOL v12 = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0;
      if (v12)
      {
        int v13 = 136315138;
        *(void *)uint64_t v14 = "bluetool_command_power";
        CFDataRef v9 = "bluetooth power is now OFF in %s";
        goto LABEL_32;
      }
    }
  }
  return result;
}

void sub_100041D60(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041D94(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041DC8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041DFC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100041E30(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100041E64(int a1, uint64_t a2)
{
  if ((a1 - 4) < 0xFFFFFFFE) {
    goto LABEL_6;
  }
  CFDictionaryRef v3 = *(const char **)(a2 + 8);
  if (!v3) {
    goto LABEL_6;
  }
  if (!strcmp(*(const char **)(a2 + 8), "on"))
  {
    if (!access("/dev/btpoweroff", 0)) {
      sub_100042C08();
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1D50);
    }
    uint64_t v8 = qword_1004E6428;
    uint64_t result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
    if (!result) {
      return result;
    }
    LOWORD(v17[0]) = 0;
    CFDataRef v9 = "bluetooth reset is now ON";
LABEL_26:
    int v10 = v8;
    uint32_t v11 = 2;
LABEL_27:
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v9, (uint8_t *)v17, v11);
    return 0;
  }
  if (!strcmp(v3, "off"))
  {
    if (!access("/dev/btpoweroff", 0)) {
      sub_100042A30();
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1D90);
    }
    uint64_t v8 = qword_1004E6428;
    uint64_t result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
    if (!result) {
      return result;
    }
    LOWORD(v17[0]) = 0;
    CFDataRef v9 = "bluetooth reset is now OFF";
    goto LABEL_26;
  }
  if (strcmp(v3, "pulse"))
  {
LABEL_6:
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1D10);
    }
    int v5 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      LOWORD(v17[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "usage: reset [on|off|pulse ms]", (uint8_t *)v17, 2u);
    }
    CFDictionaryRef v6 = *(const char **)(a2 + 8);
    if (!v6) {
      return 1;
    }
    uint64_t result = strcmp(v6, "-h");
    if (result) {
      return 1;
    }
    return result;
  }
  if (a1 != 3) {
    return 0;
  }
  int v12 = strtoul(*(const char **)(a2 + 16), 0, 0);
  int v13 = access("/dev/btpoweroff", 0);
  uint64_t result = 0;
  if (!v13)
  {
    sub_100042C08();
    if (v12)
    {
      if (v12 <= 10) {
        useconds_t v14 = 0;
      }
      else {
        useconds_t v14 = 1000 * v12 - 10000;
      }
      usleep(v14);
    }
    sub_100042A30();
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1DD0);
    }
    uint64_t v15 = qword_1004E6428;
    uint64_t result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
    if (result)
    {
      if (v12 <= 10) {
        int v16 = 10;
      }
      else {
        int v16 = v12;
      }
      v17[0] = 67109120;
      v17[1] = v16;
      CFDataRef v9 = "bluetooth reset was pulsed %d ms";
      int v10 = v15;
      uint32_t v11 = 8;
      goto LABEL_27;
    }
  }
  return result;
}

void sub_10004218C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000421C0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000421F4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042228(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

BOOL sub_10004225C(int a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 8);
  if ((a1 - 4) <= 0xFFFFFFFD && strcmp(v4, "on") && strcmp(v4, "off") && strcmp(v4, "pulse"))
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1E10);
    }
    int v5 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
    {
      LOWORD(v13[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "usage: wake [on|off|pulse ms]", (uint8_t *)v13, 2u);
    }
    return strcmp(*(const char **)(a2 + 8), "-h") != 0;
  }
  if (!strcmp(v4, "on"))
  {
    sub_100042520();
    return 0;
  }
  if (!strcmp(v4, "off"))
  {
    sub_1000425C8();
    return 0;
  }
  int v7 = strcmp(v4, "pulse");
  BOOL result = 0;
  if (a1 != 3 || v7) {
    return result;
  }
  int v8 = strtoul(*(const char **)(a2 + 16), 0, 0);
  if (dword_1004E4A34 != -1) {
    close(dword_1004E4A34);
  }
  int v9 = open("/dev/btwake", 0);
  dword_1004E4A34 = v9;
  if (v9 == -1) {
    return 0;
  }
  if (v8)
  {
    if (v8 <= 10) {
      useconds_t v10 = 0;
    }
    else {
      useconds_t v10 = 1000 * v8 - 10000;
    }
    usleep(v10);
    int v9 = dword_1004E4A34;
  }
  close(v9);
  dword_1004E4A34 = -1;
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E1E50);
  }
  uint32_t v11 = qword_1004E6428;
  BOOL result = os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO);
  if (result)
  {
    if (v8 <= 10) {
      int v12 = 10;
    }
    else {
      int v12 = v8;
    }
    v13[0] = 67109120;
    v13[1] = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "bluetooth wake was pulsed %d ms", (uint8_t *)v13, 8u);
    return 0;
  }
  return result;
}

void sub_1000424EC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042520()
{
  if (sub_100040DFC() != 7 && dword_1004E4A34 == -1)
  {
    dword_1004E4A34 = open("/dev/btwake", 0);
    if (dword_1004E4A34 == -1)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1ED0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004A9E8();
      }
    }
  }
}

void sub_1000425C8()
{
  if (sub_100040DFC() == 7)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1F10);
    }
    io_registry_entry_t v0 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AA68(v0);
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E1F50);
    }
    unint64_t v1 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      int v5 = "bluetool_wake_off";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "non-PCIE transport in %s", (uint8_t *)&v4, 0xCu);
    }
    if (dword_1004E4A34 != -1)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1F90);
      }
      CFDictionaryRef v2 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = 136315138;
        int v5 = "bluetool_wake_off";
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "ready to close wake file descriptor from %s", (uint8_t *)&v4, 0xCu);
      }
      close(dword_1004E4A34);
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1FD0);
      }
      CFDictionaryRef v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = 136315138;
        int v5 = "bluetool_wake_off";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Wake file descriptor is closed from %s", (uint8_t *)&v4, 0xCu);
      }
      dword_1004E4A34 = -1;
    }
  }
}

void sub_1000427F0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042824()
{
  if (dword_1004E4A38 == -1)
  {
    dword_1004E4A38 = open("/dev/btreset", 0);
    if (dword_1004E4A38 == -1)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E1E90);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004AAEC();
      }
    }
  }
}

void sub_1000428C0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_1000428F4()
{
  uint64_t result = dword_1004E4A38;
  if (dword_1004E4A38 != -1)
  {
    uint64_t result = close(dword_1004E4A38);
    dword_1004E4A38 = -1;
  }
  return result;
}

void sub_10004292C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042960(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042994(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000429C8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000429FC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042A30()
{
  if (sub_100040DFC() == 7)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2010);
    }
    io_registry_entry_t v0 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      int v5 = "command_regon_power_on";
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIE transport and return direclty from %s", (uint8_t *)&v4, 0xCu);
    }
  }
  else if (sub_100040DFC() == 6)
  {
    int v1 = sub_1000194B0();
    if (v1)
    {
      int v2 = v1;
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2050);
      }
      CFDictionaryRef v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004AB6C(v2, v3);
      }
    }
  }
  else if (dword_1004E4A3C != -1)
  {
    close(dword_1004E4A3C);
    dword_1004E4A3C = -1;
  }
}

void sub_100042BA0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042BD4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042C08()
{
  if (sub_100040DFC() == 7)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2090);
    }
    io_registry_entry_t v0 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      int v5 = "command_regon_power_off";
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "PCIE transport and ready to call pcie_flr from %s", (uint8_t *)&v4, 0xCu);
    }
    sub_100001884();
  }
  else if (sub_100040DFC() == 6)
  {
    int v1 = sub_10001973C();
    if (v1)
    {
      int v2 = v1;
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E20D0);
      }
      CFDictionaryRef v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004ABE4(v2, v3);
      }
    }
  }
  else if (dword_1004E4A3C == -1)
  {
    dword_1004E4A3C = open("/dev/btpoweroff", 0);
    if (dword_1004E4A3C == -1)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2110);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004AC5C();
      }
    }
  }
}

void sub_100042DE0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042E14(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100042E48(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100042E80()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E2150);
  }
  io_registry_entry_t v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315138;
    *(void *)&uint8_t buf[4] = "int getManufacturer()";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }
  uint64_t result = dword_1004E4A40;
  if ((dword_1004E4A40 - 1) >= 0xFFFFFFFE)
  {
    int v2 = 1634758764;
    if ((MGIsDeviceOneOfType() & 1) == 0
      && (MGIsDeviceOneOfType() & 1) == 0
      && (MGIsDeviceOneOfType() & 1) == 0
      && (MGIsDeviceOneOfType() & 1) == 0)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2650);
      }
      CFDictionaryRef v3 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315138;
        *(void *)&uint8_t buf[4] = "int _getManufacturerFromString(void)";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
      }
      int v2 = dword_1004E4A44;
      if (dword_1004E4A44 == -1)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2690);
        }
        int v4 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)stat buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "MGCopyAnswer kMGQWifiVendor", buf, 2u);
        }
        CFStringRef v5 = (const __CFString *)MGCopyAnswer();
        if (v5)
        {
          CFStringRef v6 = v5;
          long long v16 = 0u;
          long long v17 = 0u;
          *(_OWORD *)stat buf = 0u;
          long long v15 = 0u;
          CFStringGetCString(v5, (char *)buf, 64, 0x8000100u);
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E26D0);
          }
          int v7 = qword_1004E6428;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t v18 = 136315138;
            int v19 = buf;
            _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Translating vendor %s", v18, 0xCu);
          }
          if (buf[0])
          {
            int v8 = 1836413537;
            if ((*(_DWORD *)buf != 1634891085 || *(_DWORD *)&buf[3] != 6386785) && *(_DWORD *)buf != 7159126)
            {
              int v8 = 544568169;
              if (*(_DWORD *)buf != 4805461 && *(_DWORD *)buf != 7683414)
              {
                int v8 = 1835627635;
                if (*(void *)buf != 0x696D757374694DLL && *(_DWORD *)buf != 6896982)
                {
                  int v8 = 1936548719;
                  if ((*(_DWORD *)buf != 1668113747 || *(unsigned __int16 *)&buf[4] != 111)
                    && *(_DWORD *)buf != 7552342)
                  {
                    int v8 = 544498795;
                    if (*(_DWORD *)buf != 4932692 && *(_DWORD *)buf != 7617878)
                    {
                      int v8 = 538997881;
                      BOOL v11 = *(_DWORD *)buf == 2036949332 && *(unsigned __int16 *)&buf[4] == 111;
                      if (!v11 && *(_DWORD *)buf != 7945558)
                      {
                        int v8 = 1937006964;
                        if (*(_DWORD *)buf != 1413567571 || *(unsigned __int16 *)&buf[4] != 83)
                        {
                          if (*(_DWORD *)buf == 6765910) {
                            int v8 = 1937006964;
                          }
                          else {
                            int v8 = 0;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            int v8 = -1;
          }
          dword_1004E4A44 = v8;
          CFRelease(v6);
        }
        int v2 = dword_1004E4A44;
      }
    }
    dword_1004E4A40 = v2;
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2190);
    }
    int v13 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = dword_1004E4A40;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Manufacturer is %d", buf, 8u);
    }
    return dword_1004E4A40;
  }
  return result;
}

void sub_1000433CC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043400(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_100043434()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E21D0);
  }
  io_registry_entry_t v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 136315138;
    useconds_t v14 = "const char *getPlatform(void)";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }
  int v1 = &byte_1004E5F40;
  if (!byte_1004E5F40)
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2210);
    }
    int v2 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)stat buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "MGCopyAnswer kMGQProductHash", buf, 2u);
    }
    CFDataRef v3 = (const __CFData *)MGCopyAnswer();
    if (v3)
    {
      CFDataRef v4 = v3;
      if (CFDataGetLength(v3) == 20)
      {
        BytePtr = CFDataGetBytePtr(v4);
        int v1 = &byte_1004E5F40;
        snprintf(&byte_1004E5F40, 0x29uLL, "%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x", *BytePtr, BytePtr[1], BytePtr[2], BytePtr[3], BytePtr[4], BytePtr[5], BytePtr[6], BytePtr[7], BytePtr[8], BytePtr[9], BytePtr[10], BytePtr[11], BytePtr[12], BytePtr[13], BytePtr[14], BytePtr[15],
          BytePtr[16],
          BytePtr[17],
          BytePtr[18],
          BytePtr[19]);
      }
      else
      {
        int v1 = 0;
      }
      CFRelease(v4);
    }
    else
    {
      int v1 = 0;
    }
    bzero(buf, 0x400uLL);
    size_t v10 = 1024;
    if (!sysctlbyname("kern.bootargs", buf, &v10, 0, 0))
    {
      CFStringRef v6 = strtok((char *)buf, " ");
      if (v6)
      {
        int v7 = v6;
        while (strcmp(v7, "wifibt-external=0x442514e4")
             && strcmp(v7, "wifibt-external=0x443314e4")
             && strcmp(v7, "wifibt-external=0x443414e4"))
        {
          int v7 = strtok(0, " ");
          if (!v7) {
            goto LABEL_25;
          }
        }
        int v1 = &byte_1004E5F40;
        __strlcpy_chk();
      }
    }
LABEL_25:
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2250);
    }
    int v8 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)BOOL v11 = 136315138;
      int v12 = v1;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Platform is %s", v11, 0xCu);
    }
  }
  return v1;
}

void sub_1000437D0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043804(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043838(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

char *sub_10004386C()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E2290);
  }
  io_registry_entry_t v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 136315138;
    int v9 = "const char *getSKU(void)";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&v8, 0xCu);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E22D0);
    }
  }
  int v1 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "MGCopyAnswer WSKU", (uint8_t *)&v8, 2u);
  }
  CFDataRef v2 = (const __CFData *)MGCopyAnswer();
  if (v2)
  {
    CFDataRef v3 = v2;
    if (CFDataGetLength(v2) == 16)
    {
      BytePtr = CFDataGetBytePtr(v3);
      byte_1004E5F69 = BytePtr[8];
      *(_WORD *)algn_1004E5F6A = *(_WORD *)(BytePtr + 9);
      byte_1004E5F6C = 0;
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2310);
      }
      CFStringRef v5 = qword_1004E6428;
      CFStringRef v6 = &byte_1004E5F69;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = 136315138;
        int v9 = &byte_1004E5F69;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SKU is: %s", (uint8_t *)&v8, 0xCu);
      }
    }
    else
    {
      CFStringRef v6 = 0;
    }
    CFRelease(v3);
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2350);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004ACDC();
    }
    return 0;
  }
  return v6;
}

void sub_100043AC4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043AF8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043B2C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100043B60(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

uint64_t sub_100043B94()
{
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E2390);
  }
  io_registry_entry_t v0 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf[0]) = 136315138;
    *(void *)((char *)buf + 4) = "const char *getChipset(void)";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)buf, 0xCu);
  }
  unsigned __int16 v15 = 0;
  char v14 = 0;
  __int16 v13 = 0;
  char v12 = 0;
  unsigned __int16 v11 = 0;
  memset(buf, 0, 255);
  int v1 = (const char *)qword_1004E5F70;
  if (!qword_1004E5F70)
  {
    if (sub_100040DFC() == 7)
    {
      if (qword_1004E5F88 != -1) {
        dispatch_once(&qword_1004E5F88, &stru_1004E23D0);
      }
      return qword_1004E5F70;
    }
    if (sub_100040DFC() == 6)
    {
      int v25 = 1737149739;
      long long v24 = xmmword_1004C89D0;
      if (MGIsDeviceOneOfType()) {
        qword_1004E5F70 = (uint64_t)"APPLE_M2";
      }
      int v23 = -1918230744;
      long long v22 = xmmword_1004C89E4;
      int v1 = "APPLE_M2_5";
      if (MGIsDeviceOneOfType()) {
        qword_1004E5F70 = (uint64_t)"APPLE_M2_5";
      }
      int v21 = -584398440;
      long long v20 = xmmword_1004C89F8;
      if (MGIsDeviceOneOfType()) {
        qword_1004E5F70 = (uint64_t)"APPLE_M2_5";
      }
      int v19 = -879476163;
      long long v18 = xmmword_1004C8A0C;
      if (MGIsDeviceOneOfType())
      {
        qword_1004E5F70 = (uint64_t)"APPLE_M2_5";
        return (uint64_t)v1;
      }
      int v1 = (const char *)qword_1004E5F70;
      if (qword_1004E5F70) {
        return (uint64_t)v1;
      }
    }
    uint64_t v2 = sub_100017B2C(&v15, &v14, &v13, &v12, &v11, 0);
    if (v2) {
      return 0;
    }
    CFDataRef v4 = "ALL";
    if (v15 > 0xEu)
    {
      if (v15 == 15)
      {
        if (v11 <= 0x420Du)
        {
          if (v11 <= 0x4108u)
          {
            if (v11 > 0x2201u)
            {
              if (v11 == 8706)
              {
                CFDataRef v4 = "BCM4330A1";
                goto LABEL_36;
              }
              if (v11 == 16643)
              {
                CFDataRef v4 = "BCM4330B1";
                goto LABEL_36;
              }
            }
            else
            {
              if (v11 == 8469)
              {
                sub_1000179B8(buf, 0, 0);
                size_t v10 = strstr((char *)buf, "4364");
                CFStringRef v6 = "BCM4364A0";
                int v7 = "BCM";
                BOOL v8 = v10 == 0;
LABEL_30:
                if (v8) {
                  CFDataRef v4 = v7;
                }
                else {
                  CFDataRef v4 = v6;
                }
                goto LABEL_36;
              }
              if (v11 == 8472)
              {
                CFDataRef v4 = "BCM20710";
                goto LABEL_36;
              }
            }
          }
          else if (v11 <= 0x4112u)
          {
            if (v11 == 16649)
            {
              sub_1000179B8(buf, 0, 0);
              CFDataRef v4 = "BCM43430B0";
              if (!strstr((char *)buf, "43430B") && !strstr((char *)buf, "BCM43435B")) {
                CFDataRef v4 = "BCM";
              }
              goto LABEL_36;
            }
            if (v11 == 16654)
            {
              CFDataRef v4 = "BCM4355B0";
              goto LABEL_36;
            }
          }
          else
          {
            switch(v11)
            {
              case 0x4113u:
                CFDataRef v4 = "BCM4330B0";
                goto LABEL_36;
              case 0x4207u:
                CFDataRef v4 = "BCM4355B2";
                goto LABEL_36;
              case 0x420Au:
                CFDataRef v4 = "BCM43430B1";
                goto LABEL_36;
            }
          }
        }
        else if (v11 > 0x610Cu)
        {
          if (v11 <= 0x6213u)
          {
            if (v11 == 24845)
            {
              CFDataRef v4 = "BCM4329C0";
              goto LABEL_36;
            }
            if (v11 == 25094)
            {
              CFDataRef v4 = "BCM43452A2";
              goto LABEL_36;
            }
          }
          else
          {
            switch(v11)
            {
              case 0x6214u:
                CFDataRef v4 = "BCM4355C1";
                goto LABEL_36;
              case 0x6607u:
                CFDataRef v4 = "BCM4350C5";
                goto LABEL_36;
              case 0x8107u:
                CFDataRef v4 = "BCM4325";
                goto LABEL_36;
            }
          }
        }
        else if (v11 <= 0x4309u)
        {
          if (v11 == 16910)
          {
            CFDataRef v4 = "BCM4357B1";
            goto LABEL_36;
          }
          if (v11 == 16919)
          {
            CFDataRef v4 = "BCM4329B1";
            goto LABEL_36;
          }
        }
        else
        {
          switch(v11)
          {
            case 0x430Au:
              CFDataRef v4 = "BCM4355B3";
              goto LABEL_36;
            case 0x6103u:
              CFDataRef v4 = "BCM4355C0";
              goto LABEL_36;
            case 0x610Cu:
              CFDataRef v4 = "BCM4350C2";
              goto LABEL_36;
          }
        }
        CFDataRef v4 = "BCM";
        goto LABEL_36;
      }
      if (v15 != 76) {
        goto LABEL_36;
      }
    }
    else
    {
      if (v15 == 10)
      {
        if (v11 == 4841) {
          CFDataRef v4 = "BC6";
        }
        else {
          CFDataRef v4 = "CSR";
        }
        goto LABEL_36;
      }
      if (v15 != 13)
      {
LABEL_36:
        qword_1004E5F70 = (uint64_t)v4;
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2610);
        }
        int v9 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long v16 = 136315138;
          uint64_t v17 = qword_1004E5F70;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Chip is %s", v16, 0xCu);
        }
        return qword_1004E5F70;
      }
    }
    int v5 = sub_1000084D0(v2);
    CFStringRef v6 = "ACIBGA";
    int v7 = "ACIFPGA";
    BOOL v8 = v5 == 0;
    goto LABEL_30;
  }
  return (uint64_t)v1;
}

void sub_1000441A0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000441D4(id a1)
{
  CFMutableDictionaryRef v1 = IOServiceNameMatching("AppleOLYHAL");
  if (!v1)
  {
LABEL_15:
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E25D0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AD10();
    }
    return;
  }
  CFDictionaryRef v2 = v1;
  while (1)
  {
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v2);
    if (!MatchingService)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2590);
      }
      int v7 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)stat buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "No AppleOLYHAL service. Retrying...\n", buf, 2u);
      }
      goto LABEL_14;
    }
    io_object_t v4 = MatchingService;
    CFDictionaryRef v5 = (const __CFDictionary *)IORegistryEntrySearchCFProperty(MatchingService, "IODeviceTree", @"HWIdentifiers", kCFAllocatorDefault, 1u);
    if (v5) {
      break;
    }
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2550);
    }
    CFStringRef v6 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)stat buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "No HWIdentifiers property. Retrying...\n", buf, 2u);
    }
    IOObjectRelease(v4);
LABEL_14:
    usleep(0x7A120u);
    CFDictionaryRef v2 = IOServiceNameMatching("AppleOLYHAL");
    if (!v2) {
      goto LABEL_15;
    }
  }
  CFDictionaryRef v8 = v5;
  CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(v5, @"C");
  uint64_t valuePtr = 0;
  if (Value)
  {
    CFNumberGetValue(Value, kCFNumberLongType, &valuePtr);
    if (valuePtr == 276347) {
      uint64_t valuePtr = 4377;
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2410);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AE38();
    }
  }
  CFStringRef v10 = (const __CFString *)CFDictionaryGetValue(v8, @"s");
  char v14 = 0;
  *(_WORD *)buffer = 0;
  if (v10)
  {
    CFStringGetCString(v10, buffer, 3, 0x8000100u);
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2450);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AE04();
    }
  }
  if (valuePtr && buffer[0])
  {
    if ((snprintf(byte_1004E5F78, 0x10uLL, "BCM%llu%s", valuePtr, buffer) - 1) > 0xE)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E24D0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004AD44();
      }
    }
    else
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2490);
      }
      unsigned __int16 v11 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat buf = 136315138;
        uint64_t v17 = byte_1004E5F78;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Generated chipset string of %s from HWIdentifiers\n", buf, 0xCu);
      }
      qword_1004E5F70 = (uint64_t)byte_1004E5F78;
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2510);
    }
    char v12 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AD78(&valuePtr, (uint64_t)buffer, v12);
    }
  }
  CFRelease(v8);
  IOObjectRelease(v4);
}

void sub_100044638(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004466C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000446A0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000446D4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100044708(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004473C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100044770(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000447A4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000447D8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004480C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100044840(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100044874(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void *sub_1000448A8()
{
  return &unk_1004E6430;
}

unint64_t sub_1000448B4()
{
  if (!dword_1004E5F94)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_1004E5F90);
    uint64_t v0 = dword_1004E5F94;
    uint64_t v1 = dword_1004E5F90;
    while (v1)
    {
      if (v1 > v0)
      {
        uint64_t v2 = v1 % v0;
        uint64_t v1 = v0;
        uint64_t v0 = v2;
      }
      uint64_t v3 = v0;
      uint64_t v0 = v1;
      BOOL v4 = v3 == v1;
      uint64_t v1 = v3;
      if (v4)
      {
        LODWORD(v0) = 1;
        break;
      }
    }
    dword_1004E5F90 /= v0;
    dword_1004E5F94 = 1000000 * (dword_1004E5F94 / v0);
  }
  uint64_t v5 = mach_continuous_time();
  if (dword_1004E5F94) {
    return v5 * dword_1004E5F90 / dword_1004E5F94;
  }
  else {
    return 0;
  }
}

uint64_t sub_100044968()
{
  mach_service = xpc_connection_create_mach_service("com.apple.BlueTool", (dispatch_queue_t)&_dispatch_main_q, 1uLL);
  if (!mach_service) {
    return 4;
  }
  uint64_t v1 = mach_service;
  xpc_connection_set_event_handler(mach_service, &stru_1004E2710);
  xpc_connection_resume(v1);
  CFRunLoopRun();
  return 0;
}

void sub_1000449C8(id a1, void *a2)
{
  xpc_type_t type = xpc_get_type(a2);
  if (type == (xpc_type_t)&_xpc_type_connection)
  {
    xpc_connection_set_target_queue((xpc_connection_t)a2, (dispatch_queue_t)&_dispatch_main_q);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 0x40000000;
    handler[2] = sub_100044B68;
    handler[3] = &unk_1004E2730;
    handler[4] = a2;
    xpc_connection_set_event_handler((xpc_connection_t)a2, handler);
    xpc_connection_resume((xpc_connection_t)a2);
  }
  else if (type == (xpc_type_t)&_xpc_type_error)
  {
    xpc_dictionary_get_string(a2, _xpc_error_key_description);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2770);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AE6C();
    }
  }
  else
  {
    BOOL v4 = xpc_copy_description(a2);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E27B0);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AED4();
    }
    free(v4);
  }
}

void sub_100044B68(uint64_t a1, xpc_object_t object)
{
  uint64_t v3 = *(_xpc_connection_s **)(a1 + 32);
  xpc_type_t type = xpc_get_type(object);
  if (type != (xpc_type_t)&_xpc_type_dictionary)
  {
    if (object != &_xpc_error_connection_invalid && type == (xpc_type_t)&_xpc_type_error)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2830);
      }
      CFStringRef v6 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004B16C(object, v6);
      }
    }
    return;
  }
  string = xpc_dictionary_get_string(object, "kMsgId");
  if (strcmp(string, "RunExternalScript"))
  {
    if (strcmp(string, "RunBuiltinScript"))
    {
      if (strcmp(string, "RunCommand")) {
        abort();
      }
      CFDictionaryRef v8 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, 0);
      dispatch_time_t v9 = dispatch_time(0, 30000000000);
      dispatch_source_set_timer(v8, v9, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
      dispatch_source_set_event_handler(v8, &stru_1004E28F0);
      dispatch_resume(v8);
      xpc_object_t value = xpc_dictionary_get_value(object, "kMsgArgs");
      *(void *)stat v73 = 0;
      xpc_object_t v11 = xpc_dictionary_get_value(value, "command");
      if (v11)
      {
        char v12 = v11;
        if (xpc_get_type(v11) != (xpc_type_t)&_xpc_type_string)
        {
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E2F70);
          }
          __int16 v13 = qword_1004E6428;
          int v14 = 1;
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)stat buf = 0;
            int v14 = 1;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Param is not a string", buf, 2u);
          }
          unsigned __int16 v15 = 0;
          int v16 = 0;
          goto LABEL_101;
        }
        string_ptr = xpc_string_get_string_ptr(v12);
        if (string_ptr)
        {
          int v28 = strdup(string_ptr);
          __int16 v29 = strtok(v28, "\n");
          int v16 = 0;
          unsigned __int16 v15 = 0;
          if (v29)
          {
            do
            {
              *(void *)stat v73 = 0;
              int v14 = sub_10001AC20(v29, (uint64_t)v73);
              if (*(void *)v73)
              {
                size_t v30 = strlen(*(const char **)v73);
                __int16 v31 = (char *)reallocf(v15, v30 + v16 + 1);
                unsigned __int16 v15 = v31;
                if (v31)
                {
                  memcpy(&v31[v16], *(const void **)v73, v30);
                  int v32 = v16 + v30;
                  v16 += v30 + 1;
                  v15[v32] = 10;
                }
                else
                {
                  if (qword_1004E6420 != -1) {
                    dispatch_once(&qword_1004E6420, &stru_1004E2FF0);
                  }
                  unsigned __int8 v33 = qword_1004E6428;
                  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
                    sub_10004B12C(buf, &buf[1], v33);
                  }
                  int v16 = 0;
                  int v14 = 1;
                }
                free(*(void **)v73);
              }
              if (v14) {
                break;
              }
              __int16 v29 = strtok(0, "\n");
            }
            while (v29);
            if (v16) {
              v15[v16 - 1] = 0;
            }
          }
          else
          {
            int v14 = 1;
          }
          free(v28);
          goto LABEL_101;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2FB0);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
          sub_10004AF70();
        }
      }
      else
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2F30);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_10004AF3C();
        }
      }
      unsigned __int16 v15 = 0;
      int v16 = 0;
      int v14 = 1;
LABEL_101:
      xpc_object_t reply = xpc_dictionary_create_reply(object);
      xpc_dictionary_set_int64(reply, "result", v14);
      if (v15 && v16) {
        xpc_dictionary_set_string(reply, "output", v15);
      }
      xpc_connection_send_message(v3, reply);
      xpc_release(reply);
      if (v15) {
        free(v15);
      }
      goto LABEL_106;
    }
    xpc_object_t v21 = xpc_dictionary_get_value(object, "kMsgArgs");
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2A30);
    }
    long long v22 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)stat v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Running xpcRunBuiltinScript", v73, 2u);
    }
    xpc_object_t v23 = xpc_dictionary_get_value(v21, "script");
    if (!v23)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2A70);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
      {
        sub_10004AF3C();
        goto LABEL_153;
      }
      goto LABEL_67;
    }
    long long v24 = v23;
    if (xpc_get_type(v23) != (xpc_type_t)&_xpc_type_string)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2AB0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
      {
        sub_10004AFA4();
LABEL_153:
        int v35 = 1;
        goto LABEL_188;
      }
      goto LABEL_67;
    }
    int v42 = xpc_string_get_string_ptr(v24);
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2AF0);
    }
    int v43 = qword_1004E6428;
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat v73 = 136315650;
      *(void *)&v73[4] = v42;
      __int16 v74 = 2080;
      *(void *)uint64_t v75 = "xpcRunBuiltinScript";
      *(_WORD *)&v75[8] = 2080;
      int v76 = "22:56:06";
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "get arg = %s from %s at %s", v73, 0x20u);
    }
    if (!v42)
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2B30);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG))
      {
        sub_10004AF70();
        goto LABEL_153;
      }
LABEL_67:
      int v35 = 1;
LABEL_68:
      uint64_t v36 = qword_1004E6428;
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)stat v73 = 67109120;
        *(_DWORD *)&v73[4] = v35;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "builtin script completed with result %d", v73, 8u);
      }
      xpc_object_t v37 = xpc_dictionary_create_reply(object);
      xpc_dictionary_set_int64(v37, "result", v35);
      int v38 = sub_100042E80();
      xpc_dictionary_set_int64(v37, "manufacturer", v38);
      int v39 = (const char *)sub_1000165A0();
      if (v39) {
        int v40 = v39;
      }
      else {
        int v40 = (const char *)&unk_1004CA20E;
      }
      if (*v40 && MGGetBoolAnswer())
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2EF0);
        }
        int v41 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = v40;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "Firmware is %s", v73, 0xCu);
        }
      }
      xpc_dictionary_set_string(v37, "firmware", v40);
      xpc_connection_send_message(v3, v37);
      xpc_release(v37);
      goto LABEL_107;
    }
    int64_t v44 = 30000000000;
    int v69 = strncmp(v42, "boot", 5uLL);
    if (v69)
    {
      if (strncmp(v42, "init", 5uLL))
      {
        if (!strncmp(v42, "deepsleep", 0xAuLL))
        {
          char v45 = 0;
          int v71 = 3;
          int64_t v44 = 4000000000;
        }
        else
        {
          int v71 = 0;
          char v45 = 1;
        }
        goto LABEL_119;
      }
      char v45 = 0;
      int v48 = 2;
    }
    else
    {
      char v45 = 0;
      int v48 = 1;
    }
    int v71 = v48;
LABEL_119:
    xpc_object_t v49 = xpc_dictionary_get_value(v21, "btaddress");
    if (v49)
    {
      int v50 = v49;
      if (xpc_get_type(v49) == (xpc_type_t)&_xpc_type_string)
      {
        __int16 v51 = xpc_string_get_string_ptr(v50);
        strlen(v51);
        __memcpy_chk();
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2B70);
        }
        int v52 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = &unk_1004E6430;
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "xpc address %s", v73, 0xCu);
        }
      }
      else
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2BB0);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
          sub_10004B0F8();
        }
      }
    }
    else
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E2BF0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
        sub_10004B0C4();
      }
    }
    if ((v45 & 1) == 0)
    {
      int v53 = sub_100040DFC();
      if (v69) {
        BOOL v54 = 0;
      }
      else {
        BOOL v54 = v53 == 7;
      }
      int v55 = v54;
      int v56 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, 0);
      dispatch_time_t v57 = dispatch_time(0, v44);
      dispatch_source_set_timer(v56, v57, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
      dispatch_source_set_event_handler(v56, &stru_1004E2C30);
      dispatch_resume(v56);
      if (byte_1004E5F98 == 1)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2CB0);
        }
        long long v58 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = v42;
          _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "%s script powercycling entire wifi/BT chip", v73, 0xCu);
        }
        int v59 = sub_100001C28();
        if (v59)
        {
          int v35 = v59;
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E2CF0);
          }
          if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
            sub_10004B05C();
          }
          dispatch_source_cancel(v56);
          dispatch_release(v56);
          goto LABEL_188;
        }
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2D30);
        }
        int v60 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "succeed from calling pcie_powercycle in %s", v73, 0xCu);
          byte_1004E5F98 = 0;
          if (qword_1004E6420 != -1) {
            dispatch_once(&qword_1004E6420, &stru_1004E2D70);
          }
        }
        else
        {
          byte_1004E5F98 = 0;
        }
        __int16 v61 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "changed variable pendingPCIEPowerCycle to be false in %s", v73, 0xCu);
        }
      }
      int v70 = v42;
      int v62 = 0;
      if (v55) {
        int v63 = 2;
      }
      else {
        int v63 = 1;
      }
      do
      {
        unint64_t v64 = sub_1000448B4();
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2DB0);
        }
        __int16 v65 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "right before calling runCommandForCurrentConfig from %s", v73, 0xCu);
        }
        int v35 = sub_100014C84(v71);
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2DF0);
        }
        int v66 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136315138;
          *(void *)&v73[4] = "xpcRunBuiltinScript";
          _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "right after calling runCommandForCurrentConfig from %s", v73, 0xCu);
        }
        unint64_t v67 = sub_1000448B4();
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2E30);
        }
        int v68 = qword_1004E6428;
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)stat v73 = 136316162;
          *(void *)&v73[4] = v70;
          __int16 v74 = 1024;
          *(_DWORD *)uint64_t v75 = v62 + 1;
          *(_WORD *)&v75[4] = 1024;
          *(_DWORD *)&v75[6] = v63;
          LOWORD(v76) = 1024;
          *(_DWORD *)((char *)&v76 + 2) = v35;
          HIWORD(v76) = 2048;
          unint64_t v77 = v67 - v64;
          _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "%s script attempt %u of %u: result %d execution time:%llu(MS)", v73, 0x28u);
        }
        if (!v35) {
          break;
        }
        usleep(0x7A120u);
        ++v62;
      }
      while (v63 != v62);
      dispatch_source_cancel(v56);
      dispatch_release(v56);
      if (!v69 && v35 && sub_100040DFC() == 7)
      {
        if (qword_1004E6420 != -1) {
          dispatch_once(&qword_1004E6420, &stru_1004E2E70);
        }
        if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
          sub_10004AFD8();
        }
        byte_1004E5F98 = 1;
      }
      goto LABEL_188;
    }
    int v35 = 1;
LABEL_188:
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2EB0);
    }
    goto LABEL_68;
  }
  CFDictionaryRef v8 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, 0);
  dispatch_time_t v17 = dispatch_time(0, 30000000000);
  dispatch_source_set_timer(v8, v17, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  dispatch_source_set_event_handler(v8, &stru_1004E2870);
  dispatch_resume(v8);
  xpc_object_t v18 = xpc_dictionary_get_value(object, "kMsgArgs");
  xpc_object_t v19 = xpc_dictionary_get_value(v18, "script");
  if (v19)
  {
    long long v20 = v19;
    if (xpc_get_type(v19) == (xpc_type_t)&_xpc_type_string)
    {
      uint64_t v34 = xpc_string_get_string_ptr(v20);
      if (v34)
      {
        int64_t v25 = (int)sub_10001B05C(v34);
        goto LABEL_47;
      }
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E29F0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
        sub_10004AF70();
      }
    }
    else
    {
      if (qword_1004E6420 != -1) {
        dispatch_once(&qword_1004E6420, &stru_1004E29B0);
      }
      if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEBUG)) {
        sub_10004AFA4();
      }
    }
  }
  else
  {
    if (qword_1004E6420 != -1) {
      dispatch_once(&qword_1004E6420, &stru_1004E2970);
    }
    if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR)) {
      sub_10004AF3C();
    }
  }
  int64_t v25 = 1;
LABEL_47:
  xpc_object_t v26 = xpc_dictionary_create_reply(object);
  xpc_dictionary_set_int64(v26, "result", v25);
  xpc_connection_send_message(v3, v26);
  xpc_release(v26);
LABEL_106:
  dispatch_source_cancel(v8);
  dispatch_release(v8);
LABEL_107:
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E27F0);
  }
  __int16 v47 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)stat v73 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Completed handling of dictionary-xpc event", v73, 2u);
  }
}

void sub_100045CEC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045D20(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045D54(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045D88(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045DBC(id a1)
{
  uint64_t v1 = (void (*)(const char *, uint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "WriteStackshotReport_stdc");
  if (v1) {
    v1("BT BlueTool Stuck", 3172327085);
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E28B0);
  }
  uint64_t v2 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BlueTool timed out! Exiting...", v3, 2u);
  }
  exit(1);
}

void sub_100045E74(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045EA8(id a1)
{
  uint64_t v1 = (void (*)(const char *, uint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "WriteStackshotReport_stdc");
  if (v1) {
    v1("BT BlueTool Stuck", 3172327085);
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E2930);
  }
  uint64_t v2 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BlueTool timed out! Exiting...", v3, 2u);
  }
  exit(1);
}

void sub_100045F60(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045F94(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045FC8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100045FFC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046030(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046064(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046098(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000460CC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046100(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046134(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046168(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004619C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000461D0(id a1)
{
  uint64_t v1 = (void (*)(const char *, uint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "WriteStackshotReport_stdc");
  if (v1) {
    v1("BT BlueTool Stuck", 3172327085);
  }
  if (qword_1004E6420 != -1) {
    dispatch_once(&qword_1004E6420, &stru_1004E2C70);
  }
  uint64_t v2 = qword_1004E6428;
  if (os_log_type_enabled((os_log_t)qword_1004E6428, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BlueTool timed out! Exiting...", v3, 2u);
  }
  exit(1);
}

void sub_100046288(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000462BC(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000462F0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046324(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046358(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004638C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000463C0(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000463F4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046428(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004645C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046490(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000464C4(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_1000464F8(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_10004652C(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046560(id a1)
{
  qword_1004E6428 = (uint64_t)os_log_create("com.apple.bluetooth", "BlueTool");
}

void sub_100046594(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_1000465B0(NSObject *a1)
{
  dlerror();
  v2[0] = 136315394;
  sub_100004B0C();
  _os_log_error_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_ERROR, "PCIe failed to dlopen %s, error: %s\n", (uint8_t *)v2, 0x16u);
}

void sub_100046644()
{
  sub_100004B0C();
  sub_100004B2C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
}

void sub_1000466B8()
{
  sub_100004B0C();
  sub_100004B2C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
}

void sub_10004672C()
{
  sub_100004B0C();
  sub_100004B2C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
}

void sub_1000467A0()
{
  sub_100004B0C();
  sub_100004B2C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
}

void sub_100046814()
{
  sub_100004B0C();
  sub_100004B2C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
}

void sub_100046888()
{
  sub_100004B0C();
  sub_100004B2C((void *)&_mh_execute_header, v0, v1, "PCIe failed to dlsym %s, error: %s\n", v2, v3, v4, v5, 2u);
}

void sub_1000468FC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100046974(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000469EC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100046A64(unsigned __int16 a1, uint64_t a2, NSObject *a3)
{
  v3[0] = 67109376;
  v3[1] = a1;
  __int16 v4 = 2048;
  uint64_t v5 = a2;
  sub_100004B88((void *)&_mh_execute_header, a3, (uint64_t)a3, "slot has more data, slotLen: %u, size_in: %zu", (uint8_t *)v3);
}

void sub_100046AE8()
{
  v2[0] = 136315394;
  sub_100004B74();
  sub_100004B88((void *)&_mh_execute_header, v0, v1, "%s: os_channel_sync rx failed - %d", (uint8_t *)v2);
}

void sub_100046B60()
{
  v2[0] = 136315394;
  sub_100004B74();
  sub_100004B88((void *)&_mh_execute_header, v0, v1, "%s: failed to advance slot - %d", (uint8_t *)v2);
}

void sub_100046BD8()
{
  int v1 = 136315394;
  uint64_t v2 = "skywalk_read_channel";
  sub_100004B64();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s: current slot length: %u", (uint8_t *)&v1, 0x12u);
}

void sub_100046C60()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "PCIe could not find AppleBluetoothModule service\n", v2, v3, v4, v5, v6);
}

void sub_100046C94()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "PCIe FLR failed: %#x\n", v2, v3, v4, v5, v6);
}

void sub_100046CFC()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "PCIe could not open AppleBluetoothModule service: %#x\n", v2, v3, v4, v5, v6);
}

void sub_100046D64()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "PCIe powercycle failed: %#x\n", v2, v3, v4, v5, v6);
}

void sub_100046DCC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "PCIe failed to load transport library\n", v2, v3, v4, v5, v6);
}

void sub_100046E00(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100046E84(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100046EFC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100046F74(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100046FEC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "could not create matching dictionary", v2, v3, v4, v5, v6);
}

void sub_100047020()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "failed to create stringRef", v2, v3, v4, v5, v6);
}

void sub_100047054()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "no matching service found", v2, v3, v4, v5, v6);
}

void sub_100047088()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "no IOSkywalkNexusUUID property", v2, v3, v4, v5, v6);
}

void sub_1000470BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100047134(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000471AC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "failed to create channel", v2, v3, v4, v5, v6);
}

void sub_1000471E0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "failed to create write kqueue", v2, v3, v4, v5, v6);
}

void sub_100047214()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "write kevent registration failed", v2, v3, v4, v5, v6);
}

void sub_100047248()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "failed to create read kqueue", v2, v3, v4, v5, v6);
}

void sub_10004727C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "read kevent registration failed", v2, v3, v4, v5, v6);
}

void sub_1000472B0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "failed to get cstring property", v2, v3, v4, v5, v6);
}

void sub_1000472E4()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "IOServiceAddMatchingNotification returned 0x%08x", v2, v3, v4, v5, v6);
}

void sub_10004734C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "PCIe sendImage failed\n", v2, v3, v4, v5, v6);
}

void sub_100047380()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "PCIe failed to free transport\n", v2, v3, v4, v5, v6);
}

void sub_1000473B4(uint64_t a1, uint64_t a2)
{
  int v3 = 134218240;
  uint64_t v4 = a2;
  sub_100004B64();
  sub_100004B88((void *)&_mh_execute_header, v2, (uint64_t)v2, "PCIe read failed: requested %zu, received %u\n", (uint8_t *)&v3);
}

void sub_100047430(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000474A8()
{
  int v2 = 136315650;
  int v3 = "skywalk_write_channel";
  sub_100004B64();
  __int16 v4 = 2048;
  uint64_t v5 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "%s: slot_len: %u, size_in: %zu", (uint8_t *)&v2, 0x1Cu);
}

void sub_100047540(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000475B8()
{
  v2[0] = 136315394;
  sub_100004B74();
  sub_100004B88((void *)&_mh_execute_header, v0, v1, "%s: failed to advance slot - %d", (uint8_t *)v2);
}

void sub_100047630()
{
  int v1 = 136315394;
  int v2 = "skywalk_write_channel";
  sub_100004B64();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s: current slot length: %u", (uint8_t *)&v1, 0x12u);
}

void sub_1000476B8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100047730(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  int v4 = 136315650;
  uint64_t v5 = "pcie_skywalk_get_hci_event";
  __int16 v6 = 2048;
  uint64_t v7 = a2;
  __int16 v8 = 2048;
  uint64_t v9 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s: read failed: requested %zu, received %zu", (uint8_t *)&v4, 0x20u);
}

void sub_1000477CC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "invalid input, ch_data null", v2, v3, v4, v5, v6);
}

void sub_100047800()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "INIT failed!!! for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
}

void sub_100047868()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "No init script for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
}

void sub_1000478D0()
{
  sub_100004B20();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "CC0 set successfully", v1, 2u);
}

void sub_100047910()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to set country code", v2, v3, v4, v5, v6);
}

void sub_100047944()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Power tables download failed!!!", v2, v3, v4, v5, v6);
}

void sub_100047978()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "aci_download_power_tables: FAILED to send Raw Bytes to Device IO", v2, v3, v4, v5, v6);
}

void sub_1000479AC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "aci_download_power_tables: Command result code was hosed!", v2, v3, v4, v5, v6);
}

void sub_1000479E0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004B48((void *)&_mh_execute_header, a2, a3, "aci_download_power_tables: No HCI command at first byte-0x01, first byte=0x%x", a5, a6, a7, a8, 0);
}

void sub_100047A50()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Failed to find platform specific Regulatory Data", v2, v3, v4, v5, v6);
}

void sub_100047A84()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "BOOT failed!!! for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
}

void sub_100047AEC()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "No boot script for the platform- aci_platform=%d\n", v2, v3, v4, v5, v6);
}

void sub_100047B54(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004AF0((void *)&_mh_execute_header, a1, a3, "Unable to open file path=%s", a5, a6, a7, a8, 2u);
}

uint64_t sub_100047BCC(unsigned __int16 *a1, unsigned __int8 a2, os_log_t log)
{
  int v3 = *a1;
  v5[0] = 67109376;
  v5[1] = v3;
  __int16 v6 = 1024;
  int v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "manufacturer = %d, aci_platform=%d", (uint8_t *)v5, 0xEu);
  if (qword_1004E6420 == -1) {
    return 1;
  }
  dispatch_once(&qword_1004E6420, &stru_1004DDFD0);
  return 0;
}

void sub_100047C90()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "FAILED", v2, v3, v4, v5, v6);
}

void sub_100047CC4()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Unable to load HCD, file path=%s", v2, v3, v4, v5, v6);
}

void sub_100047D2C()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Unable to send BDADDR: %zd", v2, v3, v4, v5, v6);
}

void sub_100047D94()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Failed to retrieve address from devicetree.", v2, v3, v4, v5, v6);
}

void sub_100047DC8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100047E3C()
{
  sub_10000A70C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Using host name: %s", v1, 0xCu);
}

void sub_100047EB0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "EVNT: Empty", v2, v3, v4, v5, v6);
}

void sub_100047EE4(const char *a1, NSObject *a2)
{
  strlen(a1);
  sub_10000A70C();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "strlen(bdaddr_s) = %lu", v3, 0xCu);
}

void sub_100047F6C()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Unable to send command: %zd", v2, v3, v4, v5, v6);
}

void sub_100047FD4()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "FAILED to send Raw Bytes to Device IO", v2, v3, v4, v5, v6);
}

void sub_100048008()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Command result code was hosed!", v2, v3, v4, v5, v6);
}

void sub_10004803C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004B48((void *)&_mh_execute_header, a2, a3, "No HCI command at first byte-0x01, first byte=0x%x", a5, a6, a7, a8, 0);
}

void sub_1000480AC()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Can't read HCI command header 4 bytes, from HCD file!!! result=%zd", v2, v3, v4, v5, v6);
}

void sub_100048114()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Packet read FAILED", v2, v3, v4, v5, v6);
}

void sub_100048148()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Using non-default firmware %s", v2, v3, v4, v5, v6);
}

void sub_1000481B0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Can't find LPM firmware on this platform", v2, v3, v4, v5, v6);
}

void sub_1000481E4()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Using non-default LPM firmware %s", v2, v3, v4, v5, v6);
}

void sub_10004824C()
{
  sub_100012814();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "RSSI Sweep failed! Error code %02X", v2, v3, v4, v5, v6);
}

void sub_1000482B8()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Error in sending regulatory data", v2, v3, v4, v5, v6);
}

void sub_1000482EC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "On J52 FrankenStein setups: IGNORE PTB loading error", v2, v3, v4, v5, v6);
}

uint64_t sub_100048320()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to get regulatory data", v2, v3, v4, v5, v7);
  if (qword_1004E6420 == -1) {
    return 1;
  }
  dispatch_once(&qword_1004E6420, &stru_1004DF670);
  return 0;
}

void sub_100048388()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "unable to send BDADDR: %zd\n", v2, v3, v4, v5, v6);
}

void sub_1000483F0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to send sleep enable command\n", v2, v3, v4, v5, v6);
}

void sub_100048424()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to load HCD file", v2, v3, v4, v5, v6);
}

void sub_100048458()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Device io is not opened, please check if device used to communicate over is set.", v2, v3, v4, v5, v6);
}

void sub_10004848C(uint8_t *buf, char a2, const char **a3, os_log_t log)
{
  if (a2 == 5) {
    uint64_t v4 = "Wrong MSF version";
  }
  else {
    uint64_t v4 = (const char *)&unk_1004CA20E;
  }
  *(_DWORD *)stat buf = 136315138;
  *a3 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "CRC error in Cal data %s", buf, 0xCu);
}

void sub_1000484F4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100048568()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Invalid TX calibration data size.", v2, v3, v4, v5, v6);
}

void sub_10004859C()
{
  sub_100012814();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "Invalid calibration data size for 4355B3 : 0x%x", v2, v3, v4, v5, v6);
}

void sub_100048608()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Invalid RX calibration data size.", v2, v3, v4, v5, v6);
}

void sub_10004863C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000486A8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100048714(CFErrorRef *a1, NSObject *a2)
{
  CFErrorGetCode(*a1);
  sub_10000A70C();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Loading FDR data got error %ld\n", v3, 0xCu);
}

void sub_1000487A0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10004880C()
{
  sub_10000A70C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Chipset is %s", v1, 0xCu);
}

void sub_100048880()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "updateFirmwareInSerialFlash() only works for USB or UART Mac systems", v2, v3, v4, v5, v6);
}

uint64_t sub_1000488B4()
{
  sub_100004B20();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "updateFirmwareInSerialFlash()", v2, 2u);
  if (qword_1004E6420 == -1) {
    return 1;
  }
  dispatch_once(&qword_1004E6420, &stru_1004DF030);
  return 0;
}

void sub_100048928()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "*** Command failed!", v2, v3, v4, v5, v6);
}

void sub_10004895C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Command result code was hosed!", v2, v3, v4, v5, v6);
}

void sub_100048990()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Bad response from launch anouncement", v2, v3, v4, v5, v6);
}

void sub_1000489C4()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Didn't receive enough data", v2, v3, v4, v5, v6);
}

void sub_1000489F8()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to setup device for config", v2, v3, v4, v5, v6);
}

void sub_100048A2C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "HCD file corrupt!", v2, v3, v4, v5, v6);
}

void sub_100048A60()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Packet read FAILED", v2, v3, v4, v5, v6);
}

void sub_100048A94()
{
  __error();
  sub_100012814();
  sub_100012840((void *)&_mh_execute_header, v0, v1, "HCI command is messed up: %d", v2, v3, v4, v5, v6);
}

void sub_100048B10()
{
  LODWORD(v2) = 136315650;
  sub_1000127E8();
  sub_100012820((void *)&_mh_execute_header, v0, v1, "%s: expected: %d, returned: %d\n", v2, v3, v4);
}

void sub_100048B84()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "EVNT: Empty", v2, v3, v4, v5, v6);
}

void sub_100048BB8()
{
  LODWORD(v2) = 136315650;
  sub_1000127E8();
  sub_100012820((void *)&_mh_execute_header, v0, v1, "%s: expected: %d, returned: %d\n", v2, v3, v4);
}

void sub_100048C2C(unsigned char *a1, unsigned char *a2)
{
  sub_100012804(a1, a2);
  _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Capping pad value to 150 for Temp compensation", v3, 2u);
}

void sub_100048C64(unsigned char *a1, unsigned char *a2)
{
  sub_100012804(a1, a2);
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "This should NEVER happen. Something went horribly wrong", v3, 2u);
}

uint64_t sub_100048C9C()
{
  sub_100012814();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Updated calibration offset index : %d", v2, 8u);
  if (qword_1004E6420 == -1) {
    return 1;
  }
  dispatch_once(&qword_1004E6420, &stru_1004DF4F0);
  return 0;
}

void sub_100048D48()
{
  sub_100004B20();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Msf file with old power range detected. Generate cal data for 13.5dBm", v1, 2u);
}

void sub_100048D88()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to determine firmware file path", v2, v3, v4, v5, v6);
}

void sub_100048DBC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to open firmware file", v2, v3, v4, v5, v6);
}

void sub_100048DF0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to get firmware file stats", v2, v3, v4, v5, v6);
}

void sub_100048E24()
{
  sub_100017810();
  sub_100017828((void *)&_mh_execute_header, v0, v1, "Firmware read size error: expected: %d, returned: %d", v2, v3);
}

void sub_100048E8C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Firmware file size not valid", v2, v3, v4, v5, v6);
}

void sub_100048EC0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "firmware file checksum mismatch", v2, v3, v4, v5, v6);
}

void sub_100048EF4()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to determine firmware file hash", v2, v3, v4, v5, v6);
}

void sub_100048F28()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "CC_SHA256 failed:", v2, v3, v4, v5, v6);
}

void sub_100048F5C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "SHA comparison failed", v2, v3, v4, v5, v6);
}

void sub_100048F90()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "firemware file missing", v2, v3, v4, v5, v6);
}

void sub_100048FC4()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Using alternate script %s", v2, v3, v4, v5, v6);
}

void sub_10004902C()
{
  sub_10000A70C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Regulatory data added for %s", v1, 0xCu);
}

void sub_1000490A0()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Regulatory data for %s does not exist", v2, v3, v4, v5, v6);
}

void sub_100049108()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Firmware not found", v2, v3, v4, v5, v6);
}

void sub_10004913C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Critical: No ptb File wild card found. Unable to determine regulatory file path", v2, v3, v4, v5, v6);
}

void sub_100049170()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to determine regulatory PTB file path", v2, v3, v4, v5, v6);
}

void sub_1000491A4()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to open regulatory file", v2, v3, v4, v5, v6);
}

void sub_1000491D8()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Unable to get regulatory file stats", v2, v3, v4, v5, v6);
}

void sub_10004920C(uint64_t a1, int a2, os_log_t log)
{
  v3[0] = 68157954;
  v3[1] = a2;
  __int16 v4 = 2096;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Raw regulatory data loaded: %.*P", (uint8_t *)v3, 0x12u);
}

void sub_100049294()
{
  sub_100017810();
  sub_100017828((void *)&_mh_execute_header, v0, v1, "Regulatory file read size error: expected: %d, returned: %d", v2, v3);
}

void sub_1000492FC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Regulatory file size not valid", v2, v3, v4, v5, v6);
}

void sub_100049330(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000493A8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004AF0((void *)&_mh_execute_header, a1, a3, "Critical: Unable to find default (SKU=NULL) PTB file at %s", a5, a6, a7, a8, 2u);
}

void sub_100049420(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100049498()
{
  sub_10000A70C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Trying to find PTB file for %s\n", v1, 0xCu);
}

void sub_10004950C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to alloc output Str", v1, 2u);
}

void sub_100049550(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "HCI Reset failed, got unexpected data:", v1, 2u);
}

void sub_100049594(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  int v4 = 134218240;
  uint64_t v5 = v3;
  __int16 v6 = 2048;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "applebt_io_get_hci_event: retlen %ld is bigger then maxsize %ld, triming...\n", (uint8_t *)&v4, 0x16u);
}

void sub_100049620(unsigned __int8 *a1, NSObject *a2)
{
  int v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "applebt_io_get_hci_event: num_items mismatch, expected 1 received %d\n", (uint8_t *)v3, 8u);
}

void sub_10004969C(unsigned __int8 *a1, NSObject *a2)
{
  int v2 = *a1 + 1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "applebt_io_get_hci_event: resetting next seq_num to %d\n", (uint8_t *)v3, 8u);
}

uint64_t sub_10004971C(unsigned __int8 *a1, NSObject *a2)
{
  int v2 = *a1;
  v4[0] = 67109632;
  v4[1] = 5;
  __int16 v5 = 1024;
  int v6 = byte_1004E5EF2 - 1;
  __int16 v7 = 1024;
  int v8 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "applebt_io_get_hci_event: seq_num[pipe=%d] mismatch, expected %d received %d\n", (uint8_t *)v4, 0x14u);
  if (qword_1004E6420 == -1) {
    return 1;
  }
  dispatch_once(&qword_1004E6420, &stru_1004E0250);
  return 0;
}

void sub_1000497F0()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_mgmt_connect: IOServiceOpen returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049858()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_power_on: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_1000498C0()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_power_on: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049928()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_power_off: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049990()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_power_off: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_1000499F8()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_power_sleep: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049A60()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_power_sleep: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049AC8()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_exit_power_sleep: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049B30()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_exit_power_sleep: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049B98()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mode: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049C00()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mode: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049C68()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_level: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049CD0()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_level: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049D38()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mask: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049DA0()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_trace_mask: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049E08()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_capture_timeout: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049E70()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_set_capture_timeout: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049ED8()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_trigger_capture: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049F40()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_trigger_capture: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_100049FA8()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_general_debug: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_10004A010()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_general_debug: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_10004A078()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_read_crash_info: IOConnectCallMethod returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_10004A0E0()
{
  sub_100004BA0();
  sub_100004B48((void *)&_mh_execute_header, v0, v1, "applebt_read_crash_info: applebt_mgmt_connect returned 0x%08X\n", v2, v3, v4, v5, v6);
}

void sub_10004A148()
{
  os_log_t v0 = __error();
  strerror(*v0);
  sub_10001DA48();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);
}

void sub_10004A1D4()
{
  os_log_t v0 = __error();
  strerror(*v0);
  sub_10001DA30();
  sub_10001DA58((void *)&_mh_execute_header, v1, v2, "connect(%s) failed (error = %s)", v3, v4, v5, v6, v7);
}

void sub_10004A258()
{
  os_log_t v0 = __error();
  strerror(*v0);
  sub_10001DA30();
  sub_10001DA58((void *)&_mh_execute_header, v1, v2, "ioctl(CTLIOCGINFO, %s) failed (error = %s)", v3, v4, v5, v6, v7);
}

void sub_10004A2DC()
{
  __error();
  sub_10001DA48();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x18u);
}

void sub_10004A388()
{
  __error();
  sub_10001DA48();
  _os_log_error_impl(v0, v1, v2, v3, v4, 8u);
}

void sub_10004A410()
{
  sub_10001EF1C();
  sub_10001DF58(v0);
  sub_10001EEE4();
  sub_10001EEFC((void *)&_mh_execute_header, v1, v2, "applebt_hci_open: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
}

void sub_10004A488(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004B48((void *)&_mh_execute_header, a2, a3, "applebt_hci_open: applebt_hci_connect returned 0x%08X\n", a5, a6, a7, a8, 0);
}

void sub_10004A4F4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004B48((void *)&_mh_execute_header, a2, a3, "applebt_hci_connect: IOServiceOpen returned 0x%08X\n", a5, a6, a7, a8, 0);
}

void sub_10004A560(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100004B48((void *)&_mh_execute_header, a2, a3, "applebt_hci_connect: IOServiceAddMatchingNotification returned 0x%08X\n", a5, a6, a7, a8, 0);
}

void sub_10004A5CC()
{
  sub_10001EF1C();
  sub_10001DF58(v0);
  sub_10001EEE4();
  sub_10001EEFC((void *)&_mh_execute_header, v1, v2, "applebt_hci_close: IOConnectCallMethod returned (0x%08X, %s), closing connection\n", v3, v4, v5, v6, v7);
}

void sub_10004A644()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "applebt_hci_close: Not opened\n", v2, v3, v4, v5, v6);
}

void sub_10004A678()
{
  sub_10001EF1C();
  sub_10001DF58(v0);
  sub_10001EEE4();
  sub_10001EEFC((void *)&_mh_execute_header, v1, v2, "applebt_hci_transport_reset: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
}

void sub_10004A6F0()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "applebt_hci_transport_reset: Not opened\n", v2, v3, v4, v5, v6);
}

void sub_10004A724()
{
  sub_10001EF1C();
  sub_10001DF58(v0);
  sub_10001EEE4();
  sub_10001EEFC((void *)&_mh_execute_header, v1, v2, "applebt_hci_write: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
}

void sub_10004A79C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "applebt_hci_write: Not opened\n", v2, v3, v4, v5, v6);
}

void sub_10004A7D0()
{
  sub_10001EF1C();
  sub_10001DF58(v0);
  sub_10001EEE4();
  sub_10001EEFC((void *)&_mh_execute_header, v1, v2, "applebt_hci_read: IOConnectCallMethod returned (0x%08X, %s)\n", v3, v4, v5, v6, v7);
}

void sub_10004A848()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "applebt_hci_read: Not opened\n", v2, v3, v4, v5, v6);
}

void sub_10004A87C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "applebt_hci_pipes_info: service not opened\n", v2, v3, v4, v5, v6);
}

void sub_10004A8B0(int *a1, NSObject *a2)
{
  int v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "DeviceTree speed = %d", (uint8_t *)v3, 8u);
}

void sub_10004A92C(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "transport override from boot-arg is invalid: %llu", (uint8_t *)&v2, 0xCu);
}

void sub_10004A9A4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "usage: power [on|off]", v1, 2u);
}

void sub_10004A9E8()
{
  __error();
  sub_100012840((void *)&_mh_execute_header, v0, v1, "bluetool: wake failed: error %d", v2, v3, v4, v5, 0);
}

void sub_10004AA68(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "bluetool_wake_off";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "PCIE transport and return direclty without wake_off from %s", (uint8_t *)&v1, 0xCu);
}

void sub_10004AAEC()
{
  __error();
  sub_100012840((void *)&_mh_execute_header, v0, v1, "bluetool: reset failed: error %d", v2, v3, v4, v5, 0);
}

void sub_10004AB6C(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "bluetool: power on failed: error 0x%08X", (uint8_t *)v2, 8u);
}

void sub_10004ABE4(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "bluetool: power off failed: error 0x%08X", (uint8_t *)v2, 8u);
}

void sub_10004AC5C()
{
  __error();
  sub_100012840((void *)&_mh_execute_header, v0, v1, "bluetool: reg on failed: error %d", v2, v3, v4, v5, 0);
}

void sub_10004ACDC()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "SKU could not be determined", v2, v3, v4, v5, v6);
}

void sub_10004AD10()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Failed to create matching dictionary\n", v2, v3, v4, v5, v6);
}

void sub_10004AD44()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Failed to generate pcieChipset string from HWIdentifiers property\n", v2, v3, v4, v5, v6);
}

void sub_10004AD78(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  int v4 = 134218242;
  uint64_t v5 = v3;
  __int16 v6 = 2080;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to get information to generate pcieChipset string from HWIdentifiers property chipset=%llu stepping=%s\n", (uint8_t *)&v4, 0x16u);
}

void sub_10004AE04()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Failed to get stepping from HWIdentifiers property\n", v2, v3, v4, v5, v6);
}

void sub_10004AE38()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Failed to get chipset from HWIdentifiers property\n", v2, v3, v4, v5, v6);
}

void sub_10004AE6C()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "XPC server error: %s", v2, v3, v4, v5, v6);
}

void sub_10004AED4()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "Unexpected XPC server event: %s", v2, v3, v4, v5, v6);
}

void sub_10004AF3C()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Could not find script param", v2, v3, v4, v5, v6);
}

void sub_10004AF70()
{
  sub_100004B20();
  sub_100046594((void *)&_mh_execute_header, v0, v1, "Failed to get the string.", v2, v3, v4, v5, v6);
}

void sub_10004AFA4()
{
  sub_100004B20();
  sub_100046594((void *)&_mh_execute_header, v0, v1, "Param is not a string", v2, v3, v4, v5, v6);
}

void sub_10004AFD8()
{
  sub_10000A70C();
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "%s script failed %u times in a row. pending power cycle of entire wifi/BT chip...", v2, 0x12u);
}

void sub_10004B05C()
{
  sub_10000A70C();
  sub_100004AF0((void *)&_mh_execute_header, v0, v1, "%s script pcie powercycle failed", v2, v3, v4, v5, v6);
}

void sub_10004B0C4()
{
  sub_100004B20();
  sub_100004AD4((void *)&_mh_execute_header, v0, v1, "Could not find btaddress param", v2, v3, v4, v5, v6);
}

void sub_10004B0F8()
{
  sub_100004B20();
  sub_100046594((void *)&_mh_execute_header, v0, v1, "btaddress param is not a string", v2, v3, v4, v5, v6);
}

void sub_10004B12C(uint8_t *buf, unsigned char *a2, os_log_t log)
{
  *stat buf = 0;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Failed to alloc output.", buf, 2u);
}

void sub_10004B16C(void *a1, NSObject *a2)
{
  xpc_dictionary_get_string(a1, _xpc_error_key_description);
  sub_10000A70C();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "XPC connection error: %s", v3, 0xCu);
}

uint64_t AMFDRSealingMapCopyLocalDictForClass()
{
  return _AMFDRSealingMapCopyLocalDictForClass();
}

CCRNGStatus CCRandomGenerateBytes(void *bytes, size_t count)
{
  return _CCRandomGenerateBytes(bytes, count);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return _CFDataGetBytePtr(theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return _CFDataGetLength(theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return _CFDataGetTypeID();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return _CFEqual(cf1, cf2);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return _CFErrorGetCode(err);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return _CFNumberGetValue(number, theType, valuePtr);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

void CFRunLoopRun(void)
{
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return _CFRunLoopRunInMode(mode, seconds, returnAfterSourceHandled);
}

void CFRunLoopStop(CFRunLoopRef rl)
{
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithCString(alloc, cStr, encoding);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return _CFStringGetCString(theString, buffer, bufferSize, encoding);
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return _IOConnectCallMethod(connection, selector, input, inputCnt, inputStruct, inputStructCnt, output, outputCnt, outputStruct, outputStructCnt);
}

kern_return_t IOConnectCallScalarMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, uint64_t *output, uint32_t *outputCnt)
{
  return _IOConnectCallScalarMethod(connection, selector, input, inputCnt, output, outputCnt);
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return _IOIteratorNext(iterator);
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return _IONotificationPortCreate(mainPort);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
}

CFRunLoopSourceRef IONotificationPortGetRunLoopSource(IONotificationPortRef notify)
{
  return _IONotificationPortGetRunLoopSource(notify);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperty(entry, key, allocator, options);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return _IORegistryEntryFromPath(mainPort, path);
}

CFTypeRef IORegistryEntrySearchCFProperty(io_registry_entry_t entry, const io_name_t plane, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntrySearchCFProperty(entry, plane, key, allocator, options);
}

kern_return_t IOServiceAddMatchingNotification(IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification)
{
  return _IOServiceAddMatchingNotification(notifyPort, notificationType, matching, callback, refCon, notification);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

CFMutableDictionaryRef IOServiceNameMatching(const char *name)
{
  return _IOServiceNameMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

uint64_t MGIsDeviceOneOfType()
{
  return _MGIsDeviceOneOfType();
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

int __darwin_check_fd_set_overflow(int a1, const void *a2, int a3)
{
  return ___darwin_check_fd_set_overflow(a1, a2, a3);
}

int *__error(void)
{
  return ___error();
}

uint64_t __memcpy_chk()
{
  return ___memcpy_chk();
}

int __sprintf_chk(char *a1, int a2, size_t a3, const char *a4, ...)
{
  return ___sprintf_chk(a1, a2, a3, a4);
}

uint64_t __strlcat_chk()
{
  return ___strlcat_chk();
}

uint64_t __strlcpy_chk()
{
  return ___strlcpy_chk();
}

uint64_t __strncpy_chk()
{
  return ___strncpy_chk();
}

__darwin_ct_rune_t __tolower(__darwin_ct_rune_t a1)
{
  return ___tolower(a1);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void abort(void)
{
}

int access(const char *a1, int a2)
{
  return _access(a1, a2);
}

int add_history(const char *a1)
{
  return _add_history(a1);
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

int atoi(const char *a1)
{
  return _atoi(a1);
}

void bzero(void *a1, size_t a2)
{
}

void cfmakeraw(termios *a1)
{
}

int cfsetspeed(termios *a1, speed_t a2)
{
  return _cfsetspeed(a1, a2);
}

int close(int a1)
{
  return _close(a1);
}

int closedir(DIR *a1)
{
  return _closedir(a1);
}

int connect(int a1, const sockaddr *a2, socklen_t a3)
{
  return _connect(a1, a2, a3);
}

uLong crc32(uLong crc, const Bytef *buf, uInt len)
{
  return _crc32(crc, buf, len);
}

char *__cdecl ctime(const time_t *a1)
{
  return _ctime(a1);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

int dlclose(void *__handle)
{
  return _dlclose(__handle);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void exit(int a1)
{
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

int feof(FILE *a1)
{
  return _feof(a1);
}

int ferror(FILE *a1)
{
  return _ferror(a1);
}

int fflush(FILE *a1)
{
  return _fflush(a1);
}

char *__cdecl fgets(char *a1, int a2, FILE *a3)
{
  return _fgets(a1, a2, a3);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

int fputc(int a1, FILE *a2)
{
  return _fputc(a1, a2);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fstat(int a1, stat *a2)
{
  return _fstat(a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

int gethostname(char *a1, size_t a2)
{
  return _gethostname(a1, a2);
}

int getopt(int a1, char *const a2[], const char *a3)
{
  return _getopt(a1, a2, a3);
}

int getsockopt(int a1, int a2, int a3, void *a4, socklen_t *a5)
{
  return _getsockopt(a1, a2, a3, a4, a5);
}

int ioctl(int a1, unint64_t a2, ...)
{
  return _ioctl(a1, a2);
}

int kevent(int kq, const kevent *changelist, int nchanges, kevent *eventlist, int nevents, const timespec *timeout)
{
  return _kevent(kq, changelist, nchanges, eventlist, nevents, timeout);
}

int kqueue(void)
{
  return _kqueue();
}

uint64_t mach_continuous_time(void)
{
  return _mach_continuous_time();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

{
}

{
}

void objc_enumerationMutation(id obj)
{
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

DIR *__cdecl opendir(const char *a1)
{
  return _opendir(a1);
}

uint64_t os_channel_advance_slot()
{
  return _os_channel_advance_slot();
}

uint64_t os_channel_attr_create()
{
  return _os_channel_attr_create();
}

uint64_t os_channel_attr_destroy()
{
  return _os_channel_attr_destroy();
}

uint64_t os_channel_attr_get()
{
  return _os_channel_attr_get();
}

uint64_t os_channel_create()
{
  return _os_channel_create();
}

uint64_t os_channel_destroy()
{
  return _os_channel_destroy();
}

uint64_t os_channel_get_fd()
{
  return _os_channel_get_fd();
}

uint64_t os_channel_get_next_slot()
{
  return _os_channel_get_next_slot();
}

uint64_t os_channel_read_attr()
{
  return _os_channel_read_attr();
}

uint64_t os_channel_ring_id()
{
  return _os_channel_ring_id();
}

uint64_t os_channel_rx_ring()
{
  return _os_channel_rx_ring();
}

uint64_t os_channel_set_slot_properties()
{
  return _os_channel_set_slot_properties();
}

uint64_t os_channel_sync()
{
  return _os_channel_sync();
}

uint64_t os_channel_tx_ring()
{
  return _os_channel_tx_ring();
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void perror(const char *a1)
{
}

int printf(const char *a1, ...)
{
  return _printf(a1);
}

int pthread_create(pthread_t *a1, const pthread_attr_t *a2, void *(__cdecl *a3)(void *), void *a4)
{
  return _pthread_create(a1, a2, a3, a4);
}

int putchar(int a1)
{
  return _putchar(a1);
}

int puts(const char *a1)
{
  return _puts(a1);
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

dirent *__cdecl readdir(DIR *a1)
{
  return _readdir(a1);
}

char *__cdecl readline(const char *a1)
{
  return _readline(a1);
}

void *__cdecl reallocf(void *__ptr, size_t __size)
{
  return _reallocf(__ptr, __size);
}

int select(int a1, fd_set *a2, fd_set *a3, fd_set *a4, timeval *a5)
{
  return _select(a1, a2, a3, a4, a5);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return _setsockopt(a1, a2, a3, a4, a5);
}

int setvbuf(FILE *a1, char *a2, int a3, size_t a4)
{
  return _setvbuf(a1, a2, a3, a4);
}

unsigned int sleep(unsigned int a1)
{
  return _sleep(a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int socket(int a1, int a2, int a3)
{
  return _socket(a1, a2, a3);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return _strchr(__s, __c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strcpy(char *__dst, const char *__src)
{
  return _strcpy(__dst, __src);
}

char *__cdecl strdup(const char *__s1)
{
  return _strdup(__s1);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return _strncmp(__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return _strncpy(__dst, __src, __n);
}

char *__cdecl strnstr(const char *__big, const char *__little, size_t __len)
{
  return _strnstr(__big, __little, __len);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return _strstr(__s1, __s2);
}

char *__cdecl strtok(char *__str, const char *__sep)
{
  return _strtok(__str, __sep);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return _strtol(__str, __endptr, __base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return _strtoul(__str, __endptr, __base);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

int tcdrain(int a1)
{
  return _tcdrain(a1);
}

int tcflush(int a1, int a2)
{
  return _tcflush(a1, a2);
}

time_t time(time_t *a1)
{
  return _time(a1);
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

int uuid_parse(const uuid_string_t in, uuid_t uu)
{
  return _uuid_parse(in, uu);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return _write(__fd, __buf, __nbyte);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return _xpc_copy_description(object);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return _xpc_dictionary_create_reply(original);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

void xpc_release(xpc_object_t object)
{
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return _xpc_string_get_string_ptr(xstring);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}