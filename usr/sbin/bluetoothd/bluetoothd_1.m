uint64_t sub_1000E0D24(uint64_t result)
{
  byte_1009FF5C0 = result;
  return result;
}

void *sub_1000E0D30()
{
  if (byte_1009FF5C0) {
    return &unk_1009F8CD8;
  }
  else {
    return &unk_1009F8CF8;
  }
}

void *sub_1000E0D54()
{
  return &unk_1009F8D18;
}

uint64_t sub_1000E0D60(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"deInitChannelQueue channel %x cid=%d", v2, v3, v4, v5, v6, v7, v8, a1);
    v9 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v21 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
    goto LABEL_5;
  }
  if (a1)
  {
LABEL_5:
    sub_1002595D8(*(void **)(a1 + 8));
    *(void *)(a1 + 8) = 0;
    sub_1002595D8(*(void **)(a1 + 16));
    uint64_t result = 0;
    *(void *)(a1 + 16) = 0;
    return result;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"channel can not be null", v11, v12, v13, v14, v15, v16, v17, v19);
    v18 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 101;
}

_OWORD *sub_1000E0E94(__int16 a1, __int16 a2, int *a3, int a4, __int16 a5)
{
  uint64_t result = sub_100022FE8(0xA8uLL);
  *uint64_t result = 0u;
  result[1] = 0u;
  result[2] = 0u;
  result[3] = 0u;
  result[4] = 0u;
  result[5] = 0u;
  result[6] = 0u;
  result[7] = 0u;
  result[8] = 0u;
  result[9] = 0u;
  *((void *)result + 20) = 0;
  *((_WORD *)result + 1) = a1;
  *(_WORD *)uint64_t result = a2;
  int v11 = *a3;
  *((_WORD *)result + 4) = *((_WORD *)a3 + 2);
  *((_DWORD *)result + 1) = v11;
  *((_WORD *)result + 5) = a4;
  *((_WORD *)result + 64) = a5;
  *((unsigned char *)result + 144) = a4 != 4;
  return result;
}

void sub_1000E0F24(void *a1)
{
  if (a1)
  {
    sub_10025C480((uint64_t)a1 + 16);
    sub_100023010(a1);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"cannot free a null pointer", v2, v3, v4, v5, v6, v7, v8, v10);
    v9 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1000E0FB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a1;
  *(void *)(a1 + 160) = a2;
  *(_DWORD *)(a1 + 24) = 626;
  sub_100197A30(a1 + 4);

  JUMPOUT(0x1001DE1A4);
}

uint64_t sub_1000E1010(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a1;
  *(void *)(a1 + 160) = a2;
  unsigned int v3 = *(unsigned __int8 *)(a1 + 144);
  if (v3 >= 3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Priority %d is out of range (max=%d). using default priority", v4, v5, v6, v7, v8, v9, v10, *(unsigned __int8 *)(a1 + 144));
      int v11 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    unsigned int v3 = 0;
    *(unsigned char *)(a1 + 144) = 0;
  }
  uint64_t v12 = *(void *)(a1 + 152);
  if (v12)
  {
    uint64_t v13 = v12 + 8;
    if (sub_100059E10(*(void *)(v12 + 8 + 8 * v3)) < 0x15)
    {
      sub_100259764(*(void *)(v13 + 8 * *(unsigned __int8 *)(a1 + 144)), a1, 168);
      sub_1000E11C0(*(void *)(a1 + 152));
      return 0;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Queue size exceeded MAX(%d)", v14, v15, v16, v17, v18, v19, v20, 20);
      v21 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v22 = 410;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"channel can not be null", v23, v24, v25, v26, v27, v28, v29, v40);
      v30 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v22 = 101;
  }
  sub_100023010((void *)a1);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"pushPacketToChannelQueue failed with result %!", v31, v32, v33, v34, v35, v36, v37, v22);
    v38 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return v22;
}

void sub_1000E11C0(uint64_t a1)
{
  if (a1)
  {
    if (*(unsigned char *)(a1 + 3))
    {
      uint64_t v1 = 0;
      uint64_t v2 = a1 + 8;
      char v3 = 1;
      do
      {
        uint64_t v4 = sub_1002598B4(*(void *)(v2 + 8 * v1), 0);
        uint64_t v5 = (unsigned __int16 *)v4;
        if ((v3 & 1) == 0) {
          break;
        }
        char v3 = 0;
        uint64_t v1 = 1;
      }
      while (!v4);
      if (v4)
      {
        uint64_t v6 = sub_100197A30(v4 + 4);
        if (!((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void, uint64_t, unsigned __int16 *, void))loc_1001DE1A4)(sub_1000E1484, *v5, v6, v5 + 8, 0))*(unsigned char *)(*((void *)v5 + 19) + 3) = 0; {
      }
        }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"sendNextPacket NULL channel", v7, v8, v9, v10, v11, v12, v13, v15);
    uint64_t v14 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1000E129C(unsigned __int16 *a1, unsigned int a2, unsigned __int16 a3, char a4)
{
  if (!a1) {
    return 101;
  }
  if (!a2)
  {
    unsigned int v5 = 0;
LABEL_12:
    uint64_t v10 = &a1[12 * v5];
    *uint64_t v10 = a3;
    *((unsigned char *)v10 + 2) = a4;
    *((unsigned char *)v10 + 3) = 1;
    *((void *)v10 + 1) = sub_10025959C(0, 0);
    uint64_t v11 = sub_10025959C(0, 0);
    uint64_t result = 0;
    *((void *)v10 + 2) = v11;
    return result;
  }
  uint64_t v4 = 0;
  unsigned int v5 = a2;
  uint64_t v6 = a1;
  while (1)
  {
    int v8 = *v6;
    v6 += 12;
    int v7 = v8;
    if (a2 <= 0xFF && !v7) {
      break;
    }
    if (a2 == ++v4) {
      goto LABEL_11;
    }
  }
  unsigned int v5 = v4;
LABEL_11:
  if (v5 <= 0x1D) {
    goto LABEL_12;
  }
  return 0;
}

uint64_t sub_1000E1358(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"removeL2capConnection(%d)", v5, v6, v7, v8, v9, v10, v11, a3);
    uint64_t v12 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v16 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  for (uint64_t i = 0; i != 720; i += 24)
  {
    uint64_t result = a1 + i;
    if (*(unsigned __int16 *)(a1 + i) == a3)
    {
      *(_WORD *)uint64_t result = 0;
      *(unsigned char *)(result + 3) = 0;
      uint64_t result = sub_1000E0D60(result);
    }
  }
  return result;
}

uint64_t sub_1000E1458(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  while (*(unsigned __int16 *)(a1 + v3) != a3)
  {
    v3 += 24;
    if (v3 == 720) {
      return 0;
    }
  }
  return a1 + v3;
}

uint64_t sub_1000E1484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    sub_10025B8C0();
  }
  uint64_t v8 = *(void **)(a2 + 8);
  if (!v8) {
    sub_10025B8C0();
  }
  uint64_t v10 = v8[19];
  uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[20];
  *(unsigned char *)(v10 + 3) = 1;
  if (v9)
  {
    v9(a1, a2, a3, a4);
    uint64_t v10 = v8[19];
  }
  sub_1000E0F24(v8);

  return sub_1000E11C0(v10);
}

void sub_1000E1518(uint64_t a1, __int16 a2, int a3)
{
  qword_1009FF5C8 = a1;
  word_1009FF5E0 = a2;
  if (a3 != 1216)
  {
    if ((byte_1009FF5EC & 1) == 0) {
      sub_10025B8C0();
    }
    v21 = 0;
    uint64_t v22 = 0;
    uint64_t v20 = 0;
    byte_1009FF5EC = 0;
    if (!a3 && (unsigned int v4 = (unsigned __int16)word_1009FF5E8, word_1009FF5E8))
    {
LABEL_18:
      if (v4 >= (unsigned __int16)word_1009FF5E0) {
        size_t v18 = (unsigned __int16)word_1009FF5E0;
      }
      else {
        size_t v18 = v4;
      }
      uint64_t v19 = qword_1009FF5D8;
      memmove((void *)qword_1009FF5C8, (const void *)qword_1009FF5D8, v18);
      qword_1009FF5D8 = v19 + v18;
      word_1009FF5E8 -= v18;
      byte_1009FF5EC = sub_10016A97C() == 0;
    }
    else
    {
      LODWORD(v22) = a3;
      BYTE4(v22) = byte_1009FF5F0;
      v21 = &v22;
      LOWORD(v20) = 8;
      uint64_t v5 = sub_100026DA8((uint64_t)sub_1000E16EC, &v20, 0);
      if (v5)
      {
        uint64_t v6 = v5;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v7, v8, v9, v10, v11, v12, v13, v6);
          uint64_t v14 = sub_100050B4C(0x3Au);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      if (qword_1009FF5D0)
      {
        sub_100023010((void *)qword_1009FF5D0);
        qword_1009FF5D0 = 0;
        word_1009FF5E8 = 0;
      }
      uint64_t v15 = 0;
      LOBYTE(v4) = 1;
      do
      {
        char v16 = v4;
        unsigned int v4 = *((unsigned __int16 *)&dword_1009FF600 + v15);
        if (*((_WORD *)&dword_1009FF600 + v15))
        {
          uint64_t v17 = qword_1009FF608[v15];
          byte_1009FF5F0 = *((unsigned char *)&word_1009FF604 + v15);
          qword_1009FF5D0 = v17;
          qword_1009FF5D8 = v17;
          word_1009FF5E8 = v4;
          *((_WORD *)&dword_1009FF600 + v15) = 0;
          goto LABEL_18;
        }
        uint64_t v15 = &_mh_execute_header.magic + 1;
      }
      while ((v16 & 1) != 0);
      unsigned int v4 = (unsigned __int16)word_1009FF5E8;
      if (word_1009FF5E8) {
        goto LABEL_18;
      }
    }
  }
}

void sub_1000E16EC(uint64_t a1)
{
  if (!*(unsigned char *)(qword_1009FF5F8 + 2048)) {
    sub_100199740(*(unsigned __int8 *)(*(void *)(a1 + 8) + 4), **(unsigned int **)(a1 + 8));
  }
}

uint64_t sub_1000E1710()
{
  qword_1009FF608[0] = 0;
  unk_1009FF610 = 0;
  word_1009FF604 = 0;
  dword_1009FF600 = 0;
  uint64_t result = sub_10016A910();
  if (!result)
  {
    uint64_t v1 = sub_10010CE48(0x804uLL);
    qword_1009FF5F8 = (uint64_t)v1;
    v1[511] = 4;
    *((unsigned char *)v1 + 2048) = 0;
    sub_1000E1F64(5);
    return 109;
  }
  return result;
}

uint64_t sub_1000E1774()
{
  if (*(_DWORD *)(qword_1009FF5F8 + 2044) == 4) {
    return 109;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E1794()
{
  return 2032;
}

uint64_t sub_1000E179C(int a1, __int16 a2, int a3)
{
  if (*(unsigned char *)(qword_1009FF5F8 + 2048)) {
    return 129;
  }
  if (a1 == 2) {
    unsigned __int16 v7 = 5;
  }
  else {
    unsigned __int16 v7 = 4;
  }
  if (byte_1009FF5EC == 1)
  {
    uint64_t v8 = 0;
    char v9 = 1;
    while (1)
    {
      char v10 = v9;
      if (!*((_WORD *)&dword_1009FF600 + v8)) {
        break;
      }
      char v9 = 0;
      uint64_t v8 = &_mh_execute_header.magic + 1;
      if ((v10 & 1) == 0) {
        goto LABEL_24;
      }
    }
    if (byte_1009FF5F0 == a1)
    {
LABEL_24:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_HCIIfc_Send_Req, busy fail", v15, v16, v17, v18, v19, v20, v21, v34);
        uint64_t v22 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_10025B8C0();
      return 118;
    }
    __int16 v23 = a3 + v7;
    uint64_t v24 = (char *)sub_100022FE8(a3 + v7);
    uint64_t v25 = (uint64_t)v24;
    *uint64_t v24 = a1;
    *(_WORD *)(v24 + 1) = a2;
    v24[3] = a3;
    if (a1 == 2) {
      v24[4] = BYTE1(a3);
    }
    if (a3) {
      sub_100022CA0(&v24[v7]);
    }
    uint64_t result = 0;
    *((unsigned char *)&word_1009FF604 + v8) = a1;
    *((_WORD *)&dword_1009FF600 + v8) = v23;
    qword_1009FF608[v8] = v25;
  }
  else
  {
    if (!qword_1009FF5C8) {
      sub_10025B8C0();
    }
    unsigned int v11 = (unsigned __int16)word_1009FF5E0;
    if (!word_1009FF5E0)
    {
      sub_10025B8C0();
      unsigned int v11 = (unsigned __int16)word_1009FF5E0;
    }
    uint64_t v12 = qword_1009FF5C8;
    uint64_t result = 105;
    if (qword_1009FF5C8 && v11)
    {
      if (a3 + v7 <= v11)
      {
        *(unsigned char *)qword_1009FF5C8 = a1;
        *(_WORD *)(v12 + 1) = a2;
        *(_WORD *)(v12 + 3) = a3;
        if (a3) {
          sub_100022CA0((char *)(v12 + v7));
        }
        qword_1009FF5D8 = 0;
        word_1009FF5E8 = 0;
      }
      else
      {
        unsigned __int16 v13 = v7 - 1;
        word_1009FF5E8 = v13 + a3;
        *(unsigned char *)qword_1009FF5C8 = a1;
        uint64_t v14 = (char *)sub_100022FE8((unsigned __int16)(v13 + a3));
        qword_1009FF5D0 = (uint64_t)v14;
        if (!v14)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"OI_Malloc failed, unable to segment packet", v26, v27, v28, v29, v30, v31, v32, v34);
            uint64_t v33 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          return 106;
        }
        qword_1009FF5D8 = (uint64_t)v14;
        *(_WORD *)uint64_t v14 = a2;
        *((_WORD *)v14 + 1) = a3;
        if (a3) {
          sub_100022CA0(&v14[v13]);
        }
      }
      byte_1009FF5F0 = a1;
      byte_1009FF5EC = 1;
      uint64_t result = sub_10016A97C();
      if (result) {
        byte_1009FF5EC = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000E1A3C(char *__src, int a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      uint64_t v4 = qword_1009FF5F8;
      switch(*(_DWORD *)(qword_1009FF5F8 + 2044))
      {
        case 0:
        case 4:
          goto LABEL_50;
        case 1:
          uint64_t v5 = *__src;
          if ((v5 - 1) >= 4u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"unknown packet type received %d", v27, v28, v29, v30, v31, v32, v33, v5);
              uint64_t v34 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
              {
                v56 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                v63 = v56;
                __int16 v64 = 1024;
                int v65 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            uint64_t v35 = qword_1009FF5F8;
            *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
            *(unsigned char *)(v35 + 2048) = 1;
            int v6 = 5;
          }
          else
          {
            *(_WORD *)(qword_1009FF5F8 + 4) = 0x2000300040003uLL >> (16 * (v5 - 1));
            *(unsigned char *)(v4 + 2042) = v5;
            *(_WORD *)(v4 + 6) = 0;
            *(_DWORD *)(v4 + 2044) = 2;
            int v6 = 10;
          }
          sub_1000E1F64(v6);
          if (*(_DWORD *)(qword_1009FF5F8 + 2044) == 2)
          {
            ++__src;
            --v2;
          }
          continue;
        case 2:
          int v16 = 0;
          unsigned int v17 = *(unsigned __int16 *)(qword_1009FF5F8 + 4);
          if (v17 >= (unsigned __int16)(v2 - 1)) {
            int v18 = (unsigned __int16)(v2 - 1);
          }
          else {
            int v18 = *(unsigned __int16 *)(qword_1009FF5F8 + 4);
          }
          int v19 = v18 + 1;
          uint64_t v20 = __src;
          break;
        case 3:
          if ((unsigned __int16)v2 >= *(unsigned __int16 *)(qword_1009FF5F8 + 4)) {
            size_t v23 = *(unsigned __int16 *)(qword_1009FF5F8 + 4);
          }
          else {
            size_t v23 = (unsigned __int16)v2;
          }
          memmove((void *)(qword_1009FF5F8 + *(unsigned __int16 *)(qword_1009FF5F8 + 6) + 10), __src, v23);
          uint64_t v24 = qword_1009FF5F8;
          int v25 = *(unsigned __int16 *)(qword_1009FF5F8 + 4);
          v2 -= v23;
          *(_WORD *)(qword_1009FF5F8 + 6) += v23;
          __src += v23;
          int v26 = v25 - v23;
          *(_WORD *)(v24 + 4) = v26;
          if (v26) {
            continue;
          }
          goto LABEL_46;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid receive state %d", v7, v8, v9, v10, v11, v12, v13, *(unsigned int *)(qword_1009FF5F8 + 2044));
            uint64_t v14 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
              sub_100745680(v60, &v61, v14);
            }
          }
          uint64_t v15 = qword_1009FF5F8;
          *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
          *(unsigned char *)(v15 + 2048) = 1;
          sub_1000E1F64(5);
          sub_10025B8C0();
          continue;
      }
      while ((_WORD)v17)
      {
        char v21 = *v20++;
        uint64_t v22 = *(unsigned __int16 *)(v4 + 6);
        *(_WORD *)(v4 + 6) = v22 + 1;
        *(unsigned char *)(v4 + v22 + 10) = v21;
        LOWORD(v17) = v17 - 1;
        *(_WORD *)(v4 + 4) = v17;
        if ((unsigned __int16)++v16 >= (unsigned __int16)v2)
        {
          if ((_WORD)v17)
          {
            int v18 = v2;
            if ((unsigned __int16)v19 != (unsigned __int16)v2)
            {
              sub_10025B8C0();
              int v18 = v19;
            }
            goto LABEL_45;
          }
          ++v18;
          break;
        }
      }
      *(_DWORD *)(v4 + 2044) = 3;
      switch(*(unsigned char *)(v4 + 2042))
      {
        case 1:
        case 3:
          __int16 v36 = *(unsigned __int8 *)(v4 + 12);
          goto LABEL_40;
        case 2:
          __int16 v36 = *(_WORD *)(v4 + 12);
          goto LABEL_40;
        case 4:
          __int16 v36 = *(unsigned __int8 *)(v4 + 11);
LABEL_40:
          *(_WORD *)(v4 + 4) = v36;
          unsigned __int16 v46 = *(_WORD *)(v4 + 6) + v36;
          *(_WORD *)(v4 + 8) = v46;
          if (v46 >= 0x7F1u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"RxPacketHeader - bogus packet length (%d)", v47, v48, v49, v50, v51, v52, v53, *(unsigned __int16 *)(qword_1009FF5F8 + 8));
              v54 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
              {
                v57 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                v63 = v57;
                __int16 v64 = 1024;
                int v65 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            uint64_t v55 = qword_1009FF5F8;
            *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
            *(unsigned char *)(v55 + 2048) = 1;
            sub_1000E1F64(5);
          }
          break;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid packet type %d", v37, v38, v39, v40, v41, v42, v43, *(unsigned __int8 *)(qword_1009FF5F8 + 2042));
            v44 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
            {
              v58 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              v63 = v58;
              __int16 v64 = 1024;
              int v65 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          uint64_t v45 = qword_1009FF5F8;
          *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
          *(unsigned char *)(v45 + 2048) = 1;
          sub_1000E1F64(5);
          sub_10025B8C0();
          int v18 = 0;
          break;
      }
LABEL_45:
      __src += (unsigned __int16)v18;
      v2 -= v18;
      uint64_t v24 = qword_1009FF5F8;
      if (!*(_WORD *)(qword_1009FF5F8 + 4))
      {
LABEL_46:
        if (*(unsigned char *)(v24 + 2048)) {
          sub_1000E228C();
        }
        else {
          sub_1000E2350();
        }
      }
    }
    while ((_WORD)v2);
  }
LABEL_50:
  if (*(_WORD *)(qword_1009FF5F8 + 4)) {
    return *(unsigned __int16 *)(qword_1009FF5F8 + 4);
  }
  else {
    return 5;
  }
}

uint64_t sub_1000E1F64(int a1)
{
  BOOL v2 = sub_100026E24(*(_DWORD *)qword_1009FF5F8);
  uint64_t v3 = (int *)qword_1009FF5F8;
  if (v2)
  {
    unsigned int v4 = *(_DWORD *)qword_1009FF5F8;
    return sub_10025BC54(v4, a1);
  }
  else
  {
    return sub_1000268E4((uint64_t)sub_1000E1FE8, 0, a1, v3);
  }
}

void sub_1000E1FE8()
{
  uint64_t v0 = qword_1009FF5F8;
  unsigned int v1 = *(_DWORD *)(qword_1009FF5F8 + 2044);
  if (v1 < 2)
  {
    if (*(unsigned char *)(qword_1009FF5F8 + 2048))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"timed out waiting for reset response", v11, v12, v13, v14, v15, v16, v17, v28);
        int v18 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  if (v1 - 2 < 2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Timed out while receiving a packet", v2, v3, v4, v5, v6, v7, v8, v28);
      uint64_t v9 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v10 = qword_1009FF5F8;
    *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
    *(unsigned char *)(v10 + 2048) = 1;
    sub_1000E1F64(5);
    return;
  }
  if (v1 == 4)
  {
    if (*(unsigned char *)(qword_1009FF5F8 + 2048))
    {
LABEL_16:
      sub_1000E21A8();
      return;
    }
    *(_DWORD *)(qword_1009FF5F8 + 2044) = 1;
    *(_WORD *)(v0 + 4) = 5;
LABEL_22:
    sub_1000E1F64(0x7FFFLL);
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid receive state %d", v19, v20, v21, v22, v23, v24, v25, *(unsigned int *)(qword_1009FF5F8 + 2044));
    int v26 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v27 = qword_1009FF5F8;
  *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
  *(unsigned char *)(v27 + 2048) = 1;
  sub_1000E1F64(5);
  sub_10025B8C0();
}

uint64_t sub_1000E21A8()
{
  *(unsigned char *)(qword_1009FF5F8 + 2048) = 0;
  uint64_t v0 = sub_100022F1C();
  uint64_t v1 = qword_1009FF5F8;
  *(unsigned char *)(qword_1009FF5F8 + 2048) = 1;
  if (v0 && (uint64_t v2 = v0, v0 != 625))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"startResynchronize, OI_HCIIfc_Send failed %!", v4, v5, v6, v7, v8, v9, v10, v2);
      uint64_t v11 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return sub_1000E1F64(5);
  }
  else
  {
    *(_DWORD *)(v1 + 2044) = 1;
    *(_WORD *)(v1 + 4) = 5;
    return sub_1000E1F64(20);
  }
}

void sub_1000E228C()
{
  uint64_t v0 = qword_1009FF5F8;
  if (*(unsigned char *)(qword_1009FF5F8 + 2042) != 4 || *(_WORD *)(qword_1009FF5F8 + 8) != 6) {
    goto LABEL_8;
  }
  uint64_t v1 = 0;
  char v2 = 1;
  uint64_t v3 = &byte_1007B8E41;
  do
  {
    int v4 = (*(v3 - 1) & *(unsigned char *)(qword_1009FF5F8 + 10 + v1));
    int v5 = *v3;
    v3 += 2;
    if (v4 != v5) {
      char v2 = 0;
    }
    ++v1;
  }
  while (v1 != 6);
  if (v2)
  {
    *(unsigned char *)(qword_1009FF5F8 + 2048) = 0;
    *(_DWORD *)(v0 + 2044) = 1;
    *(_WORD *)(v0 + 4) = 5;
    sub_1000E1F64(0x7FFF);
    sub_10018E9F0();
  }
  else
  {
LABEL_8:
    sub_1000E1F64(5);
    *(_DWORD *)(qword_1009FF5F8 + 2044) = 4;
  }
}

uint64_t sub_1000E2350()
{
  if (*(unsigned __int16 *)(qword_1009FF5F8 + 8) >= 0x7F1u) {
    sub_10025B8C0();
  }
  v2[1] = 0;
  v2[0] = mach_continuous_time();
  sub_100023868(*(unsigned __int8 *)(qword_1009FF5F8 + 2042), (unsigned __int8 *)(qword_1009FF5F8 + 10), *(unsigned __int16 *)(qword_1009FF5F8 + 8), (uint64_t)v2);
  uint64_t v0 = qword_1009FF5F8;
  *(_DWORD *)(qword_1009FF5F8 + 2044) = 1;
  *(_WORD *)(v0 + 4) = 5;
  return sub_1000E1F64(0x7FFF);
}

uint64_t sub_1000E23D0()
{
  return 0;
}

void sub_1000E23D8(uint64_t a1, __int16 a2, int a3)
{
  qword_1009FF618 = a1;
  word_1009FF620 = a2;
  if (a3 != 1216)
  {
    if ((byte_1009FF624 & 1) == 0) {
      sub_10025B8C0();
    }
    v14[0] = (const void *)8;
    byte_1009FF624 = 0;
    sub_100026C30((uint64_t)&unk_1009FF62C);
    v15[0] = a3;
    v15[1] = byte_1009FF628;
    v14[1] = v15;
    uint64_t v4 = sub_100026DA8((uint64_t)sub_1000E24C8, v14, 0);
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

void sub_1000E24C8(uint64_t a1)
{
}

uint64_t sub_1000E24D8()
{
  uint64_t result = sub_10016A910();
  if (!result)
  {
    uint64_t v1 = sub_10010CE48(0x810uLL);
    qword_1009FF638 = (uint64_t)v1;
    v1[509] = 4;
    *((unsigned char *)v1 + 2060) = 0;
    if (*((unsigned char *)v1 + 2040)) {
      *((unsigned char *)v1 + 2040) = 0;
    }
    qword_1009FF648 = 0;
    byte_1009FF640 = 0;
    sub_100026C30((uint64_t)&unk_1009FF62C);
    byte_1009FF644 = 0;
    *(unsigned char *)(qword_1009FF638 + 2049) = 0;
    sub_1000E2F6C(5);
    sub_1000DFD08();
    return 109;
  }
  return result;
}

uint64_t sub_1000E2568()
{
  if (*(_DWORD *)(qword_1009FF638 + 2036) == 4) {
    return 109;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2584()
{
  sub_1000DFD90();
  if (dword_1009FF658)
  {
    sub_100026DB4(dword_1009FF658);
    dword_1009FF658 = 0;
  }

  return sub_10016A96C();
}

uint64_t sub_1000E25C8()
{
  return 2032;
}

uint64_t sub_1000E25D0(int a1, __int16 a2, int a3)
{
  char v5 = a1;
  if (a1 != 1 && *(unsigned char *)(qword_1009FF638 + 2040)) {
    return 129;
  }
  if (a1 == 2) {
    __int16 v7 = 5;
  }
  else {
    __int16 v7 = 4;
  }
  if (a1 == 7) {
    unsigned __int16 v8 = 3;
  }
  else {
    unsigned __int16 v8 = v7;
  }
  if (byte_1009FF624 == 1)
  {
    sub_10025B8C0();
    return 118;
  }
  else
  {
    if (!qword_1009FF618) {
      sub_10025B8C0();
    }
    unsigned int v10 = (unsigned __int16)word_1009FF620;
    if (!word_1009FF620)
    {
      sub_10025B8C0();
      unsigned int v10 = (unsigned __int16)word_1009FF620;
    }
    uint64_t v11 = qword_1009FF618;
    uint64_t v6 = 105;
    if (qword_1009FF618 && v10)
    {
      if (a3 + v8 <= v10)
      {
        *(unsigned char *)qword_1009FF618 = v5;
        *(_WORD *)(v11 + 1) = a2;
        *(_WORD *)(v11 + 3) = a3;
        if (a3) {
          sub_100022CA0((char *)(v11 + v8));
        }
        else {
          sub_100023604();
        }
        byte_1009FF628 = v5;
        byte_1009FF624 = 1;
        char v12 = byte_1009FF640;
        sub_1000E3348();
        if ((v12 & 1) == 0) {
          j__usleep(0x32u);
        }
        uint64_t v6 = sub_10016A97C();
        if (v6)
        {
          sub_100026C30((uint64_t)dword_1009FF62C);
          byte_1009FF624 = 0;
        }
        uint64_t v13 = qword_1009FF638;
        if (*(unsigned char *)(qword_1009FF638 + 2040) && *(_DWORD *)(qword_1009FF638 + 2036) == 4)
        {
          *(unsigned char *)(qword_1009FF638 + 2049) = 0;
          *(_DWORD *)(v13 + 2036) = 1;
          *(_WORD *)(v13 + 2042) = 5;
          sub_1000E2F6C(0x7FFF);
        }
      }
      else
      {
        sub_10025B8C0();
        return 105;
      }
    }
  }
  return v6;
}

uint64_t sub_1000E2770(char *__src, int a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      uint64_t v4 = qword_1009FF638;
      if (*(unsigned char *)(qword_1009FF638 + 2040))
      {
        *(void *)buf = 0;
        uint64_t v68 = 0;
        sub_10010BD04(&v68);
        sub_10010BD6C(v68, qword_1009FF648, &stru_1009FF650, buf, v5, v6, v7);
        if (v8)
        {
          uint64_t v9 = v8;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"OI_AbsoluteTime_Diff returned %!", v10, v11, v12, v13, v14, v15, v16, v9);
            uint64_t v17 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              sub_100745680(v69, &v70, v17);
            }
          }
        }
        if ((*(unsigned int *)&buf[4] | ((unint64_t)*(unsigned int *)buf << 32)) >= 0x12A153440) {
          sub_10010B394(1217);
        }
        j__usleep(0);
        uint64_t v4 = qword_1009FF638;
      }
      switch(*(_DWORD *)(v4 + 2036))
      {
        case 0:
        case 4:
          goto LABEL_57;
        case 1:
          uint64_t v18 = *__src;
          char v19 = v18 - 1;
          if (v18 - 1) < 7 && ((0x4Fu >> v19))
          {
            *(_WORD *)(v4 + 2042) = word_1007B8E58[v19];
            *(unsigned char *)(v4 + 2048) = v18;
            *(_WORD *)(v4 + 2044) = 0;
            *(_DWORD *)(v4 + 2036) = 2;
            sub_1000E2F6C(20);
          }
          else
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"unknown packet type received %d", v20, v21, v22, v23, v24, v25, v26, v18);
              uint64_t v27 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                __int16 v64 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = v64;
                __int16 v72 = 1024;
                int v73 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            sub_10025B778("UART: unknown packet type received %d\n", v18);
            sub_1000E31AC(0xF0u);
          }
          if (*(_DWORD *)(qword_1009FF638 + 2036) == 2)
          {
            ++__src;
            --v2;
          }
          continue;
        case 2:
          int v36 = 0;
          __int16 v37 = *(_WORD *)(v4 + 2042);
          uint64_t v38 = __src;
          break;
        case 3:
          if ((unsigned __int16)v2 >= *(unsigned __int16 *)(v4 + 2042)) {
            size_t v42 = *(unsigned __int16 *)(v4 + 2042);
          }
          else {
            size_t v42 = (unsigned __int16)v2;
          }
          memmove((void *)(v4 + *(unsigned __int16 *)(v4 + 2044) + 4), __src, v42);
          uint64_t v43 = qword_1009FF638;
          int v44 = *(unsigned __int16 *)(qword_1009FF638 + 2042);
          v2 -= v42;
          *(_WORD *)(qword_1009FF638 + 2044) += v42;
          __src += v42;
          int v45 = v44 - v42;
          *(_WORD *)(v43 + 2042) = v45;
          if (v45) {
            continue;
          }
          goto LABEL_51;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid receive state %d", v28, v29, v30, v31, v32, v33, v34, *(unsigned int *)(qword_1009FF638 + 2036));
            uint64_t v35 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
            {
              v63 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = v63;
              __int16 v72 = 1024;
              int v73 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_10025B778("UART: Invalid receive state %d\n", *(_DWORD *)(qword_1009FF638 + 2036));
          sub_1000E31AC(0xF2u);
          sub_10025B8C0();
          continue;
      }
      while (v37)
      {
        char v39 = *v38++;
        uint64_t v40 = *(unsigned __int16 *)(v4 + 2044);
        *(_WORD *)(v4 + 2044) = v40 + 1;
        *(unsigned char *)(v4 + v40 + 4) = v39;
        __int16 v37 = *(_WORD *)(v4 + 2042) - 1;
        *(_WORD *)(v4 + 2042) = v37;
        if ((unsigned __int16)++v36 >= (unsigned __int16)v2)
        {
          int v36 = v2;
          if (v37) {
            goto LABEL_50;
          }
          break;
        }
      }
      *(_DWORD *)(v4 + 2036) = 3;
      switch(*(unsigned char *)(v4 + 2048))
      {
        case 1:
        case 3:
          __int16 v41 = *(unsigned __int8 *)(v4 + 6);
          goto LABEL_45;
        case 2:
          __int16 v41 = *(_WORD *)(v4 + 6);
          goto LABEL_45;
        case 4:
          __int16 v41 = *(unsigned __int8 *)(v4 + 5);
          goto LABEL_45;
        case 7:
          if (*(unsigned char *)(v4 + 4) == 1) {
            *(unsigned char *)(v4 + 2048) = 8;
          }
          __int16 v41 = 62;
LABEL_45:
          *(_WORD *)(v4 + 2042) = v41;
          unsigned __int16 v54 = *(_WORD *)(v4 + 2044) + v41;
          *(_WORD *)(v4 + 2046) = v54;
          if (v54 >= 0x7F1u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"RxPacketHeader - bogus packet length (%d)", v55, v56, v57, v58, v59, v60, v61, *(unsigned __int16 *)(qword_1009FF638 + 2046));
              v62 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
              {
                int v65 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = v65;
                __int16 v72 = 1024;
                int v73 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            sub_10025B778("UART: RxPacketHeader - bogus packet length (%d)\n", *(unsigned __int16 *)(qword_1009FF638 + 2046));
            sub_1000E31AC(0xF4u);
          }
          break;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid packet type %d", v46, v47, v48, v49, v50, v51, v52, *(unsigned __int8 *)(qword_1009FF638 + 2048));
            uint64_t v53 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
            {
              v66 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = v66;
              __int16 v72 = 1024;
              int v73 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_10025B778("UART: Invalid packet type %d\n", *(unsigned __int8 *)(qword_1009FF638 + 2048));
          sub_1000E31AC(0xF0u);
          sub_10025B8C0();
          int v36 = 0;
          break;
      }
LABEL_50:
      __src += (unsigned __int16)v36;
      v2 -= v36;
      uint64_t v43 = qword_1009FF638;
      if (!*(_WORD *)(qword_1009FF638 + 2042))
      {
LABEL_51:
        if (*(unsigned char *)(v43 + 2040))
        {
          sub_1000E347C();
        }
        else
        {
          if (*(unsigned __int16 *)(v43 + 2046) >= 0x7F1u) {
            sub_10025B8C0();
          }
          sub_1000E34F8();
        }
      }
    }
    while ((_WORD)v2);
  }
LABEL_57:
  if (*(_WORD *)(qword_1009FF638 + 2042)) {
    return *(unsigned __int16 *)(qword_1009FF638 + 2042);
  }
  else {
    return 5;
  }
}

uint64_t sub_1000E2DBC(int a1, __int16 a2, size_t __len, void *__src)
{
  char v4 = a1;
  if (a1 != 1 && *(unsigned char *)(qword_1009FF638 + 2040)) {
    return 129;
  }
  uint64_t v6 = 4;
  if (a1 == 2) {
    uint64_t v6 = 5;
  }
  if (byte_1009FF624 == 1)
  {
    sub_10025B8C0();
    return 118;
  }
  else
  {
    uint64_t v7 = qword_1009FF618;
    if (qword_1009FF618) {
      BOOL v8 = word_1009FF620 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8)
    {
      return 105;
    }
    else
    {
      *(unsigned char *)qword_1009FF618 = a1;
      *(_WORD *)(v7 + 1) = a2;
      *(_WORD *)(v7 + 3) = __len;
      memmove((void *)(v7 + v6), __src, __len);
      byte_1009FF628 = v4;
      byte_1009FF624 = 1;
      sub_1000E3348();
      uint64_t v9 = sub_10016A97C();
      uint64_t v5 = v9;
      if (v9)
      {
        sub_100026C30((uint64_t)dword_1009FF62C);
        byte_1009FF624 = 0;
      }
      uint64_t v10 = qword_1009FF638;
      if (*(unsigned char *)(qword_1009FF638 + 2040) && *(_DWORD *)(qword_1009FF638 + 2036) == 4)
      {
        *(unsigned char *)(qword_1009FF638 + 2049) = 0;
        *(_DWORD *)(v10 + 2036) = 1;
        *(_WORD *)(v10 + 2042) = 5;
        sub_1000E2F6C(0x7FFF);
      }
    }
  }
  return v5;
}

void sub_1000E2EFC(int a1)
{
  if (a1)
  {
    if (!*(unsigned char *)(qword_1009FF638 + 2040))
    {
      *(unsigned char *)(qword_1009FF638 + 2040) = 1;
      sub_10010BD04(&qword_1009FF648);
      sub_10010BD30(&stru_1009FF650);
    }
  }
  else
  {
    if (*(unsigned char *)(qword_1009FF638 + 2040)) {
      *(unsigned char *)(qword_1009FF638 + 2040) = 0;
    }
    qword_1009FF648 = 0;
  }
}

uint64_t sub_1000E2F6C(int a1)
{
  BOOL v2 = sub_100026E24(*(_DWORD *)qword_1009FF638);
  uint64_t v3 = (int *)qword_1009FF638;
  if (v2)
  {
    unsigned int v4 = *(_DWORD *)qword_1009FF638;
    return sub_10025BC54(v4, a1);
  }
  else
  {
    return sub_1000268E4((uint64_t)sub_1000E2FF0, 0, a1, v3);
  }
}

void sub_1000E2FF0()
{
  uint64_t v0 = qword_1009FF638;
  unsigned int v1 = *(_DWORD *)(qword_1009FF638 + 2036);
  if (v1 < 2)
  {
    if (!*(unsigned char *)(qword_1009FF638 + 2040))
    {
LABEL_14:
      sub_1000E2F6C(0x7FFFLL);
      return;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"timed out waiting for reset response %d", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(qword_1009FF638 + 2036));
      uint64_t v17 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
  }
  else
  {
    if (v1 - 2 < 2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Timed out while receiving a packet. Current state:%d", v2, v3, v4, v5, v6, v7, v8, *(unsigned int *)(qword_1009FF638 + 2036));
        uint64_t v9 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_1007456E8();
        }
      }
      sub_10025B778("UART: Timed out while receiving a packet. Current state:%d\n", *(_DWORD *)(qword_1009FF638 + 2036));
      sub_1000E31AC(0xF1u);
      return;
    }
    if (v1 == 4)
    {
      if (*(unsigned char *)(qword_1009FF638 + 2040)) {
        return;
      }
      *(unsigned char *)(qword_1009FF638 + 2049) = 0;
      *(_DWORD *)(v0 + 2036) = 1;
      *(_WORD *)(v0 + 2042) = 5;
      goto LABEL_14;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid receive state %d", v18, v19, v20, v21, v22, v23, v24, *(unsigned int *)(qword_1009FF638 + 2036));
      uint64_t v25 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B778("UART: Invalid receive state %d\n", *(_DWORD *)(qword_1009FF638 + 2036));
    sub_1000E31AC(0xF3u);
    sub_10025B8C0();
  }
}

uint64_t sub_1000E31AC(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"RxErrorDetected:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744FE4();
    }
  }
  uint64_t v10 = qword_1009FF638;
  if (!*(unsigned char *)(qword_1009FF638 + 2040))
  {
    *(_WORD *)(qword_1009FF638 + 4) = 272;
    *(unsigned char *)(v10 + 6) = a1;
    *(_WORD *)(v10 + 2046) = 3;
    *(unsigned char *)(v10 + 2048) = 4;
    sub_1000E326C();
    uint64_t v10 = qword_1009FF638;
  }
  *(_DWORD *)(v10 + 2036) = 4;
  sub_1000E2EFC(1);
  return sub_1000E2F6C(5);
}

void sub_1000E326C()
{
  uint64_t v0 = qword_1009FF638;
  if (*(unsigned __int16 *)(qword_1009FF638 + 2046) >= 0x7F1u)
  {
    sub_10025B8C0();
    uint64_t v0 = qword_1009FF638;
  }
  if ((*(unsigned char *)(v0 + 2048) - 7) > 1u)
  {
    *(unsigned char *)(v0 + 2049) = 0;
    *(_DWORD *)(v0 + 2036) = 1;
    *(_WORD *)(v0 + 2042) = 5;
    sub_1000E2F6C(0x7FFFLL);
    v2[1] = 0;
    v2[0] = mach_continuous_time();
    sub_100023868(*(unsigned __int8 *)(qword_1009FF638 + 2048), (unsigned __int8 *)(qword_1009FF638 + 4), *(unsigned __int16 *)(qword_1009FF638 + 2046), (uint64_t)v2);
  }
  else
  {
    sub_100025840();
    uint64_t v1 = qword_1009FF638;
    *(unsigned char *)(qword_1009FF638 + 2049) = 0;
    *(_DWORD *)(v1 + 2036) = 1;
    *(_WORD *)(v1 + 2042) = 5;
    sub_1000E2F6C(0x7FFFLL);
  }
}

void sub_1000E3348()
{
  if (byte_1009FF644 == 1)
  {
    do
      j__usleep(0);
    while ((byte_1009FF644 & 1) != 0);
  }
  if ((byte_1009FF640 & 1) == 0)
  {
    sub_1000268E4((uint64_t)sub_1000E33CC, 0, 2, &dword_1009FF658);
    sub_100116128("H4 wake");
    sub_1000DFD08();
    byte_1009FF640 = 1;
  }
}

void sub_1000E33CC()
{
  uint64_t v0 = 0;
  sub_100026C30((uint64_t)&v0);
  if (sub_1002629B8(dword_1009FF62C, (int *)&v0) < 0xC8) {
    goto LABEL_4;
  }
  byte_1009FF644 = 1;
  byte_1009FF640 = 0;
  if (byte_1009FF624 == 1)
  {
    byte_1009FF640 = 1;
    byte_1009FF644 = 0;
LABEL_4:
    sub_1000268E4((uint64_t)sub_1000E33CC, 0, 2, &dword_1009FF658);
    return;
  }
  sub_1000DFD90();
  sub_100116128("H4 sleep");
  byte_1009FF644 = 0;
}

void sub_1000E347C()
{
  if (*(unsigned char *)(qword_1009FF638 + 2048) == 4 && *(_WORD *)(qword_1009FF638 + 2046) == 6)
  {
    uint64_t v0 = 0;
    char v1 = 1;
    uint64_t v2 = &byte_1007B8E4D;
    do
    {
      int v3 = (*(v2 - 1) & *(unsigned char *)(qword_1009FF638 + 4 + v0));
      int v4 = *v2;
      v2 += 2;
      if (v3 != v4) {
        char v1 = 0;
      }
      ++v0;
    }
    while (v0 != 6);
    if (v1)
    {
      if (*(unsigned char *)(qword_1009FF638 + 2040)) {
        *(unsigned char *)(qword_1009FF638 + 2040) = 0;
      }
      qword_1009FF648 = 0;
      sub_1000E326C();
    }
  }
}

void sub_1000E34F8()
{
  uint64_t v0 = qword_1009FF638;
  if (*(unsigned __int16 *)(qword_1009FF638 + 2046) >= 0x7F1u)
  {
    sub_10025B8C0();
    uint64_t v0 = qword_1009FF638;
  }
  if (!*(unsigned char *)(v0 + 2060))
  {
    if ((*(unsigned char *)(v0 + 2048) - 7) > 1u)
    {
      *(unsigned char *)(v0 + 2049) = 0;
      *(_DWORD *)(v0 + 2036) = 1;
      *(_WORD *)(v0 + 2042) = 5;
      sub_1000E2F6C(0x7FFF);
      v1[1] = 0;
      v1[0] = mach_continuous_time();
      sub_100023868(*(unsigned __int8 *)(qword_1009FF638 + 2048), (unsigned __int8 *)(qword_1009FF638 + 4), *(unsigned __int16 *)(qword_1009FF638 + 2046), (uint64_t)v1);
      return;
    }
    sub_100025840();
    uint64_t v0 = qword_1009FF638;
  }
  *(unsigned char *)(v0 + 2049) = 0;
  *(_DWORD *)(v0 + 2036) = 1;
  *(_WORD *)(v0 + 2042) = 5;

  sub_1000E2F6C(0x7FFF);
}

uint64_t sub_1000E35E0()
{
  if (sub_10010D414() && byte_1009FF640 == 1)
  {
    uint64_t v2 = 0;
    sub_100026C30((uint64_t)&v2);
    unsigned int v0 = sub_1002629B8(dword_1009FF62C, (int *)&v2);
    if (v0 <= 0xC8) {
      j__usleep(1000 * (201 - v0));
    }
    byte_1009FF644 = 1;
    byte_1009FF640 = 0;
    sub_1000DFD90();
    sub_100116128("H4/AP sleep");
    byte_1009FF644 = 0;
  }
  return 0;
}

void sub_1000E367C()
{
  if (byte_1009FF640 == 1)
  {
    if (dword_1009FF658)
    {
      sub_100026DB4(dword_1009FF658);
      dword_1009FF658 = 0;
    }
    uint64_t v9 = 0;
    sub_100026C30((uint64_t)&v9);
    if (byte_1009FF624 == 1)
    {
      while (1)
      {
        uint64_t v8 = 0;
        sub_100026C30((uint64_t)&v8);
        j__usleep(1u);
        if (sub_1002629B8((int *)&v9, (int *)&v8) >= 0x3E8) {
          break;
        }
        if ((byte_1009FF624 & 1) == 0) {
          goto LABEL_7;
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"transportBusy for too long! (more than %dms)", v0, v1, v2, v3, v4, v5, v6, 1000);
        uint64_t v7 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_10010B394(1217);
      sub_1000E378C();
    }
    else
    {
LABEL_7:
      byte_1009FF644 = 1;
      byte_1009FF640 = 0;
      j__usleep(0x9C40u);
      sub_1000DFD90();
      sub_100116128("H4/AP sleep now");
      byte_1009FF644 = 0;
    }
  }
}

void sub_1000E378C()
{
  *(unsigned char *)(qword_1009FF638 + 2060) = 1;
}

void sub_1000E37A0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t sub_1000E37C0(uint64_t a1, char a2)
{
  if (!dword_100A1525C) {
    return 414;
  }
  uint64_t v2 = 0;
  for (uint64_t i = qword_100A15298; !a1 || *i != a1; i += 134)
  {
    if (dword_100A1525C == ++v2) {
      return 414;
    }
  }
  *((unsigned char *)i + 444) = a2;
  sub_1000E3830(4, 0, (unsigned __int16)v2);
  return 0;
}

void sub_1000E3830(uint64_t a1, unsigned int a2, unsigned int a3)
{
  unsigned __int16 v162 = a3;
  int v161 = 0;
  unsigned int v6 = a3;
  uint64_t v7 = (unsigned int *)&qword_100A15298[134 * a3];
  unint64_t v8 = 274877907 * v7[55];
  unint64_t v9 = 274877907 * v7[54];
  v159 = 0;
  uint64_t v160 = 0;
  v158 = 0;
  sub_100026C30((uint64_t)&v160);
  unsigned int v10 = v7[57];
  if (!v10) {
    unsigned int v10 = 0x3E8u / LODWORD(qword_100A15298[134 * v6 + 28]);
  }
  unint64_t v11 = v8 >> 38;
  unint64_t v12 = v9 >> 38;
  if (BYTE2(qword_100A15298[134 * v6 + 1]) && (uint64_t v13 = LODWORD(qword_100A15298[134 * v6 + 9]), v13))
  {
    unint64_t v14 = 0;
    uint64_t v15 = &qword_100A15298[134 * v6];
    uint64_t v16 = v15[8];
    int v17 = *((unsigned __int8 *)v15 + 76);
    uint64_t v18 = (unsigned __int8 *)(v16 + 1);
    while (1)
    {
      int v19 = *v18;
      v18 += 64;
      if (v19 == v17) {
        break;
      }
      if (v13 == ++v14) {
        goto LABEL_8;
      }
    }
    unint64_t v20 = v14;
  }
  else
  {
LABEL_8:
    unint64_t v20 = 0;
  }
  if ((a1 - 1) >= 3)
  {
    if (!a1)
    {
      uint64_t v22 = &qword_100A15298[134 * v6];
      int v25 = *((_DWORD *)v22 + 25);
      uint64_t v23 = (unsigned int *)v22 + 25;
      int v24 = v25;
      if (v25) {
        unsigned int v26 = (5 * v24 + a2) / 6;
      }
      else {
        unsigned int v26 = a2;
      }
      *uint64_t v23 = v26;
      if (HIDWORD(qword_100A15298[134 * v6 + 13]))
      {
        int v35 = sub_100262880((uint64_t)&v160);
        unsigned int v36 = v35 - sub_100262880((uint64_t)&qword_100A15298[134 * v162 + 17]);
        unsigned int v6 = v162;
        __int16 v37 = &qword_100A15298[134 * v162];
        int v39 = *((_DWORD *)v37 + 26);
        uint64_t v38 = (unsigned int *)(v37 + 13);
        unsigned int v40 = (5 * v39 + v36) / 6;
        if (v39) {
          unsigned int v41 = v40;
        }
        else {
          unsigned int v41 = v36;
        }
        unsigned int *v38 = v41;
      }
      qword_100A15298[134 * v6 + 17] = v160;
      goto LABEL_31;
    }
    if (a1 != 4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"TS inputType %d", v27, v28, v29, v30, v31, v32, v33, a1);
        uint64_t v34 = sub_100050B4C(0x57u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_10025B8C0();
      unsigned int v6 = v162;
      goto LABEL_31;
    }
    if (BYTE4(qword_100A15298[134 * v6 + 55]))
    {
      unsigned int v21 = 1;
      goto LABEL_62;
    }
  }
  if (HIDWORD(qword_100A15298[134 * v6 + 13]) <= 0xA)
  {
    unsigned int v21 = sub_1000E568C(a3, (int)v12 + (int)v11, v10, v10, v20, &v161);
    goto LABEL_62;
  }
LABEL_31:
  v159 = &v162;
  LOWORD(v158) = 2;
  BOOL v42 = sub_100026E24(qword_100A15298[134 * v6 + 55]);
  uint64_t v43 = (unsigned int *)&qword_100A15298[134 * v162 + 55];
  if (v42) {
    uint64_t v44 = sub_10025BC54(*v43, 30);
  }
  else {
    uint64_t v44 = sub_1000268E4((uint64_t)sub_1000E591C, &v158, 30, (int *)v43);
  }
  uint64_t v45 = v44;
  if (v44)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Transport timer registration failed with status %!", v46, v47, v48, v49, v50, v51, v52, v45);
      uint64_t v53 = sub_100050B4C(0x57u);
      if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_10025B8C0();
  }
  unsigned int v54 = v162;
  if (LODWORD(qword_100A15298[134 * v162 + 6]) != 6) {
    goto LABEL_63;
  }
  if (HIDWORD(qword_100A15298[134 * v162 + 13]) < 0xB) {
    goto LABEL_44;
  }
  unsigned int v55 = qword_100A15298[134 * v162 + 13];
  if (v55) {
    unsigned int v56 = HIDWORD(qword_100A15298[134 * v162 + 12]) * (0x3E8 / v55) / 0x3E8;
  }
  else {
    unsigned int v56 = HIDWORD(qword_100A15298[134 * v162 + 12]);
  }
  if ((int)v12 + (int)v11 <= 8 * v56) {
    unsigned int v57 = 8 * v56;
  }
  else {
    unsigned int v57 = v12 + v11;
  }
  if (v10 >= v55) {
    unsigned int v58 = qword_100A15298[134 * v162 + 13];
  }
  else {
    unsigned int v58 = v10;
  }
  if (v10) {
    unsigned int v59 = v58;
  }
  else {
    unsigned int v59 = qword_100A15298[134 * v162 + 13];
  }
  unsigned int v21 = sub_1000E568C(v162, v57, v59, v10, v20, &v161);
  unsigned int v54 = v162;
  if ((a1 & 0xFFFFFFFD) == 1 || BYTE4(qword_100A15298[134 * v162 + 55])) {
    goto LABEL_57;
  }
  int v131 = sub_100262880((uint64_t)&v160);
  int v132 = sub_100262880((uint64_t)&qword_100A15298[134 * v162 + 16]);
  unsigned int v133 = v162;
  unsigned int v134 = v131 - v132;
  if (v131 == v132) {
    unsigned int v135 = 0;
  }
  else {
    unsigned int v135 = 8 * HIDWORD(qword_100A15298[134 * v162 + 11]) / v134;
  }
  if (HIDWORD(qword_100A15298[134 * v162 + 15]) == 1
    && (v134 < 0x1389
     || v134 <= 0x2710
     && v21 < v20
     && v135 > *(_DWORD *)(qword_100A15298[134 * v162 + 8] + ((unint64_t)v21 << 6) + 4)))
  {
    int v161 = 8;
    unsigned int v21 = v20;
    goto LABEL_127;
  }
  if (v21 <= v20)
  {
    if (v21 < v20)
    {
      v149 = &qword_100A15298[134 * v162];
      int v151 = *((_DWORD *)v149 + 30);
      v150 = v149 + 15;
      if (v151 == 1) {
        char v152 = 0;
      }
      else {
        char v152 = BYTE6(qword_100A15298[134 * v162 + 9]);
      }
      _DWORD *v150 = 2;
      char v148 = v152 + 1;
      BYTE6(qword_100A15298[134 * v133 + 9]) = v152 + 1;
      goto LABEL_130;
    }
LABEL_127:
    char v148 = 0;
    v153 = &qword_100A15298[134 * v162];
    *((unsigned char *)v153 + 78) = 0;
    *((_DWORD *)v153 + 30) = 0;
    goto LABEL_130;
  }
  v136 = &qword_100A15298[134 * v162];
  int v138 = *((_DWORD *)v136 + 30);
  v137 = v136 + 15;
  if (v138 == 2) {
    BYTE6(qword_100A15298[134 * v162 + 9]) = 0;
  }
  _DWORD *v137 = 1;
  unsigned int v139 = sub_1001F7D74();
  unsigned int v133 = v162;
  if (v139 <= 0xE && !BYTE6(qword_100A15298[134 * v162 + 9]))
  {
    BOOL v140 = sub_100197770(qword_100A15298[134 * v162]);
    unsigned int v133 = v162;
    if (v140)
    {
      sub_10018F028((uint64_t)sub_1000E5C10, qword_100A15298[134 * v162], v141, v142, v143, v144, v145, v146);
      unsigned int v133 = v162;
    }
  }
  v147 = &qword_100A15298[134 * v133];
  char v148 = *((unsigned char *)v147 + 78) + 1;
  *((unsigned char *)v147 + 78) = v148;
LABEL_130:
  if (!v161)
  {
    unsigned int v54 = v133;
LABEL_44:
    unsigned int v21 = v20;
    goto LABEL_57;
  }
  if ((v148 & 0xFC) == 0) {
    unsigned int v21 = v20;
  }
  unsigned int v54 = v133;
LABEL_57:
  if (!LOBYTE(qword_100A15298[134 * v54 + 133]))
  {
LABEL_62:
    if (v21 == v20)
    {
LABEL_63:
      char v69 = 1;
      unsigned int v156 = v20;
      goto LABEL_76;
    }
    unsigned int v70 = v162;
    v71 = &qword_100A15298[134 * v162];
    *((unsigned char *)v71 + 78) = 0;
    *((_DWORD *)v71 + 29) = v21;
    *((_DWORD *)v71 + 30) = 0;
    int v72 = v161;
    if (a1 == 2) {
      int v72 = v161 | 0x40;
    }
    unsigned int v156 = v21;
    *((_DWORD *)v71 + 28) = v72;
    if (*((_DWORD *)v71 + 40) != *((_DWORD *)v71 + 48)
      && WORD2(qword_100A15298[134 * v70 + 20]) != WORD2(qword_100A15298[134 * v70 + 24]))
    {
      uint64_t v157 = 0;
      sub_10010BC48((uint64_t)&v157);
      uint64_t v73 = (1000 * (v157 - LODWORD(qword_100A15298[134 * v162 + 20]))
                         - SWORD2(qword_100A15298[134 * v162 + 20])
                         + SWORD2(v157));
      if (v73 >> 2 < 0x465)
      {
LABEL_74:
        char v69 = 0;
        goto LABEL_76;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"TS connection timeout detected %d mseconds ago, allowing transport switch", v74, v75, v76, v77, v78, v79, v80, v73);
        v81 = sub_100050B4C(0x57u);
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          v82 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          v164 = v82;
          _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v83 = &qword_100A15298[134 * dword_100A1525C];
      v84 = &qword_100A15298[134 * v162];
      *((_DWORD *)v84 + 40) = *((_DWORD *)v83 + 48);
      *((_WORD *)v84 + 82) = *((_WORD *)v83 + 98);
    }
    sub_100026DA8((uint64_t)sub_1000E48CC, 0, 0);
    goto LABEL_74;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Disabling upgrade due to failed security authentication, we'll retry later", v60, v61, v62, v63, v64, v65, v66, v154);
    v67 = sub_100050B4C(0x57u);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v68 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      v164 = v68;
      _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
    char v69 = 1;
    unsigned int v156 = v20;
  }
  else
  {
    char v69 = 1;
    unsigned int v156 = v20;
  }
LABEL_76:
  int v85 = sub_100262880((uint64_t)&v160);
  int v86 = sub_100262880((uint64_t)&qword_100A15298[134 * v162 + 18]);
  unsigned int v87 = v162;
  if (!a1)
  {
    ++LODWORD(qword_100A15298[134 * v162 + 23]);
    LODWORD(qword_100A15298[134 * v162 + 21]) += sub_10019F7AC(0);
    int v88 = sub_10019F7AC(2);
    unsigned int v87 = v162;
    v89 = &qword_100A15298[134 * v162];
    unsigned int v90 = *((_DWORD *)v89 + 43) + v88;
    unsigned int v91 = *((_DWORD *)v89 + 46);
    int v92 = *((_DWORD *)v89 + 42) / v91;
    *((_DWORD *)v89 + 43) = v90;
    *((_DWORD *)v89 + 44) = v92;
    *((_DWORD *)v89 + 45) = v90 / v91;
  }
  unsigned int v93 = v87;
  v94 = &qword_100A15298[134 * v87];
  if (!*((_DWORD *)v94 + 18) || !qword_100A15298[134 * v87 + 8])
  {
    if (!sub_100058654()) {
      goto LABEL_100;
    }
    sub_100056E24((uint64_t)"Caps is null while upgrade request: lTsPeers[peerIndex].caps=%d.  peerIndex=%d Handle=0x%s", v96, v97, v98, v99, v100, v101, v102, qword_100A15298[134 * v162 + 8]);
    v103 = sub_100050B4C(0x57u);
    if (!os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_100;
    }
    goto LABEL_99;
  }
  unsigned int v95 = v85 - v86;
  if (v69)
  {
    if (a1) {
      goto LABEL_91;
    }
  }
  else
  {
    if (sub_1000E7430(*v94)) {
      goto LABEL_91;
    }
    if (a1) {
      goto LABEL_91;
    }
    unsigned int v93 = v162;
    if (LODWORD(qword_100A15298[134 * v162 + 10]) != *(unsigned __int8 *)(qword_100A15298[134 * v162 + 8]
                                                                         + ((unint64_t)v156 << 6)
                                                                         + 1))
      goto LABEL_91;
  }
  if (v95 <= 0xF9F && !byte_1009FF669) {
    goto LABEL_102;
  }
LABEL_91:
  if (sub_1001F7D74() <= 0xE && v95 >= 0xFA0)
  {
    uint64_t v110 = sub_10018F028((uint64_t)sub_1000E5C10, qword_100A15298[134 * v162], v104, v105, v106, v107, v108, v109);
    if (v110)
    {
      uint64_t v111 = v110;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Read RSSI failed with status %!", v112, v113, v114, v115, v116, v117, v118, v111);
        v119 = sub_100050B4C(0x57u);
        if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
  }
  sub_100026C30((uint64_t)&qword_100A15298[134 * v162 + 18]);
  if (!sub_100058654()) {
    goto LABEL_100;
  }
  uint64_t v155 = HIDWORD(qword_100A15298[134 * v162 + 13]);
  sub_10016EC6C(qword_100A15298[134 * v162 + 10]);
  sub_10016EC6C(HIDWORD(qword_100A15298[134 * v162 + 10]));
  sub_1001DDF94();
  sub_1001DDF4C();
  sub_10019F7AC(0);
  sub_10019F7AC(2);
  sub_100056E24((uint64_t)"TS Assess [%d]: t {%d->%d, %d}, in {%s, %d, %d}, ewma {g %d, l %d, t %d}, req {%d, %d, %d}, rsn 0x%2x, cfm {%d, %s}, preq {%s, %s}, B {Tx %d TxQ %d, Rx %d}, Cav {%d, %d}, r %d, f %d, p %d, s %d", v120, v121, v122, v123, v124, v125, v126, v155);
  v103 = sub_100050B4C(0x57u);
  if (!os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_100;
  }
LABEL_99:
  v127 = sub_100050714();
  *(_DWORD *)buf = 136446210;
  v164 = v127;
  _os_log_impl((void *)&_mh_execute_header, v103, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
LABEL_100:
  if (a1) {
    return;
  }
  unsigned int v93 = v162;
LABEL_102:
  v128 = &qword_100A15298[134 * v93];
  int v129 = *((_DWORD *)v128 + 27);
  if (v129 == -2) {
    int v130 = 10;
  }
  else {
    int v130 = v129 + 1;
  }
  *((_DWORD *)v128 + 27) = v130;
}

uint64_t sub_1000E44C8(uint64_t result, int a2, int a3)
{
  dword_1009FF65C = a2;
  dword_1009FF660 = a3;
  dword_1009FF664 = result;
  return result;
}

void sub_1000E44E4(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Setting link requirement hint for peer to %d pps, %d Bps input, %d Bps output, clientHighPowerAssertion set to %d", v10, v11, v12, v13, v14, v15, v16, a2);
    int v17 = sub_100050B4C(0x57u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      BOOL v42 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (dword_100A1525C)
  {
    uint64_t v18 = 0;
    unsigned __int16 v19 = 0;
    while (qword_100A15298[v18] != a1)
    {
      ++v19;
      v18 += 134;
      if (134 * dword_100A1525C == v18) {
        return;
      }
    }
    int v20 = dword_1009FF664;
    int v21 = dword_1009FF65C;
    if (dword_1009FF664 | dword_1009FF65C | dword_1009FF660)
    {
      int v22 = dword_1009FF660;
    }
    else
    {
      int v20 = a2;
      int v21 = a3;
      int v22 = a4;
    }
    uint64_t v23 = &qword_100A15298[v18];
    *((_DWORD *)v23 + 55) = v22;
    *((_DWORD *)v23 + 56) = v20;
    *((_DWORD *)v23 + 54) = v21;
    if ((((HIBYTE(qword_100A15298[v18 + 55]) == 0) ^ a5) & 1) == 0)
    {
      *((unsigned char *)v23 + 447) = a5;
      if (!*((unsigned char *)v23 + 10)) {
        goto LABEL_22;
      }
      int v24 = &qword_100A15298[v18];
      uint64_t v25 = LODWORD(qword_100A15298[v18 + 9]);
      if (!v25) {
        goto LABEL_22;
      }
      uint64_t v26 = 0;
      uint64_t v27 = v24[8];
      int v28 = *((unsigned __int8 *)v24 + 76);
      uint64_t v29 = (unsigned __int8 *)(v27 + 1);
      while (1)
      {
        int v30 = *v29;
        v29 += 64;
        if (v30 == v28) {
          break;
        }
        if (v25 == ++v26) {
          goto LABEL_22;
        }
      }
      if (v26 == 2)
      {
        uint64_t v31 = sub_10016F3B8((uint64_t)&qword_100A15298[v18]);
        if (sub_100197698(v31))
        {
          sub_10016EB4C(*((unsigned char *)v23 + 447) != 0);
          BYTE6(qword_100A15298[v18 + 55]) = 0;
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid connection handle", v32, v33, v34, v35, v36, v37, v38, v40);
          int v39 = sub_100050B4C(0x57u);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      else
      {
LABEL_22:
        BYTE6(qword_100A15298[v18 + 55]) = 1;
      }
    }
    sub_1000E3830(1, 0, v19);
  }
}

uint64_t sub_1000E4750(uint64_t result)
{
  int v1 = dword_1009FF664;
  int v2 = dword_1009FF65C;
  if (dword_1009FF664) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = dword_1009FF65C == 0;
  }
  if (!v3 || dword_1009FF660 != 0)
  {
    uint64_t v5 = &qword_100A15298[134 * result];
    *((_DWORD *)v5 + 55) = dword_1009FF660;
    *((_DWORD *)v5 + 56) = v1;
    *((_DWORD *)v5 + 54) = v2;
  }
  return result;
}

void sub_1000E4794(uint64_t a1, int a2, int a3, int a4)
{
  if (dword_100A1525C)
  {
    uint64_t v4 = 0;
    for (uint64_t i = &dword_100A1537C; *(void *)(i - 57) != a1; i += 268)
    {
      if (dword_100A1525C == ++v4) {
        return;
      }
    }
    int v6 = dword_1009FF65C;
    int v7 = dword_1009FF660;
    if (dword_1009FF664) {
      BOOL v8 = 0;
    }
    else {
      BOOL v8 = dword_1009FF65C == 0;
    }
    if (v8 && dword_1009FF660 == 0)
    {
      *uint64_t i = a2;
    }
    else
    {
      *(i - 1) = dword_1009FF664;
      a3 = v6;
      a4 = v7;
    }
    *(i - 3) = a3;
    *(i - 2) = a4;
    sub_1000E3830(1, 0, (unsigned __int16)v4);
  }
}

void sub_1000E4824()
{
  unint64_t v0 = dword_100A1525C;
  if (dword_100A1525C)
  {
    unint64_t v1 = 0;
    int v2 = qword_100A15298;
    do
    {
      *((_WORD *)v2 + 223) = 0;
      v2[27] = 0;
      v2[28] = 0;
      if (*v2)
      {
        sub_1000E3830(1, 0, (unsigned __int16)v1);
        unint64_t v0 = dword_100A1525C;
      }
      ++v1;
      v2 += 134;
    }
    while (v1 < v0);
  }
}

uint64_t sub_1000E4898(uint64_t result)
{
  byte_1009FF668 = result;
  return result;
}

uint64_t sub_1000E48A4(uint64_t result)
{
  byte_1009FF669 = result;
  return result;
}

uint64_t sub_1000E48B0()
{
  return sub_100026DA8((uint64_t)sub_1000E48CC, 0, 0);
}

void sub_1000E48CC()
{
  if (dword_100A1525C)
  {
    for (unint64_t i = 0; i < dword_100A1525C; ++i)
    {
      unint64_t v1 = &qword_100A15298[134 * i];
      int v2 = (unsigned int *)(v1 + 9);
      if (*((_DWORD *)v1 + 18))
      {
        BOOL v3 = &qword_100A15298[134 * i];
        int v6 = *((_DWORD *)v3 + 12);
        uint64_t v5 = (int *)(v3 + 6);
        int v4 = v6;
        if (v6 == 11)
        {
          int v7 = (unsigned __int16 *)sub_10016F3B8((uint64_t)&qword_100A15298[134 * i]);
          if (sub_100197698((uint64_t)v7)
            || sub_100197740((uint64_t)v7)
            || sub_100197770((uint64_t)v7)
            || sub_1001977A0((uint64_t)v7))
          {
            if (!sub_10019E5A8((uint64_t)v7))
            {
              if (sub_1000E7430(*v1))
              {
                sub_10016DC1C((unsigned __int16 *)*v1, qword_100A15298[134 * i + 14]);
              }
              else
              {
                if (sub_1001977A0((uint64_t)v7) && byte_100A15258)
                {
                  uint64_t v8 = 0;
                  unint64_t v9 = 1;
                  while (*((_DWORD *)v7 + 14) != *(unsigned __int8 *)(qword_100A15250 + v8))
                  {
                    if (sub_1001977A0((uint64_t)v7))
                    {
                      v8 += 64;
                      if (v9++ < byte_100A15258) {
                        continue;
                      }
                    }
                    goto LABEL_46;
                  }
                  uint64_t v33 = *(void (**)(void))(qword_100A15250 + v8 + 48);
                  if (v33) {
                    v33(*v7);
                  }
                }
LABEL_46:
                sub_100171154((unsigned __int16 *)*v1, 0, (uint64_t)v7);
              }
            }
            continue;
          }
          if (off_100A15288) {
            off_100A15288(v7, 81, 779, 408);
          }
          *uint64_t v5 = 6;
          sub_10025B8C0();
          int v4 = *v5;
        }
        if (v4 == 6)
        {
          if (BYTE2(qword_100A15298[134 * i + 1]) && (uint64_t v11 = *v2, v11))
          {
            uint64_t v12 = 0;
            uint64_t v13 = &qword_100A15298[134 * i];
            uint64_t v14 = v13[8];
            int v15 = *((unsigned __int8 *)v13 + 76);
            uint64_t v16 = (unsigned __int8 *)(v14 + 1);
            while (1)
            {
              int v17 = *v16;
              v16 += 64;
              if (v17 == v15) {
                break;
              }
              if (v11 == ++v12) {
                goto LABEL_29;
              }
            }
          }
          else
          {
LABEL_29:
            LODWORD(v12) = 0;
          }
          uint64_t v18 = &qword_100A15298[134 * i];
          int v20 = *((_DWORD *)v18 + 20);
          unsigned __int16 v19 = v18 + 10;
          uint64_t v21 = v19[9];
          int v22 = v19 - 4;
          int v23 = *(unsigned __int8 *)(*((void *)v19 - 2) + (v21 << 6) + 1);
          if (v20 == v23)
          {
            if (!sub_1000E7430(*v1)) {
              continue;
            }
          }
          else
          {
            *unsigned __int16 v19 = v23;
          }
          if (sub_1000E7430(*v1))
          {
            int v24 = *(unsigned __int8 *)(*v22 + (v21 << 6) + 1);
            int v25 = HIDWORD(qword_100A15298[134 * i + 10]);
            if (v25 != v24)
            {
              uint64_t v26 = *v2;
              if (v26)
              {
                uint64_t v27 = 0;
                unsigned int v28 = 0;
                unsigned int v29 = 0;
                int v30 = (unsigned __int8 *)(*v22 + 1);
                do
                {
                  int v32 = *v30;
                  v30 += 64;
                  int v31 = v32;
                  if (v32 == v24) {
                    unsigned int v29 = v27;
                  }
                  if (v25 == v31) {
                    unsigned int v28 = v27;
                  }
                  ++v27;
                }
                while (v26 != v27);
              }
              else
              {
                unsigned int v29 = 0;
                unsigned int v28 = 0;
              }
              if (v29 <= v28) {
                unsigned int v34 = v28;
              }
              else {
                unsigned int v34 = v29;
              }
              if (v34 > v21) {
                LODWORD(v21) = v34;
              }
            }
          }
          if (v12 != v21)
          {
            if (*(unsigned char *)(*v22 + ((unint64_t)v12 << 6) + 1) == 1)
            {
              if (sub_100058654())
              {
                uint64_t v35 = v21;
                uint64_t v46 = sub_10016EC6C(*(unsigned __int8 *)(*v22 + ((unint64_t)v21 << 6) + 1));
                sub_100056E24((uint64_t)"Upgrade requested to tech %s", v47, v48, v49, v50, v51, v52, v53, (uint64_t)v46);
                unsigned int v54 = sub_100050B4C(0x57u);
                if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
                  goto LABEL_70;
                }
              }
              else
              {
                uint64_t v35 = v21;
              }
LABEL_72:
              sub_10016CF94((unsigned __int16 *)*v1, *(unsigned __int8 *)(*v22 + (v35 << 6) + 1), qword_100A15298[134 * i + 14]);
              continue;
            }
            int v55 = *(unsigned __int8 *)(*v22 + ((unint64_t)v21 << 6) + 1);
            int v56 = sub_100058654();
            if (v55 != 1)
            {
              if (v56)
              {
                v67 = sub_10016EC6C(*(unsigned __int8 *)(*v22 + ((unint64_t)v21 << 6) + 1));
                sub_100056E24((uint64_t)"Downgrade to upgrade requested to tech %s", v68, v69, v70, v71, v72, v73, v74, (uint64_t)v67);
                uint64_t v75 = sub_100050B4C(0x57u);
                if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v76 = sub_100050714();
                  *(_DWORD *)buf = 136446210;
                  uint64_t v78 = v76;
                  _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              sub_10016E058((unsigned __int16 *)*v1, *(unsigned char *)(*v22 + ((unint64_t)v21 << 6) + 1), qword_100A15298[134 * i + 14]);
              continue;
            }
            if (v56)
            {
              unsigned int v57 = sub_10016EC6C(*(unsigned __int8 *)(*v22 + ((unint64_t)v21 << 6) + 1));
              sub_100056E24((uint64_t)"Downgrade requested to tech %s", v58, v59, v60, v61, v62, v63, v64, (uint64_t)v57);
              uint64_t v45 = sub_100050B4C(0x57u);
              if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
              {
LABEL_66:
                uint64_t v65 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                uint64_t v78 = v65;
                _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
LABEL_67:
            sub_10016D914((unsigned __int16 *)*v1, qword_100A15298[134 * i + 14]);
            continue;
          }
          if (!sub_1000E7430(*v1))
          {
            uint64_t v35 = v12;
            int v36 = *(unsigned __int8 *)(*v22 + ((unint64_t)v12 << 6) + 1);
            int v37 = sub_100058654();
            if (v36 != 1)
            {
              if (v37)
              {
                sub_100056E24((uint64_t)"Peripheral %i send central wish upgrade", v38, v39, v40, v41, v42, v43, v44, i);
                unsigned int v54 = sub_100050B4C(0x57u);
                if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
                {
LABEL_70:
                  uint64_t v66 = sub_100050714();
                  *(_DWORD *)buf = 136446210;
                  uint64_t v78 = v66;
                  _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              goto LABEL_72;
            }
            if (v37)
            {
              sub_100056E24((uint64_t)"Peripheral %i send central wish downgrade", v38, v39, v40, v41, v42, v43, v44, i);
              uint64_t v45 = sub_100050B4C(0x57u);
              if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_66;
              }
            }
            goto LABEL_67;
          }
        }
      }
    }
  }
}

void sub_1000E4EA4()
{
  if (dword_100A1525C)
  {
    unint64_t v0 = 0;
    unint64_t v1 = (unsigned int *)&dword_100A15450;
    do
    {
      if (sub_100026E24(*v1)) {
        sub_100026DB4(*v1);
      }
      ++v0;
      v1 += 268;
    }
    while (v0 < dword_100A1525C);
  }
}

BOOL sub_1000E4F10(unsigned int a1, unsigned int a2)
{
  return *(_DWORD *)(qword_100A15298[134 * a1 + 8] + ((unint64_t)a2 << 6) + 20) < SHIDWORD(qword_100A15298[134 * a1 + 23]);
}

void sub_1000E4F40(uint64_t a1, unsigned int a2, int a3)
{
  if (dword_100A1525C)
  {
    unsigned int v3 = 0;
    for (unint64_t i = &qword_100A152A8; ; i += 134)
    {
      unsigned int v5 = v3;
      uint64_t v6 = qword_100A15298[134 * v3];
      if (v6 == a1) {
        break;
      }
      uint64_t v7 = BYTE2(qword_100A15298[134 * v5 + 1]);
      uint64_t v8 = i;
      if (BYTE2(qword_100A15298[134 * v5 + 1]))
      {
        while (*v8 != a1)
        {
          v8 += 2;
          if (!--v7) {
            goto LABEL_9;
          }
        }
        if (v6) {
          goto LABEL_12;
        }
      }
LABEL_9:
      unsigned int v3 = v5 + 1;
      if (v5 + 1 == dword_100A1525C) {
        return;
      }
    }
    if (!a1) {
      return;
    }
LABEL_12:
    unint64_t v9 = &qword_100A15298[134 * v5 + 12];
    if (a3) {
      int v10 = *(_DWORD *)v9 + 1;
    }
    else {
      int v10 = 0;
    }
    *(_DWORD *)unint64_t v9 = v10;
    if (a2) {
      qword_100A15298[134 * v5 + 11] = (uint64_t)vadd_s32((int32x2_t)qword_100A15298[134 * v5 + 11], vdup_n_s32(a2));
    }
    sub_1000E3830(0, a2, (unsigned __int16)v5);
  }
}

void sub_1000E5010(uint64_t a1)
{
  if (dword_100A1525C)
  {
    unsigned int v1 = 0;
    for (unint64_t i = &qword_100A152A8; ; i += 134)
    {
      uint64_t v3 = v1;
      int v4 = &qword_100A15298[134 * v1];
      uint64_t v5 = *v4;
      if (*v4 == a1) {
        break;
      }
      uint64_t v6 = BYTE2(qword_100A15298[134 * v3 + 1]);
      uint64_t v7 = i;
      if (BYTE2(qword_100A15298[134 * v3 + 1]))
      {
        while (*v7 != a1)
        {
          v7 += 2;
          if (!--v6) {
            goto LABEL_9;
          }
        }
        if (v5) {
          goto LABEL_12;
        }
      }
LABEL_9:
      unsigned int v1 = v3 + 1;
      if (v3 + 1 == dword_100A1525C) {
        return;
      }
    }
    if (!a1) {
      return;
    }
LABEL_12:
    if (LODWORD(qword_100A15298[134 * v3 + 9]))
    {
      uint64_t v8 = &qword_100A15298[134 * v3];
      uint64_t v10 = v8[8];
      unint64_t v9 = v8 + 8;
      if (!v10)
      {
        sub_10025B8C0();
        uint64_t v5 = *v4;
      }
      if (!v5) {
        sub_10025B8C0();
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Updating TS LE throughput: index %d handle 0x%x throughput %d -> %d", v11, v12, v13, v14, v15, v16, v17, v3);
        uint64_t v18 = sub_100050B4C(0x57u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          int v20 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      *(_DWORD *)(*v9 + 4) = *(_DWORD *)(*v4 + 212);
    }
  }
}

void sub_1000E51B0(uint64_t a1)
{
  if (dword_100A1525C)
  {
    uint64_t v1 = a1;
    uint64_t v2 = 0;
    for (unint64_t i = &qword_100A152A8; ; i += 134)
    {
      int v4 = &qword_100A15298[134 * v2];
      uint64_t v5 = *v4;
      if (*v4 == a1) {
        break;
      }
      uint64_t v6 = BYTE2(qword_100A15298[134 * v2 + 1]);
      uint64_t v7 = i;
      if (BYTE2(qword_100A15298[134 * v2 + 1]))
      {
        while (*v7 != a1)
        {
          v7 += 2;
          if (!--v6) {
            goto LABEL_9;
          }
        }
        if (v5)
        {
          uint64_t v1 = *v4;
          goto LABEL_14;
        }
      }
LABEL_9:
      if (++v2 == dword_100A1525C) {
        return;
      }
    }
    if (!a1) {
      return;
    }
LABEL_14:
    if (LODWORD(qword_100A15298[134 * v2 + 9]))
    {
      uint64_t v8 = &qword_100A15298[134 * v2];
      uint64_t v10 = v8[8];
      unint64_t v9 = v8 + 8;
      if (!v10)
      {
        sub_10025B8C0();
        uint64_t v5 = *v4;
      }
      if (!v5) {
        sub_10025B8C0();
      }
      if (sub_1000EB00C(v1))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Updating TS HDR throughput: index %d throughput %d -> 4500", v11, v12, v13, v14, v15, v16, v17, dword_100A1525C);
          uint64_t v18 = sub_100050B4C(0x57u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            int v20 = sub_100050714();
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        *(_DWORD *)(*v9 + 68) = 4500;
      }
    }
  }
}

void sub_1000E5354(uint64_t a1)
{
  unsigned int v13 = 0;
  if (dword_100A1525C)
  {
    unsigned int v2 = 0;
    v12[0] = 0;
    do
    {
      if (qword_100A15298[134 * v2] == a1)
      {
        v12[1] = &v13;
        LOWORD(v12[0]) = 4;
        if (sub_1000268E4((uint64_t)sub_1000E54C0, v12, 20, (int *)&qword_100A15298[134 * v2 + 133] + 1))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"TS disable upgrade timer registration failed", v3, v4, v5, v6, v7, v8, v9, v11);
            uint64_t v10 = sub_100050B4C(0x57u);
            if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
              sub_100745680(v14, &v15, v10);
            }
          }
        }
        else
        {
          LOBYTE(qword_100A15298[134 * v13 + 133]) = 1;
        }
      }
      unsigned int v2 = v13 + 1;
      unsigned int v13 = v2;
    }
    while (v2 < dword_100A1525C);
  }
}

void sub_1000E54C0(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Re-Enabling TS upgrades for peer %d", v2, v3, v4, v5, v6, v7, v8, v1);
      uint64_t v9 = sub_100050B4C(0x57u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        int v23 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v10 = &qword_100A15298[134 * v1];
    *((unsigned char *)v10 + 1064) = 0;
    *((_DWORD *)v10 + 267) = 0;
  }
  else
  {
    if (dword_100A1525C)
    {
      uint64_t v11 = 0;
      int v12 = 0;
      do
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Re-Enabling TS upgrades for peer %d because we can't find peer.", v13, v14, v15, v16, v17, v18, v19, v11);
          int v20 = sub_100050B4C(0x57u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v21 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            int v23 = v21;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        LOBYTE(qword_100A15298[134 * (unsigned __int16)v12++ + 133]) = 0;
        uint64_t v11 = (unsigned __int16)v12;
      }
      while (dword_100A1525C > (unsigned __int16)v12);
    }
    sub_10025B8C0();
  }
}

uint64_t sub_1000E568C(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unint64_t a5, int *a6)
{
  uint64_t v6 = a6;
  if (!a6) {
    sub_10025B8C0();
  }
  int v12 = &qword_100A15298[134 * a1];
  uint64_t v14 = (unsigned int *)(v12 + 9);
  unsigned int v13 = *((_DWORD *)v12 + 18);
  if (v13 < a5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_TS_Switching.c", 317, "currentTransport <= lTsPeers[peerIndex].nbCaps");
  }
  unsigned int v15 = a1;
  if (BYTE4(qword_100A15298[134 * a1 + 55])) {
    return 1;
  }
  if (!v13)
  {
    int v27 = 16;
    unint64_t v16 = a5;
    goto LABEL_26;
  }
  uint64_t v47 = v6;
  unint64_t v17 = a5;
  uint64_t v18 = 0;
  unint64_t v16 = 0;
  uint64_t v19 = &qword_100A15298[134 * a1];
  int v20 = v19 + 8;
  uint64_t v21 = v19 + 13;
  int v46 = v17;
  unint64_t v22 = v17;
  while (!sub_1000E5C98(a1, v16))
  {
LABEL_21:
    ++v16;
    v18 += 64;
    if (v16 >= *v14)
    {
      int v27 = 16;
      unint64_t v16 = v22;
      goto LABEL_25;
    }
  }
  uint64_t v23 = *v20 + v18;
  unsigned int v24 = *(_DWORD *)(v23 + 4);
  if (*(unsigned __int16 *)(v23 + 8) <= a3)
  {
    if (v24 >= a2) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  if (*v21 - 1 >= a4 || v24 >> 1 <= a2 || v24 < a2)
  {
LABEL_20:
    unint64_t v22 = v16;
    goto LABEL_21;
  }
LABEL_24:
  int v27 = 3;
LABEL_25:
  unsigned int v15 = a1;
  uint64_t v6 = v47;
  int v12 = &qword_100A15298[134 * a1];
  LODWORD(a5) = v46;
LABEL_26:
  unsigned int v28 = qword_100A15298[134 * v15 + 12];
  if (v28)
  {
    if (v16 <= a5) {
      a5 = a5;
    }
    else {
      a5 = v16;
    }
    if (v28 >= 5)
    {
      unsigned int v29 = v16 + 1;
      if (v29 < *v14)
      {
        int v30 = v12;
        BOOL v31 = sub_1000E5C98(a1, v29);
        int v12 = v30;
        if (v31) {
          a5 = v29;
        }
        else {
          a5 = a5;
        }
      }
    }
    v27 |= 4u;
    unint64_t v16 = a5;
  }
  if (sub_1000E7430(*v12))
  {
    uint64_t v32 = *v14;
    if (v32)
    {
      uint64_t v33 = qword_100A15298[134 * v15 + 8];
      if (v33)
      {
        int v34 = *(unsigned __int8 *)(v33 + ((unint64_t)v16 << 6) + 1);
        int v35 = HIDWORD(qword_100A15298[134 * v15 + 10]);
        if (v35 != v34)
        {
          unsigned int v36 = v15;
          uint64_t v37 = 0;
          unsigned int v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = (unsigned __int8 *)(v33 + 1);
          do
          {
            int v42 = *v40;
            v40 += 64;
            int v41 = v42;
            if (v42 == v34) {
              unsigned int v39 = v37;
            }
            if (v35 == v41) {
              unsigned int v38 = v37;
            }
            ++v37;
          }
          while (v32 != v37);
          if (v39 <= v38) {
            unsigned int v43 = v38;
          }
          else {
            unsigned int v43 = v39;
          }
          if (v43 > v16)
          {
            BOOL v44 = sub_1000E5C98(a1, v43);
            if (v44) {
              unint64_t v16 = v43;
            }
            else {
              unint64_t v16 = v16;
            }
            if (v44) {
              int v27 = 32;
            }
          }
          unsigned int v15 = v36;
        }
      }
    }
  }
  HIDWORD(qword_100A15298[134 * v15 + 14]) = v16;
  *uint64_t v6 = v27;
  return v16;
}

void sub_1000E591C(uint64_t a1)
{
  if (a1)
  {
    v41[0] = 0;
    unsigned __int16 v42 = **(_WORD **)(a1 + 8);
    uint64_t v1 = v42;
    if (BYTE2(qword_100A15298[134 * v42 + 1]) && (uint64_t v2 = LODWORD(qword_100A15298[134 * v42 + 9]), v2))
    {
      uint64_t v3 = 0;
      uint64_t v4 = &qword_100A15298[134 * v42];
      uint64_t v5 = v4[8];
      int v6 = *((unsigned __int8 *)v4 + 76);
      uint64_t v7 = (unsigned __int8 *)(v5 + 1);
      while (1)
      {
        int v8 = *v7;
        v7 += 64;
        if (v8 == v6) {
          break;
        }
        if (v2 == ++v3) {
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      LODWORD(v3) = 0;
    }
    uint64_t v9 = &qword_100A15298[134 * v42];
    v9[13] = 0;
    *((_DWORD *)v9 + 25) = 0;
    int v10 = sub_100058654();
    if (v3)
    {
      if (v10)
      {
        sub_100056E24((uint64_t)"Restarting TS Idle timer peer %d due to currentTransport %d", v11, v12, v13, v14, v15, v16, v17, v1);
        uint64_t v18 = sub_100050B4C(0x57u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          BOOL v44 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      v41[1] = &v42;
      LOWORD(v41[0]) = 2;
      if (sub_1000268E4((uint64_t)sub_1000E591C, v41, 30, (int *)&qword_100A15298[134 * v1 + 55]))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"TS Idle timer registration failed", v19, v20, v21, v22, v23, v24, v25, v40);
          uint64_t v26 = sub_100050B4C(0x57u);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      uint64_t v27 = BYTE2(qword_100A15298[134 * v42 + 1]);
      if (BYTE2(qword_100A15298[134 * v42 + 1]))
      {
        unsigned int v28 = &qword_100A15298[134 * v42];
        unsigned int v29 = v28 + 12;
        int v30 = v28 + 3;
        do
        {
          if (*v30 != 1)
          {
            uint64_t v31 = *((void *)v30 - 1);
            if (v31)
            {
              if (*(unsigned __int16 *)(v31 + 16) <= 1u) {
                *unsigned int v29 = 0;
              }
            }
          }
          v30 += 16;
          --v27;
        }
        while (v27);
      }
      sub_1000E3830(2, 0);
    }
    else if (v10)
    {
      sub_10019F7AC(0);
      sub_10019F7AC(2);
      sub_100056E24((uint64_t)"TS idle expiration for peer %d with transport %d, avail [acl %d, le %d]", v32, v33, v34, v35, v36, v37, v38, v1);
      unsigned int v39 = sub_100050B4C(0x57u);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v44 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    sub_10025B8C0();
  }
}

void sub_1000E5C10(uint64_t a1, uint64_t a2, int a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Read RSSI CB signaling failed with status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x57u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    sub_10016E224(a2, a3);
  }
}

BOOL sub_1000E5C98(unsigned int a1, unsigned int a2)
{
  if (LODWORD(qword_100A15298[134 * a1 + 9]) <= a2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_TS_Switching.c", 300, "lTsPeers[peerIndex].nbCaps > techIndex");
  }
  uint64_t v3 = qword_100A15298[134 * a1 + 8];
  unint64_t v4 = v3 + ((unint64_t)a2 << 6);
  if (!*(unsigned char *)(v4 + 2) || !byte_100A15258) {
    return 0;
  }
  int v5 = *(unsigned __int8 *)(v4 + 1);
  if (*(unsigned __int8 *)(qword_100A15250 + 1) != v5)
  {
    unint64_t v6 = 0;
    uint64_t v8 = (unsigned __int8 *)(qword_100A15250 + 65);
    while (byte_100A15258 - 1 != v6)
    {
      int v9 = *v8;
      v8 += 64;
      ++v6;
      if (v9 == v5)
      {
        BOOL v7 = v6 < byte_100A15258;
        goto LABEL_10;
      }
    }
    return 0;
  }
  unint64_t v6 = 0;
  BOOL v7 = 1;
LABEL_10:
  BOOL result = 0;
  if (v7)
  {
    if (*(unsigned char *)(qword_100A15250 + (v6 << 6) + 2)) {
      return *(_DWORD *)(v3 + ((unint64_t)a2 << 6) + 20) <= SHIDWORD(qword_100A15298[134 * a1 + 23]);
    }
  }
  return result;
}

void sub_1000E5D9C()
{
  dword_1009FF66C = 0;
  JUMPOUT(0x1000E5DACLL);
}

void sub_1000E6320()
{
  dword_1009FF66C = 6;
}

void sub_1000E6330()
{
}

void sub_1000E6338()
{
}

void sub_1000E6340()
{
}

void sub_1000E6348()
{
}

void sub_1000E6350()
{
}

void sub_1000E6358()
{
}

void sub_1000E6360()
{
}

void sub_1000E6368()
{
}

BOOL sub_1000E6370()
{
  BOOL result = sub_1000F3350();
  if (result)
  {
    JUMPOUT(0x1000E5DACLL);
  }
  byte_1009FF670 = 1;
  return result;
}

uint64_t sub_1000E63B4()
{
  if (byte_1009FF670 == 1)
  {
    byte_1009FF670 = 0;
    return sub_1000268E4((uint64_t)sub_1000E6370, 0, 1, 0);
  }
  return result;
}

void sub_1000E63EC()
{
  byte_1009FF671 = 1;
}

BOOL sub_1000E63FC()
{
  return (dword_1009FF66C & 0xFFFFFFFD) == 5;
}

BOOL sub_1000E6414()
{
  return dword_1009FF66C == 3 || (dword_1009FF66C - 5) < 2;
}

BOOL sub_1000E6430()
{
  return (dword_1009FF66C & 0xFFFFFFFE) == 2;
}

uint64_t sub_1000E644C()
{
  sub_1000F33D4(&dword_1009FF680);

  return sub_1000268E4((uint64_t)sub_1000E6360, 0, 3, (int *)&dword_1009FF680);
}

uint64_t sub_1000E64A4()
{
  byte_1009FF670 = 0;
  sub_1000268E4((uint64_t)sub_1000E6370, 0, 1, 0);
  uint64_t result = sub_1000268E4((uint64_t)sub_1000E6358, 0, 2, &dword_1009FF67C);
  dword_1009FF66C = 1;
  return result;
}

uint64_t sub_1000E6518(uint64_t a1, uint64_t a2)
{
  char v2 = byte_1009FF688;
  if (byte_1009FF688)
  {
    if (byte_1009FF688 == 10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't add anymore Incoming Raw Data callbacks.", v3, v4, v5, v6, v7, v8, v9, v16);
        uint64_t v10 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
    else
    {
      uint64_t v12 = qword_1009FF690;
      uint64_t v13 = byte_1009FF688;
      while (*v12 != a1)
      {
        v12 += 2;
        if (!--v13) {
          goto LABEL_10;
        }
      }
      return 0;
    }
  }
  else
  {
LABEL_10:
    uint64_t v11 = 0;
    uint64_t v14 = &qword_1009FF690[2 * byte_1009FF688];
    *uint64_t v14 = a1;
    v14[1] = a2;
    byte_1009FF688 = v2 + 1;
  }
  return v11;
}

uint64_t sub_1000E65DC(uint64_t a1)
{
  char v1 = byte_1009FF730;
  if (byte_1009FF730)
  {
    if (byte_1009FF730 == 10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't add anymore CL Ready callbacks.", v2, v3, v4, v5, v6, v7, v8, v14);
        uint64_t v9 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
    else
    {
      uint64_t v11 = qword_1009FF738;
      uint64_t v12 = byte_1009FF730;
      while (*v11 != a1)
      {
        ++v11;
        if (!--v12) {
          goto LABEL_10;
        }
      }
      return 0;
    }
  }
  else
  {
LABEL_10:
    uint64_t v10 = 0;
    qword_1009FF738[byte_1009FF730] = a1;
    byte_1009FF730 = v1 + 1;
  }
  return v10;
}

uint64_t sub_1000E669C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v5 = *a3;
  *a3 = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Searching for LE Only pipes:", v6, v7, v8, v9, v10, v11, v12, v34);
    uint64_t v13 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!word_1009FF78A) {
    return 0;
  }
  uint64_t v14 = 0;
  while (1)
  {
    uint64_t v15 = *((void *)&xmmword_1009FF790 + v14);
    if (*(void *)v15 == a1) {
      break;
    }
    if ((unsigned __int16)word_1009FF78A == ++v14) {
      return 0;
    }
  }
  if (!*(_DWORD *)(v15 + 16)) {
    return 0;
  }
  uint64_t v16 = 0;
  while (1)
  {
    char v40 = 0;
    *(_OWORD *)buf = 0u;
    long long v39 = 0u;
    __memcpy_chk();
    uint64_t v17 = (unsigned __int16)word_1009FF810;
    if (word_1009FF810)
    {
      uint64_t v18 = (unsigned int *)(*(void *)(v15 + 8) + 88 * v16);
      size_t v19 = v18[8];
      uint64_t v20 = &qword_1009FF818;
      while (v19 != *((unsigned __int8 *)v20 + 8) || memcmp((const void *)*v20, v18, v19))
      {
        v20 += 9;
        if (!--v17) {
          goto LABEL_16;
        }
      }
      BOOL v21 = *((unsigned char *)v20 + 26) != 0;
    }
    else
    {
LABEL_16:
      BOOL v21 = 0;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"    peerID:%d channelID=0x%04x CID:0x%04x stayOnLe=%d name:%s priority:%d serviceID:%d peerSupportsLeOnlyPipes:%d listSize:%d(%d)", v22, v23, v24, v25, v26, v27, v28, v14);
      unsigned int v29 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        int v30 = sub_100050714();
        *(_DWORD *)uint64_t v36 = 136446210;
        uint64_t v37 = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", v36, 0xCu);
      }
    }
    uint64_t v15 = *((void *)&xmmword_1009FF790 + v14);
    if (v21)
    {
      uint64_t v31 = *(void *)(*(void *)(v15 + 8) + 88 * v16 + 64);
      if (v31)
      {
        if ((*(unsigned char *)(v15 + 53) & 0x10) != 0)
        {
          unint64_t v32 = *a3;
          *(_WORD *)(a2 + 2 * *a3) = *(_WORD *)(v31 + 4);
          *a3 = v32 + 1;
          if (v32 + 1 > v5) {
            return 106;
          }
        }
      }
    }
    if (++v16 >= (unint64_t)*(unsigned int *)(v15 + 16)) {
      return 0;
    }
  }
}

uint64_t sub_1000E6974(char a1, char a2)
{
  byte_1009FFED8 = a1;
  uint64_t v3 = sub_100224014((uint64_t)off_10099A6C8);
  if (v3)
  {
    uint64_t v4 = v3;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to register LE GAP", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)v57);
      uint64_t v12 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return v4;
  }
  if (sub_1001DEA28(0x3Au, 2, 16, 8u, &qword_1009FFEE0, (uint64_t)sub_1000E6CFC))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to register L2CAP fixed channel", v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)v57);
      uint64_t v20 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1002241AC((uint64_t)off_10099A6C8);
  }
  byte_1009FFEE8 = 0;
  qword_1009FFEF0 = (uint64_t)sub_10025959C((uint64_t)sub_1000E7328, (uint64_t)sub_1000E7330);
  sub_10023413C((__n128 *)off_10099A6F8);
  uint64_t v4 = v21;
  if (v21)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to register CL security.", v22, v23, v24, v25, v26, v27, v28, *(uint64_t *)v57);
      unsigned int v29 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B8C0();
  }
  byte_1009FFEF8 = a2;
  byte_1009FFEF9 = 1;
  dword_1009FFEFC = 4129;
  if (dword_1009FFF00 == 42)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This is a watch", v40, v41, v42, v43, v44, v45, v46, *(uint64_t *)v57);
      uint64_t v47 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)unsigned int v57 = 136446210;
        *(void *)&v57[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", v57, 0xCu);
      }
    }
    int v38 = dword_1009FFEFC;
    int v39 = 2176;
  }
  else
  {
    if (dword_1009FFF00 != 12)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"This is a generic device", v49, v50, v51, v52, v53, v54, v55, *(uint64_t *)v57);
        int v56 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)unsigned int v57 = 136446210;
          *(void *)&v57[4] = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, " %{public}s", v57, 0xCu);
        }
      }
      goto LABEL_26;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This is a phone", v30, v31, v32, v33, v34, v35, v36, *(uint64_t *)v57);
      uint64_t v37 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)unsigned int v57 = 136446210;
        *(void *)&v57[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", v57, 0xCu);
      }
    }
    int v38 = dword_1009FFEFC;
    int v39 = 1280;
  }
  dword_1009FFEFC = v38 | v39;
LABEL_26:
  if (sub_10017E718()) {
    dword_1009FFEFC |= 2u;
  }
  if (sub_10017E728()) {
    dword_1009FFEFC |= 0x10u;
  }
  return v4;
}

void sub_1000E6CFC(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    return;
  }
  unsigned int v8 = sub_1000E79C8((uint64_t)a1);
  if (!a2 || a3 <= 1)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Ignoring PDU size of %d", v12, v13, v14, v15, v16, v17, v18, a3);
    uint64_t v19 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_39;
  }
  unsigned int v9 = v8;
  uint64_t v10 = *a2;
  if (a4 && v10 != 145 && off_100A15290) {
    off_100A15290(a1, (unsigned __int16)v8, a3);
  }
  if ((v10 & 0xFE) == 8)
  {
    unsigned int v9 = a2[1];
    if (a3 - 2 == v9)
    {
      unsigned int v11 = 2;
      goto LABEL_25;
    }
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Ignoring PDU opcode %d with invalid length (%d expected, %d actual)", v21, v22, v23, v24, v25, v26, v27, v10);
    uint64_t v28 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_39:
    sub_100744F6C();
    return;
  }
  if (v9 == -1)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not locate peer from handle %p with PDU opcode 0x%x", v29, v30, v31, v32, v33, v34, v35, (uint64_t)a1);
    uint64_t v36 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_39;
  }
  unsigned int v20 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v9) + 48);
  LOWORD(v9) = a2[1];
  if (v20 < 8)
  {
    unsigned int v11 = 2;
  }
  else
  {
    LOWORD(v9) = v9 | (a2[2] << 8);
    unsigned int v11 = 3;
  }
  if (a3 - v11 != (unsigned __int16)v9)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Ignoring PDU opcode %d with invalid length (%d expected, %d actual) dataLength %d, expectedHeaderSize %d", v37, v38, v39, v40, v41, v42, v43, v10);
    uint64_t v44 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_39;
  }
LABEL_25:
  if ((int)v10 <= 112)
  {
    switch((int)v10)
    {
      case 1:
        sub_1000ED60C((uint64_t)a1, &a2[v11], (unsigned __int16)v9);
        break;
      case 2:
        sub_1000EDF84((uint64_t)a1, &a2[v11], (unsigned __int16)v9);
        break;
      case 3:
        sub_1000EE77C((uint64_t)a1, (unsigned __int16 *)&a2[v11], (unsigned __int16)v9);
        break;
      case 4:
        sub_1000EEA9C((uint64_t)a1, &a2[v11], (unsigned __int16)v9);
        break;
      case 5:
        sub_1000EED3C(a1, (unsigned __int16 *)&a2[v11], (unsigned __int16)v9);
        break;
      case 6:
        sub_1000EF190((uint64_t)a1, (unsigned __int16 *)&a2[v11], (unsigned __int16)v9);
        break;
      case 7:
        sub_1000EF764((uint64_t)a1, (unsigned __int16 *)&a2[v11], (unsigned __int16)v9);
        break;
      case 8:
        sub_1000EFFE4((uint64_t)a1, (uint64_t)&a2[v11]);
        break;
      case 9:
        sub_1000ED094((uint64_t)a1, &a2[v11], (unsigned __int16)v9);
        break;
      default:
        if (v10 != 112) {
          goto LABEL_55;
        }
        sub_1000F0178(a1);
        break;
    }
    return;
  }
  if ((int)v10 > 144)
  {
    if ((v10 - 147) < 2) {
      return;
    }
    if (v10 != 145) {
      goto LABEL_55;
    }
    sub_1000F0A14((uint64_t)a1, (uint64_t)&a2[v11], (unsigned __int16)v9, a4);
  }
  else
  {
    switch(v10)
    {
      case 0x71:
        sub_1000F0514((uint64_t)a1, (uint64_t)&a2[v11], (unsigned __int16)v9);
        break;
      case 0x72:
        sub_1000F0714((uint64_t)a1, (double *)&a2[v11], (unsigned __int16)v9);
        break;
      case 0x90:
        sub_1000F0B60((uint64_t)a1, &a2[v11], (unsigned __int16)v9);
        return;
      default:
LABEL_55:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unknown CL Opcode of 0x%x with data size %d", v45, v46, v47, v48, v49, v50, v51, v10);
          uint64_t v52 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        __int16 v53 = 264;
        char v54 = 2;
        sub_1000E7B60((uint64_t)a1, &v53, 3u, 0);
        return;
    }
  }
}

void *sub_1000E7328(void *a1, const void *a2, size_t __len)
{
  return memmove(a1, a2, __len);
}

uint64_t sub_1000E7334(uint64_t a1)
{
  uint64_t v1 = (unsigned __int16)word_1009FF78A;
  if (!word_1009FF78A) {
    return 0;
  }
  for (unint64_t i = &xmmword_1009FF790; **(void **)i != a1; unint64_t i = (long long *)((char *)i + 8))
  {
    if (!--v1) {
      return 0;
    }
  }
  return (*(unsigned __int8 *)(*(void *)i + 52) >> 3) & 1;
}

void sub_1000E7378()
{
  if (qword_1009FFEE0) {
    sub_1001DEC18(qword_1009FFEE0);
  }
  sub_1002241AC((uint64_t)off_10099A6C8);
  word_1009FF78A = 0;
  xmmword_1009FF790 = 0u;
  unk_1009FF7A0 = 0u;
  xmmword_1009FF7B0 = 0u;
  unk_1009FF7C0 = 0u;
  xmmword_1009FF7D0 = 0u;
  unk_1009FF7E0 = 0u;
  xmmword_1009FF7F0 = 0u;
  unk_1009FF800 = 0u;
  if (word_1009FF810)
  {
    unint64_t v0 = 0;
    uint64_t v1 = (void **)qword_1009FF818;
    do
    {
      uint64_t v2 = *v1;
      v1 += 9;
      sub_100023010(v2);
      ++v0;
    }
    while (v0 < (unsigned __int16)word_1009FF810);
  }
  bzero(qword_1009FF818, 0x6C0uLL);
  word_1009FF810 = 0;
}

void sub_1000E7420()
{
  byte_1009FFF04 = 1;
}

BOOL sub_1000E7430(uint64_t a1)
{
  if (sub_100197770(a1)) {
    return !sub_100225F4C(a1);
  }
  BOOL result = sub_100197698(a1);
  if (result) {
    return *(unsigned char *)(a1 + 144) == 0;
  }
  return result;
}

uint64_t sub_1000E7480(uint64_t a1)
{
  if (sub_100197770(a1))
  {
    return sub_100234878(a1);
  }
  else
  {
    uint64_t result = sub_100197698(a1);
    if (result)
    {
      return sub_100253590(a1);
    }
  }
  return result;
}

BOOL sub_1000E74F4(BOOL result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (sub_100197770(result))
    {
      return 1;
    }
    else
    {
      return sub_100197698(v1);
    }
  }
  return result;
}

uint64_t sub_1000E7544(int a1, _DWORD *a2, _DWORD *a3)
{
  if (!word_1009FF78A) {
    return 120;
  }
  uint64_t v3 = 0;
  while (1)
  {
    uint64_t v4 = *((void *)&xmmword_1009FF790 + v3);
    uint64_t v5 = *(unsigned int *)(v4 + 16);
    if (v5) {
      break;
    }
LABEL_7:
    if (++v3 == (unsigned __int16)word_1009FF78A) {
      return 120;
    }
  }
  uint64_t v6 = 0;
  uint64_t v7 = (unsigned __int16 *)(*(void *)(v4 + 8) + 52);
  while (1)
  {
    int v8 = *v7;
    v7 += 44;
    if (v8 == a1) {
      break;
    }
    if (v5 == ++v6) {
      goto LABEL_7;
    }
  }
  uint64_t result = 0;
  *a2 = v3;
  *a3 = v6;
  return result;
}

void sub_1000E75B0(unsigned int a1)
{
  if (!word_1009FF78A) {
    goto LABEL_17;
  }
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
    uint64_t v4 = *(unsigned int *)(v3 + 16);
    if (v4) {
      break;
    }
LABEL_7:
    if (++v2 == (unsigned __int16)word_1009FF78A) {
      goto LABEL_17;
    }
  }
  uint64_t v5 = (unsigned __int16 *)(*(void *)(v3 + 8) + 52);
  while (1)
  {
    int v6 = *v5;
    v5 += 44;
    if (v6 == a1) {
      break;
    }
    if (!--v4) {
      goto LABEL_7;
    }
  }
  uint64_t v7 = *(void *)v3;
  if (*(void *)v3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Queue CID %d stalled, disconnecting", v8, v9, v10, v11, v12, v13, v14, a1);
      uint64_t v15 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_10025B96C(3702);
    uint64_t v16 = sub_100223D18(v7);
    if (v16)
    {
      uint64_t v17 = v16;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Stall Monitor LE disconnect failed with status %!", v18, v19, v20, v21, v22, v23, v24, v17);
        uint64_t v25 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          goto LABEL_19;
        }
      }
    }
  }
  else
  {
LABEL_17:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Queue CID %d stalled disconnecting, but connection handle is no longer valid", v26, v27, v28, v29, v30, v31, v32, a1);
      uint64_t v33 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
LABEL_19:
      }
        sub_100745764();
    }
  }
}

uint64_t sub_1000E771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (!sub_100058654()) {
      return 414;
    }
    sub_100056E24((uint64_t)"SendTimeSyncRequest peerID is invalid", v16, v17, v18, v19, v20, v21, v22, (uint64_t)v57);
    uint64_t v23 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return 414;
    }
LABEL_8:
    sub_100744F6C();
    return 414;
  }
  uint64_t v7 = v6;
  if (sub_1000E7430(a1))
  {
    if (!sub_100058654()) {
      return 414;
    }
    sub_100056E24((uint64_t)"Time sync should only be initiated by the peripheral.", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v57);
    uint64_t v15 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return 414;
    }
    goto LABEL_8;
  }
  uint64_t v25 = *((void *)&xmmword_1009FF790 + v7);
  if (*(void *)(v25 + 56))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Time update already pending.", v26, v27, v28, v29, v30, v31, v32, (uint64_t)v57);
      uint64_t v33 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 116;
  }
  else
  {
    unsigned int v34 = *(unsigned __int8 *)(v25 + 48);
    if (v34 <= 7) {
      unsigned __int16 v35 = 2;
    }
    else {
      unsigned __int16 v35 = 3;
    }
    if (v34 <= 7) {
      size_t v36 = 2;
    }
    else {
      size_t v36 = 3;
    }
    uint64_t v37 = sub_100022FE8(v36);
    if (v37)
    {
      uint64_t v38 = v37;
      unsigned int v57 = v37;
      unsigned __int16 v58 = v35;
      unsigned __int16 v59 = v35;
      int v60 = 131073;
      *uint64_t v37 = 112;
      sub_1000E7A28(v7, (uint64_t *)&v57, 0);
      if (HIBYTE(v60))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error creating CLDeviceID PDU", v39, v40, v41, v42, v43, v44, v45, (uint64_t)v57);
          uint64_t v46 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 131;
      }
      else
      {
        uint64_t v47 = *((void *)&xmmword_1009FF790 + v7);
        *(void *)(v47 + 56) = a2;
        *(void *)(v47 + 64) = a3;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Requesting time sync", v48, v49, v50, v51, v52, v53, v54, (uint64_t)v57);
          uint64_t v55 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
          {
            int v56 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v62 = v56;
            _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        return sub_1000E7B60(a1, v38, v35, 1);
      }
    }
    else
    {
      return 106;
    }
  }
}

uint64_t sub_1000E79C8(uint64_t a1)
{
  if (!sub_1000E74F4(a1) || !word_1009FF78A) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  while (**((void **)&xmmword_1009FF790 + result) != a1)
  {
    if ((unsigned __int16)word_1009FF78A == ++result) {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_1000E7A28(uint64_t result, uint64_t *a2, __int16 a3)
{
  if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + result) + 48) >= 8u)
  {
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    }
    else
    {
      uint64_t v3 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) - (int)v3 > 1)
      {
        if (*((unsigned char *)a2 + 14) == 2)
        {
          *(unsigned char *)(*a2 + v3) = a3;
          *(unsigned char *)(*a2 + *((unsigned __int16 *)a2 + 6) + 1) = HIBYTE(a3);
          *((_WORD *)a2 + 6) += 2;
          return result;
        }
        uint64_t v6 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_14:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1066, v6);
      }
    }
    uint64_t v6 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 2";
    goto LABEL_14;
  }
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    goto LABEL_16;
  }
  uint64_t v4 = *((unsigned __int16 *)a2 + 6);
  if (*((unsigned __int16 *)a2 + 5) <= v4)
  {
LABEL_16:
    uint64_t v7 = "ByteStream_NumReadBytesAvail(*pByteStream) >= 1";
    goto LABEL_18;
  }
  if (*((unsigned char *)a2 + 14) != 2)
  {
    uint64_t v7 = "(*pByteStream).__RWFlag == BYTESTREAM_WRITE";
LABEL_18:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1068, v7);
  }
  uint64_t v5 = *a2;
  *((_WORD *)a2 + 6) = v4 + 1;
  *(unsigned char *)(v5 + v4) = a3;
  return result;
}

uint64_t sub_1000E7B60(uint64_t a1, void *a2, unsigned int a3, int a4)
{
  if (sub_1000E74F4(a1))
  {
    uint64_t v8 = sub_1000E79C8(a1);
    if (a3 >= 0x100)
    {
      uint64_t v9 = v8;
      if (v8 != -1 && *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v8) + 48) <= 7u)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"CL data will be dropped for peer %d datasize is %d version %d", v10, v11, v12, v13, v14, v15, v16, v9);
          uint64_t v17 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
    if (byte_1009FFEE8 == 1)
    {
      uint64_t v40 = 0;
      if (sub_100058654())
      {
        uint64_t v18 = sub_100059E10(qword_1009FFEF0);
        sub_100056E24((uint64_t)"CL L2CAP queue is full, queueing data, current Queue size is %d packets", v19, v20, v21, v22, v23, v24, v25, v18);
        uint64_t v26 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v42 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v38 = a1;
      LOWORD(v40) = a3;
      uint64_t v27 = sub_100022FE8(a3);
      uint64_t v39 = v27;
      if (v27)
      {
        memmove(v27, a2, a3);
        sub_100259764(qword_1009FFEF0, (uint64_t)&v38, 24);
      }
      if (a4) {
        sub_100023010(a2);
      }
      if (v39) {
        return 0;
      }
      else {
        return 106;
      }
    }
    else
    {
      return sub_1000ECD58(a1, (char *)a2, a3, a4);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Not valid LE connection handle", v29, v30, v31, v32, v33, v34, v35, v37);
      size_t v36 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_100023010(a2);
    return 5100;
  }
}

uint64_t sub_1000E7DAC(uint64_t a1)
{
  if (!sub_1000E74F4(a1)) {
    return 414;
  }
  if (sub_1000E79C8(a1) != -1)
  {
    if (!sub_100058654()) {
      return 408;
    }
    sub_100056E24((uint64_t)"Peer ID already exists for this connection handle.", v2, v3, v4, v5, v6, v7, v8, v49);
    uint64_t v9 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      return 408;
    }
    goto LABEL_5;
  }
  if (!*(_WORD *)(a1 + 20))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not find the remote manufacturer name, it is currently 0", v11, v12, v13, v14, v15, v16, v17, v49);
      uint64_t v18 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  if (sub_1000E7430(a1) && ((int v19 = *(unsigned __int16 *)(a1 + 20), v19 == 15) || v19 == 89 || v19 == 76))
  {
    unsigned int v20 = sub_1000E8040(a1);
    if (v20 == -1)
    {
      if (!sub_100058654()) {
        return 408;
      }
      sub_100056E24((uint64_t)"Peer ID could not be found for connection handle (%x).", v41, v42, v43, v44, v45, v46, v47, a1);
      uint64_t v48 = sub_100050B4C(0x51u);
      if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
        return 408;
      }
LABEL_5:
      sub_100744F6C();
      return 408;
    }
    unsigned int v21 = v20;
    sub_1000E80C0(a1);
    *(unsigned char *)(*((void *)&xmmword_1009FF790 + v21) + 74) = 1;
    int v29 = sub_100058654();
    uint64_t result = 0;
    if (v29)
    {
      sub_100056E24((uint64_t)"CL is pending remote ver for (%x).", v22, v23, v24, v25, v26, v27, v28, a1);
      uint64_t v30 = sub_100050B4C(0x51u);
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0;
      if (v31) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    int v39 = sub_100058654();
    uint64_t result = 0;
    if (v39)
    {
      sub_100056E24((uint64_t)"CL is disabled for (%x) .", v32, v33, v34, v35, v36, v37, v38, a1);
      uint64_t v30 = sub_100050B4C(0x51u);
      BOOL v40 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0;
      if (v40)
      {
LABEL_23:
        *(_DWORD *)buf = 136446210;
        uint64_t v51 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000E8040(uint64_t a1)
{
  if ((unsigned __int16)word_1009FF78A >= 0x10u) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 749, "lNbPeers < MAX_PEERS");
  }
  uint64_t v2 = sub_10010CE48(0x78uLL);
  __int16 v3 = word_1009FF78A;
  *((void *)&xmmword_1009FF790 + (unsigned __int16)word_1009FF78A) = v2;
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  *uint64_t v2 = a1;
  word_1009FF78A = v3 + 1;
  return (unsigned __int16)(v3 + 1) - 1;
}

uint64_t sub_1000E80C0(uint64_t a1)
{
  if (sub_100058654())
  {
    uint64_t v9 = 11;
    if (!byte_1009FFEF9) {
      uint64_t v9 = 0;
    }
    sub_100056E24((uint64_t)"Sending VersionInfo version=%04x features=%04x", v2, v3, v4, v5, v6, v7, v8, v9);
    uint64_t v10 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_WORD *)buf = 1289;
  if (byte_1009FFEF9) {
    char v11 = 11;
  }
  else {
    char v11 = 0;
  }
  buf[2] = v11;
  *(_WORD *)&buf[3] = dword_1009FFEFC;
  *(_WORD *)&buf[5] = 0;
  return sub_1000E7B60(a1, buf, 7u, 0);
}

BOOL sub_1000E81EC(uint64_t a1)
{
  uint64_t v2 = sub_10010BABC();
  uint64_t v3 = (unsigned __int16)word_1009FF78A;
  if (!word_1009FF78A) {
    return 0;
  }
  unint64_t v4 = v2;
  uint64_t v17 = 0;
  for (unint64_t i = &xmmword_1009FF790; ; unint64_t i = (long long *)((char *)i + 8))
  {
    uint64_t v6 = *(void **)i;
    if (**(void **)i == a1) {
      break;
    }
    if (!--v3) {
      return 0;
    }
  }
  *((_DWORD *)v6 + 21) = 0;
  *((_DWORD *)v6 + 22) = 0;
  int v8 = *((_DWORD *)v6 + 4);
  if (v8)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    char v11 = 0;
    do
    {
      uint64_t v12 = v6[1] + v9;
      BOOL v13 = *(unsigned char *)(v12 + 80) != 0;
      int v14 = sub_1001DD56C(*(unsigned __int16 *)(v12 + 52), (uint64_t *)&v17);
      uint64_t v6 = *(void **)i;
      if (!v14) {
        *(int32x2_t *)((char *)v6 + 84) = vadd_s32(*(int32x2_t *)((char *)v6 + 84), v17[10]);
      }
      v11 |= v13;
      ++v10;
      v9 += 88;
    }
    while (v10 < *((unsigned int *)v6 + 4));
    int v8 = *((_DWORD *)v6 + 21);
  }
  else
  {
    char v11 = 0;
  }
  if (*((_DWORD *)v6 + 23) == v8)
  {
    int v15 = *((_DWORD *)v6 + 24);
    int v16 = *((_DWORD *)v6 + 22);
    if (v15 == v16)
    {
      BOOL result = (v11 & 1) == 0 && v4 > v6[14] + 60000;
      goto LABEL_19;
    }
  }
  else
  {
    int v16 = *((_DWORD *)v6 + 22);
  }
  BOOL result = 0;
  v6[14] = v4;
  int v15 = v16;
LABEL_19:
  *((_DWORD *)v6 + 23) = v8;
  *((_DWORD *)v6 + 24) = v15;
  return result;
}

uint64_t sub_1000E8334(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = 0;
  if (word_1009FF78A)
  {
    unint64_t v2 = 0;
    int v3 = 0;
    int v4 = 0;
    uint64_t v37 = 0;
    do
    {
      uint64_t v5 = *((void *)&xmmword_1009FF790 + v2);
      if (*(void *)v5 && (*(void *)v5 == a1 || byte_1009FFF04 == 1))
      {
        int v32 = v4;
        int v33 = v3;
        if (*(_DWORD *)(v5 + 16))
        {
          uint64_t v6 = 0;
          unint64_t v7 = 0;
          int v8 = 0;
          int v9 = 0;
          do
          {
            int v10 = sub_1001DD56C(*(unsigned __int16 *)(*(void *)(v5 + 8) + v6 + 52), &v37);
            uint64_t v5 = *((void *)&xmmword_1009FF790 + v2);
            if (!v10)
            {
              uint64_t v11 = *(void *)(v5 + 8) + v6;
              int v13 = *(_DWORD *)(v37 + 80);
              int v12 = *(_DWORD *)(v37 + 84);
              int v15 = *(_DWORD *)(v11 + 72);
              int v14 = *(_DWORD *)(v11 + 76);
              int v16 = v12 - v14;
              int v17 = v13 - v15;
              if (v13 != v15 || v12 != v14)
              {
                sub_10016E28C(a1, (_DWORD *)&v36 + 1, &v36);
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Pipe[ 0x%4x, p %2d, le 0x%4x, cl 0x%4x] Tx[ %4d kbps, %7d B, %2d%% %3d, %2d%% %3d ] Rx[ %4d kbps, %7d B, %2d%% %3d, %2d%% %3d ] Cl[ r %3d, c %3d, t %3d ] Le[ r %3d, c %3d, t %3d ] av [ %d, %d ] vse %d le %d, cl %d", 100* *(unsigned __int16 *)(a2 + 36)/ (*(unsigned __int16 *)(a2 + 34) + *(unsigned __int16 *)(a2 + 36)), 100* *(unsigned __int16 *)(a2 + 27)/ (*(unsigned __int16 *)(a2 + 25) + *(unsigned __int16 *)(a2 + 27)), *(unsigned __int16 *)(a2 + 34), v36, *(unsigned __int16 *)(a2 + 25), *(__int16 *)(a2 + 16), *(unsigned __int16 *)(a2 + 14), *(unsigned __int16 *)(*(void *)(*((void *)&xmmword_1009FF790 + v2) + 8) + v6 + 52));
                  int v19 = sub_100050B4C(0x51u);
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
                  {
                    unsigned int v20 = sub_100050714();
                    *(_DWORD *)buf = 136446210;
                    int v39 = v20;
                    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                  }
                }
              }
              v9 += v17;
              v8 += v16;
              uint64_t v5 = *((void *)&xmmword_1009FF790 + v2);
              *(void *)(*(void *)(v5 + 8) + v6 + 72) = *(void *)(v37 + 80);
            }
            ++v7;
            v6 += 88;
          }
          while (v7 < *(unsigned int *)(v5 + 16));
        }
        else
        {
          int v9 = 0;
          int v8 = 0;
        }
        if (sub_1001F7D74() >= 0x13 && v9 | v8)
        {
          if (*(_WORD *)(a2 + 202))
          {
            if (*(unsigned __int16 *)(a2 + 202) != 0xFFFF)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"LinkCl AvSNR [0x%4x] [ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ] ", *(char *)(a2 + 149), *(char *)(a2 + 150), *(char *)(a2 + 151), *(char *)(a2 + 152), *(char *)(a2 + 153), *(char *)(a2 + 154), *(char *)(a2 + 155), *(unsigned __int16 *)(a2 + 202));
                unsigned int v21 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v22 = sub_100050714();
                  *(_DWORD *)buf = 136446210;
                  int v39 = v22;
                  _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
            }
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"LinkLe AvSNR [0x%4x] [ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ] minSNR [%3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ]", *(char *)(a2 + 59), *(char *)(a2 + 46), *(char *)(a2 + 49), *(char *)(a2 + 65), *(char *)(a2 + 67), *(char *)(a2 + 69), *(char *)(a2 + 71), *(unsigned __int16 *)(a2 + 204));
            uint64_t v23 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v24 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              int v39 = v24;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"LinkLe AvgRSSI [0x%4x] [ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ] LinkCl [0x%4x] AvgRSSI[ %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d %3d ]", *(char *)(a2 + 167), *(char *)(a2 + 166), *(char *)(a2 + 165), v25, *(char *)(a2 + 161), *(char *)(a2 + 94), *(char *)(a2 + 95), *(unsigned __int16 *)(a2 + 204));
            uint64_t v26 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v27 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              int v39 = v27;
              _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"LinkLe PktCnt [0x%4x] [ 1M %3d %3d, 2M %3d %3d ] LinkCl [0x%4x] PktCnt[ DH1 %3d %3d, DH3 %3d %3d, DH5 %3d %3d, 2/4DH1 %3d %3d, 2/4DH3 %3d %3d, 2/4DH5 %3d %3d, 3/8DH1 %3d %3d, 3/8DH3 %3d %3d, 3/8Dh5 %3d %3d ]", *(unsigned __int8 *)(a2 + 189), *(unsigned __int8 *)(a2 + 190), *(unsigned __int8 *)(a2 + 191), *(unsigned __int8 *)(a2 + 192), *(unsigned __int8 *)(a2 + 193), *(unsigned __int8 *)(a2 + 194), *(unsigned __int8 *)(a2 + 195), *(unsigned __int16 *)(a2 + 204));
            uint64_t v28 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
            {
              int v29 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              int v39 = v29;
              _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
        int v30 = v8;
        int v3 = v9 + v33;
        int v4 = v30 + v32;
        sub_10016E2E0(a1, *(unsigned __int8 *)(a2 + 20), *(unsigned __int8 *)(a2 + 29), v9 + v33, v30 + v32, *(unsigned __int16 *)(a2 + 12), *(unsigned __int16 *)(a2 + 14), (100* *(unsigned __int16 *)(a2 + 23)/ (*(unsigned __int16 *)(a2 + 21) + *(unsigned __int16 *)(a2 + 23))), 100* *(unsigned __int16 *)(a2 + 27)/ (*(unsigned __int16 *)(a2 + 25) + *(unsigned __int16 *)(a2 + 27)), *(unsigned char *)(a2 + 18), 100* *(unsigned __int16 *)(a2 + 32)/ (*(unsigned __int16 *)(a2 + 30) + *(unsigned __int16 *)(a2 + 32)), 100* *(unsigned __int16 *)(a2 + 36)
        / (*(unsigned __int16 *)(a2 + 34) + *(unsigned __int16 *)(a2 + 36)),
          *(unsigned char *)(a2 + 16),
          0,
          *(unsigned char *)(a2 + 38));
      }
      ++v2;
    }
    while (v2 < (unsigned __int16)word_1009FF78A);
  }
  return 0;
}

void sub_1000E8D04(unsigned int a1)
{
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v37 = 0;
  unsigned int v35 = 0;
  if (sub_1000E7544(a1, &v35, &v36))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not find channel/peer ID for pipe ID %d", v2, v3, v4, v5, v6, v7, v8, a1);
      int v9 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v10 = v35;
    uint64_t v11 = **((void **)&xmmword_1009FF790 + v35);
    sub_100026C30((uint64_t)&v39);
    int v12 = sub_100262880((uint64_t)&v39);
    if (v12 - sub_100262880(*((void *)&xmmword_1009FF790 + v10) + 76) >= 0x3E8)
    {
      sub_100026C30(*((void *)&xmmword_1009FF790 + v10) + 76);
      uint64_t v13 = *((void *)&xmmword_1009FF790 + v10);
      if (*(_DWORD *)(v13 + 16))
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0;
        int v16 = 0;
        int v17 = 0;
        uint64_t v33 = v11;
        do
        {
          int v18 = sub_1001DD56C(*(unsigned __int16 *)(*(void *)(v13 + 8) + v14 + 52), &v38);
          uint64_t v13 = *((void *)&xmmword_1009FF790 + v10);
          if (!v18)
          {
            uint64_t v19 = *(void *)(v13 + 8) + v14;
            if (*(_DWORD *)(v38 + 80) != *(_DWORD *)(v19 + 72) || *(_DWORD *)(v38 + 84) != *(_DWORD *)(v19 + 76))
            {
              sub_10016E28C(v11, (_DWORD *)&v37 + 1, &v37);
              if (sub_100058654())
              {
                uint64_t v34 = *(unsigned __int16 *)(*(void *)(*((void *)&xmmword_1009FF790 + v10) + 8) + v14 + 52);
                sub_10016E25C(0);
                uint64_t v11 = v33;
                sub_100056E24((uint64_t)"Pipe[ 0x%4x, p %d, f %d, r %d, d %d] \tTx[ %d kbps, %d B ] \tRx[ %d kbps, %d B ] \tav[ %d, %d ]", v21, v22, v23, v24, v25, v26, v27, v34);
                uint64_t v28 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  int v29 = sub_100050714();
                  *(_DWORD *)buf = 136446210;
                  uint64_t v41 = v29;
                  _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
            }
            int v30 = *(_DWORD *)(v38 + 80);
            int v31 = *(_DWORD *)(v38 + 84);
            v17 += v30;
            v16 += v31;
            uint64_t v13 = *((void *)&xmmword_1009FF790 + v10);
            uint64_t v32 = *(void *)(v13 + 8) + v14;
            *(_DWORD *)(v32 + 72) = v30;
            *(_DWORD *)(v32 + 76) = v31;
          }
          ++v15;
          v14 += 88;
        }
        while (v15 < *(unsigned int *)(v13 + 16));
      }
      else
      {
        int v17 = 0;
        int v16 = 0;
      }
      sub_10016E71C(v11, v17, v16);
    }
  }
}

uint64_t sub_1000E8FC8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, size_t a5, int a6)
{
  uint64_t v6 = 101;
  if (!a4 || !a5) {
    return v6;
  }
  memset(v35, 0, sizeof(v35));
  if (sub_1000E79C8(a2) != -1)
  {
    uint64_t v6 = sub_1000226D0((uint64_t)v35, 1u);
    if (!v6)
    {
      unsigned int v13 = a6 ? 1 : 2;
      uint64_t v6 = sub_100022798((unsigned __int8 *)v35, a4, a5, v13);
      if (!v6)
      {
        uint64_t v6 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t))loc_1001DE1A4)(a1, a3, a2, v35, 1);
        if (sub_100017A14() && sub_1001F7D74() <= 0xE) {
          sub_1000E8D04(a3);
        }
        if (v6)
        {
          if (v6 != 410)
          {
            if (v6 != 412)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"CL send error on pipeID %d data size %d", v27, v28, v29, v30, v31, v32, v33, a3);
                uint64_t v34 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
                  sub_100745764();
                }
              }
              goto LABEL_26;
            }
            uint64_t v15 = a2;
            unsigned int v16 = a5;
            int v17 = 0;
LABEL_25:
            sub_1000E4F40(v15, v16, v17);
LABEL_26:
            sub_10025C480((uint64_t)v35);
            return v6;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"CL L2CAP pipe %d is already full, not enqueing data of %d", v18, v19, v20, v21, v22, v23, v24, a3);
            uint64_t v25 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v26 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v37 = v26;
              _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          uint64_t v15 = a2;
          unsigned int v16 = 0;
        }
        else
        {
          uint64_t v15 = a2;
          unsigned int v16 = a5;
        }
        int v17 = 1;
        goto LABEL_25;
      }
    }
  }
  if (a6) {
    sub_100023010(a4);
  }
  return v6;
}

uint64_t sub_1000E920C(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t result = 101;
  if (!a2 || !a3) {
    return result;
  }
  unsigned int v7 = sub_1000E79C8(a1);
  if (v7 == -1 || *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v7) + 48) < 7u) {
    return 101;
  }
  uint64_t v8 = sub_1000E79C8(a1);
  if (v8 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"invalid peer", v20, v21, v22, v23, v24, v25, v26, v62);
      uint64_t v27 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 414;
  }
  uint64_t v9 = v8;
  uint64_t v10 = *((void *)&xmmword_1009FF790 + v8);
  if (!v10)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v28, v29, v30, v31, v32, v33, v34, a1);
      unsigned int v35 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 414;
  }
  unsigned int v11 = *(unsigned __int8 *)(v10 + 48);
  if (v11 <= 6)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"peer is version %d, and does not support this command", v12, v13, v14, v15, v16, v17, v18, *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v9) + 48));
      uint64_t v19 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  if (v11 == 7) {
    int v36 = 2;
  }
  else {
    int v36 = 3;
  }
  unsigned int v37 = v36 + a3;
  uint64_t v38 = sub_100022FE8((v36 + a3));
  if (!v38) {
    return 106;
  }
  uint64_t v39 = v38;
  uint64_t v63 = v38;
  __int16 v64 = v36 + a3;
  unsigned __int16 v65 = v36 + a3;
  int v66 = 131073;
  unsigned char *v38 = -111;
  sub_1000E7A28(v9, (uint64_t *)&v63, a3);
  uint64_t v40 = (uint64_t)v63;
  uint64_t v41 = (unsigned __int16)v66;
  int v42 = HIBYTE(v66);
  if (HIBYTE(v66))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    int v43 = 0;
  }
  else
  {
    int v43 = v65 - (unsigned __int16)v66;
  }
  if (v43 < (int)a3)
  {
    uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= (dataLength)";
    goto LABEL_42;
  }
  if (BYTE2(v66) != 2)
  {
    uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1752, v61);
  }
  memmove((void *)(v40 + v41), a2, a3);
  if (v42)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Error creating rawData PDU", v44, v45, v46, v47, v48, v49, v50, v62);
      uint64_t v51 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100023010(v39);
    return 131;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Sending cl data of length %d to %p headersize %d", v52, v53, v54, v55, v56, v57, v58, a3);
      unsigned __int16 v59 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        int v60 = sub_100050714();
        *(_DWORD *)buf = 136446210;
        uint64_t v68 = v60;
        _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return sub_1000E7B60(a1, v39, v37, 1);
  }
}

uint64_t sub_1000E958C(unint64_t a1, unsigned char *a2)
{
  uint64_t v3 = sub_100197AF8(a1);
  unsigned int v4 = sub_1000E79C8(v3);
  uint64_t result = 414;
  if (v3 && v4 != -1)
  {
    int v6 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v4) + 48);
    if (v6)
    {
      uint64_t result = 0;
      *a2 = v6;
    }
    else
    {
      return 103;
    }
  }
  return result;
}

uint64_t sub_1000E95F0()
{
  if (byte_1009FFEF9) {
    return 11;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E9608(void *__s2, size_t size, int a3, uint64_t a4, char a5, int a6, char a7, char a8, long long *a9)
{
  if ((size - 1) > 0x1F || __s2 == 0 || a9 == 0) {
    return 101;
  }
  uint64_t v13 = a4;
  uint64_t v17 = &unk_1009FF000;
  int v18 = (unsigned __int16)word_1009FF810;
  if (word_1009FF810)
  {
    uint64_t v20 = (unsigned __int16)word_1009FF810;
    uint64_t v21 = &dword_1009FF824;
    do
    {
      if (*v21 == a3
        && *((unsigned __int8 *)v21 - 4) == size
        && !memcmp(*(const void **)(v21 - 3), __s2, size))
      {
        if (*((unsigned char *)v21 + 9)) {
          return 145;
        }
        else {
          return 119;
        }
      }
      v21 += 18;
      --v20;
    }
    while (v20);
    uint64_t v13 = a4;
    uint64_t v17 = (_WORD *)&unk_1009FF000;
    if (v18 != 24) {
      goto LABEL_20;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Reached max local services!", v22, v23, v24, v25, v26, v27, v28, v74);
      uint64_t v29 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 106;
  }
LABEL_20:
  uint64_t v30 = sub_100022FE8(size);
  if (!v30) {
    return 106;
  }
  uint64_t v31 = (uint64_t)v30;
  memmove(v30, __s2, size);
  uint64_t v32 = (unsigned __int16)v17[1032];
  uint64_t v33 = &qword_1009FF818[9 * v32];
  *uint64_t v33 = v31;
  *((unsigned char *)v33 + 8) = size;
  *((_DWORD *)v33 + 3) = a3;
  int v34 = 1;
  if (v32)
  {
    char v35 = a8;
    char v36 = a7;
    char v37 = a5;
    while (1)
    {
      char v38 = 0;
      uint64_t v39 = &word_1009FF82A;
      uint64_t v40 = v32;
      do
      {
        int v41 = (unsigned __int16)*v39;
        v39 += 36;
        v38 |= v41 == v34;
        --v40;
      }
      while (v40);
      if ((v38 & 1) == 0) {
        break;
      }
      if (++v34 == 0xFFFF)
      {
        LOWORD(v34) = -1;
        break;
      }
    }
  }
  else
  {
    char v35 = a8;
    char v36 = a7;
    char v37 = a5;
  }
  int v42 = &qword_1009FF818[9 * v32];
  *((_WORD *)v42 + 9) = v34;
  *((unsigned char *)v42 + 20) = v13;
  long long v43 = *a9;
  long long v44 = a9[1];
  v42[8] = *((void *)a9 + 4);
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  *((unsigned char *)v42 + 21) = 0;
  *((unsigned char *)v42 + 16) = v37;
  *((unsigned char *)v42 + 24) = a6;
  *((unsigned char *)v42 + 25) = v36;
  *((unsigned char *)v42 + 26) = v35;
  if (byte_1009FFF05) {
    int v45 = 0;
  }
  else {
    int v45 = a6;
  }
  if (v13 == 13 || v45)
  {
    if (v45)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Forcing ERTM enabled on a non-reliable pipe priority %d, disableReliable %d", v47, v48, v49, v50, v51, v52, v53, v13);
        uint64_t v54 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    char v46 = 0;
    LODWORD(v32) = (unsigned __int16)v17[1032];
  }
  else
  {
    char v46 = 1;
  }
  uint64_t v55 = &qword_1009FF818[9 * v32];
  *((unsigned char *)v55 + 22) = v46;
  *((unsigned char *)v55 + 23) = 0;
  v17[1032] = v32 + 1;
  if (word_1009FF78A)
  {
    unint64_t v56 = 0;
    if ((unsigned __int16)size >= 0xFu) {
      uint64_t v57 = 15;
    }
    else {
      uint64_t v57 = (unsigned __int16)size;
    }
    size_t __na = v57;
    int v79 = v13;
    do
    {
      if (sub_1000E74F4(**((void **)&xmmword_1009FF790 + v56)))
      {
        uint64_t v58 = *((void *)&xmmword_1009FF790 + v56);
        if (!*(unsigned char *)(v58 + 74))
        {
          if (sub_1000E7430(*(void *)v58))
          {
            if (v79 == 13)
            {
              if (sub_1000E37C0(**((void **)&xmmword_1009FF790 + v56), 1))
              {
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Force upgrade TS not ready C", v59, v60, v61, v62, v63, v64, v65, v74);
                  int v66 = sub_100050B4C(0x51u);
                  if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
                  {
                    v67 = sub_100050714();
                    *(_DWORD *)buf = 136446210;
                    v82 = v67;
                    _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                  }
                }
              }
            }
            sub_1000E9AD8(**((void **)&xmmword_1009FF790 + v56), *((unsigned __int16 *)&qword_1009FF818[9 * (unsigned __int16)word_1009FF810 - 6] - 3), __s2, (unsigned __int16)size, a3, (unsigned __int16)(word_1009FF810 - 1));
          }
          else
          {
            uint64_t v68 = *((void *)&xmmword_1009FF790 + v56);
            unsigned int v69 = *(_DWORD *)(v68 + 16);
            if (v69)
            {
              uint64_t v70 = 0;
              BOOL v71 = (byte_1009FF788 | memcmp("com.apple.BT.TS", __s2, __na)) == 0;
              uint64_t v72 = 88 * v69;
              while (1)
              {
                if (!v71)
                {
                  uint64_t v73 = *(void *)(v68 + 8) + v70;
                  if (sub_1000E9D78((_DWORD *)v73, __s2, size, a3)) {
                    break;
                  }
                }
                v70 += 88;
                if (v72 == v70) {
                  goto LABEL_62;
                }
              }
              __int16 v80 = *(_DWORD *)(v73 + 40);
              *(unsigned char *)(v73 + 54) = *((unsigned char *)&qword_1009FF818[9 * (unsigned __int16)word_1009FF810 - 6] - 4);
              sub_1000E9DF0(*(void *)v68, 1u, (uint64_t)&v80);
            }
          }
        }
      }
LABEL_62:
      ++v56;
    }
    while (v56 < (unsigned __int16)word_1009FF78A);
  }
  return 0;
}

uint64_t sub_1000E9AD8(uint64_t a1, unsigned int a2, const void *a3, unsigned int a4, char a5, unsigned int a6)
{
  unsigned int v12 = sub_1000E79C8(a1);
  if (v12 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not send accept channel, peer is invalid for handle %p", v20, v21, v22, v23, v24, v25, v26, a1);
      uint64_t v27 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 414;
  }
  else
  {
    unsigned int v13 = v12;
    if (sub_1000F1568(v12))
    {
      if (sub_1000F1704(v13, a3, a4, a1))
      {
        if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v13) + 48) <= 7u) {
          __int16 v14 = 2;
        }
        else {
          __int16 v14 = 3;
        }
        __int16 v15 = a4 + 5;
        unsigned __int16 v16 = a4 + 5 + v14;
        uint64_t v17 = sub_100022FE8(v16);
        if (v17)
        {
          int v18 = v17;
          *uint64_t v17 = 5;
          if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v13) + 48) < 8u)
          {
            unsigned int v19 = 2;
          }
          else
          {
            v17[2] = HIBYTE(v15);
            unsigned int v19 = 3;
          }
          v17[1] = v15;
          uint64_t v29 = &v17[v19];
          *(_WORD *)uint64_t v29 = a2;
          v29[2] = a5;
          uint64_t v30 = v19 | 4;
          v29[3] = a4;
          memmove(&v17[v30], a3, a4);
          uint64_t v31 = v30 + a4;
          v18[v31] = 0;
          uint64_t v32 = &qword_1009FF818[9 * a6];
          char v33 = *((unsigned char *)v32 + 22);
          v18[v31] = v33;
          v18[v31] = v33 | (2 * *((unsigned char *)v32 + 23));
          char v45 = 0;
          memset(v44, 0, sizeof(v44));
          __memcpy_chk();
          *((unsigned char *)v44 + a4) = 0;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Sending added service %d for %s to %p index %d", v34, v35, v36, v37, v38, v39, v40, a2);
            int v41 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136446210;
              long long v43 = sub_100050714();
              _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          return sub_1000E7B60(a1, v18, v16, 1);
        }
        else
        {
          return 106;
        }
      }
      else
      {
        return 153;
      }
    }
    else
    {
      return 152;
    }
  }
}

BOOL sub_1000E9D78(_DWORD *a1, const void *a2, size_t __n, int a4)
{
  if (a1[8] != __n || memcmp(a1, a2, __n)) {
    return 0;
  }
  int v7 = a1[9];
  if (a4 == 2 && v7 == 2 || a4 == 1 && !v7) {
    return 1;
  }
  return !a4 && v7 == 1;
}

void sub_1000E9DF0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (byte_1009FFED8)
  {
    if (a2)
    {
      unsigned int v6 = sub_1000E79C8(a1);
      if (v6 == -1)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Can not send services, peer is invalid for handle %p", v38, v39, v40, v41, v42, v43, v44, a1);
          char v45 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        unsigned int v7 = v6;
        if (sub_1000F1568(v6))
        {
          unsigned int v8 = 2;
          if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v7) + 48) <= 7u) {
            int v9 = 2;
          }
          else {
            int v9 = 3;
          }
          int v10 = (2 * a2) | 1;
          unsigned int v11 = v10 + v9;
          unsigned int v12 = (uint8_t *)sub_100022FE8((v10 + v9));
          if (v12)
          {
            unsigned int v13 = v12;
            uint64_t v14 = a2;
            *unsigned int v12 = 2;
            if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v7) + 48) >= 8u)
            {
              v12[2] = (unsigned __int16)a2 >> 7;
              unsigned int v8 = 3;
            }
            uint64_t v15 = 0;
            v12[1] = v10;
            v12[v8] = a2;
            unsigned int v16 = v8 + 2;
            do
            {
              uint64_t v17 = a3 + 2 * v15;
              v12[v16 - 1] = *(_WORD *)v17;
              v12[v16] = *(unsigned char *)(v17 + 1);
              ++v15;
              v16 += 2;
            }
            while (v14 != v15);
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Sending %d services back to %p, index %d", v18, v19, v20, v21, v22, v23, v24, v14);
              uint64_t v25 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 136446210;
                uint64_t v48 = sub_100050714();
                _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            uint64_t v26 = a1;
            uint64_t v27 = v13;
            unsigned int v28 = v11;
            int v29 = 1;
          }
          else
          {
            *(_WORD *)buf = 264;
            buf[2] = 7;
            uint64_t v27 = buf;
            uint64_t v26 = a1;
            unsigned int v28 = 3;
            int v29 = 0;
          }
          sub_1000E7B60(v26, v27, v28, v29);
        }
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No common services found.", v30, v31, v32, v33, v34, v35, v36, v46);
      uint64_t v37 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v48 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
}

BOOL sub_1000EA094()
{
  if (!word_1009FF810) {
    return 0;
  }
  if (byte_1009FF82C == 13) {
    return 1;
  }
  uint64_t v1 = &byte_1009FF874;
  uint64_t v2 = 1;
  do
  {
    unint64_t v3 = v2;
    if ((unsigned __int16)word_1009FF810 == v2) {
      break;
    }
    int v4 = *v1;
    v1 += 72;
    ++v2;
  }
  while (v4 != 13);
  return v3 < (unsigned __int16)word_1009FF810;
}

uint64_t sub_1000EA0F4(const void *a1, unsigned int a2, uint64_t a3, int a4)
{
  char v96 = 0;
  memset(v95, 0, sizeof(v95));
  if (a2 >= 0x20) {
    size_t v7 = 32;
  }
  else {
    size_t v7 = a2;
  }
  __memcpy_chk();
  *((unsigned char *)v95 + v7) = 0;
  uint64_t v8 = (unsigned __int16)word_1009FF810;
  if (word_1009FF810)
  {
    uint64_t v9 = 0;
    for (unint64_t i = &byte_1009FF82D;
          *(_DWORD *)(i - 9) != a3
       || v7 != *(i - 13)
       || memcmp(*(const void **)(i - 21), a1, v7);
          i += 72)
    {
      if (v8 == ++v9) {
        return 121;
      }
    }
    if (*i)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unregistering something pending unregistration", v68, v69, v70, v71, v72, v73, v74, v87);
        uint64_t v75 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 121;
    }
    *unint64_t i = 1;
    unsigned __int16 v11 = v9;
  }
  else
  {
    LODWORD(v9) = 0;
    unsigned __int16 v11 = 0;
  }
  if (v9 == v8) {
    return 121;
  }
  if (word_1009FF78A)
  {
    unint64_t v13 = 0;
    uint64_t v14 = &qword_1009FF818[9 * v11];
    unsigned int v90 = (__int16 *)v14 + 9;
    int v88 = (void (**)(void, uint64_t))(v14 + 6);
    v89 = (unsigned __int8 *)(v14 + 1);
    do
    {
      if (sub_1000E74F4(**((void **)&xmmword_1009FF790 + v13)))
      {
        uint64_t v15 = *((void *)&xmmword_1009FF790 + v13);
        if (!*(unsigned char *)(v15 + 74))
        {
          if (sub_1000E7430(*(void *)v15))
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Central removing service %d named %s to %d with priority %d", v16, v17, v18, v19, v20, v21, v22, (unsigned __int16)*v90);
              uint64_t v23 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v24 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                int v92 = v24;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            if (a4 == 13)
            {
              uint64_t v25 = *((void *)&xmmword_1009FF790 + v13);
              *(unsigned char *)(v25 + 75) = 0;
              if (sub_1000E37C0(*(void *)v25, 0))
              {
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Force upgrade TS not ready D", v26, v27, v28, v29, v30, v31, v32, v87);
                  uint64_t v33 = sub_100050B4C(0x51u);
                  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v34 = sub_100050714();
                    *(_DWORD *)buf = 136446210;
                    int v92 = v34;
                    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                  }
                }
              }
            }
            sub_1000EA758(v13, *v90, (const void *)qword_1009FF818[9 * v11], *v89);
            uint64_t v35 = *((void *)&xmmword_1009FF790 + v13);
            unsigned int v36 = *(_DWORD *)(v35 + 16);
            if (!v36) {
              goto LABEL_44;
            }
            uint64_t v37 = 0;
            int v38 = 0;
            uint64_t v39 = *(void *)(v35 + 8);
            uint64_t v40 = 88 * v36;
            while (!sub_1000EA8F4((_DWORD *)(v39 + v37), v11))
            {
              ++v38;
              v37 += 88;
              if (v40 == v37) {
                goto LABEL_44;
              }
            }
            *(_DWORD *)(v39 + v37 + 44) = 2;
            if (*v88)
            {
              (*v88)(*(unsigned __int16 *)(v39 + v37 + 52), 5102);
              uint64_t v39 = *(void *)(*((void *)&xmmword_1009FF790 + v13) + 8);
            }
            uint64_t v46 = *(void *)(v39 + v37 + 64);
            if (v46)
            {
              sub_1001DEC18(v46);
              uint64_t v39 = *(void *)(*((void *)&xmmword_1009FF790 + v13) + 8);
            }
            *(void *)(v39 + v37 + 64) = 0;
            if (*(_DWORD *)(*((void *)&xmmword_1009FF790 + v13) + 16) == v38)
            {
LABEL_44:
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Pipe associated with service to unregister no longer exists", v47, v48, v49, v50, v51, v52, v53, v87);
                uint64_t v54 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v55 = sub_100050714();
                  *(_DWORD *)buf = 136446466;
                  int v92 = v55;
                  __int16 v93 = 1024;
                  int v94 = 0xFFFF;
                  _os_log_error_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
                }
              }
            }
          }
          else
          {
            uint64_t v41 = *((void *)&xmmword_1009FF790 + v13);
            unsigned int v42 = *(_DWORD *)(v41 + 16);
            if (v42)
            {
              uint64_t v43 = 0;
              uint64_t v44 = *(void *)(v41 + 8);
              uint64_t v45 = 88 * v42;
              while (!sub_1000EA968(v44 + v43, v11))
              {
                v43 += 88;
                if (v45 == v43) {
                  goto LABEL_18;
                }
              }
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Peripheral removing service %d named %s to peer %d with priority %d", v56, v57, v58, v59, v60, v61, v62, (unsigned __int16)*v90);
                uint64_t v63 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v64 = sub_100050714();
                  *(_DWORD *)buf = 136446210;
                  int v92 = v64;
                  _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              uint64_t v65 = *(void *)(*((void *)&xmmword_1009FF790 + v13) + 8) + v43;
              *(_DWORD *)(v65 + 44) = 2;
              sub_1000EA758(v13, *(_DWORD *)(v65 + 40), (const void *)v65, *(unsigned __int16 *)(v65 + 32));
              if (*v88) {
                (*v88)(*(unsigned __int16 *)(*(void *)(*((void *)&xmmword_1009FF790 + v13) + 8) + v43 + 52), 5102);
              }
              uint64_t v66 = *(void *)(*((void *)&xmmword_1009FF790 + v13) + 8);
              uint64_t v67 = *(void *)(v66 + v43 + 64);
              if (v67)
              {
                sub_1001DEC18(v67);
                uint64_t v66 = *(void *)(*((void *)&xmmword_1009FF790 + v13) + 8);
              }
              *(void *)(v66 + v43 + 64) = 0;
            }
          }
        }
      }
LABEL_18:
      ++v13;
    }
    while (v13 < (unsigned __int16)word_1009FF78A);
  }
  else
  {
    uint64_t v76 = &qword_1009FF818[9 * v9];
    uint64_t v77 = (void (*)(const void *, size_t, uint64_t))v76[8];
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unregistering service immediately because no peer is connected", v78, v79, v80, v81, v82, v83, v84, v87);
      int v85 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        int v92 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_100023010((void *)*v76);
    int v86 = &qword_1009FF818[9 * (unsigned __int16)--word_1009FF810];
    memmove(v76, v86, 0x48uLL);
    *(_OWORD *)int v86 = 0u;
    *((_OWORD *)v86 + 1) = 0u;
    *((_OWORD *)v86 + 2) = 0u;
    *((_OWORD *)v86 + 3) = 0u;
    v86[8] = 0;
    if (v77) {
      v77(a1, v7, a3);
    }
  }
  sub_1000F20D8();
  return 0;
}

uint64_t sub_1000EA758(uint64_t a1, __int16 a2, const void *a3, unsigned int a4)
{
  uint64_t v8 = **((void **)&xmmword_1009FF790 + a1);
  uint64_t result = sub_1000F1568(a1);
  if (result)
  {
    uint64_t result = sub_1000F1704(a1, a3, a4, v8);
    if (result)
    {
      unsigned int v10 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + a1) + 48);
      unsigned __int16 v11 = v10 <= 7 ? 4 : 5;
      size_t v12 = v10 <= 7 ? 4 : 5;
      uint64_t result = (uint64_t)sub_100022FE8(v12);
      if (result)
      {
        unint64_t v13 = (void *)result;
        *(unsigned char *)uint64_t result = 6;
        unsigned int v14 = 2;
        if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + a1) + 48) >= 8u)
        {
          *(unsigned char *)(result + 2) = 0;
          unsigned int v14 = 3;
        }
        *(unsigned char *)(result + 1) = 2;
        *(_WORD *)(result + v14) = a2;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Sending service removed for peerID %d serviceID %d index %d", v15, v16, v17, v18, v19, v20, v21, a1);
          uint64_t v22 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            uint64_t v24 = sub_100050714();
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        return sub_1000E7B60(v8, v13, v11, 1);
      }
    }
  }
  return result;
}

BOOL sub_1000EA8F4(_DWORD *a1, unsigned int a2)
{
  unsigned int v2 = a1[8];
  unint64_t v3 = &qword_1009FF818[9 * a2];
  if (v2 != *((unsigned __int8 *)v3 + 8) || a1[9] != HIDWORD(qword_1009FF818[9 * a2 + 1])) {
    return 0;
  }
  if (v2 >= 0x20) {
    size_t v4 = 32;
  }
  else {
    size_t v4 = v2;
  }
  return memcmp(a1, (const void *)*v3, v4) == 0;
}

BOOL sub_1000EA968(uint64_t a1, unsigned int a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 32);
  unint64_t v3 = &qword_1009FF818[9 * a2];
  if (v2 != *((unsigned __int8 *)v3 + 8) || BYTE6(qword_1009FF818[9 * a2 + 2]) != *(unsigned __int8 *)(a1 + 56)) {
    return 0;
  }
  int v4 = HIDWORD(qword_1009FF818[9 * a2 + 1]);
  if (!v4)
  {
    if (*(_DWORD *)(a1 + 36) == 1) {
      goto LABEL_9;
    }
    return 0;
  }
  if (v4 == 1)
  {
    if (!*(_DWORD *)(a1 + 36)) {
      goto LABEL_9;
    }
    return 0;
  }
  if (v4 != 2 || *(_DWORD *)(a1 + 36) != 2) {
    return 0;
  }
LABEL_9:
  if (v2 >= 0x20) {
    size_t v5 = 32;
  }
  else {
    size_t v5 = v2;
  }
  return memcmp((const void *)a1, (const void *)*v3, v5) == 0;
}

uint64_t sub_1000EAA20(uint64_t a1)
{
  uint64_t v1 = sub_1000E79C8(a1);
  if (v1 == -1) {
    return 0;
  }
  uint64_t v2 = v1;
  if (!*(unsigned char *)(*((void *)&xmmword_1009FF790 + v1) + 48)) {
    return 0;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"peerID=%d version=%d", v3, v4, v5, v6, v7, v8, v9, v2);
    unsigned int v10 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      unint64_t v13 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return 1;
}

void sub_1000EAB1C(uint64_t a1, int a2)
{
  unsigned int v4 = sub_1000E79C8(a1);
  if (v4 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not update flush, peer lookup was invalid", v28, v29, v30, v31, v32, v33, v34, v36);
      uint64_t v35 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    uint64_t v11 = *((void *)&xmmword_1009FF790 + v4);
    if (*(unsigned char *)(v11 + 75) && *(_DWORD *)(v11 + 16))
    {
      unint64_t v12 = 0;
      uint64_t v13 = v4;
      uint64_t v14 = 64;
      do
      {
        uint64_t v15 = *(void *)(v11 + 8);
        if (v15 && *(void *)(v15 + v14) && *(unsigned char *)(v15 + v14 - 10) == 13)
        {
          if (a2)
          {
            uint64_t v16 = sub_1001707DC(a1, 200, v5, v6, v7, v8, v9, v10);
            if (v16)
            {
              uint64_t v17 = v16;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Flush status failed with %!", v18, v5, v6, v7, v8, v9, v10, v17);
                uint64_t v19 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
                  sub_100745878();
                }
              }
            }
            else
            {
              *(_WORD *)(sub_1001E6484(*(unsigned int **)(*(void *)(*((void *)&xmmword_1009FF790 + v13) + 8) + v14))
                       + 38) = 200;
            }
          }
          else
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"We downgraded while servicing a reserved priority pipe", v20, v21, v22, v23, v24, v25, v26, v36);
              uint64_t v27 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
                sub_100745878();
              }
            }
            *(_WORD *)(sub_1001E6484(*(unsigned int **)(*(void *)(*((void *)&xmmword_1009FF790 + v13) + 8) + v14))
                     + 38) = -1;
          }
        }
        ++v12;
        uint64_t v11 = *((void *)&xmmword_1009FF790 + v13);
        v14 += 88;
      }
      while (v12 < *(unsigned int *)(v11 + 16));
    }
  }
}

void sub_1000EAD3C()
{
  if (word_1009FF78A)
  {
    bzero(v36, 0x400uLL);
    unint64_t v0 = 0;
    int v1 = 1;
    do
    {
      uint64_t v2 = *((void *)&xmmword_1009FF790 + v0);
      if (v2)
      {
        if (*(void *)(v2 + 8) && (int v3 = *(_DWORD *)(v2 + 16)) != 0)
        {
          unsigned int v4 = &v36[(unsigned __int16)v1];
          *unsigned int v4 = v3;
          v4[1] = **(unsigned char **)v2;
          v4[2] = *(unsigned char *)(*(void *)v2 + 1);
          uint64_t v5 = (unsigned __int16 *)sub_10016F308(*(unsigned __int16 *)(*(void *)(v2 + 8) + 52));
          if (v5)
          {
            unsigned int v6 = *v5;
            unsigned int v7 = v6 >> 8;
          }
          else
          {
            LOBYTE(v6) = 0;
            LOBYTE(v7) = 0;
          }
          uint64_t v8 = &v36[(unsigned __int16)v1 + 3];
          *uint64_t v8 = v6;
          v8[1] = v7;
          int v9 = v1 + 5;
          uint64_t v10 = *((void *)&xmmword_1009FF790 + v0);
          if (*(_DWORD *)(v10 + 16))
          {
            uint64_t v11 = 0;
            unint64_t v12 = 0;
            while ((unsigned __int16)v9 < 0x3DCu)
            {
              char v35 = 0;
              *(_OWORD *)__s = 0u;
              long long v34 = 0u;
              uint64_t v13 = *(void *)(v10 + 8) + v11;
              if (*(unsigned char *)v13 && (*(_DWORD *)(v13 + 32) - 1) <= 0x1F) {
                __strncpy_chk();
              }
              else {
                __strlcpy_chk();
              }
              size_t v14 = strlen(__s);
              int v15 = v14;
              uint64_t v16 = *((void *)&xmmword_1009FF790 + v0);
              uint64_t v17 = &v36[(unsigned __int16)v9];
              *uint64_t v17 = *(unsigned char *)(*(void *)(v16 + 8) + v11 + 52);
              v17[1] = *(unsigned char *)(*(void *)(v16 + 8) + v11 + 53);
              uint64_t v18 = *(void *)(*(void *)(v16 + 8) + v11 + 64);
              if (v18) {
                char v19 = *(unsigned char *)(*(void *)(v18 + 112) + 8);
              }
              else {
                char v19 = 0;
              }
              uint64_t v20 = &v36[(unsigned __int16)v9 + 2];
              *uint64_t v20 = v19;
              uint64_t v21 = *(void *)(*(void *)(v16 + 8) + v11 + 64);
              if (v21) {
                LOBYTE(v21) = *(unsigned char *)(*(void *)(v21 + 112) + 9);
              }
              v20[1] = v21;
              uint64_t v22 = &v36[(unsigned __int16)v9];
              int v23 = v9 + 5;
              v22[4] = v14;
              memmove(&v36[(unsigned __int16)v23], __s, v14);
              int v9 = v23 + v15;
              ++v12;
              uint64_t v10 = *((void *)&xmmword_1009FF790 + v0);
              v11 += 88;
              if (v12 >= *(unsigned int *)(v10 + 16)) {
                goto LABEL_27;
              }
            }
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"PacketLogger magnet content exceeds MAX buffer size", v24, v25, v26, v27, v28, v29, v30, v32);
              uint64_t v31 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
                sub_100745878();
              }
            }
          }
LABEL_27:
          sub_100116640(v36, (unsigned __int16)v9);
          int v1 = 0;
        }
        else
        {
          sub_10025B778("\t\tNo Channels\n");
        }
      }
      ++v0;
    }
    while (v0 < (unsigned __int16)word_1009FF78A);
  }
}

uint64_t sub_1000EB00C(uint64_t a1)
{
  unsigned int v1 = sub_1000E79C8(a1);
  if (v1 == -1) {
    return 0;
  }
  else {
    return (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v1) + 52) >> 4) & 1;
  }
}

uint64_t sub_1000EB048()
{
  return (dword_1009FFEFC >> 4) & 1;
}

uint64_t sub_1000EB058(uint64_t result)
{
  byte_1009FFF05 = result;
  return result;
}

uint64_t sub_1000EB064(uint64_t result, __int16 a2, __int16 a3, __int16 a4)
{
  word_1009FFF06 = result;
  word_1009FFF08 = a2;
  word_1009FFF0A = a3;
  word_1009FFF0C = a4;
  return result;
}

uint64_t sub_1000EB088(uint64_t a1)
{
  unsigned int v2 = sub_1000E79C8(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100745764();
    return 0;
  }
  uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
  if (v3) {
    return *(unsigned __int8 *)(v3 + 52) >> 7;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v13, v14, v15, v16, v17, v18, v19, a1);
    uint64_t v20 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000EB160(uint64_t a1)
{
  unsigned int v2 = sub_1000E79C8(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100745764();
    return 0;
  }
  uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
  if (v3) {
    return *(unsigned char *)(v3 + 53) & 1;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v13, v14, v15, v16, v17, v18, v19, a1);
    uint64_t v20 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000EB238(uint64_t a1)
{
  unsigned int v2 = sub_1000E79C8(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100745764();
    return 0;
  }
  uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
  if (!v3)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v13, v14, v15, v16, v17, v18, v19, a1);
    uint64_t v20 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100744F6C();
    return 0;
  }
  return (dword_1009FFEFC & 0x100) != 0 && (*(unsigned char *)(v3 + 52) & 0x80) != 0
      || (dword_1009FFEFC & 0x80) != 0 && (*(unsigned char *)(v3 + 53) & 1) != 0;
}

uint64_t sub_1000EB32C(uint64_t a1)
{
  unsigned int v2 = sub_1000E79C8(a1);
  if (v2 == -1)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"invalid peer", v5, v6, v7, v8, v9, v10, v11, v21);
    unint64_t v12 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100745764();
    return 0;
  }
  uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
  if (!v3)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v13, v14, v15, v16, v17, v18, v19, a1);
    uint64_t v20 = sub_100050B4C(0x51u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100744F6C();
    return 0;
  }
  return (dword_1009FFEFC & 0x100) != 0 && (*(unsigned char *)(v3 + 52) & 0x80) != 0;
}

uint64_t sub_1000EB414(uint64_t result)
{
  dword_1009FFF00 = result;
  return result;
}

uint64_t sub_1000EB420()
{
  sub_10025B778("BT_CL Peers (lNbPeers=%d:\n", (unsigned __int16)word_1009FF78A);
  int v0 = qword_1009FFEF0;
  if (qword_1009FFEF0) {
    int v0 = sub_100059E10(qword_1009FFEF0);
  }
  sub_10025B778("lPacketQueue size:%d", v0);
  sub_10025B778("lCanSend=%B", (byte_1009FFEE8 & 1) == 0);
  if (word_1009FF78A)
  {
    unint64_t v1 = 0;
    do
    {
      uint64_t v2 = *((void *)&xmmword_1009FF790 + v1);
      if (v2)
      {
        sub_10025B778("\tPeer %d: channels=%d handle=%p m1=%d m2=%d t1=%d GMTdelta=%d version=%d supportedFeatures=%ld powerAssertHeld=%d active=%d centralPendingVersion=%d :\n", v1, *(_DWORD *)(v2 + 16), *(const void **)v2, *(void *)(v2 + 20), *(void *)(v2 + 28), *(void *)(v2 + 36), *(_DWORD *)(v2 + 44), *(unsigned __int8 *)(v2 + 48), *(unsigned int *)(v2 + 52), *(unsigned __int8 *)(v2 + 72), *(unsigned __int8 *)(v2 + 73), *(unsigned __int8 *)(v2 + 74));
        uint64_t v3 = *((void *)&xmmword_1009FF790 + v1);
        if (*(void *)(v3 + 8))
        {
          if (*(_DWORD *)(v3 + 16))
          {
            uint64_t v4 = 0;
            unint64_t v5 = 0;
            do
            {
              LOBYTE(v22) = 0;
              long long v20 = 0u;
              long long v21 = 0u;
              uint64_t v6 = *(void *)(v3 + 8) + v4;
              if (*(unsigned char *)v6 && (*(_DWORD *)(v6 + 32) - 1) <= 0x1F) {
                __strncpy_chk();
              }
              else {
                __strlcpy_chk();
              }
              uint64_t v7 = *((void *)&xmmword_1009FF790 + v1);
              uint64_t v8 = *(void *)(v7 + 8) + v4;
              sub_10025B778("\t\tchannel %d: SvcName=%s svcType:%d svcID=%d pipeID=%d priority=%d pendingEnc=%d useErtm=%d useFCS=%d l2capChannel=%p bytesSent:%llu bytesReceived:%llu lastSeenActivity:%llu\n", v5++, (const char *)&v20, *(_DWORD *)(v8 + 36), *(_DWORD *)(v8 + 40), *(unsigned __int16 *)(v8 + 52), *(unsigned __int8 *)(v8 + 54), *(unsigned __int8 *)(v8 + 55), *(unsigned __int8 *)(v8 + 56), *(unsigned __int8 *)(v8 + 57), *(const void **)(v8 + 64), *(unsigned int *)(v7 + 92), *(unsigned int *)(v7 + 96), *(void *)(v7 + 112));
              uint64_t v3 = *((void *)&xmmword_1009FF790 + v1);
              v4 += 88;
            }
            while (v5 < *(unsigned int *)(v3 + 16));
          }
        }
        else
        {
          sub_10025B778("\t\tNo Channels\n");
        }
      }
      ++v1;
    }
    while (v1 < (unsigned __int16)word_1009FF78A);
  }
  sub_10025B778("BT_CL LocalServices (lNbServices=%d:\n", (unsigned __int16)word_1009FF810);
  uint64_t v9 = 0;
  uint64_t v10 = &byte_1009FF828;
  do
  {
    char v24 = 0;
    memset(v23, 0, sizeof(v23));
    if (*((void *)v10 - 2) && *(v10 - 8) - 1 <= 0x1F) {
      __strncpy_chk();
    }
    else {
      __strlcpy_chk();
    }
    int v11 = *v10;
    int v12 = *((unsigned __int16 *)v10 + 1);
    int v13 = v10[4];
    int v14 = v10[5];
    int v15 = v10[6];
    int v16 = v10[7];
    int v17 = *((_DWORD *)v10 - 1);
    long long v18 = *((_OWORD *)v10 + 2);
    long long v20 = *((_OWORD *)v10 + 1);
    long long v21 = v18;
    uint64_t v22 = *((void *)v10 + 6);
    uint64_t result = sub_10025B778("\tLocalService %ld : name=%s serviceType=%d requiresEnc=%d serviceID=%d priority=%d unpublishing=%d useErtm=%d useFCS=%d callbacks=%p\n", v9++, (const char *)v23, v17, v11, v12, v13, v14, v15, v16, &v20);
    v10 += 72;
  }
  while (v9 != 24);
  return result;
}

uint64_t sub_1000EB748(uint64_t result)
{
  dword_1009F8E88 = result;
  return result;
}

uint64_t sub_1000EB754(uint64_t result)
{
  byte_1009FF788 = result;
  return result;
}

void sub_1000EB764(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E79C8((uint64_t)a1);
  if (v4 != -1)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *((void *)&xmmword_1009FF790 + v4);
    uint64_t v7 = v4;
    if (*(unsigned char *)(v6 + 48) == 1 && byte_1009FFEF9 != 0)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Disabling LE magnet TS workaround for peerID %d", v9, v10, v11, v12, v13, v14, v15, v5);
        int v16 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          int v23 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_1001F90A0();
      uint64_t v6 = *((void *)&xmmword_1009FF790 + v7);
    }
    if (*(_DWORD *)(v6 + 16))
    {
      unint64_t v17 = 0;
      do
      {
        uint64_t v18 = *(void *)(*(void *)(v6 + 8) + 88 * v17 + 64);
        if (v18) {
          sub_1001DEC18(v18);
        }
        if (word_1009FF810)
        {
          unint64_t v19 = 0;
          long long v20 = &qword_1009FF848;
          do
          {
            if (sub_1000E7430((uint64_t)a1)
              && (uint64_t v21 = *(void *)(*((void *)&xmmword_1009FF790 + v7) + 8),
                  sub_1000EA8F4((_DWORD *)(v21 + 88 * v17), v19))
              || !sub_1000E7430((uint64_t)a1)
              && (uint64_t v21 = *(void *)(*((void *)&xmmword_1009FF790 + v7) + 8),
                  sub_1000EA968(v21 + 88 * v17, v19)))
            {
              if (*v20) {
                ((void (*)(void, uint64_t))*v20)(*(unsigned __int16 *)(v21 + 88 * v17 + 52), a2);
              }
            }
            ++v19;
            v20 += 9;
          }
          while (v19 < (unsigned __int16)word_1009FF810);
        }
        ++v17;
        uint64_t v6 = *((void *)&xmmword_1009FF790 + v7);
      }
      while (v17 < *(unsigned int *)(v6 + 16));
    }
    if (*(unsigned char *)(v6 + 72)) {
      sub_1000EB9F4(a1);
    }
    sub_1000EBB10((uint64_t)a1);
    sub_1000F20D8();
  }
}

void sub_1000EB980(uint64_t a1)
{
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"_LE_MagnetSuspendEnable %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_1000EB9F4(unsigned __int16 *a1)
{
  unsigned int v2 = sub_1000E79C8((uint64_t)a1);
  if (v2 == -1) {
    sub_10025B8C0();
  }
  if (!*(unsigned char *)(*((void *)&xmmword_1009FF790 + v2) + 72)) {
    sub_10025B8C0();
  }
  if (v2 != -1)
  {
    uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
    if (*(unsigned char *)(v3 + 72))
    {
      *(unsigned char *)(v3 + 72) = 0;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"DeassertPower for lm 0x%4x", v4, v5, v6, v7, v8, v9, v10, *a1);
        uint64_t v11 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v13 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_10010C838();
    }
  }
}

void sub_1000EBB10(uint64_t a1)
{
  unsigned int v1 = (unsigned __int16)word_1009FF78A;
  if (word_1009FF78A)
  {
    uint64_t v2 = 0;
    while (**((void **)&xmmword_1009FF790 + v2) != a1)
    {
      if ((unsigned __int16)word_1009FF78A == ++v2) {
        goto LABEL_12;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Removing peer ID %d for handle %p", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v13 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    --word_1009FF78A;
    uint64_t v11 = (void **)*((void *)&xmmword_1009FF790 + v2);
    if (v11[1])
    {
      sub_100023010(v11[1]);
      uint64_t v11 = (void **)*((void *)&xmmword_1009FF790 + v2);
    }
    sub_100023010(v11);
    unsigned int v1 = (unsigned __int16)word_1009FF78A;
    *((void *)&xmmword_1009FF790 + v2) = *((void *)&xmmword_1009FF790 + (unsigned __int16)word_1009FF78A);
  }
LABEL_12:
  if (!dword_100A1525C)
  {
    sub_1000E4EA4();
    unsigned int v1 = (unsigned __int16)word_1009FF78A;
  }
  if (v1 >= 0x10) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 783, "lNbPeers < MAX_PEERS");
  }
}

void sub_1000EBC80(uint64_t a1, int a2, int a3)
{
  if (!a2)
  {
    if (a3)
    {
      unsigned int v4 = sub_1000E79C8(a1);
      if (v4 != -1)
      {
        unsigned int v5 = v4;
        if (sub_100237AD0((_DWORD *)(a1 + 48)))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Got encrypted but pairing is still in progress, waiting for pairing completion", v6, v7, v8, v9, v10, v11, v12, *(uint64_t *)v14);
            uint64_t v13 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)uint64_t v14 = 136446210;
              *(void *)&uint8_t v14[4] = sub_100050714();
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", v14, 0xCu);
            }
          }
        }
        else
        {
          sub_1000EBE08(a1, v5);
        }
      }
    }
  }
}

void sub_1000EBDA4(_DWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4 = sub_100197B34(a1);
  if (!a3)
  {
    uint64_t v5 = v4;
    if (v4)
    {
      unsigned int v6 = sub_1000E79C8(v4);
      if (v6 != -1)
      {
        sub_1000EBE08(v5, v6);
      }
    }
  }
}

void sub_1000EBE08(uint64_t a1, unsigned int a2)
{
  memset(v17, 0, sizeof(v17));
  memset(v16, 0, sizeof(v16));
  uint64_t v4 = a2;
  if (sub_1000E7430(a1))
  {
    if (*(unsigned char *)(*((void *)&xmmword_1009FF790 + a2) + 74)) {
      return;
    }
    unsigned int v5 = (unsigned __int16)word_1009FF810;
    if (word_1009FF810)
    {
      unint64_t v6 = 0;
      uint64_t v7 = &dword_1009FF824;
      do
      {
        if (!*((unsigned char *)v7 + 9) && *((unsigned char *)v7 + 4))
        {
          if (*((unsigned __int8 *)v7 - 4) >= 0x20u) {
            unsigned int v8 = 32;
          }
          else {
            unsigned int v8 = *((unsigned __int8 *)v7 - 4);
          }
          sub_1000E9AD8(a1, *((unsigned __int16 *)v7 + 3), *(const void **)(v7 - 3), v8, *v7, (unsigned __int16)v6);
          unsigned int v5 = (unsigned __int16)word_1009FF810;
        }
        ++v6;
        v7 += 18;
      }
      while (v6 < v5);
    }
  }
  uint64_t v9 = *((void *)&xmmword_1009FF790 + v4);
  if (*(_DWORD *)(v9 + 16))
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = *(void *)(v9 + 8) + v10;
      if (*(unsigned char *)(v13 + 55))
      {
        *(unsigned char *)(v13 + 55) = 0;
        BOOL v14 = sub_1000E7430(a1);
        uint64_t v9 = *((void *)&xmmword_1009FF790 + v4);
        uint64_t v15 = *(void *)(v9 + 8) + v10;
        if (v14) {
          *((void *)v16 + v12) = v15;
        }
        else {
          *((_WORD *)v17 + v12) = *(_DWORD *)(v15 + 40);
        }
        uint64_t v12 = (v12 + 1);
      }
      ++v11;
      v10 += 88;
    }
    while (v11 < *(unsigned int *)(v9 + 16));
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (*(unsigned __int8 *)(v9 + 48) >= 7u) {
    sub_1000EBFE8(a1);
  }
  if (sub_1000E7430(a1)) {
    sub_1000EC3AC(a1, v12, (uint64_t *)v16);
  }
  else {
    sub_1000E9DF0(a1, v12, (uint64_t)v17);
  }
}

void sub_1000EBFE8(uint64_t a1)
{
  uint64_t v2 = sub_1000E79C8(a1);
  if (v2 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"invalid peer", v14, v15, v16, v17, v18, v19, v20, v48);
      uint64_t v21 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return;
  }
  uint64_t v3 = v2;
  uint64_t v4 = *((void *)&xmmword_1009FF790 + v2);
  if (!v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v22, v23, v24, v25, v26, v27, v28, a1);
      uint64_t v29 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        goto LABEL_6;
      }
    }
    return;
  }
  unsigned int v5 = *(unsigned __int8 *)(v4 + 48);
  if (v5 > 6)
  {
    if (v5 == 7) {
      __int16 v30 = 2;
    }
    else {
      __int16 v30 = 3;
    }
    if (v5 == 7) {
      size_t v31 = 10;
    }
    else {
      size_t v31 = 11;
    }
    uint64_t v32 = sub_100022FE8(v31);
    if (!v32) {
      return;
    }
    uint64_t v33 = v32;
    uint64_t v49 = v32;
    __int16 v50 = v31;
    unsigned __int16 v51 = v31;
    int v52 = 131073;
    *uint64_t v32 = -112;
    sub_1000E7A28(v3, (uint64_t *)&v49, v31 - v30);
    if (HIBYTE(v52))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c");
    }
    else
    {
      int v34 = v51;
      __int16 v35 = v52;
      if (v51 - (unsigned __int16)v52 > 1)
      {
        if (BYTE2(v52) == 2)
        {
          uint64_t v36 = (uint64_t)v49;
          *(_WORD *)&v49[(unsigned __int16)v52] = word_1009FFF06;
          if (v34 - (unsigned __int16)(v35 + 2) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1701, "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          *(_WORD *)(v36 + (unsigned __int16)(v35 + 2)) = word_1009FFF08;
          if (v34 - (unsigned __int16)(v35 + 4) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1702, "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          *(_WORD *)(v36 + (unsigned __int16)(v35 + 4)) = word_1009FFF0A;
          unsigned __int16 v37 = v35 + 6;
          if (v34 - v37 <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1703, "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          *(_WORD *)(v36 + v37) = word_1009FFF0C;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Sending Device ID with vendor 0x%x product 0x%x version 0x%x chip 0x%x to %p", v38, v39, v40, v41, v42, v43, v44, (unsigned __int16)word_1009FFF06);
            uint64_t v45 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v46 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v54 = v46;
              _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          sub_1000E7B60(a1, v33, (unsigned __int16)v31, 1);
          return;
        }
        uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1700, v47);
      }
    }
    uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_34;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"peer is version %d, and does not support this command", v6, v7, v8, v9, v10, v11, v12, *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v3) + 48));
    uint64_t v13 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_6:
    }
      sub_100744F6C();
  }
}

void sub_1000EC3AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not send create channel, peer is invalid for handle %p", v58, v59, v60, v61, v62, v63, v64, a1);
      uint64_t v65 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    unsigned int v7 = v6;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Sending create channel for %d service to %p", v8, v9, v10, v11, v12, v13, v14, a2);
      uint64_t v15 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v69 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (a2)
    {
      uint64_t v16 = v7;
      uint64_t v17 = &xmmword_1009FF790;
      uint64_t v18 = a2;
      unsigned int v67 = v7;
      do
      {
        if ((dword_1009FFEFC & 0x10) != 0 && (*(unsigned char *)(*((void *)v17 + v16) + 52) & 0x10) != 0) {
          unsigned int v19 = 2576;
        }
        else {
          unsigned int v19 = 2042;
        }
        uint64_t v20 = sub_1000EC7A4(a1, v7, *a3, 0, v19);
        if (v20)
        {
          uint64_t v21 = v20;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to create channel : %!", v22, v23, v24, v25, v26, v27, v28, v21);
            uint64_t v29 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
            {
              __int16 v30 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v69 = v30;
              _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
        else
        {
          unsigned int v31 = *(unsigned __int8 *)(*((void *)v17 + v16) + 48);
          uint64_t v32 = v17;
          if (v31 <= 7) {
            char v33 = 2;
          }
          else {
            char v33 = 3;
          }
          if (v31 <= 7) {
            size_t v34 = 6;
          }
          else {
            size_t v34 = 7;
          }
          __int16 v35 = sub_100022FE8(v34);
          if (v35)
          {
            uint64_t v36 = v35;
            *__int16 v35 = 3;
            unsigned __int16 v37 = v32;
            if (*(unsigned __int8 *)(*((void *)v32 + v16) + 48) < 8u)
            {
              uint64_t v38 = 2;
            }
            else
            {
              v35[2] = 0;
              uint64_t v38 = 3;
            }
            v35[1] = v34 - v33;
            uint64_t v48 = &v35[v38];
            *uint64_t v48 = *(unsigned char *)(*(void *)(*a3 + 64) + 4);
            v48[1] = *(unsigned char *)(*(void *)(*a3 + 64) + 5);
            *((_WORD *)v48 + 1) = *(_DWORD *)(*a3 + 40);
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Sending create channel 0x%4x for service %d to %p index %d", v49, v50, v51, v52, v53, v54, v55, *(unsigned __int16 *)(*(void *)(*a3 + 64) + 4));
              uint64_t v56 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v57 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                uint64_t v69 = v57;
                _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            sub_1000E7B60(a1, v36, (unsigned __int16)v34, 1);
            uint64_t v17 = v37;
            unsigned int v7 = v67;
          }
          else
          {
            uint64_t v17 = v32;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Can not allocate memory for channel creation", v39, v40, v41, v42, v43, v44, v45, v66);
              uint64_t v46 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
              {
                uint64_t v47 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                uint64_t v69 = v47;
                __int16 v70 = 1024;
                int v71 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
          }
        }
        ++a3;
        --v18;
      }
      while (v18);
    }
  }
}

uint64_t sub_1000EC7A4(uint64_t a1, unsigned int a2, uint64_t a3, int a4, unsigned int a5)
{
  uint64_t v10 = (unsigned int **)(a3 + 64);
  uint64_t v11 = sub_1001DE600(4u, (uint64_t *)(a3 + 64), 0);
  if (v11)
  {
    uint64_t v12 = v11;
    if (off_100A15288) {
      off_100A15288(a1, 81, 812, v11);
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"createL2CAPChannel failed with error %!.  OI_ChanMan_AllocateChannel failed", v13, v14, v15, v16, v17, v18, v19, v12);
      uint64_t v20 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return v12;
  }
  int v21 = (unsigned __int16)word_1009FF810;
  if (!word_1009FF810) {
    goto LABEL_16;
  }
  int v22 = 0;
  uint64_t v23 = &qword_1009FF850;
  while (a4)
  {
    if (sub_1000EA968(a3, v22)) {
      goto LABEL_15;
    }
LABEL_13:
    ++v22;
    v23 += 9;
    if (v21 == v22) {
      goto LABEL_16;
    }
  }
  if (!sub_1000EA8F4((_DWORD *)a3, v22)) {
    goto LABEL_13;
  }
LABEL_15:
  *((void *)*v10 + 5) = *v23;
LABEL_16:
  if (*(unsigned __int8 *)(a3 + 54) <= 0xCu) {
    int v24 = 16;
  }
  else {
    int v24 = 6;
  }
  *(unsigned char *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 24) = a4;
  uint64_t v25 = *(void *)(a3 + 64);
  *(_WORD *)(v25 + 6) = 0;
  *(void *)(v25 + 64) = 0;
  *(void *)(sub_1001E6484((unsigned int *)v25) + 88) = 0;
  *(void *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 96) = 0;
  *(_WORD *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 36) = a5;
  *(_WORD *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 32) = a5;
  *(_WORD *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 34) = -1;
  *(_WORD *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 40) = 3000;
  *(unsigned char *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 26) = 3;
  *(unsigned char *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 16) = 4;
  *(void *)sub_1001E6484(*(unsigned int **)(a3 + 64)) = a1;
  uint64_t v26 = sub_100022FE8(a5);
  uint64_t v27 = *(void *)(a3 + 64);
  *(void *)(v27 + 48) = v26;
  *(unsigned char *)(sub_1001E6484((unsigned int *)v27) + 30) = 0;
  *(unsigned char *)(sub_1001E6484(*(unsigned int **)(a3 + 64)) + 17) = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Creating L2CAP with priority %d", v28, v29, v30, v31, v32, v33, v34, *(unsigned __int8 *)(a3 + 54));
    __int16 v35 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v65 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (*(unsigned char *)(a3 + 54) == 13)
  {
    if (sub_1000E7430(a1))
    {
      if (sub_1000E37C0(a1, 1))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Force upgrade TS not ready A", v42, v36, v37, v38, v39, v40, v41, v63);
          uint64_t v43 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v44 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v65 = v44;
            _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
      }
    }
    *(unsigned char *)(*((void *)&xmmword_1009FF790 + a2) + 75) = 1;
    int v45 = sub_1001707DC(a1, 200, v36, v37, v38, v39, v40, v41);
    uint64_t v46 = sub_1001E6484(*v10);
    if (!v45)
    {
      *(_WORD *)(v46 + 38) = 200;
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v46 = sub_1001E6484(*v10);
  }
  *(_WORD *)(v46 + 38) = -1;
LABEL_32:
  (*v10)[18] = 0;
  if (sub_100197698(a1))
  {
    uint64_t v47 = sub_1001E6484(*v10);
    __int16 v48 = *(_WORD *)(a1 + 52);
    int v49 = *(_DWORD *)(a1 + 48);
    goto LABEL_36;
  }
  if (sub_100197770(a1))
  {
    uint64_t v47 = sub_1001E6484(*v10);
    __int16 v48 = *(_WORD *)(a1 + 53);
    int v49 = *(_DWORD *)(a1 + 49);
LABEL_36:
    *(_DWORD *)(v47 + 10) = v49;
    *(_WORD *)(v47 + 14) = v48;
  }
  uint64_t v50 = *(unsigned int **)(a3 + 64);
  if (!*(unsigned char *)(a3 + 56))
  {
    uint64_t v12 = sub_1001F1F8C(v50, 0, 0);
    if (!v12) {
      goto LABEL_49;
    }
    goto LABEL_56;
  }
  *(unsigned char *)(sub_1001E6484(v50) + 42) = 32;
  *(unsigned char *)(sub_1001E6484(*v10) + 43) = 32;
  *(_WORD *)(sub_1001E6484(*v10) + 44) = 10000;
  *(_WORD *)(sub_1001E6484(*v10) + 46) = 0;
  if ((dword_1009FFEFC & 0x10) != 0 && (*(unsigned char *)(*((void *)&xmmword_1009FF790 + a2) + 52) & 0x10) != 0) {
    __int16 v51 = 2576;
  }
  else {
    __int16 v51 = 2042;
  }
  *(_WORD *)(sub_1001E6484(*v10) + 48) = v51;
  *(_WORD *)(sub_1001E6484(*v10) + 50) = 0;
  if (v24 + *(unsigned __int8 *)(sub_1001E6484(*v10) + 42) >= 0x3F) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(a3 + 57)) {
    *(unsigned char *)(sub_1001E6484(*v10) + 78) = 1;
  }
  uint64_t v12 = sub_1001F1F8C(*v10, 3, 1);
  sub_1001F17A8(*((unsigned __int16 *)*v10 + 2), 0);
  if (v12)
  {
LABEL_56:
    sub_1001DEC18((uint64_t)*v10);
    return v12;
  }
LABEL_49:
  if (*(unsigned char *)(a3 + 54) == 13) {
    int v52 = dword_1009F8E88;
  }
  else {
    int v52 = -1;
  }
  *(_DWORD *)(*(void *)(a3 + 64) + 76) = v52;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"CL registering service ID %d with priority %d and cid 0x%4x. MaxLatency=%d", v53, v54, v55, v56, v57, v58, v59, *(unsigned int *)(a3 + 40));
    uint64_t v60 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v61 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v65 = v61;
      _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v12 = sub_1001F3B3C(*(unsigned __int16 *)(*(void *)(a3 + 64) + 4), v24, *(unsigned __int8 *)(a3 + 54), (uint64_t)sub_1000E75B0, (uint64_t *)(*(void *)(a3 + 64) + 96), *(_DWORD *)(*(void *)(a3 + 64) + 76));
  if (v12) {
    goto LABEL_56;
  }
  sub_1001F667C(a1);
  return v12;
}

uint64_t sub_1000ECD58(uint64_t a1, char *a2, unsigned __int16 a3, int a4)
{
  memset(v37, 0, sizeof(v37));
  uint64_t v8 = sub_1000226D0((uint64_t)v37, 1u);
  if (v8)
  {
    uint64_t v9 = v8;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"CL failed to init an MBUF with error %!", v10, v11, v12, v13, v14, v15, v16, v9);
      uint64_t v17 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
LABEL_15:
      }
        sub_100745764();
    }
  }
  else
  {
    uint64_t v18 = sub_100022798((unsigned __int8 *)v37, a2, a3, 0);
    if (v18)
    {
      uint64_t v9 = v18;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"CL failed to append to an MBUF with error %!", v19, v20, v21, v22, v23, v24, v25, v9);
        uint64_t v26 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      uint64_t v27 = ((uint64_t (*)(void (*)(uint64_t), uint64_t, uint64_t, _OWORD *, void))loc_1001DE1A4)(sub_1000ECF18, 58, a1, v37, 0);
      if (v27 == 412)
      {
        uint64_t v9 = 0;
        goto LABEL_16;
      }
      uint64_t v9 = v27;
      if (!v27)
      {
        byte_1009FFEE8 = 1;
        goto LABEL_16;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"CL failed to write an MBUF with error %!", v28, v29, v30, v31, v32, v33, v34, v9);
        __int16 v35 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
      }
    }
  }
LABEL_16:
  sub_10025C480((uint64_t)v37);
  if (a4) {
    sub_100023010(a2);
  }
  return v9;
}

void sub_1000ECF18(uint64_t a1)
{
  if (a1 == 58)
  {
    byte_1009FFEE8 = 0;
    while (sub_100059E10(qword_1009FFEF0))
    {
      unsigned int v1 = (void *)sub_1002598B4(qword_1009FFEF0, 0);
      if (v1)
      {
        uint64_t v2 = v1;
        uint64_t v3 = sub_1000ECD58(*v1, v2[1], *((unsigned __int16 *)v2 + 8), 1);
        sub_100023010(v2);
        if (v3 == 410)
        {
          sub_10025B8C0();
        }
        else if (!v3)
        {
          return;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send CL pdu with error %!.", v4, v5, v6, v7, v8, v9, v10, v3);
          uint64_t v11 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100745878();
          }
        }
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"l2capWriteCb CID=%d, not BT_CL_SIGNAL_CID(%d)!!", v13, v14, v15, v16, v17, v18, v19, a1);
    uint64_t v20 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1000ED094(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (!sub_1000E7430(a1) && !byte_1009FFED8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received Version info as PERIPHERAL. PERIPHERAL CL is disabled. Ignoring.", v16, v17, v18, v19, v20, v21, v22, v82);
        uint64_t v23 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return;
    }
    unsigned int v6 = sub_1000E8040(a1);
    if (v6 == -1)
    {
      *(_WORD *)buf = 264;
      buf[2] = 1;
      sub_1000E7B60(a1, buf, 3u, 0);
      unsigned int v6 = -1;
    }
  }
  uint64_t v7 = *((void *)&xmmword_1009FF790 + v6);
  if (v7)
  {
    if (a3 <= 4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Data size error %d", v8, v9, v10, v11, v12, v13, v14, a3);
        uint64_t v15 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      *(_WORD *)buf = 264;
      buf[2] = 1;
      sub_1000E7B60(a1, buf, 3u, 0);
      return;
    }
    if (!a2) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1850, "data");
    }
    uint64_t v32 = v6;
    int v33 = a2[1];
    int v34 = (a2[3] << 16) | (a2[2] << 8) | (a2[4] << 24) | v33;
    *(unsigned char *)(v7 + 48) = *a2;
    *(_DWORD *)(v7 + 52) = v34;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received Version Info for peer %d: local [version %d features 0x%x], remote [version %d features 0x%x]", v35, v36, v37, v38, v39, v40, v41, v32);
      uint64_t v42 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v43 = sub_100050714();
        *(_DWORD *)buf = 136446210;
        uint64_t v84 = v43;
        _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if ((v33 & 0x20) != 0) {
      *(unsigned char *)(a1 + 25) = sub_1001E6934();
    }
    if ((dword_1009FFEFC & 0x10) != 0 && (*(unsigned char *)(*((void *)&xmmword_1009FF790 + v32) + 52) & 0x10) != 0)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"HDR Enabled for this link", v44, v45, v46, v47, v48, v49, v50, v82);
        __int16 v51 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
        {
          int v52 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          uint64_t v84 = v52;
          _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      *(unsigned char *)(a1 + 26) = 1;
    }
    int v53 = sub_1001F7D74();
    unsigned int v54 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v32) + 48);
    if (v53 == 15)
    {
      int v55 = byte_1009FFEF9;
      if (v54 <= 3 && (byte_1009FFEF9 & 1) != 0)
      {
LABEL_40:
        if (sub_1000E7430(a1))
        {
          uint64_t v57 = *((void *)&xmmword_1009FF790 + v32);
          if (!*(unsigned char *)(v57 + 73) && *(unsigned char *)(v57 + 74))
          {
            sub_1000F0D84(a1);
            uint64_t v57 = *((void *)&xmmword_1009FF790 + v32);
          }
          *(unsigned char *)(v57 + 74) = 0;
        }
        else
        {
          sub_1000E80C0(a1);
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"CL is active for (%x)", v58, v59, v60, v61, v62, v63, v64, a1);
          uint64_t v65 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v66 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v84 = v66;
            _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t v67 = *((void *)&xmmword_1009FF790 + v32);
        *(unsigned char *)(v67 + 73) = 1;
        if (byte_1009FFF04 == 1)
        {
          sub_1002010A4(a1, 1, 1);
          uint64_t v67 = *((void *)&xmmword_1009FF790 + v32);
        }
        if (*(unsigned __int8 *)(v67 + 48) >= 7u && sub_1000E7480(a1)) {
          sub_1000EBFE8(a1);
        }
        unsigned int v68 = sub_1000E79C8(a1);
        if (v68 == -1)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Received DID Info for an unknown peer", v74, v75, v76, v77, v78, v79, v80, v82);
            uint64_t v81 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR)) {
              sub_100745764();
            }
          }
        }
        else
        {
          unsigned int v69 = byte_1009FF730;
          if (byte_1009FF730)
          {
            unint64_t v70 = 0;
            uint64_t v71 = v68;
            do
            {
              uint64_t v72 = (void (*)(uint64_t, void, void, uint64_t, void))qword_1009FF738[v70];
              if (v72)
              {
                if (byte_1009FFEF9) {
                  uint64_t v73 = 11;
                }
                else {
                  uint64_t v73 = 0;
                }
                v72(a1, *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v71) + 48), *(unsigned int *)(*((void *)&xmmword_1009FF790 + v71) + 52), v73, dword_1009FFEFC);
                unsigned int v69 = byte_1009FF730;
              }
              ++v70;
            }
            while (v70 < v69);
          }
        }
        return;
      }
    }
    else
    {
      int v55 = byte_1009FFEF9;
    }
    if (v54 == 1 && v55 != 0) {
      sub_1001F90A0();
    }
    goto LABEL_40;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received peer ID before we are tracking connection handle %p", v24, v25, v26, v27, v28, v29, v30, a1);
    uint64_t v31 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1000ED60C(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v5 = a1;
  if (sub_1000E7430(a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received remote services from a peripheral !", v6, v7, v8, v9, v10, v11, v12, v141);
      uint64_t v13 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v153 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    goto LABEL_31;
  }
  if (byte_1009FFED8 || sub_1000E7430(v5))
  {
    unsigned int v14 = sub_1000E79C8(v5);
    if (v14 == -1)
    {
      unsigned int v14 = sub_1000E8040(v5);
      if (v14 == -1)
      {
LABEL_31:
        *(_WORD *)buf = 264;
        buf[2] = 1;
        sub_1000E7B60(v5, buf, 3u, 0);
        return;
      }
    }
    if (!sub_1000F1568(v14)) {
      return;
    }
    uint64_t v151 = v14;
    *(unsigned char *)(*((void *)&xmmword_1009FF790 + v14) + 73) = 1;
    if (a3 <= 3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"No services from remote peer.", v15, v16, v17, v18, v19, v20, v21, v141);
        uint64_t v22 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          v153 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      LODWORD(v23) = 0;
      unsigned int v24 = 0;
      ptr = 0;
      unsigned int v148 = 0;
      char v25 = 0;
      LODWORD(v26) = 0;
LABEL_15:
      if (v24 < a3 || v23 != v26)
      {
        char v27 = v25;
        int v28 = sub_100058654();
        char v25 = v27;
        if (v28)
        {
          sub_100056E24((uint64_t)"Number of remote services don't match.", v29, v30, v31, v32, v33, v34, v35, v141);
          uint64_t v36 = sub_100050B4C(0x51u);
          BOOL v37 = os_log_type_enabled(v36, OS_LOG_TYPE_ERROR);
          char v25 = v27;
          if (v37)
          {
            sub_100744F6C();
            char v25 = v27;
          }
        }
      }
      if ((v25 & 1) != 0 && (byte_1009FFEF8 || (*(_DWORD *)(*((void *)&xmmword_1009FF790 + v151) + 52) & 1) == 0))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"CL Asking to pair", v38, v39, v40, v41, v42, v43, v44, v141);
          uint64_t v45 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v46 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            v153 = v46;
            _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_10023F5B4(v5, 1);
      }
      if (v148) {
        sub_1000E9DF0(v5, v148, (uint64_t)ptr);
      }
      if (ptr) {
        sub_100023010(ptr);
      }
      return;
    }
    uint64_t v26 = *a2;
    if (v26 >= 0x19)
    {
      if (sub_100058654())
      {
        uint64_t v26 = 24;
        sub_100056E24((uint64_t)"Too many services, capping to %d", v55, v56, v57, v58, v59, v60, v61, 24);
        uint64_t v62 = sub_100050B4C(0x51u);
        if (!os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
          goto LABEL_41;
        }
        sub_100744F6C();
      }
      uint64_t v26 = 24;
    }
LABEL_41:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received %d remote services from the remote central %p !", v63, v64, v65, v66, v67, v68, v69, v26);
      unint64_t v70 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        v153 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    *(_DWORD *)(*((void *)&xmmword_1009FF790 + v151) + 16) = v26;
    uint64_t v71 = sub_10010CE48(88 * v26);
    *(void *)(*((void *)&xmmword_1009FF790 + v151) + 8) = v71;
    if (!v71 || (unint64_t v147 = v26, (ptr = sub_100022FE8(2 * v26)) == 0))
    {
      sub_1000EBB10(v5);
      return;
    }
    if (v26)
    {
      unint64_t v23 = 0;
      char v142 = 0;
      unsigned int v148 = 0;
      unsigned int v24 = 1;
      int v144 = v26;
      unsigned int v145 = a3;
      uint64_t v146 = v5;
      uint64_t v143 = a2;
      while (1)
      {
        uint64_t v72 = v24 + 5;
        if (v72 > a3) {
          break;
        }
        unsigned int v73 = a2[v24];
        uint64_t v74 = v24 + 1;
        if (a3 - v74 < v73)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Service size is larger than total data size !!", v125, v126, v127, v128, v129, v130, v131, v141);
            int v132 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v132, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          unsigned int v24 = v74;
          goto LABEL_102;
        }
        uint64_t v75 = &a2[v24];
        LODWORD(v76) = v75[4];
        if (v76 >= 0x20) {
          size_t v77 = 32;
        }
        else {
          size_t v77 = v75[4];
        }
        if ((int)v77 + 4 > v73)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Size mismatch (%d > %d || %d)", v133, v134, v135, v136, v137, v138, v139, (v72 + v77));
            BOOL v140 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v140, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          unsigned int v24 = v72;
LABEL_102:
          char v25 = v142;
          goto LABEL_15;
        }
        uint64_t v78 = v72 + v77;
        if ((int)v77 + 5 <= v73)
        {
          unsigned __int8 v79 = a2[v78];
          unsigned int v150 = v78 + 1;
        }
        else
        {
          unsigned int v150 = v72 + v77;
          unsigned __int8 v79 = 0;
        }
        int v80 = a2[v74] | (v75[2] << 8);
        uint64_t v81 = *(void *)(*((void *)&xmmword_1009FF790 + v151) + 8) + 88 * v23;
        *(_DWORD *)(v81 + 36) = v75[3];
        *(_DWORD *)(v81 + 40) = v80;
        uint64_t v82 = &a2[v72];
        *(_DWORD *)(v81 + 32) = v77;
        *(void *)(v81 + 44) = 0x100000001;
        memmove((void *)v81, v82, v77);
        uint64_t v83 = (unsigned char *)(*(void *)(*((void *)&xmmword_1009FF790 + v151) + 8) + 88 * v23);
        v83[56] = v79 & 1;
        v83[57] = (v79 & 2) != 0;
        v83[55] = 0;
        if (word_1009FF810)
        {
          unint64_t v84 = 0;
          if (v76 >= 0xF) {
            size_t v76 = 15;
          }
          else {
            size_t v76 = v76;
          }
          int v85 = &byte_1009FF82D;
          while (1)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Matching remote service %@ of len %d, type %d and ID %d with local service ID %d", v86, v87, v88, v89, v90, v91, v92, (uint64_t)v82);
              __int16 v93 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v93, OS_LOG_TYPE_DEFAULT))
              {
                int v94 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                v153 = v94;
                _os_log_impl((void *)&_mh_execute_header, v93, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            int v95 = memcmp("com.apple.BT.TS", v82, v76);
            if ((byte_1009FF788 || v95 != 0) && !*v85)
            {
              uint64_t v97 = *(void *)(*((void *)&xmmword_1009FF790 + v151) + 8);
              if (sub_1000EA968(v97 + 88 * v23, v84)) {
                break;
              }
            }
            ++v84;
            v85 += 72;
            if (v84 >= (unsigned __int16)word_1009FF810)
            {
              a3 = v145;
              uint64_t v5 = v146;
              LODWORD(v26) = v144;
              goto LABEL_74;
            }
          }
          *(unsigned char *)(v97 + 88 * v23 + 54) = *(v85 - 1);
          uint64_t v5 = v146;
          if (*(v85 - 5) && !sub_1000E7480(v146))
          {
            LODWORD(v26) = v144;
            a3 = v145;
            a2 = v143;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Match found but requires encryption", v107, v108, v109, v110, v111, v112, v113, v141);
              uint64_t v114 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v114, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v115 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                v153 = v115;
                _os_log_impl((void *)&_mh_execute_header, v114, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            char v142 = 1;
            *(unsigned char *)(*(void *)(*((void *)&xmmword_1009FF790 + v151) + 8) + 88 * v23 + 55) = 1;
          }
          else
          {
            LODWORD(v26) = v144;
            a3 = v145;
            a2 = v143;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Match found - returning service", v98, v99, v100, v101, v102, v103, v104, v141);
              uint64_t v105 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v105, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v106 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                v153 = v106;
                _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            *((_WORD *)ptr + v148++) = v80;
          }
        }
        else
        {
          a3 = v145;
          uint64_t v5 = v146;
          LODWORD(v26) = v144;
LABEL_74:
          a2 = v143;
        }
        ++v23;
        unsigned int v24 = v150;
        if (v150 >= a3 || v23 >= v147) {
          goto LABEL_102;
        }
      }
      unsigned int v116 = v24;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Not enough data to get header", v117, v118, v119, v120, v121, v122, v123, v141);
        uint64_t v124 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      char v25 = v142;
      unsigned int v24 = v116;
    }
    else
    {
      LODWORD(v23) = 0;
      unsigned int v148 = 0;
      char v25 = 0;
      unsigned int v24 = 1;
    }
    goto LABEL_15;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received remote services from a peer, but we're not supposed to have any services, so ignoring !", v47, v48, v49, v50, v51, v52, v53, v141);
    unsigned int v54 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v153 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
}

void sub_1000EDF84(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  if (!sub_1000E7430(a1) || (unsigned int v6 = sub_1000E79C8(a1), v6 == -1))
  {
    *(_WORD *)buf = 264;
    buf[2] = 1;
    sub_1000E7B60(a1, buf, 3u, 0);
    return;
  }
  unsigned int v7 = v6;
  if (!sub_1000F1568(v6)) {
    return;
  }
  *(unsigned char *)(*((void *)&xmmword_1009FF790 + v7) + 73) = 1;
  if (a3 <= 2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No services from remote peer.", v8, v9, v10, v11, v12, v13, v14, v121);
      uint64_t v15 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v128 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return;
  }
  uint64_t v16 = *a2;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received %d common services from the remote peripheral %p", v17, v18, v19, v20, v21, v22, v23, v16);
    unsigned int v24 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v128 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v16 >= 0x19)
  {
    if (sub_100058654())
    {
      uint64_t v16 = 24;
      sub_100056E24((uint64_t)"Too many services, capping to %d", v25, v26, v27, v28, v29, v30, v31, 24);
      uint64_t v32 = sub_100050B4C(0x51u);
      if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
      sub_100744F6C();
    }
    uint64_t v16 = 24;
  }
LABEL_18:
  if (a3 - 1 != 2 * v16)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Service size mismatch, nbServices=%d, (dataSize-1)/2=%d capping to the lower value", v33, v34, v35, v36, v37, v38, v39, v16);
      uint64_t v40 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    if ((a3 - 1) >> 1 < v16) {
      LOBYTE(v16) = (a3 - 1) >> 1;
    }
  }
  uint64_t v123 = (uint64_t *)sub_100022FE8(8 * v16);
  if (!v123) {
    goto LABEL_69;
  }
  uint64_t v41 = v7;
  unsigned int v42 = *(_DWORD *)(*((void *)&xmmword_1009FF790 + v7) + 16) + v16;
  if (v42 < 0x19) {
    goto LABEL_30;
  }
  if (sub_100058654())
  {
    unsigned int v42 = 24;
    sub_100056E24((uint64_t)"Too many services + channels, nbServices=%d nbChannels=%d newNbChannels=%d max %d", v43, v44, v45, v46, v47, v48, v49, v16);
    uint64_t v50 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    sub_100744F6C();
  }
  unsigned int v42 = 24;
LABEL_30:
  unsigned int v125 = v42;
  uint64_t v51 = sub_10010CE48(88 * v42);
  if (!v51)
  {
LABEL_69:
    sub_1000EBB10(a1);
    return;
  }
  uint64_t v52 = v51;
  uint64_t v53 = *((void *)&xmmword_1009FF790 + v41);
  unsigned int v54 = *(_DWORD *)(v53 + 16);
  uint64_t v55 = *(const void **)(v53 + 8);
  if (v55)
  {
    memmove(v51, v55, 88 * v54);
    sub_100023010(*(void **)(*((void *)&xmmword_1009FF790 + v41) + 8));
    uint64_t v53 = *((void *)&xmmword_1009FF790 + v41);
  }
  *(void *)(v53 + 8) = v52;
  if (v54 >= v125)
  {
    BOOL v92 = 0;
    uint64_t v93 = 0;
    goto LABEL_78;
  }
  BOOL v124 = 0;
  unsigned int v122 = 0;
  unint64_t v56 = a3;
  uint64_t v57 = 1;
  unsigned int v58 = v125;
  unint64_t v126 = v56;
  do
  {
    unint64_t v59 = v57 + 2;
    if (v57 + 2 > v56)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Size mismatch", v94, v95, v96, v97, v98, v99, v100, v121);
        uint64_t v101 = sub_100050B4C(0x51u);
        uint64_t v93 = v122;
        BOOL v92 = v124;
        if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
        goto LABEL_78;
      }
LABEL_77:
      uint64_t v93 = v122;
      BOOL v92 = v124;
      goto LABEL_78;
    }
    uint64_t v60 = *(unsigned __int16 *)&a2[v57];
    if (v54)
    {
      uint64_t v61 = *(void *)(v53 + 8);
      if (*(_DWORD *)(v61 + 40) == v60)
      {
        BOOL v62 = 0;
LABEL_43:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"serviceID:%d already registered", v66, v67, v68, v69, v70, v71, v72, v60);
          unsigned int v73 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v73, OS_LOG_TYPE_ERROR))
          {
            uint64_t v90 = sub_100050714();
            *(_DWORD *)buf = 136446466;
            uint64_t v128 = v90;
            __int16 v129 = 1024;
            int v130 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
        unint64_t v56 = v126;
        if (!v62) {
          goto LABEL_66;
        }
      }
      else
      {
        unint64_t v63 = 0;
        uint64_t v64 = (int *)(v61 + 128);
        while (v54 - 1 != v63)
        {
          int v65 = *v64;
          v64 += 22;
          ++v63;
          if (v65 == v60)
          {
            BOOL v62 = v63 >= v54;
            goto LABEL_43;
          }
        }
      }
    }
    if (word_1009FF810)
    {
      unint64_t v74 = 0;
      uint64_t v75 = &byte_1009FF82F;
      while (*(unsigned __int16 *)(v75 - 5) != v60)
      {
        ++v74;
        v75 += 72;
        if (v74 >= (unsigned __int16)word_1009FF810) {
          goto LABEL_66;
        }
      }
      int v76 = *(v75 - 7) | v124;
      BOOL v124 = v76 != 0;
      uint64_t v77 = *(void *)(*((void *)&xmmword_1009FF790 + v41) + 8) + 88 * v54;
      *(_DWORD *)(v77 + 40) = v60;
      size_t v78 = *(v75 - 15);
      if (v78 >= 0x20) {
        int v79 = 32;
      }
      else {
        int v79 = *(v75 - 15);
      }
      *(_DWORD *)(v77 + 32) = v79;
      *(_DWORD *)(v77 + 36) = *(_DWORD *)(v75 - 11);
      *(void *)(v77 + 44) = 0x100000001;
      memmove((void *)v77, *(const void **)(v75 - 23), v78);
      uint64_t v80 = *(void *)(*((void *)&xmmword_1009FF790 + v41) + 8);
      uint64_t v81 = v80 + 88 * v54;
      *(unsigned char *)(v81 + 54) = *(v75 - 3);
      *(unsigned char *)(v81 + 55) = *(v75 - 7);
      *(_WORD *)(v81 + 56) = *(_WORD *)(v75 - 1);
      if (v76)
      {
        if (!sub_1000E7480(a1) || (sub_100237AD0((_DWORD *)(a1 + 48)) & 1) != 0)
        {
          unsigned int v58 = v125;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"We require encryption on a common service - delaying connection to this service.", v82, v83, v84, v85, v86, v87, v88, v121);
            uint64_t v89 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
            {
              uint64_t v91 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              uint64_t v128 = v91;
              __int16 v129 = 1024;
              int v130 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          unint64_t v56 = v126;
          goto LABEL_65;
        }
        uint64_t v80 = *(void *)(*((void *)&xmmword_1009FF790 + v41) + 8);
      }
      unsigned int v58 = v125;
      unint64_t v56 = v126;
      v123[v122++] = v80 + 88 * v54;
LABEL_65:
      ++v54;
    }
LABEL_66:
    uint64_t v53 = *((void *)&xmmword_1009FF790 + v41);
    *(_DWORD *)(v53 + 16) = v54;
    if (v59 >= v56) {
      break;
    }
    uint64_t v57 = v59;
  }
  while (v54 < v58);
  if (v59 < v56) {
    goto LABEL_77;
  }
  BOOL v102 = v54 == v58;
  uint64_t v93 = v122;
  BOOL v92 = v124;
  if (v102) {
    goto LABEL_80;
  }
LABEL_78:
  if (sub_100058654()
    && (sub_100056E24((uint64_t)"Number of common services don't match.", v103, v104, v105, v106, v107, v108, v109, v121),
        uint64_t v110 = sub_100050B4C(0x51u),
        os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)))
  {
    if (sub_1007458C0(v110, v92))
    {
LABEL_81:
      int v111 = *(_DWORD *)(*((void *)&xmmword_1009FF790 + v41) + 52);
      if ((sub_1000E7480(a1) & 1) == 0 && (byte_1009FFEF8 || (v111 & 1) == 0))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"CL Asking to pair", v112, v113, v114, v115, v116, v117, v118, v121);
          uint64_t v119 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v119, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v120 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v128 = v120;
            _os_log_impl((void *)&_mh_execute_header, v119, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_10023F5B4(a1, 1);
      }
    }
  }
  else
  {
LABEL_80:
    if (v92) {
      goto LABEL_81;
    }
  }
  sub_1000EC3AC(a1, v93, v123);
  sub_100023010(v123);
}

uint64_t sub_1000EE77C(uint64_t a1, unsigned __int16 *a2, unsigned int a3)
{
  if (a3 <= 3)
  {
    *(_WORD *)buf = 264;
    buf[2] = 4;
    return sub_1000E7B60(a1, buf, 3u, 0);
  }
  unsigned int v5 = *a2;
  uint64_t v6 = a2[1];
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received create channel for service %d, CID = %d from %p !", v7, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v33 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_1000E7430(a1) || (unsigned int v15 = sub_1000E79C8(a1), v15 == -1))
  {
    uint64_t v21 = a1;
    char v22 = 1;
    return sub_1000F1A24(v21, v22, v6, v5, 0);
  }
  unsigned int v16 = v15;
  uint64_t v17 = *((void *)&xmmword_1009FF790 + v15);
  int v18 = *(_DWORD *)(v17 + 16);
  if (!v18) {
    goto LABEL_18;
  }
  uint64_t v31 = v15;
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = 80;
  while (*(_DWORD *)(v19 + v20 - 40) != v6)
  {
    v20 += 88;
    if (!--v18) {
      goto LABEL_18;
    }
  }
  int v23 = (unsigned __int16)word_1009FF810;
  if (!word_1009FF810)
  {
LABEL_18:
    uint64_t v21 = a1;
    char v22 = 5;
    return sub_1000F1A24(v21, v22, v6, v5, 0);
  }
  int v24 = 0;
  uint64_t v25 = v19 + v20 - 80;
  uint64_t v26 = &byte_1009FF82C;
  while (!sub_1000EA968(v25, v24))
  {
    ++v24;
    v26 += 72;
    if (v23 == v24) {
      goto LABEL_18;
    }
  }
  if (*(v26 - 4))
  {
    if (sub_1000E7480(a1))
    {
      uint64_t v17 = *((void *)&xmmword_1009FF790 + v31);
      goto LABEL_24;
    }
    uint64_t v21 = a1;
    char v22 = 3;
    return sub_1000F1A24(v21, v22, v6, v5, 0);
  }
LABEL_24:
  if ((dword_1009FFEFC & 0x10) != 0 && (*(unsigned char *)(v17 + 52) & 0x10) != 0) {
    unsigned int v27 = 2576;
  }
  else {
    unsigned int v27 = 2042;
  }
  if (sub_1000EC7A4(a1, v16, *(void *)(v17 + 8) + v20 - 80, 1, v27))
  {
    uint64_t v21 = a1;
    char v22 = 6;
    return sub_1000F1A24(v21, v22, v6, v5, 0);
  }
  *(_WORD *)(sub_1001E6484(*(unsigned int **)(*(void *)(*((void *)&xmmword_1009FF790 + v31) + 8) + v20 - 16)) + 8) = v5;
  int v28 = sub_1000F1A24(a1, 0, v6, v5, *(_WORD *)(*(void *)(*(void *)(*((void *)&xmmword_1009FF790 + v31) + 8) + v20 - 16) + 4));
  uint64_t v29 = (unsigned char *)(*(void *)(*((void *)&xmmword_1009FF790 + v31) + 8) + v20);
  uint64_t result = *((void *)v29 - 2);
  if (v28)
  {
    uint64_t result = sub_1001DEC18(result);
    *(void *)(*(void *)(*((void *)&xmmword_1009FF790 + v31) + 8) + v20 - 16) = 0;
  }
  else
  {
    *((_WORD *)v29 - 14) = *(_WORD *)(result + 4);
    *uint64_t v29 = v26[5];
    uint64_t v30 = *(uint64_t (**)(uint64_t))(v26 + 20);
    if (v30) {
      return v30(a1);
    }
  }
  return result;
}

void sub_1000EEA9C(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unknown peer.", v9, v10, v11, v12, v13, v14, v15, v38);
      unsigned int v16 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    unsigned int v7 = v6;
    if (!sub_1000E7430(a1))
    {
      *(_WORD *)buf = 264;
      uint8_t v8 = 1;
      goto LABEL_9;
    }
    if (a3 <= 4)
    {
      *(_WORD *)buf = 264;
      uint8_t v8 = 4;
LABEL_9:
      buf[2] = v8;
      sub_1000E7B60(a1, buf, 3u, 0);
      return;
    }
    int v17 = *a2;
    uint64_t v18 = *(unsigned __int16 *)(a2 + 1);
    __int16 v19 = *(_WORD *)(a2 + 3);
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received accept channel for service %d, CID = %d from %p !", v20, v21, v22, v23, v24, v25, v26, v18);
      unsigned int v27 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v40 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v28 = *((void *)&xmmword_1009FF790 + v7);
    int v29 = *(_DWORD *)(v28 + 16);
    if (v29)
    {
      uint64_t v30 = 0;
      uint64_t v31 = *(void *)(v28 + 8);
      uint64_t v32 = &byte_1009FF831;
      while (*(_DWORD *)(v31 + v30 + 40) != v18)
      {
        v32 += 72;
        v30 += 88;
        if (!--v29) {
          return;
        }
      }
      uint64_t v33 = *(unsigned int **)(v31 + v30 + 64);
      if (v33)
      {
        if (v17)
        {
          sub_1001DEC18((uint64_t)v33);
          *(void *)(*(void *)(*((void *)&xmmword_1009FF790 + v7) + 8) + v30 + 64) = 0;
        }
        else
        {
          *(_WORD *)(sub_1001E6484(v33) + 8) = v19;
          *(unsigned char *)(sub_1001E6484(*(unsigned int **)(*(void *)(*((void *)&xmmword_1009FF790 + v7) + 8) + v30 + 64))
                   + 16) = 4;
          uint64_t v34 = *(void *)(*((void *)&xmmword_1009FF790 + v7) + 8) + v30;
          *(unsigned char *)(v34 + 80) = *v32;
          *(_WORD *)(v34 + 52) = *(_WORD *)(*(void *)(v34 + 64) + 4);
          uint64_t v35 = (unsigned __int16)word_1009FF810;
          if (word_1009FF810)
          {
            for (unint64_t i = &byte_1009FF82C; *((unsigned __int16 *)i - 1) != v18; i += 72)
            {
              if (!--v35) {
                return;
              }
            }
            uint64_t v37 = *(void (**)(uint64_t))(i + 20);
            if (v37) {
              v37(a1);
            }
          }
        }
      }
    }
  }
}

void sub_1000EED3C(unsigned __int16 *a1, unsigned __int16 *a2, unsigned int a3)
{
  unsigned int v6 = sub_1000E79C8((uint64_t)a1);
  if (v6 == -1) {
    goto LABEL_6;
  }
  unsigned int v7 = v6;
  if (!sub_1000F1568(v6)) {
    return;
  }
  if (a3 <= 4)
  {
    *(_WORD *)buf = 264;
    uint8_t v8 = 4;
LABEL_7:
    buf[2] = v8;
    sub_1000E7B60((uint64_t)a1, buf, 3u, 0);
    return;
  }
  if (sub_1000E7430((uint64_t)a1))
  {
LABEL_6:
    *(_WORD *)buf = 264;
    uint8_t v8 = 1;
    goto LABEL_7;
  }
  uint64_t v9 = *a2;
  __int16 v73 = *a2;
  if (*((unsigned __int8 *)a2 + 3) >= 0x20u) {
    size_t v10 = 32;
  }
  else {
    size_t v10 = *((unsigned __int8 *)a2 + 3);
  }
  if (!v10 || (int)v10 + 4 > a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Service name length (%d) doesn't match data size (%d).", v11, v12, v13, v14, v15, v16, v17, v10);
      uint64_t v18 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  __int16 v19 = a2 + 2;
  if (a3 - v10 == 4) {
    char v20 = 0;
  }
  else {
    char v20 = *((unsigned char *)a2 + v10 + 4);
  }
  int v21 = *((unsigned __int8 *)a2 + 2);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received service added on lm 0x%4x with service ID %d, eRTM %d", v22, v23, v24, v25, v26, v27, v28, *a1);
    int v29 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v75 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!sub_1000F1704(v7, v19, v10, (uint64_t)a1))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Service ID %d is not supported. OI_STATUS_WATCH_TS_REMOTE_UNSUPPORTED", v48, v49, v50, v51, v52, v53, v54, v9);
    uint64_t v55 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_49:
    sub_100744F6C();
    return;
  }
  uint64_t v30 = *((void *)&xmmword_1009FF790 + v7);
  int v31 = *(_DWORD *)(v30 + 16);
  if (v31)
  {
    uint64_t v32 = *(_DWORD **)(v30 + 8);
    uint64_t v33 = *(unsigned int *)(v30 + 16);
    while (v32[10] != v9)
    {
      if (sub_1000E9D78(v32, v19, v10, v21))
      {
        if (!sub_100058654()) {
          return;
        }
        sub_100056E24((uint64_t)"Already have this service name for this peer !", v64, v65, v66, v67, v68, v69, v70, v72);
        uint64_t v71 = sub_100050B4C(0x51u);
        if (!os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_49;
      }
      v32 += 22;
      if (!--v33) {
        goto LABEL_29;
      }
    }
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Already have this service ID for this peer !", v56, v57, v58, v59, v60, v61, v62, v72);
    unint64_t v63 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_49;
  }
LABEL_29:
  uint64_t v34 = sub_10010CE48(88 * (v31 + 1));
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = *((void *)&xmmword_1009FF790 + v7);
    uint64_t v37 = *(const void **)(v36 + 8);
    if (v37)
    {
      memmove(v34, v37, 88 * *(unsigned int *)(v36 + 16));
      sub_100023010(*(void **)(*((void *)&xmmword_1009FF790 + v7) + 8));
      uint64_t v36 = *((void *)&xmmword_1009FF790 + v7);
    }
    uint64_t v38 = &v35[88 * *(unsigned int *)(v36 + 16)];
    *((_DWORD *)v38 + 8) = v10;
    *((_DWORD *)v38 + 9) = v21;
    *((_DWORD *)v38 + 10) = v9;
    *(void *)(v38 + 44) = 0x100000001;
    memmove(v38, v19, v10);
    uint64_t v39 = *((void *)&xmmword_1009FF790 + v7);
    int v40 = *(_DWORD *)(v39 + 16);
    uint64_t v41 = &v35[88 * v40];
    *((void *)v41 + 8) = 0;
    v41[56] = v20 & 1;
    v41[57] = (v20 & 2) != 0;
    *((_WORD *)v41 + 26) = 0;
    *(void *)(v39 + 8) = v35;
    *(_DWORD *)(v39 + 16) = v40 + 1;
    int v42 = (unsigned __int16)word_1009FF810;
    if (word_1009FF810)
    {
      if (v10 >= 0xF) {
        size_t v43 = 15;
      }
      else {
        size_t v43 = v10;
      }
      int v44 = memcmp("com.apple.BT.TS", v19, v43);
      int v45 = 0;
      BOOL v46 = (byte_1009FF788 | v44) == 0;
      uint64_t v47 = &byte_1009FF82C;
      while (v46 || !sub_1000EA968((uint64_t)&v35[88 * v40], v45))
      {
        ++v45;
        v47 += 72;
        if (v42 == v45) {
          return;
        }
      }
      v35[88 * v40 + 54] = *v47;
      sub_1000E9DF0((uint64_t)a1, 1u, (uint64_t)&v73);
    }
  }
}

void sub_1000EF190(uint64_t a1, unsigned __int16 *a2, unsigned int a3)
{
  uint64_t v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Service removed error: Invalid peer", v17, v18, v19, v20, v21, v22, v23, v91);
      uint64_t v24 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    *(_WORD *)buf = 264;
    uint8_t v16 = 1;
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  if (!sub_1000F1568(v6)) {
    return;
  }
  if (a3 <= 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Service removed error  Invalid peer", v8, v9, v10, v11, v12, v13, v14, v91);
      uint64_t v15 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    *(_WORD *)buf = 264;
    uint8_t v16 = 4;
LABEL_12:
    buf[2] = v16;
    sub_1000E7B60(a1, buf, 3u, 0);
    return;
  }
  unsigned int v25 = *a2;
  uint64_t v26 = *((void *)&xmmword_1009FF790 + v7);
  int v27 = *(_DWORD *)(v26 + 16);
  if (!v27)
  {
LABEL_17:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Got a remove request but can't find a service to remove.", v32, v33, v34, v35, v36, v37, v38, v91);
      uint64_t v39 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_54;
  }
  uint64_t v28 = 0;
  int v29 = 0;
  uint64_t v30 = v7;
  uint64_t v31 = *(void *)(v26 + 8) + 40;
  while (*(_DWORD *)(v31 + v28) != v25)
  {
    ++v29;
    v28 += 88;
    if (v27 == v29) {
      goto LABEL_17;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received service removed on peerID %d, channelID %d, serviceID %d, ServiceState [local %s, remote %s], channel 0x%x", v40, v41, v42, v43, v44, v45, v46, v7);
    uint64_t v47 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v93 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v48 = *(void *)(*((void *)&xmmword_1009FF790 + v30) + 8) + v28;
  *(_DWORD *)(v48 + 48) = 2;
  if (!*(void *)(v48 + 64))
  {
    BOOL v51 = sub_1000E7430(a1);
    uint64_t v52 = *((void *)&xmmword_1009FF790 + v30);
    if (v51 && !*(unsigned char *)(*(void *)(v52 + 8) + v28 + 55))
    {
      sub_10025B8C0();
      uint64_t v52 = *((void *)&xmmword_1009FF790 + v30);
    }
    uint64_t v53 = *(void *)(v52 + 8);
    uint64_t v54 = (void *)(v53 + v28);
    if (*(_DWORD *)(v53 + v28 + 44) == 2)
    {
      if (!sub_100058654()) {
        goto LABEL_58;
      }
      sub_100056E24((uint64_t)"Initiated service removal, but received service removed, delay channel removal until remove cfm is received", v55, v56, v57, v58, v59, v60, v61, v91);
      uint64_t v62 = sub_100050B4C(0x51u);
      if (!os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_58;
      }
LABEL_53:
      uint64_t v83 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v93 = v83;
      _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
LABEL_58:
      uint64_t v84 = a1;
      unsigned int v85 = v25;
      char v86 = 0;
      goto LABEL_59;
    }
    unsigned int v87 = *(_DWORD *)(v52 + 16) - 1;
    *(_DWORD *)(v52 + 16) = v87;
    uint64_t v88 = (const void *)(v53 + 88 * v87);
LABEL_57:
    memmove(v54, v88, 0x58uLL);
    uint64_t v90 = *(void *)(*((void *)&xmmword_1009FF790 + v30) + 8) + 88 * v87;
    *(void *)(v90 + 80) = 0;
    *(_OWORD *)(v90 + 48) = 0u;
    *(_OWORD *)(v90 + 64) = 0u;
    *(_OWORD *)(v90 + 16) = 0u;
    *(_OWORD *)(v90 + 32) = 0u;
    *(_OWORD *)uint64_t v90 = 0u;
    goto LABEL_58;
  }
  if (!word_1009FF810)
  {
    unsigned int v49 = 0;
    goto LABEL_42;
  }
  unsigned int v49 = 0;
  uint64_t v50 = &byte_1009FF82D;
  while ((!sub_1000E7430(a1)
        || !sub_1000EA8F4((_DWORD *)(*(void *)(*((void *)&xmmword_1009FF790 + v30) + 8) + v28), v49))&& (sub_1000E7430(a1)|| !sub_1000EA968(*(void *)(*((void *)&xmmword_1009FF790 + v30) + 8) + v28, v49)))
  {
    ++v49;
    v50 += 72;
    if (v49 >= (unsigned __int16)word_1009FF810) {
      goto LABEL_42;
    }
  }
  if (!*v50 || sub_1000E7430(a1))
  {
LABEL_42:
    if (v49 < (unsigned __int16)word_1009FF810)
    {
      unsigned int v63 = v49;
      if (BYTE4(qword_1009FF818[9 * v49 + 2]) == 13)
      {
        *(unsigned char *)(*((void *)&xmmword_1009FF790 + v30) + 75) = 0;
        if (sub_1000E37C0(a1, 0))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Force upgrade TS not ready B", v64, v65, v66, v67, v68, v69, v70, v91);
            uint64_t v71 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v72 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v93 = v72;
              _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
        }
      }
      __int16 v73 = (void (*)(void, uint64_t))qword_1009FF818[9 * v63 + 6];
      uint64_t v74 = *((void *)&xmmword_1009FF790 + v30);
      if (v73)
      {
        v73(*(unsigned __int16 *)(*(void *)(v74 + 8) + v28 + 52), 5101);
        uint64_t v74 = *((void *)&xmmword_1009FF790 + v30);
      }
      uint64_t v75 = *(void *)(v74 + 8) + v28;
      if (*(_DWORD *)(v75 + 44) == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_58;
        }
        sub_100056E24((uint64_t)"Initiated service removal, but received service removed, delay channel removal until remove cfm is received", v76, v77, v78, v79, v80, v81, v82, v91);
        uint64_t v62 = sub_100050B4C(0x51u);
        if (!os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_58;
        }
        goto LABEL_53;
      }
      unsigned int v87 = *(_DWORD *)(v74 + 16) - 1;
      *(_DWORD *)(v74 + 16) = v87;
      sub_1001DEC18(*(void *)(v75 + 64));
      uint64_t v89 = *(void *)(*((void *)&xmmword_1009FF790 + v30) + 8);
      uint64_t v54 = (void *)(v89 + v28);
      uint64_t v88 = (const void *)(v89 + 88 * v87);
      goto LABEL_57;
    }
LABEL_54:
    uint64_t v84 = a1;
    unsigned int v85 = v25;
    char v86 = 5;
LABEL_59:
    sub_1000F1C70(v84, v85, v86);
  }
}

void sub_1000EF764(uint64_t a1, unsigned __int16 *a2, unsigned int a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (a3 < 3) {
    return;
  }
  unsigned int v7 = v6;
  if (v6 == -1) {
    return;
  }
  uint64_t v8 = *a2;
  if (sub_100058654())
  {
    BOOL v9 = sub_1000E7430(a1);
    uint64_t v17 = "Peripheral";
    if (v9) {
      uint64_t v17 = "Central";
    }
    sub_100056E24((uint64_t)"%s received service remove confirmation for id %d", v10, v11, v12, v13, v14, v15, v16, (uint64_t)v17);
    uint64_t v18 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      int v132 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v19 = *((void *)&xmmword_1009FF790 + v7);
  unint64_t v20 = *(unsigned int *)(v19 + 16);
  if (v20)
  {
    uint64_t v21 = *(void *)(v19 + 8);
    if (*(_DWORD *)(v21 + 40) == v8)
    {
      unint64_t v22 = 0;
      BOOL v130 = 0;
LABEL_15:
      uint64_t v25 = v7;
      if (sub_100058654())
      {
        uint64_t v33 = *(int *)(*(void *)(*((void *)&xmmword_1009FF790 + v7) + 8) + 88 * v22 + 44);
        uint64_t v34 = v33 > 2 ? "unknown CL service state" : off_10099A710[v33];
        sub_100056E24((uint64_t)"Removal confirmed and local service exists, removing while in state %s ", v26, v27, v28, v29, v30, v31, v32, (uint64_t)v34);
        uint64_t v37 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v38 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          int v132 = v38;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      unsigned int v39 = *(_DWORD *)(*(void *)(*((void *)&xmmword_1009FF790 + v25) + 8) + 88 * v22 + 32);
      if (v39 >= 0x20) {
        size_t v36 = 32;
      }
      else {
        size_t v36 = v39;
      }
      uint64_t v40 = sub_100022FE8(v36);
      uint64_t v35 = v40;
      if (v40) {
        memmove(v40, (const void *)(*(void *)(*((void *)&xmmword_1009FF790 + v25) + 8) + 88 * v22), v36);
      }
      int v128 = *(_DWORD *)(*(void *)(*((void *)&xmmword_1009FF790 + v25) + 8) + 88 * v22 + 36);
      BOOL v41 = sub_1000E7430(a1);
      uint64_t v42 = *((void *)&xmmword_1009FF790 + v25);
      if (v41
        || (uint64_t v43 = *(void *)(v42 + 8), *(_DWORD *)(v43 + 88 * v22 + 48) == 2) && *(_DWORD *)(v43 + 88 * v22 + 44) == 2)
      {
        int v44 = *(_DWORD *)(v42 + 16);
        if (v44 || (sub_10025B8C0(), uint64_t v42 = *((void *)&xmmword_1009FF790 + v25), (v44 = *(_DWORD *)(v42 + 16)) != 0))
        {
          unsigned int v45 = v44 - 1;
          *(_DWORD *)(v42 + 16) = v44 - 1;
          memmove((void *)(*(void *)(v42 + 8) + 88 * v22), (const void *)(*(void *)(v42 + 8) + 88 * (v44 - 1)), 0x58uLL);
          uint64_t v46 = *(void *)(*((void *)&xmmword_1009FF790 + v25) + 8) + 88 * v45;
          *(void *)(v46 + 80) = 0;
          *(_OWORD *)(v46 + 48) = 0u;
          *(_OWORD *)(v46 + 64) = 0u;
          *(_OWORD *)(v46 + 16) = 0u;
          *(_OWORD *)(v46 + 32) = 0u;
          *(_OWORD *)uint64_t v46 = 0u;
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"PeerID %d nb channels was zero when serviced was removed", v118, v119, v120, v121, v122, v123, v124, v127);
          unsigned int v125 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Peripheral resetting service-state for id %d, channel %d", v47, v48, v49, v50, v51, v52, v53, v8);
          uint64_t v54 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v55 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            int v132 = v55;
            _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        *(void *)(*(void *)(*((void *)&xmmword_1009FF790 + v25) + 8) + 88 * v22 + 44) = 0x100000001;
      }
      goto LABEL_37;
    }
    unint64_t v22 = 0;
    uint64_t v23 = (int *)(v21 + 128);
    while (v20 - 1 != v22)
    {
      int v24 = *v23;
      v23 += 22;
      ++v22;
      if (v24 == v8)
      {
        BOOL v130 = v22 >= v20;
        goto LABEL_15;
      }
    }
  }
  uint64_t v35 = 0;
  size_t v36 = 0;
  int v128 = 0;
  BOOL v130 = 1;
LABEL_37:
  size_t v129 = v36;
  unsigned int v56 = (unsigned __int16)word_1009FF78A;
  if (word_1009FF78A)
  {
    unint64_t v57 = 0;
    char v58 = 0;
    do
    {
      if (*(_DWORD *)(*((void *)&xmmword_1009FF790 + v57) + 16))
      {
        unint64_t v59 = 0;
        uint64_t v60 = 40;
        do
        {
          if (sub_1000E7430(a1)
            && *(_DWORD *)(*(void *)(*((void *)&xmmword_1009FF790 + v57) + 8) + v60) == v8)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Central waiting for more", v61, v62, v63, v64, v65, v66, v67, v127);
              uint64_t v68 = sub_100050B4C(0x51u);
              if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v69 = sub_100050714();
                *(_DWORD *)buf = 136446210;
                int v132 = v69;
                _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            char v58 = 1;
          }
          ++v59;
          v60 += 88;
        }
        while (v59 < *(unsigned int *)(*((void *)&xmmword_1009FF790 + v57) + 16));
        unsigned int v56 = (unsigned __int16)word_1009FF78A;
      }
      ++v57;
    }
    while (v57 < v56);
  }
  else
  {
    char v58 = 0;
  }
  if ((v58 & 1) != 0 || !word_1009FF810)
  {
LABEL_82:
    unsigned int v87 = v35;
  }
  else
  {
    unint64_t v70 = 0;
    uint64_t v71 = qword_1009FF818;
    while (1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"receivedServiceRemovedCfm:  unregistering service[%d]= %d", v72, v73, v74, v75, v76, v77, v78, v70);
        uint64_t v79 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
        {
          uint64_t v80 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          int v132 = v80;
          _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }
      if (sub_1000E7430(a1) && v8 == *((unsigned __int16 *)v71 + 9)) {
        break;
      }
      if (((v130 | sub_1000E7430(a1)) & 1) == 0
        && v129 == LOBYTE(qword_1009FF818[9 * v70 + 1])
        && !memcmp((const void *)qword_1009FF818[9 * v70], v35, v129))
      {
        int v81 = HIDWORD(qword_1009FF818[9 * v70 + 1]);
        BOOL v82 = v128 == 1 && v81 == 0;
        BOOL v83 = v82;
        BOOL v84 = !v128 && v81 == 1;
        BOOL v85 = v84;
        BOOL v86 = v81 == 2 && v128 == 2;
        if (v86 || v83 || v85) {
          break;
        }
      }
      ++v70;
      v71 += 9;
      if (v70 >= (unsigned __int16)word_1009FF810) {
        goto LABEL_82;
      }
    }
    if (*((unsigned char *)v71 + 21) && (!sub_1000E7430(a1) || *((unsigned __int16 *)v71 + 9) == v8))
    {
      uint64_t v96 = (void (*)(void *, size_t, uint64_t))v71[8];
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Found matching services, unregistering serviceID %d, unregisterCb %p", v97, v98, v99, v100, v101, v102, v103, v8);
        uint64_t v104 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v105 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          int v132 = v105;
          _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v106 = *((unsigned int *)v71 + 3);
      uint64_t v107 = v35;
      if (!v35)
      {
        if (*((unsigned __int8 *)v71 + 8) >= 0x20u) {
          size_t v108 = 32;
        }
        else {
          size_t v108 = *((unsigned __int8 *)v71 + 8);
        }
        size_t v129 = v108;
        uint64_t v109 = sub_100022FE8(v108);
        if (v109)
        {
          uint64_t v107 = v109;
          memmove(v109, (const void *)*v71, v108);
        }
        else
        {
          uint64_t v107 = 0;
        }
      }
      sub_100023010((void *)*v71);
      unint64_t v126 = &qword_1009FF818[9 * (unsigned __int16)--word_1009FF810];
      memmove(v71, v126, 0x48uLL);
      *(_OWORD *)unint64_t v126 = 0u;
      *((_OWORD *)v126 + 1) = 0u;
      *((_OWORD *)v126 + 2) = 0u;
      *((_OWORD *)v126 + 3) = 0u;
      v126[8] = 0;
      unsigned int v87 = v107;
      if (v96) {
        v96(v107, v129, v106);
      }
    }
    else
    {
      unsigned int v87 = v35;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Got an unregister for something not being unregistered...", v110, v111, v112, v113, v114, v115, v116, v127);
        uint64_t v117 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v117, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  if (v130
    && !(v58 & 1 | (word_1009FF810 == 0))
    && !sub_1000E7430(a1)
    && sub_100058654()
    && (sub_100056E24((uint64_t)"receivedServiceRemovedCfm: ignored, no matching local service", v88, v89, v90, v91, v92, v93, v94, v127), uint64_t v95 = sub_100050B4C(0x51u), os_log_type_enabled(v95, OS_LOG_TYPE_ERROR)))
  {
    sub_100744F6C();
    if (!v87) {
      return;
    }
  }
  else if (!v87)
  {
    return;
  }
  sub_100023010(v87);
}

uint64_t sub_1000EFFE4(uint64_t a1, uint64_t a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Signaling error %d", v4, v5, v6, v7, v8, v9, v10, *(unsigned __int8 *)(a2 + 2));
    uint64_t v11 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  uint64_t result = sub_1000E79C8(a1);
  if (result == -1
    || (unsigned int v13 = result, v14 = *((void *)&xmmword_1009FF790 + result), *(unsigned char *)(v14 + 73))
    || !*(unsigned char *)(v14 + 74)
    || (uint64_t result = sub_1000E7430(a1), !result))
  {
    if (off_100A15288) {
      return off_100A15288(a1, 81, 3221, *(unsigned __int8 *)(a2 + 2));
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received an Error response from the other side, we're not rxOK yet, and we're central, and we're pending version, this is a response for version msg", v15, v16, v17, v18, v19, v20, v21, v23);
      unint64_t v22 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v25 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    *(unsigned char *)(*((void *)&xmmword_1009FF790 + v13) + 74) = 0;
    sub_1000F0D84(a1);
    return sub_1000E80C0(a1);
  }
  return result;
}

void sub_1000F0178(unsigned __int16 *a1)
{
  unsigned int v2 = sub_1000E79C8((uint64_t)a1);
  if (v2 == -1) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(*((void *)&xmmword_1009FF790 + v2) + 72)) {
    sub_10025B8C0();
  }
  if (v2 != -1)
  {
    uint64_t v3 = *((void *)&xmmword_1009FF790 + v2);
    if (!*(unsigned char *)(v3 + 72))
    {
      *(unsigned char *)(v3 + 72) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AssertPower for lm 0x%4x", v4, v5, v6, v7, v8, v9, v10, *a1);
        uint64_t v11 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v55 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_10010C770();
    }
  }
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  int v51 = 0;
  unsigned int v12 = sub_1000E79C8((uint64_t)a1);
  if (v12 == -1)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"sendTimeSyncCorrection peerID is invalid", v21, v22, v23, v24, v25, v26, v27, v50);
    uint64_t v28 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_23:
    sub_100744F6C();
    return;
  }
  unsigned int v13 = v12;
  unsigned int v14 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v12) + 48);
  if (v14 <= 7) {
    unsigned __int16 v15 = 20;
  }
  else {
    unsigned __int16 v15 = 21;
  }
  if (v14 <= 7) {
    size_t v16 = 20;
  }
  else {
    size_t v16 = 21;
  }
  uint64_t v17 = sub_100022FE8(v16);
  if (!v17)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"sendTimeSyncCorrection memory allocation failed", v29, v30, v31, v32, v33, v34, v35, v50);
    size_t v36 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_23;
  }
  uint64_t v18 = v17;
  sub_10010BCA8(&v53);
  sub_10010BD04(&v52);
  sub_10010BBEC(&v51);
  int v19 = v51 / 60;
  unsigned char *v18 = 113;
  if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v13) + 48) < 8u)
  {
    unsigned int v20 = 2;
  }
  else
  {
    v18[2] = 0;
    unsigned int v20 = 3;
  }
  v18[1] = 18;
  uint64_t v37 = &v18[v20];
  *(_DWORD *)uint64_t v37 = HIDWORD(v53);
  __int16 v38 = WORD1(v53);
  *((_WORD *)v37 + 2) = v53;
  *((_WORD *)v37 + 3) = v38;
  __int16 v39 = HIWORD(v52);
  *((_WORD *)v37 + 4) = WORD2(v52);
  *((_WORD *)v37 + 5) = v39;
  __int16 v40 = WORD1(v52);
  *((_WORD *)v37 + 6) = v52;
  *((_WORD *)v37 + 7) = v40;
  *((_WORD *)v37 + 8) = v19;
  *(void *)(qword_1009FFEE0 + 128) = sub_1000F1E4C;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Sending time info t1={%u,%u}, m1={%u,%u} GMT:%d index %d", v41, v42, v43, v44, v45, v46, v47, v53);
    uint64_t v48 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v49 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v55 = v49;
      _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_1000E7B60((uint64_t)a1, v18, v15, 1)) {
    sub_1000EB9F4(a1);
  }
}

void sub_1000F0514(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v35 = 0;
  sub_10010BD04(&v35);
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid peer for time data", v15, v16, v17, v18, v19, v20, v21, v34);
      uint64_t v22 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
    }
  }
  else if (a3 > 0xF)
  {
    unsigned int v23 = v6;
    uint64_t v24 = *((void *)&xmmword_1009FF790 + v6);
    *(void *)(v24 + 28) = v35;
    *(_DWORD *)(v24 + 40) = *(_DWORD *)a2;
    *(_DWORD *)(v24 + 36) = *(_DWORD *)(a2 + 4);
    *(_DWORD *)(v24 + 24) = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(v24 + 20) = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(v24 + 44) = 0;
    if (a3 == 18) {
      *(_DWORD *)(v24 + 44) = 60 * ((__int16)(*(unsigned __int8 *)(a2 + 17) << 8) | *(unsigned __int8 *)(a2 + 16));
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received time info t1={%u,%u}, m1={%u,%u} at {%u,%u} GMT:%d", v25, v26, v27, v28, v29, v30, v31, *(unsigned int *)(*((void *)&xmmword_1009FF790 + v23) + 36));
      uint64_t v32 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v33 = sub_100050714();
        *(_DWORD *)buf = 136446210;
        uint64_t v37 = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Wrong size for time data", v7, v8, v9, v10, v11, v12, v13, v34);
    unsigned int v14 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
LABEL_5:
    }
      sub_100744F6C();
  }
}

void sub_1000F0714(uint64_t a1, double *a2, unsigned int a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 != -1)
  {
    uint64_t v59 = 0;
    if (a3 > 0xF)
    {
      uint64_t v18 = *(unsigned int *)a2;
      uint64_t v17 = *((unsigned int *)a2 + 1);
      double v62 = a2[1];
      uint64_t v19 = v6;
      sub_10010BD6C(v17 | (v18 << 32), *(void *)(*((void *)&xmmword_1009FF790 + v6) + 20), &v62, &v59, v62, v7, v8);
      if (v20)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid time, newer is smaller ({%u,%u} vs {%u,%u})", v21, v22, v23, v24, v25, v26, v27, v17);
          uint64_t v28 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        *(void *)(*((void *)&xmmword_1009FF790 + v19) + 56) = 0;
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Time was {%u,%u} at remote {%u,%u} received at {%u,%u}", v29, v30, v31, v32, v33, v34, v35, *(unsigned int *)(*((void *)&xmmword_1009FF790 + v19) + 36));
          size_t v36 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v37 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v61 = v37;
            _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Remote TX of {%u,%u}", v38, v39, v40, v41, v42, v43, v44, v17);
          uint64_t v45 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v46 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v61 = v46;
            _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Remote correction by {%u,%u}", v47, v48, v49, v50, v51, v52, v53, v59);
          uint64_t v54 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v55 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v61 = v55;
            _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t v56 = *((void *)&xmmword_1009FF790 + v19);
        unint64_t v57 = *(void (**)(uint64_t, void, void, void, uint64_t, void, void))(v56 + 56);
        if (v57)
        {
          v57(a1, *(void *)(v56 + 36), *(void *)(v56 + 28), *(void *)(v56 + 20), v59, *(unsigned int *)(v56 + 44), *(void *)(v56 + 64));
          uint64_t v56 = *((void *)&xmmword_1009FF790 + v19);
        }
        *(void *)(v56 + 56) = 0;
        *(void *)(v56 + 20) = 0;
        *(void *)(v56 + 36) = 0;
        *(void *)(v56 + 28) = 0;
        *(_DWORD *)(v56 + 44) = 0;
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Wrong size for time data", v9, v10, v11, v12, v13, v14, v15, v58);
      uint64_t v16 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
}

uint64_t sub_1000F0A14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4 = byte_1009FF688;
  if (byte_1009FF688)
  {
    uint64_t v8 = result;
    unint64_t v9 = 0;
    uint64_t v10 = &qword_1009FF690;
    do
    {
      if (*v10)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Received cl data with size %d for session %d", v11, v12, v13, v14, v15, v16, v17, a3);
          uint64_t v18 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v19 = sub_100050714();
            *(_DWORD *)buf = 136446210;
            uint64_t v21 = v19;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))*v10)(v8, a2, (unsigned __int16)a3, v10[1], a4);
        unsigned int v4 = byte_1009FF688;
      }
      ++v9;
      v10 += 2;
    }
    while (v9 < v4);
  }
  return result;
}

void sub_1000F0B60(uint64_t a1, _WORD *a2, uint64_t a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received DID Info for an unknown peer", v15, v16, v17, v18, v19, v20, v21, v35);
      uint64_t v22 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else if (a3 > 5)
  {
    if (!a2) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1932, "data");
    }
    __int16 v23 = a2[1];
    __int16 v24 = a2[2];
    if (a3 < 7)
    {
      __int16 v25 = -1;
    }
    else
    {
      if ((a3 & 0xFFF8) == 0) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/cl/BT_CL_Signaling.c", 1939, "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      __int16 v25 = a2[3];
    }
    uint64_t v26 = (_WORD *)*((void *)&xmmword_1009FF790 + v6);
    v26[50] = *a2;
    v26[51] = v23;
    v26[52] = v24;
    v26[53] = v25;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received DeviceID for %: vid 0x%x pid 0x%x version 0x%x chipset 0x%x", v27, v28, v29, v30, v31, v32, v33, a1 + 49);
      uint64_t v34 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v37 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Data size error %d", v7, v8, v9, v10, v11, v12, v13, a3);
      uint64_t v14 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    *(_WORD *)buf = 264;
    buf[2] = 1;
    sub_1000E7B60(a1, buf, 3u, 0);
  }
}

void sub_1000F0D84(uint64_t a1)
{
  uint64_t v2 = sub_1000E79C8(a1);
  if (v2 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not send services, peer is invalid for handle %p", v10, v11, v12, v13, v14, v15, v16, a1);
      uint64_t v17 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  uint64_t v3 = v2;
  if (!sub_1000F1568(v2)) {
    return;
  }
  if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v3) + 48) <= 7u) {
    int v4 = 2;
  }
  else {
    int v4 = 3;
  }
  int v109 = v4;
  int v5 = v4 + 1;
  if (word_1009FF810)
  {
    unint64_t v6 = 0;
    uint64_t v7 = qword_1009FF818;
    unsigned int v8 = v4 + 1;
    while (1)
    {
      unsigned int v9 = v8;
      if (sub_1000F1670((uint64_t)v7, a1, v3, v6))
      {
        v8 += *((unsigned __int8 *)v7 + 8) + 6;
        if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v3) + 48) <= 7u && v8 >= 0x100) {
          break;
        }
      }
      ++v6;
      v7 += 9;
      if (v6 >= (unsigned __int16)word_1009FF810)
      {
        LODWORD(v6) = 0;
        unsigned int v9 = v8;
        goto LABEL_21;
      }
    }
    char v18 = sub_100058654();
    if (v18)
    {
      sub_100056E24((uint64_t)"Services limit found for peerID %d, remote version %d, pdu-size %d, temp pdu-size %d, index Limit %d", v19, v20, v21, v22, v23, v24, v25, v3);
      uint64_t v26 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v113 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
    unsigned int v9 = v4 + 1;
  }
LABEL_21:
  size_t v27 = v9;
  uint64_t v28 = sub_100022FE8(v9);
  if (!v28) {
    return;
  }
  uint64_t v29 = v28;
  size_t v107 = v27;
  uint64_t v108 = v3;
  unint64_t v30 = v6;
  bzero(v28, v27);
  *uint64_t v29 = 1;
  if (!word_1009FF810)
  {
    *(void *)&long long v111 = 0;
    goto LABEL_41;
  }
  unint64_t v33 = 0;
  *(void *)&long long v111 = 0;
  uint64_t v34 = qword_1009FF818;
  *(void *)&long long v32 = 136446210;
  long long v110 = v32;
  while (1)
  {
    size_t v35 = *((unsigned __int8 *)v34 + 8) >= 0x20u ? 32 : *((unsigned __int8 *)v34 + 8);
    __chkstk_darwin(v31, (v35 + 1));
    uint64_t v37 = (char *)&v106 - v36;
    bzero((char *)&v106 - v36, v38);
    memcpy(v37, (const void *)*v34, v35);
    v37[v35] = 0;
    if (sub_1000F1670((uint64_t)v34, a1, v3, v33)) {
      break;
    }
    uint64_t v42 = "Skipping";
LABEL_32:
    uint64_t v31 = sub_100058654();
    if (v31)
    {
      sub_100056E24((uint64_t)"%s service %s requiresEncryption=%d unpublishing=%d, pduCounter %d", v43, v44, v45, v46, v47, v48, v49, (uint64_t)v42);
      uint64_t v50 = sub_100050B4C(0x51u);
      uint64_t v31 = os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT);
      if (v31)
      {
        uint64_t v51 = sub_100050714();
        *(_DWORD *)buf = v110;
        uint64_t v113 = v51;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    ++v33;
    v34 += 9;
    if (v33 >= (unsigned __int16)word_1009FF810) {
      goto LABEL_41;
    }
  }
  if (!v30 || v30 != v33)
  {
    v29[v5] = v35 + 5;
    v29[v5 + 1] = *((unsigned char *)v34 + 18);
    v29[v5 + 2] = *((unsigned char *)v34 + 19);
    v29[v5 + 3] = *((_DWORD *)v34 + 3);
    int v39 = v5 + 4;
    uint64_t v40 = (v5 + 5);
    v29[v39] = v35;
    memmove(&v29[v40], (const void *)*v34, v35);
    v29[(v40 + v35)] = 0;
    char v41 = *((unsigned char *)v34 + 22);
    v29[(v40 + v35)] = v41;
    v29[(v40 + v35)] = v41 | (2 * *((unsigned char *)v34 + 23));
    int v5 = v40 + v35 + 1;
    *(void *)&long long v111 = (v111 + 1);
    uint64_t v42 = "Sending";
    goto LABEL_32;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Exiting due to limit found for peerID %d, lNbServices %d, i %d, singleByteLengthIndex %d", v52, v53, v54, v55, v56, v57, v58, v3);
    uint64_t v59 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v60 = sub_100050714();
      *(_DWORD *)buf = v110;
      uint64_t v113 = v60;
      _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
LABEL_41:
  __int16 v61 = v5 - v109;
  if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v108) + 48) < 8u)
  {
    uint64_t v62 = 2;
  }
  else
  {
    v29[2] = HIBYTE(v61);
    uint64_t v62 = 3;
  }
  unsigned int v63 = v107;
  unsigned __int8 v64 = v111;
  v29[1] = v61;
  v29[v62] = v64;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Sending %d out of total %d registered services to %p, pduCounter %d", v65, v66, v67, v68, v69, v70, v71, v64);
    uint64_t v72 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v73 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v113 = v73;
      _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v64)
  {
    uint64_t v74 = sub_1000E7B60(a1, v29, v63, 1);
    if (v74
      && sub_100058654()
      && (sub_100056E24((uint64_t)"Sending services PDU failed with %!", v75, v76, v77, v78, v79, v80, v81, v74),
          BOOL v82 = sub_100050B4C(0x51u),
          os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)))
    {
      sub_100744F6C();
      if (v30) {
        goto LABEL_52;
      }
    }
    else if (v30)
    {
LABEL_52:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Sending left over services: singleByteLengthIndex is %d, lNbServices %d, adding services, status %!", v83, v84, v85, v86, v87, v88, v89, v30);
        uint64_t v91 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v91, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v92 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          uint64_t v113 = v92;
          _os_log_impl((void *)&_mh_execute_header, v91, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (v30 < (unsigned __int16)word_1009FF810)
      {
        uint64_t v93 = (char *)&qword_1009FF818[9 * v30 + 1] + 4;
        *(void *)&long long v90 = 136446466;
        long long v111 = v90;
        do
        {
          if (!v93[9])
          {
            if (*(v93 - 4) >= 0x20u) {
              unsigned int v94 = 32;
            }
            else {
              unsigned int v94 = *(v93 - 4);
            }
            uint64_t v95 = sub_1000E9AD8(a1, *((unsigned __int16 *)v93 + 3), *(const void **)(v93 - 12), v94, *(_DWORD *)v93, (unsigned __int16)v30);
            if (v95)
            {
              uint64_t v96 = v95;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Sending services added PDU failed with %!", v97, v98, v99, v100, v101, v102, v103, v96);
                uint64_t v104 = sub_100050B4C(0x51u);
                if (os_log_type_enabled(v104, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v105 = sub_100050714();
                  *(_DWORD *)buf = v111;
                  uint64_t v113 = v105;
                  __int16 v114 = 1024;
                  int v115 = 0xFFFF;
                  _os_log_error_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
                }
              }
            }
          }
          ++v30;
          v93 += 72;
        }
        while (v30 < (unsigned __int16)word_1009FF810);
      }
    }
  }
}

void sub_1000F14F4(uint64_t a1)
{
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"PhyStatsEnabled with error %!", v2, v3, v4, v5, v6, v7, v8, a1);
    unsigned int v9 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

BOOL sub_1000F1568(unsigned int a1)
{
  int v1 = *(_DWORD *)(*((void *)&xmmword_1009FF790 + a1) + 52);
  if ((v1 & 0x200) != 0 && sub_100058654())
  {
    uint64_t v10 = **((void **)&xmmword_1009FF790 + a1);
    int v11 = *(unsigned __int8 *)(v10 + 55);
    uint64_t v12 = v10 + 57;
    uint64_t v13 = v10 + 49;
    if (v11) {
      uint64_t v13 = v12;
    }
    sub_100056E24((uint64_t)"Peer %: does not support CL Services", v3, v4, v5, v6, v7, v8, v9, v13);
    uint64_t v14 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v17 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return (v1 & 0x200) == 0;
}

uint64_t sub_1000F1670(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  if (!a1 || *(unsigned char *)(a1 + 21) || *(unsigned char *)(a1 + 16) && !sub_1000E7480(a2)) {
    return 0;
  }
  uint64_t v8 = &qword_1009FF818[9 * a4];
  uint64_t v9 = (const void *)*v8;
  unsigned int v10 = *((unsigned __int8 *)v8 + 8);

  return sub_1000F1704(a3, v9, v10, a2);
}

uint64_t sub_1000F1704(unsigned int a1, const void *a2, unsigned int a3, uint64_t a4)
{
  if (a2 && a3)
  {
    char v53 = 0;
    memset(v52, 0, sizeof(v52));
    if (a3 > 0x20) {
      __strlcpy_chk();
    }
    else {
      __strncpy_chk();
    }
    BOOL v20 = sub_1000E7430(a4);
    if (a3 >= 0xF) {
      size_t v21 = 15;
    }
    else {
      size_t v21 = a3;
    }
    int v22 = memcmp("com.apple.BT.TS", a2, v21);
    uint64_t result = 1;
    if (!byte_1009FF788 && !v22)
    {
      uint64_t v23 = *((void *)&xmmword_1009FF790 + a1);
      if (*(unsigned __int8 *)(v23 + 48) > 8u)
      {
        if (v20)
        {
          if ((dword_1009FFEFC & 0x400) != 0 && (*(unsigned char *)(v23 + 53) & 8) != 0) {
            return result;
          }
        }
        else if ((dword_1009FFEFC & 0x800) != 0 && (*(unsigned char *)(v23 + 53) & 4) != 0)
        {
          return result;
        }
        int v44 = sub_100058654();
        uint64_t result = 0;
        if (v44)
        {
          uint64_t v45 = **((void **)&xmmword_1009FF790 + a1);
          int v46 = *(unsigned __int8 *)(v45 + 55);
          uint64_t v47 = v45 + 57;
          uint64_t v48 = v45 + 49;
          if (v46) {
            uint64_t v48 = v47;
          }
          sub_100056E24((uint64_t)"Peer %: ver9 We do not support TS isCentral=%d isPhone=%d isWatch=%d . %s ", v37, v38, v39, v40, v41, v42, v43, v48);
          uint64_t v17 = sub_100050B4C(0x51u);
          BOOL v49 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
          uint64_t result = 0;
          if (v49)
          {
LABEL_34:
            *(_DWORD *)buf = 136446210;
            uint64_t v51 = sub_100050714();
            uint64_t v19 = buf;
            goto LABEL_35;
          }
        }
      }
      else
      {
        if (v20)
        {
          if ((dword_1009FFEFC & 0x100) != 0) {
            return result;
          }
        }
        else if ((dword_1009FFEFC & 0x80) != 0)
        {
          return result;
        }
        int v31 = sub_100058654();
        uint64_t result = 0;
        if (v31)
        {
          uint64_t v32 = **((void **)&xmmword_1009FF790 + a1);
          int v33 = *(unsigned __int8 *)(v32 + 55);
          uint64_t v34 = v32 + 57;
          uint64_t v35 = v32 + 49;
          if (v33) {
            uint64_t v35 = v34;
          }
          sub_100056E24((uint64_t)"Peer %: We do not support TS isCentral=%d isPhone=%d isWatch=%d . %s ", v24, v25, v26, v27, v28, v29, v30, v35);
          uint64_t v17 = sub_100050B4C(0x51u);
          BOOL v36 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
          uint64_t result = 0;
          if (v36) {
            goto LABEL_34;
          }
        }
      }
    }
  }
  else
  {
    int v15 = sub_100058654();
    uint64_t result = 0;
    if (v15)
    {
      sub_100056E24((uint64_t)"Invalid service name query over %p", v8, v9, v10, v11, v12, v13, v14, a4);
      uint64_t v17 = sub_100050B4C(0x51u);
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0;
      if (v18)
      {
        LODWORD(v52[0]) = 136446210;
        *(void *)((char *)v52 + 4) = sub_100050714();
        uint64_t v19 = (uint8_t *)v52;
LABEL_35:
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", v19, 0xCu);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000F1A24(uint64_t a1, char a2, __int16 a3, unsigned int a4, __int16 a5)
{
  unsigned int v10 = sub_1000E79C8(a1);
  if (v10 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not send accept channel, peer is invalid for handle %p", v18, v19, v20, v21, v22, v23, v24, a1);
      uint64_t v25 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 414;
  }
  else
  {
    unsigned int v11 = v10;
    unsigned int v12 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v10) + 48);
    if (v12 <= 7) {
      unsigned __int16 v13 = 7;
    }
    else {
      unsigned __int16 v13 = 8;
    }
    if (v12 <= 7) {
      size_t v14 = 7;
    }
    else {
      size_t v14 = 8;
    }
    int v15 = sub_100022FE8(v14);
    if (v15)
    {
      uint64_t v16 = v15;
      *int v15 = 4;
      if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v11) + 48) < 8u)
      {
        unsigned int v17 = 2;
      }
      else
      {
        _DWORD v15[2] = 0;
        unsigned int v17 = 3;
      }
      v15[1] = 5;
      uint64_t v35 = &v15[v17];
      *uint64_t v35 = a2;
      *(_WORD *)(v35 + 1) = a3;
      *(_WORD *)(v35 + 3) = a5;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Sending accept channel 0x%x(%d) / 0x%x(%d) for service %d to %p index %d", v36, v37, v38, v39, v40, v41, v42, a4);
        uint64_t v43 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          int v46 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      return sub_1000E7B60(a1, v16, v13, 1);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can not allocate memory for channel creation after acceptance", v27, v28, v29, v30, v31, v32, v33, v44);
        uint64_t v34 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 106;
    }
  }
}

void sub_1000F1C70(uint64_t a1, unsigned int a2, char a3)
{
  unsigned int v6 = sub_1000E79C8(a1);
  if (v6 == -1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not send accept channel, peer is invalid for handle %p", v14, v15, v16, v17, v18, v19, v20, a1);
      uint64_t v21 = sub_100050B4C(0x51u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    unsigned int v7 = v6;
    if (sub_1000F1568(v6))
    {
      unsigned int v8 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v7) + 48);
      unsigned __int16 v9 = v8 <= 7 ? 5 : 6;
      size_t v10 = v8 <= 7 ? 5 : 6;
      unsigned int v11 = sub_100022FE8(v10);
      if (v11)
      {
        unsigned int v12 = v11;
        *unsigned int v11 = 7;
        if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v7) + 48) < 8u)
        {
          unsigned int v13 = 2;
        }
        else
        {
          v11[2] = 0;
          unsigned int v13 = 3;
        }
        v11[1] = 3;
        uint64_t v22 = &v11[v13];
        *(_WORD *)uint64_t v22 = a2;
        v22[2] = a3;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Sending removed service %d confirmation with error %d to %p index %d", v23, v24, v25, v26, v27, v28, v29, a2);
          uint64_t v30 = sub_100050B4C(0x51u);
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136446210;
            uint64_t v32 = sub_100050714();
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        sub_1000E7B60(a1, v12, v9, 1);
      }
    }
  }
}

void sub_1000F1E4C(unsigned __int16 *a1)
{
  uint64_t v43 = 0;
  mach_timebase_info v46 = 0;
  unsigned int v2 = sub_1000E79C8((uint64_t)a1);
  if (v2 == -1)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"sendTimeSyncCorrection peerID is invalid", v13, v14, v15, v16, v17, v18, v19, v42);
    uint64_t v20 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_13:
    sub_100744F6C();
    return;
  }
  unsigned int v3 = v2;
  unsigned int v4 = *(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v2) + 48);
  if (v4 <= 7) {
    char v5 = 2;
  }
  else {
    char v5 = 3;
  }
  if (v4 <= 7) {
    size_t v6 = 18;
  }
  else {
    size_t v6 = 19;
  }
  unsigned int v7 = sub_100022FE8(v6);
  if (!v7)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"sendTimeSyncCorrection memory allocation failed", v21, v22, v23, v24, v25, v26, v27, v42);
    uint64_t v28 = sub_100050B4C(0x51u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_13;
  }
  unsigned int v8 = v7;
  uint64_t v9 = v3;
  sub_10010BD04(&v43);
  sub_10010BD30(&v46);
  *unsigned int v8 = 114;
  unsigned int v10 = (unsigned __int16)v6;
  char v11 = v6 - v5;
  if (*(unsigned __int8 *)(*((void *)&xmmword_1009FF790 + v9) + 48) < 8u)
  {
    unsigned int v12 = 2;
  }
  else
  {
    v8[2] = 0;
    unsigned int v12 = 3;
  }
  v8[1] = v11;
  uint64_t v29 = &v8[v12];
  *(_DWORD *)uint64_t v29 = HIDWORD(v43);
  __int16 v30 = WORD1(v43);
  *((_WORD *)v29 + 2) = v43;
  *((_WORD *)v29 + 3) = v30;
  __int16 numer_high = HIWORD(v46.numer);
  *((_WORD *)v29 + 4) = v46.numer;
  *((_WORD *)v29 + 5) = numer_high;
  __int16 denom_high = HIWORD(v46.denom);
  *((_WORD *)v29 + 6) = v46.denom;
  *((_WORD *)v29 + 7) = denom_high;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Sending time sync correction {%u,%u} with conversion {%u,%u} index %d", v33, v34, v35, v36, v37, v38, v39, v43);
    uint64_t v40 = sub_100050B4C(0x51u);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v41 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v45 = v41;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1000E7B60((uint64_t)a1, v8, v10, 1);
  sub_1000EB9F4(a1);
}

void sub_1000F20D8()
{
  int v0 = &unk_1009FF000;
  if (word_1009FF810)
  {
    uint64_t v1 = 0;
    do
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Looping through service[%d][%d]= %d serviceType=%d", v2, v3, v4, v5, v6, v7, v8, v1);
        uint64_t v9 = sub_100050B4C(0x51u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          unsigned int v10 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
        }
      }
      if (BYTE5(qword_1009FF818[9 * v1 + 2]))
      {
        char v11 = &qword_1009FF818[9 * v1];
        uint64_t v12 = *((unsigned int *)v11 + 3);
        uint64_t v14 = v11 + 1;
        unsigned int v13 = *((unsigned __int8 *)v11 + 8);
        uint64_t v40 = v14;
        unsigned int v41 = v1;
        if (v13 >= 0x20) {
          size_t v15 = 32;
        }
        else {
          size_t v15 = v13;
        }
        uint64_t v16 = sub_100022FE8(v15);
        uint64_t v42 = (const void **)&qword_1009FF818[9 * v1];
        memmove(v16, *v42, v15);
        unsigned __int16 v17 = word_1009FF78A;
        if (!word_1009FF78A) {
          goto LABEL_25;
        }
        uint64_t v38 = v1;
        unint64_t v18 = 0;
        int v19 = 0;
        do
        {
          uint64_t v20 = *((void *)&xmmword_1009FF790 + v18);
          if (*(_DWORD *)(v20 + 16))
          {
            uint64_t v21 = 0;
            unint64_t v22 = 0;
            do
            {
              uint64_t v23 = (_DWORD *)(*(void *)(v20 + 8) + v21);
              if (v23[8] == v15 && !memcmp(v23, v16, v15))
              {
                BOOL v24 = sub_1000E7430(*(void *)v20);
                uint64_t v25 = (uint64_t *)*((void *)&xmmword_1009FF790 + v18);
                if (v24) {
                  v19 |= *(_DWORD *)(v25[1] + v21 + 36) == v12;
                }
                BOOL v26 = sub_1000E7430(*v25);
                uint64_t v20 = *((void *)&xmmword_1009FF790 + v18);
                if (!v26) {
                  v19 |= sub_1000E9D78((_DWORD *)(*(void *)(v20 + 8) + v21), v16, v15, v12);
                }
              }
              ++v22;
              v21 += 88;
            }
            while (v22 < *(unsigned int *)(v20 + 16));
            unsigned __int16 v17 = word_1009FF78A;
          }
          ++v18;
        }
        while (v18 < v17);
        int v0 = (_WORD *)&unk_1009FF000;
        uint64_t v1 = v38;
        if (v19)
        {
          uint64_t v1 = (v38 + 1);
        }
        else
        {
LABEL_25:
          uint64_t v39 = (void (*)(void *, size_t, uint64_t))qword_1009FF818[9 * v41 + 8];
          char v47 = 0;
          *(_OWORD *)buf = 0u;
          long long v46 = 0u;
          if (*v42 && *(unsigned __int8 *)v40 - 1 <= 0x1F) {
            __strncpy_chk();
          }
          else {
            __strlcpy_chk();
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Looping through service[%d][%d]=%s id=%d serviceType=%d ToRemove", v27, v28, v29, v30, v31, v32, v33, v1);
            uint64_t v34 = sub_100050B4C(0x51u);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v35 = sub_100050714();
              *(_DWORD *)uint64_t v43 = 136446210;
              uint64_t v44 = v35;
              _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", v43, 0xCu);
            }
          }
          sub_100023010((void *)*v42);
          unsigned __int16 v36 = v0[1032] - 1;
          v0[1032] = v36;
          uint64_t v37 = &qword_1009FF818[9 * v36];
          memmove(v42, v37, 0x48uLL);
          *(_OWORD *)uint64_t v37 = 0u;
          *((_OWORD *)v37 + 1) = 0u;
          *((_OWORD *)v37 + 2) = 0u;
          *((_OWORD *)v37 + 3) = 0u;
          v37[8] = 0;
          if (v39) {
            v39(v16, v15, v12);
          }
        }
        sub_100023010(v16);
      }
      else
      {
        uint64_t v1 = (v1 + 1);
      }
    }
    while (v1 < (unsigned __int16)v0[1032]);
  }
}

void sub_1000F24C4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

void *sub_1000F24E4()
{
  return sub_100050714();
}

uint64_t sub_1000F2500()
{
  sub_1000F33D4(&dword_1009FFF10);
  sub_1000F33D4(&dword_1009FFF14);
  byte_1009FFF18 = 0;
  sub_1000F3254();

  return sub_1000268E4((uint64_t)sub_1000F2570, 0, 3, (int *)&dword_1009FFF10);
}

uint64_t sub_1000F2570()
{
  if ((byte_1009FFF18 & 8) == 0) {
    return sub_1000F2590(5);
  }
  byte_1009FFF18 |= 0x10u;
  return result;
}

void sub_1000F2590(int a1)
{
  switch(byte_1009FFF18 & 7)
  {
    case 0:
      switch(a1)
      {
        case 1:
LABEL_7:
          sub_1000F3268();
          break;
        case 2:
          sub_1000F33B8(8);
          sub_1000F327C();
          sub_1000268E4((uint64_t)sub_1000F2784, 0, 3, (int *)&dword_1009FFF14);
          char v3 = byte_1009FFF18 & 0xF8 | 1;
          goto LABEL_21;
        case 5:
          sub_1000F3254();
          uint64_t v1 = &dword_1009FFF10;
          uint64_t v2 = sub_1000F2570;
LABEL_24:
          sub_1000268E4((uint64_t)v2, 0, 3, (int *)v1);
          break;
      }
      break;
    case 1:
      switch(a1)
      {
        case 1:
          goto LABEL_7;
        case 3:
          goto LABEL_15;
        case 4:
          sub_1000F33B8(9);
          char v3 = byte_1009FFF18 & 0xF8 | 2;
          goto LABEL_21;
        case 6:
          sub_1000F327C();
          uint64_t v1 = &dword_1009FFF14;
          uint64_t v2 = sub_1000F2784;
          goto LABEL_24;
        default:
          return;
      }
    case 2:
      if (a1 == 1)
      {
        sub_1000F33B8(10);
        char v3 = byte_1009FFF18 & 0xF8 | 3;
LABEL_21:
        byte_1009FFF18 = v3;
      }
      else if (a1 == 3)
      {
LABEL_15:
        sub_1000F3290();
      }
      break;
    case 3:
      return;
    default:
      sub_1000F3420((uint64_t)"LE state machine, invalid state");
      break;
  }
}

uint64_t sub_1000F2784()
{
  if ((byte_1009FFF18 & 8) == 0) {
    return sub_1000F2590(6);
  }
  byte_1009FFF18 |= 0x20u;
  return result;
}

BOOL sub_1000F27A4()
{
  return (byte_1009FFF18 & 7) != 2;
}

BOOL sub_1000F27BC()
{
  return (byte_1009FFF18 & 7u) - 3 < 0xFFFFFFFE;
}

void sub_1000F27D8()
{
  byte_1009FFF18 |= 8u;
}

void sub_1000F27EC()
{
  char v0 = byte_1009FFF18;
  char v1 = byte_1009FFF18 & 0xF7;
  byte_1009FFF18 &= ~8u;
  if ((v0 & 0x10) != 0)
  {
    byte_1009FFF18 = v0 & 0xE7;
    sub_1000F2590(5);
    char v1 = byte_1009FFF18;
  }
  if ((v1 & 0x20) != 0)
  {
    byte_1009FFF18 = v1 & 0xDF;
    if ((v1 & 8) != 0)
    {
      byte_1009FFF18 = v1 | 0x20;
    }
    else
    {
      sub_1000F2590(6);
    }
  }
}

void sub_1000F2868()
{
  byte_1009FFF19 = 0;
}

uint64_t sub_1000F2874()
{
  byte_1009FFF19 = 0;
  return sub_1000F2E9C();
}

uint64_t sub_1000F2880()
{
  if ((byte_1009FFF19 & 1) == 0)
  {
    byte_1009FFF19 = 1;
    return sub_100026DA8((uint64_t)sub_1000F2874, 0, 0);
  }
  return result;
}

void sub_1000F28B4()
{
  byte_1009FFF1C = 0;
}

uint64_t sub_1000F28C0(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a1;
  if (byte_1009FFF1D == 1) {
    a1 = sub_100026DA8((uint64_t)sub_1000E6368, 0, 0);
  }
  if (a2)
  {
    unsigned int v4 = 0;
    __int16 v5 = 0;
    while (1)
    {
      uint64_t v6 = (unsigned char *)(v3 + v4);
      unsigned __int16 v7 = a2 - v5;
      __int16 v25 = 0;
      char v24 = 0;
      int v8 = byte_1009FFF1C & 7;
      if (v8 == 2)
      {
        a1 = sub_1000F2C40((unsigned __int8 *)(v3 + v4), v7, &v25);
        int v11 = a1;
        switch((int)a1)
        {
          case 0:
            goto LABEL_45;
          case 1:
            if (sub_1000E6414() && !sub_1000F27A4()) {
              sub_1000F33B8(3);
            }
            goto LABEL_43;
          case 2:
            sub_1000E6338();
            goto LABEL_43;
          case 3:
          case 4:
            goto LABEL_32;
          case 5:
            sub_1000E6340();
            goto LABEL_43;
          case 6:
            sub_1000E6348();
            goto LABEL_13;
          case 7:
            int v21 = 1;
            goto LABEL_42;
          case 8:
            int v21 = 2;
            goto LABEL_42;
          case 9:
            int v21 = 3;
            goto LABEL_42;
          case 10:
            int v21 = 4;
LABEL_42:
            sub_1000F2590(v21);
LABEL_43:
            byte_1009FFF1C &= 0xF8u;
            goto LABEL_44;
          default:
            sub_1000F3420((uint64_t)"RX: unknown message id");
LABEL_32:
            byte_1009FFF1C &= 0xF8u;
            if (v11 && v11 != 6) {
LABEL_44:
            }
              sub_1000E63EC();
            break;
        }
        goto LABEL_45;
      }
      if (v8 != 1) {
        break;
      }
      a1 = sub_1000F3490((char *)(v3 + v4), v7, &v24);
      __int16 v25 = a1;
      if (v24)
      {
LABEL_13:
        char v10 = byte_1009FFF1C & 0xF8;
LABEL_14:
        byte_1009FFF1C = v10;
      }
LABEL_45:
      __int16 v5 = v4 + v25;
      unsigned int v4 = (unsigned __int16)(v4 + v25);
      if (v4 >= a2) {
        return 0xFFFFLL;
      }
    }
    if ((byte_1009FFF1C & 7) != 0)
    {
      sub_1000F3420((uint64_t)"RX: invalid state ");
      goto LABEL_45;
    }
    int v9 = *v6;
    if ((v9 - 2) >= 3)
    {
      if (!*v6)
      {
        a1 = nullsub_95(a1);
LABEL_30:
        __int16 v25 = 1;
        goto LABEL_45;
      }
      if (v9 != 64)
      {
        a1 = sub_1000E6414();
        if (a1)
        {
          a1 = sub_1000F27A4();
          if (!a1)
          {
            byte_1009FFF1C = byte_1009FFF1C & 0xF8 | 1;
            uint64_t v12 = sub_100058654();
            if (v12)
            {
              sub_100056E24((uint64_t)"xh4ds_uart_deliverbytes: garbage received when searching for new packet identifier: %x\n", v13, v14, v15, v16, v17, v18, v19, *v6);
              uint64_t v20 = sub_100050B4C(0x3Au);
              uint64_t v12 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
              if (v12)
              {
                unint64_t v22 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                uint64_t v27 = v22;
                __int16 v28 = 1024;
                int v29 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            nullsub_95(v12);
            sub_1000F33B8(3);
          }
        }
        goto LABEL_30;
      }
      sub_1000F2C2C();
      char v10 = byte_1009FFF1C & 0xF8 | 2;
    }
    else
    {
      a1 = sub_1000E6414();
      if (!a1) {
        goto LABEL_30;
      }
      a1 = sub_1000F27BC();
      if (a1) {
        goto LABEL_30;
      }
      char v10 = byte_1009FFF1C & 0xF8 | 1;
    }
    goto LABEL_14;
  }
  return 0xFFFFLL;
}

uint64_t sub_1000F2C20(uint64_t result)
{
  byte_1009FFF1D = result;
  return result;
}

void sub_1000F2C2C()
{
  byte_1009FFF20 &= 0x80u;
}

uint64_t sub_1000F2C40(unsigned __int8 *a1, unsigned int a2, _WORD *a3)
{
  if (!a2)
  {
LABEL_19:
    uint64_t result = 0;
    *a3 = a2;
    return result;
  }
  unsigned int v6 = 0;
  unsigned int v7 = byte_1009FFF20;
  while (1)
  {
    int v8 = (v7 >> 4) & 7;
    if (v8 == 2) {
      break;
    }
    if (v8 == 1)
    {
      uint64_t v14 = "tick";
      uint64_t v15 = &off_10099A728;
      while (*(unsigned __int8 *)v14 != *a1)
      {
        uint64_t v16 = v15[2];
        v15 += 2;
        uint64_t v14 = v16;
        if (!v16)
        {
          qword_1009FFF28 = 0;
          goto LABEL_20;
        }
      }
      qword_1009FFF28 = (uint64_t)v15;
      unsigned int v17 = v7 & 0xFFFFFF80 | 0x21;
      byte_1009FFF20 = v17;
      unsigned int v10 = v17;
    }
    else if (v8)
    {
      sub_1000F3420((uint64_t)"Scanner, no match");
      unsigned int v10 = byte_1009FFF20;
    }
    else
    {
      int v9 = *a1;
      unsigned int v10 = v7 & 0xFFFFFFF0 | ((_BYTE)v7 + 1) & 0xF;
      byte_1009FFF20 = v7 & 0xF0 | (v7 + 1) & 0xF;
      if (v9 != *((unsigned __int8 *)&qword_1007B8E66 + (v7 & 0xF))) {
        goto LABEL_20;
      }
      if ((((_BYTE)v7 + 1) & 0xFu) >= 8)
      {
        unsigned int v10 = v7 & 0xFFFFFF80 | ((_BYTE)v7 + 1) & 0xF | 0x10;
        byte_1009FFF20 = v7 & 0x80 | (v7 + 1) & 0xF | 0x10;
      }
    }
LABEL_18:
    ++v6;
    ++a1;
    unsigned int v7 = v10;
    if (v6 >= a2) {
      goto LABEL_19;
    }
  }
  int v11 = *a1;
  uint64_t v12 = qword_1009FFF28;
  uint64_t v13 = *(void *)qword_1009FFF28;
  unsigned int v10 = v7 & 0xFFFFFFF0 | ((_BYTE)v7 + 1) & 0xF;
  byte_1009FFF20 = v7 & 0xF0 | (v7 + 1) & 0xF;
  if (v11 == *(unsigned __int8 *)(v13 + (v7 & 0xF)))
  {
    if ((((_BYTE)v7 + 1) & 0xFu) >= 4)
    {
      *a3 = v6 + 1;
      byte_1009FFF20 = v7 & 0x80;
      return *(unsigned int *)(v12 + 8);
    }
    goto LABEL_18;
  }
LABEL_20:
  byte_1009FFF20 = v7 & 0x80;
  *a3 = v6;
  return 1;
}

void sub_1000F2DE4()
{
  byte_1009FFF30 = 0;
  int v0 = 3;
  do
  {
    qword_1009FFF40 = *(uint64_t *)((char *)&qword_1009FFF40 + 4);
    dword_1009FFF48 = 0;
    --v0;
  }
  while (v0);
  dword_1009FFF34 = 0;
  word_1009FFF38 = 0;
}

uint64_t sub_1000F2E20(int a1)
{
  if (!(sub_1000F27A4() | byte_1009FFF30)
    && sub_1000E63FC()
    && !(qword_1009FFF40 | dword_1009FFF34))
  {
    return 1;
  }
  if (!sub_1000F27A4())
  {
    sub_1000E6330();
    if (!a1) {
      return 0;
    }
    goto LABEL_7;
  }
  if (a1) {
LABEL_7:
  }
    sub_1000F2E9C();
  return 0;
}

uint64_t sub_1000F2E9C()
{
  int v0 = dword_1009FFF34;
  if (!dword_1009FFF34)
  {
    int v0 = qword_1009FFF40;
    qword_1009FFF40 = *(uint64_t *)((char *)&qword_1009FFF40 + 4);
    dword_1009FFF48 = 0;
    dword_1009FFF34 = v0;
  }
  switch(v0)
  {
    case 0:
      int v1 = byte_1009FFF30;
      if (!byte_1009FFF30) {
        return sub_1000E63B4();
      }
      uint64_t v2 = sub_1000E63FC();
      if (v2)
      {
        int v3 = byte_1009FFF30;
        if (qword_1009FFF40 | dword_1009FFF34) {
          goto LABEL_30;
        }
        if (byte_1009FFF30)
        {
          sub_10016A97C();
          sub_1000E63EC();
          int v3 = byte_1009FFF30 & 0xFE;
        }
        else if ((byte_1009FFF30 & 2) != 0)
        {
          sub_10016A97C();
          sub_1000E63EC();
          int v3 = byte_1009FFF30 & 0xFD;
        }
        else if ((byte_1009FFF30 & 4) != 0)
        {
          sub_10016A97C();
          sub_1000E63EC();
          int v3 = byte_1009FFF30 & 0xFB;
        }
        else
        {
          if ((byte_1009FFF30 & 8) == 0) {
            goto LABEL_30;
          }
          sub_10016A97C();
          sub_1000E63EC();
          int v3 = byte_1009FFF30 & 0xF7;
        }
        byte_1009FFF30 = v3;
      }
      else
      {
        int v3 = byte_1009FFF30;
      }
LABEL_30:
      if (v3 == v1)
      {
        sub_1000E6330();
        int v3 = byte_1009FFF30;
      }
      goto LABEL_21;
    case 1:
      if ((unsigned __int16)word_1009FFF38 <= 9u || word_1009FFF38 == 10)
      {
        sub_10016A97C();
        sub_1000E63EC();
        ++word_1009FFF38;
        if (dword_1009FFF34) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_10016A97C();
        sub_1000E63EC();
        word_1009FFF38 = 0;
      }
LABEL_15:
      int v4 = qword_1009FFF40;
      qword_1009FFF40 = *(uint64_t *)((char *)&qword_1009FFF40 + 4);
      dword_1009FFF48 = 0;
      dword_1009FFF34 = v4;
      if (!v4) {
        goto LABEL_20;
      }
LABEL_19:
      uint64_t v2 = ((uint64_t (*)(void))sub_1000F2880)();
LABEL_20:
      int v3 = byte_1009FFF30;
LABEL_21:
      if (v3) {
        sub_1000F2880(v2);
      }
      return sub_1000E63B4();
    case 2:
    case 3:
      sub_10016A97C();
      sub_1000E63EC();
      goto LABEL_15;
    default:
      goto LABEL_19;
  }
}

void sub_1000F31D8()
{
}

uint64_t sub_1000F3254()
{
  byte_1009FFF30 |= 1u;
  return sub_1000F2880();
}

uint64_t sub_1000F3268()
{
  byte_1009FFF30 |= 2u;
  return sub_1000F2880();
}

uint64_t sub_1000F327C()
{
  byte_1009FFF30 |= 4u;
  return sub_1000F2880();
}

uint64_t sub_1000F3290()
{
  byte_1009FFF30 |= 8u;
  return sub_1000F2880();
}

uint64_t sub_1000F32A4()
{
  return sub_1000F32AC(1);
}

uint64_t sub_1000F32AC(uint64_t result)
{
  if (dword_1009FFF34 != result || qword_1009FFF40 != 0)
  {
    uint64_t v2 = 0;
    while (*(_DWORD *)((char *)&qword_1009FFF40 + v2) != result)
    {
      v2 += 4;
      if (v2 == 12) {
        goto LABEL_13;
      }
    }
    if (v2 != 8)
    {
      do
      {
        *(_DWORD *)((char *)&qword_1009FFF40 + v2) = *(_DWORD *)((char *)&qword_1009FFF40 + v2 + 4);
        v2 += 4;
      }
      while (v2 != 8);
    }
    dword_1009FFF48 = 0;
LABEL_13:
    uint64_t v3 = 0;
    while (*(_DWORD *)((char *)&qword_1009FFF40 + v3))
    {
      v3 += 4;
      if (v3 == 12) {
        return sub_1000F2880();
      }
    }
    *(_DWORD *)((char *)&qword_1009FFF40 + v3) = result;
    return sub_1000F2880();
  }
  return result;
}

uint64_t sub_1000F3340()
{
  return sub_1000F32AC(2);
}

uint64_t sub_1000F3348()
{
  return sub_1000F32AC(3);
}

BOOL sub_1000F3350()
{
  return !byte_1009FFF30 && (qword_1009FFF40 | dword_1009FFF34) == 0;
}

void sub_1000F3384()
{
  sub_1000F28B4();
  sub_1000F2DE4();
  sub_1000E5D9C();
  sub_1000F2500();

  sub_1000F2868();
}

void sub_1000F33B8(int a1)
{
  if (a1 == 10)
  {
    sub_1000F3384();
  }
  else if (a1 == 5)
  {
    sub_1000F3B48();
  }
}

uint64_t sub_1000F33D4(unsigned int *a1)
{
  uint64_t result = sub_100026E24(*a1);
  if (result)
  {
    uint64_t v3 = *a1;
    return sub_100026DB4(v3);
  }
  return result;
}

void sub_1000F3420(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"%s", v2, v3, v4, v5, v6, v7, v8, a1);
    int v9 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1007457DC(v9);
    }
  }
  sub_1000F3384();
}

uint64_t sub_1000F3490(char *__src, int a2, unsigned char *a3)
{
  if (a2)
  {
    int v4 = a2;
    int v6 = 0;
    uint64_t v7 = qword_1009FFF50;
    while (1)
    {
      switch(*(_DWORD *)(v7 + 652))
      {
        case 0:
        case 4:
          *a3 = 1;
          LOWORD(v6) = v6 + v4;
          return (unsigned __int16)v6;
        case 1:
          uint64_t v8 = *__src;
          if ((v8 - 1) >= 4u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"unknown packet type received %d", v29, v30, v31, v32, v33, v34, v35, v8);
              unsigned __int16 v36 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
              {
                uint64_t v59 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                unsigned __int8 v64 = v59;
                __int16 v65 = 1024;
                int v66 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            uint64_t v37 = qword_1009FFF50;
            *(_DWORD *)(qword_1009FFF50 + 652) = 4;
            *(unsigned char *)(v37 + 656) = 1;
            int v9 = 5;
          }
          else
          {
            *(_WORD *)(v7 + 4) = 0x2000300040003uLL >> (16 * (v8 - 1));
            *(unsigned char *)(v7 + 650) = v8;
            *(_WORD *)(v7 + 6) = 0;
            *(_DWORD *)(v7 + 652) = 2;
            int v9 = 10;
          }
          sub_1000F4100(v9);
          uint64_t v7 = qword_1009FFF50;
          if (*(_DWORD *)(qword_1009FFF50 + 652) == 2)
          {
            ++__src;
            --v4;
            ++v6;
          }
          goto LABEL_47;
        case 2:
          int v19 = 0;
          unsigned int v20 = *(unsigned __int16 *)(v7 + 4);
          if (v20 >= (unsigned __int16)(v4 - 1)) {
            int v21 = (unsigned __int16)(v4 - 1);
          }
          else {
            int v21 = *(unsigned __int16 *)(v7 + 4);
          }
          int v22 = v21 + 1;
          uint64_t v23 = __src;
          break;
        case 3:
          if ((unsigned __int16)v4 >= *(unsigned __int16 *)(v7 + 4)) {
            size_t v26 = *(unsigned __int16 *)(v7 + 4);
          }
          else {
            size_t v26 = (unsigned __int16)v4;
          }
          memmove((void *)(v7 + *(unsigned __int16 *)(v7 + 6) + 10), __src, v26);
          uint64_t v7 = qword_1009FFF50;
          int v27 = *(unsigned __int16 *)(qword_1009FFF50 + 4);
          *(_WORD *)(qword_1009FFF50 + 6) += v26;
          v6 += v26;
          int v28 = v27 - v26;
          *(_WORD *)(v7 + 4) = v28;
          if (!v28) {
            goto LABEL_51;
          }
          v4 -= v26;
          __src += v26;
          goto LABEL_47;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid receive state %d", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(qword_1009FFF50 + 652));
            unsigned int v17 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            {
              uint64_t v58 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              unsigned __int8 v64 = v58;
              __int16 v65 = 1024;
              int v66 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          uint64_t v18 = qword_1009FFF50;
          *(_DWORD *)(qword_1009FFF50 + 652) = 4;
          *(unsigned char *)(v18 + 656) = 1;
          sub_1000F4100(5);
          sub_10025B8C0();
          uint64_t v7 = qword_1009FFF50;
          goto LABEL_47;
      }
      while ((_WORD)v20)
      {
        char v24 = *v23++;
        uint64_t v25 = *(unsigned __int16 *)(v7 + 6);
        *(_WORD *)(v7 + 6) = v25 + 1;
        *(unsigned char *)(v7 + v25 + 10) = v24;
        LOWORD(v20) = v20 - 1;
        *(_WORD *)(v7 + 4) = v20;
        if ((unsigned __int16)++v19 >= (unsigned __int16)v4)
        {
          if ((_WORD)v20)
          {
            int v21 = v4;
            if ((unsigned __int16)v22 != (unsigned __int16)v4)
            {
              sub_10025B8C0();
              int v21 = v22;
            }
            goto LABEL_45;
          }
          ++v21;
          break;
        }
      }
      *(_DWORD *)(v7 + 652) = 3;
      switch(*(unsigned char *)(v7 + 650))
      {
        case 1:
        case 3:
          __int16 v38 = *(unsigned __int8 *)(v7 + 12);
          goto LABEL_40;
        case 2:
          __int16 v38 = *(_WORD *)(v7 + 12);
          goto LABEL_40;
        case 4:
          __int16 v38 = *(unsigned __int8 *)(v7 + 11);
LABEL_40:
          *(_WORD *)(v7 + 4) = v38;
          unsigned __int16 v48 = *(_WORD *)(v7 + 6) + v38;
          *(_WORD *)(v7 + 8) = v48;
          if (v48 >= 0x281u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"RxPacketHeader - bogus packet length (%d)", v49, v50, v51, v52, v53, v54, v55, *(unsigned __int16 *)(qword_1009FFF50 + 8));
              uint64_t v56 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
              {
                uint64_t v60 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                unsigned __int8 v64 = v60;
                __int16 v65 = 1024;
                int v66 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            uint64_t v57 = qword_1009FFF50;
            *(_DWORD *)(qword_1009FFF50 + 652) = 4;
            *(unsigned char *)(v57 + 656) = 1;
            sub_1000F4100(5);
          }
          break;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid packet type %d", v39, v40, v41, v42, v43, v44, v45, *(unsigned __int8 *)(qword_1009FFF50 + 650));
            long long v46 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
            {
              __int16 v61 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              unsigned __int8 v64 = v61;
              __int16 v65 = 1024;
              int v66 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          uint64_t v47 = qword_1009FFF50;
          *(_DWORD *)(qword_1009FFF50 + 652) = 4;
          *(unsigned char *)(v47 + 656) = 1;
          sub_1000F4100(5);
          sub_10025B8C0();
          int v21 = 0;
          break;
      }
LABEL_45:
      v6 += v21;
      uint64_t v7 = qword_1009FFF50;
      if (!*(_WORD *)(qword_1009FFF50 + 4)) {
        break;
      }
      __src += (unsigned __int16)v21;
      v4 -= v21;
LABEL_47:
      if (!(_WORD)v4) {
        return (unsigned __int16)v6;
      }
    }
LABEL_51:
    *a3 = 1;
    if (*(unsigned char *)(v7 + 656)) {
      sub_1000F3A04();
    }
    else {
      sub_1000F3AC8();
    }
  }
  else
  {
    LOWORD(v6) = 0;
  }
  return (unsigned __int16)v6;
}

void sub_1000F3A04()
{
  uint64_t v0 = qword_1009FFF50;
  if (*(unsigned char *)(qword_1009FFF50 + 650) != 4 || *(_WORD *)(qword_1009FFF50 + 8) != 6) {
    goto LABEL_8;
  }
  uint64_t v1 = 0;
  char v2 = 1;
  uint64_t v3 = &byte_1007B8E93;
  do
  {
    int v4 = (*(v3 - 1) & *(unsigned char *)(qword_1009FFF50 + 10 + v1));
    int v5 = *v3;
    v3 += 2;
    if (v4 != v5) {
      char v2 = 0;
    }
    ++v1;
  }
  while (v1 != 6);
  if (v2)
  {
    *(unsigned char *)(qword_1009FFF50 + 656) = 0;
    *(_DWORD *)(v0 + 652) = 1;
    *(_WORD *)(v0 + 4) = 5;
    sub_1000F4100(0x7FFF);
    sub_10018E9F0();
  }
  else
  {
LABEL_8:
    sub_1000F4100(5);
    *(_DWORD *)(qword_1009FFF50 + 652) = 4;
  }
}

uint64_t sub_1000F3AC8()
{
  if (*(unsigned __int16 *)(qword_1009FFF50 + 8) >= 0x281u) {
    sub_10025B8C0();
  }
  v2[1] = 0;
  v2[0] = mach_continuous_time();
  sub_100023868(*(unsigned __int8 *)(qword_1009FFF50 + 650), (unsigned __int8 *)(qword_1009FFF50 + 10), *(unsigned __int16 *)(qword_1009FFF50 + 8), (uint64_t)v2);
  uint64_t v0 = qword_1009FFF50;
  *(_DWORD *)(qword_1009FFF50 + 652) = 1;
  *(_WORD *)(v0 + 4) = 5;
  return sub_1000F4100(0x7FFF);
}

uint64_t sub_1000F3B48()
{
  uint64_t v0 = 0;
  LOBYTE(v1) = 1;
  do
  {
    char v2 = v1;
    unsigned int v1 = *((unsigned __int16 *)&dword_1009FFF84 + v0);
    if (*((_WORD *)&dword_1009FFF84 + v0))
    {
      byte_1009FFF80 = *((unsigned char *)&word_1009FFF88 + v0);
      uint64_t v3 = (const void *)qword_1009FFF90[v0];
      qword_1009FFF60 = (uint64_t)v3;
      qword_1009FFF68 = (uint64_t)v3;
      word_1009FFF78 = v1;
      *((_WORD *)&dword_1009FFF84 + v0) = 0;
      goto LABEL_7;
    }
    uint64_t v0 = &_mh_execute_header.magic + 1;
  }
  while ((v2 & 1) != 0);
  unsigned int v1 = (unsigned __int16)word_1009FFF78;
  if (!word_1009FFF78) {
    return 0;
  }
  uint64_t v3 = (const void *)qword_1009FFF68;
LABEL_7:
  if (v1 >= (unsigned __int16)word_1009FFF70) {
    size_t v4 = (unsigned __int16)word_1009FFF70;
  }
  else {
    size_t v4 = v1;
  }
  memmove((void *)qword_1009FFF58, v3, v4);
  qword_1009FFF68 += v4;
  word_1009FFF78 -= v4;
  byte_1009FFF7C = 1;
  sub_10016A97C();
  return 0;
}

uint64_t sub_1000F3C38(int a1, __int16 a2, int a3)
{
  if (*(unsigned char *)(qword_1009FFF50 + 656)) {
    return 129;
  }
  if (a1 == 2) {
    unsigned __int16 v7 = 5;
  }
  else {
    unsigned __int16 v7 = 4;
  }
  if (sub_1000F2E20(1) && byte_1009FFF7C != 1)
  {
    if (!qword_1009FFF58) {
      sub_10025B8C0();
    }
    unsigned int v21 = (unsigned __int16)word_1009FFF70;
    if (!word_1009FFF70)
    {
      sub_10025B8C0();
      unsigned int v21 = (unsigned __int16)word_1009FFF70;
    }
    uint64_t v22 = qword_1009FFF58;
    uint64_t result = 105;
    if (qword_1009FFF58 && v21)
    {
      if (a3 + v7 <= v21)
      {
        *(unsigned char *)qword_1009FFF58 = a1;
        *(_WORD *)(v22 + 1) = a2;
        *(_WORD *)(v22 + 3) = a3;
        if (a3) {
          sub_100022CA0((char *)(v22 + v7));
        }
        qword_1009FFF68 = 0;
        word_1009FFF78 = 0;
      }
      else
      {
        unsigned __int16 v23 = v7 - 1;
        word_1009FFF78 = v23 + a3;
        *(unsigned char *)qword_1009FFF58 = a1;
        char v24 = (char *)sub_100022FE8((unsigned __int16)(v23 + a3));
        qword_1009FFF60 = (uint64_t)v24;
        if (!v24)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"OI_Malloc failed, unable to segment packet", v25, v26, v27, v28, v29, v30, v31, v33);
            uint64_t v32 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          return 106;
        }
        qword_1009FFF68 = (uint64_t)v24;
        *(_WORD *)char v24 = a2;
        *((_WORD *)v24 + 1) = a3;
        if (a3) {
          sub_100022CA0(&v24[v23]);
        }
      }
      byte_1009FFF80 = a1;
      byte_1009FFF7C = 1;
      sub_10016A97C();
      sub_1000E63EC();
      return 0;
    }
  }
  else
  {
    uint64_t v8 = 0;
    for (char i = 1; ; char i = 0)
    {
      char v10 = i;
      if (!*((_WORD *)&dword_1009FFF84 + v8)) {
        break;
      }
      uint64_t v8 = &_mh_execute_header.magic + 1;
      if ((v10 & 1) == 0)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_HCIIfc_Send_Req, backlog queue is full, busy fail", v11, v12, v13, v14, v15, v16, v17, v33);
          uint64_t v18 = sub_100050B4C(0x3Au);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        sub_10025B8C0();
        return 118;
      }
    }
    int v19 = (char *)sub_100022FE8(a3 + v7);
    uint64_t v20 = (uint64_t)v19;
    *int v19 = a1;
    *(_WORD *)(v19 + 1) = a2;
    v19[3] = a3;
    if (a1 == 2) {
      v19[4] = BYTE1(a3);
    }
    if (a3) {
      sub_100022CA0(&v19[v7]);
    }
    uint64_t result = 0;
    *((unsigned char *)&word_1009FFF88 + v8) = a1;
    *((_WORD *)&dword_1009FFF84 + v8) = a3 + v7;
    qword_1009FFF90[v8] = v20;
  }
  return result;
}

void sub_1000F3ED0(uint64_t a1, __int16 a2, int a3)
{
  qword_1009FFF58 = a1;
  word_1009FFF70 = a2;
  if (a3 == 1216) {
    return;
  }
  unsigned __int16 v23 = 0;
  uint64_t v24 = 0;
  uint64_t v22 = 0;
  if (byte_1009FFF7C)
  {
    if (!a3)
    {
      unsigned int v3 = (unsigned __int16)word_1009FFF78;
      if (word_1009FFF78)
      {
LABEL_26:
        if (v3 >= (unsigned __int16)word_1009FFF70) {
          size_t v20 = (unsigned __int16)word_1009FFF70;
        }
        else {
          size_t v20 = v3;
        }
        uint64_t v21 = qword_1009FFF68;
        memmove((void *)qword_1009FFF58, (const void *)qword_1009FFF68, v20);
        qword_1009FFF68 = v21 + v20;
        word_1009FFF78 -= v20;
        byte_1009FFF7C = 1;
        sub_10016A97C();
        return;
      }
    }
    byte_1009FFF7C = 0;
    LODWORD(v24) = a3;
    BYTE4(v24) = byte_1009FFF80;
    unsigned __int16 v23 = &v24;
    LOWORD(v22) = 8;
    uint64_t v4 = sub_100026DA8((uint64_t)sub_1000F44CC, &v22, 0);
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    if (qword_1009FFF60)
    {
      sub_100023010((void *)qword_1009FFF60);
      qword_1009FFF60 = 0;
      word_1009FFF78 = 0;
    }
    uint64_t v14 = 0;
    LOBYTE(v3) = 1;
    while (1)
    {
      char v15 = v3;
      unsigned int v3 = *((unsigned __int16 *)&dword_1009FFF84 + v14);
      if (*((_WORD *)&dword_1009FFF84 + v14)) {
        break;
      }
      uint64_t v14 = &_mh_execute_header.magic + 1;
      if ((v15 & 1) == 0) {
        goto LABEL_23;
      }
    }
LABEL_25:
    byte_1009FFF80 = *((unsigned char *)&word_1009FFF88 + v14);
    qword_1009FFF60 = qword_1009FFF90[v14];
    qword_1009FFF68 = qword_1009FFF60;
    word_1009FFF78 = v3;
    *((_WORD *)&dword_1009FFF84 + v14) = 0;
    goto LABEL_26;
  }
  uint64_t v16 = 0;
  char v17 = 1;
  do
  {
    int v18 = *((unsigned __int16 *)&dword_1009FFF84 + v16);
    if ((v17 & 1) == 0) {
      break;
    }
    char v17 = 0;
    uint64_t v16 = 1;
  }
  while (!v18);
  if (v18 && sub_1000F2E20(0))
  {
    uint64_t v14 = 0;
    LOBYTE(v3) = 1;
    while (1)
    {
      char v19 = v3;
      unsigned int v3 = *((unsigned __int16 *)&dword_1009FFF84 + v14);
      if (*((_WORD *)&dword_1009FFF84 + v14)) {
        goto LABEL_25;
      }
      uint64_t v14 = 1;
      if ((v19 & 1) == 0)
      {
LABEL_23:
        unsigned int v3 = (unsigned __int16)word_1009FFF78;
        if (word_1009FFF78) {
          goto LABEL_26;
        }
        return;
      }
    }
  }
}

uint64_t sub_1000F4100(int a1)
{
  BOOL v2 = sub_100026E24(*(_DWORD *)qword_1009FFF50);
  unsigned int v3 = (int *)qword_1009FFF50;
  if (v2)
  {
    unsigned int v4 = *(_DWORD *)qword_1009FFF50;
    return sub_10025BC54(v4, a1);
  }
  else
  {
    return sub_1000268E4((uint64_t)sub_1000F4184, 0, a1, v3);
  }
}

void sub_1000F4184()
{
  uint64_t v0 = qword_1009FFF50;
  unsigned int v1 = *(_DWORD *)(qword_1009FFF50 + 652);
  if (v1 < 2)
  {
    if (*(unsigned char *)(qword_1009FFF50 + 656))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"timed out waiting for reset response", v11, v12, v13, v14, v15, v16, v17, v28);
        int v18 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  if (v1 - 2 < 2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Timed out while receiving a packet", v2, v3, v4, v5, v6, v7, v8, v28);
      uint64_t v9 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v10 = qword_1009FFF50;
    *(_DWORD *)(qword_1009FFF50 + 652) = 4;
    *(unsigned char *)(v10 + 656) = 1;
    sub_1000F4100(5);
    return;
  }
  if (v1 == 4)
  {
    if (*(unsigned char *)(qword_1009FFF50 + 656))
    {
LABEL_16:
      sub_1000F4344();
      return;
    }
    *(_DWORD *)(qword_1009FFF50 + 652) = 1;
    *(_WORD *)(v0 + 4) = 5;
LABEL_22:
    sub_1000F4100(0x7FFFLL);
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid receive state %d", v19, v20, v21, v22, v23, v24, v25, *(unsigned int *)(qword_1009FFF50 + 652));
    uint64_t v26 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v27 = qword_1009FFF50;
  *(_DWORD *)(qword_1009FFF50 + 652) = 4;
  *(unsigned char *)(v27 + 656) = 1;
  sub_1000F4100(5);
  sub_10025B8C0();
}

uint64_t sub_1000F4344()
{
  *(unsigned char *)(qword_1009FFF50 + 656) = 0;
  uint64_t v0 = sub_100022F1C();
  uint64_t v1 = qword_1009FFF50;
  *(unsigned char *)(qword_1009FFF50 + 656) = 1;
  if (v0)
  {
    uint64_t v2 = v0;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"startResynchronize, OI_HCIIfc_Send failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return sub_1000F4100(5);
  }
  else
  {
    *(_DWORD *)(v1 + 652) = 1;
    *(_WORD *)(v1 + 4) = 5;
    return sub_1000F4100(20);
  }
}

uint64_t sub_1000F4420()
{
  qword_1009FFF90[0] = 0;
  *(void *)algn_1009FFF98 = 0;
  word_1009FFF88 = 0;
  dword_1009FFF84 = 0;
  uint64_t result = sub_10016A910();
  if (!result)
  {
    qword_1009FFF50 = (uint64_t)sub_10010CE48(0x294uLL);
    sub_1000F3384();
    uint64_t v1 = qword_1009FFF50;
    *(_DWORD *)(qword_1009FFF50 + 652) = 1;
    *(_WORD *)(v1 + 4) = 5;
    sub_1000F4100(0x7FFF);
    return 109;
  }
  return result;
}

uint64_t sub_1000F4498()
{
  if (sub_1000F2E20(1)) {
    return 0;
  }
  else {
    return 109;
  }
}

uint64_t sub_1000F44C4()
{
  return 640;
}

void sub_1000F44CC(uint64_t a1)
{
  if (!*(unsigned char *)(qword_1009FFF50 + 656)) {
    sub_100199740(*(unsigned __int8 *)(*(void *)(a1 + 8) + 4), **(unsigned int **)(a1 + 8));
  }
}

uint64_t sub_1000F44F0()
{
  if (sub_1000E6430()) {
    return 0;
  }
  sub_1000F31D8();
  return 118;
}

uint64_t sub_1000F451C()
{
  uint64_t result = dword_1009FFFA0;
  if (dword_1009FFFA0) {
    return sub_10025BC54(dword_1009FFFA0, (unsigned __int16)word_100A14814);
  }
  return result;
}

uint64_t sub_1000F4538()
{
  dword_100A1480C = 4;
  return sub_1000F454C(0);
}

uint64_t sub_1000F454C(int a1)
{
  uint64_t result = sub_1000268E4((uint64_t)sub_1000F4A44, 0, a1, &dword_100A14818);
  if (result)
  {
    uint64_t v2 = sub_10010B394(result);
    return sub_1000F458C(v2);
  }
  return result;
}

void sub_1000F458C(unsigned char *a1, unsigned int a2)
{
  if (a2 >= 2)
  {
    switch(*a1)
    {
      case 1:
        if (a2 == 2 && a1[1] == 126)
        {
          int v2 = 0;
          int v3 = 0;
          int v4 = 1;
          break;
        }
        return;
      case 2:
        if (a2 == 2 && a1[1] == 125)
        {
          int v2 = 0;
          int v3 = 0;
          int v4 = 2;
          break;
        }
        return;
      case 3:
        int v5 = a1[1];
        if (v5 != 252) {
          goto LABEL_13;
        }
        int v2 = 0;
        int v3 = 0;
        int v4 = 3;
        break;
      case 4:
        int v5 = a1[1];
LABEL_13:
        if (v5 != 123) {
          goto LABEL_15;
        }
        int v2 = 0;
        int v3 = 0;
        int v4 = 4;
        break;
      case 5:
LABEL_15:
        if (a2 != 2 || a1[1] != 250) {
          return;
        }
        int v3 = 0;
        int v4 = 5;
        int v2 = 1;
        break;
      case 6:
        if (a2 != 2 || a1[1] != 249) {
          return;
        }
        int v2 = 0;
        int v4 = 6;
        int v3 = 1;
        break;
      case 7:
        if (a2 != 2 || a1[1] != 120) {
          return;
        }
        int v2 = 0;
        int v3 = 0;
        int v4 = 7;
        break;
      default:
        return;
    }
    switch(dword_100A1480C)
    {
      case 0:
        if (v4 != 2) {
          goto LABEL_29;
        }
        dword_100A1480C = 1;
        uint64_t v6 = &word_1009FFFA4;
        word_1009FFFA4 = -1021;
        byte_1009FFFA6 = byte_100A14812 | (8 * word_100A14808) | (16 * HIBYTE(word_100A14808));
        size_t v7 = 3;
        goto LABEL_43;
      case 1:
        if (v4 == 4)
        {
          dword_100A1480C = 2;
          char v17 = a1[2];
          if ((_BYTE)word_100A14808 && (a1[2] & 8) == 0) {
            LOBYTE(word_100A14808) = 0;
          }
          if ((v17 & 0x10) == 0) {
            HIBYTE(word_100A14808) = 0;
          }
          unsigned int v18 = v17 & 7;
          byte_100A14813 = v18;
          if (v18 <= byte_100A14812)
          {
            if (byte_1009FFFA7 == 1)
            {
              byte_1009FFFA7 = 0;
              sub_10018E9F0();
            }
          }
          else
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Configuration failed - device is not configuring link correctly", v19, v20, v21, v22, v23, v24, v25, v27);
              uint64_t v26 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            dword_100A1480C = 0;
LABEL_56:
            sub_1000F454C(1);
          }
        }
        else
        {
          if (v4 == 3)
          {
LABEL_41:
            uint64_t v6 = (__int16 *)&unk_1007B8EA0;
          }
          else
          {
LABEL_29:
            if (v4 != 1) {
              return;
            }
            uint64_t v6 = (__int16 *)&unk_1007B8E9E;
          }
LABEL_42:
          size_t v7 = 2;
LABEL_43:
          sub_1000F5F24(v6, v7, 15);
        }
        break;
      case 2:
        switch(v4)
        {
          case 1:
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Transport resynching", v8, v9, v10, v11, v12, v13, v14, v27);
              uint64_t v15 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            dword_100A1480C = 0;
            sub_1000F5634();
            sub_1000F4BE4();
            byte_1009FFFA7 = 1;
            goto LABEL_56;
          case 3:
            goto LABEL_41;
          case 5:
            goto LABEL_38;
          case 7:
            int v16 = 3;
            goto LABEL_58;
          default:
            return;
        }
        return;
      case 3:
        if (!v2) {
          return;
        }
        dword_100A1480C = 2;
LABEL_38:
        uint64_t v6 = (__int16 *)&unk_1007B8EA2;
        goto LABEL_42;
      case 4:
        if (v3)
        {
          int v16 = 2;
LABEL_58:
          dword_100A1480C = v16;
        }
        return;
      default:
        return;
    }
  }
}

uint64_t sub_1000F4964()
{
  dword_1009FFFA0 = 0;
  dword_100A1480C = 0;
  byte_1009FFFA7 = 0;
  uint64_t result = sub_10016A910();
  if (!result)
  {
    byte_100A14812 = 4;
    word_100A14810 = 1024;
    word_100A14808 = 256;
    uint64_t result = sub_1000F5364();
    if (!result)
    {
      uint64_t result = sub_1000F4B70();
      if (!result)
      {
        dword_100A1480C = 0;
        sub_1000F454C(1);
        return 109;
      }
    }
  }
  return result;
}

uint64_t sub_1000F49E8()
{
  if (dword_100A1480C == 2) {
    return 0;
  }
  else {
    return 109;
  }
}

uint64_t sub_1000F4A00(int a1, __int16 a2, __int16 a3)
{
  return 0;
}

uint64_t sub_1000F4A1C()
{
  return (unsigned __int16)word_100A14810;
}

uint64_t sub_1000F4A28(int a1, __int16 a2, unsigned int a3, const void *a4)
{
  return 0;
}

void sub_1000F4A44()
{
  if (dword_100A1480C != dword_1009FFFAC)
  {
    dword_1009FFFA8 = 0;
    dword_1009FFFAC = dword_100A1480C;
    if (!dword_100A1480C) {
      goto LABEL_4;
    }
    goto LABEL_6;
  }
  if (dword_1009FFFA8 < 26)
  {
    ++dword_1009FFFA8;
    if (!dword_100A1480C)
    {
LABEL_4:
      uint64_t v0 = 2;
      sub_1000F5F24(&unk_1007B8EA6, 2uLL, 15);
LABEL_10:
      sub_1000F454C(v0);
      return;
    }
LABEL_6:
    if (dword_100A1480C == 1)
    {
      sub_1000F5F24(&word_1009FFFA4, 3uLL, 15);
      uint64_t v0 = 2;
    }
    else
    {
      if (dword_100A1480C != 4) {
        return;
      }
      sub_1000F5F24(&unk_1007B8EA4, 2uLL, 15);
      uint64_t v0 = 1;
    }
    goto LABEL_10;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"H5 transport error sending link packet: retry limit exceeded, giving up", v1, v2, v3, v4, v5, v6, v7, v9);
    uint64_t v8 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_10010B394(112);
  sub_1000F4B68();
}

uint64_t sub_1000F4B68()
{
  return 0;
}

uint64_t sub_1000F4B70()
{
  if (!word_100A14810) {
    return 103;
  }
  qword_1009FFFB0 = 0;
  byte_1009FFFB8 = 0;
  word_1009FFFBA = word_100A14810 + 6;
  qword_1009FFFB0 = (uint64_t)sub_10010CE48(0x10uLL);
  uint64_t v0 = sub_10010CE48((unsigned __int16)word_1009FFFBA);
  uint64_t result = 0;
  *(void *)qword_1009FFFB0 = v0;
  return result;
}

uint64_t sub_1000F4BE4()
{
  byte_1009FFFB8 = 0;
  *(_DWORD *)(qword_1009FFFB0 + 12) = 0;
  return 0;
}

uint64_t sub_1000F4C00(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = (char **)qword_1009FFFB0;
  if (a2)
  {
    uint64_t v3 = a1;
    while (1)
    {
      uint64_t v4 = (a2 - 1);
      int v6 = *v3++;
      int v5 = v6;
      switch(*((_DWORD *)v2 + 3))
      {
        case 0:
          if (v5 == 192) {
            int v7 = 1;
          }
          else {
            int v7 = 2;
          }
          *((_DWORD *)v2 + 3) = v7;
          *((_WORD *)v2 + 4) = 0;
          goto LABEL_65;
        case 1:
          if (v5 == 219)
          {
            *((_DWORD *)v2 + 3) = 3;
          }
          else
          {
            if (v5 == 192)
            {
              __int16 v86 = 0;
              unsigned int v8 = *((unsigned __int16 *)v2 + 4);
              if (v8 <= 3)
              {
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Short packet %@", v9, v10, v11, v12, v13, v14, v15, (uint64_t)*v2);
                  int v16 = sub_100050B4C(0x3Au);
                  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_38;
                  }
                }
LABEL_63:
                uint64_t v2 = (char **)qword_1009FFFB0;
                goto LABEL_64;
              }
              uint64_t v22 = (unsigned __int8 *)*v2;
              unsigned int v23 = **v2;
              char v24 = (*v2)[1];
              int v25 = (*v2)[2];
              if ((*v2)[3] == ~(v24 + **v2 + v25))
              {
                if ((v23 & 0x40) != 0)
                {
                  LOWORD(v8) = v8 - 2;
                  *((_WORD *)v2 + 4) = v8;
                  uint64_t v26 = &v22[(unsigned __int16)v8];
                  unsigned int v27 = v22[1];
                  int v25 = v22[2];
                }
                else
                {
                  uint64_t v26 = 0;
                  unsigned int v27 = (*v2)[1];
                }
                uint64_t v35 = (v27 >> 4) | (16 * v25);
                if ((unsigned __int16)v8 - 4 == v35)
                {
                  uint64_t v36 = v24 & 0xF;
                  if (v36 == 15)
                  {
                    sub_1000F458C(v22 + 4, (v27 >> 4) | (16 * v25));
                    goto LABEL_63;
                  }
                  if (dword_100A1480C != 2) {
                    goto LABEL_63;
                  }
                  sub_1000F451C();
                  if ((v23 & 0x40) == 0)
                  {
LABEL_41:
                    sub_1000F6274((v23 >> 3) & 7);
                    switch((int)v36)
                    {
                      case 0:
                        goto LABEL_63;
                      case 1:
                      case 2:
                      case 4:
                        if ((v23 & 0x80000000) == 0)
                        {
                          if (sub_100058654())
                          {
                            sub_100056E24((uint64_t)"Data packets expected to have reliable flag set", v45, v46, v47, v48, v49, v50, v51, v84);
                            uint64_t v52 = sub_100050B4C(0x3Au);
                            if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
                            {
                              BOOL v82 = sub_100050714();
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = v82;
                              *(_WORD *)&unsigned char buf[12] = 1024;
                              *(_DWORD *)&buf[14] = 0xFFFF;
                              _os_log_error_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
                            }
                          }
                        }
                        char v53 = v23 & 7;
                        if ((v23 & 7) == byte_1009FFFB8)
                        {
                          byte_1009FFFB8 = (v23 + 1) & 7;
                          sub_1000F6394(v53);
                          goto LABEL_62;
                        }
                        if (((~byte_1009FFFB8 + (_BYTE)v23) & 7u) >= byte_100A14813) {
                          sub_1000F6394(v53);
                        }
                        break;
                      case 3:
                        if ((v23 & 0x80000000) != 0)
                        {
                          if (sub_100058654())
                          {
                            sub_100056E24((uint64_t)"Reliable flag not expected on SCO data packet", v75, v76, v77, v78, v79, v80, v81, v84);
                            int v16 = sub_100050B4C(0x3Au);
                            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                              goto LABEL_38;
                            }
                          }
                        }
                        else
                        {
LABEL_62:
                          *(void *)&buf[8] = 0;
                          *(void *)buf = mach_continuous_time();
                          buf[8] = 0;
                          sub_100023868(v36, (unsigned __int8 *)*v2 + 4, v35, (uint64_t)buf);
                        }
                        break;
                      default:
                        if (sub_100058654())
                        {
                          sub_100056E24((uint64_t)"Unknown packet type", v68, v69, v70, v71, v72, v73, v74, v84);
                          int v16 = sub_100050B4C(0x3Au);
                          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                            goto LABEL_38;
                          }
                        }
                        break;
                    }
                    goto LABEL_63;
                  }
                  if (HIBYTE(word_100A14808))
                  {
                    unsigned __int16 v85 = -1;
                    sub_10025B354(*v2, *((unsigned __int16 *)v2 + 4), &v85);
                    sub_10025B390(v85, &v86);
                    if (__PAIR64__(v26[1], *v26) == __PAIR64__(HIBYTE(v86), v86)) {
                      goto LABEL_41;
                    }
                    if (!sub_100058654()) {
                      goto LABEL_63;
                    }
                    sub_100056E24((uint64_t)"Data integrity error - discarding packet\n%@", v54, v55, v56, v57, v58, v59, v60, (uint64_t)*v2);
                    int v16 = sub_100050B4C(0x3Au);
                    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_63;
                    }
                  }
                  else
                  {
                    if (!sub_100058654()) {
                      goto LABEL_63;
                    }
                    sub_100056E24((uint64_t)"Data integrity bit not allowed", v61, v62, v63, v64, v65, v66, v67, v84);
                    int v16 = sub_100050B4C(0x3Au);
                    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_63;
                    }
                  }
                }
                else
                {
                  if (!sub_100058654()) {
                    goto LABEL_63;
                  }
                  sub_100056E24((uint64_t)"Wrong packet length header says %d read %d bytes", v37, v38, v39, v40, v41, v42, v43, v35);
                  int v16 = sub_100050B4C(0x3Au);
                  if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_63;
                  }
                }
              }
              else
              {
                if (!sub_100058654()) {
                  goto LABEL_63;
                }
                sub_100056E24((uint64_t)"Header checksum error", v28, v29, v30, v31, v32, v33, v34, v84);
                int v16 = sub_100050B4C(0x3Au);
                if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_63;
                }
              }
LABEL_38:
              uint64_t v44 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = v44;
              *(_WORD *)&unsigned char buf[12] = 1024;
              *(_DWORD *)&buf[14] = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              goto LABEL_63;
            }
            uint64_t v20 = *((unsigned __int16 *)v2 + 4);
            if (v20 == (unsigned __int16)word_1009FFFBA) {
              goto LABEL_64;
            }
            uint64_t v21 = (uint64_t)*v2;
            *((_WORD *)v2 + 4) = v20 + 1;
            *(unsigned char *)(v21 + v20) = v5;
          }
LABEL_65:
          a2 = v4;
          a1 = v3;
          if (!(_WORD)v4)
          {
            uint64_t v2 = (char **)qword_1009FFFB0;
            return (unsigned __int16)word_1009FFFBA - *((unsigned __int16 *)v2 + 4);
          }
          break;
        case 2:
          if (v5 == 192) {
LABEL_64:
          }
            *((_DWORD *)v2 + 3) = 0;
          goto LABEL_65;
        case 3:
          *((_DWORD *)v2 + 3) = 1;
          if (v5 == 221)
          {
            uint64_t v17 = (uint64_t)*v2;
            uint64_t v18 = *((unsigned __int16 *)v2 + 4);
            *((_WORD *)v2 + 4) = v18 + 1;
            char v19 = -37;
            goto LABEL_24;
          }
          if (v5 == 220)
          {
            uint64_t v17 = (uint64_t)*v2;
            uint64_t v18 = *((unsigned __int16 *)v2 + 4);
            *((_WORD *)v2 + 4) = v18 + 1;
            char v19 = -64;
LABEL_24:
            *(unsigned char *)(v17 + v18) = v19;
            goto LABEL_65;
          }
          *((_DWORD *)v2 + 3) = 0;
          uint64_t v3 = a1;
          uint64_t v4 = a2;
          goto LABEL_65;
        default:
          sub_10025B8C0();
          uint64_t v2 = (char **)qword_1009FFFB0;
          goto LABEL_65;
      }
    }
  }
  return (unsigned __int16)word_1009FFFBA - *((unsigned __int16 *)v2 + 4);
}

uint64_t sub_1000F5364()
{
  if (!word_100A14810) {
    return 103;
  }
  qword_1009FFFC0 = 0;
  qword_1009FFFC8 = 0;
  qword_1009FFFD0 = 0;
  qword_1009FFFD8 = 0;
  qword_1009FFFE0 = 0;
  qword_1009FFFE8 = 0;
  word_1009FFFF0 = 0;
  byte_1009FFFF2 = 0;
  dword_100A1481C = 0;
  dword_1009FFFF4 = 0;
  byte_1009FFFF8 = 0;
  dword_1009FFFFC = 0;
  byte_100A00000 = 0;
  byte_100A00001 = 0;
  if (byte_100A14812)
  {
    uint64_t v0 = 0;
    unsigned int v1 = 0;
    do
    {
      qword_1009FFFD0 = (uint64_t)sub_10010CE48(0x18uLL);
      uint64_t v2 = sub_10010CE48((unsigned __int16)word_100A14810);
      uint64_t v3 = (void *)qword_1009FFFD0;
      *(void *)(qword_1009FFFD0 + 16) = v2;
      *uint64_t v3 = v0;
      ++v1;
      uint64_t v0 = v3;
    }
    while (v1 < byte_100A14812);
  }
  qword_1009FFFD8 = (uint64_t)sub_10010CE48(0x18uLL);
  *(void *)(qword_1009FFFD8 + 16) = sub_10010CE48(0x102uLL);
  qword_1009FFFE0 = (uint64_t)sub_10010CE48(0x18uLL);
  *(void *)(qword_1009FFFE0 + 16) = sub_10010CE48(0x102uLL);
  uint64_t result = sub_1000268E4((uint64_t)sub_1000F54FC, 0, 0x7FFF, &dword_1009FFFF4);
  if (!result)
  {
    return sub_1000268E4((uint64_t)sub_1000F55D4, 0, 0x7FFF, &dword_1009FFFFC);
  }
  return result;
}

void sub_1000F54FC()
{
  byte_1009FFFF8 = 0;
  uint64_t v0 = sub_1000268E4((uint64_t)sub_1000F54FC, 0, 0x7FFF, &dword_1009FFFF4);
  if (v0)
  {
    uint64_t v5 = sub_10010B394(v0);
    sub_1000F55D4(v5);
  }
  else
  {
    unsigned int v1 = (void *)qword_1009FFFC8;
    if (dword_100A1480C == 2 && qword_1009FFFC8 != 0)
    {
      do
      {
        uint64_t v3 = v1;
        unsigned int v1 = (void *)*v1;
      }
      while (v1);
      if (qword_1009FFFC0 == qword_1009FFFE0)
      {
        *uint64_t v3 = *(void *)qword_1009FFFC0;
        uint64_t v4 = (uint64_t *)qword_1009FFFC0;
      }
      else
      {
        *uint64_t v3 = qword_1009FFFC0;
        uint64_t v3 = (void *)qword_1009FFFC8;
        uint64_t v4 = &qword_1009FFFC0;
      }
      *uint64_t v4 = (uint64_t)v3;
      qword_1009FFFC8 = 0;
      if (!dword_100A1481C)
      {
        sub_1000F5A48();
      }
    }
  }
}

uint64_t sub_1000F55D4()
{
  if (byte_100A00000)
  {
    byte_100A00000 = 0;
    sub_1000F5F24(0, 0, 0);
  }
  uint64_t result = sub_1000268E4((uint64_t)sub_1000F55D4, 0, 0x7FFF, &dword_1009FFFFC);
  if (result)
  {
    uint64_t v1 = sub_10010B394(result);
    return sub_1000F5634(v1);
  }
  return result;
}

uint64_t sub_1000F5634()
{
  uint64_t result = sub_10025BC54(dword_1009FFFF4, 0x7FFF);
  if (!result)
  {
    uint64_t result = sub_10025BC54(dword_1009FFFFC, 0x7FFF);
    if (!result)
    {
      uint64_t v1 = qword_1009FFFD0;
      uint64_t v2 = qword_1009FFFC8;
      if (qword_1009FFFC8)
      {
        do
        {
          uint64_t v3 = *(void *)v2;
          qword_1009FFFC8 = *(void *)v2;
          if (*(unsigned char *)(v2 + 11) == 2)
          {
            *(void *)uint64_t v2 = v1;
            qword_1009FFFD0 = v2;
            uint64_t v3 = qword_1009FFFC8;
            uint64_t v1 = v2;
          }
          uint64_t v2 = v3;
        }
        while (v3);
      }
      uint64_t v4 = qword_1009FFFC0;
      if (qword_1009FFFC0)
      {
        do
        {
          uint64_t v5 = *(void *)v4;
          qword_1009FFFC0 = *(void *)v4;
          if (*(unsigned char *)(v4 + 11) == 2)
          {
            *(void *)uint64_t v4 = v1;
            qword_1009FFFD0 = v4;
            uint64_t v1 = v4;
          }
          uint64_t v4 = v5;
        }
        while (v5);
      }
      uint64_t result = 0;
      dword_100A1481C = 0;
      byte_100A00000 = 0;
      byte_100A00001 = 0;
      word_1009FFFF0 = 0;
      byte_1009FFFF2 = 0;
      byte_1009FFFF8 = 0;
    }
  }
  return result;
}

void sub_1000F5718(int a1, __int16 a2, __int16 a3)
{
  char v5 = a1;
  int v6 = a1 - 1;
  if ((a1 - 1) >= 4u) {
    sub_10025B8C0();
  }
  int v7 = dword_100A1480C;
  if (dword_100A1480C == 3)
  {
    sub_1000F4538();
    int v7 = dword_100A1480C;
    if (dword_100A1480C == 4) {
      goto LABEL_11;
    }
    sub_10025B8C0();
    int v7 = dword_100A1480C;
  }
  if (v7 != 2 && v7 != 4)
  {
    char v14 = v5;
LABEL_24:
    sub_1000F59F4(v14);
    return;
  }
LABEL_11:
  switch(v6)
  {
    case 0:
      uint64_t v9 = qword_1009FFFD8;
      *(unsigned char *)(qword_1009FFFD8 + 11) = 1;
      *(_WORD *)(v9 + 8) = a3 + 3;
      sub_100022CA0((char *)(*(void *)(v9 + 16) + 3));
      uint64_t v10 = qword_1009FFFD8;
      **(_WORD **)(qword_1009FFFD8 + 16) = a2;
      *(unsigned char *)(*(void *)(v10 + 16) + 2) = a3;
      char v11 = byte_1009FFFF2;
      *(unsigned char *)(v10 + 10) = byte_1009FFFF2;
      *(void *)uint64_t v10 = 0;
      byte_1009FFFF2 = (v11 + 1) & 7;
      uint64_t v12 = &qword_1009FFFC0;
      uint64_t v13 = (uint64_t *)qword_1009FFFC0;
      if (qword_1009FFFC0)
      {
        do
        {
          uint64_t v12 = v13;
          uint64_t v13 = (uint64_t *)*v13;
        }
        while (v13);
      }
      *uint64_t v12 = v10;
      goto LABEL_34;
    case 1:
      uint64_t v15 = qword_1009FFFD0;
      if (!qword_1009FFFD0)
      {
        sub_10025B8C0();
        uint64_t v15 = qword_1009FFFD0;
      }
      qword_1009FFFD0 = *(void *)v15;
      *(unsigned char *)(v15 + 11) = 2;
      *(_WORD *)(v15 + 8) = a3 + 4;
      sub_100022CA0((char *)(*(void *)(v15 + 16) + 4));
      **(_WORD **)(v15 + 16) = a2;
      *(_WORD *)(*(void *)(v15 + 16) + 2) = a3;
      char v16 = byte_1009FFFF2;
      *(unsigned char *)(v15 + 10) = byte_1009FFFF2;
      *(void *)uint64_t v15 = 0;
      byte_1009FFFF2 = (v16 + 1) & 7;
      uint64_t v17 = &qword_1009FFFC0;
      uint64_t v18 = (uint64_t *)qword_1009FFFC0;
      if (qword_1009FFFC0)
      {
        do
        {
          uint64_t v17 = v18;
          uint64_t v18 = (uint64_t *)*v18;
        }
        while (v18);
      }
      *uint64_t v17 = v15;
      if (!qword_1009FFFD0) {
        goto LABEL_34;
      }
      char v19 = 2;
      goto LABEL_33;
    case 2:
      if (v7 == 4)
      {
        char v14 = 3;
        goto LABEL_24;
      }
      uint64_t v20 = qword_1009FFFE0;
      *(unsigned char *)(qword_1009FFFE0 + 11) = 3;
      *(_WORD *)(v20 + 8) = a3 + 3;
      sub_100022CA0((char *)(*(void *)(v20 + 16) + 3));
      uint64_t v21 = qword_1009FFFE0;
      **(_WORD **)(qword_1009FFFE0 + 16) = a2;
      *(unsigned char *)(*(void *)(v21 + 16) + 2) = a3;
      if (*(unsigned char *)(v21 + 11)) {
        char v22 = 0;
      }
      else {
        char v22 = byte_100A00001;
      }
      *(unsigned char *)(v21 + 10) = v22;
      if (qword_1009FFFC0 != v21)
      {
        *(void *)uint64_t v21 = qword_1009FFFC0;
        qword_1009FFFC0 = v21;
      }
      char v19 = 3;
LABEL_33:
      sub_1000F59F4(v19);
LABEL_34:
      if (!dword_100A1481C)
      {
        sub_1000F5A48();
      }
      break;
    default:
      sub_10025B8C0();
      goto LABEL_34;
  }
}

void sub_1000F59F4(char a1)
{
  char v3 = a1;
  v2[1] = &v3;
  v2[0] = (const void *)1;
  uint64_t v1 = sub_100026DA8((uint64_t)sub_1000F6414, v2, 0);
  if (v1)
  {
    sub_10010B394(v1);
    sub_1000F5A48();
  }
}

void sub_1000F5A48()
{
  uint64_t v0 = qword_1009FFFC0;
  qword_1009FFFE8 = qword_1009FFFC0;
  unsigned int v1 = *(unsigned __int8 *)(qword_1009FFFC0 + 11);
  if (v1 > 4 || ((1 << v1) & 0x16) == 0)
  {
    unsigned int v6 = 0;
  }
  else
  {
    char v3 = &qword_1009FFFC8;
    unsigned int v4 = -1;
    do
    {
      char v3 = (uint64_t *)*v3;
      ++v4;
    }
    while (v3);
    int v5 = byte_100A14813;
    if (v4 > byte_100A14813)
    {
      sub_10025B8C0();
      int v5 = byte_100A14813;
    }
    if (v5 == v4)
    {
      dword_100A1481C = 0;
      return;
    }
    uint64_t v0 = qword_1009FFFE8;
    unsigned int v6 = *(unsigned __int8 *)(qword_1009FFFE8 + 10) | 0xFFFFFF80;
    unsigned int v1 = *(unsigned __int8 *)(qword_1009FFFE8 + 11);
  }
  int v11 = v6;
  qword_1009FFFC0 = *(void *)v0;
  *(void *)uint64_t v0 = 0;
  dword_100A1481C = 1;
  if (v1 != 15)
  {
    v6 |= 8 * byte_100A00001;
    LOBYTE(v11) = v6;
    if (byte_100A00000)
    {
      byte_100A00000 = 0;
      sub_10025BC54(dword_1009FFFFC, 0x7FFF);
      uint64_t v0 = qword_1009FFFE8;
      unsigned int v1 = *(unsigned __int8 *)(qword_1009FFFE8 + 11);
    }
  }
  unsigned int v7 = *(unsigned __int16 *)(v0 + 8);
  int v8 = v1 | (16 * v7);
  BYTE1(v11) = v8;
  BYTE2(v11) = v7 >> 4;
  *(unsigned char *)qword_100A00010 = -64;
  word_100A0001A = 1;
  if (!HIBYTE(word_100A14808) || ((v9 = *(unsigned __int8 *)(v0 + 11)) != 0 ? (BOOL v10 = v9 == 15) : (BOOL v10 = 1), v10))
  {
    HIBYTE(v11) = ~(v8 + v6 + (v7 >> 4));
  }
  else
  {
    LOBYTE(v11) = v6 | 0x40;
    HIBYTE(v11) = ~(v8 + (v6 | 0x40) + (v7 >> 4));
    word_100A00008 = -1;
    sub_10025B354((char *)&v11, 4, &word_100A00008);
    sub_10025B354(*(char **)(qword_1009FFFE8 + 16), *(unsigned __int16 *)(qword_1009FFFE8 + 8), &word_100A00008);
  }
  sub_1000F6438((uint64_t)&v11, 4);
  word_1009FFFF0 = 0;
  sub_1000F451C();
  sub_1000F60E0();
}

void sub_1000F5C2C(int a1, __int16 a2, unsigned int a3, const void *a4)
{
  char v7 = a1;
  int v8 = a1 - 1;
  if ((a1 - 1) >= 4u) {
    sub_10025B8C0();
  }
  int v9 = dword_100A1480C;
  if (dword_100A1480C == 3)
  {
    sub_1000F4538();
    int v9 = dword_100A1480C;
    if (dword_100A1480C == 4) {
      goto LABEL_11;
    }
    sub_10025B8C0();
    int v9 = dword_100A1480C;
  }
  if (v9 != 2 && v9 != 4)
  {
    char v16 = v7;
LABEL_24:
    sub_1000F59F4(v16);
    return;
  }
LABEL_11:
  switch(v8)
  {
    case 0:
      uint64_t v11 = qword_1009FFFD8;
      *(unsigned char *)(qword_1009FFFD8 + 11) = 1;
      *(_WORD *)(v11 + 8) = a3 + 3;
      memmove((void *)(*(void *)(v11 + 16) + 3), a4, a3);
      uint64_t v12 = qword_1009FFFD8;
      **(_WORD **)(qword_1009FFFD8 + 16) = a2;
      *(unsigned char *)(*(void *)(v12 + 16) + 2) = a3;
      char v13 = byte_1009FFFF2;
      *(unsigned char *)(v12 + 10) = byte_1009FFFF2;
      *(void *)uint64_t v12 = 0;
      byte_1009FFFF2 = (v13 + 1) & 7;
      char v14 = &qword_1009FFFC0;
      uint64_t v15 = (uint64_t *)qword_1009FFFC0;
      if (qword_1009FFFC0)
      {
        do
        {
          char v14 = v15;
          uint64_t v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
      *char v14 = v12;
      goto LABEL_34;
    case 1:
      uint64_t v17 = qword_1009FFFD0;
      if (!qword_1009FFFD0)
      {
        sub_10025B8C0();
        uint64_t v17 = qword_1009FFFD0;
      }
      qword_1009FFFD0 = *(void *)v17;
      *(unsigned char *)(v17 + 11) = 2;
      *(_WORD *)(v17 + 8) = a3 + 4;
      memmove((void *)(*(void *)(v17 + 16) + 4), a4, a3);
      **(_WORD **)(v17 + 16) = a2;
      *(_WORD *)(*(void *)(v17 + 16) + 2) = a3;
      char v18 = byte_1009FFFF2;
      *(unsigned char *)(v17 + 10) = byte_1009FFFF2;
      *(void *)uint64_t v17 = 0;
      byte_1009FFFF2 = (v18 + 1) & 7;
      char v19 = &qword_1009FFFC0;
      uint64_t v20 = (uint64_t *)qword_1009FFFC0;
      if (qword_1009FFFC0)
      {
        do
        {
          char v19 = v20;
          uint64_t v20 = (uint64_t *)*v20;
        }
        while (v20);
      }
      *char v19 = v17;
      if (!qword_1009FFFD0) {
        goto LABEL_34;
      }
      char v21 = 2;
      goto LABEL_33;
    case 2:
      if (v9 == 4)
      {
        char v16 = 3;
        goto LABEL_24;
      }
      uint64_t v22 = qword_1009FFFE0;
      *(unsigned char *)(qword_1009FFFE0 + 11) = 3;
      *(_WORD *)(v22 + 8) = a3 + 3;
      memmove((void *)(*(void *)(v22 + 16) + 3), a4, a3);
      uint64_t v23 = qword_1009FFFE0;
      **(_WORD **)(qword_1009FFFE0 + 16) = a2;
      *(unsigned char *)(*(void *)(v23 + 16) + 2) = a3;
      if (*(unsigned char *)(v23 + 11)) {
        char v24 = 0;
      }
      else {
        char v24 = byte_100A00001;
      }
      *(unsigned char *)(v23 + 10) = v24;
      if (qword_1009FFFC0 != v23)
      {
        *(void *)uint64_t v23 = qword_1009FFFC0;
        qword_1009FFFC0 = v23;
      }
      char v21 = 3;
LABEL_33:
      sub_1000F59F4(v21);
LABEL_34:
      if (!dword_100A1481C)
      {
        sub_1000F5A48();
      }
      break;
    default:
      sub_10025B8C0();
      goto LABEL_34;
  }
}

void sub_1000F5F24(void *__src, size_t __len, int a3)
{
  int v3 = a3;
  unsigned int v4 = __len;
  if (a3 && a3 != 15) {
    sub_10025B8C0();
  }
  if (v4 >= 0x103)
  {
    sub_10025B8C0();
    uint64_t v6 = qword_1009FFFE0;
    *(unsigned char *)(qword_1009FFFE0 + 11) = v3;
    goto LABEL_8;
  }
  uint64_t v6 = qword_1009FFFE0;
  *(unsigned char *)(qword_1009FFFE0 + 11) = v3;
  if (v4)
  {
LABEL_8:
    memmove(*(void **)(v6 + 16), __src, v4);
    uint64_t v6 = qword_1009FFFE0;
    int v3 = *(unsigned __int8 *)(qword_1009FFFE0 + 11);
  }
  *(_WORD *)(v6 + 8) = v4;
  char v7 = byte_100A00001;
  if (v3) {
    char v7 = 0;
  }
  *(unsigned char *)(v6 + 10) = v7;
  if (qword_1009FFFC0 != v6)
  {
    *(void *)uint64_t v6 = qword_1009FFFC0;
    qword_1009FFFC0 = v6;
  }
  if (!dword_100A1481C)
  {
    sub_1000F5A48();
  }
}

uint64_t sub_1000F6000(uint64_t result, __int16 a2, int a3)
{
  qword_100A00010 = result;
  word_100A00018 = a2;
  word_100A0001A = 0;
  if (a3)
  {
    if (a3 == 1216) {
      return result;
    }
    dword_100A1481C = 2;
  }
  else if (dword_100A1481C == 1)
  {
    return sub_1000F60E0();
  }
  if (qword_1009FFFC8 && (byte_1009FFFF8 & 1) == 0)
  {
    uint64_t result = sub_10025BC54(dword_1009FFFF4, 2);
    if (!result)
    {
      byte_1009FFFF8 = 1;
      goto LABEL_12;
    }
    sub_10010B394(result);
    return sub_1000F60E0();
  }
LABEL_12:
  if (qword_1009FFFC0)
  {
    return sub_1000F5A48();
  }
  else
  {
    dword_100A1481C = 0;
  }
  return result;
}

uint64_t sub_1000F60E0()
{
  word_1009FFFF0 += sub_1000F6438(*(void *)(qword_1009FFFE8 + 16) + (unsigned __int16)word_1009FFFF0, (unsigned __int16)(*(_WORD *)(qword_1009FFFE8 + 8) - word_1009FFFF0));
  uint64_t v0 = qword_1009FFFE8;
  unsigned int v1 = (unsigned __int16)word_100A0001A;
  if (*(unsigned __int16 *)(qword_1009FFFE8 + 8) > (unsigned __int16)word_1009FFFF0) {
    goto LABEL_14;
  }
  int v2 = (unsigned __int16)word_100A00018;
  if (!HIBYTE(word_100A14808)
    || (*(unsigned char *)(qword_1009FFFE8 + 11) ? (BOOL v3 = *(unsigned char *)(qword_1009FFFE8 + 11) == 15) : (BOOL v3 = 1), v3))
  {
    if (word_100A00018 == word_100A0001A) {
      goto LABEL_14;
    }
  }
  else
  {
    __int16 v7 = 0;
    if ((unsigned __int16)(word_100A00018 - word_100A0001A) <= 4u) {
      goto LABEL_14;
    }
    sub_10025B390((unsigned __int16)word_100A00008, &v7);
    sub_1000F6438((uint64_t)&v7, 2);
    if (v2 == v1) {
      goto LABEL_14;
    }
    uint64_t v0 = qword_1009FFFE8;
    unsigned int v1 = (unsigned __int16)word_100A0001A;
  }
  word_100A0001A = v1 + 1;
  *(unsigned char *)(qword_100A00010 + v1) = -64;
  dword_100A1481C = 2;
  if (v0 != qword_1009FFFE0)
  {
    unsigned int v4 = &qword_1009FFFC8;
    int v5 = (uint64_t *)qword_1009FFFC8;
    if (qword_1009FFFC8)
    {
      do
      {
        unsigned int v4 = v5;
        int v5 = (uint64_t *)*v5;
      }
      while (v5);
    }
    *unsigned int v4 = v0;
  }
  qword_1009FFFE8 = 0;
LABEL_14:
  uint64_t result = sub_10016A97C();
  if (result == 625) {
    return sub_1000F6000(qword_100A00010, word_100A00018, 625);
  }
  return result;
}

void sub_1000F6274(int a1)
{
  uint64_t v1 = qword_1009FFFC8;
  if (!qword_1009FFFC8) {
    return;
  }
  char v2 = a1 + 7;
  unsigned int v3 = (a1 + 7 - *(unsigned __int8 *)(qword_1009FFFC8 + 10)) & 7;
  unsigned int v4 = byte_100A14813;
  if (v3 >= byte_100A14813) {
    return;
  }
  do
  {
    qword_1009FFFC8 = *(void *)v1;
    uint64_t v5 = *(unsigned __int8 *)(v1 + 11);
    if (v5 != 1)
    {
      if (v5 != 2)
      {
        if (v5 == 4) {
          goto LABEL_9;
        }
        sub_10025B8C0();
      }
      uint64_t v6 = qword_1009FFFD0;
      *(void *)uint64_t v1 = qword_1009FFFD0;
      qword_1009FFFD0 = v1;
      if (v6) {
        goto LABEL_10;
      }
      uint64_t v5 = 2;
    }
LABEL_9:
    sub_100199740(v5, 0);
LABEL_10:
    uint64_t v1 = qword_1009FFFC8;
    if (!qword_1009FFFC8)
    {
      sub_10025BC54(dword_1009FFFF4, 0x7FFF);
      byte_1009FFFF8 = 0;
      return;
    }
  }
  while (((v2 - *(unsigned char *)(qword_1009FFFC8 + 10)) & 7u) < byte_100A14813);
  if (v3 < v4)
  {
    unsigned int v7 = dword_1009FFFF4;
    sub_10025BC54(v7, 2);
  }
}

void sub_1000F6394(char a1)
{
  if (((~a1 + byte_100A00001) & 7u) >= byte_100A14813) {
    byte_100A00001 = (a1 + 1) & 7;
  }
  if (!dword_100A1481C)
  {
    int v1 = byte_100A00000;
    char v2 = ++byte_100A00000;
    if (v1)
    {
      if (byte_100A14813 == v2) {
        sub_1000F5F24(0, 0, 0);
      }
    }
    else
    {
      sub_10025BC54(dword_1009FFFFC, 1);
    }
  }
}

void sub_1000F6414(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int8 **)(a1 + 8);
  if (dword_100A1480C == 2) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = 1215;
  }
  sub_100199740(v1, v2);
}

uint64_t sub_1000F6438(uint64_t a1, int a2)
{
  unsigned __int16 v2 = a2;
  if (a2)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = (unsigned __int16)word_100A0001A;
      if (word_100A0001A == word_100A00018) {
        break;
      }
      int v5 = *(unsigned __int8 *)(a1 + v3);
      if (v5 == 219 || v5 == 192)
      {
        if ((unsigned __int16)word_100A0001A + 1 == (unsigned __int16)word_100A00018) {
          break;
        }
        ++word_100A0001A;
        *(unsigned char *)(qword_100A00010 + v4) = -37;
        if (v5 == 219) {
          LOBYTE(v5) = -35;
        }
        else {
          LOBYTE(v5) = -36;
        }
        LODWORD(v4) = (unsigned __int16)word_100A0001A;
      }
      word_100A0001A = v4 + 1;
      *(unsigned char *)(qword_100A00010 + v4) = v5;
      if (a2 == ++v3) {
        goto LABEL_14;
      }
    }
    unsigned __int16 v2 = v3;
  }
LABEL_14:
  if ((unsigned __int16)word_100A0001A > (unsigned __int16)word_100A00018) {
    sub_10025B8C0();
  }
  return v2;
}

uint64_t sub_1000F6500(unint64_t *a1, unint64_t a2, uint64_t *a3, unint64_t a4, int a5)
{
  int v5 = (unsigned __int16 *)*a1;
  unint64_t v6 = *a3;
  if (*a1 < a2)
  {
    unsigned int v7 = (unsigned __int16 *)*a1;
    while (1)
    {
      unsigned int v9 = *v7++;
      unsigned int v8 = v9;
      int v10 = v9 & 0xFC00;
      if (v10 == 55296)
      {
        if ((unint64_t)v7 >= a2)
        {
          uint64_t v15 = 1;
          goto LABEL_31;
        }
        int v11 = *v7;
        if ((v11 & 0xFC00) == 0xDC00)
        {
          unsigned int v8 = v11 + (v8 << 10) - 56613888;
          unsigned int v7 = v5 + 2;
        }
        else if (!a5)
        {
          goto LABEL_29;
        }
      }
      else if (!a5 && v10 == 56320)
      {
LABEL_29:
        uint64_t v15 = 3;
        goto LABEL_31;
      }
      if (v8 < 0x10000) {
        __int16 v12 = 3;
      }
      else {
        __int16 v12 = 4;
      }
      if (v8 < 0x800) {
        __int16 v12 = 2;
      }
      if (v8 >= 0x80) {
        unsigned __int16 v13 = v12;
      }
      else {
        unsigned __int16 v13 = 1;
      }
      unint64_t v14 = v6 + v13;
      if (v14 > a4)
      {
        uint64_t v15 = 2;
        goto LABEL_31;
      }
      switch(v13)
      {
        case 1u:
          goto LABEL_24;
        case 2u:
          goto LABEL_23;
        case 3u:
          goto LABEL_22;
        case 4u:
          *(unsigned char *)--unint64_t v14 = v8 & 0x3F | 0x80;
          v8 >>= 6;
LABEL_22:
          *(unsigned char *)--unint64_t v14 = v8 & 0x3F | 0x80;
          v8 >>= 6;
LABEL_23:
          *(unsigned char *)--unint64_t v14 = v8 & 0x3F | 0x80;
          v8 >>= 6;
LABEL_24:
          *(unsigned char *)--unint64_t v14 = byte_1007B8EA8[v13] | v8;
          break;
        default:
          break;
      }
      unint64_t v6 = v14 + v13;
      int v5 = v7;
      if ((unint64_t)v7 >= a2)
      {
        uint64_t v15 = 0;
        int v5 = v7;
        goto LABEL_31;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_31:
  *a1 = (unint64_t)v5;
  *a3 = v6;
  return v15;
}

BOOL sub_1000F666C(unsigned __int8 *a1, int a2)
{
  unsigned __int16 v2 = &a1[a2];
  switch(a2)
  {
    case 1:
      unsigned int v3 = *a1;
      return (char)v3 > -63 && v3 < 0xF5;
    case 2:
      goto LABEL_11;
    case 3:
      goto LABEL_10;
    case 4:
      int v6 = (char)*--v2;
      if (v6 > -65) {
        return 0;
      }
LABEL_10:
      int v7 = (char)*--v2;
      if (v7 > -65) {
        return 0;
      }
LABEL_11:
      unsigned int v8 = *(v2 - 1);
      if (v8 > 0xBF) {
        return 0;
      }
      unsigned int v3 = *a1;
      if (v3 > 0xEF)
      {
        if (v3 == 240)
        {
          if (v8 >= 0x90)
          {
            unsigned int v3 = 240;
            return (char)v3 > -63 && v3 < 0xF5;
          }
        }
        else
        {
          if (v3 != 244)
          {
LABEL_26:
            if ((v8 & 0x80) != 0) {
              return (char)v3 > -63 && v3 < 0xF5;
            }
            return 0;
          }
          if (v8 <= 0x8F)
          {
            unsigned int v3 = 244;
            return (char)v3 > -63 && v3 < 0xF5;
          }
        }
        return 0;
      }
      if (v3 == 224)
      {
        if (v8 >= 0xA0)
        {
          unsigned int v3 = 224;
          return (char)v3 > -63 && v3 < 0xF5;
        }
        return 0;
      }
      if (v3 != 237) {
        goto LABEL_26;
      }
      if (v8 > 0x9F) {
        return 0;
      }
      unsigned int v3 = 237;
      return (char)v3 > -63 && v3 < 0xF5;
    default:
      return 0;
  }
}

uint64_t sub_1000F6768(unsigned __int8 **a1, unint64_t a2, _WORD **a3, unint64_t a4, int a5)
{
  int v7 = *a1;
  unsigned int v8 = *a3;
  if ((unint64_t)*a1 >= a2)
  {
LABEL_22:
    uint64_t result = 0;
    goto LABEL_28;
  }
  while (1)
  {
    int v12 = *v7;
    uint64_t v13 = byte_1007B8EAF[*v7];
    if ((unint64_t)&v7[v13] >= a2)
    {
      uint64_t result = 1;
      goto LABEL_28;
    }
    uint64_t v14 = v13 + 1;
    if (!sub_1000F666C(v7, v13 + 1)) {
      goto LABEL_27;
    }
    int v15 = 0;
    int v16 = v13;
    switch((int)v13)
    {
      case 0:
        goto LABEL_10;
      case 1:
        goto LABEL_9;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_7;
      case 4:
        goto LABEL_6;
      case 5:
        int v15 = v12 << 6;
        int v17 = *++v7;
        int v12 = v17;
LABEL_6:
        int v18 = v15 + v12;
        int v19 = *++v7;
        int v12 = v19;
        int v15 = v18 << 6;
LABEL_7:
        int v20 = v15 + v12;
        int v21 = *++v7;
        int v12 = v21;
        int v15 = v20 << 6;
LABEL_8:
        int v22 = v15 + v12;
        int v23 = *++v7;
        int v12 = v23;
        int v15 = v22 << 6;
LABEL_9:
        int v24 = v15 + v12;
        int v25 = *++v7;
        int v12 = v25;
        int v16 = v24 << 6;
LABEL_10:
        ++v7;
        int v15 = v16 + v12;
        break;
      default:
        break;
    }
    if ((unint64_t)v8 >= a4)
    {
      v7 -= v14;
LABEL_25:
      uint64_t result = 2;
      goto LABEL_28;
    }
    unsigned int v26 = v15 - dword_1007B8FB0[v13];
    if (!HIWORD(v26)) {
      break;
    }
    if (v26 >= 0x110000) {
      goto LABEL_16;
    }
    if ((unint64_t)(v8 + 1) >= a4)
    {
      v7 -= v14;
      goto LABEL_25;
    }
    *unsigned int v8 = ((v26 + 67043328) >> 10) - 10240;
    v8[1] = v26 & 0x3FF | 0xDC00;
    v8 += 2;
LABEL_21:
    if ((unint64_t)v7 >= a2) {
      goto LABEL_22;
    }
  }
  if (v26 >> 11 != 27)
  {
LABEL_18:
    *v8++ = v26;
    goto LABEL_21;
  }
LABEL_16:
  if (a5)
  {
    LOWORD(v26) = -3;
    goto LABEL_18;
  }
  v7 -= v14;
LABEL_27:
  uint64_t result = 3;
LABEL_28:
  *a1 = v7;
  *a3 = v8;
  return result;
}

void sub_1000F6938(uint64_t a1, uint64_t a2)
{
  if (*(void *)(qword_100A15230 + 32))
  {
    uint64_t v4 = *(void **)(qword_100A15230 + 8);
    if (!v4)
    {
      sub_10025B8C0();
      uint64_t v4 = *(void **)(qword_100A15230 + 8);
    }
    if (!*v4) {
      sub_10025B8C0();
    }
    uint64_t v5 = sub_1001439B4(a1, 1);
    if (v5)
    {
      uint64_t v6 = qword_100A15230;
      if (*(unsigned char *)(qword_100A15230 + 88))
      {
        uint64_t v7 = v5;
        uint64_t v8 = 0;
        unint64_t v9 = 0;
        do
        {
          if (*(unsigned char *)(*(void *)(v7 + 8) + v8))
          {
            sub_1000F69FC(a1, v9, a2);
            uint64_t v6 = qword_100A15230;
          }
          ++v9;
          v8 += 8;
        }
        while (v9 < *(unsigned __int8 *)(v6 + 88));
      }
    }
  }
}

void sub_1000F69FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned __int8 v17 = a2;
  uint64_t v5 = sub_1001439B4(a1, 1);
  if (v5)
  {
    uint64_t v6 = *(void **)(qword_100A15230 + 8);
    if (v6)
    {
      uint64_t v7 = v5;
      if (!*v6) {
        sub_10025B8C0();
      }
      sub_100026DB4(*(unsigned int *)(*(void *)(v7 + 8) + 8 * a2 + 4));
      *(_DWORD *)(*(void *)(v7 + 8) + 8 * a2 + 4) = 0;
      sub_1001438B0(v7, &v17);
      (**(void (***)(uint64_t, void, void, uint64_t))(qword_100A15230 + 8))(v7, v17, 0, a3);
      *(unsigned char *)(*(void *)(v7 + 8) + 8 * v17) = 0;
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_AVRCPController_CommandFailed called, but no controller exists", v8, v9, v10, v11, v12, v13, v14, v16);
      int v15 = sub_100050B4C(4u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_1007457DC(v15);
      }
    }
  }
}

uint64_t sub_1000F6B00(uint64_t a1, int a2, uint64_t a3)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (!a1 || !a3)
  {
    sub_10025B8C0();
    return 101;
  }
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  if (*(void *)(qword_100A15230 + 8)) {
    return 119;
  }
  uint64_t v8 = sub_10010CE48(0x18uLL);
  uint64_t v9 = qword_100A15230;
  *(void *)(qword_100A15230 + 32) = v8;
  if (!v8) {
    return 106;
  }
  uint64_t v10 = sub_10010CE48(32 * *(unsigned __int8 *)(v9 + 89));
  uint64_t v11 = qword_100A15230;
  uint64_t v12 = *(void **)(qword_100A15230 + 32);
  v12[1] = v10;
  if (!v10)
  {
    sub_100023010(v12);
    *(void *)(qword_100A15230 + 32) = 0;
    return 106;
  }
  if (*(unsigned char *)(v11 + 89))
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0;
    while (1)
    {
      *(void *)(*(void *)(*(void *)(qword_100A15230 + 32) + 8) + v13 + 8) = sub_10010CE48(8* *(unsigned __int8 *)(v11 + 88));
      uint64_t v15 = *(void *)(*(void *)(qword_100A15230 + 32) + 8) + v13;
      if (!*(void *)(v15 + 8)) {
        break;
      }
      *(_DWORD *)uint64_t v15 = 0;
      *(_WORD *)(v15 + 4) = 0;
      ++v14;
      uint64_t v11 = qword_100A15230;
      v13 += 32;
      if (v14 >= *(unsigned __int8 *)(qword_100A15230 + 89)) {
        goto LABEL_15;
      }
    }
    uint64_t v5 = 106;
    goto LABEL_27;
  }
LABEL_15:
  *(void *)(v11 + 8) = a1;
  *(void *)(v11 + 48) = sub_1000F6E1C;
  *(void *)(v11 + 64) = sub_1000F6F34;
  __int16 v16 = *(_WORD *)(sub_10025B218(4u) + 4);
  if (!v16) {
    __int16 v16 = 4;
  }
  *(_WORD *)(*(void *)(qword_100A15230 + 32) + 16) = v16;
  __int16 v17 = *(_WORD *)(sub_10025B218(4u) + 6);
  if (!v17) {
    __int16 v17 = 8;
  }
  *(_WORD *)(*(void *)(qword_100A15230 + 32) + 18) = v17;
  __int16 v18 = *(_WORD *)(sub_10025B218(4u) + 8);
  uint64_t v19 = *(void *)(qword_100A15230 + 32);
  if (!v18) {
    __int16 v18 = 20;
  }
  *(_WORD *)(v19 + 20) = v18;
  xmmword_100A00020 = xmmword_1007B93E8;
  DWORD2(xmmword_100A00020) = a2;
  *(void *)&long long v27 = &unk_10099A7C8;
  WORD4(v27) = 4;
  *(void *)&long long v28 = *(void *)a3;
  WORD4(v28) = *(_WORD *)(a3 + 8);
  xmmword_100A00020 = xmmword_1007B93E8;
  DWORD2(xmmword_100A00020) = a2;
  *(void *)&long long v25 = &unk_10099A828;
  WORD4(v25) = 4;
  *(void *)&long long v26 = *(void *)a3;
  WORD4(v26) = *(_WORD *)(a3 + 8);
  uint64_t v5 = sub_10024E258((uint64_t)&v27, (int *)v19);
  sub_10024E564(**(unsigned int **)(qword_100A15230 + 32), (uint64_t)&v25);
  if (v5 || (uint64_t v5 = sub_100143CE8(), v5))
  {
LABEL_27:
    sub_10024E448(**(_DWORD **)(qword_100A15230 + 32));
    uint64_t v20 = qword_100A15230;
    *(void *)(qword_100A15230 + 8) = 0;
    if (*(unsigned char *)(v20 + 89))
    {
      unint64_t v21 = 0;
      uint64_t v22 = 8;
      do
      {
        int v23 = *(void **)(*(void *)(*(void *)(v20 + 32) + 8) + v22);
        if (v23)
        {
          sub_100023010(v23);
          *(void *)(*(void *)(*(void *)(qword_100A15230 + 32) + 8) + v22) = 0;
          uint64_t v20 = qword_100A15230;
        }
        ++v21;
        v22 += 32;
      }
      while (v21 < *(unsigned __int8 *)(v20 + 89));
    }
    int v24 = *(void ***)(v20 + 32);
    if (v24[1])
    {
      sub_100023010(v24[1]);
      int v24 = *(void ***)(qword_100A15230 + 32);
      v24[1] = 0;
    }
    sub_100023010(v24);
    *(void *)(qword_100A15230 + 32) = 0;
  }
  return v5;
}

uint64_t sub_1000F6E1C(uint64_t result, uint64_t a2, unsigned __int8 *a3)
{
  if (*(void *)(qword_100A15230 + 8))
  {
    uint64_t v5 = result;
    int v6 = *a3;
    uint64_t result = sub_1001439B4(result, 1);
    if (result)
    {
      uint64_t v7 = result;
      uint64_t v8 = *(void *)(result + 8);
      if (*(unsigned char *)(v8 + 8 * a2) == 2)
      {
        sub_100026DB4(*(unsigned int *)(v8 + 8 * a2 + 4));
        uint64_t v9 = *(void *)(v7 + 8);
        *(_DWORD *)(v9 + 8 * a2 + 4) = 0;
        if (v6 != 15) {
          *(unsigned char *)(v9 + 8 * a2) = 3;
        }
        if (*((_WORD *)a3 + 8))
        {
          uint64_t v10 = qword_100A15230;
          if ((**((unsigned char **)a3 + 1) & 0x7F) == 0 && *(void *)(*(void *)(qword_100A15230 + 8) + 8))
          {
            uint64_t result = sub_100144D44(v5, a2, a3);
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v10 = qword_100A15230;
        }
        uint64_t result = (**(uint64_t (***)(uint64_t, uint64_t, unsigned __int8 *, void))(v10 + 8))(v5, a2, a3, 0);
LABEL_12:
        if (v6 != 15) {
          *(unsigned char *)(*(void *)(v7 + 8) + 8 * a2) = 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000F6F34()
{
  uint64_t v0 = *(uint64_t (**)(void))(*(void *)(qword_100A15230 + 8) + 16);
  if (v0) {
    return v0();
  }
  return result;
}

uint64_t sub_1000F6F54()
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  uint64_t v0 = *(int **)(qword_100A15230 + 32);
  if (!v0) {
    return 121;
  }
  if (*(unsigned char *)(qword_100A15230 + 90) && !*(void *)(qword_100A15230 + 16)) {
    return 141;
  }
  sub_10024E448(*v0);
  uint64_t v1 = qword_100A15230;
  *(void *)(qword_100A15230 + 8) = 0;
  if (*(unsigned char *)(v1 + 89))
  {
    unint64_t v2 = 0;
    uint64_t v3 = 8;
    do
    {
      uint64_t v4 = *(void **)(*(void *)(*(void *)(v1 + 32) + 8) + v3);
      if (v4)
      {
        sub_100023010(v4);
        *(void *)(*(void *)(*(void *)(qword_100A15230 + 32) + 8) + v3) = 0;
        uint64_t v1 = qword_100A15230;
      }
      ++v2;
      v3 += 32;
    }
    while (v2 < *(unsigned __int8 *)(v1 + 89));
  }
  uint64_t v5 = *(void ***)(v1 + 32);
  if (v5[1])
  {
    sub_100023010(v5[1]);
    uint64_t v5 = *(void ***)(qword_100A15230 + 32);
    v5[1] = 0;
  }
  sub_100023010(v5);
  *(void *)(qword_100A15230 + 32) = 0;

  return sub_10014445C();
}

uint64_t sub_1000F7068(uint64_t a1, unsigned __int8 *a2, char a3)
{
  long long v4 = xmmword_1007B8FC8;
  uint64_t v5 = 0;
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (a1 && a2)
  {
    *((void *)&v4 + 1) = v6;
    LOWORD(v5) = 2;
    v6[0] = a3;
    v6[1] = 0;
    return sub_1000F70E8(a1, a2, (unsigned __int8 *)&v4);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_1000F70E8(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v19 = 0;
  if (!*(void *)(qword_100A15230 + 8)) {
    return 3309;
  }
  unsigned __int8 v20 = 0;
  uint64_t v6 = sub_1000F7364(a1, &v19, &v20);
  if (!v6)
  {
    if (a3[3])
    {
      uint64_t v7 = (unsigned __int16 *)(*(void *)(qword_100A15230 + 32) + 16);
    }
    else
    {
      uint64_t v8 = *(void *)(qword_100A15230 + 32);
      uint64_t v9 = v8 + 20;
      uint64_t v10 = v8 + 18;
      uint64_t v7 = (unsigned __int16 *)(*a3 ? v9 : v10);
    }
    int v11 = *v7;
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    v21[0] = v19;
    v21[1] = v20;
    v22[0] = (const void *)16;
    v22[1] = v21;
    if (sub_100026E24(*(_DWORD *)(*(void *)(v19 + 8) + 8 * v20 + 4))
      || (uint64_t v6 = sub_100026DA8((uint64_t)sub_1000F7428, v22, (int *)(*(void *)(v12 + 8) + 8 * v13 + 4)), !v6))
    {
      uint64_t v14 = sub_10025BC54(*(_DWORD *)(*(void *)(v12 + 8) + 8 * v13 + 4), v11);
      if (v14)
      {
        uint64_t v6 = v14;
        sub_100026DB4(*(unsigned int *)(*(void *)(v12 + 8) + 8 * v13 + 4));
        uint64_t v15 = *(void *)(v12 + 8) + 8 * v13;
LABEL_15:
        *(_DWORD *)(v15 + 4) = 0;
        return v6;
      }
      uint64_t v16 = sub_100144658(a1, v20, a3);
      if (v16)
      {
        uint64_t v6 = v16;
        uint64_t v17 = v20;
        sub_100026DB4(*(unsigned int *)(*(void *)(v12 + 8) + 8 * v20 + 4));
        uint64_t v15 = *(void *)(v12 + 8) + 8 * v17;
        goto LABEL_15;
      }
      *(unsigned char *)(*(void *)(v12 + 8) + 8 * v20) = 2;
      uint64_t v6 = 0;
      if (a2) {
        *a2 = v20;
      }
    }
  }
  return v6;
}

uint64_t sub_1000F7298(uint64_t a1, char a2)
{
  uint64_t v5 = 0x1000050581900;
  HIBYTE(v5) = a2;
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (a1)
  {
    unsigned __int8 v3 = 0;
    v4[0] = 2304;
    v4[1] = &v5;
    v4[2] = 8;
    return sub_1000F70E8(a1, &v3, (unsigned __int8 *)v4);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_1000F7348(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if (xmmword_100A197C0) {
    return sub_1000F70E8(a1, a2, a3);
  }
  else {
    return 408;
  }
}

uint64_t sub_1000F7364(uint64_t a1, uint64_t *a2, unsigned char *a3)
{
  if (!a3) {
    sub_10025B8C0();
  }
  uint64_t v6 = sub_1001439B4(a1, 1);
  if (!v6) {
    return 120;
  }
  unsigned int v7 = *(unsigned __int8 *)(qword_100A15230 + 88);
  if (!*(unsigned char *)(qword_100A15230 + 88)) {
    return 118;
  }
  unsigned int v8 = *(unsigned __int8 *)(v6 + 16);
  int v9 = *(unsigned __int8 *)(qword_100A15230 + 88);
  while (1)
  {
    int v10 = v8 % v7;
    if (!*(unsigned char *)(*(void *)(v6 + 8) + 8 * (v8 % v7))) {
      break;
    }
    ++v8;
    if (!--v9) {
      return 118;
    }
  }
  uint64_t v11 = 0;
  *a2 = v6;
  *(unsigned char *)(v6 + 16) = (v10 + 1) % *(unsigned char *)(qword_100A15230 + 88);
  *a3 = v10;
  return v11;
}

void sub_1000F7428(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 8);
  uint64_t v2 = *(void *)v1;
  unsigned int v3 = v1[8];
  uint64_t v4 = 8 * v1[8];
  uint64_t v5 = *(void *)(*(void *)v1 + 8) + v4;
  *(unsigned char *)uint64_t v5 = 4;
  *(_DWORD *)(v5 + 4) = 0;
  sub_1000F69FC(v2, v3, 3312);
  *(unsigned char *)(*(void *)(v2 + 8) + v4) = 0;
}

uint64_t sub_1000F747C(uint64_t result, uint64_t a2, int a3)
{
  if (!a2)
  {
    unsigned int v3 = "data";
    goto LABEL_6;
  }
  if (!a3)
  {
    unsigned int v3 = "(len) > 0";
LABEL_6:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 128, v3);
  }
  *(void *)(result + 24) = a2;
  *(_WORD *)(result + 32) = a3;
  *(_DWORD *)(result + 36) = 0x10000;
  *(_WORD *)(result + 34) = a3;
  *(_WORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000F74DC(int *a1, uint64_t *a2)
{
  *((_OWORD *)a1 + 5) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  if (a2)
  {
    unsigned int v3 = *((unsigned __int8 *)a2 + 8);
    if (*((unsigned char *)a2 + 8))
    {
      unint64_t v5 = 0;
      uint64_t v6 = a1 + 23;
      do
      {
        uint64_t v7 = *a2;
        unsigned int v8 = *(unsigned __int8 *)(*a2 + 24 * v5);
        if (v8 > 0x48)
        {
          if (*(unsigned __int8 *)(*a2 + 24 * v5) <= 0x70u)
          {
            if (v8 == 73)
            {
              *((void *)a1 + 7) = v7 + 24 * v5 + 8;
              *((unsigned char *)a1 + 64) = 1;
            }
            else if (v8 == 76)
            {
              uint64_t v30 = 0;
              long long v28 = 0u;
              long long v29 = 0u;
              sub_1000F747C((uint64_t)&v28, *(void *)(v7 + 24 * v5 + 16), *(unsigned __int16 *)(v7 + 24 * v5 + 8));
              if (HIBYTE(v30))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c");
              }
              else
              {
                unint64_t v14 = WORD1(v30);
                if (WORD1(v30) > WORD2(v30))
                {
                  int v15 = BYTE6(v30);
                  uint64_t v16 = *((void *)&v29 + 1);
                  int v17 = WORD1(v30) - 3;
                  int v18 = WORD1(v30) - 1;
                  unsigned __int16 v19 = v29;
                  do
                  {
                    if (v14 < (__int16)v19) {
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 107, "(size_t)(bk->nextTagPos) <= (size_t)((bk->bs).__size)");
                    }
                    if (v14 == v19) {
                      break;
                    }
                    if (v15 != 1) {
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 115, "(bk->bs).__RWFlag == BYTESTREAM_READ");
                    }
                    if (v14 <= (unsigned __int16)(v19 + 1)) {
                      return 411;
                    }
                    uint64_t v20 = v19 + 2;
                    signed int v21 = *(unsigned __int8 *)(v16 + v19 + 1);
                    if ((int)(v14 - (unsigned __int16)v20) < v21) {
                      return 411;
                    }
                    unsigned __int16 v22 = v19 + 2;
                    int v23 = (unsigned __int16)(v19 + 2);
                    switch(*(unsigned char *)(v16 + v19))
                    {
                      case 1:
                        if (v21 != 2) {
                          return 411;
                        }
                        if (v18 <= v23) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 155, "ByteStream_NumReadBytesAvail(bk.bs) >= 2");
                        }
                        *((_WORD *)a1 + 33) = bswap32(*(unsigned __int16 *)(v16 + v20)) >> 16;
                        unsigned __int16 v22 = v19 + 4;
                        int v24 = 8;
                        break;
                      case 2:
                        if (v21 != 2) {
                          return 411;
                        }
                        if (v18 <= v23) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 163, "ByteStream_NumReadBytesAvail(bk.bs) >= 2");
                        }
                        *((_WORD *)a1 + 34) = bswap32(*(unsigned __int16 *)(v16 + v20)) >> 16;
                        unsigned __int16 v22 = v19 + 4;
                        int v24 = 16;
                        break;
                      case 3:
                        if (v21 != 1) {
                          return 411;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 171, "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        unsigned __int16 v22 = v19 + 3;
                        *((unsigned char *)a1 + 70) = *(unsigned char *)(v16 + v20);
                        int v24 = 32;
                        break;
                      case 4:
                        if (v21 != 4) {
                          return 411;
                        }
                        if (v17 <= v23) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 179, "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[18] = bswap32(*(_DWORD *)(v16 + v20));
                        unsigned __int16 v22 = v19 + 6;
                        int v24 = 64;
                        break;
                      case 5:
                        if (v21 != 4) {
                          return 411;
                        }
                        if (v17 <= v23) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 187, "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[19] = bswap32(*(_DWORD *)(v16 + v20));
                        unsigned __int16 v22 = v19 + 6;
                        int v24 = 128;
                        break;
                      case 6:
                        if (v21 != 4) {
                          return 411;
                        }
                        if (v17 <= v23) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 195, "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[20] = bswap32(*(_DWORD *)(v16 + v20));
                        unsigned __int16 v22 = v19 + 6;
                        int v24 = 256;
                        break;
                      case 7:
                        if (v21 != 1) {
                          return 411;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 203, "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        unsigned __int16 v22 = v19 + 3;
                        *((unsigned char *)a1 + 84) = *(unsigned char *)(v16 + v20);
                        int v24 = 512;
                        break;
                      case 8:
                        if (v21 != 1) {
                          return 411;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 211, "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        unsigned __int16 v22 = v19 + 3;
                        *((unsigned char *)a1 + 85) = *(unsigned char *)(v16 + v20);
                        int v24 = 1024;
                        break;
                      case 9:
                        if (v21 != 16) {
                          return 411;
                        }
                        if (v17 <= v23) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 219, "ByteStream_NumReadBytesAvail(bk.bs) >= 4");
                        }
                        a1[22] = bswap32(*(_DWORD *)(v16 + v20));
                        if (v14 - (unsigned __int16)(v19 + 6) <= 0xB) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 220, "ByteStream_NumReadBytesAvail(bk.bs) >= (sizeof(req->serviceId.base))");
                        }
                        long long v25 = (uint64_t *)(v16 + (unsigned __int16)(v19 + 6));
                        uint64_t v26 = *v25;
                        unsigned char v6[2] = *((_DWORD *)v25 + 2);
                        *(void *)uint64_t v6 = v26;
                        unsigned __int16 v22 = v19 + 18;
                        int v24 = 2048;
                        break;
                      case 0xA:
                        if (v21 != 1) {
                          return 411;
                        }
                        if (v14 <= (unsigned __int16)v20) {
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bip/oi_bip_private.c", 228, "ByteStream_NumReadBytesAvail(bk.bs) >= 1");
                        }
                        unsigned __int16 v22 = v19 + 3;
                        *((unsigned char *)a1 + 104) = *(unsigned char *)(v16 + v20);
                        int v24 = 4096;
                        break;
                      default:
                        goto LABEL_69;
                    }
                    *a1 |= v24;
LABEL_69:
                    unsigned __int16 v19 = v20 + v21;
                  }
                  while (v14 > v22);
                }
              }
              unsigned int v3 = *((unsigned __int8 *)a2 + 8);
            }
            goto LABEL_71;
          }
          if (v8 == 113)
          {
            int v13 = *a1;
            if ((*a1 & 2) == 0)
            {
              *((void *)a1 + 3) = v7 + 24 * v5 + 8;
              int v10 = v13 | 2;
              goto LABEL_28;
            }
          }
          else if (v8 == 195)
          {
            a1[12] = *(_DWORD *)(v7 + 24 * v5 + 8);
            int v10 = *a1 | 0x4000;
LABEL_28:
            *a1 = v10;
          }
        }
        else if (*(unsigned __int8 *)(*a2 + 24 * v5) > 0x41u)
        {
          if (v8 != 66)
          {
            if (v8 == 72)
            {
              *((void *)a1 + 7) = v7 + 24 * v5 + 8;
              *((unsigned char *)a1 + 64) = 0;
            }
            goto LABEL_71;
          }
          int v12 = *a1;
          if ((*a1 & 0x8000) == 0)
          {
            *((void *)a1 + 1) = v7 + 24 * v5 + 8;
            int v10 = v12 | 0x8000;
            goto LABEL_28;
          }
        }
        else
        {
          if (v8 != 1)
          {
            if (v8 != 48) {
              goto LABEL_71;
            }
            int v9 = *a1;
            if ((*a1 & 4) != 0) {
              goto LABEL_71;
            }
            *((void *)a1 + 4) = v7 + 24 * v5 + 8;
            int v10 = v9 | 4;
            goto LABEL_28;
          }
          int v11 = *a1;
          if ((*a1 & 1) == 0)
          {
            *((void *)a1 + 2) = v7 + 24 * v5 + 8;
            int v10 = v11 | 1;
            goto LABEL_28;
          }
        }
LABEL_71:
        ++v5;
      }
      while (v5 < v3);
    }
  }
  return 0;
}

void *sub_1000F7A98()
{
  CFDictionaryRef v0 = (const __CFDictionary *)sub_1001A0EEC();
  if (!v0) {
    return 0;
  }
  CFDictionaryRef v1 = v0;
  uint64_t v2 = 0;
  unsigned int v3 = &unk_100A00030;
  uint64_t v4 = (char *)&unk_100A00030;
  while (1)
  {
    CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(v1, off_10099A948[v2]);
    if (!Value) {
      break;
    }
    CFDictionaryRef v6 = Value;
    CFNumberRef v7 = (const __CFNumber *)CFDictionaryGetValue(Value, @"item_size");
    if (!v7) {
      break;
    }
    CFNumberGetValue(v7, kCFNumberSInt32Type, v4);
    CFNumberRef v8 = (const __CFNumber *)CFDictionaryGetValue(v6, @"item_count");
    if (!v8) {
      break;
    }
    CFNumberGetValue(v8, kCFNumberSInt32Type, v4 + 44);
    v4 += 4;
    if (++v2 == 11) {
      goto LABEL_9;
    }
  }
  unsigned int v3 = 0;
LABEL_9:
  CFRelease(v1);
  return v3;
}

void *sub_1000F7B74(void *a1, const void *a2, size_t __len)
{
  return memmove(a1, a2, __len);
}

uint64_t sub_1000F7B80(uint64_t a1)
{
  qword_100A00088 = (uint64_t)sub_10025959C((uint64_t)sub_1000F7B74, (uint64_t)sub_1000F7B7C);
  uint64_t v2 = sub_1001DBCD8(a1, 1);
  __int16 v5 = 0;
  int v4 = 0;
  sub_1001DBDE0(a1, (uint64_t)&v4);
  return (*(uint64_t (**)(int *, uint64_t, uint64_t))(*(void *)qword_100A15230 + 32))(&v4, a1, v2);
}

uint64_t sub_1000F7C1C(int a1)
{
  sub_1002595D8((void *)qword_100A00088);
  qword_100A00088 = 0;
  __int16 v4 = 0;
  int v3 = 0;
  sub_1001DBDE0(a1, (uint64_t)&v3);
  return (*(uint64_t (**)(int *))(*(void *)qword_100A15230 + 40))(&v3);
}

uint64_t sub_1000F7C84(uint64_t a1, unsigned __int16 **a2, int a3)
{
  if (a3 == 2)
  {
    if (!sub_100059E10(qword_100A00088)) {
      sub_10025B8C0();
    }
    sub_10025992C(qword_100A00088, 1);
    return 0;
  }
  else
  {
    __int16 v8 = 0;
    int v7 = 0;
    sub_1001DBDE0(a1, (uint64_t)&v7);
    uint64_t v9 = 0;
    uint64_t v3 = sub_100262B48(*((void *)*a2 + 1), **a2, &v9, 8);
    if (!v3) {
      (**(void (***)(int *, uint64_t, uint64_t *))(*(void *)(qword_100A15230 + 16) + 32))(&v7, a1, &v9);
    }
  }
  return v3;
}

uint64_t sub_1000F7D6C(uint64_t a1, unsigned __int16 **a2, int a3, int a4)
{
  if (a4 == 1719)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVRCP BIP client issued OBEX ABORT message!", v4, v5, v6, v7, v8, v9, v10, v35);
      int v11 = sub_100050B4C(4u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
    return 0;
  }
  if (a3 == 2)
  {
    if (!sub_100059E10(qword_100A00088)) {
      sub_10025B8C0();
    }
    sub_10025992C(qword_100A00088, 1);
    return 0;
  }
  if (**a2 == 8)
  {
    __int16 v37 = 0;
    int v36 = 0;
    sub_1001DBDE0(a1, (uint64_t)&v36);
    uint64_t v38 = 0;
    uint64_t v12 = sub_100262B48(*((void *)*a2 + 1), **a2, &v38, 8);
    uint64_t v16 = a2[1];
    if (v16)
    {
      uint64_t v17 = *v16 - 1;
      while (v17 != -1)
      {
        uint64_t v18 = *((void *)v16 + 1);
        int v19 = *(unsigned __int8 *)(v18 + v17--);
        if (v19 == 42)
        {
          int v20 = v17 + 2;
          int v21 = v17;
          unsigned int v22 = *(unsigned __int8 *)(v18 + (unsigned __int16)v17) - 48;
          if (v22 > 9)
          {
            uint64_t v23 = 0;
          }
          else
          {
            LOWORD(v23) = 0;
            int v24 = 0;
            do
            {
              uint64_t v23 = (int)((double)(unsigned __int16)v23
                                      + (double)(int)v22 * __exp10((double)(unsigned __int16)v24++));
              --v21;
              uint64_t v18 = *((void *)v16 + 1);
              unsigned int v22 = *(unsigned __int8 *)(v18 + (unsigned __int16)v21) - 48;
            }
            while (v22 < 0xA);
          }
          int v34 = *(unsigned __int8 *)(v18 + (unsigned __int16)v20);
          if ((v34 - 48) > 9)
          {
            unsigned __int16 v33 = 0;
          }
          else
          {
            unsigned __int16 v33 = 0;
            do
            {
              unsigned __int16 v33 = v34 + 10 * v33 - 48;
              int v34 = *(unsigned __int8 *)(v18 + (unsigned __int16)++v20);
            }
            while ((v34 - 48) < 0xA);
          }
          goto LABEL_25;
        }
      }
    }
    uint64_t v23 = 200;
    unsigned __int16 v33 = 200;
LABEL_25:
    if (!v12) {
      (*(void (**)(int *, uint64_t, uint64_t *, uint64_t, void))(*(void *)(*(void *)(qword_100A15230 + 16)
    }
                                                                                     + 32)
                                                                         + 8))(&v36, a1, &v38, v23, v33);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid image handle length %d", v25, v26, v27, v28, v29, v30, v31, **a2);
      uint64_t v32 = sub_100050B4C(4u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
    return 1736;
  }
  return v12;
}

uint64_t sub_1000F8018(uint64_t a1, unsigned __int16 **a2, int a3)
{
  if (a3 == 2)
  {
    if (!sub_100059E10(qword_100A00088)) {
      sub_10025B8C0();
    }
    sub_10025992C(qword_100A00088, 1);
    return 0;
  }
  else if (**a2 == 8)
  {
    __int16 v16 = 0;
    int v15 = 0;
    sub_1001DBDE0(a1, (uint64_t)&v15);
    uint64_t v17 = 0;
    uint64_t v3 = sub_100262B48(*((void *)*a2 + 1), **a2, &v17, 8);
    if (!v3) {
      (*(void (**)(int *, uint64_t, uint64_t *))(*(void *)(*(void *)(qword_100A15230 + 16) + 32) + 16))(&v15, a1, &v17);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid image handle length %d", v6, v7, v8, v9, v10, v11, v12, **a2);
      int v13 = sub_100050B4C(4u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
    return 1736;
  }
  return v3;
}

uint64_t sub_1000F8164(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  sub_10026314C((uint64_t)&v31, 0x400uLL);
  uint64_t v30 = 0;
  asprintf(&v30, "<image-properties version=\"1.0\" handle=\"%s\">\n", a2);
  sub_100057604((uint64_t)&v31, v30);
  free(v30);
  if (a6)
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = "variant";
      if (!v11) {
        uint64_t v12 = "native";
      }
      int v13 = *(unsigned __int8 *)(a3 + v11);
      if (v13 == 2) {
        unint64_t v14 = "PNG";
      }
      else {
        unint64_t v14 = "";
      }
      if (v13 == 1) {
        int v15 = "JPEG";
      }
      else {
        int v15 = v14;
      }
      asprintf(&v30, "<%s encoding=\"%s\" pixel=\"%d*%d\" />\n", v12, v15, *(unsigned __int16 *)(a4 + 2 * v11), *(unsigned __int16 *)(a5 + 2 * v11));
      sub_100057604((uint64_t)&v31, v30);
      free(v30);
      ++v11;
    }
    while (a6 != v11);
  }
  asprintf(&v30, "</image-properties>\n");
  sub_100057604((uint64_t)&v31, v30);
  free(v30);
  unsigned __int16 v16 = WORD2(v31);
  sub_1002596A4(qword_100A00088, v32, WORD2(v31));
  v29[1] = sub_10025989C(qword_100A00088);
  v29[0] = v16;
  v28[0] = 0;
  v28[1] = v29;
  v28[2] = 0;
  uint64_t v17 = sub_1001DBFB0(a1, (uint64_t)v28, 0);
  if (v17)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_BIPSRV_GetImagePropertiesResponse failed with error %!", v18, v19, v20, v21, v22, v23, v24, v17);
      uint64_t v25 = sub_100050B4C(4u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1002598B4(qword_100A00088, 1);
  }
  sub_10026319C((uint64_t)&v31);
  return v17;
}

uint64_t sub_1000F835C(int a1, uint64_t a2, unsigned int a3)
{
  sub_1002596A4(qword_100A00088, a2, (unsigned __int16)a3);
  v19[1] = sub_10025989C(qword_100A00088);
  v19[0] = (unsigned __int16)a3;
  long long v15 = 0u;
  uint64_t v17 = v19;
  uint64_t v18 = 0;
  uint64_t v16 = a3;
  uint64_t v5 = sub_1001DBFD0(a1, (uint64_t)&v15, 0);
  if (v5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_BIPSRV_GetImageResponse failed with error %!", v6, v7, v8, v9, v10, v11, v12, v5);
      int v13 = sub_100050B4C(4u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1002598B4(qword_100A00088, 1);
  }
  return v5;
}

uint64_t sub_1000F8434(int a1, uint64_t a2, unsigned __int16 a3)
{
  sub_1002596A4(qword_100A00088, a2, a3);
  v16[1] = sub_10025989C(qword_100A00088);
  v16[0] = a3;
  v15[0] = 0;
  v15[1] = v16;
  _DWORD v15[2] = 0;
  uint64_t v5 = sub_1001DBFB0(a1, (uint64_t)v15, 0);
  if (v5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_BIPSRV_GetLinkedThumbnailResponse failed with error %!", v6, v7, v8, v9, v10, v11, v12, v5);
      int v13 = sub_100050B4C(4u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1002598B4(qword_100A00088, 1);
  }
  return v5;
}

void sub_1000F8508(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_1000F8590;
  block[3] = &unk_10099A9A0;
  block[4] = a1;
  if (qword_100A00090 != -1) {
    dispatch_once(&qword_100A00090, block);
  }
}

uint64_t sub_1000F8590(uint64_t result)
{
  qword_100A00098 = *(void *)(result + 32);
  return result;
}

void sub_1000F85A0(int a1)
{
  if (a1 || qword_100A000A0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000;
    block[2] = sub_1000F865C;
    block[3] = &unk_10099A9C0;
    int v3 = a1;
    if (qword_100A000A0 != -1) {
      dispatch_once(&qword_100A000A0, block);
    }
  }
  else
  {
    CFDictionaryRef v1 = qword_100A00098;
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100745950(v1);
    }
  }
}

void sub_1000F865C(uint64_t a1)
{
  if ((*(_DWORD *)(a1 + 32) - 1) >= 0xF9F)
  {
    CFDictionaryRef v1 = qword_100A00098;
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100745994(v1);
    }
  }
}

uint64_t sub_1000F86AC(uint64_t a1, unsigned int a2)
{
  if (a2 <= 0xE)
  {
    uint64_t result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_1007459D8();
    return 0;
  }
  if (!a1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 179, "buf");
  }
  uint64_t v8 = a1;
  __int16 v9 = a2;
  __int16 v10 = a2;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 13);
  int v11 = 65551;
  unsigned int v5 = *(unsigned __int8 *)(a1 + 14);
  uint64_t result = (uint64_t)sub_100025D0C(v4);
  if (result)
  {
    unsigned int v6 = a2 - 15;
    if (v6 < v5)
    {
      uint64_t v7 = qword_100A00098;
      uint64_t result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
      sub_100745A54(v6, v5, v7);
      return 0;
    }
    if (v4 == 255) {
      return 0;
    }
    uint64_t result = 1;
    switch((int)v4)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 9:
      case 10:
      case 11:
      case 13:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 22:
      case 23:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 44:
      case 45:
      case 46:
      case 48:
      case 49:
      case 50:
      case 52:
      case 53:
      case 54:
      case 56:
      case 57:
      case 60:
      case 61:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 82:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
        return result;
      case 7:
        uint64_t result = sub_1000F89BC(&v8);
        break;
      case 8:
        uint64_t result = sub_1000F8BDC(&v8);
        break;
      case 12:
        uint64_t result = sub_1000F97B4(&v8);
        break;
      case 14:
        uint64_t result = sub_1000F8FD0(&v8);
        break;
      case 21:
        uint64_t result = sub_1000F99B4(&v8);
        break;
      case 24:
        uint64_t result = sub_1000F9C9C(&v8);
        break;
      case 47:
        uint64_t result = sub_1000F9E98(&v8);
        break;
      case 51:
        uint64_t result = sub_1000FA0B4(&v8);
        break;
      case 59:
        uint64_t result = sub_1000FA2B0(&v8);
        break;
      case 62:
        uint64_t result = sub_1000FA4AC((uint64_t)&v8);
        break;
      case 81:
        uint64_t result = sub_1000FA740(&v8);
        break;
      case 89:
        uint64_t result = sub_1000F8DD4(&v8);
        break;
      default:
        return 0;
    }
  }
  return result;
}

BOOL sub_1000F89BC(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xFE)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100745ADC();
      return 0;
    }
    return result;
  }
  if (v2 <= 6) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1547, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 7;
  *((_WORD *)a1 + 6) = v1 + 7;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1550, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1551, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 247) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1554, "ByteStream_NumReadBytesAvail(*pBs) >= (248)");
  }
  uint64_t v6 = v5 + v4;
  *(void *)(v6 + 240) = 0;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  *((_WORD *)a1 + 6) += 248;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1556, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1558, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 255;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1559, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000F8BDC(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_19;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 3)
  {
LABEL_19:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100745B64();
      return 0;
    }
    return result;
  }
  if (v2 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1571, "ByteStream_NumReadBytesAvail(*pBs) >= (1+2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1574, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1575, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1578, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(unsigned char *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1580, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1582, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 4;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1583, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000F8DD4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 4)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100745BEC();
      return 0;
    }
    return result;
  }
  if (v2 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1596, "ByteStream_NumReadBytesAvail(*pBs) >= (1+2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1599, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1600, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1604, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 1)");
  }
  *(_WORD *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  *((_WORD *)a1 + 6) += 2;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1606, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1608, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 5;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1609, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000F8FD0(uint64_t *a1)
{
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  if (v1 <= 0xE) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1193, "(size_t)(13 + 2) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = 15;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_5:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100745C74();
    return 0;
  }
  if (v1 - 15 <= 3) {
    goto LABEL_5;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1202, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v1 <= 0xF)
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v5 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100745CFC(v5, v6, v7, v8, v9, v10, v11, v12);
      return 0;
    }
  }
  else
  {
    *((_WORD *)a1 + 6) = 16;
    if (v1 <= 0x11) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1204, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    int v4 = *(unsigned __int16 *)(*a1 + 16);
    *((_WORD *)a1 + 6) = 18;
    BOOL result = 1;
    if (v4 > 4096)
    {
      if (v4 <= 0x2000)
      {
        if ((v4 - 5121) > 0xA) {
          goto LABEL_37;
        }
        if (((1 << (v4 - 1)) & 0x777) != 0) {
          return result;
        }
        if (v4 == 5128)
        {
          return sub_1000FFEA4(a1);
        }
        else
        {
          if ((v4 - 4097) > 9) {
            goto LABEL_47;
          }
LABEL_37:
          if (((1 << (v4 - 1)) & 0x31F) != 0) {
            return result;
          }
          if (v4 == 4103)
          {
            return sub_1000FFCAC(a1);
          }
          else
          {
LABEL_47:
            if ((v4 - 6145) > 8 || ((1 << (v4 - 1)) & 0x1CF) == 0) {
              return 0;
            }
          }
        }
      }
      else
      {
        switch(v4)
        {
          case 8193:
          case 8194:
          case 8195:
          case 8197:
          case 8198:
          case 8199:
          case 8200:
          case 8201:
          case 8202:
          case 8203:
          case 8204:
          case 8206:
          case 8207:
          case 8208:
          case 8209:
          case 8210:
          case 8212:
          case 8213:
          case 8218:
          case 8219:
          case 8220:
          case 8221:
          case 8222:
          case 8223:
          case 8224:
          case 8225:
          case 8226:
          case 8227:
          case 8228:
          case 8231:
          case 8232:
          case 8233:
          case 8234:
          case 8235:
          case 8236:
          case 8237:
          case 8238:
          case 8239:
          case 8240:
          case 8241:
          case 8243:
          case 8244:
          case 8245:
          case 8246:
          case 8247:
          case 8248:
          case 8249:
          case 8250:
          case 8251:
          case 8252:
          case 8253:
          case 8254:
          case 8255:
          case 8256:
          case 8257:
          case 8258:
          case 8260:
          case 8261:
          case 8262:
          case 8263:
          case 8264:
          case 8265:
          case 8266:
          case 8281:
          case 8282:
          case 8283:
          case 8284:
          case 8285:
          case 8288:
          case 8290:
          case 8291:
          case 8293:
          case 8295:
          case 8300:
          case 8302:
          case 8303:
          case 8308:
          case 8317:
          case 8318:
          case 8320:
          case 8321:
          case 8322:
          case 8323:
          case 8324:
          case 8325:
          case 8326:
          case 8329:
            return result;
          case 8215:
            BOOL result = sub_10010009C(a1);
            break;
          case 8216:
            BOOL result = sub_10010029C(a1);
            break;
          default:
            return 0;
        }
      }
    }
    else if (v4 <= 3072)
    {
      BOOL v13 = (v4 - 1032) > 0x3D || ((1 << (v4 - 8)) & 0x200819F801040079) == 0;
      if (v13 && ((v4 - 2057) > 8 || ((1 << (v4 - 9)) & 0x179) == 0) && (v4 - 1026) >= 3) {
        return 0;
      }
    }
    else
    {
      switch(v4)
      {
        case 3073:
        case 3075:
        case 3077:
        case 3080:
        case 3082:
        case 3083:
        case 3084:
        case 3085:
        case 3089:
        case 3090:
        case 3091:
        case 3093:
        case 3094:
        case 3095:
        case 3096:
        case 3097:
        case 3098:
        case 3099:
        case 3100:
        case 3101:
        case 3102:
        case 3103:
        case 3104:
        case 3105:
        case 3106:
        case 3107:
        case 3108:
        case 3109:
        case 3110:
        case 3111:
        case 3112:
        case 3113:
        case 3114:
        case 3115:
        case 3116:
        case 3117:
        case 3118:
        case 3119:
        case 3121:
        case 3123:
        case 3126:
        case 3127:
        case 3128:
        case 3129:
        case 3130:
        case 3131:
        case 3132:
        case 3133:
        case 3134:
        case 3135:
        case 3138:
        case 3139:
        case 3140:
        case 3141:
        case 3142:
        case 3143:
        case 3144:
        case 3145:
        case 3154:
        case 3157:
        case 3158:
        case 3160:
        case 3161:
        case 3162:
        case 3163:
        case 3168:
        case 3169:
        case 3170:
        case 3171:
        case 3173:
        case 3174:
        case 3175:
        case 3176:
        case 3177:
        case 3178:
        case 3180:
        case 3181:
        case 3182:
        case 3183:
        case 3184:
        case 3185:
        case 3186:
        case 3187:
        case 3193:
        case 3194:
        case 3195:
        case 3196:
        case 3204:
          return result;
        case 3081:
          BOOL result = sub_1000FF268(a1);
          break;
        case 3092:
          BOOL result = sub_1000FF460(a1);
          break;
        case 3153:
          BOOL result = sub_1000FF684(a1);
          break;
        case 3159:
          BOOL result = sub_1000FF8A0(a1);
          break;
        case 3197:
          BOOL result = sub_1000FFAA4(a1);
          break;
        default:
          return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000F97B4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 7)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100745D74();
      return 0;
    }
    return result;
  }
  if (v2 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1621, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1624, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1625, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1630, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2 + 2)");
  }
  uint64_t v6 = v5 + v4;
  *(unsigned char *)(v6 + 4) = 0;
  *(_DWORD *)uint64_t v6 = 0;
  *((_WORD *)a1 + 6) += 5;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1632, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1634, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 8;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1635, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

uint64_t sub_1000F99B4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 == v2)
  {
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100745DF0();
    }
    return 0;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1648, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v1 <= v2)
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v11 = qword_100A00098;
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100745F0C(v11, v12, v13, v14, v15, v16, v17, v18);
    }
    return 0;
  }
  uint64_t v5 = *a1;
  unsigned __int16 v6 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  unsigned int v7 = *(unsigned __int8 *)(v5 + v2);
  unsigned int v8 = *((unsigned __int16 *)a1 + 4);
  unsigned int v9 = ~v2 + v1;
  int v10 = 22 * v7;
  if (v9 < 22 * v7)
  {
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100745E7C(v9, v10);
    }
    return 0;
  }
  if (!*(unsigned char *)(v5 + v2)) {
    return 1;
  }
  unsigned int v19 = 0;
  LOWORD(v20) = *((_WORD *)a1 + 4);
  do
  {
    if (*((unsigned char *)a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_33:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1654, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
    }
    if ((unsigned __int16)v1 - v6 <= 5) {
      goto LABEL_33;
    }
    unsigned __int16 v21 = v6 + 6;
    *((_WORD *)a1 + 6) = v6 + 6;
    *((unsigned char *)a1 + 14) = 15;
    if (!(_WORD)v20) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1657, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
    }
    *((_WORD *)a1 + 6) = 0;
    *((unsigned char *)a1 + 14) = 2;
    *((_WORD *)a1 + 5) = v20;
    if ((unsigned __int16)(v6 + 6) > (unsigned __int16)v20) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1658, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
    }
    *((_WORD *)a1 + 6) = v21;
    if ((unsigned __int16)v20 - v21 <= 15) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1661, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
    }
    uint64_t v22 = (void *)(v5 + v21);
    *uint64_t v22 = 0;
    v22[1] = 0;
    *((_WORD *)a1 + 6) += 16;
    if (v8 > *((unsigned __int16 *)a1 + 5)) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1663, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
    }
    *((_WORD *)a1 + 6) = v8;
    if (*((unsigned char *)a1 + 14) == 2) {
      *((_WORD *)a1 + 5) = v8;
    }
    *((unsigned char *)a1 + 14) = 15;
    uint64_t v5 = *a1;
    if (!*a1 || (unsigned int v20 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1665, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
    }
    v6 += 22;
    *((_WORD *)a1 + 6) = 0;
    *((unsigned char *)a1 + 14) = 1;
    *((_WORD *)a1 + 5) = v20;
    if (v20 < v6) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1666, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
    }
    *((_WORD *)a1 + 6) = v6;
    ++v19;
    uint64_t v3 = 1;
    LOWORD(v1) = v20;
  }
  while (v19 < v7);
  return v3;
}

BOOL sub_1000F9C9C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x16)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100745F84();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1679, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1682, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1683, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1686, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned __int16 v6 = (void *)(v5 + v4);
  *unsigned __int16 v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1688, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1690, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 22;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1691, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000F9E98(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xFE)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074600C();
      return 0;
    }
    return result;
  }
  if (v2 <= 14) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1703, "ByteStream_NumReadBytesAvail(*pBs) >= (1+6+1+1+3+2+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 15;
  *((_WORD *)a1 + 6) = v1 + 15;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1706, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1707, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 239) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1710, "ByteStream_NumReadBytesAvail(*pBs) >= (240)");
  }
  unsigned __int16 v6 = (_OWORD *)(v5 + v4);
  v6[13] = 0u;
  v6[14] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  unsigned char v6[2] = 0u;
  *unsigned __int16 v6 = 0u;
  *((_WORD *)a1 + 6) += 240;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1712, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1714, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 255;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1715, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FA0B4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 9)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746094();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1727, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1730, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1731, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1734, "ByteStream_NumReadBytesAvail(*pBs) >= (4)");
  }
  *(_DWORD *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  *((_WORD *)a1 + 6) += 4;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1736, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1738, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 10;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1739, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000FA2B0(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 9)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074611C();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1751, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1754, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1755, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1758, "ByteStream_NumReadBytesAvail(*pBs) >= (4)");
  }
  *(_DWORD *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  *((_WORD *)a1 + 6) += 4;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1760, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1762, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 10;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1763, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

uint64_t sub_1000FA4AC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 10);
  if (v1 <= 0xE) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1100, "(size_t)(13 + 2) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = 15;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_5:
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_1007461A4();
    }
    return 0;
  }
  if (v1 == 15) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1108, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v4 = *(void *)a1;
  *(_WORD *)(a1 + 12) = 16;
  int v5 = *(unsigned __int8 *)(v4 + 15) - 1;
  uint64_t v2 = 1;
  switch(v5)
  {
    case 0:
    case 2:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 23:
    case 31:
    case 32:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
      return v2;
    case 1:
      uint64_t result = sub_1000FE0C4((uint64_t *)a1);
      break;
    case 3:
      uint64_t result = sub_1000FE454((uint64_t *)a1);
      break;
    case 4:
      uint64_t result = sub_1000FE650((uint64_t *)a1);
      break;
    case 7:
      uint64_t result = sub_1000FE850((uint64_t *)a1);
      break;
    case 8:
      uint64_t result = sub_1000FEA58((uint64_t *)a1);
      break;
    case 12:
      uint64_t result = sub_1000FEC5C((uint64_t *)a1);
      break;
    case 14:
      uint64_t result = sub_1000FEFEC((uint64_t *)a1);
      break;
    default:
      return 0;
  }
  return result;
}

BOOL sub_1000FA740(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100746230();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 0x11) {
    goto LABEL_4;
  }
  if (v4 <= 16) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1782, "ByteStream_NumReadBytesAvail(*pBs) >= (17)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  *((_WORD *)a1 + 6) = v3 + 17;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1784, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)(v3 + 17))
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v11 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746348(v11, v12, v13, v14, v15, v16, v17, v18);
      return 0;
    }
  }
  else
  {
    uint64_t v7 = *a1;
    unsigned __int16 v8 = v3 + 18;
    *((_WORD *)a1 + 6) = v3 + 18;
    size_t v9 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v3 + 17));
    unsigned int v10 = v4 - 18;
    if (v10 >= v9)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v6) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1791, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v8) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1792, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v8;
      if ((int)(v6 - v8) < (int)v9) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1795, "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      bzero((void *)(v7 + v8), v9);
      *((_WORD *)a1 + 6) += v9;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1797, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((unsigned char *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v19 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1799, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v19;
      if (v19 < (unsigned __int16)(v8 + v9)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1800, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v8 + v9;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_1007462B8(v10, v9);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000FA9E0(uint64_t a1, unsigned int a2)
{
  if (!a1)
  {
    unsigned int v6 = "buf";
    goto LABEL_71;
  }
  if (!a2)
  {
    unsigned int v6 = "(numBytes) > 0";
LABEL_71:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 354, v6);
  }
  uint64_t v7 = a1;
  __int16 v8 = a2;
  __int16 v11 = 1;
  __int16 v9 = a2;
  if (a2 <= 0xF)
  {
    uint64_t result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_1007463C0();
    return 0;
  }
  int v3 = *(unsigned __int8 *)(a1 + 13);
  int v4 = *(unsigned __int8 *)(a1 + 14);
  __int16 v10 = 16;
  if ((~v4 & 0xFC) == 0) {
    return 0;
  }
  int v5 = v3 | (v4 << 8);
  uint64_t result = 1;
  if (v5 > 8199)
  {
    if (v5 <= 8230)
    {
      if (v5 > 8216)
      {
        switch(v5)
        {
          case 8217:
            return sub_1000FC258(&v7);
          case 8218:
            return sub_1000FC45C(&v7);
          case 8230:
            return sub_1000FC658((uint64_t)&v7);
        }
      }
      else
      {
        switch(v5)
        {
          case 8200:
            return sub_1000FBD0C(&v7);
          case 8201:
            return sub_1000FBF14(&v7);
          case 8215:
            return sub_1000FC11C((uint64_t)&v7);
        }
      }
    }
    else if (v5 <= 8254)
    {
      switch(v5)
      {
        case 8231:
          return sub_1000FC798(&v7);
        case 8247:
          return sub_1000FC938(&v7);
        case 8248:
          return sub_1000FCB70(&v7);
      }
    }
    else if (v5 > 8296)
    {
      if (v5 == 8297)
      {
        return sub_1000FD17C(&v7);
      }
      else if (v5 == 8299)
      {
        return sub_1000FD318(&v7);
      }
    }
    else if (v5 == 8255)
    {
      return sub_1000FCDA8(&v7);
    }
    else if (v5 == 8296)
    {
      return sub_1000FCFE0(&v7);
    }
  }
  else if (v5 > 3081)
  {
    if (v5 <= 3153)
    {
      switch(v5)
      {
        case 3082:
          return sub_1000FD4B4((uint64_t)&v7);
        case 3089:
          return sub_1000FD60C(&v7);
        case 3091:
          return sub_1000FD884(&v7);
      }
    }
    else if (v5 > 3172)
    {
      if (v5 == 3173)
      {
        return sub_1000FDE7C(&v7);
      }
      else if (v5 == 3204)
      {
        return sub_1000FDFB8((uint64_t)&v7);
      }
    }
    else if (v5 == 3154)
    {
      return sub_1000FDA64(&v7);
    }
    else if (v5 == 3168)
    {
      return sub_1000FDC84(&v7);
    }
  }
  else if (v5 <= 1069)
  {
    if (v5 == 1035)
    {
      return sub_1000FAD84(&v7);
    }
    else if (v5 == 1037)
    {
      return sub_1000FAF80(&v7);
    }
  }
  else
  {
    switch(v5)
    {
      case 1070:
        uint64_t result = sub_1000FB17C(&v7);
        break;
      case 1071:
      case 1073:
      case 1074:
      case 1075:
      case 1076:
        return result;
      case 1072:
        uint64_t result = sub_1000FB378(&v7);
        break;
      case 1077:
        uint64_t result = sub_1000FB77C(&v7);
        break;
      case 1078:
        uint64_t result = sub_1000FBA44(&v7);
        break;
      default:
        if (v5 == 1093) {
          uint64_t result = sub_1000FB578(&v7);
        }
        break;
    }
  }
  return result;
}

BOOL sub_1000FAD84(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x15)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074643C();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2311, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2314, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2315, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2318, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2320, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2322, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 22;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2323, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FAF80(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x16)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007464B8();
      return 0;
    }
    return result;
  }
  if (v2 <= 6) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2335, "ByteStream_NumReadBytesAvail(*pBs) >= (6 + 1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 7;
  *((_WORD *)a1 + 6) = v1 + 7;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2338, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2339, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2342, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2344, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2346, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 23;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2347, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FB17C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 9)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746540();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2359, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2362, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2363, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2366, "ByteStream_NumReadBytesAvail(*pBs) >= (4)");
  }
  *(_DWORD *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  *((_WORD *)a1 + 6) += 4;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2368, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2370, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 10;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2371, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000FB378(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x25)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007465C8();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2383, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2386, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2387, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2391, "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  unsigned int v6 = (_OWORD *)(v5 + v4);
  *unsigned int v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2393, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2395, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 38;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2396, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FB578(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x45)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746644();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2472, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2475, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2476, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 63) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2482, "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16 + 16 + 16)");
  }
  unsigned int v6 = (_OWORD *)(v5 + v4);
  unsigned char v6[2] = 0u;
  v6[3] = 0u;
  *unsigned int v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 64;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2484, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2486, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 70;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2487, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FB77C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_1007466C0();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 - v3 <= 2) {
    goto LABEL_4;
  }
  if (v2 <= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2408, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v5 = *((unsigned __int16 *)a1 + 4);
  uint64_t v6 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2410, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)v6)
  {
    *((unsigned char *)a1 + 15) = 1;
    __int16 v11 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007467D8(v11, v12, v13, v14, v15, v16, v17, v18);
      return 0;
    }
  }
  else
  {
    uint64_t v7 = *a1;
    *((_WORD *)a1 + 6) = v3 + 2;
    if (v2 <= (unsigned __int16)(v3 + 2)) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2412, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
    }
    size_t v8 = *(unsigned __int8 *)(v7 + v6);
    unsigned __int16 v9 = v3 + 3;
    *((_WORD *)a1 + 6) = v3 + 3;
    unsigned int v10 = v2 - v3 - 3;
    if (v10 >= v8)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v5) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2419, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v5;
      if (v5 <= (unsigned __int16)(v3 + 2)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2420, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v5 - v9) < (int)v8) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2423, "ByteStream_NumReadBytesAvail(*pBs) >= (ampKeyLength)");
      }
      bzero((void *)(v7 + v9), v8);
      *((_WORD *)a1 + 6) += v8;
      if (v5 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2425, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v5;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v5;
      }
      *((unsigned char *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v19 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2427, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v19;
      if (v19 < (unsigned __int16)(v9 + v8)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2428, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9 + v8;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100746748(v10, v8);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000FBA44(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100746850();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 - v3 <= 2) {
    goto LABEL_4;
  }
  if (v2 <= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2440, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v5 = *((unsigned __int16 *)a1 + 4);
  uint64_t v6 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2442, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)v6)
  {
    *((unsigned char *)a1 + 15) = 1;
    __int16 v11 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746968(v11, v12, v13, v14, v15, v16, v17, v18);
      return 0;
    }
  }
  else
  {
    uint64_t v7 = *a1;
    *((_WORD *)a1 + 6) = v3 + 2;
    if (v2 <= (unsigned __int16)(v3 + 2)) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2444, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
    }
    size_t v8 = *(unsigned __int8 *)(v7 + v6);
    unsigned __int16 v9 = v3 + 3;
    *((_WORD *)a1 + 6) = v3 + 3;
    unsigned int v10 = v2 - v3 - 3;
    if (v10 >= v8)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v5) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2451, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v5;
      if (v5 <= (unsigned __int16)(v3 + 2)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2452, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v5 - v9) < (int)v8) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2455, "ByteStream_NumReadBytesAvail(*pBs) >= (ampKeyLength)");
      }
      bzero((void *)(v7 + v9), v8);
      *((_WORD *)a1 + 6) += v8;
      if (v5 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2457, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v5;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v5;
      }
      *((unsigned char *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v19 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2459, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v19;
      if (v19 < (unsigned __int16)(v9 + v8)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2460, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9 + v8;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_1007468D8(v10, v8);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000FBD0C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x1F)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007469E0();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2643, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2646, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2647, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 30) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2650, "ByteStream_NumReadBytesAvail(*pBs) >= (31)");
  }
  uint64_t v6 = (void *)(v5 + v4);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)((char *)v6 + 23) = 0;
  unsigned char v6[2] = 0;
  *((_WORD *)a1 + 6) += 31;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2652, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2654, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 32;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2655, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FBF14(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x1F)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746A68();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2667, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2670, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2671, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 30) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2674, "ByteStream_NumReadBytesAvail(*pBs) >= (31)");
  }
  uint64_t v6 = (void *)(v5 + v4);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)((char *)v6 + 23) = 0;
  unsigned char v6[2] = 0;
  *((_WORD *)a1 + 6) += 31;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2676, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2678, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 32;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2679, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FC11C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_13;
  }
  if (*(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12) <= 0x1F)
  {
LABEL_13:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746AF0();
      return 0;
    }
    return result;
  }
  unsigned int v1 = *(unsigned __int16 *)(a1 + 8);
  uint64_t v2 = *(_OWORD **)a1;
  if (*(void *)a1) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2691, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(unsigned char *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v1;
  *(_WORD *)(a1 + 12) = 0;
  if (v1 <= 0x1F) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2696, "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  *(_WORD *)(a1 + 12) += 32;
  if (v1 > *(unsigned __int16 *)(a1 + 10)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2698, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v1;
  if (*(unsigned char *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v1;
  }
  *(unsigned char *)(a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FC258(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x1B)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746B78();
      return 0;
    }
    return result;
  }
  if (v2 <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2711, "ByteStream_NumReadBytesAvail(*pBs) >= (2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2714, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2715, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 25) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2720, "ByteStream_NumReadBytesAvail(*pBs) >= (8 + 2 + 16)");
  }
  uint64_t v6 = v5 + v4;
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(_WORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  *((_WORD *)a1 + 6) += 26;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2722, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2724, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 28;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2725, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FC45C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x11)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746BF4();
      return 0;
    }
    return result;
  }
  if (v2 <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2737, "ByteStream_NumReadBytesAvail(*pBs) >= (2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2740, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2741, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2744, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  uint64_t v6 = (void *)(v5 + v4);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2746, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2748, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 18;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2749, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FC658(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_13;
  }
  if (*(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12) <= 0x3F)
  {
LABEL_13:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746C7C();
      return 0;
    }
    return result;
  }
  unsigned int v1 = *(unsigned __int16 *)(a1 + 8);
  int v2 = *(_OWORD **)a1;
  if (*(void *)a1) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2761, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(unsigned char *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v1;
  *(_WORD *)(a1 + 12) = 0;
  if (v1 <= 0x3F) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2766, "ByteStream_NumReadBytesAvail(*pBs) >= (32 + 32)");
  }
  void v2[2] = 0u;
  v2[3] = 0u;
  *int v2 = 0u;
  v2[1] = 0u;
  *(_WORD *)(a1 + 12) += 64;
  if (v1 > *(unsigned __int16 *)(a1 + 10)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2768, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v1;
  if (*(unsigned char *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v1;
  }
  *(unsigned char *)(a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FC798(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x3F)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746D04();
      return 0;
    }
    return result;
  }
  if (v2 <= 6) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2781, "ByteStream_NumReadBytesAvail(*pBs) >= (1+6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 7;
  *((_WORD *)a1 + 6) = v4;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2785, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2786, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2790, "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2792, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FC938(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100746D8C();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 3) {
    goto LABEL_4;
  }
  if (v4 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2805, "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v7 = v3 + 3;
  *((_WORD *)a1 + 6) = v3 + 3;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2808, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v7)
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v12 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100746EA4(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0;
    }
  }
  else
  {
    uint64_t v8 = *a1;
    unsigned __int16 v9 = v3 + 4;
    *((_WORD *)a1 + 6) = v9;
    size_t v10 = *(unsigned __int8 *)(v8 + v7);
    unsigned int v11 = v4 - 4;
    if (v11 >= v10)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v6) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2818, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v9) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2819, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v6 - v9) < (int)v10) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2822, "ByteStream_NumReadBytesAvail(*pBs) >= (advertisingDataLength)");
      }
      bzero((void *)(v8 + v9), v10);
      *((_WORD *)a1 + 6) += v10;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2824, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((unsigned char *)a1 + 14) = 15;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100746E14(v11, v10);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000FCB70(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100746F1C();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 3) {
    goto LABEL_4;
  }
  if (v4 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2837, "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v7 = v3 + 3;
  *((_WORD *)a1 + 6) = v3 + 3;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2840, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v7)
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v12 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747034(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0;
    }
  }
  else
  {
    uint64_t v8 = *a1;
    unsigned __int16 v9 = v3 + 4;
    *((_WORD *)a1 + 6) = v9;
    size_t v10 = *(unsigned __int8 *)(v8 + v7);
    unsigned int v11 = v4 - 4;
    if (v11 >= v10)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v6) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2849, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v9) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2850, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v6 - v9) < (int)v10) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2853, "ByteStream_NumReadBytesAvail(*pBs) >= (scanResponseDataLength)");
      }
      bzero((void *)(v8 + v9), v10);
      *((_WORD *)a1 + 6) += v10;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2855, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((unsigned char *)a1 + 14) = 15;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100746FA4(v11, v10);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000FCDA8(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_1007470AC();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  int v4 = v2 - v3;
  if (v2 - v3 <= 2) {
    goto LABEL_4;
  }
  if (v4 <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2868, "ByteStream_NumReadBytesAvail(*pBs) >= (1+1)");
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v7 = v3 + 2;
  *((_WORD *)a1 + 6) = v3 + 2;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2871, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v7)
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v12 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007471C4(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0;
    }
  }
  else
  {
    uint64_t v8 = *a1;
    unsigned __int16 v9 = v3 + 3;
    *((_WORD *)a1 + 6) = v9;
    size_t v10 = *(unsigned __int8 *)(v8 + v7);
    unsigned int v11 = v4 - 3;
    if (v11 >= v10)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v6) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2880, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v6;
      if (v6 < v9) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2881, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v9;
      if ((int)(v6 - v9) < (int)v10) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2884, "ByteStream_NumReadBytesAvail(*pBs) >= (advertisingDataLength)");
      }
      bzero((void *)(v8 + v9), v10);
      *((_WORD *)a1 + 6) += v10;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2886, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((unsigned char *)a1 + 14) = 15;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100747134(v11, v10);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000FCFE0(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x1E)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074723C();
      return 0;
    }
    return result;
  }
  if (v2 <= 14) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2899, "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1+3+2+2+1+1+1+1+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 15;
  *((_WORD *)a1 + 6) = v4;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2903, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2904, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2907, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2908, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FD17C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x23)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007472C4();
      return 0;
    }
    return result;
  }
  if (v2 <= 19) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2921, "ByteStream_NumReadBytesAvail(*pBs) >= (1+1+1+3+2+1+2+2+1+1+1+1+1+1+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 20;
  *((_WORD *)a1 + 6) = v4;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2925, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2926, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2929, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2930, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FD318(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_15;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0x13)
  {
LABEL_15:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747340();
      return 0;
    }
    return result;
  }
  if (v2 <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2943, "ByteStream_NumReadBytesAvail(*pBs) >= (1+2+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 4;
  *((_WORD *)a1 + 6) = v4;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2947, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2948, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2951, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2952, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  return 1;
}

uint64_t sub_1000FD4B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_1007473BC();
    }
    return 0;
  }
  int v1 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) == v1) {
    goto LABEL_4;
  }
  if (*(unsigned char *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v1;
  }
  unsigned int v4 = *(unsigned __int16 *)(a1 + 8);
  *(unsigned char *)(a1 + 14) = 15;
  uint64_t v5 = *(unsigned char **)a1;
  if (!*(void *)a1 || !v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2290, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(unsigned char *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v4;
  *(_WORD *)(a1 + 12) = 0;
  *uint64_t v5 = 0;
  ++*(_WORD *)(a1 + 12);
  if (v4 > *(unsigned __int16 *)(a1 + 10)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2296, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v4;
  if (*(unsigned char *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v4;
  }
  *(unsigned char *)(a1 + 14) = 15;
  if (!*(void *)a1 || (__int16 v6 = *(_WORD *)(a1 + 8)) == 0) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2298, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  uint64_t v2 = 1;
  *(unsigned char *)(a1 + 14) = 1;
  *(_WORD *)(a1 + 10) = v6;
  *(_WORD *)(a1 + 12) = 1;
  return v2;
}

BOOL sub_1000FD60C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100747448();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 == v3) {
    goto LABEL_4;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2500, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((unsigned char *)a1 + 15) = 1;
    size_t v10 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747564(v10, v11, v12, v13, v14, v15, v16, v17);
      return 0;
    }
  }
  else
  {
    uint64_t v5 = *a1;
    unsigned __int16 v6 = v3 + 1;
    *((_WORD *)a1 + 6) = v3 + 1;
    unsigned int v7 = *((unsigned __int16 *)a1 + 4);
    unsigned int v8 = ~v3 + v2;
    uint64_t v9 = 22 * *(unsigned __int8 *)(v5 + v3);
    if (v8 >= v9)
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v7) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2507, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v7;
      if (v3 >= v7) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2508, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if ((int)(v7 - v6) < (int)v9) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2511, "ByteStream_NumReadBytesAvail(*pBs) >= (numLinkKeys*(6+16))");
      }
      bzero((void *)(v5 + v6), v9);
      *((_WORD *)a1 + 6) += v9;
      if (v7 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2513, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v7;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v7;
      }
      *((unsigned char *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v18 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2515, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v18;
      if (v18 < (unsigned __int16)(v6 + v9)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2516, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6 + v9;
      return 1;
    }
    else
    {
      BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_1007474D4(v8, v9);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1000FD884(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_17;
  }
  uint64_t v1 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) - v1 <= 0x1E)
  {
LABEL_17:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007475DC();
      return 0;
    }
    return result;
  }
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v1;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 4);
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v3 = *a1;
  if (!*a1 || !v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2530, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v2;
  if (v1 > v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2531, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v1;
  if ((int)(v2 - v1) <= 30) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2534, "ByteStream_NumReadBytesAvail(*pBs) >= (31)");
  }
  unsigned int v4 = (void *)(v3 + v1);
  *unsigned int v4 = 0;
  v4[1] = 0;
  *(void *)((char *)v4 + 23) = 0;
  v4[2] = 0;
  *((_WORD *)a1 + 6) += 31;
  if (v2 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2536, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v2;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v2;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v5 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2538, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v6 = v1 + 31;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v5;
  if (v5 < v6) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2539, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v6;
  return 1;
}

BOOL sub_1000FDA64(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0xF0)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747664();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2551, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2554, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2555, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 239) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2558, "ByteStream_NumReadBytesAvail(*pBs) >= (240)");
  }
  unsigned __int16 v6 = (_OWORD *)(v5 + v4);
  v6[13] = 0u;
  v6[14] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  unsigned char v6[2] = 0u;
  *unsigned __int16 v6 = 0u;
  *((_WORD *)a1 + 6) += 240;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2560, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2562, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 241;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2563, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FDC84(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_19;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 6)
  {
LABEL_19:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007476E0();
      return 0;
    }
    return result;
  }
  if (v2 <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2575, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 6;
  *((_WORD *)a1 + 6) = v1 + 6;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2578, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2579, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2582, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(unsigned char *)(v5 + (unsigned __int16)(v1 + 6)) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2584, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2586, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 7;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2587, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000FDE7C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_13;
  }
  if (*((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6) <= 4)
  {
LABEL_13:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747768();
      return 0;
    }
    return result;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 4);
  uint64_t v2 = *a1;
  if (*a1) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2603, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v1;
  *((_WORD *)a1 + 6) = 0;
  if (v1 <= 4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2610, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2 + 1 + 1)");
  }
  *(unsigned char *)(v2 + 4) = 0;
  *(_DWORD *)uint64_t v2 = 0;
  *((_WORD *)a1 + 6) += 5;
  if (v1 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2612, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v1;
  }
  *((unsigned char *)a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FDFB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }
  if (*(unsigned __int16 *)(a1 + 10) == *(unsigned __int16 *)(a1 + 12))
  {
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007477F0();
      return 0;
    }
    return result;
  }
  unsigned int v2 = *(unsigned __int16 *)(a1 + 8);
  BOOL v3 = *(unsigned char **)a1;
  if (*(void *)a1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2625, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *(unsigned char *)(a1 + 14) = 2;
  *(_WORD *)(a1 + 10) = v2;
  *(_WORD *)(a1 + 12) = 0;
  *BOOL v3 = 0;
  ++*(_WORD *)(a1 + 12);
  if (v2 > *(unsigned __int16 *)(a1 + 10)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2630, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *(_WORD *)(a1 + 12) = v2;
  if (*(unsigned char *)(a1 + 14) == 2) {
    *(_WORD *)(a1 + 10) = v2;
  }
  *(unsigned char *)(a1 + 14) = 15;
  return 1;
}

BOOL sub_1000FE0C4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 == v3)
  {
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_10074787C();
    }
    return 0;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1817, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((unsigned char *)a1 + 15) = 1;
    unsigned int v18 = qword_100A00098;
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100747908(v18, v19, v20, v21, v22, v23, v24, v25);
    }
    return 0;
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  uint64_t v7 = *a1;
  int v8 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  unsigned int v9 = *(unsigned __int8 *)(v7 + v3);
  if (*(unsigned char *)(v7 + v3))
  {
    BOOL v4 = 0;
    int v10 = 0;
    LOWORD(v11) = v6;
    while (1)
    {
      if (*((unsigned char *)a1 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
        return v4;
      }
      int v12 = (unsigned __int16)v2 - (unsigned __int16)v8;
      if (v12 < 0xA) {
        return v4;
      }
      if (v12 <= 7) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1827, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 1 + 6)");
      }
      unsigned __int16 v13 = v8 + 8;
      *((_WORD *)a1 + 6) = v8 + 8;
      if ((unsigned __int16)v2 <= (unsigned __int16)(v8 + 8)) {
        break;
      }
      int v14 = v8 + 9;
      *((_WORD *)a1 + 6) = v14;
      size_t v15 = *(unsigned __int8 *)(v7 + v13);
      if ((unsigned __int16)v2 - (unsigned __int16)v14 < (int)v15) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1830, "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      int v16 = v14 + v15;
      *((_WORD *)a1 + 6) = v16;
      if ((unsigned __int16)v2 <= (unsigned __int16)v16) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1831, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
      }
      int v17 = v16 + 1;
      *((_WORD *)a1 + 6) = v16 + 1;
      if (v15 <= 0x1F && (unsigned __int16)v2 - (unsigned __int16)v17 >= v15)
      {
        *((unsigned char *)a1 + 14) = 15;
        if (!(_WORD)v11) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1837, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
        }
        *((_WORD *)a1 + 6) = 0;
        *((unsigned char *)a1 + 14) = 2;
        *((_WORD *)a1 + 5) = v11;
        if ((unsigned __int16)v16 >= (unsigned __int16)v11) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1838, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
        }
        *((_WORD *)a1 + 6) = v17;
        if ((unsigned __int16)v11 - (unsigned __int16)(v16 + 1) < (int)v15) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1839, "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
        }
        bzero((void *)(v7 + (unsigned __int16)v17), v15);
        *((_WORD *)a1 + 6) += v15;
        if (v6 > *((unsigned __int16 *)a1 + 5)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1841, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
        }
        *((_WORD *)a1 + 6) = v6;
        if (*((unsigned char *)a1 + 14) == 2) {
          *((_WORD *)a1 + 5) = v6;
        }
        *((unsigned char *)a1 + 14) = 15;
        uint64_t v7 = *a1;
        if (!*a1 || (unsigned int v11 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1843, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
        }
        int v8 = v17 + v15;
        *((_WORD *)a1 + 6) = 0;
        *((unsigned char *)a1 + 14) = 1;
        *((_WORD *)a1 + 5) = v11;
        if (v11 < (unsigned __int16)(v17 + v15)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1844, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
        }
        *((_WORD *)a1 + 6) = v8;
        BOOL v4 = ++v10 >= v9;
        LOWORD(v2) = v11;
        if (v9 != v10) {
          continue;
        }
      }
      return v4;
    }
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v26 = qword_100A00098;
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100747908(v26, v27, v28, v29, v30, v31, v32, v33);
    }
  }
  else
  {
    return 1;
  }
  return v4;
}

BOOL sub_1000FE454(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xA)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747980();
      return 0;
    }
    return result;
  }
  if (v2 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1862, "ByteStream_NumReadBytesAvail(*pBs) >= (1 + 2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1865, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1866, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1867, "ByteStream_NumReadBytesAvail(*pBs) >= (8)");
  }
  *(void *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  *((_WORD *)a1 + 6) += 8;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1869, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1871, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 11;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1872, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000FE650(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xB)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007479FC();
      return 0;
    }
    return result;
  }
  if (v2 <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1887, "ByteStream_NumReadBytesAvail(*pBs) >= (2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1890, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1891, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 9) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1894, "ByteStream_NumReadBytesAvail(*pBs) >= (8 + 2)");
  }
  uint64_t v6 = v5 + v4;
  *(_WORD *)(v6 + 8) = 0;
  *(void *)uint64_t v6 = 0;
  *((_WORD *)a1 + 6) += 10;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1896, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1898, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 12;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1899, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FE850(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x40)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747A78();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1914, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1917, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1918, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 63) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1921, "ByteStream_NumReadBytesAvail(*pBs) >= (32 + 32)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  unsigned char v6[2] = 0u;
  v6[3] = 0u;
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 64;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1923, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1925, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 65;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1926, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FEA58(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x20)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747B00();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1941, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1944, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1945, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1946, "ByteStream_NumReadBytesAvail(*pBs) >= (32)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1948, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1950, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 33;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1951, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

uint64_t sub_1000FEC5C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_4;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 == v3)
  {
LABEL_4:
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100747B7C();
    }
LABEL_6:
    char v4 = 0;
    return v4 & 1;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1965, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((unsigned char *)a1 + 15) = 1;
    int v17 = qword_100A00098;
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100747D14(v17, v18, v19, v20, v21, v22, v23, v24);
    }
    goto LABEL_6;
  }
  unsigned int v6 = *((unsigned __int16 *)a1 + 4);
  uint64_t v7 = *a1;
  int v8 = v3 + 1;
  *((_WORD *)a1 + 6) = v3 + 1;
  unsigned int v9 = *(unsigned __int8 *)(v7 + v3);
  if (*(unsigned char *)(v7 + v3))
  {
    BOOL v10 = 0;
    unsigned int v11 = 0;
    LOWORD(v12) = v6;
    while (!*((unsigned char *)a1 + 15))
    {
      int v13 = (unsigned __int16)v2 - (unsigned __int16)v8;
      if (v13 <= 0x17) {
        goto LABEL_32;
      }
      if (v13 <= 22) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1983, "ByteStream_NumReadBytesAvail(*pBs) >= (2 + 1 + 6 + 1 + 1 + 1 + 1 + 1 + 2 + 1 + 6)");
      }
      *((_WORD *)a1 + 6) = v8 + 23;
      if ((unsigned __int16)v2 <= (unsigned __int16)(v8 + 23))
      {
        *((unsigned char *)a1 + 15) = 1;
        uint64_t v25 = qword_100A00098;
        if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
          sub_100747D14(v25, v26, v27, v28, v29, v30, v31, v32);
        }
        goto LABEL_38;
      }
      int v14 = v8 + 24;
      *((_WORD *)a1 + 6) = v8 + 24;
      size_t v15 = *(unsigned __int8 *)(v7 + (unsigned __int16)(v8 + 23));
      unsigned int v16 = (unsigned __int16)v2 - (unsigned __int16)(v8 + 24);
      if (v16 < v15)
      {
        if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
          sub_100747C84(v16, v15);
        }
        goto LABEL_38;
      }
      *((unsigned char *)a1 + 14) = 15;
      if (!(_WORD)v12) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1994, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v12;
      if ((unsigned __int16)(v8 + 24) > (unsigned __int16)v12) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1995, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v14;
      if ((unsigned __int16)v12 - (unsigned __int16)(v8 + 24) < (int)v15) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1996, "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      bzero((void *)(v7 + (unsigned __int16)v14), v15);
      *((_WORD *)a1 + 6) += v15;
      if (v6 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 1998, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v6;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v6;
      }
      *((unsigned char *)a1 + 14) = 15;
      uint64_t v7 = *a1;
      if (!*a1 || (unsigned int v12 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2000, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      int v8 = v14 + v15;
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v12;
      if (v12 < (unsigned __int16)(v14 + v15)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2001, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      ++v11;
      *((_WORD *)a1 + 6) = v8;
      BOOL v10 = v11 >= v9;
      char v4 = 1;
      LOWORD(v2) = v12;
      if (v9 == v11) {
        return v4 & 1;
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_32:
    if (os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR)) {
      sub_100747C08();
    }
LABEL_38:
    char v4 = v10;
  }
  else
  {
    char v4 = 1;
  }
  return v4 & 1;
}

BOOL sub_1000FEFEC(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
LABEL_4:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100747D8C();
    return 0;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  if (v2 - v3 <= 6) {
    goto LABEL_4;
  }
  if ((int)(v2 - v3) <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2021, "ByteStream_NumReadBytesAvail(*pBs) >= (2 + 1 + 1 + 1 + 1)");
  }
  unsigned int v5 = *((unsigned __int16 *)a1 + 4);
  *((_WORD *)a1 + 6) = v3 + 6;
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2024, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= (unsigned __int16)(v3 + 6))
  {
    *((unsigned char *)a1 + 15) = 1;
    unsigned int v12 = qword_100A00098;
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747E14(v12, v13, v14, v15, v16, v17, v18, v19);
      return 0;
    }
  }
  else
  {
    uint64_t v6 = *a1;
    unsigned __int16 v7 = v3 + 7;
    *((_WORD *)a1 + 6) = v3 + 7;
    size_t v8 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 6));
    unsigned int v9 = v2 - (unsigned __int16)(v3 + 7);
    if (v8 > 0xF7 || v9 < v8) {
      return 0;
    }
    if (*(unsigned char *)(v6 + (unsigned __int16)(v3 + 6)))
    {
      *((unsigned char *)a1 + 14) = 15;
      if (!v5) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2033, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 2;
      *((_WORD *)a1 + 5) = v5;
      if (v5 < v7) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2034, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v7;
      if ((int)(v5 - (unsigned __int16)(v3 + 7)) < (int)v8) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2035, "ByteStream_NumReadBytesAvail(*pBs) >= (dataLength)");
      }
      bzero((void *)(v6 + v7), v8);
      *((_WORD *)a1 + 6) += v8;
      if (v5 > *((unsigned __int16 *)a1 + 5)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2037, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v5;
      if (*((unsigned char *)a1 + 14) == 2) {
        *((_WORD *)a1 + 5) = v5;
      }
      *((unsigned char *)a1 + 14) = 15;
      if (!*a1 || (unsigned int v11 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2039, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
      }
      *((_WORD *)a1 + 6) = 0;
      *((unsigned char *)a1 + 14) = 1;
      *((_WORD *)a1 + 5) = v11;
      if (v11 < (unsigned __int16)(v7 + v8)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2040, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
      }
      *((_WORD *)a1 + 6) = v7 + v8;
    }
    return 1;
  }
  return result;
}

BOOL sub_1000FF268(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 1)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747E8C();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2055, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2059, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2060, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2063, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(unsigned char *)(v5 + v4) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2065, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2067, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned int v7 = v2 + 2;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v7 > v6) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2068, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000FF460(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0xF8)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747F14();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2080, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2084, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2085, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 247) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2088, "ByteStream_NumReadBytesAvail(*pBs) >= (248)");
  }
  uint64_t v6 = v5 + v4;
  *(void *)(v6 + 240) = 0;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  *((_WORD *)a1 + 6) += 248;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2090, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2092, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 249;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2093, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FF684(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 0xF1)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100747F90();
      return 0;
    }
    return result;
  }
  if (v2 <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2105, "ByteStream_NumReadBytesAvail(*pBs) >= (1+1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 2;
  *((_WORD *)a1 + 6) = v1 + 2;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2109, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2110, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 239) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2113, "ByteStream_NumReadBytesAvail(*pBs) >= (240)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  v6[13] = 0u;
  v6[14] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  unsigned char v6[2] = 0u;
  *uint64_t v6 = 0u;
  *((_WORD *)a1 + 6) += 240;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2115, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2117, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v1 + 242;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2118, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FF8A0(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x16)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074800C();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2130, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2134, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2135, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 31) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2139, "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 32;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2141, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2143, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 33;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2144, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FFAA4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x40)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100748094();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2188, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2191, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2192, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 63) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2198, "ByteStream_NumReadBytesAvail(*pBs) >= (16 + 16 + 16 + 16)");
  }
  uint64_t v6 = (_OWORD *)(v5 + v4);
  unsigned char v6[2] = 0u;
  v6[3] = 0u;
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *((_WORD *)a1 + 6) += 64;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2200, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2202, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 65;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2203, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_1000FFCAC(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 1)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074811C();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2163, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2167, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2168, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2171, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(unsigned char *)(v5 + v4) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2173, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2175, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned int v7 = v2 + 2;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v7 > v6) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2176, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_1000FFEA4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_19;
  }
  int v1 = *((unsigned __int16 *)a1 + 6);
  int v2 = *((unsigned __int16 *)a1 + 5) - v1;
  if (v2 <= 3)
  {
LABEL_19:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007481A4();
      return 0;
    }
    return result;
  }
  if (v2 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2215, "ByteStream_NumReadBytesAvail(*pBs) >= (1+2)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  unsigned __int16 v4 = v1 + 3;
  *((_WORD *)a1 + 6) = v1 + 3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2218, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v3 < v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2219, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if (v3 <= v4) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2222, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  *(unsigned char *)(v5 + (unsigned __int16)(v1 + 3)) = 0;
  ++*((_WORD *)a1 + 6);
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2224, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2226, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v1 + 4;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2227, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

BOOL sub_10010009C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 0x10)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_10074822C();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2239, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2242, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2243, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 15) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2246, "ByteStream_NumReadBytesAvail(*pBs) >= (16)");
  }
  unsigned int v6 = (void *)(v5 + v4);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *((_WORD *)a1 + 6) += 16;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2248, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v7 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2250, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v8 = v2 + 17;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v7;
  if (v7 < v8) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2251, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v8;
  return 1;
}

BOOL sub_10010029C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c");
    goto LABEL_18;
  }
  unsigned int v1 = *((unsigned __int16 *)a1 + 5);
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (v1 - v2 <= 8)
  {
LABEL_18:
    BOOL result = os_log_type_enabled((os_log_t)qword_100A00098, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_1007482A8();
      return 0;
    }
    return result;
  }
  if (v1 <= v2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2263, "ByteStream_NumReadBytesAvail(*pBs) >= (1)");
  }
  unsigned int v3 = *((unsigned __int16 *)a1 + 4);
  uint64_t v4 = v2 + 1;
  *((_WORD *)a1 + 6) = v2 + 1;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v4;
  }
  *((unsigned char *)a1 + 14) = 15;
  uint64_t v5 = *a1;
  if (!*a1 || !v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2266, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 2;
  *((_WORD *)a1 + 5) = v3;
  if (v2 >= v3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2267, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v4;
  if ((int)(v3 - v4) <= 7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2270, "ByteStream_NumReadBytesAvail(*pBs) >= (8)");
  }
  *(void *)(v5 + v4) = 0;
  *((_WORD *)a1 + 6) += 8;
  if (v3 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2272, "(size_t)(byteStreamLength) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v3;
  if (*((unsigned char *)a1 + 14) == 2) {
    *((_WORD *)a1 + 5) = v3;
  }
  *((unsigned char *)a1 + 14) = 15;
  if (!*a1 || (unsigned int v6 = *((unsigned __int16 *)a1 + 4), !*((_WORD *)a1 + 4))) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2274, "((*pBs).__data != NULL) && ((*pBs).__trueSize > 0)");
  }
  unsigned __int16 v7 = v2 + 9;
  *((_WORD *)a1 + 6) = 0;
  *((unsigned char *)a1 + 14) = 1;
  *((_WORD *)a1 + 5) = v6;
  if (v6 < v7) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/Platforms/Darwin/hcilite_filter.c", 2275, "(size_t)(byteStreamPosition) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v7;
  return 1;
}

void sub_1001004B4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x18u);
}

uint64_t sub_1001004E0(uint64_t a1, _DWORD *a2, int a3, int a4, uint64_t a5)
{
  if (a5)
  {
    __int16 v7 = a3;
    uint64_t result = sub_100108578(a1, a2, a3, (uint64_t)sub_100100594, 0x3FAu, 0);
    if (!result)
    {
      sub_100108538(1);
      qword_100A000A8 = (uint64_t)sub_10010CE48(0x40uLL);
      if (qword_100A000A8)
      {
        char v9 = *(unsigned char *)(sub_10025B218(0xFu) + 10);
        BOOL v10 = (void *)qword_100A000A8;
        *(unsigned char *)(qword_100A000A8 + 60) = v9;
        sub_10025C0F0(v10);
        uint64_t result = 0;
        uint64_t v11 = qword_100A000A8;
        *(void *)(qword_100A000A8 + 24) = a5;
        *(_WORD *)(v11 + 40) = v7;
        *(_DWORD *)(v11 + 44) = a4;
      }
      else
      {
        sub_1001088C4();
        return 106;
      }
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return result;
}

void sub_100100594(unsigned int *a1)
{
  unsigned int v2 = *a1;
  if (*a1 == 6)
  {
    uint64_t v4 = (void (**)(void **))sub_100100A10(*((unsigned __int16 *)a1 + 2));
    if (!v4) {
      sub_10025B8C0();
    }
    if ((*((unsigned char *)v4 + 95) & 0xFE) == 2)
    {
      if (sub_100131A28(v4 + 3, *((void *)a1 + 1), *((unsigned __int16 *)a1 + 8)))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Receive error", v5, v6, v7, v8, v9, v10, v11, v69);
          unsigned int v12 = sub_100050B4C(0xFu);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
            sub_100748324();
          }
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Data (event %d) received in invalid state (%d), forwarding to app.\n", v17, v18, v19, v20, v21, v22, v23, *a1);
        uint64_t v24 = sub_100050B4C(0xFu);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      (*(void (**)(unsigned int *))(qword_100A000A8 + 24))(a1);
    }
    return;
  }
  if (v2 == 2)
  {
    uint64_t v13 = sub_100100A10(*((unsigned __int16 *)a1 + 2));
    if (!v13) {
      sub_10025B8C0();
    }
    uint64_t v14 = sub_100100A10(*((unsigned __int16 *)a1 + 2));
    if (v14) {
      *((unsigned char *)v14 + 95) = 0;
    }
    if (*(unsigned char *)(qword_100A000A8 + 49)) {
      *((_DWORD *)v13 + 21) = 1802;
    }
    uint64_t v15 = (void *)v13[7];
    if (v15)
    {
      sub_100023010(v15);
      v13[7] = 0;
    }
    sub_100100DD4(*((unsigned __int16 *)a1 + 2), a1[2]);
    uint64_t v16 = *((unsigned __int16 *)a1 + 2);
    sub_100100E20(v16);
    return;
  }
  if (v2 != 1 || a1[4])
  {
    unsigned int v3 = *(void (**)(void))(qword_100A000A8 + 24);
    v3();
    return;
  }
  if (*(unsigned __int8 *)(qword_100A000A8 + 16) >= *(unsigned __int8 *)(qword_100A000A8 + 60))
  {
    if (!sub_100058654()) {
      goto LABEL_56;
    }
    sub_100056E24((uint64_t)"Maximum handsfree connection is %d, cannot create device", v31, v32, v33, v34, v35, v36, v37, *(unsigned __int8 *)(qword_100A000A8 + 60));
    uint64_t v38 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      goto LABEL_56;
    }
LABEL_36:
    sub_100744F6C();
LABEL_56:
    *(unsigned char *)(qword_100A000A8 + 49) = 1;
    int v60 = 106;
LABEL_57:
    sub_100100D34(*((unsigned __int16 *)a1 + 2), v60);
    return;
  }
  __int16 v25 = *((_WORD *)a1 + 2);
  uint64_t v26 = (int *)*((void *)a1 + 1);
  uint64_t v27 = (char *)sub_10010CE48(0x78uLL);
  if (!v27)
  {
    if (!sub_100058654()) {
      goto LABEL_56;
    }
    sub_100056E24((uint64_t)"Could not allocate connection, out of memory\n", v39, v40, v41, v42, v43, v44, v45, v69);
    uint64_t v46 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
      goto LABEL_56;
    }
    goto LABEL_36;
  }
  uint64_t v28 = v27;
  int v29 = *v26;
  *((_WORD *)v27 + 46) = *((_WORD *)v26 + 2);
  *((_DWORD *)v27 + 22) = v29;
  *(_WORD *)uint64_t v27 = v25;
  if (*(_WORD *)(sub_10025B218(0xFu) + 8)) {
    unsigned int v30 = *(unsigned __int16 *)(sub_10025B218(0xFu) + 8);
  }
  else {
    unsigned int v30 = 256;
  }
  uint64_t v47 = sub_100022FE8(v30);
  *((void *)v28 + 7) = v47;
  if (!v47)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not allocate receive buffer\n", v61, v62, v63, v64, v65, v66, v67, v69);
      uint64_t v68 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100023010(v28);
    goto LABEL_56;
  }
  *((_WORD *)v28 + 24) = 9;
  *((_DWORD *)v28 + 16) = -1;
  *(_DWORD *)(v28 + 67) = -1;
  sub_100131ED8((uint64_t)(v28 + 24), (uint64_t)sub_100101060, (uint64_t)v47, v30);
  uint64_t v48 = (uint64_t *)qword_100A000A8;
  ++*(unsigned char *)(qword_100A000A8 + 16);
  sub_10025C0F8((void *)v28 + 13, v48);
  *(unsigned char *)(qword_100A000A8 + 49) = 1;
  uint64_t v49 = sub_100100A10(*((unsigned __int16 *)a1 + 2));
  if (v49) {
    *((unsigned char *)v49 + 95) = 1;
  }
  unsigned int v50 = *((unsigned __int16 *)a1 + 2);
  uint64_t v51 = sub_100100A10(v50);
  if (!v51) {
    sub_10025B8C0();
  }
  if (!sub_10024BFDC((uint64_t)sub_100102350, (uint64_t)sub_100102524, (uint64_t)(v51 + 11)))
  {
    *(_WORD *)(qword_100A000A8 + 18) = v50;
    *((unsigned char *)v51 + 94) = 1;
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SDP connect", v52, v53, v54, v55, v56, v57, v58, v69);
    uint64_t v59 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
      sub_100748324();
    }
  }
  int v60 = sub_1001025F8(v50);
  if (v60) {
    goto LABEL_57;
  }
}

void *sub_100100A10(unsigned int a1)
{
  if (qword_100A000A8)
  {
    for (char i = *(void **)qword_100A000A8; i && i != (void *)qword_100A000A8; char i = (void *)*i)
    {
      if (*((unsigned __int16 *)i - 52) == a1) {
        return i - 13;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find addr for device handle %d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 0;
}

uint64_t sub_100100ABC(unsigned int a1, uint64_t a2, char *a3, size_t a4, int a5, char a6)
{
  unsigned int v12 = sub_100100A10(a1);
  if (v12)
  {
    uint64_t v13 = v12;
    if (*((unsigned char *)v12 + 78))
    {
      uint64_t v14 = 1805;
    }
    else
    {
      if (a5) {
        uint64_t v15 = sub_100103378;
      }
      else {
        uint64_t v15 = sub_100103404;
      }
      uint64_t v14 = sub_100108E6C(a1, (uint64_t)v15, a3, a4);
      if (!v14)
      {
        *((unsigned char *)v13 + 78) = a6;
        v13[1] = a2;
        return v14;
      }
    }
  }
  else
  {
    sub_10025B8C0();
    uint64_t v14 = 1802;
  }
  if (a5) {
    sub_100023010(a3);
  }
  return v14;
}

uint64_t sub_100100B88(unsigned int a1, uint64_t a2)
{
  if (!sub_100108508()) {
    return 408;
  }
  uint64_t v4 = sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  if (*((unsigned char *)v4 + 95) != 3) {
    return 1802;
  }
  if ((*(_WORD *)(qword_100A000A8 + 40) & 1) == 0) {
    return 1808;
  }

  return sub_100100ABC(a1, a2, "AT+NREC=0\r", 0xAuLL, 0, 20);
}

uint64_t sub_100100C3C(unsigned int a1)
{
  unsigned int v1 = sub_100100A10(a1);
  if (v1)
  {
    if (dword_100A197EC) {
      return *((unsigned __int16 *)v1 + 24);
    }
  }
  else
  {
    sub_10025B8C0();
  }
  return 0;
}

uint64_t sub_100100C78(unsigned int a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(qword_100A000A8 + 44);
  if ((~v2 & 0x197) != 0)
  {
    if ((~v2 & 0x183) != 0)
    {
      if ((~v2 & 0x103) != 0)
      {
        if ((~v2 & 3) != 0)
        {
          if ((~v2 & 0x101) != 0)
          {
            if ((v2 & 1) == 0) {
              return 1813;
            }
            unsigned int v3 = "AT+BAC=1\r";
            size_t v4 = 9;
          }
          else
          {
            unsigned int v3 = "AT+BAC=1,256\r";
            size_t v4 = 13;
          }
        }
        else
        {
          unsigned int v3 = "AT+BAC=1,2\r";
          size_t v4 = 11;
        }
      }
      else
      {
        unsigned int v3 = "AT+BAC=1,2,256\r";
        size_t v4 = 15;
      }
    }
    else
    {
      unsigned int v3 = "AT+BAC=1,2,128,256\r";
      size_t v4 = 19;
    }
  }
  else
  {
    unsigned int v3 = "AT+BAC=1,2,127,128,255,256\r";
    size_t v4 = 27;
  }
  return sub_100100ABC(a1, a2, v3, v4, 0, 27);
}

void sub_100100D34(uint64_t a1, int a2)
{
  size_t v4 = sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(qword_100A000A8 + 49)) {
    *((_DWORD *)v4 + 21) = a2;
  }
  if ((*((unsigned __int8 *)v4 + 95) | 4) != 4)
  {
    sub_1001022FC(a1);
    uint64_t v5 = sub_100100A10(a1);
    if (v5) {
      *((unsigned char *)v5 + 95) = 4;
    }
    sub_100100E20(a1);
  }
}

void sub_100100DD4(uint64_t a1, int a2)
{
  size_t v4 = sub_100100A10(a1);
  if (v4)
  {
    if (*((unsigned char *)v4 + 78)) {
      sub_100102278(a1, 1802);
    }
    *(_DWORD *)(qword_100A000A8 + 52) = a2;
  }
}

void sub_100100E20(uint64_t a1)
{
  int v2 = sub_100100A10(a1);
  if (!v2) {
    sub_10025B8C0();
  }
  uint64_t v31 = 0;
  memset(v30, 0, sizeof(v30));
  if (*((unsigned char *)v2 + 95) == 4)
  {
    if (*((unsigned char *)v2 + 94) == 2)
    {
      if (!sub_10024C674())
      {
        *((unsigned char *)v2 + 94) = 3;
        goto LABEL_15;
      }
      if (!sub_100058654()) {
        goto LABEL_13;
      }
      sub_100056E24((uint64_t)"SDP disconnect - forcing disconnect!", v3, v4, v5, v6, v7, v8, v9, (uint64_t)v29[0]);
      uint64_t v10 = sub_100050B4C(0xFu);
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
LABEL_12:
      sub_100748324();
LABEL_13:
      sub_100103280(a1);
      goto LABEL_15;
    }
    if (sub_100108D90(a1))
    {
      if (!sub_100058654()) {
        goto LABEL_13;
      }
      sub_100056E24((uint64_t)"Handsfree disconnect - forcing disconnect!", v11, v12, v13, v14, v15, v16, v17, (uint64_t)v29[0]);
      uint64_t v18 = sub_100050B4C(0xFu);
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
LABEL_15:
  if (*((unsigned char *)v2 + 94) || *((unsigned char *)v2 + 95))
  {
    if (!*(_DWORD *)(qword_100A000A8 + 56))
    {
      v29[1] = v2;
      v29[0] = (const void *)2;
      if (sub_1000268E4((uint64_t)sub_10010331C, v29, 100, (int *)(qword_100A000A8 + 56)))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Register disconnect timeout handler", v19, v20, v21, v22, v23, v24, v25, (uint64_t)v29[0]);
          uint64_t v26 = sub_100050B4C(0xFu);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_100748324();
          }
        }
      }
    }
  }
  else
  {
    uint64_t v27 = *(unsigned int *)(qword_100A000A8 + 56);
    if (v27)
    {
      sub_100026DB4(v27);
      *(_DWORD *)(qword_100A000A8 + 56) = 0;
    }
    uint64_t v28 = sub_100100A10(a1);
    if (v28) {
      *((unsigned char *)v28 + 95) = 0;
    }
    if (*(unsigned char *)(qword_100A000A8 + 49))
    {
      sub_1001030A8(a1, *((_DWORD *)v2 + 21));
    }
    else
    {
      LODWORD(v30[0]) = 2;
      DWORD2(v30[0]) = *(_DWORD *)(qword_100A000A8 + 52);
      WORD2(v30[0]) = a1;
      (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v30);
      sub_10025C120(v2 + 13);
      sub_100023010(v2);
      --*(unsigned char *)(qword_100A000A8 + 16);
    }
  }
}

void sub_100101060(uint64_t a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (!qword_100A000A8) {
    goto LABEL_16;
  }
  int v2 = *(void **)qword_100A000A8;
  if (!*(void *)qword_100A000A8 || v2 == (void *)qword_100A000A8) {
    goto LABEL_16;
  }
  while (*(v2 - 9) != *(void *)(*(void *)(a1 + 32) + 8))
  {
    int v2 = (void *)*v2;
    if (v2) {
      BOOL v4 = v2 == (void *)qword_100A000A8;
    }
    else {
      BOOL v4 = 1;
    }
    if (v4) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((unsigned __int16 *)v2 - 52);
  if (!*((_WORD *)v2 - 52))
  {
LABEL_16:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not find connenction handle that matches recv buffer\n", v6, v7, v8, v9, v10, v11, v12, v21);
      uint64_t v13 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v5 = 0;
  }
  uint64_t v14 = 0;
  uint64_t v15 = *(const char **)(a1 + 8);
  while (strcmp((&off_10099A9E0)[v14], v15))
  {
    v14 += 2;
    if (v14 == 40) {
      goto LABEL_25;
    }
  }
  if ((((uint64_t (*)(uint64_t, uint64_t))(&off_10099A9E0)[v14 + 1])(v5, a1) & 1) == 0)
  {
LABEL_25:
    uint64_t v16 = sub_100100A10(v5);
    if (!v16) {
      sub_10025B8C0();
    }
    uint64_t v17 = 0;
    uint64_t v18 = *(const char **)(a1 + 8);
    while (strcmp(off_10099AB20[v17], v18))
    {
      if (++v17 == 8) {
        goto LABEL_30;
      }
    }
    if ((v17 & 0x7FFFFFFE) != 6)
    {
LABEL_35:
      sub_100102278(v5, v17 + 2701);
      return;
    }
    uint64_t v20 = sub_100131318(a1, (unsigned __int8 **)(a1 + 24), 0);
    if (v20)
    {
      *((_DWORD *)v16 + 20) = sub_100262F1C(v20);
      goto LABEL_35;
    }
LABEL_30:
    uint64_t v19 = *(void (**)(uint64_t))(qword_100A000A8 + 32);
    if (v19) {
      v19(a1);
    }
  }
}

uint64_t sub_100101204(uint64_t a1)
{
  return 1;
}

BOOL sub_100101224(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = sub_100100A10(a1);
  if (!v3) {
    sub_10025B8C0();
  }
  BOOL v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  uint64_t v5 = v4;
  if (v4) {
    *((_WORD *)v3 + 24) = sub_100262F1C(v4);
  }
  return v5 != 0;
}

BOOL sub_100101280()
{
  return *(unsigned char *)(qword_100A000A8 + 48) == 0;
}

uint64_t sub_100101298(__int16 a1, uint64_t a2)
{
  uint64_t v12 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v9 = 0u;
  LODWORD(v9) = 14;
  WORD2(v9) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  BOOL v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (v4)
  {
    uint64_t v5 = 0;
    char v6 = 0;
    int v7 = 0;
    do
    {
      if (v7 == 1)
      {
        char v6 = sub_100262F1C(v4);
      }
      else if (!v7)
      {
        uint64_t v5 = v4;
      }
      ++v7;
      BOOL v4 = sub_100131318(a2, v3, 0);
    }
    while (v4);
    LOBYTE(v10) = v6;
    *((void *)&v9 + 1) = v5;
  }
  (*(void (**)(long long *))(qword_100A000A8 + 24))(&v9);
  return 1;
}

BOOL sub_100101364(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = sub_100100A10(a1);
  if (!v3) {
    sub_10025B8C0();
  }
  int v4 = v3[78];
  if (v4 == 10)
  {
    long long v9 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v9)
    {
      long long v10 = v9;
      int v11 = 1;
      do
      {
        for (uint64_t i = 0; i != 7; ++i)
        {
          if (v11 == v3[i + 64]) {
            v3[i + 71] = sub_100262F1C(v10);
          }
        }
        ++v11;
        long long v10 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
      }
      while (v10);
    }
    return *(unsigned char *)(qword_100A000A8 + 48) == 0;
  }
  if (v4 == 11)
  {
    uint64_t v5 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v5)
    {
      int v6 = 0;
      do
      {
        uint64_t v14 = v5 + 1;
        int v7 = sub_100131318(a2, &v14, 0);
        if (v7)
        {
          uint64_t v8 = v7;
          if (sub_100262F5C(v7, "\"call\""))
          {
            if (sub_100262F5C(v8, "\"service\""))
            {
              if (sub_100262F5C(v8, "\"callsetup\"") && sub_100262F5C(v8, "\"call_setup\""))
              {
                if (sub_100262F5C(v8, "\"battchg\""))
                {
                  if (sub_100262F5C(v8, "\"signal\""))
                  {
                    if (sub_100262F5C(v8, "\"callheld\""))
                    {
                      ++v6;
                      if (!sub_100262F5C(v8, "\"roam\"")) {
                        v3[70] = v6;
                      }
                    }
                    else
                    {
                      v3[69] = ++v6;
                    }
                  }
                  else
                  {
                    v3[68] = ++v6;
                  }
                }
                else
                {
                  v3[67] = ++v6;
                }
              }
              else
              {
                v3[66] = ++v6;
              }
            }
            else
            {
              v3[65] = ++v6;
            }
          }
          else
          {
            v3[64] = ++v6;
          }
        }
        uint64_t v5 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
      }
      while (v5);
    }
    return *(unsigned char *)(qword_100A000A8 + 48) == 0;
  }
  return 0;
}

uint64_t sub_1001015A8(__int16 a1, uint64_t a2)
{
  uint64_t v12 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v9 = 0u;
  LODWORD(v9) = 15;
  WORD2(v9) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  int v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (v4)
  {
    uint64_t v5 = 0;
    char v6 = 0;
    int v7 = 0;
    do
    {
      if (v7 == 1)
      {
        char v6 = sub_100262F1C(v4);
      }
      else if (!v7)
      {
        uint64_t v5 = v4;
      }
      ++v7;
      int v4 = sub_100131318(a2, v3, 0);
    }
    while (v4);
    LOBYTE(v10) = v6;
    *((void *)&v9 + 1) = v5;
  }
  (*(void (**)(long long *))(qword_100A000A8 + 24))(&v9);
  return 1;
}

unsigned __int8 *sub_100101674(unsigned int a1, uint64_t a2)
{
  __int16 v3 = a1;
  int v4 = (unsigned __int8 *)sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  uint64_t result = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (result)
  {
    int v6 = sub_100262F1C(result);
    uint64_t result = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (result)
    {
      uint64_t v12 = 0;
      memset(v11, 0, sizeof(v11));
      unsigned int v7 = sub_100262F1C(result);
      for (uint64_t i = 0; i != 7; ++i)
      {
        if (v6 == v4[i + 64]) {
          v4[i + 71] = v7;
        }
      }
      WORD2(v11[0]) = v3;
      if (v6 == v4[66])
      {
        int v9 = 19;
LABEL_11:
        LODWORD(v11[0]) = v9;
LABEL_12:
        BYTE8(v11[0]) = v7;
        (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v11);
        return (unsigned __int8 *)1;
      }
      if (v6 == v4[64])
      {
        int v10 = 11;
      }
      else if (v6 == v4[65])
      {
        int v10 = 13;
      }
      else
      {
        if (v6 == v4[67])
        {
          int v9 = 23;
          goto LABEL_11;
        }
        if (v6 == v4[68])
        {
          int v9 = 24;
          goto LABEL_11;
        }
        if (v6 == v4[69])
        {
          int v9 = 12;
          goto LABEL_11;
        }
        if (v6 != v4[70]) {
          return 0;
        }
        int v10 = 20;
      }
      LODWORD(v11[0]) = v10;
      if (v7 < 2) {
        goto LABEL_12;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001017EC(__int16 a1, uint64_t a2)
{
  uint64_t result = (uint64_t)sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (result)
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    unsigned int v4 = sub_100262F1C((unsigned char *)result);
    if (v4 < 2)
    {
      LODWORD(v13[0]) = 16;
      BYTE8(v13[0]) = v4 != 0;
      WORD2(v13[0]) = a1;
      (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v13);
      return 1;
    }
    else
    {
      uint64_t result = sub_100058654();
      if (result)
      {
        sub_100056E24((uint64_t)"Invalid setting!", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)&v13[0]);
        uint64_t v12 = sub_100050B4C(0xFu);
        uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
        if (result)
        {
          sub_100744F6C();
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1001018BC(unsigned int a1, uint64_t a2)
{
  __int16 v3 = a1;
  unsigned int v4 = sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  uint64_t v5 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    char v7 = sub_100262F1C(v5);
    *((unsigned char *)v4 + 96) = v7;
    LODWORD(v9[0]) = 7;
    BYTE8(v9[0]) = v7;
    WORD2(v9[0]) = v3;
    (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v9);
  }
  return v6 != 0;
}

BOOL sub_100101960(unsigned int a1, uint64_t a2)
{
  __int16 v3 = a1;
  unsigned int v4 = sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  uint64_t v5 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    char v7 = sub_100262F1C(v5);
    *((unsigned char *)v4 + 97) = v7;
    LODWORD(v9[0]) = 8;
    BYTE8(v9[0]) = v7;
    WORD2(v9[0]) = v3;
    (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v9);
  }
  return v6 != 0;
}

uint64_t sub_100101A04(__int16 a1)
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  LODWORD(v2[0]) = 9;
  WORD2(v2[0]) = a1;
  (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v2);
  return 1;
}

BOOL sub_100101A54(__int16 a1, uint64_t a2)
{
  uint64_t v7 = 0;
  long long v5 = 0u;
  long long v6 = 0u;
  v4[0] = 17;
  WORD2(v4[0]) = a1;
  int v2 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  v4[1] = v2;
  if (v2) {
    (*(void (**)(void *))(qword_100A000A8 + 24))(v4);
  }
  return v2 != 0;
}

BOOL sub_100101AD0(__int16 a1, uint64_t a2)
{
  uint64_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  unsigned int v4 = v3;
  if (v3)
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    LODWORD(v6[0]) = 25;
    BYTE8(v6[0]) = sub_100262F1C(v3);
    WORD2(v6[0]) = a1;
    (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v6);
  }
  return v4 != 0;
}

BOOL sub_100101B58(__int16 a1, uint64_t a2)
{
  uint64_t v14 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v11 = 0u;
  LODWORD(v11) = 22;
  WORD2(v11) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  unsigned int v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  long long v5 = v4;
  if (v4)
  {
    int v6 = 0;
    uint64_t v7 = 0;
    char v8 = 0;
    int v9 = 0;
    do
    {
      switch(v9)
      {
        case 3:
          int v6 = sub_100262F1C(v4);
          break;
        case 2:
          char v8 = sub_100262F1C(v4);
          break;
        case 1:
          uint64_t v7 = v4;
          break;
      }
      ++v9;
      unsigned int v4 = sub_100131318(a2, v3, 0);
    }
    while (v4);
    LOBYTE(v12) = v8;
    *((void *)&v11 + 1) = v7;
    DWORD1(v12) = v6;
    (*(void (**)(long long *))(qword_100A000A8 + 24))(&v11);
  }
  return v5 != 0;
}

uint64_t sub_100101C54(__int16 a1, uint64_t a2)
{
  uint64_t result = (uint64_t)sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (result)
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    unsigned int v4 = sub_100262F1C((unsigned char *)result);
    if (v4 < 2)
    {
      LODWORD(v13[0]) = 18;
      BYTE8(v13[0]) = v4 != 0;
      WORD2(v13[0]) = a1;
      (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v13);
      return 1;
    }
    else
    {
      uint64_t result = sub_100058654();
      if (result)
      {
        sub_100056E24((uint64_t)"Invalid setting!", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)&v13[0]);
        long long v12 = sub_100050B4C(0xFu);
        uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
        if (result)
        {
          sub_100744F6C();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100101D24(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v6 = 0u;
  LODWORD(v6) = 10;
  WORD2(v6) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  uint64_t result = (uint64_t)sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (result)
  {
    unsigned int v5 = -1;
    while (2)
    {
      switch(v5)
      {
        case 0xFFFFFFFF:
          DWORD2(v6) = sub_100262F1C((unsigned char *)result);
          goto LABEL_12;
        case 0u:
          BYTE12(v6) = *(unsigned char *)result == 49;
          goto LABEL_12;
        case 1u:
          LODWORD(v7) = sub_100262F1C((unsigned char *)result);
          goto LABEL_12;
        case 2u:
          DWORD1(v7) = sub_100262F1C((unsigned char *)result);
          goto LABEL_12;
        case 3u:
          BYTE8(v7) = *(unsigned char *)result == 49;
          goto LABEL_12;
        case 4u:
          *(void *)&long long v8 = result;
          goto LABEL_12;
        case 5u:
          BYTE8(v8) = sub_100262F1C((unsigned char *)result);
          goto LABEL_12;
        case 6u:
          uint64_t v9 = result;
LABEL_12:
          uint64_t result = (uint64_t)sub_100131318(a2, v3, 0);
          ++v5;
          if (result) {
            continue;
          }
          if (v5 >= 4)
          {
            (*(void (**)(long long *))(qword_100A000A8 + 24))(&v6);
            uint64_t result = 1;
          }
          else
          {
LABEL_14:
            uint64_t result = 0;
          }
          break;
        default:
          goto LABEL_14;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100101E7C(__int16 a1, uint64_t a2)
{
  uint64_t v12 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v9 = 0u;
  LODWORD(v9) = 21;
  WORD2(v9) = a1;
  uint64_t v3 = (unsigned __int8 **)(a2 + 24);
  unsigned int v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (v4)
  {
    int v5 = 0;
    long long v6 = 0;
    int v7 = 0;
    while (1)
    {
      if (v7 == 2)
      {
        long long v6 = v4;
      }
      else if (v7 != 1)
      {
        if (v7) {
          return 0;
        }
        int v5 = sub_100262F1C(v4);
      }
      ++v7;
      unsigned int v4 = sub_100131318(a2, v3, 0);
      if (!v4)
      {
        *(void *)&long long v10 = v6;
        DWORD2(v9) = v5;
        break;
      }
    }
  }
  (*(void (**)(long long *))(qword_100A000A8 + 24))(&v9);
  return 1;
}

uint64_t sub_100101F58(unsigned int a1, uint64_t a2)
{
  if ((sub_100100C3C(a1) & 0x200) == 0 || (*(_WORD *)(qword_100A000A8 + 40) & 0x80) == 0) {
    return 0;
  }
  int v5 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  int v6 = sub_100262F1C(v5);
  int v7 = v6;
  if (v6 > 127)
  {
    if (v6 > 254)
    {
      if (v6 == 255)
      {
        if ((*(unsigned char *)(qword_100A000A8 + 44) & 0x10) == 0) {
          goto LABEL_31;
        }
        long long v8 = "AT+BCS=255\r";
      }
      else
      {
        if (v6 != 256) {
          goto LABEL_32;
        }
        if ((*(unsigned char *)(qword_100A000A8 + 45) & 1) == 0) {
          goto LABEL_31;
        }
        long long v8 = "AT+BCS=256\r";
      }
    }
    else if (v6 == 128)
    {
      if ((*(unsigned char *)(qword_100A000A8 + 44) & 0x80) == 0) {
        goto LABEL_31;
      }
      long long v8 = "AT+BCS=128\r";
    }
    else
    {
      if (v6 != 129) {
        goto LABEL_32;
      }
      if ((*(unsigned char *)(qword_100A000A8 + 45) & 2) == 0) {
        goto LABEL_31;
      }
      long long v8 = "AT+BSC=129\r";
    }
LABEL_35:
    unsigned int v9 = a1;
    size_t v10 = 11;
    goto LABEL_36;
  }
  if (v6 > 63)
  {
    if (v6 == 64)
    {
      if ((*(unsigned char *)(qword_100A000A8 + 45) & 4) == 0) {
        goto LABEL_31;
      }
      long long v8 = "AT+BCS=130\r";
    }
    else
    {
      if (v6 != 127) {
        goto LABEL_32;
      }
      if ((*(unsigned char *)(qword_100A000A8 + 44) & 4) == 0) {
        goto LABEL_31;
      }
      long long v8 = "AT+BCS=127\r";
    }
    goto LABEL_35;
  }
  if (v6 != 1)
  {
    if (v6 == 2)
    {
      if ((*(unsigned char *)(qword_100A000A8 + 44) & 2) != 0)
      {
        long long v8 = "AT+BCS=2\r";
LABEL_25:
        unsigned int v9 = a1;
        size_t v10 = 9;
LABEL_36:
        sub_100100ABC(v9, 0, v8, v10, 0, 29);
        goto LABEL_37;
      }
      goto LABEL_31;
    }
LABEL_32:
    sub_100100C78(a1, 0);
    if (!v7) {
      return 1;
    }
    goto LABEL_37;
  }
  if (*(unsigned char *)(qword_100A000A8 + 44))
  {
    long long v8 = "AT+BCS=1\r";
    goto LABEL_25;
  }
LABEL_31:
  sub_100100C78(a1, 0);
LABEL_37:
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  LODWORD(v11[0]) = 26;
  DWORD2(v11[0]) = v7;
  WORD2(v11[0]) = a1;
  (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v11);
  return 1;
}

unsigned __int8 *sub_100102154(__int16 a1, uint64_t a2)
{
  unsigned int v4 = (unsigned __int8 **)(a2 + 24);
  uint64_t result = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (result)
  {
    uint64_t result = sub_100131318(a2, v4, 0);
    if (result)
    {
      uint64_t v7 = 0;
      memset(v6, 0, sizeof(v6));
      WORD2(v6[0]) = a1;
      LODWORD(v6[0]) = 27;
      BYTE8(v6[0]) = sub_100262F1C(result);
      (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v6);
      return (unsigned __int8 *)1;
    }
  }
  return result;
}

BOOL sub_1001021F0(__int16 a1, uint64_t a2)
{
  uint64_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  unsigned int v4 = v3;
  if (v3)
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    WORD2(v6[0]) = a1;
    LODWORD(v6[0]) = 28;
    BYTE8(v6[0]) = sub_100262F1C(v3);
    (*(void (**)(_OWORD *))(qword_100A000A8 + 24))(v6);
  }
  return v4 != 0;
}

void sub_100102278(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  int v5 = *((unsigned __int8 *)v4 + 78);
  sub_1001022FC(a1);
  *((unsigned char *)v4 + 78) = 0;
  int v6 = (void (*)(uint64_t, uint64_t))v4[1];
  if (v6) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    v6(a1, a2);
  }
}

void sub_1001022FC(unsigned int a1)
{
  unsigned int v1 = sub_100100A10(a1);
  if (v1)
  {
    int v2 = v1;
    uint64_t v3 = *((unsigned int *)v1 + 1);
    if (v3)
    {
      sub_100026DB4(v3);
      *((_DWORD *)v2 + 1) = 0;
    }
  }
  else
  {
    sub_10025B8C0();
  }
}

void sub_100102350(int a1)
{
  int v2 = sub_100100A10(*(unsigned __int16 *)(qword_100A000A8 + 18));
  if (!v2) {
    sub_10025B8C0();
  }
  long long v22 = xmmword_1007B90E0;
  long long v23 = xmmword_1007B90D0;
  v21[1] = &v23;
  v21[0] = 65542;
  v20[1] = (uint64_t)&v22;
  v20[0] = 65542;
  if (a1
    || (*((unsigned char *)v2 + 94) = 2,
        sub_10024CE58((uint64_t)sub_100102704, (unsigned __int8 *)v21, (unsigned __int8 *)v20)))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SDP connect", v3, v4, v5, v6, v7, v8, v9, v20[0]);
      size_t v10 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100748324();
      }
    }
    if (*((unsigned char *)v2 + 94) == 2)
    {
      if (sub_10024C674())
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"SDP disconnect", v11, v12, v13, v14, v15, v16, v17, v20[0]);
          uint64_t v18 = sub_100050B4C(0xFu);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100748324();
          }
        }
      }
      else
      {
        *((unsigned char *)v2 + 94) = 3;
      }
    }
    else
    {
      *((unsigned char *)v2 + 94) = 0;
    }
    if (*((unsigned char *)v2 + 95) == 1)
    {
      int v19 = sub_1001025F8(*(unsigned __int16 *)v2);
      if (v19) {
        sub_100100D34(*(unsigned __int16 *)v2, v19);
      }
    }
  }
  if (*((unsigned char *)v2 + 95) == 4) {
    sub_100100E20(*(unsigned __int16 *)v2);
  }
}

void sub_100102524()
{
  CFDictionaryRef v0 = sub_100100A10(*(unsigned __int16 *)(qword_100A000A8 + 18));
  if (!v0) {
    sub_10025B8C0();
  }
  *(_WORD *)(qword_100A000A8 + 18) = -1;
  *((unsigned char *)v0 + 94) = 0;
  int v1 = *((unsigned __int8 *)v0 + 95);
  if (v1 == 4)
  {
    uint64_t v11 = *(unsigned __int16 *)v0;
    sub_100100E20(v11);
  }
  else if (v1 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SDP disconnected while querying supported features\n", v2, v3, v4, v5, v6, v7, v8, v12);
      uint64_t v9 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    int v10 = sub_1001025F8(*(unsigned __int16 *)v0);
    if (v10) {
      sub_100100D34(*(unsigned __int16 *)v0, v10);
    }
  }
}

uint64_t sub_1001025F8(unsigned int a1)
{
  uint64_t v2 = sub_100100A10(a1);
  if (v2) {
    *((unsigned char *)v2 + 95) = 2;
  }
  v23[0] = 0;
  v23[1] = 0;
  uint64_t v9 = sub_10026314C((uint64_t)v23, 0x14uLL);
  if (!v9)
  {
    uint64_t v10 = sub_1002639B0((uint64_t)v23, (uint64_t)"AT+BRSF=%d\r", v3, v4, v5, v6, v7, v8, *(unsigned __int16 *)(qword_100A000A8 + 40));
    if (v10)
    {
      uint64_t v9 = v10;
      sub_10026319C((uint64_t)v23);
    }
    else
    {
      uint64_t v11 = (char *)sub_1002639DC((uint64_t)v23);
      unsigned __int16 v12 = strlen(v11);
      uint64_t v9 = sub_100100ABC(a1, (uint64_t)sub_1001028A4, v11, v12, 1, 2);
      if (!v9) {
        return v9;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SLC handshaking (retrieve features)", v13, v14, v15, v16, v17, v18, v19, v22);
    uint64_t v20 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100748324();
    }
  }
  return v9;
}

void sub_100102704(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_100100A10(*(unsigned __int16 *)(qword_100A000A8 + 18));
  if (!v5) {
    sub_10025B8C0();
  }
  if (sub_10024C674())
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SDP disconnect", v6, v7, v8, v9, v10, v11, v12, v33);
      uint64_t v13 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100748324();
      }
    }
  }
  else
  {
    *((unsigned char *)v5 + 94) = 3;
  }
  if (a3) {
    goto LABEL_9;
  }
  if (!*(_WORD *)(a1 + 2))
  {
    if (!sub_100058654()) {
      goto LABEL_9;
    }
    sub_100056E24((uint64_t)"No attributes in SDP response", v25, v26, v27, v28, v29, v30, v31, v33);
    uint64_t v32 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
LABEL_23:
    sub_100744F6C();
    goto LABEL_9;
  }
  if (*(unsigned char *)a1 != 6) {
    sub_10025B8C0();
  }
  uint64_t v16 = *(void *)(*(void *)(a1 + 8) + 8);
  if (v16 && *(_DWORD *)(v16 + 8) == 785)
  {
    *((_WORD *)v5 + 24) = *(_DWORD *)(v16 + 24);
    goto LABEL_9;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Unexpected or no attribute in SDP response", v17, v18, v19, v20, v21, v22, v23, v33);
    uint64_t v24 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      goto LABEL_23;
    }
  }
LABEL_9:
  int v14 = *((unsigned __int8 *)v5 + 95);
  if (v14 == 4)
  {
    sub_100100E20(*(unsigned __int16 *)v5);
  }
  else if (v14 == 1)
  {
    int v15 = sub_1001025F8(*(unsigned __int16 *)v5);
    if (v15) {
      sub_100100D34(*(unsigned __int16 *)v5, v15);
    }
  }
}

void sub_1001028A4(uint64_t a1, int a2)
{
  if (a2 != 2701)
  {
    int v3 = a2;
    if (a2)
    {
      if (!sub_100058654()) {
        goto LABEL_16;
      }
      sub_100056E24((uint64_t)"Retrieve features", v13, v14, v15, v16, v17, v18, v19, v30);
      uint64_t v20 = sub_100050B4C(0xFu);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  if ((sub_100100C3C(a1) & 0x200) == 0 || (*(_WORD *)(qword_100A000A8 + 40) & 0x80) == 0)
  {
    int v4 = sub_100100ABC(a1, (uint64_t)sub_100102B30, "AT+CIND=?\r", 0xAuLL, 0, 11);
    if (!v4) {
      return;
    }
    int v3 = v4;
    if (!sub_100058654()) {
      goto LABEL_16;
    }
    sub_100056E24((uint64_t)"SLC establish (indicator test)", v5, v6, v7, v8, v9, v10, v11, v30);
    uint64_t v12 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  int v21 = sub_100100C78(a1, (uint64_t)sub_100102A24);
  if (!v21) {
    return;
  }
  int v3 = v21;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SLC establish (call hold test)", v22, v23, v24, v25, v26, v27, v28, v30);
    uint64_t v29 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
LABEL_15:
    }
      sub_100748324();
  }
LABEL_16:
  sub_100100D34(a1, v3);
}

void sub_100102A24(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    if (!sub_100058654()) {
      goto LABEL_11;
    }
    sub_100056E24((uint64_t)"Available codecs", v4, v5, v6, v7, v8, v9, v10, v22);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v12 = sub_100100A10(a1);
  if (v12) {
    *((unsigned char *)v12 + 95) = 3;
  }
  int v13 = sub_100100ABC(a1, (uint64_t)sub_100102B30, "AT+CIND=?\r", 0xAuLL, 0, 11);
  if (v13)
  {
    int v3 = v13;
    if (!sub_100058654()) {
      goto LABEL_11;
    }
    sub_100056E24((uint64_t)"SLC establish (indicator test)", v14, v15, v16, v17, v18, v19, v20, v22);
    int v21 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
LABEL_10:
    sub_100748324();
LABEL_11:
    sub_100100D34(a1, v3);
  }
}

void sub_100102B30(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    if (!sub_100058654()) {
      goto LABEL_9;
    }
    sub_100056E24((uint64_t)"Indicator test", v4, v5, v6, v7, v8, v9, v10, v21);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v12 = sub_100100ABC(a1, (uint64_t)sub_100102C28, "AT+CIND?\r", 9uLL, 0, 10);
  if (!v12) {
    return;
  }
  int v3 = v12;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SLC establish (indicator read)", v13, v14, v15, v16, v17, v18, v19, v21);
    uint64_t v20 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_100748324();
  }
LABEL_9:
  sub_100100D34(a1, v3);
}

void sub_100102C28(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    if (!sub_100058654()) {
      goto LABEL_9;
    }
    sub_100056E24((uint64_t)"Read indicators", v4, v5, v6, v7, v8, v9, v10, v21);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v12 = sub_100100ABC(a1, (uint64_t)sub_100102D20, "AT+CMER=3,0,0,1\r", 0x10uLL, 0, 13);
  if (!v12) {
    return;
  }
  int v3 = v12;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SLC establish (enable event reporting)", v13, v14, v15, v16, v17, v18, v19, v21);
    uint64_t v20 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_100748324();
  }
LABEL_9:
  sub_100100D34(a1, v3);
}

void sub_100102D20(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    if (!sub_100058654()) {
      goto LABEL_5;
    }
    sub_100056E24((uint64_t)"Enable event reporting", v4, v5, v6, v7, v8, v9, v10, v31);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  if ((sub_100100C3C(a1) & 1) != 0 && (*(_WORD *)(qword_100A000A8 + 40) & 2) != 0)
  {
    int v22 = sub_100100ABC(a1, (uint64_t)sub_100102EE0, "AT+CHLD=?\r", 0xAuLL, 0, 7);
    if (!v22) {
      return;
    }
    int v3 = v22;
    if (!sub_100058654()) {
      goto LABEL_5;
    }
    sub_100056E24((uint64_t)"SLC establish (call hold test)", v23, v24, v25, v26, v27, v28, v29, v31);
    uint64_t v30 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
LABEL_4:
    sub_100748324();
LABEL_5:
    sub_100100D34(a1, v3);
    return;
  }
  int v12 = sub_100100A10(a1);
  if (v12) {
    *((unsigned char *)v12 + 95) = 3;
  }
  if (*(_WORD *)(qword_100A000A8 + 40))
  {
    int v13 = sub_100100B88(a1, (uint64_t)sub_100103010);
    if (!v13) {
      return;
    }
    int v3 = v13;
    if (!sub_100058654()) {
      goto LABEL_5;
    }
    sub_100056E24((uint64_t)"Disable remote NREC", v14, v15, v16, v17, v18, v19, v20, v31);
    uint64_t v21 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  sub_1001030A8(a1, 0);
}

void sub_100102EE0(uint64_t a1, int a2)
{
  if (a2)
  {
    int v3 = a2;
    if (!sub_100058654()) {
      goto LABEL_5;
    }
    sub_100056E24((uint64_t)"Call hold test", v4, v5, v6, v7, v8, v9, v10, v22);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  int v12 = sub_100100A10(a1);
  if (v12) {
    *((unsigned char *)v12 + 95) = 3;
  }
  if (*(_WORD *)(qword_100A000A8 + 40))
  {
    int v13 = sub_100100B88(a1, (uint64_t)sub_100103010);
    if (v13)
    {
      int v3 = v13;
      if (!sub_100058654()) {
        goto LABEL_5;
      }
      sub_100056E24((uint64_t)"Disable remote NREC", v14, v15, v16, v17, v18, v19, v20, v22);
      uint64_t v21 = sub_100050B4C(0xFu);
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
LABEL_4:
      sub_100748324();
LABEL_5:
      sub_100100D34(a1, v3);
    }
  }
  else
  {
    sub_1001030A8(a1, 0);
  }
}

void sub_100103010(uint64_t a1, int a2)
{
  if (!a2) {
    goto LABEL_6;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Disable remote NREC", v4, v5, v6, v7, v8, v9, v10, v12);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100748324();
    }
  }
  if (a2 != 2701) {
    sub_100100D34(a1, a2);
  }
  else {
LABEL_6:
  }
    sub_1001030A8(a1, 0);
}

uint64_t sub_1001030A8(unsigned int a1, int a2)
{
  __int16 v3 = a1;
  uint64_t v4 = sub_100100A10(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  uint64_t v13 = 0;
  __int16 v9 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v5 = qword_100A000A8;
  *(unsigned char *)(qword_100A000A8 + 49) = 0;
  *((_DWORD *)v4 + 21) = a2;
  LODWORD(v11) = a2;
  uint64_t v10 = v4 + 11;
  int v7 = 1;
  __int16 v8 = v3;
  uint64_t result = (*(uint64_t (**)(int *))(v5 + 24))(&v7);
  if (!a2)
  {
    if (*((unsigned __int8 *)v4 + 65) != 255)
    {
      int v7 = 13;
      LOBYTE(v10) = *((unsigned char *)v4 + 72) != 0;
      uint64_t result = (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
    if (*((unsigned __int8 *)v4 + 64) != 255)
    {
      int v7 = 11;
      LOBYTE(v10) = *((unsigned char *)v4 + 71) != 0;
      uint64_t result = (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
    if (*((unsigned __int8 *)v4 + 66) != 255)
    {
      int v7 = 19;
      LOBYTE(v10) = *((unsigned char *)v4 + 73);
      uint64_t result = (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
    if (*((unsigned __int8 *)v4 + 69) != 255)
    {
      int v7 = 12;
      LOBYTE(v10) = *((unsigned char *)v4 + 76);
      uint64_t result = (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
    if (*((unsigned __int8 *)v4 + 67) != 255)
    {
      int v7 = 23;
      LOBYTE(v10) = *((unsigned char *)v4 + 74);
      uint64_t result = (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
    if (*((unsigned __int8 *)v4 + 68) != 255)
    {
      int v7 = 24;
      LOBYTE(v10) = *((unsigned char *)v4 + 75);
      uint64_t result = (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
    if (*((unsigned __int8 *)v4 + 70) != 255)
    {
      int v7 = 20;
      LOBYTE(v10) = *((unsigned char *)v4 + 77) != 0;
      return (*(uint64_t (**)(int *))(qword_100A000A8 + 24))(&v7);
    }
  }
  return result;
}

void sub_100103280(uint64_t a1)
{
  uint64_t v2 = sub_100100A10(a1);
  if (!v2) {
    sub_10025B8C0();
  }
  if (sub_10017C380((uint64_t)(v2 + 11)))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ForceDisconnect - assuming already disconnected", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100748324();
      }
    }
    *((_WORD *)v2 + 47) = 0;
    sub_100100DD4(a1, 926);
  }
}

uint64_t sub_10010331C(uint64_t result)
{
  int v1 = *(_WORD **)(result + 8);
  uint64_t v2 = (unsigned __int16)*v1;
  if (*v1)
  {
    *(_DWORD *)(qword_100A000A8 + 56) = 0;
    sub_100103280(v2);
    return sub_100100E20(v2);
  }
  return result;
}

void sub_100103378(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100100A10(a1);
  if (!v7) {
    sub_10025B8C0();
  }
  sub_100023010(a2);
  if (a4)
  {
    sub_100102278(a1, a4);
  }
  else
  {
    unsigned int v8 = *((unsigned __int8 *)v7 + 78);
    sub_100103488(a1, v8);
  }
}

void sub_100103404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100100A10(a1);
  if (v6)
  {
    if (a4)
    {
LABEL_3:
      sub_100102278(a1, a4);
      return;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a4) {
      goto LABEL_3;
    }
  }
  unsigned int v7 = *((unsigned __int8 *)v6 + 78);

  sub_100103488(a1, v7);
}

void sub_100103488(unsigned int a1, unsigned int a2)
{
  uint64_t v3 = (int *)sub_100100A10(a1);
  uint64_t v6 = v3;
  if (!v3) {
    sub_10025B8C0();
  }
  v5[1] = &v6;
  v5[0] = (const void *)8;
  if (!v3[1])
  {
    if (a2 > 0x21) {
      goto LABEL_10;
    }
    if (((1 << a2) & 0x20003001ALL) != 0)
    {
      uint64_t v4 = (unsigned __int16 *)(sub_10025B218(0xFu) + 4);
LABEL_7:
      sub_1000268E4((uint64_t)sub_100103548, v5, *v4, v6 + 1);
      return;
    }
    if (a2)
    {
LABEL_10:
      uint64_t v4 = (unsigned __int16 *)(sub_10025B218(0xFu) + 2);
      goto LABEL_7;
    }
  }
}

uint64_t sub_100103548(uint64_t a1)
{
  int v1 = **(unsigned __int16 ***)(a1 + 8);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Didn't get response from handsfree audio gateway within timeout period", v2, v3, v4, v5, v6, v7, v8, v11);
    uint64_t v9 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  *((_DWORD *)v1 + 1) = 0;
  sub_100102278(*v1, 112);
  uint64_t result = sub_10025B218(0xFu);
  if (*(unsigned char *)(result + 6)) {
    return sub_100108D90(*v1);
  }
  return result;
}

uint64_t sub_1001035E0(pthread_cond_t *a1)
{
  pthread_cond_wait(a1, &stru_100A000B0);
  int v1 = pthread_self();

  return pthread_getname_np(v1, &byte_100A000F0, 0x40uLL);
}

uint64_t sub_100103620()
{
  return byte_100A00170;
}

uint64_t sub_10010362C(int a1, void (*a2)(void), void (*a3)(uint64_t, const char *))
{
  dword_100A00174 = a1;
  byte_100A00170 = 1;
  dword_100A00178 = -1;
  uint64_t v5 = sub_100103930();
  if (v5)
  {
    uint64_t v10 = v5;
    uint64_t v11 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v18.__sig) = 136446210;
      *(uint64_t *)((char *)&v18.__sig + 4) = (uint64_t)"OI_StackWrapperToken_Init failed\n";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v18, 0xCu);
    }
    sub_10010B394(v10);
    goto LABEL_16;
  }
  if (pthread_mutex_init(&stru_100A00130, 0))
  {
LABEL_16:
    long long v12 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v18.__sig) = 136446210;
      *(uint64_t *)((char *)&v18.__sig + 4) = (uint64_t)"OI_Transport_TokenInit failed\n";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v18, 0xCu);
    }
    sub_10010B394(108);
LABEL_19:
    sub_10074839C();
  }
  sub_100023344();
  pthread_cond_init(&stru_100A00180, 0);
  pthread_mutex_init(&stru_100A001B0, 0);
  memset(&v18, 0, sizeof(v18));
  sched_param v15 = 0;
  pthread_attr_init(&v18);
  pthread_attr_getschedparam(&v18, &v15);
  v15.sched_priority = 60;
  if (pthread_attr_setschedparam(&v18, &v15)) {
    perror("Send thread creation: Failed pthread_attr_setschedparam");
  }
  if (pthread_create((pthread_t *)&qword_100A001F0, &v18, (void *(__cdecl *)(void *))sub_10000B38C, 0)) {
    goto LABEL_19;
  }
  sub_100026D20(0);
  uint64_t v6 = sub_100177900(0, (uint64_t (*)(void))sub_100026D20, a2, a3);
  if (v6)
  {
    uint64_t v7 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v17 = "Stack_Init failed\n";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
    }
    sub_1000232E0();
    return v6;
  }
  uint64_t v8 = sub_10016AC80(sub_1001039E0);
  if (!v8)
  {
    sub_1000232E0();
    sub_100103A08(&byte_100A001F8, 0);
    return v6;
  }
  uint64_t v13 = v8;
  uint64_t v14 = sub_100050B4C(0x5Cu);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446210;
    uint64_t v17 = "OI_BT_Device_Config failed\n";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%{public}s", buf, 0xCu);
  }
  sub_10010B394(v13);
  return sub_100103930();
}

uint64_t sub_100103930()
{
  if (pthread_mutex_init(&stru_100A000B0, 0)) {
    return 108;
  }
  global_queue = dispatch_get_global_queue(17, 0);
  uint64_t v2 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, global_queue);
  qword_100A00200 = (uint64_t)v2;
  uint64_t v3 = malloc_type_malloc(8uLL, 0x100004090D0E795uLL);
  dispatch_set_context(v2, v3);
  dispatch_source_set_event_handler_f((dispatch_source_t)qword_100A00200, (dispatch_function_t)sub_100008CC0);
  uint64_t result = 0;
  dword_100A001FC = 0;
  return result;
}

uint64_t sub_1001039E0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = sub_10010B394(result);
    return sub_100103A08(v1);
  }
  else
  {
    byte_100A001F8 = 1;
  }
  return result;
}

uint64_t sub_100103A08(unsigned char *a1, int a2)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  sub_100026C30((uint64_t)&v9);
  LODWORD(v9) = v9 + a2;
  if (!*a1)
  {
    do
    {
      if (dword_100A00174 <= 1) {
        int v4 = 1;
      }
      else {
        int v4 = dword_100A00174;
      }
      sub_10010BDB0(v4);
      if (a2)
      {
        sub_100026C30((uint64_t)&v8);
        BOOL v5 = (int)sub_100262894((uint64_t)&v8, (uint64_t)&v9) >= 0;
      }
      else
      {
        BOOL v5 = 0;
      }
      if (*a1) {
        BOOL v6 = 0;
      }
      else {
        BOOL v6 = !v5;
      }
    }
    while (v6);
    if (!*a1) {
      return 150;
    }
  }
  uint64_t result = 0;
  *a1 = 0;
  return result;
}

void sub_100103ABC()
{
  byte_100A00170 = 0;
  sub_100103C4C(1);
  sub_100026D20(0);
  pthread_join((pthread_t)qword_100A001F0, 0);
  byte_100A00208 = 0;
  sub_10025B778("Terminating stack...\n");
  sub_100023344();
  int v0 = sub_100178034();
  dispatch_set_finalizer_f((dispatch_object_t)qword_100A00200, (dispatch_function_t)&_free);
  dispatch_source_cancel((dispatch_source_t)qword_100A00200);
  dispatch_release((dispatch_object_t)qword_100A00200);
  sub_1000232E0();
  if (v0) {
    sub_10025B778("OI_BT_Stack_Terminate() failed: %d!\n", v0);
  }
  int v1 = pthread_mutex_destroy(&stru_100A000B0);
  if (!v1) {
    goto LABEL_6;
  }
  int v2 = v1;
  *(void *)uint64_t v7 = 0;
  uint64_t v8 = 0;
  int v9 = 0;
  uint64_t v3 = pthread_self();
  pthread_getname_np(v3, v7, 0x14uLL);
  if (*(void *)v7 != 0x706F6F4C746F44)
  {
    int v4 = v2;
    goto LABEL_10;
  }
  usleep(0x7A120u);
  int v4 = pthread_mutex_destroy(&stru_100A000B0);
  if (v4)
  {
LABEL_10:
    strerror(v4);
    sub_10025B778("Destroying stackAccessMutex failed with error: %s\n");
    goto LABEL_11;
  }
LABEL_6:
  int v5 = pthread_mutex_destroy(&stru_100A001B0);
  if (!v5)
  {
    sub_10025B778("Done.\n");
    return;
  }
  strerror(v5);
  sub_10025B778("Destroying idlerMutex failed with error: %s\n");
LABEL_11:
  int v6 = sub_10010B394(148);
  sub_100103C4C(v6);
}

void sub_100103C4C(int a1)
{
  char v1 = a1;
  if (a1)
  {
    sub_10025B778("Stack termination failsafe : lock idler");
    pthread_mutex_lock(&stru_100A001B0);
    byte_100A00208 = v1;
    pthread_cond_signal(&stru_100A00180);
    pthread_mutex_unlock(&stru_100A001B0);
    sub_10025B778("Stack termination failsafe set");
  }
  else
  {
    byte_100A00208 = 0;
  }
}

uint64_t sub_100103CD4(unsigned char *a1)
{
  *a1 = 1;
  return 0;
}

uint64_t sub_100103CE4()
{
  sub_100116074();

  return sub_10016ABF4();
}

uint64_t (*sub_100103D0C(int a1))(void)
{
  sub_10011616C(a1);

  return sub_10016AC1C();
}

uint64_t sub_100103D38(char **a1, int a2)
{
  LODWORD(v2) = a2;
  sub_100023344();
  if ((int)v2 <= 0)
  {
    sub_1000232E0();
  }
  else
  {
    uint64_t v2 = v2;
    uint64_t v4 = v2;
    int v5 = a1;
    do
    {
      uint64_t v6 = (uint64_t)*v5++;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v9 = mach_continuous_time();
      LOBYTE(v10) = 0;
      sub_100023868(*(unsigned __int8 *)(v6 + 8), *(unsigned __int8 **)(v6 + 16), *(unsigned __int16 *)(v6 + 24), (uint64_t)&v9);
      --v4;
    }
    while (v4);
    sub_1000232E0();
    do
    {
      uint64_t v7 = *a1++;
      sub_100103DDC(v7);
      --v2;
    }
    while (v2);
  }
  return 0;
}

void sub_100103DDC(char *a1)
{
  *(void *)a1 = 0;
  a1[8] = 0;
  *(_DWORD *)(a1 + 10) = 0;
  *((_WORD *)a1 + 12) = 0;
  uint64_t v2 = qword_100A006C0;
  uint64_t v3 = (pthread_mutex_t *)(qword_100A006C0 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(qword_100A006C0 + 16));
  uint64_t v4 = *(int *)(v2 + 12);
  if (v4 == *(_DWORD *)(v2 + 8))
  {
    pthread_mutex_unlock(v3);
  }
  else
  {
    *(_DWORD *)(v2 + 12) = v4 + 1;
    *(void *)(*(void *)v2 + 8 * v4) = a1;
    pthread_mutex_unlock(v3);
    if ((v4 & 0x80000000) == 0) {
      return;
    }
  }
  free(*((void **)a1 + 2));

  free(a1);
}

uint64_t sub_100103E8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = 3758097090;
  if (a1 && a2 && (a3 - 4) >= 0xFFFFFFFE)
  {
    uint64_t v6 = a3 == 3 ? 4 : 2;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 176))(a2, v6);
    if (!result)
    {
      unsigned __int8 v15 = 0;
      *(unsigned char *)(a1 + 97) = v6;
      uint64_t result = (*(uint64_t (**)(uint64_t, unsigned __int8 *))(*(void *)a2 + 152))(a2, &v15);
      if (!result)
      {
        if (v15 == 2)
        {
          for (unsigned __int8 i = 1; v15 >= i; ++i)
          {
            char v14 = 0;
            __int16 v13 = 0;
            __int16 v12 = 0;
            char v11 = 0;
            uint64_t result = (*(uint64_t (**)(uint64_t, void, char *, char *, __int16 *, __int16 *, char *))(*(void *)a2 + 208))(a2, i, &v14, (char *)&v13 + 1, &v13, &v12, &v11);
            if (result) {
              break;
            }
            if (v13 != 1) {
              return 0xFFFFFFFFLL;
            }
            char v8 = v14;
            uint64_t v9 = a1 + 130;
            if (v14 != 1)
            {
              uint64_t v9 = a1 + 138;
              if (v14) {
                return 0xFFFFFFFFLL;
              }
            }
            uint64_t result = 0;
            *(unsigned char *)uint64_t v9 = *(unsigned char *)(a1 + 25);
            *(unsigned char *)(v9 + 1) = *(unsigned char *)(a1 + 97);
            *(unsigned char *)(v9 + 3) = v8;
            *(_WORD *)(v9 + 4) = v12;
            char v10 = HIBYTE(v13) & 0xF;
            *(unsigned char *)(v9 + 2) = 1;
            *(unsigned char *)(v9 + 7) = i;
            *(unsigned char *)(v9 + 6) = v10 | (v8 << 7);
          }
        }
        else
        {
          return 0xFFFFFFFFLL;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100103FF8(uint64_t a1, int a2)
{
  if (a2)
  {
    for (uint64_t i = 0; i != 32; i += 8)
    {
      uint64_t v4 = *(void **)(a1 + i + 176);
      if (v4) {
        sub_100104140(v4);
      }
      int v5 = *(void **)(a1 + i + 208);
      if (v5) {
        sub_100104140(v5);
      }
    }
  }
  int v17 = 0;
  uint64_t result = (*(uint64_t (**)(void, int *))(**(void **)(a1 + 48) + 432))(*(void *)(a1 + 48), &v17);
  if (!result)
  {
    uint64_t v7 = 0;
    int v8 = *(unsigned __int16 *)(a1 + 134);
    while (1)
    {
      uint64_t v9 = (char *)sub_10010418C(a1, 3, 0, (unsigned __int16)(15 * v8));
      if (!v9) {
        return 0xFFFFFFFFLL;
      }
      char v10 = v9;
      char v11 = (char *)sub_10010418C(a1, 3, 0, (unsigned __int16)(15 * v8));
      if (!v11)
      {
        __int16 v12 = v10;
        goto LABEL_18;
      }
      __int16 v12 = v11;
      __int16 v13 = sub_10010429C(a1, v8, (uint64_t)v10);
      if (!v13 || (char v14 = v13, (v15 = sub_10010429C(a1, v8, (uint64_t)v12)) == 0))
      {
        sub_100103DDC(v10);
LABEL_18:
        sub_100103DDC(v12);
        return 0xFFFFFFFFLL;
      }
      *((void *)v14 + 17) = 0;
      uint64_t v16 = a1 + v7;
      *(void *)(v16 + 176) = v14;
      *((void *)v15 + 17) = 0;
      *(void *)(v16 + 208) = v15;
      v7 += 8;
      if (v7 == 32) {
        return 0;
      }
    }
  }
  return result;
}

void sub_100104140(void *a1)
{
  uint64_t v2 = (void **)a1[18];
  if (v2)
  {
    free(v2[2]);
    free(v2);
  }

  free(a1);
}

void *sub_10010418C(uint64_t a1, char a2, __int16 a3, unsigned int a4)
{
  uint64_t v8 = qword_100A006C0;
  uint64_t v9 = (pthread_mutex_t *)(qword_100A006C0 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(qword_100A006C0 + 16));
  int v10 = *(_DWORD *)(v8 + 12);
  if (v10 <= 0)
  {
    pthread_mutex_unlock(v9);
  }
  else
  {
    unsigned int v11 = v10 - 1;
    __int16 v12 = *(void **)(*(void *)v8 + 8 * v11);
    *(void *)(*(void *)v8 + 8 * v11) = 0;
    *(_DWORD *)(v8 + 12) = v11;
    pthread_mutex_unlock(v9);
    if (v12) {
      goto LABEL_7;
    }
  }
  __int16 v13 = malloc_type_malloc(0x20uLL, 0x1030040A24534F3uLL);
  __int16 v12 = v13;
  if (!v13) {
    return v12;
  }
  *((_WORD *)v13 + 7) = 4096;
  char v14 = malloc_type_malloc(0x1000uLL, 0x7399B4D2uLL);
  v12[2] = v14;
  if (!v14)
  {
    free(v12);
    return 0;
  }
LABEL_7:
  if (*((unsigned __int16 *)v12 + 7) < a4)
  {
    sub_100103DDC((char *)v12);
    return 0;
  }
  *__int16 v12 = a1;
  *((unsigned char *)v12 + 8) = a2;
  *((_WORD *)v12 + 5) = a3;
  *((_WORD *)v12 + 6) = a4;
  *((_WORD *)v12 + 12) = 0;
  return v12;
}

_WORD *sub_10010429C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t result = malloc_type_malloc(0x98uLL, 0x1020040AA72880BuLL);
  if (result)
  {
    if (15 * a2 <= *(unsigned __int16 *)(a3 + 12))
    {
      uint64_t v7 = 0;
      *(void *)uint64_t result = a1;
      result[4] = a2;
      result[5] = 15;
      *((void *)result + 17) = 0;
      do
      {
        uint64_t v8 = (char *)&result[v7];
        *((_DWORD *)v8 + 3) = 2;
        *((_WORD *)v8 + 8) = a2;
        *((_WORD *)v8 + 9) = -1;
        v7 += 4;
      }
      while (v7 != 60);
      *((void *)result + 18) = a3;
    }
    else
    {
      free(result);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100104348()
{
  uint64_t v8 = 0;
  pthread_mutex_lock((pthread_mutex_t *)&xmmword_100A00270);
  uint64_t v0 = qword_100A00308;
  uint64_t v1 = (*(uint64_t (**)(void, uint64_t, uint64_t *))(**(void **)(qword_100A00308 + 48) + 184))(*(void *)(qword_100A00308 + 48), qword_100A00308 + 240, &v8);
  if (!v1)
  {
    uint64_t v2 = 0;
    *(void *)(v0 + 240) += 4;
    uint64_t v3 = v0 + 176;
    do
    {
      uint64_t v4 = *(uint64_t **)(v3 + v2);
      *(_WORD *)(v4[18] + 24) = 0;
      v4[17] = 0;
      uint64_t v5 = sub_1001043F8(v4);
      if (v5) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = v2 == 24;
      }
      v2 += 8;
    }
    while (!v6);
    uint64_t v1 = v5;
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
  }
  return v1;
}

uint64_t sub_1001043F8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1 || !*(_DWORD *)v1 || byte_100A00310 != 1) {
    return 0xFFFFFFFFLL;
  }
  if (*((_WORD *)a1 + 5))
  {
    __int16 v3 = *((_WORD *)a1 + 4);
    uint64_t v4 = (_WORD *)a1 + 9;
    uint64_t v5 = *((unsigned __int16 *)a1 + 5);
    do
    {
      *(_DWORD *)(v4 - 3) = 2;
      *(v4 - 1) = v3;
      *uint64_t v4 = -1;
      v4 += 4;
      --v5;
    }
    while (v5);
  }
  uint64_t v6 = *(void *)(v1 + 240);
  a1[17] = v6;
  *(void *)(v1 + 240) = v6 + 15;
  uint64_t v7 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 280))(*(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 137), *(void *)(a1[18] + 16));
  if (!v7)
  {
LABEL_16:
    j__pthread_mutex_lock((pthread_mutex_t *)(v1 + 4176));
    ++*(unsigned char *)(v1 + 4241);
    j__pthread_mutex_unlock((pthread_mutex_t *)(v1 + 4176));
    return 0;
  }
  uint64_t v13 = v7;
  uint64_t v14 = 3758097134;
  memset(v25, 0, 250);
  if (v7 != -536870162)
  {
    sub_10025B74C((uint64_t)v25, 250, (uint64_t)"USB ReadIsochPipeAsync failed -- returned error (0x%x)", v8, v9, v10, v11, v12, v7);
    sub_10011631C((const char *)v25);
    return v13;
  }
  sub_10025B74C((uint64_t)v25, 250, (uint64_t)"USB ReadIsochPipeAsync failed -- returned kIOReturnIsoTooOld error (0x%x) -- try again", v8, v9, v10, v11, v12, 3758097134);
  sub_10011631C((const char *)v25);
  uint64_t v15 = *(void *)(v1 + 240);
  a1[17] = v15 + 30;
  *(void *)(v1 + 240) = v15 + 45;
  uint64_t v16 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 280))(*(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 137), *(void *)(a1[18] + 16));
  if (!v16)
  {
    sub_10025B74C((uint64_t)v25, 250, (uint64_t)"Retry USB ReadIsochPipeAsync successful ", v17, v18, v19, v20, v21, v24);
    sub_100115824((const char *)v25);
    goto LABEL_16;
  }
  uint64_t v22 = v16;
  if (v16 == -536870162)
  {
    sub_10025B74C((uint64_t)v25, 250, (uint64_t)"Previous USB ReadIsochPipeAsync failed with kIOReturnIsoTooOld error -- retry still returned kIOReturnIsoTooOld error (0x%x)", v17, v18, v19, v20, v21, 3758097134);
    sub_10011631C((const char *)v25);
  }
  else
  {
    sub_10025B74C((uint64_t)v25, 250, (uint64_t)"Retry USB ReadIsochPipeAsync failed -- returned error (0x%x)", v17, v18, v19, v20, v21, v16);
    sub_10011631C((const char *)v25);
    return v22;
  }
  return v14;
}

uint64_t sub_100104680(uint64_t a1, _WORD *a2, char *a3, unsigned int a4)
{
  if (!a1) {
    return 1205;
  }
  if (!*(_DWORD *)a1 || *(unsigned __int16 *)(a1 + 4100) + a4 > 0xF00) {
    return 1205;
  }
  uint64_t v9 = (unsigned char *)(a1 + 4106);
  j__pthread_mutex_lock((pthread_mutex_t *)(a1 + 4112));
  *(_WORD *)(a1 + 4100) += a4;
  j__pthread_mutex_unlock((pthread_mutex_t *)(a1 + 4112));
  *(_WORD *)(a1 + 256) = *a2;
  uint64_t v10 = *(unsigned __int16 *)(a1 + 4102);
  if (v10 + a4 > 0xEFF)
  {
    unsigned __int16 v12 = 3840 - v10;
    unsigned __int16 v13 = a4 - (3840 - v10);
    memcpy((void *)(a1 + 259 + v10), a3, (unsigned __int16)(3840 - v10));
    *(_WORD *)(a1 + 4102) = 0;
    memcpy((void *)(a1 + 259), &a3[v12], v13);
    LOWORD(v11) = *(_WORD *)(a1 + 4102) + v13;
  }
  else
  {
    memcpy((void *)(a1 + v10 + 259), a3, a4);
    unsigned int v11 = *(unsigned __int16 *)(a1 + 4102) + a4;
    if (v11 == 3840) {
      LOWORD(v11) = 0;
    }
  }
  *(_WORD *)(a1 + 4102) = v11;
  if (!*(unsigned char *)(a1 + 4107) && byte_100A00310 == 1)
  {
    *(unsigned char *)(a1 + 4241) = 0;
    if (!sub_100104348()) {
      *(unsigned char *)(a1 + 4107) = 1;
    }
  }
  if (!*v9 && byte_100A00310 == 1 && *(unsigned __int16 *)(a1 + 4100) >= *(unsigned __int16 *)(a1 + 4108))
  {
    *(unsigned char *)(a1 + 4240) = 0;
    if (!sub_100104804()) {
      unsigned char *v9 = 1;
    }
  }
  return 625;
}

uint64_t sub_100104804()
{
  uint64_t v9 = 0;
  pthread_mutex_lock((pthread_mutex_t *)&xmmword_100A00270);
  uint64_t v0 = qword_100A00308;
  uint64_t v1 = (*(uint64_t (**)(void, uint64_t, uint64_t *))(**(void **)(qword_100A00308 + 48) + 184))(*(void *)(qword_100A00308 + 48), qword_100A00308 + 248, &v9);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10018EE24(1205);
  }
  else
  {
    uint64_t v3 = 0;
    *(void *)(v0 + 248) += 4;
    uint64_t v4 = v0 + 208;
    do
    {
      uint64_t v5 = *(uint64_t **)(v4 + v3);
      v5[17] = 0;
      uint64_t v6 = sub_1001048B8(v5);
      if (v6) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v3 == 24;
      }
      v3 += 8;
    }
    while (!v7);
    uint64_t v2 = v6;
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
  }
  return v2;
}

uint64_t sub_1001048B8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *(char **)(a1[18] + 16);
  if (*a1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return 0xFFFFFFFFLL;
  }
  if (!*(_DWORD *)v1) {
    return 0xFFFFFFFFLL;
  }
  if (byte_100A00310 != 1) {
    return 0xFFFFFFFFLL;
  }
  __int16 v5 = *((_WORD *)a1 + 4) - 1;
  if (*(unsigned __int16 *)(v1 + 4100) < (unsigned __int16)(15 * v5)) {
    return 0xFFFFFFFFLL;
  }
  __int16 v39 = 15 * v5;
  unsigned __int8 v8 = 3 * v5;
  size_t v9 = (3 * v5);
  bzero(v2, v9);
  unsigned int v10 = 0;
  *(unsigned char *)(v1 + 258) = v8;
  int v11 = v8;
  unsigned __int16 v12 = v2 + 3;
  do
  {
    __int16 v13 = *(_WORD *)(v1 + 256);
    *(v12 - 1) = *(unsigned char *)(v1 + 258);
    *(_WORD *)(v12 - 3) = v13;
    uint64_t v14 = *(unsigned __int16 *)(v1 + 4104);
    unsigned __int16 v15 = v11 - (3840 - v14);
    if (v11 <= 3840 - (int)v14)
    {
      memcpy(v12, (const void *)(v1 + v14 + 259), v9);
      int v17 = *(unsigned __int16 *)(v1 + 4104) + v11;
      if (v17 == 3840) {
        LOWORD(v17) = 0;
      }
    }
    else
    {
      size_t v16 = (unsigned __int16)(3840 - v14);
      memcpy(v12, (const void *)(v1 + v14 + 259), v16);
      *(_WORD *)(v1 + 4104) = 0;
      memcpy(&v12[v16], (const void *)(v1 + 259), v15);
      LOWORD(v17) = *(_WORD *)(v1 + 4104) + v15;
    }
    *(_WORD *)(v1 + 4104) = v17;
    v12 += v9 + 3;
  }
  while (v10++ < 4);
  j__pthread_mutex_lock((pthread_mutex_t *)(v1 + 4112));
  *(_WORD *)(v1 + 4100) -= v39;
  j__pthread_mutex_unlock((pthread_mutex_t *)(v1 + 4112));
  if (*((_WORD *)a1 + 5))
  {
    __int16 v19 = *((_WORD *)a1 + 4);
    uint64_t v20 = (_WORD *)a1 + 9;
    uint64_t v21 = *((unsigned __int16 *)a1 + 5);
    do
    {
      *(_DWORD *)(v20 - 3) = 2;
      *(v20 - 1) = v19;
      *uint64_t v20 = -1;
      v20 += 4;
      --v21;
    }
    while (v21);
  }
  uint64_t v22 = *(void *)(v1 + 248);
  a1[17] = v22;
  *(void *)(v1 + 248) = v22 + 15;
  uint64_t v23 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 288))(*(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 145), *(void *)(a1[18] + 16));
  if (!v23)
  {
LABEL_27:
    j__pthread_mutex_lock((pthread_mutex_t *)(v1 + 4112));
    ++*(unsigned char *)(v1 + 4240);
    j__pthread_mutex_unlock((pthread_mutex_t *)(v1 + 4112));
    return 0;
  }
  uint64_t v29 = v23;
  uint64_t v6 = 3758097134;
  memset(v40, 0, 250);
  if (v23 != -536870162)
  {
    sub_10025B74C((uint64_t)v40, 250, (uint64_t)"USB WriteIsochPipeAsync failed -- returned error (0x%x)", v24, v25, v26, v27, v28, v23);
    sub_10011631C((const char *)v40);
    return v29;
  }
  sub_10025B74C((uint64_t)v40, 250, (uint64_t)"USB WriteIsochPipeAsync failed -- returned kIOReturnIsoTooOld error (0x%x) -- try again", v24, v25, v26, v27, v28, 3758097134);
  sub_10011631C((const char *)v40);
  uint64_t v30 = *(void *)(v1 + 248);
  a1[17] = v30 + 30;
  *(void *)(v1 + 248) = v30 + 45;
  uint64_t v31 = (*(uint64_t (**)(void, void, void))(**(void **)(v1 + 48) + 288))(*(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 145), *(void *)(a1[18] + 16));
  if (!v31)
  {
    sub_10025B74C((uint64_t)v40, 250, (uint64_t)"Retry USB WriteIsochPipeAsync successful ", v32, v33, v34, v35, v36, v38);
    sub_100115824((const char *)v40);
    goto LABEL_27;
  }
  uint64_t v37 = v31;
  if (v31 == -536870162)
  {
    sub_10025B74C((uint64_t)v40, 250, (uint64_t)"Previous USB WriteIsochPipeAsync failed with kIOReturnIsoTooOld error -- retry still returned kIOReturnIsoTooOld error (0x%x)", v32, v33, v34, v35, v36, 3758097134);
    sub_10011631C((const char *)v40);
  }
  else
  {
    sub_10025B74C((uint64_t)v40, 250, (uint64_t)"Retry USB WriteIsochPipeAsync failed -- returned error (0x%x)", v32, v33, v34, v35, v36, v31);
    sub_10011631C((const char *)v40);
    return v37;
  }
  return v6;
}

uint64_t sub_100104C70()
{
  return 0;
}

uint64_t sub_100104C78(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v4 = a1;
  __int16 v5 = (_DWORD *)qword_100A00308;
  size_t v6 = a3;
  __chkstk_darwin(a1, a2);
  unsigned __int8 v8 = (char *)&v27 - v7;
  if (v9 >= 0x801) {
    sub_10025B8C0();
  }
  if (!v5) {
    return 1205;
  }
  bzero(v8, v6);
  if (!*v5) {
    return 1205;
  }
  uint64_t v10 = sub_10018F494();
  if (!v10) {
    return 625;
  }
  switch(v4)
  {
    case 1:
      __int16 v11 = 3;
LABEL_11:
      unsigned __int16 v12 = sub_10010827C((uint64_t)v5, v4, (const void *)(v10 + 1), (unsigned __int16)(v11 + a3));
      if (v12)
      {
        __int16 v13 = v12;
        int v14 = v12[8];
        if (v14 == 2)
        {
          uint64_t v15 = *(void *)v12;
          if (*(void *)v12 && *(_DWORD *)v15)
          {
            uint64_t v25 = (*(uint64_t (**)(void, void, void, void, void (*)(char *), char *))(**(void **)(v15 + 40) + 272))(*(void *)(v15 + 40), *(unsigned __int8 *)(v15 + 129), *((void *)v12 + 2), *((unsigned __int16 *)v12 + 12), sub_10010844C, v12);
            if (v25)
            {
              uint64_t v17 = v25;
              sub_100103DDC(v13);
              uint64_t v22 = "Bulk Pipe";
              uint64_t v23 = "WritePipeAsync";
LABEL_27:
              sub_1001082E4(v15, v17, (uint64_t)v22, (uint64_t)v23, v18, v19, v20, v21);
            }
            return 625;
          }
        }
        else if (v14 == 1)
        {
          uint64_t v15 = *(void *)v12;
          if (*(void *)v12)
          {
            if (*(_DWORD *)v15)
            {
              uint64_t v31 = 0;
              int v27 = 33;
              __int16 v29 = *((_WORD *)v12 + 12);
              uint64_t v30 = *((void *)v12 + 2);
              __int16 v28 = *(unsigned __int8 *)(v15 + 24);
              uint64_t v16 = (*(uint64_t (**)(void, int *, void (*)(char *), char *))(**(void **)(v15 + 32)
                                                                                                  + 216))(*(void *)(v15 + 32), &v27, sub_1001082E0, v12);
              if (v16)
              {
                uint64_t v17 = v16;
                sub_100103DDC(v13);
                uint64_t v22 = "Control Pipe";
                uint64_t v23 = "DeviceRequestAsync";
                goto LABEL_27;
              }
              return 625;
            }
          }
        }
        return 1205;
      }
      break;
    case 3:
      LOWORD(v27) = *(_WORD *)(v10 + 1);
      memcpy(v8, (const void *)(v10 + 4), v6);
      return sub_100104680((uint64_t)v5, &v27, v8, a3);
    case 2:
      __int16 v11 = 4;
      goto LABEL_11;
  }
  uint64_t v24 = 106;
  sub_10018EE24(106);
  return v24;
}

uint64_t sub_100104ED8(int a1)
{
  if (a1 == 2)
  {
    sub_10025B778("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- airMode = 0x02 (CVSD)\n");
  }
  else
  {
    if (a1 != 3)
    {
      sub_10025B778("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- Error -- unknown airMode = 0x%02x (unknown)\n", a1);
      return 113;
    }
    sub_10025B778("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- airMode = 0x03 (mSBC)\n");
  }
  uint64_t v2 = qword_100A00308;
  if (!qword_100A00308) {
    return 113;
  }
  uint64_t v3 = *(void *)(qword_100A00308 + 48);
  if (!v3 || (*(unsigned int (**)(void))(*(void *)v3 + 64))(*(void *)(qword_100A00308 + 48))) {
    return 113;
  }
  sub_10025B778("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- ISOC interface for SCO is opened\n");
  if (sub_100103E8C(v2, *(void *)(v2 + 48), a1)) {
    goto LABEL_13;
  }
  sub_10025B778("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- Set ISOC alternate interface successfully\n");
  if (sub_100103FF8(v2, 1)) {
    goto LABEL_13;
  }
  sub_10025B778("[bm3_usb][OI_HciIfc_EnableSCO_USB] -- Create ISOC requests successfully\n");
  bzero((void *)(v2 + 259), 0xF00uLL);
  *(void *)(v2 + 240) = 0;
  *(void *)(v2 + 248) = 0;
  *(void *)(v2 + 4100) = 0;
  unsigned int v4 = (90 * *(_WORD *)(v2 + 142) - 90) & 0xFFFE;
  if (v4 >= 0xF00) {
    LOWORD(v4) = 3840;
  }
  *(_WORD *)(v2 + 4108) = v4;
  byte_100A00310 = 1;
  *(unsigned char *)(v2 + 4241) = 0;
  uint64_t result = sub_100104348();
  if (result)
  {
LABEL_13:
    (*(void (**)(uint64_t))(*(void *)v3 + 72))(v3);
    return 113;
  }
  *(unsigned char *)(v2 + 4107) = 1;
  return result;
}

void sub_100105038(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)a1;
  __int16 v5 = (unsigned char *)(*(void *)a1 + 4107);
  size_t v6 = (pthread_mutex_t *)(*(void *)a1 + 4176);
  j__pthread_mutex_lock(v6);
  --v5[134];
  j__pthread_mutex_unlock(v6);
  if (*(_DWORD *)v4) {
    BOOL v7 = qword_100A00308 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    return;
  }
  if (!a2 || a2 == -536870169)
  {
    unsigned int v8 = *(unsigned __int16 *)(a1 + 10);
    if (*(_WORD *)(a1 + 10))
    {
      unint64_t v9 = 0;
      uint64_t v10 = *(void *)(a1 + 144);
      __int16 v11 = (unsigned __int16 *)(a1 + 18);
      do
      {
        unsigned int v13 = *v11;
        v11 += 4;
        unsigned int v12 = v13;
        if (v13)
        {
          if (sub_100105228(v4, 3, 3u, 0x102u, (char **)(v4 + 168), *(void *)(v10 + 16) + v9 * *(unsigned __int16 *)(a1 + 8), v12))goto LABEL_14; {
          uint64_t v10 = *(void *)(a1 + 144);
          }
          unsigned int v8 = *(unsigned __int16 *)(a1 + 10);
        }
        *(_WORD *)(v10 + 24) += v12;
        ++v9;
      }
      while (v9 < v8);
    }
    goto LABEL_18;
  }
LABEL_14:
  int v14 = *(char **)(v4 + 168);
  if (v14)
  {
    sub_100103DDC(v14);
    *(void *)(v4 + 168) = 0;
  }
  if (*(_DWORD *)v4)
  {
    sub_100023344();
    sub_10018EDB8(1211);
    sub_1000232E0();
LABEL_18:
    if (dword_100A00390)
    {
      *(_WORD *)(*(void *)(a1 + 144) + 24) = 0;
      *(void *)(a1 + 136) = 0;
      if (sub_1001043F8(a1))
      {
        j__pthread_mutex_lock(v6);
        if (!v5[134])
        {
          if (byte_100A00310 == 1) {
            sub_10011631C("[IsochPipeReadCB] -- btdev->nbrOfOutstandingIsochReads < 1 -- need to restart");
          }
          *__int16 v5 = 0;
        }
        j__pthread_mutex_unlock(v6);
      }
    }
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"IsocReadRequestCB btdev->open is false", v15, v16, v17, v18, v19, v20, v21, v23);
    uint64_t v22 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_100105228(uint64_t a1, int a2, unsigned int a3, unsigned int a4, char **a5, uint64_t a6, unsigned int a7)
{
  if (!a7) {
    return 0;
  }
  unsigned __int16 v11 = 0;
  unsigned int v12 = *a5;
  while (1)
  {
    uint64_t v13 = a6 + v11;
    unsigned __int16 v14 = a7 - v11;
    if (v12)
    {
      uint64_t v15 = *((void *)v12 + 2);
      switch(a2)
      {
        case 2:
          unsigned __int16 v16 = *(_WORD *)(v15 + 2) + 4;
          break;
        case 3:
          unsigned __int16 v16 = *(unsigned __int8 *)(v15 + 2) + 3;
          break;
        case 4:
          unsigned __int16 v16 = *(unsigned __int8 *)(v15 + 1) + 2;
          break;
        default:
          unsigned __int16 v16 = 0;
          break;
      }
      goto LABEL_23;
    }
    if (a3 > v14) {
      goto LABEL_38;
    }
    if (a2 == 2)
    {
      unsigned __int16 v16 = *(_WORD *)(v13 + 2) + 4;
    }
    else if (a2 == 3)
    {
      unsigned __int16 v16 = *(unsigned __int8 *)(v13 + 2) + 3;
    }
    else
    {
      unsigned __int16 v16 = a2 == 4 ? *(unsigned __int8 *)(v13 + 1) + 2 : 0;
    }
    if (a3 > v16 || a4 < v16) {
      goto LABEL_38;
    }
    uint64_t v17 = (char *)sub_10010418C(a1, a2, a3, v16);
    if (!v17) {
      break;
    }
    unsigned int v12 = v17;
    *a5 = v17;
LABEL_23:
    int v18 = *((unsigned __int16 *)v12 + 12);
    if (v18 == v16) {
      goto LABEL_38;
    }
    unsigned __int16 v19 = v16 - v18;
    if (a4 < v19) {
      goto LABEL_38;
    }
    unsigned int v20 = v19 >= v14 ? (unsigned __int16)(a7 - v11) : v19;
    unsigned int v21 = sub_100105450((uint64_t)v12, (const void *)v13, v20);
    if (v21 < v20) {
      goto LABEL_38;
    }
    __int16 v22 = v21;
    if (*((unsigned __int16 *)v12 + 12) == v16)
    {
      if (v12[8] == 1) {
        sub_10025B8C0();
      }
      pthread_mutex_lock(&stru_100A00350);
      int v23 = dword_100A006B8;
      if (dword_100A006B8 == 100) {
        int v23 = 0;
      }
      dword_100A006B8 = v23 + 1;
      qword_100A00318[v23 + 16] = (uint64_t)v12;
      pthread_cond_signal(&stru_100A00320);
      pthread_mutex_unlock(&stru_100A00350);
      unsigned int v12 = 0;
      *a5 = 0;
    }
    v11 += v22;
    if (a7 <= v11) {
      return 0;
    }
  }
  sub_100023344();
  sub_10018EE24(106);
  sub_1000232E0();
LABEL_38:
  if (*a5)
  {
    sub_100103DDC(*a5);
    *a5 = 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_100105450(uint64_t a1, const void *a2, int a3)
{
  uint64_t v3 = *(unsigned __int16 *)(a1 + 24);
  unsigned int v4 = *(unsigned __int16 *)(a1 + 12);
  int v5 = v4 - v3;
  if (v4 < v3) {
    int v5 = 0;
  }
  if ((int)v3 + a3 <= v4) {
    int v6 = a3;
  }
  else {
    int v6 = v5;
  }
  if (v6)
  {
    memcpy((void *)(*(void *)(a1 + 16) + v3), a2, (unsigned __int16)v6);
    *(_WORD *)(a1 + 24) += v6;
  }
  return (unsigned __int16)v6;
}

uint64_t sub_1001054B0(void *a1)
{
  uint64_t v2 = (_DWORD *)*a1;
  uint64_t v3 = (unsigned char *)(*a1 + 4106);
  unsigned int v4 = (pthread_mutex_t *)(*a1 + 4112);
  j__pthread_mutex_lock(v4);
  --v3[134];
  uint64_t result = j__pthread_mutex_unlock(v4);
  if (*v2) {
    BOOL v6 = qword_100A00308 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && dword_100A00390 != 0)
  {
    if (*v3)
    {
      *(_WORD *)(a1[18] + 24) = 0;
      a1[17] = 0;
      uint64_t result = sub_1001048B8(a1);
      if (result)
      {
        j__pthread_mutex_lock(v4);
        if (!v3[134])
        {
          if (byte_100A00310 == 1) {
            sub_10011631C("[IsochPipeWriteCB] -- btdev->nbrOfOutstandingIsochWrites < 1 -- need to restart");
          }
          *uint64_t v3 = 0;
        }
        return j__pthread_mutex_unlock(v4);
      }
    }
  }
  return result;
}

uint64_t sub_1001055A0()
{
  return 0;
}

uint64_t sub_1001055A8()
{
  kern_return_t v22;
  kern_return_t v23;
  kern_return_t v24;
  unsigned __int8 v25;
  kern_return_t v26;
  kern_return_t v27;
  io_object_t v28;
  io_service_t v29;
  CFUUIDRef v30;
  CFUUIDRef v31;
  IOCFPlugInInterface **v32;
  HRESULT (__cdecl *QueryInterface)(void *, REFIID, LPVOID *);
  CFUUIDRef v34;
  CFUUIDBytes v35;
  BOOL v36;
  kern_return_t v37;
  uint64_t v38;
  kern_return_t v39;
  kern_return_t v40;
  unsigned __int8 v41;
  kern_return_t v42;
  char v43;
  char v44;
  uint64_t v45;
  kern_return_t v46;
  kern_return_t v47;
  UInt8 byte7[8];
  UInt8 byte7a[8];
  _WORD *v50;
  timespec v51;
  uint64_t v52;
  unsigned __int8 v53;
  char v54;
  uint64_t v55;
  SInt32 theScore;
  IOCFPlugInInterface **theInterface;
  unint64_t v58;
  io_object_t v59;
  char v60;
  __int16 v61;
  char v62;
  __int16 v63;
  unsigned char v64[9];

  pthread_mutex_init(&stru_100A00700, 0);
  pthread_cond_init(&stru_100A006D0, 0);
  xmmword_100A00210 = 0u;
  *(_OWORD *)&qword_100A00220 = 0u;
  xmmword_100A00230 = 0u;
  unk_100A00240 = 0u;
  xmmword_100A00250 = 0u;
  unk_100A00260 = 0u;
  xmmword_100A00280 = 0u;
  unk_100A00290 = 0u;
  xmmword_100A002A0 = 0u;
  xmmword_100A002C0 = 0u;
  unk_100A002D0 = 0u;
  xmmword_100A002E0 = 0u;
  *(_OWORD *)&dword_100A002F0 = 0u;
  qword_100A00300 = 0;
  xmmword_100A00270 = 0u;
  xmmword_100A002B0 = 0u;
  pthread_cond_init((pthread_cond_t *)&xmmword_100A002B0, 0);
  pthread_mutex_init((pthread_mutex_t *)&xmmword_100A00270, 0);
  pthread_create((pthread_t *)&xmmword_100A00210, 0, (void *(__cdecl *)(void *))sub_100106970, 0);
  bzero(qword_100A00318, 0x3B0uLL);
  uint64_t v0 = (char *)malloc_type_malloc(0x50uLL, 0x108004014AC8D4BuLL);
  *((_DWORD *)v0 + 2) = 100;
  *(void *)uint64_t v0 = malloc_type_malloc(0x320uLL, 0x80040B8603338uLL);
  *((_DWORD *)v0 + 3) = 0;
  pthread_mutex_init((pthread_mutex_t *)(v0 + 16), 0);
  qword_100A006C0 = (uint64_t)v0;
  pthread_cond_init(&stru_100A00320, 0);
  pthread_mutex_init(&stru_100A00350, 0);
  pthread_create((pthread_t *)qword_100A00318, 0, (void *(__cdecl *)(void *))sub_1001078C0, 0);
  pthread_mutex_lock(&stru_100A00700);
  while (!qword_100A00300 || dword_100A00390 == 0)
  {
    sub_10025B778("[bm3_usb][Initialize] -- Before calling pthread_cond_wait()");
    pthread_cond_wait(&stru_100A006D0, &stru_100A00700);
    sub_10025B778("[bm3_usb][Initialize] -- After calling pthread_cond_wait()");
    if (byte_100A00740 == 1)
    {
      sub_10025B778("[bm3_usb][Initialize] -- gFoundUSBController is false -- calling break()");
      break;
    }
  }
  uint64_t v2 = pthread_mutex_unlock(&stru_100A00700);
  uint64_t v3 = &byte_100A00000;
  if (!qword_100A002F8)
  {
    sub_10025B778("[bm3_usb][Initialize] -- gIOThreadInfo.runloop is NULL -- Initialization failed");
    pthread_mutex_destroy((pthread_mutex_t *)&xmmword_100A00270);
    pthread_cond_destroy((pthread_cond_t *)&xmmword_100A002B0);
    uint64_t v2 = sub_1001079FC();
    if (!qword_100A002F8)
    {
      sub_10025B778("[bm3_usb][OI_HciIfc_Init_USB] -- Initialization failed");
      return 114;
    }
  }
  uint64_t v51 = (timespec)xmmword_1007B90F0;
  sub_100106230(v2, dword_100A002F0);
  int v4 = dword_100A00268;
  if (dword_100A00268)
  {
    int v4 = 0;
  }
  else
  {
    do
    {
      unsigned int v5 = v4;
      sleep(1u);
      int v4 = v5 + 1;
      if (dword_100A00268) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = v5 >= 0xE;
      }
    }
    while (!v6);
    uint64_t v3 = &byte_100A00000;
    if (!dword_100A00268)
    {
      sub_1001066C8();
      sub_10025B778("[bm3_usb] No matching services found after %d seconds -- returned OI_FAIL");
      return 114;
    }
  }
  sub_10025B778("[bm3_usb] Matching services found after %d seconds", v4);
  BOOL v7 = &byte_100A00000;
  uint64_t v8 = qword_100A00308;
  if (qword_100A00308) {
    goto LABEL_20;
  }
  do
  {
    pthread_mutex_lock((pthread_mutex_t *)&xmmword_100A00270);
    if (dword_100A00268 < 1) {
      goto LABEL_119;
    }
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *((void *)&xmmword_100A00210 + v15 + 1);
      if (*(_DWORD *)(v16 + 4)) {
        goto LABEL_47;
      }
      *(_DWORD *)(v16 + 4) = 1;
      sub_10025B778("[bm3_usb][BTDeviceOpen] called\n");
      int v17 = (*(uint64_t (**)(void))(**(void **)(v16 + 32) + 232))(*(void *)(v16 + 32));
      if (v17)
      {
        int v18 = v17;
        if (v17 == -536870203)
        {
          sub_10025B778("[bm3_usb] Bluetooth device already in use: %s [0x%08lx]\n");
        }
        else
        {
          sub_10025B778("[bm3_usb] USBDeviceOpenSeize failed with %d\n", v17);
          sub_10025B778("[bm3_usb][BTDeviceOpen] exited\n");
        }
        sub_10025B778("[bm3_usb] BTDeviceOpen failed with %d\n", v18);
        goto LABEL_47;
      }
      *(_DWORD *)uint64_t v16 = 1;
      sub_10025B778("[bm3_usb][BTDeviceOpen] exited\n");
      uint64_t v53 = 0;
      sub_10025B778("[bm3_usb] Configuring bluetooth device: %s [0x%08lx]\n", *(const char **)(v16 + 8), *(unsigned int *)(v16 + 16));
      *(void *)(v16 + 40) = 0;
      unsigned __int16 v19 = (void *)(v16 + 40);
      *(void *)(v16 + 80) = 0;
      unsigned int v20 = (CFRunLoopSourceRef *)(v16 + 80);
      *(void *)(v16 + 88) = 0;
      unsigned int v21 = (CFRunLoopSourceRef *)(v16 + 88);
      *(void *)(v16 + 48) = 0;
      *(unsigned char *)(v16 + 4110) = 2;
      *(unsigned char *)(v16 + 97) = 4;
      __int16 v22 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v16 + 32) + 144))(*(void *)(v16 + 32), v16 + 96);
      if (v22)
      {
        int v23 = v22;
        sub_10025B778("[bm3_usb] GetDeviceSpeed failed with 0x%x\n");
        goto LABEL_42;
      }
      uint64_t v24 = (*(uint64_t (**)(void, unsigned __int8 *))(**(void **)(v16 + 32) + 152))(*(void *)(v16 + 32), &v53);
      if (v24)
      {
        int v23 = v24;
        sub_10025B778("[bm3_usb] GetNumberOfConfigurations failed with 0x%x\n");
        goto LABEL_42;
      }
      if (!v53) {
        goto LABEL_114;
      }
      uint64_t v25 = 0;
      unsigned int v50 = (_WORD *)(v16 + 22);
      while (1)
      {
        uint64_t v52 = 0;
        uint64_t v26 = (*(uint64_t (**)(void, void, uint64_t *))(**(void **)(v16 + 32) + 168))(*(void *)(v16 + 32), v25, &v52);
        if (v26)
        {
          int v23 = v26;
          sub_10025B778("[bm3_usb] GetConfigurationDescriptorPtr failed with 0x%x\n");
          goto LABEL_42;
        }
        int v27 = (*(uint64_t (**)(void, void))(**(void **)(v16 + 32) + 184))(*(void *)(v16 + 32), *(unsigned __int8 *)(v52 + 5));
        if (v27)
        {
          int v23 = v27;
          sub_10025B778("[bm3_usb] SetConfiguration failed with 0x%x\n");
          goto LABEL_42;
        }
        uint64_t v58 = 0xFFFF00010001FFFFLL;
        int v23 = -536870212;
        if (!(*(unsigned int (**)(void, uint64_t))(**(void **)(v16 + 32) + 104))(*(void *)(v16 + 32), v16 + 20))
        {
          int v23 = -536870212;
          if (!(*(unsigned int (**)(void, _WORD *))(**(void **)(v16 + 32) + 112))(*(void *)(v16 + 32), v50))
          {
            uint64_t v59 = 0;
            *unsigned __int16 v19 = 0;
            *(void *)(v16 + 48) = 0;
            int v23 = (*(uint64_t (**)(void, unint64_t *, io_object_t *))(**(void **)(v16 + 32) + 224))(*(void *)(v16 + 32), &v58, &v59);
            if (!v23) {
              break;
            }
          }
        }
LABEL_99:
        if (v53 <= ++v25)
        {
          sub_10025B778("[bm3_usb] ConfigureInterfaces failed with 0x%x\n", v23);
          goto LABEL_42;
        }
      }
      *(_WORD *)(v16 + 24) = 256;
      if (*(_WORD *)(v16 + 20) == 1452
        && (unsigned __int16)*v50 - 33424 <= 6
        && ((1 << (*v50 + 112)) & 0x53) != 0)
      {
        *(_WORD *)(v16 + 24) = 770;
      }
      __int16 v28 = IOIteratorNext(v59);
      if (v28)
      {
        __int16 v29 = v28;
        while (1)
        {
          theInterface = 0;
          theScore = 0;
          uint64_t v55 = 0;
          uint64_t v54 = 0;
          uint64_t v30 = CFUUIDGetConstantUUIDWithBytes(0, 0x2Du, 0x97u, 0x86u, 0xC6u, 0x9Eu, 0xF3u, 0x11u, 0xD4u, 0xADu, 0x51u, 0, 0xAu, 0x27u, 5u, 0x28u, 0x61u);
          uint64_t v31 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
          int v23 = IOCreatePlugInInterfaceForService(v29, v30, v31, &theInterface, &theScore);
          IOObjectRelease(v29);
          if (v23 || (uint64_t v32 = theInterface) == 0)
          {
            if (!v23) {
              int v23 = -1;
            }
            BOOL v7 = &byte_100A00000;
            goto LABEL_98;
          }
          QueryInterface = (*theInterface)->QueryInterface;
          uint64_t v34 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x87u, 0x52u, 0x66u, 0x3Bu, 0xC0u, 0x7Bu, 0x4Bu, 0xAEu, 0x95u, 0x84u, 0x22u, 3u, 0x2Fu, 0xABu, 0x9Cu, 0x5Au);
          uint64_t v35 = CFUUIDGetUUIDBytes(v34);
          if (((unsigned int (*)(IOCFPlugInInterface **, void, void, uint64_t *))QueryInterface)(v32, *(void *)&v35.byte0, *(void *)&v35.byte8, &v55))
          {
            uint64_t v36 = 1;
          }
          else
          {
            uint64_t v36 = v55 == 0;
          }
          if (v36)
          {
            ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
            int v23 = -1;
            goto LABEL_106;
          }
          uint64_t v37 = (*(uint64_t (**)(void))(*(void *)v55 + 136))();
          if (v37) {
            break;
          }
          uint64_t v3 = &byte_100A00000;
          if (v54 == *(unsigned char *)(v16 + 24))
          {
            *(void *)(v16 + 56) = theInterface;
            uint64_t v38 = v55;
            __int16 v39 = (*(uint64_t (**)(uint64_t))(*(void *)v55 + 64))(v55);
            if (!v39)
            {
              v64[0] = 0;
              *unsigned __int16 v19 = v38;
              uint64_t v40 = (*(uint64_t (**)(uint64_t, unsigned char *))(*(void *)v38 + 152))(v38, v64);
              if (v40)
              {
                int v23 = v40;
              }
              else
              {
                if (v64[0] == 3)
                {
                  uint64_t v41 = 1;
                  while (1)
                  {
                    uint64_t v63 = 0;
                    uint64_t v62 = 0;
                    uint64_t v61 = 0;
                    int v60 = 0;
                    uint64_t v42 = (*(uint64_t (**)(uint64_t, void, char *, __int16 *, char *, __int16 *, char *))(*(void *)v38 + 208))(v38, v41, (char *)&v63 + 1, &v63, &v62, &v61, &v60);
                    if (v42) {
                      break;
                    }
                    uint64_t v43 = v62;
                    if (v62 == 3)
                    {
                      uint64_t v44 = HIBYTE(v63);
                      if (HIBYTE(v63) != 1) {
                        goto LABEL_92;
                      }
                      uint64_t v45 = v16 + 98;
                    }
                    else if (v62 == 2)
                    {
                      uint64_t v44 = HIBYTE(v63);
                      uint64_t v45 = v16 + 114;
                      if (HIBYTE(v63) != 1)
                      {
                        if (HIBYTE(v63)) {
                          goto LABEL_92;
                        }
                        uint64_t v45 = v16 + 122;
                      }
                    }
                    else
                    {
                      if (v62 || HIBYTE(v63) != 3)
                      {
LABEL_92:
                        int v23 = -1;
                        goto LABEL_94;
                      }
                      uint64_t v44 = 1;
                      uint64_t v45 = v16 + 106;
                    }
                    *(_WORD *)uint64_t v45 = *(unsigned __int8 *)(v16 + 24);
                    *(unsigned char *)(v45 + 2) = v43;
                    *(unsigned char *)(v45 + 3) = v44;
                    *(_WORD *)(v45 + 4) = v61;
                    *(unsigned char *)(v45 + 7) = v41;
                    *(unsigned char *)(v45 + 6) = v63 & 0xF | (v44 << 7);
                    if (v64[0] < ++v41)
                    {
                      uint64_t v3 = &byte_100A00000;
                      goto LABEL_90;
                    }
                  }
                  int v23 = v42;
LABEL_94:
                  BOOL v7 = &byte_100A00000;
                  uint64_t v3 = &byte_100A00000;
LABEL_95:
                  if (*v19)
                  {
                    (*(void (**)(void))(*(void *)*v19 + 72))(*v19);
                    *unsigned __int16 v19 = 0;
                  }
LABEL_97:
                  (*(void (**)(uint64_t))(*(void *)v55 + 24))(v55);
                  goto LABEL_98;
                }
                int v23 = -1;
              }
              BOOL v7 = &byte_100A00000;
              goto LABEL_95;
            }
            int v23 = v39;
            BOOL v7 = &byte_100A00000;
            goto LABEL_97;
          }
          if (v54 == *(unsigned char *)(v16 + 25))
          {
            *(void *)(v16 + 64) = theInterface;
            *(void *)(v16 + 48) = v55;
          }
          else
          {
            (*(void (**)(uint64_t))(*(void *)v55 + 24))(v55);
            ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
          }
LABEL_90:
          __int16 v29 = IOIteratorNext(v59);
          if (!v29) {
            goto LABEL_113;
          }
        }
        int v23 = v37;
        (*(void (**)(uint64_t))(*(void *)v55 + 24))(v55);
        ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
LABEL_106:
        BOOL v7 = &byte_100A00000;
        uint64_t v3 = &byte_100A00000;
LABEL_98:
        IOObjectRelease(v59);
        goto LABEL_99;
      }
LABEL_113:
      IOObjectRelease(v59);
      BOOL v7 = &byte_100A00000;
LABEL_114:
      uint64_t v46 = sub_100107DB4(v16, 0);
      if (v46)
      {
        int v23 = v46;
        sub_10025B778("[bm3_usb] BTDeviceSetPipeIdlePolicy failed with 0x%x\n");
        goto LABEL_42;
      }
      uint64_t v47 = (*(uint64_t (**)(void, uint64_t))(*(void *)*v19 + 32))(*v19, v16 + 80);
      if (!v47)
      {
        CFRunLoopAddSource(*((CFRunLoopRef *)v3 + 95), *(CFRunLoopSourceRef *)(v16 + 80), kCFRunLoopDefaultMode);
        uint64_t v47 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v16 + 48) + 32))(*(void *)(v16 + 48), v16 + 88);
        if (!v47)
        {
          CFRunLoopAddSource(*((CFRunLoopRef *)v3 + 95), *(CFRunLoopSourceRef *)(v16 + 88), kCFRunLoopDefaultMode);
          *((void *)v7 + 97) = v16;
          goto LABEL_121;
        }
      }
      int v23 = v47;
      sub_10025B778("[bm3_usb] CreateInterfaceAsyncEventSource failed with 0x%x\n");
LABEL_42:
      if (*v20)
      {
        CFRunLoopRemoveSource(*((CFRunLoopRef *)v3 + 95), *v20, kCFRunLoopDefaultMode);
        *unsigned int v20 = 0;
      }
      if (*v21)
      {
        CFRunLoopRemoveSource(*((CFRunLoopRef *)v3 + 95), *v21, kCFRunLoopDefaultMode);
        CFRunLoopSourceRef *v21 = 0;
      }
      sub_10025B778("[bm3_usb] error in BTDeviceConfigure");
      sub_10025B778("[bm3_usb] BTDeviceConfigure failed with %d\n", v23);
      sub_100106808(v16);
LABEL_47:
      ++v15;
    }
    while (v15 < dword_100A00268);
LABEL_119:
    if (!*((void *)v7 + 97))
    {
      sub_10025B778("[bm3_usb] Waiting for bluetooth devices...\n");
      if (pthread_cond_timedwait_relative_np((pthread_cond_t *)&xmmword_100A002B0, (pthread_mutex_t *)&xmmword_100A00270, &v51) == 60)
      {
        pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
        sub_10025B778("[bm3_usb] Timed out waiting for bluetooth devices\n");
        sub_1001066C8();
        sub_10025B778("[bm3_usb][OI_HciIfc_Init_USB] -- pthread_cond_timedwait_relative_np == ETIMEOUT", *(void *)byte7);
        return 114;
      }
    }
LABEL_121:
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
    uint64_t v8 = *((void *)v7 + 97);
  }
  while (!v8);
LABEL_20:
  if ((sub_1001178F0((pthread_mutex_t *)(v8 + 4112)) & 1) == 0)
  {
    sub_10025B778("[bm3_usb] writeMutex initialization failed...\n");
    sub_1001066C8();
    sub_10025B778("[bm3_usb][OI_HciIfc_Init_USB] -- OI_Mutex_Init(writeMutex) failed -- returned OI_FAIL", *(void *)byte7);
    return 114;
  }
  if ((sub_1001178F0((pthread_mutex_t *)(*((void *)v7 + 97) + 4176)) & 1) == 0)
  {
    sub_10025B778("[bm3_usb] readMutex initialization failed...\n");
    sub_1001066C8();
    sub_10025B778("[bm3_usb][OI_HciIfc_Init_USB] -- OI_Mutex_Init(readMutex) failed -- returned OI_FAIL", *(void *)byte7);
    return 114;
  }
  uint64_t v9 = *((void *)v7 + 97);
  int v10 = sub_100103FF8(v9, 0);
  if (v10) {
    goto LABEL_129;
  }
  unsigned __int16 v11 = sub_10010418C(v9, 4, 0, (unsigned __int16)((*(unsigned __int16 *)(v9 + 102) + 256)/ *(unsigned __int16 *)(v9 + 102)* *(_WORD *)(v9 + 102)));
  if (!v11)
  {
LABEL_128:
    sub_10025B778("[bm3_usb] PacketBufferCreate failed");
    int v10 = -1;
    goto LABEL_129;
  }
  int v10 = sub_100107E54((uint64_t)v11);
  if (v10)
  {
LABEL_129:
    sub_10025B778("[bm3_usb] BTDeviceStart failed with %d\n", v10);
    pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
    sub_1001066C8();
    sub_10025B778("[bm3_usb][OI_HciIfc_Init_USB] -- BTDeviceStart() failed -- returned OI_FAIL", *(void *)byte7a);
    return 114;
  }
  unsigned int v12 = sub_10010418C(v9, 2, 0, (unsigned __int16)((*(unsigned __int16 *)(v9 + 118) + 2047)/ *(unsigned __int16 *)(v9 + 118)* *(_WORD *)(v9 + 118)));
  if (!v12) {
    goto LABEL_128;
  }
  int v10 = sub_100107EB8((uint64_t)v12);
  if (v10) {
    goto LABEL_129;
  }
  uint64_t v13 = *((void *)v7 + 97);
  uint64_t result = 0;
  if (v13)
  {
    word_100A006C8 = *(_WORD *)(v13 + 20);
    word_100A006CA = *(_WORD *)(v13 + 22);
  }
  return result;
}

void sub_100106230(uint64_t a1, io_iterator_t a2)
{
  sub_10025B778("[bm3_usb][DeviceFoundCB] called\n");
  io_object_t v3 = IOIteratorNext(a2);
  if (v3)
  {
    io_registry_entry_t v4 = v3;
    do
    {
      memset(name, 0, 128);
      int v22 = 0;
      theInterface = 0;
      uint64_t v21 = 0;
      SInt32 theScore = 0;
      long long v37 = 0u;
      long long v38 = 0u;
      long long v35 = 0u;
      long long v36 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      long long v30 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      *(_OWORD *)buffer = 0u;
      sub_10025B778("[bm3_usb][RegisterBTDevice] called\n");
      if (IORegistryEntryGetName(v4, name))
      {
        __strlcpy_chk();
      }
      else
      {
        CFStringRef v5 = CFStringCreateWithCString(kCFAllocatorDefault, name, 0x600u);
        CFStringGetCString(v5, buffer, 256, 0x600u);
        CFRelease(v5);
      }
      CFUUIDRef v6 = CFUUIDGetConstantUUIDWithBytes(0, 0x9Du, 0xC7u, 0xB7u, 0x80u, 0x9Eu, 0xC0u, 0x11u, 0xD4u, 0xA5u, 0x4Fu, 0, 0xAu, 0x27u, 5u, 0x28u, 0x61u);
      CFUUIDRef v7 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
      if (IOCreatePlugInInterfaceForService(v4, v6, v7, &theInterface, &theScore))
      {
        sub_10025B778("[bm3_usb][RegisterBTDevice] -- USB -- IOCreatePlugInInterfaceForService () failed");
      }
      else
      {
        uint64_t v8 = theInterface;
        uint64_t v9 = "[bm3_usb][RegisterBTDevice] -- USB -- IOCreatePlugInInterfaceForService () failed";
        if (!theInterface) {
          goto LABEL_21;
        }
        QueryInterface = (*theInterface)->QueryInterface;
        CFUUIDRef v11 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x56u, 0xADu, 8u, 0x9Du, 0x87u, 0x8Du, 0x4Bu, 0xEAu, 0xA1u, 0xF5u, 0x2Cu, 0x8Du, 0xC4u, 0x3Eu, 0x8Au, 0x98u);
        CFUUIDBytes v12 = CFUUIDGetUUIDBytes(v11);
        int v13 = ((uint64_t (*)(IOCFPlugInInterface **, void, void, uint64_t *))QueryInterface)(v8, *(void *)&v12.byte0, *(void *)&v12.byte8, &v21);
        ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
        if (v13)
        {
          sub_10025B778("[bm3_usb][RegisterBTDevice] -- USB -- QueryInterface () failed");
        }
        else
        {
          uint64_t v9 = "[bm3_usb][RegisterBTDevice] -- USB -- QueryInterface () failed";
          if (!v21) {
            goto LABEL_21;
          }
          int v14 = (*(uint64_t (**)(uint64_t, int *))(*(void *)v21 + 160))(v21, &v22);
          uint64_t v9 = "[bm3_usb][RegisterBTDevice] -- USB -- GetLocationID () failed";
          if (v14) {
            goto LABEL_21;
          }
          if (qword_100A002F8)
          {
            int v15 = v22;
            uint64_t v16 = v21;
            int v17 = malloc_type_malloc(0x1098uLL, 0x10B004028872CDEuLL);
            sub_10025B778("[bm3_usb][BTDeviceCreate] called\n");
            bzero(v17, 0x1098uLL);
            *((void *)v17 + 1) = strdup(buffer);
            v17[4] = v15;
            *((void *)v17 + 4) = v16;
            if (!(*(unsigned int (**)(uint64_t, _DWORD *))(*(void *)v16 + 32))(v16, v17 + 18))
            {
              if (qword_100A002F8)
              {
                sub_10025B778("[bm3_usb][BTDeviceCreate] calling CFRunLoopAddSource()\n");
                CFRunLoopAddSource((CFRunLoopRef)qword_100A002F8, *((CFRunLoopSourceRef *)v17 + 9), kCFRunLoopDefaultMode);
              }
              else
              {
                sub_10025B778("[bm3_usb][BTDeviceCreate] gIOThreadInfo.runloop is NULL\n");
                free(*((void **)v17 + 1));
                free(v17);
                int v17 = 0;
              }
            }
            sub_10025B778("[bm3_usb][BTDeviceCreate] exited\n");
            if (!IOServiceAddInterestNotification((IONotificationPortRef)xmmword_100A002E0, v4, "IOGeneralInterest", (IOServiceInterestCallback)sub_100107B2C, v17, v17 + 7))
            {
              sub_10025B778("[bm3_usb][RegisterBTDevice] exited\n");
              if (v17)
              {
                pthread_mutex_lock((pthread_mutex_t *)&xmmword_100A00270);
                uint64_t v18 = dword_100A00268;
                if (dword_100A00268 <= 9)
                {
                  ++dword_100A00268;
                  *((void *)&xmmword_100A00210 + v18 + 1) = v17;
                }
                pthread_cond_signal((pthread_cond_t *)&xmmword_100A002B0);
                pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
              }
              goto LABEL_22;
            }
            sub_100107CA8(v17);
            uint64_t v9 = "[bm3_usb][RegisterBTDevice] -- USB -- IOServiceAddInterestNotification () failed";
LABEL_21:
            sub_10025B778(v9);
            goto LABEL_22;
          }
          sub_10025B778("[bm3_usb][RegisterBTDevice] -- USB -- gIOThreadInfo.runloop is NULL");
        }
      }
LABEL_22:
      IOObjectRelease(v4);
      io_registry_entry_t v4 = IOIteratorNext(a2);
    }
    while (v4);
  }
  sub_10025B778("[bm3_usb][DeviceFoundCB] exited\n");
}

void sub_1001066C8()
{
  sub_10025B778("[bm3_usb][Cleanup] called\n");
  if (qword_100A00308)
  {
    sub_1001179E0((pthread_mutex_t *)(qword_100A00308 + 4112));
    sub_1001179E0((pthread_mutex_t *)(qword_100A00308 + 4176));
  }
  sub_1001079FC();
  pthread_mutex_lock((pthread_mutex_t *)&xmmword_100A00270);
  qword_100A00308 = 0;
  if (dword_100A00268 >= 1)
  {
    uint64_t v0 = 0;
    do
      sub_100107CA8(*((_DWORD **)&xmmword_100A00210 + ++v0));
    while (v0 < dword_100A00268);
  }
  pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
  sub_10025B778("[bm3_usb][DestroyIOThread] called\n");
  sub_10025B778("[bm3_usb][DestroyIOThread] calling CFRunLoopStop()\n");
  CFRunLoopStop((CFRunLoopRef)qword_100A002F8);
  pthread_cancel((pthread_t)xmmword_100A00210);
  pthread_join((pthread_t)xmmword_100A00210, 0);
  qword_100A002F8 = 0;
  sub_10025B778("[bm3_usb][DestroyIOThread] gIOThreadInfo.runloop is set to NULL\n");
  IONotificationPortDestroy((IONotificationPortRef)xmmword_100A002E0);
  if (dword_100A002F0)
  {
    IOObjectRelease(dword_100A002F0);
    dword_100A002F0 = 0;
  }
  sub_10025B778("[bm3_usb][DestroyIOThread] exited\n");
  pthread_mutex_destroy((pthread_mutex_t *)&xmmword_100A00270);
  pthread_cond_destroy((pthread_cond_t *)&xmmword_100A002B0);

  sub_10025B778("[bm3_usb][Cleanup] exited\n");
}

void sub_100106808(uint64_t a1)
{
  sub_10025B778("[bm3_usb][BTDeviceClose] called\n");
  if (*(_DWORD *)a1)
  {
    *(_DWORD *)a1 = 0;
    if (qword_100A002F8)
    {
      io_object_t v2 = *(_DWORD *)(a1 + 28);
      if (v2) {
        IOObjectRelease(v2);
      }
      io_object_t v3 = *(__CFRunLoopSource **)(a1 + 80);
      if (v3)
      {
        CFRunLoopRemoveSource((CFRunLoopRef)qword_100A002F8, v3, kCFRunLoopDefaultMode);
        *(void *)(a1 + 80) = 0;
      }
      io_registry_entry_t v4 = *(__CFRunLoopSource **)(a1 + 88);
      if (v4)
      {
        CFRunLoopRemoveSource((CFRunLoopRef)qword_100A002F8, v4, kCFRunLoopDefaultMode);
        *(void *)(a1 + 88) = 0;
      }
      CFStringRef v5 = *(__CFRunLoopSource **)(a1 + 72);
      if (v5)
      {
        CFRunLoopRemoveSource((CFRunLoopRef)qword_100A002F8, v5, kCFRunLoopDefaultMode);
        *(void *)(a1 + 72) = 0;
      }
    }
    if (*(void *)(a1 + 40))
    {
      sub_10025B778("[bm3_usb] Closing firstInterface -- control, interrupt, and bulk pipe\n");
      (*(void (**)(void))(**(void **)(a1 + 40) + 72))(*(void *)(a1 + 40));
      *(void *)(a1 + 40) = 0;
      IODestroyPlugInInterface(*(IOCFPlugInInterface ***)(a1 + 56));
      (*(void (**)(void))(**(void **)(a1 + 56) + 24))(*(void *)(a1 + 56));
    }
    if (*(void *)(a1 + 48))
    {
      sub_10025B778("[bm3_usb] Closing firstInterface -- Isoch pipe\n");
      (*(void (**)(void))(**(void **)(a1 + 48) + 72))(*(void *)(a1 + 48));
      *(void *)(a1 + 48) = 0;
      IODestroyPlugInInterface(*(IOCFPlugInInterface ***)(a1 + 64));
      (*(void (**)(void))(**(void **)(a1 + 64) + 24))(*(void *)(a1 + 64));
    }
    if (*(void *)(a1 + 32))
    {
      sub_10025B778("[bm3_usb] Closing USB device interface\n");
      (*(void (**)(void))(**(void **)(a1 + 32) + 72))(*(void *)(a1 + 32));
      *(void *)(a1 + 32) = 0;
    }
  }

  sub_10025B778("[bm3_usb][BTDeviceClose] exited\n");
}

uint64_t sub_100106970()
{
  sub_10025B778("[bm3_usb][IOThreadFunc] called\n");
  unsigned int v0 = 0;
  unint64_t v77 = 0;
  uint64_t v1 = &byte_100A00000;
  mach_port_t v2 = kIOMainPortDefault;
  while (1)
  {
    CFMutableDictionaryRef v3 = IOServiceMatching("IOUSBHostDevice");
    if (v3) {
      break;
    }
    sub_10025B778("[bm3_usb][IOThreadFunc] -- USB -- Can't create a USB matching dictionary -- try again");
LABEL_135:
    sleep(1u);
    if (v0++ >= 0xF)
    {
      byte_100A00740 = 1;
      sub_10025B778("[bm3_usb][IOThreadFunc] -- Error -- Still cannot find USB Bluetooth Controller after 15 seconds ");
      pthread_mutex_lock(&stru_100A00700);
      pthread_cond_signal(&stru_100A006D0);
      pthread_mutex_unlock(&stru_100A00700);
      return 0;
    }
  }
  CFMutableDictionaryRef v4 = v3;
  sub_10025B778("[bm3_usb][IOThreadFunc] -- USB -- calling GetProductAndVendorID()");
  io_iterator_t existing = 0;
  CFDictionaryRef v5 = IOServiceMatching("IOUSBHostDevice");
  if (IOServiceGetMatchingServices(v2, v5, &existing) || !existing)
  {
LABEL_132:
    int v61 = *((unsigned __int16 *)v1 + 868);
    if (*((_WORD *)v1 + 868) && word_100A006CA)
    {
      LODWORD(v77) = (unsigned __int16)word_100A006CA;
      HIDWORD(v77) = v61;
      goto LABEL_139;
    }
    CFRelease(v4);
    sub_10025B778("[bm3_usb][IOThreadFunc] -- USB -- Can't obtain vendorID and productID -- try again");
    goto LABEL_135;
  }
  uint64_t v71 = v4;
  CFStringRef v6 = CFStringCreateWithCString(kCFAllocatorDefault, "USB Vendor Name", 0x600u);
  CFStringRef key = CFStringCreateWithCString(kCFAllocatorDefault, "USB Product Name", 0x600u);
  CFStringRef cf = CFStringCreateWithCString(kCFAllocatorDefault, "idVendor", 0x600u);
  CFStringRef v74 = CFStringCreateWithCString(kCFAllocatorDefault, "idProduct", 0x600u);
  CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorDefault, "bDeviceClass", 0x600u);
  CFStringRef v73 = CFStringCreateWithCString(kCFAllocatorDefault, "locationID", 0x600u);
  CFStringRef theString1 = CFStringCreateWithCString(kCFAllocatorDefault, "Bluetooth USB Host Controller", 0x600u);
  io_object_t v8 = IOIteratorNext(existing);
  if (!v8)
  {
    sub_10025B778("[bm3_usb][GetProductAndVendorID] -- Use internal Bluetooth USB Host Controller \n");
LABEL_131:
    IOObjectRelease(existing);
    CFRelease(v6);
    CFRelease(key);
    CFRelease(cf);
    CFRelease(v74);
    CFRelease(v7);
    CFRelease(v73);
    CFRelease(theString1);
    mach_port_t v2 = kIOMainPortDefault;
    uint64_t v1 = &byte_100A00000;
    CFMutableDictionaryRef v4 = v71;
    goto LABEL_132;
  }
  io_registry_entry_t v9 = v8;
  unsigned int v68 = 0;
  unsigned int v69 = 0;
  char v70 = 0;
  do
  {
    CFMutableDictionaryRef properties = 0;
    if (!IORegistryEntryCreateCFProperties(v9, &properties, 0, 0))
    {
      uint64_t v78 = 0;
      uint64_t valuePtr = 0;
      CFStringRef Value = (const __CFString *)CFDictionaryGetValue(properties, v6);
      CFStringRef v11 = (const __CFString *)CFDictionaryGetValue(properties, key);
      CFNumberRef v12 = (const __CFNumber *)CFDictionaryGetValue(properties, cf);
      CFNumberRef v13 = (const __CFNumber *)CFDictionaryGetValue(properties, v74);
      CFNumberRef v14 = (const __CFNumber *)CFDictionaryGetValue(properties, v73);
      CFNumberRef v15 = (const __CFNumber *)CFDictionaryGetValue(properties, v7);
      if (CFNumberGetValue(v13, kCFNumberIntType, (char *)&valuePtr + 4))
      {
        if (CFNumberGetValue(v12, kCFNumberIntType, &valuePtr)
          && CFNumberGetValue(v15, kCFNumberIntType, &v78)
          && CFNumberGetValue(v14, kCFNumberIntType, (char *)&v78 + 4)
          && (v78 - 224) <= 0x1F
          && ((1 << (v78 + 32)) & 0x80008001) != 0)
        {
          CStringPtr = CFStringGetCStringPtr(v11, 0x600u);
          int v17 = CFStringGetCStringPtr(Value, 0x600u);
          sub_10025B778("[bm3_usb][GetProductAndVendorID] -- Found USB Device : \n");
          sub_10025B778("    USB Product Name = %s \n", CStringPtr);
          sub_10025B778("     USB Vendor Name = %s \n", v17);
          sub_10025B778("            idVendor = 0x%04x \n", valuePtr);
          sub_10025B778("           idProduct = 0x%04x \n", HIDWORD(valuePtr));
          sub_10025B778("         deviceClass = 0x%02x (%d) \n", v78, v78);
          sub_10025B778("          locationID = 0x%08x \n", HIDWORD(v78));
          if (v11 && CFEqual(theString1, v11))
          {
            unsigned int v68 = valuePtr;
            char v70 = 1;
            unsigned int v69 = HIDWORD(valuePtr);
            goto LABEL_8;
          }
          if (valuePtr == 0x110A000005ACLL)
          {
            sub_10025B778("[bm3_usb][GetProductAndVendorID] -- idVendor = 0x%04x, idProduct = 0x%04x -- Apple USB-C to 3.5mm Headphone Jack Adapter -- ignore\n");
            goto LABEL_8;
          }
          if (valuePtr == 0x341000000451)
          {
            sub_10025B778("[bm3_usb][GetProductAndVendorID] -- idVendor = 0x%04x, idProduct = 0x%04x -- Texas Instruments USB device -- ignore\n");
            goto LABEL_8;
          }
          uint64_t v86 = 0;
          theInterface = 0;
          memset(name, 0, 128);
          int v85 = 0;
          unsigned __int8 v84 = 0;
          SInt32 theScore = 0;
          memset(buffer, 0, sizeof(buffer));
          if (IORegistryEntryGetName(v9, name))
          {
            __strlcpy_chk();
          }
          else
          {
            CFStringRef v18 = CFStringCreateWithCString(kCFAllocatorDefault, name, 0x600u);
            CFStringGetCString(v18, (char *)buffer, 256, 0x600u);
            CFRelease(v18);
          }
          CFUUIDRef v19 = CFUUIDGetConstantUUIDWithBytes(0, 0x9Du, 0xC7u, 0xB7u, 0x80u, 0x9Eu, 0xC0u, 0x11u, 0xD4u, 0xA5u, 0x4Fu, 0, 0xAu, 0x27u, 5u, 0x28u, 0x61u);
          CFUUIDRef v20 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
          if (!IOCreatePlugInInterfaceForService(v9, v19, v20, &theInterface, &theScore))
          {
            uint64_t v21 = theInterface;
            if (theInterface)
            {
              QueryInterface = (*theInterface)->QueryInterface;
              CFUUIDRef v23 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x56u, 0xADu, 8u, 0x9Du, 0x87u, 0x8Du, 0x4Bu, 0xEAu, 0xA1u, 0xF5u, 0x2Cu, 0x8Du, 0xC4u, 0x3Eu, 0x8Au, 0x98u);
              CFUUIDBytes v24 = CFUUIDGetUUIDBytes(v23);
              int v25 = ((uint64_t (*)(IOCFPlugInInterface **, void, void, uint64_t *))QueryInterface)(v21, *(void *)&v24.byte0, *(void *)&v24.byte8, &v86);
              ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
              if (!v25)
              {
                if (v86)
                {
                  if ((*(unsigned int (**)(uint64_t, int *))(*(void *)v86 + 160))(v86, &v85)
                    || (long long v26 = malloc_type_malloc(0x1098uLL, 0x10B004028872CDEuLL)) == 0)
                  {
                    (*(void (**)(uint64_t))(*(void *)v86 + 24))(v86);
                    goto LABEL_8;
                  }
                  long long v27 = v26;
                  bzero(v26, 0x1098uLL);
                  v27[1] = strdup((const char *)buffer);
                  *((_DWORD *)v27 + 4) = v85;
                  uint64_t v28 = v86;
                  v27[4] = v86;
                  if ((*(unsigned int (**)(uint64_t))(*(void *)v28 + 232))(v28))
                  {
                    uint64_t v29 = v86;
                  }
                  else
                  {
                    *(_DWORD *)long long v27 = 1;
                    v27[5] = 0;
                    long long v30 = (IOCFPlugInInterface ***)(v27 + 5);
                    v27[6] = 0;
                    v27[10] = 0;
                    v27[11] = 0;
                    if (!(*(unsigned int (**)(void, unsigned __int8 *))(*(void *)v27[4] + 152))(v27[4], &v84))
                    {
                      if (v84)
                      {
                        uint64_t v82 = 0;
                        if (!(*(unsigned int (**)(void, void, uint64_t *))(*(void *)v27[4] + 168))(v27[4], 0, &v82))
                        {
                          unsigned __int8 v33 = 0;
                          uint64_t v66 = v27;
                          uint64_t v67 = (IOCFPlugInInterface ***)(v27 + 5);
                          do
                          {
                            if ((*(unsigned int (**)(void, void))(*(void *)v27[4] + 184))(v27[4], *(unsigned __int8 *)(v82 + 5)))
                            {
                              break;
                            }
                            io_iterator_t iterator = 0;
                            unint64_t v92 = 0xFFFF00010001FFFFLL;
                            NSObject *v30 = 0;
                            v30[1] = 0;
                            if (!(*(unsigned int (**)(void, unint64_t *, io_iterator_t *))(*(void *)v27[4] + 224))(v27[4], &v92, &iterator))
                            {
                              *((_WORD *)v27 + 12) = 256;
                              io_object_t v34 = IOIteratorNext(iterator);
                              if (v34)
                              {
                                io_service_t v35 = v34;
                                while (1)
                                {
                                  uint64_t v91 = 0;
                                  SInt32 v90 = 0;
                                  uint64_t v89 = 0;
                                  char v88 = 0;
                                  CFUUIDRef v36 = CFUUIDGetConstantUUIDWithBytes(0, 0x2Du, 0x97u, 0x86u, 0xC6u, 0x9Eu, 0xF3u, 0x11u, 0xD4u, 0xADu, 0x51u, 0, 0xAu, 0x27u, 5u, 0x28u, 0x61u);
                                  CFUUIDRef v37 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
                                  LODWORD(v36) = IOCreatePlugInInterfaceForService(v35, v36, v37, &v91, &v90);
                                  IOObjectRelease(v35);
                                  if (v36) {
                                    goto LABEL_123;
                                  }
                                  long long v38 = v91;
                                  if (!v91) {
                                    goto LABEL_123;
                                  }
                                  __int16 v39 = (*v91)->QueryInterface;
                                  CFUUIDRef v40 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x87u, 0x52u, 0x66u, 0x3Bu, 0xC0u, 0x7Bu, 0x4Bu, 0xAEu, 0x95u, 0x84u, 0x22u, 3u, 0x2Fu, 0xABu, 0x9Cu, 0x5Au);
                                  CFUUIDBytes v41 = CFUUIDGetUUIDBytes(v40);
                                  if (((unsigned int (*)(IOCFPlugInInterface **, void, void, IOCFPlugInInterface ***))v39)(v38, *(void *)&v41.byte0, *(void *)&v41.byte8, &v89))
                                  {
                                    BOOL v42 = 1;
                                  }
                                  else
                                  {
                                    BOOL v42 = v89 == 0;
                                  }
                                  if (v42) {
                                    goto LABEL_120;
                                  }
                                  if (((unsigned int (*)(void))(*v89)[2].QueryInterface)()) {
                                    break;
                                  }
                                  if (v88 == *((unsigned char *)v27 + 24))
                                  {
                                    uint64_t v43 = v27[7];
                                    if (v43) {
                                      (*(void (**)(uint64_t))(*(void *)v43 + 24))(v43);
                                    }
                                    v27[7] = v91;
                                    uint64_t v44 = v89;
                                    if (((unsigned int (*)(IOCFPlugInInterface **))(*v89)[1]._reserved)(v89)) {
                                      goto LABEL_121;
                                    }
                                    v98[0] = 0;
                                    NSObject *v30 = v44;
                                    char v45 = 0;
                                    if (((unsigned int (*)(IOCFPlugInInterface **, unsigned __int8 *))(*v44)[2].Release)(v44, v98)|| v98[0] != 3)
                                    {
                                      char v47 = 0;
                                      char v46 = 0;
                                    }
                                    else
                                    {
                                      char v46 = 0;
                                      char v47 = 0;
                                      char v45 = 0;
                                      for (unsigned __int8 i = 1; v98[0] >= i; ++i)
                                      {
                                        LOBYTE(v95) = 0;
                                        unsigned __int8 v100 = 0;
                                        __int16 v97 = 0;
                                        *(_WORD *)uint64_t v99 = 0;
                                        if (((unsigned int (*)(IOCFPlugInInterface **, void, __int16 *, unsigned __int8 *, char *, unsigned char *, __int16 *))(*v44)[3].AddRef)(v44, i, &v95, &v100, (char *)&v97 + 1, v99, &v97))
                                        {
                                          break;
                                        }
                                        if (HIBYTE(v97) == 3)
                                        {
                                          if (v95 != 1) {
                                            break;
                                          }
                                          char v45 = 1;
                                        }
                                        else if (HIBYTE(v97) == 2)
                                        {
                                          if (v95 == 1)
                                          {
                                            char v47 = 1;
                                          }
                                          else
                                          {
                                            if ((_BYTE)v95) {
                                              break;
                                            }
                                            char v46 = 1;
                                          }
                                        }
                                        else if (HIBYTE(v97) || v95 != 3)
                                        {
                                          break;
                                        }
                                      }
                                    }
                                    long long v30 = v67;
                                    if (*v67)
                                    {
                                      ((void (*)(IOCFPlugInInterface **))(**v67)[1].QueryInterface)(*v67);
                                      void *v67 = 0;
                                    }
                                    char v59 = v45 & v47 & v46;
                                    ((void (*)(IOCFPlugInInterface **))(*v89)->Release)(v89);
                                    long long v27 = v66;
                                    if ((v59 & 1) == 0) {
                                      goto LABEL_123;
                                    }
                                  }
                                  else if (v88 == *((unsigned char *)v27 + 25))
                                  {
                                    uint64_t v49 = v27[8];
                                    if (v49) {
                                      (*(void (**)(uint64_t))(*(void *)v49 + 24))(v49);
                                    }
                                    v27[8] = v91;
                                    unsigned int v50 = v89;
                                    memset(v99, 0, sizeof(v99));
                                    memset(v98, 0, 7);
                                    if (((unsigned int (*)(IOCFPlugInInterface **))(*v89)[1]._reserved)(v89))
                                    {
LABEL_121:
                                      int v60 = v89;
                                      goto LABEL_122;
                                    }
                                    uint64_t v51 = 0;
                                    unsigned __int8 v100 = 0;
                                    v27[6] = v50;
LABEL_85:
                                    if (!((unsigned int (*)(IOCFPlugInInterface **, void))(*v50)[2].Start)(v50, v51)&& !((unsigned int (*)(IOCFPlugInInterface **, unsigned __int8 *))(*v50)[2].Release)(v50, &v100)&& v100 == 2)
                                    {
                                      unsigned __int8 v53 = 1;
                                      while (1)
                                      {
                                        __int16 v97 = 0;
                                        char v96 = 0;
                                        __int16 v95 = 0;
                                        char v94 = 0;
                                        if (((unsigned int (*)(IOCFPlugInInterface **, void, char *, __int16 *, char *, __int16 *, char *))(*v50)[3].AddRef)(v50, v53, (char *)&v97 + 1, &v97, &v96, &v95, &v94)|| v96 != 1)
                                        {
                                          break;
                                        }
                                        if (HIBYTE(v97) == 1)
                                        {
                                          uint64_t v55 = v99;
                                        }
                                        else
                                        {
                                          if (HIBYTE(v97)) {
                                            break;
                                          }
                                          uint64_t v55 = v98;
                                        }
                                        v55[v51] = 1;
                                        if (v100 < ++v53)
                                        {
                                          if (++v51 != 7) {
                                            goto LABEL_85;
                                          }
                                          break;
                                        }
                                      }
                                    }
                                    uint64_t v56 = v27[6];
                                    if (v56)
                                    {
                                      (*(void (**)(uint64_t))(*(void *)v56 + 72))(v56);
                                      v27[6] = 0;
                                    }
                                    uint64_t v57 = 0;
                                    char v58 = 1;
                                    long long v30 = v67;
                                    do
                                    {
                                      if (!v99[v57] || !v98[v57]) {
                                        char v58 = 0;
                                      }
                                      ++v57;
                                    }
                                    while (v57 != 6);
                                    ((void (*)(IOCFPlugInInterface **))(*v89)->Release)(v89);
                                    if ((v58 & 1) == 0) {
                                      goto LABEL_123;
                                    }
                                  }
                                  else
                                  {
                                    ((void (*)(IOCFPlugInInterface **))(*v89)->Release)(v89);
                                    ((void (*)(IOCFPlugInInterface **))(*v91)->Release)(v91);
                                  }
                                  io_service_t v35 = IOIteratorNext(iterator);
                                  if (!v35) {
                                    goto LABEL_123;
                                  }
                                }
                                ((void (*)(IOCFPlugInInterface **))(*v89)->Release)(v89);
LABEL_120:
                                int v60 = v91;
LABEL_122:
                                ((void (*)(IOCFPlugInInterface **))(*v60)->Release)(v60);
                              }
LABEL_123:
                              IOObjectRelease(iterator);
                            }
                            if (v84 <= ++v33) {
                              break;
                            }
                            uint64_t v82 = 0;
                          }
                          while (!(*(unsigned int (**)(void, void, uint64_t *))(*(void *)v27[4] + 168))(v27[4], v33, &v82));
                        }
                      }
                    }
                    (*(void (**)(void))(*(void *)v27[4] + 72))(v27[4]);
                    (*(void (**)(uint64_t))(*(void *)v86 + 24))(v86);
                    long long v31 = (void *)v27[1];
                    if (v31) {
                      free(v31);
                    }
                    uint64_t v32 = v27[7];
                    if (v32)
                    {
                      (*(void (**)(uint64_t))(*(void *)v32 + 24))(v32);
                      v27[7] = 0;
                    }
                    uint64_t v29 = v27[8];
                    if (!v29) {
                      goto LABEL_46;
                    }
                  }
                  (*(void (**)(uint64_t))(*(void *)v29 + 24))(v29);
LABEL_46:
                  free(v27);
                }
              }
            }
          }
        }
      }
    }
LABEL_8:
    if (properties) {
      CFRelease(properties);
    }
    IOObjectRelease(v9);
    io_registry_entry_t v9 = IOIteratorNext(existing);
  }
  while (v9);
  sub_10025B778("[bm3_usb][GetProductAndVendorID] -- Use internal Bluetooth USB Host Controller \n");
  if ((v70 & 1) == 0) {
    goto LABEL_131;
  }
  unint64_t v77 = __PAIR64__(v68, v69);
  sub_10025B778("[bm3_usb][GetProductAndVendorID] -- Found internal Bluetooth USB Host Controller -- vendorID = 0x%04x, produceID = 0x%04x \n", v68, v69);
  IOObjectRelease(existing);
  CFRelease(v6);
  CFRelease(key);
  CFRelease(cf);
  CFRelease(v74);
  CFRelease(v7);
  CFRelease(v73);
  CFRelease(theString1);
  mach_port_t v2 = kIOMainPortDefault;
  CFMutableDictionaryRef v4 = v71;
  if (!v68 || !v69)
  {
    LODWORD(v77) = (unsigned __int16)word_100A006CA;
    HIDWORD(v77) = (unsigned __int16)word_100A006C8;
  }
LABEL_139:
  CFNumberRef v63 = CFNumberCreate(kCFAllocatorDefault, kCFNumberSInt32Type, (char *)&v77 + 4);
  CFDictionarySetValue(v4, @"idVendor", v63);
  CFRelease(v63);
  CFNumberRef v64 = CFNumberCreate(kCFAllocatorDefault, kCFNumberSInt32Type, &v77);
  CFDictionarySetValue(v4, @"idProduct", v64);
  CFRelease(v64);
  *(void *)&xmmword_100A002E0 = IONotificationPortCreate(v2);
  *((void *)&xmmword_100A002E0 + 1) = IONotificationPortGetRunLoopSource((IONotificationPortRef)xmmword_100A002E0);
  sub_10025B778("[bm3_usb][IOThreadFunc] -- setting gIOThreadInfo.runloop to CFRunLoopGetCurrent()\n");
  qword_100A002F8 = (uint64_t)CFRunLoopGetCurrent();
  CFRunLoopAddSource((CFRunLoopRef)qword_100A002F8, *((CFRunLoopSourceRef *)&xmmword_100A002E0 + 1), kCFRunLoopDefaultMode);
  IOServiceAddMatchingNotification((IONotificationPortRef)xmmword_100A002E0, "IOServiceFirstMatch", v4, (IOServiceMatchingCallback)sub_100106230, 0, (io_iterator_t *)&dword_100A002F0);
  pthread_mutex_lock(&stru_100A00700);
  LODWORD(qword_100A00300) = 1;
  pthread_cond_signal(&stru_100A006D0);
  pthread_mutex_unlock(&stru_100A00700);
  sub_10025B778("[bm3_usb][IOThreadFunc] calling CFRunLoopRun()\n");
  CFRunLoopRun();
  return 0;
}

uint64_t sub_1001078C0()
{
  bzero(__dst, 0x320uLL);
  pthread_mutex_lock(&stru_100A00700);
  dword_100A00390 = 1;
  pthread_cond_signal(&stru_100A006D0);
  pthread_mutex_unlock(&stru_100A00700);
  while (1)
  {
    pthread_mutex_lock(&stru_100A00350);
    BOOL v0 = dword_100A00390 == 0;
    BOOL v1 = dword_100A00390 != 0;
    for (int i = dword_100A006B8; !v0 && i == 0; int i = dword_100A006B8)
    {
      pthread_cond_wait(&stru_100A00320, &stru_100A00350);
      BOOL v0 = dword_100A00390 == 0;
      BOOL v1 = dword_100A00390 != 0;
    }
    if (!v1) {
      break;
    }
    if (i >= 1) {
      memcpy(__dst, &unk_100A00398, 8 * i);
    }
    dword_100A006B8 = 0;
    pthread_mutex_unlock(&stru_100A00350);
    sub_100103D38(__dst, i);
  }
  pthread_mutex_unlock(&stru_100A00350);
  return 0;
}

uint64_t sub_1001079FC()
{
  pthread_mutex_lock(&stru_100A00350);
  dword_100A00390 = 0;
  sub_1000232E0();
  pthread_cond_signal(&stru_100A00320);
  pthread_mutex_unlock(&stru_100A00350);
  pthread_join((pthread_t)qword_100A00318[0], 0);
  sub_100023344();
  if (dword_100A006B8 >= 1)
  {
    uint64_t v0 = 0;
    do
    {
      BOOL v1 = (void **)qword_100A00318[v0 + 16];
      free(v1[2]);
      free(v1);
      ++v0;
    }
    while (v0 < dword_100A006B8);
  }
  dword_100A006B8 = 0;
  uint64_t v2 = qword_100A006C0;
  CFMutableDictionaryRef v3 = (pthread_mutex_t *)(qword_100A006C0 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(qword_100A006C0 + 16));
  if (*(int *)(v2 + 12) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      CFDictionaryRef v5 = *(void ***)(*(void *)v2 + 8 * v4);
      free(v5[2]);
      free(v5);
      ++v4;
    }
    while (v4 < *(int *)(v2 + 12));
  }
  free(*(void **)v2);
  pthread_mutex_unlock(v3);
  pthread_mutex_destroy(v3);
  free((void *)v2);
  pthread_mutex_destroy(&stru_100A00350);

  return pthread_cond_destroy(&stru_100A00320);
}

void sub_100107B2C(uint64_t a1, uint64_t a2, int a3)
{
  if (a3 == -536870064)
  {
    uint64_t v16 = "[bm3_usb][DeviceNotificationCB] -- kIOMessageDeviceSignaledWakeup -- HIDShim ";
  }
  else
  {
    if (a3 != -536870896) {
      return;
    }
    sub_10025B778("[bm3_usb][DeviceNotificationCB] -- kIOMessageServiceIsTerminated -- HIDShim ");
    sub_10025B778("[bm3_usb][BTDeviceRemoved] called\n");
    if (qword_100A00308)
    {
      if (a1) {
        sub_10025B778("[bm3_usb] Bluetooth device removed: %s \n", *(const char **)(a1 + 8));
      }
      pthread_mutex_lock((pthread_mutex_t *)&xmmword_100A00270);
      int v4 = dword_100A00268;
      if (dword_100A00268 >= 1)
      {
        uint64_t v5 = 0;
        CFStringRef v6 = &qword_100A00220;
        do
        {
          CFStringRef v7 = (char *)&xmmword_100A00210 + 8 * v5;
          uint64_t v9 = *((void *)v7 + 1);
          io_object_t v8 = v7 + 8;
          if (v9 == a1)
          {
            *io_object_t v8 = 0;
            uint64_t v10 = v5 + 1;
            uint64_t v11 = (v4 - 1);
            if (v5 + 1 < v4)
            {
              CFNumberRef v12 = (void *)&xmmword_100A00210 + v5 + 1;
              uint64_t v13 = v11 - v5;
              CFNumberRef v14 = v6;
              do
              {
                uint64_t v15 = *v14++;
                *v12++ = v15;
                --v13;
              }
              while (v13);
            }
            dword_100A00268 = v11;
            uint64_t v5 = v10;
            int v4 = v11;
          }
          else
          {
            ++v5;
          }
          ++v6;
        }
        while (v5 < v4);
      }
      pthread_cond_signal((pthread_cond_t *)&xmmword_100A002B0);
      pthread_mutex_unlock((pthread_mutex_t *)&xmmword_100A00270);
      sub_100107CA8((_DWORD *)a1);
      uint64_t v16 = "[bm3_usb][BTDeviceRemoved] exited\n";
    }
    else
    {
      uint64_t v16 = "[bm3_usb][BTDeviceRemoved] exited -- Already removed\n";
    }
  }

  sub_10025B778(v16);
}

void sub_100107CA8(_DWORD *a1)
{
  sub_10025B778("[bm3_usb][BTDeviceDestroy] called\n");
  if (a1 && *a1)
  {
    sub_100106808((uint64_t)a1);
    uint64_t v2 = (void **)*((void *)a1 + 19);
    if (v2)
    {
      free(v2[2]);
      free(v2);
    }
    CFMutableDictionaryRef v3 = (void **)*((void *)a1 + 20);
    if (v3)
    {
      free(v3[2]);
      free(v3);
    }
    int v4 = (void **)*((void *)a1 + 21);
    if (v4)
    {
      free(v4[2]);
      free(v4);
    }
    for (uint64_t i = 0; i != 8; i += 2)
    {
      CFStringRef v6 = &a1[i];
      CFStringRef v7 = *(void **)&a1[i + 44];
      if (v7)
      {
        sub_100104140(v7);
        *((void *)v6 + 22) = 0;
      }
      io_object_t v8 = (void *)*((void *)v6 + 26);
      if (v8)
      {
        sub_100104140(v8);
        *((void *)v6 + 26) = 0;
      }
    }
    free(*((void **)a1 + 1));
    if ((_DWORD *)qword_100A00308 == a1)
    {
      sub_10025B778("[bm3_usb][BTDeviceDestroy] active device\n");
      qword_100A00308 = 0;
    }
    free(a1);
  }

  sub_10025B778("[bm3_usb][BTDeviceDestroy] exited\n");
}

uint64_t sub_100107DB4(uint64_t a1, int a2)
{
  if (a1 && (uint64_t v3 = *(void *)(a1 + 40)) != 0 && *(void *)v3)
  {
    if (a2) {
      uint64_t v4 = 100;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 624))();
    if (!result)
    {
      uint64_t result = (*(uint64_t (**)(void, void, uint64_t))(**(void **)(a1 + 40) + 624))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 121), v4);
      if (!result) {
        return (*(uint64_t (**)(void, void, uint64_t))(**(void **)(a1 + 40) + 624))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 129), v4);
      }
    }
  }
  else
  {
    sub_10025B778("[bm3_usb][BTDeviceSetPipeIdlePolicy] -- btdev or firstInterface is NULL\n");
    return 3758097088;
  }
  return result;
}

uint64_t sub_100107E54(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void, void, void (*)(uint64_t, uint64_t, int)))(**(void **)(*(void *)a1 + 40) + 264))(*(void *)(*(void *)a1 + 40), *(unsigned __int8 *)(*(void *)a1 + 105), *(void *)(a1 + 16), *(unsigned __int16 *)(a1 + 12), sub_100107F1C);
  if (v1) {
    sub_10018EE24(1205);
  }
  return v1;
}

uint64_t sub_100107EB8(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void, void, void (*)(uint64_t, uint64_t, int)))(**(void **)(*(void *)a1 + 40) + 264))(*(void *)(*(void *)a1 + 40), *(unsigned __int8 *)(*(void *)a1 + 121), *(void *)(a1 + 16), *(unsigned __int16 *)(a1 + 12), sub_1001080B0);
  if (v1) {
    sub_10018EE24(1205);
  }
  return v1;
}

void sub_100107F1C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = *(void *)a1;
  if (*(void *)a1)
  {
    if (*(_DWORD *)v3 && qword_100A00308 != 0)
    {
      if (a2)
      {
        if (a2 == -536870165)
        {
          CFStringRef v7 = *(char **)(v3 + 152);
          if (v7)
          {
            sub_100103DDC(v7);
            *(void *)(v3 + 152) = 0;
          }
          return;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"InterruptPipeReadCB failed with 0x%x %s", v8, v9, v10, v11, v12, v13, v14, a2);
          uint64_t v15 = sub_100050B4C(0x3Au);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(_WORD *)(a1 + 24) = a3;
        if (!a3
          || !sub_100105228(v3, 4, 2u, 0x101u, (char **)(v3 + 152), *(void *)(a1 + 16), (unsigned __int16)a3))
        {
LABEL_20:
          if (dword_100A00390)
          {
            *(_WORD *)(a1 + 24) = 0;
            sub_100107E54(a1);
          }
          return;
        }
      }
      uint64_t v16 = *(char **)(v3 + 152);
      if (v16)
      {
        sub_100103DDC(v16);
        *(void *)(v3 + 152) = 0;
      }
      if (*(_DWORD *)v3)
      {
        sub_100023344();
        sub_10018EDB8(1212);
        sub_1000232E0();
        goto LABEL_20;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"InterruptPipeReadCB btdev->open is false", v17, v18, v19, v20, v21, v22, v23, v25);
        CFUUIDBytes v24 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

void sub_1001080B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = *(void *)a1;
  if (*(void *)a1)
  {
    if (*(_DWORD *)v3 && qword_100A00308 != 0)
    {
      if (a2)
      {
        if (a2 == -536870165)
        {
          CFStringRef v7 = *(char **)(v3 + 160);
          if (v7)
          {
            sub_100103DDC(v7);
            *(void *)(v3 + 160) = 0;
          }
          return;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"BulkPipeReadCB failed with 0x%x %s", v8, v9, v10, v11, v12, v13, v14, a2);
          uint64_t v15 = sub_100050B4C(0x3Au);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(_WORD *)(a1 + 24) = a3;
        if (!a3
          || !sub_100105228(v3, 2, 4u, 0xFFFFu, (char **)(v3 + 160), *(void *)(a1 + 16), (unsigned __int16)a3))
        {
LABEL_20:
          if (dword_100A00390)
          {
            *(_WORD *)(a1 + 24) = 0;
            sub_100107EB8(a1);
          }
          return;
        }
      }
      uint64_t v16 = *(char **)(v3 + 160);
      if (v16)
      {
        sub_100103DDC(v16);
        *(void *)(v3 + 160) = 0;
      }
      if (*(_DWORD *)v3)
      {
        sub_100023344();
        sub_10018EDB8(1210);
        sub_1000232E0();
        goto LABEL_20;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BulkPipeReadCB btdev->open is false", v17, v18, v19, v20, v21, v22, v23, v25);
        CFUUIDBytes v24 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

uint64_t sub_100108244()
{
  return 0;
}

uint64_t sub_10010824C()
{
  return 0;
}

uint64_t sub_100108274()
{
  return 2048;
}

char *sub_10010827C(uint64_t a1, char a2, const void *a3, unsigned int a4)
{
  CFStringRef v6 = (char *)sub_10010418C(a1, a2, a4, a4);
  CFStringRef v7 = v6;
  if (v6 && sub_100105450((uint64_t)v6, a3, a4) < a4)
  {
    sub_100103DDC(v7);
    return 0;
  }
  return v7;
}

void sub_1001082E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v39 = 0u;
  memset(v40, 0, sizeof(v40));
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v26 = 0u;
  sub_10025B74C((uint64_t)&v26, 250, (uint64_t)"USB %s -- %s failed -- error (0x%x) -- exit(0) -- Restart bluetoothd", a4, a5, a6, a7, a8, a3);
  sub_10011631C((const char *)&v26);
  if (**(void **)(a1 + 32))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Bluetooth error - simulated -- %s Error -- build=release, reason=%d", v10, v11, v12, v13, v14, v15, v16, a4);
      uint64_t v17 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v25 = sub_100050714();
        _os_log_fault_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "%{public}s", buf, 0xCu);
      }
    }
    uint64_t v18 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 32) + 296))(*(void *)(a1 + 32), 0);
    sub_10025B778("[bm3_usb] USBDeviceReEnumerate() returned 0x%0x", v18);
    long long v39 = 0u;
    memset(v40, 0, sizeof(v40));
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v26 = 0u;
    sub_10025B74C((uint64_t)&v26, 250, (uint64_t)"USBDeviceReEnumerate() returned 0x%0x", v19, v20, v21, v22, v23, v18);
    sub_10011631C((const char *)&v26);
  }
  exit(0);
}

uint64_t sub_100108450()
{
  if (qword_100A00308) {
    sub_100107DB4(qword_100A00308, 1);
  }
  return 0;
}

uint64_t sub_10010847C()
{
  if (qword_100A00308) {
    sub_100107DB4(qword_100A00308, 0);
  }
  return 0;
}

uint64_t sub_1001084A8()
{
  byte_100A00310 = 0;
  if (!qword_100A00308) {
    return 113;
  }
  uint64_t v0 = *(void *)(qword_100A00308 + 48);
  *(_WORD *)(qword_100A00308 + 4106) = 0;
  if (!v0) {
    return 113;
  }
  (*(void (**)(uint64_t))(*(void *)v0 + 72))(v0);
  sub_10025B778("[bm3_usb][OI_HciIfc_DisableSCO_USB] -- ISOC interface for SCO is closed\n");
  return 0;
}

BOOL sub_100108508()
{
  return dword_100A197EC && *(unsigned char *)(qword_100A00748 + 33) != 0;
}

void sub_100108538(char a1)
{
  if (!dword_100A197EC) {
    sub_10025B8C0();
  }
  *(unsigned char *)(qword_100A00748 + 33) = a1;
}

uint64_t sub_100108578(uint64_t a1, _DWORD *a2, int a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  if (!a1 || !a4)
  {
    sub_10025B8C0();
    return 101;
  }
  if (dword_100A197EC) {
    return 140;
  }
  qword_100A00748 = (uint64_t)sub_10010CE48(0x28uLL);
  if (!qword_100A00748) {
    return 106;
  }
  long long v19 = 0u;
  long long v20 = 0u;
  *(unsigned char *)(qword_100A00748 + 32) = *(unsigned char *)sub_10025B218(0xFu);
  char v14 = *(unsigned char *)(sub_10025B218(0xFu) + 10);
  uint64_t v15 = (void *)qword_100A00748;
  *(unsigned char *)(qword_100A00748 + 38) = v14;
  sub_10025C0F0(v15);
  uint64_t v16 = qword_100A00748;
  *(_WORD *)(qword_100A00748 + 34) = a5;
  *(_WORD *)(v16 + 36) = a6;
  uint64_t v7 = sub_100245A8C((uint64_t)sub_100108744, (uint64_t)off_10099AB60, a5, a6, (unsigned char *)(v16 + 32), (uint64_t)&unk_1007B9100);
  if (v7) {
    goto LABEL_11;
  }
  *(void *)&long long v19 = &unk_10099AB88;
  WORD4(v19) = 4;
  *(void *)&long long v20 = *(void *)a1;
  WORD4(v20) = *(_WORD *)(a1 + 8);
  byte_100A00750 = 1;
  dword_100A00758 = *(unsigned __int8 *)(qword_100A00748 + 32);
  word_100A00752 = 1;
  byte_100A00760 = 1;
  word_100A00762 = 2;
  dword_100A00768 = a3;
  uint64_t v17 = sub_10024E258((uint64_t)&v19, (int *)(qword_100A00748 + 20));
  uint64_t v18 = qword_100A00748;
  if (v17)
  {
    uint64_t v7 = v17;
    sub_100245D68(*(unsigned __int8 *)(qword_100A00748 + 32));
LABEL_11:
    if (qword_100A00748)
    {
      sub_100023010((void *)qword_100A00748);
      qword_100A00748 = 0;
    }
    return v7;
  }
  *(void *)(qword_100A00748 + 24) = a4;
  if (a2) {
    *a2 = *(_DWORD *)(v18 + 20);
  }
  sub_100185350(0x200000);
  uint64_t v7 = 0;
  dword_100A197EC = 1;
  return v7;
}

uint64_t sub_100108744(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  if (qword_100A00748)
  {
    for (uint64_t i = *(void **)qword_100A00748; i && i != (void *)qword_100A00748; uint64_t i = (void *)*i)
    {
      if (*((_DWORD *)i - 3) == *(_DWORD *)a1 && *((unsigned __int16 *)i - 4) == *(unsigned __int16 *)(a1 + 4)) {
        goto LABEL_14;
      }
    }
  }
  uint64_t v9 = sub_100108BE4((int *)a1, a4);
  if (!v9)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not allocate hfp device!", v12, v13, v14, v15, v16, v17, v18, *(uint64_t *)&v23[0]);
      long long v19 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return sub_1002463C0((uint64_t)sub_1001089F4, a4, 0);
  }
  uint64_t v10 = v9;
  if (*((unsigned char *)v9 + 34))
  {
LABEL_14:
    return sub_1002463C0((uint64_t)sub_1001089F4, a4, 0);
  }
  long long v20 = sub_100108948(a4);
  if (v20) {
    *((unsigned char *)v20 + 34) = 2;
  }
  *uint64_t v10 = a4;
  __int16 v21 = *(_WORD *)(a1 + 4);
  *((_DWORD *)v10 + 7) = *(_DWORD *)a1;
  uint64_t v22 = v10 + 14;
  v22[2] = v21;
  *((void *)&v23[0] + 1) = v22;
  LODWORD(v23[0]) = 0;
  WORD2(v23[0]) = a4;
  return (*(uint64_t (**)(_OWORD *))(qword_100A00748 + 24))(v23);
}

uint64_t sub_1001088C4()
{
  if (!dword_100A197EC) {
    return 408;
  }
  if (*(unsigned char *)(qword_100A00748 + 16)) {
    return 141;
  }
  uint64_t result = sub_100245D68(*(unsigned __int8 *)(qword_100A00748 + 32));
  if (!result)
  {
    sub_10024E448(*(_DWORD *)(qword_100A00748 + 20));
    sub_100185404(0x200000);
    if (qword_100A00748)
    {
      sub_100023010((void *)qword_100A00748);
      qword_100A00748 = 0;
    }
    uint64_t result = 0;
    dword_100A197EC = 0;
  }
  return result;
}

void *sub_100108948(unsigned int a1)
{
  if (qword_100A00748)
  {
    for (uint64_t i = *(void **)qword_100A00748; i && i != (void *)qword_100A00748; uint64_t i = (void *)*i)
    {
      if (*((unsigned __int16 *)i - 20) == a1) {
        return i - 5;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find addr for device handle %d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 0;
}

uint64_t sub_1001089F4(unsigned int a1, __int16 a2, uint64_t a3)
{
  uint64_t v6 = sub_100108948(a1);
  if (v6)
  {
    if (a3)
    {
LABEL_3:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"RFCOMM connection failed %!\n", v7, v8, v9, v10, v11, v12, v13, a3);
        uint64_t v14 = sub_100050B4C(0xFu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      *uint64_t v6 = 0;
      uint64_t v15 = sub_100108948(a1);
      if (v15)
      {
        char v16 = 0;
LABEL_15:
        *((unsigned char *)v15 + 34) = v16;
        return sub_100108D08((unsigned __int16)*v6, a3, a2);
      }
      return sub_100108D08((unsigned __int16)*v6, a3, a2);
    }
  }
  else
  {
    sub_10025B8C0();
    if (a3) {
      goto LABEL_3;
    }
  }
  a3 = sub_1001893B4((uint64_t)off_10099AC38, (uint64_t)(v6 + 14));
  if (a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_DEVMGR_RegisterScoApplication failed %!\n", v17, v18, v19, v20, v21, v22, v23, a3);
      uint64_t v24 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  uint64_t v15 = sub_100108948(a1);
  if (v15)
  {
    char v16 = 3;
    goto LABEL_15;
  }
  return sub_100108D08((unsigned __int16)*v6, a3, a2);
}

void *sub_100108B2C(uint64_t a1)
{
  if (qword_100A00748)
  {
    for (uint64_t i = *(void **)qword_100A00748; i && i != (void *)qword_100A00748; uint64_t i = (void *)*i)
    {
      if (*((_DWORD *)i - 3) == *(_DWORD *)a1 && *((unsigned __int16 *)i - 4) == *(unsigned __int16 *)(a1 + 4)) {
        return i - 5;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find addr for device %:", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 0;
}

_WORD *sub_100108BE4(int *a1, __int16 a2)
{
  if (*(unsigned __int8 *)(qword_100A00748 + 16) >= *(unsigned __int8 *)(qword_100A00748 + 38))
  {
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Maximum handsfree connection is %d, cannot create device", v8, v9, v10, v11, v12, v13, v14, *(unsigned __int8 *)(qword_100A00748 + 38));
    uint64_t v15 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
LABEL_9:
    sub_100744F6C();
    return 0;
  }
  uint64_t v4 = sub_10010CE48(0x38uLL);
  if (!v4)
  {
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Could not allocate hfp device\n", v16, v17, v18, v19, v20, v21, v22, v25);
    uint64_t v23 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  int v6 = *a1;
  v4[16] = *((_WORD *)a1 + 2);
  *((_DWORD *)v4 + 7) = v6;
  *uint64_t v4 = a2;
  *((unsigned char *)v4 + 34) = 0;
  uint64_t v7 = (uint64_t *)qword_100A00748;
  ++*(unsigned char *)(qword_100A00748 + 16);
  sub_10025C0F8((void *)v4 + 5, v7);
  return v5;
}

uint64_t sub_100108D08(unsigned int a1, int a2, __int16 a3)
{
  unsigned __int16 v5 = a1;
  int v6 = sub_100108948(a1);
  if (!v6) {
    sub_10025B8C0();
  }
  long long v10 = 0u;
  uint64_t v12 = 0;
  long long v11 = 0u;
  LODWORD(v10) = a2;
  WORD2(v10) = a3;
  v8[0] = 1;
  uint64_t v9 = (char *)v6 + 28;
  v8[1] = v5;
  return (*(uint64_t (**)(_DWORD *))(qword_100A00748 + 24))(v8);
}

uint64_t sub_100108D90(unsigned int a1)
{
  if (!dword_100A197EC) {
    return 408;
  }
  uint64_t v1 = sub_100108948(a1);
  if (!v1) {
    sub_10025B8C0();
  }
  int v2 = *((unsigned __int8 *)v1 + 34);
  if ((v2 - 4) < 2) {
    return 116;
  }
  if (v2 != 3) {
    return 1802;
  }
  unsigned int v4 = *(unsigned __int16 *)v1;
  unsigned __int16 v5 = sub_100108948(v4);
  if (!v5) {
    sub_10025B8C0();
  }
  unsigned int v6 = *((unsigned __int8 *)v5 + 34);
  BOOL v7 = v6 > 5;
  int v8 = (1 << v6) & 0x31;
  if (!v7 && v8 != 0) {
    return 0;
  }
  long long v10 = sub_100108948(v4);
  if (v10) {
    *((unsigned char *)v10 + 34) = 4;
  }
  unsigned int v11 = *(unsigned __int16 *)v5;

  return sub_1001090DC(v11);
}

uint64_t sub_100108E6C(unsigned int a1, uint64_t a2, char *a3, size_t a4)
{
  BOOL v7 = sub_100108948(a1);
  if (!v7) {
    sub_10025B8C0();
  }
  if (!dword_100A197EC) {
    return 408;
  }
  if (!a2)
  {
    sub_10025B8C0();
    return 101;
  }
  if (*((unsigned char *)v7 + 34) != 3) {
    return 408;
  }
  if (v7[2]) {
    return 118;
  }
  uint64_t result = sub_1002460BC((uint64_t)sub_100108F18, *(unsigned __int16 *)v7, a3, a4);
  if (!result) {
    v7[2] = a2;
  }
  return result;
}

uint64_t sub_100108F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = sub_100108948(a1);
  if (!v8) {
    sub_10025B8C0();
  }
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[2];
  _DWORD v8[2] = 0;

  return v9(a1, a2, a3, a4);
}

uint64_t sub_100108F8C(unsigned int a1, int a2)
{
  unsigned int v4 = sub_100108948(a1);
  if (!v4) {
    sub_10025B8C0();
  }
  int v5 = *((unsigned __int8 *)v4 + 34);
  unsigned int v6 = sub_100108948(a1);
  if (v6)
  {
    if (v5 == 3) {
      char v7 = 5;
    }
    else {
      char v7 = 0;
    }
    *((unsigned char *)v6 + 34) = v7;
  }
  *((_DWORD *)v4 + 1) = a2;
  unsigned int v8 = *(unsigned __int16 *)v4;

  return sub_1001090DC(v8);
}

void sub_100109000(unsigned int a1, uint64_t a2, __int16 a3)
{
  __int16 v5 = a1;
  unsigned int v6 = sub_100108948(a1);
  if (!v6) {
    sub_10025B8C0();
  }
  uint64_t v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v15 = 0u;
  if ((*((unsigned char *)v6 + 34) & 0xFE) == 4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Ignoring received data while in state %s", v7, v8, v9, v10, v11, v12, v13, (uint64_t)"");
      uint64_t v14 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    LODWORD(v15) = 6;
    *((void *)&v15 + 1) = a2;
    LOWORD(v16) = a3;
    WORD2(v15) = v5;
    (*(void (**)(long long *))(qword_100A00748 + 24))(&v15);
  }
}

uint64_t sub_1001090DC(unsigned int a1)
{
  int v2 = sub_100108948(a1);
  if (!v2) {
    sub_10025B8C0();
  }
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  int v3 = *((unsigned __int8 *)v2 + 34);
  if (v3 == 5)
  {
    if (!*((unsigned char *)v2 + 35))
    {
      uint64_t v4 = 0;
      *((unsigned char *)v2 + 34) = 0;
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (v3 != 4) {
    goto LABEL_18;
  }
  if (*((unsigned char *)v2 + 35) == 3)
  {
    uint64_t v4 = sub_1001896B4(v2[1]);
    if (!v4)
    {
      *((unsigned char *)v2 + 35) = 4;
      goto LABEL_19;
    }
    if (!sub_100058654()) {
      goto LABEL_17;
    }
    sub_100056E24((uint64_t)"ScoDisconnect failed - %!, forcing disconnect!\n", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      goto LABEL_17;
    }
LABEL_16:
    sub_100744F6C();
LABEL_17:
    sub_100109344(*(unsigned __int16 *)v2);
    goto LABEL_19;
  }
  if (!*(_WORD *)v2) {
    goto LABEL_18;
  }
  uint64_t v4 = sub_100246730(*(unsigned __int16 *)v2, 935);
  if (v4)
  {
    if (!sub_100058654()) {
      goto LABEL_17;
    }
    sub_100056E24((uint64_t)"RFCOMM_Disconnect failed - %!, forcing disconnect!\n", v13, v14, v15, v16, v17, v18, v19, v4);
    uint64_t v20 = sub_100050B4C(0xFu);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_19:
  if (*((unsigned char *)v2 + 35) || *((unsigned char *)v2 + 34))
  {
    if (!*((_DWORD *)v2 + 6))
    {
      v32[1] = v2;
      v32[0] = (const void *)2;
      uint64_t v4 = sub_1000268E4((uint64_t)sub_1001093F4, v32, 100, (int *)v2 + 6);
      if (v4)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Register disconnect timeout handler failed %!\n", v21, v22, v23, v24, v25, v26, v27, v4);
          long long v28 = sub_100050B4C(0xFu);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
  }
  else
  {
    uint64_t v29 = *((unsigned int *)v2 + 6);
    if (v29)
    {
      sub_100026DB4(v29);
      *((_DWORD *)v2 + 6) = 0;
    }
    long long v30 = sub_100108948(a1);
    if (v30) {
      *((unsigned char *)v30 + 34) = 0;
    }
    sub_1001895A8((uint64_t)v2 + 28);
    LODWORD(v33[0]) = 2;
    *((void *)&v33[0] + 1) = (char *)v2 + 28;
    DWORD2(v33[0]) = *((_DWORD *)v2 + 1);
    WORD2(v33[0]) = *(_WORD *)v2;
    (*(void (**)(_OWORD *))(qword_100A00748 + 24))(v33);
    sub_10025C120(v2 + 5);
    sub_100023010(v2);
    --*(unsigned char *)(qword_100A00748 + 16);
  }
  return v4;
}

uint64_t sub_100109344(unsigned int a1)
{
  int v2 = sub_100108948(a1);
  if (!v2) {
    sub_10025B8C0();
  }
  uint64_t result = sub_10017C380((uint64_t)v2 + 28);
  if (result)
  {
    uint64_t v4 = result;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ForceDisconnect failed - %!, assuming already disconnected\n", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t result = (uint64_t)sub_100108948(a1);
    if (result) {
      *(unsigned char *)(result + 34) = 0;
    }
    *((unsigned char *)v2 + 35) = 0;
    *((_DWORD *)v2 + 1) = 926;
  }
  return result;
}

uint64_t sub_1001093F4(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
  int v2 = sub_100108948(v1);
  if (!v2) {
    sub_10025B8C0();
  }
  *((_DWORD *)v2 + 6) = 0;
  sub_100109344(v1);

  return sub_1001090DC(v1);
}

uint64_t sub_10010944C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100108B2C(a3);
  if (!v5) {
    sub_10025B8C0();
  }
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  if (a1)
  {
    char v6 = 0;
  }
  else
  {
    v5[1] = a2;
    char v6 = 3;
  }
  *((unsigned char *)v5 + 35) = v6;
  LODWORD(v8[0]) = 4;
  HIDWORD(v8[0]) = ((unint64_t)v5 + 28) >> 32;
  DWORD2(v8[0]) = a1;
  WORD2(v8[0]) = *(_WORD *)v5;
  uint64_t result = (*(uint64_t (**)(_OWORD *))(qword_100A00748 + 24))(v8);
  if ((*((unsigned char *)v5 + 34) & 0xFE) == 4) {
    return sub_1001090DC(*(unsigned __int16 *)v5);
  }
  return result;
}

uint64_t sub_100109504(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  if (qword_100A00748)
  {
    for (uint64_t i = *(void **)qword_100A00748; i && i != (void *)qword_100A00748; uint64_t i = (void *)*i)
    {
      if (*(i - 4) == a2)
      {
        uint64_t v13 = (unsigned __int16 *)(i - 5);
        if (a1) {
          goto LABEL_13;
        }
        goto LABEL_17;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find device with sco handle", v5, v6, v7, v8, v9, v10, v11, v23);
    uint64_t v12 = sub_100050B4C(0xFu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_10025B8C0();
  uint64_t v13 = 0;
  if (a1)
  {
LABEL_13:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SCO disconnect failed %!", v14, v15, v16, v17, v18, v19, v20, a1);
      uint64_t v21 = sub_100050B4C(0xFu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
LABEL_17:
    *((unsigned char *)v13 + 35) = 0;
  }
  LODWORD(v24[0]) = 5;
  HIDWORD(v24[0]) = (unint64_t)(v13 + 14) >> 32;
  DWORD2(v24[0]) = a1;
  WORD2(v24[0]) = *v13;
  uint64_t result = (*(uint64_t (**)(_OWORD *))(qword_100A00748 + 24))(v24);
  if ((v13[17] & 0xFE) == 4) {
    return sub_1001090DC(*v13);
  }
  return result;
}

uint64_t sub_100109654(uint64_t a1)
{
  int v2 = sub_100108B2C(a1);
  if (!v2) {
    sub_10025B8C0();
  }
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  if (*((unsigned char *)v2 + 34) == 3
    && (*(_DWORD *)a1 == *((_DWORD *)v2 + 7)
      ? (BOOL v3 = *(unsigned __int16 *)(a1 + 4) == *((unsigned __int16 *)v2 + 16))
      : (BOOL v3 = 0),
        v3 && !*((unsigned char *)v2 + 35)))
  {
    *((unsigned char *)v2 + 35) = 1;
    LODWORD(v5[0]) = 3;
    *((void *)&v5[0] + 1) = (char *)v2 + 28;
    WORD2(v5[0]) = *(_WORD *)v2;
    return (*(uint64_t (**)(_OWORD *))(qword_100A00748 + 24))(v5);
  }
  else
  {
    return sub_10018A98C(a1, 0);
  }
}

uint64_t sub_100109728(uint64_t result)
{
  uint64_t v1 = 0;
  while (1)
  {
    if (LODWORD(xmmword_100A00770[v1]) == 1)
    {
      int v2 = &xmmword_100A00770[v1];
      if (BYTE6(xmmword_100A00770[v1])) {
        break;
      }
    }
    v1 += 3;
    if (v1 == 15) {
      return result;
    }
  }
  if (*((void *)v2 + 1) == result)
  {
    *(_DWORD *)int v2 = 0;
    *((unsigned char *)v2 + 6) = 0;
  }
  return result;
}

uint64_t sub_100109774(uint64_t result)
{
  byte_100A00860 = result;
  return result;
}

void sub_100109780(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  while (LODWORD(xmmword_100A00770[v3]) != 1)
  {
    v3 += 3;
    if (v3 == 15) {
      return;
    }
  }
  uint64_t v4 = &xmmword_100A00770[v3];
  if (a2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not synchronize to periodic advertiser (%!)", v5, v6, v7, v8, v9, v10, v11, a2);
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    if (off_100A00870) {
      off_100A00870(&xmmword_100A00770[v3], a2);
    }
    sub_1001098EC(LODWORD(xmmword_100A00770[v3 + 1]) | ((unint64_t)(WORD2(xmmword_100A00770[v3 + 1]) | (BYTE6(xmmword_100A00770[v3 + 1]) << 16)) << 32), BYTE7(xmmword_100A00770[v3 + 1]));
    v4[1] = 0u;
    void v4[2] = 0u;
    *uint64_t v4 = 0u;
    LODWORD(xmmword_100A00770[v3]) = 0;
  }
  else
  {
    *(_DWORD *)uint64_t v4 = 2;
    *((_WORD *)v4 + 2) = *(_WORD *)a1;
    *((_WORD *)v4 + 14) = *(_WORD *)(a1 + 12);
    *(_DWORD *)((char *)v4 + 37) = *(_DWORD *)(a1 + 15);
    ++byte_100A00868;
    if (off_100A00870) {
      off_100A00870(&xmmword_100A00770[v3], 0);
    }
    sub_1001098EC(LODWORD(xmmword_100A00770[v3 + 1]) | ((unint64_t)(WORD2(xmmword_100A00770[v3 + 1]) | (BYTE6(xmmword_100A00770[v3 + 1]) << 16)) << 32), BYTE7(xmmword_100A00770[v3 + 1]));
  }
  qword_100A00888 = 0;
  *(void *)&byte_100A00890 = 0;
}

void sub_1001098EC(uint64_t a1, unsigned int a2)
{
  unsigned __int8 v3 = a1;
  int v31 = a1;
  char v33 = BYTE6(a1);
  __int16 v32 = WORD2(a1);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_RemoveDeviceFromPeriodicAdvList", v4, v5, v6, v7, v8, v9, v10, v30);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      long long v35 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a2 <= 0xF)
  {
    if (*((void *)&xmmword_100A00898 + 1))
    {
      uint64_t v12 = sub_100022FE8(0x10uLL);
      if (v12)
      {
        uint64_t v19 = v12;
        uint64_t v20 = sub_10001BDE0(222, (uint64_t)sub_10010A544, v13, v14, v15, v16, v17, v18, v3);
        if (v20)
        {
          uint64_t v21 = v20;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not remove device from periodic advertising list (%!)", v22, v23, v24, v25, v26, v27, v28, v21);
            uint64_t v29 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          sub_100023010(v19);
        }
        else
        {
          *((unsigned char *)v19 + 6) = v33;
          *((_WORD *)v19 + 2) = v32;
          *uint64_t v19 = v31;
          *((unsigned char *)v19 + 7) = a2;
          *((void *)v19 + 1) = 0;
          if (qword_100A008B0)
          {
            *(void *)(qword_100A008B0 + 8) = v19;
            qword_100A008B0 = (uint64_t)v19;
          }
          if (!qword_100A008A8)
          {
            qword_100A008A8 = (uint64_t)v19;
            qword_100A008B0 = (uint64_t)v19;
          }
        }
      }
    }
  }
}

void sub_100109AC0()
{
  for (uint64_t i = 0; i != 15; i += 3)
  {
    if (LODWORD(xmmword_100A00770[i]) == 1)
    {
      uint64_t v9 = sub_100109B98();
      if (v9)
      {
        uint64_t v10 = v9;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_PeriodicAdv_CreateSyncCancel failed with status %!", v11, v12, v13, v14, v15, v16, v17, v10);
          uint64_t v18 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            goto LABEL_10;
          }
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"No sync handle found in establishing state", v1, v2, v3, v4, v5, v6, v7, v19);
    uint64_t v8 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
LABEL_10:
    }
      sub_100744F6C();
  }
}

uint64_t sub_100109B98()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_PeriodicAdv_CreateSyncCancel", v0, v1, v2, v3, v4, v5, v6, v29);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      int v31 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (LODWORD(xmmword_100A00770[0]) == 1)
  {
LABEL_5:
    uint64_t v8 = sub_10001BDE0(219, (uint64_t)sub_10010A390, v1, v2, v3, v4, v5, v6, v29);
    if (v8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not cancel periodic sync (%!)", v9, v10, v11, v12, v13, v14, v15, v8);
        uint64_t v16 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  else
  {
    unint64_t v17 = -1;
    uint64_t v18 = &dword_100A007A0;
    while (v17 != 3)
    {
      int v19 = *v18;
      v18 += 12;
      ++v17;
      if (v19 == 1)
      {
        if (v17 < 4) {
          goto LABEL_5;
        }
        break;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No Pending Sync to Cancel", v20, v21, v22, v23, v24, v25, v26, v29);
      uint64_t v27 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 117;
  }
  return v8;
}

double sub_100109D3C(int a1)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = &xmmword_100A00770[v1];
    if (WORD2(xmmword_100A00770[v1]) == a1) {
      break;
    }
    v1 += 3;
    if (v1 == 15) {
      return result;
    }
  }
  if (off_100A00878) {
    off_100A00878(v2, 156);
  }
  double result = 0.0;
  v2[1] = 0u;
  void v2[2] = 0u;
  *uint64_t v2 = 0u;
  *(_DWORD *)uint64_t v2 = 0;
  return result;
}

unsigned __int16 *sub_100109DAC(unsigned __int16 *result)
{
  uint64_t v1 = 0;
  while (WORD2(xmmword_100A00770[v1]) != *result)
  {
    v1 += 3;
    if (v1 == 15) {
      return result;
    }
  }
  if (off_100A00880)
  {
    long long v2 = *(_OWORD *)result;
    uint64_t v3 = *((void *)result + 2);
    return (unsigned __int16 *)off_100A00880(&xmmword_100A00770[v1], &v2);
  }
  return result;
}

void sub_100109E24(uint64_t a1, uint64_t a2, __int16 a3, __int16 a4, char a5, int *a6, int a7, __int16 a8, char a9, char a10, char a11, char a12, char a13)
{
  if (sub_100197770(a2))
  {
    uint64_t v49 = a1;
    for (uint64_t i = 0; i != 15; i += 3)
    {
      if (LODWORD(xmmword_100A00770[i]) == 1)
      {
        int v19 = &xmmword_100A00770[i];
        if (BYTE6(xmmword_100A00770[i]))
        {
          if (v49)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"LE_SyncTransferReceived with error (%!)", v36, v37, v38, v39, v40, v41, v42, v49);
              uint64_t v43 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            if (off_100A00870) {
              off_100A00870(v19, v49);
            }
            *(_DWORD *)int v19 = 0;
          }
          else
          {
            uint64_t v44 = &xmmword_100A00770[i];
            *(_DWORD *)uint64_t v44 = 2;
            *((_WORD *)v44 + 2) = a4;
            int v45 = *a6;
            __int16 v46 = *((_WORD *)a6 + 2);
            *((unsigned char *)v44 + 22) = *((unsigned char *)a6 + 6);
            *((_WORD *)v44 + 10) = v46;
            *((_DWORD *)v44 + 4) = v45;
            *((unsigned char *)v44 + 23) = a5;
            *((_WORD *)v44 + 14) = a8;
            *((_WORD *)v44 + 15) = a3;
            *((_DWORD *)v44 + 8) = a7;
            *((unsigned char *)v44 + 36) = a9;
            *((unsigned char *)v44 + 37) = a10;
            *((unsigned char *)v44 + 38) = a11;
            *((unsigned char *)v44 + 39) = a12;
            *((unsigned char *)v44 + 40) = a13;
            char v47 = (void (*)(long long *, void))off_100A00870;
            if (off_100A00870)
            {
              v47(v19, 0);
            }
          }
          return;
        }
      }
    }
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"LE_SyncTransferReceived, no sync handle found", v20, v21, v22, v23, v24, v25, v26, v48);
    uint64_t v27 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_8;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_SyncTransferReceived, invalid connection handle: status %! ignoring", v28, v29, v30, v31, v32, v33, v34, a1);
    long long v35 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_100745764();
  }
}

uint64_t sub_10010A060()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_PreriodicAdv_TerminateAll", v0, v1, v2, v3, v4, v5, v6, v15);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      unint64_t v17 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  for (uint64_t i = 0; i != 15; i += 3)
  {
    int v9 = xmmword_100A00770[i];
    if (v9 == 1)
    {
      if (!sub_10001BDE0(219, (uint64_t)sub_10010A390, v1, v2, v3, v4, v5, v6, v15)) {
        continue;
      }
    }
    else
    {
      if (v9 != 2) {
        continue;
      }
      int v10 = sub_10001BDE0(220, (uint64_t)sub_10010A268, v1, v2, v3, v4, v5, v6, WORD2(xmmword_100A00770[i]));
      LODWORD(xmmword_100A00770[i]) = 3;
      if (!v10) {
        continue;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unable to terminate all syncs. Failure with sync handle: %d (%!)", v11, v1, v2, v3, v4, v5, v6, WORD2(xmmword_100A00770[i]));
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v13 = sub_100050714();
        *(_DWORD *)buf = 136446466;
        unint64_t v17 = v13;
        __int16 v18 = 1024;
        int v19 = 0xFFFF;
        _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
      }
    }
  }
  return 0;
}

double sub_10010A268(int a1)
{
  uint64_t v2 = 0;
  byte_100A008B8 = 0;
  while (LODWORD(xmmword_100A00770[v2]) != 3)
  {
    v2 += 3;
    if (v2 == 15) {
      return result;
    }
  }
  int v3 = sub_100058654();
  uint64_t v12 = &xmmword_100A00770[v2];
  if (a1)
  {
    if (v3)
    {
      sub_100056E24((uint64_t)"Terminate sync command complete (FAIL)", v4, v5, v6, v7, v8, v9, v10, v15);
      uint64_t v13 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (off_100A00878) {
      off_100A00878(v12, a1);
    }
  }
  else
  {
    if (v3)
    {
      sub_100056E24((uint64_t)"Terminate sync command complete (SUCCESS)", v4, v5, v6, v7, v8, v9, v10, v15);
      uint64_t v14 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (off_100A00878) {
      off_100A00878(v12, 0);
    }
    double result = 0.0;
    v12[1] = 0u;
    v12[2] = 0u;
    *uint64_t v12 = 0u;
    *(_DWORD *)uint64_t v12 = 0;
    --byte_100A00868;
  }
  return result;
}

double sub_10010A390(int a1)
{
  if (a1)
  {
    uint64_t v1 = 0;
    while (LODWORD(xmmword_100A00770[v1]) != 1)
    {
      v1 += 3;
      if (v1 == 15) {
        return result;
      }
    }
    sub_1001098EC(*(unsigned int *)((char *)&qword_100A00888 + 2) | ((unint64_t)(HIWORD(qword_100A00888) | (byte_100A00890 << 16)) << 32), BYTE1(qword_100A00888));
    double result = 0.0;
    xmmword_100A00780 = 0u;
    unk_100A00790 = 0u;
    xmmword_100A00770[0] = 0u;
    LODWORD(xmmword_100A00770[v1]) = 0;
    qword_100A00888 = 0;
    *(void *)&byte_100A00890 = 0;
  }
  return result;
}

void *sub_10010A418(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_SetPeriodicAdvListSize", v2, v3, v4, v5, v6, v7, v8, *(uint64_t *)v11);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v11 = 136446210;
      *(void *)&v11[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", v11, 0xCu);
    }
  }
  LOWORD(xmmword_100A00898) = a1;
  if (*((void *)&xmmword_100A00898 + 1)) {
    sub_100023010(*((void **)&xmmword_100A00898 + 1));
  }
  double result = sub_100022FE8(8 * a1);
  *((void *)&xmmword_100A00898 + 1) = result;
  BYTE2(xmmword_100A00898) = 0;
  qword_100A008B0 = 0;
  qword_100A008A8 = 0;
  return result;
}

double sub_10010A510()
{
  if (*((void *)&xmmword_100A00898 + 1)) {
    sub_100023010(*((void **)&xmmword_100A00898 + 1));
  }
  double result = 0.0;
  xmmword_100A00898 = 0u;
  *(_OWORD *)&qword_100A008A8 = 0u;
  return result;
}

void sub_10010A544(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"leRemoveFromPeriodicAdvListCb", v2, v3, v4, v5, v6, v7, v8, v21);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v23 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Error removing device from periodic advertiser list %!", v10, v11, v12, v13, v14, v15, v16, a1);
      unint64_t v17 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    if (!qword_100A008A8) {
      sub_10025B8C0();
    }
    if (BYTE2(xmmword_100A00898))
    {
      uint64_t v18 = 0;
      uint64_t v19 = *((void *)&xmmword_100A00898 + 1);
      while (*(void *)(*((void *)&xmmword_100A00898 + 1) + v18) != *(void *)qword_100A008A8)
      {
        v18 += 8;
        if (8 * BYTE2(xmmword_100A00898) == v18) {
          goto LABEL_18;
        }
      }
      unsigned __int8 v20 = BYTE2(xmmword_100A00898) - 1;
      BYTE2(xmmword_100A00898) = v20;
      if (v18 != 8 * v20)
      {
        *(void *)(*((void *)&xmmword_100A00898 + 1) + v18) = *(void *)(*((void *)&xmmword_100A00898 + 1)
                                                                           + 8 * v20);
        uint64_t v19 = *((void *)&xmmword_100A00898 + 1);
        unsigned __int8 v20 = BYTE2(xmmword_100A00898);
      }
      *(void *)(v19 + 8 * v20) = 0;
    }
  }
LABEL_18:
  sub_10010A6D4();
}

void sub_10010A6D4()
{
  if (qword_100A008A8)
  {
    uint64_t v0 = *(void *)(qword_100A008A8 + 8);
    sub_100023010((void *)qword_100A008A8);
    qword_100A008A8 = v0;
    if (!v0) {
      qword_100A008B0 = 0;
    }
  }
  else
  {
    sub_10025B8C0();
  }
}

void sub_10010A730(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100160AC0(a1);

  sub_100161C50((uint64_t)v6, a2, a4);
}

uint64_t sub_10010A770(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _WORD *a8, uint64_t a9)
{
  if (a1 && a5 && a6 && a8 && a9)
  {
    unint64_t v17 = sub_10010CE48(0x120uLL);
    if (v17)
    {
      uint64_t v18 = (uint64_t)v17;
      v17[64] = 200;
      v17[38] = 200;
      v17[37] = *(_WORD *)(sub_10025B218(0x17u) + 8);
      *(void *)(v18 + 8) = 0;
      *(void *)(v18 + 40) = 0;
      *(_DWORD *)(v18 + 4) = 1;
      __int16 v19 = *(_WORD *)(a1 + 4);
      *(_DWORD *)(v18 + 104) = *(_DWORD *)a1;
      *(_WORD *)(v18 + 108) = v19;
      *(_DWORD *)(v18 + 276) = 1;
      *(void *)(v18 + 136) = a6;
      *(unsigned char *)(v18 + 56) = 0;
      *(_DWORD *)(v18 + 260) = -1;
      *(void *)(v18 + 152) = a5;
      *(_DWORD *)(v18 + 272) = a3;
      if (a3 || a7)
      {
        unsigned __int8 v20 = sub_10010CE48(0x9BuLL);
        *(void *)(v18 + 64) = v20;
        if (!v20)
        {
          uint64_t v23 = 106;
          goto LABEL_26;
        }
        if (a3 == 2) {
          v20[59] = 1;
        }
        if (!a7)
        {
          uint64_t v23 = 1721;
          goto LABEL_26;
        }
        *(void *)(v18 + 144) = a7;
      }
      if (a4)
      {
        unsigned int v21 = *(unsigned __int8 *)(a4 + 8);
        if (v21 >= 5)
        {
          sub_10025B8C0();
          unsigned int v21 = *(unsigned __int8 *)(a4 + 8);
        }
        memmove((void *)(v18 + 160), *(const void **)a4, 24 * v21);
        char v22 = *(unsigned char *)(a4 + 8);
      }
      else
      {
        char v22 = 0;
      }
      *(unsigned char *)(v18 + 256) = v22;
      uint64_t v23 = sub_1001DF7BC((uint64_t)sub_10010A964, (uint64_t)sub_10010AA6C, (uint64_t)sub_10010AAC8, a2, a1, (uint64_t)&unk_10099AC50, (_WORD *)v18, (uint64_t)&unk_1007B9180);
      if (!v23)
      {
        sub_100160A2C(v18);
        *a8 = *(_WORD *)(v18 + 280);
        ++dword_100A1980C;
        return v23;
      }
LABEL_26:
      sub_100160B50(*(unsigned __int16 *)(v18 + 280));
      return v23;
    }
    return 104;
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

void sub_10010A964(int a1, unsigned int a2, unsigned __int16 a3, uint64_t a4)
{
  uint64_t v7 = sub_100160AC0(a1);
  uint64_t v8 = (uint64_t)v7;
  if (a4 || !v7)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"L2CAPConnectCB failed with result %!", v12, v13, v14, v15, v16, v17, v18, a4);
      __int16 v19 = sub_100050B4C(0x17u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_1007457DC(v19);
      }
    }
  }
  else
  {
    *((_DWORD *)v7 + 69) = 2;
    v7[36] = a3;
    v7[38] = a3;
    v7[37] = a2;
    *((void *)v7 + 1) = sub_10010CE48(a2);
    if (*(_DWORD *)(v8 + 272))
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 144);
      uint64_t v10 = *(unsigned __int16 *)(v8 + 280);
      uint64_t v11 = *(unsigned __int8 *)(*(void *)(v8 + 64) + 59);
      v9(v10, v11);
      return;
    }
    a4 = sub_100161244(v8, 200);
  }
  if (a4) {
    sub_100160D58((unsigned __int16 *)v8, a4);
  }
}

void sub_10010AA6C(int a1, uint64_t a2)
{
  uint64_t v3 = sub_100160AC0(a1);
  if (v3)
  {
    if (!a2)
    {
      if (*((_DWORD *)v3 + 69) <= 3u) {
        a2 = 0;
      }
      else {
        a2 = 1709;
      }
    }
    sub_100160BF0((uint64_t)v3, a2);
  }
}

void sub_10010AAC8(int a1, void *a2, size_t a3)
{
  uint64_t v5 = sub_100160AC0(a1);

  sub_1001614E8((uint64_t)v5, a2, a3);
}

uint64_t sub_10010AB08(unsigned __int8 *a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Beginning Bud Swap 2.0 procedure for %:", v2, v3, v4, v5, v6, v7, v8, (uint64_t)a1);
    uint64_t v9 = sub_100050B4C(0x59u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      int v61 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  char v59 = 0;
  if (sub_10017E2D4((uint64_t)a1, (uint64_t *)&v59)) {
    goto LABEL_5;
  }
  int v58 = 0;
  __int16 v57 = 0;
  if (sub_100134F10((uint64_t)a1, &v57))
  {
    int v20 = sub_100264F24((uint64_t)a1);
    if (!v20)
    {
      sub_1001F45C4(v59, 0, 0, 1);
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Media CIDs are not connected, stalling all L2CAP queues for %:", v30, v31, v32, v33, v34, v35, v36, (uint64_t)a1);
        uint64_t v29 = sub_100050B4C(0x59u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_20;
        }
      }
      goto LABEL_21;
    }
    LODWORD(v21) = 0;
    goto LABEL_14;
  }
  LOWORD(v58) = v57;
  int v20 = sub_100264F24((uint64_t)a1);
  unint64_t v21 = 1;
  if (v20)
  {
LABEL_14:
    *(_WORD *)((unint64_t)&v58 | (2 * v21)) = v20;
    unint64_t v21 = (v21 + 1);
  }
  sub_1001F45C4(v59, (unsigned __int16 *)&v58, v21, 1);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"%d excluded media CIDs are connected, stalling all non-media CID L2CAP queues for %:", v22, v23, v24, v25, v26, v27, v28, v21);
    uint64_t v29 = sub_100050B4C(0x59u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
LABEL_20:
      uint64_t v37 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      int v61 = v37;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
LABEL_21:
  sub_1001F8070((uint64_t)sub_10010AEA4);
  unsigned int v38 = sub_100197960((unsigned __int16 *)v59);
  if (!v38)
  {
LABEL_5:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Couldn't begin Bud Swap 2.0 procedure for %:, couldn't find the device", v10, v11, v12, v13, v14, v15, v16, (uint64_t)a1);
      uint64_t v17 = sub_100050B4C(0x59u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_10025B8C0();
    return 120;
  }
  unsigned int v39 = v38;
  if (sub_1001F9C38())
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failure in sending LMP Halt command to chipset for lmHandle %d with BT address %:", v40, v41, v42, v43, v44, v45, v46, v39);
      char v47 = sub_100050B4C(0x59u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v18 = 114;
    sub_1000DA154(a1, 114);
  }
  else
  {
    uint64_t v18 = 0;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Successfully sent LMP Halt command to chipset for lmHandle %d with BT address %:", v48, v49, v50, v51, v52, v53, v54, v39);
      uint64_t v55 = sub_100050B4C(0x59u);
      uint64_t v18 = 0;
      if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v56 = sub_100050714();
        *(_DWORD *)buf = 136446210;
        int v61 = v56;
        _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        return 0;
      }
    }
  }
  return v18;
}

void sub_10010AEA4(unsigned int a1, char a2)
{
  uint64_t v4 = sub_100197864(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = sub_100058654();
    if (a2)
    {
      if (v6)
      {
        sub_100056E24((uint64_t)"Chipset confirmed LMP Resume complete, sending SwapCompleteCfm Message to %:", v7, v8, v9, v10, v11, v12, v13, (uint64_t)(v5 + 3));
        uint64_t v14 = sub_100050B4C(0x59u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v25 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_1000DA22C((unsigned __int8 *)v5 + 48);
    }
    else
    {
      if (v6)
      {
        sub_100056E24((uint64_t)"Chipset confirmed LMP Halt complete, sending SwapImminentCfm Message to %:", v7, v8, v9, v10, v11, v12, v13, (uint64_t)(v5 + 3));
        uint64_t v23 = sub_100050B4C(0x59u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v25 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_1000DA154((unsigned __int8 *)v5 + 48, 0);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received LMP Halt Event but couldn't find a connection handle for lmhandle %d with lmpHaltStatus %d", v15, v16, v17, v18, v19, v20, v21, a1);
    uint64_t v22 = sub_100050B4C(0x59u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10010B054(uint64_t a1)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Chipset returned error from LMP Halt command: %d", v2, v3, v4, v5, v6, v7, v8, a1);
      uint64_t v9 = sub_100050B4C(0x59u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Chipset successfully received the LMP Halt command", v10, v11, v12, v13, v14, v15, v16, v18);
    uint64_t v17 = sub_100050B4C(0x59u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v20 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
}

uint64_t sub_10010B158(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Buds have signaled Bud Swap 2.0 has completed on their side, beginning closing procedures for %:", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x59u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v42 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v40 = 0;
  if (sub_10017E2D4(a1, (uint64_t *)&v40)
    || (sub_1001F45C4(v40, 0, 0, 0), (unsigned int v19 = sub_100197960((unsigned __int16 *)v40)) == 0))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Couldn't complete Bud Swap 2.0 procedure for %:, couldn't find the device", v10, v11, v12, v13, v14, v15, v16, a1);
      uint64_t v17 = sub_100050B4C(0x59u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 120;
  }
  else
  {
    unsigned int v20 = v19;
    if (sub_1001F9C38())
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failure in sending LMP Resume command to chipset for lmHandle %d with BT address %:", v21, v22, v23, v24, v25, v26, v27, v20);
        uint64_t v28 = sub_100050B4C(0x59u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return 114;
    }
    else
    {
      int v36 = sub_100058654();
      uint64_t result = 0;
      if (v36)
      {
        sub_100056E24((uint64_t)"Successfully sent LMP Resume command to chipset for lmHandle %d with BT address %:", v29, v30, v31, v32, v33, v34, v35, v20);
        uint64_t v37 = sub_100050B4C(0x59u);
        BOOL v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0;
        if (v38)
        {
          unsigned int v39 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          uint64_t v42 = v39;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10010B394(uint64_t a1)
{
  uint64_t v1 = (char *)a1;
  sub_10025B96C(a1);
  int has_internal_diagnostics = os_variant_has_internal_diagnostics();
  if (sub_10016B718() == 6)
  {
    if ((v1 - 1205) <= 9 && ((1 << ((_BYTE)v1 + 75)) & 0x203) != 0)
    {
LABEL_4:
      if (has_internal_diagnostics) {
        sub_10025B778("Bluetooth fatal error - crashing { build=internal, reason=%d, description=\"%!\" }", v1, v1);
      }
      else {
        sub_10025B778("Bluetooth fatal error - crashing { build=release, reason=%d }");
      }
      sub_10010B390();
      uint64_t v1 = &byte_100A14820;
      sub_10025B778("OI_FatalError: ID !! (ID %d)\n", unk_100A14845);
      sub_10025B778("OI_FatalError: PC !!(PC 0x%x)\n", unk_100A14859);
      sub_10025B778("OI_FatalError: LR !!(LR0 0x%x, LR1 0x%x, LR2 0x%x, LR3 0x%x)\n", unk_100A1485D, unk_100A14861, unk_100A14865, unk_100A14869);
      sub_10025B778("OI_FatalError: MAC Version !! (%d.%d.%d.%d)\n", unk_100A14835, unk_100A14837, unk_100A14839, unk_100A1483B);
      sub_10025B778("OI_FatalError: PHY Version !!( %d.%d.%d.%d)\n", unk_100A1483D, unk_100A1483F, unk_100A14841, unk_100A14843);
      sub_1004B8B04("Marconi", "BluetoothChip", 0.0);
      abort_with_payload();
      goto LABEL_13;
    }
  }
  else if (v1 == 1214)
  {
    goto LABEL_4;
  }
  sub_100115548();
  if (!has_internal_diagnostics)
  {
LABEL_13:
    _os_log_pack_size();
    __chkstk_darwin();
    __error();
    uint64_t v6 = (_DWORD *)_os_log_pack_fill();
    *uint64_t v6 = 67109120;
    v6[1] = v1;
    goto LABEL_14;
  }
  _os_log_pack_size();
  __chkstk_darwin();
  __error();
  uint64_t v3 = _os_log_pack_fill();
  sub_10025E0A8((uint64_t)v1);
  uint64_t v5 = "?";
  if (v4) {
    uint64_t v5 = v4;
  }
  *(_DWORD *)uint64_t v3 = 67109378;
  *(_DWORD *)(v3 + 4) = v1;
  *(_WORD *)(v3 + 8) = 2082;
  *(void *)(v3 + 10) = v5;
LABEL_14:
  os_log_create("com.apple.bluetooth", "CBCrash");
  qword_1009FC078 = os_log_pack_send_and_compose();
  uint64_t v7 = abort_with_payload();
  return sub_10010B670(v7);
}

double sub_10010B670(uint64_t a1, const char *a2)
{
  sub_10025B96C(a1);
  sub_100115548();
  if (os_variant_has_internal_diagnostics())
  {
    _os_log_pack_size();
    __chkstk_darwin();
    __error();
    uint64_t v4 = _os_log_pack_fill();
    sub_10025E0A8(a1);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = "?";
    }
    if (a2) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = "none";
    }
    sub_10010B81C(v4, a1, (uint64_t)v6, (uint64_t)v7);
  }
  else
  {
    _os_log_pack_size();
    __chkstk_darwin();
    __error();
    uint64_t v8 = _os_log_pack_fill();
    uint64_t v9 = "none";
    if (a2) {
      uint64_t v9 = a2;
    }
    *(_DWORD *)uint64_t v8 = 67109378;
    *(_DWORD *)(v8 + 4) = a1;
    *(_WORD *)(v8 + 8) = 2082;
    *(void *)(v8 + 10) = v9;
  }
  os_log_create("com.apple.bluetooth", "CBCrash");
  qword_1009FC078 = os_log_pack_send_and_compose();
  uint64_t v10 = abort_with_payload();
  return sub_10010B81C(v10, v11, v12, v13);
}

double sub_10010B81C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = 67109634;
  *(_DWORD *)a1 = 67109634;
  *(_DWORD *)(a1 + 4) = a2;
  *(_WORD *)(a1 + 8) = 2082;
  *(void *)(a1 + 10) = a3;
  *(_WORD *)(a1 + 18) = 2082;
  *(void *)(a1 + 20) = a4;
  return result;
}

void sub_10010B844(uint64_t a1, const char *a2)
{
  if (os_variant_has_internal_diagnostics()) {
    sub_10010B670(a1, a2);
  }
  sub_10010B88C(a1, (uint64_t)a2);
  _exit(1);
}

uint64_t sub_10010B88C(uint64_t a1, uint64_t a2)
{
  if (os_variant_has_internal_diagnostics()) {
    sub_10025B778("Bluetooth error - restarting { build=internal, reason=%d, description=\"%!\", context=\"%s\" }", a1, a1, a2);
  }
  else {
    sub_10025B778("Bluetooth error - restarting { build=release, reason=%d, context=\"%s\" }");
  }

  return sub_100115548();
}

void sub_10010B8FC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10010B914(uint64_t a1)
{
  if (!dword_100A008C4)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_100A008C0);
    unsigned int v2 = dword_100A008C4;
    uint64_t v3 = dword_100A008C4;
    uint64_t v4 = dword_100A008C0;
    while (v4)
    {
      if (v4 > v3)
      {
        uint64_t v5 = v4 % v3;
        uint64_t v4 = v3;
        uint64_t v3 = v5;
      }
      uint64_t v6 = v3;
      uint64_t v3 = v4;
      BOOL v7 = v6 == v4;
      uint64_t v4 = v6;
      if (v7)
      {
        LODWORD(v3) = 1;
        break;
      }
    }
    unsigned int v8 = dword_100A008C4 / v3;
    dword_100A008C0 /= v3;
    dword_100A008C4 /= v3;
    if ((v2 / v3) >> 1 >= 0x863)
    {
      sub_10025B8C0();
      unsigned int v8 = dword_100A008C4;
    }
    dword_100A008C4 = 1000000 * v8;
  }
  uint64_t result = mach_continuous_time();
  unint64_t v10 = result * dword_100A008C0 / dword_100A008C4;
  *(_WORD *)(a1 + 4) = v10 % 0x3E8;
  *(_DWORD *)a1 = v10 / 0x3E8;
  return result;
}

uint64_t sub_10010BA04()
{
  if (!dword_100A008C4)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_100A008C0);
    unsigned int v0 = dword_100A008C4;
    uint64_t v1 = dword_100A008C4;
    uint64_t v2 = dword_100A008C0;
    while (v2)
    {
      if (v2 > v1)
      {
        uint64_t v3 = v2 % v1;
        uint64_t v2 = v1;
        uint64_t v1 = v3;
      }
      uint64_t v4 = v1;
      uint64_t v1 = v2;
      BOOL v5 = v4 == v2;
      uint64_t v2 = v4;
      if (v5)
      {
        LODWORD(v1) = 1;
        break;
      }
    }
    unsigned int v6 = dword_100A008C4 / v1;
    dword_100A008C0 /= v1;
    dword_100A008C4 /= v1;
    if ((v0 / v1) >> 1 >= 0x863)
    {
      sub_10025B8C0();
      unsigned int v6 = dword_100A008C4;
    }
    dword_100A008C4 = 1000000 * v6;
  }
  return mach_absolute_time() * dword_100A008C0 / dword_100A008C4;
}

uint64_t sub_10010BABC()
{
  if (!dword_100A008C4)
  {
    mach_timebase_info((mach_timebase_info_t)&dword_100A008C0);
    unsigned int v0 = dword_100A008C4;
    uint64_t v1 = dword_100A008C4;
    uint64_t v2 = dword_100A008C0;
    while (v2)
    {
      if (v2 > v1)
      {
        uint64_t v3 = v2 % v1;
        uint64_t v2 = v1;
        uint64_t v1 = v3;
      }
      uint64_t v4 = v1;
      uint64_t v1 = v2;
      BOOL v5 = v4 == v2;
      uint64_t v2 = v4;
      if (v5)
      {
        LODWORD(v1) = 1;
        break;
      }
    }
    unsigned int v6 = dword_100A008C4 / v1;
    dword_100A008C0 /= v1;
    dword_100A008C4 /= v1;
    if ((v0 / v1) >> 1 >= 0x863)
    {
      sub_10025B8C0();
      unsigned int v6 = dword_100A008C4;
    }
    dword_100A008C4 = 1000000 * v6;
  }
  return mach_continuous_time() * dword_100A008C0 / dword_100A008C4;
}

uint64_t sub_10010BB74(_DWORD *a1, __darwin_suseconds_t *a2)
{
  v7.tv_sec = 0;
  *(void *)&v7.tv_usec = 0;
  uint64_t v6 = 0;
  uint64_t result = gettimeofday(&v7, &v6);
  if (!result)
  {
    if (a1)
    {
      if (HIDWORD(v6)) {
        int v5 = 3600;
      }
      else {
        int v5 = 0;
      }
      *a1 = LODWORD(v7.tv_sec) - 60 * v6 + v5;
    }
    if (a2) {
      *a2 = v7.tv_usec;
    }
  }
  return result;
}

uint64_t sub_10010BBEC(_DWORD *a1)
{
  v5.tv_sec = 0;
  *(void *)&v5.tv_usec = 0;
  uint64_t v4 = 0;
  uint64_t result = gettimeofday(&v5, &v4);
  if (!result)
  {
    if (HIDWORD(v4)) {
      int v3 = 3600;
    }
    else {
      int v3 = 0;
    }
    *a1 = v3 + 60 * v4;
  }
  return result;
}

uint64_t sub_10010BC48(uint64_t a1)
{
  uint64_t v3 = 0;
  uint64_t result = sub_10010BB74((_DWORD *)&v3 + 1, (__darwin_suseconds_t *)&v3);
  *(_DWORD *)a1 = HIDWORD(v3);
  *(_WORD *)(a1 + 4) = (int)v3 / 1000;
  return result;
}

uint64_t sub_10010BCA8(void *a1)
{
  uint64_t v3 = 0;
  uint64_t result = sub_10010BB74((_DWORD *)&v3 + 1, (__darwin_suseconds_t *)&v3);
  *a1 = __ROR8__(1000 * (int)v3 + 1000000000 * SHIDWORD(v3), 32);
  return result;
}

uint64_t sub_10010BD04(void *a1)
{
  uint64_t result = mach_absolute_time();
  *a1 = __ROR8__(result, 32);
  return result;
}

double sub_10010BD30(mach_timebase_info *a1)
{
  mach_timebase_info info = 0;
  mach_timebase_info(&info);
  double result = *(double *)&info;
  *a1 = info;
  return result;
}

double sub_10010BD6C(uint64_t a1, uint64_t a2, _DWORD *a3, void *a4, double a5, double a6, double a7)
{
  unint64_t v7 = __ROR8__(a1, 32);
  unint64_t v8 = __ROR8__(a2, 32);
  BOOL v9 = v7 >= v8;
  unint64_t v10 = v7 - v8;
  if (v9)
  {
    LODWORD(a6) = *a3;
    LODWORD(a7) = a3[1];
    double result = (double)*(unint64_t *)&a6 / (double)*(unint64_t *)&a7 * (double)v10;
    *a4 = __ROR8__((unint64_t)result, 32);
  }
  return result;
}

uint64_t sub_10010BDB0(int a1)
{
  return usleep(1000 * a1);
}

uint64_t sub_10010BDC0(void *key, size_t keyLength, const void *a3, unsigned int a4, void *a5, unsigned int a6)
{
  size_t dataOutMoved = 0;
  CCCryptorRef cryptorRef = 0;
  CCCryptorStatus v10 = CCCryptorCreate(0, 0, 0, key, keyLength, 0, &cryptorRef);
  if (v10)
  {
    printf("Could not create cryptor : %d\n", v10);
    return 1041;
  }
  else
  {
    CCCryptorStatus v12 = CCCryptorUpdate(cryptorRef, a3, a4, a5, a6, &dataOutMoved);
    if (v12)
    {
      printf("Failed to encrypt : %d (need %d, got %zu)\n", v12, a6, dataOutMoved);
      CCCryptorRelease(cryptorRef);
      return 1042;
    }
    else
    {
      CCCryptorRelease(cryptorRef);
      if (dataOutMoved == a6)
      {
        return 0;
      }
      else
      {
        printf("Incorrect checksum size %ld, expecting %d\n", dataOutMoved, a6);
        return 1043;
      }
    }
  }
}

uint64_t sub_10010BEB8(void *key, size_t keyLength, const void *a3, unsigned int a4, void *a5, unsigned int a6)
{
  size_t dataOutMoved = 0;
  CCCryptorRef cryptorRef = 0;
  CCCryptorStatus v10 = CCCryptorCreate(1u, 0, 0, key, keyLength, 0, &cryptorRef);
  if (v10)
  {
    printf("Could not create cryptor : %d\n", v10);
    return 1041;
  }
  else
  {
    CCCryptorStatus v12 = CCCryptorUpdate(cryptorRef, a3, a4, a5, a6, &dataOutMoved);
    if (v12)
    {
      printf("Failed to encrypt : %d (need %d, got %zu)\n", v12, a6, dataOutMoved);
      CCCryptorRelease(cryptorRef);
      return 1042;
    }
    else
    {
      CCCryptorRelease(cryptorRef);
      if (dataOutMoved == a6)
      {
        return 0;
      }
      else
      {
        printf("Incorrect checksum size %ld, expecting %d\n", dataOutMoved, a6);
        return 1043;
      }
    }
  }
}

uint64_t sub_10010BFB0(void *a1, size_t a2, const void *a3, unsigned int a4, void *a5, unsigned int a6)
{
  v39[0] = 0;
  v39[1] = 0;
  int v12 = a4 & 0xF;
  v38[0] = 0;
  v38[1] = 0;
  if (a4) {
    unsigned int v13 = a4 & 0xF;
  }
  else {
    unsigned int v13 = 16;
  }
  v37.i64[1] = 0;
  *(uint64_t *)((char *)v37.i64 + 1) = 0;
  if (sub_10010BDC0(a1, a2, v39, 0x10u, v38, 0x10u)) {
    return 1045;
  }
  LOBYTE(v15) = 0;
  uint64_t v16 = 15;
  do
  {
    unsigned int v17 = *((unsigned __int8 *)v38 + v16);
    v37.i8[v16] = v15 | (2 * v17);
    unsigned int v15 = v17 >> 7;
    --v16;
  }
  while (v16);
  int8x16_t v36 = 0uLL;
  v37.i8[0] = v15 | (2 * LOBYTE(v38[0]));
  if (SLOBYTE(v38[0]) < 0) {
    int8x16_t v18 = veorq_s8(v37, (int8x16_t)xmmword_1007B91D0);
  }
  else {
    int8x16_t v18 = v37;
  }
  int8x16_t v36 = v18;
  LOBYTE(v19) = 0;
  uint64_t v20 = 15;
  do
  {
    unsigned int v21 = v36.u8[v20];
    v37.i8[v20] = v19 | (2 * v21);
    unsigned int v19 = v21 >> 7;
    --v20;
  }
  while (v20);
  int8x16_t v35 = 0uLL;
  v37.i8[0] = v19 | (2 * v36.i8[0]);
  __dst = a5;
  if (v36.i8[0] < 0) {
    int8x16_t v22 = veorq_s8(v37, (int8x16_t)xmmword_1007B91D0);
  }
  else {
    int8x16_t v22 = v37;
  }
  int8x16_t v35 = v22;
  unsigned int v23 = a4 >> 4;
  if (v12) {
    ++v23;
  }
  if (a4) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = 1;
  }
  uint64_t v25 = (char *)malloc_type_calloc(v24, 0x10uLL, 0x176FE017uLL);
  uint64_t v26 = (char *)malloc_type_calloc(v24 + 1, 0x10uLL, 0x6B69F645uLL);
  uint64_t v27 = v26;
  if (v25 && v26)
  {
    memcpy(v25, a3, a4);
    uint64_t v28 = (16 * (int)v24 - 16) & 0xF0;
    if (v13)
    {
      v25[v28 + v13] |= 0x80u;
      uint64_t v29 = &v35;
    }
    else
    {
      uint64_t v29 = &v36;
    }
    *(int8x16_t *)&v25[v28] = veorq_s8(*(int8x16_t *)&v25[v28], *v29);
    uint64_t v30 = v27 + 16;
    if ((_BYTE)v24)
    {
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      while (1)
      {
        for (uint64_t i = 0; i != 16; ++i)
          v25[v31 + i] ^= v27[v31 + i];
        if (sub_10010BDC0(a1, a2, &v25[16 * v32], 0x10u, &v30[16 * v32], 0x10u)) {
          break;
        }
        ++v32;
        v31 += 16;
        if (v32 == v24) {
          goto LABEL_37;
        }
      }
      free(v27);
      free(v25);
      return 1047;
    }
    else
    {
LABEL_37:
      memcpy(__dst, &v30[v28], a6);
      free(v27);
      free(v25);
      return 0;
    }
  }
  else
  {
    sub_10025B778("Could not allocate memory for the blocks");
    if (v25) {
      free(v25);
    }
    if (v27) {
      free(v27);
    }
    return 1046;
  }
}

uint64_t sub_10010C29C(uint64_t a1, int a2, uint64_t a3, int a4, void *a5)
{
  memset(__src, 0, sizeof(__src));
  size_t v16 = 128;
  uint64_t v8 = ccec_cp_256();
  __chkstk_darwin();
  CCCryptorStatus v10 = (uint64_t *)((char *)&v15 - v9);
  bzero((char *)&v15 - v9, v9);
  __chkstk_darwin();
  int v12 = (uint64_t *)((char *)&v15 - v11);
  bzero((char *)&v15 - v11, v11);
  uint64_t result = 101;
  if (a2 == 64 && a4 == 96)
  {
    *int v12 = v8;
    if (ccec_make_pub())
    {
      sub_10025B778("Failed to ccec_make_pub.\n");
      return 1048;
    }
    else
    {
      *CCCryptorStatus v10 = v8;
      if (ccec_make_priv())
      {
        sub_10025B778("Failed to ccec_make_priv.\n");
        return 1049;
      }
      else
      {
        int v14 = ccecdh_compute_shared_secret();
        if (v14)
        {
          sub_10025B778("Failed to ccecdh_compute_shared_secret (err=%d), outSize=%d.\n", v14, v16);
          return 1050;
        }
        else
        {
          memcpy(a5, __src, v16);
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10010C494(_OWORD *a1, _OWORD *a2)
{
  memset(v28, 0, sizeof(v28));
  if (byte_100A15220)
  {
    sub_10025B778("USING DEBUG KEYS\n");
    uint64_t v4 = 0;
    *a1 = xmmword_1007B9220;
    a1[1] = unk_1007B9230;
    timeval v5 = a1 + 2;
    a1[2] = xmmword_1007B9240;
    a1[3] = unk_1007B9250;
    *a2 = xmmword_1007B9220;
    a2[1] = unk_1007B9230;
    a2[2] = xmmword_1007B9240;
    a2[3] = unk_1007B9250;
    uint64_t v6 = a2 + 4;
    uint64_t v7 = 31;
    a2[4] = xmmword_1007B9200;
    a2[5] = unk_1007B9210;
    do
    {
      char v8 = *((unsigned char *)a1 + v4);
      *((unsigned char *)a1 + v4) = *((unsigned char *)a1 + v7);
      *((unsigned char *)a1 + v7) = v8;
      ++v4;
      --v7;
    }
    while (v4 != 16);
    uint64_t v9 = 0;
    CCCryptorStatus v10 = (char *)a1 + 63;
    do
    {
      char v11 = *((unsigned char *)v5 + v9);
      *((unsigned char *)v5 + v9) = *v10;
      *v10-- = v11;
      ++v9;
    }
    while (v9 != 16);
    uint64_t v12 = 0;
    uint64_t v13 = 31;
    do
    {
      char v14 = *((unsigned char *)a2 + v12);
      *((unsigned char *)a2 + v12) = *((unsigned char *)a2 + v13);
      *((unsigned char *)a2 + v13) = v14;
      ++v12;
      --v13;
    }
    while (v12 != 16);
    uint64_t v15 = 0;
    size_t v16 = a2 + 2;
    unsigned int v17 = (char *)a2 + 63;
    do
    {
      char v18 = *((unsigned char *)v16 + v15);
      *((unsigned char *)v16 + v15) = *v17;
      *v17-- = v18;
      ++v15;
    }
    while (v15 != 16);
    uint64_t v19 = 0;
    uint64_t v20 = (char *)a2 + 95;
    do
    {
      char v21 = *((unsigned char *)v6 + v19);
      *((unsigned char *)v6 + v19) = *v20;
      *v20-- = v21;
      ++v19;
    }
    while (v19 != 16);
    return 0;
  }
  else
  {
    int key = 0;
    ccec_cp_256();
    __chkstk_darwin();
    bzero((char *)&v26 - v23, v23);
    if (ccrng())
    {
      int key = ccec_generate_key();
      if (key)
      {
        sub_10025B778("Failed to ccec_generate_key.\n");
      }
      else
      {
        if ((((unint64_t)(cczp_bitlen() + 7) >> 2) | 1) == 0x41)
        {
          ccec_x963_export();
          long long v24 = *(_OWORD *)((char *)&v28[1] + 1);
          *a1 = *(_OWORD *)((char *)v28 + 1);
          a1[1] = v24;
          long long v25 = *(_OWORD *)((char *)&v28[3] + 1);
          a1[2] = *(_OWORD *)((char *)&v28[2] + 1);
          a1[3] = v25;
          if (3 * ((unint64_t)(cczp_bitlen() + 7) >> 3) == 96)
          {
            ccec_x963_export();
            memmove(a2, (char *)v28 + 1, 0x60uLL);
            return 0;
          }
        }
        sub_10025B778("ccec_x963_export_size is %d.\n");
      }
    }
    else
    {
      sub_10025B778("ccrng failed: %d\n");
    }
    return 1051;
  }
}

void sub_10010C770()
{
  if (qword_100A00930 != -1) {
    dispatch_once(&qword_100A00930, &stru_10099ADD0);
  }
  if (!atomic_fetch_add(dword_100A008C8, 1u))
  {
    unsigned int v0 = qword_100A008D0;
    dispatch_async(v0, &stru_10099AC90);
  }
}

void sub_10010C7E8(id a1)
{
  if (dword_100A008D8) {
    sub_10025B8C0();
  }

  IOPMAssertionCreateWithName(@"PreventUserIdleSystemSleep", 0xFFu, @"com.apple.BTStack", (IOPMAssertionID *)&dword_100A008D8);
}

void sub_10010C838()
{
  if (!atomic_load((unsigned int *)dword_100A008C8)) {
    sub_10025B8C0();
  }
  if (atomic_fetch_add(dword_100A008C8, 0xFFFFFFFF) == 1)
  {
    uint64_t v1 = qword_100A008D0;
    dispatch_async(v1, &stru_10099ACD0);
  }
}

void sub_10010C8A4(id a1)
{
  if (dword_100A008D8)
  {
    IOPMAssertionRelease(dword_100A008D8);
    dword_100A008D8 = 0;
  }
}

void sub_10010C8D4()
{
  if (qword_100A00930 != -1) {
    dispatch_once(&qword_100A00930, &stru_10099ADD0);
  }
  if (!atomic_fetch_add(&dword_100A008DC, 1u))
  {
    unsigned int v0 = qword_100A008D0;
    dispatch_async(v0, &stru_10099AD10);
  }
}

void sub_10010C94C(id a1)
{
  Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  CFDictionaryAddValue(Mutable, @"AssertName", @"com.apple.BTStack.ForceWake");
  IOPMAssertionDeclareSystemActivityWithProperties();
  CFRelease(Mutable);
}

void sub_10010C9D0()
{
  if (!atomic_load((unsigned int *)&dword_100A008DC)) {
    sub_10025B8C0();
  }
  if (atomic_fetch_add(&dword_100A008DC, 0xFFFFFFFF) == 1)
  {
    uint64_t v1 = qword_100A008D0;
    dispatch_async(v1, &stru_10099AD50);
  }
}

void sub_10010CA3C(id a1)
{
  if (dword_100A008E0)
  {
    IOPMAssertionRelease(dword_100A008E0);
    dword_100A008E0 = 0;
  }
}

void sub_10010CA6C(char *cStr, const char *a2, _OWORD *a3, int a4)
{
  LODWORD(v4) = a4;
  if (qword_100A008F0 != -1) {
    dispatch_once(&qword_100A008F0, &stru_10099AD90);
  }
  if (!off_100A008E8) {
    return;
  }
  CFStringRef v8 = CFStringCreateWithCString(0, cStr, 0x8000100u);
  Mutable = CFDictionaryCreateMutable(0, 1, &kCFCopyStringDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  if (!v4) {
    goto LABEL_45;
  }
  char v10 = 0;
  uint64_t v4 = v4;
  do
  {
    CFStringRef v11 = CFStringCreateWithCString(0, a2, 0x8000100u);
    *(_OWORD *)length = *a3;
    if (LOBYTE(length[0]) > 0x10u)
    {
      if (LOBYTE(length[0]) == 17)
      {
        CFIndex v14 = length[1];
        CFIndex v17 = 6;
      }
      else
      {
        if (LOBYTE(length[0]) == 18)
        {
          CFIndex v14 = length[1];
        }
        else
        {
          if (LOBYTE(length[0]) != 19)
          {
LABEL_30:
            uint64_t v15 = "(NULL)";
LABEL_31:
            CFBooleanRef v18 = (const __CFBoolean *)CFStringCreateWithCString(0, v15, 0x8000100u);
            goto LABEL_38;
          }
          CFIndex v14 = LODWORD(length[1]);
        }
        CFIndex v17 = WORD1(length[0]);
      }
      CFBooleanRef v18 = CFDataCreate(0, (const UInt8 *)v14, v17);
    }
    else
    {
      switch(LOBYTE(length[0]))
      {
        case 1:
          switch(WORD1(length[0]))
          {
            case 4u:
              CFNumberType v13 = kCFNumberIntType;
              goto LABEL_35;
            case 2u:
              __int16 valuePtr = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberShortType;
              break;
            case 1u:
              LOBYTE(valuePtr) = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberCharType;
              break;
            default:
              goto LABEL_40;
          }
          goto LABEL_37;
        case 2:
          switch(WORD1(length[0]))
          {
            case 4u:
              CFNumberType v13 = kCFNumberSInt32Type;
LABEL_35:
              p___int16 valuePtr = &length[1];
              break;
            case 2u:
              __int16 valuePtr = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberSInt16Type;
              break;
            case 1u:
              LOBYTE(valuePtr) = length[1];
              p___int16 valuePtr = (CFIndex *)&valuePtr;
              CFNumberType v13 = kCFNumberSInt8Type;
              break;
            default:
              goto LABEL_40;
          }
LABEL_37:
          CFBooleanRef v18 = CFNumberCreate(0, v13, p_valuePtr);
          break;
        case 4:
          uint64_t v15 = (const char *)length[1];
          goto LABEL_31;
        case 5:
          if (LOBYTE(length[1])) {
            CFBooleanRef v16 = kCFBooleanTrue;
          }
          else {
            CFBooleanRef v16 = kCFBooleanFalse;
          }
          if (v16) {
            goto LABEL_39;
          }
          goto LABEL_40;
        default:
          goto LABEL_30;
      }
    }
LABEL_38:
    CFBooleanRef v16 = v18;
    if (v18)
    {
LABEL_39:
      CFDictionaryAddValue(Mutable, v11, v16);
      CFRelease(v16);
      char v10 = 1;
    }
LABEL_40:
    if (v11) {
      CFRelease(v11);
    }
    a2 += 256;
    ++a3;
    --v4;
  }
  while (v4);
  if (v10) {
    off_100A008E8(35, v8, Mutable, 0);
  }
LABEL_45:
  if (v8) {
    CFRelease(v8);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
}

void sub_10010CD74(id a1)
{
  off_100A008E8 = (uint64_t (*)(void, void, void, void))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "PLLogRegisteredEvent");
}

uint64_t sub_10010CDA0(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    vm_size_t v2 = 0x20000;
    if (v1)
    {
      unsigned int v3 = *(_DWORD *)(v1 + 8);
      if (v3) {
        vm_size_t v2 = v3;
      }
      else {
        vm_size_t v2 = 0x20000;
      }
    }
  }
  else
  {
    vm_size_t v2 = 0x20000;
  }
  zone = malloc_create_zone(v2, 0);
  qword_100A008F8 = (uint64_t)zone;
  if (!zone) {
    return 104;
  }
  malloc_set_zone_name(zone, "BTStack");
  return 0;
}

uint64_t sub_10010CE04()
{
  qword_100A008F8 = 0;
  return 0;
}

BOOL sub_10010CE34()
{
  return qword_100A008F8 == 0;
}

void *sub_10010CE48(size_t size)
{
  if (HIDWORD(size)) {
    return 0;
  }
  else {
    return malloc_type_zone_calloc((malloc_zone_t *)qword_100A008F8, 1uLL, size, 0xD18F5C75uLL);
  }
}

uint64_t sub_10010CE74()
{
  bzero(__buf, 0x400uLL);
  uint64_t v6 = 0;
  bzero(v7, 0x400uLL);
  sub_10010BB74((_DWORD *)&v6 + 1, (__darwin_suseconds_t *)&v6);
  uint64_t result = open("/dev/uart.log", 0);
  if ((result & 0x80000000) == 0)
  {
    int v1 = result;
    if (qword_100A00D38 != -1) {
      dispatch_once(&qword_100A00D38, &stru_10099AE10);
    }
    __strlcat_chk();
    __strlcat_chk();
    int v2 = open(v7, 521, 420);
    if (v2 < 0)
    {
      int v3 = v1;
    }
    else
    {
      int v3 = v2;
      dprintf(v2, "START DUMP : %d.%d\n", HIDWORD(v6), v6);
      ssize_t v4 = read(v1, __buf, 0x400uLL);
      if (v4 >= 1)
      {
        for (ssize_t i = v4; i > 0; ssize_t i = read(v1, __buf, 0x400uLL))
          write(v3, __buf, i);
      }
      close(v1);
    }
    return close(v3);
  }
  return result;
}

uint64_t sub_10010CFF0(uint64_t result, unsigned int a2)
{
  if (byte_100A0090C)
  {
    int v3 = (unsigned char *)result;
    if (dword_100A00900) {
      sub_100026DB4(dword_100A00900);
    }
    if (a2 >= 7)
    {
      BOOL v4 = v3[2] == 27 && v3[3] == 3;
      if (v4 && v3[6] == 255)
      {
        sub_10025B778("Hardward Core dump complete, reporting to daemon");
        sub_100182660(245);
      }
    }
    if (sub_1000268E4((uint64_t)sub_10010D1D0, 0, 100, &dword_100A00900)) {
      sub_10025B778("Could not register timeout for CoreDump abort.\n");
    }
    if ((byte_100A00904 & 1) == 0)
    {
      byte_100A00904 = 1;
      sub_10025B778("Hardware Core dump starts\n");
    }
    ++dword_100A00908;
    if ((byte_100A00D40 & 1) == 0)
    {
      int v10 = 0;
      unsigned int v9 = 0;
      sub_10010BB74(&v10, (__darwin_suseconds_t *)&v9);
      time_t v7 = v10;
      uint64_t v8 = v9;
      timeval v5 = gmtime(&v7);
      strftime(byte_100A00E41, 0x3CuLL, "%Y_%m_%d_%H_%M_%S", v5);
      if (qword_100A00D38 != -1) {
        dispatch_once(&qword_100A00D38, &stru_10099AE10);
      }
      __sprintf_chk(byte_100A00D41, 0, 0x100uLL, "%s/bluetoothd-FWCOREDUMP_%s.log", byte_100A00938, byte_100A00E41);
      byte_100A00D40 = 1;
    }
    uint64_t result = open(byte_100A00D41, 521, 420);
    if ((result & 0x80000000) == 0)
    {
      int v6 = result;
      write(result, v3, a2);
      return close(v6);
    }
  }
  return result;
}

uint64_t sub_10010D1C4()
{
  return byte_100A0090C;
}

void sub_10010D1D0()
{
  sub_10025B778("Hardward Core dump complete, reporting to daemon");

  sub_100182660(245);
}

uint64_t sub_10010D204(uint64_t result)
{
  byte_100A0090C = result;
  return result;
}

void sub_10010D210()
{
  byte_100A00904 = 1;
}

uint64_t sub_10010D220()
{
  return dword_100A00908;
}

__n128 sub_10010D22C(long long *a1, __n128 *a2)
{
  xmmword_100A0090D = *a1;
  __n128 result = *a2;
  xmmword_100A0091D = (__int128)*a2;
  return result;
}

uint64_t sub_10010D250(const void *a1, int a2, uint64_t a3, int a4)
{
  uint64_t result = 101;
  if (a2 == 16 && a4 == 7)
  {
    long long v8 = 0uLL;
    uint64_t result = sub_10010BEB8(&xmmword_100A0091D, 0x10uLL, a1, 0x10u, &v8, 0x10u);
    if (!result)
    {
      if (*(void *)((char *)&v8 + 7) == *(void *)((char *)&xmmword_100A0090D + 7)
        && HIBYTE(v8) == (unint64_t)HIBYTE(xmmword_100A0090D))
      {
        uint64_t result = 0;
        *(_DWORD *)a3 = v8;
        *(_WORD *)(a3 + 4) = WORD2(v8);
        *(unsigned char *)(a3 + 6) = BYTE6(v8);
      }
      else
      {
        return 131;
      }
    }
  }
  return result;
}

void sub_10010D328(uuid_t out, uint64_t a2, int a3)
{
  if (a3)
  {
    long long v5 = xmmword_100A0090D;
    __memcpy_chk();
    if (sub_10010BDC0(&xmmword_100A0091D, 0x10uLL, &v5, 0x10u, out, 0x10u))
    {
      uint64_t v4 = sub_10010B394(105);
      sub_10010D408(v4);
    }
  }
  else
  {
    uuid_generate(out);
  }
}

uint64_t sub_10010D408(uint64_t result)
{
  byte_100A0092D = result;
  return result;
}

uint64_t sub_10010D414()
{
  int64x2_t v0 = vdupq_n_s64(MGGetProductType());
  return vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v0, (int64x2_t)xmmword_1007B91E0), (int32x4_t)vceqq_s64(v0, (int64x2_t)xmmword_1007B91F0)))) & 1;
}

void sub_10010D45C(id a1)
{
  qword_100A008D0 = (uint64_t)dispatch_queue_create("com.apple.BTStack.IOPMAssertion", 0);
}

void sub_10010D488(id a1)
{
  NSStartSearchPathEnumerationPrivate();
  NSGetNextSearchPathEnumeration();

  __strlcat_chk();
}

uint64_t sub_10010D4E4()
{
  return sub_1001E5FF0(31, (uint64_t)sub_10010D4FC);
}

void sub_10010D4FC(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  if (a1 != 31) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_attClassicConnectionInd on psm %x, addr %:, cid %x", v6, v7, v8, v9, v10, v11, v12, a1);
    CFNumberType v13 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v45 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v14 = sub_100197A30((uint64_t)a2);
  if (v14)
  {
    uint64_t v15 = v14;
    if (sub_10020EE0C(v14) || sub_10020EC74((uint64_t)a2))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT session with this connection already exists, reject duplicate", v16, v17, v18, v19, v20, v21, v22, v43);
        size_t v23 = sub_100050B4C(0x5Cu);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      uint64_t v24 = sub_1001E0320(0, 0, 0, a3, 0, 0, 0);
      if (v24)
      {
        uint64_t v25 = v24;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_L2CAP_Accept rejection of duplicate connection failed with result %!", v26, v27, v28, v29, v30, v31, v32, v25);
          uint64_t v33 = sub_100050B4C(0x5Cu);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
    }
    else
    {
      uint64_t v34 = sub_10020EB6C((uint64_t)a2, 0);
      if (v34)
      {
        *((_WORD *)v34 + 8) = a3;
        *(void *)uint64_t v34 = v15;
        if (qword_100A00E88) {
          qword_100A00E88(((unint64_t)*a2 << 40) | ((unint64_t)a2[1] << 32) | ((unint64_t)a2[2] << 24) | ((unint64_t)a2[3] << 16) | ((unint64_t)a2[4] << 8) | a2[5]);
        }
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"ATT failed to create session", v35, v36, v37, v38, v39, v40, v41, v43);
          uint64_t v42 = sub_100050B4C(0x5Cu);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        sub_10025B8C0();
      }
    }
  }
}

uint64_t sub_10010D758(unint64_t a1, int a2)
{
  unint64_t v3 = sub_10022A5E0(a1);
  int v37 = v3;
  __int16 v38 = WORD2(v3);
  uint64_t v4 = sub_100197A30((uint64_t)&v37);
  if (!v4) {
    return 101;
  }
  long long v5 = sub_10020EE0C(v4);
  if (!v5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ATT_ClassicAccept can not find bearer", v9, v10, v11, v12, v13, v14, v15, v36);
      uint64_t v16 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 101;
  }
  uint64_t v6 = v5;
  unsigned int v7 = *((unsigned __int16 *)v5 + 8);
  if (!*((_WORD *)v5 + 8))
  {
    sub_10025B8C0();
    unsigned int v7 = *((unsigned __int16 *)v6 + 8);
  }
  uint64_t v8 = sub_1001E0320((uint64_t)sub_10010D900, (uint64_t)sub_10010DC2C, (uint64_t)sub_10010DE00, v7, (uint64_t)&xmmword_1007B9260, a2, (uint64_t)&unk_10099AE48);
  if (!v8 && (a2 & 1) != 0) {
    return 0;
  }
  if (a2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Att L2CAP Accept error with %!", v18, v19, v20, v21, v22, v23, v24, v8);
      uint64_t v25 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  uint64_t v26 = sub_10020E744(v6);
  if (v26)
  {
    uint64_t v27 = (uint64_t)v26;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to remove ATT session with %!", v28, v29, v30, v31, v32, v33, v34, v27);
      uint64_t v35 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v8;
}

void sub_10010D900(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_attClassicConnectCfm: cid %x inMTU %d outMTU %d result %!", v8, v9, v10, v11, v12, v13, v14, a1);
    uint64_t v15 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v16 = (unsigned __int8 *)sub_10020EEB0(a1);
  if (a2 >= a3) {
    unsigned int v17 = a3;
  }
  else {
    unsigned int v17 = a2;
  }
  if (v17 <= 0x30) {
    __int16 v18 = 48;
  }
  else {
    __int16 v18 = v17;
  }
  if (v16)
  {
    uint64_t v19 = v16;
    uint64_t v20 = v16[8];
    uint64_t v21 = v16[9];
    uint64_t v22 = v16[10];
    uint64_t v23 = v16[11];
    uint64_t v24 = v16[12];
    uint64_t v25 = v16[13];
    if (a4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT cfm result is %!", v26, v27, v28, v29, v30, v31, v32, a4);
        uint64_t v33 = sub_100050B4C(0x5Cu);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      uint64_t v34 = sub_10020E744(v19);
      if (!v34) {
        goto LABEL_31;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Session destroy failed with %!", v35, v36, v37, v38, v39, v40, v41, (uint64_t)v34);
        uint64_t v42 = sub_100050B4C(0x5Cu);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      goto LABEL_30;
    }
    *(void *)buf = 0;
    a4 = sub_1001DDA80(a1, buf);
    if (a4)
    {
      if (!sub_100058654()) {
        goto LABEL_30;
      }
      sub_100056E24((uint64_t)"L2CAP get handle failed", v51, v52, v53, v54, v55, v56, v57, v67);
      int v58 = sub_100050B4C(0x5Cu);
      if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
        goto LABEL_30;
      }
    }
    else
    {
      if ((unsigned __int8 *)sub_10020EAE4((uint64_t)v19, *(uint64_t *)buf, v18) == v19)
      {
        LODWORD(v34) = 1;
        goto LABEL_31;
      }
      if (!sub_100058654()
        || (sub_100056E24((uint64_t)"ATT cfm failed to update session", v59, v60, v61, v62, v63, v64, v65, v67),
            uint64_t v66 = sub_100050B4C(0x5Cu),
            !os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)))
      {
LABEL_30:
        LODWORD(v34) = 0;
LABEL_31:
        if (off_100A00E90) {
          off_100A00E90((v20 << 40) | (v21 << 32) | (v22 << 24) | (v23 << 16) | (v24 << 8) | v25, a4);
        }
        if (v34)
        {
          sub_10020E300();
          sub_10020E314();
        }
        return;
      }
    }
    sub_100744F6C();
    goto LABEL_30;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ATT cfm failed to find session", v43, v44, v45, v46, v47, v48, v49, v67);
    uint64_t v50 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10010DC2C(unsigned int a1, uint64_t a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_attClassicDisconnectCB: cid %x result %!", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v33 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v12 = (unsigned __int8 *)sub_10020EEB0(a1);
  if (v12)
  {
    uint64_t v13 = (unsigned __int16 **)v12;
    if (off_100A00E98) {
      off_100A00E98(((unint64_t)v12[8] << 40) | ((unint64_t)v12[9] << 32) | ((unint64_t)v12[10] << 24) | ((unint64_t)v12[11] << 16) | ((unint64_t)v12[12] << 8) | v12[13], a2);
    }
    sub_10020E328();
    uint64_t v14 = sub_10020EE34(*v13);
    if (v14)
    {
      uint64_t v15 = v14;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Session destroy failed with %!", v16, v17, v18, v19, v20, v21, v22, v15);
        uint64_t v23 = sub_100050B4C(0x5Cu);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"attClassicDisconnectCB received on cid %d, but no bearer was found", v24, v25, v26, v27, v28, v29, v30, a1);
      uint64_t v31 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B8C0();
  }
}

void sub_10010DE00(unsigned int a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v17 = 0;
  uint64_t v7 = sub_1001DDA80(a1, &v17);
  if (v7)
  {
    uint64_t v8 = v7;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ATT recv data ind get connection handle failed with status %!", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    sub_10020FE04(v17, a2, a3, a4);
  }
}

uint64_t sub_10010DEA4(unint64_t a1)
{
  unint64_t v1 = sub_10022A5E0(a1);
  int v39 = v1;
  __int16 v40 = WORD2(v1);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"BT_ATT_ClassicConnect addr=%: ", v2, v3, v4, v5, v6, v7, v8, (uint64_t)&v39);
    uint64_t v9 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v42 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_10020EC74((uint64_t)&v39))
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Classic Connect Att session with this connection already exists!!!", v11, v12, v13, v14, v15, v16, v17, v38);
    uint64_t v18 = sub_100050B4C(0x5Cu);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_7;
  }
  uint64_t v21 = sub_10020EB6C((uint64_t)&v39, 1);
  if (!v21)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Classic Connect failed to allocate bearer", v30, v31, v32, v33, v34, v35, v36, v38);
    uint64_t v37 = sub_100050B4C(0x5Cu);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_7:
    sub_100745764();
    return 101;
  }
  uint64_t v19 = sub_1001DF7BC((uint64_t)sub_10010D900, (uint64_t)sub_10010DC2C, (uint64_t)sub_10010DE00, 31, (uint64_t)&v39, (uint64_t)&xmmword_1007B9260, (_WORD *)v21 + 8, (uint64_t)&unk_10099AE48);
  if (v19)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Att L2CAP Connect error with %!", v22, v23, v24, v25, v26, v27, v28, v19);
      uint64_t v29 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v19;
}

uint64_t sub_10010E0B8(unint64_t a1)
{
  unint64_t v1 = sub_10022A5E0(a1);
  int v25 = v1;
  __int16 v26 = WORD2(v1);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ATT ClassicDisconnect addr=%: ", v2, v3, v4, v5, v6, v7, v8, (uint64_t)&v25);
    uint64_t v9 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v11 = sub_100197A30((uint64_t)&v25);
  if (!v11) {
    return 101;
  }
  uint64_t v12 = sub_10020EE0C(v11);
  if (!v12) {
    return 101;
  }
  uint64_t v13 = v12;
  unsigned int v14 = *((unsigned __int16 *)v12 + 8);
  if (!v14)
  {
    sub_10025B8C0();
    unsigned int v14 = *((unsigned __int16 *)v13 + 8);
  }
  uint64_t v15 = sub_1001E121C(v14, 436);
  if (v15)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Att L2CAP Disconnect error with %!", v16, v17, v18, v19, v20, v21, v22, v15);
      uint64_t v23 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v15;
}

uint64_t sub_10010E210(uint64_t a1, int a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v13 = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ATT Classic handle registration:  0x%x -> 0x%x", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x5Cu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v19 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  byte_100A00E68 = 1;
  word_100A00E6A = 2;
  dword_100A00E70 = a1;
  byte_100A00E78 = 1;
  word_100A00E7A = 2;
  dword_100A00E80 = a2;
  unsigned int v14 = &unk_10099AE78;
  LOWORD(v15) = 3;
  uint64_t v16 = off_1009F90F0;
  LOWORD(v17) = word_1009F90F8;
  return sub_10024E258((uint64_t)&v14, &v13);
}

__n128 sub_10010E354(__n128 *a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (qword_100A00E88) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = off_100A00E90 == 0;
  }
  if (!v3 || off_100A00E98 != 0) {
    sub_10025B8C0();
  }
  if (a1)
  {
    __n128 result = *a1;
    off_100A00E98 = (uint64_t (*)(void, void))a1[1].n128_u64[0];
    *(__n128 *)&qword_100A00E88 = result;
  }
  return result;
}

void sub_10010E3B4()
{
  qword_100A00E88 = 0;
  off_100A00E90 = 0;
  off_100A00E98 = 0;
}

uint64_t sub_10010E3C8(uint64_t a1, _WORD *a2)
{
  v3[0] = xmmword_1007B9260;
  v3[1] = *(_OWORD *)algn_1007B9270;
  return sub_1001DEF88(31, (uint64_t)v3, a1, (uint64_t)sub_10010D900, (uint64_t)sub_10010DC2C, (uint64_t)sub_10010DE00, a2, (uint64_t)&unk_10099AE48);
}

uint64_t sub_10010E440(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  __int16 v20 = 0;
  int v19 = 0;
  uint64_t result = sub_100204F78(a1, (uint64_t)&v19);
  if (!result)
  {
    uint64_t v9 = sub_10020EC74((uint64_t)&v19);
    if (v9 || (uint64_t v9 = (uint64_t)sub_10020EB6C((uint64_t)&v19, 1)) != 0)
    {
      *(_WORD *)(v9 + 16) = a1;
      sub_10010D900(a1, a2, a3, a4);
      return 0;
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BT_ATT_FastConnect_ClassicConnect error creating ATT signaling", v10, v11, v12, v13, v14, v15, v16, v18);
        uint64_t v17 = sub_100050B4C(0x5Cu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  return result;
}

uint64_t sub_10010E510(uint64_t a1, unsigned int a2)
{
  uint64_t v16 = 0;
  uint64_t v3 = sub_100197A30(a1);
  uint64_t v4 = v3;
  if (v3 && (uint64_t v5 = (unsigned __int16 **)sub_10020EE0C(v3)) != 0)
  {
    uint64_t v6 = sub_10020EE34(*v5);
    if (v6)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BT_ATT_ClassicFastDisconnectAtt destroy session error with %d", v7, v8, v9, v10, v11, v12, v13, v6);
        uint64_t v14 = sub_100050B4C(0x5Cu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  else
  {
    uint64_t v6 = 101;
  }
  if (a2)
  {
    if (!sub_1001DD56C(a2, &v16))
    {
      if (v16)
      {
        sub_1001DEC18(v16);
        if (v4) {
          sub_100182088(v4);
        }
      }
    }
  }
  return v6;
}

uint64_t sub_10010E5E4(uint64_t a1)
{
  bzero(word_100A00EA0, 0xB68uLL);
  byte_100A019E0 = 1;
  if (!_os_feature_enabled_impl()) {
    return 0;
  }
  long long v2 = *(_OWORD *)a1;
  qword_100A019F8 = *(void *)(a1 + 16);
  xmmword_100A019E8 = v2;
  if (byte_100A01A00) {
    return 0;
  }
  v39[0] = (uint64_t)&unk_10099AF28;
  v39[1] = 3;
  void v39[2] = (uint64_t)off_1009F9100;
  v39[3] = (unsigned __int16)word_1009F9108;
  uint64_t v5 = sub_1001E6318(&word_100A01A02);
  if (v5)
  {
    uint64_t v3 = v5;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"L2CAP psm allocation failed!", v6, v7, v8, v9, v10, v11, v12, v39[0]);
      uint64_t v13 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_8:
      }
        sub_100748324();
    }
  }
  else
  {
    uint64_t v14 = sub_1001E5FF0((unsigned __int16)word_100A01A02, (uint64_t)sub_1001108AC);
    if (!v14)
    {
      byte_100A01A08 = 1;
      word_100A01A0A = 2;
      dword_100A01A10 = (unsigned __int16)word_100A01A02;
      uint64_t v3 = sub_10024E258((uint64_t)v39, (int *)algn_100A01A04);
      if (!v3)
      {
        byte_100A01A00 = 1;
        return v3;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_SDPDB_AddServiceRecord failed", v23, v24, v25, v26, v27, v28, v29, v39[0]);
        uint64_t v30 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100748324();
        }
      }
      sub_1001E61E4((unsigned __int16)word_100A01A02);
      goto LABEL_18;
    }
    uint64_t v3 = v14;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_L2CAP_Register failed", v15, v16, v17, v18, v19, v20, v21, v39[0]);
      uint64_t v22 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        goto LABEL_8;
      }
    }
  }
LABEL_18:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"registerL2CAPListeners failed", v31, v32, v33, v34, v35, v36, v37, v39[0]);
    uint64_t v38 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100748324();
    }
  }
  return v3;
}

uint64_t sub_10010E830(uint64_t a1)
{
  uint64_t v2 = 0;
  while (1)
  {
    int v3 = (unsigned __int16)word_100A00EA0[v2];
    int v4 = (unsigned __int16)word_100A00EA0[v2 + 1];
    if ((v4 | (v3 << 16)) == a1) {
      break;
    }
    v2 += 36;
    if (v2 == 1080)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid Handle %x", v5, v6, v7, v8, v9, v10, v11, a1);
        uint64_t v12 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 414;
    }
  }
  uint64_t v14 = (int *)&word_100A00EA0[v2 + 2];
  uint64_t v15 = sub_1000E1458((uint64_t)&unk_100A01710, 30, (unsigned __int16)word_100A00EA0[v2 + 1]);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_1000E0E94(v3, v4, v14, 2, 2);
    uint64_t v38 = 0;
    __int16 v37 = 0;
    __int16 v18 = *((_WORD *)v17 + 1);
    LOWORD(v38) = *((_WORD *)v17 + 5);
    WORD1(v38) = v18;
    sub_1000226D0((uint64_t)(v17 + 1), 2u);
    sub_100022798((unsigned __int8 *)v17 + 16, (char *)&v38, 4uLL, 2u);
    sub_100022798((unsigned __int8 *)v17 + 16, (char *)&v37, *((unsigned __int16 *)v17 + 64), 2u);
    *((void *)v17 + 19) = v16;
    uint64_t v13 = sub_1000E1010((uint64_t)v17, (uint64_t)sub_1001100D0);
    if (!v13)
    {
      sub_100110A9C(2, a1);
      return v13;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"sendDisconnectReqPacket channel not found: addr=%: cid=%d sid=%d result=%d", v19, v20, v21, v22, v23, v24, v25, (uint64_t)v14);
      uint64_t v26 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100748478();
      }
    }
    uint64_t v13 = 406;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"sendDisconnectReqPacket failed", v27, v28, v29, v30, v31, v32, v33, v36);
    uint64_t v34 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      sub_100748324();
    }
  }
  return v13;
}

__int16 *sub_10010EA70(int *a1, __int16 a2, uint64_t a3)
{
  unint64_t v4 = 0x7FFFFFFFFFFFFBC8uLL;
  while (1)
  {
    uint64_t v5 = &word_100A00EA0[v4];
    if (!*(void *)&word_100A00EA0[v4 + 1088]) {
      break;
    }
    v4 += 36;
    if (!(v4 * 2)) {
      return 0;
    }
  }
  uint64_t result = v5 + 1080;
  int v7 = *a1;
  v5[1084] = *((_WORD *)a1 + 2);
  *((_DWORD *)v5 + 541) = v7;
  v5[1081] = a2;
  v5[1080] = *(_WORD *)(a3 + 8);
  *((void *)v5 + 272) = *(void *)a3;
  *((_DWORD *)v5 + 552) = *(_DWORD *)(a3 + 10);
  *((_DWORD *)v5 + 556) = 0;
  *(void *)(v5 + 1106) = *(void *)(a3 + 14);
  return result;
}

uint64_t sub_10010EAE0(int *a1, int a2, int a3, __int16 a4, __int16 a5, void **a6)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"sendConnectReqPacket: addr=%: cid=%u sid=%u major=%u minor=%u result=%u", v12, v13, v14, v15, v16, v17, v18, (uint64_t)a1);
    uint64_t v19 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v36 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v20 = sub_1000E1458((uint64_t)&unk_100A01710, 30, a2);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_1000E0E94(a3, a2, a1, 0, 12);
    if (!v22) {
      sub_10025B8C0();
    }
    uint64_t v34 = 0;
    __int16 v23 = *((_WORD *)v22 + 1);
    LOWORD(v34) = *((_WORD *)v22 + 5);
    WORD1(v34) = v23;
    *(_WORD *)buf = a4;
    *(_WORD *)&buf[2] = a5;
    uint64_t v36 = *a6;
    sub_1000226D0((uint64_t)(v22 + 1), 2u);
    sub_100022798((unsigned __int8 *)v22 + 16, (char *)&v34, 4uLL, 2u);
    sub_100022798((unsigned __int8 *)v22 + 16, (char *)buf, *((unsigned __int16 *)v22 + 64), 2u);
    *((void *)v22 + 19) = v21;
    uint64_t v24 = sub_1000E1010((uint64_t)v22, (uint64_t)sub_1001100D0);
    if (!v24) {
      sub_100110A9C(0, a2 | (a3 << 16));
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"sendConnectReqPacket channel not found: addr=%: cid=%d sid=%d result=%d", v25, v26, v27, v28, v29, v30, v31, (uint64_t)a1);
      uint64_t v32 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100748478();
      }
    }
    return 406;
  }
  return v24;
}

double sub_10010ED2C(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a3 <= 3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Incoming message has invalid length %d", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v12 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        goto LABEL_4;
      }
    }
    return result;
  }
  uint64_t v116 = 0;
  if (!a2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c", 662, "buf");
  }
  uint64_t v15 = 0;
  unsigned __int16 v16 = a3 - 4;
  int v17 = *a2;
  uint64_t v18 = a2[1];
  do
  {
    if (__PAIR64__((unsigned __int16)word_100A00EA0[v15 + 1], (unsigned __int16)word_100A00EA0[v15]) == __PAIR64__(a1, v18))
    {
      if (sub_1001DD56C(a1, (uint64_t *)&v116) || !sub_1001E6484(v116))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Can't find channel %d", v27, v28, v29, v30, v31, v32, v33, a1);
          uint64_t v34 = sub_100050B4C(0x52u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
LABEL_15:
          }
            sub_100744F6C();
        }
        return result;
      }
      int v35 = v17 - 1;
      uint64_t v36 = &word_100A00EA0[v15];
      switch(v35)
      {
        case 0:
          if (v3 < 6)
          {
            unsigned int v81 = 4;
          }
          else
          {
            uint64_t v37 = a2[2];
            if (a2[2])
            {
              char v38 = 0;
              goto LABEL_73;
            }
            unsigned int v81 = 6;
          }
          uint64_t v82 = &word_100A00EA0[v15];
          if (LOBYTE(word_100A00EA0[v15 + 12]) != 3)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"l2capRecvDataInd: BT_AAP_CONNECT_RSP connection in unhandled state sid=%u cid=%u state=%u", v90, v91, v92, v93, v94, v95, v96, v18);
              __int16 v97 = sub_100050B4C(0x52u);
              if (os_log_type_enabled(v97, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
LABEL_72:
            uint64_t v37 = 0;
            char v38 = 1;
LABEL_73:
            uint64_t v111 = a1 | (v18 << 16);
            sub_100110D60(v111);
            uint64_t v112 = *(void *)&word_100A00EA0[v15 + 8];
            if (v112)
            {
              uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t, void, void, void, __int16 *))(v112 + 8);
              if (v113)
              {
                uint64_t v114 = sub_1001E6484(v116);
                v113(v114 + 10, v37, v111, (unsigned __int16)word_100A00EA0[v15 + 22], (unsigned __int16)word_100A00EA0[v15 + 24], (unsigned __int16)word_100A00EA0[v15 + 25], &word_100A00EA0[v15 + 26]);
              }
            }
            if ((v38 & 1) == 0) {
              goto LABEL_77;
            }
            return result;
          }
          *((unsigned char *)v82 + 24) = 4;
          v82[22] = *(_WORD *)(sub_1001E6484(v116) + 32) - 4;
          if (v3 <= 5)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c");
          }
          else if ((int)(v3 - v81) >= 2)
          {
            uint64_t v83 = &word_100A00EA0[v15];
            word_100A00EA0[v15 + 24] = a2[v81 / 2];
            uint64_t v84 = v81 + 2;
            if ((int)v3 - (int)v84 > 1)
            {
              v83[25] = *(unsigned __int16 *)((char *)a2 + v84);
              LODWORD(v84) = v81 + 4;
              if ((int)v3 >= 18) {
                __int16 v85 = 18;
              }
              else {
                __int16 v85 = v3;
              }
              uint64_t v86 = v83 + 26;
              uint64_t v87 = (unsigned __int16)(v85 - 10);
              char v88 = (__int16 *)((char *)v83 + v87 + 52);
              int v89 = v3 - v84;
              LODWORD(v3) = v87;
LABEL_65:
              if (v89 >= (int)v3 && v86 < v88)
              {
                uint64_t v99 = (char *)a2 + v84;
                unsigned __int8 v100 = (__int16 *)((char *)&word_100A00EA0[v15 + 26] + (char *)v88 - (char *)v86);
                do
                {
                  char v101 = *v99++;
                  *(unsigned char *)uint64_t v86 = v101;
                  uint64_t v86 = (__int16 *)((char *)v86 + 1);
                }
                while (v100 != v86);
              }
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"l2capRecvDataInd: BT_AAP_CONNECT_RSP connection accepted sid=%u cid=%u", v102, v103, v104, v105, v106, v107, v108, v18);
                int v109 = sub_100050B4C(0x52u);
                if (os_log_type_enabled(v109, OS_LOG_TYPE_DEFAULT))
                {
                  long long v110 = sub_100050714();
                  *(_DWORD *)buf = 136446210;
                  uint64_t v118 = v110;
                  _os_log_impl((void *)&_mh_execute_header, v109, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              goto LABEL_72;
            }
LABEL_61:
            if ((int)v3 >= 18) {
              __int16 v98 = 18;
            }
            else {
              __int16 v98 = v3;
            }
            uint64_t v86 = &word_100A00EA0[v15 + 26];
            uint64_t v3 = (unsigned __int16)(v98 - 10);
            char v88 = (__int16 *)((char *)v86 + v3);
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c");
            int v89 = 0;
            goto LABEL_65;
          }
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/aap/aap_client.c");
          LODWORD(v84) = v81;
          goto LABEL_61;
        case 1:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"l2capRecvDataInd: BT_AAP_DISCONNECT_REQ", v47, v48, v49, v50, v51, v52, v53, v115);
            uint64_t v54 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v55 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v118 = v55;
              _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          uint64_t v56 = sub_1001E6484(v116);
          uint64_t v57 = sub_10011186C((int *)(v56 + 10), a1, v18);
          if (v57)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"sendDisconnectRspPacket failed", v58, v59, v60, v61, v62, v63, v64, v115);
              uint64_t v65 = sub_100050B4C(0x52u);
              if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
                sub_100748324();
              }
            }
          }
          uint64_t v66 = *(void *)&word_100A00EA0[v15 + 8];
          if (v66)
          {
            uint64_t v67 = *(void (**)(void, uint64_t))(v66 + 16);
            if (v67) {
              v67(a1 | (v18 << 16), v57);
            }
          }
LABEL_77:
          *((void *)v36 + 8) = 0;
          double result = 0.0;
          *((_OWORD *)v36 + 2) = 0u;
          *((_OWORD *)v36 + 3) = 0u;
          *(_OWORD *)uint64_t v36 = 0u;
          *((_OWORD *)v36 + 1) = 0u;
          return result;
        case 2:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"BT_AAP_DISCONNECT_RSP from l2capRecvDataInd for cid=%d", v68, v69, v70, v71, v72, v73, v74, a1);
            uint64_t v75 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v76 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v118 = v76;
              _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          sub_100110D60(a1 | (v18 << 16));
          if (v3 < 6) {
            uint64_t v77 = 0;
          }
          else {
            uint64_t v77 = a2[2];
          }
          sub_100110E08(v18, a1, v77);
          return result;
        case 3:
          unsigned int v78 = (unsigned __int16)v36[1];
          if (__PAIR64__(v78, (unsigned __int16)*v36) == __PAIR64__(a1, v18))
          {
            uint64_t v79 = *(void *)&word_100A00EA0[v15 + 8];
            if (v79)
            {
              uint64_t v80 = *(void (**)(void, unsigned __int16 *, void))(v79 + 32);
              if (v80) {
                v80(v78 | (v18 << 16), a2 + 2, v16);
              }
            }
          }
          return result;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Should not be here", v39, v40, v41, v42, v43, v44, v45, v115);
            uint64_t v46 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
              goto LABEL_15;
            }
          }
          return result;
      }
    }
    v15 += 36;
  }
  while (v15 != 1080);
  if (!sub_100058654()) {
    return result;
  }
  sub_100056E24((uint64_t)"Incoming message to invalid cid/sid (%d/%d)", v19, v20, v21, v22, v23, v24, v25, v18);
  uint64_t v26 = sub_100050B4C(0x52u);
  if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
    return result;
  }
LABEL_4:
  sub_100744F6C();
  return result;
}

uint64_t sub_10010F3E4(uint64_t a1, uint64_t a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"BT_AAP_Client_Connect", v4, v5, v6, v7, v8, v9, v10, v68);
    uint64_t v11 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v68) = 136446210;
      *(void *)((char *)&v68 + 4) = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
    }
  }
  uint64_t v12 = 0;
  unsigned __int16 v13 = 0;
  uint64_t v14 = 0;
  char v15 = 0;
  do
  {
    if (*(_DWORD *)&word_100A00EA0[v12 + 2] == *(_DWORD *)a1 && word_100A00EA0[v12 + 4] == *(_WORD *)(a1 + 4))
    {
      unsigned int v17 = LOBYTE(word_100A00EA0[v12 + 12]);
      if (v17 == 2) {
        return 0;
      }
      BOOL v18 = v17 > 2;
      if (word_100A00EA0[v12] == *(_WORD *)(a2 + 8)) {
        return 133;
      }
      unsigned __int16 v13 = word_100A00EA0[v12 + 1];
      v15 |= v18;
      uint64_t v14 = &word_100A00EA0[v12];
    }
    v12 += 36;
  }
  while (v12 != 1080);
  if (v14 || (uint64_t v14 = sub_10010EA70((int *)a1, v13, a2)) != 0)
  {
    if ((v15 & 1) == 0)
    {
      int v37 = (unsigned __int16)v14[21];
      int v38 = sub_100058654();
      if (v37)
      {
        if (v38)
        {
          sub_100056E24((uint64_t)"PSM is already available, connect L2CAP", v39, v40, v41, v42, v43, v44, v45, v68);
          uint64_t v46 = sub_100050B4C(0x52u);
          if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v47 = sub_100050714();
            LODWORD(v68) = 136446210;
            *(void *)((char *)&v68 + 4) = v47;
            _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
          }
        }
        sub_10010F824((uint64_t)v14);
        return 0;
      }
      if (v38)
      {
        sub_100056E24((uint64_t)"AAP_CLIENT_Connect initiating SDP", v39, v40, v41, v42, v43, v44, v45, v68);
        uint64_t v48 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v49 = sub_100050714();
          LODWORD(v68) = 136446210;
          *(void *)((char *)&v68 + 4) = v49;
          _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
        }
      }
      uint64_t v50 = sub_10024BFDC((uint64_t)sub_10010FA14, (uint64_t)sub_10010FACC, a1);
      if (!v50)
      {
        *((unsigned char *)v14 + 24) = 1;
        *((void *)&v68 + 1) = v14;
        *(void *)&long long v68 = 8;
        return sub_1000268E4((uint64_t)sub_10010FB6C, (const void **)&v68, 30, (int *)v14 + 16);
      }
      uint64_t v28 = v50;
      if (!sub_100058654()) {
        goto LABEL_38;
      }
      sub_100056E24((uint64_t)"Failed to connect SDP", v51, v52, v53, v54, v55, v56, v57, v68);
      uint64_t v58 = sub_100050B4C(0x52u);
      if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
        goto LABEL_38;
      }
LABEL_37:
      sub_100748324();
LABEL_38:
      *((void *)v14 + 8) = 0;
      *((_OWORD *)v14 + 2) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *(_OWORD *)uint64_t v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      return v28;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AAP_Client: L2CAP connected, beginning AAP connection", v19, v20, v21, v22, v23, v24, v25, v68);
      uint64_t v26 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v27 = sub_100050714();
        LODWORD(v68) = 136446210;
        *(void *)((char *)&v68 + 4) = v27;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&v68, 0xCu);
      }
    }
    *((unsigned char *)v14 + 24) = 3;
    uint64_t v28 = sub_10010EAE0((int *)a1, v13, *(unsigned __int16 *)(a2 + 8), *(_WORD *)(a2 + 10), *(_WORD *)(a2 + 12), (void **)(a2 + 14));
    if (v28)
    {
      if (!sub_100058654()) {
        goto LABEL_38;
      }
      sub_100056E24((uint64_t)"sendConnectReqPacket failed", v29, v30, v31, v32, v33, v34, v35, v68);
      uint64_t v36 = sub_100050B4C(0x52u);
      if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"allocateConnection failed", v59, v60, v61, v62, v63, v64, v65, v68);
      uint64_t v66 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
        sub_1007484F0();
      }
    }
    return 104;
  }
  return v28;
}

void sub_10010F824(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Connecting L2CAP for %:", v2, v3, v4, v5, v6, v7, v8, a1 + 4);
    uint64_t v9 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v31 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  int v10 = *(unsigned __int16 *)(a1 + 42);
  if (*(_WORD *)(a1 + 42))
  {
    *(unsigned char *)(a1 + 24) = 2;
    uint64_t v11 = sub_1000E0D30();
    uint64_t v12 = sub_1000E0D54();
    if (sub_1001DF7BC((uint64_t)sub_100110590, (uint64_t)sub_100110610, (uint64_t)sub_10010ED2C, v10, a1 + 4, (uint64_t)v11, (_WORD *)(a1 + 2), (uint64_t)v12))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_L2CAP_Connect failed", v13, v14, v15, v16, v17, v18, v19, v29);
        uint64_t v20 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100748324();
        }
      }
      *(void *)(a1 + 64) = 0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SDP disconnected without a valid PSM", v21, v22, v23, v24, v25, v26, v27, v29);
      uint64_t v28 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100026DB4(*(unsigned int *)(a1 + 64));
    *(unsigned char *)(a1 + 24) = 0;
  }
}

uint64_t sub_10010FA14(uint64_t result)
{
  long long v4 = unk_10099AFE0;
  long long v3 = xmmword_1007B9300;
  if (!result)
  {
    v2[1] = &v4;
    v2[0] = 65542;
    v1[1] = &v3;
    v1[0] = 65542;
    double result = sub_10024CE58((uint64_t)sub_1001119DC, (unsigned __int8 *)v2, (unsigned __int8 *)v1);
    if (result) {
      return sub_10024C674();
    }
  }
  return result;
}

void sub_10010FACC()
{
  uint64_t v0 = 0;
  while (LOBYTE(word_100A00EA0[v0 + 12]) != 1)
  {
    v0 += 36;
    if (v0 == 1080)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"No connection Entry for this SDP search resp", v1, v2, v3, v4, v5, v6, v7, v9);
        uint64_t v8 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
  }

  sub_10010F824((uint64_t)&word_100A00EA0[v0]);
}

void sub_10010FB6C(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Couldn't connect SDP for AAP!", v2, v3, v4, v5, v6, v7, v8, v10);
    uint64_t v9 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_100110E08(**(unsigned __int16 **)(a1 + 8), *(unsigned __int16 *)(*(void *)(a1 + 8) + 2), 3572);
}

uint64_t sub_10010FBE0(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = &word_100A00EA0[v6];
    int v8 = (unsigned __int16)word_100A00EA0[v6];
    int v9 = (unsigned __int16)word_100A00EA0[v6 + 1];
    if ((v9 | (v8 << 16)) == a1) {
      break;
    }
    v6 += 36;
    if (v6 == 1080)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid handle %x", v10, v11, v12, v13, v14, v15, v16, a1);
        uint64_t v17 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 414;
    }
  }
  if ((unsigned __int16)v7[22] >= a3)
  {
    uint64_t v27 = (int *)&word_100A00EA0[v6 + 2];
    uint64_t v28 = sub_1000E1458((uint64_t)&unk_100A01710, 30, v9);
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_1000E0E94(v8, v9, v27, 4, a3);
      uint64_t v50 = 0;
      __int16 v31 = *((_WORD *)v30 + 1);
      LOWORD(v50) = *((_WORD *)v30 + 5);
      WORD1(v50) = v31;
      sub_1000226D0((uint64_t)(v30 + 1), 2u);
      sub_100022798((unsigned __int8 *)v30 + 16, (char *)&v50, 4uLL, 0);
      sub_100022798((unsigned __int8 *)v30 + 16, a2, a3, 0);
      *((void *)v30 + 17) = a2;
      *((void *)v30 + 19) = v29;
      uint64_t v18 = sub_1000E1010((uint64_t)v30, (uint64_t)sub_1001100D0);
      if (!v18) {
        return v18;
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"sendDataPacket channel not found: addr=%: cid=%d sid=%d len=%d", v32, v33, v34, v35, v36, v37, v38, (uint64_t)v27);
        uint64_t v39 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_100748478();
        }
      }
      uint64_t v18 = 406;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"sendDataPacket failed", v40, v41, v42, v43, v44, v45, v46, v49);
      uint64_t v47 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        sub_100748324();
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MTU=%d", v19, v20, v21, v22, v23, v24, v25, (unsigned __int16)v7[22]);
      uint64_t v26 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100748568();
      }
    }
    return 142;
  }
  return v18;
}

void sub_10010FE80(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = &word_100A00EA0[v6];
    int v8 = (unsigned __int16)word_100A00EA0[v6 + 1];
    if ((v8 | ((unsigned __int16)word_100A00EA0[v6] << 16)) == a1) {
      break;
    }
    v6 += 36;
    if (v6 == 1080)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid handle %x", v9, v10, v11, v12, v13, v14, v15, a1);
        uint64_t v16 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
  }
  if ((unsigned __int16)v7[22] >= a3)
  {
    uint64_t v25 = sub_1000E1458((uint64_t)&unk_100A01710, 30, v8);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_1000E0E94(word_100A00EA0[v6], v7[1], (int *)&word_100A00EA0[v6 + 2], 4, a3);
      uint64_t v37 = 0;
      __int16 v28 = *((_WORD *)v27 + 1);
      LOWORD(v37) = *((_WORD *)v27 + 5);
      WORD1(v37) = v28;
      sub_1000226D0((uint64_t)(v27 + 1), 2u);
      sub_100022798((unsigned __int8 *)v27 + 16, (char *)&v37, 4uLL, 0);
      sub_100022798((unsigned __int8 *)v27 + 16, a2, a3, 0);
      *((void *)v27 + 17) = a2;
      *((void *)v27 + 19) = v26;
      sub_1000E0FB0((uint64_t)v27, (uint64_t)sub_1001100D0);
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"BT_AAP_Client_SendUnstallableData channel not found: addr=%: cid=%d sid=%d len=%d", v29, v30, v31, v32, v33, v34, v35, (uint64_t)&word_100A00EA0[v6 + 2]);
      uint64_t v36 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100748478();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"MTU=%d", v17, v18, v19, v20, v21, v22, v23, (unsigned __int16)v7[22]);
    uint64_t v24 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      sub_100748568();
    }
  }
}

void sub_1001100D0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    sub_10025B8C0();
  }
  uint64_t v7 = *(unsigned __int16 **)(a2 + 8);
  if (!v7) {
    sub_10025B8C0();
  }
  int v8 = v7[5];
  switch(v8)
  {
    case 2:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"l2capWriteCfm: BT_AAP_DISCONNECT_REQ", v18, v19, v20, v21, v22, v23, v24, v28);
        uint64_t v25 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v30 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      break;
    case 3:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BT_AAP_DISCONNECT_RSP from l2capWriteCfm for cid=%d, result=%d", v10, v11, v12, v13, v14, v15, v16, a1);
        uint64_t v17 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v30 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      sub_100110E08(v7[1], *v7, a4);
      break;
    case 4:
      uint64_t v9 = 0;
      while (((unsigned __int16)word_100A00EA0[v9 + 1] | ((unsigned __int16)word_100A00EA0[v9] << 16)) != *(_DWORD *)v7)
      {
        v9 += 36;
        if (v9 == 1080) {
          return;
        }
      }
      uint64_t v26 = *(void *)&word_100A00EA0[v9 + 8];
      if (v26)
      {
        uint64_t v27 = *(void (**)(void))(v26 + 24);
        if (v27)
        {
          v27();
        }
      }
      break;
  }
}

uint64_t sub_1001102EC(uint64_t result, int a2, int a3)
{
  int v3 = a3 | (a2 << 16);
  if (v3)
  {
    uint64_t v4 = 0;
    while (((unsigned __int16)word_100A00EA0[v4 + 1] | ((unsigned __int16)word_100A00EA0[v4] << 16)) != v3)
    {
      v4 += 36;
      if (v4 == 1080) {
        return result;
      }
    }
    word_100A00EA0[v4 + 22] = result;
  }
  return result;
}

uint64_t sub_100110330(uint64_t a1, __int16 a2, uint64_t a3, unsigned __int16 *a4, int *a5)
{
  for (uint64_t i = 0; i != 1080; i += 36)
  {
    BOOL v11 = *(_DWORD *)&word_100A00EA0[i + 2] == *(_DWORD *)a1 && word_100A00EA0[i + 4] == *(_WORD *)(a1 + 4);
    if (v11 && word_100A00EA0[i] == *(_WORD *)(a3 + 8)) {
      return 133;
    }
  }
  uint64_t v12 = sub_10010EA70((int *)a1, 0, a3);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1000E0D30();
    uint64_t v15 = sub_1000E0D54();
    long long v16 = v14[1];
    v47[0] = *v14;
    v47[1] = v16;
    uint64_t v17 = sub_1001DEF88(a2, (uint64_t)v47, a1, (uint64_t)sub_100110590, (uint64_t)sub_100110610, (uint64_t)sub_10010ED2C, a4, (uint64_t)v15);
    if (v17)
    {
      uint64_t v18 = v17;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BT_AAP_Client_FastConnect error creating AAP signaling", v19, v20, v21, v22, v23, v24, v25, v46);
        uint64_t v26 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
LABEL_13:
        }
          sub_100744F6C();
      }
    }
    else
    {
      *(void *)&v47[0] = 0;
      uint64_t v18 = sub_1001DD56C(*a4, (uint64_t *)v47);
      if (v18 || !sub_1001E6484(*(unsigned int **)&v47[0]))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Can't find channel %d", v36, v37, v38, v39, v40, v41, v42, (uint64_t)a4);
          uint64_t v43 = sub_100050B4C(0x52u);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        *((unsigned char *)v13 + 24) = 4;
        v13[22] = *(_WORD *)(sub_1001E6484(*(unsigned int **)&v47[0]) + 32) - 4;
        int v44 = *a4;
        v13[1] = v44;
        int v45 = *(unsigned __int16 *)(a3 + 8);
        *uint64_t v13 = v45;
        *a5 = v44 | (v45 << 16);
        return sub_1000E129C(word_100A01710, 0x1Eu, *a4, 0);
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"allocateConnection failed", v27, v28, v29, v30, v31, v32, v33, v46);
      uint64_t v34 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_1007484F0();
      }
    }
    return 104;
  }
  return v18;
}

double sub_100110590(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a4)
  {
    uint64_t v4 = sub_1000E129C(word_100A01710, 0x1Eu, a1, 0);
    if (v4) {
      sub_1001E121C(a1, 436);
    }
  }

  return sub_1001113D8(a1, a2, a3, v4);
}

void sub_100110610(uint64_t a1, uint64_t a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"l2capDisconnectInd from aap_client cid=%d reason=%d", v4, v5, v6, v7, v8, v9, v10, a1);
    BOOL v11 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1000E1358((uint64_t)word_100A01710, 30, a1);
  sub_100111724(a1, a2);
}

void sub_100110704(uint64_t a1, unsigned int a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"BT_AAP_Client_cleanFastConnect cid=%d", v4, v5, v6, v7, v8, v9, v10, a2);
    BOOL v11 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1000E1358((uint64_t)word_100A01710, 30, a2);
  if (a2)
  {
    *(void *)buf = 0;
    if (!sub_1001DD56C(a2, (uint64_t *)buf))
    {
      if (*(void *)buf)
      {
        sub_1001DEC18(*(uint64_t *)buf);
        uint64_t v12 = sub_100197A30(a1);
        if (v12)
        {
          sub_100182088(v12);
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"BT_AAP_Client_cleanFastConnectAAP NULL Handle", v13, v14, v15, v16, v17, v18, v19, v24);
          uint64_t v20 = sub_100050B4C(0x52u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
  }
  for (uint64_t i = 0; i != 1080; i += 36)
  {
    uint64_t v22 = &word_100A00EA0[i];
    if (*(_DWORD *)&word_100A00EA0[i + 2] == *(_DWORD *)a1 && word_100A00EA0[i + 4] == *(_WORD *)(a1 + 4))
    {
      *((void *)v22 + 8) = 0;
      *((_OWORD *)v22 + 2) = 0uLL;
      *((_OWORD *)v22 + 3) = 0uLL;
      *(_OWORD *)uint64_t v22 = 0uLL;
      *((_OWORD *)v22 + 1) = 0uLL;
    }
  }
}

uint64_t sub_1001108AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"l2capConnectInd (%:, %d)", v5, v6, v7, v8, v9, v10, v11, a2);
    uint64_t v12 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v13 = &dword_100000004;
  do
  {
    if (*(_DWORD *)((char *)word_100A00EA0 + v13) == *(_DWORD *)a2
      && *(__int16 *)((char *)&word_100A00EA0[2] + v13) == *(_WORD *)(a2 + 4))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"l2capConnectInd already (%:, %d)", v22, v23, v24, v25, v26, v27, v28, a2);
        uint64_t v29 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return sub_1001E0320(0, 0, 0, a3, 0, 0, 0);
    }
    v13 += 72;
  }
  while (v13 != 2164);
  uint64_t v15 = sub_10010EA70((int *)a2, a3, (uint64_t)&xmmword_100A019E8);
  if (!v15)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"allocateConnection failed", v30, v31, v32, v33, v34, v35, v36, v38);
      uint64_t v37 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_1007484F0();
      }
    }
    return sub_1001E0320(0, 0, 0, a3, 0, 0, 0);
  }
  uint64_t v16 = v15;
  *((unsigned char *)v15 + 24) = 2;
  uint64_t v17 = sub_1000E0D30();
  uint64_t v18 = sub_1000E0D54();
  uint64_t result = sub_1001E0320((uint64_t)sub_100110590, (uint64_t)sub_100110610, (uint64_t)sub_10010ED2C, a3, (uint64_t)v17, 1, (uint64_t)v18);
  uint64_t v20 = (uint64_t (**)(uint64_t, uint64_t))*((void *)v16 + 2);
  if (v20)
  {
    uint64_t v21 = *v20;
    if (v21) {
      return v21(a2, a3);
    }
  }
  return result;
}

void sub_100110A9C(__int16 a1, uint64_t a2)
{
  uint64_t v3 = 0;
  uint64_t v22 = 0;
  v23[0] = 0;
  while (1)
  {
    uint64_t v4 = &word_100A00EA0[v3];
    if (((unsigned __int16)word_100A00EA0[v3 + 1] | ((unsigned __int16)word_100A00EA0[v3] << 16)) == a2) {
      break;
    }
    v3 += 36;
    if (v3 == 1080)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AAPConnectSetTimeout: No AAP connection associated with handle %d", v5, v6, v7, v8, v9, v10, v11, a2);
        uint64_t v12 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
  }
  LODWORD(v22) = a2;
  WORD2(v22) = a1;
  v23[1] = &v22;
  LOWORD(v23[0]) = 8;
  uint64_t v13 = (unsigned int *)(v4 + 30);
  if (sub_100026DA8((uint64_t)sub_100110BE0, v23, (int *)v4 + 15))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AAPConnectSetTimeout: Error registering timeout handler for handle %d status %d", v14, v15, v16, v17, v18, v19, v20, a2);
      uint64_t v21 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (sub_10025BC54(*v13, 60))
  {
    sub_100110D60(a2);
  }
}

void sub_100110BE0(uint64_t a1)
{
  uint64_t v1 = 0;
  uint64_t v2 = *(unsigned int **)(a1 + 8);
  uint64_t v3 = *v2;
  uint64_t v4 = *((unsigned __int16 *)v2 + 2);
  do
  {
    uint64_t v5 = &word_100A00EA0[v1];
    if (((unsigned __int16)word_100A00EA0[v1 + 1] | ((unsigned __int16)word_100A00EA0[v1] << 16)) == v3)
    {
      *((_DWORD *)v5 + 15) = 0;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AAP connection timeout for cmd %d, handle %d", v14, v15, v16, v17, v18, v19, v20, v4);
        uint64_t v21 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (v4 == 2)
      {
        sub_100110E08((unsigned __int16)*v5, (unsigned __int16)v5[1], 3571);
        return;
      }
      if (v4) {
        return;
      }
      if (LOBYTE(word_100A00EA0[v1 + 12]) == 3)
      {
        sub_10010E830(v3);
        return;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"False AAP connection timeout for handle %d state %d", v22, v23, v24, v25, v26, v27, v28, v3);
        uint64_t v29 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          goto LABEL_17;
        }
      }
      return;
    }
    v1 += 36;
  }
  while (v1 != 1080);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AAP connection timeout for unknown handle %d", v6, v7, v8, v9, v10, v11, v12, v3);
    uint64_t v13 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_17:
    }
      sub_100744F6C();
  }
}

void sub_100110D60(uint64_t a1)
{
  for (uint64_t i = 0; i != 1080; i += 36)
  {
    uint64_t v3 = &word_100A00EA0[i];
    if (((unsigned __int16)word_100A00EA0[i + 1] | ((unsigned __int16)word_100A00EA0[i] << 16)) == a1)
    {
      sub_100026DB4(*((unsigned int *)v3 + 15));
      *((_DWORD *)v3 + 15) = 0;
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AAPConnectCancelTimeout: No AAP connection associated with handle %d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_100110E08(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a2 | (a1 << 16);
  if (a3) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = 114;
  }
  do
  {
    uint64_t v9 = &word_100A00EA0[v6];
    if ((unsigned __int16)word_100A00EA0[v6] == a1 && (unsigned __int16)v9[1] == a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"disconnectRspCleanup result %d handle %d state %d", v10, v11, v12, v13, v14, v15, v16, a3);
        uint64_t v17 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v18 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          uint64_t v33 = v18;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v19 = *(void *)&word_100A00EA0[v6 + 8];
      if (LOBYTE(word_100A00EA0[v6 + 12]) == 4)
      {
        if (!v19)
        {
LABEL_16:
          *((void *)v9 + 8) = 0;
          *((_OWORD *)v9 + 2) = 0u;
          *((_OWORD *)v9 + 3) = 0u;
          *(_OWORD *)uint64_t v9 = 0u;
          *((_OWORD *)v9 + 1) = 0u;
          goto LABEL_17;
        }
        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
        if (v20)
        {
          v20(v7, a3);
          goto LABEL_16;
        }
      }
      else if (!v19)
      {
        goto LABEL_16;
      }
      uint64_t v21 = *(void (**)(__int16 *, uint64_t, void, void, void, void, void))(v19 + 8);
      if (v21) {
        v21(&word_100A00EA0[v6 + 2], v8, 0, 0, 0, 0, 0);
      }
      goto LABEL_16;
    }
LABEL_17:
    v6 += 36;
  }
  while (v6 != 1080);
  uint64_t v22 = 0;
  while (!*(void *)&word_100A00EA0[v22 + 8] || (unsigned __int16)word_100A00EA0[v22 + 1] != a2)
  {
    v22 += 36;
    if (v22 == 1080)
    {
      sub_100111060();
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"scheduleIdleChannelCleanup from disconnectRspCleanup for cid=%d result=%d", v23, v24, v25, v26, v27, v28, v29, a2);
    uint64_t v30 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v31 = sub_100050714();
      *(_DWORD *)buf = 136446210;
      uint64_t v33 = v31;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_100111350();
}

void sub_100111060()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"idleChannelCleanupCB", v0, v1, v2, v3, v4, v5, v6, v43);
    uint64_t v7 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      int v45 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  for (uint64_t i = 0; i != 30; ++i)
  {
    uint64_t v9 = &word_100A00EA0[12 * i];
    int v10 = (unsigned __int16)v9[1080];
    if (v9[1080])
    {
      uint64_t v11 = (unsigned __int16 *)(v9 + 1080);
      uint64_t v12 = &_mh_execute_header.magic + 2;
      while (*(unsigned __int16 *)((char *)word_100A00EA0 + v12) != v10)
      {
        v12 += 72;
        if (v12 == 2162)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Connection CID=%d is going down", v13, v14, v15, v16, v17, v18, v19, *v11);
            uint64_t v20 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v21 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              int v45 = v21;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          unsigned int v22 = *v11;
          if (LOBYTE(word_100A00EA0[12 * i + 1081])) {
            int v23 = sub_1001E1530(v22);
          }
          else {
            int v23 = sub_1001E121C(v22, 436);
          }
          int v33 = v23;
          sub_1000E1358((uint64_t)&unk_100A01710, 30, *v11);
          if (v33 && sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to disconnect L2CAP Channel", v34, v35, v36, v37, v38, v39, v40, v43);
            uint64_t v41 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
            {
              uint64_t v42 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              int v45 = v42;
              __int16 v46 = 1024;
              int v47 = v33;
              _os_log_error_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          goto LABEL_22;
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Channel with CID=%d not idle, still have connection to %: sid=%d cid=%d", v24, v25, v26, v27, v28, v29, v30, (uint64_t)v11);
        uint64_t v31 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = sub_100050714();
          *(_DWORD *)buf = 136446210;
          int v45 = v32;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
LABEL_22:
    ;
  }
}

void sub_100111350()
{
  if (sub_1000268E4((uint64_t)sub_100111060, 0, 50, 0) && sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_Dispatch_RegisterTimedFunc failed ", v0, v1, v2, v3, v4, v5, v6, v8);
    uint64_t v7 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100748324();
    }
  }
}

double sub_1001113D8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"genericL2CAPConnectCompleteCB cid=%x inmtu=%d outmtu=%d result=%d", v6, v7, v8, v9, v10, v11, v12, a1);
    uint64_t v13 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v52 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v50 = 0;
  if (a4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"l2capConnectCompleteCb failed", v14, v15, v16, v17, v18, v19, v20, v49);
      unsigned int v22 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100748324();
      }
    }
    uint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *(void *)&word_100A00EA0[v23 + 8];
      if (v24)
      {
        if (LOBYTE(word_100A00EA0[v23 + 12]) != 4) {
          break;
        }
      }
      v23 += 36;
      if (v23 == 1080) {
        return result;
      }
    }
    int v47 = &word_100A00EA0[v23];
    uint64_t v48 = *(void (**)(__int16 *, uint64_t, void, void, void, void, void))(v24 + 8);
    if (v48) {
      v48(v47 + 2, a4, 0, 0, 0, 0, 0);
    }
    *((void *)v47 + 8) = 0;
    double result = 0.0;
    *((_OWORD *)v47 + 2) = 0u;
    *((_OWORD *)v47 + 3) = 0u;
    *(_OWORD *)int v47 = 0u;
    *((_OWORD *)v47 + 1) = 0u;
  }
  else
  {
    sub_1001DD56C(a1, &v50);
    for (uint64_t i = 0; i != 1080; i += 36)
    {
      uint64_t v26 = &word_100A00EA0[i];
      if ((unsigned __int16)word_100A00EA0[i + 1] == a1 && *((unsigned char *)v26 + 24) == 2)
      {
        sub_100026DB4(*(unsigned int *)&word_100A00EA0[i + 32]);
        *((unsigned char *)v26 + 24) = 3;
        int v27 = sub_10010EAE0((int *)&word_100A00EA0[i + 2], (unsigned __int16)v26[1], (unsigned __int16)word_100A00EA0[i], word_100A00EA0[i + 24], word_100A00EA0[i + 25], (void **)&word_100A00EA0[i + 26]);
        if (v27)
        {
          int v28 = v27;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"sendConnectReqPacket failed", v29, v30, v31, v32, v33, v34, v35, v49);
            uint64_t v36 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
            {
              uint64_t v37 = sub_100050714();
              *(_DWORD *)buf = 136446466;
              uint64_t v52 = v37;
              __int16 v53 = 1024;
              int v54 = v28;
              _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          *((void *)v26 + 8) = 0;
          *((_OWORD *)v26 + 2) = 0u;
          *((_OWORD *)v26 + 3) = 0u;
          *(_OWORD *)uint64_t v26 = 0u;
          *((_OWORD *)v26 + 1) = 0u;
        }
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"scheduleIdleChannelCleanup at genericL2CAPConnectCompleteCB", v38, v39, v40, v41, v42, v43, v44, v49);
      int v45 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v46 = sub_100050714();
        *(_DWORD *)buf = 136446210;
        uint64_t v52 = v46;
        _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_100111350();
  }
  return result;
}

void sub_100111724(uint64_t a1, uint64_t a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"genericL2CAPDisconnectInd cid=%d reason=%d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x52u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v18 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  for (uint64_t i = 0; i != 1080; i += 36)
  {
    uint64_t v13 = &word_100A00EA0[i];
    int v14 = (unsigned __int16)word_100A00EA0[i + 1];
    if (v14 == a1)
    {
      if (*((_DWORD *)v13 + 15)) {
        sub_100110D60(v14 | ((unsigned __int16)*v13 << 16));
      }
      uint64_t v15 = *(void *)&word_100A00EA0[i + 8];
      if (v15)
      {
        uint64_t v16 = *(void (**)(void, uint64_t))(v15 + 16);
        if (v16) {
          v16(a1 | ((unsigned __int16)*v13 << 16), a2);
        }
      }
      *((void *)v13 + 8) = 0;
      *((_OWORD *)v13 + 2) = 0u;
      *((_OWORD *)v13 + 3) = 0u;
      *(_OWORD *)uint64_t v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
    }
  }
}

uint64_t sub_10011186C(int *a1, int a2, __int16 a3)
{
  __int16 v4 = a2;
  uint64_t v6 = sub_1000E1458((uint64_t)&unk_100A01710, 30, a2);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000E0E94(a3, v4, a1, 3, 2);
    uint64_t v20 = 0;
    __int16 v19 = 0;
    __int16 v9 = *((_WORD *)v8 + 1);
    LOWORD(v20) = *((_WORD *)v8 + 5);
    WORD1(v20) = v9;
    sub_1000226D0((uint64_t)(v8 + 1), 2u);
    sub_100022798((unsigned __int8 *)v8 + 16, (char *)&v20, 4uLL, 2u);
    sub_100022798((unsigned __int8 *)v8 + 16, (char *)&v19, *((unsigned __int16 *)v8 + 64), 2u);
    *((void *)v8 + 19) = v7;
    return sub_1000E1010((uint64_t)v8, (uint64_t)sub_1001100D0);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"sendDisconnectRspPacket channel not found: addr=%: cid=%d sid=%d result=%d", v11, v12, v13, v14, v15, v16, v17, (uint64_t)a1);
      uint64_t v18 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100748478();
      }
    }
    return 406;
  }
}

void sub_1001119DC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  while (LOBYTE(word_100A00EA0[v3 + 12]) != 1)
  {
    v3 += 36;
    if (v3 == 1080)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"No connection Entry for this SDP search resp", v4, v5, v6, v7, v8, v9, v10, v68);
        uint64_t v11 = sub_100050B4C(0x52u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
  }
  if (!a3)
  {
    if (*(unsigned char *)a1 == 6 && *(_WORD *)(a1 + 2))
    {
      uint64_t v12 = *(void *)(a1 + 8);
      if (*(unsigned char *)v12 == 6)
      {
        if (!*(_WORD *)(v12 + 2)) {
          goto LABEL_20;
        }
        goto LABEL_27;
      }
      if (*(_WORD *)(v12 + 2) == 4)
      {
LABEL_27:
        uint64_t v37 = *(void *)(v12 + 8);
        int v38 = *(unsigned __int16 *)(v37 + 8);
        uint64_t v39 = 1;
        if (v38 == 4)
        {
LABEL_28:
          word_100A00EA0[v3 + 21] = *(_DWORD *)(*(void *)(*(void *)(v37 + 16 * v39 + 8) + 8) + 24);
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Got data PSM (0x%x)\n", v40, v41, v42, v43, v44, v45, v46, (unsigned __int16)word_100A00EA0[v3 + 21]);
            int v47 = sub_100050B4C(0x52u);
            if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v48 = sub_100050714();
              *(_DWORD *)buf = 136446210;
              uint64_t v70 = v48;
              _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          if (v38 == 4) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v49 = 40;
          while (1)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Unknown attribute", v50, v51, v52, v53, v54, v55, v56, v68);
              uint64_t v57 = sub_100050B4C(0x52u);
              if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
              {
                uint64_t v59 = sub_100050714();
                *(_DWORD *)buf = 136446466;
                uint64_t v70 = v59;
                __int16 v71 = 1024;
                int v72 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            if (v39 + 1 >= (unint64_t)*(unsigned __int16 *)(v12 + 2)) {
              break;
            }
            uint64_t v37 = *(void *)(v12 + 8);
            int v58 = *(unsigned __int16 *)(v37 + v49);
            v39 += 2;
            v49 += 32;
            if (v58 == 4) {
              goto LABEL_28;
            }
          }
        }
        goto LABEL_16;
      }
      if (!sub_100058654()
        || (sub_100056E24((uint64_t)"SDP response is not a sequence or has wrong number of elements\n", v60, v61, v62, v63, v64, v65, v66, v68), uint64_t v67 = sub_100050B4C(0x52u), !os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)))
      {
LABEL_16:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Didn't find what we were looking for, zap PSM's to prevent AAP connections when SDP disconnect completes", v21, v22, v23, v24, v25, v26, v27, v68);
          int v28 = sub_100050B4C(0x52u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        word_100A00EA0[v3 + 21] = 0;
        goto LABEL_20;
      }
    }
    else
    {
      if (!sub_100058654()) {
        goto LABEL_16;
      }
      sub_100056E24((uint64_t)"SDP search response has no responses, failing connection", v13, v14, v15, v16, v17, v18, v19, v68);
      uint64_t v20 = sub_100050B4C(0x52u);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
    }
    sub_100744F6C();
    goto LABEL_16;
  }
LABEL_20:
  if (sub_10024C674())
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SDP Disconnect failed, clearing PSM", v29, v30, v31, v32, v33, v34, v35, v68);
      uint64_t v36 = sub_100050B4C(0x52u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    word_100A00EA0[v3 + 21] = 0;
  }
}

FILE *sub_100111DB0(unsigned __int8 *a1, uint64_t a2)
{
  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  *(_OWORD *)__filename = 0u;
  long long v9 = 0u;
  if (sub_100111EE8(a1, __filename)) {
    return 0;
  }
  double result = fopen(__filename, "r");
  if (result)
  {
    uint64_t v5 = result;
    sub_10025B778("link key request: retrieving stored key for %:\n", a1);
    int v6 = fread((void *)(a2 + 6), 1uLL, 0x10uLL, v5);
    fread((void *)(a2 + 24), 4uLL, 1uLL, v5);
    fclose(v5);
    if (v6 == 16)
    {
      int v7 = *(_DWORD *)a1;
      *(_WORD *)(a2 + 4) = *((_WORD *)a1 + 2);
      *(_DWORD *)a2 = v7;
      return (FILE *)1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100111EE8(unsigned __int8 *a1, char *a2)
{
  uint64_t v4 = getenv("HOME");
  if (v4)
  {
    snprintf(a2, 0x1FFuLL, "%s/Library/Preferences/Bluetooth/%02X-%02X-%02X-%02X-%02X-%02X.key", v4, *a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
    uint64_t result = 0;
    a2[511] = 0;
  }
  else
  {
    fwrite("GetFilenameFromAddress: $HOME not set\n", 0x26uLL, 1uLL, __stderrp);
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_100111F90(unsigned __int8 *a1, const void *a2, int a3)
{
  int __ptr = a3;
  memset(__s, 0, sizeof(__s));
  memset(__p, 0, sizeof(__p));
  uint64_t result = sub_100111EE8(a1, __p);
  if (!result)
  {
    __strlcpy_chk();
    int v6 = strrchr((char *)__s, 47);
    if (v6) {
      *int v6 = 0;
    }
    if (mkdir((const char *)__s, 0x1EDu))
    {
      if (*__error() != 17) {
        return fprintf(__stderrp, "OI_LinkKeyStorage_WriteKey: could not create directory %s\n", (const char *)__s);
      }
    }
    else
    {
      sub_10025B778("OI_LinkKeyStorage_WriteKey: created directory %s\n", (const char *)__s);
    }
    uint64_t result = remove((const std::__fs::filesystem::path *)__p, v7);
    if (a2)
    {
      uint64_t result = (uint64_t)fopen(__p, "w");
      if (result)
      {
        uint64_t v8 = (FILE *)result;
        sub_10025B778("new link key created for %:\n", a1);
        fwrite(a2, 1uLL, 0x10uLL, v8);
        fwrite(&__ptr, 4uLL, 1uLL, v8);
        return fclose(v8);
      }
    }
  }
  return result;
}

unsigned __int16 *sub_100112170(int a1)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = (unsigned __int16 *)qword_100A01A18[v1];
    if (v2)
    {
      if (*v2 == a1) {
        break;
      }
    }
    if (++v1 == 16)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"GetContextByRfcommHandle - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        long long v10 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 0;
    }
  }
  return v2;
}

uint64_t sub_100112200(int a1)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = qword_100A01A18[v1];
    if (v2)
    {
      if (*(unsigned __int8 *)(v2 + 194) == a1) {
        break;
      }
    }
    if (++v1 == 16)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"getContextByRfcommChannel - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        long long v10 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 0;
    }
  }
  return v2;
}

void sub_100112290(int a1)
{
  for (uint64_t i = 0; i != 16; ++i)
  {
    uint64_t v2 = qword_100A01A18[i];
    if (v2 && *(unsigned __int8 *)(v2 + 194) == a1)
    {
      sub_100023010((void *)qword_100A01A18[i]);
      qword_100A01A18[i] = 0;
      return;
    }
  }

  sub_10025B8C0();
}

unsigned __int16 *sub_100112300(int a1)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = (unsigned __int16 *)qword_100A01A18[v1];
    if (v2)
    {
      if (*v2 == a1) {
        break;
      }
    }
    if (++v1 == 16)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"GetConnectionByCid - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        long long v10 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 0;
    }
  }
  return v2;
}

uint64_t sub_100112390(int a1)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = qword_100A01A18[v1];
    if (v2)
    {
      if (*(unsigned __int16 *)(v2 + 196) == a1) {
        break;
      }
    }
    if (++v1 == 16)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"GetConnectionByPsm - context not found", v3, v4, v5, v6, v7, v8, v9, v12);
        long long v10 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 0;
    }
  }
  return v2;
}

void sub_100112420(int a1)
{
  for (uint64_t i = 0; i != 16; ++i)
  {
    uint64_t v2 = qword_100A01A18[i];
    if (v2 && *(unsigned __int16 *)(v2 + 196) == a1)
    {
      sub_100023010((void *)qword_100A01A18[i]);
      qword_100A01A18[i] = 0;
      return;
    }
  }

  sub_10025B8C0();
}

uint64_t sub_100112490(uint64_t a1)
{
  for (uint64_t i = 0; i != 16; ++i)
  {
    if (!qword_100A01A18[i])
    {
      uint64_t result = 0;
      qword_100A01A18[i] = a1;
      *(_WORD *)(a1 + 208) = i;
      return result;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"No more OBEX handles available!", v3, v4, v5, v6, v7, v8, v9, v12);
    long long v10 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 104;
}

uint64_t sub_100112524(unsigned int a1)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  return qword_100A01A18[a1];
}

void sub_10011255C(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    *(void *)(a1 + 40) = 0;
    sub_10025C53C(a2);
    if (a3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OBEX server RFCOMM write error %! - disconnecting", v5, v6, v7, v8, v9, v10, v11, a3);
        uint64_t v12 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
LABEL_24:
      sub_1001135A8((unsigned __int16 *)a1, 0);
    }
    else
    {
      if (*(_DWORD *)(a1 + 32) == 2) {
        sub_1001127C0(a1);
      }
      switch(*(_DWORD *)(a1 + 204))
      {
        case 4:
          long long v21 = *(void **)(a1 + 64);
          if (v21)
          {
            sub_100023010(v21);
            *(void *)(a1 + 64) = 0;
          }
          *(_DWORD *)(a1 + 204) = 5;
          uint64_t v22 = *(unsigned int *)(a1 + 176);
          if (v22)
          {
            sub_100026DB4(v22);
            *(_DWORD *)(a1 + 176) = 0;
          }
          return;
        case 7:
          if ((*(unsigned char *)(a1 + 80) & 0xFE) == 0x48)
          {
            long long v23 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 16);
            uint64_t v24 = *(unsigned __int16 *)(a1 + 208);
            uint64_t v25 = 1701;
            goto LABEL_27;
          }
          *(_DWORD *)(a1 + 204) = 5;
          long long v23 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 16);
          goto LABEL_26;
        case 9:
          *(_DWORD *)(a1 + 204) = 5;
          long long v23 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 24);
LABEL_26:
          uint64_t v24 = *(unsigned __int16 *)(a1 + 208);
          uint64_t v25 = 0;
LABEL_27:
          v23(v24, 0, v25);
          return;
        case 0xB:
          if (*(unsigned char *)(a1 + 192))
          {
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 204) = 2;
          *(unsigned char *)(a1 + 201) = 0;
          long long v26 = *(void (**)(uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 8);
          uint64_t v27 = *(unsigned __int16 *)(a1 + 208);
          v26(v27);
          break;
        default:
          return;
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Write confirmation for bogus link %x %!", v13, v14, v15, v16, v17, v18, v19, (uint64_t)&link);
    long long v20 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1001127C0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 32) != 2) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(a1 + 31))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_228;
  }
  uint64_t v2 = *(unsigned __int16 *)(a1 + 26);
  uint64_t v3 = *(unsigned __int16 *)(a1 + 28);
  if (v2 <= v3)
  {
LABEL_228:
    v191 = "ByteStream_NumReadBytesAvail(connection->common.rcvPacket) >= 1";
    goto LABEL_230;
  }
  if (*(unsigned char *)(a1 + 30) != 1)
  {
    v191 = "(connection->common.rcvPacket).__RWFlag == BYTESTREAM_READ";
LABEL_230:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c", 1200, v191);
  }
  uint64_t v4 = *(void *)(a1 + 16);
  *(_WORD *)(a1 + 28) = v3 + 1;
  if (v2 - (unint64_t)(unsigned __int16)(v3 + 1) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c", 1201, "ByteStream_NumReadBytesAvail(connection->common.rcvPacket) >= (sizeof(uint16_t))");
  }
  int v5 = *(unsigned __int8 *)(v4 + v3);
  unsigned __int16 v6 = v3 + 3;
  *(_WORD *)(a1 + 28) = v3 + 3;
  int v7 = *(_DWORD *)(a1 + 204);
  if (v7 == 2 && (v5 & 0x7F) != 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received invalid command after OBEX disconnect. Terminating underlying transport.", v8, v9, v10, v11, v12, v13, v14, v192);
      uint64_t v15 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1001135A8((unsigned __int16 *)a1, 0);
    return;
  }
  uint64_t v16 = 1717;
  uint64_t v17 = (uint64_t *)(a1 + 16);
  switch(v5 | 0x80)
  {
    case 0x80:
      ptr = 0;
      uint64_t v194 = 0;
      if (v7 != 11 && v7 != 2)
      {
        uint64_t v16 = 1715;
        goto LABEL_83;
      }
      if (v2 <= v6)
      {
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 31) = 1;
      }
      else
      {
        *(_WORD *)(a1 + 28) = v3 + 4;
        uint64_t v19 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 3)) >> 4;
        if (v19 == 1)
        {
          if (v2 <= (unsigned __int16)(v3 + 4))
          {
            *(unsigned char *)(a1 + 31) = 1;
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
          }
          else
          {
            *(_WORD *)(a1 + 28) = v3 + 5;
            if (*(unsigned char *)(v4 + (unsigned __int16)(v3 + 4)))
            {
              uint64_t v16 = 1702;
              goto LABEL_83;
            }
            if ((int)(v2 - (unsigned __int16)(v3 + 5)) > 1)
            {
              unsigned int v114 = __rev16(*(unsigned __int16 *)(v4 + (unsigned __int16)(v3 + 5)));
              *(_WORD *)(a1 + 28) = v3 + 7;
              int v115 = *(_DWORD *)(a1 + 4);
              if (v115)
              {
                if (v115 != 1)
                {
                  unsigned int v116 = *(unsigned __int16 *)(a1 + 76);
LABEL_176:
                  if (v116 <= 0xC7)
                  {
                    if (sub_100058654())
                    {
                      sub_100056E24((uint64_t)"OBEX Server connect - packet size too small %d", v126, v127, v128, v129, v130, v131, v132, *(unsigned __int16 *)(a1 + 76));
                      uint64_t v133 = sub_100050B4C(0x18u);
                      if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR)) {
                        sub_100744F6C();
                      }
                    }
                    uint64_t v16 = 1736;
                    goto LABEL_83;
                  }
                  uint64_t v134 = sub_100162BD0((uint64_t *)&ptr, v17);
                  if (v134)
                  {
                    uint64_t v16 = v134;
                    if (!sub_100058654()) {
                      goto LABEL_83;
                    }
                    sub_100056E24((uint64_t)"OI_OBEXCOMMON_ParseHeaderList failed!", v135, v136, v137, v138, v139, v140, v141, v192);
                    char v142 = sub_100050B4C(0x18u);
                    if (!os_log_type_enabled(v142, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_83;
                    }
                    goto LABEL_215;
                  }
                  uint64_t v143 = sub_100162BA4((unsigned __int8 **)&ptr, 70);
                  if (v143) {
                    int v144 = (const void **)(v143 + 8);
                  }
                  else {
                    int v144 = 0;
                  }
                  uint64_t v145 = sub_100113674(a1, v144);
                  if (v145)
                  {
                    uint64_t v16 = v145;
                    if (!sub_100058654()) {
                      goto LABEL_83;
                    }
                    sub_100056E24((uint64_t)"No matching server target was found", v146, v147, v148, v149, v150, v151, v152, v192);
                    v153 = sub_100050B4C(0x18u);
                    if (!os_log_type_enabled(v153, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_83;
                    }
                    goto LABEL_215;
                  }
                  uint64_t v154 = sub_100162BA4((unsigned __int8 **)&ptr, 77);
                  if (v154)
                  {
                    uint64_t v155 = (uint64_t)v154;
                    if (!*(void *)(a1 + 64))
                    {
                      unsigned int v156 = sub_10010CE48(0x9BuLL);
                      *(void *)(a1 + 64) = v156;
                      if (!v156)
                      {
                        if (!sub_100058654()) {
                          goto LABEL_222;
                        }
                        sub_100056E24((uint64_t)"OBEX server could not allocate authentication state", v174, v175, v176, v177, v178, v179, v180, v192);
                        v181 = sub_100050B4C(0x18u);
                        if (!os_log_type_enabled(v181, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_222;
                        }
                        goto LABEL_221;
                      }
                    }
                    sub_100160590(a1, v155);
                    char v157 = 1;
                  }
                  else
                  {
                    char v157 = 0;
                  }
                  *(unsigned char *)(a1 + 200) = v157;
                  int v158 = *(_DWORD *)(*(void *)(a1 + 168) + 24);
                  if (!v158)
                  {
                    uint64_t v162 = 0;
                    uint64_t v163 = 0;
                    *(unsigned char *)(a1 + 56) = 0;
                    *(unsigned char *)(a1 + 199) = 0;
                    goto LABEL_209;
                  }
                  *(unsigned char *)(a1 + 56) = 1;
                  *(unsigned char *)(a1 + 199) = 1;
                  v159 = *(unsigned char **)(a1 + 64);
                  if (v159)
                  {
LABEL_201:
                    if (v158 == 2) {
                      v159[59] = 1;
                    }
                    if (*(unsigned __int8 *)(a1 + 193) >= 3u) {
                      goto LABEL_207;
                    }
                    uint64_t v160 = sub_100162BA4((unsigned __int8 **)&ptr, 78);
                    if (!v160)
                    {
                      int v165 = *(unsigned __int8 *)(a1 + 199);
                      *(_DWORD *)(a1 + 204) = 3;
                      if (v165)
                      {
                        uint64_t v16 = sub_100114014(*(unsigned __int16 *)(a1 + 208), 1, 0);
                        if (!v16) {
                          goto LABEL_133;
                        }
                        if (!sub_100058654()) {
                          goto LABEL_83;
                        }
                        sub_100056E24((uint64_t)"OBEX server could not accept connection", v166, v167, v168, v169, v170, v171, v172, v192);
                        v173 = sub_100050B4C(0x18u);
                        if (!os_log_type_enabled(v173, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_83;
                        }
LABEL_215:
                        sub_100744F6C();
                        goto LABEL_83;
                      }
                      uint64_t v162 = 0;
                      uint64_t v163 = 0;
LABEL_210:
                      ++*(unsigned char *)(a1 + 193);
                      v164 = sub_100162BA4((unsigned __int8 **)&ptr, 76);
                      *(unsigned char *)(a1 + 201) = 1;
                      (**(void (***)(void, void, uint64_t, uint64_t, unsigned __int8 *))(*(void *)(a1 + 168) + 16))(*(unsigned __int16 *)(a1 + 208), *(unsigned __int8 *)(a1 + 200) | *(unsigned __int8 *)(a1 + 199), v163, v162, v164);
                      uint64_t v16 = 0;
LABEL_92:
                      if (ptr) {
                        sub_100023010(ptr);
                      }
                      goto LABEL_133;
                    }
                    sub_100160668(a1, (uint64_t)v160);
                    uint64_t v161 = *(void *)(a1 + 64);
                    uint64_t v162 = *(unsigned __int8 *)(v161 + 58);
                    if (*(unsigned char *)(v161 + 59) && !*(unsigned char *)(v161 + 58))
                    {
LABEL_207:
                      sub_1001604C0(a1);
                      uint64_t v16 = 1735;
                      goto LABEL_83;
                    }
                    uint64_t v190 = v161 + 38;
                    if (v162) {
                      uint64_t v163 = v190;
                    }
                    else {
                      uint64_t v163 = 0;
                    }
LABEL_209:
                    *(_DWORD *)(a1 + 204) = 3;
                    goto LABEL_210;
                  }
                  v159 = sub_10010CE48(0x9BuLL);
                  *(void *)(a1 + 64) = v159;
                  if (v159)
                  {
                    int v158 = *(_DWORD *)(*(void *)(a1 + 168) + 24);
                    goto LABEL_201;
                  }
                  if (!sub_100058654()
                    || (sub_100056E24((uint64_t)"OBEX server could not allocate authentication state", v182, v183, v184, v185, v186, v187, v188, v192), v189 = sub_100050B4C(0x18u), !os_log_type_enabled(v189, OS_LOG_TYPE_ERROR)))
                  {
LABEL_222:
                    uint64_t v16 = 0;
LABEL_83:
                    if (sub_100058654())
                    {
                      sub_100056E24((uint64_t)"ConnectCommand error %!", v67, v68, v69, v70, v71, v72, v73, v16);
                      uint64_t v74 = sub_100050B4C(0x18u);
                      if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
                        sub_100744F6C();
                      }
                    }
                    uint64_t v75 = sub_10011410C(*(unsigned __int16 *)(a1 + 208), 0, v16);
                    if (v75)
                    {
                      uint64_t v76 = v75;
                      if (sub_100058654())
                      {
                        sub_100056E24((uint64_t)"OBEX server failed to accept connection %!", v77, v78, v79, v80, v81, v82, v83, v76);
                        uint64_t v84 = sub_100050B4C(0x18u);
                        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
                          sub_100744F6C();
                        }
                      }
                    }
                    __int16 v85 = *(void **)(a1 + 64);
                    if (v85)
                    {
                      sub_100023010(v85);
                      *(void *)(a1 + 64) = 0;
                    }
                    goto LABEL_92;
                  }
LABEL_221:
                  sub_100744F6C();
                  goto LABEL_222;
                }
                unsigned int v116 = *(unsigned __int16 *)(a1 + 76);
                if (v116 <= v114) {
                  goto LABEL_176;
                }
              }
              *(_WORD *)(a1 + 76) = v114;
              unsigned int v116 = v114;
              goto LABEL_176;
            }
          }
          *(unsigned char *)(a1 + 31) = 1;
          uint64_t v16 = 1707;
          goto LABEL_83;
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OBEX Server connect - version mismatch %d.%d", v59, v60, v61, v62, v63, v64, v65, v19);
        uint64_t v66 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v16 = 1718;
      goto LABEL_83;
    case 0x81:
      *(_DWORD *)(a1 + 204) = 11;
      uint64_t v20 = sub_1001139A4(a1, 160);
      if (!v20)
      {
        *(_DWORD *)(a1 + 32) = 0;
        return;
      }
      uint64_t v16 = v20;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXCOMMON_SendOk failed %!", v21, v22, v23, v24, v25, v26, v27, v16);
        long long v28 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_1001135A8((unsigned __int16 *)a1, 0);
LABEL_31:
      *(_DWORD *)(a1 + 32) = 0;
      goto LABEL_134;
    case 0x82:
      ptr = 0;
      uint64_t v194 = 0;
      uint64_t v16 = sub_100162BD0((uint64_t *)&ptr, v17);
      if (v16) {
        goto LABEL_33;
      }
      int v54 = *(_DWORD *)(a1 + 204);
      if (v54 == 8) {
        goto LABEL_71;
      }
      if (v54 != 5)
      {
        uint64_t v16 = 1711;
        goto LABEL_33;
      }
      if (!*(unsigned char *)(a1 + 120)) {
        goto LABEL_70;
      }
      uint64_t v55 = sub_100162BA4((unsigned __int8 **)&ptr, 203);
      if (v55)
      {
        if (*((_DWORD *)v55 + 2) == a1)
        {
LABEL_70:
          *(_DWORD *)(a1 + 204) = 8;
LABEL_71:
          uint64_t v56 = *(uint64_t (**)(void, void **, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 24);
          if (v56)
          {
            if ((v5 & 0x80u) == 0) {
              uint64_t v57 = 1701;
            }
            else {
              uint64_t v57 = 0;
            }
            int v58 = v56(*(unsigned __int16 *)(a1 + 208), &ptr, v57);
            if (v58) {
              goto LABEL_147;
            }
            goto LABEL_148;
          }
        }
        uint64_t v16 = 1715;
      }
      else
      {
        uint64_t v16 = 1714;
      }
LABEL_33:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"PutCommand error %!", v29, v30, v31, v32, v33, v34, v35, v16);
        long long v36 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (ptr)
      {
        sub_100023010(ptr);
        ptr = 0;
      }
      unsigned int v37 = *(_DWORD *)(a1 + 204);
      if (v37 > 9 || ((1 << v37) & 0x320) == 0) {
        goto LABEL_132;
      }
      long long v38 = *(void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 24);
      if (!v38) {
        goto LABEL_42;
      }
      goto LABEL_41;
    case 0x83:
      ptr = 0;
      uint64_t v194 = 0;
      if (v7 == 5)
      {
        *(_DWORD *)(a1 + 204) = 6;
      }
      else if ((v7 & 0xFFFFFFFE) != 6)
      {
        uint64_t v16 = 1711;
        goto LABEL_101;
      }
      if (!*(void *)(*(void *)(*(void *)(a1 + 168) + 16) + 16))
      {
        uint64_t v16 = 1715;
        goto LABEL_101;
      }
      uint64_t v45 = sub_100162BD0((uint64_t *)&ptr, v17);
      if (!v45)
      {
        if (sub_100162BA4((unsigned __int8 **)&ptr, 152) && *(_DWORD *)(a1 + 4) != 1) {
          sub_10025B8C0();
        }
        if (v7 != 5)
        {
          if ((*(unsigned char *)(a1 + 80) & 0xFE) == 0x48)
          {
            uint64_t v16 = sub_100113C9C(a1);
            if (!v16) {
              goto LABEL_148;
            }
            goto LABEL_101;
          }
LABEL_143:
          if ((v5 & 0x80u) == 0) {
            uint64_t v112 = 1752;
          }
          else {
            uint64_t v112 = 1701;
          }
          int v58 = (*(uint64_t (**)(void, void **, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 16))(*(unsigned __int16 *)(a1 + 208), &ptr, v112);
          if (v58)
          {
LABEL_147:
            *(_DWORD *)(a1 + 204) = 5;
            char v113 = sub_100113EB0(v58);
            sub_1001139A4(a1, v113);
          }
          goto LABEL_148;
        }
        if (!sub_100162BA4((unsigned __int8 **)&ptr, 1) && !sub_100162BA4((unsigned __int8 **)&ptr, 66))
        {
          uint64_t v16 = 1714;
          goto LABEL_101;
        }
        if (*(unsigned char *)(a1 + 120))
        {
          uint64_t v94 = sub_100162BA4((unsigned __int8 **)&ptr, 203);
          if (v94)
          {
            if (*((_DWORD *)v94 + 2) == a1) {
              goto LABEL_119;
            }
            uint64_t v16 = 1715;
          }
          else
          {
            uint64_t v16 = 1714;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"VerifyConnectionId failed %!", v117, v118, v119, v120, v121, v122, v123, v16);
            uint64_t v124 = sub_100050B4C(0x18u);
            if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
              goto LABEL_62;
            }
          }
          goto LABEL_101;
        }
LABEL_119:
        if (sub_100162BA4((unsigned __int8 **)&ptr, 151) && *(_DWORD *)(a1 + 4) != 1) {
          sub_10025B8C0();
        }
        *(unsigned char *)(a1 + 80) = 0;
        goto LABEL_143;
      }
      uint64_t v16 = v45;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXCOMMON_ParseHeaderList failed %!", v46, v47, v48, v49, v50, v51, v52, v16);
        uint64_t v53 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
LABEL_62:
        }
          sub_100744F6C();
      }
LABEL_101:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OBEX get command error %!", v86, v87, v88, v89, v90, v91, v92, v16);
        uint64_t v93 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (ptr)
      {
        sub_100023010(ptr);
        ptr = 0;
      }
      if ((*(_DWORD *)(a1 + 204) - 5) <= 2)
      {
        long long v38 = *(void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 16);
        if (v38) {
LABEL_41:
        }
          v38(*(unsigned __int16 *)(a1 + 208), 0, v16);
LABEL_42:
        *(_DWORD *)(a1 + 204) = 5;
      }
LABEL_132:
      char v103 = sub_100113EB0(v16);
      sub_1001139A4(a1, v103);
LABEL_133:
      *(_DWORD *)(a1 + 32) = 0;
      if (v16)
      {
LABEL_134:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OBEX request error %!", v104, v105, v106, v107, v108, v109, v110, v16);
          uint64_t v111 = sub_100050B4C(0x18u);
          if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      return;
    case 0x84:
      goto LABEL_31;
    case 0x85:
      ptr = 0;
      uint64_t v194 = 0;
      if (v7 != 5)
      {
        uint64_t v16 = 1711;
        goto LABEL_125;
      }
      if (!*(void *)(*(void *)(*(void *)(a1 + 168) + 16) + 32)) {
        goto LABEL_109;
      }
      if (v2 <= v6)
      {
        *(unsigned char *)(a1 + 31) = 1;
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
      }
      else
      {
        *(_WORD *)(a1 + 28) = v3 + 4;
        if (v2 > (unsigned __int16)(v3 + 4))
        {
          char v39 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 3));
          *(_WORD *)(a1 + 28) = v3 + 5;
          uint64_t v16 = sub_100162BD0((uint64_t *)&ptr, v17);
          if (v16) {
            goto LABEL_125;
          }
          if (*(unsigned char *)(a1 + 120))
          {
            uint64_t v40 = sub_100162BA4((unsigned __int8 **)&ptr, 203);
            if (!v40)
            {
              uint64_t v16 = 1714;
LABEL_125:
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"SetPathCommand error %!", v95, v96, v97, v98, v99, v100, v101, v16);
                uint64_t v102 = sub_100050B4C(0x18u);
                if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
              if (*(_DWORD *)(a1 + 204) == 10) {
                *(_DWORD *)(a1 + 204) = 5;
              }
              if (ptr)
              {
                sub_100023010(ptr);
                ptr = 0;
              }
              goto LABEL_132;
            }
            if (*((_DWORD *)v40 + 2) != a1)
            {
LABEL_109:
              uint64_t v16 = 1715;
              goto LABEL_125;
            }
          }
          uint64_t v41 = sub_100162BA4((unsigned __int8 **)&ptr, 1);
          if (v41)
          {
            int v43 = *((unsigned __int16 *)v41 + 4);
            uint64_t v42 = v41 + 8;
            if (v43) {
              uint64_t v44 = v42;
            }
            else {
              uint64_t v44 = 0;
            }
          }
          else
          {
            uint64_t v44 = 0;
          }
          if (v44 || (v39 & 2) != 0)
          {
            if ((v44 == 0) | v39 & 1) {
              unsigned int v125 = 0;
            }
            else {
              unsigned int v125 = v44;
            }
            *(_DWORD *)(a1 + 204) = 10;
            uint64_t v16 = (*(uint64_t (**)(void, unsigned __int8 *, void, BOOL))(*(void *)(*(void *)(a1 + 168)
                                                                                                 + 16)
                                                                                     + 32))(*(unsigned __int16 *)(a1 + 208), v125, v39 & 1, (v39 & 2) == 0);
            if (!v16)
            {
LABEL_148:
              if (ptr) {
                sub_100023010(ptr);
              }
              uint64_t v16 = 0;
              goto LABEL_133;
            }
          }
          else
          {
            uint64_t v16 = 1736;
          }
          goto LABEL_125;
        }
      }
      *(unsigned char *)(a1 + 31) = 1;
      uint64_t v16 = 1721;
      goto LABEL_125;
    case 0x86:
    case 0x87:
      sub_1001139A4(a1, 209);
      uint64_t v16 = 1717;
      goto LABEL_31;
    default:
      if ((v5 | 0x80) != 0xFF) {
        goto LABEL_31;
      }
      if ((v7 - 6) < 2)
      {
        *(_DWORD *)(a1 + 204) = 5;
        uint64_t v18 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 16);
      }
      else
      {
        if ((v7 - 8) > 1) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 204) = 5;
        uint64_t v18 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 24);
      }
      (*v18)(*(unsigned __int16 *)(a1 + 208), 0, 1719);
LABEL_96:
      if (*(_DWORD *)(a1 + 4) == 1) {
        sub_100259640(*(void *)(a1 + 112));
      }
      uint64_t v16 = sub_1001139A4(a1, 160);
      goto LABEL_133;
  }
}

uint64_t sub_1001135A8(unsigned __int16 *a1, char a2)
{
  int v4 = *((_DWORD *)a1 + 1);
  if (v4 == 1)
  {
    uint64_t v5 = sub_1001E121C(*a1, 436);
  }
  else
  {
    if (v4)
    {
      uint64_t v6 = 101;
      goto LABEL_9;
    }
    uint64_t v5 = sub_100246730(*a1, 926);
  }
  uint64_t v6 = v5;
  if (!v5)
  {
    if (a2) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_9:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"DisconnectTransport failed with %! for transport %!", v7, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
LABEL_12:
  sub_1001137D0((uint64_t)a1);
LABEL_13:
  *((_DWORD *)a1 + 51) = 0;
  return v6;
}

uint64_t sub_100113674(uint64_t a1, const void **a2)
{
  *(unsigned char *)(a1 + 120) = a2 != 0;
  int v4 = (unsigned __int16 *)(a1 + 128);
  while (1)
  {
    size_t v5 = *v4;
    if (a2) {
      break;
    }
    if (!*v4) {
      goto LABEL_11;
    }
LABEL_9:
    int v4 = (unsigned __int16 *)*((void *)v4 + 4);
    if (!v4) {
      return 1715;
    }
  }
  int v6 = *(unsigned __int16 *)a2;
  if (v6 == v5)
  {
    if (!memcmp(a2[1], *((const void **)v4 + 1), v5)) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (v6 | v5) {
    goto LABEL_9;
  }
LABEL_11:
  uint64_t result = 0;
  *(void *)(a1 + 168) = v4;
  return result;
}

uint64_t sub_100113700(unsigned __int16 *a1)
{
  int v2 = *((_DWORD *)a1 + 1);
  if (v2 == 1)
  {
    uint64_t v3 = sub_100263CCC((uint64_t)a1);
LABEL_5:
    uint64_t v4 = v3;
    if (!v3) {
      return v4;
    }
    goto LABEL_8;
  }
  if (!v2)
  {
    uint64_t v3 = sub_100245E68((uint64_t)sub_10016330C, *a1, *((void *)a1 + 5));
    goto LABEL_5;
  }
  uint64_t v4 = 101;
LABEL_8:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ServerSendPacket failed with %! for transport type %d", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_10025C53C(*((void **)a1 + 5));
  *((void *)a1 + 5) = 0;
  return v4;
}

void sub_1001137D0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 204);
  *(_DWORD *)(a1 + 204) = 0;
  *(unsigned char *)(a1 + 193) = 0;
  *(unsigned char *)(a1 + 198) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 176);
  if (v3)
  {
    sub_100026DB4(v3);
    *(_DWORD *)(a1 + 176) = 0;
  }
  if ((v2 - 6) < 2)
  {
    uint64_t v4 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 16);
  }
  else
  {
    if ((v2 - 8) > 1) {
      goto LABEL_8;
    }
    uint64_t v4 = (void (**)(void, void, uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 24);
  }
  (*v4)(*(unsigned __int16 *)(a1 + 208), 0, 1709);
LABEL_8:
  uint64_t v5 = *(void **)(a1 + 64);
  if (v5)
  {
    sub_100023010(v5);
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v6 = *(void **)(a1 + 8);
  if (v6)
  {
    sub_100023010(v6);
    *(void *)(a1 + 8) = 0;
  }
  if (*(unsigned char *)(a1 + 201))
  {
    *(unsigned char *)(a1 + 201) = 0;
    uint64_t v7 = *(void (**)(uint64_t))(*(void *)(*(void *)(a1 + 168) + 16) + 8);
    uint64_t v8 = *(unsigned __int16 *)(a1 + 208);
    v7(v8);
  }
}

void sub_1001138B0(uint64_t a1, void *a2, size_t a3)
{
  if (a1)
  {
    uint64_t v4 = sub_10016284C(a1, a2, a3);
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXCOMMON_ReassemblePacket failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_5:
        }
          sub_100744F6C();
      }
    }
    else if (*(_DWORD *)(a1 + 32) == 2 && !*(void *)(a1 + 40))
    {
      sub_1001127C0(a1);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OBEX received data for unknown connection", v14, v15, v16, v17, v18, v19, v20, v22);
    uint64_t v21 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      goto LABEL_5;
    }
  }
}

uint64_t sub_1001139A4(uint64_t a1, char a2)
{
  v15[0] = 0;
  v15[1] = 0;
  memset(v14, 0, sizeof(v14));
  sub_100162818(a1, a2, (uint64_t)v15);
  uint64_t v3 = sub_100162110(a1, (uint64_t)v15, (unsigned __int8 *)v14, 0, 0);
  if (!v3) {
    return sub_100113700(a1);
  }
  uint64_t v4 = v3;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Marshalling packet failed with %!", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return v4;
}

uint64_t sub_100113A54(unsigned int a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v6 = qword_100A01A18[a1];
  if (!v6) {
    return 101;
  }
  if (*(_DWORD *)(v6 + 204) == 6)
  {
    v29[0] = 0;
    v29[1] = 0;
    if (v3 == 1701)
    {
      char v7 = -112;
    }
    else
    {
      if (v3)
      {
        uint64_t v8 = 0;
LABEL_21:
        *(_DWORD *)(v6 + 204) = 5;
        char v27 = sub_100113EB0(v3);
        sub_1001139A4(v6, v27);
        return v8;
      }
      *(_DWORD *)(v6 + 204) = 7;
      char v7 = -96;
    }
    sub_100162818(v6, v7, (uint64_t)v29);
    uint64_t v9 = sub_100162110(v6, (uint64_t)v29, 0, 0, a2);
    if (v9)
    {
      uint64_t v8 = v9;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXCOMMON_MarshalPacket failed with status %!", v10, v11, v12, v13, v14, v15, v16, v8);
        uint64_t v17 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      uint64_t v18 = sub_100113700((unsigned __int16 *)v6);
      if (!v18) {
        return 0;
      }
      uint64_t v3 = v18;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXSRV_GetResponse failed %!", v19, v20, v21, v22, v23, v24, v25, v3);
        uint64_t v26 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v8 = v3;
    }
    goto LABEL_21;
  }
  return 1711;
}

uint64_t sub_100113BE0(unsigned int a1)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v2 = qword_100A01A18[a1];
  uint64_t v3 = sub_100113C9C(v2);
  if (v3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OBEX continue get command error %!", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    *(_DWORD *)(v2 + 204) = 5;
    char v12 = sub_100113EB0(v3);
    sub_1001139A4(v2, v12);
  }
  return v3;
}

uint64_t sub_100113C9C(uint64_t a1)
{
  uint64_t v2 = sub_100162784(a1);
  if (v2)
  {
    uint64_t v3 = v2;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_OBEXCOMMON_MarshalBodySegment failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return v3;
  }
  else
  {
    return sub_100113700(a1);
  }
}

uint64_t sub_100113D3C(unsigned int a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v6 = qword_100A01A18[a1];
  if (!v6) {
    return 101;
  }
  if (*(_DWORD *)(v6 + 204) == 8)
  {
    v20[0] = 0;
    v20[1] = 0;
    if (v3 != 1750)
    {
      if (v3 == 1701)
      {
        char v7 = -112;
        if (!a2) {
          goto LABEL_15;
        }
        goto LABEL_13;
      }
      if (v3)
      {
        uint64_t v8 = 0;
LABEL_22:
        *(_DWORD *)(v6 + 204) = 5;
        char v18 = sub_100113EB0(v3);
        sub_1001139A4(v6, v18);
        return v8;
      }
    }
    *(_DWORD *)(v6 + 204) = 9;
    char v7 = sub_100113EB0(v3);
    if (!a2)
    {
      *(_DWORD *)(v6 + 204) = 5;
LABEL_15:
      uint64_t v9 = sub_1001139A4(v6, v7);
      goto LABEL_16;
    }
LABEL_13:
    sub_100162818(v6, v7, (uint64_t)v20);
    uint64_t v3 = sub_100162110(v6, (uint64_t)v20, 0, 0, a2);
    if (v3)
    {
LABEL_17:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXSRV_PutResponse failed %!", v10, v11, v12, v13, v14, v15, v16, v3);
        uint64_t v17 = sub_100050B4C(0x18u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v8 = v3;
      goto LABEL_22;
    }
    uint64_t v9 = sub_100113700((unsigned __int16 *)v6);
LABEL_16:
    uint64_t v3 = v9;
    if (!v9) {
      return 0;
    }
    goto LABEL_17;
  }
  return 1711;
}

uint64_t sub_100113EB0(int a1)
{
  switch(a1)
  {
    case 1707:
    case 1714:
    case 1718:
    case 1720:
    case 1721:
      uint64_t result = 192;
      break;
    case 1708:
      uint64_t result = 203;
      break;
    case 1709:
    case 1710:
    case 1712:
    case 1713:
    case 1716:
    case 1719:
    case 1722:
    case 1723:
    case 1725:
    case 1726:
    case 1727:
    case 1728:
    case 1729:
    case 1730:
    case 1731:
    case 1732:
    case 1733:
    case 1734:
    case 1737:
    case 1738:
    case 1739:
    case 1740:
    case 1744:
    case 1745:
    case 1748:
      goto LABEL_7;
    case 1711:
    case 1735:
      uint64_t result = 195;
      break;
    case 1715:
      uint64_t result = 211;
      break;
    case 1717:
    case 1743:
      uint64_t result = 209;
      break;
    case 1724:
      uint64_t result = 196;
      break;
    case 1736:
      uint64_t result = 198;
      break;
    case 1741:
      uint64_t result = 204;
      break;
    case 1742:
      uint64_t result = 193;
      break;
    case 1746:
      uint64_t result = 224;
      break;
    case 1747:
      uint64_t result = 225;
      break;
    case 1749:
      uint64_t result = 207;
      break;
    case 1750:
      uint64_t result = 166;
      break;
    case 1751:
      uint64_t result = 197;
      break;
    default:
      if (a1) {
LABEL_7:
      }
        uint64_t result = 208;
      else {
        uint64_t result = 160;
      }
      break;
  }
  return result;
}

uint64_t sub_100114014(unsigned int a1, int a2, int a3)
{
  if (!dword_100A19810) {
    return 103;
  }
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v6 = qword_100A01A18[a1];
  if (!v6 || *(_DWORD *)(v6 + 204) != 3) {
    return 1745;
  }
  if ((a3 == 0) == a2)
  {
    return sub_10011410C(a1, a2, a3);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid combination of accept and status", v7, v8, v9, v10, v11, v12, v13, v16);
      uint64_t v14 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 101;
  }
}

uint64_t sub_10011410C(unsigned int a1, int a2, int a3)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v33 = 0;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v6 = qword_100A01A18[a1];
  if (a2)
  {
    if (*(unsigned char *)(v6 + 199))
    {
      *(_DWORD *)(v6 + 204) = 2;
      uint64_t v7 = sub_10025B218(0x18u);
      sub_100160848(*(char **)(v7 + 16), v6, (uint64_t)&v29);
      char v8 = -63;
      unsigned int v9 = 1;
    }
    else
    {
      *(_DWORD *)(v6 + 204) = 4;
      if (*(unsigned char *)(v6 + 120))
      {
        LOBYTE(v29) = -53;
        DWORD2(v29) = v6;
        BYTE8(v30) = 74;
        uint64_t v23 = *(void *)(v6 + 168);
        LOWORD(v31) = *(_WORD *)v23;
        *((void *)&v31 + 1) = *(void *)(v23 + 8);
        unsigned int v9 = 2;
      }
      else
      {
        unsigned int v9 = 0;
      }
      if (*(unsigned char *)(v6 + 200))
      {
        sub_10016075C(v6, (uint64_t)&v29 + 24 * v9);
        char v8 = -96;
        v9 |= 1u;
      }
      else
      {
        char v8 = -96;
      }
    }
  }
  else
  {
    *(_DWORD *)(v6 + 204) = 2;
    char v8 = sub_100113EB0(a3);
    unsigned int v9 = 0;
  }
  sub_100162818(v6, v8, (uint64_t)&v27);
  if (HIBYTE(v28))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_31;
  }
  uint64_t v10 = WORD2(v28);
  if (WORD1(v28) <= WORD2(v28))
  {
LABEL_31:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(pkt) >= 1";
    goto LABEL_33;
  }
  if (BYTE6(v28) != 2)
  {
    uint64_t v24 = "(pkt).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c", 534, v24);
  }
  ++WORD2(v28);
  *(unsigned char *)(v27 + v10) = 16;
  if (HIBYTE(v28))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_35;
  }
  uint64_t v11 = WORD2(v28);
  if (WORD1(v28) <= WORD2(v28))
  {
LABEL_35:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(pkt) >= 1";
    goto LABEL_37;
  }
  if (BYTE6(v28) != 2)
  {
    uint64_t v25 = "(pkt).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c", 535, v25);
  }
  ++WORD2(v28);
  *(unsigned char *)(v27 + v11) = 0;
  if (HIBYTE(v28))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c");
    goto LABEL_39;
  }
  if (WORD1(v28) - WORD2(v28) <= 1)
  {
LABEL_39:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(pkt) >= 2";
    goto LABEL_41;
  }
  if (BYTE6(v28) != 2)
  {
    uint64_t v26 = "(pkt).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/obex/obexsrv_common.c", 536, v26);
  }
  *(unsigned char *)(v27 + WORD2(v28) + 1) = *(unsigned char *)(v6 + 74);
  *(unsigned char *)(v27 + WORD2(v28)) = *(unsigned char *)(v6 + 75);
  WORD2(v28) += 2;
  uint64_t v12 = sub_100162110(v6, (uint64_t)&v27, (unsigned __int8 *)&v29, v9, 0);
  if (v12 || (uint64_t v12 = sub_100113700((unsigned __int16 *)v6), v12))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"acceptConnect error %!", v13, v14, v15, v16, v17, v18, v19, v12);
      uint64_t v20 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    *(_DWORD *)(v6 + 204) = 2;
    uint64_t v21 = *(void **)(v6 + 64);
    if (v21)
    {
      sub_100023010(v21);
      *(void *)(v6 + 64) = 0;
    }
  }
  return v12;
}

uint64_t sub_10011448C(unsigned int a1, const void *a2, unsigned int a3, char *a4, char a5)
{
  if (!dword_100A19810) {
    return 103;
  }
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v10 = qword_100A01A18[a1];
  uint64_t v32 = v10;
  if (!v10 || *(_DWORD *)(v10 + 204) != 3 || !*(unsigned char *)(v10 + 199) && !*(unsigned char *)(v10 + 200)) {
    return 1745;
  }
  v33[0] = 0;
  if (a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = (char *)&unk_1007B9310;
  }
  *(unsigned char *)(v10 + 57) = a5;
  uint64_t v12 = sub_1001604E4(v10, a2, a3, v11);
  if (!v12)
  {
    if (!*(unsigned char *)(v10 + 199)) {
      goto LABEL_26;
    }
    if (!sub_10016094C(v10))
    {
      *(unsigned char *)(v10 + 199) = 0;
      v33[1] = &v32;
      LOWORD(v33[0]) = 8;
      sub_100026DA8((uint64_t)sub_100114690, v33, 0);
      return 0;
    }
    if (*(unsigned __int8 *)(v10 + 193) > 2u)
    {
      uint64_t v12 = 1735;
    }
    else
    {
LABEL_26:
      uint64_t v12 = sub_100114014(a1, 1, 0);
      if (!v12) {
        return v12;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_OBEXSRV_AuthenticationRsp error %!", v13, v14, v15, v16, v17, v18, v19, v12);
    uint64_t v20 = sub_100050B4C(0x18u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v21 = sub_10011410C(a1, 0, v12);
  if (v21)
  {
    uint64_t v22 = v21;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_OBEXSRV_AuthenticationRsp: Failure to send error response %!", v23, v24, v25, v26, v27, v28, v29, v22);
      long long v30 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  *(_DWORD *)(v10 + 204) = 2;
  sub_1001604C0(v10);
  return v12;
}

uint64_t sub_100114690(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (*(unsigned char *)(v1 + 199)) {
    sub_10025B8C0();
  }
  *(unsigned char *)(v1 + 201) = 1;
  uint64_t v2 = **(uint64_t (***)(uint64_t, void, void, void, void))(*(void *)(v1 + 168) + 16);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 208);

  return v2(v3, 0, 0, 0, 0);
}

uint64_t sub_1001146F8(unsigned int a1, int a2)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v4 = qword_100A01A18[a1];
  if (!v4 || *(_DWORD *)(v4 + 204) != 10) {
    return 1745;
  }
  *(_DWORD *)(v4 + 204) = 5;
  if (a2)
  {
    char v5 = sub_100113EB0(a2);
    sub_1001139A4(v4, v5);
    return 0;
  }
  else
  {
    return sub_1001139A4(v4, 160);
  }
}

uint64_t sub_100114794(unsigned int a1)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v2 = qword_100A01A18[a1];
  if (v2)
  {
    if (*(_DWORD *)(v2 + 204) >= 3u) {
      LOWORD(v2) = *(_WORD *)(v2 + 76) - 6;
    }
    else {
      LOWORD(v2) = 0;
    }
  }
  return (unsigned __int16)v2;
}

uint64_t sub_1001147F0(unsigned int a1, uint64_t a2)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v4 = qword_100A01A18[a1];
  if (!v4) {
    return 1709;
  }
  uint64_t result = 0;
  int v6 = *(_DWORD *)(v4 + 104);
  *(_WORD *)(a2 + 4) = *(_WORD *)(v4 + 108);
  *(_DWORD *)a2 = v6;
  return result;
}

uint64_t sub_10011484C(unsigned int a1, _DWORD *a2)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v4 = qword_100A01A18[a1];
  if (!v4) {
    return 1709;
  }
  uint64_t result = 0;
  *a2 = *(_DWORD *)(v4 + 4);
  return result;
}

uint64_t sub_1001148A0(unsigned int a1)
{
  if (a1 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v2 = qword_100A01A18[a1];
  if (!v2) {
    return 101;
  }
  if (*(_DWORD *)(v2 + 204))
  {
    *(unsigned char *)(v2 + 198) = 1;
    return sub_1001135A8((unsigned __int16 *)v2, 1);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Service is registered but not connected!", v4, v5, v6, v7, v8, v9, v10, v12);
      uint64_t v11 = sub_100050B4C(0x18u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1709;
  }
}

void sub_100114958(char a1, char a2, char a3, int a4, int a5, char a6, char a7, char a8, char a9, char a10)
{
  if (qword_100A01C60 != -1) {
    dispatch_once(&qword_100A01C60, &stru_10099B108);
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 0x40000000;
  v18[2] = sub_100114A64;
  v18[3] = &unk_10099AFF0;
  char v21 = a1;
  char v22 = a2;
  int v19 = a4;
  int v20 = a5;
  char v23 = a6;
  char v24 = a7;
  char v25 = a8;
  char v26 = a9;
  char v27 = a10;
  char v28 = a3;
  dispatch_sync((dispatch_queue_t)qword_100A01C58, v18);
}

void sub_100114A64(uint64_t a1)
{
  uint64_t v2 = qword_100A01A98;
  BOOL v3 = os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT);
  uint64_t v4 = &off_1009F9000;
  uint64_t v5 = &off_1009F9000;
  if (v3)
  {
    uint64_t v6 = "enabled";
    if (byte_100A01AA0) {
      uint64_t v7 = "enabled";
    }
    else {
      uint64_t v7 = "disabled";
    }
    if (*(unsigned char *)(a1 + 40)) {
      uint64_t v8 = "enabled";
    }
    else {
      uint64_t v8 = "disabled";
    }
    if (byte_100A01AA1) {
      uint64_t v9 = "enabled";
    }
    else {
      uint64_t v9 = "disabled";
    }
    if (*(unsigned char *)(a1 + 41)) {
      uint64_t v10 = "enabled";
    }
    else {
      uint64_t v10 = "disabled";
    }
    int v11 = *(_DWORD *)(a1 + 36);
    int v12 = *(_DWORD *)(a1 + 32) / 1000000;
    if (byte_100A01AA2) {
      uint64_t v13 = "enabled";
    }
    else {
      uint64_t v13 = "disabled";
    }
    if (*(unsigned char *)(a1 + 42)) {
      uint64_t v14 = "enabled";
    }
    else {
      uint64_t v14 = "disabled";
    }
    if (byte_100A01AA3) {
      uint64_t v15 = "enabled";
    }
    else {
      uint64_t v15 = "disabled";
    }
    int v16 = *(unsigned __int8 *)(a1 + 45);
    if (*(unsigned char *)(a1 + 43)) {
      uint64_t v17 = "enabled";
    }
    else {
      uint64_t v17 = "disabled";
    }
    if (byte_100A01AA4) {
      uint64_t v18 = "enabled";
    }
    else {
      uint64_t v18 = "disabled";
    }
    if (*(unsigned char *)(a1 + 44)) {
      int v19 = "enabled";
    }
    else {
      int v19 = "disabled";
    }
    int v20 = *(unsigned __int8 *)(a1 + 46);
    if (byte_100A01AA5) {
      char v21 = "enabled";
    }
    else {
      char v21 = "disabled";
    }
    int v25 = 136319490;
    if (v16) {
      char v22 = "enabled";
    }
    else {
      char v22 = "disabled";
    }
    char v26 = v7;
    __int16 v27 = 2080;
    if (byte_100A01AA6) {
      char v23 = "enabled";
    }
    else {
      char v23 = "disabled";
    }
    char v28 = v8;
    if (!v20) {
      uint64_t v6 = "disabled";
    }
    __int16 v29 = 2080;
    long long v30 = v9;
    __int16 v31 = 2080;
    uint64_t v32 = v10;
    __int16 v33 = 1024;
    int v34 = dword_1009F9110 / 1000000;
    __int16 v35 = 1024;
    int v36 = v12;
    __int16 v37 = 1024;
    int v38 = dword_1009F9114;
    __int16 v39 = 1024;
    int v40 = v11;
    __int16 v41 = 2080;
    uint64_t v42 = v13;
    __int16 v43 = 2080;
    uint64_t v44 = v14;
    __int16 v45 = 2080;
    uint64_t v46 = v15;
    __int16 v47 = 2080;
    uint64_t v48 = v17;
    __int16 v49 = 2080;
    uint64_t v50 = v18;
    __int16 v51 = 2080;
    uint64_t v52 = v19;
    __int16 v53 = 2080;
    int v54 = v21;
    __int16 v55 = 2080;
    uint64_t v56 = v22;
    __int16 v57 = 2080;
    int v58 = v23;
    __int16 v59 = 2080;
    uint64_t v60 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Change HCI config settings to rawAudio:%s->%s HID:%s->%s fileSize:%dMB->%dMB #ofTraces:%d->%d liveHCI:%s->%s fileHCI:%s->%s audioTimeSync:%s->%s gEnableENPacketLogging:%s->%s hciLiteLogging:%s->%s", (uint8_t *)&v25, 0xA6u);
    uint64_t v5 = &off_1009F9000;
    uint64_t v4 = &off_1009F9000;
    uint64_t v2 = qword_100A01A98;
  }
  byte_100A01AA0 = *(unsigned char *)(a1 + 40);
  byte_100A01AA1 = *(unsigned char *)(a1 + 41);
  byte_100A01AA7 = *(unsigned char *)(a1 + 47);
  int v24 = *(_DWORD *)(a1 + 36);
  *((_DWORD *)v4 + 68) = *(_DWORD *)(a1 + 32);
  *((_DWORD *)v5 + 69) = v24;
  byte_100A01AA2 = *(unsigned char *)(a1 + 42);
  byte_100A01AA3 = *(unsigned char *)(a1 + 43);
  byte_100A01AA4 = *(unsigned char *)(a1 + 44);
  byte_100A01AA5 = *(unsigned char *)(a1 + 45);
  byte_100A01AA6 = *(unsigned char *)(a1 + 46);
  sub_1000F8508((uint64_t)v2);
  if (!byte_100A01AA2) {
    sub_100114D4C();
  }
}

void sub_100114D4C()
{
  if (qword_100A01C98 && CFSetGetCount((CFSetRef)qword_100A01C98) >= 1)
  {
    uint64_t v0 = qword_100A01A98;
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Terminate Live Logging - lockdown", buf, 2u);
    }
    if (&lockdown_copy_checkin_info) {
      CFSetApplyFunction((CFSetRef)qword_100A01C98, (CFSetApplierFunction)j__lockdown_disconnect, 0);
    }
    CFRelease((CFTypeRef)qword_100A01C98);
    qword_100A01C98 = 0;
    if (off_100A01AB0) {
      off_100A01AB0(0);
    }
  }
  if (qword_100A01CA0 && CFSetGetCount((CFSetRef)qword_100A01CA0) >= 1)
  {
    uint64_t v1 = qword_100A01A98;
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Terminate Live Logging - XPC", v2, 2u);
    }
    CFSetApplyFunction((CFSetRef)qword_100A01CA0, (CFSetApplierFunction)j__xpc_release, 0);
    CFRelease((CFTypeRef)qword_100A01CA0);
    qword_100A01CA0 = 0;
    if (off_100A01AB0) {
      off_100A01AB0(0);
    }
  }
}

void sub_100114EA4(int a1)
{
  uint64_t v2 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 67109376;
    v3[1] = byte_100A01AA8;
    __int16 v4 = 1024;
    int v5 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Setting skipAuth %d->%d", (uint8_t *)v3, 0xEu);
  }
  byte_100A01AA8 = a1;
}

void *sub_100114F64(void *result)
{
  off_100A01AB0 = result;
  return result;
}

uint64_t sub_100114F70(uint64_t result)
{
  word_100A01AB8 = result;
  return result;
}

uint64_t sub_100114F7C(uint64_t a1)
{
  return 1;
}

uint64_t sub_100114FA0(uint64_t a1, char a2, int a3)
{
  if (qword_100A01C60 != -1) {
    dispatch_once(&qword_100A01C60, &stru_10099B108);
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 0x40000000;
  _DWORD v8[2] = sub_1001150CC;
  _OWORD v8[3] = &unk_10099B010;
  char v10 = a2;
  v8[4] = a1;
  int v9 = a3;
  dispatch_sync((dispatch_queue_t)qword_100A01C58, v8);
  uint64_t v6 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Watch for calendar changes", buf, 2u);
  }
  if (qword_100A01C68 != -1) {
    dispatch_once(&qword_100A01C68, &stru_10099B148);
  }
  return 1;
}

void sub_1001150CC(uint64_t a1)
{
  uint64_t v2 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v3 = " [HCILite Logging]";
    std::string::size_type v4 = *(void *)(a1 + 32);
    if (!*(unsigned char *)(a1 + 44)) {
      BOOL v3 = "[Full Logging]";
    }
    LODWORD(buf.__pn_.__r_.__value_.__l.__data_) = 136446723;
    *(std::string::size_type *)((char *)buf.__pn_.__r_.__value_.__r.__words + 4) = (std::string::size_type)v3;
    WORD2(buf.__pn_.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__pn_.__r_.__value_.__r.__words[1] + 6) = v4;
    HIWORD(buf.__pn_.__r_.__value_.__r.__words[2]) = 2081;
    uint64_t v32 = qword_100A01AC0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Init sniff%{public}s %s gLogPath:%{private}s", (uint8_t *)&buf, 0x20u);
    uint64_t v2 = qword_100A01A98;
  }
  sub_1000F8508((uint64_t)v2);
  sub_1000F85A0(*(_DWORD *)(a1 + 40));
  if (!qword_100A01AC0) {
    byte_100A01AA6 = *(unsigned char *)(a1 + 44);
  }
  sysdir_search_path_enumeration_state started = sysdir_start_search_path_enumeration_private();
  sysdir_get_next_search_path_enumeration(started, byte_100A01AC8);
  long long v29 = 0u;
  memset(v30, 0, sizeof(v30));
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  *(_OWORD *)int v16 = 0u;
  __strlcpy_chk();
  __strlcat_chk();
  __strlcat_chk();
  if (qword_100A01AC0) {
    goto LABEL_10;
  }
  uint64_t v6 = *(const char **)(a1 + 32);
  if (v6)
  {
    qword_100A01AC0 = (uint64_t)strdup(v6);
LABEL_10:
    sub_100115444();
    return;
  }
  if (mkdir(v16, 0x1EDu) && *__error() != 17)
  {
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
      sub_1007486AC();
    }
  }
  else
  {
    if (!mkdir(byte_100A01AC8, 0x1EDu) || *__error() == 17)
    {
      qword_100A01AC0 = (uint64_t)malloc_type_calloc(0x400uLL, 1uLL, 0x5899BE66uLL);
      __strlcpy_chk();
      if (byte_100A01AA6) {
        uint64_t v7 = "/bluetoothd-hcilite-latest.pklg";
      }
      else {
        uint64_t v7 = "/bluetoothd-hci-latest.pklg";
      }
      strlcat((char *)qword_100A01AC0, v7, 0x400uLL);
      int v8 = byte_100A01AA6;
      if (byte_100A01AA6) {
        int v9 = "bluetoothd-hci-";
      }
      else {
        int v9 = "bluetoothd-hcilite-";
      }
      bzero(&buf, 0x400uLL);
      chdir(byte_100A01AC8);
      char v10 = opendir(byte_100A01AC8);
      if (v10)
      {
        int v11 = v10;
        int v12 = readdir(v10);
        if (v12)
        {
          if (v8) {
            size_t v13 = 15;
          }
          else {
            size_t v13 = 19;
          }
          do
          {
            d_name = v12->d_name;
            if (!strncmp(v12->d_name, v9, v13))
            {
              snprintf((char *)&buf, 0x400uLL, "%s/%s", byte_100A01AC8, d_name);
              remove(&buf, v15);
            }
            int v12 = readdir(v11);
          }
          while (v12);
        }
        closedir(v11);
      }
      else if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR))
      {
        sub_1007485E0();
      }
      goto LABEL_10;
    }
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
      sub_100748614();
    }
  }
}

void sub_100115444()
{
  if (&lockdown_copy_checkin_info)
  {
    if (qword_100A01C60 != -1) {
      dispatch_once(&qword_100A01C60, &stru_10099B108);
    }
    int v0 = lockdown_checkin_xpc();
    if (v0)
    {
      int v1 = v0;
      uint64_t v2 = qword_100A01A98;
      if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
        sub_100748740(v1, v2);
      }
    }
  }
  if (!qword_100A01CA8)
  {
    if (qword_100A01C60 != -1) {
      dispatch_once(&qword_100A01C60, &stru_10099B108);
    }
    qword_100A01CA8 = (uint64_t)xpc_connection_create_mach_service("com.apple.bluetooth.BTPacketLogger.ios", (dispatch_queue_t)qword_100A01C58, 1uLL);
    xpc_connection_set_event_handler((xpc_connection_t)qword_100A01CA8, &stru_10099B248);
    xpc_connection_resume((xpc_connection_t)qword_100A01CA8);
  }
}

uint64_t sub_100115548()
{
  if (qword_100A01C60 != -1) {
    dispatch_once(&qword_100A01C60, &stru_10099B108);
  }
  dispatch_sync((dispatch_queue_t)qword_100A01C58, &stru_10099B050);
  return 1;
}

void sub_10011559C(id a1)
{
  int v1 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::__fs::filesystem::path buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Terminate sniff", buf, 2u);
  }
  if (dword_1009F9118 != -1)
  {
    close(dword_1009F9118);
    dword_1009F9118 = -1;
  }
  if (qword_100A01AC0)
  {
    free((void *)qword_100A01AC0);
    qword_100A01AC0 = 0;
  }
  sub_100114D4C();
  uint64_t v2 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Sniff terminated", v3, 2u);
  }
}

void sub_100115670(const char *a1)
{
  word_100A01BC8 = 0;
  free((void *)qword_100A01BD0);
  if (a1)
  {
    size_t v2 = strlen(a1);
    if (v2 <= 0x800)
    {
      if (v2)
      {
        int v3 = 1;
        std::string::size_type v4 = a1;
        do
        {
          int v5 = *(unsigned __int8 *)v4++;
          if (v5 == 10) {
            ++v3;
          }
          --v2;
        }
        while (v2);
        uint64_t v6 = (13 * v3);
      }
      else
      {
        uint64_t v6 = 13;
      }
      __lasts = 0;
      if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEBUG)) {
        sub_1007487B8();
      }
      uint64_t v7 = strdup(a1);
      size_t v8 = strlen(a1);
      __int16 v9 = v8 + v6;
      qword_100A01BD0 = (uint64_t)malloc_type_malloc(v8 + v6, 0xE8B008EBuLL);
      if (qword_100A01BD0)
      {
        char v10 = strtok_r(v7, "\n", &__lasts);
        if (v10)
        {
          int v11 = v10;
          do
          {
            unsigned __int16 v12 = strlen(v11);
            sub_100023E54(v11, v12, 0, 0xFCu);
            unsigned __int16 v13 = strlen(v11);
            word_100A01BC8 += sub_100115868((unsigned char *)(qword_100A01BD0 + (unsigned __int16)word_100A01BC8), (unsigned __int16)(v9 - word_100A01BC8), v11, v13, 0xFCu);
            int v11 = strtok_r(0, "\n", &__lasts);
          }
          while (v11);
        }
        free(v7);
        qword_100A01BD0 = (uint64_t)malloc_type_realloc((void *)qword_100A01BD0, (unsigned __int16)word_100A01BC8, 0x769A521FuLL);
      }
      else
      {
        free(v7);
      }
    }
  }
}

void sub_100115824(const char *a1)
{
  signed int v2 = (unsigned __int16)strlen(a1);

  sub_100023E54(a1, v2, 0, 0xFCu);
}

uint64_t sub_100115868(unsigned char *a1, unsigned int a2, const void *a3, signed int a4, unsigned int a5)
{
  signed int v5 = a2 - 13;
  if (a2 >= 0xD && (!byte_100A01AA6 || a5 - 250 < 4 || a5 <= 1))
  {
    *a1 = 0;
    a1[1] = (a4 + 9) >> 16;
    a1[2] = (unsigned __int16)(a4 + 9) >> 8;
    a1[3] = a4 + 9;
    if (byte_100A01BE0 == 1) {
      unint64_t v11 = qword_100A01C90;
    }
    else {
      unint64_t v11 = sub_100116DE0();
    }
    uint64_t v18 = 0;
    sub_100026C30((uint64_t)&v18);
    int v12 = v18 + v11;
    unsigned int v13 = 1000 * (SWORD2(v18) + ((int)(v11 >> 16) >> 16));
    if (v13 > 0xF423F) {
      ++v12;
    }
    a1[4] = HIBYTE(v12);
    a1[5] = BYTE2(v12);
    a1[6] = BYTE1(v12);
    a1[7] = v12;
    if (v13 <= 0xF423F) {
      unsigned int v14 = v13;
    }
    else {
      unsigned int v14 = v13 - 1000000;
    }
    a1[8] = HIBYTE(v14);
    a1[9] = BYTE2(v14);
    a1[10] = BYTE1(v14);
    a1[11] = v14;
    a1[12] = a5;
    if (v5 < a4)
    {
      if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
        sub_10074882C();
      }
      return 0;
    }
    memcpy(a1 + 13, a3, a4);
    if (!byte_100A01AA6 || a5 - 250 < 4) {
      return (unsigned __int16)(a4 + 13);
    }
    if (!a5)
    {
      int v17 = sub_1000FA9E0((uint64_t)a1, a2);
      unsigned __int16 v15 = 0;
      if (!v17) {
        return v15;
      }
      return (unsigned __int16)(a4 + 13);
    }
    if (a5 == 1 && (sub_1000F86AC((uint64_t)a1, a2) & 1) != 0) {
      return (unsigned __int16)(a4 + 13);
    }
  }
  return 0;
}

uint64_t sub_100115A40()
{
  uint64_t v3 = 0;
  std::string::size_type v4 = &v3;
  uint64_t v5 = 0x2000000000;
  char v6 = 1;
  if (qword_100A01C60 != -1) {
    dispatch_once(&qword_100A01C60, &stru_10099B108);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_100115B1C;
  block[3] = &unk_10099B078;
  void block[4] = &v3;
  dispatch_sync((dispatch_queue_t)qword_100A01C58, block);
  uint64_t v0 = *((unsigned __int8 *)v4 + 24);
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_100115B1C(uint64_t a1)
{
  memset(&v5, 0, sizeof(v5));
  signed int v2 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::__fs::filesystem::path buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Start logging", buf, 2u);
  }
  qword_100A01C90 = sub_100116DE0();
  char v3 = 1;
  byte_100A01BE0 = 1;
  sub_100115444();
  if (byte_100A01AA3)
  {
    if (dword_1009F9118 != -1)
    {
      if (!stat((const char *)qword_100A01AC0, &v5))
      {
LABEL_10:
        char v3 = 1;
        goto LABEL_14;
      }
      close(dword_1009F9118);
    }
    dword_1009F9118 = open((const char *)qword_100A01AC0, 521, 420);
    if (dword_1009F9118 != -1)
    {
      if (!stat((const char *)qword_100A01AC0, &v5)) {
        qword_100A01BD8 = v5.st_size;
      }
      goto LABEL_10;
    }
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
      sub_100748860();
    }
    char v3 = 0;
  }
LABEL_14:
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v3;
}

uint64_t sub_100115C6C()
{
  LODWORD(result) = sub_100024048();
  if (dword_1009F9118 == -1) {
    return result;
  }
  else {
    return 1;
  }
}

uint64_t sub_100115C94(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0;
  size_t v8 = &v7;
  uint64_t v9 = 0x2000000000;
  char v10 = 1;
  if (qword_100A01C60 != -1) {
    dispatch_once(&qword_100A01C60, &stru_10099B108);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000;
  block[2] = sub_100115D7C;
  block[3] = &unk_10099B0A0;
  void block[5] = a1;
  block[6] = a2;
  void block[4] = &v7;
  dispatch_sync((dispatch_queue_t)qword_100A01C58, block);
  uint64_t v4 = *((unsigned __int8 *)v8 + 24);
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_100115D7C(void *a1)
{
  signed int v2 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::__fs::filesystem::path buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stop logging", buf, 2u);
  }
  long long v22 = 0u;
  memset(v23, 0, sizeof(v23));
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  *(_OWORD *)std::__fs::filesystem::path buf = 0u;
  long long v10 = 0u;
  if (dword_1009F9118 != -1)
  {
    close(dword_1009F9118);
    dword_1009F9118 = -1;
    uint64_t v8 = 0;
    sub_100026C30((uint64_t)&v8);
    if (byte_100A01AA6) {
      char v3 = "%s/bluetoothd-hcilite-%d.pklg";
    }
    else {
      char v3 = "%s/bluetoothd-hci-%d.pklg";
    }
    uint64_t v4 = (char *)a1[5];
    if (!v4) {
      uint64_t v4 = byte_100A01AC8;
    }
    snprintf((char *)buf, 0xFFuLL, v3, v4, v8);
    rename((const std::__fs::filesystem::path *)qword_100A01AC0, (const std::__fs::filesystem::path *)buf, v5);
    if (v6)
    {
      *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = 0;
    }
    else
    {
      uint64_t v7 = (char *)a1[6];
      if (v7) {
        strlcpy(v7, (const char *)buf, 0xFFuLL);
      }
    }
  }
  sub_100114D4C();
}

uint64_t sub_100115EF0(uint64_t a1)
{
  uint64_t v5 = 0;
  int v6 = &v5;
  uint64_t v7 = 0x2000000000;
  char v8 = 0;
  if (qword_100A01C60 != -1) {
    dispatch_once(&qword_100A01C60, &stru_10099B108);
  }
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 0x40000000;
  void v4[2] = sub_100115FCC;
  void v4[3] = &unk_10099B0C8;
  v4[4] = &v5;
  v4[5] = a1;
  dispatch_sync((dispatch_queue_t)qword_100A01C58, v4);
  uint64_t v2 = *((unsigned __int8 *)v6 + 24);
  _Block_object_dispose(&v5, 8);
  return v2;
}

void sub_100115FCC(uint64_t a1)
{
  uint64_t v2 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stop and rotate logging", v5, 2u);
  }
  if (dword_1009F9118 != -1)
  {
    close(dword_1009F9118);
    dword_1009F9118 = -1;
    rename((const std::__fs::filesystem::path *)qword_100A01AC0, *(const std::__fs::filesystem::path **)(a1 + 40), v3);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v4 == 0;
  }
}

void *sub_100116074()
{
  sub_100023E54("AP Sleep", 8, 0, 0xFBu);
  byte_100A01BE0 = 0;
  if (qword_100A01BE8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received sleep with a sleep buffer already allocated", v0, v1, v2, v3, v4, v5, v6, v9);
      uint64_t v7 = sub_100050B4C(0x5Cu);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    free((void *)qword_100A01BE8);
    qword_100A01BE8 = 0;
  }
  uint64_t result = malloc_type_calloc(1uLL, 0x800uLL, 0x6CCEAE98uLL);
  qword_100A01BE8 = (uint64_t)result;
  word_100A01BF0 = 0;
  return result;
}

void sub_100116128(const char *a1)
{
  signed int v2 = (unsigned __int16)strlen(a1);

  sub_100023E54(a1, v2, 0, 0xFBu);
}

void sub_10011616C(int a1)
{
  signed int v2 = (void *)qword_100A01BE8;
  if (a1 && qword_100A01BE8)
  {
    CFDataRef v3 = CFDataCreate(kCFAllocatorDefault, (const UInt8 *)qword_100A01BE8, (unsigned __int16)word_100A01BF0);
    Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 1, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    CFDictionarySetValue(Mutable, @"HCITrace", v3);
    CFRelease(v3);
    PLLogRegisteredEvent();
    CFRelease(Mutable);
    signed int v2 = (void *)qword_100A01BE8;
  }
  if (v2)
  {
    free(v2);
    qword_100A01BE8 = 0;
    word_100A01BF0 = 0;
  }
  qword_100A01C90 = sub_100116DE0();
  byte_100A01BE0 = 1;
  if (a1) {
    uint64_t v5 = "AP Wake - Bluetooth";
  }
  else {
    uint64_t v5 = "AP Wake - Other";
  }
  if (a1) {
    signed int v6 = 19;
  }
  else {
    signed int v6 = 15;
  }

  sub_100023E54(v5, v6, 0, 0xFBu);
}

BOOL sub_100116290(unsigned __int8 *a1, int a2)
{
  unint64_t v2 = 0;
  unsigned int v3 = *(unsigned __int16 *)(a1 + 9);
  BOOL v4 = 1;
  uint64_t v5 = &word_100A01BF6;
  do
  {
    if (*((unsigned char *)v5 + 5)
      && a1[8] == *((unsigned __int8 *)v5 - 2)
      && *(v5 - 2) == (*a1 | ((a1[1] & 0xF) << 8))
      && v3 >= (unsigned __int16)*v5
      && v3 <= (unsigned __int16)v5[1]
      && *((unsigned __int8 *)v5 + 4) == a2)
    {
      break;
    }
    v5 += 5;
    BOOL v4 = v2++ < 9;
  }
  while (v2 != 10);
  return v4;
}

void sub_10011631C(const char *a1)
{
  signed int v2 = (unsigned __int16)strlen(a1);

  sub_100023E54(a1, v2, 0, 0xFAu);
}

void sub_100116360(uint64_t a1, const char *a2, unsigned int a3, unsigned int a4, unsigned int a5, __int16 a6)
{
  if (!byte_100A01AA6)
  {
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v16 = 0;
    if (sub_10017E2D4(a1, (uint64_t *)&v16)) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = *v16;
    }
    sub_10025B778("Classic Device: handle 0x%x, Name %s, Addr %:, codec %d pid/vid", v12, a2, a1, a3, a5, a4);
    size_t v13 = strlen(a2);
    if (v13 >= 0x52) {
      uint64_t v14 = 82;
    }
    else {
      uint64_t v14 = v13;
    }
    char v17 = 0;
    __int16 v18 = v12;
    char v19 = v14;
    __memmove_chk();
    long long v15 = &v17 + v14;
    sub_100008A18((uint64_t)(&v17 + v14 + 4), a1, 6uLL);
    *((_WORD *)v15 + 5) = a3;
    *((_WORD *)v15 + 6) = a4;
    *((_WORD *)v15 + 7) = a5;
    *((_WORD *)v15 + 8) = a6;
    sub_100023E54(&v17, v14 + 18, 0, 0xFDu);
  }
}

void sub_1001164E4(_DWORD *a1, char *__s, _OWORD *a3)
{
  if (!byte_100A01AA6)
  {
    unsigned __int8 v6 = strlen(__s);
    long long v18 = 0u;
    long long v17 = 0u;
    long long v16 = 0u;
    long long v15 = 0u;
    long long v14 = 0u;
    long long v13 = 0u;
    uint64_t v7 = (unsigned __int16 *)sub_100197B34(a1);
    if (v7) {
      uint64_t v8 = *v7;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = (uint64_t)a1 + 1;
    sub_10025B778("LE Device: handle 0x%x, Name %s, Addr %:, pUUID %@", v8, __s, v9, a3, 16);
    char v10 = 1;
    __int16 v11 = v8;
    unsigned __int8 v12 = v6;
    if (v6 > 0x4AuLL) {
      unsigned __int8 v6 = 74;
    }
    __memmove_chk();
    sub_100008A18((uint64_t)(&v10 + v6 + 4), v9, 6uLL);
    *(_OWORD *)(&v10 + v6 + 10) = *a3;
    sub_100023E54(&v10, v6 + 26, 0, 0xFDu);
  }
}

void sub_100116640(unsigned char *a1, signed int a2)
{
  if (!byte_100A01AA6)
  {
    char v2 = -1;
    *a1 = 2;
    sub_100023E54(a1, a2, 0, 0xFDu);
    sub_100023E54(&v2, 1, 0, 0xFDu);
  }
}

void sub_100116698(unsigned char *a1, signed int a2)
{
  if (!byte_100A01AA6)
  {
    char v2 = -1;
    *a1 = 3;
    sub_100023E54(a1, a2, 0, 0xFDu);
    sub_100023E54(&v2, 1, 0, 0xFDu);
  }
}

void sub_1001166F0(unsigned char *a1, signed int a2)
{
  if (!byte_100A01AA6)
  {
    char v2 = -1;
    *a1 = 4;
    sub_100023E54(a1, a2, 0, 0xFDu);
    sub_100023E54(&v2, 1, 0, 0xFDu);
  }
}

void *sub_100116748(void *result)
{
  off_100A15228 = result;
  return result;
}

uint64_t sub_100116754(__int16 a1, __int16 a2, __int16 a3)
{
  unsigned int v3 = &byte_100A01BFB;
  if (byte_100A01BFB)
  {
    uint64_t v4 = 0;
    while (v4 != 9)
    {
      int v5 = v3[10];
      v3 += 10;
      ++v4;
      if (!v5) {
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
    uint64_t v4 = 0;
LABEL_7:
    uint64_t v6 = 1;
    *unsigned int v3 = 1;
    uint64_t v7 = (char *)&unk_100A01BF2 + 10 * v4;
    *(_WORD *)uint64_t v7 = a1;
    v7[2] = 27;
    *((_WORD *)v7 + 2) = a2;
    *((_WORD *)v7 + 3) = a3;
    char v7[8] = 1;
  }
  return v6;
}

uint64_t sub_1001167C4(__int16 a1, __int16 a2, __int16 a3)
{
  unsigned int v3 = &byte_100A01BFB;
  if (byte_100A01BFB)
  {
    uint64_t v4 = 0;
    while (v4 != 9)
    {
      int v5 = v3[10];
      v3 += 10;
      ++v4;
      if (!v5) {
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
    uint64_t v4 = 0;
LABEL_7:
    uint64_t v6 = 1;
    *unsigned int v3 = 1;
    uint64_t v7 = (char *)&unk_100A01BF2 + 10 * v4;
    *(_WORD *)uint64_t v7 = a1;
    v7[2] = 27;
    *((_WORD *)v7 + 2) = a2;
    *((_WORD *)v7 + 3) = a3;
    char v7[8] = 2;
  }
  return v6;
}

uint64_t sub_100116838(int a1)
{
  uint64_t v1 = 0;
  char v2 = 0;
  do
  {
    unsigned int v3 = (unsigned __int16 *)((char *)&unk_100A01BF2 + v1);
    if (*((unsigned char *)&unk_100A01BF2 + v1 + 9) && *v3 == a1)
    {
      v3[4] = 0;
      *(void *)unsigned int v3 = 0;
      char v2 = 1;
    }
    v1 += 10;
  }
  while (v1 != 100);
  return v2 & 1;
}

uint64_t sub_100116880()
{
  dword_100A01C52 = 0;
  xmmword_100A01C32 = 0u;
  unk_100A01C42 = 0u;
  xmmword_100A01C12 = 0u;
  unk_100A01C22 = 0u;
  unk_100A01BF2 = 0u;
  unk_100A01C02 = 0u;
  return 1;
}

void sub_1001168A4(id a1)
{
  qword_100A01A98 = (uint64_t)os_log_create("com.apple.bluetooth", "PacketLogger.HCI");
  uint64_t v1 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
  qword_100A01C58 = (uint64_t)dispatch_queue_create("HCI Tracing", v1);
}

void sub_1001168FC(id a1)
{
  kern_return_t v2;
  kern_return_t v3;
  uint64_t v4;
  const char *v5;
  NSObject *v6;
  uint32_t v7;
  uint64_t v8;
  uintptr_t v9;
  uintptr_t v10;
  void v11[4];
  mach_port_name_t v12;
  host_t v13;
  mach_port_name_t name;
  uint8_t buf[4];
  kern_return_t v16;

  name = 0;
  if (qword_100A01C80 != -1) {
    dispatch_once(&qword_100A01C80, &stru_10099B1A8);
  }
  host_t v1 = dword_100A01C78;
  if (!dword_100A01C78)
  {
    uint64_t v8 = qword_100A01A98;
    if (!os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)std::__fs::filesystem::path buf = 0;
    int v5 = "Failed to get host port for calendar changes";
    uint64_t v6 = v8;
    uint64_t v7 = 2;
    goto LABEL_9;
  }
  char v2 = mach_port_allocate(mach_task_self_, 1u, &name);
  if (v2)
  {
    unsigned int v3 = v2;
    uint64_t v4 = qword_100A01A98;
    if (!os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)std::__fs::filesystem::path buf = 67109120;
    long long v16 = v3;
    int v5 = "Failed to allocate mach port for calendar changes: error %d";
    uint64_t v6 = v4;
    uint64_t v7 = 8;
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, buf, v7);
    return;
  }
  uint64_t v9 = name;
  if (qword_100A01C60 != -1)
  {
    char v10 = name;
    dispatch_once(&qword_100A01C60, &stru_10099B108);
    uint64_t v9 = v10;
  }
  qword_100A01C70 = (uint64_t)dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_mach_recv, v9, 0, (dispatch_queue_t)qword_100A01C58);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 0x40000000;
  v11[2] = sub_100116AF4;
  _OWORD v11[3] = &unk_10099B168;
  unsigned __int8 v12 = name;
  long long v13 = v1;
  dispatch_source_set_event_handler((dispatch_source_t)qword_100A01C70, v11);
  dispatch_activate((dispatch_object_t)qword_100A01C70);
  sub_100116BEC(v1, name);
}

void sub_100116AF4(uint64_t a1)
{
  mach_msg_return_t v3;
  NSObject *v4;
  unsigned char v5[32];
  uint8_t buf[4];
  mach_msg_return_t v7;

  memset(v5, 0, sizeof(v5));
  int v2 = *(_DWORD *)(a1 + 32);
  *(_DWORD *)&v5[4] = 24;
  *(_DWORD *)&v5[12] = v2;
  unsigned int v3 = mach_msg_receive((mach_msg_header_t *)v5);
  uint64_t v4 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::__fs::filesystem::path buf = 67109120;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "resetTimeReference, %X", buf, 8u);
  }
  qword_100A01C90 = sub_100116DE0();
  byte_100A01BE0 = 1;
  sub_100116BEC(*(_DWORD *)(a1 + 36), *(_DWORD *)(a1 + 32));
  if (!v3) {
    mach_msg_destroy((mach_msg_header_t *)v5);
  }
}

void sub_100116BEC(host_t a1, mach_port_t notify_port)
{
  kern_return_t v4;
  NSObject *v5;
  _DWORD v6[2];

  uint64_t v4 = host_request_notification(a1, (byte_100A01C88 & 1) == 0, notify_port);
  if (v4 == 4 && (byte_100A01C88 & 1) == 0)
  {
    byte_100A01C88 = 1;
    uint64_t v4 = host_request_notification(a1, 0, notify_port);
  }
  if (v4)
  {
    int v5 = qword_100A01A98;
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 67109120;
      v6[1] = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to register for calendar changes: error %d", (uint8_t *)v6, 8u);
    }
  }
}

void sub_100116CE4(id a1)
{
  kern_return_t special_port;
  kern_return_t v3;
  NSObject *v4;
  mach_port_t port;
  uint8_t buf[4];
  kern_return_t v7;

  mach_port_t v1 = mach_host_self();
  port = 0;
  special_port = host_get_special_port(v1, -1, 1, &port);
  unsigned int v3 = special_port;
  if (special_port != 4)
  {
    if (special_port)
    {
      if (dword_100A01C78) {
        return;
      }
      goto LABEL_7;
    }
    mach_port_deallocate(mach_task_self_, v1);
    mach_port_t v1 = port;
  }
  dword_100A01C78 = v1;
  if (v1) {
    return;
  }
LABEL_7:
  uint64_t v4 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::__fs::filesystem::path buf = 67109120;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Failed to get mach host port: error %d", buf, 8u);
  }
}

unint64_t sub_100116DE0()
{
  int v4 = 0;
  __darwin_suseconds_t v3 = 0;
  uint64_t v2 = 0;
  sub_10010BB74(&v4, &v3);
  sub_100026C30((uint64_t)&v2);
  int v0 = v3 / 1000;
  if ((__int16)(v3 / 1000) < SWORD2(v2)) {
    LOWORD(v0) = v3 / 1000 + 1000;
  }
  return (v4 - v2 - ((__int16)(v3 / 1000) < SWORD2(v2))) | ((unint64_t)(unsigned __int16)(v0 - WORD2(v2)) << 32);
}

void sub_100116E6C(uint64_t a1)
{
  int v2 = dword_1009F9118;
  if (dword_1009F9118 == -1) {
    goto LABEL_42;
  }
  if (qword_100A01BD8 <= (unint64_t)dword_1009F9110)
  {
LABEL_41:
    write(v2, *(const void **)(a1 + 32), *(unsigned __int16 *)(a1 + 48));
    qword_100A01BD8 += *(unsigned __int16 *)(a1 + 48);
LABEL_42:
    sub_1001172C4(*(void *)(a1 + 40), *(_WORD *)(a1 + 50));
    goto LABEL_43;
  }
  __darwin_suseconds_t v3 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_INFO))
  {
    LOWORD(buf[0].__pn_.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Rotate log file", (uint8_t *)buf, 2u);
    int v2 = dword_1009F9118;
  }
  bzero(buf, 0x400uLL);
  close(v2);
  int v4 = CFDateFormatterCreate(kCFAllocatorDefault, 0, kCFDateFormatterShortStyle, kCFDateFormatterFullStyle);
  CFDateFormatterSetFormat(v4, @"yyyy-MM-dd_HH-mm-ss");
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  CFDateRef v6 = CFDateCreate(kCFAllocatorDefault, Current);
  CFStringRef StringWithDate = CFDateFormatterCreateStringWithDate(kCFAllocatorDefault, v4, v6);
  CFRelease(v6);
  CFRelease(v4);
  if (byte_100A01AA6) {
    CFStringRef v8 = CFStringCreateWithFormat(kCFAllocatorDefault, 0, @"%s/bluetoothd-hcilite-%@.pklg", byte_100A01AC8, StringWithDate);
  }
  else {
    CFStringRef v8 = CFStringCreateWithFormat(kCFAllocatorDefault, 0, @"%s/bluetoothd-hci-%@.pklg", byte_100A01AC8, StringWithDate);
  }
  CFStringRef v9 = v8;
  CFStringGetCString(v8, (char *)buf, 1024, 0x8000100u);
  rename((const std::__fs::filesystem::path *)qword_100A01AC0, buf, v10);
  if (v11)
  {
    unsigned __int8 v12 = qword_100A01A98;
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
      sub_1007489A0((uint64_t)buf, v12);
    }
  }
  CFRelease(v9);
  CFRelease(StringWithDate);
  memset(&v25, 0, sizeof(v25));
  chdir(byte_100A01AC8);
  long long v13 = opendir(byte_100A01AC8);
  if (v13)
  {
    long long v14 = v13;
    memset(v26, 0, 255);
    long long v15 = readdir(v13);
    if (v15)
    {
      __darwin_time_t tv_sec = 0;
      __darwin_ino64_t st_ino = 0;
      int v18 = 0;
      while (1)
      {
        d_name = v15->d_name;
        if (stat(v15->d_name, &v25) < 0)
        {
          long long v20 = qword_100A01A98;
          if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
            sub_100748960(&v23, v24, v20);
          }
          goto LABEL_24;
        }
        if (!strncmp(d_name, "bluetoothd-hci", 0xEuLL)) {
          break;
        }
LABEL_24:
        long long v15 = readdir(v14);
        if (!v15) {
          goto LABEL_29;
        }
      }
      if (st_ino)
      {
        if (tv_sec <= v25.st_birthtimespec.tv_sec)
        {
LABEL_23:
          ++v18;
          goto LABEL_24;
        }
        __darwin_ino64_t st_ino = v25.st_ino;
        __darwin_time_t tv_sec = v25.st_birthtimespec.tv_sec;
      }
      else
      {
        __darwin_ino64_t st_ino = v25.st_ino;
        __darwin_time_t tv_sec = v25.st_birthtimespec.tv_sec;
      }
      __strlcpy_chk();
      goto LABEL_23;
    }
    int v18 = 0;
LABEL_29:
    if (v18 > dword_1009F9114 && dword_1009F9114)
    {
      snprintf((char *)buf, 0x400uLL, "%s/%s", byte_100A01AC8, (const char *)v26);
      remove(buf, v21);
    }
    closedir(v14);
  }
  else if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR))
  {
    sub_1007485E0();
  }
  int v22 = open((const char *)qword_100A01AC0, 521, 420);
  dword_1009F9118 = v22;
  if (v22 != -1)
  {
    qword_100A01BD8 = 0;
    if (off_100A15228)
    {
      off_100A15228();
      int v2 = dword_1009F9118;
    }
    else
    {
      int v2 = v22;
    }
    if (word_100A01BC8)
    {
      write(v2, (const void *)qword_100A01BD0, (unsigned __int16)word_100A01BC8);
      qword_100A01BD8 += (unsigned __int16)word_100A01BC8;
      int v2 = dword_1009F9118;
    }
    goto LABEL_41;
  }
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
    sub_1007488E0();
  }
LABEL_43:
  free(*(void **)(a1 + 32));
  free(*(void **)(a1 + 40));
}

void sub_1001172C4(uint64_t a1, unsigned __int16 a2)
{
  if (qword_100A01C98)
  {
    if (CFSetGetCount((CFSetRef)qword_100A01C98) >= 1 && &lockdown_copy_checkin_info != 0)
    {
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      CFSetApplyFunction((CFSetRef)qword_100A01C98, (CFSetApplierFunction)sub_100117388, &v5);
      if (BYTE2(v6)) {
        sub_100114D4C();
      }
    }
  }
  if (qword_100A01CA0)
  {
    if (CFSetGetCount((CFSetRef)qword_100A01CA0) >= 1)
    {
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      CFSetApplyFunction((CFSetRef)qword_100A01CA0, (CFSetApplierFunction)sub_1001173D8, &v5);
    }
  }
}

uint64_t sub_100117388(uint64_t a1, uint64_t a2)
{
  lockdown_send();
  uint64_t result = lockdown_send();
  if (result == -1) {
    *(unsigned char *)(a2 + 10) = 1;
  }
  return result;
}

void sub_1001173D8(_xpc_connection_s *a1, uint64_t a2)
{
  xpc_object_t v4 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_data(v4, "packet", *(const void **)a2, *(unsigned __int16 *)(a2 + 8));
  xpc_connection_send_message(a1, v4);

  xpc_release(v4);
}

void sub_10011744C(id a1, _lockdown_connection *a2, __CFDictionary *a3)
{
}

void sub_100117458(void *a1, char a2)
{
  xpc_object_t v4 = qword_100A01A98;
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::__fs::filesystem::path buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Starting Live Logging", buf, 2u);
  }
  if (byte_100A01AA2)
  {
    if (a2)
    {
      CFSetRef Mutable = (const __CFSet *)qword_100A01CA0;
      if (!qword_100A01CA0)
      {
        CFSetRef Mutable = CFSetCreateMutable(0, 0, 0);
        qword_100A01CA0 = (uint64_t)Mutable;
      }
      CFIndex Count = CFSetGetCount(Mutable);
      CFSetSetValue((CFMutableSetRef)qword_100A01CA0, a1);
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 0x40000000;
      handler[2] = sub_1001177F0;
      handler[3] = &unk_10099B268;
      handler[4] = a1;
      xpc_connection_set_event_handler((xpc_connection_t)a1, handler);
      if (qword_100A01C60 != -1) {
        dispatch_once(&qword_100A01C60, &stru_10099B108);
      }
      xpc_connection_set_target_queue((xpc_connection_t)a1, (dispatch_queue_t)qword_100A01C58);
      xpc_connection_resume((xpc_connection_t)a1);
      if (Count) {
        goto LABEL_20;
      }
    }
    else
    {
      CFSetRef v11 = (const __CFSet *)qword_100A01C98;
      if (!qword_100A01C98)
      {
        CFSetRef v11 = CFSetCreateMutable(0, 0, 0);
        qword_100A01C98 = (uint64_t)v11;
      }
      CFIndex v12 = CFSetGetCount(v11);
      CFSetSetValue((CFMutableSetRef)qword_100A01C98, a1);
      if (v12) {
        goto LABEL_20;
      }
    }
    if (off_100A01AB0) {
      uint64_t v7 = off_100A01AB0(1);
    }
LABEL_20:
    if (off_100A15228) {
      off_100A15228(v7);
    }
    if (word_100A01BC8) {
      sub_1001172C4(qword_100A01BD0, word_100A01BC8);
    }
    return;
  }
  if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
    sub_100748A5C();
  }
  CFStringRef v8 = malloc_type_malloc(0x27uLL, 0x4699532uLL);
  if (v8)
  {
    CFStringRef v9 = v8;
    unsigned __int16 v10 = sub_100115868(v8, 0x27u, "Bluetooth Profile Required", 26, 0xFCu);
    sub_1001172C4((uint64_t)v9, v10);
    free(v9);
  }
}

void sub_100117680(id a1, void *a2)
{
  xpc_type_t type = xpc_get_type(a2);
  if (type == (xpc_type_t)&_xpc_type_connection)
  {
    if (byte_100A01AA8)
    {
      xpc_object_t v4 = qword_100A01A98;
      if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::__fs::filesystem::path buf = 0;
        uint64_t v5 = buf;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PacketLogger skipping authentication", v5, 2u);
      }
    }
    else
    {
      *(_OWORD *)std::__fs::filesystem::path buf = 0u;
      long long v11 = 0u;
      xpc_connection_get_audit_token();
      uint64_t v6 = (void *)xpc_copy_entitlement_for_token();
      if (!v6) {
        return;
      }
      uint64_t v7 = v6;
      BOOL v8 = xpc_dictionary_get_BOOL(v6, "com.apple.bluetooth.internal");
      xpc_release(v7);
      if (!v8) {
        return;
      }
      xpc_object_t v4 = qword_100A01A98;
      if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v9 = 0;
        uint64_t v5 = (uint8_t *)&v9;
        goto LABEL_9;
      }
    }
    sub_100117458(a2, 1);
    return;
  }
  if (type == (xpc_type_t)&_xpc_type_error)
  {
    xpc_dictionary_get_string(a2, _xpc_error_key_description);
    if (os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
      sub_100748A90();
    }
    sub_100114D4C();
  }
}

void sub_1001177F0(uint64_t a1, xpc_object_t object)
{
  xpc_type_t type = xpc_get_type(object);
  if (type == (xpc_type_t)&_xpc_type_error)
  {
    if (qword_100A01CA0) {
      CFSetRemoveValue((CFMutableSetRef)qword_100A01CA0, *(const void **)(a1 + 32));
    }
    xpc_dictionary_get_string(object, _xpc_error_key_description);
    if (object != &_xpc_error_connection_invalid && os_log_type_enabled((os_log_t)qword_100A01A98, OS_LOG_TYPE_ERROR)) {
      sub_100748B04();
    }
  }
  else if (type == (xpc_type_t)&_xpc_type_dictionary)
  {
    if (xpc_dictionary_expects_reply())
    {
      xpc_object_t reply = xpc_dictionary_create_reply(object);
      if (reply)
      {
        uint64_t v6 = reply;
        xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
        xpc_release(v6);
      }
    }
  }
}

uint64_t sub_1001178F0(pthread_mutex_t *a1)
{
  v3.__sig = 0;
  *(void *)v3.__opaque = 0;
  if (pthread_mutexattr_init(&v3))
  {
    fprintf(__stderrp, "(0x%p) Failed to init mutex attr - %d!");
  }
  else if (pthread_mutexattr_settype(&v3, 2))
  {
    fprintf(__stderrp, "(0x%p) Failed to set mutex attr type - %d!");
  }
  else
  {
    if (!pthread_mutex_init(a1, &v3)) {
      return 1;
    }
    fprintf(__stderrp, "(0x%p) Failed to init mutex - %d!");
  }
  return 0;
}

BOOL sub_1001179E0(pthread_mutex_t *a1)
{
  int v2 = pthread_mutex_destroy(a1);
  if (v2) {
    fprintf(__stderrp, "(%p) Failed to destroy mutex - %d!", a1, v2);
  }
  return v2 == 0;
}

BOOL sub_100117A38(pthread_t *a1, void *(__cdecl *a2)(void *), void *a3)
{
  memset(&v7, 0, sizeof(v7));
  pthread_attr_init(&v7);
  pthread_attr_setdetachstate(&v7, 2);
  return pthread_create(a1, &v7, a2, a3) == 0;
}

BOOL sub_100117AD8(_opaque_pthread_t *a1, int a2)
{
  v3.sched_priority = a2;
  *(_DWORD *)v3.__opaque = 0;
  return pthread_setschedparam(a1, 2, &v3) == 0;
}

BOOL sub_100117B0C(_opaque_pthread_t *a1, integer_t a2, integer_t a3, int a4, int a5)
{
  thread_inspect_t v9 = pthread_mach_thread_np(a1);
  BOOLean_t get_default = 1;
  mach_msg_type_number_t policy_infoCnt = 4;
  *(void *)policy_mach_timebase_info info = 0;
  uint64_t v12 = 0;
  if (thread_policy_get(v9, 2u, policy_info, &policy_infoCnt, &get_default)) {
    return 0;
  }
  if (a2)
  {
    policy_info[0] = a2;
    policy_info[1] = a3;
    LODWORD(v12) = a4;
  }
  HIDWORD(v12) = a5;
  return thread_policy_set(v9, 2u, policy_info, 4u) == 0;
}

BOOL sub_100117BB4(const char *a1)
{
  return pthread_setname_np(a1) == 0;
}

BOOL sub_100117BD4(pthread_cond_t *a1)
{
  return pthread_cond_init(a1, 0) == 0;
}

BOOL sub_100117BFC(pthread_cond_t *a1)
{
  return pthread_cond_destroy(a1) == 0;
}

uint64_t sub_100117C1C(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65437, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        thread_inspect_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2293, v9);
      }
    }
    thread_inspect_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

void sub_100117CF4(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1
    && sub_100058654()
    && (sub_100056E24((uint64_t)"status %d, hlCb 0x%x", v4, v5, v6, v7, v8, v9, v10, a1),
        uint64_t v11 = sub_100050B4C(0x54u),
        os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)))
  {
    sub_100745764();
    if (!a2) {
      return;
    }
  }
  else if (!a2)
  {
    return;
  }
  a2(a1);
}

void sub_100117D80(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 0;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }
  if (*(unsigned char *)(a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_14;
  }
  uint64_t v14 = *(unsigned __int16 *)(a3 + 12);
  if (*(unsigned __int16 *)(a3 + 10) - (int)v14 <= 3)
  {
LABEL_14:
    long long v15 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_16;
  }
  if (*(unsigned char *)(a3 + 14) != 1)
  {
    long long v15 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2815, v15);
  }
  uint64_t v13 = *(unsigned int *)(*(void *)a3 + v14);
  *(_WORD *)(a3 + 12) = v14 + 4;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

void sub_100117E90(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!a1)
  {
    if (*((unsigned char *)a3 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 - (int)v16 > 1)
      {
        if (*((unsigned char *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          int v18 = (unsigned __int8 *)(*a3 + v16);
          int v19 = *v18;
          int v20 = v18[1];
          *((_WORD *)a3 + 6) = v16 + 2;
          if (v15 - (unsigned __int16)(v16 + 2) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2846, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v13 = v19 | (v20 << 8);
          uint64_t v14 = *(unsigned int *)(v17 + (unsigned __int16)(v16 + 2));
          *((_WORD *)a3 + 6) = v16 + 6;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }
        long long v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2845, v21);
      }
    }
    long long v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_17;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

uint64_t sub_100117FE8(unint64_t a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    uint64_t v5 = sub_1002284B8(a1);
    int v12 = v5;
    char v14 = BYTE6(v5);
    __int16 v13 = WORD2(v5);
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v6 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(unsigned char *)(v15 + v6) = v5;
          if (HIBYTE(v16))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v16) - WORD2(v16) > 5)
          {
            if (BYTE6(v16) == 2)
            {
              sub_100008A18(v15 + WORD2(v16), (uint64_t)&v12 + 1, 6uLL);
              WORD2(v16) += 6;
              return sub_10001BCBC(65485, v15, BYTE4(v16), a2, (uint64_t)sub_100117CF4, v7, v8, v9);
            }
            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4380, v11);
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4379, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10011816C(unint64_t a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    uint64_t v5 = sub_1002284B8(a1);
    int v12 = v5;
    char v14 = BYTE6(v5);
    __int16 v13 = WORD2(v5);
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v6 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(unsigned char *)(v15 + v6) = v5;
          if (HIBYTE(v16))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v16) - WORD2(v16) > 5)
          {
            if (BYTE6(v16) == 2)
            {
              sub_100008A18(v15 + WORD2(v16), (uint64_t)&v12 + 1, 6uLL);
              WORD2(v16) += 6;
              return sub_10001BCBC(65486, v15, BYTE4(v16), a2, (uint64_t)sub_100117CF4, v7, v8, v9);
            }
            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4395, v11);
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4394, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001182F0(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65484, v6, BYTE4(v7), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_10011834C(char a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t result = sub_100059D70(&v26);
  if (!result)
  {
    if (HIBYTE(v27))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v16 = WORD2(v27);
      if (WORD1(v27) > WORD2(v27))
      {
        if (BYTE6(v27) == 2)
        {
          ++WORD2(v27);
          *(unsigned char *)(v26 + v16) = a1;
          if (HIBYTE(v27))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v17 = WORD2(v27);
            if (WORD1(v27) > WORD2(v27))
            {
              if (BYTE6(v27) == 2)
              {
                ++WORD2(v27);
                *(unsigned char *)(v26 + v17) = a2;
                if (HIBYTE(v27))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v18 = WORD2(v27);
                  if (WORD1(v27) > WORD2(v27))
                  {
                    if (BYTE6(v27) == 2)
                    {
                      ++WORD2(v27);
                      *(unsigned char *)(v26 + v18) = a3;
                      if (HIBYTE(v27))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v19 = WORD2(v27);
                        if (WORD1(v27) > WORD2(v27))
                        {
                          if (BYTE6(v27) == 2)
                          {
                            ++WORD2(v27);
                            *(unsigned char *)(v26 + v19) = a4;
                            if (HIBYTE(v27))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else
                            {
                              uint64_t v20 = WORD2(v27);
                              if (WORD1(v27) > WORD2(v27))
                              {
                                if (BYTE6(v27) == 2)
                                {
                                  ++WORD2(v27);
                                  *(unsigned char *)(v26 + v20) = a5;
                                  return sub_10001BCBC(64978, v26, BYTE4(v27), a6, (uint64_t)sub_100117CF4, v13, v14, v15);
                                }
                                stat v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4424, v25);
                              }
                            }
                            stat v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_38;
                          }
                          long long v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4423, v24);
                        }
                      }
                      long long v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_34;
                    }
                    uint8_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4422, v23);
                  }
                }
                uint8_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_30;
              }
              int v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4421, v22);
            }
          }
          int v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_26;
        }
        long long v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4420, v21);
      }
    }
    long long v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_100118624(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(64810, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4437, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001186FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v9 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v9) = a1;
          return sub_10001BCBC(64810, v11, BYTE4(v12), a3, (uint64_t)sub_1001187D4, v6, v7, v8);
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4450, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

void sub_1001187D4(uint64_t a1, void (*a2)(uint64_t, uint64_t, void), uint64_t a3)
{
  if (*(unsigned char *)(a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_4;
  }
  if (*(unsigned __int16 *)(a3 + 10) - *(unsigned __int16 *)(a3 + 12) <= 1)
  {
LABEL_4:
    if (sub_100058654())
    {
      if (*(unsigned char *)(a3 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = *(unsigned __int16 *)(a3 + 10) - *(unsigned __int16 *)(a3 + 12);
      }
      sub_100056E24((uint64_t)"Invalid data size %d", v4, v5, v6, v7, v8, v9, v10, v11);
      long long v21 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (!a1 || !sub_100058654()) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(a3 + 15)) {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
  }
  sub_100056E24((uint64_t)"hlCb 0x%x, data %@", v14, v15, v16, v17, v18, v19, v20, (uint64_t)a2);
  int v22 = sub_100050B4C(0x54u);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    sub_100745764();
    if (!a2) {
      return;
    }
  }
  else
  {
LABEL_15:
    if (!a2) {
      return;
    }
  }
  uint64_t v23 = *(unsigned __int16 *)(a3 + 12);
  uint64_t v24 = *(void *)a3 + v23;
  if (*(unsigned char *)(a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned __int8 v25 = 0;
  }
  else
  {
    unsigned __int8 v25 = *(unsigned char *)(a3 + 10) - v23;
  }
  a2(a1, v24, v25);
}

void (**sub_100118998(void (**result)(uint64_t *a1, uint64_t a2), const void *a2))(uint64_t *a1, uint64_t a2)
{
  *uint64_t result = sub_100118AC4;
  if (a2) {
    return (void (**)(uint64_t *, uint64_t))memcpy(&off_100A01CB0, a2, 0x1C8uLL);
  }
  return result;
}

void *sub_1001189C0(void *a1)
{
  memcpy(a1, off_10099B288, 0x8F0uLL);

  return sub_10019AE6C(sub_100118A04);
}

BOOL sub_100118A04(uint64_t a1, __int16 a2)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"status %!, opcode 0x%x, subOpcode %x, myopcode %x", v4, v5, v6, v7, v8, v9, v10, a1);
      uint64_t v11 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return !a1 && (a2 & 0x3FF) == 552;
}

void *sub_100118AA8(void *__src)
{
  if (__src) {
    return memcpy(&unk_100A01E78, __src, 0x1C8uLL);
  }
  return __src;
}

void sub_100118AC4(uint64_t *a1, uint64_t a2)
{
  if (*((unsigned char *)a1 + 14) != 1)
  {
    uint64_t v182 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    goto LABEL_336;
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_335;
  }
  uint64_t v4 = (unsigned __int16 *)a1 + 6;
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  uint64_t v5 = *((unsigned __int16 *)a1 + 5);
  if ((int)v5 - (int)v3 <= 1)
  {
LABEL_335:
    uint64_t v182 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
LABEL_336:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 243, v182);
  }
  uint64_t v6 = *a1;
  uint64_t v7 = *(unsigned __int16 *)(*a1 + v3);
  unsigned __int16 v8 = v3 + 2;
  *((_WORD *)a1 + 6) = v3 + 2;
  if ((int)v7 > 65280)
  {
    if ((int)v7 <= 65421)
    {
      switch((int)v7)
      {
        case 65281:
        case 65288:
          goto LABEL_331;
        case 65286:
          uint64_t v9 = (void (*)(long long *))qword_100A01DA0;
          if (!qword_100A01DA0) {
            goto LABEL_331;
          }
          uint64_t v10 = (long long *)(v6 + v8);
          *uint64_t v4 = v3 + 182;
          if (v5 != (unsigned __int16)(v3 + 182))
          {
            sub_10025B8C0();
            uint64_t v9 = (void (*)(long long *))qword_100A01DA0;
          }
          goto LABEL_156;
        case 65287:
          uint64_t v9 = (void (*)(long long *))qword_100A01DA8;
          if (!qword_100A01DA8) {
            goto LABEL_331;
          }
          uint64_t v10 = (long long *)(v6 + v8);
          *uint64_t v4 = v3 + 112;
          if (v5 != (unsigned __int16)(v3 + 112))
          {
            sub_10025B8C0();
            uint64_t v9 = (void (*)(long long *))qword_100A01DA8;
          }
          goto LABEL_156;
        case 65289:
          uint64_t v9 = (void (*)(long long *))off_100A01CE8;
          if (!off_100A01CE8) {
            goto LABEL_331;
          }
          unsigned __int16 v82 = v3 + 253;
          *uint64_t v4 = v82;
          if (v5 != v82) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 518, "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65290:
          uint64_t v9 = (void (*)(long long *))qword_100A01CF0;
          if (!qword_100A01CF0) {
            goto LABEL_331;
          }
          unsigned __int16 v83 = v3 + 222;
          *uint64_t v4 = v83;
          if (v5 != v83) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 532, "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65297:
          uint64_t v9 = (void (*)(long long *))qword_100A01CF8;
          if (!qword_100A01CF8) {
            goto LABEL_331;
          }
          unsigned __int16 v84 = v3 + 66;
          *uint64_t v4 = v84;
          if (v5 != v84) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 546, "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65298:
          uint64_t v9 = (void (*)(long long *))qword_100A01D00;
          if (!qword_100A01D00) {
            goto LABEL_331;
          }
          unsigned __int16 v85 = v3 + 226;
          *uint64_t v4 = v85;
          if (v5 != v85) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 560, "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65299:
          uint64_t v9 = (void (*)(long long *))qword_100A01D08;
          if (!qword_100A01D08) {
            goto LABEL_331;
          }
          unsigned __int16 v86 = v3 + 220;
          *uint64_t v4 = v86;
          if (v5 != v86) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 574, "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
          goto LABEL_149;
        case 65300:
          uint64_t v9 = (void (*)(long long *))qword_100A01D10;
          if (!qword_100A01D10) {
            goto LABEL_331;
          }
          unsigned __int16 v87 = v3 + 242;
          *uint64_t v4 = v87;
          if (v5 != v87) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 588, "ByteStream_NumReadBytesAvail(*pBs) == 0");
          }
LABEL_149:
          uint64_t v88 = (long long *)(v6 + v8);
          goto LABEL_284;
        case 65301:
          uint64_t v9 = (void (*)(long long *))qword_100A01DE8;
          if (!qword_100A01DE8) {
            goto LABEL_331;
          }
          uint64_t v10 = (long long *)(v6 + v8);
          *uint64_t v4 = v3 + 35;
          if (v5 != (unsigned __int16)(v3 + 35))
          {
            sub_10025B8C0();
            uint64_t v9 = (void (*)(long long *))qword_100A01DE8;
          }
          goto LABEL_156;
        case 65302:
          uint64_t v9 = (void (*)(long long *))qword_100A01DF0;
          if (!qword_100A01DF0) {
            goto LABEL_331;
          }
          uint64_t v10 = (long long *)(v6 + v8);
          *uint64_t v4 = v3 + 32;
          if (v5 != (unsigned __int16)(v3 + 32))
          {
            sub_10025B8C0();
            uint64_t v9 = (void (*)(long long *))qword_100A01DF0;
          }
LABEL_156:
          uint64_t v88 = v10;
          break;
        default:
          goto LABEL_328;
      }
      goto LABEL_284;
    }
    uint64_t v13 = a2;
    switch((int)v7)
    {
      case 65422:
        uint64_t v14 = (void (*)(uint64_t, uint64_t))qword_100A01D30;
        if (!qword_100A01D30) {
          goto LABEL_331;
        }
        unint64_t v15 = v5 - v8;
        if (v15 > 0xCD) {
          goto LABEL_294;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"BT_VSE_ACI_PHY_STATISTIC - Invalid data size %zu", v16, v17, v18, v19, v20, v21, v22, v15);
          uint64_t v23 = sub_100050B4C(0x54u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            goto LABEL_321;
          }
        }
        goto LABEL_331;
      case 65423:
        uint64_t v14 = (void (*)(uint64_t, uint64_t))off_100A01DB0;
        if (!off_100A01DB0) {
          goto LABEL_331;
        }
        goto LABEL_168;
      case 65424:
      case 65425:
      case 65427:
      case 65429:
      case 65431:
        goto LABEL_328;
      case 65426:
        if ((int)(v5 - v8) <= 1)
        {
          uint64_t v183 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
        }
        else
        {
          if (*((unsigned char *)a1 + 14) == 1)
          {
            int v40 = (unsigned __int8 *)(v6 + v8);
            int v41 = *v40;
            int v42 = v40[1];
            *uint64_t v4 = v3 + 4;
            if (v5 <= (unsigned __int16)(v3 + 4)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 279, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
            }
            *((_WORD *)a1 + 6) = v3 + 5;
            int v43 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 4));
            uint64_t v44 = sub_100197864(v41 | (v42 << 8));
            if (*((unsigned char *)a1 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              int v45 = *((unsigned __int16 *)a1 + 5);
              uint64_t v46 = *((unsigned __int16 *)a1 + 6);
              if (v45 - (int)v46 > 3)
              {
                if (*((unsigned char *)a1 + 14) == 1)
                {
                  uint64_t v47 = *a1;
                  uint64_t v48 = *(unsigned int *)(*a1 + v46);
                  *((_WORD *)a1 + 6) = v46 + 4;
                  if (v45 - (unsigned __int16)(v46 + 4) <= 3) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 282, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  uint64_t v49 = *(unsigned int *)(v47 + (unsigned __int16)(v46 + 4));
                  *uint64_t v4 = v46 + 8;
                  if (v45 - (unsigned __int16)(v46 + 8) <= 1) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 283, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
                  }
                  unsigned __int16 v50 = *(_WORD *)(v47 + (unsigned __int16)(v46 + 8));
                  *uint64_t v4 = v46 + 10;
                  if (v45 - (unsigned __int16)(v46 + 10) <= 1) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 284, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
                  }
                  __int16 v51 = v44;
                  unsigned __int8 v52 = *(unsigned char *)(v47 + (unsigned __int16)(v46 + 10));
                  *uint64_t v4 = v46 + 12;
                  if ((v52 & (v43 == 10)) != 0) {
                    unsigned __int8 v53 = -118;
                  }
                  else {
                    unsigned __int8 v53 = v43;
                  }
                  unsigned int v199 = 0;
                  LODWORD(v200) = 0;
                  sub_10010BB74(&v200, (__darwin_suseconds_t *)&v199);
                  BOOL v55 = v53 != 1 && v53 != 0 && v51 == 0;
                  if (!v55 && v53 != 10)
                  {
                    if (off_100A01E08) {
                      off_100A01E08(v51, v53, (v49 << 32) | v48, 0, v50, v200, v199);
                    }
                    goto LABEL_331;
                  }
                  if (sub_100058654())
                  {
                    sub_100056E24((uint64_t)"updateBTControllerClockCB size is zero", v117, v118, v119, v120, v121, v122, v123, v198);
                    uint64_t v124 = sub_100050B4C(0x54u);
                    if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
                      sub_100744F6C();
                    }
                  }
LABEL_328:
                  if (sub_100058654())
                  {
                    sub_100056E24((uint64_t)"Unhandled Vendor Specific Event: 0x%x", v174, v175, v176, v177, v178, v179, v180, v7);
                    v181 = sub_100050B4C(0x54u);
                    if (os_log_type_enabled(v181, OS_LOG_TYPE_ERROR)) {
                      sub_100744F6C();
                    }
                  }
                  goto LABEL_331;
                }
                uint64_t v184 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_346:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 281, v184);
              }
            }
            uint64_t v184 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
            goto LABEL_346;
          }
          uint64_t v183 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        }
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 278, v183);
      case 65428:
        if (!off_100A01DD8) {
          goto LABEL_331;
        }
        unint64_t v56 = v5 - v8;
        if (v56 > 3)
        {
          if (v56 < 0x43)
          {
            uint64_t v164 = v6 + v8;
            if (v56 - 4 >= *(unsigned __int8 *)(v164 + 1))
            {
              off_100A01DD8(v164);
              goto LABEL_331;
            }
            if (!sub_100058654()) {
              goto LABEL_331;
            }
            sub_100056E24((uint64_t)"HCI_VSE_ACI_BTC2AOP_MESSAGE - Invalid SPMI payload length %zd exceed expected %zd", v165, v166, v167, v168, v169, v170, v171, *(unsigned __int8 *)(v164 + 1));
            uint64_t v172 = sub_100050B4C(0x54u);
            if (!os_log_type_enabled(v172, OS_LOG_TYPE_ERROR)) {
              goto LABEL_331;
            }
          }
          else
          {
            if (!sub_100058654()) {
              goto LABEL_331;
            }
            sub_100056E24((uint64_t)"HCI_VSE_ACI_BTC2AOP_MESSAGE - Invalid SPMI data size %zd exceeds %zd", v141, v142, v143, v144, v145, v146, v147, v56);
            uint64_t v148 = sub_100050B4C(0x54u);
            if (!os_log_type_enabled(v148, OS_LOG_TYPE_ERROR)) {
              goto LABEL_331;
            }
          }
        }
        else
        {
          if (!sub_100058654()) {
            goto LABEL_331;
          }
          sub_100056E24((uint64_t)"HCI_VSE_ACI_BTC2AOP_MESSAGE - Invalid SPMI data size %zd less then %zd", v57, v58, v59, v60, v61, v62, v63, v56);
          uint64_t v64 = sub_100050B4C(0x54u);
          if (!os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
            goto LABEL_331;
          }
        }
        goto LABEL_321;
      case 65430:
        long long v200 = 0uLL;
        if ((int)(v5 - v8) <= 1)
        {
          uint64_t v185 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
        }
        else
        {
          if (*((unsigned char *)a1 + 14) == 1)
          {
            int v65 = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 2));
            *((_WORD *)a1 + 6) = v3 + 4;
            uint64_t v66 = sub_100197864(v65);
            if (*((unsigned char *)a1 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              unsigned int v67 = *((unsigned __int16 *)a1 + 5);
              int v68 = *((unsigned __int16 *)a1 + 6);
              if ((int)(v67 - v68) > 3)
              {
                if (*((unsigned char *)a1 + 14) == 1)
                {
                  uint64_t v69 = *a1;
                  *((_WORD *)a1 + 6) = v68 + 4;
                  if ((int)(v67 - (unsigned __int16)(v68 + 4)) <= 3) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 331, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  *uint64_t v4 = v68 + 8;
                  if ((int)(v67 - (unsigned __int16)(v68 + 8)) <= 3) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 332, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  *uint64_t v4 = v68 + 12;
                  if ((int)(v67 - (unsigned __int16)(v68 + 12)) <= 3) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 333, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
                  }
                  uint64_t v70 = 0;
                  unsigned __int16 v71 = v68 + 16;
                  *uint64_t v4 = v68 + 16;
                  BOOL v72 = v67 >= (unsigned __int16)(v68 + 16);
                  unsigned int v73 = v67 - (unsigned __int16)(v68 + 16);
                  if (v72) {
                    uint64_t v74 = v73;
                  }
                  else {
                    uint64_t v74 = 0;
                  }
                  do
                  {
                    if (v74 == v70) {
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 336, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                    }
                    unsigned __int16 v75 = v71;
                    uint64_t v76 = v71++;
                    *uint64_t v4 = v71;
                    *((unsigned char *)&v201[-1] + v70++) = *(unsigned char *)(v69 + v76);
                  }
                  while (v70 != 16);
                  if (v67 <= v71) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 338, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                  }
                  *uint64_t v4 = v75 + 2;
                  if (v67 <= (unsigned __int16)(v75 + 2)) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 339, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                  }
                  *uint64_t v4 = v75 + 3;
                  if (v67 <= (unsigned __int16)(v75 + 3)) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 340, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                  }
                  *uint64_t v4 = v75 + 4;
                  if ((int)(v67 - (unsigned __int16)(v75 + 4)) <= 1)
                  {
                    *((unsigned char *)a1 + 15) = 1;
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    *uint64_t v4 = v75 + 6;
                    if (v67 > (unsigned __int16)(v75 + 6))
                    {
                      *uint64_t v4 = v75 + 7;
                      if (!v66)
                      {
                        if (sub_100058654())
                        {
                          sub_100056E24((uint64_t)"updateBTControllerClockCB size is zero", v133, v134, v135, v136, v137, v138, v139, v198);
                          uint64_t v140 = sub_100050B4C(0x54u);
                          if (os_log_type_enabled(v140, OS_LOG_TYPE_ERROR)) {
                            sub_100744F6C();
                          }
                        }
                        goto LABEL_328;
                      }
                      if (off_100A01E00) {
                        off_100A01E00(v66);
                      }
                      goto LABEL_331;
                    }
                  }
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 342, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                }
                uint64_t v186 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_356:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 330, v186);
              }
            }
            uint64_t v186 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
            goto LABEL_356;
          }
          uint64_t v185 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        }
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 328, v185);
      case 65432:
        uint64_t v77 = (unsigned __int16)(v5 - v8);
        if (v77 >= 8)
        {
          if (!off_100A01E28) {
            goto LABEL_331;
          }
          WORD2(v200) = 0;
          LODWORD(v200) = 0;
          if ((int)(v5 - v8) <= 5)
          {
            v196 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
          }
          else
          {
            if (*((unsigned char *)a1 + 14) == 1)
            {
              sub_100008A18((uint64_t)&v200, v6 + v8, 6uLL);
              __int16 v78 = *((_WORD *)a1 + 6);
              *((_WORD *)a1 + 6) = v78 + 6;
              if (*((unsigned char *)a1 + 15))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else
              {
                unsigned int v79 = *((unsigned __int16 *)a1 + 5);
                if (v79 > (unsigned __int16)(v78 + 6))
                {
                  if (*((unsigned char *)a1 + 14) == 1)
                  {
                    uint64_t v80 = *a1;
                    *((_WORD *)a1 + 6) = v78 + 7;
                    if (v79 <= (unsigned __int16)(v78 + 7)) {
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 368, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
                    }
                    uint64_t v81 = *(unsigned __int8 *)(v80 + (unsigned __int16)(v78 + 6));
                    *uint64_t v4 = v78 + 8;
                    off_100A01E28(v200 | ((unint64_t)WORD2(v200) << 32), v81, *(unsigned __int8 *)(v80 + (unsigned __int16)(v78 + 7)), v13);
                    goto LABEL_331;
                  }
                  v197 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_496:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 367, v197);
                }
              }
              v197 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
              goto LABEL_496;
            }
            v196 = "(*pBs).__RWFlag == BYTESTREAM_READ";
          }
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 366, v196);
        }
        if (!sub_100058654()) {
          goto LABEL_328;
        }
        sub_100056E24((uint64_t)"Sensor state report event returned invalid length %d of data", v109, v110, v111, v112, v113, v114, v115, v77);
        unsigned int v116 = sub_100050B4C(0x54u);
        if (!os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
          goto LABEL_328;
        }
        break;
      default:
        if (v7 != 65441)
        {
          if (v7 != 65445) {
            goto LABEL_328;
          }
          uint64_t v14 = (void (*)(uint64_t, uint64_t))qword_100A01E38;
          if (qword_100A01E38)
          {
            unint64_t v31 = v5 - v8;
            if (v31 > 0x26)
            {
LABEL_294:
              uint64_t v96 = v6 + v8;
              goto LABEL_295;
            }
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"HID_LATENCY_STATISTICS - Invalid data size %lu", v32, v33, v34, v35, v36, v37, v38, v31);
              __int16 v39 = sub_100050B4C(0x54u);
              if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
LABEL_321:
              }
                sub_100744F6C();
            }
          }
          goto LABEL_331;
        }
        if (!off_100A01D18) {
          goto LABEL_328;
        }
        signed int v104 = (v5 - v8);
        uint64_t v105 = (char *)(v6 + v8);
        int v106 = *v105;
        if ((v106 & 0x60) != 0) {
          unsigned __int8 v107 = -73;
        }
        else {
          unsigned __int8 v107 = -77;
        }
        if (v106 < 0) {
          v107 += 16;
        }
        unsigned __int8 v108 = v107;
        if (v104 == v107)
        {
          if ((int)(v5 - v8) >= v104)
          {
            *uint64_t v4 = v8 + v104;
            if (v5 != (unsigned __int16)(v8 + v104)) {
              sub_10025B8C0();
            }
          }
          else
          {
            *((unsigned char *)a1 + 15) = 1;
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          off_100A01D18(v105, v108);
          goto LABEL_331;
        }
        if (sub_100058654())
        {
          if (*((unsigned char *)a1 + 15)) {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          sub_100056E24((uint64_t)" HCI_VSE_ENHANCED_LINK_QUALITY_STATS: Mode(%2x), INVALID length(%d), expected(%d), bytes (%d)", v149, v150, v151, v152, v153, v154, v155, v106);
          v173 = sub_100050B4C(0x54u);
          if (os_log_type_enabled(v173, OS_LOG_TYPE_ERROR)) {
            break;
          }
        }
        goto LABEL_328;
    }
LABEL_327:
    sub_100744F6C();
    goto LABEL_328;
  }
  if ((int)v7 > 9471)
  {
    if ((int)v7 <= 59667)
    {
      if (v7 == 9472)
      {
        uint64_t v14 = (void (*)(uint64_t, uint64_t))qword_100A01DC0;
        if (!qword_100A01DC0) {
          goto LABEL_328;
        }
LABEL_168:
        uint64_t v96 = v6 + v8;
        a2 = (v5 - v8);
LABEL_295:
        v14(v96, a2);
        goto LABEL_331;
      }
      if (v7 != 59659)
      {
        if (v7 != 59660) {
          goto LABEL_328;
        }
        if ((int)(v5 - v8) <= 1)
        {
          uint64_t v188 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
        }
        else
        {
          if (*((unsigned char *)a1 + 14) == 1)
          {
            unsigned __int16 v24 = *(_WORD *)(v6 + (unsigned __int16)(v3 + 2));
            *uint64_t v4 = v3 + 4;
            if (v5 <= (unsigned __int16)(v3 + 4)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 644, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
            }
            *uint64_t v4 = v3 + 5;
            uint64_t v25 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 4));
            if (off_100A01E98) {
              off_100A01E98(v24, v25);
            }
            if (!v25) {
              goto LABEL_331;
            }
            uint64_t v26 = (void (*)(uint64_t, uint64_t))off_100A01CD0;
            if (!off_100A01CD0) {
              goto LABEL_331;
            }
            uint64_t v27 = v24;
            uint64_t v28 = v25;
LABEL_193:
            v26(v27, v28);
            goto LABEL_331;
          }
          uint64_t v188 = "(*pBs).__RWFlag == BYTESTREAM_READ";
        }
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 643, v188);
      }
      if (v5 <= v8)
      {
        v191 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }
      else
      {
        if (*((unsigned char *)a1 + 14) == 1)
        {
          *uint64_t v4 = v3 + 3;
          uint64_t v97 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 2));
          if (v97 != 2)
          {
            if (!sub_100058654()) {
              goto LABEL_328;
            }
            sub_100056E24((uint64_t)"HCI_VSE_BLE_SCAN_CORE_EVENT - unexpected subEvent %u", v125, v126, v127, v128, v129, v130, v131, v97);
            uint64_t v132 = sub_100050B4C(0x54u);
            if (!os_log_type_enabled(v132, OS_LOG_TYPE_ERROR)) {
              goto LABEL_328;
            }
            goto LABEL_327;
          }
          uint64_t v9 = (void (*)(long long *))qword_100A01E30;
          if (!qword_100A01E30) {
            goto LABEL_328;
          }
          LODWORD(v201[1]) = 0;
          if ((int)(v5 - (unsigned __int16)(v3 + 3)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 773, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 3));
          *uint64_t v4 = v3 + 7;
          if ((int)(v5 - (unsigned __int16)(v3 + 7)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 774, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 7));
          *uint64_t v4 = v3 + 11;
          if ((int)(v5 - (unsigned __int16)(v3 + 11)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 775, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 11));
          *uint64_t v4 = v3 + 15;
          if ((int)(v5 - (unsigned __int16)(v3 + 15)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 776, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 15));
          *uint64_t v4 = v3 + 19;
          if ((int)(v5 - (unsigned __int16)(v3 + 19)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 777, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 19));
          *uint64_t v4 = v3 + 23;
          if ((int)(v5 - (unsigned __int16)(v3 + 23)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 778, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 23));
          *uint64_t v4 = v3 + 27;
          if ((int)(v5 - (unsigned __int16)(v3 + 27)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 779, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 27));
          *uint64_t v4 = v3 + 31;
          if ((int)(v5 - (unsigned __int16)(v3 + 31)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 780, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 31));
          *uint64_t v4 = v3 + 35;
          if (v5 <= (unsigned __int16)(v3 + 35)) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 781, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *uint64_t v4 = v3 + 36;
          LOBYTE(v201[1]) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 35));
LABEL_283:
          uint64_t v88 = &v200;
LABEL_284:
          v9(v88);
          goto LABEL_331;
        }
        v191 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 767, v191);
    }
    if (v7 == 59668)
    {
      uint64_t v9 = (void (*)(long long *))qword_100A01E60;
      if (!qword_100A01E60) {
        goto LABEL_328;
      }
      *(void *)&long long v202 = 0;
      memset(v201, 0, sizeof(v201));
      long long v200 = 0u;
      if (v5 <= v8)
      {
        uint64_t v194 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
      }
      else
      {
        if (*((unsigned char *)a1 + 14) == 1)
        {
          *uint64_t v4 = v3 + 3;
          LOBYTE(v200) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 2));
          if ((int)(v5 - (unsigned __int16)(v3 + 3)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 798, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 3));
          *uint64_t v4 = v3 + 7;
          if (v5 <= (unsigned __int16)(v3 + 7)) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 799, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *uint64_t v4 = v3 + 8;
          BYTE8(v200) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 7));
          if ((int)(v5 - (unsigned __int16)(v3 + 8)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 800, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 8));
          *uint64_t v4 = v3 + 12;
          if ((int)(v5 - (unsigned __int16)(v3 + 12)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 801, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 12));
          *uint64_t v4 = v3 + 16;
          if ((int)(v5 - (unsigned __int16)(v3 + 16)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 802, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 16));
          *uint64_t v4 = v3 + 20;
          if ((int)(v5 - (unsigned __int16)(v3 + 20)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 803, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 20));
          *uint64_t v4 = v3 + 24;
          if ((int)(v5 - (unsigned __int16)(v3 + 24)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 804, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 24));
          *uint64_t v4 = v3 + 28;
          if ((int)(v5 - (unsigned __int16)(v3 + 28)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 805, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 28));
          *uint64_t v4 = v3 + 32;
          if ((int)(v5 - (unsigned __int16)(v3 + 32)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 806, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 32));
          *uint64_t v4 = v3 + 36;
          if ((int)(v5 - (unsigned __int16)(v3 + 36)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 807, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 36));
          *uint64_t v4 = v3 + 40;
          if ((int)(v5 - (unsigned __int16)(v3 + 40)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 808, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 40));
          *uint64_t v4 = v3 + 44;
          if ((int)(v5 - (unsigned __int16)(v3 + 44)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 809, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v202) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 44));
          *uint64_t v4 = v3 + 48;
          if (v5 <= (unsigned __int16)(v3 + 48)) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 810, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *uint64_t v4 = v3 + 49;
          BYTE4(v202) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 48));
          if (v5 <= (unsigned __int16)(v3 + 49)) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 811, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *uint64_t v4 = v3 + 50;
          BYTE5(v202) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 49));
          if (v5 <= (unsigned __int16)(v3 + 50)) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 812, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *uint64_t v4 = v3 + 51;
          BYTE6(v202) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 50));
          goto LABEL_283;
        }
        uint64_t v194 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 797, v194);
    }
    if (v7 != 59671)
    {
      if (v7 != 59672) {
        goto LABEL_328;
      }
      uint64_t v9 = (void (*)(long long *))qword_100A01E20;
      if (!qword_100A01E20) {
        goto LABEL_328;
      }
      long long v200 = 0u;
      memset(v201, 0, 28);
      if (v5 <= v8)
      {
        *((unsigned char *)a1 + 15) = 1;
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
      }
      else
      {
        *uint64_t v4 = v3 + 3;
        LOBYTE(v200) = *(unsigned char *)(v6 + (unsigned __int16)(v3 + 2));
        if ((int)(v5 - (unsigned __int16)(v3 + 3)) > 3)
        {
          DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 3));
          *uint64_t v4 = v3 + 7;
          if ((int)(v5 - (unsigned __int16)(v3 + 7)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 906, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 7));
          *uint64_t v4 = v3 + 11;
          if ((int)(v5 - (unsigned __int16)(v3 + 11)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 907, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 11));
          *uint64_t v4 = v3 + 15;
          if ((int)(v5 - (unsigned __int16)(v3 + 15)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 908, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 15));
          *uint64_t v4 = v3 + 19;
          if ((int)(v5 - (unsigned __int16)(v3 + 19)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 909, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 19));
          *uint64_t v4 = v3 + 23;
          if ((int)(v5 - (unsigned __int16)(v3 + 23)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 910, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 23));
          *uint64_t v4 = v3 + 27;
          if ((int)(v5 - (unsigned __int16)(v3 + 27)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 911, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 27));
          *uint64_t v4 = v3 + 31;
          if ((int)(v5 - (unsigned __int16)(v3 + 31)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 912, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          LODWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 31));
          *uint64_t v4 = v3 + 35;
          if ((int)(v5 - (unsigned __int16)(v3 + 35)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 913, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD1(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 35));
          *uint64_t v4 = v3 + 39;
          if ((int)(v5 - (unsigned __int16)(v3 + 39)) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 914, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          DWORD2(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 39));
          unsigned __int16 v30 = v3 + 43;
          goto LABEL_282;
        }
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 905, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    uint64_t v9 = (void (*)(long long *))qword_100A01E18;
    if (!qword_100A01E18) {
      goto LABEL_328;
    }
    int v215 = 0;
    long long v213 = 0u;
    long long v214 = 0u;
    long long v211 = 0u;
    long long v212 = 0u;
    long long v209 = 0u;
    long long v210 = 0u;
    long long v207 = 0u;
    long long v208 = 0u;
    long long v205 = 0u;
    long long v206 = 0u;
    long long v203 = 0u;
    long long v204 = 0u;
    long long v202 = 0u;
    long long v200 = 0u;
    memset(v201, 0, sizeof(v201));
    if ((int)(v5 - v8) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 823, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 2));
    *uint64_t v4 = v3 + 6;
    if ((int)(v5 - (unsigned __int16)(v3 + 6)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 824, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 6));
    *uint64_t v4 = v3 + 10;
    if ((int)(v5 - (unsigned __int16)(v3 + 10)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 825, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 10));
    *uint64_t v4 = v3 + 14;
    if ((int)(v5 - (unsigned __int16)(v3 + 14)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 826, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v200) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 14));
    *uint64_t v4 = v3 + 18;
    if ((int)(v5 - (unsigned __int16)(v3 + 18)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 827, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 18));
    *uint64_t v4 = v3 + 22;
    if ((int)(v5 - (unsigned __int16)(v3 + 22)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 828, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 22));
    *uint64_t v4 = v3 + 26;
    if ((int)(v5 - (unsigned __int16)(v3 + 26)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 829, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 26));
    *uint64_t v4 = v3 + 30;
    if ((int)(v5 - (unsigned __int16)(v3 + 30)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 830, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v201[0]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 30));
    *uint64_t v4 = v3 + 34;
    if ((int)(v5 - (unsigned __int16)(v3 + 34)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 831, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 34));
    *uint64_t v4 = v3 + 38;
    if ((int)(v5 - (unsigned __int16)(v3 + 38)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 832, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 38));
    *uint64_t v4 = v3 + 42;
    int v103 = v5 - (unsigned __int16)(v3 + 42);
    if ((v103 & 0x1FFFE) == 0) {
      goto LABEL_283;
    }
    if (v103 <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 836, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 42));
    *uint64_t v4 = v3 + 46;
    if ((int)(v5 - (unsigned __int16)(v3 + 46)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 837, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v201[1]) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 46));
    *uint64_t v4 = v3 + 50;
    if ((int)(v5 - (unsigned __int16)(v3 + 50)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 838, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v202) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 50));
    *uint64_t v4 = v3 + 54;
    if ((int)(v5 - (unsigned __int16)(v3 + 54)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 839, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v202) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 54));
    *uint64_t v4 = v3 + 58;
    if ((int)(v5 - (unsigned __int16)(v3 + 58)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 840, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v202) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 58));
    *uint64_t v4 = v3 + 62;
    if ((int)(v5 - (unsigned __int16)(v3 + 62)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 841, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v202) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 62));
    *uint64_t v4 = v3 + 66;
    if ((int)(v5 - (unsigned __int16)(v3 + 66)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 842, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 66));
    *uint64_t v4 = v3 + 70;
    if ((int)(v5 - (unsigned __int16)(v3 + 70)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 843, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 70));
    *uint64_t v4 = v3 + 74;
    if ((int)(v5 - (unsigned __int16)(v3 + 74)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 844, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 74));
    *uint64_t v4 = v3 + 78;
    if ((int)(v5 - (unsigned __int16)(v3 + 78)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 846, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v203) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 78));
    *uint64_t v4 = v3 + 82;
    if ((int)(v5 - (unsigned __int16)(v3 + 82)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 847, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 82));
    *uint64_t v4 = v3 + 86;
    if ((int)(v5 - (unsigned __int16)(v3 + 86)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 848, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 86));
    *uint64_t v4 = v3 + 90;
    if ((int)(v5 - (unsigned __int16)(v3 + 90)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 849, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 90));
    *uint64_t v4 = v3 + 94;
    if ((int)(v5 - (unsigned __int16)(v3 + 94)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 850, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v204) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 94));
    *uint64_t v4 = v3 + 98;
    if ((int)(v5 - (unsigned __int16)(v3 + 98)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 851, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 98));
    *uint64_t v4 = v3 + 102;
    if ((int)(v5 - (unsigned __int16)(v3 + 102)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 852, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 102));
    *uint64_t v4 = v3 + 106;
    if ((int)(v5 - (unsigned __int16)(v3 + 106)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 853, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 106));
    *uint64_t v4 = v3 + 110;
    if ((int)(v5 - (unsigned __int16)(v3 + 110)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 854, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v205) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 110));
    *uint64_t v4 = v3 + 114;
    if ((int)(v5 - (unsigned __int16)(v3 + 114)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 855, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 114));
    *uint64_t v4 = v3 + 118;
    if ((int)(v5 - (unsigned __int16)(v3 + 118)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 856, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 118));
    *uint64_t v4 = v3 + 122;
    if ((int)(v5 - (unsigned __int16)(v3 + 122)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 857, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 122));
    *uint64_t v4 = v3 + 126;
    if ((int)(v5 - (unsigned __int16)(v3 + 126)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 858, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v206) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 126));
    *uint64_t v4 = v3 + 130;
    if ((int)(v5 - (unsigned __int16)(v3 + 130)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 859, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 130));
    *uint64_t v4 = v3 + 134;
    if ((int)(v5 - (unsigned __int16)(v3 + 134)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 860, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 134));
    *uint64_t v4 = v3 + 138;
    if ((int)(v5 - (unsigned __int16)(v3 + 138)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 861, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 138));
    *uint64_t v4 = v3 + 142;
    if ((int)(v5 - (unsigned __int16)(v3 + 142)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 862, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v207) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 142));
    *uint64_t v4 = v3 + 146;
    if ((int)(v5 - (unsigned __int16)(v3 + 146)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 863, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 146));
    *uint64_t v4 = v3 + 150;
    if ((int)(v5 - (unsigned __int16)(v3 + 150)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 864, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 150));
    *uint64_t v4 = v3 + 154;
    if ((int)(v5 - (unsigned __int16)(v3 + 154)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 865, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 154));
    *uint64_t v4 = v3 + 158;
    if ((int)(v5 - (unsigned __int16)(v3 + 158)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 866, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v208) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 158));
    *uint64_t v4 = v3 + 162;
    if ((int)(v5 - (unsigned __int16)(v3 + 162)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 867, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v209) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 162));
    *uint64_t v4 = v3 + 166;
    if ((int)(v5 - (unsigned __int16)(v3 + 166)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 868, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v209) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 166));
    *uint64_t v4 = v3 + 170;
    if ((int)(v5 - (unsigned __int16)(v3 + 170)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 869, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v209) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 170));
    *uint64_t v4 = v3 + 174;
    if ((int)(v5 - (unsigned __int16)(v3 + 174)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 870, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    HIDWORD(v209) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 174));
    *uint64_t v4 = v3 + 176;
    if ((int)(v5 - (unsigned __int16)(v3 + 176)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 871, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    LODWORD(v210) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 176));
    *uint64_t v4 = v3 + 178;
    if ((int)(v5 - (unsigned __int16)(v3 + 178)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 872, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD1(v210) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 178));
    *uint64_t v4 = v3 + 180;
    if ((int)(v5 - (unsigned __int16)(v3 + 180)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 873, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD2(v210) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 180));
    *uint64_t v4 = v3 + 182;
    if ((int)(v5 - (unsigned __int16)(v3 + 182)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 874, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v210) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 182));
    *uint64_t v4 = v3 + 186;
    if ((int)(v5 - (unsigned __int16)(v3 + 186)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 875, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v211) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 186));
    *uint64_t v4 = v3 + 190;
    if ((int)(v5 - (unsigned __int16)(v3 + 190)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 876, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD1(v211) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 190));
    *uint64_t v4 = v3 + 192;
    if ((int)(v5 - (unsigned __int16)(v3 + 192)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 877, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    DWORD2(v211) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 192));
    *uint64_t v4 = v3 + 194;
    if ((int)(v5 - (unsigned __int16)(v3 + 194)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 878, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    HIDWORD(v211) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 194));
    *uint64_t v4 = v3 + 196;
    if ((int)(v5 - (unsigned __int16)(v3 + 196)) <= 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 879, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    LODWORD(v212) = *(unsigned __int16 *)(v6 + (unsigned __int16)(v3 + 196));
    *uint64_t v4 = v3 + 198;
    if ((int)(v5 - (unsigned __int16)(v3 + 198)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 880, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v212) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 198));
    *uint64_t v4 = v3 + 202;
    if ((int)(v5 - (unsigned __int16)(v3 + 202)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 881, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v212) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 202));
    *uint64_t v4 = v3 + 206;
    if ((int)(v5 - (unsigned __int16)(v3 + 206)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 882, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v212) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 206));
    *uint64_t v4 = v3 + 210;
    if ((int)(v5 - (unsigned __int16)(v3 + 210)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 883, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 210));
    *uint64_t v4 = v3 + 214;
    if ((int)(v5 - (unsigned __int16)(v3 + 214)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 884, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 214));
    *uint64_t v4 = v3 + 218;
    if ((int)(v5 - (unsigned __int16)(v3 + 218)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 885, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 218));
    *uint64_t v4 = v3 + 222;
    if ((int)(v5 - (unsigned __int16)(v3 + 222)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 886, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v213) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 222));
    *uint64_t v4 = v3 + 226;
    if ((int)(v5 - (unsigned __int16)(v3 + 226)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 887, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    LODWORD(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 226));
    *uint64_t v4 = v3 + 230;
    if ((int)(v5 - (unsigned __int16)(v3 + 230)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 888, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD1(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 230));
    *uint64_t v4 = v3 + 234;
    if ((int)(v5 - (unsigned __int16)(v3 + 234)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 889, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    DWORD2(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 234));
    *uint64_t v4 = v3 + 238;
    if ((int)(v5 - (unsigned __int16)(v3 + 238)) <= 3) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 890, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
    }
    HIDWORD(v214) = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 238));
    *uint64_t v4 = v3 + 242;
    if ((int)(v5 - (unsigned __int16)(v3 + 242)) <= 3)
    {
      v195 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    }
    else
    {
      if (*((unsigned char *)a1 + 14) == 1)
      {
        int v215 = *(_DWORD *)(v6 + (unsigned __int16)(v3 + 242));
        unsigned __int16 v30 = v3 + 246;
LABEL_282:
        *uint64_t v4 = v30;
        goto LABEL_283;
      }
      v195 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 891, v195);
  }
  if ((int)v7 > 6399)
  {
    if (v7 == 6400)
    {
      if (!byte_100A02040) {
        goto LABEL_328;
      }
      if ((int)(v5 - v8) <= 1)
      {
        v193 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }
      else
      {
        if (*((unsigned char *)a1 + 14) == 1)
        {
          *uint64_t v4 = v3 + 4;
          if (v5 - (unint64_t)(unsigned __int16)(v3 + 4) <= 0x1D) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 630, "ByteStream_NumReadBytesAvail(*pBs) >= (sizeof(reason))");
          }
          uint64_t v98 = (long long *)(v6 + (unsigned __int16)(v3 + 4));
          long long v99 = *v98;
          uint64_t v100 = *((void *)v98 + 2);
          int v101 = *((_DWORD *)v98 + 6);
          BYTE12(v201[0]) = *((_WORD *)v98 + 14);
          DWORD2(v201[0]) = v101;
          *(void *)&v201[0] = v100;
          long long v200 = v99;
          *uint64_t v4 = v3 + 34;
          BYTE13(v201[0]) = 0;
          sub_10025B958();
          goto LABEL_331;
        }
        v193 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 629, v193);
    }
    if (v7 != 8960)
    {
      if (v7 != 9216) {
        goto LABEL_328;
      }
      if ((int)(v5 - v8) <= 1)
      {
        v189 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
      }
      else
      {
        if (*((unsigned char *)a1 + 14) == 1)
        {
          unsigned __int16 v29 = *(_WORD *)(v6 + (unsigned __int16)(v3 + 2));
          *uint64_t v4 = v3 + 4;
          if (v5 <= (unsigned __int16)(v3 + 4)) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 709, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
          }
          *uint64_t v4 = v3 + 5;
          if (off_100A01D58) {
            off_100A01D58(v29, *(unsigned __int8 *)(v6 + (unsigned __int16)(v3 + 4)));
          }
          goto LABEL_331;
        }
        v189 = "(*pBs).__RWFlag == BYTESTREAM_READ";
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 708, v189);
    }
    if ((int)(v5 - v8) <= 1)
    {
      uint64_t v192 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    }
    else
    {
      if (*((unsigned char *)a1 + 14) == 1)
      {
        unsigned __int16 v102 = *(_WORD *)(v6 + (unsigned __int16)(v3 + 2));
        *uint64_t v4 = v3 + 4;
        if ((int)(v5 - (unsigned __int16)(v3 + 4)) <= 3) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 726, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
        }
        uint64_t v28 = *(unsigned int *)(v6 + (unsigned __int16)(v3 + 4));
        *uint64_t v4 = v3 + 8;
        uint64_t v26 = (void (*)(uint64_t, uint64_t))qword_100A01D60;
        if (!qword_100A01D60) {
          goto LABEL_331;
        }
        uint64_t v27 = v102;
        goto LABEL_193;
      }
      uint64_t v192 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 725, v192);
  }
  if (v7 == 2048)
  {
    if ((int)(v5 - v8) <= 1)
    {
      uint64_t v190 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    }
    else
    {
      if (*((unsigned char *)a1 + 14) == 1)
      {
        uint64_t v89 = (unsigned __int8 *)(v6 + v8);
        int v90 = *v89;
        int v91 = v89[1];
        *uint64_t v4 = v3 + 4;
        if ((int)(v5 - (unsigned __int16)(v3 + 4)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 416, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        *uint64_t v4 = v3 + 6;
        if (!sub_100197864(v90 | (v91 << 8))) {
          goto LABEL_328;
        }
        if (off_100A01CB0) {
          off_100A01CB0();
        }
        goto LABEL_331;
      }
      uint64_t v190 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 415, v190);
  }
  if (v7 != 4866)
  {
    if (v7 != 5632) {
      goto LABEL_328;
    }
    if (v5 <= v8)
    {
      uint64_t v187 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    }
    else
    {
      if (*((unsigned char *)a1 + 14) == 1)
      {
        unsigned __int16 v11 = v3 + 3;
        *uint64_t v4 = v11;
        if (*(unsigned char *)(v6 + v8) != 1) {
          goto LABEL_328;
        }
        unsigned int v12 = v5 - v11;
        if ((v12 & 0x1FFFE) != 0)
        {
          if (off_100A01CB8) {
            off_100A01CB8(v6 + v11, (v12 >> 1), v6 + v11 + (unsigned __int16)(v12 >> 1), (v12 >> 1));
          }
          goto LABEL_331;
        }
        if (!sub_100058654()) {
          goto LABEL_328;
        }
        sub_100056E24((uint64_t)"LostDevice size is zero", v156, v157, v158, v159, v160, v161, v162, v198);
        uint64_t v163 = sub_100050B4C(0x54u);
        if (!os_log_type_enabled(v163, OS_LOG_TYPE_ERROR)) {
          goto LABEL_328;
        }
        goto LABEL_327;
      }
      uint64_t v187 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 383, v187);
  }
  uint64_t v92 = (void (*)(void, BOOL))off_100A02010;
  if (!off_100A02010) {
    goto LABEL_328;
  }
  if ((int)(v5 - v8) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 942, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v93 = (unsigned __int8 *)(v6 + v8);
  int v94 = *v93;
  int v95 = v93[1];
  *uint64_t v4 = v3 + 4;
  if (v5 <= (unsigned __int16)(v3 + 4)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 943, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *uint64_t v4 = v3 + 5;
  v92(v94 | (v95 << 8), *(unsigned char *)(v6 + (unsigned __int16)(v3 + 4)) != 0);
LABEL_331:
  if (*((unsigned char *)a1 + 15)) {
    sub_10010B394(136);
  }
}

uint64_t sub_10011B660(void (*a1)(void, uint64_t))
{
  return 0;
}

uint64_t sub_10011B688(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(64941, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1711, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10011B760(_WORD *a1, char a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  if (!sub_100059D70(&v20))
  {
    if (HIBYTE(v21))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v21) - WORD2(v21) > 3)
    {
      if (BYTE6(v21) == 2)
      {
        *(_DWORD *)(v20 + WORD2(v21)) = 0;
        unsigned __int16 v12 = WORD2(v21) + 4;
        WORD2(v21) += 4;
        if (HIBYTE(v21))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v21) > v12)
        {
          if (BYTE6(v21) == 2)
          {
            *(unsigned char *)(v20 + v12) = 0;
            __int16 v13 = WORD2(v21);
            unsigned __int16 v14 = ++WORD2(v21);
            if (HIBYTE(v21))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v21) > v14)
            {
              if (BYTE6(v21) == 2)
              {
                WORD2(v21) = v13 + 2;
                *(unsigned char *)(v20 + v14) = a3 | (16 * a2);
                if (HIBYTE(v21))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v21) - WORD2(v21) > 1)
                {
                  if (BYTE6(v21) == 2)
                  {
                    *(_WORD *)(v20 + WORD2(v21)) = *a1;
                    unsigned __int8 v11 = BYTE4(v21) + 2;
                    WORD2(v21) += 2;
                    return sub_10001BCBC(65456, v20, v11, a4, (uint64_t)sub_100117CF4, v8, v9, v10);
                  }
                  uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3732, v19);
                }
                uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_32;
              }
              uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3731, v18);
            }
            uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_28;
          }
          uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3730, v17);
        }
        uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
        goto LABEL_24;
      }
      uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3729, v16);
    }
    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= (4)";
    goto LABEL_20;
  }
  unsigned __int8 v11 = BYTE4(v21);
  return sub_10001BCBC(65456, v20, v11, a4, (uint64_t)sub_100117CF4, v8, v9, v10);
}

uint64_t sub_10011B9E8(int a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (a1 == 255) {
    return 101;
  }
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = a1;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(unsigned char *)(v11 + WORD2(v12)) = -1;
              *(unsigned char *)(v11 + WORD2(v12) + 1) = -1;
              return sub_10001BCBC(65277, v11, (BYTE4(v12) + 2), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1078, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_19;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_15:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1077, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_10011BB64(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(64838, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1727, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10011BC3C(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(65446, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
          }
          __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1696, v13);
        }
        __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1695, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10011BDB8(unsigned int a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (a1 > 4) {
    return 101;
  }
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(unsigned char *)(v13 + WORD2(v14)) = -1;
        *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
        __int16 v8 = WORD2(v14);
        unsigned __int16 v9 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v14) > v9)
        {
          if (BYTE6(v14) == 2)
          {
            WORD2(v14) = v8 + 3;
            *(unsigned char *)(v13 + v9) = a1;
            if (HIBYTE(v14))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v14) - WORD2(v14) > 1)
            {
              if (BYTE6(v14) == 2)
              {
                *(unsigned char *)(v13 + WORD2(v14)) = -1;
                *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
                WORD2(v14) += 2;
                return sub_10001BCBC(64893, v13, BYTE4(v14), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
              }
              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 990, v12);
            }
            uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_26;
          }
          unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 989, v11);
        }
        unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_22;
      }
      __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_18:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 988, v10);
    }
    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_10011BFC8(char a1, _WORD *a2, uint64_t a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v10) = a1;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v14) - WORD2(v14) > 1)
          {
            if (BYTE6(v14) == 2)
            {
              *(_WORD *)(v13 + WORD2(v14)) = *a2;
              WORD2(v14) += 2;
              return sub_10001BCBC(64872, v13, BYTE4(v14), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
            }
            uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1008, v12);
          }
          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1007, v11);
      }
    }
    unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10011C144(int a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (a1 && !result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v11 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v11) = a2;
          return sub_10001BCBC(64817, v13, BYTE4(v14), a4, (uint64_t)sub_100117CF4, v8, v9, v10);
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_11:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1518, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_10011C22C(char a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(unsigned char *)(v13 + WORD2(v14)) = -1;
              *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
              *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
              *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(unsigned char *)(v13 + v9) = -1;
                  *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
                  *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
                  *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
                  WORD2(v14) += 4;
                  return sub_10001BCBC(64984, v13, BYTE4(v14), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                }
                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1681, v12);
              }
              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }
            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1680, v11);
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1679, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10011C468(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = -a1;
          return sub_10001BCBC(64855, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        unsigned __int16 v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1744, v9);
      }
    }
    unsigned __int16 v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10011C544(_WORD *a1, __int16 a2, __int16 a3, __int16 a4, __int16 a5, uint64_t a6)
{
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t result = sub_100059D70(&v25);
  if (!result)
  {
    if (HIBYTE(v26))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v26) - WORD2(v26) > 1)
    {
      if (BYTE6(v26) == 2)
      {
        *(_WORD *)(v25 + WORD2(v26)) = *a1;
        unsigned __int16 v16 = WORD2(v26) + 2;
        WORD2(v26) += 2;
        if (HIBYTE(v26))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v26) - v16 > 1)
        {
          if (BYTE6(v26) == 2)
          {
            *(unsigned char *)(v25 + v16) = a2;
            *(unsigned char *)(v25 + WORD2(v26) + 1) = HIBYTE(a2);
            unsigned __int16 v17 = WORD2(v26) + 2;
            WORD2(v26) += 2;
            if (HIBYTE(v26))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v26) - v17 > 1)
            {
              if (BYTE6(v26) == 2)
              {
                *(unsigned char *)(v25 + v17) = a3;
                *(unsigned char *)(v25 + WORD2(v26) + 1) = HIBYTE(a3);
                unsigned __int16 v18 = WORD2(v26) + 2;
                WORD2(v26) += 2;
                if (HIBYTE(v26))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v26) - v18 > 1)
                {
                  if (BYTE6(v26) == 2)
                  {
                    *(unsigned char *)(v25 + v18) = a4;
                    *(unsigned char *)(v25 + WORD2(v26) + 1) = HIBYTE(a4);
                    unsigned __int16 v19 = WORD2(v26) + 2;
                    WORD2(v26) += 2;
                    if (HIBYTE(v26))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else if (WORD1(v26) - v19 > 1)
                    {
                      if (BYTE6(v26) == 2)
                      {
                        *(unsigned char *)(v25 + v19) = a5;
                        *(unsigned char *)(v25 + WORD2(v26) + 1) = HIBYTE(a5);
                        WORD2(v26) += 2;
                        return sub_10001BCBC(64835, v25, BYTE4(v26), a6, (uint64_t)sub_100117CF4, v13, v14, v15);
                      }
                      unsigned __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1783, v24);
                    }
                    unsigned __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_38;
                  }
                  uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1782, v23);
                }
                uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_34;
              }
              uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1781, v22);
            }
            uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_30;
          }
          uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1780, v21);
        }
        uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_26;
      }
      uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1779, v20);
    }
    uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_10011C8AC(__int16 a1, __int16 a2, __int16 a3, __int16 a4, uint64_t a5)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t result = sub_100059D70(&v21);
  if (!result)
  {
    if (HIBYTE(v22))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v22) - WORD2(v22) > 1)
    {
      if (BYTE6(v22) == 2)
      {
        *(_WORD *)(v21 + WORD2(v22)) = a1;
        unsigned __int16 v14 = WORD2(v22) + 2;
        WORD2(v22) += 2;
        if (HIBYTE(v22))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v22) - v14 > 1)
        {
          if (BYTE6(v22) == 2)
          {
            *(unsigned char *)(v21 + v14) = a2;
            *(unsigned char *)(v21 + WORD2(v22) + 1) = HIBYTE(a2);
            unsigned __int16 v15 = WORD2(v22) + 2;
            WORD2(v22) += 2;
            if (HIBYTE(v22))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v22) - v15 > 1)
            {
              if (BYTE6(v22) == 2)
              {
                *(unsigned char *)(v21 + v15) = a3;
                *(unsigned char *)(v21 + WORD2(v22) + 1) = HIBYTE(a3);
                unsigned __int16 v16 = WORD2(v22) + 2;
                WORD2(v22) += 2;
                if (HIBYTE(v22))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v22) - v16 > 1)
                {
                  if (BYTE6(v22) == 2)
                  {
                    *(unsigned char *)(v21 + v16) = a4;
                    *(unsigned char *)(v21 + WORD2(v22) + 1) = HIBYTE(a4);
                    WORD2(v22) += 2;
                    return sub_10001BCBC(64837, v21, BYTE4(v22), a5, (uint64_t)sub_100117CF4, v11, v12, v13);
                  }
                  uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1801, v20);
                }
                uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_31;
              }
              unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1800, v19);
            }
            unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_27;
          }
          unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1799, v18);
        }
        unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_23;
      }
      unsigned __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1798, v17);
    }
    unsigned __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10011CB78(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(64836, v6, BYTE4(v7), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_10011CBD4(_WORD *a1, int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t result = sub_100059D70(&v20);
  if (!result)
  {
    if (HIBYTE(v21))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v12 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(unsigned char *)(v20 + v12) = 1;
          if (HIBYTE(v21))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v21) - WORD2(v21) > 1)
          {
            if (BYTE6(v21) == 2)
            {
              *(_WORD *)(v20 + WORD2(v21)) = *a1;
              unsigned __int16 v13 = WORD2(v21) + 2;
              WORD2(v21) += 2;
              if (HIBYTE(v21))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v21) - v13 > 3)
              {
                if (BYTE6(v21) == 2)
                {
                  *(unsigned char *)(v20 + v13) = a2;
                  *(unsigned char *)(v20 + WORD2(v21) + 1) = BYTE1(a2);
                  *(unsigned char *)(v20 + WORD2(v21) + 2) = BYTE2(a2);
                  *(unsigned char *)(v20 + WORD2(v21) + 3) = HIBYTE(a2);
                  unsigned __int16 v14 = WORD2(v21) + 4;
                  WORD2(v21) += 4;
                  if (HIBYTE(v21))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v21) - v14 > 1)
                  {
                    if (BYTE6(v21) == 2)
                    {
                      double v15 = (double)a3 * 1.25;
                      *(unsigned char *)(v20 + v14) = (int)v15;
                      *(unsigned char *)(v20 + WORD2(v21) + 1) = (unsigned __int16)(int)v15 >> 8;
                      WORD2(v21) += 2;
                      return sub_10001BCBC(65474, v20, BYTE4(v21), a4, (uint64_t)sub_100117CF4, v9, v10, v11);
                    }
                    unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1765, v19);
                  }
                  unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_31;
                }
                unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1764, v18);
              }
              unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_27;
            }
            unsigned __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1763, v17);
          }
          unsigned __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_23;
        }
        unsigned __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1762, v16);
      }
    }
    unsigned __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10011CEB8(char a1, char a2, char a3, char a4, char a5, __int16 a6, __int16 a7, uint64_t a8)
{
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t result = sub_100059D70(&v33);
  if (!result)
  {
    if (HIBYTE(v34))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v20 = WORD2(v34);
      if (WORD1(v34) > WORD2(v34))
      {
        if (BYTE6(v34) == 2)
        {
          ++WORD2(v34);
          *(unsigned char *)(v33 + v20) = a1;
          if (HIBYTE(v34))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v21 = WORD2(v34);
            if (WORD1(v34) > WORD2(v34))
            {
              if (BYTE6(v34) == 2)
              {
                ++WORD2(v34);
                *(unsigned char *)(v33 + v21) = a2;
                if (HIBYTE(v34))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v22 = WORD2(v34);
                  if (WORD1(v34) > WORD2(v34))
                  {
                    if (BYTE6(v34) == 2)
                    {
                      ++WORD2(v34);
                      *(unsigned char *)(v33 + v22) = a3;
                      if (HIBYTE(v34))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v23 = WORD2(v34);
                        if (WORD1(v34) > WORD2(v34))
                        {
                          if (BYTE6(v34) == 2)
                          {
                            ++WORD2(v34);
                            *(unsigned char *)(v33 + v23) = a4;
                            if (HIBYTE(v34))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else
                            {
                              uint64_t v24 = WORD2(v34);
                              if (WORD1(v34) > WORD2(v34))
                              {
                                if (BYTE6(v34) == 2)
                                {
                                  ++WORD2(v34);
                                  *(unsigned char *)(v33 + v24) = a5;
                                  if (HIBYTE(v34))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }
                                  else if (WORD1(v34) - WORD2(v34) > 1)
                                  {
                                    if (BYTE6(v34) == 2)
                                    {
                                      *(_WORD *)(v33 + WORD2(v34)) = a7;
                                      unsigned __int16 v25 = WORD2(v34) + 2;
                                      WORD2(v34) += 2;
                                      if (HIBYTE(v34))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/aci/aci_vsc.c");
                                      }
                                      else if (WORD1(v34) - v25 > 1)
                                      {
                                        if (BYTE6(v34) == 2)
                                        {
                                          *(unsigned char *)(v33 + v25) = a6;
                                          *(unsigned char *)(v33 + WORD2(v34) + 1) = HIBYTE(a6);
                                          WORD2(v34) += 2;
                                          return sub_10001BCBC(65342, v33, BYTE4(v34), a8, (uint64_t)sub_100117CF4, v17, v18, v19);
                                        }
                                        uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2153, v32);
                                      }
                                      uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                      goto LABEL_52;
                                    }
                                    unint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2152, v31);
                                  }
                                  unint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_48;
                                }
                                unsigned __int16 v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2151, v30);
                              }
                            }
                            unsigned __int16 v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_44;
                          }
                          unsigned __int16 v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2150, v29);
                        }
                      }
                      unsigned __int16 v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_40;
                    }
                    uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2149, v28);
                  }
                }
                uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }
              uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2148, v27);
            }
          }
          uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }
        uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2147, v26);
      }
    }
    uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_10011D2C8(char a1, char a2, unsigned __int8 a3, char *a4, _WORD *a5, unsigned char *a6, char a7, char a8, unsigned char *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t result = sub_100059D70(&v46);
  if (result) {
    return result;
  }
  LOBYTE(v23) = 0;
  int v25 = 3;
  unsigned __int8 v26 = a3;
  do
  {
    LOBYTE(v23) = (v26 & 1) + v23;
    v26 >>= 1;
    --v25;
  }
  while (v25);
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_55;
  }
  uint64_t v27 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_55:
    int v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_57;
  }
  if (BYTE6(v47) != 2)
  {
    int v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2181, v41);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v27) = a1;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_59;
  }
  uint64_t v28 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_59:
    int v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_61;
  }
  if (BYTE6(v47) != 2)
  {
    int v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2182, v42);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v28) = a2;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_63;
  }
  uint64_t v29 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_63:
    int v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_65;
  }
  if (BYTE6(v47) != 2)
  {
    int v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2183, v43);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v29) = a3;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_67;
  }
  uint64_t v30 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_67:
    uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_69;
  }
  if (BYTE6(v47) != 2)
  {
    uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2184, v44);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v30) = a7;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_71;
  }
  uint64_t v31 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_71:
    int v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_73;
  }
  if (BYTE6(v47) != 2)
  {
    int v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2185, v45);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v31) = a8;
  if ((_BYTE)v23)
  {
    uint64_t v23 = v23;
    while (!HIBYTE(v47))
    {
      uint64_t v32 = WORD2(v47);
      if (WORD1(v47) <= WORD2(v47)) {
        goto LABEL_39;
      }
      if (BYTE6(v47) != 2)
      {
        uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_41;
      }
      char v33 = *a4;
      ++WORD2(v47);
      *(unsigned char *)(v46 + v32) = v33;
      if (HIBYTE(v47))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_43:
        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_45:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2189, v38);
      }
      if (WORD1(v47) - WORD2(v47) <= 1) {
        goto LABEL_43;
      }
      if (BYTE6(v47) != 2)
      {
        uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_45;
      }
      *(_WORD *)(v46 + WORD2(v47)) = *a5;
      unsigned __int16 v34 = WORD2(v47) + 2;
      WORD2(v47) += 2;
      if (HIBYTE(v47))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_47:
        __int16 v39 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_49:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2190, v39);
      }
      if (WORD1(v47) - v34 <= 1) {
        goto LABEL_47;
      }
      if (BYTE6(v47) != 2)
      {
        __int16 v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_49;
      }
      *(unsigned char *)(v46 + v34) = *a6;
      *(unsigned char *)(v46 + WORD2(v47) + 1) = a6[1];
      unsigned __int16 v35 = WORD2(v47) + 2;
      WORD2(v47) += 2;
      if (HIBYTE(v47))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_51:
        int v40 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_53:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2191, v40);
      }
      if (WORD1(v47) - v35 <= 1) {
        goto LABEL_51;
      }
      if (BYTE6(v47) != 2)
      {
        int v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_53;
      }
      *(unsigned char *)(v46 + v35) = *a9;
      *(unsigned char *)(v46 + WORD2(v47) + 1) = a9[1];
      unsigned __int8 v36 = BYTE4(v47) + 2;
      a9 += 2;
      WORD2(v47) += 2;
      a6 += 2;
      ++a5;
      ++a4;
      if (!--v23) {
        return sub_10001BCBC(65346, v46, v36, a11, (uint64_t)sub_100117CF4, v20, v21, v22);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_39:
    uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_41:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2188, v37);
  }
  unsigned __int8 v36 = BYTE4(v47);
  return sub_10001BCBC(65346, v46, v36, a11, (uint64_t)sub_100117CF4, v20, v21, v22);
}

uint64_t sub_10011D844(char a1, __int16 a2, char a3, __int16 a4, char a5, uint64_t a6)
{
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t result = sub_100059D70(&v26);
  if (!result)
  {
    if (HIBYTE(v27))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v16 = WORD2(v27);
      if (WORD1(v27) > WORD2(v27))
      {
        if (BYTE6(v27) == 2)
        {
          ++WORD2(v27);
          *(unsigned char *)(v26 + v16) = a1;
          if (HIBYTE(v27))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v27) - WORD2(v27) > 1)
          {
            if (BYTE6(v27) == 2)
            {
              *(_WORD *)(v26 + WORD2(v27)) = a2;
              __int16 v17 = WORD2(v27);
              unsigned __int16 v18 = WORD2(v27) + 2;
              WORD2(v27) += 2;
              if (HIBYTE(v27))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v27) > v18)
              {
                if (BYTE6(v27) == 2)
                {
                  WORD2(v27) = v17 + 3;
                  *(unsigned char *)(v26 + v18) = a3;
                  if (HIBYTE(v27))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v27) - WORD2(v27) > 1)
                  {
                    if (BYTE6(v27) == 2)
                    {
                      *(_WORD *)(v26 + WORD2(v27)) = a4;
                      __int16 v19 = WORD2(v27);
                      unsigned __int16 v20 = WORD2(v27) + 2;
                      WORD2(v27) += 2;
                      if (HIBYTE(v27))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else if (WORD1(v27) > v20)
                      {
                        if (BYTE6(v27) == 2)
                        {
                          WORD2(v27) = v19 + 3;
                          *(unsigned char *)(v26 + v20) = a5;
                          return sub_10001BCBC(65354, v26, BYTE4(v27), a6, (uint64_t)sub_100117CF4, v13, v14, v15);
                        }
                        int v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3980, v25);
                      }
                      int v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_38;
                    }
                    uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3979, v24);
                  }
                  uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_34;
                }
                uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3978, v23);
              }
              uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_30;
            }
            uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3977, v22);
          }
          uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_26;
        }
        uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3976, v21);
      }
    }
    uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_10011DB54(__int16 a1, char a2, char a3, uint64_t a4)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v19) - WORD2(v19) > 1)
    {
      if (BYTE6(v19) == 2)
      {
        *(_WORD *)(v18 + WORD2(v19)) = a1;
        __int16 v12 = WORD2(v19);
        unsigned __int16 v13 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v19) > v13)
        {
          if (BYTE6(v19) == 2)
          {
            WORD2(v19) = v12 + 3;
            *(unsigned char *)(v18 + v13) = a2;
            if (HIBYTE(v19))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              uint64_t v14 = WORD2(v19);
              if (WORD1(v19) > WORD2(v19))
              {
                if (BYTE6(v19) == 2)
                {
                  ++WORD2(v19);
                  *(unsigned char *)(v18 + v14) = a3;
                  return sub_10001BCBC(65072, v18, BYTE4(v19), a4, (uint64_t)sub_100117CF4, v9, v10, v11);
                }
                __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3878, v17);
              }
            }
            __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }
          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3877, v16);
        }
        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_20;
      }
      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3876, v15);
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10011DD48(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(65339, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
          }
          unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3015, v13);
        }
        unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3014, v12);
    }
    __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10011DEC0(int a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  unsigned int v8 = (a1 << 15 >> 31) & 0x80000002;
  if ((a1 & 0x40000) != 0) {
    unsigned int v8 = (a1 << 15 >> 31) & 2 | 0x80000004;
  }
  if ((a1 & 0x100000) != 0) {
    v8 |= 0x80000001;
  }
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v12) - WORD2(v12) > 3)
    {
      if (BYTE6(v12) == 2)
      {
        int v9 = v8 | a1 & 0x15000002;
        *(unsigned char *)(v11 + WORD2(v12)) = v9;
        *(unsigned char *)(v11 + WORD2(v12) + 1) = BYTE1(v8);
        *(unsigned char *)(v11 + WORD2(v12) + 2) = BYTE2(v8);
        *(unsigned char *)(v11 + WORD2(v12) + 3) = HIBYTE(v9);
        WORD2(v12) += 4;
        return sub_10001BCBC(65345, v11, BYTE4(v12), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
      }
      __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_14:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1095, v10);
    }
    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_10011E018(int a1, int a2, uint64_t a3)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t result = sub_100059D70(&v17);
  if (!result)
  {
    if (HIBYTE(v18))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v18) - WORD2(v18) > 3)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = a1;
        *(unsigned char *)(v17 + WORD2(v18) + 2) = BYTE2(a1);
        *(unsigned char *)(v17 + WORD2(v18) + 3) = HIBYTE(a1);
        unsigned __int16 v10 = WORD2(v18) + 4;
        WORD2(v18) += 4;
        if (HIBYTE(v18))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v18) - v10 > 3)
        {
          if (BYTE6(v18) == 2)
          {
            *(unsigned char *)(v17 + v10) = a2;
            *(unsigned char *)(v17 + WORD2(v18) + 1) = BYTE1(a2);
            *(unsigned char *)(v17 + WORD2(v18) + 2) = BYTE2(a2);
            *(unsigned char *)(v17 + WORD2(v18) + 3) = HIBYTE(a2);
            unsigned __int16 v11 = WORD2(v18) + 4;
            WORD2(v18) += 4;
            if (HIBYTE(v18))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v18) - v11 > 3)
            {
              if (BYTE6(v18) == 2)
              {
                *(unsigned char *)(v17 + v11) = 0;
                *(_WORD *)(v17 + WORD2(v18) + 1) = 0;
                *(unsigned char *)(v17 + WORD2(v18) + 3) = 0;
                unsigned __int16 v12 = WORD2(v18) + 4;
                WORD2(v18) += 4;
                if (HIBYTE(v18))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v18) - v12 > 3)
                {
                  if (BYTE6(v18) == 2)
                  {
                    *(unsigned char *)(v17 + v12) = 0;
                    *(_WORD *)(v17 + WORD2(v18) + 1) = 0;
                    *(unsigned char *)(v17 + WORD2(v18) + 3) = 0;
                    WORD2(v18) += 4;
                    return sub_10001BCBC(64957, v17, BYTE4(v18), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
                  }
                  uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1115, v16);
                }
                uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_31;
              }
              uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1114, v15);
            }
            uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_27;
          }
          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1113, v14);
        }
        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_23;
      }
      unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1112, v13);
    }
    unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10011E35C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (a1) {
    char v11 = 2;
  }
  else {
    char v11 = 0;
  }
  if (!result)
  {
    if (HIBYTE(v23))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v12 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(unsigned char *)(v22 + v12) = v11;
          if (HIBYTE(v23))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v23) - WORD2(v23) > 5)
          {
            if (BYTE6(v23) == 2)
            {
              sub_100008A18(v22 + WORD2(v23), a2, 6uLL);
              unsigned __int16 v13 = WORD2(v23) + 6;
              WORD2(v23) += 6;
              uint64_t v14 = v22;
              if (HIBYTE(v23))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                int v15 = 0;
              }
              else
              {
                int v15 = WORD1(v23) - v13;
              }
              if (v15 < a4)
              {
                uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= (IrkLength)";
              }
              else
              {
                if (BYTE6(v23) == 2)
                {
                  sub_100008A18(v14 + v13, a3, a4);
                  WORD2(v23) += a4;
                  return sub_10001BCBC(65279, v22, BYTE4(v23), a5, (uint64_t)sub_100117CF4, v16, v17, v18);
                }
                uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              }
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1196, v21);
            }
            unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1195, v20);
          }
          unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_25;
        }
        uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_21:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1194, v19);
      }
    }
    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_10011E578(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (a1) {
    char v7 = 3;
  }
  else {
    char v7 = 1;
  }
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v8) = v7;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v15) - WORD2(v15) > 5)
          {
            if (BYTE6(v15) == 2)
            {
              sub_100008A18(v14 + WORD2(v15), a2, 6uLL);
              WORD2(v15) += 6;
              return sub_10001BCBC(65279, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v9, v10, v11);
            }
            unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1216, v13);
          }
          unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1215, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10011E6F4(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65274, v6, BYTE4(v7), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_10011E750(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t result = sub_100059D70(&v17);
  if (!result)
  {
    if (HIBYTE(v18))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v7 = WORD2(v18);
      if (WORD1(v18) > WORD2(v18))
      {
        if (BYTE6(v18) == 2)
        {
          ++WORD2(v18);
          *(unsigned char *)(v17 + v7) = a1;
          v16[0] = BYTE5(a2);
          v16[1] = BYTE4(a2);
          void v16[2] = BYTE3(a2);
          v16[3] = BYTE2(a2);
          v16[4] = BYTE1(a2);
          v16[5] = a2;
          if (HIBYTE(v18))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v18) - WORD2(v18) > 5)
          {
            if (BYTE6(v18) == 2)
            {
              sub_100008A18(v17 + WORD2(v18), (uint64_t)v16, 6uLL);
              __int16 v11 = WORD2(v18);
              unsigned __int16 v12 = WORD2(v18) + 6;
              WORD2(v18) += 6;
              if (HIBYTE(v18))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v18) > v12)
              {
                if (BYTE6(v18) == 2)
                {
                  WORD2(v18) = v11 + 7;
                  *(unsigned char *)(v17 + v12) = BYTE6(a2);
                  return sub_10001BCBC(65312, v17, BYTE4(v18), a3, (uint64_t)sub_100117CF4, v8, v9, v10);
                }
                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1245, v15);
              }
              uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }
            uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1244, v14);
          }
          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }
        unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1241, v13);
      }
    }
    unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10011E968(uint64_t a1)
{
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t result = sub_100059D70(&v19);
  if (!result)
  {
    if (HIBYTE(v20))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v6 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20))
      {
        if (BYTE6(v20) == 2)
        {
          ++WORD2(v20);
          *(unsigned char *)(v19 + v6) = 2;
          if (HIBYTE(v20))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v7 = WORD2(v20);
            if (WORD1(v20) > WORD2(v20))
            {
              if (BYTE6(v20) == 2)
              {
                ++WORD2(v20);
                *(unsigned char *)(v19 + v7) = 1;
                if (HIBYTE(v20))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v8 = WORD2(v20);
                  if (WORD1(v20) > WORD2(v20))
                  {
                    if (BYTE6(v20) == 2)
                    {
                      ++WORD2(v20);
                      *(unsigned char *)(v19 + v8) = 2;
                      if (HIBYTE(v20))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v9 = WORD2(v20);
                        if (WORD1(v20) > WORD2(v20))
                        {
                          if (BYTE6(v20) == 2)
                          {
                            ++WORD2(v20);
                            *(unsigned char *)(v19 + v9) = 0;
                            if (HIBYTE(v20))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else if (WORD1(v20) - WORD2(v20) > 1)
                            {
                              if (BYTE6(v20) == 2)
                              {
                                *(_WORD *)(v19 + WORD2(v20)) = 0;
                                unsigned __int16 v10 = WORD2(v20) + 2;
                                WORD2(v20) += 2;
                                if (HIBYTE(v20))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }
                                else if (WORD1(v20) - v10 > 3)
                                {
                                  if (BYTE6(v20) == 2)
                                  {
                                    *(unsigned char *)(v19 + v10) = -1;
                                    *(unsigned char *)(v19 + WORD2(v20) + 1) = -1;
                                    *(unsigned char *)(v19 + WORD2(v20) + 2) = -1;
                                    *(unsigned char *)(v19 + WORD2(v20) + 3) = -1;
                                    unsigned __int16 v11 = WORD2(v20) + 4;
                                    WORD2(v20) += 4;
                                    if (HIBYTE(v20))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else if (WORD1(v20) - v11 > 3)
                                    {
                                      if (BYTE6(v20) == 2)
                                      {
                                        *(unsigned char *)(v19 + v11) = -1;
                                        *(unsigned char *)(v19 + WORD2(v20) + 1) = -1;
                                        *(unsigned char *)(v19 + WORD2(v20) + 2) = -1;
                                        *(unsigned char *)(v19 + WORD2(v20) + 3) = -1;
                                        WORD2(v20) += 4;
                                        return sub_10001BCBC(64998, v19, BYTE4(v20), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
                                      }
                                      uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1269, v18);
                                    }
                                    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                    goto LABEL_52;
                                  }
                                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1268, v17);
                                }
                                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                goto LABEL_48;
                              }
                              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1267, v16);
                            }
                            uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= (2)";
                            goto LABEL_44;
                          }
                          uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1266, v15);
                        }
                      }
                      uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_40;
                    }
                    uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1265, v14);
                  }
                }
                uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }
              unsigned __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1264, v13);
            }
          }
          unsigned __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }
        unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1263, v12);
      }
    }
    unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_10011ED94(void (*a1)(void))
{
  return 0;
}

uint64_t sub_10011EDB8(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t result = sub_100059D70(&v31);
  if (!result)
  {
    if (a3)
    {
      if (HIBYTE(v32))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
      }
      else
      {
        unsigned int v12 = WORD2(v32);
        if (WORD1(v32) > WORD2(v32))
        {
          if (BYTE6(v32) == 2)
          {
            char v13 = 0;
            goto LABEL_11;
          }
          uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_68:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1296, v28);
        }
      }
      uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
      goto LABEL_68;
    }
    if (HIBYTE(v32))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      unsigned int v12 = WORD2(v32);
      if (WORD1(v32) > WORD2(v32))
      {
        if (BYTE6(v32) == 2)
        {
          char v13 = 1;
LABEL_11:
          WORD2(v32) = v12 + 1;
          *(unsigned char *)(v31 + v12) = v13;
          if (a2 != 2)
          {
            if (a2 != 16) {
              sub_10025B8C0();
            }
            if (HIBYTE(v32))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              unsigned int v14 = WORD2(v32);
              if (WORD1(v32) > WORD2(v32))
              {
                char v15 = BYTE6(v32);
                if (BYTE6(v32) != 2)
                {
                  uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                  goto LABEL_64;
                }
LABEL_22:
                WORD2(v32) = v14 + 1;
                *(unsigned char *)(v31 + v14) = v15;
                if (HIBYTE(v32))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v17 = WORD2(v32);
                  if (WORD1(v32) > WORD2(v32))
                  {
                    if (BYTE6(v32) == 2)
                    {
                      ++WORD2(v32);
                      *(unsigned char *)(v31 + v17) = 2;
                      if (HIBYTE(v32))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v18 = WORD2(v32);
                        if (WORD1(v32) > WORD2(v32))
                        {
                          if (BYTE6(v32) == 2)
                          {
                            ++WORD2(v32);
                            *(unsigned char *)(v31 + v18) = 0;
                            if (a2)
                            {
                              uint64_t v19 = a2;
                              while (!HIBYTE(v32))
                              {
                                uint64_t v20 = WORD2(v32);
                                if (WORD1(v32) <= WORD2(v32)) {
                                  goto LABEL_43;
                                }
                                if (BYTE6(v32) != 2)
                                {
                                  uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_45;
                                }
                                char v21 = *(unsigned char *)(a1 - 1 + v19--);
                                ++WORD2(v32);
                                *(unsigned char *)(v31 + v20) = v21;
                                if ((unint64_t)(v19 + 1) <= 1) {
                                  goto LABEL_34;
                                }
                              }
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_43:
                              uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_45:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1312, v23);
                            }
LABEL_34:
                            if (HIBYTE(v32))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else if (WORD1(v32) - WORD2(v32) > 3)
                            {
                              if (BYTE6(v32) == 2)
                              {
                                *(unsigned char *)(v31 + WORD2(v32)) = -1;
                                *(unsigned char *)(v31 + WORD2(v32) + 1) = -1;
                                *(unsigned char *)(v31 + WORD2(v32) + 2) = -1;
                                *(unsigned char *)(v31 + WORD2(v32) + 3) = -1;
                                unsigned __int16 v22 = WORD2(v32) + 4;
                                WORD2(v32) += 4;
                                if (HIBYTE(v32))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }
                                else if (WORD1(v32) - v22 > 3)
                                {
                                  if (BYTE6(v32) == 2)
                                  {
                                    *(unsigned char *)(v31 + v22) = -1;
                                    *(unsigned char *)(v31 + WORD2(v32) + 1) = -1;
                                    *(unsigned char *)(v31 + WORD2(v32) + 2) = -1;
                                    *(unsigned char *)(v31 + WORD2(v32) + 3) = -1;
                                    WORD2(v32) += 4;
                                    return sub_10001BCBC(64998, v31, BYTE4(v32), a4, (uint64_t)sub_100117CF4, v9, v10, v11);
                                  }
                                  uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1316, v27);
                                }
                                uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                goto LABEL_61;
                              }
                              uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1315, v26);
                            }
                            uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                            goto LABEL_57;
                          }
                          int v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1309, v25);
                        }
                      }
                      int v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_53;
                    }
                    uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1308, v24);
                  }
                }
                uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_49;
              }
            }
            uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_64:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1303, v16);
          }
          if (HIBYTE(v32))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            unsigned int v14 = WORD2(v32);
            if (WORD1(v32) > WORD2(v32))
            {
              if (BYTE6(v32) == 2)
              {
                char v15 = 1;
                goto LABEL_22;
              }
              uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_76:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1306, v30);
            }
          }
          uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_76;
        }
        uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_72:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1298, v29);
      }
    }
    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_72;
  }
  return result;
}

uint64_t sub_10011F2FC(uint64_t a1)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(unsigned char *)(v9 + WORD2(v10)) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 1) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 2) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 3) = -1;
        unsigned __int16 v6 = WORD2(v10) + 4;
        WORD2(v10) += 4;
        if (HIBYTE(v10))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v10) - v6 > 3)
        {
          if (BYTE6(v10) == 2)
          {
            *(unsigned char *)(v9 + v6) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 1) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 2) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 3) = -1;
            WORD2(v10) += 4;
            return sub_10001BCBC(64993, v9, BYTE4(v10), a1, (uint64_t)sub_10012F004, v3, v4, v5);
          }
          uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1428, v8);
        }
        uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }
      uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1427, v7);
    }
    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10011F4BC(const void *a1, int a2, char a3, uint64_t a4)
{
  LODWORD(v6) = a2;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t result = sub_100059D70(&v21);
  if (v6 >= 0x15) {
    size_t v6 = 21;
  }
  else {
    size_t v6 = v6;
  }
  if (result) {
    return result;
  }
  uint64_t v9 = v21;
  uint64_t v10 = WORD2(v22);
  if (HIBYTE(v22))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v11 = 0;
  }
  else
  {
    int v11 = WORD1(v22) - WORD2(v22);
  }
  if (v11 < (int)v6)
  {
    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_25;
  }
  if (BYTE6(v22) != 2)
  {
    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1450, v19);
  }
  memmove((void *)(v9 + v10), a1, v6);
  WORD2(v22) += v6;
  if (WORD1(v22) <= 0x15u) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1451, "(size_t)(22) <= (size_t)((bs).__size)");
  }
  WORD2(v22) = 22;
  uint64_t v12 = v21;
  if (HIBYTE(v22))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned int v13 = 0;
  }
  else
  {
    unsigned int v13 = WORD1(v22) - 22;
  }
  if (v13 < v6)
  {
    uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_29;
  }
  if (BYTE6(v22) != 2)
  {
    uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1452, v20);
  }
  memset((void *)(v12 + 22), 255, v6);
  WORD2(v22) += v6;
  unsigned int v17 = WORD1(v22);
  if (WORD1(v22) <= 0x2Au) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1453, "(size_t)(43) <= (size_t)((bs).__size)");
  }
  WORD2(v22) = 43;
  if (HIBYTE(v22))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_32:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1454, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  if (WORD1(v22) <= 0x2Bu) {
    goto LABEL_32;
  }
  uint64_t v18 = v21;
  WORD2(v22) = 44;
  *(unsigned char *)(v21 + 43) = a3;
  if ((v17 & 0xFFFC) == 0x2C) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1455, "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_DWORD *)(v18 + 44) = -1;
  WORD2(v22) = 48;
  if (v17 <= 0x33) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1456, "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_DWORD *)(v18 + 48) = -1;
  WORD2(v22) = 52;
  return sub_10001BCBC(64992, v18, 52, a4, (uint64_t)sub_100117CF4, v14, v15, v16);
}

uint64_t sub_10011F764(const void *a1, int a2, uint64_t a3)
{
  LODWORD(v4) = a2;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t result = sub_100059D70(&v19);
  if (v4 >= 0x15) {
    size_t v4 = 21;
  }
  else {
    size_t v4 = v4;
  }
  if (result) {
    return result;
  }
  uint64_t v7 = v19;
  uint64_t v8 = WORD2(v20);
  if (HIBYTE(v20))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v9 = 0;
  }
  else
  {
    int v9 = WORD1(v20) - WORD2(v20);
  }
  if (v9 < (int)v4)
  {
    unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_24;
  }
  if (BYTE6(v20) != 2)
  {
    unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1477, v17);
  }
  memmove((void *)(v7 + v8), a1, v4);
  WORD2(v20) += v4;
  if (WORD1(v20) <= 0x15u) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1478, "(size_t)(22) <= (size_t)((bs).__size)");
  }
  WORD2(v20) = 22;
  uint64_t v10 = v19;
  if (HIBYTE(v20))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned int v11 = 0;
  }
  else
  {
    unsigned int v11 = WORD1(v20) - 22;
  }
  if (v11 < v4)
  {
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_28;
  }
  if (BYTE6(v20) != 2)
  {
    uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1479, v18);
  }
  memset((void *)(v10 + 22), 255, v4);
  WORD2(v20) += v4;
  int v15 = WORD1(v20);
  if (WORD1(v20) <= 0x2Au) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1480, "(size_t)(43) <= (size_t)((bs).__size)");
  }
  WORD2(v20) = 43;
  if (HIBYTE(v20))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_31:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1481, "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  if (WORD1(v20) <= 0x2Eu) {
    goto LABEL_31;
  }
  uint64_t v16 = v19;
  *(_DWORD *)(v19 + 43) = -1;
  WORD2(v20) = 47;
  if ((v15 - 51) >= 0xFFFFFFFC) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1482, "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(_DWORD *)(v16 + 47) = -1;
  WORD2(v20) = 51;
  return sub_10001BCBC(64955, v16, 51, a3, (uint64_t)sub_100117CF4, v12, v13, v14);
}

uint64_t sub_10011F9DC(uint64_t a1)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(unsigned char *)(v9 + WORD2(v10)) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 1) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 2) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 3) = -1;
        unsigned __int16 v6 = WORD2(v10) + 4;
        WORD2(v10) += 4;
        if (HIBYTE(v10))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v10) - v6 > 3)
        {
          if (BYTE6(v10) == 2)
          {
            *(unsigned char *)(v9 + v6) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 1) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 2) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 3) = -1;
            WORD2(v10) += 4;
            return sub_10001BCBC(64985, v9, BYTE4(v10), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
          }
          uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1502, v8);
        }
        uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }
      uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1501, v7);
    }
    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10011FB9C(const void *a1, int a2, const void *a3, int a4, char a5, char a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  LODWORD(v13) = a4;
  LODWORD(v15) = a2;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t result = sub_100059D70(&v39);
  if (v15 >= 0x16) {
    size_t v15 = 22;
  }
  else {
    size_t v15 = v15;
  }
  if (v13 >= 0x16) {
    size_t v13 = 22;
  }
  else {
    size_t v13 = v13;
  }
  if (result) {
    return result;
  }
  if (HIBYTE(v40))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_43;
  }
  uint64_t v18 = WORD2(v40);
  if (WORD1(v40) <= WORD2(v40))
  {
LABEL_43:
    unsigned __int16 v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_45;
  }
  if (BYTE6(v40) != 2)
  {
    unsigned __int16 v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1836, v34);
  }
  if (v13 >= v15) {
    char v19 = v15;
  }
  else {
    char v19 = v13;
  }
  ++WORD2(v40);
  *(unsigned char *)(v39 + v18) = v19;
  uint64_t v20 = v39;
  uint64_t v21 = WORD2(v40);
  if (HIBYTE(v40))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v22 = 0;
  }
  else
  {
    int v22 = WORD1(v40) - WORD2(v40);
  }
  if (v22 < (int)v15)
  {
    unsigned __int16 v35 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_48;
  }
  if (BYTE6(v40) != 2)
  {
    unsigned __int16 v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1837, v35);
  }
  memmove((void *)(v20 + v21), a1, v15);
  WORD2(v40) += v15;
  if (WORD1(v40) <= 0x16u) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1838, "(size_t)(23) <= (size_t)((bs).__size)");
  }
  WORD2(v40) = 23;
  uint64_t v23 = v39;
  if (HIBYTE(v40))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    unsigned int v24 = 0;
  }
  else
  {
    unsigned int v24 = WORD1(v40) - 23;
  }
  if (v24 < v13)
  {
    unsigned __int8 v36 = "ByteStream_NumReadBytesAvail(bs) >= (maskLen)";
    goto LABEL_52;
  }
  if (BYTE6(v40) != 2)
  {
    unsigned __int8 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1839, v36);
  }
  memmove((void *)(v23 + 23), a3, v13);
  WORD2(v40) += v13;
  unsigned int v28 = WORD1(v40);
  if (WORD1(v40) <= 0x2Cu) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1840, "(size_t)(45) <= (size_t)((bs).__size)");
  }
  WORD2(v40) = 45;
  if (HIBYTE(v40))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_55;
  }
  if (WORD1(v40) == 45)
  {
LABEL_55:
    uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_57;
  }
  if (BYTE6(v40) != 2)
  {
    uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1841, v37);
  }
  uint64_t v29 = v39;
  WORD2(v40) = 46;
  *(unsigned char *)(v39 + 45) = a5;
  if (v28 <= 0x2E) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1842, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  unsigned int v30 = 47;
  WORD2(v40) = 47;
  *(unsigned char *)(v29 + 46) = a6;
  if (a7)
  {
    if (v28 <= 0x30) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1844, "ByteStream_NumReadBytesAvail(bs) >= 2");
    }
    *(_WORD *)(v29 + 47) = 0;
    unsigned int v30 = 49;
    WORD2(v40) = 49;
  }
  if ((int)(v28 - v30) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1845, "ByteStream_NumReadBytesAvail(bs) >= 4");
  }
  *(unsigned char *)(v29 + v30) = -1;
  *(unsigned char *)(v39 + WORD2(v40) + 1) = -1;
  *(unsigned char *)(v39 + WORD2(v40) + 2) = -1;
  *(unsigned char *)(v39 + WORD2(v40) + 3) = -1;
  unsigned __int16 v31 = WORD2(v40) + 4;
  WORD2(v40) += 4;
  if (HIBYTE(v40))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_61;
  }
  if (WORD1(v40) - v31 <= 3)
  {
LABEL_61:
    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_63;
  }
  if (BYTE6(v40) != 2)
  {
    uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1846, v38);
  }
  *(unsigned char *)(v39 + v31) = -1;
  *(unsigned char *)(v39 + WORD2(v40) + 1) = -1;
  *(unsigned char *)(v39 + WORD2(v40) + 2) = -1;
  *(unsigned char *)(v39 + WORD2(v40) + 3) = -1;
  unsigned __int8 v32 = BYTE4(v40) + 4;
  WORD2(v40) += 4;
  if (a7) {
    __int16 v33 = -553;
  }
  else {
    __int16 v33 = -554;
  }
  return sub_10001BCBC(v33, v39, v32, a10, (uint64_t)sub_100117CF4, v25, v26, v27);
}

uint64_t sub_10012002C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t result = sub_100059D70(&v19);
  if (!result)
  {
    if (HIBYTE(v20))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v7 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20))
      {
        if (BYTE6(v20) == 2)
        {
          ++WORD2(v20);
          *(unsigned char *)(v19 + v7) = 12;
          v18[0] = BYTE5(a1);
          v18[1] = BYTE4(a1);
          v18[2] = BYTE3(a1);
          v18[3] = BYTE2(a1);
          void v18[4] = BYTE1(a1);
          v18[5] = a1;
          if (HIBYTE(v20))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v20) - WORD2(v20) > 5)
          {
            if (BYTE6(v20) == 2)
            {
              sub_100008A18(v19 + WORD2(v20), (uint64_t)v18, 6uLL);
              __int16 v11 = WORD2(v20);
              unsigned __int16 v12 = WORD2(v20) + 6;
              WORD2(v20) += 6;
              if (HIBYTE(v20))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v20) > v12)
              {
                if (BYTE6(v20) == 2)
                {
                  WORD2(v20) = v11 + 7;
                  *(unsigned char *)(v19 + v12) = BYTE6(a1);
                  if (HIBYTE(v20))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v13 = WORD2(v20);
                    if (WORD1(v20) > WORD2(v20))
                    {
                      if (BYTE6(v20) == 2)
                      {
                        ++WORD2(v20);
                        *(unsigned char *)(v19 + v13) = a2;
                        return sub_10001BCBC(65017, v19, BYTE4(v20), a3, (uint64_t)sub_10012F004, v8, v9, v10);
                      }
                      unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2059, v17);
                    }
                  }
                  unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }
                uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2058, v16);
              }
              uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_27;
            }
            size_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2057, v15);
          }
          size_t v15 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_23;
        }
        uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2054, v14);
      }
    }
    uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001202C0(uint64_t a1)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(unsigned char *)(v9 + WORD2(v10)) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 1) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 2) = -1;
        *(unsigned char *)(v9 + WORD2(v10) + 3) = -1;
        unsigned __int16 v6 = WORD2(v10) + 4;
        WORD2(v10) += 4;
        if (HIBYTE(v10))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v10) - v6 > 3)
        {
          if (BYTE6(v10) == 2)
          {
            *(unsigned char *)(v9 + v6) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 1) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 2) = -1;
            *(unsigned char *)(v9 + WORD2(v10) + 3) = -1;
            WORD2(v10) += 4;
            return sub_10001BCBC(64946, v9, BYTE4(v10), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
          }
          uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1871, v8);
        }
        uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }
      uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1870, v7);
    }
    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100120480(char a1, uint64_t a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(unsigned char *)(v14 + WORD2(v15)) = -1;
        *(unsigned char *)(v14 + WORD2(v15) + 1) = -1;
        __int16 v8 = WORD2(v15);
        unsigned __int16 v9 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v15) > v9)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v8 + 3;
            *(unsigned char *)(v14 + v9) = a1;
            if (HIBYTE(v15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              uint64_t v10 = WORD2(v15);
              if (WORD1(v15) > WORD2(v15))
              {
                if (BYTE6(v15) == 2)
                {
                  ++WORD2(v15);
                  *(unsigned char *)(v14 + v10) = 2;
                  return sub_10001BCBC(64958, v14, BYTE4(v15), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                }
                uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1180, v13);
              }
            }
            uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }
          unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1179, v12);
        }
        unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_20;
      }
      __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1178, v11);
    }
    __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100120668(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t result = sub_100059D70(&v24);
  if (!result)
  {
    if (HIBYTE(v25))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v5 = WORD2(v25);
      if (WORD1(v25) > WORD2(v25))
      {
        if (BYTE6(v25) == 2)
        {
          char v6 = *(unsigned char *)(a1 + 20);
          ++WORD2(v25);
          *(unsigned char *)(v24 + v5) = v6;
          if (HIBYTE(v25))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v25) - WORD2(v25) > 5)
          {
            if (BYTE6(v25) == 2)
            {
              sub_100008A18(v24 + WORD2(v25), *(void *)a1, 6uLL);
              unsigned __int16 v10 = WORD2(v25) + 6;
              WORD2(v25) += 6;
              if (HIBYTE(v25))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v25) - v10 > 1)
              {
                if (BYTE6(v25) == 2)
                {
                  *(unsigned char *)(v24 + v10) = *(unsigned char *)(a1 + 8);
                  *(unsigned char *)(v24 + WORD2(v25) + 1) = *(unsigned char *)(a1 + 9);
                  unsigned __int16 v11 = WORD2(v25) + 2;
                  WORD2(v25) += 2;
                  if (HIBYTE(v25))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v25) - v11 > 1)
                  {
                    if (BYTE6(v25) == 2)
                    {
                      *(unsigned char *)(v24 + v11) = *(unsigned char *)(a1 + 10);
                      *(unsigned char *)(v24 + WORD2(v25) + 1) = *(unsigned char *)(a1 + 11);
                      unsigned __int16 v12 = WORD2(v25) + 2;
                      WORD2(v25) += 2;
                      if (HIBYTE(v25))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else if (WORD1(v25) - v12 > 1)
                      {
                        if (BYTE6(v25) == 2)
                        {
                          *(unsigned char *)(v24 + v12) = *(unsigned char *)(a1 + 12);
                          *(unsigned char *)(v24 + WORD2(v25) + 1) = *(unsigned char *)(a1 + 13);
                          unsigned __int16 v13 = WORD2(v25) + 2;
                          WORD2(v25) += 2;
                          if (HIBYTE(v25))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }
                          else if (WORD1(v25) - v13 > 1)
                          {
                            if (BYTE6(v25) == 2)
                            {
                              *(unsigned char *)(v24 + v13) = *(unsigned char *)(a1 + 14);
                              *(unsigned char *)(v24 + WORD2(v25) + 1) = *(unsigned char *)(a1 + 15);
                              unsigned __int16 v14 = WORD2(v25) + 2;
                              WORD2(v25) += 2;
                              if (HIBYTE(v25))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else if (WORD1(v25) - v14 > 1)
                              {
                                if (BYTE6(v25) == 2)
                                {
                                  *(unsigned char *)(v24 + v14) = *(unsigned char *)(a1 + 16);
                                  *(unsigned char *)(v24 + WORD2(v25) + 1) = *(unsigned char *)(a1 + 17);
                                  unsigned __int16 v15 = WORD2(v25) + 2;
                                  WORD2(v25) += 2;
                                  if (HIBYTE(v25))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }
                                  else if (WORD1(v25) - v15 > 1)
                                  {
                                    if (BYTE6(v25) == 2)
                                    {
                                      *(unsigned char *)(v24 + v15) = *(unsigned char *)(a1 + 18);
                                      *(unsigned char *)(v24 + WORD2(v25) + 1) = *(unsigned char *)(a1 + 19);
                                      WORD2(v25) += 2;
                                      return sub_10001BCBC(65278, v24, BYTE4(v25), a2, (uint64_t)sub_100117CF4, v7, v8, v9);
                                    }
                                    uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1892, v23);
                                  }
                                  uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_59;
                                }
                                int v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1891, v22);
                              }
                              int v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_55;
                            }
                            uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1890, v21);
                          }
                          uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_51;
                        }
                        uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1889, v20);
                      }
                      uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_47;
                    }
                    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1888, v19);
                  }
                  uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_43;
                }
                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1887, v18);
              }
              uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_39;
            }
            unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1886, v17);
          }
          unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_35;
        }
        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1885, v16);
      }
    }
    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_100120B60(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(unsigned char *)(v12 + v5) = BYTE6(a1);
          v11[0] = BYTE5(a1);
          v11[1] = BYTE4(a1);
          v11[2] = BYTE3(a1);
          _OWORD v11[3] = BYTE2(a1);
          v11[4] = BYTE1(a1);
          v11[5] = a1;
          if (HIBYTE(v13))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_100008A18(v12 + WORD2(v13), (uint64_t)v11, 6uLL);
              WORD2(v13) += 6;
              return sub_10001BCBC(64986, v12, BYTE4(v13), a2, (uint64_t)sub_100117CF4, v6, v7, v8);
            }
            unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1913, v10);
          }
          unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1909, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100120CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(unsigned char *)(v12 + v5) = BYTE6(a1);
          v11[0] = BYTE5(a1);
          v11[1] = BYTE4(a1);
          v11[2] = BYTE3(a1);
          _OWORD v11[3] = BYTE2(a1);
          v11[4] = BYTE1(a1);
          v11[5] = a1;
          if (HIBYTE(v13))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_100008A18(v12 + WORD2(v13), (uint64_t)v11, 6uLL);
              WORD2(v13) += 6;
              return sub_10001BCBC(64991, v12, BYTE4(v13), a2, (uint64_t)sub_100117CF4, v6, v7, v8);
            }
            unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1933, v10);
          }
          unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1929, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100120E88(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(64969, v6, BYTE4(v7), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_100120EE4(const void *a1, int a2, const void *a3, int a4, char a5, char a6, int a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, __int16 a15, char a16, char a17, char a18, uint64_t a19)
{
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t result = sub_100059D70(&v64);
  if (result) {
    return result;
  }
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_49;
  }
  uint64_t v28 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_49:
    unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_51;
  }
  if (BYTE6(v65) != 2)
  {
    unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1961, v52);
  }
  ++WORD2(v65);
  *(unsigned char *)(v64 + v28) = a8;
  v63[0] = a14;
  v63[1] = a13;
  v63[2] = a12;
  v63[3] = a11;
  v63[4] = a10;
  v63[5] = a9;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_53;
  }
  if (WORD1(v65) - WORD2(v65) <= 5)
  {
LABEL_53:
    unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_55;
  }
  if (BYTE6(v65) != 2)
  {
    unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1964, v53);
  }
  sub_100008A18(v64 + WORD2(v65), (uint64_t)v63, 6uLL);
  unsigned __int16 v29 = WORD2(v65) + 6;
  WORD2(v65) += 6;
  uint64_t v30 = v64;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v31 = 0;
  }
  else
  {
    int v31 = WORD1(v65) - v29;
  }
  if (v31 < a2)
  {
    int v54 = "ByteStream_NumReadBytesAvail(bs) >= (dataLen)";
    goto LABEL_58;
  }
  if (BYTE6(v65) != 2)
  {
    int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1965, v54);
  }
  memmove((void *)(v30 + v29), a1, a2);
  unsigned __int16 v32 = WORD2(v65) + a2;
  WORD2(v65) += a2;
  uint64_t v33 = v64;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v34 = 0;
  }
  else
  {
    int v34 = WORD1(v65) - v32;
  }
  int v35 = 25 - a2;
  if (v34 < v35)
  {
    BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= (((22)+(3)) - dataLen)";
    goto LABEL_61;
  }
  if (BYTE6(v65) != 2)
  {
    BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1966, v55);
  }
  bzero((void *)(v33 + v32), v35);
  unsigned __int16 v36 = WORD2(v65) + v35;
  WORD2(v65) = v36;
  uint64_t v37 = v64;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v38 = 0;
  }
  else
  {
    int v38 = WORD1(v65) - v36;
  }
  if (v38 < a4)
  {
    unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= (maskLen)";
    goto LABEL_64;
  }
  if (BYTE6(v65) != 2)
  {
    unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_64:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1967, v56);
  }
  memmove((void *)(v37 + v36), a3, a4);
  unsigned __int16 v39 = WORD2(v65) + a4;
  WORD2(v65) += a4;
  uint64_t v40 = v64;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    int v41 = 0;
  }
  else
  {
    int v41 = WORD1(v65) - v39;
  }
  int v42 = 25 - a4;
  if (v41 < v42)
  {
    uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= (((22)+(3)) - maskLen)";
    goto LABEL_67;
  }
  if (BYTE6(v65) != 2)
  {
    uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1968, v57);
  }
  bzero((void *)(v40 + v39), v42);
  unsigned __int16 v46 = WORD2(v65) + v42;
  WORD2(v65) += v42;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_69;
  }
  if (WORD1(v65) <= v46)
  {
LABEL_69:
    uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_71;
  }
  if (BYTE6(v65) != 2)
  {
    uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1969, v58);
  }
  WORD2(v65) = v46 + 1;
  *(unsigned char *)(v64 + v46) = a6;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_73;
  }
  uint64_t v47 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_73:
    uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_75;
  }
  if (BYTE6(v65) != 2)
  {
    uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1970, v59);
  }
  ++WORD2(v65);
  *(unsigned char *)(v64 + v47) = a5;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_77;
  }
  uint64_t v48 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_77:
    uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_79;
  }
  if (BYTE6(v65) != 2)
  {
    uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1971, v60);
  }
  ++WORD2(v65);
  *(unsigned char *)(v64 + v48) = a16;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_81;
  }
  uint64_t v49 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_81:
    uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_83;
  }
  if (BYTE6(v65) != 2)
  {
    uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1972, v61);
  }
  ++WORD2(v65);
  *(unsigned char *)(v64 + v49) = a17;
  if (HIBYTE(v65))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_85;
  }
  uint64_t v50 = WORD2(v65);
  if (WORD1(v65) <= WORD2(v65))
  {
LABEL_85:
    uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_87;
  }
  if (BYTE6(v65) != 2)
  {
    uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1973, v62);
  }
  ++WORD2(v65);
  *(unsigned char *)(v64 + v50) = a18;
  if (a7) {
    __int16 v51 = -83;
  }
  else {
    __int16 v51 = -84;
  }
  return sub_10001BCBC(v51, v64, BYTE4(v65), a19, (uint64_t)sub_100117CF4, v43, v44, v45);
}

uint64_t sub_100121564(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65341, v6, BYTE4(v7), a1, (uint64_t)sub_10012F004, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1001215C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t result = sub_100059D70(&v8);
  if (!result) {
    return sub_10001BCBC(64924, v8, BYTE4(v9), a3, (uint64_t)sub_10012F114, v5, v6, v7);
  }
  return result;
}

uint64_t sub_10012161C(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v11) = a2;
                return sub_10001BCBC(65064, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
              }
              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3824, v13);
            }
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3823, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100121778(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t result = sub_100059D70(&v19);
  if (!result)
  {
    if (HIBYTE(v20))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v9 = WORD2(v20);
      if (WORD1(v20) > WORD2(v20))
      {
        if (BYTE6(v20) == 2)
        {
          ++WORD2(v20);
          *(unsigned char *)(v19 + v9) = a1;
          v18[0] = BYTE5(a2);
          v18[1] = BYTE4(a2);
          v18[2] = BYTE3(a2);
          v18[3] = BYTE2(a2);
          void v18[4] = BYTE1(a2);
          v18[5] = a2;
          if (HIBYTE(v20))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v20) - WORD2(v20) > 5)
          {
            if (BYTE6(v20) == 2)
            {
              sub_100008A18(v19 + WORD2(v20), (uint64_t)v18, 6uLL);
              __int16 v13 = WORD2(v20);
              unsigned __int16 v14 = WORD2(v20) + 6;
              WORD2(v20) += 6;
              if (HIBYTE(v20))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v20) > v14)
              {
                if (BYTE6(v20) == 2)
                {
                  WORD2(v20) = v13 + 7;
                  *(unsigned char *)(v19 + v14) = a3;
                  return sub_10001BCBC(65344, v19, BYTE4(v20), a4, (uint64_t)sub_100117CF4, v10, v11, v12);
                }
                unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2098, v17);
              }
              unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }
            uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2097, v16);
          }
          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_20;
        }
        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2094, v15);
      }
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100121990(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65343, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2112, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100121A68(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t result = sub_100059D70(&v21);
  if (!result)
  {
    if (HIBYTE(v22))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v5 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          char v6 = *(unsigned char *)(a1 + 16);
          ++WORD2(v22);
          *(unsigned char *)(v21 + v5) = v6;
          if (HIBYTE(v22))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v22) - WORD2(v22) > 5)
          {
            if (BYTE6(v22) == 2)
            {
              sub_100008A18(v21 + WORD2(v22), *(void *)(a1 + 8), 6uLL);
              __int16 v10 = WORD2(v22);
              unsigned __int16 v11 = WORD2(v22) + 6;
              WORD2(v22) += 6;
              if (HIBYTE(v22))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v22) > v11)
              {
                if (BYTE6(v22) == 2)
                {
                  char v12 = *(unsigned char *)(a1 + 17);
                  WORD2(v22) = v10 + 7;
                  *(unsigned char *)(v21 + v11) = v12;
                  if (HIBYTE(v22))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v22) > WORD2(v22))
                  {
                    if (BYTE6(v22) == 2)
                    {
                      *(unsigned char *)(v21 + WORD2(v22)) = *(unsigned char *)(a1 + 18);
                      __int16 v13 = WORD2(v22);
                      unsigned __int16 v14 = ++WORD2(v22);
                      if (HIBYTE(v22))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else if (WORD1(v22) > v14)
                      {
                        if (BYTE6(v22) == 2)
                        {
                          char v15 = *(unsigned char *)(a1 + 19);
                          WORD2(v22) = v13 + 2;
                          *(unsigned char *)(v21 + v14) = v15;
                          return sub_10001BCBC(65470, v21, BYTE4(v22), a2, (uint64_t)sub_100117CF4, v7, v8, v9);
                        }
                        uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2131, v20);
                      }
                      uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_38;
                    }
                    uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2130, v19);
                  }
                  uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                  goto LABEL_34;
                }
                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2129, v18);
              }
              uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_30;
            }
            unsigned int v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2128, v17);
          }
          unsigned int v17 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_26;
        }
        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2127, v16);
      }
    }
    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_100121D4C(uint64_t a1, unsigned int a2, unsigned int a3, char a4, char a5, char a6, uint64_t a7)
{
  BOOL v14 = a2 == 2;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t result = sub_100059D70(&v46);
  if (result) {
    return result;
  }
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_60;
  }
  uint64_t v19 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_60:
    unsigned __int16 v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_62;
  }
  if (BYTE6(v47) != 2)
  {
    unsigned __int16 v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1336, v39);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v19) = a3;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_64;
  }
  if (WORD1(v47) - WORD2(v47) <= 5)
  {
LABEL_64:
    uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= (6)";
    goto LABEL_66;
  }
  if (BYTE6(v47) != 2)
  {
    uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1337, v40);
  }
  uint64_t v20 = v46 + WORD2(v47);
  *(_WORD *)(v20 + 4) = 0;
  *(_DWORD *)uint64_t v20 = 0;
  __int16 v21 = WORD2(v47);
  unsigned __int16 v22 = WORD2(v47) + 6;
  WORD2(v47) += 6;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_68;
  }
  if (WORD1(v47) <= v22)
  {
LABEL_68:
    int v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_70;
  }
  if (BYTE6(v47) != 2)
  {
    int v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1338, v41);
  }
  WORD2(v47) = v21 + 7;
  *(unsigned char *)(v46 + v22) = 2;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_72;
  }
  uint64_t v23 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_72:
    int v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_74;
  }
  if (BYTE6(v47) != 2)
  {
    int v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1339, v42);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v23) = 2 * v14;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_76;
  }
  uint64_t v24 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_76:
    uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_78;
  }
  if (BYTE6(v47) != 2)
  {
    uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1341, v43);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v24) = a4;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_80;
  }
  uint64_t v25 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_80:
    uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_82;
  }
  if (BYTE6(v47) != 2)
  {
    uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1342, v44);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v25) = a5;
  if (HIBYTE(v47))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_84;
  }
  uint64_t v26 = WORD2(v47);
  if (WORD1(v47) <= WORD2(v47))
  {
LABEL_84:
    uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_86;
  }
  if (BYTE6(v47) != 2)
  {
    uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1343, v45);
  }
  ++WORD2(v47);
  *(unsigned char *)(v46 + v26) = a6;
  if (a3 <= 1)
  {
    if (a2 == 16 || a2 == 2)
    {
      if (a2 == 2)
      {
        uint64_t v27 = 1;
        while (!HIBYTE(v47))
        {
          uint64_t v28 = WORD2(v47);
          if (WORD1(v47) <= WORD2(v47)) {
            goto LABEL_52;
          }
          if (BYTE6(v47) != 2)
          {
            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_54;
          }
          char v29 = *(unsigned char *)(a1 + v27);
          ++WORD2(v47);
          *(unsigned char *)(v46 + v28) = v29;
          if (--v27 == -1)
          {
            int v30 = -14;
            while (!HIBYTE(v47))
            {
              uint64_t v31 = WORD2(v47);
              if (WORD1(v47) <= WORD2(v47)) {
                goto LABEL_56;
              }
              if (BYTE6(v47) != 2)
              {
                int v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_58;
              }
              ++WORD2(v47);
              *(unsigned char *)(v46 + v31) = 0;
              if (__CFADD__(v30++, 1)) {
                return sub_10001BCBC(64998, v46, BYTE4(v47), a7, (uint64_t)sub_100117CF4, v16, v17, v18);
              }
            }
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_56:
            int v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_58:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1353, v38);
          }
        }
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_52:
        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_54:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1350, v37);
      }
      goto LABEL_40;
    }
    sub_10025B8C0();
    if (a2)
    {
LABEL_40:
      uint64_t v33 = a2;
      while (!HIBYTE(v47))
      {
        uint64_t v34 = WORD2(v47);
        if (WORD1(v47) <= WORD2(v47)) {
          goto LABEL_48;
        }
        if (BYTE6(v47) != 2)
        {
          unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_50;
        }
        char v35 = *(unsigned char *)(a1 - 1 + v33--);
        ++WORD2(v47);
        *(unsigned char *)(v46 + v34) = v35;
        if ((unint64_t)(v33 + 1) <= 1) {
          return sub_10001BCBC(64998, v46, BYTE4(v47), a7, (uint64_t)sub_100117CF4, v16, v17, v18);
        }
      }
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_48:
      unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_50:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1358, v36);
    }
  }
  return sub_10001BCBC(64998, v46, BYTE4(v47), a7, (uint64_t)sub_100117CF4, v16, v17, v18);
}

uint64_t sub_100122310(uint64_t a1, unsigned int a2, unsigned int a3, char a4, char a5, char a6, int a7, const void *a8, void *__src, uint64_t a10)
{
  LODWORD(v11) = a7;
  BOOL v18 = a2 == 2;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t result = sub_100059D70(&v60);
  if (!result)
  {
    if (HIBYTE(v61))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v23 = WORD2(v61);
      if (WORD1(v61) > WORD2(v61))
      {
        if (BYTE6(v61) == 2)
        {
          ++WORD2(v61);
          *(unsigned char *)(v60 + v23) = a3;
          if (HIBYTE(v61))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v61) - WORD2(v61) > 5)
          {
            if (BYTE6(v61) == 2)
            {
              uint64_t v24 = v60 + WORD2(v61);
              *(_WORD *)(v24 + 4) = 0;
              *(_DWORD *)uint64_t v24 = 0;
              __int16 v25 = WORD2(v61);
              unsigned __int16 v26 = WORD2(v61) + 6;
              WORD2(v61) += 6;
              if (HIBYTE(v61))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v61) > v26)
              {
                if (BYTE6(v61) == 2)
                {
                  WORD2(v61) = v25 + 7;
                  *(unsigned char *)(v60 + v26) = 2;
                  if (HIBYTE(v61))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v27 = WORD2(v61);
                    if (WORD1(v61) > WORD2(v61))
                    {
                      if (BYTE6(v61) == 2)
                      {
                        ++WORD2(v61);
                        *(unsigned char *)(v60 + v27) = 2 * v18;
                        if (HIBYTE(v61))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v28 = WORD2(v61);
                          if (WORD1(v61) > WORD2(v61))
                          {
                            if (BYTE6(v61) == 2)
                            {
                              ++WORD2(v61);
                              *(unsigned char *)(v60 + v28) = a4;
                              if (HIBYTE(v61))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else
                              {
                                uint64_t v29 = WORD2(v61);
                                if (WORD1(v61) > WORD2(v61))
                                {
                                  if (BYTE6(v61) == 2)
                                  {
                                    ++WORD2(v61);
                                    *(unsigned char *)(v60 + v29) = a5;
                                    if (HIBYTE(v61))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v30 = WORD2(v61);
                                      if (WORD1(v61) > WORD2(v61))
                                      {
                                        if (BYTE6(v61) == 2)
                                        {
                                          ++WORD2(v61);
                                          *(unsigned char *)(v60 + v30) = a6;
                                          if (a3 >= 2)
                                          {
                                            unsigned __int8 v37 = BYTE4(v61);
                                            return sub_10001BCBC(64985, v60, v37, a10, (uint64_t)sub_100117CF4, v20, v21, v22);
                                          }
                                          if (a2 == 16 || a2 == 2)
                                          {
                                            if (a2 == 2)
                                            {
                                              uint64_t v31 = 1;
                                              while (!HIBYTE(v61))
                                              {
                                                uint64_t v32 = WORD2(v61);
                                                if (WORD1(v61) <= WORD2(v61)) {
                                                  goto LABEL_70;
                                                }
                                                if (BYTE6(v61) != 2)
                                                {
                                                  uint64_t v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                  goto LABEL_72;
                                                }
                                                char v33 = *(unsigned char *)(a1 + v31);
                                                ++WORD2(v61);
                                                *(unsigned char *)(v60 + v32) = v33;
                                                if (--v31 == -1)
                                                {
                                                  int v34 = -14;
                                                  while (!HIBYTE(v61))
                                                  {
                                                    uint64_t v35 = WORD2(v61);
                                                    if (WORD1(v61) <= WORD2(v61)) {
                                                      goto LABEL_74;
                                                    }
                                                    if (BYTE6(v61) != 2)
                                                    {
                                                      uint64_t v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                      goto LABEL_76;
                                                    }
                                                    ++WORD2(v61);
                                                    *(unsigned char *)(v60 + v35) = 0;
                                                    if (__CFADD__(v34++, 1)) {
                                                      goto LABEL_46;
                                                    }
                                                  }
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_74:
                                                  uint64_t v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_76:
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1396, v49);
                                                }
                                              }
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
LABEL_70:
                                              uint64_t v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_72:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1393, v48);
                                            }
                                            goto LABEL_41;
                                          }
                                          sub_10025B8C0();
                                          if (a2)
                                          {
LABEL_41:
                                            uint64_t v38 = a2;
                                            while (!HIBYTE(v61))
                                            {
                                              uint64_t v39 = WORD2(v61);
                                              if (WORD1(v61) <= WORD2(v61)) {
                                                goto LABEL_66;
                                              }
                                              if (BYTE6(v61) != 2)
                                              {
                                                uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                goto LABEL_68;
                                              }
                                              char v40 = *(unsigned char *)(a1 - 1 + v38--);
                                              ++WORD2(v61);
                                              *(unsigned char *)(v60 + v39) = v40;
                                              if ((unint64_t)(v38 + 1) <= 1) {
                                                goto LABEL_46;
                                              }
                                            }
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
LABEL_66:
                                            uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_68:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1401, v47);
                                          }
LABEL_46:
                                          if (v11 >= 0x1B) {
                                            size_t v11 = 27;
                                          }
                                          else {
                                            size_t v11 = v11;
                                          }
                                          if (HIBYTE(v61))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }
                                          else if (WORD1(v61) - WORD2(v61) > 1)
                                          {
                                            if (BYTE6(v61) == 2)
                                            {
                                              *(_WORD *)(v60 + WORD2(v61)) = v11;
                                              unsigned __int16 v41 = WORD2(v61) + 2;
                                              WORD2(v61) += 2;
                                              uint64_t v42 = v60;
                                              if (HIBYTE(v61))
                                              {
                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/aci/aci_vsc.c");
                                                int v43 = 0;
                                              }
                                              else
                                              {
                                                int v43 = WORD1(v61) - v41;
                                              }
                                              if (v43 < (int)v11)
                                              {
                                                uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                                              }
                                              else
                                              {
                                                if (BYTE6(v61) == 2)
                                                {
                                                  memmove((void *)(v42 + v41), a8, v11);
                                                  unsigned __int16 v44 = WORD2(v61) + v11;
                                                  WORD2(v61) += v11;
                                                  uint64_t v45 = v60;
                                                  if (HIBYTE(v61))
                                                  {
                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                    int v46 = 0;
                                                  }
                                                  else
                                                  {
                                                    int v46 = WORD1(v61) - v44;
                                                  }
                                                  if (v46 < (int)v11)
                                                  {
                                                    uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                                                  }
                                                  else
                                                  {
                                                    if (BYTE6(v61) == 2)
                                                    {
                                                      memmove((void *)(v45 + v44), __src, v11);
                                                      unsigned __int8 v37 = BYTE4(v61) + v11;
                                                      WORD2(v61) += v11;
                                                      return sub_10001BCBC(64985, v60, v37, a10, (uint64_t)sub_100117CF4, v20, v21, v22);
                                                    }
                                                    uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                  }
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1410, v59);
                                                }
                                                uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                              }
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1409, v58);
                                            }
                                            uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_108:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1408, v57);
                                          }
                                          uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                          goto LABEL_108;
                                        }
                                        unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_104:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1386, v56);
                                      }
                                    }
                                    unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_104;
                                  }
                                  BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_100:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1385, v55);
                                }
                              }
                              BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_100;
                            }
                            int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_96:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1384, v54);
                          }
                        }
                        int v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_96;
                      }
                      unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_92:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1382, v53);
                    }
                  }
                  unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_92;
                }
                unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_88:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1381, v52);
              }
              unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_88;
            }
            __int16 v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_84:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1380, v51);
          }
          __int16 v51 = "ByteStream_NumReadBytesAvail(bs) >= (6)";
          goto LABEL_84;
        }
        uint64_t v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_80:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1379, v50);
      }
    }
    uint64_t v50 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_80;
  }
  return result;
}

uint64_t sub_100122AA4(__int16 a1, char a2, char a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t result = sub_100059D70(&v27);
  if (!result)
  {
    if (HIBYTE(v28))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v28) - WORD2(v28) > 1)
    {
      if (BYTE6(v28) == 2)
      {
        *(_WORD *)(v27 + WORD2(v28)) = a1;
        __int16 v17 = WORD2(v28);
        unsigned __int16 v18 = WORD2(v28) + 2;
        WORD2(v28) += 2;
        if (HIBYTE(v28))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v28) > v18)
        {
          if (BYTE6(v28) == 2)
          {
            WORD2(v28) = v17 + 3;
            *(unsigned char *)(v27 + v18) = a2;
            if (HIBYTE(v28))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              uint64_t v19 = WORD2(v28);
              if (WORD1(v28) > WORD2(v28))
              {
                if (BYTE6(v28) == 2)
                {
                  ++WORD2(v28);
                  *(unsigned char *)(v27 + v19) = a3;
                  if (HIBYTE(v28))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v20 = WORD2(v28);
                    if (WORD1(v28) > WORD2(v28))
                    {
                      if (BYTE6(v28) == 2)
                      {
                        ++WORD2(v28);
                        *(unsigned char *)(v27 + v20) = a5;
                        if (HIBYTE(v28))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v21 = WORD2(v28);
                          if (WORD1(v28) > WORD2(v28))
                          {
                            if (BYTE6(v28) == 2)
                            {
                              ++WORD2(v28);
                              *(unsigned char *)(v27 + v21) = a6;
                              return sub_10001BCBC(65051, v27, BYTE4(v28), a7, (uint64_t)sub_100117CF4, v14, v15, v16);
                            }
                            unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2078, v26);
                          }
                        }
                        unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_38;
                      }
                      __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2077, v25);
                    }
                  }
                  __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_34;
                }
                uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2075, v24);
              }
            }
            uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_30;
          }
          uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2074, v23);
        }
        uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_26;
      }
      uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2073, v22);
    }
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_100122D98(char a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = a1;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v12) > WORD2(v12))
          {
            if (BYTE6(v12) == 2)
            {
              *(unsigned char *)(v11 + WORD2(v12)) = 0;
              ++WORD2(v12);
              return sub_10001BCBC(64928, v11, BYTE4(v12), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
            }
            __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2279, v10);
          }
          __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2278, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100122EEC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = 0;
  unsigned __int16 v26 = 0;
  uint64_t v24 = 0;
  uint64_t v6 = sub_10017E2D4(a1, (uint64_t *)&v26);
  if (!v6)
  {
    uint64_t v7 = sub_100059D70(&v24);
    if (v7) {
      return v7;
    }
    if (HIBYTE(v25))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v25) - WORD2(v25) > 1)
    {
      if (BYTE6(v25) == 2)
      {
        *(_WORD *)(v24 + WORD2(v25)) = *v26;
        __int16 v19 = WORD2(v25);
        unsigned __int16 v20 = WORD2(v25) + 2;
        WORD2(v25) += 2;
        if (HIBYTE(v25))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v25) > v20)
        {
          if (BYTE6(v25) == 2)
          {
            WORD2(v25) = v19 + 3;
            *(unsigned char *)(v24 + v20) = a2;
            return sub_10001BCBC(65065, v24, BYTE4(v25), a4, (uint64_t)sub_100117CF4, v16, v17, v18);
          }
          uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_21:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2316, v23);
        }
        uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_21;
      }
      uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2315, v22);
    }
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_17;
  }
  uint64_t v7 = v6;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC Error %!", v8, v9, v10, v11, v12, v13, v14, v7);
    uint64_t v15 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v7;
}

uint64_t sub_1001230D0(char a1, _WORD *a2, uint64_t a3)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(unsigned char *)(v15 + v10) = a1;
          if (HIBYTE(v16))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v16) - WORD2(v16) > 1)
          {
            if (BYTE6(v16) == 2)
            {
              *(_WORD *)(v15 + WORD2(v16)) = *a2;
              unsigned __int16 v11 = WORD2(v16) + 2;
              WORD2(v16) += 2;
              if (HIBYTE(v16))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v16) - v11 > 3)
              {
                if (BYTE6(v16) == 2)
                {
                  *(unsigned char *)(v15 + v11) = -1;
                  *(unsigned char *)(v15 + WORD2(v16) + 1) = -1;
                  *(unsigned char *)(v15 + WORD2(v16) + 2) = -1;
                  *(unsigned char *)(v15 + WORD2(v16) + 3) = -1;
                  WORD2(v16) += 4;
                  return sub_10001BCBC(65041, v15, BYTE4(v16), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
                }
                uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2334, v14);
              }
              uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }
            uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2333, v13);
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2332, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100123300(int a1, uint64_t a2)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t result = sub_100059D70(&v20);
  if (!result)
  {
    if (HIBYTE(v21))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(unsigned char *)(v20 + v8) = a1 == 1;
          if (HIBYTE(v21))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v9 = WORD2(v21);
            if (WORD1(v21) > WORD2(v21))
            {
              if (BYTE6(v21) == 2)
              {
                ++WORD2(v21);
                *(unsigned char *)(v20 + v9) = 0;
                if (HIBYTE(v21))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v10 = WORD2(v21);
                  if (WORD1(v21) > WORD2(v21))
                  {
                    if (BYTE6(v21) == 2)
                    {
                      ++WORD2(v21);
                      *(unsigned char *)(v20 + v10) = -1;
                      if (HIBYTE(v21))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v11 = WORD2(v21);
                        if (WORD1(v21) > WORD2(v21))
                        {
                          if (BYTE6(v21) == 2)
                          {
                            ++WORD2(v21);
                            *(unsigned char *)(v20 + v11) = -1;
                            if (HIBYTE(v21))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else
                            {
                              uint64_t v12 = WORD2(v21);
                              if (WORD1(v21) > WORD2(v21))
                              {
                                if (BYTE6(v21) == 2)
                                {
                                  ++WORD2(v21);
                                  *(unsigned char *)(v20 + v12) = -1;
                                  if (HIBYTE(v21))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v13 = WORD2(v21);
                                    if (WORD1(v21) > WORD2(v21))
                                    {
                                      if (BYTE6(v21) == 2)
                                      {
                                        ++WORD2(v21);
                                        *(unsigned char *)(v20 + v13) = -1;
                                        return sub_10001BCBC(65040, v20, BYTE4(v21), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                                      }
                                      __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2378, v19);
                                    }
                                  }
                                  __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_45;
                                }
                                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2377, v18);
                              }
                            }
                            uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_41;
                          }
                          uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2376, v17);
                        }
                      }
                      uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_37;
                    }
                    uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2375, v16);
                  }
                }
                uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_33;
              }
              uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2374, v15);
            }
          }
          uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_29;
        }
        uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2373, v14);
      }
    }
    uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_100123648(_WORD *a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = *a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(65020, v9, BYTE4(v10), a2, (uint64_t)sub_10012FA4C, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3141, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100123740(_WORD *a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t a7)
{
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t result = sub_100059D70(&v31);
  if (!result)
  {
    if (HIBYTE(v32))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v32) - WORD2(v32) > 1)
    {
      if (BYTE6(v32) == 2)
      {
        *(_WORD *)(v31 + WORD2(v32)) = *a1;
        __int16 v18 = WORD2(v32);
        unsigned __int16 v19 = WORD2(v32) + 2;
        WORD2(v32) += 2;
        if (HIBYTE(v32))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v32) > v19)
        {
          if (BYTE6(v32) == 2)
          {
            WORD2(v32) = v18 + 3;
            *(unsigned char *)(v31 + v19) = a2;
            if (HIBYTE(v32))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              uint64_t v20 = WORD2(v32);
              if (WORD1(v32) > WORD2(v32))
              {
                if (BYTE6(v32) == 2)
                {
                  ++WORD2(v32);
                  *(unsigned char *)(v31 + v20) = 0;
                  if (HIBYTE(v32))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v32) - WORD2(v32) > 1)
                  {
                    if (BYTE6(v32) == 2)
                    {
                      *(_WORD *)(v31 + WORD2(v32)) = a3;
                      unsigned __int16 v21 = WORD2(v32) + 2;
                      WORD2(v32) += 2;
                      if (HIBYTE(v32))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else if (WORD1(v32) - v21 > 1)
                      {
                        if (BYTE6(v32) == 2)
                        {
                          *(unsigned char *)(v31 + v21) = a4;
                          *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a4);
                          unsigned __int16 v22 = WORD2(v32) + 2;
                          WORD2(v32) += 2;
                          if (HIBYTE(v32))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }
                          else if (WORD1(v32) - v22 > 1)
                          {
                            if (BYTE6(v32) == 2)
                            {
                              *(unsigned char *)(v31 + v22) = a5;
                              *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a5);
                              unsigned __int16 v23 = WORD2(v32) + 2;
                              WORD2(v32) += 2;
                              if (HIBYTE(v32))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else if (WORD1(v32) - v23 > 1)
                              {
                                if (BYTE6(v32) == 2)
                                {
                                  *(unsigned char *)(v31 + v23) = a6;
                                  *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a6);
                                  WORD2(v32) += 2;
                                  return sub_10001BCBC(65294, v31, BYTE4(v32), a7, (uint64_t)sub_100117CF4, v15, v16, v17);
                                }
                                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2580, v30);
                              }
                              uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_52;
                            }
                            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2579, v29);
                          }
                          uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_48;
                        }
                        uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2578, v28);
                      }
                      uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_44;
                    }
                    uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2577, v27);
                  }
                  uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_40;
                }
                unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2576, v26);
              }
            }
            unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_36;
          }
          uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2575, v25);
        }
        uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_32;
      }
      uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2574, v24);
    }
    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_100123BA4(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(64916, v9, BYTE4(v10), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2634, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100123C98(int a1, uint64_t a2)
{
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t result = sub_100059D70(&v39);
  if (!result)
  {
    switch(a1)
    {
      case 145:
        LOWORD(result) = -731;
        return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
      case 146:
        LOWORD(result) = -730;
        return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
      case 147:
        LOWORD(result) = -729;
        return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v8 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              ++WORD2(v40);
              *(unsigned char *)(v39 + v8) = 0;
              if (HIBYTE(v40))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else
              {
                uint64_t v9 = WORD2(v40);
                if (WORD1(v40) > WORD2(v40))
                {
                  if (BYTE6(v40) == 2)
                  {
                    ++WORD2(v40);
                    *(unsigned char *)(v39 + v9) = 1;
                    if (HIBYTE(v40))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else
                    {
                      uint64_t v10 = WORD2(v40);
                      if (WORD1(v40) > WORD2(v40))
                      {
                        if (BYTE6(v40) == 2)
                        {
                          ++WORD2(v40);
                          *(unsigned char *)(v39 + v10) = 2;
                          if (HIBYTE(v40))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }
                          else
                          {
                            uint64_t v11 = WORD2(v40);
                            if (WORD1(v40) > WORD2(v40))
                            {
                              if (BYTE6(v40) == 2)
                              {
                                ++WORD2(v40);
                                *(unsigned char *)(v39 + v11) = 3;
                                if (HIBYTE(v40))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }
                                else
                                {
                                  uint64_t v12 = WORD2(v40);
                                  if (WORD1(v40) > WORD2(v40))
                                  {
                                    if (BYTE6(v40) == 2)
                                    {
                                      ++WORD2(v40);
                                      *(unsigned char *)(v39 + v12) = 4;
                                      if (HIBYTE(v40))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/aci/aci_vsc.c");
                                      }
                                      else
                                      {
                                        uint64_t v13 = WORD2(v40);
                                        if (WORD1(v40) > WORD2(v40))
                                        {
                                          if (BYTE6(v40) == 2)
                                          {
                                            ++WORD2(v40);
                                            *(unsigned char *)(v39 + v13) = 5;
                                            LOWORD(result) = -724;
                                            return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
                                          }
                                          uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_98:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3178, v27);
                                        }
                                      }
                                      uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_98;
                                    }
                                    unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_94:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3177, v26);
                                  }
                                }
                                unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                goto LABEL_94;
                              }
                              uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_90:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3176, v25);
                            }
                          }
                          uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                          goto LABEL_90;
                        }
                        uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3175, v24);
                      }
                    }
                    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_86;
                  }
                  unsigned __int16 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3174, v23);
                }
              }
              unsigned __int16 v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_82;
            }
            unsigned __int16 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3173, v22);
          }
        }
        unsigned __int16 v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_78;
      case 154:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v14 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              ++WORD2(v40);
              *(unsigned char *)(v39 + v14) = 0;
LABEL_58:
              LOWORD(result) = -722;
              return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
            }
            uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_102:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3183, v28);
          }
        }
        uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_102;
      case 155:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 1;
LABEL_57:
              *(unsigned char *)(v16 + v15) = v17;
              goto LABEL_58;
            }
            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_106:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3187, v29);
          }
        }
        uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_106;
      case 156:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 2;
              goto LABEL_57;
            }
            uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_110:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3191, v30);
          }
        }
        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_110;
      case 157:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 3;
              goto LABEL_57;
            }
            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_114:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3195, v31);
          }
        }
        uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_114;
      case 158:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 4;
              goto LABEL_57;
            }
            uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_118:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3199, v32);
          }
        }
        uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_118;
      case 159:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 5;
              goto LABEL_57;
            }
            char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_122:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3203, v33);
          }
        }
        char v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_122;
      case 161:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 6;
              goto LABEL_57;
            }
            int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_126:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3207, v34);
          }
        }
        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_126;
      case 162:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v15 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v16 = v39;
              ++WORD2(v40);
              char v17 = 7;
              goto LABEL_57;
            }
            uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_142:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3211, v35);
          }
        }
        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_142;
      case 163:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v18 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              ++WORD2(v40);
              *(unsigned char *)(v39 + v18) = 0;
LABEL_72:
              LOWORD(result) = -736;
              return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
            }
            unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_132:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3216, v36);
          }
        }
        unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_132;
      case 164:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v19 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v20 = v39;
              ++WORD2(v40);
              char v21 = 1;
LABEL_71:
              *(unsigned char *)(v20 + v19) = v21;
              goto LABEL_72;
            }
            unsigned __int8 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_136:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3220, v37);
          }
        }
        unsigned __int8 v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_136;
      case 165:
        if (HIBYTE(v40))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else
        {
          uint64_t v19 = WORD2(v40);
          if (WORD1(v40) > WORD2(v40))
          {
            if (BYTE6(v40) == 2)
            {
              uint64_t v20 = v39;
              ++WORD2(v40);
              char v21 = 2;
              goto LABEL_71;
            }
            uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_140:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3224, v38);
          }
        }
        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_140;
      default:
        return sub_10001BCBC(result, v39, BYTE4(v40), a2, (uint64_t)sub_1001187D4, v5, v6, v7);
    }
  }
  return result;
}

uint64_t sub_1001245D8(_WORD *a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (!result)
  {
    if (HIBYTE(v23))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v23) - WORD2(v23) > 1)
    {
      if (BYTE6(v23) == 2)
      {
        *(_WORD *)(v22 + WORD2(v23)) = *a1;
        __int16 v14 = WORD2(v23);
        unsigned __int16 v15 = WORD2(v23) + 2;
        WORD2(v23) += 2;
        if (HIBYTE(v23))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v23) > v15)
        {
          if (BYTE6(v23) == 2)
          {
            WORD2(v23) = v14 + 3;
            *(unsigned char *)(v22 + v15) = a2;
            if (HIBYTE(v23))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              uint64_t v16 = WORD2(v23);
              if (WORD1(v23) > WORD2(v23))
              {
                if (BYTE6(v23) == 2)
                {
                  ++WORD2(v23);
                  *(unsigned char *)(v22 + v16) = a3;
                  if (HIBYTE(v23))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v17 = WORD2(v23);
                    if (WORD1(v23) > WORD2(v23))
                    {
                      if (BYTE6(v23) == 2)
                      {
                        ++WORD2(v23);
                        *(unsigned char *)(v22 + v17) = a4;
                        return sub_10001BCBC(65276, v22, BYTE4(v23), a5, (uint64_t)sub_100117CF4, v11, v12, v13);
                      }
                      char v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2398, v21);
                    }
                  }
                  char v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }
                uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2397, v20);
              }
            }
            uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }
          uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2396, v19);
        }
        uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_23;
      }
      uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2395, v18);
    }
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_100124854(char *a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v5 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          char v6 = *a1;
          ++WORD2(v13);
          *(unsigned char *)(v12 + v5) = v6;
          if (HIBYTE(v13))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v13) - WORD2(v13) > 5)
          {
            if (BYTE6(v13) == 2)
            {
              sub_100008A18(v12 + WORD2(v13), (uint64_t)(a1 + 1), 6uLL);
              WORD2(v13) += 6;
              return sub_10001BCBC(64826, v12, BYTE4(v13), a2, (uint64_t)sub_10012FBA8, v7, v8, v9);
            }
            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2414, v11);
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_17;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2413, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001249BC(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(64827, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2429, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100124A94(char a1, __int16 a2, __int16 a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t result = sub_100059D70(&v30);
  if (!result)
  {
    if (HIBYTE(v31))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v18 = WORD2(v31);
      if (WORD1(v31) > WORD2(v31))
      {
        if (BYTE6(v31) == 2)
        {
          ++WORD2(v31);
          *(unsigned char *)(v30 + v18) = a1;
          if (HIBYTE(v31))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v31) - WORD2(v31) > 1)
          {
            if (BYTE6(v31) == 2)
            {
              *(_WORD *)(v30 + WORD2(v31)) = a2;
              unsigned __int16 v19 = WORD2(v31) + 2;
              WORD2(v31) += 2;
              if (HIBYTE(v31))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v31) - v19 > 1)
              {
                if (BYTE6(v31) == 2)
                {
                  *(unsigned char *)(v30 + v19) = a3;
                  *(unsigned char *)(v30 + WORD2(v31) + 1) = HIBYTE(a3);
                  __int16 v20 = WORD2(v31);
                  unsigned __int16 v21 = WORD2(v31) + 2;
                  WORD2(v31) += 2;
                  if (HIBYTE(v31))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v31) > v21)
                  {
                    if (BYTE6(v31) == 2)
                    {
                      WORD2(v31) = v20 + 3;
                      *(unsigned char *)(v30 + v21) = a4;
                      if (HIBYTE(v31))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v22 = WORD2(v31);
                        if (WORD1(v31) > WORD2(v31))
                        {
                          if (BYTE6(v31) == 2)
                          {
                            ++WORD2(v31);
                            *(unsigned char *)(v30 + v22) = a5;
                            if (HIBYTE(v31))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else
                            {
                              uint64_t v23 = WORD2(v31);
                              if (WORD1(v31) > WORD2(v31))
                              {
                                if (BYTE6(v31) == 2)
                                {
                                  ++WORD2(v31);
                                  *(unsigned char *)(v30 + v23) = a6;
                                  return sub_10001BCBC(64828, v30, BYTE4(v31), a7, (uint64_t)sub_100117CF4, v15, v16, v17);
                                }
                                uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2449, v29);
                              }
                            }
                            uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_45;
                          }
                          uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2448, v28);
                        }
                      }
                      uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_41;
                    }
                    uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2447, v27);
                  }
                  uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }
                unsigned __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2446, v26);
              }
              unsigned __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_33;
            }
            uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2445, v25);
          }
          uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }
        uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2444, v24);
      }
    }
    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_100124E28(char a1, unsigned int a2, const void *a3, uint64_t a4)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v9 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(unsigned char *)(v18 + v9) = a1;
          if (HIBYTE(v19))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v10 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                if (a2 >= 0x1F) {
                  char v11 = 31;
                }
                else {
                  char v11 = a2;
                }
                ++WORD2(v19);
                *(unsigned char *)(v18 + v10) = v11;
                if (HIBYTE(v19))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v19) - WORD2(v19) > 30)
                {
                  if (BYTE6(v19) == 2)
                  {
                    memmove((void *)(v18 + WORD2(v19)), a3, 0x1FuLL);
                    WORD2(v19) += 31;
                    return sub_10001BCBC(64829, v18, BYTE4(v19), a4, (uint64_t)sub_100117CF4, v12, v13, v14);
                  }
                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2466, v17);
                }
                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (31)";
                goto LABEL_27;
              }
              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2465, v16);
            }
          }
          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }
        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2464, v15);
      }
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_100125020(char a1, unsigned int a2, const void *a3, uint64_t a4)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v9 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(unsigned char *)(v18 + v9) = a1;
          if (HIBYTE(v19))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v10 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                if (a2 >= 0x1F) {
                  char v11 = 31;
                }
                else {
                  char v11 = a2;
                }
                ++WORD2(v19);
                *(unsigned char *)(v18 + v10) = v11;
                if (HIBYTE(v19))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v19) - WORD2(v19) > 30)
                {
                  if (BYTE6(v19) == 2)
                  {
                    memmove((void *)(v18 + WORD2(v19)), a3, 0x1FuLL);
                    WORD2(v19) += 31;
                    return sub_10001BCBC(64830, v18, BYTE4(v19), a4, (uint64_t)sub_100117CF4, v12, v13, v14);
                  }
                  uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2483, v17);
                }
                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= (31)";
                goto LABEL_27;
              }
              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2482, v16);
            }
          }
          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }
        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2481, v15);
      }
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_100125218(char a1, char a2, int a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (!result)
  {
    if (HIBYTE(v23))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(unsigned char *)(v22 + v14) = a1;
          if (HIBYTE(v23))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v15 = WORD2(v23);
            if (WORD1(v23) > WORD2(v23))
            {
              if (BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(unsigned char *)(v22 + v15) = a2;
                if (HIBYTE(v23))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v23) - WORD2(v23) > 3)
                {
                  if (BYTE6(v23) == 2)
                  {
                    *(_WORD *)(v22 + WORD2(v23)) = a3;
                    *(unsigned char *)(v22 + WORD2(v23) + 2) = BYTE2(a3);
                    *(unsigned char *)(v22 + WORD2(v23) + 3) = HIBYTE(a3);
                    __int16 v16 = WORD2(v23);
                    unsigned __int16 v17 = WORD2(v23) + 4;
                    WORD2(v23) += 4;
                    if (HIBYTE(v23))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else if (WORD1(v23) > v17)
                    {
                      if (BYTE6(v23) == 2)
                      {
                        WORD2(v23) = v16 + 5;
                        *(unsigned char *)(v22 + v17) = a4;
                        return sub_10001BCBC(64831, v22, BYTE4(v23), a5, (uint64_t)sub_100117CF4, v11, v12, v13);
                      }
                      unsigned __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2501, v21);
                    }
                    unsigned __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_31;
                  }
                  __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2500, v20);
                }
                __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_27;
              }
              uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2499, v19);
            }
          }
          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }
        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2498, v18);
      }
    }
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001254B8(char a1, char *a2, uint64_t a3)
{
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t result = sub_100059D70(&v16);
  if (!result)
  {
    if (HIBYTE(v17))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v7 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(unsigned char *)(v16 + v7) = a1;
          if (HIBYTE(v17))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v8 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17))
            {
              if (BYTE6(v17) == 2)
              {
                char v9 = *a2;
                ++WORD2(v17);
                *(unsigned char *)(v16 + v8) = v9;
                if (HIBYTE(v17))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v17) - WORD2(v17) > 5)
                {
                  if (BYTE6(v17) == 2)
                  {
                    sub_100008A18(v16 + WORD2(v17), (uint64_t)(a2 + 1), 6uLL);
                    WORD2(v17) += 6;
                    return sub_10001BCBC(64833, v16, BYTE4(v17), a3, (uint64_t)sub_100117CF4, v10, v11, v12);
                  }
                  uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2519, v15);
                }
                uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_24;
              }
              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2518, v14);
            }
          }
          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }
        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2517, v13);
      }
    }
    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001256A4(char a1, __int16 a2, uint64_t a3)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t result = sub_100059D70(&v17);
  if (!result)
  {
    if (HIBYTE(v18))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v18) - WORD2(v18) > 1)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = a2;
        __int16 v10 = WORD2(v18);
        unsigned __int16 v11 = WORD2(v18) + 2;
        WORD2(v18) += 2;
        if (HIBYTE(v18))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v18) > v11)
        {
          if (BYTE6(v18) == 2)
          {
            WORD2(v18) = v10 + 3;
            *(unsigned char *)(v17 + v11) = a1;
            if (HIBYTE(v18))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else
            {
              uint64_t v12 = WORD2(v18);
              if (WORD1(v18) > WORD2(v18))
              {
                if (BYTE6(v18) == 2)
                {
                  ++WORD2(v18);
                  *(unsigned char *)(v17 + v12) = -1;
                  if (HIBYTE(v18))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v18) - WORD2(v18) > 1)
                  {
                    if (BYTE6(v18) == 2)
                    {
                      *(unsigned char *)(v17 + WORD2(v18)) = -1;
                      *(unsigned char *)(v17 + WORD2(v18) + 1) = -1;
                      WORD2(v18) += 2;
                      return sub_10001BCBC(64960, v17, BYTE4(v18), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
                    }
                    uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2540, v16);
                  }
                  uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_31;
                }
                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2539, v15);
              }
            }
            uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }
          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2538, v14);
        }
        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_23;
      }
      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2537, v13);
    }
    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_100125928(char a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(unsigned char *)(v12 + v8) = 1;
          if (HIBYTE(v13))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v9 = WORD2(v13);
            if (WORD1(v13) > WORD2(v13))
            {
              if (BYTE6(v13) == 2)
              {
                ++WORD2(v13);
                *(unsigned char *)(v12 + v9) = a1;
                return sub_10001BCBC(65384, v12, BYTE4(v13), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
              }
              unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2559, v11);
            }
          }
          unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2555, v10);
      }
    }
    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100125A7C(_WORD *a1, __int16 a2, __int16 a3, uint64_t a4)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t result = sub_100059D70(&v17);
  if (!result)
  {
    if (HIBYTE(v18))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v18) - WORD2(v18) > 1)
    {
      if (BYTE6(v18) == 2)
      {
        *(_WORD *)(v17 + WORD2(v18)) = *a1;
        unsigned __int16 v12 = WORD2(v18) + 2;
        WORD2(v18) += 2;
        if (HIBYTE(v18))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v18) - v12 > 1)
        {
          if (BYTE6(v18) == 2)
          {
            *(unsigned char *)(v17 + v12) = a2;
            *(unsigned char *)(v17 + WORD2(v18) + 1) = HIBYTE(a2);
            unsigned __int16 v13 = WORD2(v18) + 2;
            WORD2(v18) += 2;
            if (HIBYTE(v18))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v18) - v13 > 1)
            {
              if (BYTE6(v18) == 2)
              {
                *(unsigned char *)(v17 + v13) = a3;
                *(unsigned char *)(v17 + WORD2(v18) + 1) = HIBYTE(a3);
                WORD2(v18) += 2;
                return sub_10001BCBC(65383, v17, BYTE4(v18), a4, (uint64_t)sub_100117CF4, v9, v10, v11);
              }
              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2620, v16);
            }
            uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_24;
          }
          uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2619, v15);
        }
        uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }
      uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2618, v14);
    }
    uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100125CAC(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65396, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2648, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100125D84(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65510, v6, BYTE4(v7), a1, (uint64_t)sub_10012FCB0, v3, v4, v5);
  }
  return result;
}

uint64_t sub_100125DE0(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65512, v6, BYTE4(v7), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_100125E3C(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(64932, v6, BYTE4(v7), a1, (uint64_t)sub_1001300D0, v3, v4, v5);
  }
  return result;
}

uint64_t sub_100125E98(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(64933, v6, BYTE4(v7), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_100125EF4(uint64_t a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v35 = 0;
  uint64_t v11 = sub_10017E2D4(a1, (uint64_t *)&v35);
  if (!v11)
  {
    uint64_t v12 = sub_100059D70(&v36);
    if (v12) {
      return v12;
    }
    if (HIBYTE(v37))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v24 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37))
      {
        if (BYTE6(v37) == 2)
        {
          ++WORD2(v37);
          *(unsigned char *)(v36 + v24) = a2;
          if (HIBYTE(v37))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v37) - WORD2(v37) > 1)
          {
            if (BYTE6(v37) == 2)
            {
              *(_WORD *)(v36 + WORD2(v37)) = *v35;
              __int16 v25 = WORD2(v37);
              unsigned __int16 v26 = WORD2(v37) + 2;
              WORD2(v37) += 2;
              if (HIBYTE(v37))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v37) > v26)
              {
                if (BYTE6(v37) == 2)
                {
                  WORD2(v37) = v25 + 3;
                  *(unsigned char *)(v36 + v26) = a3;
                  if (HIBYTE(v37))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v27 = WORD2(v37);
                    if (WORD1(v37) > WORD2(v37))
                    {
                      if (BYTE6(v37) == 2)
                      {
                        ++WORD2(v37);
                        *(unsigned char *)(v36 + v27) = a4;
                        if (HIBYTE(v37))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v28 = WORD2(v37);
                          if (WORD1(v37) > WORD2(v37))
                          {
                            if (BYTE6(v37) == 2)
                            {
                              ++WORD2(v37);
                              *(unsigned char *)(v36 + v28) = a5;
                              return sub_10001BCBC(64808, v36, BYTE4(v37), a6, (uint64_t)sub_100117CF4, v21, v22, v23);
                            }
                            int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2786, v34);
                          }
                        }
                        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_42;
                      }
                      char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2785, v33);
                    }
                  }
                  char v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_38;
                }
                uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2784, v32);
              }
              uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_34;
            }
            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2783, v31);
          }
          uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_30;
        }
        uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2782, v30);
      }
    }
    uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_26;
  }
  uint64_t v12 = v11;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC Error %!", v13, v14, v15, v16, v17, v18, v19, v12);
    __int16 v20 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v12;
}

uint64_t sub_10012624C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(64876, v9, BYTE4(v10), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3716, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10012633C(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65011, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2799, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100126414(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65443, v6, BYTE4(v7), a1, (uint64_t)sub_100117D80, v3, v4, v5);
  }
  return result;
}

uint64_t sub_100126470(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(65444, v9, BYTE4(v10), a2, (uint64_t)sub_100117E90, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2860, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100126564(__int16 a1, int a2, uint64_t a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = a1;
        unsigned __int16 v10 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v14) - v10 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(unsigned char *)(v13 + v10) = a2;
            *(unsigned char *)(v13 + WORD2(v14) + 1) = BYTE1(a2);
            *(unsigned char *)(v13 + WORD2(v14) + 2) = BYTE2(a2);
            *(unsigned char *)(v13 + WORD2(v14) + 3) = HIBYTE(a2);
            WORD2(v14) += 4;
            return sub_10001BCBC(65425, v13, BYTE4(v14), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
          }
          uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2874, v12);
        }
        uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }
      uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2873, v11);
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100126720(__int16 a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t a8)
{
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t result = sub_100059D70(&v38);
  if (!result)
  {
    if (HIBYTE(v39))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v39) - WORD2(v39) > 1)
    {
      if (BYTE6(v39) == 2)
      {
        *(_WORD *)(v38 + WORD2(v39)) = a1;
        unsigned __int16 v20 = WORD2(v39) + 2;
        WORD2(v39) += 2;
        if (HIBYTE(v39))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v39) - v20 > 3)
        {
          if (BYTE6(v39) == 2)
          {
            *(unsigned char *)(v38 + v20) = a2;
            *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a2);
            unsigned __int16 v21 = WORD2(v39) + 4;
            WORD2(v39) += 4;
            if (HIBYTE(v39))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v39) - v21 > 3)
            {
              if (BYTE6(v39) == 2)
              {
                *(unsigned char *)(v38 + v21) = a3;
                *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a3);
                unsigned __int16 v22 = WORD2(v39) + 4;
                WORD2(v39) += 4;
                if (HIBYTE(v39))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v39) - v22 > 1)
                {
                  if (BYTE6(v39) == 2)
                  {
                    *(unsigned char *)(v38 + v22) = a4;
                    *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a4);
                    unsigned __int16 v23 = WORD2(v39) + 2;
                    WORD2(v39) += 2;
                    if (HIBYTE(v39))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else if (WORD1(v39) - v23 > 1)
                    {
                      if (BYTE6(v39) == 2)
                      {
                        *(unsigned char *)(v38 + v23) = a5;
                        *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a5);
                        __int16 v24 = WORD2(v39);
                        unsigned __int16 v25 = WORD2(v39) + 2;
                        WORD2(v39) += 2;
                        if (HIBYTE(v39))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else if (WORD1(v39) > v25)
                        {
                          if (BYTE6(v39) == 2)
                          {
                            WORD2(v39) = v24 + 3;
                            *(unsigned char *)(v38 + v25) = a6;
                            if (HIBYTE(v39))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else
                            {
                              uint64_t v26 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(unsigned char *)(v38 + v26) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v27 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(unsigned char *)(v38 + v27) = BYTE1(a7);
                                        if (HIBYTE(v39))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v28 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(unsigned char *)(v38 + v28) = BYTE2(a7);
                                              return sub_10001BCBC(64967, v38, BYTE4(v39), a8, (uint64_t)sub_100117CF4, v17, v18, v19);
                                            }
                                            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2902, v37);
                                          }
                                        }
                                        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }
                                      uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2900, v36);
                                    }
                                  }
                                  uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }
                                uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2898, v35);
                              }
                            }
                            uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }
                          int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2895, v34);
                        }
                        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_54;
                      }
                      char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2894, v33);
                    }
                    char v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_50;
                  }
                  uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2893, v32);
                }
                uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_46;
              }
              uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2892, v31);
            }
            uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_42;
          }
          uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2891, v30);
        }
        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_38;
      }
      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2890, v29);
    }
    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_100126CCC(uint64_t a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t a8)
{
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t result = sub_100059D70(&v38);
  if (!result)
  {
    if (HIBYTE(v39))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v39) - WORD2(v39) > 5)
    {
      if (BYTE6(v39) == 2)
      {
        sub_100008A18(v38 + WORD2(v39), a1, 6uLL);
        unsigned __int16 v20 = WORD2(v39) + 6;
        WORD2(v39) += 6;
        if (HIBYTE(v39))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v39) - v20 > 3)
        {
          if (BYTE6(v39) == 2)
          {
            *(unsigned char *)(v38 + v20) = a2;
            *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a2);
            unsigned __int16 v21 = WORD2(v39) + 4;
            WORD2(v39) += 4;
            if (HIBYTE(v39))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v39) - v21 > 3)
            {
              if (BYTE6(v39) == 2)
              {
                *(unsigned char *)(v38 + v21) = a3;
                *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a3);
                unsigned __int16 v22 = WORD2(v39) + 4;
                WORD2(v39) += 4;
                if (HIBYTE(v39))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v39) - v22 > 1)
                {
                  if (BYTE6(v39) == 2)
                  {
                    *(unsigned char *)(v38 + v22) = a4;
                    *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a4);
                    unsigned __int16 v23 = WORD2(v39) + 2;
                    WORD2(v39) += 2;
                    if (HIBYTE(v39))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else if (WORD1(v39) - v23 > 1)
                    {
                      if (BYTE6(v39) == 2)
                      {
                        *(unsigned char *)(v38 + v23) = a5;
                        *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a5);
                        __int16 v24 = WORD2(v39);
                        unsigned __int16 v25 = WORD2(v39) + 2;
                        WORD2(v39) += 2;
                        if (HIBYTE(v39))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else if (WORD1(v39) > v25)
                        {
                          if (BYTE6(v39) == 2)
                          {
                            WORD2(v39) = v24 + 3;
                            *(unsigned char *)(v38 + v25) = a6;
                            if (HIBYTE(v39))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else
                            {
                              uint64_t v26 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(unsigned char *)(v38 + v26) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v27 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(unsigned char *)(v38 + v27) = BYTE1(a7);
                                        if (HIBYTE(v39))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v28 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(unsigned char *)(v38 + v28) = BYTE2(a7);
                                              return sub_10001BCBC(65016, v38, BYTE4(v39), a8, (uint64_t)sub_100117CF4, v17, v18, v19);
                                            }
                                            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2928, v37);
                                          }
                                        }
                                        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }
                                      uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2926, v36);
                                    }
                                  }
                                  uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }
                                uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2924, v35);
                              }
                            }
                            uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }
                          int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2921, v34);
                        }
                        int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_54;
                      }
                      char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2920, v33);
                    }
                    char v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_50;
                  }
                  uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2919, v32);
                }
                uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_46;
              }
              uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2918, v31);
            }
            uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_42;
          }
          uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2917, v30);
        }
        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_38;
      }
      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2916, v29);
    }
    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_100127270(_WORD *a1, __int16 a2, char a3, uint64_t a4)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v19) - WORD2(v19) > 1)
    {
      if (BYTE6(v19) == 2)
      {
        *(_WORD *)(v18 + WORD2(v19)) = *a1;
        unsigned __int16 v12 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v19) - v12 > 1)
        {
          if (BYTE6(v19) == 2)
          {
            *(unsigned char *)(v18 + v12) = a2;
            *(unsigned char *)(v18 + WORD2(v19) + 1) = HIBYTE(a2);
            __int16 v13 = WORD2(v19);
            unsigned __int16 v14 = WORD2(v19) + 2;
            WORD2(v19) += 2;
            if (HIBYTE(v19))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v19) > v14)
            {
              if (BYTE6(v19) == 2)
              {
                WORD2(v19) = v13 + 3;
                *(unsigned char *)(v18 + v14) = a3;
                return sub_10001BCBC(65378, v18, BYTE4(v19), a4, (uint64_t)sub_100117CF4, v9, v10, v11);
              }
              uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2943, v17);
            }
            uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }
          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2942, v16);
        }
        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }
      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2941, v15);
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100127484(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65450, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2970, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10012755C(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(64820, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
          }
          __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3000, v13);
        }
        __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2999, v12);
    }
    unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001276D8(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65385, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2957, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001277B0(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (result) {
    return result;
  }
  if (HIBYTE(v19))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_27;
  }
  uint64_t v10 = WORD2(v19);
  if (WORD1(v19) <= WORD2(v19))
  {
LABEL_27:
    uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_29;
  }
  if (BYTE6(v19) != 2)
  {
    uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3253, v17);
  }
  unint64_t v11 = 0;
  ++WORD2(v19);
  *(unsigned char *)(v18 + v10) = a1;
  do
  {
    if (v11 >= a1)
    {
      if (HIBYTE(v19))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_23:
        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3258, v16);
      }
      if (WORD1(v19) - WORD2(v19) <= 1) {
        goto LABEL_23;
      }
      if (BYTE6(v19) != 2)
      {
        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_25;
      }
      char v13 = 0;
      *(unsigned char *)(v18 + WORD2(v19)) = 0;
    }
    else
    {
      if (HIBYTE(v19))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_19:
        uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_21:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3256, v15);
      }
      if (WORD1(v19) - WORD2(v19) <= 1) {
        goto LABEL_19;
      }
      if (BYTE6(v19) != 2)
      {
        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_21;
      }
      uint64_t v12 = a2 + 2 * v11;
      *(unsigned char *)(v18 + WORD2(v19)) = *(_WORD *)v12;
      char v13 = *(unsigned char *)(v12 + 1);
    }
    *(unsigned char *)(v18 + WORD2(v19) + 1) = v13;
    unsigned __int8 v14 = BYTE4(v19) + 2;
    WORD2(v19) += 2;
    ++v11;
  }
  while (v11 != 4);
  return sub_10001BCBC(64896, v18, v14, a3, (uint64_t)sub_100117CF4, v7, v8, v9);
}

uint64_t sub_1001279C4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t result = sub_100059D70(&v21);
  if (!result)
  {
    if (HIBYTE(v22))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v15 = WORD2(v22);
      if (WORD1(v22) > WORD2(v22))
      {
        if (BYTE6(v22) == 2)
        {
          ++WORD2(v22);
          *(unsigned char *)(v21 + v15) = 1;
          if (HIBYTE(v22))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v22) - WORD2(v22) > 1)
          {
            if (BYTE6(v22) == 2)
            {
              *(_WORD *)(v21 + WORD2(v22)) = a1;
              __int16 v16 = WORD2(v22);
              unsigned __int16 v17 = WORD2(v22) + 2;
              WORD2(v22) += 2;
              if (HIBYTE(v22))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v22) > v17)
              {
                if (BYTE6(v22) == 2)
                {
                  WORD2(v22) = v16 + 3;
                  *(unsigned char *)(v21 + v17) = a8;
                  return sub_10001BCBC(65014, v21, BYTE4(v22), a9, (uint64_t)sub_10013029C, v12, v13, v14);
                }
                unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3297, v20);
              }
              unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }
            uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3296, v19);
          }
          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }
        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3295, v18);
      }
    }
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100127BAC(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = 2;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10001BCBC(65014, v11, BYTE4(v12), a2, (uint64_t)sub_100130408, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3336, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3335, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100127D1C(__int16 a1, char a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8)
{
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t result = sub_100059D70(&v36);
  if (!result)
  {
    if (HIBYTE(v37))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v20 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37))
      {
        if (BYTE6(v37) == 2)
        {
          ++WORD2(v37);
          *(unsigned char *)(v36 + v20) = 3;
          if (HIBYTE(v37))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v37) - WORD2(v37) > 1)
          {
            if (BYTE6(v37) == 2)
            {
              *(_WORD *)(v36 + WORD2(v37)) = a1;
              __int16 v21 = WORD2(v37);
              unsigned __int16 v22 = WORD2(v37) + 2;
              WORD2(v37) += 2;
              if (HIBYTE(v37))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v37) > v22)
              {
                if (BYTE6(v37) == 2)
                {
                  WORD2(v37) = v21 + 3;
                  *(unsigned char *)(v36 + v22) = a2;
                  if (HIBYTE(v37))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v23 = WORD2(v37);
                    if (WORD1(v37) > WORD2(v37))
                    {
                      if (BYTE6(v37) == 2)
                      {
                        ++WORD2(v37);
                        *(unsigned char *)(v36 + v23) = a3;
                        if (HIBYTE(v37))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else if (WORD1(v37) - WORD2(v37) > 1)
                        {
                          if (BYTE6(v37) == 2)
                          {
                            *(_WORD *)(v36 + WORD2(v37)) = a4;
                            __int16 v24 = WORD2(v37);
                            unsigned __int16 v25 = WORD2(v37) + 2;
                            WORD2(v37) += 2;
                            if (HIBYTE(v37))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else if (WORD1(v37) > v25)
                            {
                              if (BYTE6(v37) == 2)
                              {
                                WORD2(v37) = v24 + 3;
                                *(unsigned char *)(v36 + v25) = a5;
                                if (HIBYTE(v37))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }
                                else
                                {
                                  uint64_t v26 = WORD2(v37);
                                  if (WORD1(v37) > WORD2(v37))
                                  {
                                    if (BYTE6(v37) == 2)
                                    {
                                      ++WORD2(v37);
                                      *(unsigned char *)(v36 + v26) = a6;
                                      if (HIBYTE(v37))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/aci/aci_vsc.c");
                                      }
                                      else
                                      {
                                        uint64_t v27 = WORD2(v37);
                                        if (WORD1(v37) > WORD2(v37))
                                        {
                                          if (BYTE6(v37) == 2)
                                          {
                                            ++WORD2(v37);
                                            *(unsigned char *)(v36 + v27) = a7;
                                            return sub_10001BCBC(65014, v36, BYTE4(v37), a8, (uint64_t)sub_10013062C, v17, v18, v19);
                                          }
                                          uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3375, v35);
                                        }
                                      }
                                      uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_59;
                                    }
                                    int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3374, v34);
                                  }
                                }
                                int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                goto LABEL_55;
                              }
                              char v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3373, v33);
                            }
                            char v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_51;
                          }
                          uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3372, v32);
                        }
                        uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_47;
                      }
                      uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3371, v31);
                    }
                  }
                  uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_43;
                }
                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3370, v30);
              }
              uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_39;
            }
            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3369, v29);
          }
          uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_35;
        }
        uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3368, v28);
      }
    }
    uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1001281A8(__int16 a1, __int16 a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t result = sub_100059D70(&v46);
  if (!result)
  {
    if (HIBYTE(v47))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v21 = WORD2(v47);
      if (WORD1(v47) > WORD2(v47))
      {
        if (BYTE6(v47) == 2)
        {
          ++WORD2(v47);
          *(unsigned char *)(v46 + v21) = 10;
          if (HIBYTE(v47))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v47) - WORD2(v47) > 1)
          {
            if (BYTE6(v47) == 2)
            {
              *(_WORD *)(v46 + WORD2(v47)) = a1;
              unsigned __int16 v22 = WORD2(v47) + 2;
              WORD2(v47) += 2;
              if (HIBYTE(v47))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v47) - v22 > 1)
              {
                if (BYTE6(v47) == 2)
                {
                  *(unsigned char *)(v46 + v22) = a2;
                  *(unsigned char *)(v46 + WORD2(v47) + 1) = HIBYTE(a2);
                  __int16 v23 = WORD2(v47);
                  unsigned __int16 v24 = WORD2(v47) + 2;
                  WORD2(v47) += 2;
                  if (HIBYTE(v47))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v47) > v24)
                  {
                    if (BYTE6(v47) == 2)
                    {
                      WORD2(v47) = v23 + 3;
                      *(unsigned char *)(v46 + v24) = a3;
                      if (HIBYTE(v47))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else if (WORD1(v47) - WORD2(v47) > 1)
                      {
                        if (BYTE6(v47) == 2)
                        {
                          *(_WORD *)(v46 + WORD2(v47)) = a4;
                          __int16 v25 = WORD2(v47);
                          unsigned __int16 v26 = WORD2(v47) + 2;
                          WORD2(v47) += 2;
                          if (HIBYTE(v47))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }
                          else if (WORD1(v47) > v26)
                          {
                            if (BYTE6(v47) == 2)
                            {
                              WORD2(v47) = v25 + 3;
                              *(unsigned char *)(v46 + v26) = a5;
                              if (HIBYTE(v47))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else
                              {
                                uint64_t v27 = WORD2(v47);
                                if (WORD1(v47) > WORD2(v47))
                                {
                                  if (BYTE6(v47) == 2)
                                  {
                                    ++WORD2(v47);
                                    *(unsigned char *)(v46 + v27) = a6;
                                    if (HIBYTE(v47))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v28 = WORD2(v47);
                                      if (WORD1(v47) > WORD2(v47))
                                      {
                                        if (BYTE6(v47) == 2)
                                        {
                                          ++WORD2(v47);
                                          *(unsigned char *)(v46 + v28) = a7;
                                          int v29 = -16;
                                          do
                                          {
                                            if (HIBYTE(v47))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
LABEL_44:
                                              int v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_46:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3419, v34);
                                            }
                                            uint64_t v30 = WORD2(v47);
                                            if (WORD1(v47) <= WORD2(v47)) {
                                              goto LABEL_44;
                                            }
                                            if (BYTE6(v47) != 2)
                                            {
                                              int v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                              goto LABEL_46;
                                            }
                                            ++WORD2(v47);
                                            *(unsigned char *)(v46 + v30) = 0;
                                          }
                                          while (!__CFADD__(v29++, 1));
                                          if (HIBYTE(v47))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v32 = WORD2(v47);
                                            if (WORD1(v47) > WORD2(v47))
                                            {
                                              if (BYTE6(v47) == 2)
                                              {
                                                ++WORD2(v47);
                                                *(unsigned char *)(v46 + v32) = 0;
                                                if (HIBYTE(v47))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }
                                                else if (WORD1(v47) - WORD2(v47) > 1)
                                                {
                                                  if (BYTE6(v47) == 2)
                                                  {
                                                    *(_WORD *)(v46 + WORD2(v47)) = 0;
                                                    unsigned __int16 v33 = WORD2(v47) + 2;
                                                    WORD2(v47) += 2;
                                                    if (HIBYTE(v47))
                                                    {
                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                    }
                                                    else if (WORD1(v47) - v33 > 1)
                                                    {
                                                      if (BYTE6(v47) == 2)
                                                      {
                                                        *(unsigned char *)(v46 + v33) = 0;
                                                        *(unsigned char *)(v46 + WORD2(v47) + 1) = 0;
                                                        WORD2(v47) += 2;
                                                        return sub_10001BCBC(65014, v46, BYTE4(v47), a10, (uint64_t)sub_100130798, v18, v19, v20);
                                                      }
                                                      uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_90:
                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3423, v45);
                                                    }
                                                    uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                    goto LABEL_90;
                                                  }
                                                  unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3422, v44);
                                                }
                                                unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                goto LABEL_86;
                                              }
                                              int v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3421, v43);
                                            }
                                          }
                                          int v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_82;
                                        }
                                        uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3417, v42);
                                      }
                                    }
                                    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_78;
                                  }
                                  unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3416, v41);
                                }
                              }
                              unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_74;
                            }
                            uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3415, v40);
                          }
                          uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                          goto LABEL_70;
                        }
                        uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3414, v39);
                      }
                      uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_66;
                    }
                    uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3413, v38);
                  }
                  uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_62;
                }
                uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3412, v37);
              }
              uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_58;
            }
            uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3411, v36);
          }
          uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_54;
        }
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3410, v35);
      }
    }
    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_50;
  }
  return result;
}

uint64_t sub_100128868(__int16 a1, __int16 a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15)
{
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  uint64_t result = sub_100059D70(&v69);
  if (result) {
    return result;
  }
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_102;
  }
  uint64_t v26 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_102:
    uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_104;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_104:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3463, v58);
  }
  ++WORD2(v70);
  *(unsigned char *)(v69 + v26) = 10;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_106;
  }
  if (WORD1(v70) - WORD2(v70) <= 1)
  {
LABEL_106:
    uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_108;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_108:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3464, v59);
  }
  *(_WORD *)(v69 + WORD2(v70)) = a1;
  unsigned __int16 v27 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_110;
  }
  if (WORD1(v70) - v27 <= 1)
  {
LABEL_110:
    uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_112;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_112:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3465, v60);
  }
  *(unsigned char *)(v69 + v27) = a2;
  *(unsigned char *)(v69 + WORD2(v70) + 1) = HIBYTE(a2);
  __int16 v28 = WORD2(v70);
  unsigned __int16 v29 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_114;
  }
  if (WORD1(v70) <= v29)
  {
LABEL_114:
    uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_116;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_116:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3466, v61);
  }
  WORD2(v70) = v28 + 3;
  *(unsigned char *)(v69 + v29) = a3;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_118;
  }
  if (WORD1(v70) - WORD2(v70) <= 1)
  {
LABEL_118:
    uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_120;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_120:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3467, v62);
  }
  *(_WORD *)(v69 + WORD2(v70)) = a4;
  __int16 v30 = WORD2(v70);
  unsigned __int16 v31 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_122;
  }
  if (WORD1(v70) <= v31)
  {
LABEL_122:
    uint64_t v63 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_124;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_124:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3468, v63);
  }
  WORD2(v70) = v30 + 3;
  *(unsigned char *)(v69 + v31) = a5;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_126;
  }
  uint64_t v32 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_126:
    uint64_t v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_128;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_128:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3469, v64);
  }
  ++WORD2(v70);
  *(unsigned char *)(v69 + v32) = a6;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_130;
  }
  uint64_t v33 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_130:
    uint64_t v65 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_132;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_132:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3470, v65);
  }
  ++WORD2(v70);
  *(unsigned char *)(v69 + v33) = a7;
  if (a10)
  {
    uint64_t v34 = 15;
    while (!HIBYTE(v70))
    {
      uint64_t v35 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70)) {
        goto LABEL_78;
      }
      if (BYTE6(v70) != 2)
      {
        unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_80;
      }
      char v36 = *(unsigned char *)(a10 + v34);
      ++WORD2(v70);
      *(unsigned char *)(v69 + v35) = v36;
      if (--v34 == -1) {
        goto LABEL_39;
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_78:
    unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_80:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3478, v52);
  }
  int v37 = -16;
  do
  {
    if (HIBYTE(v70))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_90:
      BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_92:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3473, v55);
    }
    uint64_t v38 = WORD2(v70);
    if (WORD1(v70) <= WORD2(v70)) {
      goto LABEL_90;
    }
    if (BYTE6(v70) != 2)
    {
      BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
      goto LABEL_92;
    }
    ++WORD2(v70);
    *(unsigned char *)(v69 + v38) = 0;
  }
  while (!__CFADD__(v37++, 1));
LABEL_39:
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_134;
  }
  uint64_t v40 = WORD2(v70);
  if (WORD1(v70) <= WORD2(v70))
  {
LABEL_134:
    uint64_t v66 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_136;
  }
  if (BYTE6(v70) != 2)
  {
    uint64_t v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_136:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3481, v66);
  }
  ++WORD2(v70);
  *(unsigned char *)(v69 + v40) = 0;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_138;
  }
  if (WORD1(v70) - WORD2(v70) <= 1)
  {
LABEL_138:
    unsigned int v67 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_140;
  }
  if (BYTE6(v70) != 2)
  {
    unsigned int v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_140:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3482, v67);
  }
  *(_WORD *)(v69 + WORD2(v70)) = 0;
  unsigned __int16 v41 = WORD2(v70) + 2;
  WORD2(v70) += 2;
  if (HIBYTE(v70))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_142;
  }
  if (WORD1(v70) - v41 <= 1)
  {
LABEL_142:
    int v68 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_144;
  }
  if (BYTE6(v70) != 2)
  {
    int v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_144:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3483, v68);
  }
  uint64_t v42 = a14;
  *(unsigned char *)(v69 + v41) = a14;
  *(unsigned char *)(v69 + WORD2(v70) + 1) = 0;
  WORD2(v70) += 2;
  if (a12)
  {
    if (a14)
    {
      uint64_t v43 = a14;
      while (!HIBYTE(v70))
      {
        uint64_t v44 = WORD2(v70);
        if (WORD1(v70) <= WORD2(v70)) {
          goto LABEL_82;
        }
        if (BYTE6(v70) != 2)
        {
          unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_84;
        }
        char v45 = *(unsigned char *)(a12 - 1 + v43--);
        ++WORD2(v70);
        *(unsigned char *)(v69 + v44) = v45;
        if ((unint64_t)(v43 + 1) <= 1) {
          goto LABEL_62;
        }
      }
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_82:
      unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_84:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3491, v53);
    }
  }
  else if (a14)
  {
    int v46 = a14 + 1;
    while (!HIBYTE(v70))
    {
      uint64_t v47 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70)) {
        goto LABEL_94;
      }
      if (BYTE6(v70) != 2)
      {
        unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_96;
      }
      ++WORD2(v70);
      *(unsigned char *)(v69 + v47) = 0;
      if (--v46 <= 1) {
        goto LABEL_62;
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_94:
    unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_96:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3486, v56);
  }
LABEL_62:
  if (a13)
  {
    if (a14)
    {
      while (!HIBYTE(v70))
      {
        uint64_t v48 = WORD2(v70);
        if (WORD1(v70) <= WORD2(v70)) {
          goto LABEL_86;
        }
        if (BYTE6(v70) != 2)
        {
          int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_88;
        }
        char v49 = *(unsigned char *)(a13 - 1 + v42--);
        ++WORD2(v70);
        *(unsigned char *)(v69 + v48) = v49;
        if ((unint64_t)(v42 + 1) <= 1) {
          return sub_10001BCBC(65014, v69, BYTE4(v70), a15, (uint64_t)sub_100130904, v23, v24, v25);
        }
      }
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_86:
      int v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_88:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3501, v54);
    }
  }
  else if (a14)
  {
    int v50 = a14 + 1;
    while (!HIBYTE(v70))
    {
      uint64_t v51 = WORD2(v70);
      if (WORD1(v70) <= WORD2(v70)) {
        goto LABEL_98;
      }
      if (BYTE6(v70) != 2)
      {
        uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_100;
      }
      ++WORD2(v70);
      *(unsigned char *)(v69 + v51) = 0;
      if (--v50 <= 1) {
        return sub_10001BCBC(65014, v69, BYTE4(v70), a15, (uint64_t)sub_100130904, v23, v24, v25);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_98:
    uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_100:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3496, v57);
  }
  return sub_10001BCBC(65014, v69, BYTE4(v70), a15, (uint64_t)sub_100130904, v23, v24, v25);
}

uint64_t sub_100129220(__int16 a1, char a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t result = sub_100059D70(&v20);
  if (!result)
  {
    if (HIBYTE(v21))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v12 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(unsigned char *)(v20 + v12) = 7;
          if (HIBYTE(v21))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v21) - WORD2(v21) > 1)
          {
            if (BYTE6(v21) == 2)
            {
              *(_WORD *)(v20 + WORD2(v21)) = a1;
              __int16 v13 = WORD2(v21);
              unsigned __int16 v14 = WORD2(v21) + 2;
              WORD2(v21) += 2;
              if (HIBYTE(v21))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v21) > v14)
              {
                if (BYTE6(v21) == 2)
                {
                  WORD2(v21) = v13 + 3;
                  *(unsigned char *)(v20 + v14) = a2;
                  if (HIBYTE(v21))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v15 = WORD2(v21);
                    if (WORD1(v21) > WORD2(v21))
                    {
                      if (BYTE6(v21) == 2)
                      {
                        ++WORD2(v21);
                        *(unsigned char *)(v20 + v15) = a3;
                        return sub_10001BCBC(65014, v20, BYTE4(v21), a4, (uint64_t)sub_100130A70, v9, v10, v11);
                      }
                      uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3657, v19);
                    }
                  }
                  uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }
                uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3656, v18);
              }
              uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_27;
            }
            uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3655, v17);
          }
          uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_23;
        }
        __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3654, v16);
      }
    }
    __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_100129490(__int16 a1, __int16 a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t result = sub_100059D70(&v43);
  if (result) {
    return result;
  }
  if (HIBYTE(v44))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_68;
  }
  uint64_t v14 = WORD2(v44);
  if (WORD1(v44) <= WORD2(v44))
  {
LABEL_68:
    uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_70;
  }
  if (BYTE6(v44) != 2)
  {
    uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3535, v39);
  }
  ++WORD2(v44);
  *(unsigned char *)(v43 + v14) = 4;
  if (HIBYTE(v44))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_72;
  }
  if (WORD1(v44) - WORD2(v44) <= 1)
  {
LABEL_72:
    uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_74;
  }
  if (BYTE6(v44) != 2)
  {
    uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3536, v40);
  }
  *(_WORD *)(v43 + WORD2(v44)) = a1;
  __int16 v15 = WORD2(v44);
  unsigned __int16 v16 = WORD2(v44) + 2;
  WORD2(v44) += 2;
  if (HIBYTE(v44))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_76;
  }
  if (WORD1(v44) <= v16)
  {
LABEL_76:
    unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_78;
  }
  if (BYTE6(v44) != 2)
  {
    unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3537, v41);
  }
  WORD2(v44) = v15 + 3;
  *(unsigned char *)(v43 + v16) = a2;
  if (HIBYTE(v44))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_80;
  }
  uint64_t v17 = WORD2(v44);
  if (WORD1(v44) <= WORD2(v44))
  {
LABEL_80:
    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_82;
  }
  if (BYTE6(v44) != 2)
  {
    uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3538, v42);
  }
  ++WORD2(v44);
  *(unsigned char *)(v43 + v17) = a3;
  int v18 = (unsigned __int16)(a3 - a2 + 1);
  if (v18)
  {
    while (!HIBYTE(v44))
    {
      if (WORD1(v44) - WORD2(v44) <= 5) {
        goto LABEL_40;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_42;
      }
      sub_100008A18(v43 + WORD2(v44), a4, 6uLL);
      __int16 v19 = WORD2(v44);
      unsigned __int16 v20 = WORD2(v44) + 6;
      WORD2(v44) += 6;
      if (HIBYTE(v44))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_44:
        uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_46:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3543, v33);
      }
      if (WORD1(v44) <= v20) {
        goto LABEL_44;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_46;
      }
      char v21 = *(unsigned char *)(a4 + 6);
      WORD2(v44) = v19 + 7;
      *(unsigned char *)(v43 + v20) = v21;
      if (HIBYTE(v44))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_48:
        uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_50:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3544, v34);
      }
      if (WORD1(v44) - WORD2(v44) <= 5) {
        goto LABEL_48;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_50;
      }
      unsigned __int16 v22 = (unsigned char *)(a4 + 7);
      sub_100008A18(v43 + WORD2(v44), (uint64_t)v22, 6uLL);
      __int16 v23 = WORD2(v44);
      unsigned __int16 v24 = WORD2(v44) + 6;
      WORD2(v44) += 6;
      if (HIBYTE(v44))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_52:
        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_54:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3545, v35);
      }
      if (WORD1(v44) <= v24) {
        goto LABEL_52;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_54;
      }
      char v25 = v22[6];
      WORD2(v44) = v23 + 7;
      *(unsigned char *)(v43 + v24) = v25;
      if (HIBYTE(v44))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_56:
        char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_58:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3546, v36);
      }
      uint64_t v26 = WORD2(v44);
      if (WORD1(v44) <= WORD2(v44)) {
        goto LABEL_56;
      }
      if (BYTE6(v44) != 2)
      {
        char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_58;
      }
      char v27 = v22[7];
      ++WORD2(v44);
      *(unsigned char *)(v43 + v26) = v27;
      if (HIBYTE(v44))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_60:
        int v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_62:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3547, v37);
      }
      uint64_t v28 = WORD2(v44);
      if (WORD1(v44) <= WORD2(v44)) {
        goto LABEL_60;
      }
      if (BYTE6(v44) != 2)
      {
        int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_62;
      }
      char v29 = v22[8];
      ++WORD2(v44);
      *(unsigned char *)(v43 + v28) = v29;
      if (HIBYTE(v44))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_64:
        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_66:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3548, v38);
      }
      uint64_t v30 = WORD2(v44);
      if (WORD1(v44) <= WORD2(v44)) {
        goto LABEL_64;
      }
      if (BYTE6(v44) != 2)
      {
        uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_66;
      }
      char v31 = v22[9];
      ++WORD2(v44);
      *(unsigned char *)(v43 + v30) = v31;
      a4 = (uint64_t)(v22 + 10);
      if (!--v18) {
        return sub_10001BCBC(65014, v43, BYTE4(v44), a5, (uint64_t)sub_100130BDC, v11, v12, v13);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_40:
    uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_42:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3542, v32);
  }
  return sub_10001BCBC(65014, v43, BYTE4(v44), a5, (uint64_t)sub_100130BDC, v11, v12, v13);
}

uint64_t sub_100129AB0(__int16 a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t result = sub_100059D70(&v28);
  if (!result)
  {
    if (HIBYTE(v29))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v16 = WORD2(v29);
      if (WORD1(v29) > WORD2(v29))
      {
        if (BYTE6(v29) == 2)
        {
          ++WORD2(v29);
          *(unsigned char *)(v28 + v16) = 5;
          if (HIBYTE(v29))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v29) - WORD2(v29) > 1)
          {
            if (BYTE6(v29) == 2)
            {
              *(_WORD *)(v28 + WORD2(v29)) = a1;
              __int16 v17 = WORD2(v29);
              unsigned __int16 v18 = WORD2(v29) + 2;
              WORD2(v29) += 2;
              if (HIBYTE(v29))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v29) > v18)
              {
                if (BYTE6(v29) == 2)
                {
                  WORD2(v29) = v17 + 3;
                  *(unsigned char *)(v28 + v18) = a2;
                  if (HIBYTE(v29))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v19 = WORD2(v29);
                    if (WORD1(v29) > WORD2(v29))
                    {
                      if (BYTE6(v29) == 2)
                      {
                        ++WORD2(v29);
                        *(unsigned char *)(v28 + v19) = a3;
                        if (HIBYTE(v29))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v20 = WORD2(v29);
                          if (WORD1(v29) > WORD2(v29))
                          {
                            if (BYTE6(v29) == 2)
                            {
                              ++WORD2(v29);
                              *(unsigned char *)(v28 + v20) = a4;
                              if (HIBYTE(v29))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else
                              {
                                uint64_t v21 = WORD2(v29);
                                if (WORD1(v29) > WORD2(v29))
                                {
                                  if (BYTE6(v29) == 2)
                                  {
                                    ++WORD2(v29);
                                    *(unsigned char *)(v28 + v21) = a5;
                                    return sub_10001BCBC(65014, v28, BYTE4(v29), a6, (uint64_t)sub_100130D48, v13, v14, v15);
                                  }
                                  char v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3587, v27);
                                }
                              }
                              char v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_45;
                            }
                            uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3586, v26);
                          }
                        }
                        uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_41;
                      }
                      char v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3585, v25);
                    }
                  }
                  char v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }
                unsigned __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3584, v24);
              }
              unsigned __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_33;
            }
            __int16 v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3583, v23);
          }
          __int16 v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }
        unsigned __int16 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3582, v22);
      }
    }
    unsigned __int16 v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_100129E20(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = 6;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10001BCBC(65014, v11, BYTE4(v12), a2, (uint64_t)sub_100130EB4, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3622, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3621, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100129F90(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v11) = a2;
                return sub_10001BCBC(65476, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
              }
              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3766, v13);
            }
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3765, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10012A0EC(__int16 a1, __int16 a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (!result)
  {
    if (HIBYTE(v23))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v23) - WORD2(v23) > 1)
    {
      if (BYTE6(v23) == 2)
      {
        *(_WORD *)(v22 + WORD2(v23)) = a1;
        unsigned __int16 v14 = WORD2(v23) + 2;
        WORD2(v23) += 2;
        if (HIBYTE(v23))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v23) - v14 > 1)
        {
          if (BYTE6(v23) == 2)
          {
            *(unsigned char *)(v22 + v14) = a2;
            *(unsigned char *)(v22 + WORD2(v23) + 1) = HIBYTE(a2);
            __int16 v15 = WORD2(v23);
            unsigned __int16 v16 = WORD2(v23) + 2;
            WORD2(v23) += 2;
            if (HIBYTE(v23))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v23) > v16)
            {
              if (BYTE6(v23) == 2)
              {
                WORD2(v23) = v15 + 3;
                *(unsigned char *)(v22 + v16) = a3;
                if (HIBYTE(v23))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v17 = WORD2(v23);
                  if (WORD1(v23) > WORD2(v23))
                  {
                    if (BYTE6(v23) == 2)
                    {
                      ++WORD2(v23);
                      *(unsigned char *)(v22 + v17) = a4;
                      return sub_10001BCBC(65478, v22, BYTE4(v23), a5, (uint64_t)sub_100117CF4, v11, v12, v13);
                    }
                    uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3797, v21);
                  }
                }
                uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_31;
              }
              uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3796, v20);
            }
            uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }
          uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3795, v19);
        }
        uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_23;
      }
      unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3794, v18);
    }
    unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10012A380(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(65480, v10, BYTE4(v11), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3780, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10012A458(char a1, uint64_t a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v8) = 16;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v9 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v9) = 16;
                if (HIBYTE(v15))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v10 = WORD2(v15);
                  if (WORD1(v15) > WORD2(v15))
                  {
                    if (BYTE6(v15) == 2)
                    {
                      ++WORD2(v15);
                      *(unsigned char *)(v14 + v10) = a1;
                      return sub_10001BCBC(65317, v14, BYTE4(v15), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                    }
                    uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3673, v13);
                  }
                }
                uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }
              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3672, v12);
            }
          }
          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }
        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3671, v11);
      }
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012A628(char a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, char a10, __int16 a11, char a12, uint64_t a13)
{
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  uint64_t result = sub_100059D70(&v45);
  if (!result)
  {
    if (HIBYTE(v46))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v25 = WORD2(v46);
      if (WORD1(v46) > WORD2(v46))
      {
        if (BYTE6(v46) == 2)
        {
          ++WORD2(v46);
          *(unsigned char *)(v45 + v25) = a1;
          if (HIBYTE(v46))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v26 = WORD2(v46);
            if (WORD1(v46) > WORD2(v46))
            {
              if (BYTE6(v46) == 2)
              {
                ++WORD2(v46);
                *(unsigned char *)(v45 + v26) = a2;
                if (HIBYTE(v46))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v46) - WORD2(v46) > 3)
                {
                  if (BYTE6(v46) == 2)
                  {
                    *(_WORD *)(v45 + WORD2(v46)) = a3;
                    *(unsigned char *)(v45 + WORD2(v46) + 2) = BYTE2(a3);
                    *(unsigned char *)(v45 + WORD2(v46) + 3) = HIBYTE(a3);
                    unsigned __int16 v27 = WORD2(v46) + 4;
                    WORD2(v46) += 4;
                    if (HIBYTE(v46))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else if (WORD1(v46) - v27 > 3)
                    {
                      if (BYTE6(v46) == 2)
                      {
                        *(unsigned char *)(v45 + v27) = a4;
                        *(unsigned char *)(v45 + WORD2(v46) + 1) = BYTE1(a4);
                        *(unsigned char *)(v45 + WORD2(v46) + 2) = BYTE2(a4);
                        *(unsigned char *)(v45 + WORD2(v46) + 3) = HIBYTE(a4);
                        unsigned __int16 v28 = WORD2(v46) + 4;
                        WORD2(v46) += 4;
                        if (HIBYTE(v46))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else if (WORD1(v46) - v28 > 3)
                        {
                          if (BYTE6(v46) == 2)
                          {
                            *(unsigned char *)(v45 + v28) = a5;
                            *(unsigned char *)(v45 + WORD2(v46) + 1) = BYTE1(a5);
                            *(unsigned char *)(v45 + WORD2(v46) + 2) = BYTE2(a5);
                            *(unsigned char *)(v45 + WORD2(v46) + 3) = HIBYTE(a5);
                            unsigned __int16 v29 = WORD2(v46) + 4;
                            WORD2(v46) += 4;
                            if (HIBYTE(v46))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else if (WORD1(v46) - v29 > 3)
                            {
                              if (BYTE6(v46) == 2)
                              {
                                *(unsigned char *)(v45 + v29) = a6;
                                *(unsigned char *)(v45 + WORD2(v46) + 1) = BYTE1(a6);
                                *(unsigned char *)(v45 + WORD2(v46) + 2) = BYTE2(a6);
                                *(unsigned char *)(v45 + WORD2(v46) + 3) = HIBYTE(a6);
                                unsigned __int16 v30 = WORD2(v46) + 4;
                                WORD2(v46) += 4;
                                if (HIBYTE(v46))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }
                                else if (WORD1(v46) - v30 > 3)
                                {
                                  if (BYTE6(v46) == 2)
                                  {
                                    *(unsigned char *)(v45 + v30) = a7;
                                    *(unsigned char *)(v45 + WORD2(v46) + 1) = BYTE1(a7);
                                    *(unsigned char *)(v45 + WORD2(v46) + 2) = BYTE2(a7);
                                    *(unsigned char *)(v45 + WORD2(v46) + 3) = HIBYTE(a7);
                                    unsigned __int16 v31 = WORD2(v46) + 4;
                                    WORD2(v46) += 4;
                                    if (HIBYTE(v46))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else if (WORD1(v46) - v31 > 3)
                                    {
                                      if (BYTE6(v46) == 2)
                                      {
                                        *(unsigned char *)(v45 + v31) = a8;
                                        *(unsigned char *)(v45 + WORD2(v46) + 1) = BYTE1(a8);
                                        *(unsigned char *)(v45 + WORD2(v46) + 2) = BYTE2(a8);
                                        *(unsigned char *)(v45 + WORD2(v46) + 3) = HIBYTE(a8);
                                        unsigned __int16 v32 = WORD2(v46) + 4;
                                        WORD2(v46) += 4;
                                        if (HIBYTE(v46))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }
                                        else if (WORD1(v46) - v32 > 3)
                                        {
                                          if (BYTE6(v46) == 2)
                                          {
                                            *(unsigned char *)(v45 + v32) = a9;
                                            *(unsigned char *)(v45 + WORD2(v46) + 1) = a10;
                                            *(_WORD *)(v45 + WORD2(v46) + 2) = a11;
                                            __int16 v33 = WORD2(v46);
                                            unsigned __int16 v34 = WORD2(v46) + 4;
                                            WORD2(v46) += 4;
                                            if (HIBYTE(v46))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
                                            }
                                            else if (WORD1(v46) > v34)
                                            {
                                              if (BYTE6(v46) == 2)
                                              {
                                                WORD2(v46) = v33 + 5;
                                                *(unsigned char *)(v45 + v34) = a12;
                                                return sub_10001BCBC(65049, v45, BYTE4(v46), a13, (uint64_t)sub_100117CF4, v22, v23, v24);
                                              }
                                              uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3847, v44);
                                            }
                                            uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                            goto LABEL_73;
                                          }
                                          uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3846, v43);
                                        }
                                        uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                        goto LABEL_69;
                                      }
                                      uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3845, v42);
                                    }
                                    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                    goto LABEL_65;
                                  }
                                  unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3844, v41);
                                }
                                unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                goto LABEL_61;
                              }
                              uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3843, v40);
                            }
                            uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                            goto LABEL_57;
                          }
                          uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3842, v39);
                        }
                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                        goto LABEL_53;
                      }
                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3841, v38);
                    }
                    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                    goto LABEL_49;
                  }
                  int v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3840, v37);
                }
                int v37 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_45;
              }
              char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3839, v36);
            }
          }
          char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_41;
        }
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3838, v35);
      }
    }
    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_10012AD4C(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v11) = a2;
                return sub_10001BCBC(65050, v14, BYTE4(v15), a3, (uint64_t)sub_100117CF4, v7, v8, v9);
              }
              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3862, v13);
            }
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3861, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10012AEA8(char a1, uint64_t a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v8) = 0;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v9 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v9) = 1;
                if (HIBYTE(v15))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v10 = WORD2(v15);
                  if (WORD1(v15) > WORD2(v15))
                  {
                    if (BYTE6(v15) == 2)
                    {
                      ++WORD2(v15);
                      *(unsigned char *)(v14 + v10) = a1;
                      return sub_10001BCBC(65520, v14, BYTE4(v15), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                    }
                    uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3036, v13);
                  }
                }
                uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }
              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3035, v12);
            }
          }
          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }
        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3032, v11);
      }
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012B074(char a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(unsigned char *)(v13 + WORD2(v14)) = 0;
              *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
              *(unsigned char *)(v13 + WORD2(v14) + 3) = 0;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(unsigned char *)(v13 + v9) = 0;
                  *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                  *(unsigned char *)(v13 + WORD2(v14) + 3) = 0;
                  WORD2(v14) += 4;
                  return sub_10001BCBC(65428, v13, BYTE4(v14), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                }
                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3051, v12);
              }
              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }
            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3050, v11);
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3049, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012B2AC(char a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(unsigned char *)(v13 + WORD2(v14)) = 0;
              *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
              *(unsigned char *)(v13 + WORD2(v14) + 3) = 0;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(unsigned char *)(v13 + v9) = 0;
                  *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                  *(unsigned char *)(v13 + WORD2(v14) + 3) = 0;
                  WORD2(v14) += 4;
                  return sub_10001BCBC(65429, v13, BYTE4(v14), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                }
                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3066, v12);
              }
              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }
            uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3065, v11);
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3064, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012B4E4(_OWORD *a1, uint64_t a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v15) - (unint64_t)WORD2(v15) > 0x1F)
    {
      if (BYTE6(v15) == 2)
      {
        uint64_t v8 = (_OWORD *)(v14 + WORD2(v15));
        long long v9 = a1[1];
        *uint64_t v8 = *a1;
        v8[1] = v9;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 32;
        WORD2(v15) += 32;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 33;
            *(unsigned char *)(v14 + v11) = -1;
            return sub_10001BCBC(64890, v14, BYTE4(v15), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3080, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3079, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= (sizeof(VSCTraceMask))";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10012B648(_OWORD *a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v16) - (unint64_t)WORD2(v16) > 0x1F)
    {
      if (BYTE6(v16) == 2)
      {
        uint64_t v8 = (_OWORD *)(v15 + WORD2(v16));
        long long v9 = a1[1];
        *uint64_t v8 = *a1;
        v8[1] = v9;
        unsigned __int16 v10 = WORD2(v16) + 32;
        WORD2(v16) += 32;
        if (HIBYTE(v16))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v16) - v10 > 3)
        {
          if (BYTE6(v16) == 2)
          {
            *(unsigned char *)(v15 + v10) = 0;
            *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
            *(unsigned char *)(v15 + WORD2(v16) + 3) = 0;
            unsigned __int16 v11 = WORD2(v16) + 4;
            WORD2(v16) += 4;
            if (HIBYTE(v16))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v16) - v11 > 3)
            {
              if (BYTE6(v16) == 2)
              {
                *(unsigned char *)(v15 + v11) = 0;
                *(_WORD *)(v15 + WORD2(v16) + 1) = 0;
                *(unsigned char *)(v15 + WORD2(v16) + 3) = 0;
                WORD2(v16) += 4;
                return sub_10001BCBC(65430, v15, BYTE4(v16), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
              }
              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3095, v14);
            }
            uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_24;
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3094, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_20;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3093, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= (sizeof(VSCTraceMask))";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012B890(int a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v14) - WORD2(v14) > 3)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = a1;
        *(unsigned char *)(v13 + WORD2(v14) + 2) = BYTE2(a1);
        *(unsigned char *)(v13 + WORD2(v14) + 3) = HIBYTE(a1);
        unsigned __int16 v8 = WORD2(v14) + 4;
        WORD2(v14) += 4;
        if (HIBYTE(v14))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v14) - v8 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(unsigned char *)(v13 + v8) = 0;
            *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
            *(unsigned char *)(v13 + WORD2(v14) + 3) = 0;
            unsigned __int16 v9 = WORD2(v14) + 4;
            WORD2(v14) += 4;
            if (HIBYTE(v14))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v14) - v9 > 3)
            {
              if (BYTE6(v14) == 2)
              {
                *(unsigned char *)(v13 + v9) = 0;
                *(_WORD *)(v13 + WORD2(v14) + 1) = 0;
                *(unsigned char *)(v13 + WORD2(v14) + 3) = 0;
                WORD2(v14) += 4;
                return sub_10001BCBC(65431, v13, BYTE4(v14), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
              }
              uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3110, v12);
            }
            uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_24;
          }
          unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3109, v11);
        }
        unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_20;
      }
      unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3108, v10);
    }
    unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012BB0C(int a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 3)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        *(unsigned char *)(v9 + WORD2(v10) + 2) = BYTE2(a1);
        *(unsigned char *)(v9 + WORD2(v10) + 3) = HIBYTE(a1);
        WORD2(v10) += 4;
        return sub_10001BCBC(65522, v9, BYTE4(v10), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
      }
      unsigned __int16 v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3241, v8);
    }
    unsigned __int16 v8 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10012BC28(char a1, void (*a2)(void))
{
  byte_100A02040 = a1;
  return 0;
}

uint64_t sub_10012BC5C(__int16 a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10001BCBC(a1, a2, a3, a4, (uint64_t)sub_100117CF4, a6, a7, a8);
}

uint64_t sub_10012BC74(char a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v8) = a1;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v14) - WORD2(v14) > 3)
          {
            if (BYTE6(v14) == 2)
            {
              *(unsigned char *)(v13 + WORD2(v14)) = -1;
              *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
              *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
              *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
              unsigned __int16 v9 = WORD2(v14) + 4;
              WORD2(v14) += 4;
              if (HIBYTE(v14))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v14) - v9 > 3)
              {
                if (BYTE6(v14) == 2)
                {
                  *(unsigned char *)(v13 + v9) = -1;
                  *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
                  *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
                  *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
                  WORD2(v14) += 4;
                  return sub_10001BCBC(64898, v13, BYTE4(v14), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                }
                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1157, v12);
              }
              uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_24;
            }
            unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1156, v11);
          }
          unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_20;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1155, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10012BEB0(__int16 a1, char a2, char a3, char *a4, unsigned int a5, uint64_t a6)
{
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t result = sub_100059D70(&v26);
  if (result) {
    return result;
  }
  if (HIBYTE(v27))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_24;
  }
  if (WORD1(v27) - WORD2(v27) <= 1)
  {
LABEL_24:
    uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_26;
  }
  if (BYTE6(v27) != 2)
  {
    uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2208, v23);
  }
  *(_WORD *)(v26 + WORD2(v27)) = a1;
  __int16 v16 = WORD2(v27);
  unsigned __int16 v17 = WORD2(v27) + 2;
  WORD2(v27) += 2;
  if (HIBYTE(v27))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_28;
  }
  if (WORD1(v27) <= v17)
  {
LABEL_28:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_30;
  }
  if (BYTE6(v27) != 2)
  {
    uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2209, v24);
  }
  WORD2(v27) = v16 + 3;
  *(unsigned char *)(v26 + v17) = a2;
  if (HIBYTE(v27))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_32;
  }
  uint64_t v18 = WORD2(v27);
  if (WORD1(v27) <= WORD2(v27))
  {
LABEL_32:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }
  if (BYTE6(v27) != 2)
  {
    uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2210, v25);
  }
  ++WORD2(v27);
  *(unsigned char *)(v26 + v18) = a3;
  if (a5)
  {
    uint64_t v19 = a5;
    while (!HIBYTE(v27))
    {
      uint64_t v20 = WORD2(v27);
      if (WORD1(v27) <= WORD2(v27)) {
        goto LABEL_20;
      }
      if (BYTE6(v27) != 2)
      {
        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_22;
      }
      char v21 = *a4++;
      ++WORD2(v27);
      *(unsigned char *)(v26 + v20) = v21;
      if (!--v19) {
        return sub_10001BCBC(65475, v26, BYTE4(v27), a6, (uint64_t)sub_100117CF4, v13, v14, v15);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_20:
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2212, v22);
  }
  return sub_10001BCBC(65475, v26, BYTE4(v27), a6, (uint64_t)sub_100117CF4, v13, v14, v15);
}

uint64_t sub_10012C140(int a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v12) - WORD2(v12) > 3)
    {
      if (BYTE6(v12) == 2)
      {
        *(_WORD *)(v11 + WORD2(v12)) = a1;
        *(unsigned char *)(v11 + WORD2(v12) + 2) = BYTE2(a1);
        *(unsigned char *)(v11 + WORD2(v12) + 3) = HIBYTE(a1);
        unsigned __int16 v8 = WORD2(v12) + 4;
        WORD2(v12) += 4;
        if (HIBYTE(v12))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v12) - v8 > 3)
        {
          if (BYTE6(v12) == 2)
          {
            *(unsigned char *)(v11 + v8) = 1;
            *(_WORD *)(v11 + WORD2(v12) + 1) = 0;
            *(unsigned char *)(v11 + WORD2(v12) + 3) = 0;
            WORD2(v12) += 4;
            return sub_10001BCBC(65393, v11, BYTE4(v12), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
          }
          uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1134, v10);
        }
        uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }
      unsigned __int16 v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 1133, v9);
    }
    unsigned __int16 v9 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10012C310(char a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(unsigned char *)(v15 + v8) = a1;
          if (HIBYTE(v16))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v16) - WORD2(v16) > 3)
          {
            if (BYTE6(v16) == 2)
            {
              *(unsigned char *)(v15 + WORD2(v16)) = -1;
              *(unsigned char *)(v15 + WORD2(v16) + 1) = -1;
              *(unsigned char *)(v15 + WORD2(v16) + 2) = -1;
              *(unsigned char *)(v15 + WORD2(v16) + 3) = -1;
              unsigned __int16 v9 = WORD2(v16) + 4;
              WORD2(v16) += 4;
              if (HIBYTE(v16))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v16) - v9 > 3)
              {
                if (BYTE6(v16) == 2)
                {
                  *(unsigned char *)(v15 + v9) = -1;
                  *(unsigned char *)(v15 + WORD2(v16) + 1) = -1;
                  *(unsigned char *)(v15 + WORD2(v16) + 2) = -1;
                  *(unsigned char *)(v15 + WORD2(v16) + 3) = -1;
                  unsigned __int16 v10 = WORD2(v16) + 4;
                  WORD2(v16) += 4;
                  if (HIBYTE(v16))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else if (WORD1(v16) - v10 > 3)
                  {
                    if (BYTE6(v16) == 2)
                    {
                      *(unsigned char *)(v15 + v10) = -1;
                      *(unsigned char *)(v15 + WORD2(v16) + 1) = -1;
                      *(unsigned char *)(v15 + WORD2(v16) + 2) = -1;
                      *(unsigned char *)(v15 + WORD2(v16) + 3) = -1;
                      WORD2(v16) += 4;
                      return sub_10001BCBC(64906, v15, BYTE4(v16), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
                    }
                    uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3751, v14);
                  }
                  uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                  goto LABEL_31;
                }
                uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3750, v13);
              }
              uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
              goto LABEL_27;
            }
            uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3749, v12);
          }
          uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_23;
        }
        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3748, v11);
      }
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10012C5FC(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65360, v6, BYTE4(v7), a1, (uint64_t)sub_1001187D4, v3, v4, v5);
  }
  return result;
}

uint64_t sub_10012C658(char a1, __int16 a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, int a16, int a17, char a18, char a19, __int16 a20,char a21,int a22,uint64_t a23)
{
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  uint64_t result = sub_100059D70(&v70);
  if (!result)
  {
    if (HIBYTE(v71))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v35 = WORD2(v71);
      if (WORD1(v71) > WORD2(v71))
      {
        if (BYTE6(v71) == 2)
        {
          ++WORD2(v71);
          *(unsigned char *)(v70 + v35) = a1;
          if (HIBYTE(v71))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v71) - WORD2(v71) > 1)
          {
            if (BYTE6(v71) == 2)
            {
              *(_WORD *)(v70 + WORD2(v71)) = a2;
              __int16 v36 = WORD2(v71);
              unsigned __int16 v37 = WORD2(v71) + 2;
              WORD2(v71) += 2;
              if (HIBYTE(v71))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v71) > v37)
              {
                if (BYTE6(v71) == 2)
                {
                  WORD2(v71) = v36 + 3;
                  *(unsigned char *)(v70 + v37) = a3;
                  if (HIBYTE(v71))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v38 = WORD2(v71);
                    if (WORD1(v71) > WORD2(v71))
                    {
                      if (BYTE6(v71) == 2)
                      {
                        ++WORD2(v71);
                        *(unsigned char *)(v70 + v38) = a4;
                        if (HIBYTE(v71))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v39 = WORD2(v71);
                          if (WORD1(v71) > WORD2(v71))
                          {
                            if (BYTE6(v71) == 2)
                            {
                              ++WORD2(v71);
                              *(unsigned char *)(v70 + v39) = a5;
                              if (HIBYTE(v71))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else
                              {
                                uint64_t v40 = WORD2(v71);
                                if (WORD1(v71) > WORD2(v71))
                                {
                                  if (BYTE6(v71) == 2)
                                  {
                                    ++WORD2(v71);
                                    *(unsigned char *)(v70 + v40) = a6;
                                    if (HIBYTE(v71))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v41 = WORD2(v71);
                                      if (WORD1(v71) > WORD2(v71))
                                      {
                                        if (BYTE6(v71) == 2)
                                        {
                                          ++WORD2(v71);
                                          *(unsigned char *)(v70 + v41) = a7;
                                          if (HIBYTE(v71))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v42 = WORD2(v71);
                                            if (WORD1(v71) > WORD2(v71))
                                            {
                                              if (BYTE6(v71) == 2)
                                              {
                                                ++WORD2(v71);
                                                *(unsigned char *)(v70 + v42) = a8;
                                                if (HIBYTE(v71))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v43 = WORD2(v71);
                                                  if (WORD1(v71) > WORD2(v71))
                                                  {
                                                    if (BYTE6(v71) == 2)
                                                    {
                                                      ++WORD2(v71);
                                                      *(unsigned char *)(v70 + v43) = a9;
                                                      if (HIBYTE(v71))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                      }
                                                      else if (WORD1(v71) - WORD2(v71) > 1)
                                                      {
                                                        if (BYTE6(v71) == 2)
                                                        {
                                                          *(_WORD *)(v70 + WORD2(v71)) = a10;
                                                          unsigned __int16 v44 = WORD2(v71) + 2;
                                                          WORD2(v71) += 2;
                                                          if (HIBYTE(v71))
                                                          {
                                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                          }
                                                          else if (WORD1(v71) - v44 > 1)
                                                          {
                                                            if (BYTE6(v71) == 2)
                                                            {
                                                              *(unsigned char *)(v70 + v44) = a11;
                                                              *(unsigned char *)(v70 + WORD2(v71) + 1) = a12;
                                                              unsigned __int16 v45 = WORD2(v71) + 2;
                                                              WORD2(v71) += 2;
                                                              if (HIBYTE(v71))
                                                              {
                                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sou"
                                                                                       "rces/MobileBluetooth_base/Stack/v"
                                                                                       "sc/aci/aci_vsc.c");
                                                              }
                                                              else if (WORD1(v71) - v45 > 1)
                                                              {
                                                                if (BYTE6(v71) == 2)
                                                                {
                                                                  *(unsigned char *)(v70 + v45) = a13;
                                                                  *(unsigned char *)(v70 + WORD2(v71) + 1) = a14;
                                                                  __int16 v46 = WORD2(v71);
                                                                  unsigned __int16 v47 = WORD2(v71) + 2;
                                                                  WORD2(v71) += 2;
                                                                  if (HIBYTE(v71))
                                                                  {
                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/aci/aci_vsc.c");
                                                                  }
                                                                  else if (WORD1(v71) > v47)
                                                                  {
                                                                    if (BYTE6(v71) == 2)
                                                                    {
                                                                      WORD2(v71) = v46 + 3;
                                                                      *(unsigned char *)(v70 + v47) = a15;
                                                                      if (HIBYTE(v71))
                                                                      {
                                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple"
                                                                                               ".xbs/Sources/MobileBlueto"
                                                                                               "oth_base/Stack/vsc/aci/aci_vsc.c");
                                                                      }
                                                                      else if (WORD1(v71) - WORD2(v71) > 3)
                                                                      {
                                                                        if (BYTE6(v71) == 2)
                                                                        {
                                                                          *(_DWORD *)(v70 + WORD2(v71)) = a16;
                                                                          unsigned __int16 v48 = WORD2(v71) + 4;
                                                                          WORD2(v71) += 4;
                                                                          if (HIBYTE(v71))
                                                                          {
                                                                            sub_10025A794((uint64_t)"/Library/Caches/com.a"
                                                                                                   "pple.xbs/Sources/Mobi"
                                                                                                   "leBluetooth_base/Stac"
                                                                                                   "k/vsc/aci/aci_vsc.c");
                                                                          }
                                                                          else if (WORD1(v71) - v48 > 3)
                                                                          {
                                                                            if (BYTE6(v71) == 2)
                                                                            {
                                                                              *(unsigned char *)(v70 + v48) = a17;
                                                                              *(_WORD *)(v70 + WORD2(v71) + 1) = *(_WORD *)((char *)&a17 + 1);
                                                                              *(unsigned char *)(v70 + WORD2(v71) + 3) = HIBYTE(a17);
                                                                              unsigned __int16 v49 = WORD2(v71) + 4;
                                                                              WORD2(v71) += 4;
                                                                              if (HIBYTE(v71))
                                                                              {
                                                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                                              }
                                                                              else if (WORD1(v71) - v49 > 3)
                                                                              {
                                                                                if (BYTE6(v71) == 2)
                                                                                {
                                                                                  *(unsigned char *)(v70 + v49) = a18;
                                                                                  *(unsigned char *)(v70 + WORD2(v71) + 1) = a19;
                                                                                  *(_WORD *)(v70 + WORD2(v71) + 2) = a20;
                                                                                  __int16 v50 = WORD2(v71);
                                                                                  unsigned __int16 v51 = WORD2(v71) + 4;
                                                                                  WORD2(v71) += 4;
                                                                                  if (HIBYTE(v71))
                                                                                  {
                                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                                                  }
                                                                                  else if (WORD1(v71) > v51)
                                                                                  {
                                                                                    if (BYTE6(v71) == 2)
                                                                                    {
                                                                                      WORD2(v71) = v50 + 5;
                                                                                      *(unsigned char *)(v70 + v51) = a21;
                                                                                      if (HIBYTE(v71))
                                                                                      {
                                                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                                                      }
                                                                                      else if (WORD1(v71) - WORD2(v71) > 3)
                                                                                      {
                                                                                        if (BYTE6(v71) == 2)
                                                                                        {
                                                                                          *(_DWORD *)(v70 + WORD2(v71)) = a22;
                                                                                          WORD2(v71) += 4;
                                                                                          return sub_10001BCBC(65481, v70, BYTE4(v71), a23, (uint64_t)sub_100117CF4, v32, v33, v34);
                                                                                        }
                                                                                        uint64_t v69 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_129:
                                                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2243, v69);
                                                                                      }
                                                                                      uint64_t v69 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                                      goto LABEL_129;
                                                                                    }
                                                                                    int v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_125:
                                                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2242, v68);
                                                                                  }
                                                                                  int v68 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                  goto LABEL_125;
                                                                                }
                                                                                unsigned int v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_121:
                                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2241, v67);
                                                                              }
                                                                              unsigned int v67 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                              goto LABEL_121;
                                                                            }
                                                                            uint64_t v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_117:
                                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2240, v66);
                                                                          }
                                                                          uint64_t v66 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                          goto LABEL_117;
                                                                        }
                                                                        uint64_t v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_113:
                                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2239, v65);
                                                                      }
                                                                      uint64_t v65 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                                                      goto LABEL_113;
                                                                    }
                                                                    uint64_t v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_109:
                                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2238, v64);
                                                                  }
                                                                  uint64_t v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_109;
                                                                }
                                                                uint64_t v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2237, v63);
                                                              }
                                                              uint64_t v63 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                              goto LABEL_105;
                                                            }
                                                            uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_101:
                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2236, v62);
                                                          }
                                                          uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                          goto LABEL_101;
                                                        }
                                                        uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_97:
                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2235, v61);
                                                      }
                                                      uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                      goto LABEL_97;
                                                    }
                                                    uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_93:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2234, v60);
                                                  }
                                                }
                                                uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_93;
                                              }
                                              uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_89:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2233, v59);
                                            }
                                          }
                                          uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_89;
                                        }
                                        uint64_t v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_85:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2232, v58);
                                      }
                                    }
                                    uint64_t v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_85;
                                  }
                                  uint64_t v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_81:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2231, v57);
                                }
                              }
                              uint64_t v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_81;
                            }
                            unint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_77:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2230, v56);
                          }
                        }
                        unint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_77;
                      }
                      BOOL v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2229, v55);
                    }
                  }
                  BOOL v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_73;
                }
                int v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2228, v54);
              }
              int v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_69;
            }
            unsigned __int8 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2227, v53);
          }
          unsigned __int8 v53 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_65;
        }
        unsigned __int8 v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2226, v52);
      }
    }
    unsigned __int8 v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_61;
  }
  return result;
}

uint64_t sub_10012D100(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, uint64_t a11)
{
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t result = sub_100059D70(&v48);
  if (!result)
  {
    if (HIBYTE(v49))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v20 = WORD2(v49);
      if (WORD1(v49) > WORD2(v49))
      {
        if (BYTE6(v49) == 2)
        {
          ++WORD2(v49);
          *(unsigned char *)(v48 + v20) = 88;
          v47[0] = BYTE5(a1);
          v47[1] = BYTE4(a1);
          _OWORD v47[2] = BYTE3(a1);
          v47[3] = BYTE2(a1);
          v47[4] = BYTE1(a1);
          v47[5] = a1;
          if (HIBYTE(v49))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v49) - WORD2(v49) > 5)
          {
            if (BYTE6(v49) == 2)
            {
              sub_100008A18(v48 + WORD2(v49), (uint64_t)v47, 6uLL);
              __int16 v24 = WORD2(v49);
              unsigned __int16 v25 = WORD2(v49) + 6;
              WORD2(v49) += 6;
              if (HIBYTE(v49))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v49) > v25)
              {
                if (BYTE6(v49) == 2)
                {
                  WORD2(v49) = v24 + 7;
                  *(unsigned char *)(v48 + v25) = BYTE6(a1);
                  if (HIBYTE(v49))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v26 = WORD2(v49);
                    if (WORD1(v49) > WORD2(v49))
                    {
                      if (BYTE6(v49) == 2)
                      {
                        ++WORD2(v49);
                        *(unsigned char *)(v48 + v26) = a2;
                        if (HIBYTE(v49))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v27 = WORD2(v49);
                          if (WORD1(v49) > WORD2(v49))
                          {
                            if (BYTE6(v49) == 2)
                            {
                              ++WORD2(v49);
                              *(unsigned char *)(v48 + v27) = a3;
                              if (HIBYTE(v49))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else
                              {
                                uint64_t v28 = WORD2(v49);
                                if (WORD1(v49) > WORD2(v49))
                                {
                                  if (BYTE6(v49) == 2)
                                  {
                                    ++WORD2(v49);
                                    *(unsigned char *)(v48 + v28) = a4;
                                    if (HIBYTE(v49))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v29 = WORD2(v49);
                                      if (WORD1(v49) > WORD2(v49))
                                      {
                                        if (BYTE6(v49) == 2)
                                        {
                                          ++WORD2(v49);
                                          *(unsigned char *)(v48 + v29) = a5;
                                          if (HIBYTE(v49))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/aci/aci_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v30 = WORD2(v49);
                                            if (WORD1(v49) > WORD2(v49))
                                            {
                                              if (BYTE6(v49) == 2)
                                              {
                                                ++WORD2(v49);
                                                *(unsigned char *)(v48 + v30) = a6;
                                                if (HIBYTE(v49))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v31 = WORD2(v49);
                                                  if (WORD1(v49) > WORD2(v49))
                                                  {
                                                    if (BYTE6(v49) == 2)
                                                    {
                                                      ++WORD2(v49);
                                                      *(unsigned char *)(v48 + v31) = a7;
                                                      if (HIBYTE(v49))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                      }
                                                      else
                                                      {
                                                        uint64_t v32 = WORD2(v49);
                                                        if (WORD1(v49) > WORD2(v49))
                                                        {
                                                          if (BYTE6(v49) == 2)
                                                          {
                                                            ++WORD2(v49);
                                                            *(unsigned char *)(v48 + v32) = a8;
                                                            if (HIBYTE(v49))
                                                            {
                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                            }
                                                            else
                                                            {
                                                              uint64_t v33 = WORD2(v49);
                                                              if (WORD1(v49) > WORD2(v49))
                                                              {
                                                                if (BYTE6(v49) == 2)
                                                                {
                                                                  ++WORD2(v49);
                                                                  *(unsigned char *)(v48 + v33) = a9;
                                                                  if (HIBYTE(v49))
                                                                  {
                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/aci/aci_vsc.c");
                                                                  }
                                                                  else
                                                                  {
                                                                    uint64_t v34 = WORD2(v49);
                                                                    if (WORD1(v49) > WORD2(v49))
                                                                    {
                                                                      if (BYTE6(v49) == 2)
                                                                      {
                                                                        ++WORD2(v49);
                                                                        *(unsigned char *)(v48 + v34) = a10;
                                                                        return sub_10001BCBC(65017, v48, BYTE4(v49), a11, (uint64_t)sub_10012F004, v21, v22, v23);
                                                                      }
                                                                      __int16 v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
                                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2019, v46);
                                                                    }
                                                                  }
                                                                  __int16 v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_87;
                                                                }
                                                                unsigned __int16 v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2018, v45);
                                                              }
                                                            }
                                                            unsigned __int16 v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                            goto LABEL_83;
                                                          }
                                                          unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2017, v44);
                                                        }
                                                      }
                                                      unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_79;
                                                    }
                                                    uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2016, v43);
                                                  }
                                                }
                                                uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_75;
                                              }
                                              uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2015, v42);
                                            }
                                          }
                                          uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_71;
                                        }
                                        uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2014, v41);
                                      }
                                    }
                                    uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_67;
                                  }
                                  uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2013, v40);
                                }
                              }
                              uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_63;
                            }
                            uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2012, v39);
                          }
                        }
                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_59;
                      }
                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2011, v38);
                    }
                  }
                  uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_55;
                }
                unsigned __int16 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2010, v37);
              }
              unsigned __int16 v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_51;
            }
            __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2009, v36);
          }
          __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_47;
        }
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2006, v35);
      }
    }
    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_43;
  }
  return result;
}

uint64_t sub_10012D780(char a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t a7)
{
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t result = sub_100059D70(&v31);
  if (!result)
  {
    if (HIBYTE(v32))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v18 = WORD2(v32);
      if (WORD1(v32) > WORD2(v32))
      {
        if (BYTE6(v32) == 2)
        {
          ++WORD2(v32);
          *(unsigned char *)(v31 + v18) = 81;
          if (HIBYTE(v32))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v19 = WORD2(v32);
            if (WORD1(v32) > WORD2(v32))
            {
              if (BYTE6(v32) == 2)
              {
                ++WORD2(v32);
                *(unsigned char *)(v31 + v19) = a1;
                if (HIBYTE(v32))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v20 = WORD2(v32);
                  if (WORD1(v32) > WORD2(v32))
                  {
                    if (BYTE6(v32) == 2)
                    {
                      ++WORD2(v32);
                      *(unsigned char *)(v31 + v20) = a2;
                      if (HIBYTE(v32))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else if (WORD1(v32) - WORD2(v32) > 1)
                      {
                        if (BYTE6(v32) == 2)
                        {
                          *(_WORD *)(v31 + WORD2(v32)) = a3;
                          unsigned __int16 v21 = WORD2(v32) + 2;
                          WORD2(v32) += 2;
                          if (HIBYTE(v32))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                          }
                          else if (WORD1(v32) - v21 > 1)
                          {
                            if (BYTE6(v32) == 2)
                            {
                              *(unsigned char *)(v31 + v21) = a4;
                              *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a4);
                              unsigned __int16 v22 = WORD2(v32) + 2;
                              WORD2(v32) += 2;
                              if (HIBYTE(v32))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                              }
                              else if (WORD1(v32) - v22 > 1)
                              {
                                if (BYTE6(v32) == 2)
                                {
                                  *(unsigned char *)(v31 + v22) = a5;
                                  *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a5);
                                  unsigned __int16 v23 = WORD2(v32) + 2;
                                  WORD2(v32) += 2;
                                  if (HIBYTE(v32))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/aci/aci_vsc.c");
                                  }
                                  else if (WORD1(v32) - v23 > 1)
                                  {
                                    if (BYTE6(v32) == 2)
                                    {
                                      *(unsigned char *)(v31 + v23) = a6;
                                      *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a6);
                                      WORD2(v32) += 2;
                                      return sub_10001BCBC(65017, v31, BYTE4(v32), a7, (uint64_t)sub_10012F004, v15, v16, v17);
                                    }
                                    uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2039, v30);
                                  }
                                  uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_52;
                                }
                                uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2038, v29);
                              }
                              uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_48;
                            }
                            uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2037, v28);
                          }
                          uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_44;
                        }
                        uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2036, v27);
                      }
                      uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_40;
                    }
                    uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2035, v26);
                  }
                }
                uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }
              unsigned __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2034, v25);
            }
          }
          unsigned __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }
        __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2033, v24);
      }
    }
    __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_10012DBC8(char a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (!result)
  {
    if (HIBYTE(v23))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(unsigned char *)(v22 + v14) = a1;
          if (HIBYTE(v23))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v15 = WORD2(v23);
            if (WORD1(v23) > WORD2(v23))
            {
              if (BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(unsigned char *)(v22 + v15) = a2;
                if (HIBYTE(v23))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else
                {
                  uint64_t v16 = WORD2(v23);
                  if (WORD1(v23) > WORD2(v23))
                  {
                    if (BYTE6(v23) == 2)
                    {
                      ++WORD2(v23);
                      *(unsigned char *)(v22 + v16) = a3;
                      if (HIBYTE(v23))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                      }
                      else
                      {
                        uint64_t v17 = WORD2(v23);
                        if (WORD1(v23) > WORD2(v23))
                        {
                          if (BYTE6(v23) == 2)
                          {
                            ++WORD2(v23);
                            *(unsigned char *)(v22 + v17) = a4;
                            return sub_10001BCBC(64940, v22, BYTE4(v23), a5, (uint64_t)sub_100117CF4, v11, v12, v13);
                          }
                          unsigned __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2986, v21);
                        }
                      }
                      unsigned __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_31;
                    }
                    uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2985, v20);
                  }
                }
                uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_27;
              }
              uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2984, v19);
            }
          }
          uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }
        uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2983, v18);
      }
    }
    uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10012DE24(int *a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v12) - WORD2(v12) > 5)
    {
      if (BYTE6(v12) == 2)
      {
        uint64_t v8 = v11 + WORD2(v12);
        int v9 = *a1;
        *(_WORD *)(v8 + 4) = *((_WORD *)a1 + 2);
        *(_DWORD *)uint64_t v8 = v9;
        WORD2(v12) += 6;
        return sub_10001BCBC(64518, v11, BYTE4(v12), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
      }
      unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4559, v10);
    }
    unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10012DF14(uint64_t a1)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else if (WORD1(v14) - WORD2(v14) > 3)
    {
      if (BYTE6(v14) == 2)
      {
        *(unsigned char *)(v13 + WORD2(v14)) = -1;
        *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
        *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
        *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
        unsigned __int16 v6 = WORD2(v14) + 4;
        WORD2(v14) += 4;
        if (HIBYTE(v14))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
        }
        else if (WORD1(v14) - v6 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(unsigned char *)(v13 + v6) = -1;
            *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
            *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
            *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
            unsigned __int16 v7 = WORD2(v14) + 4;
            WORD2(v14) += 4;
            if (HIBYTE(v14))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
            }
            else if (WORD1(v14) - v7 > 3)
            {
              if (BYTE6(v14) == 2)
              {
                *(unsigned char *)(v13 + v7) = -1;
                *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
                *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
                *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
                unsigned __int16 v8 = WORD2(v14) + 4;
                WORD2(v14) += 4;
                if (HIBYTE(v14))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v14) - v8 > 3)
                {
                  if (BYTE6(v14) == 2)
                  {
                    *(unsigned char *)(v13 + v8) = -1;
                    *(unsigned char *)(v13 + WORD2(v14) + 1) = -1;
                    *(unsigned char *)(v13 + WORD2(v14) + 2) = -1;
                    *(unsigned char *)(v13 + WORD2(v14) + 3) = -1;
                    WORD2(v14) += 4;
                    return sub_10001BCBC(65291, v13, BYTE4(v14), a1, (uint64_t)sub_100117CF4, v3, v4, v5);
                  }
                  uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4530, v12);
                }
                uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                goto LABEL_31;
              }
              uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4529, v11);
            }
            uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_27;
          }
          unsigned __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4528, v10);
        }
        unsigned __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_23;
      }
      int v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4527, v9);
    }
    int v9 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10012E234(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(65528, v6, BYTE4(v7), a1, (uint64_t)sub_10013105C, v3, v4, v5);
  }
  return result;
}

uint64_t sub_10012E290(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    for (uint64_t i = 0; i != 24; ++i)
    {
      if (HIBYTE(v13))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
LABEL_10:
        uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_12:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4545, v11);
      }
      uint64_t v9 = WORD2(v13);
      if (WORD1(v13) <= WORD2(v13)) {
        goto LABEL_10;
      }
      if (BYTE6(v13) != 2)
      {
        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_12;
      }
      char v10 = *(unsigned char *)(a1 + i);
      ++WORD2(v13);
      *(unsigned char *)(v12 + v9) = v10;
    }
    return sub_10001BCBC(65092, v12, BYTE4(v13), a2, (uint64_t)sub_100117CF4, v5, v6, v7);
  }
  return result;
}

uint64_t sub_10012E37C(char *a1, uint64_t a2)
{
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t result = sub_100059D70(&v47);
  if (!result)
  {
    if (HIBYTE(v48))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v5 = WORD2(v48);
      if (WORD1(v48) > WORD2(v48))
      {
        if (BYTE6(v48) == 2)
        {
          char v6 = *a1;
          ++WORD2(v48);
          *(unsigned char *)(v47 + v5) = v6;
          if (HIBYTE(v48))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else
          {
            uint64_t v7 = WORD2(v48);
            if (WORD1(v48) > WORD2(v48))
            {
              if (BYTE6(v48) == 2)
              {
                char v8 = a1[1];
                ++WORD2(v48);
                *(unsigned char *)(v47 + v7) = v8;
                if (HIBYTE(v48))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                }
                else if (WORD1(v48) - WORD2(v48) > 5)
                {
                  if (BYTE6(v48) == 2)
                  {
                    sub_100008A18(v47 + WORD2(v48), *((void *)a1 + 1), 6uLL);
                    __int16 v9 = WORD2(v48);
                    unsigned __int16 v10 = WORD2(v48) + 6;
                    WORD2(v48) += 6;
                    if (HIBYTE(v48))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                    }
                    else if (WORD1(v48) > v10)
                    {
                      if (BYTE6(v48) == 2)
                      {
                        char v11 = a1[16];
                        WORD2(v48) = v9 + 7;
                        *(unsigned char *)(v47 + v10) = v11;
                        if (HIBYTE(v48))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else if (WORD1(v48) - WORD2(v48) > 1)
                        {
                          if (BYTE6(v48) == 2)
                          {
                            *(_WORD *)(v47 + WORD2(v48)) = *((_WORD *)a1 + 9);
                            unsigned __int16 v12 = WORD2(v48) + 2;
                            WORD2(v48) += 2;
                            if (HIBYTE(v48))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                            }
                            else if (WORD1(v48) - v12 > 1)
                            {
                              if (BYTE6(v48) == 2)
                              {
                                *(unsigned char *)(v47 + v12) = a1[20];
                                *(unsigned char *)(v47 + WORD2(v48) + 1) = a1[21];
                                unsigned __int16 v13 = WORD2(v48) + 2;
                                WORD2(v48) += 2;
                                if (HIBYTE(v48))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/aci/aci_vsc.c");
                                }
                                else if (WORD1(v48) - v13 > 1)
                                {
                                  if (BYTE6(v48) == 2)
                                  {
                                    *(unsigned char *)(v47 + v13) = a1[22];
                                    *(unsigned char *)(v47 + WORD2(v48) + 1) = a1[23];
                                    unsigned __int16 v14 = WORD2(v48) + 2;
                                    WORD2(v48) += 2;
                                    if (HIBYTE(v48))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/aci/aci_vsc.c");
                                    }
                                    else if (WORD1(v48) - v14 > 1)
                                    {
                                      if (BYTE6(v48) == 2)
                                      {
                                        *(unsigned char *)(v47 + v14) = a1[24];
                                        *(unsigned char *)(v47 + WORD2(v48) + 1) = a1[25];
                                        unsigned __int16 v15 = WORD2(v48) + 2;
                                        WORD2(v48) += 2;
                                        if (HIBYTE(v48))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/aci/aci_vsc.c");
                                        }
                                        else if (WORD1(v48) - v15 > 1)
                                        {
                                          if (BYTE6(v48) == 2)
                                          {
                                            *(unsigned char *)(v47 + v15) = a1[26];
                                            *(unsigned char *)(v47 + WORD2(v48) + 1) = a1[27];
                                            unsigned __int16 v16 = WORD2(v48) + 2;
                                            WORD2(v48) += 2;
                                            if (HIBYTE(v48))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/aci/aci_vsc.c");
                                            }
                                            else if (WORD1(v48) - v16 > 1)
                                            {
                                              if (BYTE6(v48) == 2)
                                              {
                                                *(unsigned char *)(v47 + v16) = a1[28];
                                                *(unsigned char *)(v47 + WORD2(v48) + 1) = a1[29];
                                                __int16 v17 = WORD2(v48);
                                                unsigned __int16 v18 = WORD2(v48) + 2;
                                                WORD2(v48) += 2;
                                                if (HIBYTE(v48))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/aci/aci_vsc.c");
                                                }
                                                else if (WORD1(v48) > v18)
                                                {
                                                  if (BYTE6(v48) == 2)
                                                  {
                                                    char v19 = a1[30];
                                                    WORD2(v48) = v17 + 3;
                                                    *(unsigned char *)(v47 + v18) = v19;
                                                    if (HIBYTE(v48))
                                                    {
                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                    }
                                                    else if (WORD1(v48) - WORD2(v48) > 5)
                                                    {
                                                      if (BYTE6(v48) == 2)
                                                      {
                                                        sub_100008A18(v47 + WORD2(v48), *((void *)a1 + 4), 6uLL);
                                                        __int16 v23 = WORD2(v48);
                                                        unsigned __int16 v24 = WORD2(v48) + 6;
                                                        WORD2(v48) += 6;
                                                        if (HIBYTE(v48))
                                                        {
                                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/M"
                                                                                 "obileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                        }
                                                        else if (WORD1(v48) > v24)
                                                        {
                                                          if (BYTE6(v48) == 2)
                                                          {
                                                            char v25 = a1[40];
                                                            WORD2(v48) = v23 + 7;
                                                            *(unsigned char *)(v47 + v24) = v25;
                                                            if (HIBYTE(v48))
                                                            {
                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                                                            }
                                                            else if (WORD1(v48) > WORD2(v48))
                                                            {
                                                              if (BYTE6(v48) == 2)
                                                              {
                                                                *(unsigned char *)(v47 + WORD2(v48)) = a1[41];
                                                                __int16 v26 = WORD2(v48);
                                                                unsigned __int16 v27 = ++WORD2(v48);
                                                                if (HIBYTE(v48))
                                                                {
                                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/S"
                                                                                         "ources/MobileBluetooth_base/Sta"
                                                                                         "ck/vsc/aci/aci_vsc.c");
                                                                }
                                                                else if (WORD1(v48) > v27)
                                                                {
                                                                  if (BYTE6(v48) == 2)
                                                                  {
                                                                    char v28 = a1[42];
                                                                    WORD2(v48) = v26 + 2;
                                                                    *(unsigned char *)(v47 + v27) = v28;
                                                                    if (HIBYTE(v48))
                                                                    {
                                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.x"
                                                                                             "bs/Sources/MobileBluetooth_"
                                                                                             "base/Stack/vsc/aci/aci_vsc.c");
                                                                    }
                                                                    else
                                                                    {
                                                                      uint64_t v29 = WORD2(v48);
                                                                      if (WORD1(v48) > WORD2(v48))
                                                                      {
                                                                        if (BYTE6(v48) == 2)
                                                                        {
                                                                          char v30 = a1[43];
                                                                          ++WORD2(v48);
                                                                          *(unsigned char *)(v47 + v29) = v30;
                                                                          return sub_10001BCBC(65479, v47, BYTE4(v48), a2, (uint64_t)sub_100117CF4, v20, v21, v22);
                                                                        }
                                                                        __int16 v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_115:
                                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4366, v46);
                                                                      }
                                                                    }
                                                                    __int16 v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                    goto LABEL_115;
                                                                  }
                                                                  unsigned __int16 v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_111:
                                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4365, v45);
                                                                }
                                                                unsigned __int16 v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                goto LABEL_111;
                                                              }
                                                              unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_107:
                                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4364, v44);
                                                            }
                                                            unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                                            goto LABEL_107;
                                                          }
                                                          uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_103:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4363, v43);
                                                        }
                                                        uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                        goto LABEL_103;
                                                      }
                                                      uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_99:
                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4362, v42);
                                                    }
                                                    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                                                    goto LABEL_99;
                                                  }
                                                  uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_95:
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4361, v41);
                                                }
                                                uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_95;
                                              }
                                              uint64_t v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_91:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4360, v40);
                                            }
                                            uint64_t v40 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                            goto LABEL_91;
                                          }
                                          uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4359, v39);
                                        }
                                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                        goto LABEL_87;
                                      }
                                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4358, v38);
                                    }
                                    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                    goto LABEL_83;
                                  }
                                  unsigned __int16 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4357, v37);
                                }
                                unsigned __int16 v37 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                goto LABEL_79;
                              }
                              __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4356, v36);
                            }
                            __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                            goto LABEL_75;
                          }
                          uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4355, v35);
                        }
                        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_71;
                      }
                      uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4354, v34);
                    }
                    uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_67;
                  }
                  uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4353, v33);
                }
                uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                goto LABEL_63;
              }
              uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4352, v32);
            }
          }
          uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_59;
        }
        uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4351, v31);
      }
    }
    uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_55;
  }
  return result;
}

uint64_t sub_10012EC6C(_WORD *a1, char a2, char a3, char a4, int a5, const void *a6, uint64_t a7)
{
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t result = sub_100059D70(&v32);
  if (!result)
  {
    if (HIBYTE(v33))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      uint64_t v15 = WORD2(v33);
      if (WORD1(v33) > WORD2(v33))
      {
        if (BYTE6(v33) == 2)
        {
          ++WORD2(v33);
          *(unsigned char *)(v32 + v15) = a2;
          if (HIBYTE(v33))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
          }
          else if (WORD1(v33) - WORD2(v33) > 1)
          {
            if (BYTE6(v33) == 2)
            {
              *(_WORD *)(v32 + WORD2(v33)) = *a1;
              __int16 v16 = WORD2(v33);
              unsigned __int16 v17 = WORD2(v33) + 2;
              WORD2(v33) += 2;
              if (HIBYTE(v33))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
              }
              else if (WORD1(v33) > v17)
              {
                if (BYTE6(v33) == 2)
                {
                  WORD2(v33) = v16 + 3;
                  *(unsigned char *)(v32 + v17) = a3;
                  if (HIBYTE(v33))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                  }
                  else
                  {
                    uint64_t v18 = WORD2(v33);
                    if (WORD1(v33) > WORD2(v33))
                    {
                      if (BYTE6(v33) == 2)
                      {
                        ++WORD2(v33);
                        *(unsigned char *)(v32 + v18) = a4;
                        if (HIBYTE(v33))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
                        }
                        else
                        {
                          uint64_t v19 = WORD2(v33);
                          if (WORD1(v33) > WORD2(v33))
                          {
                            if (BYTE6(v33) == 2)
                            {
                              ++WORD2(v33);
                              *(unsigned char *)(v32 + v19) = a5;
                              uint64_t v20 = v32;
                              uint64_t v21 = WORD2(v33);
                              if (HIBYTE(v33))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/aci/aci_vsc.c");
                                int v22 = 0;
                              }
                              else
                              {
                                int v22 = WORD1(v33) - WORD2(v33);
                              }
                              if (v22 < a5)
                              {
                                uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= (lenOptFields)";
                              }
                              else
                              {
                                if (BYTE6(v33) == 2)
                                {
                                  memmove((void *)(v20 + v21), a6, a5);
                                  WORD2(v33) += a5;
                                  return sub_10001BCBC(65059, v32, BYTE4(v33), a7, (uint64_t)sub_100117CF4, v23, v24, v25);
                                }
                                uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              }
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4468, v31);
                            }
                            char v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4467, v30);
                          }
                        }
                        char v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_43;
                      }
                      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4466, v29);
                    }
                  }
                  uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_39;
                }
                char v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4465, v28);
              }
              char v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_35;
            }
            unsigned __int16 v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4464, v27);
          }
          unsigned __int16 v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_31;
        }
        __int16 v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4463, v26);
      }
    }
    __int16 v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_27;
  }
  return result;
}

void sub_10012F004(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"status %d, Byte 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
      unsigned __int16 v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 0;
    if (a2) {
      goto LABEL_6;
    }
    return;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_14;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_14:
    __int16 v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_16;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    __int16 v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_16:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 58, v16);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (a2) {
LABEL_6:
  }
    a2(a1, v13);
}

uint64_t sub_10012F114(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, void, void, void, void, void, void, void), uint64_t *a3)
{
  if (a1)
  {
    uint64_t v5 = a2;
    uint64_t result = sub_100058654();
    if (!result
      || (sub_100056E24((uint64_t)"EnhancedProfilingStats VSC failed with status %!", v7, v8, v9, v10, v11, v12, v13, a1),
          uint64_t v14 = sub_100050B4C(0x54u),
          uint64_t result = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR),
          !result))
    {
      int v15 = 0;
      unsigned int v16 = 0;
      unsigned int v17 = 0;
      unsigned int v18 = 0;
      unint64_t v62 = 0;
      uint64_t v61 = 0;
      unsigned int v63 = 0;
      unsigned int v19 = 0;
      unsigned int v20 = 0;
      unsigned int v21 = 0;
      unsigned int v22 = 0;
      unsigned int v23 = 0;
      unsigned int v24 = 0;
      unsigned int v25 = 0;
      unsigned int v26 = 0;
      goto LABEL_46;
    }
    sub_100745764();
LABEL_45:
    int v15 = 0;
    unsigned int v16 = 0;
    unsigned int v17 = 0;
    unsigned int v18 = 0;
    unint64_t v62 = 0;
    uint64_t v61 = 0;
    unsigned int v63 = 0;
    unsigned int v19 = 0;
    unsigned int v20 = 0;
    unsigned int v21 = 0;
    unsigned int v22 = 0;
    unsigned int v23 = 0;
    unsigned int v24 = 0;
    unsigned int v25 = 0;
    unsigned int v26 = 0;
    uint64_t result = 0;
LABEL_46:
    unsigned int v37 = 0;
    unsigned int v38 = 0;
    unsigned int v39 = 0;
    unsigned int v40 = 0;
    unsigned int v41 = 0;
    unsigned int v42 = 0;
    unsigned int v43 = 0;
    unsigned int v45 = 0;
    unsigned int v46 = 0;
    unsigned int v48 = 0;
    unsigned int v49 = 0;
    unsigned int v51 = 0;
    unsigned int v52 = 0;
    unsigned int v53 = 0;
    unsigned int v54 = 0;
    if (!v5) {
      return result;
    }
    goto LABEL_47;
  }
  if (*((unsigned char *)a3 + 15))
  {
    uint64_t v5 = a2;
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_45;
  }
  int v27 = *((unsigned __int16 *)a3 + 5);
  uint64_t v28 = *((unsigned __int16 *)a3 + 6);
  if (((v27 - v28) & 0x1FFFE) != 0x9C)
  {
    uint64_t v5 = a2;
    goto LABEL_45;
  }
  if (*((unsigned char *)a3 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 189, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v29 = *a3;
  int v30 = *(_DWORD *)(*a3 + v28);
  *((_WORD *)a3 + 6) = v28 + 4;
  if (v27 - (unsigned __int16)(v28 + 4) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 190, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v60 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 4));
  *((_WORD *)a3 + 6) = v28 + 8;
  if (v27 - (unsigned __int16)(v28 + 8) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 191, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v59 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 8));
  *((_WORD *)a3 + 6) = v28 + 12;
  if (v27 - (unsigned __int16)(v28 + 12) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 192, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v58 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 12));
  *((_WORD *)a3 + 6) = v28 + 16;
  if (v27 - (unsigned __int16)(v28 + 16) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 193, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v31 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 16));
  *((_WORD *)a3 + 6) = v28 + 20;
  if (v27 - (unsigned __int16)(v28 + 20) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 194, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v32 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 20));
  *((_WORD *)a3 + 6) = v28 + 24;
  if (v27 - (unsigned __int16)(v28 + 24) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 195, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v33 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 24));
  *((_WORD *)a3 + 6) = v28 + 28;
  if (v27 - (unsigned __int16)(v28 + 28) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 196, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v34 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 28));
  *((_WORD *)a3 + 6) = v28 + 32;
  if (v27 - (unsigned __int16)(v28 + 32) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 197, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v35 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 32));
  *((_WORD *)a3 + 6) = v28 + 36;
  if (v27 - (unsigned __int16)(v28 + 36) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 199, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v19 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 36));
  *((_WORD *)a3 + 6) = v28 + 40;
  if (v27 - (unsigned __int16)(v28 + 40) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 200, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v20 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 40));
  *((_WORD *)a3 + 6) = v28 + 44;
  if (v27 - (unsigned __int16)(v28 + 44) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 201, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v21 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 44));
  *((_WORD *)a3 + 6) = v28 + 48;
  if (v27 - (unsigned __int16)(v28 + 48) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 202, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v22 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 48));
  *((_WORD *)a3 + 6) = v28 + 52;
  if (v27 - (unsigned __int16)(v28 + 52) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 203, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v23 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 52));
  *((_WORD *)a3 + 6) = v28 + 56;
  if (v27 - (unsigned __int16)(v28 + 56) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 204, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v24 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 56));
  *((_WORD *)a3 + 6) = v28 + 60;
  if (v27 - (unsigned __int16)(v28 + 60) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 205, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v36 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 60));
  *((_WORD *)a3 + 6) = v28 + 64;
  if (v27 - (unsigned __int16)(v28 + 64) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 206, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v26 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 64));
  *((_WORD *)a3 + 6) = v28 + 68;
  if (v27 - (unsigned __int16)(v28 + 68) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 207, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  uint64_t result = *(unsigned int *)(v29 + (unsigned __int16)(v28 + 68));
  *((_WORD *)a3 + 6) = v28 + 72;
  if (v27 - (unsigned __int16)(v28 + 72) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 208, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v37 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 72));
  *((_WORD *)a3 + 6) = v28 + 76;
  if (v27 - (unsigned __int16)(v28 + 76) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 209, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v38 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 76));
  *((_WORD *)a3 + 6) = v28 + 80;
  if (v27 - (unsigned __int16)(v28 + 80) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 210, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v39 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 80));
  *((_WORD *)a3 + 6) = v28 + 84;
  if (v27 - (unsigned __int16)(v28 + 84) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 211, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v57 = v36;
  unsigned int v40 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 84));
  *((_WORD *)a3 + 6) = v28 + 88;
  if (v27 - (unsigned __int16)(v28 + 88) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 212, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v41 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 88));
  *((_WORD *)a3 + 6) = v28 + 92;
  if (v27 - (unsigned __int16)(v28 + 92) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 213, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v42 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 92));
  *((_WORD *)a3 + 6) = v28 + 96;
  if (v27 - (unsigned __int16)(v28 + 96) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 214, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v43 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 96));
  *((_WORD *)a3 + 6) = v28 + 100;
  if (v27 - (unsigned __int16)(v28 + 100) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 215, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v63 = v35;
  int v44 = v30;
  unsigned int v45 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 100));
  *((_WORD *)a3 + 6) = v28 + 104;
  if (v27 - (unsigned __int16)(v28 + 104) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 216, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  HIDWORD(v61) = v33;
  unint64_t v62 = __PAIR64__(v31, v32);
  unsigned int v46 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 104));
  *((_WORD *)a3 + 6) = v28 + 108;
  if (v27 - (unsigned __int16)(v28 + 108) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 217, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v47 = v34;
  uint64_t v5 = a2;
  unsigned int v48 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 108));
  *((_WORD *)a3 + 6) = v28 + 112;
  if (v27 - (unsigned __int16)(v28 + 112) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 218, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v49 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 112));
  *((_WORD *)a3 + 6) = v28 + 116;
  if (v27 - (unsigned __int16)(v28 + 116) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 219, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  int v50 = v44;
  unsigned int v25 = v57;
  LODWORD(v61) = v47;
  int v56 = v50;
  unsigned int v51 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 116));
  *((_WORD *)a3 + 6) = v28 + 120;
  if (v27 - (unsigned __int16)(v28 + 120) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 220, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v52 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 120));
  *((_WORD *)a3 + 6) = v28 + 124;
  if (v27 - (unsigned __int16)(v28 + 124) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 221, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v53 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 124));
  *((_WORD *)a3 + 6) = v28 + 128;
  if (v27 - (unsigned __int16)(v28 + 128) <= 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 222, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
  }
  unsigned int v54 = *(_DWORD *)(v29 + (unsigned __int16)(v28 + 128));
  *((_WORD *)a3 + 6) = v28 + 132;
  int v15 = v56;
  unsigned int v17 = v59;
  unsigned int v16 = v60;
  unsigned int v18 = v58;
  if (v5)
  {
LABEL_47:
    LODWORD(v55) = 0;
    HIDWORD(v55) = v15;
    return v5(a1, 0, 0, 0, 0, 0, 0, 0, 0, v55, __PAIR64__(v17, v16), __PAIR64__(HIDWORD(v62), v18), __PAIR64__(HIDWORD(v61), v62), __PAIR64__(v63, v61), __PAIR64__(v20, v19), __PAIR64__(v22, v21), __PAIR64__(v24, v23), __PAIR64__(v26, v25), __PAIR64__(v37, result),
             __PAIR64__(v39, v38),
             __PAIR64__(v41, v40),
             __PAIR64__(v43, v42),
             __PAIR64__(v46, v45),
             __PAIR64__(v49, v48),
             __PAIR64__(v52, v51),
             __PAIR64__(v54, v53),
             0,
             0,
             0,
             0,
             0,
             0,
             0);
  }
  return result;
}

void sub_10012FA4C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!a1)
  {
    if (*((unsigned char *)a3 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      int v15 = *((unsigned __int16 *)a3 + 5);
      uint64_t v16 = *((unsigned __int16 *)a3 + 6);
      if (v15 - (int)v16 > 1)
      {
        if (*((unsigned char *)a3 + 14) == 1)
        {
          uint64_t v17 = *a3;
          unsigned int v18 = (unsigned __int8 *)(*a3 + v16);
          int v19 = *v18;
          int v20 = v18[1];
          *((_WORD *)a3 + 6) = v16 + 2;
          if (v15 - (unsigned __int16)(v16 + 2) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3127, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v13 = v19 | (v20 << 8);
          uint64_t v14 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v16 + 2));
          *((_WORD *)a3 + 6) = v16 + 4;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }
        unsigned int v21 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_17:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3126, v21);
      }
    }
    unsigned int v21 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_17;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"status %d, ConnectionHandle 0x%x, rssi 0x%x, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14);
}

void sub_10012FBA8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_13;
  }
  uint64_t v3 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v3)
  {
LABEL_13:
    uint64_t v16 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_15;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v16 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_15:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 110, v16);
  }
  uint64_t v6 = *a3;
  *((_WORD *)a3 + 6) = v3 + 1;
  uint64_t v7 = *(unsigned __int8 *)(v6 + v3);
  if (!a1
    || !sub_100058654()
    || (sub_100056E24((uint64_t)"status %!", v8, v9, v10, v11, v12, v13, v14, a1),
        int v15 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_8;
  }
  sub_100745764();
  if (a2) {
LABEL_8:
  }
    a2(a1, v7);
}

void sub_10012FCB0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void), uint64_t *a3)
{
  if (!a1)
  {
    if (*((unsigned char *)a3 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      int v28 = *((unsigned __int16 *)a3 + 5);
      uint64_t v29 = *((unsigned __int16 *)a3 + 6);
      if (v28 - (int)v29 > 3)
      {
        if (*((unsigned char *)a3 + 14) == 1)
        {
          uint64_t v30 = *a3;
          uint64_t v13 = *(unsigned int *)(*a3 + v29);
          *((_WORD *)a3 + 6) = v29 + 4;
          if (v28 - (unsigned __int16)(v29 + 4) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2680, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v14 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 4));
          *((_WORD *)a3 + 6) = v29 + 8;
          if (v28 - (unsigned __int16)(v29 + 8) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2681, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v15 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 8));
          *((_WORD *)a3 + 6) = v29 + 12;
          if (v28 - (unsigned __int16)(v29 + 12) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2682, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v16 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 12));
          *((_WORD *)a3 + 6) = v29 + 16;
          if (v28 - (unsigned __int16)(v29 + 16) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2683, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v17 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 16));
          *((_WORD *)a3 + 6) = v29 + 20;
          if (v28 - (unsigned __int16)(v29 + 20) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2684, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v18 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 20));
          *((_WORD *)a3 + 6) = v29 + 24;
          if (v28 - (unsigned __int16)(v29 + 24) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2685, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v20 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 24));
          *((_WORD *)a3 + 6) = v29 + 28;
          if (v28 - (unsigned __int16)(v29 + 28) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2686, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v19 = *(unsigned int *)(v30 + (unsigned __int16)(v29 + 28));
          *((_WORD *)a3 + 6) = v29 + 32;
          if (v28 - (unsigned __int16)(v29 + 32) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2687, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v21 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 32));
          *((_WORD *)a3 + 6) = v29 + 36;
          if (v28 - (unsigned __int16)(v29 + 36) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2688, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v22 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 36));
          *((_WORD *)a3 + 6) = v29 + 40;
          if (v28 - (unsigned __int16)(v29 + 40) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2689, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v23 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 40));
          *((_WORD *)a3 + 6) = v29 + 44;
          if (v28 - (unsigned __int16)(v29 + 44) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2690, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v24 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 44));
          *((_WORD *)a3 + 6) = v29 + 48;
          if (v28 - (unsigned __int16)(v29 + 48) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2691, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          unsigned int v25 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 48));
          *((_WORD *)a3 + 6) = v29 + 52;
          if (v28 - (unsigned __int16)(v29 + 52) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2692, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          int v26 = *(_DWORD *)(v30 + (unsigned __int16)(v29 + 52));
          *((_WORD *)a3 + 6) = v29 + 56;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }
        unsigned int v31 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_29:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2679, v31);
      }
    }
    unsigned int v31 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_29;
  }
  if (sub_100058654())
  {
    unsigned int v38 = a2;
    long long v37 = 0u;
    long long v36 = 0u;
    long long v35 = 0u;
    long long v34 = 0u;
    long long v33 = 0u;
    long long v32 = 0u;
    sub_100056E24((uint64_t)"status %d, durationTotal %d, durationActive %d, durationIdle %d, durationSleep %d disableCounter %d, iPATxBT %d, ePATxBT %d, iPATxLE %d, ePATxLE %d, connectedRxBT %d, connectedRxLE %d, scanRxBT %d scanRxLE %d, totalPHYCal %d, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  unsigned int v20 = 0;
  unsigned int v21 = 0;
  unsigned int v22 = 0;
  unsigned int v23 = 0;
  unsigned int v24 = 0;
  unsigned int v25 = 0;
  int v26 = 0;
  if (a2)
  {
LABEL_6:
    LODWORD(v32) = v26;
    a2(a1, v13, v14, v15, v16, v17, v18, v19, __PAIR64__(v21, v20), __PAIR64__(v23, v22), __PAIR64__(v25, v24), v32, *((void *)&v32 + 1), v33, *((void *)&v33 + 1), v34, *((void *)&v34 + 1), v35, *((void *)&v35 + 1),
      v36,
      *((void *)&v36 + 1),
      v37,
      *((void *)&v37 + 1),
      v38);
  }
}

void sub_1001300D0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (!a1)
  {
    if (*((unsigned char *)a3 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      int v17 = *((unsigned __int16 *)a3 + 5);
      uint64_t v18 = *((unsigned __int16 *)a3 + 6);
      if (v17 - (int)v18 > 3)
      {
        if (*((unsigned char *)a3 + 14) == 1)
        {
          uint64_t v19 = *a3;
          uint64_t v13 = *(unsigned int *)(*a3 + v18);
          *((_WORD *)a3 + 6) = v18 + 4;
          if (v17 - (unsigned __int16)(v18 + 4) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2736, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v14 = *(unsigned int *)(v19 + (unsigned __int16)(v18 + 4));
          *((_WORD *)a3 + 6) = v18 + 8;
          if (v17 - (unsigned __int16)(v18 + 8) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2737, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v15 = *(unsigned int *)(v19 + (unsigned __int16)(v18 + 8));
          *((_WORD *)a3 + 6) = v18 + 12;
          if (v17 - (unsigned __int16)(v18 + 12) <= 3) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2738, "ByteStream_NumReadBytesAvail(*pBs) >= 4");
          }
          uint64_t v16 = *(unsigned int *)(v19 + (unsigned __int16)(v18 + 12));
          *((_WORD *)a3 + 6) = v18 + 16;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }
        unsigned int v20 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 2735, v20);
      }
    }
    unsigned int v20 = "ByteStream_NumReadBytesAvail(*pBs) >= 4";
    goto LABEL_19;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"status %d, total %d, successful %d, downgraded %d, involuntaryDowngraded %d, hlCb 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if (a2) {
LABEL_6:
  }
    a2(a1, v13, v14, v15, v16);
}

void sub_10013029C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AdvBufConfig status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    unsigned int v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    unsigned int v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3273, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 1)
  {
    uint64_t v13 = 1;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"AdvBufConfig sub-opcode incorrect: %d, %!", v16, v17, v18, v19, v20, v21, v22, v13),
        unsigned int v23 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130408(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AdvBufReadCommand status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    unsigned __int16 v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 255;
    uint64_t v17 = 255;
    goto LABEL_16;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_24;
  }
  unsigned int v18 = *((unsigned __int16 *)a3 + 5);
  uint64_t v19 = *((unsigned __int16 *)a3 + 6);
  if (v18 <= v19)
  {
LABEL_24:
    uint64_t v29 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_26;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v29 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_26:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3312, v29);
  }
  uint64_t v20 = *a3;
  *((_WORD *)a3 + 6) = v19 + 1;
  if (v18 <= (unsigned __int16)(v19 + 1)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3313, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v16 = *(unsigned __int8 *)(v20 + v19);
  *((_WORD *)a3 + 6) = v19 + 2;
  if (v18 <= (unsigned __int16)(v19 + 2)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3314, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v15 = *(unsigned __int8 *)(v20 + v19 + 1);
  *((_WORD *)a3 + 6) = v19 + 3;
  if ((int)(v18 - (v19 + 3)) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3315, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v14 = *(unsigned __int8 *)(v20 + v19 + 2);
  unsigned __int16 v13 = *(_WORD *)(v20 + v19 + 3);
  *((_WORD *)a3 + 6) = v19 + 5;
  if (v16 == 2)
  {
    uint64_t v17 = 2;
    if (!a2) {
      return;
    }
    goto LABEL_19;
  }
  uint64_t v17 = v16;
LABEL_16:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"AdvBufReadCommand sub-opcode incorrect: %d, %!", v21, v22, v23, v24, v25, v26, v27, v16),
        int v28 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_19;
  }
  sub_100745764();
  if (a2) {
LABEL_19:
  }
    a2(a1, v17, v15, v14, v13);
}

void sub_10013062C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MatchTableConfig status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3348, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 3)
  {
    uint64_t v13 = 3;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"MatchTableConfig sub-opcode incorrect %d, %!", v16, v17, v18, v19, v20, v21, v22, v13),
        uint64_t v23 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130798(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MatchTableConfigV2 status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3387, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 10)
  {
    uint64_t v13 = 10;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"MatchTableConfigV2 sub-opcode incorrect %d, %!", v16, v17, v18, v19, v20, v21, v22, v13),
        uint64_t v23 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130904(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MatchTableConfigV3 status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3441, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 10)
  {
    uint64_t v13 = 10;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"MatchTableConfigV3 sub-opcode incorrect %d, %!", v16, v17, v18, v19, v20, v21, v22, v13),
        uint64_t v23 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130A70(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AdvBufMatchControl status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3634, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 7)
  {
    uint64_t v13 = 7;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"AdvBufMatchControl sub-opcode incorrect: %d, %!", v16, v17, v18, v19, v20, v21, v22, v13), uint64_t v23 = sub_100050B4C(0x54u), !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130BDC(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MatchTableParams status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3515, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 4)
  {
    uint64_t v13 = 4;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"MatchTableParams sub-opcode incorrect: %d, %!", v16, v17, v18, v19, v20, v21, v22, v13),
        uint64_t v23 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130D48(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MatchBufferConfig status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 255;
    goto LABEL_12;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_20;
  }
  uint64_t v14 = *((unsigned __int16 *)a3 + 6);
  if (*((unsigned __int16 *)a3 + 5) <= v14)
  {
LABEL_20:
    uint64_t v24 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_22;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v24 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3562, v24);
  }
  uint64_t v15 = *a3;
  *((_WORD *)a3 + 6) = v14 + 1;
  uint64_t v13 = *(unsigned __int8 *)(v15 + v14);
  if (v13 == 5)
  {
    uint64_t v13 = 5;
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"MatchBufferConfig sub-opcode incorrect: %d, %!", v16, v17, v18, v19, v20, v21, v22, v13),
        uint64_t v23 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_15;
  }
  sub_100745764();
  if (a2) {
LABEL_15:
  }
    a2(a1, v13);
}

void sub_100130EB4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MatchBufferRead status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v13 = 0;
    uint64_t v14 = 255;
    goto LABEL_13;
  }
  if (*((unsigned char *)a3 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    goto LABEL_21;
  }
  unsigned int v15 = *((unsigned __int16 *)a3 + 5);
  uint64_t v16 = *((unsigned __int16 *)a3 + 6);
  if (v15 <= v16)
  {
LABEL_21:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_23;
  }
  if (*((unsigned char *)a3 + 14) != 1)
  {
    uint64_t v26 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_23:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3600, v26);
  }
  uint64_t v17 = *a3;
  *((_WORD *)a3 + 6) = v16 + 1;
  if (v15 <= (int)v16 + 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 3601, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v14 = *(unsigned __int8 *)(v17 + v16);
  *((_WORD *)a3 + 6) = v16 + 2;
  uint64_t v13 = *(unsigned __int8 *)(v17 + v16 + 1);
  if (v14 == 6)
  {
    uint64_t v14 = 6;
    if (!a2) {
      return;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"MatchBufferRead sub-opcode incorrect: %d, %!", v18, v19, v20, v21, v22, v23, v24, v14),
        uint64_t v25 = sub_100050B4C(0x54u),
        !os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)))
  {
    if (!a2) {
      return;
    }
    goto LABEL_16;
  }
  sub_100745764();
  if (a2) {
LABEL_16:
  }
    a2(a1, v14, v13);
}

void sub_10013105C(uint64_t a1, void (*a2)(uint64_t, void, void, void, void, void, void, uint64_t, int), uint64_t *a3)
{
  if (!a1)
  {
    if (*((unsigned char *)a3 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c");
    }
    else
    {
      int v21 = *((unsigned __int16 *)a3 + 5);
      uint64_t v22 = *((unsigned __int16 *)a3 + 6);
      if (v21 - (int)v22 > 1)
      {
        if (*((unsigned char *)a3 + 14) == 1)
        {
          uint64_t v23 = *a3;
          unsigned __int16 v13 = *(_WORD *)(*a3 + v22);
          *((_WORD *)a3 + 6) = v22 + 2;
          if (v21 - (unsigned __int16)(v22 + 2) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4492, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v14 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 2));
          *((_WORD *)a3 + 6) = v22 + 4;
          if (v21 - (unsigned __int16)(v22 + 4) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4493, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v15 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 4));
          *((_WORD *)a3 + 6) = v22 + 6;
          if (v21 - (unsigned __int16)(v22 + 6) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4494, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v16 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 6));
          *((_WORD *)a3 + 6) = v22 + 8;
          if (v21 - (unsigned __int16)(v22 + 8) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4495, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v17 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 8));
          *((_WORD *)a3 + 6) = v22 + 10;
          if (v21 - (unsigned __int16)(v22 + 10) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4496, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          unsigned __int16 v18 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 10));
          *((_WORD *)a3 + 6) = v22 + 12;
          if (v21 - (unsigned __int16)(v22 + 12) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4497, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v24 = (unsigned __int8 *)(v23 + (unsigned __int16)(v22 + 12));
          int v25 = *v24;
          int v26 = v24[1];
          *((_WORD *)a3 + 6) = v22 + 14;
          if (v21 - (unsigned __int16)(v22 + 14) <= 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4498, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
          }
          uint64_t v19 = v25 | (v26 << 8);
          __int16 v20 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 14));
          *((_WORD *)a3 + 6) = v22 + 16;
          if (a2) {
            goto LABEL_6;
          }
          return;
        }
        uint64_t v27 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_23:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/aci/aci_vsc.c", 4491, v27);
      }
    }
    uint64_t v27 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_23;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"status %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  unsigned __int16 v13 = 0;
  unsigned __int16 v14 = 0;
  unsigned __int16 v15 = 0;
  unsigned __int16 v16 = 0;
  unsigned __int16 v17 = 0;
  unsigned __int16 v18 = 0;
  uint64_t v19 = 0;
  __int16 v20 = 0;
  if (a2)
  {
LABEL_6:
    LOWORD(v28) = v20;
    a2(a1, v13, v14, v15, v16, v17, v18, v19, v28);
  }
}

unsigned __int8 *sub_100131318(uint64_t a1, unsigned __int8 **a2, _WORD *a3)
{
  return sub_100131320(a1, a2, a3, 1);
}

unsigned __int8 *sub_100131320(uint64_t a1, unsigned __int8 **a2, _WORD *a3, int a4)
{
  uint64_t v4 = *a2;
  if (!*a2) {
    return v4;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(unsigned __int16 *)(v5 + 18);
  uint64_t v8 = (unsigned __int8 *)(v6 + v7);
  if (*v4) {
    BOOL v9 = v4 > v8;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9) {
    return 0;
  }
  unsigned __int16 v13 = *(unsigned __int8 **)(a1 + 8);
  int v14 = sub_100131F30(v13, *(unsigned __int16 *)(a1 + 16));
  if (v14 != 1)
  {
    if (*v13 != 68)
    {
      if (v4 >= v8) {
        return 0;
      }
      uint64_t v31 = v6 + v7 - (void)v4;
      uint64_t v8 = v4;
      while (*v8 - 48 <= 9)
      {
        ++v8;
        if (!--v31)
        {
          uint64_t v8 = (unsigned __int8 *)(v6 + v7);
          break;
        }
      }
    }
    uint64_t v19 = v8;
    if (v8 != v4) {
      goto LABEL_37;
    }
    return 0;
  }
  int v15 = *(unsigned __int8 *)(v5 + 21);
  if (v4 < v8)
  {
    int v16 = 0;
    unsigned __int16 v17 = (unsigned __int8 *)(v6 + v7);
    uint64_t v18 = v6 + v7 - (void)v4;
    uint64_t v19 = v4;
    while (1)
    {
      if (*v19 == 34)
      {
        v15 ^= 1u;
        *(unsigned char *)(v5 + 21) = v15;
      }
      if (!v15)
      {
        unsigned int v20 = *v19;
        if (v20 > 0x2B)
        {
          if (v20 == 44)
          {
            if (!v16) {
              goto LABEL_37;
            }
          }
          else if (v20 == 59)
          {
            goto LABEL_37;
          }
        }
        else if (v20 == 40)
        {
          ++v16;
        }
        else if (v20 == 41)
        {
          BOOL v21 = __OFSUB__(v16--, 1);
          if (v16 < 0 != v21) {
            goto LABEL_37;
          }
        }
      }
      ++v19;
      if (!--v18) {
        goto LABEL_32;
      }
    }
  }
  int v16 = 0;
  unsigned __int16 v17 = v4;
LABEL_32:
  uint64_t v19 = v17;
  if (v15 | v16)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unexpected end of parameter!\n", v22, v23, v24, v25, v26, v27, v28, v32);
      uint64_t v29 = sub_100050B4C(0);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v4 = 0;
    *a2 = v8;
    return v4;
  }
LABEL_37:
  if (a4) {
    *uint64_t v19 = 0;
  }
  *a2 = v19 + 1;
  if (a3) {
    *a3 = (_WORD)v19 - (_WORD)v4;
  }
  return v4;
}

uint64_t sub_100131514(uint64_t a1, uint64_t a2, unsigned int a3)
{
  __int16 v51 = 0;
  if (!a1) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(a1 + 20) == 5) {
    *(_DWORD *)(a1 + 18) = 0;
  }
  int v6 = sub_100131990(a1, a2, a3, &v51);
  if (v6 == 0x7FFFFFFF) {
    return 0;
  }
  unsigned int v50 = a3;
  while (1)
  {
    int v8 = *(unsigned __int8 *)(a1 + 20);
    if (v8 != 3)
    {
      if (v8 == 1)
      {
        if (v6 != 65)
        {
          if (v6 == 84)
          {
            if (!*(unsigned char *)(a1 + 21)) {
              *(unsigned char *)(a1 + 20) = 3;
            }
          }
          else if (!*(unsigned char *)(a1 + 21))
          {
            *(_DWORD *)(a1 + 18) = 0;
          }
        }
      }
      else if (!*(unsigned char *)(a1 + 20) && v6 == 65 && !*(unsigned char *)(a1 + 21))
      {
        *(unsigned char *)(a1 + 20) = 1;
      }
      goto LABEL_76;
    }
    if (v6 != 13 || *(unsigned char *)(a1 + 21)) {
      break;
    }
    *(unsigned char *)(a1 + 20) = 5;
    uint64_t v11 = *(unsigned __int16 *)(a1 + 18);
    if (!*(_WORD *)(a1 + 18)) {
      goto LABEL_75;
    }
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(a1 + 8);
    __int16 v52 = 0;
    while (1)
    {
      unsigned int v14 = *(unsigned __int8 *)(v13 + v12);
      BOOL v15 = v14 > 0x3F;
      unint64_t v16 = (1 << v14) & 0xA800000000000000;
      if (!v15 && v16 != 0) {
        break;
      }
      if (v11 == ++v12)
      {
        LOWORD(v12) = v11;
        break;
      }
    }
    unsigned int v18 = 0;
    unsigned __int16 v19 = 0;
    while (1)
    {
      memset(buf, 0, sizeof(buf));
      uint64_t v55 = a1;
      *(_DWORD *)std::__fs::filesystem::path buf = 2;
      unsigned int v20 = (unsigned __int16)v12 >= v19 ? (unsigned __int16)v12 - v19 : 0;
      if (sub_100131F30((unsigned __int8 *)(v13 + v19), v20) == 1) {
        break;
      }
      int v26 = *(unsigned __int8 *)(v13 + v19);
      if (v26 == 38)
      {
        unsigned __int16 v21 = 2;
        goto LABEL_57;
      }
      if (v26 != 59)
      {
        if (v26 == 83 && (unsigned int v27 = v18 + 1, v18 + 1 < v11))
        {
          unsigned __int16 v21 = 1;
          do
          {
            if (*(unsigned __int8 *)(v13 + v27) - 48 > 9) {
              break;
            }
            unsigned int v27 = v18 + ++v21;
          }
          while (v27 < v11);
        }
        else
        {
          unsigned __int16 v21 = 1;
        }
        goto LABEL_57;
      }
      ++v19;
LABEL_69:
      unsigned int v18 = v19;
      if (v19 >= v11) {
        goto LABEL_75;
      }
    }
    unsigned __int16 v21 = 0;
    if (v18 < v11)
    {
      unsigned int v22 = v18;
      do
      {
        unsigned int v23 = *(unsigned __int8 *)(v13 + v22);
        BOOL v15 = v23 > 0x3F;
        unint64_t v24 = (1 << v23) & 0xA800000000000000;
        if (!v15 && v24 != 0) {
          break;
        }
        unsigned int v22 = v18 + ++v21;
      }
      while (v22 < v11);
    }
LABEL_57:
    uint64_t v28 = sub_100022FE8(v21 + 1);
    *(void *)&buf[8] = v28;
    if (v28)
    {
      *(_WORD *)&uint8_t buf[16] = v21;
      memmove(v28, (const void *)(v13 + v19), v21);
      *(unsigned char *)(*(void *)&buf[8] + v21) = 0;
      unsigned __int16 v29 = v21 + v19;
      uint64_t v30 = (unsigned __int16)(v21 + v19);
      if (v30 < v11)
      {
        int v31 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v21 + v19));
        if (v31 == 61)
        {
          uint64_t v32 = v30 + 1;
          if (v32 < v11 && *(unsigned char *)(v13 + v32) == 63)
          {
            *(_DWORD *)std::__fs::filesystem::path buf = 0;
            v29 += 2;
          }
          else
          {
LABEL_65:
            ++v29;
          }
        }
        else if (v31 == 63)
        {
          *(_DWORD *)std::__fs::filesystem::path buf = 1;
          goto LABEL_65;
        }
      }
      *(void *)&unsigned char buf[24] = v13 + v29;
      unsigned int v53 = *(unsigned __int8 **)&buf[24];
      while (sub_100131320((uint64_t)buf, &v53, &v52, 0))
        ;
      unsigned __int16 v19 = (_WORD)v53 - v13;
      (*(void (**)(uint8_t *))a1)(buf);
      sub_100023010(*(void **)&buf[8]);
      *(_WORD *)&uint8_t buf[16] = 0;
      goto LABEL_69;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Parse command failed - %!, continuing", v33, v34, v35, v36, v37, v38, v39, 106);
      unsigned int v40 = sub_100050B4C(0);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
      {
        unsigned int v41 = sub_100050714();
        *(_DWORD *)std::__fs::filesystem::path buf = 136446466;
        *(void *)&uint8_t buf[4] = v41;
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = 0xFFFF;
        _os_log_error_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
      }
    }
LABEL_75:
    *(_DWORD *)(a1 + 18) = 0;
    a3 = v50;
LABEL_76:
    int v6 = sub_100131990(a1, a2, a3, &v51);
    if (v6 == 0x7FFFFFFF) {
      return 0;
    }
  }
  uint64_t v9 = *(unsigned __int16 *)(a1 + 18);
  if (v9 < *(unsigned __int16 *)(a1 + 16))
  {
    uint64_t v10 = *(void *)(a1 + 8);
    *(_WORD *)(a1 + 18) = v9 + 1;
    *(unsigned char *)(v10 + v9) = v6;
    goto LABEL_76;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Receive error - %!\n", v42, v43, v44, v45, v46, v47, v48, 104);
    unsigned int v49 = sub_100050B4C(0);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  *(_DWORD *)(a1 + 18) = 0;
  return 104;
}

uint64_t sub_100131990(uint64_t a1, uint64_t a2, unsigned int a3, _WORD *a4)
{
  uint64_t v4 = (unsigned __int16)*a4;
  if (v4 <= a3) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = (unsigned __int16)*a4;
  }
  while (1)
  {
    if (v5 == v4) {
      return 0x7FFFFFFFLL;
    }
    if (*(unsigned char *)(a2 + v4) != 32) {
      break;
    }
    *a4 = ++v4;
    if (*(unsigned char *)(a1 + 21)) {
      return 32;
    }
  }
  *a4 = v4 + 1;
  uint64_t v6 = *(unsigned __int8 *)(a2 + (unsigned __int16)v4);
  if (v6 != 34)
  {
    if (*(unsigned char *)(a1 + 21)) {
      return v6;
    }
    goto LABEL_15;
  }
  int v7 = *(unsigned __int8 *)(a1 + 21);
  if (*(unsigned char *)(a1 + 20) == 3)
  {
    v7 ^= 1u;
    *(unsigned char *)(a1 + 21) = v7;
  }
  if (!v7)
  {
LABEL_15:
    if ((v6 - 97) >= 0x1A) {
      return v6;
    }
    else {
      return (v6 - 32);
    }
  }
  return v6;
}

uint64_t sub_100131A28(void (**a1)(void **), uint64_t a2, unsigned int a3)
{
  __int16 v53 = 0;
  if (*((unsigned char *)a1 + 20) == 5) {
    *(_DWORD *)((char *)a1 + 18) = 0;
  }
  int v6 = sub_100131990((uint64_t)a1, a2, a3, &v53);
  if (v6 != 0x7FFFFFFF)
  {
    int v8 = v6;
    while (2)
    {
      for (char i = *((unsigned char *)a1 + 20); i == 3; char i = 0)
      {
        if (v8 == 13)
        {
          unsigned int v10 = *((unsigned __int16 *)a1 + 9);
          if (!*((unsigned char *)a1 + 21))
          {
            if (*((_WORD *)a1 + 9))
            {
              *((unsigned char *)a1 + 20) = 4;
              goto LABEL_42;
            }
LABEL_35:
            *((unsigned char *)a1 + 20) = 2;
            goto LABEL_42;
          }
        }
        else
        {
          unsigned int v10 = *((unsigned __int16 *)a1 + 9);
        }
        if (v10 < *((unsigned __int16 *)a1 + 8))
        {
          unsigned int v22 = a1[1];
          *((_WORD *)a1 + 9) = v10 + 1;
          *((unsigned char *)v22 + v10) = v8;
          goto LABEL_42;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Receive overflow - discarding (buf length %d)\n", v11, v12, v13, v14, v15, v16, v17, *((unsigned __int16 *)a1 + 9));
          unsigned int v18 = sub_100050B4C(0);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          {
            unsigned __int16 v19 = sub_100050714();
            LODWORD(buf[0]) = 136446466;
            *(void **)((char *)buf + 4) = v19;
            WORD2(buf[1]) = 1024;
            *(_DWORD *)((char *)&buf[1] + 6) = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", (uint8_t *)buf, 0x12u);
          }
        }
        *(_DWORD *)((char *)a1 + 18) = 0;
      }
      if (i != 4)
      {
        if (i != 2)
        {
          if (i || v8 != 13 || *((unsigned char *)a1 + 21)) {
            goto LABEL_42;
          }
          goto LABEL_35;
        }
        if (v8 != 13)
        {
          if (v8 != 10)
          {
            if (!*((unsigned char *)a1 + 21)) {
              *((unsigned char *)a1 + 20) = 0;
            }
            goto LABEL_42;
          }
          if (!*((unsigned char *)a1 + 21)) {
LABEL_41:
          }
            *((unsigned char *)a1 + 20) = 3;
        }
LABEL_42:
        int v8 = sub_100131990((uint64_t)a1, a2, a3, &v53);
        if (v8 != 0x7FFFFFFF) {
          continue;
        }
        return 0;
      }
      break;
    }
    if (v8 != 10)
    {
      if (v8 == 13)
      {
        uint64_t v20 = *((unsigned __int16 *)a1 + 9);
        if (!*((unsigned char *)a1 + 21))
        {
          if (v20 < *((unsigned __int16 *)a1 + 8))
          {
            unsigned __int16 v21 = a1[1];
            *((_WORD *)a1 + 9) = v20 + 1;
            *((unsigned char *)v21 + v20) = 13;
            goto LABEL_42;
          }
LABEL_71:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Receive error - %!\n", v45, v46, v47, v48, v49, v50, v51, 104);
            __int16 v52 = sub_100050B4C(0);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          *(_DWORD *)((char *)a1 + 18) = 0;
          return 104;
        }
      }
      else
      {
        LODWORD(v20) = *((unsigned __int16 *)a1 + 9);
      }
LABEL_39:
      if ((int)v20 + 2 <= *((unsigned __int16 *)a1 + 8))
      {
        unsigned int v23 = a1[1];
        *((_WORD *)a1 + 9) = v20 + 1;
        *((unsigned char *)v23 + v20) = 13;
        unint64_t v24 = a1[1];
        uint64_t v25 = *((unsigned __int16 *)a1 + 9);
        *((_WORD *)a1 + 9) = v25 + 1;
        *((unsigned char *)v24 + v25) = v8;
        goto LABEL_41;
      }
      goto LABEL_71;
    }
    uint64_t v20 = *((unsigned __int16 *)a1 + 9);
    if (*((unsigned char *)a1 + 21)) {
      goto LABEL_39;
    }
    *((unsigned char *)a1 + 20) = 5;
    if (v20)
    {
      uint64_t v26 = 0;
      unsigned int v27 = (unsigned __int8 *)a1[1];
      memset((char *)buf + 4, 0, 20);
      uint8_t buf[4] = a1;
      LODWORD(buf[0]) = 3;
      while (1)
      {
        int v28 = v27[v26];
        if (v28 == 58 || v28 == 61) {
          break;
        }
        if (v20 == ++v26)
        {
          LOWORD(v26) = v20;
          goto LABEL_52;
        }
      }
      if (sub_100131F30(v27, (unsigned __int16)v26) != 1) {
        goto LABEL_64;
      }
LABEL_52:
      uint64_t v29 = 0;
      uint64_t v30 = v20 <= 1 ? 1 : v20;
      while (1)
      {
        int v31 = v27[v29];
        if (v31 == 58 || v31 == 61) {
          break;
        }
        if (v30 == ++v29) {
          goto LABEL_61;
        }
      }
      LOWORD(v30) = v29;
LABEL_61:
      BOOL v32 = v20 == (unsigned __int16)v30;
      LOWORD(v20) = v30;
      if (v32)
      {
        uint64_t v33 = 134;
      }
      else
      {
LABEL_64:
        uint64_t v34 = sub_100022FE8((unsigned __int16)v20 + 1);
        buf[1] = v34;
        if (v34)
        {
          uint64_t v35 = v34;
          LOWORD(buf[2]) = v20;
          memmove(v34, v27, (unsigned __int16)v20);
          v35[(unsigned __int16)v20] = 0;
          buf[3] = &v27[(unsigned __int16)(v20 + 1)];
          (*a1)(buf);
          sub_100023010(buf[1]);
          goto LABEL_70;
        }
        uint64_t v33 = 106;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Parse response failed - %!, continuing", v36, v37, v38, v39, v40, v41, v42, v33);
        uint64_t v43 = sub_100050B4C(0);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        {
          uint64_t v44 = sub_100050714();
          LODWORD(buf[0]) = 136446466;
          *(void **)((char *)buf + 4) = v44;
          WORD2(buf[1]) = 1024;
          *(_DWORD *)((char *)&buf[1] + 6) = 0xFFFF;
          _os_log_error_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", (uint8_t *)buf, 0x12u);
        }
      }
    }
LABEL_70:
    *(_DWORD *)((char *)a1 + 18) = 0;
    goto LABEL_42;
  }
  return 0;
}

void sub_100131ED8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_10025B8C0();
    goto LABEL_3;
  }
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_WORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 18) = 0;
}

uint64_t sub_100131F30(unsigned __int8 *__s1, unsigned int a2)
{
  if (!qword_100A02048) {
    return a2
  }
        && ((unsigned int v8 = *__s1 - 42, v9 = v8 > 0x34, v10 = (1 << v8) & 0x10000000000003, !v9)
          ? (BOOL v11 = v10 == 0)
          : (BOOL v11 = 1),
            !v11);
  uint64_t v4 = *(const void **)qword_100A02048;
  if (!*(void *)qword_100A02048) {
    return a2
  }
        && ((unsigned int v8 = *__s1 - 42, v9 = v8 > 0x34, v10 = (1 << v8) & 0x10000000000003, !v9)
          ? (BOOL v11 = v10 == 0)
          : (BOOL v11 = 1),
            !v11);
  for (char i = (const void **)(qword_100A02048 + 16); ; i += 2)
  {
    size_t v6 = *((unsigned __int8 *)i - 8);
    if (v6 <= a2 && !memcmp(__s1, v4, v6)) {
      break;
    }
    int v7 = *i;
    uint64_t v4 = v7;
    if (!v7) {
      return a2
    }
          && ((unsigned int v8 = *__s1 - 42, v9 = v8 > 0x34, v10 = (1 << v8) & 0x10000000000003, !v9)
            ? (BOOL v11 = v10 == 0)
            : (BOOL v11 = 1),
              !v11);
  }
  return *((unsigned int *)i - 1);
}

uint64_t sub_100131FD0(int a1, uint64_t *a2)
{
  if (!dword_100A197B4)
  {
    qword_100A02060 = (uint64_t)sub_10010CE48(8uLL);
    if (!qword_100A02060) {
      return 106;
    }
  }
  uint64_t v7 = 4;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  size_t v6 = &unk_10099BB78;
  uint64_t v8 = *a2;
  LOWORD(v9) = *((_WORD *)a2 + 4);
  if (a1)
  {
    byte_100A02050 = 1;
    word_100A02052 = 2;
    dword_100A02058 = a1;
  }
  else
  {
    LOWORD(v7) = 3;
  }
  uint64_t v4 = sub_10024E258((uint64_t)&v6, (int *)(qword_100A02060 + 4));
  if (v4)
  {
    *(_DWORD *)(qword_100A02060 + 4) = 0;
    sub_1001320CC();
  }
  else
  {
    sub_100185350(0x80000);
    dword_100A197B4 |= 1u;
  }
  return v4;
}

void sub_1001320CC()
{
  if (!*(_DWORD *)qword_100A02060 && !*(_DWORD *)(qword_100A02060 + 4))
  {
    sub_100023010((void *)qword_100A02060);
    qword_100A02060 = 0;
    dword_100A197B4 = 0;
  }
}

uint64_t sub_100132114()
{
  if ((dword_100A197B4 & 1) == 0) {
    return 103;
  }
  sub_10024E448(*(_DWORD *)(qword_100A02060 + 4));
  sub_100185404(0x80000);
  *(_DWORD *)(qword_100A02060 + 4) = 0;
  dword_100A197B4 &= 2u;
  sub_1001320CC();
  return 0;
}

uint64_t sub_10013217C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (dword_100A197B8)
  {
LABEL_2:
    uint64_t v17 = qword_100A02068;
    while (1)
    {
      uint64_t v17 = *(void *)v17;
      if (!v17) {
        break;
      }
      if (*(unsigned __int16 *)(v17 + 80) == a1) {
        return 119;
      }
    }
    uint64_t v21 = a7;
    unsigned int v22 = sub_10010CE48(0x58uLL);
    if (v22)
    {
      uint64_t v23 = a8;
      uint64_t v18 = 0;
      uint64_t v24 = *(void *)qword_100A02068;
      *(void *)qword_100A02068 = v22;
      v22[40] = a1;
      *(void *)unsigned int v22 = v24;
      *((void *)v22 + 1) = a2;
      *((void *)v22 + 2) = a3;
      *((void *)v22 + 3) = a4;
      *((void *)v22 + 4) = a5;
      *((void *)v22 + 5) = a6;
      *((void *)v22 + 6) = v21;
      *((void *)v22 + 7) = v23;
      *((void *)v22 + 8) = a9;
      *((void *)v22 + 9) = a10;
      return v18;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Out of memory space trying to allocate profile.", v25, v26, v27, v28, v29, v30, v31, v34);
      BOOL v32 = sub_100050B4C(2u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 104;
  }
  uint64_t v19 = a7;
  qword_100A02068 = (uint64_t)sub_10010CE48(0x10uLL);
  if (!qword_100A02068) {
    return 104;
  }
  uint64_t v20 = sub_1001E5FF0(23, (uint64_t)sub_100133AB8);
  if (!v20)
  {
    uint64_t v20 = sub_1001E5FF0(27, (uint64_t)sub_100133D7C);
    if (!v20)
    {
      dword_100A197B8 = 1;
      a7 = v19;
      goto LABEL_2;
    }
  }
  uint64_t v18 = v20;
  if (qword_100A02068)
  {
    sub_100023010((void *)qword_100A02068);
    qword_100A02068 = 0;
  }
  return v18;
}

uint64_t sub_10013231C(int a1)
{
  if (!dword_100A197B8) {
    return 408;
  }
  mach_port_t v1 = (void *)qword_100A02068;
  do
  {
    int v2 = v1;
    mach_port_t v1 = (void *)*v1;
    if (!v1) {
      return 120;
    }
  }
  while (*((unsigned __int16 *)v1 + 40) != a1);
  *int v2 = *v1;
  sub_100023010(v1);
  if (*(void *)qword_100A02068) {
    return 0;
  }
  if (!dword_100A197B8) {
    return 408;
  }
  uint64_t result = sub_1001E61E4(23);
  if (!result)
  {
    uint64_t result = sub_1001E61E4(27);
    if (!result)
    {
      while (1)
      {
        uint64_t v4 = (void **)qword_100A02068;
        if (!*(void *)(qword_100A02068 + 8)) {
          break;
        }
        sub_1001329EC(*(void **)(qword_100A02068 + 8));
      }
      while (1)
      {
        uint64_t v5 = *v4;
        if (!*v4) {
          break;
        }
        *uint64_t v4 = (void *)*v5;
        sub_100023010(v5);
        uint64_t v4 = (void **)qword_100A02068;
      }
      sub_100023010(v4);
      uint64_t result = 0;
      qword_100A02068 = 0;
      dword_100A197B8 = 0;
    }
  }
  return result;
}

uint64_t sub_100132404(uint64_t a1, int a2, uint64_t a3, char a4)
{
  ptr = 0;
  if (!dword_100A197B8) {
    return 408;
  }
  v22[0] = 0;
  uint64_t v7 = qword_100A02068;
  do
  {
    uint64_t v7 = *(void *)v7;
    if (!v7) {
      return 120;
    }
  }
  while (*(unsigned __int16 *)(v7 + 80) != a2);
  uint64_t v8 = qword_100A02068 + 8;
  while (1)
  {
    uint64_t v8 = *(void *)v8;
    if (!v8) {
      break;
    }
    if (*(_DWORD *)a1 == *(_DWORD *)(v8 + 8) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v8 + 12))
    {
      ++*(_WORD *)(v8 + 14);
      *(_WORD *)(v7 + 82) = *(_WORD *)(v8 + 24);
      v22[1] = (const void *)(v7 + 80);
      LOWORD(v22[0]) = 2;
      sub_100026DA8((uint64_t)sub_1001325E4, v22, 0);
      return 0;
    }
  }
  uint64_t v10 = sub_1001326F0(&ptr);
  if (!v10)
  {
    uint64_t v10 = sub_1001DF7BC((uint64_t)sub_10013278C, (uint64_t)sub_1001328BC, (uint64_t)sub_10013294C, 23, a1, a3, (_WORD *)ptr + 12, (uint64_t)&unk_1007B93A0);
    if (v10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"L2CAP connection failed %!", v11, v12, v13, v14, v15, v16, v17, v10);
        uint64_t v18 = sub_100050B4C(2u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_1001329EC(ptr);
    }
    else
    {
      uint64_t v19 = ptr;
      *(_WORD *)(v7 + 82) = *((_WORD *)ptr + 12);
      int v20 = *(_DWORD *)a1;
      v19[6] = *(_WORD *)(a1 + 4);
      *((_DWORD *)v19 + 2) = v20;
      v19[7] = 1;
      *((unsigned char *)v19 + 17) = 0;
      *((unsigned char *)v19 + 18) = a4;
    }
  }
  return v10;
}

void sub_1001325E4(uint64_t a1)
{
  uint64_t v20 = 0;
  uint64_t v1 = qword_100A02068;
  while (1)
  {
    uint64_t v1 = *(void *)v1;
    if (!v1) {
      break;
    }
    if (*(unsigned __int16 *)(v1 + 80) == **(unsigned __int16 **)(a1 + 8))
    {
      uint64_t v2 = sub_100133910(&v20, *(unsigned __int16 *)(v1 + 82));
      if (v2)
      {
        uint64_t v3 = v2;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"%! (%d)", v4, v5, v6, v7, v8, v9, v10, v3);
          uint64_t v11 = sub_100050B4C(2u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        (*(void (**)(uint64_t, void, void, void))(v1 + 16))(v20 + 8, *(unsigned __int16 *)(v20 + 28), *(unsigned __int16 *)(v20 + 26), 0);
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"%! (%d)", v12, v13, v14, v15, v16, v17, v18, 120);
    uint64_t v19 = sub_100050B4C(2u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1001326F0(void *a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  uint64_t v2 = sub_10010CE48(0x88uLL);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = 0;
    uint64_t v5 = qword_100A02068;
    *uint64_t v3 = *(void *)(qword_100A02068 + 8);
    *(void *)(v5 + 8) = v3;
    *a1 = v3;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Out of memory trying to allocate new AVCTP connetion record", v6, v7, v8, v9, v10, v11, v12, v14);
      uint64_t v13 = sub_100050B4C(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 104;
  }
  return result;
}

void sub_10013278C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ptr = 0;
  if (!sub_100133910((uint64_t *)&ptr, a1))
  {
    uint64_t v7 = ptr;
    int v19 = *((_DWORD *)ptr + 2);
    __int16 v20 = *((_WORD *)ptr + 6);
    if (a4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"L2CAP Connection failed: %!", v8, v9, v10, v11, v12, v13, v14, a4);
        uint64_t v15 = sub_100050B4C(2u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v16 = ptr;
      if (*((_WORD *)ptr + 40))
      {
        sub_1001E121C(*((unsigned __int16 *)ptr + 40), 436);
        uint64_t v16 = ptr;
      }
      sub_1001329EC(v16);
    }
    else
    {
      *((_WORD *)ptr + 13) = a3;
      v7[14] = a2;
      *((unsigned char *)v7 + 16) = 1;
      if (!*((unsigned char *)v7 + 17) && *((unsigned char *)v7 + 18)) {
        sub_100132AA4((uint64_t)&v19, 4366);
      }
    }
    uint64_t v17 = *(uint64_t **)qword_100A02068;
    if (*(void *)qword_100A02068)
    {
      do
      {
        uint64_t v18 = (uint64_t *)*v17;
        *((_WORD *)v17 + 41) = 0;
        ((void (*)(int *, uint64_t, uint64_t, uint64_t))v17[2])(&v19, a2, a3, a4);
        uint64_t v17 = v18;
      }
      while (v18);
    }
  }
}

void sub_1001328BC(int a1, uint64_t a2)
{
  ptr = 0;
  if (!sub_100133910((uint64_t *)&ptr, a1))
  {
    uint64_t v3 = ptr;
    *((_WORD *)ptr + 14) = 0;
    v3[6] = 0;
    if (!*((_WORD *)v3 + 40))
    {
      int v6 = v3[2];
      __int16 v7 = *((_WORD *)v3 + 6);
      sub_1001329EC(v3);
      uint64_t v4 = *(uint64_t ***)qword_100A02068;
      if (*(void *)qword_100A02068)
      {
        do
        {
          uint64_t v5 = *v4;
          ((void (*)(int *, uint64_t))v4[3])(&v6, a2);
          uint64_t v4 = (uint64_t **)v5;
        }
        while (v5);
      }
    }
  }
}

void sub_10013294C(int a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v14 = 0;
  if (a3)
  {
    if (!sub_100133910(&v14, a1)) {
      sub_100133F88((unsigned __int16 *)(v14 + 24), v14 + 8, a2, a3);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Zero length packet received", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = sub_100050B4C(2u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1001329EC(void *ptr)
{
  uint64_t v2 = (void *)(qword_100A02068 + 8);
  while (1)
  {
    uint64_t v3 = v2;
    uint64_t v2 = (void *)*v2;
    if (!v2) {
      break;
    }
    if (v2 == ptr)
    {
      *uint64_t v3 = *ptr;
      uint64_t v4 = (void *)ptr[4];
      if (v4)
      {
        sub_100023010(v4);
        ptr[4] = 0;
      }
      sub_100023010(ptr);
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to free AVCTP connection", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = sub_100050B4C(2u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_100132AA4(uint64_t a1, int a2)
{
  if (!dword_100A197B8) {
    return 408;
  }
  uint64_t v2 = qword_100A02068;
  do
  {
    uint64_t v2 = *(void *)v2;
    if (!v2) {
      return 120;
    }
  }
  while (*(unsigned __int16 *)(v2 + 80) != a2);
  uint64_t v3 = qword_100A02068 + 8;
  while (1)
  {
    uint64_t v3 = *(void *)v3;
    if (!v3) {
      break;
    }
    if (*(_DWORD *)a1 == *(_DWORD *)(v3 + 8) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v3 + 12))
    {
      if (*(_WORD *)(v3 + 80)) {
        return 133;
      }
      break;
    }
  }
  uint64_t v5 = sub_1001DF7BC((uint64_t)sub_100132BE0, (uint64_t)sub_100132D0C, (uint64_t)sub_100132DE4, 27, a1, (uint64_t)&unk_10099BC08, (_WORD *)(v3 + 80), (uint64_t)&unk_1007B93A0);
  if (v5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"L2CAP connection failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
      uint64_t v13 = sub_100050B4C(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v5;
}

void sub_100132BE0(int a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  ptr = 0;
  if (!sub_100133910((uint64_t *)&ptr, a1))
  {
    uint64_t v7 = ptr;
    int v13 = *((_DWORD *)ptr + 2);
    __int16 v14 = *((_WORD *)ptr + 6);
    if (a4)
    {
      *((_WORD *)ptr + 40) = 0;
    }
    else
    {
      *((_WORD *)ptr + 41) = a3;
      v7[42] = a2;
      *((unsigned char *)v7 + 128) = 1;
    }
    uint64_t v8 = *(uint64_t ***)qword_100A02068;
    if (*(void *)qword_100A02068)
    {
      uint64_t v9 = (unsigned __int16)(a3 - 3);
      do
      {
        uint64_t v10 = *v8;
        ((void (*)(int *, uint64_t, uint64_t, uint64_t))v8[6])(&v13, a2, v9, a4);
        uint64_t v8 = (uint64_t **)v10;
      }
      while (v10);
      uint64_t v7 = ptr;
    }
    if (*((unsigned char *)v7 + 16) && !v7[12])
    {
      if (v7[40])
      {
        sub_1001E121C((unsigned __int16)v7[40], 436);
        uint64_t v7 = ptr;
      }
      int v13 = *((_DWORD *)v7 + 2);
      __int16 v14 = v7[6];
      sub_1001329EC(v7);
      uint64_t v11 = *(uint64_t ***)qword_100A02068;
      if (*(void *)qword_100A02068)
      {
        do
        {
          uint64_t v12 = *v11;
          ((void (*)(int *, uint64_t))v11[3])(&v13, a4);
          uint64_t v11 = (uint64_t **)v12;
        }
        while (v12);
      }
    }
  }
}

void sub_100132D0C(int a1, uint64_t a2)
{
  ptr = 0;
  __int16 v9 = 0;
  int v8 = 0;
  if (!sub_100133910((uint64_t *)&ptr, a1))
  {
    uint64_t v3 = ptr;
    *((_WORD *)ptr + 42) = 0;
    v3[20] = 0;
    uint64_t v4 = *(uint64_t ***)qword_100A02068;
    if (*(void *)qword_100A02068)
    {
      do
      {
        uint64_t v5 = *v4;
        ((void (*)(int *, uint64_t))v4[7])(&v8, a2);
        uint64_t v4 = (uint64_t **)v5;
      }
      while (v5);
      uint64_t v3 = ptr;
    }
    if (*((unsigned char *)v3 + 16))
    {
      if (!*((_WORD *)v3 + 12))
      {
        int v8 = v3[2];
        __int16 v9 = *((_WORD *)v3 + 6);
        sub_1001329EC(v3);
        uint64_t v6 = *(uint64_t ***)qword_100A02068;
        if (*(void *)qword_100A02068)
        {
          do
          {
            uint64_t v7 = *v6;
            ((void (*)(int *, uint64_t))v6[3])(&v8, a2);
            uint64_t v6 = (uint64_t **)v7;
          }
          while (v7);
        }
      }
    }
  }
}

void sub_100132DE4(int a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v14 = 0;
  if (a3)
  {
    if (!sub_100133910(&v14, a1)) {
      sub_100133F88((unsigned __int16 *)(v14 + 80), v14 + 8, a2, a3);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Zero length packet received", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = sub_100050B4C(2u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_100132E84(uint64_t a1, char a2, char a3)
{
  if (!dword_100A197B8) {
    return 408;
  }
  uint64_t v4 = qword_100A02068 + 8;
  while (1)
  {
    uint64_t v4 = *(void *)v4;
    if (!v4) {
      break;
    }
    if (*(_DWORD *)a1 == *(_DWORD *)(v4 + 8) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v4 + 12))
    {
      *(unsigned char *)(v4 + 18) = a3;
      uint64_t v6 = sub_1001E0320((uint64_t)sub_10013278C, (uint64_t)sub_1001328BC, (uint64_t)sub_10013294C, *(unsigned __int16 *)(v4 + 24), 0, a2, (uint64_t)&unk_1007B93A0);
      uint64_t v7 = v6;
      if (!v6 && (a2 & 1) != 0) {
        return 0;
      }
      if (v6)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_L2CAP_Accept failed %!", v16, v17, v18, v19, v20, v21, v22, v7);
          uint64_t v23 = sub_100050B4C(2u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_1001329EC((void *)v4);
      return v7;
    }
  }
  if (sub_100058654())
  {
    uint64_t v7 = 120;
    sub_100056E24((uint64_t)"Could not find connection %!", v8, v9, v10, v11, v12, v13, v14, 120);
    uint64_t v15 = sub_100050B4C(2u);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return v7;
    }
    sub_100744F6C();
  }
  return 120;
}

uint64_t sub_100133000(uint64_t a1)
{
  if (!dword_100A197B8) {
    return 408;
  }
  uint64_t v1 = qword_100A02068 + 8;
  do
  {
    uint64_t v1 = *(void *)v1;
    if (!v1) {
      return 120;
    }
  }
  while (*(_DWORD *)a1 != *(_DWORD *)(v1 + 8) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(v1 + 12));
  int v3 = *(unsigned __int16 *)(v1 + 14);
  if (!*(_WORD *)(v1 + 14)) {
    return 120;
  }
  if (v3 != 1)
  {
LABEL_15:
    uint64_t result = 0;
    *(_WORD *)(v1 + 14) = v3 - 1;
    return result;
  }
  if (!*(_WORD *)(v1 + 80) || (uint64_t result = sub_1001E121C(*(unsigned __int16 *)(v1 + 80), 436), !result))
  {
    uint64_t result = sub_1001E121C(*(unsigned __int16 *)(v1 + 24), 436);
    if (!result)
    {
      LOWORD(v3) = *(_WORD *)(v1 + 14);
      goto LABEL_15;
    }
  }
  return result;
}

uint64_t sub_1001330B0(uint64_t a1, int a2, unsigned int a3, int a4, char *a5, signed int a6)
{
  if (!dword_100A197B8) {
    return 408;
  }
  char v6 = a3;
  uint64_t v7 = 101;
  if (a3 <= 0xF && (a4 - 3) >= 0xFFFFFFFE)
  {
    __int16 v11 = a2;
    uint64_t v12 = qword_100A02068;
    do
    {
      uint64_t v12 = *(void *)v12;
      if (!v12) {
        return 121;
      }
    }
    while (*(unsigned __int16 *)(v12 + 80) != a2);
    uint64_t v13 = qword_100A02068 + 8;
    do
    {
      uint64_t v13 = *(void *)v13;
      if (!v13) {
        return 120;
      }
    }
    while (*(_DWORD *)a1 != *(_DWORD *)(v13 + 8) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(v13 + 12));
    if (*(unsigned char *)(v13 + 16))
    {
      if (*(void *)(v13 + 56)) {
        return 410;
      }
      unsigned int v15 = a6 + 3;
      unsigned int v16 = *(unsigned __int16 *)(v13 + 26);
      if (a6 + 3 <= v16) {
        int v17 = 3;
      }
      else {
        int v17 = 4;
      }
      __int16 v18 = v16 - v17;
      if ((int)(v16 - v17) >= a6) {
        __int16 v18 = a6;
      }
      *(_WORD *)(v13 + 66) = v18;
      uint64_t v19 = sub_10025C1E0(2u);
      if (v19)
      {
        uint64_t v20 = (unsigned __int8 *)v19;
        uint64_t v21 = (char *)sub_100022FE8((unsigned __int16)v17);
        if (v21)
        {
          if (v15 <= v16)
          {
            char *v21 = (16 * v6) | (2 * (a4 != 1));
            uint64_t v29 = 2;
            uint64_t v30 = 1;
            uint64_t v22 = v20;
          }
          else
          {
            uint64_t v22 = v20;
            char v23 = 0;
            if (a6)
            {
              LOWORD(v24) = a6;
              do
              {
                if (v23) {
                  __int16 v25 = -1;
                }
                else {
                  __int16 v25 = -4;
                }
                unsigned __int16 v26 = *(_WORD *)(v13 + 26) + v25;
                BOOL v27 = (unsigned __int16)v24 >= v26;
                int v24 = (unsigned __int16)v24 - v26;
                BOOL v28 = v24 != 0 && v27;
                if (!v27) {
                  LOWORD(v24) = 0;
                }
                ++v23;
              }
              while (v28);
            }
            char *v21 = (16 * v6) | (2 * (a4 != 1)) | 4;
            v21[1] = v23;
            uint64_t v29 = 3;
            uint64_t v30 = 2;
          }
          v21[v29] = v11;
          v21[v30] = HIBYTE(v11);
          uint64_t v31 = v21;
          uint64_t v7 = sub_100022798(v22, v21, (unsigned __int16)v17, 1u);
          if (!v7)
          {
            uint64_t v7 = sub_100022798(v22, a5, *(unsigned __int16 *)(v13 + 66), 2u);
            if (!v7)
            {
              uint64_t v7 = ((uint64_t (*)(void (*)(int, void *, uint64_t, uint64_t), void, void, unsigned __int8 *, void))loc_1001DE1A4)(sub_100133328, *(unsigned __int16 *)(v13 + 24), 0, v22, 0);
              if (!v7)
              {
                *(_WORD *)(v13 + 70) = v11;
                *(unsigned char *)(v13 + 68) = v6;
                *(unsigned char *)(v13 + 69) = a4;
                *(void *)(v13 + 56) = a5;
                *(_WORD *)(v13 + 64) = a6;
                return v7;
              }
            }
          }
          sub_100023010(v31);
        }
        else
        {
          uint64_t v7 = 106;
          uint64_t v22 = v20;
        }
        sub_100023010(v22);
      }
      else
      {
        return 106;
      }
    }
    else
    {
      return 122;
    }
  }
  return v7;
}

void sub_100133328(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = 0;
  sub_10025C53C(a2);
  if (sub_100133910(&v17, a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not find connection\n", v6, v7, v8, v9, v10, v11, v12, v16);
      uint64_t v13 = sub_100050B4C(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v14 = qword_100A02068;
    while (1)
    {
      uint64_t v14 = *(void *)v14;
      if (!v14) {
        break;
      }
      if (*(unsigned __int16 *)(v14 + 80) == *(unsigned __int16 *)(v17 + 70))
      {
        unsigned int v15 = *(void (**)(uint64_t, void, void, void, uint64_t, void, uint64_t))(v14 + 40);
        goto LABEL_10;
      }
    }
    unsigned int v15 = 0;
LABEL_10:
    sub_1001348A0((unsigned __int16 *)(v17 + 24), v15, v17 + 8, a4);
  }
}

uint64_t sub_1001333F0(uint64_t a1, int a2, unsigned int a3, int a4, char *a5, signed int a6)
{
  if (!dword_100A197B8) {
    return 408;
  }
  char v6 = a3;
  uint64_t v7 = 101;
  if (a3 <= 0xF && (a4 - 3) >= 0xFFFFFFFE)
  {
    __int16 v11 = a2;
    uint64_t v12 = qword_100A02068;
    do
    {
      uint64_t v12 = *(void *)v12;
      if (!v12) {
        return 121;
      }
    }
    while (*(unsigned __int16 *)(v12 + 80) != a2);
    uint64_t v13 = qword_100A02068 + 8;
    do
    {
      uint64_t v13 = *(void *)v13;
      if (!v13) {
        return 120;
      }
    }
    while (*(_DWORD *)a1 != *(_DWORD *)(v13 + 8) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(v13 + 12));
    if (!*(_WORD *)(v13 + 80)) {
      return 121;
    }
    if (*(void *)(v13 + 112)) {
      return 410;
    }
    unsigned int v16 = a6 + 3;
    unsigned int v17 = *(unsigned __int16 *)(v13 + 82);
    if (a6 + 3 <= v17) {
      int v18 = 3;
    }
    else {
      int v18 = 4;
    }
    __int16 v19 = v17 - v18;
    if ((int)(v17 - v18) >= a6) {
      __int16 v19 = a6;
    }
    *(_WORD *)(v13 + 122) = v19;
    uint64_t v20 = sub_10025C1E0(2u);
    if (v20)
    {
      uint64_t v21 = (unsigned __int8 *)v20;
      uint64_t v22 = (char *)sub_100022FE8((unsigned __int16)v18);
      if (v22)
      {
        if (v16 <= v17)
        {
          *uint64_t v22 = (16 * v6) | (2 * (a4 != 1));
          uint64_t v30 = 2;
          uint64_t v31 = 1;
          char v23 = v21;
        }
        else
        {
          char v23 = v21;
          char v24 = 0;
          if (a6)
          {
            LOWORD(v25) = a6;
            do
            {
              if (v24) {
                __int16 v26 = -1;
              }
              else {
                __int16 v26 = -4;
              }
              unsigned __int16 v27 = *(_WORD *)(v13 + 82) + v26;
              BOOL v28 = (unsigned __int16)v25 >= v27;
              int v25 = (unsigned __int16)v25 - v27;
              BOOL v29 = v25 != 0 && v28;
              if (!v28) {
                LOWORD(v25) = 0;
              }
              ++v24;
            }
            while (v29);
          }
          *uint64_t v22 = (16 * v6) | (2 * (a4 != 1)) | 4;
          v22[1] = v24;
          uint64_t v30 = 3;
          uint64_t v31 = 2;
        }
        v22[v30] = v11;
        v22[v31] = HIBYTE(v11);
        BOOL v32 = v22;
        uint64_t v7 = sub_100022798(v23, v22, (unsigned __int16)v18, 1u);
        if (!v7)
        {
          uint64_t v7 = sub_100022798(v23, a5, *(unsigned __int16 *)(v13 + 122), 1u);
          if (!v7)
          {
            uint64_t v7 = ((uint64_t (*)(void (*)(int, void *, uint64_t, uint64_t), void, void, unsigned __int8 *, void))loc_1001DE1A4)(sub_100133660, *(unsigned __int16 *)(v13 + 80), 0, v23, 0);
            if (!v7)
            {
              *(_WORD *)(v13 + 126) = v11;
              *(unsigned char *)(v13 + 124) = v6;
              *(unsigned char *)(v13 + 125) = a4;
              *(void *)(v13 + 112) = a5;
              *(_WORD *)(v13 + 120) = a6;
              return v7;
            }
          }
        }
        sub_100023010(v32);
      }
      else
      {
        uint64_t v7 = 106;
        char v23 = v21;
      }
      sub_100023010(v23);
    }
    else
    {
      return 106;
    }
  }
  return v7;
}

void sub_100133660(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = 0;
  sub_10025C53C(a2);
  if (sub_100133910(&v17, a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not find connection\n", v6, v7, v8, v9, v10, v11, v12, v16);
      uint64_t v13 = sub_100050B4C(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v14 = qword_100A02068;
    while (1)
    {
      uint64_t v14 = *(void *)v14;
      if (!v14) {
        break;
      }
      if (*(unsigned __int16 *)(v14 + 80) == *(unsigned __int16 *)(v17 + 126))
      {
        uint64_t v15 = *(void *)(v14 + 72);
        goto LABEL_10;
      }
    }
    uint64_t v15 = 0;
LABEL_10:
    sub_1001348A0(v17 + 80, v15, v17 + 8, a4);
  }
}

uint64_t sub_100133728(uint64_t a1, _OWORD *a2, uint64_t a3, __int16 *a4)
{
  long long v6 = a2[1];
  v31[0] = *a2;
  v31[1] = v6;
  uint64_t v7 = sub_1001DEF88(23, (uint64_t)v31, a1, (uint64_t)sub_10013278C, (uint64_t)sub_1001328BC, (uint64_t)sub_10013294C, a4, (uint64_t)&unk_1007B93A0);
  if (v7)
  {
    uint64_t v8 = v7;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_AVCTP_createAVRCPChannels error creating A2DP signaling", v9, v10, v11, v12, v13, v14, v15, v30);
      uint64_t v16 = sub_100050B4C(2u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(void *)&v31[0] = 0;
    uint64_t v17 = qword_100A02068;
    while (1)
    {
      uint64_t v17 = *(void *)v17;
      if (!v17) {
        break;
      }
      if (*(_WORD *)(v17 + 80) == 4366)
      {
        if (sub_1001326F0(v31)) {
          return 2902;
        }
        uint64_t v8 = 0;
        uint64_t v26 = *(void *)&v31[0];
        __int16 v27 = *(_WORD *)(a1 + 4);
        *(_DWORD *)(*(void *)&v31[0] + 8) = *(_DWORD *)a1;
        *(_WORD *)(v26 + 12) = v27;
        __int16 v28 = *a4;
        *(_WORD *)(v26 + 24) = *a4;
        *(_WORD *)(v26 + 14) = 1;
        *(void *)(v26 + 56) = 0;
        *(_DWORD *)(v26 + 64) = 0;
        *(unsigned char *)(v26 + 72) = 0;
        *(_WORD *)(v26 + 16) = 1;
        *(_WORD *)(v17 + 82) = v28;
        return v8;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! (%d)", v18, v19, v20, v21, v22, v23, v24, 120);
      int v25 = sub_100050B4C(2u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 114;
  }
  return v8;
}

uint64_t sub_1001338C4(int a1, __int16 a2, __int16 a3)
{
  uint64_t v7 = 0;
  uint64_t result = sub_100133910(&v7, a1);
  if (!result)
  {
    uint64_t v6 = v7;
    *(_WORD *)(v7 + 26) = a3;
    *(_WORD *)(v6 + 28) = a2;
  }
  return result;
}

uint64_t sub_100133910(uint64_t *a1, int a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (qword_100A02068)
  {
    uint64_t v4 = qword_100A02068 + 8;
    while (1)
    {
      uint64_t v4 = *(void *)v4;
      if (!v4) {
        break;
      }
      if (*(unsigned __int16 *)(v4 + 24) == a2 || *(unsigned __int16 *)(v4 + 80) == a2)
      {
        uint64_t result = 0;
        *a1 = v4;
        return result;
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received AVCTP message after profile has been unregistered", v6, v7, v8, v9, v10, v11, v12, v14);
    uint64_t v13 = sub_100050B4C(2u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 120;
}

uint64_t sub_1001339BC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  ptr = 0;
  uint64_t v16 = 0;
  uint64_t v5 = sub_100197A30(a1);
  if (!v5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_AVCTP_cleanFastConnectAVRCP NULL Handle", v6, v7, v8, v9, v10, v11, v12, (uint64_t)ptr);
      uint64_t v13 = sub_100050B4C(2u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  if (!sub_100133910((uint64_t *)&ptr, a2) && ptr) {
    sub_1001329EC(ptr);
  }
  if (a3)
  {
    if (!sub_1001DD56C(a3, &v16))
    {
      if (v16)
      {
        sub_1001DEC18(v16);
        if (v5) {
          sub_100182088(v5);
        }
      }
    }
  }
  if (a2)
  {
    if (!sub_1001DD56C(a2, &v16))
    {
      if (v16)
      {
        sub_1001DEC18(v16);
        if (v5) {
          sub_100182088(v5);
        }
      }
    }
  }
  return 0;
}

uint64_t sub_100133AB8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v48 = 0;
  uint64_t v5 = qword_100A02068 + 8;
  do
  {
    uint64_t v5 = *(void *)v5;
    if (!v5)
    {
      LOBYTE(v17) = 0;
      goto LABEL_23;
    }
  }
  while (*(_DWORD *)a2 != *(_DWORD *)(v5 + 8) || *(unsigned __int16 *)(a2 + 4) != *(unsigned __int16 *)(v5 + 12));
  uint64_t v48 = v5;
  int v7 = *(unsigned __int8 *)(v5 + 16);
  int v8 = sub_100058654();
  if (v7)
  {
    if (v8)
    {
      sub_100056E24((uint64_t)"AVCTP connection already in progress with %:", v9, v10, v11, v12, v13, v14, v15, a2);
      uint64_t v16 = sub_100050B4C(2u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    LOBYTE(v5) = 0;
    LOBYTE(v17) = 1;
  }
  else
  {
    if (v8)
    {
      sub_100056E24((uint64_t)"Rejecting previous pending attempt for incoming AVCTP connection", v9, v10, v11, v12, v13, v14, v15, v47);
      uint64_t v18 = sub_100050B4C(2u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    if (*(unsigned char *)(v5 + 17)) {
      sub_1001E0320(0, 0, 0, *(unsigned __int16 *)(v5 + 24), 0, 0, 0);
    }
    else {
      sub_1001E121C(*(unsigned __int16 *)(v5 + 24), 436);
    }
    sub_1001329EC((void *)v5);
    uint64_t v17 = *(void *)qword_100A02068;
    if (*(void *)qword_100A02068)
    {
      do
      {
        uint64_t v19 = *(void *)v17;
        *(_WORD *)(v17 + 82) = 0;
        uint64_t v17 = v19;
      }
      while (v19);
    }
    LOBYTE(v5) = 1;
  }
LABEL_23:
  if (!*(void *)qword_100A02068)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No AVCTP profiles registered", v29, v30, v31, v32, v33, v34, v35, v47);
      uint64_t v36 = sub_100050B4C(2u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_31;
  }
  if ((v17 & 1) != 0 || (uint64_t result = sub_1001326F0(&v48), result))
  {
LABEL_31:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Rejecting incoming AVCTP connection request", v37, v38, v39, v40, v41, v42, v43, v47);
      uint64_t v44 = sub_100050B4C(2u);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v24 = 0;
    int v25 = 0;
    uint64_t v26 = 0;
    unsigned int v27 = a3;
    int v28 = 0;
    uint64_t v23 = 0;
    return sub_1001E0320((uint64_t)v24, (uint64_t)v25, (uint64_t)v26, v27, 0, v28, (uint64_t)v23);
  }
  uint64_t v21 = v48;
  __int16 v22 = *(_WORD *)(a2 + 4);
  *(_DWORD *)(v48 + 8) = *(_DWORD *)a2;
  *(_WORD *)(v21 + 12) = v22;
  *(_WORD *)(v21 + 24) = a3;
  *(_DWORD *)(v21 + 14) = 16777217;
  *(void *)(v21 + 56) = 0;
  *(_DWORD *)(v21 + 64) = 0;
  *(unsigned char *)(v21 + 72) = 0;
  if (v5)
  {
    uint64_t v23 = &unk_1007B93A0;
    uint64_t v24 = sub_10013278C;
    int v25 = sub_1001328BC;
    uint64_t v26 = sub_10013294C;
    unsigned int v27 = a3;
    int v28 = 1;
    return sub_1001E0320((uint64_t)v24, (uint64_t)v25, (uint64_t)v26, v27, 0, v28, (uint64_t)v23);
  }
  uint64_t v45 = *(uint64_t ***)qword_100A02068;
  if (*(void *)qword_100A02068)
  {
    do
    {
      uint64_t v46 = *v45;
      uint64_t result = ((uint64_t (*)(uint64_t))v45[1])(a2);
      uint64_t v45 = (uint64_t **)v46;
    }
    while (v46);
  }
  return result;
}

void sub_100133D7C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = qword_100A02068 + 8;
  while (1)
  {
    uint64_t v4 = *(void *)v4;
    if (!v4) {
      break;
    }
    if (*(_DWORD *)a2 == *(_DWORD *)(v4 + 8) && *(unsigned __int16 *)(a2 + 4) == *(unsigned __int16 *)(v4 + 12))
    {
      BOOL v6 = *(unsigned char *)(v4 + 18) != 0;
      goto LABEL_13;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Avctp Signalling channel does not exist, reject connection", v7, v8, v9, v10, v11, v12, v13, v41);
    uint64_t v14 = sub_100050B4C(2u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  BOOL v6 = 0;
LABEL_13:
  if (*(void *)qword_100A02068)
  {
    if (v6)
    {
      uint64_t v15 = sub_1001E0320((uint64_t)sub_100132BE0, (uint64_t)sub_100132D0C, (uint64_t)sub_100132DE4, a3, (uint64_t)&unk_10099BC08, 1, (uint64_t)&unk_1007B93A0);
      if (v15)
      {
        uint64_t v16 = v15;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Browsing rejected due to error %!", v17, v18, v19, v20, v21, v22, v23, v16);
          uint64_t v24 = sub_100050B4C(2u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100748B78(v24);
          }
        }
      }
      else
      {
        *(_WORD *)(v4 + 80) = a3;
        *(unsigned char *)(v4 + 128) = 1;
      }
      return;
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"No AVCTP profiles registered", v25, v26, v27, v28, v29, v30, v31, v41);
    uint64_t v32 = sub_100050B4C(2u);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Rejecting incoming AVCTP connection request for browsing channel", v33, v34, v35, v36, v37, v38, v39, v41);
    uint64_t v40 = sub_100050B4C(2u);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_1001E0320(0, 0, 0, a3, 0, 0, 0);
}

void sub_100133F88(unsigned __int16 *a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4)
{
  if (!a3)
  {
    long long v203 = "buf";
    goto LABEL_126;
  }
  if (!a4)
  {
    long long v203 = "(length) > 0";
LABEL_126:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avctp/avctp.c", 318, v203);
  }
  unsigned int v8 = *a3;
  int v9 = (v8 >> 2) & 3;
  unsigned int v10 = 1;
  if ((v8 & 2) != 0) {
    unsigned __int8 v11 = 2;
  }
  else {
    unsigned __int8 v11 = 1;
  }
  if (v9)
  {
    if (v9 == 1)
    {
      if (a4 < 2)
      {
        if (*((unsigned char *)a1 + 23))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avctp/avctp.c");
          goto LABEL_30;
        }
      }
      else
      {
        int v12 = a3[1];
        *((unsigned char *)a1 + 23) = v12;
        if (v12)
        {
          unsigned int v10 = 2;
          goto LABEL_11;
        }
      }
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Invalid number of expected packets (0)", v34, v35, v36, v37, v38, v39, v40, v204);
      uint64_t v41 = sub_100050B4C(2u);
      if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_83:
      sub_100744F6C();
      return;
    }
    LOWORD(v13) = 0;
    uint64_t v14 = 0;
LABEL_17:
    unsigned int v15 = v8 >> 4;
    switch((v8 >> 2) & 3)
    {
      case 1u:
        a1[23] = v13;
        if (*((void *)a1 + 1))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Unexpected start packet. Discarding previous buffer.\n", v46, v47, v48, v49, v50, v51, v52, v204);
            __int16 v53 = sub_100050B4C(2u);
            if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          unsigned int v54 = (void *)*((void *)a1 + 1);
          if (v54)
          {
            sub_100023010(v54);
            *((void *)a1 + 1) = 0;
          }
        }
        unsigned int v55 = a1[2];
        unsigned int v56 = *((unsigned __int8 *)a1 + 23);
        *((_DWORD *)a1 + 4) = v56 * v55;
        unsigned int v57 = sub_100022FE8(v56 * (unint64_t)v55);
        *((void *)a1 + 1) = v57;
        if (!v57)
        {
          if (!sub_100058654()) {
            goto LABEL_96;
          }
          sub_100056E24((uint64_t)"Out of memory. Terminating connection.", v94, v95, v96, v97, v98, v99, v100, v204);
          int v101 = sub_100050B4C(2u);
          if (!os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
            goto LABEL_96;
          }
          goto LABEL_95;
        }
        *((unsigned char *)a1 + 22) = v15;
        *((unsigned char *)a1 + 24) = 1;
        if (a4 >= 4 && (v58 = a4 - 4, v59 = *((_DWORD *)a1 + 4), v60 = v59 >= v58, int v61 = v59 - v58, v60))
        {
          *((_DWORD *)a1 + 4) = v61;
          memmove(v57, a3 + 4, v58);
          a1[10] = v58;
          if (!*((void *)a1 + 1)) {
            goto LABEL_101;
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Copy would overflow recv buffer! Discarding data.", v62, v63, v64, v65, v66, v67, v68, v204);
          uint64_t v69 = sub_100050B4C(2u);
          if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
            goto LABEL_83;
          }
        }
        return;
      case 2u:
        uint64_t v70 = *((void *)a1 + 1);
        if (v70)
        {
          unsigned __int8 v71 = *((unsigned char *)a1 + 24) + 1;
          *((unsigned char *)a1 + 24) = v71;
          if (*((unsigned __int8 *)a1 + 23) == v71)
          {
            if (!sub_100058654()) {
              goto LABEL_121;
            }
            sub_100056E24((uint64_t)"Too many continue packets. Discarding data.", v72, v73, v74, v75, v76, v77, v78, v204);
            unsigned int v79 = sub_100050B4C(2u);
            if (!os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
              goto LABEL_121;
            }
            goto LABEL_118;
          }
          if (*((unsigned __int8 *)a1 + 22) != v15)
          {
            if (!sub_100058654()) {
              goto LABEL_121;
            }
            sub_100056E24((uint64_t)"Received CONTINUE fragment with mismatched transaction number. Discarding data.", v177, v178, v179, v180, v181, v182, v183, v204);
            uint64_t v184 = sub_100050B4C(2u);
            if (!os_log_type_enabled(v184, OS_LOG_TYPE_ERROR)) {
              goto LABEL_121;
            }
            goto LABEL_118;
          }
          size_t v118 = a4 - 1;
          unsigned int v119 = *((_DWORD *)a1 + 4);
          BOOL v60 = v119 >= v118;
          int v120 = v119 - v118;
          if (v60)
          {
            *((_DWORD *)a1 + 4) = v120;
            memmove((void *)(v70 + a1[10]), a3 + 1, v118);
            a1[10] += v118;
          }
          else if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Copy would overflow recv buffer! Discarding data.", v121, v122, v123, v124, v125, v126, v127, v204);
            uint64_t v128 = sub_100050B4C(2u);
            if (os_log_type_enabled(v128, OS_LOG_TYPE_ERROR)) {
              goto LABEL_83;
            }
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unexpected continue packet. Discarding data.", v102, v103, v104, v105, v106, v107, v108, v204);
          uint64_t v109 = sub_100050B4C(2u);
          if (os_log_type_enabled(v109, OS_LOG_TYPE_ERROR)) {
            goto LABEL_83;
          }
        }
        return;
      case 3u:
        uint64_t v80 = *((void *)a1 + 1);
        if (v80)
        {
          unsigned __int8 v81 = *((unsigned char *)a1 + 24) + 1;
          *((unsigned char *)a1 + 24) = v81;
          if (*((unsigned __int8 *)a1 + 23) == v81)
          {
            if (*((unsigned __int8 *)a1 + 22) == v15)
            {
              uint64_t v82 = qword_100A02068;
              while (1)
              {
                uint64_t v82 = *(void *)v82;
                if (!v82) {
                  break;
                }
                if (*(unsigned __int16 *)(v82 + 80) == a1[23])
                {
                  size_t v83 = a4 - 1;
                  unsigned int v84 = *((_DWORD *)a1 + 4);
                  BOOL v60 = v84 >= v83;
                  int v85 = v84 - v83;
                  if (!v60)
                  {
                    if (sub_100058654())
                    {
                      sub_100056E24((uint64_t)"Copy would overflow recv buffer! Discarding data.", v86, v87, v88, v89, v90, v91, v92, v204);
                      uint64_t v93 = sub_100050B4C(2u);
                      if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
                        goto LABEL_83;
                      }
                    }
                    return;
                  }
                  *((_DWORD *)a1 + 4) = v85;
                  memmove((void *)(v80 + a1[10]), a3 + 1, v83);
                  if (*((unsigned char *)a1 + 48))
                  {
                    v193 = *(void (**)(uint64_t, void, void, void, void, void))(v82 + 64);
                    if (!v193)
                    {
                      if (sub_100058654())
                      {
                        sub_100056E24((uint64_t)"No browsing callback defined !", v194, v195, v196, v197, v198, v199, v200, v204);
                        v201 = sub_100050B4C(2u);
                        if (os_log_type_enabled(v201, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_118;
                        }
                      }
LABEL_121:
                      long long v202 = (void *)*((void *)a1 + 1);
                      if (v202)
                      {
                        sub_100023010(v202);
                        *((void *)a1 + 1) = 0;
                      }
                      return;
                    }
                  }
                  else
                  {
                    v193 = *(void (**)(uint64_t, void, void, void, void, void))(v82 + 32);
                  }
                  v193(a2, v8 >> 4, v11, v8 & 1, *((void *)a1 + 1), (unsigned __int16)(a4 + a1[10] - 1));
                  goto LABEL_121;
                }
              }
              if (!sub_100058654()) {
                goto LABEL_121;
              }
              sub_100056E24((uint64_t)"Profile %d not found\n", v185, v186, v187, v188, v189, v190, v191, a1[23]);
              uint64_t v192 = sub_100050B4C(2u);
              if (!os_log_type_enabled(v192, OS_LOG_TYPE_ERROR)) {
                goto LABEL_121;
              }
            }
            else
            {
              if (!sub_100058654()) {
                goto LABEL_121;
              }
              sub_100056E24((uint64_t)"Received END fragment with mismatched transaction number. Discarding data.", v169, v170, v171, v172, v173, v174, v175, v204);
              uint64_t v176 = sub_100050B4C(2u);
              if (!os_log_type_enabled(v176, OS_LOG_TYPE_ERROR)) {
                goto LABEL_121;
              }
            }
          }
          else
          {
            if (!sub_100058654()) {
              goto LABEL_121;
            }
            sub_100056E24((uint64_t)"Wrong number of fragments. Discarding data.", v129, v130, v131, v132, v133, v134, v135, v204);
            uint64_t v136 = sub_100050B4C(2u);
            if (!os_log_type_enabled(v136, OS_LOG_TYPE_ERROR)) {
              goto LABEL_121;
            }
          }
        }
        else
        {
          if (!sub_100058654()) {
            goto LABEL_121;
          }
          sub_100056E24((uint64_t)"Unexpected END fragment. Discarding data.", v110, v111, v112, v113, v114, v115, v116, v204);
          uint64_t v117 = sub_100050B4C(2u);
          if (!os_log_type_enabled(v117, OS_LOG_TYPE_ERROR)) {
            goto LABEL_121;
          }
        }
LABEL_118:
        sub_100744F6C();
        goto LABEL_121;
      default:
        if (*((void *)a1 + 1))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Discarding previous incomplete packet.", v16, v17, v18, v19, v20, v21, v22, v204);
            uint64_t v23 = sub_100050B4C(2u);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          uint64_t v24 = (void *)*((void *)a1 + 1);
          if (v24)
          {
            sub_100023010(v24);
            *((void *)a1 + 1) = 0;
          }
        }
        if (*((unsigned char *)a1 + 48))
        {
          uint64_t v25 = *(void (**)(uint64_t, void, void, void, unsigned __int8 *, void))(v14 + 64);
          if (v25)
          {
            if (a4 >= 3)
            {
              v25(a2, v8 >> 4, v11, v8 & 1, a3 + 3, (unsigned __int16)(a4 - 3));
              goto LABEL_100;
            }
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid Data Length", v145, v146, v147, v148, v149, v150, v151, v204);
              uint64_t v152 = sub_100050B4C(2u);
              if (os_log_type_enabled(v152, OS_LOG_TYPE_ERROR)) {
                goto LABEL_99;
              }
            }
          }
          else if (sub_100058654())
          {
            sub_100056E24((uint64_t)"No browsing callback defined !", v137, v138, v139, v140, v141, v142, v143, v204);
            uint64_t v144 = sub_100050B4C(2u);
            if (os_log_type_enabled(v144, OS_LOG_TYPE_ERROR)) {
LABEL_99:
            }
              sub_100744F6C();
          }
        }
        else
        {
          if (a4 >= 3)
          {
            (*(void (**)(uint64_t, void, void, void, unsigned __int8 *, void))(v14 + 32))(a2, v8 >> 4, v11, v8 & 1, a3 + 3, (unsigned __int16)(a4 - 3));
            goto LABEL_100;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid Data Length", v161, v162, v163, v164, v165, v166, v167, v204);
            uint64_t v168 = sub_100050B4C(2u);
            if (os_log_type_enabled(v168, OS_LOG_TYPE_ERROR)) {
              goto LABEL_99;
            }
          }
        }
LABEL_100:
        if (*((void *)a1 + 1)) {
LABEL_101:
        }
          sub_10025B8C0();
        return;
    }
  }
LABEL_11:
  if ((int)(a4 - v10) <= 1)
  {
LABEL_30:
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packet received", v26, v27, v28, v29, v30, v31, v32, v204);
    uint64_t v33 = sub_100050B4C(2u);
    if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_83;
  }
  unsigned int v13 = __rev16(*(unsigned __int16 *)&a3[v10]);
  uint64_t v14 = qword_100A02068;
  while (1)
  {
    uint64_t v14 = *(void *)v14;
    if (!v14) {
      break;
    }
    if (*(unsigned __int16 *)(v14 + 80) == v13) {
      goto LABEL_17;
    }
  }
  if ((*a3 & 2) == 0)
  {
    uint64_t v42 = (char *)sub_100022FE8(3uLL);
    if (v42)
    {
      unsigned __int8 v43 = a3[2];
      __int16 v44 = *(_WORD *)a3;
      *(_WORD *)uint64_t v42 = *(_WORD *)a3;
      v42[2] = v43;
      *uint64_t v42 = v44 | 3;
      uint64_t v45 = *a1;
      sub_1001DE4D0((uint64_t)sub_100134898, v45, 0, v42, 3uLL);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Out of memory\n", v153, v154, v155, v156, v157, v158, v159, v204);
        uint64_t v160 = sub_100050B4C(2u);
        if (os_log_type_enabled(v160, OS_LOG_TYPE_ERROR)) {
LABEL_95:
        }
          sub_100744F6C();
      }
LABEL_96:
      sub_1001E121C(*a1, 436);
    }
  }
}

void sub_100134898(int a1, void *ptr)
{
}

void sub_1001348A0(unsigned __int16 *a1, void (*a2)(uint64_t, void, void, void, uint64_t, void, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a4)
  {
    int v8 = a1[20];
    int v9 = a1[21];
    uint64_t v4 = (v8 - v9);
    if (v8 != v9)
    {
      unsigned int v10 = a1[1];
      if (v10 <= (unsigned __int16)(v8 - v9)) {
        unsigned __int16 v11 = v10 - 1;
      }
      else {
        unsigned __int16 v11 = v8 - v9;
      }
      int v12 = sub_10025C1E0(2u);
      if (v12)
      {
        unsigned int v13 = (unsigned __int8 *)v12;
        uint64_t v14 = (char *)sub_100022FE8(1uLL);
        if (v14)
        {
          if (v10 <= (unsigned __int16)v4) {
            char v15 = 8;
          }
          else {
            char v15 = 12;
          }
          *uint64_t v14 = v15 | (16 * *((unsigned char *)a1 + 44)) | (2 * (*((unsigned char *)a1 + 45) != 1));
          uint64_t v4 = sub_100022798(v13, v14, 1uLL, 1u);
          if (!v4)
          {
            uint64_t v4 = sub_100022798(v13, (char *)(*((void *)a1 + 4) + a1[21]), v11, 2u);
            if (!v4)
            {
              uint64_t v16 = *((unsigned char *)a1 + 48)
                  ? sub_100133660
                  : (void (*)(int, void *, uint64_t, uint64_t))sub_100133328;
              uint64_t v4 = ((uint64_t (*)(void (*)(int, void *, uint64_t, uint64_t), void, void, unsigned __int8 *, void))loc_1001DE1A4)(v16, *a1, 0, v13, 0);
              if (!v4)
              {
                a1[21] += v11;
                return;
              }
            }
          }
        }
        else
        {
          uint64_t v4 = 106;
        }
        sub_10025C53C(v13);
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not allocate mbuf\n", v17, v18, v19, v20, v21, v22, v23, v34);
          uint64_t v24 = sub_100050B4C(2u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t v4 = 106;
      }
    }
  }
  uint64_t v25 = *((void *)a1 + 4);
  *((void *)a1 + 4) = 0;
  if (a2)
  {
    a2(a3, a1[23], *((unsigned __int8 *)a1 + 44), *((unsigned __int8 *)a1 + 45), v25, a1[20], v4);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find profile %d\n", v26, v27, v28, v29, v30, v31, v32, a1[23]);
    uint64_t v33 = sub_100050B4C(2u);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_100134AB4(void **a1, unsigned int a2)
{
  int v3 = (void **)*a1;
  if (v3)
  {
    if (!a2) {
      goto LABEL_13;
    }
    uint64_t v4 = v3 + 1;
    uint64_t v5 = a2;
    do
    {
      unsigned int v6 = *((unsigned __int8 *)v4 - 8);
      BOOL v7 = v6 > 8;
      int v8 = (1 << v6) & 0x10E;
      if (v7 || v8 == 0)
      {
        if (*v4)
        {
          sub_100023010(*v4);
          *uint64_t v4 = 0;
        }
      }
      v4 += 2;
      --v5;
    }
    while (v5);
    int v3 = (void **)*a1;
    if (*a1)
    {
LABEL_13:
      sub_100023010(v3);
      *a1 = 0;
    }
  }
}

uint64_t sub_100134B4C(uint64_t a1, unsigned int a2, void **a3, unsigned char *a4)
{
  *a4 = 0;
  int v8 = sub_100022FE8(16 * a2);
  *a3 = v8;
  if (v8)
  {
    if (a2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = 16 * a2;
      do
      {
        unsigned __int16 v11 = *a3;
        ++*a4;
        v11[v9] = *(unsigned char *)(a1 + v9);
        *(_OWORD *)&v11[v9] = *(_OWORD *)(a1 + v9);
        if (*(unsigned char *)(a1 + v9 + 3))
        {
          int v12 = sub_100022FE8(*(unsigned __int8 *)(a1 + v9 + 3));
          *(void *)&v11[v9 + 8] = v12;
          if (!v12) {
            goto LABEL_9;
          }
          memmove(v12, *(const void **)(a1 + v9 + 8), *(unsigned __int8 *)(a1 + v9 + 3));
        }
        v9 += 16;
      }
      while (v10 != v9);
    }
    return 0;
  }
  else
  {
LABEL_9:
    sub_100134AB4(a3, *a4);
    *a4 = 0;
    return 106;
  }
}

uint64_t sub_100134C28()
{
  if (qword_100A02070) {
    return *(unsigned __int8 *)(qword_100A02070 + 102);
  }
  else {
    return 0;
  }
}

BOOL sub_100134C44()
{
  return qword_100A02070 && *(unsigned __int8 *)(qword_100A02070 + 101) != *(unsigned __int8 *)(qword_100A02070 + 102);
}

uint64_t sub_100134C6C(int a1, _WORD *a2)
{
  if (!dword_100A197BC) {
    return 408;
  }
  uint64_t v2 = *(unsigned __int8 *)(qword_100A02070 + 98);
  if (!*(unsigned char *)(qword_100A02070 + 98)) {
    return 120;
  }
  for (char i = *(_WORD **)(qword_100A02070 + 16); !i[19] || (unsigned __int16)i[19] != a1; i += 32)
  {
    if (!--v2) {
      return 120;
    }
  }
  uint64_t result = 0;
  *a2 = *i;
  return result;
}

uint64_t sub_100134CCC(uint64_t a1, _WORD *a2)
{
  if (!dword_100A197BC) {
    return 408;
  }
  uint64_t v2 = *(unsigned __int8 *)(qword_100A02070 + 98);
  if (!*(unsigned char *)(qword_100A02070 + 98)) {
    return 120;
  }
  for (uint64_t i = *(void *)(qword_100A02070 + 16) + 28; ; i += 64)
  {
    if (*(_WORD *)(i + 10))
    {
      if (*(_DWORD *)i == *(_DWORD *)a1 && *(unsigned __int16 *)(i + 4) == *(unsigned __int16 *)(a1 + 4)) {
        break;
      }
    }
    if (!--v2) {
      return 120;
    }
  }
  uint64_t result = 0;
  *a2 = *(_WORD *)(i + 10);
  return result;
}

uint64_t sub_100134D40(uint64_t a1, _WORD *a2)
{
  if (!dword_100A197BC) {
    return 408;
  }
  uint64_t v2 = *(unsigned __int8 *)(qword_100A02070 + 98);
  if (!*(unsigned char *)(qword_100A02070 + 98)) {
    return 120;
  }
  for (uint64_t i = *(void *)(qword_100A02070 + 16) + 28; ; i += 64)
  {
    if (*(_WORD *)(i + 10))
    {
      if (*(_DWORD *)i == *(_DWORD *)a1 && *(unsigned __int16 *)(i + 4) == *(unsigned __int16 *)(a1 + 4)) {
        break;
      }
    }
    if (!--v2) {
      return 120;
    }
  }
  uint64_t result = 0;
  *a2 = *(_WORD *)(i - 28);
  return result;
}

uint64_t sub_100134DB8(int a1, _WORD *a2)
{
  if (!dword_100A197BC) {
    return 408;
  }
  if (a1)
  {
    __int16 v2 = *(_WORD *)(*(void *)(qword_100A02070 + 16) + ((unint64_t)(a1 - 1) << 6) + 38);
    if (v2)
    {
      uint64_t result = 0;
      *a2 = v2;
      return result;
    }
    if (!sub_100058654()) {
      return 120;
    }
    sub_100056E24((uint64_t)"CID from A2DP Handle not found", v12, v13, v14, v15, v16, v17, v18, v20);
    uint64_t v19 = sub_100050B4C(3u);
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      return 120;
    }
  }
  else
  {
    if (!sub_100058654()) {
      return 120;
    }
    sub_100056E24((uint64_t)"A2DP handle was 0", v4, v5, v6, v7, v8, v9, v10, v20);
    unsigned __int16 v11 = sub_100050B4C(3u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      return 120;
    }
  }
  sub_100744F6C();
  return 120;
}

uint64_t sub_100134E9C(__int16 a1, _WORD *a2)
{
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v2 = *(void *)(qword_100A02070 + 8);
  if (!v2) {
    return 120;
  }
  uint64_t v3 = *(unsigned __int8 *)(v2 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v3 == 255) {
    return 120;
  }
  uint64_t v4 = *(void *)(qword_100A02070 + 16);
  if (!v4) {
    return 120;
  }
  uint64_t result = 0;
  *a2 = *(_WORD *)(v4 + (v3 << 6));
  return result;
}

uint64_t sub_100134F10(uint64_t a1, _WORD *a2)
{
  if (!dword_100A197BC) {
    return 408;
  }
  __int16 v13 = 0;
  uint64_t result = sub_100134D40(a1, &v13);
  if (result)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"MediaCID from BT Address was not found", v4, v5, v6, v7, v8, v9, v10, v12);
      unsigned __int16 v11 = sub_100050B4C(3u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 120;
  }
  else
  {
    *a2 = *(_WORD *)(*(void *)(qword_100A02070 + 8) + 144 * (unsigned __int16)(v13 - 1) + 128);
  }
  return result;
}

uint64_t sub_100134FD0(int a1)
{
  if (!dword_100A197BC) {
    return 0;
  }
  if (!qword_100A02070 || !*(unsigned char *)(qword_100A02070 + 98)) {
    goto LABEL_9;
  }
  uint64_t v1 = 0;
  uint64_t v2 = *(void *)(qword_100A02070 + 16);
  while (*(unsigned __int16 *)(v2 + 38) != a1)
  {
    ++v1;
    v2 += 64;
    if (*(unsigned __int8 *)(qword_100A02070 + 98) == v1) {
      goto LABEL_9;
    }
  }
  if (v1 == 255)
  {
LABEL_9:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No signal", v3, v4, v5, v6, v7, v8, v9, v12);
      uint64_t v10 = sub_100050B4C(3u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  return v2;
}

uint64_t sub_100135088(void *a1, char a2, _OWORD *a3, uint64_t a4)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Register(c=0x%x,sendRsp=%B,pSignalingChannel=0x%x,pMediaChannel=0x%x)", v8, v9, v10, v11, v12, v13, v14, (uint64_t)a1);
    uint64_t v15 = sub_100050B4C(3u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v32 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (dword_100A197BC)
  {
    if (a1) {
      goto LABEL_6;
    }
LABEL_59:
    sub_10025B8C0();
    return 101;
  }
  uint64_t v20 = sub_10025B218(3u);
  if (!v20) {
    goto LABEL_59;
  }
  uint64_t v21 = (unsigned __int8 *)v20;
  qword_100A02070 = (uint64_t)sub_10010CE48(0x68uLL);
  if (!qword_100A02070) {
    return 106;
  }
  uint64_t v22 = (char *)sub_10010CE48(40 * *v21);
  uint64_t v23 = qword_100A02070;
  *(void *)qword_100A02070 = v22;
  if (!v22) {
    goto LABEL_81;
  }
  if (*v21)
  {
    unsigned int v24 = 0;
    do
    {
      sub_100135F64((uint64_t)v22);
      v22[25] = 0;
      ++v24;
      v22 += 40;
    }
    while (v24 < *v21);
  }
  uint64_t v25 = (char *)sub_10010CE48(144 * v21[1]);
  uint64_t v23 = qword_100A02070;
  *(void *)(qword_100A02070 + 8) = v25;
  if (!v25) {
    goto LABEL_81;
  }
  if (v21[1])
  {
    unsigned int v26 = 0;
    uint64_t v27 = v25 + 137;
    do
    {
      *(v27 - 5) = 0;
      *(_DWORD *)(v27 - 137) = 0;
      *(_WORD *)(v27 - 9) = 0;
      sub_100114F70(0);
      *uint64_t v27 = -1;
      *((_DWORD *)v27 - 1) = -65281;
      ++v26;
      v27 += 144;
    }
    while (v26 < v21[1]);
  }
  uint64_t v28 = sub_10010CE48((unint64_t)v21[2] << 6);
  uint64_t v23 = qword_100A02070;
  *(void *)(qword_100A02070 + 16) = v28;
  if (!v28)
  {
LABEL_81:
    if (*(void *)(v23 + 8))
    {
      sub_100023010(*(void **)(v23 + 8));
      uint64_t v23 = qword_100A02070;
      *(void *)(qword_100A02070 + 8) = 0;
    }
    if (*(void *)v23)
    {
      sub_100023010(*(void **)v23);
      uint64_t v23 = qword_100A02070;
      *(void *)qword_100A02070 = 0;
    }
    sub_100023010((void *)v23);
    qword_100A02070 = 0;
    return 106;
  }
  *(unsigned char *)(v23 + 96) = *v21;
  *(_WORD *)(v23 + 97) = *(_WORD *)(v21 + 1);
  *(unsigned char *)(v23 + 100) = 1;
  dword_100A197BC = 1;
  if (!a1) {
    goto LABEL_59;
  }
LABEL_6:
  if (!*a1)
  {
    sub_10025B8C0();
    if (!*a1) {
      return 101;
    }
  }
  if (!a1[1])
  {
    sub_10025B8C0();
    if (!a1[1]) {
      return 101;
    }
  }
  if (!a1[2])
  {
    sub_10025B8C0();
    if (!a1[2]) {
      return 101;
    }
  }
  if (!a1[3])
  {
    sub_10025B8C0();
    if (!a1[3]) {
      return 101;
    }
  }
  if (!a1[4])
  {
    sub_10025B8C0();
    if (!a1[4]) {
      return 101;
    }
  }
  if (!a1[5])
  {
    sub_10025B8C0();
    if (!a1[5]) {
      return 101;
    }
  }
  if (!a1[6])
  {
    sub_10025B8C0();
    if (!a1[6]) {
      return 101;
    }
  }
  if (!a1[7])
  {
    sub_10025B8C0();
    if (!a1[7]) {
      return 101;
    }
  }
  if (!a1[8])
  {
    sub_10025B8C0();
    if (!a1[8]) {
      return 101;
    }
  }
  if (!a1[9])
  {
    sub_10025B8C0();
    if (!a1[9]) {
      return 101;
    }
  }
  if (!a1[10])
  {
    sub_10025B8C0();
    if (!a1[10]) {
      return 101;
    }
  }
  if (!a1[11])
  {
    sub_10025B8C0();
    if (!a1[11]) {
      return 101;
    }
  }
  if (!a1[12])
  {
    sub_10025B8C0();
    if (!a1[12]) {
      return 101;
    }
  }
  if (!a1[13])
  {
    sub_10025B8C0();
    if (!a1[13]) {
      return 101;
    }
  }
  if (!a1[16])
  {
    sub_10025B8C0();
    if (!a1[16]) {
      return 101;
    }
  }
  if (!a1[21])
  {
    sub_10025B8C0();
    if (!a1[21]) {
      return 101;
    }
  }
  if (!a1[22])
  {
    sub_10025B8C0();
    if (!a1[22]) {
      return 101;
    }
  }
  if (!a1[23])
  {
    sub_10025B8C0();
    if (!a1[23]) {
      return 101;
    }
  }
  if (!a1[24])
  {
    sub_10025B8C0();
    if (!a1[24]) {
      return 101;
    }
  }
  uint64_t v16 = qword_100A02070;
  *(void *)(qword_100A02070 + 24) = a1;
  *(unsigned char *)(v16 + 103) = a2;
  if (!a3)
  {
    uint64_t v18 = 0;
    goto LABEL_69;
  }
  int v17 = *(unsigned __int16 *)a3;
  if (*(_WORD *)a3)
  {
    uint64_t v18 = 0;
    long long v19 = a3[1];
    *(_OWORD *)(v16 + 32) = *a3;
    *(_OWORD *)(v16 + 48) = v19;
LABEL_69:
    int v17 = 1;
    goto LABEL_71;
  }
  uint64_t v18 = 101;
LABEL_71:
  if (a4)
  {
    if (!*(_WORD *)a4)
    {
      uint64_t v18 = 101;
LABEL_78:
      sub_100135A40();
      return v18;
    }
    long long v30 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)a4;
    *(_OWORD *)(v16 + 80) = v30;
  }
  if (!v17) {
    goto LABEL_78;
  }
  uint64_t v18 = sub_1001E5FF0(25, (uint64_t)sub_1001354F4);
  if (v18) {
    goto LABEL_78;
  }
  return v18;
}

void sub_1001354F4(uint64_t a1, int *a2, uint64_t a3)
{
  unsigned __int16 v89 = 0;
  uint64_t v5 = qword_100A02070;
  ++*(unsigned char *)(qword_100A02070 + 102);
  ++*(unsigned char *)(v5 + 101);
  if (sub_100134CCC((uint64_t)a2, &v89))
  {
    if (sub_1001369B0(a3, a2))
    {
      uint64_t v6 = sub_1001E1170(a3, (uint64_t)sub_100140DF4);
      if (v6)
      {
        uint64_t v7 = v6;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"AVDTP disconnect complete not registered with %!", v8, v9, v10, v11, v12, v13, v14, v7);
          uint64_t v15 = sub_100050B4C(3u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_CONNECT_IND(addr=%:) cid %d", v16, v17, v18, v19, v20, v21, v22, (uint64_t)a2);
        uint64_t v23 = sub_100050B4C(3u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v24 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v91 = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      *(_WORD *)std::__fs::filesystem::path buf = 0;
      uint64_t v25 = sub_100134C6C(a3, buf);
      if (v25)
      {
        uint64_t v26 = v25;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"AVDTP did not find a2dp handle from CID with result %!", v27, v28, v29, v30, v31, v32, v33, v26);
          uint64_t v34 = sub_100050B4C(3u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      (**(void (***)(int *, void))(qword_100A02070 + 24))(a2, *(unsigned __int16 *)buf);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP signaling channel allocation failed, rejecting", v56, v57, v58, v59, v60, v61, v62, v88);
        uint64_t v63 = sub_100050B4C(3u);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_1001E0320((uint64_t)sub_100136CF4, (uint64_t)sub_10013625C, (uint64_t)sub_100136500, a3, qword_100A02070 + 32, 0, (uint64_t)&unk_10099BC28);
    }
    return;
  }
  uint64_t v35 = *(unsigned __int8 *)(v5 + 97);
  if (*(unsigned char *)(v5 + 97))
  {
    uint64_t v36 = *(void *)(v5 + 8) + 128;
    while (1)
    {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 7);
      if (v37 != 255
        && *(unsigned char *)(v36 + 6) == 2
        && *(unsigned __int16 *)(*(void *)(v5 + 16) + (v37 << 6) + 38) == v89)
      {
        break;
      }
      v36 += 144;
      if (!--v35) {
        goto LABEL_21;
      }
    }
    if (*(_WORD *)v36)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid ConnectInd Received: (mediaCID != 0)", v64, v65, v66, v67, v68, v69, v70, v88);
        unsigned __int8 v71 = sub_100050B4C(3u);
        if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
LABEL_40:
        }
          sub_100744F6C();
      }
LABEL_41:
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Unknown Connect Indication Received. cid=%d psm=%d addr=%:", v80, v81, v82, v83, v84, v85, v86, a3);
      uint64_t v87 = sub_100050B4C(3u);
      if (!os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_27:
      sub_100744F6C();
      return;
    }
    *(_WORD *)uint64_t v36 = a3;
    sub_100114F70(a3);
    if (sub_1001E0320((uint64_t)sub_10013FC20, (uint64_t)sub_10013FE34, (uint64_t)sub_100140040, a3, qword_100A02070 + 64, 1, (uint64_t)&unk_10099BC28))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_L2CAP_Accept failed! cid=%d error = %!", v72, v73, v74, v75, v76, v77, v78, a3);
        unsigned int v79 = sub_100050B4C(3u);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
          goto LABEL_40;
        }
      }
      goto LABEL_41;
    }
    sub_1001DD4C8(a3, (uint64_t)sub_100140CC8);
  }
  else
  {
LABEL_21:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Rejecting connect request %!", v38, v39, v40, v41, v42, v43, v44, 2901);
      uint64_t v45 = sub_100050B4C(3u);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v46 = sub_1001E0320((uint64_t)sub_100136CF4, (uint64_t)sub_10013625C, (uint64_t)sub_100136500, a3, qword_100A02070 + 32, 0, (uint64_t)&unk_10099BC28);
    if (v46)
    {
      uint64_t v47 = v46;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_L2CAP_Accept (reject) failed %!", v48, v49, v50, v51, v52, v53, v54, v47);
        unsigned int v55 = sub_100050B4C(3u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
          goto LABEL_27;
        }
      }
    }
  }
}

uint64_t sub_100135A40()
{
  if (!dword_100A197BC) {
    return 408;
  }
  int v0 = (void **)qword_100A02070;
  if (*(void *)(qword_100A02070 + 16))
  {
    sub_100023010(*(void **)(qword_100A02070 + 16));
    int v0 = (void **)qword_100A02070;
    *(void *)(qword_100A02070 + 16) = 0;
  }
  if (v0[1])
  {
    sub_100023010(v0[1]);
    int v0 = (void **)qword_100A02070;
    *(void *)(qword_100A02070 + 8) = 0;
  }
  if (*v0)
  {
    sub_100023010(*v0);
    int v0 = (void **)qword_100A02070;
    *(void *)qword_100A02070 = 0;
  }
  sub_100023010(v0);
  uint64_t result = 0;
  qword_100A02070 = 0;
  dword_100A197BC = 0;
  return result;
}

uint64_t sub_100135AD4()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Deregister", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v13);
    uint64_t v7 = sub_100050B4C(3u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v13 = 136446210;
      *(void *)&v13[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v13, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  uint64_t v8 = *(unsigned __int8 *)(qword_100A02070 + 96);
  if (*(unsigned char *)(qword_100A02070 + 96))
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)qword_100A02070 + 25);
    while (1)
    {
      int v10 = *v9;
      v9 += 40;
      if (v10) {
        return 145;
      }
      if (!--v8) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    unsigned int v11 = sub_1001E61E4(25);
    LODWORD(result) = sub_100135A40();
    if (v11) {
      return v11;
    }
    else {
      return result;
    }
  }
}

uint64_t sub_100135BF0(unsigned int a1, char a2, uint64_t a3, int a4, char a5, unsigned char *a6)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_RegisterMultipoint(mediaType=%d,count=%d,endpointType=%d,caps=0x%x,numCaps=%d)", v12, v13, v14, v15, v16, v17, v18, a1);
    uint64_t v19 = sub_100050B4C(3u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v35 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (a6 && a3 && a4)
  {
    uint64_t v20 = qword_100A02070;
    int v21 = *(unsigned __int8 *)(qword_100A02070 + 100);
    if (v21 == 63 || v21 == 0)
    {
      LOBYTE(v21) = 1;
      *(unsigned char *)(qword_100A02070 + 100) = 1;
    }
    unsigned int v23 = 0;
    uint64_t v24 = *(unsigned __int8 *)(v20 + 96);
    uint64_t v25 = *(void *)v20 + 25;
    uint64_t v26 = *(void *)v20 + 30;
    uint64_t result = 104;
    while (!v24)
    {
LABEL_24:
      LOBYTE(v21) = v21 + 1;
      *(unsigned char *)(v20 + 100) = v21;
      if (v23++ >= 0xFE) {
        return result;
      }
    }
    uint64_t v28 = 0;
    uint64_t v29 = (unsigned __int8 *)v25;
    while (1)
    {
      int v30 = *v29;
      v29 += 40;
      if (v30 == v21) {
        break;
      }
      if (v24 == ++v28) {
        goto LABEL_21;
      }
    }
    if (v28 != 255) {
      goto LABEL_24;
    }
LABEL_21:
    unsigned int v31 = 0;
    uint64_t v32 = (unsigned char *)v26;
    while (*(v32 - 5))
    {
      ++v31;
      v32 += 40;
      if (v31 >= v24) {
        goto LABEL_24;
      }
    }
    if (*(void *)(v32 - 22)) {
      sub_10025B8C0();
    }
    if (*(void *)(v32 - 14)) {
      sub_10025B8C0();
    }
    uint64_t result = 0;
    *(v32 - 5) = v21;
    *(_DWORD *)(v32 - 2) = 0;
    v32[2] = 0;
    *(v32 - 6) = -1;
    *(v32 - 4) = a1;
    *(v32 - 3) = a2;
    *(void *)(v32 - 30) = a3;
    *uint64_t v32 = a4;
    *(v32 - 2) = a5;
    *a6 = *(unsigned char *)(qword_100A02070 + 100);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return result;
}

uint64_t sub_100135E24(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_DeregisterEndpoint(seid=%d)", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v14 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (!*(unsigned char *)(qword_100A02070 + 96)) {
    return 120;
  }
  uint64_t v10 = 0;
  for (uint64_t i = *(void *)qword_100A02070; *(unsigned __int8 *)(i + 25) != a1; i += 40)
  {
    if (*(unsigned __int8 *)(qword_100A02070 + 96) == ++v10) {
      return 120;
    }
  }
  if (v10 == 255) {
    return 120;
  }
  sub_100135F64(i);
  sub_100135F64(i);
  uint64_t result = 0;
  *(unsigned char *)(i + 25) = 0;
  return result;
}

void sub_100135F64(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ResetEndpoint %lx", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      unsigned int v11 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(unsigned char *)(a1 + 29) = 0;
  sub_100134AB4((void **)(a1 + 8), *(unsigned __int8 *)(a1 + 31));
  *(unsigned char *)(a1 + 31) = 0;
  sub_100134AB4((void **)(a1 + 16), *(unsigned __int8 *)(a1 + 32));
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 24) = -1;
}

uint64_t sub_100136054(void *a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  int v4 = (int)a1;
  uint64_t v5 = qword_100A02070;
  ++*(unsigned char *)(qword_100A02070 + 102);
  if (!dword_100A197BC)
  {
    uint64_t v7 = 408;
    goto LABEL_8;
  }
  uint64_t v6 = *(unsigned __int8 *)(v5 + 98);
  if (!*(unsigned char *)(v5 + 98))
  {
LABEL_6:
    uint64_t v7 = 120;
LABEL_8:
    sub_100136F5C(a1);
    __int16 v33 = 0;
    int v32 = 0;
    goto LABEL_9;
  }
  uint64_t v7 = a4;
  uint64_t v9 = *(void *)(v5 + 16) + 28;
  while (*(unsigned __int16 *)(v9 + 10) != a1)
  {
    v9 += 64;
    if (!--v6) {
      goto LABEL_6;
    }
  }
  int v30 = *(_DWORD *)v9;
  __int16 v33 = *(_WORD *)(v9 + 4);
  int v32 = v30;
  if (a4)
  {
    sub_100136F5C(a1);
  }
  else
  {
    uint64_t v31 = sub_100134FD0((int)a1);
    if (!v31) {
      sub_10025B8C0();
    }
    uint64_t v7 = 0;
    *(_WORD *)(v31 + 34) = a3;
  }
LABEL_9:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_CONNECT_CFM(addr=%:,result=%!)", v10, v11, v12, v13, v14, v15, v16, (uint64_t)&v32);
    uint64_t v17 = sub_100050B4C(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v35 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_WORD *)std::__fs::filesystem::path buf = 0;
  unsigned int v19 = sub_100134C6C(v4, buf);
  if (v19)
  {
    unsigned int v20 = v19;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDTP did not find a2dp handle from CID with result %!", v21, v22, v23, v24, v25, v26, v27, v7);
      uint64_t v28 = sub_100050B4C(3u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (v7) {
      uint64_t v7 = v7;
    }
    else {
      uint64_t v7 = v20;
    }
  }
  return (*(uint64_t (**)(int *, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 8))(&v32, *(unsigned __int16 *)buf, v7);
}

void sub_10013625C(void *a1, uint64_t a2)
{
  if (dword_100A197BC)
  {
    uint64_t v4 = *(void *)(qword_100A02070 + 8);
    __int16 v37 = 0;
    int v36 = 0;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Signaling channel disconnected (CID %d) %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(3u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v39 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v13 = sub_100134FD0((int)a1);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = qword_100A02070;
      int v16 = *(unsigned __int8 *)(qword_100A02070 + 97);
      if (*(unsigned char *)(qword_100A02070 + 97))
      {
        do
        {
          if (*(void *)(v15 + 16) + ((unint64_t)*(unsigned __int8 *)(v4 + 135) << 6) == v14)
          {
            if (*(_WORD *)(v4 + 128))
            {
              if (!sub_1001E121C(*(unsigned __int16 *)(v4 + 128), 436))
              {
                sub_100139A70(v4, 7);
                return;
              }
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"L2CAP_Disconnect: (CID %d) %!", v17, v18, v19, v20, v21, v22, v23, *(unsigned __int16 *)(v4 + 128));
                uint64_t v24 = sub_100050B4C(3u);
                if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v25 = sub_100050714();
                  *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                  uint64_t v39 = v25;
                  _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              sub_10013FE34(*(unsigned __int16 *)(v4 + 128), a2);
            }
            sub_100138A14(v4);
            uint64_t v15 = qword_100A02070;
          }
          v4 += 144;
          --v16;
        }
        while (v16);
      }
      int v36 = *(_DWORD *)(v14 + 28);
      __int16 v37 = *(_WORD *)(v14 + 32);
    }
    *(_WORD *)std::__fs::filesystem::path buf = 0;
    uint64_t v26 = sub_100134C6C((int)a1, buf);
    if (v26)
    {
      uint64_t v27 = v26;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Signaling disconnect error %!", v28, v29, v30, v31, v32, v33, v34, v27);
        uint64_t v35 = sub_100050B4C(3u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      sub_100136F5C(a1);
      (*(void (**)(int *, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 16))(&v36, *(unsigned __int16 *)buf, a2);
    }
  }
}

void sub_100136500(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  if (a2)
  {
    if (a3) {
      goto LABEL_3;
    }
LABEL_11:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid packet length!", v17, v18, v19, v20, v21, v22, v23, v106);
      uint64_t v24 = sub_100050B4C(3u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
    }
    return;
  }
  sub_10025B8C0();
  if (!a3) {
    goto LABEL_11;
  }
LABEL_3:
  int v6 = *a2 & 0xC;
  if ((*a2 & 0xC) != 0)
  {
    uint64_t v7 = sub_100134FD0(a1);
    if (v7)
    {
      uint64_t v8 = v7;
      if (v6 == 4)
      {
        if (a3 <= 2)
        {
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"Invalid packet length!", v9, v10, v11, v12, v13, v14, v15, v106);
          int v16 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        if (*(void *)(v7 + 16))
        {
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"Unexpected START fragment! - discarding previous packet", v46, v47, v48, v49, v50, v51, v52, v106);
          uint64_t v53 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        int v70 = a2[1];
        if (a2[1])
        {
          *(unsigned char *)(v7 + 42) = v70;
          unsigned int v71 = a3 - 1;
          uint64_t v72 = sub_10010CE48((a3 - 1) * v70);
          *(void *)(v8 + 16) = v72;
          *(_DWORD *)(v8 + 48) = (a3 - 1) * *(unsigned __int8 *)(v8 + 42);
          *(_WORD *)(v8 + 36) = 0;
          *(_WORD *)(v8 + 56) = a3 - 1;
          if (v72)
          {
            *(unsigned char *)(v8 + 43) = *a2 & 0xF0;
            *uint64_t v72 = *a2;
            *(unsigned char *)(*(void *)(v8 + 16) + 1) = a2[2];
            memmove((void *)(*(void *)(v8 + 16) + 2), a2 + 3, a3 - 3);
            *(_DWORD *)(v8 + 48) -= v71;
            *(_WORD *)(v8 + 36) += v71;
            --*(unsigned char *)(v8 + 42);
            return;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not allocate reassembly buffer!", v97, v98, v99, v100, v101, v102, v103, v106);
            uint64_t v104 = sub_100050B4C(3u);
            if (os_log_type_enabled(v104, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          sub_100141668(a1, a2[2], *a2 >> 4, 129);
          goto LABEL_56;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid number of packets (0)!", v89, v90, v91, v92, v93, v94, v95, v106);
          uint64_t v96 = sub_100050B4C(3u);
          if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
LABEL_50:
          }
            sub_100744F6C();
        }
      }
      else
      {
        uint64_t v33 = *(void *)(v7 + 16);
        if (!v33)
        {
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"Unexpected packet fragment!", v54, v55, v56, v57, v58, v59, v60, v106);
          uint64_t v61 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        if ((*a2 & 0xF0) != *(unsigned __int8 *)(v7 + 43))
        {
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"Invalid transaction number in fragment", v62, v63, v64, v65, v66, v67, v68, v106);
          uint64_t v69 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        size_t v34 = a3 - 1;
        int v35 = *(_DWORD *)(v7 + 48) - v34;
        *(_DWORD *)(v7 + 48) = v35;
        if (v35 < 0)
        {
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"Buffer overflow !", v73, v74, v75, v76, v77, v78, v79, v106);
          uint64_t v80 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v80, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        memmove((void *)(v33 + *(unsigned __int16 *)(v7 + 36)), a2 + 1, v34);
        unsigned __int16 v36 = *(_WORD *)(v8 + 36) + v34;
        *(_WORD *)(v8 + 36) = v36;
        char v37 = *(unsigned char *)(v8 + 42) - 1;
        *(unsigned char *)(v8 + 42) = v37;
        if (v6 != 12)
        {
          if (v34 == *(unsigned __int16 *)(v8 + 56)) {
            return;
          }
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"CONTINUE fragment has invalid packet length", v81, v82, v83, v84, v85, v86, v87, v106);
          uint64_t v88 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v88, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        if (v37)
        {
          if (!sub_100058654()) {
            goto LABEL_56;
          }
          sub_100056E24((uint64_t)"Incorrect number of packet fragments - dropping packet!", v38, v39, v40, v41, v42, v43, v44, v106);
          uint64_t v45 = sub_100050B4C(3u);
          if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
          goto LABEL_50;
        }
        sub_10013ACC4(a1, *(unsigned __int8 **)(v8 + 16), v36);
      }
LABEL_56:
      uint64_t v105 = *(void **)(v8 + 16);
      if (v105)
      {
        sub_100023010(v105);
        *(void *)(v8 + 16) = 0;
      }
      return;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Packet received on invalid CID", v25, v26, v27, v28, v29, v30, v31, v106);
      uint64_t v32 = sub_100050B4C(3u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
LABEL_13:
      }
        sub_100744F6C();
    }
  }
  else
  {
    sub_10013ACC4(a1, a2, a3);
  }
}

uint64_t sub_1001369B0(__int16 a1, int *a2)
{
  if (!*(unsigned char *)(qword_100A02070 + 98)) {
    return 0;
  }
  uint64_t v3 = 0;
  for (uint64_t result = *(void *)(qword_100A02070 + 16); *(_WORD *)(result + 38); result += 64)
  {
    if (*(unsigned __int8 *)(qword_100A02070 + 98) == ++v3) {
      return 0;
    }
  }
  *(_WORD *)uint64_t result = v3 + 1;
  int v5 = *a2;
  *(_WORD *)(result + 32) = *((_WORD *)a2 + 2);
  *(_DWORD *)(result + 28) = v5;
  *(_WORD *)(result + 38) = a1;
  *(unsigned char *)(result + 44) = -1;
  *(_DWORD *)(result + 52) = -1;
  return result;
}

uint64_t sub_100136A1C(int *a1)
{
  __int16 v11 = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Connect(addr=%:)", v2, v3, v4, v5, v6, v7, v8, (uint64_t)a1);
    uint64_t v9 = sub_100050B4C(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v13 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (!sub_100134CCC((uint64_t)a1, &v11)) {
    return 126;
  }
  uint64_t result = sub_1001DF7BC((uint64_t)sub_100136054, (uint64_t)sub_10013625C, (uint64_t)sub_100136500, 25, (uint64_t)a1, qword_100A02070 + 32, &v11, (uint64_t)&unk_10099BC28);
  if (!result)
  {
    ++*(unsigned char *)(qword_100A02070 + 101);
    sub_1001369B0(v11, a1);
    return 0;
  }
  return result;
}

uint64_t sub_100136B8C(unsigned int a1, int a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Accept(a2dpHandle=%d,accept=%B)", v4, v5, v6, v7, v8, v9, v10, a1);
    __int16 v11 = sub_100050B4C(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v16 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_WORD *)std::__fs::filesystem::path buf = 0;
  if (sub_100134DB8(a1, buf)) {
    return 408;
  }
  uint64_t v13 = (void *)*(unsigned __int16 *)buf;
  uint64_t v12 = sub_1001E0320((uint64_t)sub_100136CF4, (uint64_t)sub_10013625C, (uint64_t)sub_100136500, *(unsigned __int16 *)buf, qword_100A02070 + 32, a2, (uint64_t)&unk_10099BC28);
  if (!v12 && (a2 & 1) != 0) {
    return 0;
  }
  sub_100136F5C(v13);
  return v12;
}

void *sub_100136CF4(void *a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v7 = qword_100A02070;
  ++*(unsigned char *)(qword_100A02070 + 102);
  ++*(unsigned char *)(v7 + 101);
  uint64_t v8 = sub_100134FD0((int)a1);
  if (!v8) {
    sub_10025B8C0();
  }
  __int16 v40 = 0;
  int v39 = 0;
  *(_WORD *)(v8 + 34) = a3;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ConnectCfmAcp: %!", v9, v10, v11, v12, v13, v14, v15, a4);
    int v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v42 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return sub_100136F5C(a1);
  }
  uint64_t v17 = *(unsigned __int8 *)(qword_100A02070 + 98);
  if (!*(unsigned char *)(qword_100A02070 + 98)) {
    return sub_100136F5C(a1);
  }
  for (uint64_t i = *(void *)(qword_100A02070 + 16) + 28; *(unsigned __int16 *)(i + 10) != a1; i += 64)
  {
    if (!--v17) {
      return sub_100136F5C(a1);
    }
  }
  int v20 = *(_DWORD *)i;
  __int16 v40 = *(_WORD *)(i + 4);
  int v39 = v20;
  if (a4) {
    sub_100136F5C(a1);
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_CONNECT_CFM(addr=%:,result=%!)", v21, v22, v23, v24, v25, v26, v27, (uint64_t)&v39);
    uint64_t v28 = sub_100050B4C(3u);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v42 = v29;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_WORD *)std::__fs::filesystem::path buf = 0;
  uint64_t v30 = sub_100134C6C((int)a1, buf);
  if (v30 && sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP did not find a2dp handle from CID with result %!", v31, v32, v33, v34, v35, v36, v37, v30);
    uint64_t v38 = sub_100050B4C(3u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return (void *)(*(uint64_t (**)(int *, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 8))(&v39, *(unsigned __int16 *)buf, v30);
}

void *sub_100136F5C(void *result)
{
  if (dword_100A197BC)
  {
    uint64_t result = (void *)sub_100134FD0((int)result);
    if (result)
    {
      uint64_t v1 = result;
      uint64_t result = (void *)result[1];
      if (result)
      {
        do
        {
          uint64_t v2 = (void *)result[1];
          sub_10025C53C(result);
          uint64_t result = v2;
        }
        while (v2);
      }
      v1[1] = 0;
      *((unsigned char *)v1 + 40) = 0;
      *((_WORD *)v1 + 19) = 0;
    }
  }
  return result;
}

uint64_t sub_100136FB8(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Disconnect(a2dpHandle=%d)", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(3u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v12 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_WORD *)std::__fs::filesystem::path buf = 0;
  if (sub_100134DB8(a1, buf)) {
    return 122;
  }
  else {
    return sub_1001E121C(*(unsigned __int16 *)buf, 436);
  }
}

uint64_t sub_1001370A8(unsigned int a1, unsigned char *a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Discover(a2dpHandle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v39 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  unsigned __int16 v37 = 0;
  uint64_t v12 = sub_100134DB8(a1, &v37);
  if (v12)
  {
    uint64_t v13 = v12;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDT_Discover_Req\n\tTransaction=%d\n\tRSP=0x.4x\n", v14, v15, v16, v17, v18, v19, v20, v13);
      uint64_t v21 = sub_100050B4C(3u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = sub_100050714();
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        int v39 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    unsigned int v23 = v37;
    uint64_t v24 = sub_100134FD0(v37);
    unsigned int v25 = sub_1001372C4(v24);
    unsigned int v26 = v25;
    if (a2) {
      *a2 = v25;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDT_Discover_Req\n\tTransaction=%d\n\tRSP=0x0000\n", v27, v28, v29, v30, v31, v32, v33, v26);
      uint64_t v34 = sub_100050B4C(3u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = sub_100050714();
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        int v39 = v35;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return sub_100141AB8(v23, v26);
  }
  return v13;
}

uint64_t sub_1001372C4(uint64_t a1)
{
  if (a1)
  {
    char v1 = *(unsigned char *)(a1 + 46) + 1;
    *(unsigned char *)(a1 + 46) = v1;
    return v1 & 0xF;
  }
  else
  {
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"Signal was NULL", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = sub_100050B4C(3u);
      uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100744F6C();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10013733C(unsigned int a1, unsigned int a2, unsigned char *a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_GetCap(a2dp handle=%d,seid=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    uint64_t v13 = sub_100050B4C(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v19 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  *(_WORD *)std::__fs::filesystem::path buf = 0;
  uint64_t result = sub_100134DB8(a1, buf);
  if (!result)
  {
    unsigned int v15 = *(unsigned __int16 *)buf;
    uint64_t v16 = sub_100134FD0(*(unsigned __int16 *)buf);
    unsigned int v17 = sub_1001372C4(v16);
    if (a3) {
      *a3 = v17;
    }
    *(unsigned char *)(qword_100A02070 + 99) = a2;
    return sub_1001413F4(v15, 2u, v17, a2);
  }
  return result;
}

uint64_t sub_10013747C(unsigned int a1, unsigned int a2, unsigned char *a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_GetAllCaps(a2dpHandle=%d:,seid=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    uint64_t v13 = sub_100050B4C(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v30 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  unsigned __int16 v28 = 0;
  uint64_t v14 = sub_100134DB8(a1, &v28);
  if (!v14)
  {
    unsigned int v15 = v28;
    uint64_t v16 = sub_100134FD0(v28);
    unsigned int v17 = sub_1001372C4(v16);
    if (a3) {
      *a3 = v17;
    }
    *(unsigned char *)(qword_100A02070 + 99) = a2;
    uint64_t v14 = sub_1001413F4(v15, 0xCu, v17, a2);
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_GetAllCaps returning %d", v18, v19, v20, v21, v22, v23, v24, v14);
    unsigned int v25 = sub_100050B4C(3u);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v26 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v30 = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v14;
}

uint64_t sub_100137638(unsigned int a1, char a2, int a3, uint64_t a4, unsigned int a5, unsigned char *a6, _WORD *a7)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_SetConfig(a2dpHandle=%d,remoteSEID=%d,localSEID=%d,caps=0x%x,numCaps=%d)", v14, v15, v16, v17, v18, v19, v20, a1);
    uint64_t v21 = sub_100050B4C(3u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v54 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  unsigned __int16 v52 = 0;
  uint64_t v22 = sub_100134DB8(a1, &v52);
  if (!v22)
  {
    if (!*(unsigned char *)(qword_100A02070 + 96)) {
      return 120;
    }
    uint64_t v23 = 0;
    uint64_t v24 = *(void *)qword_100A02070;
    uint64_t v25 = 255;
    while (*(unsigned __int8 *)(v24 + v23 + 25) != a3)
    {
      v23 += 40;
      --v25;
      if (40 * *(unsigned __int8 *)(qword_100A02070 + 96) == v23) {
        return 120;
      }
    }
    if (v25)
    {
      if (*(void *)(v24 + v23 + 16) && (sub_10025B8C0(), *(void *)(v24 + v23 + 16)))
      {
        return 118;
      }
      else
      {
        uint64_t v51 = (void **)(v24 + v23 + 16);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"In SetConfig, allocating endpoint", v27, v28, v29, v30, v31, v32, v33, v50);
          uint64_t v34 = sub_100050B4C(3u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v35 = sub_100050714();
            *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
            uint64_t v54 = v35;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t v36 = sub_10013799C(a2);
        if (v36)
        {
          unsigned int v37 = v52;
          uint64_t v38 = qword_100A02070;
          if (qword_100A02070)
          {
            uint64_t v39 = v36;
            if (*(unsigned char *)(qword_100A02070 + 98))
            {
              uint64_t v40 = 0;
              uint64_t v41 = (unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + 38);
              while (1)
              {
                int v42 = *v41;
                v41 += 32;
                if (v42 == v52) {
                  break;
                }
                if (*(unsigned __int8 *)(qword_100A02070 + 98) == ++v40) {
                  goto LABEL_27;
                }
              }
            }
            else
            {
LABEL_27:
              LOBYTE(v40) = -1;
            }
          }
          else
          {
            LOBYTE(v40) = -1;
            uint64_t v39 = v36;
          }
          *(unsigned char *)(v39 + 135) = v40;
          uint64_t v43 = *(unsigned __int8 *)(v38 + 96);
          if (*(unsigned char *)(v38 + 96))
          {
            uint64_t v44 = 0;
            uint64_t v45 = (unsigned __int8 *)(*(void *)v38 + 25);
            while (1)
            {
              int v46 = *v45;
              v45 += 40;
              if (v46 == a3) {
                break;
              }
              if (v43 == ++v44) {
                goto LABEL_34;
              }
            }
          }
          else
          {
LABEL_34:
            LOBYTE(v44) = -1;
          }
          *(unsigned char *)(v39 + 136) = v44;
          *a7 = sub_100137B04(v39);
          uint64_t v47 = sub_100134FD0(v37);
          unsigned int v48 = sub_1001372C4(v47);
          unsigned int v49 = v48;
          if (a6) {
            *a6 = v48;
          }
          uint64_t v22 = sub_100134B4C(a4, a5, v51, (unsigned char *)(v24 + v23 + 32));
          if (v22 || (uint64_t v22 = sub_100142870(v37, v49, a2, a3, (unsigned __int8 *)*v51, a5), v22))
          {
            sub_100134AB4(v51, a5);
            *(unsigned char *)(v39 + 132) = 0;
            *(_DWORD *)uint64_t v39 = 0;
            *(_WORD *)(v39 + 128) = 0;
            sub_100114F70(0);
            *(_DWORD *)(v39 + 134) = -256;
            LOBYTE(v49) = -1;
          }
          *(unsigned char *)(v39 + 133) = v49;
        }
        else
        {
          return 2902;
        }
      }
    }
    else
    {
      return 120;
    }
  }
  return v22;
}

uint64_t sub_10013799C(char a1)
{
  if (*(unsigned char *)(qword_100A02070 + 97))
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(qword_100A02070 + 8);
    while (*(unsigned char *)(v3 + 132))
    {
      uint64_t v2 = (v2 + 1);
      v3 += 144;
      if (v2 >= *(unsigned __int8 *)(qword_100A02070 + 97)) {
        goto LABEL_5;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Allocating endpoint at index: %d for seid: %d", v12, v13, v14, v15, v16, v17, v18, v2);
      uint64_t v19 = sub_100050B4C(3u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v23 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    *(unsigned char *)(v3 + 132) = a1;
    *(_WORD *)(v3 + 128) = 0;
    *(_DWORD *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 137) = -1;
    *(_DWORD *)(v3 + 133) = -65281;
  }
  else
  {
LABEL_5:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Did not allocate endpoint", v4, v5, v6, v7, v8, v9, v10, v21);
      uint64_t v11 = sub_100050B4C(3u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  return v3;
}

uint64_t sub_100137B04(uint64_t a1)
{
  if (*(unsigned char *)(qword_100A02070 + 97))
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(qword_100A02070 + 8) - 144;
    while (1)
    {
      v3 += 144;
      if (v3 == a1) {
        break;
      }
      if (*(unsigned __int8 *)(qword_100A02070 + 97) == ++v2) {
        goto LABEL_5;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"In GetHandleFromRemote, found handle for seid: %d, returning %d", v13, v14, v15, v16, v17, v18, v19, *(unsigned __int8 *)(a1 + 132));
      uint64_t v20 = sub_100050B4C(3u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v24 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return (unsigned __int16)(v2 + 1);
  }
  else
  {
LABEL_5:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"In GetHandleFromRemote, couldn't find handle", v4, v5, v6, v7, v8, v9, v10, v22);
      uint64_t v11 = sub_100050B4C(3u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
}

uint64_t sub_100137C54(unsigned int a1, unsigned char *a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Open(handle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v28 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v12 = *(void *)(qword_100A02070 + 8);
  if (!v12) {
    return 120;
  }
  unsigned int v13 = (unsigned __int16)(a1 - 1);
  if (!*(unsigned char *)(v12 + 144 * (unsigned __int16)(a1 - 1) + 134))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDTP_Open called on handle %d when it's in idle state. Aborting.", v17, v18, v19, v20, v21, v22, v23, a1);
      uint64_t v24 = sub_100050B4C(3u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  uint64_t v14 = *(unsigned __int8 *)(v12 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v14 == 255) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *(void *)(qword_100A02070 + 16) + (v14 << 6);
  }
  unsigned int v25 = sub_1001372C4(v15);
  char v26 = v25;
  if (a2) {
    *a2 = v25;
  }
  uint64_t result = sub_1001413F4(*(unsigned __int16 *)(v15 + 38), 6u, v25, *(unsigned __int8 *)(v12 + 144 * v13 + 132));
  if (!result) {
    *(unsigned char *)(v12 + 144 * v13 + 133) = v26;
  }
  return result;
}

uint64_t sub_100137E30(unsigned int a1, __int16 a2, int a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_OpenRsp(transaction=%d,handle=%d,error=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    unsigned int v13 = sub_100050B4C(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v19 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(a2 - 1))
  {
    uint64_t v14 = *(void *)(qword_100A02070 + 8);
    if (v14)
    {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 144 * (unsigned __int16)(a2 - 1) + 135);
      if (v15 != 255)
      {
        uint64_t v16 = *(void *)(qword_100A02070 + 16);
        if (v16) {
          return sub_100141668(*(unsigned __int16 *)(v16 + (v15 << 6) + 38), 6u, a1, a3);
        }
      }
    }
  }
  return 120;
}

uint64_t sub_100137F8C(_WORD *a1, unsigned int a2, unsigned char *a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Start(handles=0x%x,num=%x)", v6, v7, v8, v9, v10, v11, v12, (uint64_t)a1);
    unsigned int v13 = sub_100050B4C(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v40 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (dword_100A197BC)
  {
    uint64_t v14 = sub_100022FE8(a2);
    if (!v14) {
      return 106;
    }
    uint64_t v15 = v14;
    if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(*a1 - 1))
    {
      uint64_t v16 = *(void *)(qword_100A02070 + 8);
      if (v16)
      {
        uint64_t v17 = *(unsigned __int8 *)(v16 + 144 * (unsigned __int16)(*a1 - 1) + 135);
        if (v17 != 255)
        {
          uint64_t v18 = *(void *)(qword_100A02070 + 16);
          if (v18)
          {
            uint64_t v19 = v18 + (v17 << 6);
            unsigned int v37 = *(unsigned __int16 *)(v19 + 38);
            uint64_t v38 = v19;
            unsigned int v20 = sub_1001372C4(v19);
            unsigned int v21 = v20;
            if (a3) {
              *a3 = v20;
            }
            if (!a2)
            {
LABEL_27:
              uint64_t v35 = sub_100141910(v37, 7u, v21, (uint64_t)v15, a2);
LABEL_30:
              sub_100023010(v15);
              return v35;
            }
            unsigned __int8 v22 = 0;
            uint64_t v23 = qword_100A02070;
            while (1)
            {
              uint64_t v24 = v22;
              unsigned __int16 v25 = a1[v22] - 1;
              if (*(unsigned __int8 *)(v23 + 97) <= v25) {
                break;
              }
              uint64_t v26 = *(void *)(v23 + 8);
              if (!v26) {
                break;
              }
              unsigned int v27 = v25;
              if (*(unsigned char *)(v26 + 144 * v25 + 134) != 3)
              {
                uint64_t v35 = 408;
                goto LABEL_30;
              }
              uint64_t v28 = v26 + 144 * v25;
              int v31 = *(unsigned __int8 *)(v28 + 132);
              uint64_t v30 = (char *)(v28 + 132);
              char v29 = v31;
              if (!v31)
              {
                sub_10025B8C0();
                uint64_t v23 = qword_100A02070;
                char v29 = *v30;
              }
              *((unsigned char *)v15 + v24) = v29;
              *(unsigned char *)(v26 + 144 * v27 + 133) = v21;
              if (v24)
              {
                if (*(unsigned __int8 *)(v23 + 97) <= (unsigned __int16)(a1[v24] - 1)
                  || (uint64_t v32 = *(void *)(v23 + 8)) == 0
                  || (uint64_t v33 = *(unsigned __int8 *)(v32 + 144 * (unsigned __int16)(a1[v24] - 1) + 135), v33 == 255))
                {
                  uint64_t v34 = 0;
                }
                else
                {
                  uint64_t v34 = *(void *)(v23 + 16) + (v33 << 6);
                }
                if (v34 != v38)
                {
                  uint64_t v35 = 101;
                  goto LABEL_30;
                }
              }
              unsigned __int8 v22 = v24 + 1;
              if (a2 <= (v24 + 1)) {
                goto LABEL_27;
              }
            }
          }
        }
      }
    }
    uint64_t v35 = 120;
    goto LABEL_30;
  }
  return 408;
}

uint64_t sub_100138214(unsigned int a1, __int16 *a2, unsigned int a3, __int16 a4, int a5)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_StartRsp(transaction=%d,handles=0x%x,numHandles=%d,errorHandle=%d,error=%d)", v10, v11, v12, v13, v14, v15, v16, a1);
    uint64_t v17 = sub_100050B4C(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v30 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  unsigned int v18 = *(unsigned __int8 *)(qword_100A02070 + 97);
  if (v18 <= (unsigned __int16)(*a2 - 1)) {
    return 120;
  }
  uint64_t v19 = *(void *)(qword_100A02070 + 8);
  if (!v19) {
    return 120;
  }
  uint64_t v20 = *(unsigned __int8 *)(v19 + 144 * (unsigned __int16)(*a2 - 1) + 135);
  if (v20 == 255) {
    return 120;
  }
  uint64_t v21 = *(void *)(qword_100A02070 + 16);
  if (!v21) {
    return 120;
  }
  if (a5)
  {
    if (v18 > (unsigned __int16)(a4 - 1))
    {
      uint64_t v22 = *(unsigned __int8 *)(v19 + 144 * (unsigned __int16)(a4 - 1) + 136);
      if (v22 != 255)
      {
        if (*(void *)qword_100A02070)
        {
          char v23 = *(unsigned char *)(*(void *)qword_100A02070 + 40 * v22 + 25);
          return sub_100138434(*(unsigned __int16 *)(v21 + (v20 << 6) + 38), a1, a2, a3, v23, a5);
        }
      }
    }
LABEL_21:
    char v23 = 0;
    return sub_100138434(*(unsigned __int16 *)(v21 + (v20 << 6) + 38), a1, a2, a3, v23, a5);
  }
  if (!a3) {
    goto LABEL_21;
  }
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  while (1)
  {
    __int16 v27 = *v26++;
    unsigned __int16 v28 = v27 - 1;
    if (v18 <= (unsigned __int16)(v27 - 1)) {
      break;
    }
    if (*(unsigned __int8 *)(v19 + 144 * v28 + 134) - 3 >= 2) {
      goto LABEL_24;
    }
    if (!--v25) {
      goto LABEL_21;
    }
  }
  sub_10025B8C0();
  if (MEMORY[0x86] == 3) {
    return 101;
  }
LABEL_24:
  sub_10025B8C0();
  return 101;
}

uint64_t sub_100138434(unsigned int a1, unsigned int a2, __int16 *a3, unsigned int a4, char a5, int a6)
{
  uint64_t v9 = sub_1001419F8(a1, 7u, a2, a5, a6);
  uint64_t v10 = v9;
  if (!a6 && !v9) {
    sub_100140FC8(a3, a4, 4);
  }
  return v10;
}

uint64_t sub_100138498(unsigned int a1, unsigned char *a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Close(handle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v21 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v12 = *(void *)(qword_100A02070 + 8);
  if (!v12) {
    return 120;
  }
  unsigned int v13 = (unsigned __int16)(a1 - 1);
  if (*(unsigned __int8 *)(v12 + 144 * (unsigned __int16)(a1 - 1) + 134) - 3 > 1) {
    return 408;
  }
  uint64_t v14 = *(unsigned __int8 *)(v12 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v14 == 255) {
    return 408;
  }
  uint64_t v15 = *(void *)(qword_100A02070 + 16);
  if (!v15) {
    return 408;
  }
  uint64_t v16 = v15 + (v14 << 6);
  char v17 = *(unsigned char *)(v16 + 46) + 1;
  *(unsigned char *)(v16 + 46) = v17;
  char v18 = v17 & 0xF;
  if (a2) {
    *a2 = v18;
  }
  uint64_t result = sub_1001413F4(*(unsigned __int16 *)(v16 + 38), 8u, v17 & 0xF, *(unsigned __int8 *)(v12 + 144 * v13 + 132));
  if (!result) {
    *(unsigned char *)(v12 + 144 * v13 + 133) = v18;
  }
  return result;
}

uint64_t sub_10013862C(unsigned int a1, __int16 a2, int a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_CloseRsp(transaction=%d,handle=%d)", v6, v7, v8, v9, v10, v11, v12, a1);
    unsigned int v13 = sub_100050B4C(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v19 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(a2 - 1))
  {
    uint64_t v14 = *(void *)(qword_100A02070 + 8);
    if (v14)
    {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 144 * (unsigned __int16)(a2 - 1) + 135);
      if (v15 != 255)
      {
        uint64_t v16 = *(void *)(qword_100A02070 + 16);
        if (v16) {
          return sub_100141668(*(unsigned __int16 *)(v16 + (v15 << 6) + 38), 8u, a1, a3);
        }
      }
    }
  }
  return 120;
}

uint64_t sub_100138780(unsigned int a1, __int16 a2)
{
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_AbortRsp(transaction=%d,handle=%d)", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v43 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a2 - 1)) {
    return 120;
  }
  uint64_t v12 = *(void *)(qword_100A02070 + 8);
  if (!v12) {
    return 120;
  }
  unsigned int v13 = (unsigned __int16)(a2 - 1);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 144 * (unsigned __int16)(a2 - 1) + 135);
  if (v14 == 255) {
    return 120;
  }
  uint64_t v15 = *(void *)(qword_100A02070 + 16);
  if (!v15) {
    return 120;
  }
  uint64_t result = sub_100141668(*(unsigned __int16 *)(v15 + (v14 << 6) + 38), 0xAu, a1, 0);
  if (!result)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDT_Abort_Rsp\n\tTransaction=%d\n\tErrorCode=0x%.2x\n\tStreamHandles=%d\n", v17, v18, v19, v20, v21, v22, v23, a1);
      uint64_t v24 = sub_100050B4C(3u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v25 = sub_100050714();
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v43 = v25;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v26 = v12 + 144 * v13;
    unsigned int v28 = *(unsigned __int16 *)(v26 + 128);
    __int16 v27 = (_WORD *)(v26 + 128);
    uint64_t result = sub_1001E121C(v28, 436);
    if (result)
    {
      if (*v27)
      {
        uint64_t v29 = result;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error disconnecting media transport - %!", v30, v31, v32, v33, v34, v35, v36, v29);
          unsigned int v37 = sub_100050B4C(3u);
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        *__int16 v27 = 0;
        sub_100114F70(0);
      }
      sub_100138A14(v12 + 144 * v13);
      LOBYTE(v40) = a1;
      uint64_t v41 = (int *)(v12 + 144 * v13);
      uint64_t v39 = &v40;
      LOWORD(v38) = 16;
      return sub_100026DA8((uint64_t)sub_100138C4C, &v38, v41);
    }
  }
  return result;
}

void sub_100138A14(uint64_t a1)
{
  if (!a1 || *(unsigned __int8 *)(a1 + 136) == 255) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)qword_100A02070 + 40 * *(unsigned __int8 *)(a1 + 136);
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ResetRemote %lx", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = sub_100050B4C(3u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v29 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (*(_DWORD *)a1)
  {
    sub_10025BE30(*(_DWORD *)a1);
    *(_DWORD *)a1 = 0;
  }
  sub_100139A70(a1, 0);
  *(unsigned char *)(a1 + 132) = 0;
  sub_1001E121C(*(unsigned __int16 *)(a1 + 128), 436);
  if (v2)
  {
    char v11 = *(unsigned char *)(v2 + 29);
    if ((v11 & 0x3F) != 0)
    {
      *(unsigned char *)(v2 + 29) = v11 - 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Endpoint Remotes: %d", v12, v13, v14, v15, v16, v17, v18, *(unsigned __int8 *)(v2 + 29));
        uint64_t v19 = sub_100050B4C(3u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v20 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v29 = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v22 = (unsigned char *)(v2 + 24);
      uint64_t v21 = *(unsigned __int8 *)(v2 + 24);
      uint64_t v23 = *(void *)(qword_100A02070 + 8);
      if (v23 + 144 * v21 != a1)
      {
        unsigned int v24 = *(unsigned __int8 *)(qword_100A02070 + 97);
        if (v21 < v24)
        {
          do
          {
            uint64_t v25 = v23 + 144 * v21;
            unsigned int v26 = *(unsigned __int8 *)(v25 + 137);
            uint64_t v22 = (unsigned char *)(v25 + 137);
            uint64_t v21 = v26;
          }
          while (v23 + 144 * v26 != a1 && v21 < v24);
        }
      }
      if (v21 != 255) {
        *uint64_t v22 = *(unsigned char *)(v23 + 144 * v21 + 137);
      }
      *(_WORD *)(a1 + 135) = -1;
      *(unsigned char *)(a1 + 137) = -1;
      char v11 = *(unsigned char *)(v2 + 29);
    }
    if ((v11 & 0x3F) == 0) {
      sub_100135F64(v2);
    }
  }
}

uint64_t sub_100138C4C(uint64_t a1)
{
  char v1 = *(unsigned __int8 **)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = (_DWORD *)*((void *)v1 + 1);
  if (sub_100058654())
  {
    sub_100137B04((uint64_t)v3);
    sub_100056E24((uint64_t)"AVDTP_ABORT_CFM(transaction=%d,handle=%d,error=%d)", v4, v5, v6, v7, v8, v9, v10, v2);
    char v11 = sub_100050B4C(3u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v16 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *uint64_t v3 = 0;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 176);
  uint64_t v13 = sub_100137B04((uint64_t)v3);
  return v12(v2, v13, 0);
}

uint64_t sub_100138D5C(__int16 *a1, unsigned int a2, unsigned char *a3)
{
  uint64_t v13 = a2;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Suspend(handles=0x%x,numHandles=%d)", v6, v7, v8, v9, v10, v11, v12, (uint64_t)a1);
    uint64_t v14 = sub_100050B4C(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v51 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (dword_100A197BC)
  {
    if (!*(void *)(*(void *)(qword_100A02070 + 24) + 120))
    {
      sub_10025B8C0();
      if (!*(void *)(*(void *)(qword_100A02070 + 24) + 120)) {
        return 101;
      }
    }
    uint64_t v15 = sub_100022FE8(a2);
    if (!v15) {
      return 106;
    }
    uint64_t v16 = v15;
    if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(*a1 - 1))
    {
      uint64_t v17 = *(void *)(qword_100A02070 + 8);
      if (v17)
      {
        uint64_t v18 = *(unsigned __int8 *)(v17 + 144 * (unsigned __int16)(*a1 - 1) + 135);
        if (v18 != 255)
        {
          uint64_t v19 = *(void *)(qword_100A02070 + 16);
          if (v19)
          {
            uint64_t v47 = *(void *)(qword_100A02070 + 16);
            uint64_t v48 = *(unsigned __int8 *)(v17 + 144 * (unsigned __int16)(*a1 - 1) + 135);
            uint64_t v20 = v19 + (v18 << 6);
            char v21 = *(unsigned char *)(v20 + 46) + 1;
            uint64_t v49 = v20;
            *(unsigned char *)(v20 + 46) = v21;
            uint64_t v22 = v21 & 0xF;
            if (a3) {
              *a3 = v21 & 0xF;
            }
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"AVDT_Suspend_Req\n\tTransaction=%d\n\tRSP=0x0000\n", v23, v24, v25, v26, v27, v28, v29, v22);
              uint64_t v30 = sub_100050B4C(3u);
              if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v31 = sub_100050714();
                *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                uint64_t v51 = v31;
                _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            if (!a2)
            {
LABEL_29:
              uint64_t v45 = sub_100141910(*(unsigned __int16 *)(v47 + (v48 << 6) + 38), 9u, v22, (uint64_t)v16, a2);
LABEL_32:
              sub_100023010(v16);
              return v45;
            }
            uint64_t v32 = v16;
            while (1)
            {
              __int16 v33 = *a1++;
              unsigned __int16 v34 = v33 - 1;
              if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(v33 - 1)) {
                break;
              }
              uint64_t v35 = *(void *)(qword_100A02070 + 8);
              if (!v35) {
                break;
              }
              unsigned int v36 = v34;
              if (*(unsigned char *)(v35 + 144 * v34 + 134) != 4)
              {
                uint64_t v45 = 408;
                goto LABEL_32;
              }
              uint64_t v37 = *(unsigned __int8 *)(v35 + 144 * v34 + 135);
              if (v37 == 255) {
                uint64_t v38 = 0;
              }
              else {
                uint64_t v38 = *(void *)(qword_100A02070 + 16) + (v37 << 6);
              }
              if (v49 != v38)
              {
                uint64_t v45 = 101;
                goto LABEL_32;
              }
              uint64_t v39 = v22;
              uint64_t v40 = v35 + 144 * v36;
              int v43 = *(unsigned __int8 *)(v40 + 132);
              int v42 = (char *)(v40 + 132);
              char v41 = v43;
              if (!v43)
              {
                sub_10025B8C0();
                char v41 = *v42;
              }
              *v32++ = v41;
              uint64_t v44 = v35 + 144 * v36;
              uint64_t v22 = v39;
              *(unsigned char *)(v44 + 133) = v39;
              sub_1001F68C8(*(unsigned __int16 *)(v44 + 128));
              if (!--v13) {
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v45 = 120;
    goto LABEL_32;
  }
  return 408;
}

uint64_t sub_100139074(unsigned int a1, __int16 *a2, unsigned int a3, __int16 a4, int a5)
{
  if (!dword_100A197BC) {
    return 408;
  }
  unsigned int v7 = *(unsigned __int8 *)(qword_100A02070 + 97);
  if (v7 <= (unsigned __int16)(*a2 - 1)) {
    return 120;
  }
  uint64_t v8 = *(void *)(qword_100A02070 + 8);
  if (!v8) {
    return 120;
  }
  uint64_t v9 = *(unsigned __int8 *)(v8 + 144 * (unsigned __int16)(*a2 - 1) + 135);
  if (v9 == 255) {
    return 120;
  }
  uint64_t v10 = *(void *)(qword_100A02070 + 16);
  if (!v10) {
    return 120;
  }
  if (a5)
  {
    if (v7 > (unsigned __int16)(a4 - 1))
    {
      uint64_t v13 = *(unsigned __int8 *)(v8 + 144 * (unsigned __int16)(a4 - 1) + 136);
      if (v13 != 255)
      {
        if (*(void *)qword_100A02070)
        {
          char v14 = *(unsigned char *)(*(void *)qword_100A02070 + 40 * v13 + 25);
LABEL_19:
          unsigned int v20 = *(unsigned __int16 *)(v10 + (v9 << 6) + 38);
          return sub_100139230(v20, a1, a2, a3, v14, a5);
        }
      }
    }
LABEL_18:
    char v14 = 0;
    goto LABEL_19;
  }
  if (!a3) {
    goto LABEL_18;
  }
  uint64_t v16 = a3;
  uint64_t v17 = a2;
  while (1)
  {
    __int16 v18 = *v17++;
    unsigned __int16 v19 = v18 - 1;
    if (v7 <= (unsigned __int16)(v18 - 1))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_AVDTP_SuspendRsp remote nil", v21, v22, v23, v24, v25, v26, v27, v37);
        uint64_t v28 = sub_100050B4C(3u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          goto LABEL_27;
        }
      }
      return 101;
    }
    if (*(unsigned char *)(v8 + 144 * v19 + 134) != 4) {
      break;
    }
    if (!--v16) {
      goto LABEL_18;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_AVDTP_SuspendRsp after stopped, check race transaction", v29, v30, v31, v32, v33, v34, v35, v37);
    unsigned int v36 = sub_100050B4C(3u);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
LABEL_27:
    }
      sub_100744F6C();
  }
  return 101;
}

uint64_t sub_100139230(unsigned int a1, unsigned int a2, __int16 *a3, unsigned int a4, char a5, int a6)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDT_Suspend_Rsp\n\tTransaction=%d\n\tErrorCode=0x%.2x\n", v12, v13, v14, v15, v16, v17, v18, a2);
    unsigned __int16 v19 = sub_100050B4C(3u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v24 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v20 = sub_1001419F8(a1, 9u, a2, a5, a6);
  uint64_t v21 = v20;
  if (!a6 && !v20) {
    sub_100140FC8(a3, a4, 3);
  }
  return v21;
}

uint64_t sub_100139360(__int16 *a1, unsigned int a2, unsigned char *a3)
{
  uint64_t v13 = a2;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_Transition(handles=0x%x, numHandles=%d", v6, v7, v8, v9, v10, v11, v12, (uint64_t)a1);
    uint64_t v14 = sub_100050B4C(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v42 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!dword_100A197BC) {
    return 408;
  }
  if (!*(void *)(*(void *)(qword_100A02070 + 24) + 128))
  {
    sub_10025B8C0();
    if (!*(void *)(*(void *)(qword_100A02070 + 24) + 128)) {
      return 101;
    }
  }
  uint64_t v15 = sub_10010CE48(a2);
  uint64_t v16 = v15;
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(*a1 - 1)
    || (uint64_t v17 = *(void *)(qword_100A02070 + 8)) == 0
    || (uint64_t v18 = *(unsigned __int8 *)(v17 + 144 * (unsigned __int16)(*a1 - 1) + 135), v18 == 255)
    || (uint64_t v19 = *(void *)(qword_100A02070 + 16)) == 0)
  {
    uint64_t v36 = 120;
    if (!v15) {
      return v36;
    }
LABEL_28:
    sub_100023010(v16);
    return v36;
  }
  uint64_t v38 = *(void *)(qword_100A02070 + 16);
  uint64_t v39 = *(unsigned __int8 *)(v17 + 144 * (unsigned __int16)(*a1 - 1) + 135);
  uint64_t v20 = v19 + (v18 << 6);
  char v21 = *(unsigned char *)(v20 + 46) + 1;
  uint64_t v40 = v20;
  *(unsigned char *)(v20 + 46) = v21;
  uint64_t v22 = v21 & 0xF;
  if (a3) {
    *a3 = v21 & 0xF;
  }
  if (a2)
  {
    uint64_t v23 = v15;
    do
    {
      __int16 v24 = *a1++;
      unsigned __int16 v25 = v24 - 1;
      if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(v24 - 1)) {
        break;
      }
      uint64_t v26 = *(void *)(qword_100A02070 + 8);
      if (!v26) {
        break;
      }
      unsigned int v27 = v25;
      if (*(unsigned char *)(v26 + 144 * v25 + 134) != 4) {
        break;
      }
      uint64_t v28 = *(unsigned __int8 *)(v26 + 144 * v25 + 135);
      uint64_t v29 = v28 == 255 ? 0 : *(void *)(qword_100A02070 + 16) + (v28 << 6);
      if (v40 != v29) {
        break;
      }
      uint64_t v30 = v22;
      uint64_t v31 = v26 + 144 * v27;
      int v34 = *(unsigned __int8 *)(v31 + 132);
      uint64_t v33 = (char *)(v31 + 132);
      char v32 = v34;
      if (!v34)
      {
        sub_10025B8C0();
        char v32 = *v33;
      }
      *v23++ = v32;
      uint64_t v35 = v26 + 144 * v27;
      uint64_t v22 = v30;
      *(unsigned char *)(v35 + 133) = v30;
      sub_1001F68C8(*(unsigned __int16 *)(v35 + 128));
      --v13;
    }
    while (v13);
  }
  uint64_t v36 = sub_100141910(*(unsigned __int16 *)(v38 + (v39 << 6) + 38), 0xFEu, v22, (uint64_t)v16, a2);
  if (v16) {
    goto LABEL_28;
  }
  return v36;
}

uint64_t sub_1001395F8(unsigned __int8 *a1, unsigned int a2, uint64_t a3, int a4, void **a5, unsigned char *a6)
{
  int v8 = a4;
  unsigned int v10 = a2;
  int v12 = a4 + a2;
  *a6 = a4 + a2;
  if (a4)
  {
    for (uint64_t i = 0; i != a4; ++i)
    {
      uint64_t v14 = (unsigned __int8 *)(a3 + 16 * i);
      int v15 = *v14;
      if (v15 == 4 || v15 == 7)
      {
        *a6 = --v12;
      }
      else
      {
        uint64_t v17 = a2;
        uint64_t v18 = a1;
        if (a2)
        {
          do
          {
            int v19 = *v18;
            v18 += 16;
            if (*v14 == v19) {
              *a6 = --v12;
            }
            --v17;
          }
          while (v17);
        }
      }
    }
  }
  uint64_t v20 = sub_10010CE48(16 * v12);
  *a5 = v20;
  if (!v20) {
    goto LABEL_54;
  }
  int v21 = *a6;
  if (!(v21 | v8 | v10)) {
    return 0;
  }
  BOOL v22 = v10 != 0;
  BOOL v23 = v8 != 0;
  while (1)
  {
    if (v22)
    {
      LOBYTE(v10) = v10 - 1;
      __int16 v24 = (const void **)&a1[16 * v10];
      goto LABEL_19;
    }
    if (!v23)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Mis-Count of merged caps: %d", v38, v39, v40, v41, v42, v43, v44, *a6);
        uint64_t v45 = sub_100050B4C(3u);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          goto LABEL_53;
        }
      }
      goto LABEL_54;
    }
    LOBYTE(v8) = v8 - 1;
    __int16 v24 = (const void **)(a3 + 16 * v8);
    int v31 = *(unsigned __int8 *)v24;
    if (v31 == 4 || v31 == 7)
    {
      LOBYTE(v10) = 0;
      goto LABEL_36;
    }
    uint64_t v33 = *a6;
    if (v21 >= (int)v33) {
      break;
    }
    int v34 = (unsigned __int8 *)*a5 + 16 * v21;
    uint64_t v35 = v33 - v21;
    do
    {
      int v36 = *v34;
      v34 += 16;
      if (v31 == v36) {
        __int16 v24 = 0;
      }
      --v35;
    }
    while (v35);
LABEL_19:
    if (v24) {
      break;
    }
LABEL_36:
    BOOL v23 = v8 != 0;
    BOOL v22 = v10 != 0;
    if (!v21 && !(_BYTE)v8 && !(_BYTE)v10) {
      return 0;
    }
  }
  if (v21 > 0)
  {
    uint64_t v25 = (uint64_t)*a5 + 16 * --v21;
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v24;
    unsigned int v26 = *(unsigned __int8 *)v24;
    BOOL v27 = v26 > 8;
    int v28 = (1 << v26) & 0x10E;
    if (v27 || v28 == 0)
    {
      if (*((unsigned char *)v24 + 3))
      {
        uint64_t v30 = sub_100022FE8(*((unsigned __int8 *)v24 + 3));
        *(void *)(v25 + 8) = v30;
        if (!v30) {
          goto LABEL_54;
        }
        memmove(v30, v24[1], *((unsigned __int8 *)v24 + 3));
      }
      else
      {
        *(void *)(v25 + 8) = 0;
      }
    }
    goto LABEL_36;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Mis-Count of merged caps: %d", v46, v47, v48, v49, v50, v51, v52, *a6);
    uint64_t v53 = sub_100050B4C(3u);
    if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
LABEL_53:
    }
      sub_100744F6C();
  }
LABEL_54:
  sub_100134AB4(a5, *a6);
  *a5 = 0;
  *a6 = 0;
  return 106;
}

uint64_t sub_10013989C(__int16 a1, unsigned int a2, char a3, int a4)
{
  if (!dword_100A197BC) {
    return 408;
  }
  char v4 = a1 - 1;
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v5 = *(void *)(qword_100A02070 + 8);
  if (!v5) {
    return 120;
  }
  unsigned int v9 = (unsigned __int16)(a1 - 1);
  uint64_t v10 = *(unsigned __int8 *)(v5 + 144 * (unsigned __int16)(a1 - 1) + 136) == 255
      ? 0
      : *(void *)qword_100A02070 + 40 * *(unsigned __int8 *)(v5 + 144 * (unsigned __int16)(a1 - 1) + 136);
  uint64_t v12 = *(unsigned __int8 *)(v5 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v12 == 255) {
    return 120;
  }
  uint64_t result = 120;
  if (v10)
  {
    uint64_t v13 = *(void *)(qword_100A02070 + 16);
    if (v13)
    {
      uint64_t v14 = (_DWORD *)(v5 + 144 * v9);
      if (a4)
      {
        sub_100134AB4((void **)(v10 + 16), *(unsigned __int8 *)(v10 + 32));
        *(unsigned char *)(v10 + 32) = 0;
        uint64_t v15 = v5 + 144 * v9;
        *(unsigned char *)(v15 + 132) = 0;
        *uint64_t v14 = 0;
        *(_WORD *)(v15 + 128) = 0;
        sub_100114F70(0);
        *(unsigned char *)(v15 + 137) = -1;
        *(_DWORD *)(v15 + 133) = -65281;
        unsigned int v16 = *(unsigned __int16 *)(v13 + (v12 << 6) + 38);
        return sub_100142A14(v16, 3, a2, a3, a4);
      }
      else
      {
        uint64_t result = sub_100142A14(*(unsigned __int16 *)(v13 + (v12 << 6) + 38), 3, a2, a3, 0);
        if (!result)
        {
          sub_100139A70(v5 + 144 * v9, 1);
          sub_100134AB4((void **)(v10 + 8), *(unsigned __int8 *)(v10 + 31));
          uint64_t result = 0;
          *(unsigned char *)(v10 + 31) = *(unsigned char *)(v10 + 32);
          *(void *)(v10 + 8) = *(void *)(v10 + 16);
          *(void *)(v10 + 16) = 0;
          ++*(unsigned char *)(v10 + 29);
          *(unsigned char *)(v10 + 32) = 0;
          *(unsigned char *)(v5 + 144 * v9 + 137) = *(unsigned char *)(v10 + 24);
          *(unsigned char *)(v10 + 24) = v4;
        }
      }
    }
  }
  return result;
}

void sub_100139A70(uint64_t a1, int a2)
{
  if (sub_100058654())
  {
    uint64_t v4 = sub_100137B04(a1);
    sub_100056E24((uint64_t)"State transition Handle %d: %s -> %s", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(3u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v18 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  int v13 = *(unsigned __int8 *)(a1 + 134);
  if (a2 == 4)
  {
    if (v13 != 4)
    {
      int v14 = *(unsigned __int16 *)(a1 + 128);
      unsigned int v15 = 12;
      unsigned int v16 = 70;
LABEL_9:
      sub_1001F5528(v14, v15, v16);
    }
  }
  else if (v13 == 4)
  {
    int v14 = *(unsigned __int16 *)(a1 + 128);
    unsigned int v15 = 9;
    unsigned int v16 = -1;
    goto LABEL_9;
  }
  *(unsigned char *)(a1 + 134) = a2;
}

uint64_t sub_100139BCC(__int16 a1, unsigned int a2, char a3, int a4)
{
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v4 = *(void *)(qword_100A02070 + 8);
  if (!v4) {
    return 120;
  }
  unsigned int v8 = (unsigned __int16)(a1 - 1);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 144 * (unsigned __int16)(a1 - 1) + 136) == 255
     ? 0
     : *(void *)qword_100A02070 + 40 * *(unsigned __int8 *)(v4 + 144 * (unsigned __int16)(a1 - 1) + 136);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v10 == 255) {
    return 120;
  }
  uint64_t result = 120;
  if (v9)
  {
    uint64_t v12 = *(void *)(qword_100A02070 + 16);
    if (v12)
    {
      if (*(unsigned char *)(v4 + 144 * v8 + 134) == 3)
      {
        if (a4)
        {
          unsigned int v14 = *(unsigned __int8 *)(v9 + 32);
          int v13 = (void **)(v9 + 32);
          sub_100134AB4(v13 - 2, v14);
          unsigned int v15 = v13;
        }
        else
        {
          sub_100134AB4((void **)(v9 + 8), *(unsigned __int8 *)(v9 + 31));
          unsigned int v15 = (void **)(v9 + 32);
          char v16 = *(unsigned char *)(v9 + 32);
          *(void *)(v9 + 8) = *(void *)(v9 + 16);
          *(unsigned char *)(v9 + 31) = v16;
          *(void *)(v9 + 16) = 0;
        }
        *(unsigned char *)unsigned int v15 = 0;
        unsigned int v17 = *(unsigned __int16 *)(v12 + (v10 << 6) + 38);
        return sub_100142A14(v17, 5, a2, a3, a4);
      }
      return 408;
    }
  }
  return result;
}

uint64_t sub_100139D20(__int16 a1, unsigned int a2, const void *a3, unsigned int a4, int a5)
{
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v5 = *(void *)(qword_100A02070 + 8);
  if (!v5) {
    return 120;
  }
  uint64_t v6 = *(unsigned __int8 *)(v5 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v6 == 255) {
    return 120;
  }
  uint64_t v7 = *(void *)(qword_100A02070 + 16);
  if (!v7) {
    return 120;
  }
  unsigned int v8 = *(unsigned __int8 *)(v5 + 144 * (unsigned __int16)(a1 - 1) + 134);
  BOOL v9 = v8 > 6;
  int v10 = (1 << v8) & 0x61;
  if (!v9 && v10 != 0) {
    return 408;
  }
  return sub_100142ADC(*(unsigned __int16 *)(v7 + (v6 << 6) + 38), a2, a3, a4, a5);
}

uint64_t sub_100139DB4(__int16 a1, unsigned int a2, int a3, char a4)
{
  if (!dword_100A197BC) {
    return 408;
  }
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 120;
  }
  uint64_t v4 = *(void *)(qword_100A02070 + 8);
  if (!v4) {
    return 120;
  }
  uint64_t v5 = *(unsigned __int8 *)(v4 + 144 * (unsigned __int16)(a1 - 1) + 135);
  if (v5 == 255) {
    return 120;
  }
  uint64_t v6 = *(void *)(qword_100A02070 + 16);
  if (!v6) {
    return 120;
  }
  uint64_t result = sub_100142C68(*(unsigned __int16 *)(v6 + (v5 << 6) + 38), a2, a3, a4);
  if (!result)
  {
    int v16 = sub_100058654();
    uint64_t result = 0;
    if (v16)
    {
      sub_100056E24((uint64_t)"AVDTP_DelayReport_Rsp: Transaction=%d, ErrorCode=0x%x,StreamHandles=%d", v9, v10, v11, v12, v13, v14, v15, a2);
      unsigned int v17 = sub_100050B4C(3u);
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
      uint64_t result = 0;
      if (v18)
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v20 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_100139F18(uint64_t a1)
{
  unsigned __int16 v4 = 0;
  uint64_t v3 = 0;
  int v1 = sub_100134CCC(a1, &v4);
  BOOL result = 0;
  if (!v1) {
    return !sub_1001DDA80(v4, &v3) && *(unsigned char *)(v3 + 227) != 0;
  }
  return result;
}

uint64_t sub_100139F78(__int16 a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(a1 - 1)) {
    return 0;
  }
  uint64_t v2 = *(void *)(qword_100A02070 + 8);
  if (!v2) {
    return 0;
  }
  unsigned int v3 = (unsigned __int16)(a1 - 1);
  if (*(unsigned char *)(v2 + 144 * (unsigned __int16)(a1 - 1) + 134) != 4) {
    return 408;
  }
  uint64_t v5 = (unsigned __int8 *)(v2 + 144 * (unsigned __int16)(a1 - 1) + 16);
  uint64_t result = sub_1000226D0((uint64_t)v5, 3u);
  if (!result)
  {
    uint64_t result = sub_100022798(v5, (char *)a2, 0xCuLL, 2u);
    if (!result)
    {
      if (!*(unsigned char *)(a2 + 12) || (uint64_t result = sub_100022798(v5, (char *)(a2 + 12), 1uLL, 2u), !result))
      {
        uint64_t result = sub_100022798(v5, *(char **)(a2 + 24), *(unsigned __int16 *)(a2 + 16), 2u);
        if (!result)
        {
          uint64_t result = ((uint64_t (*)(void (*)(uint64_t, uint64_t), void, void, unsigned __int8 *, uint64_t))loc_1001DE1A4)(sub_10013A098, *(unsigned __int16 *)(v2 + 144 * v3 + 128), 0, v5, 1);
          if (!result) {
            *(void *)(v2 + 144 * v3 + 24) = v2 + 144 * v3;
          }
        }
      }
    }
  }
  return result;
}

void sub_10013A098(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = 0;
}

void sub_10013A0A0(__int16 a1)
{
  if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(a1 - 1))
  {
    uint64_t v1 = *(void *)(qword_100A02070 + 8);
    if (v1) {
      sub_1001F449C(*(unsigned __int16 *)(v1 + 144 * (unsigned __int16)(a1 - 1) + 128));
    }
  }
}

uint64_t sub_10013A0D8(__int16 a1)
{
  if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(a1 - 1)
    && (uint64_t v1 = *(void *)(qword_100A02070 + 8)) != 0)
  {
    uint64_t v2 = sub_1001F3438(*(unsigned __int16 *)(v1 + 144 * (unsigned __int16)(a1 - 1) + 128));
    if (v2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"FreeHeadOfList Failed Status %d", v3, v4, v5, v6, v7, v8, v9, v2);
        uint64_t v10 = sub_100050B4C(3u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid AVDTP Handle", v11, v12, v13, v14, v15, v16, v17, v20);
      BOOL v18 = sub_100050B4C(3u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 2903;
  }
  return v2;
}

uint64_t sub_10013A1C4(uint64_t *a1, void **a2, unsigned __int8 *a3)
{
  *a2 = 0;
  *a3 = 0;
  uint64_t v127 = 0;
  char v128 = 0;
  unsigned int v5 = *((unsigned __int16 *)a1 + 6);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ParseCaps", v6, v7, v8, v9, v10, v11, v12, v121);
    uint64_t v13 = sub_100050B4C(3u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v126 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v124 = a2;
  if (*((unsigned char *)a1 + 15))
  {
    unsigned __int8 v14 = 0;
    uint64_t v15 = 0;
LABEL_6:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    if (*((unsigned char *)a1 + 15))
    {
      unsigned __int8 v16 = 0;
      uint64_t v17 = a2;
      goto LABEL_126;
    }
    goto LABEL_25;
  }
  unsigned int v18 = *((unsigned __int16 *)a1 + 5);
  unsigned int v19 = *((unsigned __int16 *)a1 + 6);
  if (v18 > v19)
  {
    unsigned __int8 v14 = 0;
    int v20 = 0;
    while (1)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3478, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v21 = *a1;
      uint64_t v22 = v19 + 1;
      *((_WORD *)a1 + 6) = v22;
      uint64_t v15 = *(unsigned __int8 *)(v21 + v19);
      if (v18 <= v22)
      {
        *((unsigned char *)a1 + 15) = 1;
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        signed int v25 = 0;
      }
      else
      {
        uint64_t v23 = *a1;
        unsigned int v24 = v19 + 2;
        *((_WORD *)a1 + 6) = v24;
        int v20 = *(unsigned __int8 *)(v23 + v22);
        signed int v25 = v18 - v24;
      }
      if (v25 >= v20) {
        *((_WORD *)a1 + 6) += v20;
      }
      else {
        *((unsigned char *)a1 + 15) = 1;
      }
      char v26 = 1;
      if (!v20 && v15 <= 8 && ((1 << v15) & 0x107) != 0)
      {
        int v27 = *((unsigned __int8 *)&v127 + v15);
        *((unsigned char *)&v127 + v15) = v27 + 1;
        char v26 = v27 == 0;
      }
      v14 += v26;
      if (*((unsigned char *)a1 + 15)) {
        goto LABEL_6;
      }
      unsigned int v18 = *((unsigned __int16 *)a1 + 5);
      unsigned int v19 = *((unsigned __int16 *)a1 + 6);
      if (v18 <= v19) {
        goto LABEL_25;
      }
    }
  }
  uint64_t v15 = 0;
  unsigned __int8 v14 = 0;
LABEL_25:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ParseCaps - got count %d", v28, v29, v30, v31, v32, v33, v34, v14);
    uint64_t v35 = sub_100050B4C(3u);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      int v36 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v126 = v36;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v17 = a2;
  if (v14)
  {
    uint64_t v37 = sub_10010CE48(16 * v14);
    *a2 = v37;
    if (!v37)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ParseCaps: Could not allocate memory for %d capabilities", v96, v97, v98, v99, v100, v101, v102, v14);
        uint64_t v103 = sub_100050B4C(3u);
        if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      char v47 = 0;
      unsigned __int8 v16 = 0;
      goto LABEL_123;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"numCaps = %d", v38, v39, v40, v41, v42, v43, v44, v14);
    uint64_t v45 = sub_100050B4C(3u);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v46 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v126 = v46;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v5 > *((unsigned __int16 *)a1 + 5)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3507, "(size_t)(pos) <= (size_t)((*pBs).__size)");
  }
  *((_WORD *)a1 + 6) = v5;
  char v47 = 1;
  if (!v14)
  {
    unsigned __int8 v14 = 0;
    uint64_t v95 = 0;
    unsigned __int8 v16 = 0;
    goto LABEL_125;
  }
  unsigned __int8 v16 = 0;
  int v48 = 0;
  while (1)
  {
    if (*((unsigned char *)a1 + 15)) {
      goto LABEL_126;
    }
    if (*((unsigned char *)a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3513, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v49 = (char *)*v17;
    unsigned int v50 = *((unsigned __int16 *)a1 + 5);
    uint64_t v51 = *((unsigned __int16 *)a1 + 6);
    if (v50 <= v51) {
      break;
    }
    uint64_t v52 = *a1;
    *((_WORD *)a1 + 6) = v51 + 1;
    uint64_t v15 = *(unsigned __int8 *)(v52 + v51);
    if (v50 <= (int)v51 + 1) {
      goto LABEL_42;
    }
    uint64_t v53 = *a1;
    *((_WORD *)a1 + 6) = v51 + 2;
    unsigned int v54 = *(unsigned __int8 *)(v53 + v51 + 1);
LABEL_43:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"got capability %d", v55, v56, v57, v58, v59, v60, v61, v15);
      uint64_t v62 = sub_100050B4C(3u);
      if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v63 = sub_100050714();
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v126 = v63;
        _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v64 = &v49[16 * v48];
    *uint64_t v64 = v15;
    switch((int)v15)
    {
      case 1:
      case 2:
      case 8:
        if (v54) {
          goto LABEL_124;
        }
        char v65 = *((unsigned char *)&v127 + v15) - 1;
        *((unsigned char *)&v127 + v15) = v65;
        v48 -= v65 != 0;
        goto LABEL_116;
      case 3:
        if (v54 != 3) {
          goto LABEL_124;
        }
        if (*((unsigned char *)a1 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3564, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v89 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v89)
          {
            uint64_t v90 = *a1;
            *((_WORD *)a1 + 6) = v89 + 1;
            v64[1] = *(unsigned char *)(v90 + v89);
            goto LABEL_104;
          }
        }
        *((unsigned char *)a1 + 15) = 1;
LABEL_104:
        if (*((unsigned char *)a1 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3565, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v91 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v91)
          {
            uint64_t v92 = *a1;
            *((_WORD *)a1 + 6) = v91 + 1;
            v64[2] = *(unsigned char *)(v92 + v91);
            goto LABEL_110;
          }
        }
        *((unsigned char *)a1 + 15) = 1;
LABEL_110:
        if (*((unsigned char *)a1 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3566, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v93 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v93)
          {
            uint64_t v94 = *a1;
            *((_WORD *)a1 + 6) = v93 + 1;
            v64[3] = *(unsigned char *)(v94 + v93);
            goto LABEL_116;
          }
        }
        *((unsigned char *)a1 + 15) = 1;
        goto LABEL_116;
      case 4:
      case 7:
        if (*((unsigned char *)a1 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3540, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v66 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v66)
          {
            uint64_t v67 = *a1;
            *((_WORD *)a1 + 6) = v66 + 1;
            v64[1] = *(unsigned char *)(v67 + v66);
            goto LABEL_65;
          }
        }
        *((unsigned char *)a1 + 15) = 1;
LABEL_65:
        if (*((unsigned char *)a1 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3541, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v68 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v68)
          {
            uint64_t v69 = *a1;
            *((_WORD *)a1 + 6) = v68 + 1;
            v64[2] = *(unsigned char *)(v69 + v68);
            goto LABEL_71;
          }
        }
        *((unsigned char *)a1 + 15) = 1;
LABEL_71:
        v64[3] = v54 - 2;
        if (v54 < 2)
        {
LABEL_124:
          char v47 = 0;
          uint64_t v95 = 24;
          goto LABEL_125;
        }
        if ((_BYTE)v54 != 2)
        {
          int v70 = sub_100022FE8((v54 - 2));
          *((void *)v64 + 1) = v70;
          if (v70)
          {
            if (*((unsigned char *)a1 + 14) != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3552, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
            unsigned int v71 = v70;
            uint64_t v122 = *a1;
            uint64_t v72 = *((unsigned __int16 *)a1 + 6);
            uint64_t v73 = v64[3];
            if (*((unsigned char *)a1 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
              int v74 = 0;
            }
            else
            {
              int v74 = *((unsigned __int16 *)a1 + 5) - v72;
            }
            int v75 = v64[3];
            if (v74 < v75) {
              goto LABEL_94;
            }
            if (v73)
            {
              uint64_t v86 = (char *)(v122 + v72);
              uint64_t v87 = &v71[v73];
              do
              {
                char v88 = *v86++;
                *v71++ = v88;
              }
              while (v71 < v87);
              LOWORD(v75) = v64[3];
            }
            *((_WORD *)a1 + 6) += v75;
            goto LABEL_100;
          }
          char v47 = 0;
LABEL_123:
          uint64_t v95 = 129;
          goto LABEL_125;
        }
        *((void *)v64 + 1) = 0;
LABEL_116:
        ++v16;
        if (++v48 >= v14)
        {
          uint64_t v95 = 0;
          char v47 = 1;
          goto LABEL_125;
        }
        break;
      case 5:
        if (v54 != 1) {
          goto LABEL_124;
        }
        goto LABEL_59;
      case 6:
        if (!v54) {
          goto LABEL_124;
        }
LABEL_59:
        if (*((unsigned char *)a1 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3586, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v76 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) > v76)
          {
            uint64_t v77 = *a1;
            *((_WORD *)a1 + 6) = v76 + 1;
            v64[1] = *(unsigned char *)(v77 + v76);
            goto LABEL_80;
          }
        }
        *((unsigned char *)a1 + 15) = 1;
LABEL_80:
        LOBYTE(v54) = v54 - 1;
LABEL_81:
        if (!(_BYTE)v54) {
          goto LABEL_116;
        }
        v64[3] = v54;
        uint64_t v78 = sub_100022FE8(v54);
        *((void *)v64 + 1) = v78;
        if (v78)
        {
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3596, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          uint64_t v79 = v78;
          uint64_t v80 = *a1;
          uint64_t v81 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned char *)a1 + 15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
            int v82 = 0;
          }
          else
          {
            int v82 = *((unsigned __int16 *)a1 + 5) - v81;
          }
          if (v82 >= v54)
          {
            uint64_t v83 = (char *)(v80 + v81);
            uint64_t v84 = &v79[v54];
            do
            {
              char v85 = *v83++;
              *v79++ = v85;
            }
            while (v79 < v84);
            *((_WORD *)a1 + 6) += v54;
            uint64_t v17 = v124;
            goto LABEL_116;
          }
LABEL_94:
          *((unsigned char *)a1 + 15) = 1;
LABEL_100:
          uint64_t v17 = v124;
          goto LABEL_116;
        }
        char v47 = 0;
        uint64_t v95 = 129;
        uint64_t v17 = v124;
LABEL_125:
        if (*((unsigned char *)a1 + 15))
        {
LABEL_126:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"ParseCaps: length error", v104, v105, v106, v107, v108, v109, v110, v121);
            uint64_t v111 = sub_100050B4C(3u);
            if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          uint64_t v95 = 17;
LABEL_130:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Caps not parsed correctly - good: %d error: 0x%2x", v112, v113, v114, v115, v116, v117, v118, v16);
            unsigned int v119 = sub_100050B4C(3u);
            if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          sub_100134AB4(v17, v16);
        }
        else
        {
          if ((v47 & 1) == 0) {
            goto LABEL_130;
          }
          uint64_t v95 = 0;
          *a3 = v14;
        }
        return v95;
      default:
        goto LABEL_81;
    }
  }
  *((unsigned char *)a1 + 15) = 1;
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_42:
  unsigned int v54 = 0;
  *((unsigned char *)a1 + 15) = 1;
  goto LABEL_43;
}

void sub_10013ACC4(uint64_t a1, unsigned __int8 *a2, int a3)
{
  unsigned __int8 v75 = 0;
  if (!a2)
  {
    uint64_t v73 = "data";
    goto LABEL_47;
  }
  if (!a3)
  {
    uint64_t v73 = "(dataLen) > 0";
LABEL_47:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 5009, v73);
  }
  uint64_t v76 = a2;
  __int16 v77 = a3;
  __int16 v80 = 1;
  __int16 v78 = a3;
  unsigned int v4 = *a2;
  uint64_t v5 = v4 >> 4;
  if (a3 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Error parsing AVDTP Signal header", v6, v7, v8, v9, v10, v11, v12, v74);
      uint64_t v13 = sub_100050B4C(3u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_7;
  }
  __int16 v79 = 2;
  unsigned __int8 v75 = a2[1];
  uint64_t v14 = v4 & 3;
  if ((v4 & 3) != 0) {
    sub_100141398(a1, v4 >> 4);
  }
  if (sub_100058654())
  {
    uint64_t v21 = sub_10025B4D4((uint64_t)&v75, 1, v15, v16, v17, v18, v19, v20);
    sub_100056E24((uint64_t)"AVDTP receive %s msgType:%d transaction:%d)\n", v22, v23, v24, v25, v26, v27, v28, v21);
    uint64_t v29 = sub_100050B4C(3u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v82 = v30;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v31 = sub_10013B138;
  switch(v75)
  {
    case 1u:
      goto LABEL_34;
    case 2u:
      uint64_t v32 = sub_10013B6A8;
      goto LABEL_33;
    case 3u:
      uint64_t v32 = sub_10013BB80;
      goto LABEL_33;
    case 4u:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013C280;
      goto LABEL_33;
    case 5u:
      uint64_t v32 = sub_10013C6A4;
      goto LABEL_33;
    case 6u:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013CC18;
      goto LABEL_33;
    case 7u:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013D19C;
      goto LABEL_33;
    case 8u:
      uint64_t v32 = sub_10013D6CC;
      goto LABEL_33;
    case 9u:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013DBF4;
      goto LABEL_33;
    case 0xAu:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013E258;
      goto LABEL_33;
    case 0xBu:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013E7A4;
      goto LABEL_33;
    case 0xCu:
      uint64_t v32 = sub_10013EF90;
      goto LABEL_33;
    case 0xDu:
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013EBE8;
      goto LABEL_33;
    default:
      if (v75 != 254)
      {
        if (v75 == 255)
        {
          if (v14)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Got general reject message", v33, v34, v35, v36, v37, v38, v39, v74);
              uint64_t v40 = sub_100050B4C(3u);
              if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v41 = sub_100050714();
                *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                int v82 = v41;
                _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            return;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Unrecognized command %d!", v65, v66, v67, v68, v69, v70, v71, v75);
            uint64_t v72 = sub_100050B4C(3u);
            if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR)) {
LABEL_41:
            }
              sub_100744F6C();
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unrecognized command %d!", v57, v58, v59, v60, v61, v62, v63, v75);
          uint64_t v64 = sub_100050B4C(3u);
          if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
            goto LABEL_41;
          }
        }
LABEL_7:
        sub_100141884(a1, v5, v75);
        return;
      }
      uint64_t v32 = (uint64_t (*)(unsigned int, uint64_t, uint64_t, unsigned int))sub_10013E108;
LABEL_33:
      uint64_t v31 = v32;
LABEL_34:
      if (v31(a1, (uint64_t)&v76, v5, v14))
      {
        if (sub_100058654())
        {
          uint64_t v48 = sub_10025B4D4((uint64_t)&v75, 1, v42, v43, v44, v45, v46, v47);
          sub_100056E24((uint64_t)"Error on receipt (%s) - %d", v49, v50, v51, v52, v53, v54, v55, v48);
          uint64_t v56 = sub_100050B4C(3u);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      return;
  }
}

uint64_t sub_10013B138(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received DISCOVER - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v70 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a2) {
    sub_10025B8C0();
  }
  unsigned __int16 v68 = 0;
  if (sub_100134C6C(a1, &v68)) {
    sub_10025B8C0();
  }
  if (a4)
  {
    if (a4 != 3)
    {
      if (a4 != 2)
      {
LABEL_16:
        LOBYTE(a2) = 0;
        return a2;
      }
      if (*(unsigned char *)(a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        goto LABEL_16;
      }
      __int16 v25 = *(_WORD *)(a2 + 10) - *(_WORD *)(a2 + 12);
      int v26 = (__int16)(v25 + ((unsigned __int16)(v25 & 0x8000) >> 15)) >> 1;
      if (!(_BYTE)v26) {
        goto LABEL_16;
      }
      uint64_t v27 = (char *)sub_100022FE8(4* ((__int16)(v25 + ((unsigned __int16)(v25 & 0x8000) >> 15)) >> 1));
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = 0;
        do
        {
          if (*(unsigned char *)(a2 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3375, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (*(unsigned char *)(a2 + 15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_61:
            *(unsigned char *)(a2 + 15) = 1;
            a2 = 17;
            goto LABEL_62;
          }
          unsigned int v30 = *(unsigned __int16 *)(a2 + 10);
          uint64_t v31 = *(unsigned __int16 *)(a2 + 12);
          if (v30 <= v31) {
            goto LABEL_61;
          }
          uint64_t v32 = *(void *)a2;
          *(_WORD *)(a2 + 12) = v31 + 1;
          unsigned __int8 v33 = *(unsigned char *)(v32 + v31);
          uint64_t v34 = &v28[v29];
          v34[2] = v33 >> 2;
          v34[3] = (v33 & 2) != 0;
          if (v30 <= (int)v31 + 1) {
            goto LABEL_61;
          }
          *(_WORD *)(a2 + 12) = v31 + 2;
          char v35 = *(unsigned char *)(v32 + v31 + 1);
          *uint64_t v34 = v35 & 0xF0;
          v34[1] = (v35 & 8) != 0;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"seid %2d - inUse %B - mediaType %d - dir %s", v36, v37, v38, v39, v40, v41, v42, v34[2]);
            uint64_t v43 = sub_100050B4C(3u);
            if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v44 = sub_100050714();
              *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
              uint64_t v70 = v44;
              _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          v29 += 4;
        }
        while (4 * v26 != v29);
        if (*(unsigned char *)(a2 + 15)) {
          a2 = 17;
        }
        else {
          a2 = 0;
        }
LABEL_62:
        (*(void (**)(uint64_t, void, char *, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 24))(a3, v68, v28, v26, a2);
        uint64_t v57 = v28;
        goto LABEL_54;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Error - out of memory", v59, v60, v61, v62, v63, v64, v65, v67);
        uint64_t v66 = sub_100050B4C(3u);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      LOBYTE(a2) = -127;
      return a2;
    }
    if (*(unsigned char *)(a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3403, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v45 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v45)
      {
        uint64_t v46 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v45 + 1;
        char v47 = *(unsigned char *)(v46 + v45);
        if (v47) {
          LOBYTE(a2) = v47;
        }
        else {
          LOBYTE(a2) = 24;
        }
        goto LABEL_47;
      }
    }
    *(unsigned char *)(a2 + 15) = 1;
    LOBYTE(a2) = 17;
LABEL_47:
    (*(void (**)(uint64_t, void, void, void, void))(*(void *)(qword_100A02070 + 24) + 24))(a3, v68, 0, 0, a2);
    return a2;
  }
  uint64_t v17 = *(void *)qword_100A02070;
  uint64_t v18 = (char *)sub_100022FE8(4 * *(unsigned __int8 *)(qword_100A02070 + 96));
  uint64_t v19 = (uint64_t)v18;
  if (v18)
  {
    uint64_t v20 = *(unsigned __int8 *)(qword_100A02070 + 96);
    if (*(unsigned char *)(qword_100A02070 + 96))
    {
      unsigned __int8 v21 = 0;
      uint64_t v22 = (unsigned __int8 *)(v17 + 29);
      do
      {
        char v23 = *(v22 - 4);
        if (v23)
        {
          uint64_t v24 = &v18[4 * v21];
          *(_WORD *)uint64_t v24 = *(_WORD *)(v22 - 3);
          v24[2] = v23;
          _OWORD v24[3] = *v22 >= *(v22 - 1);
          ++v21;
        }
        v22 += 40;
        --v20;
      }
      while (v20);
      LODWORD(a2) = 0;
    }
    else
    {
      LODWORD(a2) = 0;
      unsigned __int8 v21 = 0;
    }
  }
  else
  {
    unsigned __int8 v21 = 0;
    LODWORD(a2) = 129;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Returning %d endpoints", v48, v49, v50, v51, v52, v53, v54, v21);
    uint64_t v55 = sub_100050B4C(3u);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v56 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v70 = v56;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_100141B38(a1, a3, v19, v21, a2);
  if (v19)
  {
    uint64_t v57 = (void *)v19;
LABEL_54:
    sub_100023010(v57);
  }
  return a2;
}

uint64_t sub_10013B6A8(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6 = a2;
  if (!a2) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received GET CAPS - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  unsigned __int16 v60 = 0;
  if (sub_100134C6C(a1, &v60)) {
    sub_10025B8C0();
  }
  if (!a4)
  {
    if (*(unsigned char *)(v6 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3672, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(v6 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v21 = *(unsigned __int16 *)(v6 + 12);
      if (*(unsigned __int16 *)(v6 + 10) > v21)
      {
        uint64_t v22 = *(void *)v6;
        *(_WORD *)(v6 + 12) = v21 + 1;
        uint64_t v23 = *(unsigned __int8 *)(v22 + v21) >> 2;
        if (*(unsigned char *)(qword_100A02070 + 96))
        {
          uint64_t v24 = 0;
          __int16 v25 = (unsigned __int8 *)(*(void *)qword_100A02070 + 31);
          while (*(v25 - 6) != v23)
          {
            v25 += 40;
            if (*(unsigned __int8 *)(qword_100A02070 + 96) == ++v24) {
              goto LABEL_36;
            }
          }
          if (v24 != 255)
          {
            if (*(v25 - 4) || !*(void *)(v25 - 23) || *(v25 - 3) == 1)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Returning Capabilities", v34, v35, v36, v37, v38, v39, v40, v59);
                uint64_t v41 = sub_100050B4C(3u);
                if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v42 = sub_100050714();
                  *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                  *(void *)&uint8_t buf[4] = v42;
                  _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              if (*(v25 - 1))
              {
                uint64_t v43 = 0;
                unint64_t v44 = 0;
                do
                {
                  sub_10013F510(a1, *(void *)(v25 - 31) + v43);
                  ++v44;
                  unint64_t v45 = *(v25 - 1);
                  v43 += 16;
                }
                while (v44 < v45);
              }
              else
              {
                LODWORD(v45) = 0;
              }
              uint64_t v55 = *(unsigned __int8 **)(v25 - 31);
              unsigned int v56 = a1;
              unsigned int v57 = a3;
            }
            else
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"2-Play Source: Returning Config as Caps", v46, v47, v48, v49, v50, v51, v52, v59);
                uint64_t v53 = sub_100050B4C(3u);
                if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v54 = sub_100050714();
                  *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                  *(void *)&uint8_t buf[4] = v54;
                  _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              uint64_t v55 = *(unsigned __int8 **)(v25 - 23);
              LODWORD(v45) = *v25;
              unsigned int v56 = a1;
              unsigned int v57 = a3;
            }
            sub_10014267C(v56, 2u, v57, v55, v45, 0);
            goto LABEL_57;
          }
        }
LABEL_36:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Get caps received for unknown seid %d", v26, v27, v28, v29, v30, v31, v32, v23);
          unsigned __int8 v33 = sub_100050B4C(3u);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        LODWORD(v6) = 18;
LABEL_34:
        sub_10014267C(a1, 2u, a3, 0, 0, v6);
        return v6;
      }
    }
    *(unsigned char *)(v6 + 15) = 1;
    LODWORD(v6) = 17;
    goto LABEL_34;
  }
  if (a4 == 3)
  {
    if (*(unsigned char *)(v6 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3655, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(v6 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v18 = *(unsigned __int16 *)(v6 + 12);
      if (*(unsigned __int16 *)(v6 + 10) > v18)
      {
        uint64_t v19 = *(void *)v6;
        *(_WORD *)(v6 + 12) = v18 + 1;
        char v20 = *(unsigned char *)(v19 + v18);
        if (v20) {
          LOBYTE(v6) = v20;
        }
        else {
          LOBYTE(v6) = 24;
        }
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v6 + 15) = 1;
    LOBYTE(v6) = 17;
LABEL_26:
    (*(void (**)(uint64_t, void, void, void, void, void))(*(void *)(qword_100A02070 + 24) + 32))(a3, v60, *(unsigned __int8 *)(qword_100A02070 + 99), 0, 0, v6);
    return v6;
  }
  if (a4 != 2)
  {
LABEL_57:
    LOBYTE(v6) = 0;
    return v6;
  }
  *(void *)std::__fs::filesystem::path buf = 0;
  unsigned __int8 v61 = 0;
  uint64_t v6 = sub_10013A1C4((uint64_t *)v6, (void **)buf, &v61);
  unsigned int v17 = v61;
  (*(void (**)(uint64_t, void, void, void, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 32))(a3, v60, *(unsigned __int8 *)(qword_100A02070 + 99), *(void *)buf, v61, v6);
  sub_100134AB4((void **)buf, v17);
  return v6;
}

uint64_t sub_10013BB80(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received SET CONFIG - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v81 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a2) {
    sub_10025B8C0();
  }
  unsigned __int16 v77 = 0;
  if (!sub_100134C6C(a1, &v77)
    || !sub_100058654()
    || (sub_100056E24((uint64_t)"AVDTP did not find a2dp handle from CID with result %!", v17, v18, v19, v20, v21, v22, v23, 0), uint64_t v24 = sub_100050B4C(3u), !os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)))
  {
    if (a4) {
      goto LABEL_13;
    }
LABEL_47:
    if (*(unsigned char *)(a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3804, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      int v43 = *(unsigned __int8 *)(a2 + 14);
      *(unsigned char *)(a2 + 15) = 1;
      if (v43 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3805, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
    }
    else
    {
      uint64_t v44 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v44)
      {
        uint64_t v45 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v44 + 1;
        uint64_t v46 = *(unsigned __int8 *)(v45 + v44) >> 2;
        if (*(unsigned __int16 *)(a2 + 10) > (v44 + 1))
        {
          uint64_t v47 = *(void *)a2;
          *(_WORD *)(a2 + 12) = v44 + 2;
          uint64_t v48 = *(unsigned __int8 *)(v47 + v44 + 1) >> 2;
          goto LABEL_57;
        }
LABEL_56:
        uint64_t v48 = 0;
        *(unsigned char *)(a2 + 15) = 1;
LABEL_57:
        __int16 v79 = 0;
        unsigned __int8 v78 = 0;
        unsigned int v49 = sub_10013A1C4((uint64_t *)a2, &v79, &v78);
        if (v49)
        {
          if (v49 == 17) {
            uint64_t v31 = 35;
          }
          else {
            uint64_t v31 = v49;
          }
        }
        else
        {
          if (!*(unsigned char *)(qword_100A02070 + 96)) {
            goto LABEL_67;
          }
          uint64_t v50 = 0;
          uint64_t v51 = *(void *)qword_100A02070 + 32;
          while (*(unsigned __int8 *)(v51 - 7) != v46)
          {
            ++v50;
            v51 += 40;
            if (*(unsigned __int8 *)(qword_100A02070 + 96) == v50) {
              goto LABEL_67;
            }
          }
          if (v50 != 255)
          {
            if (*(unsigned __int8 *)(v51 - 3) >= *(unsigned __int8 *)(v51 - 4))
            {
              uint64_t v31 = 19;
            }
            else
            {
              if (*(void *)(v51 - 16)) {
                goto LABEL_71;
              }
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"In Recv_SetConfig, allocating endpoint", v52, v53, v54, v55, v56, v57, v58, v76);
                uint64_t v59 = sub_100050B4C(3u);
                if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
                {
                  unsigned __int16 v60 = sub_100050714();
                  *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                  uint64_t v81 = v60;
                  _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              uint64_t v61 = sub_10013799C(v48);
              if (!v61)
              {
LABEL_71:
                uint64_t v31 = 129;
              }
              else
              {
                uint64_t v62 = v61;
                uint64_t v63 = qword_100A02070;
                if (qword_100A02070 && *(unsigned char *)(qword_100A02070 + 98))
                {
                  uint64_t v64 = 0;
                  uint64_t v65 = (unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + 38);
                  while (1)
                  {
                    int v66 = *v65;
                    v65 += 32;
                    if (v66 == a1) {
                      break;
                    }
                    if (*(unsigned __int8 *)(qword_100A02070 + 98) == ++v64) {
                      goto LABEL_82;
                    }
                  }
                  *(unsigned char *)(v61 + 135) = v64;
                  if ((_BYTE)v64 != 0xFF)
                  {
                    uint64_t v67 = *(unsigned __int8 *)(v63 + 96);
                    if (*(unsigned char *)(v63 + 96))
                    {
                      uint64_t v68 = 0;
                      uint64_t v69 = (unsigned __int8 *)(*(void *)v63 + 25);
                      while (1)
                      {
                        int v70 = *v69;
                        v69 += 40;
                        if (v70 == v46) {
                          break;
                        }
                        if (v67 == ++v68) {
                          goto LABEL_89;
                        }
                      }
                    }
                    else
                    {
LABEL_89:
                      LOBYTE(v68) = -1;
                    }
                    *(unsigned char *)(v61 + 136) = v68;
                    uint64_t v71 = v79;
                    *(void *)(v51 - 16) = v79;
                    uint64_t v72 = (unsigned char *)v51;
                    uint64_t v73 = v78;
                    *uint64_t v72 = v78;
                    uint64_t v74 = sub_100137B04(v61);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, void *, uint64_t))(*(void *)(qword_100A02070 + 24) + 40))(a3, v77, v46, v48, v74, v71, v73);
                    return 0;
                  }
                }
                else
                {
LABEL_82:
                  *(unsigned char *)(v61 + 135) = -1;
                }
                *(unsigned char *)(v61 + 132) = 0;
                *(_DWORD *)uint64_t v61 = 0;
                *(_WORD *)(v61 + 128) = 0;
                sub_100114F70(0);
                *(unsigned char *)(v62 + 137) = -1;
                *(_DWORD *)(v62 + 133) = -65281;
                uint64_t v31 = 128;
              }
            }
          }
          else
          {
LABEL_67:
            uint64_t v31 = 18;
          }
        }
        sub_100134AB4(&v79, v78);
        sub_100142A14(a1, 3, a3, 0, v31);
        return v31;
      }
      *(unsigned char *)(a2 + 15) = 1;
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    uint64_t v46 = 0;
    goto LABEL_56;
  }
  sub_100745764();
  if (!a4) {
    goto LABEL_47;
  }
LABEL_13:
  if (a4 != 3)
  {
    if (a4 == 2)
    {
      uint64_t v25 = sub_100141058(a3, a1);
      uint64_t v26 = qword_100A02070;
      if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(v25 - 1)
        && (uint64_t v27 = *(void *)(qword_100A02070 + 8)) != 0
        && (uint64_t v28 = *(unsigned __int8 *)(v27 + 144 * (unsigned __int16)(v25 - 1) + 136), v28 != 255)
        && (uint64_t v29 = *(void *)qword_100A02070) != 0)
      {
        sub_100139A70(v27 + 144 * (unsigned __int16)(v25 - 1), 1);
        uint64_t v30 = v29 + 40 * v28;
        sub_100134AB4((void **)(v30 + 8), *(unsigned __int8 *)(v30 + 31));
        uint64_t v31 = 0;
        *(unsigned char *)(v30 + 31) = *(unsigned char *)(v30 + 32);
        *(void *)(v30 + 8) = *(void *)(v30 + 16);
        *(void *)(v30 + 16) = 0;
        *(unsigned char *)(v30 + 32) = 0;
        ++*(unsigned char *)(v30 + 29);
        *(unsigned char *)(v27 + 144 * (unsigned __int16)(v25 - 1) + 137) = *(unsigned char *)(v30 + 24);
        *(unsigned char *)(v30 + 24) = v25 - 1;
        uint64_t v26 = qword_100A02070;
      }
      else
      {
        uint64_t v31 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)(v26 + 24) + 48))(a3, v25, 0, v31);
      return v31;
    }
    return 0;
  }
  uint64_t v32 = sub_100141058(a3, a1);
  if (v32)
  {
    if (*(unsigned char *)(a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3777, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      int v33 = *(unsigned __int8 *)(a2 + 14);
      *(unsigned char *)(a2 + 15) = 1;
      if (v33 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3778, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
    }
    else
    {
      uint64_t v35 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v35)
      {
        uint64_t v36 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v35 + 1;
        if (*(unsigned __int16 *)(a2 + 10) > (v35 + 1))
        {
          unsigned int v37 = *(unsigned __int8 *)(v36 + v35);
          uint64_t v38 = *(void *)a2;
          *(_WORD *)(a2 + 12) = v35 + 2;
          unsigned int v39 = *(unsigned __int8 *)(v38 + v35 + 1);
LABEL_34:
          if (v39) {
            uint64_t v31 = v39;
          }
          else {
            uint64_t v31 = 24;
          }
          if (v39) {
            uint64_t v34 = v37;
          }
          else {
            uint64_t v34 = 0;
          }
          goto LABEL_40;
        }
LABEL_33:
        unsigned int v37 = 0;
        *(unsigned char *)(a2 + 15) = 1;
        unsigned int v39 = 17;
        goto LABEL_34;
      }
      *(unsigned char *)(a2 + 15) = 1;
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    goto LABEL_33;
  }
  uint64_t v34 = 0;
  uint64_t v31 = 1;
LABEL_40:
  uint64_t v40 = qword_100A02070;
  if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(v32 - 1))
  {
    uint64_t v41 = *(void *)(qword_100A02070 + 8);
    if (v41)
    {
      if (*(unsigned __int8 *)(v41 + 144 * (unsigned __int16)(v32 - 1) + 136) != 255 && *(void *)qword_100A02070)
      {
        uint64_t v42 = *(void *)qword_100A02070 + 40 * *(unsigned __int8 *)(v41 + 144 * (unsigned __int16)(v32 - 1) + 136);
        sub_100134AB4((void **)(v42 + 16), *(unsigned __int8 *)(v42 + 32));
        *(unsigned char *)(v42 + 32) = 0;
        uint64_t v40 = qword_100A02070;
      }
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 + 24) + 48))(a3, v32, v34, v31);
  return v31;
}

uint64_t sub_10013C280(int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v47 = 0;
  unsigned __int8 v46 = 0;
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received GET CONFIG - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      unsigned int v49 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a4)
    {
LABEL_9:
      if (a4 != 3)
      {
        if (a4 == 2)
        {
          uint64_t v17 = sub_100141058(a3, a1);
          if (v17)
          {
            a2 = sub_10013A1C4((uint64_t *)a2, &v47, &v46);
            uint64_t v18 = v47;
            uint64_t v19 = v46;
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v18 = 0;
            a2 = 18;
          }
          (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 56))(a3, v17, v18, v19, a2);
          sub_100134AB4(&v47, v19);
        }
        else
        {
          LOBYTE(a2) = 0;
        }
        return a2;
      }
      uint64_t v20 = sub_100141058(a3, a1);
      if (v20)
      {
        if (*(unsigned char *)(a2 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4055, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        if (*(unsigned char *)(a2 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        }
        else
        {
          uint64_t v42 = *(unsigned __int16 *)(a2 + 12);
          if (*(unsigned __int16 *)(a2 + 10) > v42)
          {
            uint64_t v43 = *(void *)a2;
            *(_WORD *)(a2 + 12) = v42 + 1;
            char v44 = *(unsigned char *)(v43 + v42);
            if (v44) {
              LOBYTE(a2) = v44;
            }
            else {
              LOBYTE(a2) = 24;
            }
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + 15) = 1;
        LOBYTE(a2) = 17;
      }
      else
      {
        LOBYTE(a2) = 1;
      }
LABEL_44:
      (*(void (**)(uint64_t, uint64_t, void, void, void))(*(void *)(qword_100A02070 + 24) + 56))(a3, v20, 0, 0, a2);
      return a2;
    }
  }
  if (*(unsigned char *)(a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4070, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
  }
  else
  {
    uint64_t v21 = *(unsigned __int16 *)(a2 + 12);
    if (*(unsigned __int16 *)(a2 + 10) > v21)
    {
      uint64_t v22 = *(void *)a2;
      *(_WORD *)(a2 + 12) = v21 + 1;
      int v23 = *(unsigned __int8 *)(v22 + v21) >> 2;
      if (!*(unsigned char *)(qword_100A02070 + 96)) {
        goto LABEL_47;
      }
      uint64_t v24 = 0;
      uint64_t v25 = *(void *)qword_100A02070;
      while (*(unsigned __int8 *)(v25 + 25) != v23)
      {
        ++v24;
        v25 += 40;
        if (*(unsigned __int8 *)(qword_100A02070 + 96) == v24) {
          goto LABEL_47;
        }
      }
      if (v24 != 255)
      {
        LODWORD(a2) = 0;
        int v26 = 1;
      }
      else
      {
LABEL_47:
        int v26 = 0;
        uint64_t v25 = 0;
        LODWORD(a2) = 18;
      }
      goto LABEL_32;
    }
  }
  int v23 = 0;
  int v26 = 0;
  uint64_t v25 = 0;
  *(unsigned char *)(a2 + 15) = 1;
  LODWORD(a2) = 17;
LABEL_32:
  if (sub_100058654())
  {
    uint64_t v27 = sub_1001411E8(v23, a1);
    sub_100137B04(v27);
    sub_100056E24((uint64_t)"AVDT_GetConfiguration_Rsp\n\tTransaction=%d\n\tStreamHandle=%d\n\tError=0x%.2x\n\tConfigParams=\n", v28, v29, v30, v31, v32, v33, v34, a3);
    uint64_t v35 = sub_100050B4C(3u);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v36 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      unsigned int v49 = v36;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v26)
  {
    unsigned int v37 = *(unsigned __int8 **)(v25 + 8);
    unsigned int v38 = *(unsigned __int8 *)(v25 + 31);
    unsigned int v39 = a1;
    unsigned int v40 = a3;
    int v41 = 0;
  }
  else
  {
    unsigned int v39 = a1;
    unsigned int v40 = a3;
    unsigned int v37 = 0;
    unsigned int v38 = 0;
    int v41 = a2;
  }
  sub_10014267C(v39, 4u, v40, v37, v38, v41);
  return a2;
}

uint64_t sub_10013C6A4(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int16 v60 = 0;
  unsigned __int8 v59 = 0;
  if (!dword_100A197BC) {
    return 49;
  }
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received RECONFIGURE - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v17 = sub_100050B4C(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v62 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a2) {
    sub_10025B8C0();
  }
  if (dword_100A197BC && (uint64_t v18 = *(unsigned __int8 *)(qword_100A02070 + 98), *(unsigned char *)(qword_100A02070 + 98)))
  {
    uint64_t v19 = (unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + 38);
    while (1)
    {
      int v20 = *v19;
      v19 += 32;
      if (v20 == a1) {
        break;
      }
      if (!--v18) {
        goto LABEL_16;
      }
    }
  }
  else
  {
LABEL_16:
    sub_10025B8C0();
  }
  if (!a4)
  {
    if (!*(void *)(*(void *)(qword_100A02070 + 24) + 136))
    {
      uint64_t v16 = 25;
      goto LABEL_76;
    }
    if (*(unsigned char *)(a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3970, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v35 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v35)
      {
        uint64_t v36 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v35 + 1;
        int v37 = *(unsigned __int8 *)(v36 + v35) >> 2;
        goto LABEL_45;
      }
    }
    int v37 = 0;
    *(unsigned char *)(a2 + 15) = 1;
LABEL_45:
    uint64_t v16 = sub_10013A1C4((uint64_t *)a2, (void **)&v60, &v59);
    if (!v16)
    {
      uint64_t v38 = sub_1001411E8(v37, a1);
      if (v38
        && (v39 = v38, uint64_t v40 = *(unsigned __int8 *)(v38 + 136), v40 != 255)
        && (uint64_t v41 = *(void *)qword_100A02070) != 0)
      {
        if (*(unsigned char *)(v38 + 134) == 3)
        {
          uint64_t v42 = v41 + 40 * *(unsigned __int8 *)(v38 + 136);
          uint64_t v44 = *(void *)(v42 + 16);
          uint64_t v43 = (void **)(v42 + 16);
          if (!v44)
          {
            uint64_t v45 = v60;
            uint64_t v46 = v59;
            if (!sub_1001395F8(v60, v59, *(void *)(v41 + 40 * *(unsigned __int8 *)(v38 + 136) + 8), *(unsigned __int8 *)(v41 + 40 * *(unsigned __int8 *)(v38 + 136) + 31), v43, (unsigned char *)(v41 + 40 * *(unsigned __int8 *)(v38 + 136) + 32)))
            {
              uint64_t v57 = *(void (**)(uint64_t, uint64_t, unsigned __int8 *, uint64_t))(*(void *)(qword_100A02070 + 24)
                                                                                        + 136);
              uint64_t v58 = sub_100137B04(v39);
              v57(a3, v58, v45, v46);
              uint64_t v16 = 0;
              goto LABEL_77;
            }
          }
          uint64_t v16 = 129;
        }
        else
        {
          uint64_t v16 = 49;
        }
        uint64_t v55 = v41 + 40 * v40;
        sub_100134AB4((void **)(v55 + 16), *(unsigned __int8 *)(v55 + 32));
        *(unsigned char *)(v55 + 32) = 0;
      }
      else
      {
        uint64_t v16 = 20;
      }
    }
LABEL_76:
    sub_100142A14(a1, 5, a3, 0, v16);
    LODWORD(v46) = v59;
LABEL_77:
    sub_100134AB4((void **)&v60, v46);
    return v16;
  }
  if (a4 != 3)
  {
    if (a4 != 2) {
      return 0;
    }
    uint64_t v21 = sub_100141058(a3, a1);
    uint64_t v22 = v21;
    uint64_t v23 = qword_100A02070;
    if (v21)
    {
      if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(v21 - 1)
        && (uint64_t v24 = *(void *)(qword_100A02070 + 8)) != 0
        && (uint64_t v25 = *(unsigned __int8 *)(v24 + 144 * (unsigned __int16)(v21 - 1) + 136), v25 != 255)
        && *(void *)qword_100A02070)
      {
        uint64_t v26 = *(void *)qword_100A02070 + 40 * v25;
        sub_100134AB4((void **)(v26 + 8), *(unsigned __int8 *)(v26 + 31));
        uint64_t v16 = 0;
        uint64_t v27 = *(void *)(v26 + 16);
        *(unsigned char *)(v26 + 31) = *(unsigned char *)(v26 + 32);
        *(void *)(v26 + 8) = v27;
        *(void *)(v26 + 16) = 0;
        *(unsigned char *)(v26 + 32) = 0;
        uint64_t v23 = qword_100A02070;
      }
      else
      {
        uint64_t v16 = 0;
      }
    }
    else
    {
      uint64_t v16 = 1;
    }
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 24) + 144);
    if (v30)
    {
      uint64_t v31 = a3;
      uint64_t v32 = v22;
      uint64_t v33 = 0;
LABEL_73:
      v30(v31, v32, v33, v16);
      return v16;
    }
    return v16;
  }
  uint64_t v28 = sub_100141058(a3, a1);
  if (!v28)
  {
    uint64_t v34 = 0;
    uint64_t v16 = 1;
    goto LABEL_66;
  }
  if (*(unsigned char *)(a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3939, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    int v29 = *(unsigned __int8 *)(a2 + 14);
    *(unsigned char *)(a2 + 15) = 1;
    if (v29 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 3940, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_58;
  }
  uint64_t v47 = *(unsigned __int16 *)(a2 + 12);
  if (*(unsigned __int16 *)(a2 + 10) <= v47)
  {
    *(unsigned char *)(a2 + 15) = 1;
LABEL_58:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    goto LABEL_59;
  }
  uint64_t v48 = *(void *)a2;
  *(_WORD *)(a2 + 12) = v47 + 1;
  if (*(unsigned __int16 *)(a2 + 10) <= (v47 + 1))
  {
LABEL_59:
    unsigned int v49 = 0;
    *(unsigned char *)(a2 + 15) = 1;
    unsigned int v51 = 17;
    goto LABEL_60;
  }
  unsigned int v49 = *(unsigned __int8 *)(v48 + v47);
  uint64_t v50 = *(void *)a2;
  *(_WORD *)(a2 + 12) = v47 + 2;
  unsigned int v51 = *(unsigned __int8 *)(v50 + v47 + 1);
LABEL_60:
  if (v51) {
    uint64_t v16 = v51;
  }
  else {
    uint64_t v16 = 24;
  }
  if (v51) {
    uint64_t v34 = v49;
  }
  else {
    uint64_t v34 = 0;
  }
LABEL_66:
  uint64_t v52 = qword_100A02070;
  if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(v28 - 1))
  {
    uint64_t v53 = *(void *)(qword_100A02070 + 8);
    if (v53)
    {
      if (*(unsigned __int8 *)(v53 + 144 * (unsigned __int16)(v28 - 1) + 136) != 255 && *(void *)qword_100A02070)
      {
        uint64_t v54 = *(void *)qword_100A02070 + 40 * *(unsigned __int8 *)(v53 + 144 * (unsigned __int16)(v28 - 1) + 136);
        sub_100134AB4((void **)(v54 + 16), *(unsigned __int8 *)(v54 + 32));
        *(unsigned char *)(v54 + 32) = 0;
        uint64_t v52 = qword_100A02070;
      }
    }
  }
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 + 24) + 144);
  if (v30)
  {
    uint64_t v31 = a3;
    uint64_t v32 = v28;
    uint64_t v33 = v34;
    goto LABEL_73;
  }
  return v16;
}

uint64_t sub_10013CC18(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received OPEN - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v66 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a4)
    {
LABEL_9:
      if (a4 != 3)
      {
        if (a4 == 2)
        {
          uint64_t v17 = sub_100141058(a3, a1);
          uint64_t v18 = v17;
          uint64_t v19 = qword_100A02070;
          if (!v17)
          {
            uint64_t v44 = 1;
            goto LABEL_43;
          }
          if (*(unsigned __int8 *)(qword_100A02070 + 97) <= (unsigned __int16)(v17 - 1)
            || (uint64_t v20 = *(void *)(qword_100A02070 + 8)) == 0)
          {
            uint64_t v44 = 18;
            goto LABEL_43;
          }
          unsigned int v21 = (unsigned __int16)(v17 - 1);
          uint64_t v22 = v20 + 144 * (unsigned __int16)(v17 - 1);
          if (sub_100058654())
          {
            unsigned int v23 = sub_100137B04(v22);
            sub_100056E24((uint64_t)"CreateMediaTransport(%d)\n", v24, v25, v26, v27, v28, v29, v30, v23);
            uint64_t v31 = sub_100050B4C(3u);
            if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v32 = sub_100050714();
              *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
              int v66 = v32;
              _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          uint64_t v33 = *(unsigned __int8 *)(v20 + 144 * v21 + 135);
          uint64_t v19 = qword_100A02070;
          if (v33 == 255 || (uint64_t v34 = *(void *)(qword_100A02070 + 16)) == 0)
          {
LABEL_24:
            uint64_t v44 = 129;
LABEL_43:
            (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)(v19 + 24) + 64))(a3, v18, 0, v44);
            return v44;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Opening media channel to %:\n", v35, v36, v37, v38, v39, v40, v41, v34 + (v33 << 6) + 28);
            uint64_t v42 = sub_100050B4C(3u);
            if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v43 = sub_100050714();
              *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
              int v66 = v43;
              _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
          }
          if (sub_1001DF7BC((uint64_t)sub_10013FC20, (uint64_t)sub_10013FE34, (uint64_t)sub_100140040, 25, v34 + (v33 << 6) + 28, qword_100A02070 + 64, (_WORD *)(v20 + 144 * v21 + 128), (uint64_t)&unk_10099BC28))
          {
            uint64_t v19 = qword_100A02070;
            goto LABEL_24;
          }
          sub_1001DD4C8(*(unsigned __int16 *)(v20 + 144 * v21 + 128), (uint64_t)sub_100140CC8);
          *(unsigned char *)(v20 + 144 * v21 + 133) = a3;
          sub_100139A70(v22, 2);
        }
        return 0;
      }
      uint64_t v45 = sub_100141058(a3, a1);
      if (*((unsigned char *)a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4147, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v18 = v45;
      if (*((unsigned char *)a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }
      else
      {
        uint64_t v46 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) > v46)
        {
          uint64_t v47 = *a2;
          *((_WORD *)a2 + 6) = v46 + 1;
          unsigned int v48 = *(unsigned __int8 *)(v47 + v46);
LABEL_37:
          if (!v48) {
            unsigned int v48 = 24;
          }
          if (v18) {
            uint64_t v44 = v48;
          }
          else {
            uint64_t v44 = 1;
          }
          uint64_t v19 = qword_100A02070;
          goto LABEL_43;
        }
      }
      *((unsigned char *)a2 + 15) = 1;
      unsigned int v48 = 17;
      goto LABEL_37;
    }
  }
  if (*((unsigned char *)a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4166, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
  }
  else
  {
    uint64_t v49 = *((unsigned __int16 *)a2 + 6);
    if (*((unsigned __int16 *)a2 + 5) > v49)
    {
      uint64_t v50 = *a2;
      *((_WORD *)a2 + 6) = v49 + 1;
      uint64_t v51 = sub_1001411E8(*(unsigned __int8 *)(v50 + v49) >> 2, a1);
      uint64_t v52 = v51;
      if (v51 && *(unsigned char *)(v51 + 134) == 1)
      {
        sub_100139A70(v51, 2);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 72);
        uint64_t v54 = sub_100137B04(v52);
        v53(a3, v54);
        uint64_t v44 = 0;
        if (!*(unsigned char *)(qword_100A02070 + 103)) {
          return v44;
        }
      }
      else
      {
        uint64_t v44 = 49;
      }
      goto LABEL_50;
    }
  }
  uint64_t v52 = 0;
  *((unsigned char *)a2 + 15) = 1;
  uint64_t v44 = 17;
LABEL_50:
  if (sub_100058654())
  {
    sub_100137B04(v52);
    sub_100056E24((uint64_t)"AVDT_Open_Rsp\n\tTransaction=%d\n\tStreamHandle=%d\n\tError=0x%.2x\n", v55, v56, v57, v58, v59, v60, v61, a3);
    uint64_t v62 = sub_100050B4C(3u);
    if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v63 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v66 = v63;
      _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_100141668(a1, 6u, a3, v44);
  return v44;
}

uint64_t sub_10013D19C(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  memset(v50, 0, 124);
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received START - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v49 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a2) {
    sub_10025B8C0();
  }
  unsigned __int8 v47 = 0;
  if (a4)
  {
    if (a4 != 3)
    {
      LOBYTE(v17) = 0;
      if (a4 == 2)
      {
        sub_10014127C(a3, a1, v50, &v47);
        uint64_t v18 = v47;
        if (v47)
        {
          sub_100140FC8((__int16 *)v50, v47, 4);
          uint64_t v17 = 0;
        }
        else
        {
          uint64_t v17 = 1;
        }
        (*(void (**)(uint64_t, _OWORD *, uint64_t, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 104))(a3, v50, v18, 0, v17);
      }
      return v17;
    }
    sub_10014127C(a3, a1, v50, &v47);
    uint64_t v21 = v47;
    if (v47)
    {
      if (*((unsigned char *)a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4233, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*((unsigned char *)a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        int v22 = *((unsigned __int8 *)a2 + 14);
        *((unsigned char *)a2 + 15) = 1;
        if (v22 != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4234, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        goto LABEL_54;
      }
      uint64_t v36 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) <= v36)
      {
        *((unsigned char *)a2 + 15) = 1;
LABEL_54:
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
        int v35 = 0;
        goto LABEL_55;
      }
      uint64_t v37 = *a2;
      *((_WORD *)a2 + 6) = v36 + 1;
      int v35 = *(unsigned __int8 *)(v37 + v36) >> 2;
      if (*((unsigned __int16 *)a2 + 5) <= (v36 + 1))
      {
LABEL_55:
        *((unsigned char *)a2 + 15) = 1;
LABEL_56:
        uint64_t v17 = 24;
        goto LABEL_57;
      }
      uint64_t v38 = *a2;
      *((_WORD *)a2 + 6) = v36 + 2;
      if (*(unsigned __int8 *)(v38 + v36 + 1) == 255)
      {
        uint64_t v17 = 255;
        goto LABEL_57;
      }
      if (!*(unsigned char *)(v38 + v36 + 1)) {
        goto LABEL_56;
      }
      uint64_t v17 = 253;
    }
    else
    {
      int v35 = 0;
      uint64_t v17 = 1;
    }
LABEL_57:
    uint64_t v44 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 104);
    uint64_t v45 = sub_1001412E4(v35, a1);
    v44(a3, v50, v21, v45, v17);
    return v17;
  }
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    unsigned __int8 v19 = 0;
LABEL_16:
    char v20 = 0;
    LOBYTE(v17) = 24;
    goto LABEL_26;
  }
  __int16 v23 = *((_WORD *)a2 + 5);
  __int16 v24 = *((_WORD *)a2 + 6);
  unsigned __int8 v19 = v23 - v24;
  if ((v23 - v24) > 0x3Eu)
  {
    char v20 = 0;
    LOBYTE(v17) = -127;
    goto LABEL_26;
  }
  if (*((_WORD *)a2 + 5) == v24) {
    goto LABEL_16;
  }
  if ((_BYTE)v23 == (_BYTE)v24)
  {
    unsigned __int8 v19 = 0;
    LOBYTE(v17) = 0;
    char v20 = 0;
    goto LABEL_26;
  }
  unint64_t v39 = 0;
  char v20 = 0;
  LOBYTE(v17) = 0;
  while (1)
  {
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4271, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15)) {
      break;
    }
    uint64_t v40 = *((unsigned __int16 *)a2 + 6);
    if (*((unsigned __int16 *)a2 + 5) <= v40) {
      goto LABEL_61;
    }
    uint64_t v41 = *a2;
    *((_WORD *)a2 + 6) = v40 + 1;
    int v42 = *(unsigned __int8 *)(v41 + v40) >> 2;
    uint64_t v43 = sub_1001411E8(v42, a1);
    *((_WORD *)v50 + v39) = sub_100137B04(v43);
    if (!v43)
    {
      LOBYTE(v17) = 18;
LABEL_50:
      unsigned __int8 v19 = ++v39;
      char v20 = v42;
      goto LABEL_51;
    }
    if (*(unsigned char *)(v43 + 134) != 3)
    {
      LOBYTE(v17) = 49;
      goto LABEL_50;
    }
    ++v39;
LABEL_51:
    if (v39 >= v19) {
      goto LABEL_26;
    }
  }
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_61:
  *((unsigned char *)a2 + 15) = 1;
  LOBYTE(v17) = 17;
  unsigned __int8 v19 = v39;
LABEL_26:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDT_Start_Ind\n\tTransaction=%d\n\tStreamHandles=", v25, v26, v27, v28, v29, v30, v31, a3);
    uint64_t v32 = sub_100050B4C(3u);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v33 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v49 = v33;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v34 = qword_100A02070;
  if (*(unsigned __int8 *)(qword_100A02070 + 103) | v17)
  {
    sub_100138434(a1, a3, (__int16 *)v50, v19, v20, v17);
    if (!(_BYTE)v17)
    {
      uint64_t v34 = qword_100A02070;
      goto LABEL_32;
    }
  }
  else
  {
LABEL_32:
    (*(void (**)(uint64_t, _OWORD *, void))(*(void *)(v34 + 24) + 96))(a3, v50, v19);
    LOBYTE(v17) = 0;
  }
  return v17;
}

uint64_t sub_10013D6CC(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received CLOSE - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      int v70 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
LABEL_23:
    if (*(unsigned char *)(a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4385, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v46 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) > v46)
      {
        uint64_t v47 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v46 + 1;
        uint64_t v48 = sub_1001411E8(*(unsigned __int8 *)(v47 + v46) >> 2, a1);
        uint64_t v49 = v48;
        if (v48)
        {
          if (*(unsigned __int8 *)(v48 + 134) - 3 <= 1)
          {
            if (*(_WORD *)(v48 + 128)) {
              sub_100139A70(v48, 5);
            }
            else {
              sub_100138A14(v48);
            }
            uint64_t v61 = qword_100A02070;
            if (!*(unsigned char *)(qword_100A02070 + 103))
            {
              LOBYTE(a2) = 0;
              goto LABEL_47;
            }
            LODWORD(a2) = 0;
            int v51 = 1;
LABEL_42:
            if (sub_100058654())
            {
              sub_100137B04(v49);
              sub_100056E24((uint64_t)"AVDT_Close_Rsp\n\tTransaction=%d\n\tStreamHandle=%d\n\tErrorCode=0x%.2x\n", v52, v53, v54, v55, v56, v57, v58, a3);
              uint64_t v59 = sub_100050B4C(3u);
              if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v60 = sub_100050714();
                *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                int v70 = v60;
                _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
              }
            }
            sub_100141668(a1, 8u, a3, a2);
            if (!v51) {
              return a2;
            }
            uint64_t v61 = qword_100A02070;
LABEL_47:
            uint64_t v62 = *(void (**)(uint64_t, uint64_t))(*(void *)(v61 + 24) + 80);
            uint64_t v63 = sub_100137B04(v49);
            v62(a3, v63);
            return a2;
          }
          int v50 = 49;
        }
        else
        {
          int v50 = 18;
        }
LABEL_41:
        int v51 = 0;
        LODWORD(a2) = v50;
        goto LABEL_42;
      }
    }
    uint64_t v49 = 0;
    *(unsigned char *)(a2 + 15) = 1;
    int v50 = 17;
    goto LABEL_41;
  }
  sub_10025B8C0();
  if (!a4) {
    goto LABEL_23;
  }
LABEL_9:
  if (a4 == 3)
  {
    uint64_t v45 = sub_100141058(a3, a1);
    if (v45)
    {
      if (*(unsigned char *)(a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4367, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*(unsigned char *)(a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }
      else
      {
        uint64_t v64 = *(unsigned __int16 *)(a2 + 12);
        if (*(unsigned __int16 *)(a2 + 10) > v64)
        {
          uint64_t v65 = *(void *)a2;
          *(_WORD *)(a2 + 12) = v64 + 1;
          char v66 = *(unsigned char *)(v65 + v64);
          if (v66) {
            LOBYTE(a2) = v66;
          }
          else {
            LOBYTE(a2) = 24;
          }
          goto LABEL_53;
        }
      }
      *(unsigned char *)(a2 + 15) = 1;
      LOBYTE(a2) = 17;
    }
    else
    {
      LOBYTE(a2) = 1;
    }
LABEL_53:
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 88))(a3, v45, a2);
    return a2;
  }
  if (a4 == 2)
  {
    uint64_t v17 = sub_100141058(a3, a1);
    uint64_t v18 = v17;
    uint64_t v19 = qword_100A02070;
    if (v17)
    {
      if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(v17 - 1)
        && (uint64_t v20 = *(void *)(qword_100A02070 + 8)) != 0)
      {
        unsigned int v21 = (unsigned __int16)(v17 - 1);
        uint64_t v22 = v20 + 144 * (unsigned __int16)(v17 - 1);
        sub_100139A70(v22, 5);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Disconnecting media transport", v23, v24, v25, v26, v27, v28, v29, v68);
          uint64_t v30 = sub_100050B4C(3u);
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v31 = sub_100050714();
            *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
            int v70 = v31;
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t v32 = v20 + 144 * v21;
        unsigned int v34 = *(unsigned __int16 *)(v32 + 128);
        uint64_t v33 = (_WORD *)(v32 + 128);
        uint64_t v35 = sub_1001E121C(v34, 436);
        if (!v35)
        {
          LOBYTE(a2) = 0;
          *(unsigned char *)(v20 + 144 * v21 + 133) = a3;
          return a2;
        }
        uint64_t v36 = v35;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error disconnecting media transport - %!", v37, v38, v39, v40, v41, v42, v43, v36);
          uint64_t v44 = sub_100050B4C(3u);
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        *uint64_t v33 = 0;
        sub_100114F70(0);
        sub_100138A14(v22);
        uint64_t v19 = qword_100A02070;
        a2 = 49;
      }
      else
      {
        a2 = 18;
      }
    }
    else
    {
      a2 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + 88))(a3, v18, a2);
  }
  else
  {
    LOBYTE(a2) = 0;
  }
  return a2;
}

uint64_t sub_10013DBF4(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  memset(v42, 0, 124);
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received SUSPEND - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v41 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a2) {
    sub_10025B8C0();
  }
  buf[0] = 0;
  if (a4)
  {
    if (a4 != 3)
    {
      LOBYTE(v17) = 0;
      if (a4 == 2)
      {
        sub_10014127C(a3, a1, v42, buf);
        uint64_t v18 = buf[0];
        if (buf[0])
        {
          sub_100140FC8((__int16 *)v42, buf[0], 3);
          uint64_t v17 = 0;
        }
        else
        {
          uint64_t v17 = 1;
        }
        uint64_t v23 = *(void (**)(uint64_t, _OWORD *, uint64_t, void, uint64_t))(*(void *)(qword_100A02070 + 24)
                                                                                 + 120);
        if (v23) {
          v23(a3, v42, v18, 0, v17);
        }
      }
      return v17;
    }
    sub_10014127C(a3, a1, v42, buf);
    uint64_t v21 = buf[0];
    if (!buf[0])
    {
      int v27 = 0;
      LOBYTE(v17) = 1;
      goto LABEL_42;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4459, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      int v22 = *((unsigned __int8 *)a2 + 14);
      *((unsigned char *)a2 + 15) = 1;
      if (v22 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4460, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
    }
    else
    {
      uint64_t v28 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v28)
      {
        uint64_t v29 = *a2;
        uint64_t v30 = v28 + 1;
        *((_WORD *)a2 + 6) = v28 + 1;
        int v27 = *(unsigned __int8 *)(v29 + v28) >> 2;
        if (*((unsigned __int16 *)a2 + 5) > (v28 + 1))
        {
          uint64_t v31 = *a2;
          *((_WORD *)a2 + 6) = v28 + 2;
          if (*(unsigned char *)(v31 + v30)) {
            LOBYTE(v17) = *(unsigned char *)(v31 + v30);
          }
          else {
            LOBYTE(v17) = 24;
          }
LABEL_42:
          uint64_t v32 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24)
                                                                                   + 120);
          if (v32)
          {
            uint64_t v33 = sub_1001412E4(v27, a1);
            v32(a3, v42, v21, v33, v17);
          }
          return v17;
        }
LABEL_41:
        *((unsigned char *)a2 + 15) = 1;
        LOBYTE(v17) = 17;
        goto LABEL_42;
      }
      *((unsigned char *)a2 + 15) = 1;
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    int v27 = 0;
    goto LABEL_41;
  }
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    unsigned __int8 v19 = 0;
    char v20 = 0;
    if (*(void *)(*(void *)(qword_100A02070 + 24) + 112)) {
      LOBYTE(v17) = 24;
    }
    else {
      LOBYTE(v17) = 25;
    }
    goto LABEL_18;
  }
  __int16 v24 = *((_WORD *)a2 + 5);
  __int16 v25 = *((_WORD *)a2 + 6);
  unsigned __int8 v19 = v24 - v25;
  uint64_t v26 = qword_100A02070;
  if (!*(void *)(*(void *)(qword_100A02070 + 24) + 112))
  {
    char v20 = 0;
    LOBYTE(v17) = 25;
    goto LABEL_18;
  }
  if ((v24 - v25) > 0x3Eu)
  {
    char v20 = 0;
    LOBYTE(v17) = -127;
    goto LABEL_18;
  }
  if (*((_WORD *)a2 + 5) == v25)
  {
    char v20 = 0;
    LOBYTE(v17) = 24;
    goto LABEL_18;
  }
  if ((_BYTE)v24 == (_BYTE)v25)
  {
    unsigned __int8 v19 = 0;
    LOBYTE(v17) = 0;
    char v20 = 0;
LABEL_59:
    if (*(unsigned __int8 *)(v26 + 103) | v17)
    {
      sub_100139230(a1, a3, (__int16 *)v42, v19, v20, v17);
      if ((_BYTE)v17) {
        return v17;
      }
      uint64_t v26 = qword_100A02070;
    }
    (*(void (**)(uint64_t, _OWORD *, void))(*(void *)(v26 + 24) + 112))(a3, v42, v19);
    LOBYTE(v17) = 0;
    return v17;
  }
  unint64_t v35 = 0;
  char v20 = 0;
  LOBYTE(v17) = 0;
  while (1)
  {
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4496, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15)) {
      break;
    }
    uint64_t v36 = *((unsigned __int16 *)a2 + 6);
    if (*((unsigned __int16 *)a2 + 5) <= v36) {
      goto LABEL_64;
    }
    uint64_t v37 = *a2;
    *((_WORD *)a2 + 6) = v36 + 1;
    int v38 = *(unsigned __int8 *)(v37 + v36) >> 2;
    uint64_t v39 = sub_1001411E8(v38, a1);
    *((_WORD *)v42 + v35) = sub_100137B04(v39);
    if (!v39)
    {
      LOBYTE(v17) = 18;
LABEL_55:
      unsigned __int8 v19 = ++v35;
      char v20 = v38;
      goto LABEL_56;
    }
    if (*(unsigned char *)(v39 + 134) != 4)
    {
      LOBYTE(v17) = 49;
      goto LABEL_55;
    }
    ++v35;
LABEL_56:
    if (v35 >= v19)
    {
      uint64_t v26 = qword_100A02070;
      goto LABEL_59;
    }
  }
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_64:
  *((unsigned char *)a2 + 15) = 1;
  LOBYTE(v17) = 17;
  unsigned __int8 v19 = v35;
LABEL_18:
  sub_100139230(a1, a3, (__int16 *)v42, v19, v20, v17);
  return v17;
}

uint64_t sub_10013E108(int a1, uint64_t a2, uint64_t a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received TRANSITION", v5, v6, v7, v8, v9, v10, v11, v17);
    uint64_t v12 = sub_100050B4C(3u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  long long v24 = 0u;
  memset(v25, 0, sizeof(v25));
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  *(_OWORD *)std::__fs::filesystem::path buf = 0u;
  unsigned __int8 v18 = 0;
  sub_10014127C(a3, a1, buf, &v18);
  uint64_t v13 = v18;
  if (v18)
  {
    sub_100140FC8((__int16 *)buf, v18, 3);
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 1;
  }
  uint64_t v15 = *(void (**)(uint64_t, uint8_t *, uint64_t, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 128);
  if (v15) {
    v15(a3, buf, v13, 0, v14);
  }
  return v14;
}

uint64_t sub_10013E258(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received ABORT - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v81 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
LABEL_15:
    if (*(unsigned char *)(qword_100A02070 + 103)) {
      sub_100141668(a1, 0xAu, a3, 0);
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4660, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v63 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v63)
      {
        uint64_t v64 = *a2;
        *((_WORD *)a2 + 6) = v63 + 1;
        uint64_t v65 = sub_1001411E8(*(unsigned __int8 *)(v64 + v63) >> 2, a1);
        if (!v65) {
          return 18;
        }
        uint64_t v66 = v65;
        sub_100139A70(v65, 6);
        uint64_t v67 = sub_100137B04(v66);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 168))(a3, v67);
        if (*(unsigned char *)(qword_100A02070 + 103))
        {
          uint64_t v68 = sub_1001E121C(*(unsigned __int16 *)(v66 + 128), 436);
          if (v68)
          {
            if (*(_WORD *)(v66 + 128))
            {
              uint64_t v69 = v68;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Error disconnecting media transport - %!", v70, v71, v72, v73, v74, v75, v76, v69);
                unsigned __int16 v77 = sub_100050B4C(3u);
                if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
              *(_WORD *)(v66 + 128) = 0;
              sub_100114F70(0);
            }
            sub_100138A14(v66);
            (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 176))(a3, v67, 0);
          }
        }
        return 0;
      }
    }
    *((unsigned char *)a2 + 15) = 1;
    return 17;
  }
  sub_10025B8C0();
  if (!a4) {
    goto LABEL_15;
  }
LABEL_9:
  if (a4 == 2) {
    goto LABEL_27;
  }
  if (a4 != 3) {
    return 0;
  }
  if (*((unsigned char *)a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4582, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
  }
  else
  {
    uint64_t v17 = *((unsigned __int16 *)a2 + 6);
    if (*((unsigned __int16 *)a2 + 5) > v17)
    {
      uint64_t v18 = *a2;
      *((_WORD *)a2 + 6) = v17 + 1;
      uint64_t v19 = *(unsigned __int8 *)(v18 + v17);
      if (v19 == 255) {
        goto LABEL_27;
      }
      goto LABEL_24;
    }
  }
  *((unsigned char *)a2 + 15) = 1;
  uint64_t v19 = 17;
LABEL_24:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Remote Abort Reject RXed (illegal) - %d", v20, v21, v22, v23, v24, v25, v26, v19);
    int v27 = sub_100050B4C(3u);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
LABEL_27:
  uint64_t v28 = sub_100141058(a3, a1);
  uint64_t v29 = v28;
  if (v28)
  {
    if (*(unsigned __int8 *)(qword_100A02070 + 97) > (unsigned __int16)(v28 - 1))
    {
      uint64_t v30 = *(void *)(qword_100A02070 + 8);
      if (v30)
      {
        unsigned int v31 = (unsigned __int16)(v28 - 1);
        sub_100139A70(v30 + 144 * (unsigned __int16)(v28 - 1), 6);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Disconnecting media transport", v32, v33, v34, v35, v36, v37, v38, v79);
          uint64_t v39 = sub_100050B4C(3u);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v40 = sub_100050714();
            *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
            uint64_t v81 = v40;
            _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t v41 = v30 + 144 * v31;
        unsigned int v43 = *(unsigned __int16 *)(v41 + 128);
        uint64_t v42 = (_WORD *)(v41 + 128);
        uint64_t v44 = sub_1001E121C(v43, 436);
        if (!v44)
        {
          uint64_t v54 = 0;
          *(unsigned char *)(v30 + 144 * v31 + 133) = a3;
          return v54;
        }
        if (*v42)
        {
          uint64_t v45 = v44;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Error disconnecting media transport - %!", v46, v47, v48, v49, v50, v51, v52, v45);
            uint64_t v53 = sub_100050B4C(3u);
            if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          *uint64_t v42 = 0;
          sub_100114F70(0);
        }
        sub_100138A14(v30 + 144 * v31);
        (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 176))(a3, v29, 0);
        return 0;
      }
    }
    uint64_t v54 = 18;
  }
  else
  {
    uint64_t v54 = 1;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Abort Accept RXed for unknown endpoint. transaction: %d", v55, v56, v57, v58, v59, v60, v61, a3);
    uint64_t v62 = sub_100050B4C(3u);
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 176))(a3, v29, 0);
  return v54;
}

uint64_t sub_10013E7A4(unsigned int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received SECURITY CONTROL - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v49 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a2)
  {
    if (a4) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a4)
    {
LABEL_9:
      if (a4 != 3)
      {
        if (a4 == 2)
        {
          uint64_t v17 = sub_100141058(a3, a1);
          uint64_t v18 = v17 == 0;
          uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)(qword_100A02070 + 24)
                                                                                  + 160);
          if (v19)
          {
            uint64_t v20 = v17;
            uint64_t v21 = *((unsigned __int16 *)a2 + 6);
            uint64_t v22 = *a2 + v21;
            if (*((unsigned char *)a2 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
              unsigned __int16 v23 = 0;
            }
            else
            {
              unsigned __int16 v23 = *((_WORD *)a2 + 5) - v21;
            }
            v19(a3, v20, v22, v23, v18);
          }
          return v18;
        }
LABEL_48:
        LOBYTE(v18) = 0;
        return v18;
      }
      uint64_t v25 = sub_100141058(a3, a1);
      if (!v25)
      {
        LOBYTE(v18) = 1;
        goto LABEL_32;
      }
      if (*((unsigned char *)a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4737, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*((unsigned char *)a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }
      else
      {
        uint64_t v27 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) > v27)
        {
          uint64_t v28 = *a2;
          *((_WORD *)a2 + 6) = v27 + 1;
          char v29 = *(unsigned char *)(v28 + v27);
          if (v29) {
            LOBYTE(v18) = v29;
          }
          else {
            LOBYTE(v18) = 24;
          }
LABEL_32:
          uint64_t v30 = *(void (**)(uint64_t, uint64_t, void, void, void))(*(void *)(qword_100A02070 + 24)
                                                                                + 160);
          if (v30) {
            v30(a3, v25, 0, 0, v18);
          }
          return v18;
        }
      }
      *((unsigned char *)a2 + 15) = 1;
      LOBYTE(v18) = 17;
      goto LABEL_32;
    }
  }
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 152);
  if (v24)
  {
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4760, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v31 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) > v31)
      {
        uint64_t v32 = *a2;
        *((_WORD *)a2 + 6) = v31 + 1;
        uint64_t v33 = sub_1001411E8(*(unsigned __int8 *)(v32 + v31) >> 2, a1);
        uint64_t v26 = v33;
        if (v33)
        {
          if (*(unsigned char *)(v33 + 134))
          {
            uint64_t v34 = sub_100137B04(v33);
            uint64_t v35 = *((unsigned __int16 *)a2 + 6);
            uint64_t v36 = *a2 + v35;
            if (*((unsigned char *)a2 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
              unsigned __int16 v37 = 0;
            }
            else
            {
              unsigned __int16 v37 = *((_WORD *)a2 + 5) - v35;
            }
            v24(a3, v34, v36, v37);
            goto LABEL_48;
          }
          LODWORD(v18) = 49;
        }
        else
        {
          LODWORD(v18) = 18;
        }
        goto LABEL_40;
      }
    }
    uint64_t v26 = 0;
    *((unsigned char *)a2 + 15) = 1;
    LODWORD(v18) = 17;
  }
  else
  {
    uint64_t v26 = 0;
    LODWORD(v18) = 25;
  }
LABEL_40:
  if (sub_100058654())
  {
    sub_100137B04(v26);
    sub_100056E24((uint64_t)"AVDT_Security_Control_Rsp\n\tTransaction=%d\n\tStream Handle=%d\n\tData Length=0\n\tError=%d\n", v38, v39, v40, v41, v42, v43, v44, a3);
    uint64_t v45 = sub_100050B4C(3u);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v46 = sub_100050714();
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v49 = v46;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_100142ADC(a1, a3, 0, 0, v18);
  return v18;
}

uint64_t sub_10013EBE8(int a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received Delay Report - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v63 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a2) {
    sub_10025B8C0();
  }
  switch(a4)
  {
    case 3u:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Source rejected the delay report indication", v17, v18, v19, v20, v21, v22, v23, v61);
        uint64_t v24 = sub_100050B4C(3u);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 25;
    case 2u:
      int v33 = sub_100058654();
      uint64_t result = 0;
      if (v33)
      {
        sub_100056E24((uint64_t)"Source accepted the delay report indication", v26, v27, v28, v29, v30, v31, v32, v61);
        uint64_t v34 = sub_100050B4C(3u);
        BOOL v35 = os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0;
        if (v35)
        {
          uint64_t v36 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v63 = v36;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0;
        }
      }
      return result;
    case 0u:
      if (*((unsigned char *)a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4908, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (*((unsigned char *)a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_30:
        *((unsigned char *)a2 + 15) = 1;
        return 17;
      }
      uint64_t v45 = *((unsigned __int16 *)a2 + 6);
      if (*((unsigned __int16 *)a2 + 5) <= v45) {
        goto LABEL_30;
      }
      uint64_t v46 = *a2;
      *((_WORD *)a2 + 6) = v45 + 1;
      uint64_t v47 = sub_1001411E8(*(unsigned __int8 *)(v46 + v45) >> 2, a1);
      if (!v47) {
        return 18;
      }
      uint64_t v48 = sub_100137B04(v47);
      if (*((unsigned char *)a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4921, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v49 = v48;
      if (*((unsigned char *)a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
      }
      else
      {
        uint64_t v50 = *((unsigned __int16 *)a2 + 6);
        if (*((unsigned __int16 *)a2 + 5) - (int)v50 >= 2)
        {
          uint64_t v51 = bswap32(*(unsigned __int16 *)(*a2 + v50)) >> 16;
          *((_WORD *)a2 + 6) = v50 + 2;
          goto LABEL_35;
        }
      }
      uint64_t v51 = 0;
      *((unsigned char *)a2 + 15) = 1;
LABEL_35:
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 208);
      if (v52)
      {
        v52(v49, a3, v51);
        return 0;
      }
      uint64_t result = sub_100058654();
      if (result)
      {
        sub_100056E24((uint64_t)"avdtp delay reporting callback has not been registered!", v53, v54, v55, v56, v57, v58, v59, v61);
        uint64_t v60 = sub_100050B4C(3u);
        uint64_t result = os_log_type_enabled(v60, OS_LOG_TYPE_ERROR);
        if (result) {
          goto LABEL_24;
        }
      }
      return result;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Bad message type for delay reporting", v37, v38, v39, v40, v41, v42, v43, v61);
    uint64_t v44 = sub_100050B4C(3u);
    uint64_t result = os_log_type_enabled(v44, OS_LOG_TYPE_ERROR);
    if (result)
    {
LABEL_24:
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10013EF90(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6 = a2;
  if (!a2) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    uint64_t v15 = a4 > 3 ? "" : (&off_10099BC98)[(char)a4];
    sub_100056E24((uint64_t)"Received GET ALL CAPS - %s", v8, v9, v10, v11, v12, v13, v14, (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(3u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  unsigned __int16 v63 = 0;
  if (sub_100134C6C(a1, &v63)) {
    sub_10025B8C0();
  }
  if (!a4)
  {
    if (*(unsigned char *)(v6 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4845, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(v6 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    }
    else
    {
      uint64_t v23 = *(unsigned __int16 *)(v6 + 12);
      if (*(unsigned __int16 *)(v6 + 10) > v23)
      {
        uint64_t v24 = *(void *)v6;
        *(_WORD *)(v6 + 12) = v23 + 1;
        uint64_t v25 = *(unsigned __int8 *)(v24 + v23) >> 2;
        if (*(unsigned char *)(qword_100A02070 + 96))
        {
          uint64_t v26 = 0;
          uint64_t v27 = (unsigned __int8 *)(*(void *)qword_100A02070 + 31);
          while (*(v27 - 6) != v25)
          {
            v27 += 40;
            if (*(unsigned __int8 *)(qword_100A02070 + 96) == ++v26) {
              goto LABEL_39;
            }
          }
          if (v26 != 255)
          {
            if (*(v27 - 4) || !*(void *)(v27 - 23) || *(v27 - 3) == 1)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Returning All Capabilities", v36, v37, v38, v39, v40, v41, v42, v62);
                uint64_t v43 = sub_100050B4C(3u);
                if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v44 = sub_100050714();
                  *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                  *(void *)&uint8_t buf[4] = v44;
                  _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              if (*(v27 - 1))
              {
                uint64_t v45 = 0;
                unint64_t v46 = 0;
                do
                {
                  sub_10013F510(a1, *(void *)(v27 - 31) + v45);
                  ++v46;
                  unint64_t v47 = *(v27 - 1);
                  v45 += 16;
                }
                while (v46 < v47);
              }
              else
              {
                LODWORD(v47) = 0;
              }
              uint64_t v57 = *(unsigned __int8 **)(v27 - 31);
              unsigned int v58 = a1;
              unsigned int v59 = 12;
              unsigned int v60 = a3;
            }
            else
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"2-Play Source: Returning Config as Caps", v48, v49, v50, v51, v52, v53, v54, v62);
                uint64_t v55 = sub_100050B4C(3u);
                if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v56 = sub_100050714();
                  *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
                  *(void *)&uint8_t buf[4] = v56;
                  _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
                }
              }
              uint64_t v57 = *(unsigned __int8 **)(v27 - 23);
              LODWORD(v47) = *v27;
              unsigned int v58 = a1;
              unsigned int v59 = 2;
              unsigned int v60 = a3;
            }
            sub_10014267C(v58, v59, v60, v57, v47, 0);
            goto LABEL_60;
          }
        }
LABEL_39:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Get caps received for unknown seid %d", v28, v29, v30, v31, v32, v33, v34, v25);
          BOOL v35 = sub_100050B4C(3u);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        LODWORD(v6) = 18;
LABEL_37:
        sub_10014267C(a1, 0xCu, a3, 0, 0, v6);
        return v6;
      }
    }
    *(unsigned char *)(v6 + 15) = 1;
    LODWORD(v6) = 17;
    goto LABEL_37;
  }
  if (a4 != 3)
  {
    if (a4 == 2)
    {
      *(void *)std::__fs::filesystem::path buf = 0;
      unsigned __int8 v64 = 0;
      uint64_t v6 = sub_10013A1C4((uint64_t *)v6, (void **)buf, &v64);
      uint64_t v17 = *(void (**)(uint64_t, void, void, void, void, uint64_t))(*(void *)(qword_100A02070 + 24)
                                                                                    + 200);
      unsigned int v18 = v64;
      if (v17) {
        v17(a3, v63, *(unsigned __int8 *)(qword_100A02070 + 99), *(void *)buf, v64, v6);
      }
      sub_100134AB4((void **)buf, v18);
      return v6;
    }
LABEL_60:
    LOBYTE(v6) = 0;
    return v6;
  }
  if (*(unsigned char *)(v6 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 4827, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(v6 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_27:
    *(unsigned char *)(v6 + 15) = 1;
    LOBYTE(v6) = 17;
    goto LABEL_28;
  }
  uint64_t v19 = *(unsigned __int16 *)(v6 + 12);
  if (*(unsigned __int16 *)(v6 + 10) <= v19) {
    goto LABEL_27;
  }
  uint64_t v20 = *(void *)v6;
  *(_WORD *)(v6 + 12) = v19 + 1;
  char v21 = *(unsigned char *)(v20 + v19);
  if (v21) {
    LOBYTE(v6) = v21;
  }
  else {
    LOBYTE(v6) = 24;
  }
LABEL_28:
  uint64_t v22 = *(void (**)(uint64_t, void, void, void, void, void))(*(void *)(qword_100A02070 + 24)
                                                                               + 200);
  if (v22) {
    v22(a3, v63, *(unsigned __int8 *)(qword_100A02070 + 99), 0, 0, v6);
  }
  return v6;
}

uint64_t sub_10013F470(unsigned int a1, int a2)
{
  unsigned __int16 v14 = 0;
  uint64_t v4 = sub_100134DB8(a1, &v14);
  if (v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_AVDTP_Disable48KHz failed to obtain CID for A2DP handle %d", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(3u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(_DWORD *)(sub_100134FD0(v14) + 52) = a2;
  }
  return v4;
}

void sub_10013F510(int a1, uint64_t a2)
{
  if (*(unsigned char *)a2 == 7)
  {
    uint64_t v3 = sub_100134FD0(a1);
    if (v3)
    {
      uint64_t v4 = *(unsigned int *)(v3 + 52);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_AVDTP_Update48KHzCap was not able to read the disable48KHz signal", v5, v6, v7, v8, v9, v10, v11, v70);
        uint64_t v12 = sub_100050B4C(3u);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v4 = 0xFFFFFFFFLL;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDTP_Update48KHzCap: disable48KHz is %x, codec is %x, codecData.dataLen is %x", v13, v14, v15, v16, v17, v18, v19, v4);
      uint64_t v20 = sub_100050B4C(3u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        uint64_t v72 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (*(unsigned char *)(a2 + 2) == 2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_Update48KHzCap: AAC-LC codecData->data[1] was %x, [2] was %x", v34, v35, v36, v37, v38, v39, v40, *(unsigned __int8 *)(*(void *)(a2 + 8) + 1));
        uint64_t v41 = sub_100050B4C(3u);
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v42 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v72 = v42;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v43 = *(void *)(a2 + 8);
      char v44 = *(unsigned char *)(v43 + 1);
      if ((v4 & 2) != 0)
      {
        *(unsigned char *)(v43 + 1) = v44 | 1;
        uint64_t v45 = *(void *)(a2 + 8);
        char v46 = *(unsigned char *)(v45 + 2) & 0x7F;
      }
      else
      {
        *(unsigned char *)(v43 + 1) = v44 & 0xFE;
        uint64_t v45 = *(void *)(a2 + 8);
        char v46 = *(unsigned char *)(v45 + 2) | 0x80;
      }
      *(unsigned char *)(v45 + 2) = v46;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_Update48KHzCap: AAC-LC codecData->data[1] updated to %x, [2] to %x", v62, v63, v64, v65, v66, v67, v68, *(unsigned __int8 *)(*(void *)(a2 + 8) + 1));
        uint64_t v54 = sub_100050B4C(3u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_33;
        }
      }
    }
    else if (*(unsigned char *)(a2 + 2))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_Update48KHzCap: codecData->data remains untouched for this codec type", v47, v48, v49, v50, v51, v52, v53, v70);
        uint64_t v54 = sub_100050B4C(3u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
        {
LABEL_33:
          uint64_t v69 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v72 = v69;
          _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_Update48KHzCap: SBC codecData->data[0] was %x", v21, v22, v23, v24, v25, v26, v27, **(unsigned __int8 **)(a2 + 8));
        uint64_t v28 = sub_100050B4C(3u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v29 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v72 = v29;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v30 = *(char **)(a2 + 8);
      char v31 = *v30;
      if (v4)
      {
        char *v30 = v31 | 0x20;
        uint64_t v32 = *(unsigned char **)(a2 + 8);
        char v33 = *v32 & 0xEF;
      }
      else
      {
        char *v30 = v31 & 0xDF;
        uint64_t v32 = *(unsigned char **)(a2 + 8);
        char v33 = *v32 | 0x10;
      }
      *uint64_t v32 = v33;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_Update48KHzCap: SBC codecData->data[0] updated to %x", v55, v56, v57, v58, v59, v60, v61, **(unsigned __int8 **)(a2 + 8));
        uint64_t v54 = sub_100050B4C(3u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_33;
        }
      }
    }
  }
}

uint64_t sub_10013F8FC(int *a1, _OWORD *a2, _OWORD *a3, __int16 *a4, _WORD *a5)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AVDTP_createA2DPChannels", v10, v11, v12, v13, v14, v15, v16, v58);
    uint64_t v17 = sub_100050B4C(3u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  long long v18 = a2[1];
  *(_OWORD *)std::__fs::filesystem::path buf = *a2;
  long long v60 = v18;
  uint64_t v19 = sub_1001DEF88(25, (uint64_t)buf, (uint64_t)a1, (uint64_t)sub_100136CF4, (uint64_t)sub_10013625C, (uint64_t)sub_100136500, a4, (uint64_t)&unk_10099BC28);
  if (v19)
  {
    uint64_t v20 = v19;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDTP_createA2DPChannels error creating A2DP signaling", v21, v22, v23, v24, v25, v26, v27, v58);
      uint64_t v28 = sub_100050B4C(3u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
LABEL_7:
      }
        sub_100744F6C();
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVDTP_createA2DPChannels signaling channel created", v29, v30, v31, v32, v33, v34, v35, v58);
      uint64_t v36 = sub_100050B4C(3u);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v37 = sub_100050714();
        *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
        *(void *)&uint8_t buf[4] = v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    long long v38 = a3[1];
    *(_OWORD *)std::__fs::filesystem::path buf = *a3;
    long long v60 = v38;
    uint64_t v39 = sub_1001DEF88(25, (uint64_t)buf, (uint64_t)a1, (uint64_t)sub_10013FC20, (uint64_t)sub_10013FE34, (uint64_t)sub_100140040, a5, (uint64_t)&unk_10099BC28);
    if (v39)
    {
      uint64_t v20 = v39;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_AVDTP_createA2DPChannels error creating A2DP media", v40, v41, v42, v43, v44, v45, v46, v58);
        uint64_t v47 = sub_100050B4C(3u);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
          goto LABEL_7;
        }
      }
    }
    else if (sub_1001369B0(*a4, a1))
    {
      uint64_t v20 = 0;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVDTP_createA2DPChannels created signal for cid 0x%x with a2dp handle %d", v48, v49, v50, v51, v52, v53, v54, (unsigned __int16)*a4);
        uint64_t v55 = sub_100050B4C(3u);
        uint64_t v20 = 0;
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v56 = sub_100050714();
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          *(void *)&uint8_t buf[4] = v56;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0;
        }
      }
    }
    else
    {
      return 2902;
    }
  }
  return v20;
}

void sub_10013FC20(unsigned int a1, uint64_t a2, uint64_t a3, int a4)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"MediaConnectCfm (CID %d) %!", v7, v8, v9, v10, v11, v12, v13, a1);
    uint64_t v14 = sub_100050B4C(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v15 = sub_1001404C4(a1);
  if (v15)
  {
    uint64_t v16 = v15;
    if (a4 == 464)
    {
      *(_WORD *)(v15 + 128) = 0;
      sub_100114F70(0);
      sub_100138A14(v16);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 176);
      uint64_t v28 = *(unsigned __int8 *)(v16 + 133);
      uint64_t v29 = sub_100137B04(v16);
      v27(v28, v29, 41);
    }
    else
    {
      if (a4)
      {
        *(_WORD *)(v15 + 128) = 0;
        sub_100114F70(0);
        uint64_t v18 = 129;
      }
      else
      {
        if (*(unsigned char *)(v15 + 134) != 2) {
          sub_10025B8C0();
        }
        sub_100139A70(v16, 3);
        *(void *)std::__fs::filesystem::path buf = 0;
        if (!sub_1001DD56C(a1, (uint64_t *)buf))
        {
          if (sub_1001E6484(*(unsigned int **)buf))
          {
            uint64_t v17 = sub_1001E6484(*(unsigned int **)buf);
            sub_100114F70(*(unsigned __int16 *)(v17 + 8));
          }
        }
        uint64_t v18 = 0;
      }
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(qword_100A02070 + 24) + 64);
      uint64_t v31 = *(unsigned __int8 *)(v16 + 133);
      uint64_t v32 = sub_100137B04(v16);
      v30(v31, v32, a3, v18);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Remote Endpoint not found", v19, v20, v21, v22, v23, v24, v25, v33);
    uint64_t v26 = sub_100050B4C(3u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10013FE34(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = sub_1001404C4(a1);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Media channel disconnected (CID %d, remote %lx) %!", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(3u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v26 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v4)
  {
    uint64_t v13 = sub_100137B04(v4);
    int v14 = *(unsigned __int8 *)(v4 + 134);
    *(_WORD *)(v4 + 128) = 0;
    sub_100114F70(0);
    uint64_t v15 = *(unsigned __int8 *)(v4 + 133);
    if (v14 == 7)
    {
      if (*(unsigned __int8 *)(v4 + 135) == 255) {
        sub_10025B8C0();
      }
      if (v13) {
        (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 176))(v15, v13, 0);
      }
      uint64_t v16 = *(unsigned __int8 *)(v4 + 135);
      if (v16 != 255) {
        sub_10013625C(*(unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + (v16 << 6) + 38), a2);
      }
    }
    else
    {
      sub_100138A14(v4);
      if (!v13) {
        return;
      }
      if (v14 != 6)
      {
        if (v14 == 5)
        {
          (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 88))(v15, v13, 0);
          return;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unexpected Transport channel disconnect: %d", v17, v18, v19, v20, v21, v22, v23, v13);
          uint64_t v24 = sub_100050B4C(3u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)(qword_100A02070 + 24) + 176))(v15, v13, 0);
    }
  }
}

void sub_100140040(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5 = sub_1001404C4(a1);
  if (v5)
  {
    uint64_t v6 = v5;
    if (a3 <= 0xB)
    {
      if (!sub_100058654()) {
        goto LABEL_18;
      }
      sub_100056E24((uint64_t)"Error in received data frame: Runt packet received!", v7, v8, v9, v10, v11, v12, v13, v48);
      int v14 = sub_100050B4C(3u);
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
      goto LABEL_5;
    }
    if (*(unsigned char *)(v5 + 134) != 4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid state to receive packet", v32, v33, v34, v35, v36, v37, v38, v48);
        uint64_t v39 = sub_100050B4C(3u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
          uint64_t v51 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      goto LABEL_18;
    }
    if (!a2) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 779, "data");
    }
    uint64_t v23 = *(unsigned char *)a2 & 0xF;
    if ((int)(a3 - 8) < (int)v23)
    {
      if (!sub_100058654()) {
        goto LABEL_18;
      }
      sub_100056E24((uint64_t)"Error in received data frame", v24, v25, v26, v27, v28, v29, v30, v48);
      uint64_t v31 = sub_100050B4C(3u);
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
LABEL_5:
      sub_100744F6C();
LABEL_18:
      if (*(unsigned char *)(v6 + 132))
      {
        uint64_t v40 = *(void (**)(uint64_t, void, void, void, void, void, void, uint64_t))(*(void *)(qword_100A02070 + 24) + 184);
        uint64_t v41 = sub_100137B04(v6);
        v40(v41, 0, 0, 0, 0, 0, 0, 1);
      }
      return;
    }
    if (*(unsigned char *)(v5 + 132))
    {
      unsigned int v42 = *(unsigned __int8 *)(a2 + 1);
      unsigned int v43 = *(unsigned __int16 *)(a2 + 2);
      unsigned int v44 = *(_DWORD *)(a2 + 4);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void))(*(void *)(qword_100A02070 + 24) + 184);
      uint64_t v45 = sub_100137B04(v5);
      uint64_t v46 = bswap32(v43) >> 16;
      uint64_t v47 = bswap32(v44);
      v49(v45, v46, v47, a2 + v23 + 12, (unsigned __int16)(a3 - (v23 + 12)), v42 & 0x7F, v42 >> 7, 0);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Remote Endpoint not found", v15, v16, v17, v18, v19, v20, v21, v48);
    uint64_t v22 = sub_100050B4C(3u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_10014030C(uint64_t a1, void *a2, unsigned int a3, int a4)
{
  uint64_t v30 = 0;
  if (*(unsigned char *)(qword_100A02070 + 96))
  {
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)qword_100A02070;
    while (*(unsigned __int8 *)(v7 + 25) != a4)
    {
      ++v6;
      v7 += 40;
      if (*(unsigned __int8 *)(qword_100A02070 + 96) == v6) {
        goto LABEL_5;
      }
    }
    if (v6 == 255) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = v7;
    }
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
  }
  uint64_t v9 = sub_100197A30(a1);
  if (!v9
    && sub_100058654()
    && (sub_100056E24((uint64_t)"OI_AVDTP_cleanFastConnectA2DP NULL Handle", v10, v11, v12, v13, v14, v15, v16, v29),
        uint64_t v17 = sub_100050B4C(3u),
        os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)))
  {
    sub_100744F6C();
    if (!a3) {
      goto LABEL_19;
    }
  }
  else if (!a3)
  {
    goto LABEL_19;
  }
  uint64_t v18 = sub_1001404C4(a3);
  if (v18)
  {
    uint64_t v19 = v18;
    *(unsigned char *)(v18 + 132) = 0;
    *(_DWORD *)uint64_t v18 = 0;
    *(_WORD *)(v18 + 128) = 0;
    sub_100114F70(0);
    *(unsigned char *)(v19 + 137) = -1;
    *(_DWORD *)(v19 + 133) = -65281;
  }
  if (!sub_1001DD56C(a3, &v30))
  {
    if (v30)
    {
      sub_1001DEC18(v30);
      if (v9) {
        sub_100182088(v9);
      }
    }
  }
LABEL_19:
  if (a2)
  {
    sub_100136F5C(a2);
    if (!sub_1001DD56C(a2, &v30))
    {
      if (v30)
      {
        sub_1001DEC18(v30);
        if (v9) {
          sub_100182088(v9);
        }
      }
    }
  }
  if (v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_AVDTP_cleanFastConnectA2DP Free Caps", v20, v21, v22, v23, v24, v25, v26, v29);
      uint64_t v27 = sub_100050B4C(3u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100135F64(v8);
  }
  return 0;
}

uint64_t sub_1001404C4(int a1)
{
  if (!qword_100A02070 || !*(unsigned char *)(qword_100A02070 + 97)) {
    return 0;
  }
  char v1 = 0;
  uint64_t v2 = *(void *)(qword_100A02070 + 8);
  while (*(unsigned __int8 *)(v2 + 144 * v1 + 136) == 255 || *(unsigned __int16 *)(v2 + 144 * v1 + 128) != a1)
  {
    if (*(unsigned __int8 *)(qword_100A02070 + 97) <= ++v1) {
      return 0;
    }
  }
  return v2 + 144 * v1;
}

uint64_t sub_100140528(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
    goto LABEL_41;
  }
  uint64_t v2 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) <= v2)
  {
LABEL_41:
    uint64_t v26 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
    goto LABEL_43;
  }
  if (*(unsigned char *)(a1 + 14) != 2)
  {
    uint64_t v26 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 5328, v26);
  }
  uint64_t v3 = qword_100A02070;
  uint64_t v4 = *(void *)qword_100A02070;
  uint64_t v5 = *(unsigned char **)a1;
  *(_WORD *)(a1 + 12) = v2 + 1;
  v5[v2] = 0;
  if (*(unsigned char *)(v3 + 96))
  {
    unint64_t v6 = 0;
    char v7 = 0;
    uint64_t v8 = (unsigned __int8 *)(v4 + 29);
    while (1)
    {
      if (*(v8 - 4))
      {
        unsigned int v9 = *v8;
        unsigned int v10 = *(v8 - 1);
        if (*(v8 - 2) >= 2u) {
          sub_10025B8C0();
        }
        if (*(unsigned char *)(a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_29:
          uint64_t v23 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_31:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 5339, v23);
        }
        uint64_t v11 = *(unsigned __int16 *)(a1 + 12);
        if (*(unsigned __int16 *)(a1 + 10) <= v11) {
          goto LABEL_29;
        }
        if (*(unsigned char *)(a1 + 14) != 2)
        {
          uint64_t v23 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_31;
        }
        char v12 = (2 * (v9 >= v10)) | (4 * *(v8 - 4));
        uint64_t v13 = *(unsigned char **)a1;
        *(_WORD *)(a1 + 12) = v11 + 1;
        v13[v11] = v12;
        if (*(unsigned char *)(a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_33:
          uint64_t v24 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_35:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 5340, v24);
        }
        uint64_t v14 = *(unsigned __int16 *)(a1 + 12);
        if (*(unsigned __int16 *)(a1 + 10) <= v14) {
          goto LABEL_33;
        }
        if (*(unsigned char *)(a1 + 14) != 2)
        {
          uint64_t v24 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_35;
        }
        char v15 = *(v8 - 3) & 0xF0 | (8 * *(v8 - 2));
        uint64_t v16 = *(unsigned char **)a1;
        *(_WORD *)(a1 + 12) = v14 + 1;
        v16[v14] = v15;
        ++v7;
        uint64_t v3 = qword_100A02070;
      }
      ++v6;
      v8 += 40;
      if (v6 >= *(unsigned __int8 *)(v3 + 96)) {
        goto LABEL_19;
      }
    }
  }
  char v7 = 0;
LABEL_19:
  *uint64_t v5 = v7;
  if (*(unsigned char *)(v3 + 96))
  {
    unint64_t v17 = 0;
    uint64_t v18 = (unsigned __int8 *)(v4 + 30);
    do
    {
      if (*(v18 - 5))
      {
        char v19 = sub_100141D24(*(void *)(v18 - 30), *v18);
        if (*(unsigned char *)(a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c");
LABEL_37:
          uint64_t v25 = "ByteStream_NumReadBytesAvail(*bs) >= 1";
LABEL_39:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp.c", 5354, v25);
        }
        uint64_t v20 = *(unsigned __int16 *)(a1 + 12);
        if (*(unsigned __int16 *)(a1 + 10) <= v20) {
          goto LABEL_37;
        }
        if (*(unsigned char *)(a1 + 14) != 2)
        {
          uint64_t v25 = "(*bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_39;
        }
        uint64_t v21 = *(unsigned char **)a1;
        *(_WORD *)(a1 + 12) = v20 + 1;
        v21[v20] = v19;
        sub_100141DC4((unsigned char *)a1, *(unsigned __int8 **)(v18 - 30), *v18, 1);
        uint64_t v3 = qword_100A02070;
      }
      ++v17;
      v18 += 40;
    }
    while (v17 < *(unsigned __int8 *)(v3 + 96));
  }
  return 0;
}

uint64_t sub_100140828(unsigned int a1, char a2, unsigned int a3, uint64_t a4, unsigned int a5, _WORD *a6, uint64_t a7)
{
  if (!dword_100A197BC) {
    return 408;
  }
  unsigned __int16 v95 = 0;
  uint64_t v14 = sub_100134DB8(a1, &v95);
  if (v14)
  {
    uint64_t v15 = v14;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error get CID for A2DP handle %d", v16, v17, v18, v19, v20, v21, v22, a1);
      uint64_t v23 = sub_100050B4C(3u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    if (!*(unsigned char *)(qword_100A02070 + 96)) {
      goto LABEL_19;
    }
    uint64_t v24 = 0;
    uint64_t v25 = *(void *)qword_100A02070;
    uint64_t v26 = 255;
    while (*(unsigned __int8 *)(v25 + v24 + 25) != a3)
    {
      v24 += 40;
      --v26;
      if (40 * *(unsigned __int8 *)(qword_100A02070 + 96) == v24) {
        goto LABEL_19;
      }
    }
    if (v26)
    {
      if (*(void *)(v25 + v24 + 16) && (sub_10025B8C0(), *(void *)(v25 + v24 + 16)))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error Caps", v27, v28, v29, v30, v31, v32, v33, v92);
          uint64_t v34 = sub_100050B4C(3u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 118;
      }
      else
      {
        uint64_t v44 = sub_10013799C(a2);
        if (v44)
        {
          uint64_t v45 = v44;
          uint64_t v93 = (void **)(v25 + v24 + 16);
          int v46 = v95;
          uint64_t v47 = qword_100A02070;
          if (qword_100A02070 && *(unsigned char *)(qword_100A02070 + 98))
          {
            uint64_t v48 = 0;
            uint64_t v49 = (unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + 38);
            while (1)
            {
              int v50 = *v49;
              v49 += 32;
              if (v50 == v95) {
                break;
              }
              if (*(unsigned __int8 *)(qword_100A02070 + 98) == ++v48) {
                goto LABEL_30;
              }
            }
          }
          else
          {
LABEL_30:
            LOBYTE(v48) = -1;
          }
          *(unsigned char *)(v44 + 135) = v48;
          uint64_t v51 = *(unsigned __int8 *)(v47 + 96);
          if (*(unsigned char *)(v47 + 96))
          {
            uint64_t v52 = 0;
            uint64_t v53 = (unsigned __int8 *)(*(void *)v47 + 25);
            while (1)
            {
              int v54 = *v53;
              v53 += 40;
              if (v54 == a3) {
                break;
              }
              if (v51 == ++v52) {
                goto LABEL_35;
              }
            }
          }
          else
          {
LABEL_35:
            LOBYTE(v52) = -1;
          }
          *(unsigned char *)(v44 + 136) = v52;
          sub_100139A70(v44, 3);
          *(_WORD *)(v45 + 130) = 900;
          *(_WORD *)(v45 + 128) = a7;
          sub_100114F70(a7);
          uint64_t v94 = 0;
          if (!sub_1001DD56C(a7, (uint64_t *)&v94) && sub_1001E6484(v94))
          {
            uint64_t v55 = sub_1001E6484(v94);
            sub_100114F70(*(unsigned __int16 *)(v55 + 8));
          }
          sub_1001DD4C8(a7, (uint64_t)sub_100140CC8);
          int v56 = sub_100137B04(v45);
          *a6 = v56;
          if (v56)
          {
            uint64_t v57 = sub_100134FD0(v46);
            if (v57)
            {
              *(_WORD *)(v57 + 34) = 1004;
              uint64_t v58 = v25 + v24;
              uint64_t v59 = (unsigned char *)(v25 + v24 + 32);
              uint64_t v15 = sub_100134B4C(a4, a5, v93, v59);
              if (v15)
              {
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error Copy Caps", v60, v61, v62, v63, v64, v65, v66, v92);
                  uint64_t v67 = sub_100050B4C(3u);
                  if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
                    sub_100744F6C();
                  }
                }
                sub_100134AB4(v93, a5);
                *(unsigned char *)(v45 + 132) = 0;
                *(_DWORD *)uint64_t v45 = 0;
                *(_WORD *)(v45 + 128) = 0;
                sub_100114F70(0);
                *(unsigned char *)(v45 + 137) = -1;
                *(_DWORD *)(v45 + 133) = -65281;
              }
              else
              {
                sub_100134AB4((void **)(v58 + 8), *(unsigned __int8 *)(v58 + 31));
                *(void *)(v58 + 8) = *v93;
                *(unsigned char *)(v58 + 31) = *v59;
                *uint64_t v93 = 0;
                ++*(unsigned char *)(v58 + 29);
                *uint64_t v59 = 0;
                *(unsigned char *)(v45 + 137) = *(unsigned char *)(v58 + 24);
                *(unsigned char *)(v58 + 24) = *(unsigned char *)a6 - 1;
              }
            }
            else
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error Signal", v84, v85, v86, v87, v88, v89, v90, v92);
                uint64_t v91 = sub_100050B4C(3u);
                if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
              return 406;
            }
          }
          else
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error remote handle", v76, v77, v78, v79, v80, v81, v82, v92);
              uint64_t v83 = sub_100050B4C(3u);
              if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            return 414;
          }
        }
        else
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error remote", v68, v69, v70, v71, v72, v73, v74, v92);
            uint64_t v75 = sub_100050B4C(3u);
            if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          return 2902;
        }
      }
    }
    else
    {
LABEL_19:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_AVDTP_FastConnectSetConfig error get local EP for seid %d", v35, v36, v37, v38, v39, v40, v41, a3);
        unsigned int v42 = sub_100050B4C(3u);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 120;
    }
  }
  return v15;
}

void sub_100140CC8(unsigned int a1)
{
  if (*(void *)(*(void *)(qword_100A02070 + 24) + 216))
  {
    uint64_t v2 = sub_1001404C4(a1);
    if (v2)
    {
      unsigned __int16 v24 = 0;
      __int16 v3 = sub_100137B04(v2);
      uint64_t v4 = sub_100134E9C(v3, &v24);
      if (v4)
      {
        uint64_t v5 = v4;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Flush callback lookup failed with status %! for mediaHandle %d", v6, v7, v8, v9, v10, v11, v12, v5);
          uint64_t v13 = sub_100050B4C(3u);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      else
      {
        uint64_t v22 = *(void (**)(uint64_t))(*(void *)(qword_100A02070 + 24) + 216);
        uint64_t v23 = v24;
        v22(v23);
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Flush callback lookup failed for mediaCid %d", v14, v15, v16, v17, v18, v19, v20, a1);
      uint64_t v21 = sub_100050B4C(3u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
}

void sub_100140DF4(void *a1)
{
  if (!dword_100A197BC) {
    return;
  }
  uint64_t v2 = *(void *)(qword_100A02070 + 8);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Signaling channel disconnected prior to media bringup (CID %d) with %!", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = sub_100050B4C(3u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v28 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v11 = sub_100134FD0((int)a1);
  if (v11)
  {
    uint64_t v12 = qword_100A02070;
    int v13 = *(unsigned __int8 *)(qword_100A02070 + 97);
    if (*(unsigned char *)(qword_100A02070 + 97))
    {
      uint64_t v14 = v11;
      do
      {
        if (*(void *)(v12 + 16) + ((unint64_t)*(unsigned __int8 *)(v2 + 135) << 6) == v14)
        {
          if (!*(_WORD *)(v2 + 128)) {
            sub_10025B8C0();
          }
          sub_100138A14(v2);
          uint64_t v12 = qword_100A02070;
        }
        v2 += 144;
        --v13;
      }
      while (v13);
    }
  }
  if (!dword_100A197BC)
  {
    uint64_t v18 = 408;
LABEL_20:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Signaling disconnect error %!", v19, v20, v21, v22, v23, v24, v25, v18);
      uint64_t v26 = sub_100050B4C(3u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  uint64_t v15 = *(unsigned __int8 *)(qword_100A02070 + 98);
  if (!*(unsigned char *)(qword_100A02070 + 98))
  {
LABEL_18:
    uint64_t v18 = 120;
    goto LABEL_20;
  }
  uint64_t v16 = (unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + 38);
  while (1)
  {
    int v17 = *v16;
    v16 += 32;
    if (v17 == a1) {
      break;
    }
    if (!--v15) {
      goto LABEL_18;
    }
  }
  sub_100136F5C(a1);
}

void sub_100140FC8(__int16 *a1, unsigned int a2, int a3)
{
  if (a2)
  {
    uint64_t v5 = a2;
    uint64_t v6 = qword_100A02070;
    do
    {
      __int16 v7 = *a1++;
      unsigned __int16 v8 = v7 - 1;
      if (*(unsigned __int8 *)(v6 + 97) > (unsigned __int16)(v7 - 1))
      {
        uint64_t v9 = *(void *)(v6 + 8);
        if (v9)
        {
          if (*(unsigned char *)(v9 + 144 * v8 + 132))
          {
            sub_100139A70(v9 + 144 * v8, a3);
            uint64_t v6 = qword_100A02070;
          }
        }
      }
      --v5;
    }
    while (v5);
  }
}

uint64_t sub_100141058(int a1, int a2)
{
  uint64_t v3 = qword_100A02070;
  if (*(unsigned char *)(qword_100A02070 + 98))
  {
    uint64_t v4 = 0;
    uint64_t v5 = (unsigned __int16 *)(*(void *)(qword_100A02070 + 16) + 38);
    while (1)
    {
      int v6 = *v5;
      v5 += 32;
      if (v6 == a2) {
        break;
      }
      if (*(unsigned __int8 *)(qword_100A02070 + 98) == ++v4) {
        goto LABEL_5;
      }
    }
    int v7 = v4;
  }
  else
  {
LABEL_5:
    int v7 = 255;
  }
  uint64_t v8 = *(void *)(qword_100A02070 + 8);
  if (!dword_100A197BC)
  {
    sub_10025B8C0();
    uint64_t v3 = qword_100A02070;
  }
  uint64_t v9 = *(unsigned __int8 *)(v3 + 97);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = 0;
  uint64_t v11 = (unsigned __int8 *)(v8 + 132);
  uint64_t v12 = v11;
  while (1)
  {
    int v13 = *v12;
    v12 += 144;
    if (v13)
    {
      if (v11[1] == a1 && v11[3] == v7) {
        break;
      }
    }
    ++v10;
    uint64_t v11 = v12;
    if (v9 == v10) {
      return 0;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Found handle at %d (i+1) with transaction: %d and signal: %d", v15, v16, v17, v18, v19, v20, v21, v10 + 1);
    uint64_t v22 = sub_100050B4C(3u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      uint64_t v24 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  v11[1] = -1;
  return v10 + 1;
}

uint64_t sub_1001411E8(int a1, int a2)
{
  uint64_t v2 = *(unsigned __int8 *)(qword_100A02070 + 97);
  if (*(unsigned char *)(qword_100A02070 + 97))
  {
    uint64_t v3 = *(void *)(qword_100A02070 + 8);
    do
    {
      if (*(void *)(qword_100A02070 + 8))
      {
        if (*(unsigned __int8 *)(v3 + 136) == 255) {
          uint64_t v4 = 0;
        }
        else {
          uint64_t v4 = *(void *)qword_100A02070 + 40 * *(unsigned __int8 *)(v3 + 136);
        }
        uint64_t v5 = *(unsigned __int8 *)(v3 + 135);
        if (v5 == 255)
        {
          uint64_t v6 = 0;
          if (!v4) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v6 = *(void *)(qword_100A02070 + 16) + (v5 << 6);
          if (!v4) {
            goto LABEL_14;
          }
        }
        if (*(unsigned __int8 *)(v4 + 25) == a1 && v6 && *(unsigned __int16 *)(v6 + 38) == a2) {
          return v3;
        }
      }
LABEL_14:
      v3 += 144;
      --v2;
    }
    while (v2);
  }
  return 0;
}

uint64_t sub_10014127C(int a1, int a2, _WORD *a3, unsigned char *a4)
{
  *a4 = 0;
  uint64_t result = sub_100141058(a1, a2);
  *a3 = result;
  if (result)
  {
    uint64_t v9 = a3 + 1;
    do
    {
      ++*a4;
      uint64_t result = sub_100141058(a1, a2);
      *v9++ = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_1001412E4(int a1, int a2)
{
  unsigned __int16 v2 = 0;
  if (a1 && a2)
  {
    if (*(unsigned char *)(qword_100A02070 + 97))
    {
      uint64_t v3 = 0;
      uint64_t v4 = *(void *)(qword_100A02070 + 8);
      uint64_t v5 = (unsigned __int8 *)(v4 + 132);
      uint64_t v6 = (unsigned __int8 *)(v4 + 132);
      while (1)
      {
        int v7 = *v6;
        v6 += 144;
        if (v7 == a1 && v4 != 0)
        {
          uint64_t v9 = v5[3];
          if (v9 != 255)
          {
            uint64_t v10 = *(void *)(qword_100A02070 + 16);
            if (v10)
            {
              if (*(unsigned __int16 *)(v10 + (v9 << 6) + 38) == a2) {
                break;
              }
            }
          }
        }
        ++v3;
        uint64_t v5 = v6;
        if (*(unsigned __int8 *)(qword_100A02070 + 97) == v3) {
          return 0;
        }
      }
      return (unsigned __int16)(v3 + 1);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

const char *sub_100141368(char a1)
{
  if ((a1 + 2) > 0xFu) {
    return "Unknown";
  }
  else {
    return off_10099BCB8[(char)(a1 + 2)];
  }
}

uint64_t sub_100141398(int a1, int a2)
{
  uint64_t result = sub_100134FD0(a1);
  if (result && *(unsigned __int8 *)(result + 44) == a2)
  {
    *(unsigned char *)(result + 44) = -1;
    uint64_t v4 = *(unsigned int *)(result + 24);
    return sub_100026DB4(v4);
  }
  return result;
}

uint64_t sub_1001413F4(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)
{
  char v5 = a3;
  if (a3 >= 0x10) {
    sub_10025B8C0();
  }
  if (a2 >= 0x40) {
    sub_10025B8C0();
  }
  if (a4 >= 0x40) {
    sub_10025B8C0();
  }
  uint64_t v8 = (char *)sub_100022FE8(3uLL);
  if (v8)
  {
    *uint64_t v8 = 16 * v5;
    v8[1] = a2;
    _DWORD v8[2] = 4 * a4;
    return sub_1001414E4(a1, v5, a2, v8, 3uLL);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No memory", v10, v11, v12, v13, v14, v15, v16, v18);
      uint64_t v17 = sub_100050B4C(3u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100748B78(v17);
      }
    }
    return 106;
  }
}

uint64_t sub_1001414E4(unsigned int a1, char a2, char a3, char *a4, size_t a5)
{
  uint64_t v10 = sub_100134FD0(a1);
  if (!v10 || (uint64_t v11 = v10, *(unsigned __int8 *)(v10 + 44) == 255))
  {
    uint64_t v28 = sub_100141710(a1, a4, a5);
    if (v28)
    {
      if (sub_100058654())
      {
        uint64_t v29 = sub_100141368(a3);
        sub_100056E24((uint64_t)"AVDTP Send failed [%s] transaction %d CID:%d", v30, v31, v32, v33, v34, v35, v36, (uint64_t)v29);
        uint64_t v37 = sub_100050B4C(3u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      sub_100142D0C(a1, a2, a3);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"cmdPending t:%d", v12, v13, v14, v15, v16, v17, v18, *(unsigned __int8 *)(v11 + 44));
      uint64_t v19 = sub_100050B4C(3u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100023010(a4);
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Outstanding command pending on CID: %d", v20, v21, v22, v23, v24, v25, v26, a1);
      uint64_t v27 = sub_100050B4C(3u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 118;
  }
  return v28;
}

uint64_t sub_100141668(unsigned int a1, unsigned int a2, unsigned int a3, int a4)
{
  char v5 = a3;
  if (a3 >= 0x10) {
    sub_10025B8C0();
  }
  if (a2 >= 0x40) {
    sub_10025B8C0();
  }
  uint64_t v8 = (char *)sub_100022FE8(3uLL);
  if (!v8) {
    return 106;
  }
  size_t v9 = 2;
  if (a4) {
    char v10 = 3;
  }
  else {
    char v10 = 2;
  }
  *uint64_t v8 = v10 | (16 * v5);
  v8[1] = a2;
  if (a4)
  {
    _DWORD v8[2] = a4;
    size_t v9 = 3;
  }

  return sub_100141710(a1, v8, v9);
}

uint64_t sub_100141710(unsigned int a1, char *a2, size_t a3)
{
  uint64_t v6 = sub_100134FD0(a1);
  if (!v6)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Signalling info not found for CID %d", v13, v14, v15, v16, v17, v18, v19, a1);
      uint64_t v20 = sub_100050B4C(3u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v21 = 403;
    goto LABEL_14;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_10025C6D8(a2, a3, 1);
  if (!v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Out of memory!", v22, v23, v24, v25, v26, v27, v28, v31);
      uint64_t v29 = sub_100050B4C(3u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v21 = 106;
LABEL_14:
    sub_100023010(a2);
    return v21;
  }
  size_t v9 = v8;
  v8[1] = 0;
  uint64_t v10 = *(void *)(v7 + 8);
  if (v10)
  {
    do
    {
      uint64_t v11 = v10;
      uint64_t v10 = *(void *)(v10 + 8);
    }
    while (v10);
    uint64_t v12 = (void *)(v11 + 8);
  }
  else
  {
    uint64_t v12 = (void *)(v7 + 8);
    if (*(unsigned char *)(v7 + 40))
    {
      sub_10025B8C0();
      uint64_t v12 = (void *)(v7 + 8);
    }
  }
  *uint64_t v12 = v9;
  if (*(void **)(v7 + 8) != v9) {
    return 0;
  }

  return sub_100142F08(v7);
}

uint64_t sub_100141884(unsigned int a1, unsigned int a2, char a3)
{
  char v4 = a2;
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v6 = (char *)sub_100022FE8(2uLL);
  if (!v6) {
    return 106;
  }
  *uint64_t v6 = (16 * v4) | 1;
  v6[1] = a3 & 0x3F;

  return sub_100141710(a1, v6, 2uLL);
}

uint64_t sub_100141910(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  char v7 = a3;
  if (a3 >= 0x10) {
    sub_10025B8C0();
  }
  if (a2 != 254 && a2 >= 0x40) {
    sub_10025B8C0();
  }
  uint64_t v10 = (char *)sub_100022FE8(a5 + 2);
  if (!v10) {
    return 106;
  }
  *uint64_t v10 = 16 * v7;
  v10[1] = a2;
  if (a5)
  {
    uint64_t v11 = 0;
    do
    {
      v10[v11 + 2] = 4 * *(unsigned char *)(a4 + v11);
      ++v11;
    }
    while (a5 != v11);
    unsigned __int16 v12 = v11 + 2;
  }
  else
  {
    unsigned __int16 v12 = 2;
  }

  return sub_1001414E4(a1, v7, a2, v10, v12);
}

uint64_t sub_1001419F8(unsigned int a1, unsigned int a2, unsigned int a3, char a4, int a5)
{
  char v7 = a3;
  if (a3 >= 0x10) {
    sub_10025B8C0();
  }
  if (a2 >= 0x40) {
    sub_10025B8C0();
  }
  uint64_t v10 = (char *)sub_100022FE8(4uLL);
  if (!v10) {
    return 106;
  }
  size_t v11 = 2;
  if (a5) {
    char v12 = 3;
  }
  else {
    char v12 = 2;
  }
  *uint64_t v10 = v12 | (16 * v7);
  v10[1] = a2;
  if (a5)
  {
    v10[2] = 4 * a4;
    v10[3] = a5;
    size_t v11 = 4;
  }

  return sub_100141710(a1, v10, v11);
}

uint64_t sub_100141AB8(unsigned int a1, unsigned int a2)
{
  char v2 = a2;
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  char v4 = (char *)sub_100022FE8(2uLL);
  if (!v4) {
    return 106;
  }
  *char v4 = 16 * v2;
  v4[1] = 1;

  return sub_1001414E4(a1, v2, 1, v4, 2uLL);
}

uint64_t sub_100141B38(unsigned int a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
  char v8 = a2;
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  unsigned __int16 v10 = 2 * a4 + 3;
  size_t v11 = (char *)sub_100022FE8(2 * a4 + 3);
  if (!v11) {
    return 106;
  }
  char v12 = v11;
  unsigned int v13 = (unsigned __int16)(2 * a4 + 3);
  if (a5) {
    char v14 = 3;
  }
  else {
    char v14 = 2;
  }
  *size_t v11 = v14 | (16 * v8);
  if (v13 == 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 723, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v11[1] = 1;
  if (a5)
  {
    if (v13 <= 2) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 726, "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v11[2] = a5;
    unsigned __int16 v15 = 3;
  }
  else if (a4)
  {
    unsigned __int8 v17 = 0;
    unsigned __int16 v15 = 2;
    do
    {
      uint64_t v18 = (unsigned char *)(a3 + 4 * v17);
      if (v18[3] >= 2u) {
        sub_10025B8C0();
      }
      uint64_t v19 = a3 + 4 * v17;
      unsigned int v21 = *(unsigned __int8 *)(v19 + 1);
      uint64_t v20 = (unsigned char *)(v19 + 1);
      if (v21 >= 2) {
        sub_10025B8C0();
      }
      if (v15 >= v10) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 734, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      uint64_t v22 = v15 | 1;
      v12[v15] = (2 * v18[3]) | (4 * *(unsigned char *)(a3 + 4 * v17 + 2));
      if (v22 >= v10) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 735, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      v15 += 2;
      v12[v22] = *v18 & 0xF0 | (8 * *v20);
      ++v17;
    }
    while (a4 > v17);
  }
  else
  {
    unsigned __int16 v15 = 2;
  }

  return sub_100141710(a1, v12, v15);
}

uint64_t sub_100141D24(uint64_t a1, unsigned int a2)
{
  int v2 = 0;
  if (a2)
  {
    uint64_t v3 = a2;
    char v4 = (unsigned __int8 *)(a1 + 3);
    while (2)
    {
      switch(*(v4 - 3))
      {
        case 1u:
        case 2u:
        case 8u:
          goto LABEL_7;
        case 3u:
          v2 += 5;
          goto LABEL_8;
        case 4u:
        case 7u:
          v2 += *v4 + 4;
          goto LABEL_8;
        case 5u:
        case 6u:
          v2 += 3;
          goto LABEL_6;
        default:
LABEL_6:
          v2 += *v4;
LABEL_7:
          v2 += 2;
LABEL_8:
          v4 += 16;
          if (!--v3) {
            return (unsigned __int16)v2;
          }
          continue;
      }
    }
  }
  return (unsigned __int16)v2;
}

unsigned char *sub_100141DC4(unsigned char *result, unsigned __int8 *a2, unsigned int a3, int a4)
{
  if (a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = a3;
    while (1)
    {
      unsigned int v8 = *a2;
      if (v8 < 8 || a4 != 0)
      {
        if (v6[15])
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_76:
          int v54 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_78:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 794, v54);
        }
        uint64_t v10 = *((unsigned __int16 *)v6 + 6);
        if (*((unsigned __int16 *)v6 + 5) <= v10) {
          goto LABEL_76;
        }
        if (v6[14] != 2)
        {
          int v54 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_78;
        }
        uint64_t v11 = *(void *)v6;
        *((_WORD *)v6 + 6) = v10 + 1;
        *(unsigned char *)(v11 + v10) = v8;
        unsigned int v8 = *a2;
      }
      switch(v8)
      {
        case 1u:
        case 2u:
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_80:
            uint64_t v55 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_82:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 800, v55);
          }
          uint64_t v12 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v12) {
            goto LABEL_80;
          }
          if (v6[14] != 2)
          {
            uint64_t v55 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_82;
          }
LABEL_15:
          uint64_t v13 = *(void *)v6;
          *((_WORD *)v6 + 6) = v12 + 1;
          *(unsigned char *)(v13 + v12) = 0;
LABEL_73:
          a2 += 16;
          if (!--v7) {
            return result;
          }
          break;
        case 3u:
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_113:
            uint64_t v64 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_115:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 807, v64);
          }
          uint64_t v41 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v41) {
            goto LABEL_113;
          }
          if (v6[14] != 2)
          {
            uint64_t v64 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_115;
          }
          uint64_t v42 = *(void *)v6;
          *((_WORD *)v6 + 6) = v41 + 1;
          *(unsigned char *)(v42 + v41) = 3;
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_117:
            uint64_t v65 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_119:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 808, v65);
          }
          uint64_t v43 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v43) {
            goto LABEL_117;
          }
          if (v6[14] != 2)
          {
            uint64_t v65 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_119;
          }
          unsigned __int8 v44 = a2[1];
          uint64_t v45 = *(void *)v6;
          *((_WORD *)v6 + 6) = v43 + 1;
          *(unsigned char *)(v45 + v43) = v44;
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_121:
            uint64_t v66 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_123:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 809, v66);
          }
          uint64_t v46 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v46) {
            goto LABEL_121;
          }
          if (v6[14] != 2)
          {
            uint64_t v66 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_123;
          }
          unsigned __int8 v47 = a2[2];
          uint64_t v48 = *(void *)v6;
          *((_WORD *)v6 + 6) = v46 + 1;
          *(unsigned char *)(v48 + v46) = v47;
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_125:
            uint64_t v67 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_127:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 810, v67);
          }
          uint64_t v49 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v49) {
            goto LABEL_125;
          }
          if (v6[14] != 2)
          {
            uint64_t v67 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_127;
          }
          unsigned __int8 v50 = a2[3];
          uint64_t v51 = *(void *)v6;
          *((_WORD *)v6 + 6) = v49 + 1;
          *(unsigned char *)(v51 + v49) = v50;
          goto LABEL_73;
        case 4u:
        case 7u:
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_84:
            int v56 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_86:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 814, v56);
          }
          uint64_t v14 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v14) {
            goto LABEL_84;
          }
          if (v6[14] != 2)
          {
            int v56 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_86;
          }
          char v15 = a2[3] + 2;
          uint64_t v16 = *(void *)v6;
          *((_WORD *)v6 + 6) = v14 + 1;
          *(unsigned char *)(v16 + v14) = v15;
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_88:
            uint64_t v57 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_90:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 815, v57);
          }
          uint64_t v17 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v17) {
            goto LABEL_88;
          }
          if (v6[14] != 2)
          {
            uint64_t v57 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_90;
          }
          unsigned __int8 v18 = a2[1];
          uint64_t v19 = *(void *)v6;
          *((_WORD *)v6 + 6) = v17 + 1;
          *(unsigned char *)(v19 + v17) = v18;
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_92:
            uint64_t v58 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_94:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 816, v58);
          }
          uint64_t v20 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v20) {
            goto LABEL_92;
          }
          if (v6[14] != 2)
          {
            uint64_t v58 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_94;
          }
          unsigned __int8 v21 = a2[2];
          uint64_t v22 = *(void *)v6;
          *((_WORD *)v6 + 6) = v20 + 1;
          *(unsigned char *)(v22 + v20) = v21;
          uint64_t v23 = *(void *)v6;
          uint64_t v24 = *((unsigned __int16 *)v6 + 6);
          uint64_t v25 = (const void *)*((void *)a2 + 1);
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
            int v26 = 0;
          }
          else
          {
            int v26 = *((unsigned __int16 *)v6 + 5) - v24;
          }
          size_t v52 = a2[3];
          if (v26 < (int)v52)
          {
            uint64_t v61 = "ByteStream_NumReadBytesAvail(*pBs) >= (cap->genericData.dataLen)";
            goto LABEL_105;
          }
          if (v6[14] != 2)
          {
            uint64_t v61 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 817, v61);
          }
          uint64_t v53 = (void *)(v23 + v24);
LABEL_72:
          uint64_t result = memmove(v53, v25, v52);
          *((_WORD *)v6 + 6) += a2[3];
          goto LABEL_73;
        case 5u:
        case 6u:
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_96:
            uint64_t v59 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_98:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 821, v59);
          }
          uint64_t v27 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v27) {
            goto LABEL_96;
          }
          if (v6[14] != 2)
          {
            uint64_t v59 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_98;
          }
          char v28 = a2[3] + 1;
          uint64_t v29 = *(void *)v6;
          *((_WORD *)v6 + 6) = v27 + 1;
          *(unsigned char *)(v29 + v27) = v28;
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_100:
            uint64_t v60 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_102:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 822, v60);
          }
          uint64_t v30 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v30) {
            goto LABEL_100;
          }
          if (v6[14] != 2)
          {
            uint64_t v60 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_102;
          }
          unsigned __int8 v31 = a2[1];
          uint64_t v32 = *(void *)v6;
          *((_WORD *)v6 + 6) = v30 + 1;
          *(unsigned char *)(v32 + v30) = v31;
          int v33 = a2[3];
          if (!a2[3]) {
            goto LABEL_73;
          }
          uint64_t v34 = *(void *)v6;
          uint64_t v35 = *((unsigned __int16 *)v6 + 6);
          uint64_t v25 = (const void *)*((void *)a2 + 1);
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
            int v36 = 0;
            int v33 = a2[3];
          }
          else
          {
            int v36 = *((unsigned __int16 *)v6 + 5) - v35;
          }
          if (v36 < v33)
          {
            uint64_t v62 = "ByteStream_NumReadBytesAvail(*pBs) >= (cap->genericData.dataLen)";
LABEL_107:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 824, v62);
          }
          if (v6[14] != 2)
          {
            uint64_t v62 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_107;
          }
LABEL_71:
          uint64_t v53 = (void *)(v34 + v35);
          size_t v52 = v33;
          goto LABEL_72;
        case 8u:
          if (!a4) {
            goto LABEL_73;
          }
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_132:
            uint64_t v69 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_133:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 804, v69);
          }
          uint64_t v12 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v12) {
            goto LABEL_132;
          }
          if (v6[14] != 2)
          {
            uint64_t v69 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_133;
          }
          goto LABEL_15;
        default:
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
LABEL_109:
            uint64_t v63 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
LABEL_111:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 828, v63);
          }
          uint64_t v37 = *((unsigned __int16 *)v6 + 6);
          if (*((unsigned __int16 *)v6 + 5) <= v37) {
            goto LABEL_109;
          }
          if (v6[14] != 2)
          {
            uint64_t v63 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_111;
          }
          unsigned __int8 v38 = a2[3];
          uint64_t v39 = *(void *)v6;
          *((_WORD *)v6 + 6) = v37 + 1;
          *(unsigned char *)(v39 + v37) = v38;
          int v33 = a2[3];
          if (!a2[3]) {
            goto LABEL_73;
          }
          uint64_t v34 = *(void *)v6;
          uint64_t v35 = *((unsigned __int16 *)v6 + 6);
          uint64_t v25 = (const void *)*((void *)a2 + 1);
          if (v6[15])
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c");
            int v40 = 0;
            int v33 = a2[3];
          }
          else
          {
            int v40 = *((unsigned __int16 *)v6 + 5) - v35;
          }
          if (v40 < v33)
          {
            uint64_t v68 = "ByteStream_NumReadBytesAvail(*pBs) >= (cap->genericData.dataLen)";
            goto LABEL_130;
          }
          if (v6[14] != 2)
          {
            uint64_t v68 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_130:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 830, v68);
          }
          goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_10014267C(unsigned int a1, unsigned int a2, unsigned int a3, unsigned __int8 *a4, unsigned int a5, int a6)
{
  __int16 v12 = sub_100141D24((uint64_t)a4, a5);
  if (a3 >= 0x10) {
    sub_10025B8C0();
  }
  if (!a4 && a5) {
    sub_10025B8C0();
  }
  if (a2 <= 0xC && ((1 << a2) & 0x1014) != 0)
  {
    if (!a4) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_10025B8C0();
    if (!a4) {
      goto LABEL_13;
    }
  }
  if (!a6)
  {
    unsigned __int16 v13 = sub_100141D24((uint64_t)a4, a5) + 2;
    goto LABEL_20;
  }
LABEL_13:
  if (!a4 && a6)
  {
    uint64_t v14 = 0;
LABEL_19:
    unsigned __int16 v13 = sub_100141D24(v14, a5) + 3;
    goto LABEL_20;
  }
  unsigned __int16 v13 = v12 + 2;
  if (a4 && a6)
  {
    uint64_t v14 = (uint64_t)a4;
    goto LABEL_19;
  }
LABEL_20:
  char v15 = (char *)sub_100022FE8(v13);
  if (!v15) {
    return 106;
  }
  if (!v13) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 876, "(length) > 0");
  }
  uint64_t v16 = v15;
  uint64_t v20 = v15;
  uint64_t v21 = v13;
  HIWORD(v21) = 2;
  WORD1(v21) = v13;
  if (a6) {
    char v17 = 3;
  }
  else {
    char v17 = 2;
  }
  *char v15 = v17 | (16 * a3);
  if (v13 == 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 883, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  WORD2(v21) = 2;
  v15[1] = a2;
  if (a6)
  {
    if (v13 <= 2u) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 886, "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    WORD2(v21) = 3;
    void v15[2] = a6;
  }
  else
  {
    sub_100141DC4(&v20, a4, a5, a2 == 12);
    if (BYTE6(v21) != 2)
    {
      size_t v19 = WORD1(v21);
      goto LABEL_32;
    }
  }
  size_t v19 = WORD2(v21);
  WORD1(v21) = WORD2(v21);
LABEL_32:
  BYTE6(v21) = 15;
  return sub_100141710(a1, v16, v19);
}

uint64_t sub_100142870(unsigned int a1, unsigned int a2, char a3, char a4, unsigned __int8 *a5, unsigned int a6)
{
  unsigned int v12 = sub_100141D24((uint64_t)a5, a6);
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  unsigned __int16 v13 = (char *)sub_100022FE8((unsigned __int16)(v12 + 4));
  if (!v13) {
    return 106;
  }
  if ((_WORD)v12 == 0xFFFC) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 924, "(length) > 0");
  }
  uint64_t v14 = v13;
  char v17 = v13;
  __int16 v18 = v12 + 4;
  __int16 v21 = 2;
  unsigned __int16 v19 = v12 + 4;
  *unsigned __int16 v13 = 16 * a2;
  if ((unsigned __int16)(v12 + 4) == 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 927, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v13[1] = 3;
  if ((unsigned __int16)(v12 + 4) <= 2u) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 928, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v13[2] = 4 * a3;
  if (v12 >= 0xFFFC) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 929, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  unsigned __int16 v20 = 4;
  _OWORD v13[3] = 4 * a4;
  sub_100141DC4(&v17, a5, a6, 1);
  if (v21 == 2)
  {
    size_t v15 = v20;
    unsigned __int16 v19 = v20;
  }
  else
  {
    size_t v15 = v19;
  }
  LOBYTE(v21) = 15;
  return sub_1001414E4(a1, a2, 3, v14, v15);
}

uint64_t sub_100142A14(unsigned int a1, int a2, unsigned int a3, char a4, int a5)
{
  char v7 = a3;
  if (a3 >= 0x10) {
    sub_10025B8C0();
  }
  if (a2 != 3 && a2 != 5) {
    sub_10025B8C0();
  }
  uint64_t v10 = (char *)sub_100022FE8(4uLL);
  if (!v10) {
    return 106;
  }
  char v11 = 16 * v7;
  if (a5)
  {
    char v12 = v11 | 3;
    v10[2] = a4;
    v10[3] = a5;
    size_t v13 = 4;
  }
  else
  {
    char v12 = v11 | 2;
    size_t v13 = 2;
  }
  *uint64_t v10 = v12;
  v10[1] = a2;

  return sub_100141710(a1, v10, v13);
}

uint64_t sub_100142ADC(unsigned int a1, unsigned int a2, const void *a3, unsigned int a4, int a5)
{
  char v8 = a2;
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  uint64_t v10 = (char *)sub_100022FE8(a4 + 3);
  if (!v10) {
    return 106;
  }
  int v11 = (unsigned __int16)(a4 + 3);
  if ((_WORD)a4 == 0xFFFD) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 1083, "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  char v12 = v10;
  char v13 = 16 * v8;
  if (a5)
  {
    *uint64_t v10 = v13 | 3;
    if (v11 == 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 1090, "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v10[1] = 11;
    if (v11 == 2) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 1091, "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v10[2] = a5;
    unsigned __int16 v14 = 3;
  }
  else
  {
    *uint64_t v10 = v13 | 2;
    if (v11 == 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 1086, "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    v10[1] = 11;
    if (v11 - 2 < a4) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avdtp/avdtp_signal.c", 1087, "ByteStream_NumReadBytesAvail(bs) >= (dataLen)");
    }
    memmove(v10 + 2, a3, a4);
    unsigned __int16 v14 = a4 + 2;
  }

  return sub_100141710(a1, v12, v14);
}

uint64_t sub_100142C68(unsigned int a1, unsigned int a2, int a3, char a4)
{
  char v6 = a2;
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  char v8 = (char *)sub_100022FE8(3uLL);
  if (!v8) {
    return 106;
  }
  char v9 = 16 * v6;
  if (a3)
  {
    char v10 = v9 | 2;
    size_t v11 = 2;
  }
  else
  {
    char v10 = v9 | 3;
    _DWORD v8[2] = a4;
    size_t v11 = 3;
  }
  *char v8 = v10;
  v8[1] = 13;

  return sub_100141710(a1, v8, v11);
}

uint64_t sub_100142D0C(int a1, char a2, char a3)
{
  v16[0] = 0;
  int v6 = *(unsigned __int16 *)(sub_10025B218(3u) + 4);
  __int16 v13 = a1;
  char v14 = a2;
  char v15 = a3;
  uint64_t result = sub_100134FD0(a1);
  if (result)
  {
    uint64_t v8 = result;
    char v9 = sub_100134C28();
    unsigned int v11 = *(_DWORD *)(v8 + 24);
    uint64_t v10 = v8 + 24;
    *(unsigned char *)(v10 + 21) = v9;
    v16[1] = &v13;
    LOWORD(v16[0]) = 4;
    *(unsigned char *)(v10 + 20) = a2;
    sub_100026DB4(v11);
    if (v6) {
      int v12 = v6;
    }
    else {
      int v12 = 20;
    }
    return sub_1000268E4((uint64_t)sub_100142DC0, v16, v12, (int *)v10);
  }
  return result;
}

void sub_100142DC0(uint64_t a1)
{
  int v18 = 0;
  char v1 = *(unsigned __int16 **)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = *((unsigned __int8 *)v1 + 2);
  uint64_t v4 = *((unsigned __int8 *)v1 + 3);
  uint64_t v5 = sub_100134FD0(*v1);
  if (v5)
  {
    uint64_t v6 = v5;
    if (v3 == *(unsigned __int8 *)(v5 + 44))
    {
      if (sub_100134C44() || (int v7 = *(unsigned __int8 *)(v6 + 45), v7 != sub_100134C28()))
      {
        sub_100142D0C(v2, v3, v4);
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Didn't get command response to transaction %d within timeout period", v8, v9, v10, v11, v12, v13, v14, v3);
          char v15 = sub_100050B4C(3u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        LOBYTE(v18) = (16 * v3) | 3;
        BYTE1(v18) = v4;
        if (v4 > 9 || ((1 << v4) & 0x2A8) == 0)
        {
          BYTE2(v18) = -1;
          int v17 = 3;
        }
        else
        {
          HIWORD(v18) = -256;
          int v17 = 4;
        }
        sub_10013ACC4(v2, (unsigned __int8 *)&v18, v17);
      }
    }
  }
}

uint64_t sub_100142F08(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    sub_10025B8C0();
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    sub_10025B8C0();
    uint64_t v2 = *(void *)(a1 + 8);
  }
  *(unsigned char *)(a1 + 40) = *(unsigned __int16 *)(v2 + 4) / (*(unsigned __int16 *)(a1 + 34) - 1) + 1;

  return sub_100142F74(a1, 1);
}

uint64_t sub_100142F74(uint64_t a1, int a2)
{
  if (!*(unsigned char *)(a1 + 40)) {
    sub_10025B8C0();
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    v30[0] = 0;
    __int16 v29 = 0;
    if (a2)
    {
      if (*(unsigned __int8 *)(a1 + 40) < 2u)
      {
        size_t v5 = 0;
      }
      else
      {
        sub_10025C9FC(v4, (unsigned __int16)(*(_WORD *)(a1 + 34) - 1));
        sub_100022D4C((char *)(a1 + 41), v4, 1u);
        LOBYTE(v29) = *(unsigned char *)(a1 + 41) | 4;
        HIBYTE(v29) = *(unsigned char *)(a1 + 40);
        sub_100022D4C(v30, v4, 1u);
        size_t v5 = 3;
      }
    }
    else
    {
      sub_10025CA4C(v4, (unsigned __int16)(*(_WORD *)(a1 + 34) - 1));
      if (*(unsigned char *)(a1 + 40) == 1) {
        char v6 = 12;
      }
      else {
        char v6 = 8;
      }
      char v7 = *(unsigned char *)(a1 + 41) | v6;
      *(unsigned char *)(a1 + 41) = v7;
      LOBYTE(v29) = v7;
      size_t v5 = 1;
    }
    uint64_t v8 = (unsigned __int8 *)sub_10025C1E0(2u);
    if (!v8)
    {
      uint64_t v4 = 106;
LABEL_21:
      int v18 = *(void **)(a1 + 8);
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SendFragment failed", v19, v20, v21, v22, v23, v24, v25, v28);
        int v26 = sub_100050B4C(3u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_100744FE4();
        }
      }
      *(void *)(a1 + 8) = v18[1];
      *(unsigned char *)(a1 + 40) = 0;
      sub_10025C53C(v18);
      return v4;
    }
    uint64_t v9 = v8;
    sub_100022798(v8, (char *)&v29, v5, 0);
    sub_10025C92C(v9, *(void *)(a1 + 8));
    if (!*((_WORD *)v9 + 2)) {
      sub_10025B8C0();
    }
    uint64_t v4 = ((uint64_t (*)(void (*)(unsigned int, void *), void, void, unsigned __int8 *, void))loc_1001DE1A4)(sub_100143184, *(unsigned __int16 *)(a1 + 38), 0, v9, 0);
    if (v4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"L2CAP Write failed: %!", v10, v11, v12, v13, v14, v15, v16, v4);
        int v17 = sub_100050B4C(3u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_10025C53C(v9);
      goto LABEL_21;
    }
  }
  return v4;
}

void sub_100143184(unsigned int a1, void *a2)
{
  sub_10025C53C(a2);
  uint64_t v3 = sub_100134FD0(a1);
  if (v3)
  {
    uint64_t v4 = v3;
    char v5 = *(unsigned char *)(v3 + 40);
    if (!v5)
    {
      sub_10025B8C0();
      char v5 = *(unsigned char *)(v4 + 40);
    }
    char v6 = v5 - 1;
    *(unsigned char *)(v4 + 40) = v6;
    if (v6)
    {
      if (!sub_100142F74(v4, 0)) {
        return;
      }
    }
    else
    {
      uint64_t v15 = *(void **)(v4 + 8);
      if (!v15) {
        return;
      }
      *(void *)(v4 + 8) = v15[1];
      sub_10025C53C(v15);
      if (!*(void *)(v4 + 8) || !sub_100142F08(v4)) {
        return;
      }
    }
    while (*(void *)(v4 + 8) && sub_100142F08(v4))
      ;
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"No signalling channel found for CID %d", v7, v8, v9, v10, v11, v12, v13, a1);
    uint64_t v14 = sub_100050B4C(3u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10014327C(const char *a1, int a2, const char *a3)
{
}

uint64_t sub_1001432C4(uint64_t a1)
{
  if (xmmword_100A197C0) {
    return 119;
  }
  if (a1)
  {
    uint64_t v3 = sub_10010CE48(0x60uLL);
    qword_100A15230 = (uint64_t)v3;
    if (v3)
    {
      *uint64_t v3 = a1;
      int v4 = *(unsigned __int8 *)sub_10025B218(4u);
      *(unsigned char *)(qword_100A15230 + 88) = v4;
      if ((v4 - 17) <= 0xFFFFFFEF)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"invalid maxTransactions value (%d), setting to %d\n", v5, v6, v7, v8, v9, v10, v11, *(unsigned __int8 *)(qword_100A15230 + 88));
          uint64_t v12 = sub_100050B4C(4u);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        *(unsigned char *)(qword_100A15230 + 88) = 16;
      }
      int v13 = *(unsigned __int8 *)(sub_10025B218(4u) + 1);
      *(unsigned char *)(qword_100A15230 + 89) = v13;
      if (!v13)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"invalid maxConnections value (%d), setting to 1\n", v14, v15, v16, v17, v18, v19, v20, *(unsigned __int8 *)(qword_100A15230 + 89));
          uint64_t v21 = sub_100050B4C(4u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        *(unsigned char *)(qword_100A15230 + 89) = 1;
      }
      uint64_t v22 = sub_10025B218(4u);
      uint64_t result = 0;
      *(unsigned char *)(qword_100A15230 + 91) = *(unsigned char *)(v22 + 2);
      LODWORD(xmmword_100A197C0) = 1;
    }
    else
    {
      return 106;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return result;
}

uint64_t sub_10014344C()
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (*(void *)(qword_100A15230 + 8) || *(void *)(qword_100A15230 + 16)) {
    return 117;
  }
  if (*(void *)(qword_100A15230 + 72) || *(void *)(qword_100A15230 + 80)) {
    return 118;
  }
  if (*(unsigned char *)(qword_100A15230 + 90)) {
    return 141;
  }
  sub_100023010((void *)qword_100A15230);
  uint64_t result = 0;
  qword_100A15230 = 0;
  LODWORD(xmmword_100A197C0) = 0;
  return result;
}

uint64_t sub_1001434D8(int *a1, uint64_t a2, char a3)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  uint64_t v3 = qword_100A15230;
  if (*(unsigned __int8 *)(qword_100A15230 + 90) >= *(unsigned __int8 *)(qword_100A15230 + 89)) {
    return 3300;
  }
  uint64_t v7 = *(void *)(qword_100A15230 + 32);
  if (v7)
  {
    uint64_t result = sub_100143B34(a1, 2u, *(void *)(v7 + 8));
    if (result) {
      return result;
    }
    uint64_t v3 = qword_100A15230;
  }
  uint64_t v9 = *(void *)(v3 + 24);
  if (v9)
  {
    uint64_t result = sub_100143B34(a1, 2u, *(void *)(v9 + 8));
    if (result) {
      return result;
    }
    uint64_t v3 = qword_100A15230;
  }
  ++*(unsigned char *)(v3 + 90);
  uint64_t result = sub_100132404((uint64_t)a1, 4366, a2, a3);
  if (result)
  {
    if (*(unsigned char *)(qword_100A15230 + 90)) {
      --*(unsigned char *)(qword_100A15230 + 90);
    }
  }
  return result;
}

uint64_t sub_1001435B8(int *a1, int a2, char a3)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  char v4 = a2;
  if (a2)
  {
    uint64_t v6 = qword_100A15230;
    if (*(unsigned __int8 *)(qword_100A15230 + 90) >= *(unsigned __int8 *)(qword_100A15230 + 89)) {
      return 3300;
    }
    uint64_t v7 = *(void *)(qword_100A15230 + 32);
    if (v7)
    {
      uint64_t result = sub_100143B34(a1, 2u, *(void *)(v7 + 8));
      if (result) {
        return result;
      }
      uint64_t v6 = qword_100A15230;
    }
    uint64_t v9 = *(void *)(v6 + 24);
    if (v9)
    {
      uint64_t result = sub_100143B34(a1, 2u, *(void *)(v9 + 8));
      if (result) {
        return result;
      }
      uint64_t v6 = qword_100A15230;
    }
    ++*(unsigned char *)(v6 + 90);
  }

  return sub_100132E84((uint64_t)a1, v4, a3);
}

uint64_t sub_100143698(int *a1)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  uint64_t v2 = sub_100133000((uint64_t)a1);
  if (v2) {
    return v2;
  }
  uint64_t v4 = qword_100A15230;
  uint64_t v5 = *(void *)(qword_100A15230 + 32);
  if (v5)
  {
    uint64_t result = sub_100143B34(a1, 3u, *(void *)(v5 + 8));
    if (result) {
      return result;
    }
    uint64_t v4 = qword_100A15230;
  }
  uint64_t v6 = *(void *)(v4 + 24);
  if (!v6) {
    return v2;
  }
  uint64_t result = sub_100143B34(a1, 3u, *(void *)(v6 + 8));
  if (!result) {
    return v2;
  }
  return result;
}

uint64_t sub_100143734(int *a1)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  uint64_t v1 = qword_100A15230;
  if (*(unsigned __int8 *)(qword_100A15230 + 90) >= *(unsigned __int8 *)(qword_100A15230 + 89)) {
    return 3300;
  }
  uint64_t v3 = *(void *)(qword_100A15230 + 32);
  if (v3)
  {
    uint64_t result = sub_100143B34(a1, 2u, *(void *)(v3 + 8));
    if (result) {
      return result;
    }
    uint64_t v1 = qword_100A15230;
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if (v5)
  {
    uint64_t result = sub_100143B34(a1, 2u, *(void *)(v5 + 8));
    if (result) {
      return result;
    }
    uint64_t v1 = qword_100A15230;
  }
  ++*(unsigned char *)(v1 + 90);
  uint64_t v6 = *(void *)(v1 + 32);
  if (v6)
  {
    uint64_t result = sub_100143B34(a1, 1u, *(void *)(v6 + 8));
    uint64_t v1 = qword_100A15230;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v7 = *(void *)(v1 + 24);
  if (v7)
  {
    uint64_t v8 = *(void *)(v7 + 8);
    return sub_100143B34(a1, 1u, v8);
  }
  return result;
}

uint64_t sub_100143828(uint64_t a1)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  uint64_t v2 = qword_100A15230;
  uint64_t v3 = *(void *)(qword_100A15230 + 32);
  if (v3)
  {
    uint64_t result = sub_100143A88(a1, *(void *)(v3 + 8));
    uint64_t v2 = qword_100A15230;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v5 = *(void *)(v2 + 24);
  if (v5)
  {
    uint64_t result = sub_100143A88(a1, *(void *)(v5 + 8));
    uint64_t v2 = qword_100A15230;
  }
  if (*(unsigned char *)(v2 + 90)) {
    --*(unsigned char *)(v2 + 90);
  }
  return result;
}

void sub_1001438B0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int16 **)(qword_100A15230 + 72);
  if (v2)
  {
    uint64_t v5 = 0;
    do
    {
      BOOL v6 = *(_DWORD *)a1 == *(_DWORD *)v2 && *(unsigned __int16 *)(a1 + 4) == v2[2];
      if (!v6 || a2 && *a2 != *((unsigned __int8 *)v2 + 6))
      {
        uint64_t v7 = (void **)(v2 + 12);
        goto LABEL_8;
      }
      uint64_t v8 = (void *)*((void *)v2 + 3);
      if (v5)
      {
        _OWORD v5[3] = v8;
        if (!*((void *)v2 + 3)) {
          goto LABEL_16;
        }
      }
      else
      {
        *(void *)(qword_100A15230 + 72) = v8;
        if (!v8)
        {
LABEL_16:
          uint64_t v9 = qword_100A15230;
          if (*(unsigned __int16 **)(qword_100A15230 + 80) != v2)
          {
            sub_10025B8C0();
            uint64_t v9 = qword_100A15230;
          }
          *(void *)(v9 + 80) = v5;
        }
      }
      sub_100023010(*((void **)v2 + 1));
      sub_100023010(v2);
      if (a2) {
        return;
      }
      if (v5)
      {
        uint64_t v7 = v5 + 3;
        uint64_t v2 = (unsigned __int16 *)v5;
      }
      else
      {
        uint64_t v2 = 0;
        uint64_t v7 = (void **)(qword_100A15230 + 72);
      }
LABEL_8:
      uint64_t v5 = (void **)v2;
      uint64_t v2 = (unsigned __int16 *)*v7;
    }
    while (*v7);
  }
}

uint64_t sub_1001439B4(uint64_t a1, int a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  uint64_t v4 = qword_100A15230;
  if (a2)
  {
    uint64_t v5 = *(void *)(qword_100A15230 + 32);
    if (!v5)
    {
      sub_10025B8C0();
      uint64_t v4 = qword_100A15230;
      uint64_t v5 = *(void *)(qword_100A15230 + 32);
    }
    if (!*(void *)(v5 + 8))
    {
      sub_10025B8C0();
      uint64_t v4 = qword_100A15230;
      uint64_t v5 = *(void *)(qword_100A15230 + 32);
    }
  }
  else
  {
    uint64_t v5 = *(void *)(qword_100A15230 + 24);
    if (!v5)
    {
      sub_10025B8C0();
      uint64_t v4 = qword_100A15230;
      uint64_t v5 = *(void *)(qword_100A15230 + 24);
    }
    if (!*(void *)(v5 + 8))
    {
      sub_10025B8C0();
      uint64_t v4 = qword_100A15230;
      uint64_t v5 = *(void *)(qword_100A15230 + 24);
    }
  }
  BOOL v6 = (uint64_t *)(v5 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v4 + 89);
  if (!v7) {
    return 0;
  }
  for (uint64_t result = *v6;
        *(_DWORD *)result != *(_DWORD *)a1 || *(unsigned __int16 *)(result + 4) != *(unsigned __int16 *)(a1 + 4);
        result += 32)
  {
    if (!--v7) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100143A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a1)
  {
    if (!a2) {
      return 0;
    }
  }
  else
  {
    sub_10025B8C0();
    if (!v2) {
      return 0;
    }
  }
  uint64_t v4 = *(unsigned __int8 *)(qword_100A15230 + 89);
  if (!*(unsigned char *)(qword_100A15230 + 89)) {
    return 120;
  }
  while (*(_DWORD *)v2 != *(_DWORD *)a1 || *(unsigned __int16 *)(v2 + 4) != *(unsigned __int16 *)(a1 + 4))
  {
    v2 += 32;
    if (!--v4) {
      return 120;
    }
  }
  *(_DWORD *)uint64_t v2 = 0;
  *(_WORD *)(v2 + 4) = 0;
  if (*(unsigned char *)(v2 + 6))
  {
    uint64_t result = 0;
    *(unsigned char *)(v2 + 6) = 0;
    return result;
  }
  return 0;
}

uint64_t sub_100143B34(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1)
  {
    if (!a3) {
      return 0;
    }
  }
  else
  {
    sub_10025B8C0();
    if (!v3) {
      return 0;
    }
  }
  uint64_t v6 = qword_100A15230;
  uint64_t v7 = *(unsigned __int8 *)(qword_100A15230 + 89);
  if (!*(unsigned char *)(qword_100A15230 + 89)) {
    return 120;
  }
  uint64_t v8 = v3;
  do
  {
    if (*(_DWORD *)v8 == *a1 && *(unsigned __int16 *)(v8 + 4) == *((unsigned __int16 *)a1 + 2))
    {
      switch(*(unsigned char *)(v8 + 6))
      {
        case 0:
          if (a2 == 2) {
            goto LABEL_35;
          }
          return 122;
        case 1:
          if (a2 == 3) {
            goto LABEL_35;
          }
          return 126;
        case 2:
          if (a2 > 1) {
            return 116;
          }
          goto LABEL_35;
        case 3:
          if (a2) {
            return 116;
          }
LABEL_35:
          if (*(unsigned __int8 *)(v8 + 6) == a2) {
            return 0;
          }
          uint64_t result = 0;
          *(unsigned char *)(v8 + 6) = a2;
          break;
        default:
          return 408;
      }
      return result;
    }
    v8 += 32;
    --v7;
  }
  while (v7);
  unint64_t v10 = 0;
  while (1)
  {
    if (*(_DWORD *)v3) {
      BOOL v11 = 0;
    }
    else {
      BOOL v11 = *(unsigned __int16 *)(v3 + 4) == 0;
    }
    if (!v11) {
      goto LABEL_22;
    }
    if (*(unsigned char *)(v3 + 6)) {
      sub_10025B8C0();
    }
    if (a2 == 2) {
      break;
    }
    uint64_t v6 = qword_100A15230;
LABEL_22:
    ++v10;
    v3 += 32;
    if (v10 >= *(unsigned __int8 *)(v6 + 89)) {
      return 120;
    }
  }
  int v13 = *a1;
  *(_WORD *)(v3 + 4) = *((_WORD *)a1 + 2);
  *(_DWORD *)uint64_t v3 = v13;
  if (*(unsigned char *)(v3 + 6) != 2)
  {
    uint64_t result = 0;
    *(unsigned char *)(v3 + 6) = 2;
    return result;
  }
  return 0;
}

uint64_t sub_100143CE8()
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  LODWORD(result) = sub_10013217C(4366, (uint64_t)sub_100143DBC, (uint64_t)sub_100143DD4, (uint64_t)sub_100143F18, (uint64_t)sub_10014407C, (uint64_t)sub_1001441A0, (uint64_t)sub_1001442A0, (uint64_t)nullsub_97, (uint64_t)sub_1001442C8, (uint64_t)nullsub_98);
  if (result == 119) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_100143DBC()
{
  return (**(uint64_t (***)(void))qword_100A15230)();
}

uint64_t sub_100143DD4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a4)
  {
    uint64_t v9 = qword_100A15230;
    uint64_t v10 = *(void *)(qword_100A15230 + 32);
    if (v10)
    {
      uint64_t v4 = sub_100143B34(a1, 1u, *(void *)(v10 + 8));
      uint64_t v9 = qword_100A15230;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v11 = *(void *)(v9 + 24);
    if (v11) {
      uint64_t v4 = sub_100143B34(a1, 1u, *(void *)(v11 + 8));
    }
    if (!v4)
    {
      uint64_t v6 = qword_100A15230;
      return (*(uint64_t (**)(int *, uint64_t))(*(void *)v6 + 16))(a1, v4);
    }
    uint64_t v12 = sub_100133000((uint64_t)a1);
    if (v12)
    {
      uint64_t v13 = v12;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVRCP error %!. Failed to disconnet AVCTP %!, still connected", v14, v15, v16, v17, v18, v19, v20, v13);
        uint64_t v21 = sub_100050B4C(4u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  uint64_t v6 = qword_100A15230;
  uint64_t v7 = *(void *)(qword_100A15230 + 32);
  if (v7)
  {
    sub_100143A88((uint64_t)a1, *(void *)(v7 + 8));
    uint64_t v6 = qword_100A15230;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  if (v8)
  {
    sub_100143A88((uint64_t)a1, *(void *)(v8 + 8));
    uint64_t v6 = qword_100A15230;
  }
  if (*(unsigned char *)(v6 + 90)) {
    --*(unsigned char *)(v6 + 90);
  }
  return (*(uint64_t (**)(int *, uint64_t))(*(void *)v6 + 16))(a1, v4);
}

uint64_t sub_100143F18(uint64_t a1, uint64_t a2)
{
  sub_1000F6938(a1, a2);
  sub_1001438B0(a1, 0);
  uint64_t v4 = (unsigned char *)qword_100A15230;
  uint64_t v5 = *(void *)(qword_100A15230 + 24);
  if (v5 && (uint64_t v6 = *(unsigned __int8 *)(qword_100A15230 + 89), *(unsigned char *)(qword_100A15230 + 89)))
  {
    uint64_t v7 = *(void *)(v5 + 8);
    while (1)
    {
      BOOL v8 = *(_DWORD *)v7 == *(_DWORD *)a1 && *(unsigned __int16 *)(v7 + 4) == *(unsigned __int16 *)(a1 + 4);
      if (v8 && *(unsigned char *)(v7 + 6) == 2) {
        break;
      }
      v7 += 32;
      if (!--v6) {
        goto LABEL_11;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"(addr=%s) Cannot disconnect when state is AVRCP_CONNECT_PENDING, issuing failure on ConnectCfm", v12, v13, v14, v15, v16, v17, v18, a1);
      uint64_t v19 = sub_100050B4C(4u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return sub_100143DD4((int *)a1, 0, 0, 116);
  }
  else
  {
LABEL_11:
    uint64_t v9 = *(void *)(qword_100A15230 + 32);
    if (v9)
    {
      sub_100143A88(a1, *(void *)(v9 + 8));
      uint64_t v4 = (unsigned char *)qword_100A15230;
      uint64_t v5 = *(void *)(qword_100A15230 + 24);
    }
    if (v5)
    {
      sub_100143A88(a1, *(void *)(v5 + 8));
      uint64_t v4 = (unsigned char *)qword_100A15230;
    }
    if (v4[90]) {
      --v4[90];
    }
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 8);
    return v10(a1, a2);
  }
}

void sub_10014407C(uint64_t a1, uint64_t a2, int a3, int a4, unsigned char *a5, unsigned int a6)
{
  memset(v19, 0, sizeof(v19));
  if (a4)
  {
    if (a3 == 2)
    {
      sub_1000F69FC(a1, a2, 3310);
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Peer sent command with invalidPID flag set. Ignoring.", v10, v11, v12, v13, v14, v15, v16, v18);
      uint64_t v17 = sub_100050B4C(4u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (a6 >= 3 && !sub_100144568((uint64_t)v19, a5, a6))
  {
    if (a3 == 2)
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *))(qword_100A15230 + 48);
      if (!v9) {
        return;
      }
    }
    else
    {
      if (a3 != 1) {
        return;
      }
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *))(qword_100A15230 + 40);
      if (!v9) {
        return;
      }
    }
    v9(a1, a2, v19);
  }
}

void sub_1001441A0(uint64_t a1, int a2, unsigned int a3, int a4, void *ptr, uint64_t a6, uint64_t a7)
{
  if (a4 == 1 && a7) {
    sub_1000F69FC(a1, a3, a7);
  }
  if (ptr) {
    sub_100023010(ptr);
  }
  uint64_t v9 = sub_100144510();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_1001330B0(v9, 4366, *(unsigned __int8 *)(v9 + 6), *(unsigned __int8 *)(v9 + 7), *(char **)(v9 + 8), *(unsigned __int16 *)(v9 + 16));
    if (v11)
    {
      if (v11 == 410)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Got WRITE_IN_PROGRESS from AVCTP on a sendcfm. Trying again later.", v12, v13, v14, v15, v16, v17, v18, v20);
          uint64_t v19 = sub_100050B4C(4u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        sub_100144894(v10);
        return;
      }
      if (a4 == 1) {
        sub_1000F69FC(v10, *(unsigned __int8 *)(v10 + 6), v11);
      }
      sub_100023010(*(void **)(v10 + 8));
    }
    sub_100023010((void *)v10);
  }
}

uint64_t sub_1001442A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)qword_100A15230 + 24);
  if (v4) {
    return v4(result, a4);
  }
  return result;
}

void sub_1001442C8(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int8 *a5, unsigned int a6)
{
  if (a4)
  {
    if (a3 == 2)
    {
      sub_1000F69FC(a1, a2, 3311);
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Peer sent command with invalidPID flag set. Ignoring.", v23, v24, v25, v26, v27, v28, v29, v31);
      uint64_t v30 = sub_100050B4C(4u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v9 = a6 - 3;
    if (a6 >= 3)
    {
      uint64_t v11 = *a5;
      unsigned int v12 = *(unsigned __int16 *)(a5 + 1);
      uint64_t v13 = __rev16(v12);
      if (v9 == bswap32(v12) >> 16) {
        goto LABEL_12;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Length doesn't match : AVCTP says %d, AVRCP says %d", v14, v15, v16, v17, v18, v19, v20, v9);
        uint64_t v21 = sub_100050B4C(4u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (v9 >= v13)
      {
LABEL_12:
        if (a3 == 2)
        {
          uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))(qword_100A15230 + 64);
          if (!v22) {
            return;
          }
        }
        else
        {
          if (a3 != 1) {
            return;
          }
          uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))(qword_100A15230 + 56);
          if (!v22) {
            return;
          }
        }
        v22(a1, a2, v11, v13, a5 + 3);
      }
    }
  }
}

uint64_t sub_10014445C()
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (*(void *)(qword_100A15230 + 16) || *(void *)(qword_100A15230 + 8)) {
    return 0;
  }
  if (*(unsigned char *)(qword_100A15230 + 90)) {
    return 141;
  }
  uint64_t v1 = sub_100144510();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    do
    {
      uint64_t v3 = (void *)v2[1];
      if (v3)
      {
        sub_100023010(v3);
        v2[1] = 0;
      }
      sub_100023010(v2);
      uint64_t v2 = (void *)sub_100144510();
    }
    while (v2);
  }

  return sub_10013231C(4366);
}

uint64_t sub_100144510()
{
  uint64_t v2 = *(void *)(qword_100A15230 + 72);
  uint64_t v1 = *(void *)(qword_100A15230 + 80);
  uint64_t v0 = (void *)(qword_100A15230 + 72);
  if (v2)
  {
    if (v2 == v1)
    {
      *uint64_t v0 = 0;
      v0[1] = 0;
    }
    else
    {
      *uint64_t v0 = *(void *)(v2 + 24);
    }
  }
  else if (v1)
  {
    sub_10025B8C0();
  }
  return v2;
}

uint64_t sub_100144568(uint64_t a1, unsigned char *a2, unsigned int a3)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (a3 < 3) {
    return 411;
  }
  if (!a2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 769, "packet");
  }
  if (!(_WORD)a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 770, "((bs).__data != NULL) && ((bs).__trueSize > 0)");
  }
  *(unsigned char *)a1 = *a2;
  int v4 = a2[1] & 7;
  *(unsigned char *)(a1 + 2) = v4;
  int v5 = a2[1] >> 3;
  *(unsigned char *)(a1 + 1) = a2[1] >> 3;
  if ((unsigned __int16)a3 == 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 776, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  uint64_t v3 = 411;
  if ((unsigned __int16)a3 >= 3u && v5 != 30 && v4 != 5)
  {
    uint64_t v3 = 0;
    *(unsigned char *)(a1 + 3) = a2[2];
    *(void *)(a1 + 8) = a2 + 3;
    *(_WORD *)(a1 + 16) = a3 - 3;
  }
  return v3;
}

uint64_t sub_100144658(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (!a3)
  {
    sub_10025B8C0();
    return 101;
  }
  if (*a3 > 0xFu) {
    return 101;
  }
  unsigned int v6 = *((unsigned __int16 *)a3 + 8);
  if (*((_WORD *)a3 + 8))
  {
    if (!*((void *)a3 + 1)) {
      return 101;
    }
  }
  if (a3[1] == 30 || a3[2] == 5) {
    return 102;
  }
  unsigned __int16 v9 = v6 + 3;
  uint64_t v10 = (char *)sub_10010CE48((unsigned __int16)(v6 + 3));
  if (!v10) {
    return 106;
  }
  if ((_WORD)v6 == 0xFFFD) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 825, "(packetLen) > 0");
  }
  uint64_t v11 = v10;
  *uint64_t v10 = *a3;
  char v12 = v10[1] | (8 * a3[1]);
  v10[1] = v12;
  v10[1] = a3[2] & 7 | v12;
  if ((unsigned __int16)(v6 + 3) == 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 831, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  if (v6 >= 0xFFFD) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 832, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  v10[2] = a3[3];
  int v13 = (unsigned __int16)(v6 + 3) - 3;
  unsigned int v14 = *((unsigned __int16 *)a3 + 8);
  if (v13 < v14)
  {
    sub_10025B8C0();
    unsigned int v14 = *((unsigned __int16 *)a3 + 8);
  }
  if (v13 < (int)v14) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_helper.c", 836, "ByteStream_NumReadBytesAvail(bs) >= (frame->operandCount)");
  }
  memmove(v11 + 3, *((const void **)a3 + 1), v14);
  if ((*a3 & 8) != 0) {
    int v15 = 2;
  }
  else {
    int v15 = 1;
  }
  uint64_t v16 = sub_1001330B0(a1, 4366, a2, v15, v11, v9);
  uint64_t v7 = v16;
  if (v16)
  {
    if (v16 == 410)
    {
      uint64_t v17 = sub_100022FE8(0x20uLL);
      if (v17)
      {
        int v18 = *(_DWORD *)a1;
        v17[2] = *(_WORD *)(a1 + 4);
        *(_DWORD *)uint64_t v17 = v18;
        *((unsigned char *)v17 + 6) = a2;
        *((unsigned char *)v17 + 7) = v15;
        *((void *)v17 + 1) = v11;
        v17[8] = v9;
        sub_100144894((uint64_t)v17);
        return 0;
      }
      uint64_t v7 = 106;
    }
    sub_100023010(v11);
  }
  return v7;
}

uint64_t sub_100144874(uint64_t result)
{
  byte_100A02078 = 1;
  word_100A0207A = 2;
  dword_100A02080 = result;
  return result;
}

void sub_100144894(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t v2 = qword_100A15230;
  uint64_t v3 = (void *)(qword_100A15230 + 80);
  uint64_t v4 = *(void *)(qword_100A15230 + 80);
  if (v4)
  {
    *(void *)(v4 + 24) = a1;
  }
  else
  {
    if (*(void *)(qword_100A15230 + 72))
    {
      sub_10025B8C0();
      uint64_t v2 = qword_100A15230;
    }
    *(void *)(v2 + 72) = a1;
    uint64_t v3 = (void *)(v2 + 80);
  }
  *uint64_t v3 = a1;
}

uint64_t sub_1001448F4(uint64_t a1, unsigned __int8 *a2, char *a3)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  memset(v25, 0, sizeof(v25));
  LOBYTE(v18) = a3[1];
  *(_WORD *)((char *)&v18 + 1) = 9;
  uint64_t v19 = &v21;
  uint64_t v20 = 0;
  char v22 = 88;
  __int16 v21 = 6400;
  unsigned __int8 v23 = *a3;
  int v6 = 7;
  uint64_t result = 102;
  char v24 = 0;
  if (v23 <= 0x2Fu)
  {
    switch(v23)
    {
      case 0x10u:
      case 0x18u:
        goto LABEL_8;
      case 0x11u:
        goto LABEL_16;
      case 0x12u:
        char v9 = **((unsigned char **)a3 + 2);
        goto LABEL_10;
      case 0x13u:
      case 0x15u:
        v25[2] = a3[8];
        __memmove_chk();
        int v8 = a3[8];
        goto LABEL_15;
      case 0x14u:
        v25[2] = a3[8];
        if (v25[2] >= 0xFDuLL) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 136, "ByteStream_NumReadBytesAvail(bs) >= (command->u.attribute.numAttrs*2)");
        }
        __memmove_chk();
        int v8 = 2 * a3[8];
LABEL_15:
        int v6 = v8 + 8;
        goto LABEL_16;
      case 0x16u:
        *(_WORD *)&v25[2] = *((_WORD *)a3 + 4);
        __memmove_chk();
        int v6 = a3[9] + 9;
        goto LABEL_16;
      case 0x17u:
        v25[2] = a3[8];
        if (!v25[2]) {
          goto LABEL_11;
        }
        uint64_t v10 = 0;
        uint64_t v11 = *((void *)a3 + 2);
        uint64_t v12 = 2 * v25[2];
        do
        {
          if (v10 == 504) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 142, "ByteStream_NumReadBytesAvail(bs) >= 2");
          }
          int v13 = &v25[v10 + 3];
          v13[1] = *(unsigned char *)(v11 + v10);
          *int v13 = *(unsigned char *)(v11 + v10 + 1);
          v10 += 2;
        }
        while (v12 != v10);
        int v6 = v10 + 8;
        goto LABEL_16;
      case 0x20u:
        *(void *)&v25[2] = **((void **)a3 + 1);
        v25[10] = a3[16];
        if (v25[10])
        {
          uint64_t v14 = 0;
          uint64_t v15 = *((void *)a3 + 3);
          uint64_t v16 = 4 * v25[10];
          do
          {
            if (v14 == 496) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 154, "ByteStream_NumReadBytesAvail(bs) >= 4");
            }
            uint64_t v17 = &v25[v14 + 11];
            _OWORD v17[3] = *(_DWORD *)(v15 + v14);
            v17[2] = BYTE1(*(_DWORD *)(v15 + v14));
            v17[1] = *(_WORD *)(v15 + v14 + 2);
            *uint64_t v17 = *(unsigned char *)(v15 + v14 + 3);
            v14 += 4;
          }
          while (v16 != v14);
          int v6 = v14 + 16;
        }
        else
        {
          int v6 = 16;
        }
        goto LABEL_16;
      default:
        return result;
    }
  }
  if (v23 - 64 < 2)
  {
LABEL_8:
    char v9 = a3[8];
LABEL_10:
    v25[2] = v9;
LABEL_11:
    int v6 = 8;
  }
  else if (v23 != 48)
  {
    if (v23 != 49) {
      return result;
    }
    v25[2] = a3[8];
    *(_DWORD *)&v25[3] = bswap32(*((_DWORD *)a3 + 3));
    int v6 = 12;
  }
LABEL_16:
  *(_WORD *)uint64_t v25 = bswap32(v6 - 7) >> 16;
  if ((unsigned __int16)(v6 - 7) > 0x1F9u) {
    LOWORD(v6) = 7;
  }
  LOWORD(v20) = v6;
  return sub_1000F7348(a1, a2, (unsigned __int8 *)&v18);
}

uint64_t sub_100144CA8(uint64_t a1, unsigned __int8 *a2)
{
  if (a1 && a2)
  {
    memset(v3, 0, sizeof(v3));
    LOWORD(v3[0]) = 272;
    BYTE8(v3[0]) = 3;
    return sub_1001448F4(a1, a2, (char *)v3);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_100144CF8(uint64_t a1, unsigned __int8 *a2, char a3)
{
  if (a1 && a2)
  {
    memset(v4, 0, sizeof(v4));
    LOWORD(v4[0]) = 817;
    BYTE8(v4[0]) = a3;
    return sub_1001448F4(a1, a2, (char *)v4);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_100144D44(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(void *)(*(void *)(qword_100A15230 + 8) + 8))
  {
    if (a3) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a3) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  int v6 = (unsigned __int8 *)*((void *)a3 + 1);
  if (!v6)
  {
    sub_10025B8C0();
    goto LABEL_16;
  }
  unsigned int v7 = *((unsigned __int16 *)a3 + 8);
  if (!*((_WORD *)a3 + 8))
  {
LABEL_16:
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unsigned int v16 = 134;
    goto LABEL_29;
  }
  int v8 = *a3;
  if (v7 <= 2)
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
    int v9 = 0;
    goto LABEL_18;
  }
  HIDWORD(v10) = *v6;
  LODWORD(v10) = bswap32(*(unsigned __int16 *)(v6 + 1));
  int v9 = v10 >> 16;
  if (v7 == 3)
  {
LABEL_18:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
    uint64_t v11 = 0;
    goto LABEL_19;
  }
  uint64_t v11 = v6[3];
  if (v7 > 4)
  {
    uint64_t v12 = v6[4];
    if (v8 != 10)
    {
      int v15 = 0;
      int v14 = 0;
      goto LABEL_24;
    }
    if (v7 > 6)
    {
      if (v7 != 7)
      {
        int v13 = v6[7];
        int v14 = 0;
        int v15 = 3305;
        switch(v13)
        {
          case 0:
            goto LABEL_24;
          case 1:
            int v14 = 0;
            int v15 = 3306;
            break;
          case 2:
            int v14 = 0;
            int v15 = 3307;
            break;
          case 3:
            int v14 = 0;
            int v15 = 3308;
            break;
          default:
            int v14 = 0;
            int v15 = 3302;
            break;
        }
        goto LABEL_24;
      }
      goto LABEL_23;
    }
    goto LABEL_21;
  }
LABEL_19:
  if (v8 != 10)
  {
    uint64_t v12 = 0;
    goto LABEL_23;
  }
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
  uint64_t v12 = 0;
LABEL_21:
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_23:
  int v15 = 0;
  int v14 = 1;
LABEL_24:
  if (v9 != 6488) {
    int v14 = 1;
  }
  if (v14) {
    unsigned int v16 = 134;
  }
  else {
    unsigned int v16 = v15;
  }
LABEL_29:
  if (*a3 == 8) {
    uint64_t v17 = 3301;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(qword_100A15230 + 8)
                                                                                                 + 8);

  return v18(a1, a2, a3, v11, v12, v17);
}

uint64_t sub_100144F7C(uint64_t a1, int a2, uint64_t a3, unsigned char *a4)
{
  if (!a1 || !a3 || (int v5 = a4) == 0)
  {
    sub_10025B8C0();
    return 101;
  }
  a4[512] = 0;
  unsigned int v6 = *(unsigned __int16 *)(a1 + 16);
  if (!*(_WORD *)(a1 + 16)) {
    return 134;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    return 134;
  }
  if (v6 <= 3) {
    goto LABEL_12;
  }
  if (v6 == 4) {
    return 134;
  }
  if (*(unsigned char *)(v7 + 4)) {
    return 411;
  }
  if (v6 <= 6) {
    uint64_t v9 = 5;
  }
  else {
    uint64_t v9 = 7;
  }
  uint64_t result = 102;
  uint64_t v99 = v7;
  if (a2 <= 47)
  {
    uint64_t v101 = a4 + 512;
    switch(a2)
    {
      case 16:
        if (v6 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else if (v6 != 7)
        {
          int v13 = *(unsigned __int8 *)(v7 + 7);
          *(unsigned char *)(a3 + 8) = v13;
          if (v6 < 9)
          {
            char v14 = 0;
            int v10 = 1;
            LODWORD(v9) = 8;
          }
          else
          {
            int v10 = 0;
            *(unsigned char *)(a3 + 9) = *(unsigned char *)(v7 + 8);
            char v14 = 1;
            LODWORD(v9) = 9;
          }
LABEL_84:
          if (v13 != 3)
          {
            if (v13 != 2) {
              return 101;
            }
            *(void *)(a3 + 16) = v5;
            uint64_t v45 = *(unsigned __int8 *)(a3 + 9);
            if (v45 < 0x81)
            {
              if (!*(unsigned char *)(a3 + 9)) {
                goto LABEL_147;
              }
            }
            else
            {
              *uint64_t v101 = 1;
              uint64_t v45 = 128;
            }
            uint64_t v74 = 0;
            int v75 = v6 - 2;
            while (1)
            {
              if (v10)
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrc"
                                       "p/avrcp_metadata.c");
              }
              else if (v75 > (unsigned __int16)v9)
              {
                int v10 = 0;
                uint64_t v76 = (unsigned __int8 *)(v7 + (unsigned __int16)v9);
                HIDWORD(v77) = *v76;
                LODWORD(v77) = bswap32(*(unsigned __int16 *)(v76 + 1));
                *(_DWORD *)(*(void *)(a3 + 16) + 4 * v74) = v77 >> 16;
                LOWORD(v9) = v9 + 3;
                goto LABEL_158;
              }
              int v10 = 1;
LABEL_158:
              if (v45 == ++v74) {
                goto LABEL_147;
              }
            }
          }
          *(void *)(a3 + 16) = v5;
          uint64_t v70 = *(unsigned __int8 *)(a3 + 9);
          int v71 = v10;
          if (v14)
          {
            int v72 = v6 - v9;
          }
          else
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            int v72 = 0;
          }
          if (v72 >= *(unsigned __int8 *)(a3 + 9))
          {
            if (v70)
            {
              uint64_t v78 = (char *)(v7 + v9);
              uint64_t v79 = &v5[v70];
              do
              {
                char v80 = *v78++;
                *v5++ = v80;
              }
              while (v5 < v79);
            }
            int v10 = v71;
            goto LABEL_147;
          }
          return 134;
        }
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        char v14 = 0;
        int v13 = *(unsigned __int8 *)(a3 + 8);
        int v10 = 1;
        goto LABEL_84;
      case 17:
        *(void *)(a3 + 16) = a4;
        if (v6 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          int v5 = *(unsigned char **)(a3 + 16);
        }
        else if (v6 != 7)
        {
          int v10 = 0;
          uint64_t v15 = *(unsigned __int8 *)(v7 + 7);
          *(unsigned char *)(a3 + 8) = v15;
          unsigned int v16 = &a4[v15];
          int v17 = v6 - 8;
          uint64_t v9 = 8;
          goto LABEL_90;
        }
        unsigned int v16 = &v5[*(unsigned __int8 *)(a3 + 8)];
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v17 = 0;
        LODWORD(v15) = *(unsigned __int8 *)(a3 + 8);
        int v10 = 1;
LABEL_90:
        if (v17 < (int)v15) {
          return 134;
        }
        if (v5 < v16)
        {
          uint64_t v46 = (char *)(v7 + v9);
          uint64_t v47 = v16 - v5;
          do
          {
            char v48 = *v46++;
            *v5++ = v48;
            --v47;
          }
          while (v47);
        }
        goto LABEL_147;
      case 18:
        *(void *)(a3 + 16) = a4;
        if (v6 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          int v5 = *(unsigned char **)(a3 + 16);
        }
        else if (v6 != 7)
        {
          int v10 = 0;
          uint64_t v18 = *(unsigned __int8 *)(v7 + 7);
          *(unsigned char *)(a3 + 8) = v18;
          uint64_t v19 = &a4[v18];
          int v20 = v6 - 8;
          uint64_t v9 = 8;
          goto LABEL_97;
        }
        uint64_t v19 = &v5[*(unsigned __int8 *)(a3 + 8)];
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v20 = 0;
        LODWORD(v18) = *(unsigned __int8 *)(a3 + 8);
        int v10 = 1;
LABEL_97:
        if (v20 < (int)v18) {
          return 134;
        }
        if (v5 < v19)
        {
          uint64_t v49 = (char *)(v7 + v9);
          uint64_t v50 = v19 - v5;
          do
          {
            char v51 = *v49++;
            *v5++ = v51;
            --v50;
          }
          while (v50);
        }
        goto LABEL_147;
      case 19:
        *(void *)(a3 + 16) = a4;
        if (v6 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          int v5 = *(unsigned char **)(a3 + 16);
        }
        else if (v6 != 7)
        {
          int v10 = 0;
          uint64_t v21 = *(unsigned __int8 *)(v7 + 7);
          *(unsigned char *)(a3 + 8) = v21;
          char v22 = &a4[2 * v21];
          int v23 = v6 - 8;
          uint64_t v9 = 8;
          goto LABEL_104;
        }
        char v22 = &v5[2 * *(unsigned __int8 *)(a3 + 8)];
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v23 = 0;
        LODWORD(v21) = *(unsigned __int8 *)(a3 + 8);
        int v10 = 1;
LABEL_104:
        if (v23 < 2 * (int)v21) {
          return 134;
        }
        if (v5 < v22)
        {
          size_t v52 = (char *)(v7 + v9);
          uint64_t v53 = v22 - v5;
          do
          {
            char v54 = *v52++;
            *v5++ = v54;
            --v53;
          }
          while (v53);
        }
        goto LABEL_147;
      case 21:
      case 22:
        *(void *)(a3 + 16) = a4;
        if (v6 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else if (v6 != 7)
        {
          int v10 = 0;
          int v11 = *(unsigned __int8 *)(v7 + 7);
          *(unsigned char *)(a3 + 8) = v11;
          uint64_t v9 = 8;
          goto LABEL_47;
        }
        int v11 = *(unsigned __int8 *)(a3 + 8);
        int v10 = 1;
LABEL_47:
        if (!v11) {
          goto LABEL_147;
        }
        unint64_t v25 = 0;
        uint64_t v26 = "/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c";
        uint64_t v27 = v101;
        while (2)
        {
          if (v10)
          {
            sub_10025A794((uint64_t)v26);
LABEL_55:
            sub_10025A794((uint64_t)v26);
            uint64_t v28 = v9;
            goto LABEL_56;
          }
          if (v6 <= (unsigned __int16)v9) {
            goto LABEL_55;
          }
          uint64_t v28 = (unsigned __int16)v9 + 1;
          *(unsigned char *)(*(void *)(a3 + 16) + 24 * v25) = *(unsigned char *)(v7 + (unsigned __int16)v9);
          if ((int)(v6 - 1) <= (unsigned __int16)(v9 + 1))
          {
LABEL_56:
            sub_10025A794((uint64_t)v26);
            char v31 = 0;
            int v30 = 0;
            int v10 = 1;
            uint64_t v9 = v28;
            goto LABEL_57;
          }
          *(_WORD *)(*(void *)(a3 + 16) + 24 * v25 + 2) = bswap32(*(unsigned __int16 *)(v7 + v28)) >> 16;
          unsigned __int16 v29 = v9 + 3;
          if (v6 <= (unsigned __int16)(v9 + 3))
          {
            char v31 = 0;
            int v30 = 0;
            int v10 = 1;
            uint64_t v9 = (v9 + 3);
          }
          else
          {
            int v10 = 0;
            uint64_t v9 = (v9 + 4);
            int v30 = *(unsigned __int8 *)(v7 + v29);
            char v31 = 1;
          }
LABEL_57:
          uint64_t v32 = (uint64_t)v26;
          *(_DWORD *)(*(void *)(a3 + 16) + 24 * v25 + 16) = v30;
          v5 += 24;
          uint64_t v33 = *(void *)(a3 + 16);
          v27 -= *(int *)(v33 + 24 * v25 + 16);
          if (v27 < v5)
          {
            *uint64_t v101 = 1;
            *(_DWORD *)(*(void *)(a3 + 16) + 24 * v25 + 16) += v27 - v5;
            uint64_t v33 = *(void *)(a3 + 16);
          }
          *(void *)(v33 + 24 * v25 + 8) = v27;
          uint64_t v34 = *(void *)(a3 + 16) + 24 * v25;
          uint64_t v35 = *(unsigned char **)(v34 + 8);
          uint64_t v36 = *(int *)(v34 + 16);
          if (v31)
          {
            signed int v37 = v6 - (unsigned __int16)v9;
            signed int v38 = v36;
          }
          else
          {
            int v39 = v10;
            sub_10025A794(v32);
            int v10 = v39;
            signed int v37 = 0;
            signed int v38 = *(_DWORD *)(*(void *)(a3 + 16) + 24 * v25 + 16);
          }
          if (v37 >= v38)
          {
            if ((int)v36 >= 1)
            {
              int v40 = (char *)(v99 + (unsigned __int16)v9);
              uint64_t v41 = &v35[v36];
              do
              {
                char v42 = *v40++;
                *v35++ = v42;
              }
              while (v35 < v41);
              signed int v38 = *(_DWORD *)(*(void *)(a3 + 16) + 24 * v25 + 16);
            }
            uint64_t v9 = (v9 + v38);
          }
          else
          {
            int v10 = 1;
          }
          if (!*v101)
          {
            uint64_t v26 = (const char *)v32;
            ++v25;
            uint64_t v7 = v99;
            if (v25 >= *(unsigned __int8 *)(a3 + 8)) {
              goto LABEL_147;
            }
            continue;
          }
          break;
        }
        char v12 = v25 + 1;
        break;
      case 32:
        *(void *)(a3 + 16) = a4;
        if (v6 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else if (v6 != 7)
        {
          int v10 = 0;
          int v24 = *(unsigned __int8 *)(v7 + 7);
          *(unsigned char *)(a3 + 8) = v24;
          uint64_t v9 = 8;
          goto LABEL_111;
        }
        int v24 = *(unsigned __int8 *)(a3 + 8);
        int v10 = 1;
LABEL_111:
        if (!v24) {
          goto LABEL_147;
        }
        uint64_t v55 = 0;
        int v98 = v6 - 1;
        uint64_t v100 = v101;
        while (2)
        {
          if (v10)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_119:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            uint64_t v56 = v9;
            goto LABEL_120;
          }
          if ((int)(v6 - 3) <= (unsigned __int16)v9) {
            goto LABEL_119;
          }
          *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55) = bswap32(*(_DWORD *)(v7 + (unsigned __int16)v9));
          uint64_t v56 = (v9 + 4);
          if (v98 <= (unsigned __int16)(v9 + 4))
          {
LABEL_120:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            char v58 = 0;
            unsigned int v57 = 0;
            int v10 = 1;
            uint64_t v9 = v56;
            goto LABEL_121;
          }
          *(_WORD *)(*(void *)(a3 + 16) + 24 * v55 + 4) = bswap32(*(unsigned __int16 *)(v7 + (unsigned __int16)(v9 + 4))) >> 16;
          if (v98 <= (unsigned __int16)(v9 + 6))
          {
            char v58 = 0;
            unsigned int v57 = 0;
            int v10 = 1;
            uint64_t v9 = (v9 + 6);
          }
          else
          {
            int v10 = 0;
            unsigned int v57 = __rev16(*(unsigned __int16 *)(v7 + (unsigned __int16)(v9 + 6)));
            uint64_t v9 = (v9 + 8);
            char v58 = 1;
          }
LABEL_121:
          *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16) = v57;
          v5 += 24;
          uint64_t v59 = *(void *)(a3 + 16);
          unint64_t v60 = (unint64_t)&v100[-*(int *)(v59 + 24 * v55 + 16)];
          if (v60 < (unint64_t)v5)
          {
            *uint64_t v101 = 1;
            *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16) += v60 - v5;
            uint64_t v59 = *(void *)(a3 + 16);
          }
          uint64_t v100 = (unsigned char *)v60;
          *(void *)(v59 + 24 * v55 + 8) = v60;
          uint64_t v61 = *(void *)(a3 + 16) + 24 * v55;
          uint64_t v62 = *(unsigned char **)(v61 + 8);
          uint64_t v63 = *(int *)(v61 + 16);
          if (v58)
          {
            signed int v64 = v6 - (unsigned __int16)v9;
            signed int v65 = v63;
          }
          else
          {
            int v66 = v10;
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            int v10 = v66;
            signed int v64 = 0;
            signed int v65 = *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16);
          }
          if (v64 >= v65)
          {
            if ((int)v63 >= 1)
            {
              uint64_t v67 = (char *)(v7 + (unsigned __int16)v9);
              uint64_t v68 = &v62[v63];
              do
              {
                char v69 = *v67++;
                *v62++ = v69;
              }
              while (v62 < v68);
              signed int v65 = *(_DWORD *)(*(void *)(a3 + 16) + 24 * v55 + 16);
            }
            uint64_t v9 = (v9 + v65);
          }
          else
          {
            int v10 = 1;
          }
          if (!*v101)
          {
            if (++v55 >= (unint64_t)*(unsigned __int8 *)(a3 + 8)) {
              goto LABEL_147;
            }
            continue;
          }
          break;
        }
        char v12 = v55 + 1;
        break;
      default:
        return result;
    }
LABEL_146:
    *(unsigned char *)(a3 + 8) = v12;
    goto LABEL_147;
  }
  switch(a2)
  {
    case '0':
      if (v6 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if (v6 > 0xA)
      {
        *(_DWORD *)(a3 + 8) = bswap32(*(_DWORD *)(v7 + 7));
        if (v6 > 0xE)
        {
          *(_DWORD *)(a3 + 12) = bswap32(*(_DWORD *)(v7 + 11));
          if (v6 != 15)
          {
            *(unsigned char *)(a3 + 16) = *(unsigned char *)(v7 + 15);
            return 0;
          }
          return 134;
        }
        goto LABEL_12;
      }
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_12:
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      return 134;
    case '1':
      *(void *)(a3 + 8) = a4;
      if (v6 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        char v43 = 0;
        int v10 = 1;
        unsigned int v44 = 5;
      }
      else if (v6 == 7)
      {
        char v43 = 0;
        int v10 = 1;
        unsigned int v44 = 7;
      }
      else
      {
        int v10 = 0;
        *a4 = *(unsigned char *)(v7 + 7);
        char v43 = 1;
        unsigned int v44 = 8;
      }
      uint64_t v73 = *(unsigned char **)(a3 + 8);
      uint64_t result = 101;
      switch(*v73)
      {
        case 1:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
          goto LABEL_186;
        case 2:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
          if ((int)(v6 - v44) < 8) {
            return 134;
          }
          unint64_t v81 = (unint64_t)(v73 + 16);
          uint64_t v82 = v73 + 8;
          uint64_t v83 = (char *)(v7 + v44);
          do
          {
            char v84 = *v83++;
            *v82++ = v84;
          }
          while ((unint64_t)v82 < v81);
          break;
        case 3:
        case 4:
          break;
        case 5:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
          if ((int)(v6 - v44) < 4) {
            return 134;
          }
          *((_DWORD *)v73 + 2) = bswap32(*(_DWORD *)(v7 + v44));
          return 0;
        case 6:
        case 7:
          if ((v43 & 1) == 0) {
            goto LABEL_12;
          }
LABEL_186:
          if (v6 <= v44) {
            return 134;
          }
          v73[8] = *(unsigned char *)(v7 + v44);
          return 0;
        case 8:
          *((void *)v73 + 1) = v5 + 24;
          if (v43)
          {
            if (v6 > v44)
            {
              int v10 = 0;
              char v85 = *(unsigned char *)(v7 + v44++);
              *(unsigned char *)(*(void *)(a3 + 8) + 16) = v85;
              uint64_t v86 = *(void *)(a3 + 8);
              uint64_t v87 = *(unsigned char **)(v86 + 8);
              unsigned int v88 = *(unsigned __int8 *)(v86 + 16);
              unint64_t v89 = 2 * *(unsigned __int8 *)(v86 + 16);
              if (v88 <= 0xF4) {
                uint64_t v90 = 2 * v88;
              }
              else {
                uint64_t v90 = 488;
              }
              uint64_t v91 = &v87[v90];
              unint64_t v92 = (int)(v6 - v44);
              goto LABEL_197;
            }
          }
          else
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          }
          uint64_t v94 = *(void *)(a3 + 8);
          uint64_t v87 = *(unsigned char **)(v94 + 8);
          uint64_t v95 = *(unsigned __int8 *)(v94 + 16);
          if (v95 <= 0xF4) {
            uint64_t v90 = 2 * v95;
          }
          else {
            uint64_t v90 = 488;
          }
          uint64_t v91 = &v87[v90];
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          unint64_t v92 = 0;
          unsigned int v88 = *(unsigned __int8 *)(*(void *)(a3 + 8) + 16);
          unint64_t v89 = 2 * *(unsigned __int8 *)(*(void *)(a3 + 8) + 16);
          int v10 = 1;
LABEL_197:
          if (v88 > 0xF4) {
            unint64_t v89 = 488;
          }
          if (v92 < v89) {
            return 134;
          }
          if (v90)
          {
            uint64_t v96 = (char *)(v7 + v44);
            do
            {
              char v97 = *v96++;
              *v87++ = v97;
            }
            while (v87 < v91);
          }
          break;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          return result;
        case 0xD:
          if (v43)
          {
            if (v6 > v44)
            {
              int v10 = 0;
              char v93 = *(unsigned char *)(v7 + v44) & 0x7F;
              goto LABEL_209;
            }
            char v93 = 0;
          }
          else
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
            char v93 = 0;
            uint64_t v73 = *(unsigned char **)(a3 + 8);
          }
          int v10 = 1;
LABEL_209:
          v73[8] = v93;
          break;
        default:
          if (*v73 == 113) {
            break;
          }
          return result;
      }
LABEL_147:
      if (!v10) {
        return 0;
      }
      return 134;
    case 'P':
      if (v6 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if (v6 != 7)
      {
        int v10 = 0;
        char v12 = *(unsigned char *)(v7 + 7) & 0x7F;
        goto LABEL_146;
      }
      char v12 = 0;
      int v10 = 1;
      goto LABEL_146;
  }
  return result;
}

uint64_t sub_100145D18(uint64_t a1, unsigned int a2, char a3, int a4)
{
  if (a1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 5773568;
    if (a4 == 3301) {
      unsigned __int8 v4 = 8;
    }
    else {
      unsigned __int8 v4 = 10;
    }
    if (!a4) {
      unsigned __int8 v4 = 9;
    }
    v17[1] = &v19;
    v17[0] = v4;
    *(_WORD *)((char *)v17 + 1) = 9;
    BYTE3(v17[0]) = 0;
    BYTE3(v19) = a3;
    char v5 = 0;
    switch(a4)
    {
      case 3301:
        goto LABEL_11;
      case 3302:
      case 3303:
      case 3304:
        goto LABEL_12;
      case 3305:
        goto LABEL_14;
      case 3306:
        char v5 = 1;
        goto LABEL_14;
      case 3307:
        char v5 = 2;
        goto LABEL_14;
      default:
        if (a4)
        {
LABEL_12:
          char v5 = 3;
LABEL_14:
          *(_WORD *)((char *)&v19 + 5) = 256;
          HIBYTE(v19) = v5;
          __int16 v7 = 8;
        }
        else
        {
LABEL_11:
          *(_WORD *)((char *)&v19 + 5) = 0;
          __int16 v7 = 7;
        }
        LOWORD(v18) = v7;
        uint64_t v6 = sub_1001498DC(a1, a2, (unsigned __int8 *)v17);
        if (v6)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to send Simple Meta Response %!", v8, v9, v10, v11, v12, v13, v14, v6);
            uint64_t v15 = sub_100050B4C(4u);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        break;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return v6;
}

uint64_t sub_100145E90(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (a1 && a4 && a3)
  {
    uint64_t v6 = 2;
    uint64_t v5 = 16;
    BYTE1(v6) = a3;
    uint64_t v7 = a4;
    return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)&v5);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_100145EEC(uint64_t a1, unsigned int a2, char a3, unsigned __int8 *a4)
{
  uint64_t v101 = 0;
  uint64_t v102 = 0;
  uint64_t v103 = 0;
  memset(v104, 0, sizeof(v104));
  if (!qword_100A15230 || (uint64_t v4 = *(void *)(qword_100A15230 + 24)) == 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to Send Response, AVRCP is not registered!", v16, v17, v18, v19, v20, v21, v22, v95);
      int v23 = sub_100050B4C(4u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 3308;
  }
  LOBYTE(v101) = a3;
  *(_WORD *)((char *)&v101 + 1) = 9;
  BYTE3(v101) = 0;
  uint64_t v102 = v104;
  LOWORD(v103) = *(_WORD *)(v4 + 20);
  unsigned int v5 = (unsigned __int16)v103;
  if (!(_WORD)v103) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1191, "((*operandCount)) > 0");
  }
  if ((unsigned __int16)v103 <= 2u) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1193, "ByteStream_NumReadBytesAvail(bs) >= 3");
  }
  BYTE2(v104[0]) = 88;
  LOWORD(v104[0]) = 6400;
  if ((unsigned __int16)v103 == 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1194, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  uint64_t v6 = a4;
  unsigned int v7 = a2;
  uint64_t v8 = a1;
  uint64_t v9 = 0;
  int v10 = *a4;
  BYTE3(v104[0]) = *a4;
  if ((unsigned __int16)v103 <= 6u) {
    int v11 = 4;
  }
  else {
    int v11 = 7;
  }
  uint64_t v12 = 3301;
  if (v10 > 47)
  {
    if (v10 == 48)
    {
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if ((unsigned __int16)v103 > 0xAu)
      {
        *(_DWORD *)((char *)v104 + 7) = bswap32(*((_DWORD *)a4 + 2));
        if ((unsigned __int16)v103 <= 0xEu) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1381, "ByteStream_NumReadBytesAvail(bs) >= 4");
        }
        *(_DWORD *)((char *)v104 + 11) = bswap32(*((_DWORD *)a4 + 3));
        if ((unsigned __int16)v103 == 15) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1382, "ByteStream_NumReadBytesAvail(bs) >= 1");
        }
        uint64_t v9 = 0;
        HIBYTE(v104[0]) = a4[16];
LABEL_76:
        int v13 = 16;
        goto LABEL_152;
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1380, "ByteStream_NumReadBytesAvail(bs) >= 4");
    }
    if (v10 == 49)
    {
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if ((unsigned __int16)v103 != 7)
      {
        uint64_t v56 = *((void *)a4 + 1);
        BYTE7(v104[0]) = *(unsigned char *)v56;
        uint64_t v9 = 0;
        int v13 = 8;
        switch(*(unsigned char *)v56)
        {
          case 1:
            if ((unsigned __int16)v103 <= 8u) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1447, "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            goto LABEL_147;
          case 2:
            if ((unsigned __int16)v103 <= 0xFu) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1456, "ByteStream_NumReadBytesAvail(bs) >= (8)");
            }
            uint64_t v9 = 0;
            *((void *)&v104[0] + 1) = *(void *)(v56 + 8);
            goto LABEL_76;
          case 3:
          case 4:
          case 9:
          case 0xA:
            goto LABEL_152;
          case 5:
            if ((unsigned __int16)v103 <= 0xBu) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1460, "ByteStream_NumReadBytesAvail(bs) >= 4");
            }
            uint64_t v9 = 0;
            BYTE11(v104[0]) = *(_DWORD *)(v56 + 8);
            BYTE10(v104[0]) = BYTE1(*(_DWORD *)(v56 + 8));
            BYTE9(v104[0]) = *(_WORD *)(v56 + 10);
            BYTE8(v104[0]) = *(unsigned char *)(v56 + 11);
            goto LABEL_151;
          case 6:
          case 7:
            if ((unsigned __int16)v103 <= 8u) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1452, "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            goto LABEL_147;
          case 8:
            int v97 = v11;
            if ((unsigned __int16)v103 <= 8u) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1464, "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            BYTE8(v104[0]) = *(unsigned char *)(v56 + 16);
            int v85 = BYTE8(v104[0]);
            unsigned int v86 = 2 * BYTE8(v104[0]);
            __int16 v48 = (unsigned __int16)(v103 - 9) >> 1;
            if (v86 > (unsigned __int16)(v103 - 9)) {
              int v85 = (unsigned __int16)(v103 - 9) >> 1;
            }
            if ((unsigned __int16)v103 - 9 < 2 * v85) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1471, "ByteStream_NumReadBytesAvail(bs) >= (count * dataElSize)");
            }
            uint64_t v49 = (2 * v85);
            __memmove_chk();
            int v13 = v49 + 9;
            if (v86 <= (unsigned __int16)(v103 - 9)) {
              goto LABEL_143;
            }
            uint64_t v87 = *((void *)v6 + 1);
            __int16 v50 = *(unsigned __int8 *)(v87 + 16);
            char v51 = *v6;
            uint64_t v52 = *(void *)(v87 + 8);
            goto LABEL_63;
          case 0xB:
            if ((unsigned __int16)v103 <= 9u) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1497, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            BYTE9(v104[0]) = *(unsigned char *)(v56 + 8);
            BYTE8(v104[0]) = *(unsigned char *)(v56 + 9);
            if ((unsigned __int16)v103 <= 0xBu) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1498, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v9 = 0;
            BYTE11(v104[0]) = *(unsigned char *)(v56 + 10);
            BYTE10(v104[0]) = *(unsigned char *)(v56 + 11);
LABEL_151:
            int v13 = 12;
            goto LABEL_152;
          case 0xC:
            if ((unsigned __int16)v103 <= 9u) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1502, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v9 = 0;
            BYTE9(v104[0]) = *(unsigned char *)(v56 + 8);
            BYTE8(v104[0]) = *(unsigned char *)(v56 + 9);
            int v13 = 10;
            goto LABEL_152;
          case 0xD:
            if ((unsigned __int16)v103 <= 8u) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1506, "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
LABEL_147:
            uint64_t v9 = 0;
            BYTE8(v104[0]) = *(unsigned char *)(v56 + 8);
            int v13 = 9;
            goto LABEL_152;
          default:
            return 101;
        }
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1444, "ByteStream_NumReadBytesAvail(bs) >= 1");
    }
    int v13 = v11;
    __int16 v14 = 0;
    if (v10 == 65) {
      goto LABEL_152;
    }
    goto LABEL_165;
  }
  int v13 = v11;
  __int16 v14 = 0;
  switch(v10)
  {
    case 16:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_201:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1200, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if ((unsigned __int16)v103 == 7) {
        goto LABEL_201;
      }
      int v24 = a4[8];
      BYTE7(v104[0]) = a4[8];
      if ((unsigned __int16)v103 <= 8u) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1201, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      int v25 = v11;
      unsigned int v26 = a4[9];
      BYTE8(v104[0]) = a4[9];
      int v27 = (unsigned __int16)v103 - 9;
      if (v24 == 3)
      {
        if ((unsigned __int16)(v103 - 9) >= v26) {
          unsigned int v29 = v26;
        }
        else {
          unsigned int v29 = (unsigned __int16)(v103 - 9);
        }
        if (v27 < (int)v29) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1219, "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __memmove_chk();
        int v13 = v29 + 9;
        if (v26 > (unsigned __int16)v27)
        {
          __int16 v69 = v6[8];
          LOWORD(v26) = v6[9];
          unsigned int v70 = 1;
          char v71 = *v6;
          int v11 = v25;
          goto LABEL_128;
        }
LABEL_105:
        uint64_t v9 = 0;
        int v11 = v25;
        goto LABEL_152;
      }
      if (v24 == 2)
      {
        unsigned int v28 = (unsigned __int16)(v103 - 9);
        unsigned int v29 = v28 / 3;
        if (3 * v26 <= (unsigned __int16)v27) {
          unsigned int v30 = v26;
        }
        else {
          unsigned int v30 = (unsigned __int16)(v103 - 9) / 3u;
        }
        if (v30)
        {
          uint64_t v31 = 0;
          int v13 = 3 * v30 + 9;
          uint64_t v32 = (unsigned char *)((unint64_t)v104 | 0xB);
          uint64_t v33 = 4 * v30;
          unint64_t v34 = ((2863311531u * (unint64_t)v27) >> 31) & 0x1FFFFFFFCLL;
          int v11 = v25;
          while (v34 != v31)
          {
            uint64_t v35 = *((void *)a4 + 2);
            unsigned int v36 = *(_DWORD *)(v35 + v31);
            if (HIBYTE(v36))
            {
              uint64_t v94 = "0 == ((response->u.getCapabilities.capabilities.companyID[i]) & 0xFF000000)";
LABEL_185:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1211, v94);
            }
            *uint64_t v32 = v36;
            uint64_t v37 = v35 + v31;
            *(v32 - 1) = BYTE1(*(_DWORD *)v37);
            *(v32 - 2) = *(_WORD *)(v37 + 2);
            v32 += 3;
            v31 += 4;
            if (v33 == v31) {
              goto LABEL_126;
            }
          }
          uint64_t v94 = "ByteStream_NumReadBytesAvail(bs) >= 3";
          goto LABEL_185;
        }
        int v13 = 9;
        int v11 = v25;
LABEL_126:
        if (3 * v26 <= v28)
        {
          uint64_t v9 = 0;
          goto LABEL_152;
        }
        __int16 v69 = 2;
        char v71 = 16;
        unsigned int v70 = 4;
LABEL_128:
        uint64_t v12 = sub_100148940(v8, v29, v69, v26, v71, *((void *)v6 + 2) + v70 * (unint64_t)v29, 0);
        if (v12) {
          goto LABEL_166;
        }
LABEL_129:
        uint64_t v9 = 3304;
        goto LABEL_152;
      }
      return 101;
    case 17:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if ((unsigned __int16)v103 != 7)
      {
        int v38 = v11;
        BYTE7(v104[0]) = a4[8];
        unsigned int v39 = BYTE7(v104[0]);
        int v40 = (unsigned __int16)v103 - 8;
        if ((unsigned __int16)(v103 - 8) >= BYTE7(v104[0])) {
          uint64_t v41 = BYTE7(v104[0]);
        }
        else {
          uint64_t v41 = (unsigned __int16)(v103 - 8);
        }
        if (v40 < (int)v41) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1249, "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __memmove_chk();
        int v13 = v41 + 8;
        if (v39 <= (unsigned __int16)v40)
        {
          uint64_t v9 = 0;
          int v11 = v38;
          goto LABEL_152;
        }
        uint64_t v12 = sub_100148940(v8, v41, 0xFFFF, v6[8], *v6, *((void *)v6 + 2) + v41, 0);
        if (!v12)
        {
          int v11 = v38;
          goto LABEL_129;
        }
        goto LABEL_166;
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1243, "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 18:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if ((unsigned __int16)v103 != 7)
      {
        int v25 = v11;
        BYTE7(v104[0]) = a4[8];
        unsigned int v42 = BYTE7(v104[0]);
        int v43 = (unsigned __int16)v103 - 8;
        if ((unsigned __int16)(v103 - 8) >= BYTE7(v104[0])) {
          unsigned int v44 = BYTE7(v104[0]);
        }
        else {
          unsigned int v44 = (unsigned __int16)(v103 - 8);
        }
        if (v43 < BYTE7(v104[0])) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1273, "ByteStream_NumReadBytesAvail(bs) >= (response->u.playerAttributes.numAttrs)");
        }
        __memmove_chk();
        int v45 = v6[8];
        int v13 = v45 + 8;
        if (v42 <= (unsigned __int16)v43) {
          goto LABEL_105;
        }
        uint64_t v12 = sub_100148940(v8, v44, 0xFFFF, v45, *v6, *((void *)v6 + 2) + v44, 0);
        if (!v12)
        {
          int v11 = v25;
          goto LABEL_129;
        }
LABEL_166:
        if (v12 == 3304 || v12 == 0)
        {
          unsigned int v91 = sub_1001498DC(v8, v7, (unsigned __int8 *)&v101);
          if (v91) {
            BOOL v92 = 0;
          }
          else {
            BOOL v92 = v12 == 3304;
          }
          if (v92) {
            return 3304;
          }
          else {
            return v91;
          }
        }
        return v12;
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1267, "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 19:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else
      {
        int v97 = v11;
        if ((unsigned __int16)v103 != 7)
        {
          BYTE7(v104[0]) = a4[8];
          int v46 = BYTE7(v104[0]);
          unsigned int v47 = 2 * BYTE7(v104[0]);
          __int16 v48 = (unsigned __int16)(v103 - 8) >> 1;
          if (v47 > (unsigned __int16)(v103 - 8)) {
            int v46 = (unsigned __int16)(v103 - 8) >> 1;
          }
          if ((unsigned __int16)v103 - 8 < 2 * v46) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1298, "ByteStream_NumReadBytesAvail(bs) >= (count*dataElSize)");
          }
          uint64_t v49 = (2 * v46);
          __memmove_chk();
          int v13 = v49 + 8;
          if (v47 <= (unsigned __int16)(v103 - 8))
          {
LABEL_143:
            uint64_t v9 = 0;
            int v11 = v97;
            goto LABEL_152;
          }
          __int16 v50 = v6[8];
          char v51 = *v6;
          uint64_t v52 = *((void *)v6 + 2);
LABEL_63:
          uint64_t v12 = sub_100148940(v8, v48, 0xFFFF, v50, v51, v52 + v49, 0);
          int v11 = v97;
          if (!v12) {
            goto LABEL_129;
          }
          goto LABEL_166;
        }
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1291, "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 20:
    case 23:
    case 24:
      goto LABEL_152;
    case 21:
    case 22:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if ((unsigned __int16)v103 != 7)
      {
        BYTE7(v104[0]) = a4[8];
        LOWORD(a4) = BYTE7(v104[0]);
        if (BYTE7(v104[0]))
        {
          uint64_t v100 = a1;
          unsigned int v96 = a2;
          if ((v103 & 0xFFFC) == 8)
          {
            LOWORD(v15) = 0;
            int v13 = 8;
          }
          else
          {
            int v98 = v11;
            uint64_t v57 = 0;
            uint64_t v9 = 0;
            unint64_t v15 = 0;
            int v13 = 8;
            do
            {
              if (v5 <= (unsigned __int16)v13) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1341, "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t v58 = *((void *)v6 + 2);
              uint64_t v59 = v58 + v57;
              *((unsigned char *)v104 + (unsigned __int16)v13) = *(unsigned char *)(v58 + v57);
              if ((unsigned __int16)(v5 - 1) <= (unsigned __int16)(v13 + 1)) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1342, "ByteStream_NumReadBytesAvail(bs) >= 2");
              }
              unint64_t v60 = (char *)v104 + (unsigned __int16)v13 + 1;
              v60[1] = *(unsigned char *)(v59 + 2);
              *unint64_t v60 = *(unsigned char *)(v59 + 3);
              unsigned __int16 v61 = v13 + 3;
              if (v5 <= (unsigned __int16)(v13 + 3)) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1343, "ByteStream_NumReadBytesAvail(bs) >= 1");
              }
              uint64_t v62 = v58 + v57;
              int v63 = v13 + 4;
              *((unsigned char *)v104 + v61) = *(_DWORD *)(v62 + 16);
              unsigned int v64 = v5 - v63;
              unsigned int v65 = *(_DWORD *)(v62 + 16);
              if (v65 <= (unsigned __int16)(v5 - v63))
              {
                unsigned int v64 = *(_DWORD *)(v62 + 16);
              }
              else
              {
                unsigned int v65 = (unsigned __int16)(v5 - v63);
                uint64_t v66 = sub_100148940(v100, v15, v64, a4, *v6, v59, *(void *)(v62 + 8) + (unsigned __int16)v64);
                if (v66) {
                  goto LABEL_124;
                }
                uint64_t v9 = 3304;
              }
              if ((int)(v5 - (unsigned __int16)v63) < (int)v65) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1364, "ByteStream_NumReadBytesAvail(bs) >= (count)");
              }
              memmove((char *)v104 + (unsigned __int16)v63, *(const void **)(*((void *)v6 + 2) + v57 + 8), (unsigned __int16)v64);
              int v13 = v64 + (unsigned __int16)v63;
              if (v9 == 3304) {
                goto LABEL_123;
              }
              ++v15;
              a4 = (unsigned __int8 *)v6[8];
              if (v15 >= (unint64_t)a4) {
                goto LABEL_123;
              }
              v57 += 24;
            }
            while ((unsigned __int16)(v5 - v13) > 3u);
            LOBYTE(v10) = *v6;
            int v11 = v98;
          }
          uint64_t v67 = *((void *)v6 + 2) + 24 * (unsigned __int16)v15;
          __int16 v68 = v15;
          uint64_t v8 = v100;
          uint64_t v12 = sub_100148940(v100, v68, 0xFFFF, (__int16)a4, v10, v67, *(void *)(v67 + 8));
          unsigned int v7 = v96;
          if (!v12) {
            goto LABEL_129;
          }
          goto LABEL_166;
        }
        goto LABEL_70;
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1317, "ByteStream_NumReadBytesAvail(bs) >= 1");
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      goto LABEL_165;
    case 32:
      if ((unsigned __int16)v103 <= 6u)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
      else if ((unsigned __int16)v103 != 7)
      {
        BYTE7(v104[0]) = a4[8];
        LOWORD(a4) = BYTE7(v104[0]);
        if (BYTE7(v104[0]))
        {
          if ((v103 & 0xFFF8) == 8)
          {
            LOWORD(v53) = 0;
            int v54 = 8;
            char v55 = 32;
LABEL_119:
            uint64_t v84 = *((void *)v6 + 2) + 24 * (unsigned __int16)v53;
            uint64_t v12 = sub_100148940(v8, v53, 0xFFFF, (__int16)a4, v55, v84, *(void *)(v84 + 8));
            if (!v12)
            {
              uint64_t v9 = 3304;
              int v13 = v54;
              goto LABEL_152;
            }
            goto LABEL_166;
          }
          unsigned int v96 = a2;
          int v98 = v11;
          uint64_t v100 = a1;
          uint64_t v72 = 0;
          uint64_t v9 = 0;
          unint64_t v53 = 0;
          unsigned __int16 v73 = v103 - 1;
          int v54 = 8;
          unsigned int v74 = (unsigned __int16)(v103 - 3);
          unsigned int v99 = v74;
          while (1)
          {
            if (v74 <= (unsigned __int16)v54) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1409, "ByteStream_NumReadBytesAvail(bs) >= 4");
            }
            uint64_t v75 = *((void *)v6 + 2);
            uint64_t v76 = v75 + v72;
            unint64_t v77 = (char *)v104 + (unsigned __int16)v54;
            v77[3] = *(_DWORD *)(v75 + v72);
            v77[2] = BYTE1(*(_DWORD *)(v75 + v72));
            v77[1] = *(_WORD *)(v75 + v72 + 2);
            *unint64_t v77 = *(unsigned char *)(v75 + v72 + 3);
            if (v73 <= (unsigned __int16)(v54 + 4)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1410, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v78 = (char *)v104 + (unsigned __int16)(v54 + 4);
            v78[1] = *(unsigned char *)(v76 + 4);
            *uint64_t v78 = *(unsigned char *)(v76 + 5);
            if (v73 <= (unsigned __int16)(v54 + 6)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1411, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            uint64_t v79 = v75 + v72;
            char v80 = (char *)v104 + (unsigned __int16)(v54 + 6);
            v80[1] = *(_DWORD *)(v79 + 16);
            *char v80 = BYTE1(*(_DWORD *)(v79 + 16));
            unsigned __int16 v81 = v54 + 8;
            unsigned int v82 = v5 - (v54 + 8);
            unsigned int v83 = *(unsigned __int16 *)(v79 + 16);
            if (v83 <= (unsigned __int16)(v5 - v81))
            {
              unsigned int v82 = *(unsigned __int16 *)(v79 + 16);
            }
            else
            {
              unsigned int v83 = (unsigned __int16)v82;
              uint64_t v66 = sub_100148940(v100, v53, v82, a4, *v6, v76, *(void *)(v79 + 8) + (unsigned __int16)v82);
              if (v66)
              {
LABEL_124:
                uint64_t v12 = v66;
                unsigned int v7 = v96;
                uint64_t v8 = v100;
                goto LABEL_166;
              }
              uint64_t v9 = 3304;
              unsigned int v74 = v99;
            }
            if ((int)(v5 - v81) < (int)v83) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1432, "ByteStream_NumReadBytesAvail(bs) >= (count)");
            }
            memmove((char *)v104 + v81, *(const void **)(*((void *)v6 + 2) + v72 + 8), (unsigned __int16)v82);
            int v54 = v82 + v81;
            if (v9 == 3304) {
              break;
            }
            ++v53;
            a4 = (unsigned __int8 *)v6[8];
            if (v53 >= (unint64_t)a4) {
              break;
            }
            v72 += 24;
            if ((unsigned __int16)(v5 - v54) <= 7u)
            {
              char v55 = *v6;
              unsigned int v7 = v96;
              int v11 = v98;
              uint64_t v8 = v100;
              goto LABEL_119;
            }
          }
          int v13 = v82 + v81;
LABEL_123:
          unsigned int v7 = v96;
          int v11 = v98;
          uint64_t v8 = v100;
LABEL_152:
          unsigned int v88 = v11 - 3;
          if (v11 - 3 > v5) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1521, "(size_t)(pos - 3) <= (size_t)((bs).__size)");
          }
          if (v9 == 3304)
          {
            if (v5 <= 6)
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/"
                                     "avrcp_metadata.c");
            }
            else if (v88 < v5)
            {
              char v89 = 1;
              goto LABEL_160;
            }
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1524, "ByteStream_NumReadBytesAvail(bs) >= 1");
          }
          if (v5 <= 6)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          }
          else if (v88 < v5)
          {
            char v89 = 0;
LABEL_160:
            *((unsigned char *)v104 + v88) = v89;
            if ((int)(v5 - (unsigned __int16)(v11 - 2)) <= 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1529, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            *(_WORD *)((char *)v104 + (unsigned __int16)(v11 - 3) + 1) = bswap32(v13 - v11) >> 16;
            if ((int)(v5 - v11) >= (unsigned __int16)(v13 - v11)) {
              __int16 v14 = v13;
            }
            else {
              __int16 v14 = 7;
            }
            uint64_t v12 = v9;
LABEL_165:
            LOWORD(v103) = v14;
            goto LABEL_166;
          }
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1526, "ByteStream_NumReadBytesAvail(bs) >= 1");
        }
LABEL_70:
        uint64_t v9 = 0;
        int v13 = 8;
        goto LABEL_152;
      }
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1386, "ByteStream_NumReadBytesAvail(bs) >= 1");
    default:
      __int16 v14 = 0;
      goto LABEL_165;
  }
}

uint64_t sub_100146FE0(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (!a1 || !a4)
  {
LABEL_5:
    sub_10025B8C0();
    return 101;
  }
  if (a3 != 1)
  {
    if (a3)
    {
      uint64_t v6 = 3;
      uint64_t v5 = 16;
      BYTE1(v6) = a3;
      uint64_t v7 = a4;
      return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)&v5);
    }
    goto LABEL_5;
  }
  return 101;
}

uint64_t sub_100147044(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (a1 && a4 && a3)
  {
    v5[0] = 17;
    v5[1] = a3;
    v5[2] = a4;
    return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)v5);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_100147098(uint64_t a1, unsigned int a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a1 && a5 && a4)
  {
    v6[0] = 18;
    v6[1] = a4;
    unsigned char v6[2] = a5;
    return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)v6);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_1001470EC(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (a1 && a4 && a3)
  {
    v5[0] = 19;
    v5[1] = a3;
    v5[2] = a4;
    return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)v5);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_100147140(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a1 && a3)
  {
    uint64_t v5 = 0;
    v4[0] = 48;
    v4[1] = *(void *)a3;
    LOBYTE(v5) = *(unsigned char *)(a3 + 8);
    return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)v4);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_10014719C(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  if (a1 && a3 && a4)
  {
    LOBYTE(v5) = 32;
    LOBYTE(v6) = a3;
    uint64_t v7 = a4;
    return sub_100145EEC(a1, a2, 12, (unsigned __int8 *)&v5);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_1001471F0(uint64_t a1, unsigned int a2, uint64_t a3, int a4)
{
  if (a4) {
    char v5 = 13;
  }
  else {
    char v5 = 15;
  }
  if (a1 && a3)
  {
    v7[1] = a3;
    v7[2] = 0;
    v7[0] = 49;
    return sub_100145EEC(a1, a2, v5, (unsigned __int8 *)v7);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_10014724C(uint64_t a1, unsigned int a2, int a3, char **a4)
{
  uint64_t v8 = sub_1001439B4(a1, 0);
  if (!a1 || !a4)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v9 = v8;
  if (!v8) {
    return 105;
  }
  memset(v110, 0, sizeof(v110));
  int v10 = *(char ***)(v8 + 24);
  if (!v10) {
    return 105;
  }
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  if (*a4) {
    *int v10 = *a4;
  }
  int v11 = a4[1];
  if (v11) {
    v10[1] = v11;
  }
  LODWORD(v107) = 2316;
  uint64_t v108 = v110;
  unsigned int v12 = *(unsigned __int16 *)(*(void *)(qword_100A15230 + 24) + 20);
  LOWORD(v109) = *(_WORD *)(*(void *)(qword_100A15230 + 24) + 20);
  unsigned int v13 = *((unsigned __int16 *)v10 + 10);
  unsigned int v14 = *((unsigned __int16 *)v10 + 8);
  int v15 = v13 - v14;
  if (v13 < v14)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVRCP internal error: total attr count %d less than current attr index %d!", v16, v17, v18, v19, v20, v21, v22, *(unsigned __int16 *)(*(void *)(v9 + 24) + 20));
      int v23 = sub_100050B4C(4u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 105;
  }
  if (!v12) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1778, "((*operandCount)) > 0");
  }
  if (v12 <= 2) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1780, "ByteStream_NumReadBytesAvail(bs) >= 3");
  }
  BYTE2(v110[0]) = 88;
  LOWORD(v110[0]) = 6400;
  if (v12 == 3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1781, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  BYTE3(v110[0]) = a3;
  if (v12 <= 6) {
    uint64_t v26 = 4;
  }
  else {
    uint64_t v26 = 7;
  }
  uint64_t v106 = v26;
  int v27 = v12 - v26;
  uint64_t v24 = 3301;
  int v105 = v12 - v26;
  switch(a3)
  {
    case 16:
      int v37 = *((unsigned __int16 *)v10 + 9);
      if (v37 == 3)
      {
        int v75 = v12 - v26;
        uint64_t v76 = *v10;
        if ((unsigned __int16)v15 >= (unsigned __int16)v75) {
          size_t v39 = (unsigned __int16)v75;
        }
        else {
          size_t v39 = (unsigned __int16)v15;
        }
        if ((unsigned __int16)v15 <= (unsigned __int16)v75) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = 3304;
        }
        if (v12 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          int v77 = 0;
        }
        else
        {
          int v77 = v75;
        }
        if (v77 < (int)v39) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1811, "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        memmove((void *)((unint64_t)v110 | v106), v76, v39);
        int v41 = v39 + v106;
        unsigned int v45 = 1;
      }
      else
      {
        if (v37 != 2) {
          return 105;
        }
        unsigned int v38 = 3 * (unsigned __int16)v15;
        if (v38 <= (unsigned __int16)v27) {
          LODWORD(v39) = v15;
        }
        else {
          LODWORD(v39) = (unsigned __int16)(v12 - v26) / 3u;
        }
        if (v38 <= (unsigned __int16)v27) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = 3304;
        }
        if ((_WORD)v39)
        {
          if (v12 < 7)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_185:
            unsigned int v99 = "ByteStream_NumReadBytesAvail(bs) >= 3";
          }
          else
          {
            int v40 = *v10;
            int v41 = 3 * v39 + 7;
            uint64_t v42 = (unsigned __int16)v39;
            uint64_t v43 = (unsigned __int16)(v12 - 7) / 3u;
            unsigned int v44 = (unsigned char *)((unint64_t)v110 | 9);
            unsigned int v45 = 4;
            while (1)
            {
              if (!v43) {
                goto LABEL_185;
              }
              if (HIBYTE(*(_DWORD *)v40)) {
                break;
              }
              unsigned char *v44 = *(_DWORD *)v40;
              *(v44 - 1) = BYTE1(*(_DWORD *)v40);
              *(v44 - 2) = v40[1];
              v44 += 3;
              --v43;
              v40 += 2;
              if (!--v42) {
                goto LABEL_158;
              }
            }
            unsigned int v99 = "0 == ((companyIDs[i]) & 0xFF000000)";
          }
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1799, v99);
        }
        LOWORD(v39) = 0;
        unsigned int v45 = 4;
        int v41 = v26;
      }
LABEL_158:
      if (v24 == 3304)
      {
        unint64_t v98 = (unint64_t)&(*v10)[v45 * (unint64_t)(unsigned __int16)v39];
        *((_WORD *)v10 + 8) += v39;
        *int v10 = (char *)v98;
        v10[1] = 0;
      }
LABEL_136:
      unsigned int v93 = v106 - 3;
      if ((int)v106 - 3 > v12) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2077, "(size_t)(pos - 3) <= (size_t)((bs).__size)");
      }
      if (v24 != 3304)
      {
        if (v12 <= 6)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else if (v93 < v12)
        {
          char v94 = 3;
          goto LABEL_144;
        }
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2082, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if (v12 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
LABEL_171:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2080, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      if (v93 >= v12) {
        goto LABEL_171;
      }
      char v94 = 2;
LABEL_144:
      *((unsigned char *)v110 + v93) = v94;
      if ((int)(v12 - (unsigned __int16)(v106 - 2)) <= 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2085, "ByteStream_NumReadBytesAvail(bs) >= 2");
      }
      *(_WORD *)((char *)v110 + (unsigned __int16)(v106 - 3) + 1) = bswap32(v41 - v106) >> 16;
      if (v105 >= (unsigned __int16)(v41 - v106)) {
        __int16 v95 = v41;
      }
      else {
        __int16 v95 = 7;
      }
      LOWORD(v109) = v95;
      uint64_t v96 = sub_1001498DC(a1, a2, (unsigned __int8 *)&v107);
      if (!v96)
      {
        if (v24 == 3304) {
          return v24;
        }
        int v97 = *(void **)(v9 + 24);
        if (v97) {
          sub_100023010(v97);
        }
        *(void *)(v9 + 24) = 0;
      }
      return v96;
    case 17:
      int v46 = *v10;
      if ((unsigned __int16)(v13 - v14) >= (unsigned __int16)v27) {
        size_t v47 = (unsigned __int16)(v12 - v26);
      }
      else {
        size_t v47 = (unsigned __int16)(v13 - v14);
      }
      if (v12 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v48 = 0;
      }
      else
      {
        int v48 = v12 - v26;
      }
      if (v48 < (int)v47) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1839, "ByteStream_NumReadBytesAvail(bs) >= (count)");
      }
      goto LABEL_85;
    case 18:
      int v46 = *v10;
      if ((unsigned __int16)(v13 - v14) >= (unsigned __int16)v27) {
        size_t v47 = (unsigned __int16)(v12 - v26);
      }
      else {
        size_t v47 = (unsigned __int16)(v13 - v14);
      }
      if (v12 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v49 = 0;
      }
      else
      {
        int v49 = v12 - v26;
      }
      if (v49 < (int)v47) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1861, "ByteStream_NumReadBytesAvail(bs) >= (count)");
      }
LABEL_85:
      memmove((void *)((unint64_t)v110 | v106), v46, v47);
      int v41 = v47 + v106;
      if ((unsigned __int16)v15 <= (unsigned __int16)v105) {
        goto LABEL_118;
      }
      __int16 v57 = *((_WORD *)v10 + 8) + v47;
      uint64_t v58 = &v46[v47];
      goto LABEL_87;
    case 19:
      goto LABEL_30;
    case 20:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return v24;
    case 21:
    case 22:
      unsigned int v28 = *v10;
      int v29 = *((unsigned __int16 *)v10 + 9);
      if (v29 == 0xFFFF)
      {
        int v41 = v106;
      }
      else
      {
        unsigned __int16 v30 = *((_WORD *)v28 + 8) - v29;
        if ((unsigned __int16)v27 >= v30) {
          size_t v31 = (unsigned __int16)(*((_WORD *)v28 + 8) - v29);
        }
        else {
          size_t v31 = (unsigned __int16)v27;
        }
        uint64_t v32 = v10[1];
        if (v12 <= 6)
        {
          uint64_t v59 = v10[1];
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          uint64_t v32 = v59;
          int v33 = 0;
        }
        else
        {
          int v33 = v27;
        }
        uint64_t v104 = v28;
        if (v33 < (int)v31) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1912, "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __int16 v60 = v105;
        memmove((void *)((unint64_t)v110 | v106), v32, v31);
        int v41 = v31 + v106;
        if ((unsigned __int16)v105 < v30) {
          goto LABEL_113;
        }
        LOWORD(v14) = *((_WORD *)v10 + 8) + 1;
        *((_WORD *)v10 + 8) = v14;
        unsigned int v28 = v104 + 24;
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
      }
      if (v13 <= (unsigned __int16)v14)
      {
        sub_10025B8C0();
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
        LOWORD(v14) = *((_WORD *)v10 + 8);
      }
      if (v13 == (unsigned __int16)v14) {
        goto LABEL_118;
      }
      if ((unsigned __int16)(v12 - v41) >= 4u)
      {
        if (v12 < 7)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else
        {
          uint64_t v24 = 0;
          unsigned __int16 v61 = 0;
          while (v12 > (unsigned __int16)v41)
          {
            uint64_t v62 = &v28[24 * v61];
            *((unsigned char *)v110 + (unsigned __int16)v41) = *v62;
            if ((unsigned __int16)(v12 - 1) <= (unsigned __int16)(v41 + 1)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1952, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            int v63 = &v28[24 * v61];
            unsigned int v64 = (char *)v110 + (unsigned __int16)v41 + 1;
            v64[1] = v63[2];
            *unsigned int v64 = v63[3];
            if (v12 <= (unsigned __int16)(v41 + 3)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1953, "ByteStream_NumReadBytesAvail(bs) >= 1");
            }
            unsigned int v65 = &v28[24 * v61];
            uint64_t v66 = (const void **)(v65 + 8);
            unsigned __int16 v67 = v41 + 4;
            *((unsigned char *)v110 + (unsigned __int16)(v41 + 3)) = *((_DWORD *)v65 + 4);
            unsigned int v68 = v12 - (v41 + 4);
            unsigned int v69 = *((_DWORD *)v65 + 4);
            if (v69 <= (unsigned __int16)(v12 - v67))
            {
              unsigned int v68 = *((_DWORD *)v65 + 4);
            }
            else
            {
              unsigned int v69 = (unsigned __int16)v68;
              unsigned int v70 = (char *)*v66 + (unsigned __int16)v68;
              *((_WORD *)v10 + 8) += v61;
              *((_WORD *)v10 + 9) = v68;
              *int v10 = v62;
              v10[1] = v70;
              uint64_t v24 = 3304;
            }
            int v71 = v67;
            if ((int)(v12 - v67) < (int)v69) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1971, "ByteStream_NumReadBytesAvail(bs) >= (count)");
            }
            memmove((char *)v110 + v67, *v66, (unsigned __int16)v68);
            int v41 = v68 + v71;
            if (v24 == 3304) {
              goto LABEL_136;
            }
            ++v61;
            unsigned int v14 = *((unsigned __int16 *)v10 + 8);
            if (*((unsigned __int16 *)v10 + 10) - v14 <= v61) {
              goto LABEL_136;
            }
            if ((unsigned __int16)(v12 - v41) <= 3u) {
              goto LABEL_101;
            }
          }
        }
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1951, "ByteStream_NumReadBytesAvail(bs) >= 1");
      }
      unsigned __int16 v61 = 0;
LABEL_101:
      uint64_t v72 = &v28[24 * v61];
      unsigned __int16 v73 = (char *)*((void *)v72 + 1);
      __int16 v74 = v61 + v14;
      goto LABEL_134;
    case 32:
      __int16 v50 = *v10;
      int v51 = *((unsigned __int16 *)v10 + 9);
      if (v51 == 0xFFFF)
      {
        int v41 = v106;
      }
      else
      {
        unsigned __int16 v52 = *((_WORD *)v50 + 8) - v51;
        unsigned __int16 v101 = v52;
        if ((unsigned __int16)v27 >= v52) {
          size_t v31 = v52;
        }
        else {
          size_t v31 = (unsigned __int16)v27;
        }
        unint64_t v53 = v10[1];
        if (v12 <= 6)
        {
          uint64_t v78 = v10[1];
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
          unint64_t v53 = v78;
          int v54 = 0;
        }
        else
        {
          int v54 = v27;
        }
        uint64_t v104 = v50;
        if (v54 < (int)v31) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1993, "ByteStream_NumReadBytesAvail(bs) >= (count)");
        }
        __int16 v60 = v105;
        memmove((void *)((unint64_t)v110 | v106), v53, v31);
        int v41 = v31 + v106;
        if ((unsigned __int16)v105 < v101)
        {
LABEL_113:
          size_t v79 = (size_t)&v10[1][v31];
          *((_WORD *)v10 + 9) += v60;
          *int v10 = v104;
          v10[1] = (char *)v79;
          goto LABEL_135;
        }
        LOWORD(v14) = *((_WORD *)v10 + 8) + 1;
        *((_WORD *)v10 + 8) = v14;
        v50 += 24;
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
      }
      if (v13 <= (unsigned __int16)v14)
      {
        sub_10025B8C0();
        unsigned int v13 = *((unsigned __int16 *)v10 + 10);
        LOWORD(v14) = *((_WORD *)v10 + 8);
      }
      if (v13 == (unsigned __int16)v14)
      {
LABEL_118:
        uint64_t v24 = 0;
        goto LABEL_136;
      }
      if ((unsigned __int16)(v12 - v41) >= 8u)
      {
        if (v12 < 7)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else
        {
          uint64_t v24 = 0;
          unsigned __int16 v80 = 0;
          unsigned __int16 v102 = v12 - 1;
          while ((unsigned __int16)(v12 - 3) > (unsigned __int16)v41)
          {
            unsigned __int16 v81 = &v50[24 * v80];
            unsigned int v82 = (char *)v110 + (unsigned __int16)v41;
            v82[3] = *(_DWORD *)v81;
            v82[2] = BYTE1(*(_DWORD *)v81);
            v82[1] = *((_WORD *)v81 + 1);
            char *v82 = v81[3];
            if (v102 <= (unsigned __int16)(v41 + 4)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2033, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            unsigned int v83 = &v50[24 * v80];
            uint64_t v84 = (char *)v110 + (unsigned __int16)(v41 + 4);
            v84[1] = v83[4];
            char *v84 = v83[5];
            if (v102 <= (unsigned __int16)(v41 + 6)) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2034, "ByteStream_NumReadBytesAvail(bs) >= 2");
            }
            int v85 = &v50[24 * v80];
            unsigned int v86 = (const void **)(v85 + 8);
            uint64_t v87 = (char *)v110 + (unsigned __int16)(v41 + 6);
            v87[1] = *((_DWORD *)v85 + 4);
            *uint64_t v87 = BYTE1(*((_DWORD *)v85 + 4));
            unsigned __int16 v88 = v41 + 8;
            unsigned int v89 = v12 - (v41 + 8);
            unsigned int v90 = *((unsigned __int16 *)v85 + 8);
            if (v90 <= (unsigned __int16)(v12 - v88))
            {
              unsigned int v89 = *((unsigned __int16 *)v85 + 8);
            }
            else
            {
              unsigned int v90 = (unsigned __int16)v89;
              unsigned int v91 = (char *)*v86 + (unsigned __int16)v89;
              *((_WORD *)v10 + 8) += v80;
              *((_WORD *)v10 + 9) = v89;
              *int v10 = v81;
              v10[1] = v91;
              uint64_t v24 = 3304;
            }
            int v92 = v88;
            if ((int)(v12 - v88) < (int)v90) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2052, "ByteStream_NumReadBytesAvail(bs) >= (count)");
            }
            memmove((char *)v110 + v88, *v86, (unsigned __int16)v89);
            int v41 = v89 + v92;
            if (v24 == 3304) {
              goto LABEL_136;
            }
            ++v80;
            unsigned int v14 = *((unsigned __int16 *)v10 + 8);
            if (*((unsigned __int16 *)v10 + 10) - v14 <= v80) {
              goto LABEL_136;
            }
            if ((unsigned __int16)(v12 - v41) <= 7u) {
              goto LABEL_133;
            }
          }
        }
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 2032, "ByteStream_NumReadBytesAvail(bs) >= 4");
      }
      unsigned __int16 v80 = 0;
LABEL_133:
      uint64_t v72 = &v50[24 * v80];
      unsigned __int16 v73 = (char *)*((void *)v72 + 1);
      __int16 v74 = v80 + v14;
LABEL_134:
      *((_WORD *)v10 + 8) = v74;
      *((_WORD *)v10 + 9) = -1;
      *int v10 = v72;
      v10[1] = v73;
LABEL_135:
      uint64_t v24 = 3304;
      goto LABEL_136;
    default:
      if (a3 != 49) {
        return v24;
      }
LABEL_30:
      unint64_t v34 = *v10;
      if (2 * (unsigned __int16)(v13 - v14) <= (unsigned __int16)v27) {
        unsigned __int16 v35 = v13 - v14;
      }
      else {
        unsigned __int16 v35 = (unsigned __int16)v27 >> 1;
      }
      __int16 v100 = (unsigned __int16)v27 >> 1;
      unsigned int v103 = 2 * (unsigned __int16)(v13 - v14);
      if (v12 <= 6)
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        int v36 = 0;
      }
      else
      {
        int v36 = v12 - v26;
      }
      size_t v55 = 2 * v35;
      if (v36 < (int)v55) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c", 1885, "ByteStream_NumReadBytesAvail(bs) >= (count*dataElSize)");
      }
      unsigned int v56 = (unsigned __int16)v27;
      memmove((void *)((unint64_t)v110 | v106), v34, v55);
      int v41 = v106 + v55;
      if (v103 <= v56) {
        goto LABEL_118;
      }
      __int16 v57 = *((_WORD *)v10 + 8) + v100;
      uint64_t v58 = &v34[8 * v55];
LABEL_87:
      *((_WORD *)v10 + 8) = v57;
      *((_WORD *)v10 + 9) = -1;
      *int v10 = v58;
      v10[1] = 0;
      goto LABEL_135;
  }
}

uint64_t sub_100147FD4(uint64_t a1, unsigned int a2, __int16 a3, int a4, unsigned __int8 a5)
{
  if (a1)
  {
    v7[1] = &v8;
    v7[0] = a5;
    BYTE1(v7[0]) = 9;
    BYTE3(v7[0]) = 124;
    v7[2] = 7;
    if (a4) {
      char v5 = 126;
    }
    else {
      char v5 = -2;
    }
    char v8 = v5;
    int v9 = 1478033413;
    char v10 = HIBYTE(a3);
    char v11 = a3;
    return sub_1001498DC(a1, a2, (unsigned __int8 *)v7);
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_10014805C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v46 = 0u;
  long long v47 = 0u;
  memset(v45, 0, sizeof(v45));
  if (a1)
  {
    if (a3) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a3) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  uint64_t v6 = *(void *)(*(void *)(qword_100A15230 + 16) + 16);
  if (!v6)
  {
    sub_10025B8C0();
    uint64_t v6 = *(void *)(*(void *)(qword_100A15230 + 16) + 16);
  }
  if (*(unsigned char *)(a3 + 3) != 124)
  {
    uint64_t v12 = sub_1001439B4(a1, 0);
    if (!v12) {
      goto LABEL_97;
    }
    uint64_t v13 = v12;
    unsigned int v14 = *(unsigned __int8 **)(a3 + 8);
    if (v14)
    {
      unsigned int v15 = *(unsigned __int16 *)(a3 + 16);
      if (*(_WORD *)(a3 + 16))
      {
        if (v15 <= 2)
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
        }
        else
        {
          int v16 = v15 - 3;
          if (v15 != 3)
          {
            unsigned int v17 = *(unsigned __int16 *)(v14 + 1);
            unsigned int v18 = *v14;
            int v19 = v14[3];
            LOBYTE(v46) = v14[3];
            int v20 = 3308;
            if (v15 >= 7) {
              uint64_t v21 = 7;
            }
            else {
              uint64_t v21 = 4;
            }
            if (v15 >= 7 && (__PAIR64__(v18, bswap32(v17)) >> 16) == 6488)
            {
              int v20 = 3305;
              if (v19 <= 48)
              {
                switch(v19)
                {
                  case 16:
                  case 24:
                    goto LABEL_69;
                  case 17:
                    goto LABEL_145;
                  case 18:
                    if (v21 >= v15) {
                      goto LABEL_144;
                    }
                    LOBYTE(v47) = v14[v21];
                    goto LABEL_145;
                  case 19:
                  case 20:
                  case 21:
                    if (v21 >= v15) {
                      goto LABEL_141;
                    }
                    int v22 = 0;
                    BYTE8(v46) = v14[v21];
                    LODWORD(v21) = v21 + 1;
                    goto LABEL_142;
                  case 22:
                    if (v21 >= v15)
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/a"
                                             "v/avrcp/avrcp_metadata.c");
LABEL_141:
                      int v22 = 1;
                    }
                    else
                    {
                      uint64_t v38 = v21 + 1;
                      BYTE8(v46) = v14[v21];
                      if ((int)v21 + 1 >= v15)
                      {
                        int v22 = 1;
                        LODWORD(v21) = v21 + 1;
                      }
                      else
                      {
                        int v22 = 0;
                        LODWORD(v21) = v21 + 2;
                        BYTE9(v46) = v14[v38];
                      }
                    }
LABEL_142:
                    *(void *)&long long v47 = &v14[v21];
                    goto LABEL_143;
                  case 23:
                    *(void *)&long long v47 = v45;
                    if (v21 >= v15) {
                      goto LABEL_144;
                    }
                    BYTE8(v46) = v14[v21];
                    if (!BYTE8(v46)) {
                      goto LABEL_145;
                    }
                    uint64_t v39 = 0;
                    int v22 = 0;
                    int v44 = v15 - 1;
                    unsigned __int16 v40 = v21 + 1;
                    while (!v22)
                    {
                      if (v44 <= v40) {
                        goto LABEL_133;
                      }
                      int v22 = 0;
                      *(_WORD *)(v47 + 2 * v39) = bswap32(*(unsigned __int16 *)&v14[v40]) >> 16;
                      v40 += 2;
LABEL_134:
                      if (++v39 >= (unint64_t)BYTE8(v46)) {
                        goto LABEL_143;
                      }
                    }
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/"
                                           "avrcp/avrcp_metadata.c");
LABEL_133:
                    int v22 = 1;
                    goto LABEL_134;
                  case 25:
                  case 26:
                  case 27:
                  case 28:
                  case 29:
                  case 30:
                  case 31:
                    goto LABEL_32;
                  case 32:
                    *((void *)&v47 + 1) = v45;
                    *((void *)&v46 + 1) = &v14[v21];
                    if (v15 - v21 <= 7)
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/a"
                                             "v/avrcp/avrcp_metadata.c");
                      int v42 = v47;
                      int v22 = 1;
                    }
                    else
                    {
                      uint64_t v41 = v21 | 8;
                      if ((v21 | 8) >= v15) {
                        goto LABEL_144;
                      }
                      int v22 = 0;
                      LOWORD(v21) = v21 + 9;
                      int v42 = v14[v41];
                      LOBYTE(v47) = v14[v41];
                    }
                    if (!v42) {
                      goto LABEL_143;
                    }
                    uint64_t v43 = 0;
                    break;
                  default:
                    if (v19 == 48) {
                      goto LABEL_145;
                    }
                    goto LABEL_32;
                }
                while (1)
                {
                  if (v22)
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/"
                                           "avrcp/avrcp_metadata.c");
                  }
                  else if (v16 > (unsigned __int16)v21)
                  {
                    int v22 = 0;
                    *(_DWORD *)(*((void *)&v47 + 1) + 4 * v43) = bswap32(*(_DWORD *)&v14[(unsigned __int16)v21]);
                    LOWORD(v21) = v21 + 4;
                    goto LABEL_152;
                  }
                  int v22 = 1;
LABEL_152:
                  if (++v43 >= (unint64_t)v47)
                  {
LABEL_143:
                    if (v22) {
                      goto LABEL_144;
                    }
LABEL_145:
                    int v20 = 0;
                    goto LABEL_32;
                  }
                }
              }
              if (v19 <= 95)
              {
                if ((v19 - 64) < 2) {
                  goto LABEL_69;
                }
                if (v19 != 49)
                {
                  if (v19 != 80) {
                    goto LABEL_32;
                  }
LABEL_69:
                  if (v21 >= v15) {
                    goto LABEL_144;
                  }
                  BYTE8(v46) = v14[v21];
                  goto LABEL_145;
                }
                if (v21 < v15)
                {
                  BYTE8(v46) = v14[v21];
                  if ((int)(v15 - (v21 + 1)) < 4) {
                    goto LABEL_144;
                  }
                  HIDWORD(v46) = bswap32(*(_DWORD *)&v14[v21 + 1]);
                  goto LABEL_145;
                }
LABEL_139:
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrc"
                                       "p/avrcp_metadata.c");
                goto LABEL_144;
              }
              if (v19 == 96)
              {
                if (v15 - v21 < 2) {
                  goto LABEL_144;
                }
                WORD4(v46) = bswap32(*(unsigned __int16 *)&v14[v21]) >> 16;
                goto LABEL_145;
              }
              if (v19 == 116 || v19 == 144)
              {
                if (v21 >= v15)
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/av"
                                         "rcp/avrcp_metadata.c");
                }
                else
                {
                  BYTE8(v46) = v14[v21];
                  if ((int)(v15 - (v21 + 1)) >= 8)
                  {
                    for (uint64_t i = 0; i != 8; ++i)
                      *(unsigned char *)(((unint64_t)&v46 | 9) + i) = v14[v21 + 1 + i];
                    if ((int)(v15 - (v21 + 9)) > 1)
                    {
                      WORD1(v47) = bswap32(*(unsigned __int16 *)&v14[v21 + 9]) >> 16;
                      goto LABEL_145;
                    }
LABEL_144:
                    int v20 = 3306;
                    goto LABEL_32;
                  }
                }
                goto LABEL_139;
              }
LABEL_32:
              int v19 = v46;
            }
            if (v19 != 64)
            {
              uint64_t v24 = *(void **)(v13 + 24);
              if (v24)
              {
                sub_100023010(v24);
                *(void *)(v13 + 24) = 0;
              }
            }
            if ((v20 - 3301) <= 7 && ((1 << (v20 + 27)) & 0x91) != 0)
            {
LABEL_98:
              sub_100145D18(a1, a2, v46, v20);
              return 0;
            }
            if (v20)
            {
              uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(qword_100A15230 + 16) + 8);
              if (v26) {
                v26(a1, a2, a3);
              }
              return 0;
            }
            int v20 = 3301;
            if (v46 <= 0x2Fu)
            {
              switch((char)v46)
              {
                case 16:
                  int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))v6;
                  if (!*(void *)v6) {
                    goto LABEL_98;
                  }
                  goto LABEL_92;
                case 17:
                  unsigned __int16 v30 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
                  if (!v30) {
                    goto LABEL_98;
                  }
                  goto LABEL_90;
                case 18:
                  int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
                  if (!v25) {
                    goto LABEL_98;
                  }
                  uint64_t v28 = v47;
                  goto LABEL_93;
                case 19:
                  size_t v31 = *(void (**)(uint64_t, uint64_t, void, void))(v6 + 24);
                  if (!v31) {
                    goto LABEL_98;
                  }
                  goto LABEL_84;
                case 20:
                  size_t v31 = *(void (**)(uint64_t, uint64_t, void, void))(v6 + 32);
                  if (!v31) {
                    goto LABEL_98;
                  }
                  goto LABEL_84;
                case 21:
                  size_t v31 = *(void (**)(uint64_t, uint64_t, void, void))(v6 + 40);
                  if (!v31) {
                    goto LABEL_98;
                  }
                  goto LABEL_84;
                case 22:
                  uint64_t v32 = *(void (**)(uint64_t, uint64_t, void, void, void))(v6 + 48);
                  if (!v32) {
                    goto LABEL_98;
                  }
                  v32(a1, a2, BYTE8(v46), BYTE9(v46), v47);
                  return 0;
                case 23:
                  size_t v31 = *(void (**)(uint64_t, uint64_t, void, void))(v6 + 56);
                  if (!v31) {
                    goto LABEL_98;
                  }
LABEL_84:
                  v31(a1, a2, BYTE8(v46), v47);
                  break;
                case 24:
                  int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 64);
                  if (!v25) {
                    goto LABEL_98;
                  }
                  goto LABEL_92;
                case 32:
                  int v33 = *(void (**)(uint64_t, uint64_t, void, void, void))(v6 + 72);
                  if (!v33) {
                    goto LABEL_98;
                  }
                  v33(a1, a2, *((void *)&v46 + 1), v47, *((void *)&v47 + 1));
                  break;
                default:
                  goto LABEL_98;
              }
              return 0;
            }
            if (v46 > 0x4Fu)
            {
              if (v46 > 0x73u)
              {
                if (v46 == 116)
                {
                  int v29 = *(void (**)(uint64_t, uint64_t, void, unint64_t, void))(v6 + 176);
                  if (!v29) {
                    goto LABEL_98;
                  }
                }
                else
                {
                  if (v46 != 144) {
                    goto LABEL_98;
                  }
                  int v29 = *(void (**)(uint64_t, uint64_t, void, unint64_t, void))(v6 + 184);
                  if (!v29) {
                    goto LABEL_98;
                  }
                }
                v29(a1, a2, BYTE8(v46), (unint64_t)&v46 | 9, WORD1(v47));
                return 0;
              }
              if (v46 != 80)
              {
                if (v46 != 96) {
                  goto LABEL_98;
                }
                int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 120);
                if (!v25) {
                  goto LABEL_98;
                }
                uint64_t v28 = WORD4(v46);
LABEL_93:
                v25(a1, a2, v28);
                return 0;
              }
              int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 192);
              if (!v25)
              {
                int v20 = 3305;
                goto LABEL_98;
              }
LABEL_92:
              uint64_t v28 = BYTE8(v46);
              goto LABEL_93;
            }
            if (v46 <= 0x3Fu)
            {
              if (v46 == 48)
              {
                unsigned __int16 v30 = *(void (**)(uint64_t, uint64_t))(v6 + 80);
                if (v30)
                {
LABEL_90:
                  v30(a1, a2);
                  return 0;
                }
              }
              else if (v46 == 49)
              {
                int v27 = *(void (**)(uint64_t, uint64_t, void, void))(v6 + 88);
                if (v27)
                {
                  v27(a1, a2, BYTE8(v46), HIDWORD(v46));
                  return 0;
                }
              }
              goto LABEL_98;
            }
            if (v46 != 64)
            {
              if (v46 != 65) {
                goto LABEL_98;
              }
              int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
              if (!v25) {
                goto LABEL_98;
              }
              goto LABEL_92;
            }
            unint64_t v34 = *(void (**)(uint64_t, uint64_t, void, void, void))(v6 + 96);
            if (!v34) {
              goto LABEL_98;
            }
            uint64_t v35 = *(void *)(v13 + 24);
            if (v35)
            {
              v34(a1, a2, BYTE8(v46), *(unsigned __int16 *)(v35 + 16), *(unsigned __int16 *)(v35 + 18));
              return 0;
            }
LABEL_97:
            int v20 = 3308;
            goto LABEL_98;
          }
        }
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/av/avrcp/avrcp_metadata.c");
      }
    }
    else
    {
      sub_10025B8C0();
    }
    int v20 = 3308;
    goto LABEL_32;
  }
  uint64_t v7 = *(unsigned __int8 **)(a3 + 8);
  unsigned int v8 = *v7;
  if ((v8 & 0x7F) == 0x7E && *(unsigned __int16 *)(a3 + 16) >= 7u)
  {
    BOOL v10 = (v8 & 0x80u) == 0;
    uint64_t v9 = bswap32(*(unsigned __int16 *)(v7 + 5)) >> 16;
    int v23 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v6 + 112);
    if (v23)
    {
      v23(a1, a2, v9, (v8 >> 7) ^ 1);
      return 0;
    }
    unsigned __int8 v11 = 8;
  }
  else
  {
    LOWORD(v9) = 0;
    BOOL v10 = 0;
    unsigned __int8 v11 = 10;
  }
  sub_100147FD4(a1, a2, v9, v10, v11);
  return 0;
}

uint64_t sub_100148940(uint64_t a1, __int16 a2, __int16 a3, __int16 a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1001439B4(a1, 0);
  if (v14)
  {
    uint64_t v15 = v14;
    int v16 = sub_10010CE48(0x18uLL);
    *(void *)(v15 + 24) = v16;
    if (v16)
    {
      unsigned int v17 = v16;
      uint64_t result = 0;
      v17[8] = a2;
      v17[9] = a3;
      uint64_t v19 = *(void *)(v15 + 24);
      *(_WORD *)(v19 + 20) = a4;
      *(unsigned char *)(v19 + 22) = a5;
      *(void *)uint64_t v19 = a6;
      *(void *)(v19 + 8) = a7;
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AVRCP Could not handle fragmented message: no memory for fragment allocation", v28, v29, v30, v31, v32, v33, v34, v36);
        uint64_t v35 = sub_100050B4C(4u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 106;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AVRCP Could not handle fragmented message: connection not found for %:", v20, v21, v22, v23, v24, v25, v26, a1);
      int v27 = sub_100050B4C(4u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 105;
  }
  return result;
}

uint64_t sub_100148A6C(uint64_t a1, int a2, unsigned char *a3, uint64_t *a4)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (!a1 || !a4)
  {
    sub_10025B8C0();
    return 101;
  }
  long long v38 = 0u;
  long long v39 = 0u;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  if (*(void *)(qword_100A15230 + 16)) {
    return 119;
  }
  BOOL v10 = sub_10010CE48(0x18uLL);
  uint64_t v11 = qword_100A15230;
  *(void *)(qword_100A15230 + 24) = v10;
  if (!v10) {
    return 106;
  }
  uint64_t v12 = sub_10010CE48(32 * *(unsigned __int8 *)(v11 + 89));
  uint64_t v13 = (void *)qword_100A15230;
  uint64_t v14 = *(void *)(qword_100A15230 + 24);
  *(void *)(v14 + 8) = v12;
  if (!v12)
  {
    sub_100023010((void *)v14);
    uint64_t v6 = 106;
LABEL_29:
    *(void *)(qword_100A15230 + 24) = 0;
    return v6;
  }
  v13[2] = a1;
  v13[5] = sub_100148D70;
  v13[7] = sub_100149174;
  uint64_t v15 = sub_1001DB95C(off_10099BE58, (_WORD *)(v14 + 4));
  if (v15)
  {
    uint64_t v6 = v15;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_BIPSRV_RegisterAVRCPImagingResponder failed with status %!", v16, v17, v18, v19, v20, v21, v22, v6);
      uint64_t v23 = sub_100050B4C(4u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_26;
  }
  sub_100144874(*(unsigned __int16 *)(*(void *)(qword_100A15230 + 24) + 4));
  uint64_t v24 = qword_100A15230 + 24;
  if (a3)
  {
    *(unsigned char *)(*(void *)(qword_100A15230 + 24) + 16) = *a3;
    *(unsigned char *)(*(void *)v24 + 17) = a3[1];
    char v25 = a3[2];
  }
  else
  {
    char v25 = -1;
    *(unsigned char *)(*(void *)(qword_100A15230 + 24) + 16) = -1;
    *(unsigned char *)(*(void *)v24 + 17) = -1;
  }
  *(unsigned char *)(*(void *)v24 + 18) = v25;
  int v26 = *(unsigned __int16 *)(sub_10025B218(4u) + 10);
  uint64_t v27 = *(void *)(qword_100A15230 + 24);
  if ((v26 - 512) < 0xFFFFFE11) {
    LOWORD(v26) = 512;
  }
  *(_WORD *)(v27 + 20) = v26;
  xmmword_100A02088 = xmmword_1007B93E8;
  DWORD2(xmmword_100A02088) = a2;
  *(void *)&long long v38 = &unk_10099BEE8;
  *(void *)&long long v39 = *a4;
  WORD4(v39) = *((_WORD *)a4 + 4);
  WORD4(v38) = 5;
  xmmword_100A02098 = xmmword_1007B93E8;
  DWORD2(xmmword_100A02098) = a2 & 0xFFFFFEFF;
  uint64_t v34 = &unk_10099BF60;
  LOWORD(v35) = 5;
  uint64_t v36 = *a4;
  LOWORD(v37) = *((_WORD *)a4 + 4);
  uint64_t v30 = &unk_10099BFD8;
  LOWORD(v31) = 5;
  uint64_t v32 = v36;
  LOWORD(v33) = v37;
  uint64_t v6 = sub_10024E258((uint64_t)&v38, (int *)v27);
  if (!v6) {
    uint64_t v6 = sub_100143CE8();
  }
  sub_10024E564(**(unsigned int **)(qword_100A15230 + 24), (uint64_t)&v34);
  sub_10024E564(**(unsigned int **)(qword_100A15230 + 24), (uint64_t)&v30);
  if (v6)
  {
    sub_10024E448(**(_DWORD **)(qword_100A15230 + 24));
LABEL_26:
    uint64_t v28 = qword_100A15230;
    *(void *)(qword_100A15230 + 16) = 0;
    uint64_t v29 = *(void ***)(v28 + 24);
    if (v29[1])
    {
      sub_100023010(v29[1]);
      uint64_t v29 = *(void ***)(qword_100A15230 + 24);
      v29[1] = 0;
    }
    sub_100023010(v29);
    goto LABEL_29;
  }
  return v6;
}

void sub_100148D70(uint64_t a1, uint64_t a2, char *a3)
{
  if (!*(void *)(qword_100A15230 + 16))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No target registered; rejecting command", v9, v10, v11, v12, v13, v14, v15, v57);
      uint64_t v16 = sub_100050B4C(4u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_13;
  }
  if (a2 >= 0x10) {
    sub_10025B8C0();
  }
  int v6 = a3[3];
  if (!a3[3])
  {
    int v18 = sub_1001499F4(a1, a2, (uint64_t)a3);
    if (!v18) {
      return;
    }
    int v19 = v18;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Dispatched target handler for opcode=%d, cmd=%d failed: %!", v20, v21, v22, v23, v24, v25, v26, a3[3]);
      uint64_t v27 = sub_100050B4C(4u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_50;
  }
  int v7 = *a3;
  if ((v7 - 8) >= 3)
  {
    if (*a3)
    {
      if (v7 != 1)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unknown command", v31, v32, v33, v34, v35, v36, v37, v57);
          long long v38 = sub_100050B4C(4u);
          if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        int v19 = 3301;
LABEL_47:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Dispatched target handler for opcode=%d, cmd=%d failed: %!", v49, v50, v51, v52, v53, v54, v55, a3[3]);
          unsigned int v56 = sub_100050B4C(4u);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
LABEL_50:
        if (v19 == 3301) {
          char v17 = 8;
        }
        else {
          char v17 = 10;
        }
        goto LABEL_53;
      }
      if (v6 == 49)
      {
        int v61 = -249;
        char v62 = -1;
        uint64_t v58 = 822550272;
        uint64_t v59 = &v61;
        uint64_t v60 = 5;
        if (*((_WORD *)a3 + 8) == 5 && ((int v48 = **((unsigned __int8 **)a3 + 1), v48 == 255) || v48 == 7))
        {
          LOBYTE(v58) = 12;
          BYTE1(v61) = 72;
        }
        else
        {
          LOBYTE(v58) = 10;
        }
      }
      else
      {
        if (v6 != 48) {
          return;
        }
        LOWORD(v61) = 18439;
        uint64_t v58 = 805773068;
        uint64_t v59 = &v61;
        uint64_t v60 = 5;
        uint64_t v28 = *(void *)(qword_100A15230 + 24);
        HIWORD(v61) = *(_WORD *)(v28 + 16);
        char v62 = *(unsigned char *)(v28 + 18);
      }
      int v30 = sub_100144658(a1, a2, (unsigned __int8 *)&v58);
LABEL_46:
      int v19 = v30;
      if (!v30) {
        return;
      }
      goto LABEL_47;
    }
    if (v6 != 124) {
      return;
    }
    unsigned int v29 = *((unsigned __int16 *)a3 + 8);
    if (*((_WORD *)a3 + 8) && (**((unsigned char **)a3 + 1) & 0x7F) == 0x7E)
    {
      int v30 = sub_1001499F4(a1, a2, (uint64_t)a3);
      goto LABEL_46;
    }
    if (a3[1] != 9 || a3[2])
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Rejecting PASS THROUGH command directed at subunit <%d,%d>", v39, v40, v41, v42, v43, v44, v45, a3[1]);
        long long v46 = sub_100050B4C(4u);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      *a3 = 10;
      sub_100144658(a1, a2, (unsigned __int8 *)a3);
      unsigned int v29 = *((unsigned __int16 *)a3 + 8);
    }
    if (v29 >= 2)
    {
      long long v47 = (unsigned __int8 *)*((void *)a3 + 1);
      if (!v47[1])
      {
        (**(void (***)(uint64_t, uint64_t, void))(qword_100A15230 + 16))(a1, a2, *v47);
        return;
      }
    }
LABEL_13:
    char v17 = 8;
LABEL_53:
    *a3 = v17;
    sub_100144658(a1, a2, (unsigned __int8 *)a3);
    return;
  }
  unsigned int v8 = *(void (**)(uint64_t, uint64_t, char *))(*(void *)(qword_100A15230 + 16) + 24);
  if (v8)
  {
    v8(a1, a2, a3);
  }
}

char *sub_100149174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5)
{
  unsigned int v7 = a2;
  switch((int)a3)
  {
    case 'p':
      if (a4 == 2)
      {
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(qword_100A15230 + 16) + 16)
                                                                 + 128);
        if (!v9) {
          goto LABEL_62;
        }
        uint64_t v10 = bswap32(*a5) >> 16;
        goto LABEL_29;
      }
      if (!sub_100058654()) {
        goto LABEL_47;
      }
      sub_100056E24((uint64_t)"Invalid length for setBrowsedPlayer: %u (expecting == 2)", v49, v50, v51, v52, v53, v54, v55, a4);
      unsigned int v56 = sub_100050B4C(4u);
      if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
        goto LABEL_47;
      }
      goto LABEL_46;
    case 'q':
      if (a4 <= 9)
      {
        if (!sub_100058654()) {
          goto LABEL_47;
        }
        sub_100056E24((uint64_t)"Invalid length for getFolderItems: %u (expecting >= 10)", v30, v31, v32, v33, v34, v35, v36, a4);
        uint64_t v37 = sub_100050B4C(4u);
        if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          goto LABEL_47;
        }
        goto LABEL_46;
      }
      uint64_t v57 = *(unsigned __int8 *)a5;
      int v58 = *((unsigned __int8 *)a5 + 9);
      if ((v58 - 1) > 0xFDu || 4 * v58 + 10 == a4)
      {
        int v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t))(*(void *)(*(void *)(qword_100A15230 + 16)
                                                                                               + 16)
                                                                                   + 136);
        if (!v77) {
          goto LABEL_62;
        }
        uint64_t v78 = (char *)bswap32(*(_DWORD *)((char *)a5 + 1));
        uint64_t v79 = bswap32(*(_DWORD *)((char *)a5 + 5));
        return (char *)v77(a1, a2, v57, v78, v79);
      }
      if (!sub_100058654()) {
        goto LABEL_71;
      }
      sub_100056E24((uint64_t)"Invalid length for getFolderItems: %u (expecting %u)", v80, v81, v82, v83, v84, v85, v86, a4);
      uint64_t v87 = sub_100050B4C(4u);
      if (!os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)) {
        goto LABEL_71;
      }
      goto LABEL_70;
    case 'r':
      if (a4 == 11)
      {
        long long v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int16 *))(*(void *)(*(void *)(qword_100A15230 + 16) + 16)
                                                                                               + 144);
        if (!v38) {
          goto LABEL_62;
        }
        uint64_t v39 = (unsigned __int16 *)((char *)a5 + 3);
        uint64_t v40 = *((unsigned __int8 *)a5 + 2);
        goto LABEL_51;
      }
      if (!sub_100058654()) {
        goto LABEL_47;
      }
      sub_100056E24((uint64_t)"Invalid length for changePath: %u (expecting == 11)", v59, v60, v61, v62, v63, v64, v65, a4);
      uint64_t v66 = sub_100050B4C(4u);
      if (!os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
        goto LABEL_47;
      }
      goto LABEL_46;
    case 's':
      if (a4 <= 0xB)
      {
        if (!sub_100058654()) {
          goto LABEL_47;
        }
        sub_100056E24((uint64_t)"Invalid length for getItemAttributes: %d (expecting more or equal to 12)", v41, v42, v43, v44, v45, v46, v47, a4);
        int v48 = sub_100050B4C(4u);
        if (!os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
          goto LABEL_47;
        }
        goto LABEL_46;
      }
      uint64_t v57 = *(unsigned __int8 *)a5;
      int v67 = *((unsigned __int8 *)a5 + 11);
      if ((v67 - 1) > 0xFDu || 4 * v67 + 12 == a4)
      {
        int v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t))(*(void *)(*(void *)(qword_100A15230 + 16)
                                                                                               + 16)
                                                                                   + 152);
        if (!v77) {
          goto LABEL_62;
        }
        uint64_t v78 = (char *)a5 + 1;
        uint64_t v79 = bswap32(*(unsigned __int16 *)((char *)a5 + 9)) >> 16;
        return (char *)v77(a1, a2, v57, v78, v79);
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid length for getFolderItems: %u (expecting %u)", v88, v89, v90, v91, v92, v93, v94, a4);
          __int16 v95 = sub_100050B4C(4u);
          if (os_log_type_enabled(v95, OS_LOG_TYPE_ERROR)) {
LABEL_70:
          }
            sub_100744F6C();
        }
LABEL_71:
        uint64_t result = (char *)sub_10010CE48(4uLL);
        uint64_t v28 = result;
        int v29 = 33620128;
        if (result) {
          goto LABEL_63;
        }
      }
      return result;
    case 't':
      goto LABEL_10;
    case 'u':
      if (a4 == 1)
      {
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(qword_100A15230 + 16) + 16)
                                                                 + 168);
        if (!v9) {
          goto LABEL_62;
        }
        uint64_t v10 = *(unsigned __int8 *)a5;
LABEL_29:
        return (char *)v9(a1, a2, v10);
      }
      if (!sub_100058654()) {
        goto LABEL_47;
      }
      sub_100056E24((uint64_t)"Invalid length for GetTotalNumberOfItems: %d (expecting equal to 1)", v68, v69, v70, v71, v72, v73, v74, a4);
      int v75 = sub_100050B4C(4u);
      if (!os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
        goto LABEL_47;
      }
      goto LABEL_46;
    default:
      if (a3 != 128)
      {
LABEL_10:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"PDU 0x%x shouldn't be sent on the browsing channel", v19, v20, v21, v22, v23, v24, v25, a3);
          uint64_t v26 = sub_100050B4C(4u);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t result = (char *)sub_10010CE48(4uLL);
        uint64_t v28 = result;
        int v29 = 65696;
        if (!result) {
          return result;
        }
        goto LABEL_63;
      }
      if (a4 > 3)
      {
        long long v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int16 *))(*(void *)(*(void *)(qword_100A15230 + 16) + 16)
                                                                                               + 160);
        if (v38)
        {
          uint64_t v39 = a5 + 2;
          uint64_t v40 = bswap32(a5[1]) >> 16;
LABEL_51:
          uint64_t v76 = bswap32(*a5) >> 16;
          return (char *)v38(a1, a2, v76, v40, v39);
        }
LABEL_62:
        uint64_t result = (char *)sub_10010CE48(4uLL);
        uint64_t v28 = result;
        int v29 = 50397344;
        if (!result) {
          return result;
        }
LABEL_63:
        *(_DWORD *)uint64_t v28 = v29;
        return (char *)sub_1001333F0(a1, 4366, v7, 2, v28, 4);
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid length for search: %d (expecting more or equal to 4)", v11, v12, v13, v14, v15, v16, v17, a4);
        int v18 = sub_100050B4C(4u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
LABEL_46:
        }
          sub_100744F6C();
      }
LABEL_47:
      uint64_t result = (char *)sub_10010CE48(4uLL);
      uint64_t v28 = result;
      int v29 = 16842912;
      if (result) {
        goto LABEL_63;
      }
      return result;
  }
}

uint64_t sub_100149738()
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  uint64_t v0 = *(void *)(qword_100A15230 + 24);
  if (!v0) {
    return 121;
  }
  if (*(unsigned char *)(qword_100A15230 + 90) && !*(void *)(qword_100A15230 + 8)) {
    return 141;
  }
  sub_1001DBB00(*(unsigned __int16 *)(v0 + 4));
  sub_10024E448(**(_DWORD **)(qword_100A15230 + 24));
  uint64_t v1 = qword_100A15230;
  *(void *)(qword_100A15230 + 16) = 0;
  if (*(unsigned char *)(v1 + 89))
  {
    unint64_t v2 = 0;
    uint64_t v3 = 24;
    do
    {
      uint64_t v4 = *(void **)(*(void *)(*(void *)(v1 + 24) + 8) + v3);
      if (v4)
      {
        sub_100023010(v4);
        *(void *)(*(void *)(*(void *)(qword_100A15230 + 24) + 8) + v3) = 0;
        uint64_t v1 = qword_100A15230;
      }
      ++v2;
      v3 += 32;
    }
    while (v2 < *(unsigned __int8 *)(v1 + 89));
  }
  char v5 = *(void ***)(v1 + 24);
  if (v5[1])
  {
    sub_100023010(v5[1]);
    char v5 = *(void ***)(qword_100A15230 + 24);
    v5[1] = 0;
  }
  sub_100023010(v5);
  *(void *)(qword_100A15230 + 24) = 0;

  return sub_10014445C();
}

uint64_t sub_10014985C(uint64_t a1, unsigned int a2, char a3, unsigned __int8 a4)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (a1)
  {
    if ((a4 & 8) != 0)
    {
      v6[0] = a4;
      *(_WORD *)((char *)v6 + 1) = 9;
      BYTE3(v6[0]) = 124;
      v6[1] = v5;
      unsigned char v6[2] = 2;
      v5[0] = a3;
      v5[1] = 0;
      return sub_100144658(a1, a2, (unsigned __int8 *)v6);
    }
  }
  else
  {
    sub_10025B8C0();
  }
  return 101;
}

uint64_t sub_1001498DC(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  if ((*a3 & 8) == 0) {
    return 101;
  }

  return sub_100144658(a1, a2, a3);
}

uint64_t sub_100149934(uint64_t a1, unsigned int a2, const void *a3, size_t size)
{
  if (!xmmword_100A197C0) {
    return 408;
  }
  if (a1 && a3)
  {
    signed int v6 = size;
    size_t v8 = size;
    uint64_t v9 = (char *)sub_10010CE48(size);
    if (v9)
    {
      uint64_t v10 = v9;
      memmove(v9, a3, v8);
      uint64_t v11 = sub_1001333F0(a1, 4366, a2, 2, v10, v6);
      if (v11) {
        sub_100023010(v10);
      }
    }
    else
    {
      return 106;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return v11;
}

uint64_t sub_1001499F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(qword_100A15230 + 16);
  if (*(void *)(v3 + 16))
  {
    return sub_10014805C(a1, a2, a3);
  }
  else
  {
    char v5 = *(void (**)(void))(v3 + 8);
    if (v5)
    {
      v5();
      return 0;
    }
    else
    {
      return 3301;
    }
  }
}

uint64_t sub_100149A50()
{
  if (dword_100A020A8) {
    return 0;
  }
  if (byte_100A020AC) {
    return 5;
  }
  CFDictionaryRef v1 = IOServiceNameMatching("AppleBTMgmt");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService)
  {
    byte_100A020AC = 1;
    return 5;
  }
  io_object_t v3 = MatchingService;
  if (IOServiceOpen(MatchingService, mach_task_self_, 0, (io_connect_t *)&dword_100A020A8))
  {
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C070);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_100748C04();
    }
    uint64_t v0 = 5;
  }
  else
  {
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C0B0);
    }
    uint64_t v4 = qword_100A020B8;
    uint64_t v0 = 0;
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 136315138;
      unsigned int v7 = "AppleBTMgmt";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_mgmt_connect: Service %s connected!\n", (uint8_t *)&v6, 0xCu);
      uint64_t v0 = 0;
    }
  }
  IOObjectRelease(v3);
  return v0;
}

void sub_100149C00(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100149C30(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_100149C60(unsigned __int8 a1)
{
  unsigned __int8 inputStruct = a1;
  uint64_t v1 = sub_100149A50();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C0F0);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_100748CD4();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_100A020A8, 2u, 0, 0, &inputStruct, 1uLL, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C130);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_100748C6C();
      }
    }
    else
    {
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C170);
      }
      uint64_t v4 = qword_100A020B8;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_mode: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_100149E10(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100149E40(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_100149E70(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_100149EA0(unsigned __int8 a1)
{
  unsigned __int8 inputStruct = a1;
  uint64_t v1 = sub_100149A50();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C1B0);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_100748DA4();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_100A020A8, 3u, 0, 0, &inputStruct, 1uLL, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C1F0);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_100748D3C();
      }
    }
    else
    {
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C230);
      }
      uint64_t v4 = qword_100A020B8;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_level: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10014A050(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A080(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A0B0(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10014A0E0(uint64_t *a1)
{
  uint64_t v2 = sub_100149A50();
  if (v2)
  {
    uint64_t v3 = v2;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C270);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_100748E74();
    }
  }
  else
  {
    uint64_t v4 = IOConnectCallMethod(dword_100A020A8, 4u, 0, 0, a1, 0x20uLL, 0, 0, 0, 0);
    if (v4)
    {
      uint64_t v3 = v4;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C2B0);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_100748E0C();
      }
    }
    else
    {
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C2F0);
      }
      char v5 = qword_100A020B8;
      uint64_t v3 = 0;
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *a1;
        uint64_t v7 = a1[1];
        uint64_t v8 = a1[2];
        uint64_t v9 = a1[3];
        *(_DWORD *)std::__fs::filesystem::path buf = 134218752;
        uint64_t v12 = v6;
        __int16 v13 = 2048;
        uint64_t v14 = v7;
        __int16 v15 = 2048;
        uint64_t v16 = v8;
        __int16 v17 = 2048;
        uint64_t v18 = v9;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "applebt_set_trace_mask: set to <%016llX%016llX%016llX%016llX>!\n", buf, 0x2Au);
        return 0;
      }
    }
  }
  return v3;
}

void sub_10014A2B8(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A2E8(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A318(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10014A348(int a1)
{
  int inputStruct = a1;
  uint64_t v1 = sub_100149A50();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C330);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_100748F44();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_100A020A8, 5u, 0, 0, &inputStruct, 4uLL, 0, 0, 0, 0);
    if (v3)
    {
      uint64_t v2 = v3;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C370);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_100748EDC();
      }
    }
    else
    {
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C3B0);
      }
      uint64_t v4 = qword_100A020B8;
      uint64_t v2 = 0;
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::__fs::filesystem::path buf = 67109120;
        int v8 = inputStruct;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "applebt_set_capture_timeout: set to %d!\n", buf, 8u);
        return 0;
      }
    }
  }
  return v2;
}

void sub_10014A4F8(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A528(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A558(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10014A588(int a1)
{
  int inputStruct = a1;
  uint64_t v1 = sub_100149A50();
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C3F0);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_100749014();
    }
  }
  else
  {
    uint64_t v3 = IOConnectCallMethod(dword_100A020A8, 6u, 0, 0, &inputStruct, 4uLL, 0, 0, 0, 0);
    uint64_t v2 = v3;
    if (v3 != -536870201 && v3 != 0)
    {
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C430);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_100748FAC();
      }
    }
  }
  return v2;
}

void sub_10014A6A4(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A6D4(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10014A704(uint32_t a1, const void *a2, unsigned int a3)
{
  uint64_t v6 = sub_100149A50();
  if (v6)
  {
    uint64_t v7 = v6;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C470);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_1007490E4();
    }
  }
  else
  {
    uint64_t v8 = IOConnectCallMethod(dword_100A020A8, a1, 0, 0, a2, a3, 0, 0, 0, 0);
    if (v8)
    {
      uint64_t v7 = v8;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C4B0);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_10074907C();
      }
    }
    else
    {
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C4F0);
      }
      uint64_t v9 = qword_100A020B8;
      uint64_t v7 = 0;
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::__fs::filesystem::path buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "applebt_general_debug: completed!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v7;
}

void sub_10014A888(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A8B8(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014A8E8(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

uint64_t sub_10014A918(void *a1, size_t *a2)
{
  uint64_t v4 = sub_100149A50();
  if (v4)
  {
    uint64_t v5 = v4;
    if (qword_100A020B0 != -1) {
      dispatch_once(&qword_100A020B0, &stru_10099C530);
    }
    if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
      sub_1007491B4();
    }
  }
  else
  {
    uint64_t output = 0;
    uint32_t outputCnt = 1;
    uint64_t v6 = IOConnectCallMethod(dword_100A020A8, 7u, 0, 0, 0, 0, &output, &outputCnt, a1, a2);
    if (v6)
    {
      uint64_t v5 = v6;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C570);
      }
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_ERROR)) {
        sub_10074914C();
      }
    }
    else
    {
      *a2 = output;
      if (qword_100A020B0 != -1) {
        dispatch_once(&qword_100A020B0, &stru_10099C5B0);
      }
      uint64_t v7 = qword_100A020B8;
      uint64_t v5 = 0;
      if (os_log_type_enabled((os_log_t)qword_100A020B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::__fs::filesystem::path buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "applebt_read_crash_info: completed!\n", buf, 2u);
        return 0;
      }
    }
  }
  return v5;
}

void sub_10014AAB4(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014AAE4(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014AB14(id a1)
{
  qword_100A020B8 = (uint64_t)os_log_create("com.apple.bluetooth", "applebt_mgmt");
}

void sub_10014AB44(uint64_t a1, unsigned int a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  int v4 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 > 9u || ((1 << *(_DWORD *)a1) & 0x301) == 0)
  {
    *(_DWORD *)a1 = 9;
    *(_DWORD *)(a1 + 4) = v4;
    if (*(_WORD *)(a1 + 32))
    {
      uint64_t v6 = sub_1001E121C(*(unsigned __int16 *)(a1 + 32), 436);
      if (v6)
      {
        uint64_t v7 = v6;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_L2CAP_Disconnect failed in BNEP_FreeConnection %!\n", v8, v9, v10, v11, v12, v13, v14, v7);
          __int16 v15 = sub_100050B4C(7u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(_DWORD *)(a1 + 8) = a2;
        if (*(_WORD *)(a1 + 32)) {
          return;
        }
      }
    }
    sub_10014AC1C(a1, a2);
  }
}

void sub_10014AC1C(uint64_t a1, unsigned int a2)
{
  if (*(_DWORD *)a1)
  {
    uint64_t v3 = a1 + 34;
    int v4 = *(_DWORD *)(a1 + 34);
    unsigned int v5 = *(_DWORD *)(a1 + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = a2;
    }
    uint64_t v7 = *(void (**)(void, int *, uint64_t))(a1 + 88);
    uint64_t v8 = *(void (**)(void, uint64_t))(a1 + 96);
    int v22 = v4;
    __int16 v23 = *(_WORD *)(v3 + 4);
    uint64_t v21 = v8;
    if (*(_WORD *)(qword_100A020C0 + 2))
    {
      uint64_t v9 = 0;
      uint64_t v10 = qword_100A020D0 - 152;
      while (1)
      {
        v10 += 152;
        if (v10 == a1) {
          break;
        }
        if (*(unsigned __int16 *)(qword_100A020C0 + 2) == ++v9) {
          goto LABEL_9;
        }
      }
      unsigned __int16 v11 = v9 + 1;
    }
    else
    {
LABEL_9:
      unsigned __int16 v11 = 0;
    }
    int v12 = *(_DWORD *)(a1 + 4);
    *(_DWORD *)a1 = 0;
    *(_DWORD *)uint64_t v3 = 0;
    *(_WORD *)(v3 + 4) = 0;
    uint64_t v13 = *(void **)(a1 + 16);
    if (v13)
    {
      sub_100023010(v13);
      *(void *)(a1 + 16) = 0;
    }
    uint64_t v14 = *(unsigned int *)(a1 + 48);
    if (v14)
    {
      sub_10025D444(v14);
      *(_DWORD *)(a1 + 48) = 0;
    }
    if (sub_100026E24(*(_DWORD *)(a1 + 28))) {
      sub_100026DB4(*(unsigned int *)(a1 + 28));
    }
    uint64_t v16 = (void *)(a1 + 56);
    for (uint64_t i = *(void **)(a1 + 56); i != v16; uint64_t i = (void *)*v16)
    {
      uint64_t v17 = sub_10025C1A4((void **)(a1 + 56));
      if (!*(unsigned char *)(v17 - 8)) {
        (*(void (**)(void, uint64_t))(a1 + 104))(v11, v6);
      }
      sub_10025C53C(*(void **)(v17 - 24));
      sub_100023010((void *)(v17 - 24));
    }
    uint64_t v19 = (void *)(a1 + 72);
    for (j = *(void **)(a1 + 72); j != v19; j = (void *)*v19)
    {
      uint64_t v20 = sub_10025C1A4((void **)(a1 + 72));
      if (!*(unsigned char *)(v20 - 8)) {
        (*(void (**)(void, uint64_t))(a1 + 104))(v11, v6);
      }
      sub_100026DB4(*(unsigned int *)(v20 - 4));
      sub_10025C53C(*(void **)(v20 - 24));
      sub_100023010((void *)(v20 - 24));
    }
    sub_10014C0D0();
    if ((v12 - 5) < 2)
    {
LABEL_30:
      v7(v11, &v22, v6);
      return;
    }
    if (v12 != 7)
    {
      if (v12 != 2) {
        return;
      }
      goto LABEL_30;
    }
    v21(v11, v6);
  }
}

unsigned __int16 *sub_10014AE34(int a1)
{
  uint64_t v1 = *(unsigned __int16 *)qword_100A020C0;
  if (!*(_WORD *)qword_100A020C0) {
    return 0;
  }
  for (uint64_t i = (unsigned __int16 *)qword_100A020C8; *i != a1; i += 8)
  {
    if (!--v1) {
      return 0;
    }
  }
  return i;
}

uint64_t sub_10014AE70(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int16 *)(qword_100A020C0 + 2);
  if (*(_WORD *)(qword_100A020C0 + 2))
  {
    uint64_t v2 = 0;
    uint64_t v3 = qword_100A020D0 - 152;
    while (1)
    {
      v3 += 152;
      if (v3 == a1) {
        break;
      }
      if (v1 == ++v2)
      {
        LOWORD(v1) = 0;
        return (unsigned __int16)v1;
      }
    }
    LOWORD(v1) = v2 + 1;
  }
  return (unsigned __int16)v1;
}

uint64_t sub_10014AEBC(int a1, uint64_t *a2, _WORD *a3)
{
  if (a2)
  {
    if (*(_WORD *)(qword_100A020C0 + 2))
    {
      uint64_t v3 = 0;
      for (uint64_t i = qword_100A020D0; *(unsigned __int16 *)(i + 32) != a1; i += 152)
      {
        if (*(unsigned __int16 *)(qword_100A020C0 + 2) == ++v3) {
          return 404;
        }
      }
      *a2 = i;
      uint64_t result = 0;
      if (a3) {
        *a3 = v3 + 1;
      }
    }
    else
    {
      return 404;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return result;
}

uint64_t sub_10014AF34(int a1, int a2, uint64_t a3)
{
  if (a3)
  {
    if (HIDWORD(xmmword_100A197C0) || (uint64_t result = sub_10014B06C(), !result))
    {
      uint64_t result = sub_1001E5FF0(a1, (uint64_t)sub_10014B164);
      if (!result)
      {
        uint64_t v7 = *(unsigned __int16 *)qword_100A020C0;
        if (*(_WORD *)qword_100A020C0)
        {
          uint64_t v8 = qword_100A020C8;
          uint64_t v9 = (unsigned __int16 *)qword_100A020C8;
          uint64_t v10 = *(unsigned __int16 *)qword_100A020C0;
          do
          {
            int v11 = *v9;
            v9 += 8;
            if (v11 == a2)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Rejecting registration for service already registered\n", v12, v13, v14, v15, v16, v17, v18, v20);
                uint64_t v19 = sub_100050B4C(7u);
                if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
              goto LABEL_18;
            }
            --v10;
          }
          while (v10);
          while (*(_WORD *)v8)
          {
            v8 += 16;
            if (!--v7) {
              goto LABEL_18;
            }
          }
          uint64_t result = 0;
          *(_WORD *)uint64_t v8 = a2;
          ++HIDWORD(xmmword_100A197C0);
          *(void *)(v8 + 8) = a3;
        }
        else
        {
LABEL_18:
          if (!HIDWORD(xmmword_100A197C0))
          {
            sub_1001E61E4(a1);
            sub_10014B278();
          }
          return 104;
        }
      }
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return result;
}

uint64_t sub_10014B06C()
{
  if (HIDWORD(xmmword_100A197C0)) {
    return 119;
  }
  uint64_t v1 = (unsigned __int16 *)sub_10025B218(7u);
  qword_100A020C0 = (uint64_t)v1;
  if (v1[2] - 10 >= 0x123)
  {
    sub_10025B8C0();
    uint64_t v1 = (unsigned __int16 *)qword_100A020C0;
  }
  if (v1[3] - 10 >= 0x123)
  {
    sub_10025B8C0();
    uint64_t v1 = (unsigned __int16 *)qword_100A020C0;
  }
  qword_100A020C8 = (uint64_t)sub_10010CE48(16 * *v1);
  qword_100A020D0 = (uint64_t)sub_10010CE48(152 * *(unsigned __int16 *)(qword_100A020C0 + 2));
  if (*(_WORD *)(qword_100A020C0 + 2))
  {
    unint64_t v2 = 0;
    uint64_t v3 = 56;
    do
    {
      sub_10025C0F0((void *)(qword_100A020D0 + v3));
      sub_10025C0F0((void *)(qword_100A020D0 + v3 + 16));
      ++v2;
      v3 += 152;
    }
    while (v2 < *(unsigned __int16 *)(qword_100A020C0 + 2));
  }
  return 0;
}

void sub_10014B164(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = (_DWORD *)sub_10014B734(a2);
  if (v6)
  {
    if (!*v6) {
      sub_10025B8C0();
    }
    BOOL v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = sub_10014B780((int *)a2);
    BOOL v7 = v8 != 0;
  }
  v12[0] = 0x2021388FFFF069BLL;
  memset(&v12[1], 0, 24);
  if (a1 == 4111) {
    uint64_t v9 = &unk_10099C5D0;
  }
  else {
    uint64_t v9 = &unk_1007B9528;
  }
  unsigned int v10 = sub_1001E0320((uint64_t)sub_10014B7EC, (uint64_t)sub_10014B908, (uint64_t)sub_10014B9F0, a3, (uint64_t)v12, v7, (uint64_t)v9);
  if (v8)
  {
    if (v10)
    {
      sub_10014AB44(v8, v10);
    }
    else
    {
      *(_DWORD *)uint64_t v8 = 1;
      *(_WORD *)(v8 + 32) = a3;
      int v11 = *(_DWORD *)a2;
      *(_WORD *)(v8 + 38) = *(_WORD *)(a2 + 4);
      *(_DWORD *)(v8 + 34) = v11;
    }
  }
}

void sub_10014B278()
{
  if (HIDWORD(xmmword_100A197C0)) {
    sub_10025B8C0();
  }
  qword_100A020C0 = sub_10025B218(7u);
  if (*(_WORD *)(qword_100A020C0 + 2))
  {
    uint64_t v0 = 0;
    unint64_t v1 = 0;
    do
    {
      if (qword_100A020D0 + v0 + 56 != *(void *)(qword_100A020D0 + v0 + 56))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Send queue to %: not empty\n", v2, v3, v4, v5, v6, v7, v8, qword_100A020D0 + v0 + 34);
          uint64_t v9 = sub_100050B4C(7u);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          {
            uint64_t v18 = sub_100050714();
            *(_DWORD *)std::__fs::filesystem::path buf = 136446466;
            uint64_t v21 = v18;
            __int16 v22 = 1024;
            int v23 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
      }
      if (qword_100A020D0 + v0 + 72 != *(void *)(qword_100A020D0 + v0 + 72))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Resend queue to %: not empty\n", v10, v11, v12, v13, v14, v15, v16, qword_100A020D0 + v0 + 34);
          uint64_t v17 = sub_100050B4C(7u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            uint64_t v19 = sub_100050714();
            *(_DWORD *)std::__fs::filesystem::path buf = 136446466;
            uint64_t v21 = v19;
            __int16 v22 = 1024;
            int v23 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
      }
      ++v1;
      v0 += 152;
    }
    while (v1 < *(unsigned __int16 *)(qword_100A020C0 + 2));
  }
  if (qword_100A020D0)
  {
    sub_100023010((void *)qword_100A020D0);
    qword_100A020D0 = 0;
  }
  if (qword_100A020C8)
  {
    sub_100023010((void *)qword_100A020C8);
    qword_100A020C8 = 0;
  }
}

uint64_t sub_10014B4AC(int a1, int a2)
{
  if (!HIDWORD(xmmword_100A197C0)) {
    return 408;
  }
  uint64_t v2 = *(unsigned __int16 *)(qword_100A020C0 + 2);
  if (*(_WORD *)(qword_100A020C0 + 2))
  {
    uint64_t v3 = (unsigned __int16 *)(qword_100A020D0 + 40);
    while (!*(v3 - 4) || *v3 != a2)
    {
      v3 += 76;
      if (!--v2) {
        goto LABEL_7;
      }
    }
    return 141;
  }
  else
  {
LABEL_7:
    uint64_t v4 = *(unsigned __int16 *)qword_100A020C0;
    if (*(_WORD *)qword_100A020C0)
    {
      for (uint64_t i = (_WORD *)qword_100A020C8; (unsigned __int16)*i != a2; i += 8)
      {
        if (!--v4) {
          return 120;
        }
      }
      sub_1001E61E4(a1);
      *uint64_t i = 0;
      sub_10014C0D0();
      return 0;
    }
    else
    {
      return 120;
    }
  }
}

uint64_t sub_10014B564(int a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, __int16 a6, uint64_t a7)
{
  if (!a3 || !a2) {
    goto LABEL_15;
  }
  if (!*(void *)a3)
  {
    sub_10025B8C0();
    if (!*(void *)a3) {
      return 101;
    }
  }
  if (!*(void *)(a3 + 8))
  {
    sub_10025B8C0();
    if (!*(void *)(a3 + 8)) {
      return 101;
    }
  }
  if (!a4)
  {
LABEL_15:
    sub_10025B8C0();
    return 101;
  }
  if (HIDWORD(xmmword_100A197C0) || (uint64_t v15 = sub_10014B06C(), !v15))
  {
    uint64_t v14 = (_DWORD *)sub_10014B734(a4);
    if (v14)
    {
      if (!*v14) {
        sub_10025B8C0();
      }
      if (!HIDWORD(xmmword_100A197C0)) {
        sub_10025B8C0();
      }
      return 2008;
    }
    else
    {
      uint64_t v17 = sub_10014B780((int *)a4);
      if (v17)
      {
        uint64_t v18 = v17;
        v20[0] = 0x2021388FFFF069BLL;
        memset(&v20[1], 0, 24);
        uint64_t v15 = sub_1001DF7BC((uint64_t)sub_10014B7EC, (uint64_t)sub_10014B908, (uint64_t)sub_10014B9F0, a1, a4, (uint64_t)v20, (_WORD *)(v17 + 32), a7);
        if (v15)
        {
          sub_10014AB44(v18, v15);
        }
        else
        {
          *(void *)(v18 + 88) = a2;
          *(void *)(v18 + 96) = *(void *)a3;
          *(void *)(v18 + 112) = *(void *)(a3 + 8);
          int v19 = *(_DWORD *)a4;
          *(_WORD *)(v18 + 38) = *(_WORD *)(a4 + 4);
          *(_DWORD *)(v18 + 34) = v19;
          *(_WORD *)(v18 + 40) = a5;
          *(_WORD *)(v18 + 42) = a6;
          *(_OWORD *)(v18 + 136) = *(_OWORD *)(a3 + 16);
          *(_DWORD *)uint64_t v18 = 2;
        }
      }
      else
      {
        if (!HIDWORD(xmmword_100A197C0))
        {
          sub_1001E61E4(a1);
          sub_10014B278();
        }
        return 104;
      }
    }
  }
  return v15;
}

uint64_t sub_10014B734(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int16 *)(qword_100A020C0 + 2);
  if (!*(_WORD *)(qword_100A020C0 + 2)) {
    return 0;
  }
  for (uint64_t i = qword_100A020D0;
        *(_DWORD *)a1 != *(_DWORD *)(i + 34) || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(i + 38);
        i += 152)
  {
    if (!--v1) {
      return 0;
    }
  }
  return i;
}

uint64_t sub_10014B780(int *a1)
{
  uint64_t result = sub_10014B734((uint64_t)&dword_1007BAF30);
  if (result)
  {
    *(_DWORD *)uint64_t result = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 32) = 0;
    int v3 = *a1;
    *(_WORD *)(result + 38) = *((_WORD *)a1 + 2);
    *(_DWORD *)(result + 34) = v3;
    *(unsigned char *)(result + 44) = 0;
    *(_DWORD *)(result + 48) = 0;
    ++HIDWORD(xmmword_100A197C0);
  }
  return result;
}

void sub_10014B7EC(int a1, unsigned int a2, unsigned int a3, unsigned int a4)
{
  v6[0] = 0;
  uint64_t v4 = *(unsigned __int16 *)(qword_100A020C0 + 2);
  if (*(_WORD *)(qword_100A020C0 + 2))
  {
    for (uint64_t i = qword_100A020D0; *(unsigned __int16 *)(i + 32) != a1; i += 152)
    {
      if (!--v4) {
        return;
      }
    }
    uint64_t v7 = i;
    if (a4)
    {
      *(_WORD *)(i + 32) = 0;
    }
    else
    {
      a4 = 2001;
      if (a2 >= 0x69B && a3 >= 0x69B)
      {
        if (*(_DWORD *)i == 2)
        {
          *(_DWORD *)uint64_t i = 6;
          a4 = sub_10014C374(i, *(_WORD *)(i + 40), *(_WORD *)(i + 42));
          if (!a4) {
            return;
          }
        }
        else
        {
          if (*(_DWORD *)i == 1)
          {
            *(_DWORD *)uint64_t i = 3;
            v6[1] = &v7;
            LOWORD(v6[0]) = 8;
            sub_1000268E4((uint64_t)sub_10014C12C, v6, 100, (int *)(i + 28));
            return;
          }
          a4 = 408;
        }
      }
    }
    sub_10014AB44(i, a4);
  }
}

void sub_10014B908(int a1, unsigned int a2)
{
  if (HIDWORD(xmmword_100A197C0))
  {
    uint64_t v2 = *(unsigned __int16 *)(qword_100A020C0 + 2);
    if (!*(_WORD *)(qword_100A020C0 + 2)) {
      return;
    }
    for (uint64_t i = qword_100A020D0; *(unsigned __int16 *)(i + 32) != a1; i += 152)
    {
      if (!--v2) {
        return;
      }
    }
    *(_WORD *)(i + 32) = 0;
    int v13 = *(_DWORD *)i;
    if (*(_DWORD *)i) {
      BOOL v14 = v13 == 9;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14)
    {
      if ((v13 & 0xFFFFFFFE) != 8) {
        return;
      }
    }
    else
    {
      *(_DWORD *)uint64_t i = 8;
      *(_DWORD *)(i + 4) = v13;
    }
    sub_10014AC1C(i, a2);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"L2CAP disconnected, but BNEP terminated\n", v5, v6, v7, v8, v9, v10, v11, v15);
    uint64_t v12 = sub_100050B4C(7u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10014B9F0(int a1, char *a2, unsigned int a3)
{
  if (HIDWORD(xmmword_100A197C0))
  {
    uint64_t v3 = *(unsigned __int16 *)(qword_100A020C0 + 2);
    if (*(_WORD *)(qword_100A020C0 + 2))
    {
      for (uint64_t i = qword_100A020D0; *(unsigned __int16 *)(i + 32) != a1; i += 152)
      {
        if (!--v3) {
          return;
        }
      }
      sub_10014C8AC(i, a2, a3);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"L2CAP disconnected, but BNEP terminated\n", v5, v6, v7, v8, v9, v10, v11, v13);
    uint64_t v12 = sub_100050B4C(7u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_10014BAB0(unsigned int a1, uint64_t a2, uint64_t a3, int a4, long long *a5)
{
  if (!HIDWORD(xmmword_100A197C0)) {
    return 408;
  }
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v20 = 0;
  if (*(unsigned __int16 *)(qword_100A020C0 + 2) >= a1)
  {
    uint64_t v6 = qword_100A020D0;
    signed int v7 = a1 - 1;
    uint64_t v8 = (_DWORD *)(qword_100A020D0 + 152 * (int)(a1 - 1));
    if (*v8 == 4)
    {
      __int16 v19 = 0;
      if (a4)
      {
        if (a3)
        {
          if (*(void *)a3 || (sub_10025B8C0(), *(void *)a3))
          {
            if (*(void *)(a3 + 8) || (sub_10025B8C0(), *(void *)(a3 + 8)))
            {
              uint64_t v5 = sub_10025CE54((uint64_t)sub_10014BC8C, v6 + 152 * v7 + 34, a5, (int *)(v6 + 152 * v7 + 48), 1);
              if (!v5)
              {
                *uint64_t v8 = 5;
                uint64_t v12 = v6 + 152 * v7;
                *(void *)(v12 + 88) = a2;
                *(void *)(v12 + 96) = *(void *)a3;
                *(void *)(v12 + 112) = *(void *)(a3 + 8);
                *(_OWORD *)(v12 + 136) = *(_OWORD *)(a3 + 16);
                return v5;
              }
LABEL_21:
              sub_10014AB44((uint64_t)v8, 0x7DEu);
              return v5;
            }
          }
        }
        else
        {
          sub_10025B8C0();
        }
        return 101;
      }
      sub_10014C440((_DWORD *)(qword_100A020D0 + 152 * v7), 2u, 4);
      uint64_t v14 = v6 + 152 * v7;
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v16 = (void **)(v14 + 16);
      uint64_t v15 = v17;
      if (v17)
      {
        __int16 v18 = *(_WORD *)(v6 + 152 * v7 + 24);
        if (!v18) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep.c", 874, "(c->setupReqExtHeadersSize) > 0");
        }
        uint64_t v21 = v15;
        LOWORD(v22) = v18;
        HIDWORD(v22) = 0x10000;
        WORD1(v22) = v18;
        sub_10014D774((uint64_t)v8, (uint64_t)&v21, &v20, &v19);
        sub_100023010(*v16);
        uint64_t v5 = 0;
        *uint64_t v16 = 0;
      }
      else
      {
        uint64_t v5 = 0;
      }
      goto LABEL_21;
    }
    return 408;
  }
  return 2004;
}

void sub_10014BC8C(int a1, unsigned int a2)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v19 = 0;
  HIWORD(v18) = 0;
  uint64_t v2 = *(unsigned __int16 *)(qword_100A020C0 + 2);
  if (*(_WORD *)(qword_100A020C0 + 2))
  {
    uint64_t v4 = qword_100A020D0;
    while (*(_DWORD *)(v4 + 48) != a1)
    {
      v4 += 152;
      if (!--v2) {
        goto LABEL_5;
      }
    }
    if (a2)
    {
      __int16 v13 = 4;
    }
    else
    {
      __int16 v13 = 0;
      *(_DWORD *)uint64_t v4 = 7;
    }
    sub_10014C440((_DWORD *)v4, 2u, v13);
    if (*(void *)(v4 + 16))
    {
      __int16 v14 = *(_WORD *)(v4 + 24);
      if (!v14) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep.c", 806, "(c->setupReqExtHeadersSize) > 0");
      }
      uint64_t v20 = *(void *)(v4 + 16);
      LOWORD(v21) = v14;
      HIDWORD(v21) = 0x10000;
      WORD1(v21) = v14;
      sub_10014D774(v4, (uint64_t)&v20, &v19, (_WORD *)&v18 + 3);
      sub_100023010(*(void **)(v4 + 16));
      *(void *)(v4 + 16) = 0;
    }
    if (a2)
    {
      sub_10014AB44(v4, a2);
    }
    else
    {
      uint64_t v15 = *(unsigned __int16 *)(qword_100A020C0 + 2);
      if (*(_WORD *)(qword_100A020C0 + 2))
      {
        uint64_t v16 = 0;
        uint64_t v17 = qword_100A020D0 - 152;
        while (1)
        {
          v17 += 152;
          if (v4 == v17) {
            break;
          }
          if (v15 == ++v16)
          {
            LOWORD(v15) = 0;
            goto LABEL_22;
          }
        }
        LOWORD(v15) = v16 + 1;
      }
LABEL_22:
      (*(void (**)(void, uint64_t, void))(v4 + 88))((unsigned __int16)v15, v4 + 34, 0);
    }
  }
  else
  {
LABEL_5:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"AcceptPolicyCB issued but no connection\n", v5, v6, v7, v8, v9, v10, v11, v18);
      uint64_t v12 = sub_100050B4C(7u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
}

uint64_t sub_10014BE1C(unsigned int a1)
{
  if (!HIDWORD(xmmword_100A197C0)) {
    return 408;
  }
  if (*(unsigned __int16 *)(qword_100A020C0 + 2) < a1) {
    return 2004;
  }
  unsigned int v2 = *(_DWORD *)(qword_100A020D0 + 152 * (int)(a1 - 1));
  BOOL v3 = v2 > 9;
  int v4 = (1 << v2) & 0x301;
  if (v3 || v4 == 0) {
    return sub_1001E121C(*(unsigned __int16 *)(qword_100A020D0 + 152 * (int)(a1 - 1) + 32), 436);
  }
  else {
    return 0;
  }
}

uint64_t sub_10014BEA4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5, char *a6, size_t a7, char *a8, unsigned __int16 a9)
{
  if (!HIDWORD(xmmword_100A197C0)) {
    return 408;
  }
  if (*(unsigned __int16 *)(qword_100A020C0 + 2) < a2) {
    return 2004;
  }
  signed int v10 = a2 - 1;
  uint64_t v11 = (_DWORD *)(qword_100A020D0 + 152 * (int)(a2 - 1));
  if (*v11 != 7) {
    return 2006;
  }
  if (a3)
  {
    if (*(_DWORD *)(qword_100A020D0 + 152 * v10 + 34) ^ *(_DWORD *)a3 | *(unsigned __int16 *)(qword_100A020D0
                                                                                               + 152 * v10
                                                                                               + 38) ^ *(unsigned __int16 *)(a3 + 4))
      uint64_t v12 = (int *)a3;
    else {
      uint64_t v12 = 0;
    }
    if (a4)
    {
LABEL_11:
      if (xmmword_100A195C0 ^ *(_DWORD *)a4 | WORD2(xmmword_100A195C0) ^ *(unsigned __int16 *)(a4 + 4)) {
        __int16 v13 = (int *)a4;
      }
      else {
        __int16 v13 = 0;
      }
      if (!a8) {
        goto LABEL_26;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a4) {
      goto LABEL_11;
    }
  }
  __int16 v13 = 0;
  if (!a8)
  {
LABEL_26:
    sub_10025B8C0();
    return 101;
  }
LABEL_19:
  if (!a1) {
    goto LABEL_26;
  }
  if (a9 >= 0x5DDu)
  {
    uint64_t v9 = 142;
    if (a5 != 33024 || a9 > 0x5E0u) {
      return v9;
    }
  }
  *(void *)(qword_100A020D0 + 152 * v10 + 104) = a1;

  return sub_10014C4F4(v11, v12, v13, a5, a6, a7, a8, a9);
}

uint64_t sub_10014C000(unsigned int a1, int a2)
{
  if (!HIDWORD(xmmword_100A197C0)) {
    return 408;
  }
  if (*(unsigned __int16 *)(qword_100A020C0 + 2) < a1) {
    return 2004;
  }
  uint64_t v3 = qword_100A020D0 + 152 * a1;
  int v5 = *(_DWORD *)(v3 - 152);
  int v4 = (_DWORD *)(v3 - 152);
  if (v5 != 7) {
    return 408;
  }
  __int16 v6 = a2 - 2020;
  if (!a2) {
    __int16 v6 = 0;
  }
  return sub_10014C440(v4, 4u, v6);
}

uint64_t sub_10014C068(unsigned int a1, int a2)
{
  if (!HIDWORD(xmmword_100A197C0)) {
    return 408;
  }
  if (*(unsigned __int16 *)(qword_100A020C0 + 2) < a1) {
    return 2004;
  }
  uint64_t v3 = qword_100A020D0 + 152 * a1;
  int v5 = *(_DWORD *)(v3 - 152);
  int v4 = (_DWORD *)(v3 - 152);
  if (v5 != 7) {
    return 408;
  }
  __int16 v6 = a2 - 2030;
  if (!a2) {
    __int16 v6 = 0;
  }
  return sub_10014C440(v4, 6u, v6);
}

void sub_10014C0D0()
{
  int v0 = HIDWORD(xmmword_100A197C0);
  if (!HIDWORD(xmmword_100A197C0))
  {
    sub_10025B8C0();
    int v0 = HIDWORD(xmmword_100A197C0);
  }
  HIDWORD(xmmword_100A197C0) = v0 - 1;
  if (v0 == 1)
  {
    sub_10014B278();
  }
}

void sub_10014C12C(uint64_t a1)
{
}

uint64_t sub_10014C13C(_DWORD *a1, void *a2)
{
  if (*a1 != 7 && (**(unsigned char **)(*a2 + 24) & 0x7F) != 1
    || (uint64_t result = sub_10014C1A4((uint64_t)a2), result == 410))
  {
    sub_10025C10C(a2 + 3, (uint64_t)(a1 + 14));
    return 0;
  }
  return result;
}

uint64_t sub_10014C1A4(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 18);
  if (!*(_WORD *)(a1 + 18)) {
    goto LABEL_8;
  }
  uint64_t v16 = a1;
  v15[0] = (const void *)8;
  uint64_t v3 = (unsigned int *)(a1 + 20);
  if (sub_100026E24(*(_DWORD *)(a1 + 20)))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"StartTimer called while timer already active\n", v4, v5, v6, v7, v8, v9, v10, v14);
      uint64_t v11 = sub_100050B4C(7u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100026DB4(*v3);
  }
  v15[1] = &v16;
  uint64_t v12 = sub_1000268E4((uint64_t)sub_10014DD1C, v15, v2, (int *)(a1 + 20));
  if (!v12)
  {
LABEL_8:
    uint64_t v12 = ((uint64_t (*)(void (*)(unsigned int, uint64_t, uint64_t, uint64_t), void, void, void, void))loc_1001DE1A4)(sub_10014DAD0, *(unsigned __int16 *)(*(void *)(a1 + 8) + 32), 0, *(void *)a1, 0);
    if (v12)
    {
      if (*(_WORD *)(a1 + 18)) {
        sub_100026DB4(*(unsigned int *)(a1 + 20));
      }
    }
    else
    {
      sub_10025C10C((void *)(a1 + 24), *(void *)(a1 + 8) + 72);
    }
  }
  return v12;
}

uint64_t sub_10014C2C4(_DWORD *a1, char *a2, size_t a3, char a4, __int16 a5)
{
  uint64_t v10 = sub_100022FE8(0x28uLL);
  if (!v10) {
    return 106;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_10025C6D8(a2, a3, 1);
  if (!v12)
  {
    uint64_t v14 = 106;
    goto LABEL_7;
  }
  __int16 v13 = v12;
  v11[16] = a4;
  *((_WORD *)v11 + 9) = a5;
  v11[17] = 0;
  *(void *)uint64_t v11 = v12;
  *((void *)v11 + 1) = a1;
  uint64_t v14 = sub_10014C13C(a1, v11);
  if (v14)
  {
    sub_100023010(v13);
LABEL_7:
    sub_100023010(v11);
  }
  return v14;
}

uint64_t sub_10014C374(uint64_t a1, __int16 a2, __int16 a3)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(a1 + 44)) {
    return 116;
  }
  uint64_t v6 = (char *)sub_100022FE8(7uLL);
  if (!v6) {
    return 106;
  }
  uint64_t v7 = v6;
  *(_WORD *)uint64_t v6 = 257;
  unsigned char v6[2] = 2;
  v6[4] = a3;
  void v6[3] = HIBYTE(a3);
  v6[6] = a2;
  v6[5] = HIBYTE(a2);
  uint64_t v8 = sub_10025B218(7u);
  uint64_t v9 = sub_10014C2C4((_DWORD *)a1, v7, 7uLL, 1, *(_WORD *)(v8 + 4));
  if (v9) {
    sub_100023010(v7);
  }
  else {
    *(unsigned char *)(a1 + 44) |= 1u;
  }
  return v9;
}

uint64_t sub_10014C440(_DWORD *a1, unsigned int a2, __int16 a3)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (a2 > 6 || ((1 << a2) & 0x54) == 0) {
    sub_10025B8C0();
  }
  uint64_t v6 = (char *)sub_100022FE8(4uLL);
  if (!v6) {
    return 106;
  }
  uint64_t v7 = v6;
  *uint64_t v6 = 1;
  v6[1] = a2;
  void v6[3] = a3;
  unsigned char v6[2] = HIBYTE(a3);
  uint64_t v8 = sub_10014C2C4(a1, v6, 4uLL, 8, 0);
  if (v8) {
    sub_100023010(v7);
  }
  return v8;
}

uint64_t sub_10014C4F4(_DWORD *a1, int *a2, int *a3, unsigned int a4, char *a5, size_t a6, char *a7, size_t a8)
{
  if (a1)
  {
    if (a7) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a7) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  uint64_t v16 = (unsigned __int8 *)sub_10025C1E0(3u);
  if (!v16) {
    return 106;
  }
  uint64_t v17 = v16;
  if (a5)
  {
    uint64_t v18 = sub_10025C7D4(v16, a5, a6, 2u);
    if (v18)
    {
      uint64_t v19 = v18;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"MBUF prepend failed\n", v20, v21, v22, v23, v24, v25, v26, v57);
        uint64_t v27 = sub_100050B4C(7u);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_38;
    }
    LOBYTE(a5) = 0x80;
  }
  uint64_t v28 = (char *)sub_100022FE8(0xFuLL);
  if (!v28)
  {
    uint64_t v19 = 106;
LABEL_38:
    sub_100023010(v17);
    return v19;
  }
  int v29 = v28;
  char v30 = 4 * (a3 == 0);
  if (a3) {
    char v31 = 3;
  }
  else {
    char v31 = 2;
  }
  if (!a2) {
    char v30 = v31;
  }
  *uint64_t v28 = a5 | v30;
  if (!a2)
  {
    unsigned int v33 = 1;
    if (!a3) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  int v32 = *a2;
  *(_WORD *)(v28 + 5) = *((_WORD *)a2 + 2);
  *(_DWORD *)(v28 + 1) = v32;
  unsigned int v33 = 7;
  if (a3)
  {
LABEL_21:
    int v34 = *a3;
    uint64_t v35 = &v28[v33];
    *((_WORD *)v35 + 2) = *((_WORD *)a3 + 2);
    *(_DWORD *)uint64_t v35 = v34;
    v33 += 6;
  }
LABEL_22:
  *(_WORD *)&v28[v33] = __rev16(a4);
  uint64_t v36 = sub_10025C7D4(v17, v28, v33 + 2, 1u);
  if (v36)
  {
    uint64_t v19 = v36;
    if (!sub_100058654()) {
      goto LABEL_37;
    }
    sub_100056E24((uint64_t)"MBUF prepend failed\n", v37, v38, v39, v40, v41, v42, v43, v57);
    uint64_t v44 = sub_100050B4C(7u);
    if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
      goto LABEL_37;
    }
    goto LABEL_25;
  }
  uint64_t v45 = sub_100022798(v17, a7, a8, 2u);
  if (v45)
  {
    uint64_t v19 = v45;
    if (!sub_100058654()) {
      goto LABEL_37;
    }
    sub_100056E24((uint64_t)"MBUF append failed\n", v46, v47, v48, v49, v50, v51, v52, v57);
    uint64_t v53 = sub_100050B4C(7u);
    if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
      goto LABEL_37;
    }
LABEL_25:
    sub_100744F6C();
LABEL_37:
    sub_100023010(v29);
    goto LABEL_38;
  }
  uint64_t v54 = sub_100022FE8(0x28uLL);
  if (!v54)
  {
    uint64_t v19 = 106;
    goto LABEL_37;
  }
  uint64_t v55 = v54;
  *((_DWORD *)v54 + 4) = 0;
  void *v54 = v17;
  v54[1] = a1;
  uint64_t v19 = sub_10014C13C(a1, v54);
  if (v19)
  {
    sub_100023010(v55);
    goto LABEL_37;
  }
  return v19;
}

void sub_10014C770(uint64_t a1, int a2, uint64_t a3, unsigned char *a4)
{
  int v4 = *(unsigned __int8 *)(a1 + 44);
  if ((v4 & a2) != 0)
  {
    *(unsigned char *)(a1 + 44) = v4 & ~(_BYTE)a2;
    uint64_t v9 = (void *)(a1 + 72);
    while (1)
    {
      uint64_t v9 = (void *)*v9;
      if (v9 == (void *)(a1 + 72)) {
        break;
      }
      if (*((unsigned __int8 *)v9 - 8) == a2)
      {
        sub_100026DB4(*((unsigned int *)v9 - 1));
        sub_10025C120(v9);
        sub_10025C53C((void *)*(v9 - 3));
        sub_100023010(v9 - 3);
        goto LABEL_9;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"CancelControlTimer called and no packet found\n", v10, v11, v12, v13, v14, v15, v16, v19);
      uint64_t v17 = sub_100050B4C(7u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_9:
    uint64_t v18 = sub_10014AE70(a1);
    switch(a2)
    {
      case 4:
        (*(void (**)(uint64_t, uint64_t))(a1 + 120))(v18, a3);
        break;
      case 2:
        (*(void (**)(uint64_t, uint64_t))(a1 + 128))(v18, a3);
        break;
      case 1:
        if (a3)
        {
          *a4 = 0;
          sub_10014AB44(a1, a3);
        }
        else
        {
          *(_DWORD *)a1 = 7;
          (*(void (**)(uint64_t, uint64_t, void))(a1 + 88))(v18, a1 + 34, 0);
        }
        break;
    }
  }
}

void sub_10014C8AC(uint64_t a1, char *a2, unsigned int a3)
{
  uint64_t v58 = 0;
  unsigned __int16 v57 = 0;
  if (!a2)
  {
    uint64_t v51 = "buf";
    goto LABEL_62;
  }
  if (!a3)
  {
    uint64_t v51 = "(length) > 0";
LABEL_62:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1427, v51);
  }
  __int16 v56 = 0;
  int v55 = 0;
  int v53 = 0;
  __int16 v54 = 0;
  uint64_t v59 = a2;
  __int16 v60 = a3;
  unsigned __int16 v61 = a3;
  int v62 = 65537;
  char v4 = *a2;
  int v5 = *a2 & 0x7F;
  int v6 = *a2 & 0x80;
  char v63 = *a2 & 0x80;
  if ((v5 - 2) < 3) {
    goto LABEL_6;
  }
  if (v5 != 1)
  {
    if (v5)
    {
LABEL_38:
      uint64_t v9 = 411;
LABEL_39:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BNEP failed parsing packet %!\n", v23, v24, v25, v26, v27, v28, v29, v9);
        char v30 = sub_100050B4C(7u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
LABEL_6:
    if ((v4 & 0x7E) == 2)
    {
      int v53 = xmmword_100A195C0;
      __int16 v54 = WORD2(xmmword_100A195C0);
      unsigned int v7 = 1;
    }
    else
    {
      if (a3 < 7)
      {
        char v8 = 0;
        unsigned int v7 = 1;
        HIBYTE(v62) = 1;
        goto LABEL_15;
      }
      int v53 = *(_DWORD *)(a2 + 1);
      __int16 v54 = *(_WORD *)(a2 + 5);
      unsigned int v7 = 7;
      LOWORD(v62) = 7;
    }
    char v8 = 1;
LABEL_15:
    if (v5 == 2 || v5 == 4)
    {
      int v55 = *(_DWORD *)(a1 + 34);
      __int16 v56 = *(_WORD *)(a1 + 38);
      if ((v8 & 1) == 0) {
        goto LABEL_36;
      }
LABEL_22:
      if ((int)(a3 - v7) < 2)
      {
LABEL_37:
        HIBYTE(v62) = 1;
        goto LABEL_38;
      }
      uint64_t v9 = bswap32(*(unsigned __int16 *)&a2[v7]) >> 16;
      LOWORD(v62) = v7 + 2;
      if (!v6) {
        goto LABEL_28;
      }
      goto LABEL_24;
    }
    if (v8)
    {
      if ((int)(a3 - v7) >= 6)
      {
        uint64_t v10 = &a2[v7];
        int v55 = *(_DWORD *)v10;
        __int16 v56 = *((_WORD *)v10 + 2);
        v7 += 6;
        LOWORD(v62) = v7;
        goto LABEL_22;
      }
    }
    else
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
    }
LABEL_36:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
    goto LABEL_37;
  }
  uint64_t v9 = sub_10014CD4C(a1, (uint64_t)&v59, &v63);
  if (v9) {
    goto LABEL_39;
  }
  if (!v63) {
    goto LABEL_28;
  }
LABEL_24:
  uint64_t v11 = sub_10014D774(a1, (uint64_t)&v59, &v58, &v57);
  if (v11)
  {
    uint64_t v12 = v11;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"BNEP failed parsing extension headers %!\n", v13, v14, v15, v16, v17, v18, v19, v12);
    uint64_t v20 = sub_100050B4C(7u);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_27;
  }
LABEL_28:
  if (v5 == 1 || *(_DWORD *)a1 != 7) {
    return;
  }
  uint64_t v21 = v58;
  uint64_t v22 = v57;
  uint64_t v65 = a1;
  unsigned __int16 v64 = 0;
  if (v9 == 33024)
  {
    if (BYTE2(v62) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1270, "(*bs).__RWFlag == BYTESTREAM_READ");
    }
    if (HIBYTE(v62))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
      HIBYTE(v62) = 1;
      if (BYTE2(v62) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1271, "(*bs).__RWFlag == BYTESTREAM_READ");
      }
      goto LABEL_55;
    }
    unsigned __int16 v31 = v61;
    __int16 v42 = v62;
    if (v61 - (unsigned __int16)v62 <= 1)
    {
      HIBYTE(v62) = 1;
LABEL_55:
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
      goto LABEL_56;
    }
    LOWORD(v62) = v62 + 2;
    if (v61 - (unsigned __int16)(v42 + 2) < 2)
    {
LABEL_56:
      HIBYTE(v62) = 1;
      goto LABEL_57;
    }
    uint64_t v9 = bswap32(*(unsigned __int16 *)&v59[(unsigned __int16)(v42 + 2)]) >> 16;
    __int16 v32 = v42 + 4;
    LOWORD(v62) = v32;
  }
  else
  {
    if (HIBYTE(v62))
    {
LABEL_57:
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"%! (%d)", v43, v44, v45, v46, v47, v48, v49, 411);
      uint64_t v50 = sub_100050B4C(7u);
      if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_27:
      sub_100744F6C();
      return;
    }
    unsigned __int16 v31 = v61;
    __int16 v32 = v62;
  }
  unsigned __int16 v33 = v31 - v32;
  if ((unsigned __int16)(v31 - v32) >= 0x5DDu)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received BNEP payload is too large, truncating\n", v34, v35, v36, v37, v38, v39, v40, v52);
      uint64_t v41 = sub_100050B4C(7u);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    unsigned __int16 v33 = 1500;
  }
  sub_10014AEBC(*(unsigned __int16 *)(a1 + 32), &v65, &v64);
  (*(void (**)(void, int *, int *, uint64_t, uint64_t, uint64_t, char *, void))(v65 + 112))(v64, &v53, &v55, v9, v21, v22, &v59[(unsigned __int16)v62], v33);
}

uint64_t sub_10014CD4C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (*(unsigned char *)(a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1328, "(*bs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a2 + 15)) {
    goto LABEL_3;
  }
  uint64_t v4 = *(unsigned __int16 *)(a2 + 10);
  uint64_t v5 = *(unsigned __int16 *)(a2 + 12);
  if (v4 <= v5) {
    goto LABEL_103;
  }
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = v5 + 1;
  *(_WORD *)(a2 + 12) = v5 + 1;
  char v9 = *(unsigned char *)(v7 + v5);
  switch(v9)
  {
    case 0:
      if (v4 <= (unsigned __int16)v8) {
        goto LABEL_103;
      }
      *(_WORD *)(a2 + 12) = v5 + 2;
      unsigned int v14 = *(unsigned __int8 *)(v7 + v8);
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Receive %s for command %d\n", v15, v16, v17, v18, v19, v20, v21, (uint64_t)"");
        uint64_t v22 = sub_100050B4C(7u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      unint64_t v23 = 0x40002000100uLL >> (8 * v14);
      if (v14 >= 6) {
        LOBYTE(v23) = 0;
      }
      sub_10014C770(v6, v23 & 7, 117, a3);
      return 0;
    case 1:
      uint64_t result = 0;
      if (*(_DWORD *)v6 > 7u || ((1 << *(_DWORD *)v6) & 0xB8) == 0) {
        return result;
      }
      uint64_t v76 = v6;
      long long v77 = xmmword_1007B9570;
      if (v4 <= (unsigned __int16)v8) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 900, "ByteStream_NumReadBytesAvail(*bs) >= 1");
      }
      unsigned __int16 v75 = 0;
      uint64_t v24 = v5 + 2;
      *(_WORD *)(a2 + 12) = v5 + 2;
      int v25 = *(unsigned __int8 *)(v7 + v8);
      if (v25 != 16)
      {
        if (v25 != 4)
        {
          LOWORD(v26) = 0;
          if (v25 == 2)
          {
            if ((int)v4 - (int)v24 <= 1)
            {
              *(unsigned char *)(a2 + 15) = 1;
              goto LABEL_3;
            }
            uint64_t v27 = (unsigned __int8 *)(v7 + (unsigned __int16)v24);
            __int16 v28 = v27[1];
            __int16 v29 = *v27;
            *(_WORD *)(a2 + 12) = v5 + 4;
            if ((int)(v4 - (unsigned __int16)(v5 + 4)) < 2) {
              goto LABEL_103;
            }
            LOWORD(v26) = v28 | (v29 << 8);
            LOWORD(v30) = __rev16(*(unsigned __int16 *)(v7 + (unsigned __int16)(v5 + 4)));
            *(_WORD *)(a2 + 12) = v5 + 6;
            goto LABEL_76;
          }
          goto LABEL_49;
        }
        if ((int)(v4 - (unsigned __int16)v24) <= 3)
        {
          *(unsigned char *)(a2 + 15) = 1;
          goto LABEL_3;
        }
        unsigned int v26 = bswap32(*(_DWORD *)(v7 + v24));
        *(_WORD *)(a2 + 12) = v5 + 6;
        if (v26 < 0x10000)
        {
          uint64_t v33 = *(unsigned __int16 *)(a2 + 12);
          if (*(unsigned __int16 *)(a2 + 10) - (int)v33 <= 3) {
            goto LABEL_103;
          }
          unsigned int v30 = bswap32(*(_DWORD *)(*(void *)a2 + v33));
          *(_WORD *)(a2 + 12) = v33 + 4;
          if (v30 < 0x10000) {
            goto LABEL_77;
          }
          goto LABEL_74;
        }
LABEL_75:
        sub_10014C440((_DWORD *)v6, 2u, 1);
        return 2011;
      }
      if ((int)(v4 - (unsigned __int16)v24) <= 3)
      {
        *(unsigned char *)(a2 + 15) = 1;
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
        LOWORD(v26) = 0;
        goto LABEL_63;
      }
      LOWORD(v26) = __rev16(*(unsigned __int16 *)(v7 + (unsigned __int16)v24 + 2));
      *(_WORD *)(a2 + 12) = v5 + 6;
      if (v4 - (unint64_t)(unsigned __int16)(v5 + 6) < 0xC)
      {
LABEL_63:
        *(unsigned char *)(a2 + 15) = 1;
        goto LABEL_64;
      }
      uint64_t v31 = 0;
      uint64_t v32 = v7 + (unsigned __int16)(v5 + 6);
      do
      {
        *((unsigned char *)&v77 + v31 + 4) = *(unsigned char *)(v32 + v31);
        ++v31;
      }
      while (v31 != 12);
      *(_WORD *)(a2 + 12) = v5 + 18;
      if (!sub_100178064(0, &v77)) {
        goto LABEL_75;
      }
LABEL_49:
      if (v25 != 16)
      {
        LOWORD(v30) = 0;
        goto LABEL_76;
      }
LABEL_64:
      if (*(unsigned char *)(a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 934, "(*bs).__RWFlag == BYTESTREAM_READ");
      }
      if (*(unsigned char *)(a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
        int v36 = *(unsigned __int8 *)(a2 + 14);
        *(unsigned char *)(a2 + 15) = 1;
        if (v36 != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 935, "(*bs).__RWFlag == BYTESTREAM_READ");
        }
        goto LABEL_3;
      }
      uint64_t v37 = *(unsigned __int16 *)(a2 + 10);
      uint64_t v38 = *(unsigned __int16 *)(a2 + 12);
      if ((int)v37 - (int)v38 <= 3)
      {
        *(unsigned char *)(a2 + 15) = 1;
LABEL_3:
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_103:
        *(unsigned char *)(a2 + 15) = 1;
        return 411;
      }
      uint64_t v39 = *(void *)a2;
      unsigned int v40 = *(unsigned __int16 *)(*(void *)a2 + v38 + 2);
      *(_WORD *)(a2 + 12) = v38 + 4;
      if (v37 - (unint64_t)(unsigned __int16)(v38 + 4) < 0xC) {
        goto LABEL_103;
      }
      uint64_t v41 = 0;
      LOWORD(v30) = __rev16(v40);
      uint64_t v42 = v39 + (unsigned __int16)(v38 + 4);
      do
      {
        *((unsigned char *)&v77 + v41 + 4) = *(unsigned char *)(v42 + v41);
        ++v41;
      }
      while (v41 != 12);
      *(_WORD *)(a2 + 12) = v38 + 16;
      if (!sub_100178064(0, &v77))
      {
LABEL_74:
        sub_10014C440((_DWORD *)v6, 2u, 2);
        return 2012;
      }
LABEL_76:
      if (*(unsigned char *)(a2 + 15)) {
        return 411;
      }
LABEL_77:
      if (!(_WORD)v26 || (uint64_t v43 = sub_10014AE34((unsigned __int16)v26)) == 0)
      {
        a1 = v6;
        unsigned int v34 = 2;
LABEL_58:
        __int16 v35 = 1;
        goto LABEL_59;
      }
      uint64_t v44 = v43;
      int v45 = *(_DWORD *)v6;
      if (*(_DWORD *)v6 == 3) {
        goto LABEL_85;
      }
      if (v45 == 7)
      {
        if (*(unsigned __int16 *)(v6 + 40) == (unsigned __int16)v26
          && *(unsigned __int16 *)(v6 + 42) == (unsigned __int16)v30)
        {
          a1 = v6;
          unsigned int v34 = 2;
          __int16 v35 = 0;
        }
        else
        {
          a1 = v6;
          unsigned int v34 = 2;
          __int16 v35 = 4;
        }
LABEL_59:
        sub_10014C440((_DWORD *)a1, v34, v35);
        return 0;
      }
      if (v45 != 4)
      {
        uint64_t result = sub_100058654();
        if (!result) {
          return result;
        }
        sub_100056E24((uint64_t)"Received setup request in invalid state\n", v63, v64, v65, v66, v67, v68, v69, v72);
        uint64_t v70 = sub_100050B4C(7u);
        uint64_t result = os_log_type_enabled(v70, OS_LOG_TYPE_ERROR);
        if (!result) {
          return result;
        }
        sub_100744F6C();
        return 0;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Previous setup request not accepted in time, dropping\n", v46, v47, v48, v49, v50, v51, v52, v72);
        int v53 = sub_100050B4C(7u);
        if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
LABEL_85:
      __int16 v54 = *(void **)(v6 + 16);
      if (v54)
      {
        sub_100023010(v54);
        *(void *)(v6 + 16) = 0;
      }
      if (!*a3)
      {
LABEL_119:
        *(_DWORD *)uint64_t v6 = 4;
        *(_WORD *)(v6 + 40) = v26;
        *(_WORD *)(v6 + 42) = v30;
        sub_100026DB4(*(unsigned int *)(v6 + 28));
        sub_10014AEBC(*(unsigned __int16 *)(v6 + 32), &v76, &v75);
        (*((void (**)(void, uint64_t, void, void))v44 + 1))(v75, v76 + 34, (unsigned __int16)v26, (unsigned __int16)v30);
        return 0;
      }
      __int16 v73 = v30;
      unsigned __int16 v55 = 0;
      *(_WORD *)(v6 + 24) = 0;
      unsigned __int16 v56 = *(_WORD *)(a2 + 12);
      char v57 = -1;
      int v58 = 128;
      unsigned int v74 = v56;
      while (v58)
      {
        if (*(unsigned char *)(a2 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1564, "(*bs).__RWFlag == BYTESTREAM_READ");
        }
        if (*(unsigned char *)(a2 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
          int v59 = *(unsigned __int8 *)(a2 + 14);
          *(unsigned char *)(a2 + 15) = 1;
          if (v59 != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1567, "(*bs).__RWFlag == BYTESTREAM_READ");
          }
          goto LABEL_98;
        }
        unsigned int v60 = *(unsigned __int16 *)(a2 + 10);
        if (v60 <= v56)
        {
          *(unsigned char *)(a2 + 15) = 1;
LABEL_98:
          int v58 = v57 & 0x80;
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_99:
          *(unsigned char *)(a2 + 15) = 1;
          *(_WORD *)(v6 + 24) += v55 + 2;
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
          int v62 = 0;
          goto LABEL_100;
        }
        uint64_t v61 = *(void *)a2;
        *(_WORD *)(a2 + 12) = v56 + 1;
        char v57 = *(unsigned char *)(v61 + v56);
        int v58 = v57 & 0x80;
        if (v60 <= (unsigned __int16)(v56 + 1)) {
          goto LABEL_99;
        }
        *(_WORD *)(a2 + 12) = v56 + 2;
        unsigned __int16 v55 = *(unsigned __int8 *)(v61 + v56 + 1);
        *(_WORD *)(v6 + 24) += v55 + 2;
        int v62 = *(unsigned __int16 *)(a2 + 10) - *(unsigned __int16 *)(a2 + 12);
LABEL_100:
        if (v62 < v55) {
          goto LABEL_103;
        }
        unsigned __int16 v56 = *(_WORD *)(a2 + 12) + v55;
        *(_WORD *)(a2 + 12) = v56;
        uint64_t result = 411;
        if (*(unsigned char *)(a2 + 15)) {
          return result;
        }
      }
      if (v74 > *(unsigned __int16 *)(a2 + 10)) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1577, "(size_t)(startPos) <= (size_t)((*bs).__size)");
      }
      *(_WORD *)(a2 + 12) = v74;
      uint64_t v71 = sub_100022FE8(*(unsigned __int16 *)(v6 + 24));
      *(void *)(v6 + 16) = v71;
      if (v71)
      {
        memmove(v71, (const void *)(*(void *)a2 + *(unsigned __int16 *)(a2 + 12)), *(unsigned __int16 *)(v6 + 24));
        *a3 = 0;
        LOWORD(v30) = v73;
        goto LABEL_119;
      }
      return 106;
    case 2:
      if ((*(_DWORD *)a1 & 0xFFFFFFFE) != 6) {
        return 0;
      }
      unsigned int v11 = 2;
      goto LABEL_10;
    case 3:
      if (*(_DWORD *)a1 != 7) {
        return 0;
      }
      if (!*(void *)(a1 + 136))
      {
        unsigned int v34 = 4;
        goto LABEL_58;
      }
      return sub_10014DE64(a1, a2);
    case 4:
    case 6:
      if (*(_DWORD *)a1 != 7) {
        return 0;
      }
      unsigned int v11 = *(unsigned __int8 *)(v7 + v5);
LABEL_10:
      return sub_10014E418(a1, a2, v11, a3);
    case 5:
      if (*(_DWORD *)a1 != 7) {
        return 0;
      }
      if (!*(void *)(a1 + 144))
      {
        unsigned int v34 = 6;
        goto LABEL_58;
      }
      return sub_10014E0FC(a1, a2);
    default:
      if (!a1) {
        sub_10025B8C0();
      }
      uint64_t result = (uint64_t)sub_100022FE8(3uLL);
      if (!result) {
        return result;
      }
      uint64_t v13 = (void *)result;
      *(_WORD *)uint64_t result = 1;
      *(unsigned char *)(result + 2) = v9;
      uint64_t result = sub_10014C2C4((_DWORD *)v6, (char *)result, 3uLL, 8, 0);
      if (!result) {
        return result;
      }
      sub_100023010(v13);
      return 0;
  }
}

uint64_t sub_10014D774(uint64_t a1, uint64_t a2, uint64_t *a3, _WORD *a4)
{
  char v35 = 0;
  *a3 = 0;
  *a4 = 0;
  unsigned __int16 v8 = *(_WORD *)(a2 + 12);
  int v9 = 255;
  uint64_t v10 = "Ignoring invalid setup connection message in extension header\n";
  while (1)
  {
    if (*(unsigned char *)(a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1505, "(*bs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a2 + 15)) {
      break;
    }
    if (*(unsigned __int16 *)(a2 + 10) <= v8)
    {
      *(unsigned char *)(a2 + 15) = 1;
      goto LABEL_32;
    }
    uint64_t v11 = *(void *)a2;
    *(_WORD *)(a2 + 12) = v8 + 1;
    unsigned int v12 = *(unsigned __int16 *)(a2 + 10);
    if (v12 <= (unsigned __int16)(v8 + 1)) {
      goto LABEL_33;
    }
    char v13 = *(unsigned char *)(v11 + v8);
    uint64_t v14 = *(void *)a2;
    uint64_t v15 = v8 + 2;
    *(_WORD *)(a2 + 12) = v15;
    int v16 = *(unsigned __int8 *)(v14 + v8 + 1);
    uint64_t v17 = *a3;
    if ((v13 & 0x7F) != 0)
    {
      if (!v17)
      {
        if (v12 < v8) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1537, "(size_t)(startPos) <= (size_t)((*bs).__size)");
        }
        *(_WORD *)(a2 + 12) = v8;
        *a3 = v14 + v8;
      }
    }
    else if (!v17)
    {
      if (v12 <= (unsigned __int16)v15)
      {
        *(unsigned char *)(a2 + 15) = 1;
      }
      else
      {
        *(_WORD *)(a2 + 12) = v8 + 3;
        int v9 = *(unsigned __int8 *)(v14 + v15);
      }
      if ((v9 - 1) > 1)
      {
        if (v12 < (unsigned __int16)v15) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1528, "(size_t)(pos) <= (size_t)((*bs).__size)");
        }
        *(_WORD *)(a2 + 12) = v15;
        uint64_t result = sub_10014CD4C(a1, a2, &v35);
      }
      else
      {
        uint64_t result = sub_100058654();
        if (result)
        {
          uint64_t v34 = a1;
          __int16 v29 = v10;
          sub_100056E24((uint64_t)v10, v22, v23, v24, v25, v26, v27, v28, v33);
          unsigned int v30 = sub_100050B4C(7u);
          uint64_t result = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);
          if (result)
          {
            uint64_t v31 = sub_100050714();
            *(_DWORD *)std::__fs::filesystem::path buf = 136446466;
            uint64_t v37 = v31;
            __int16 v38 = 1024;
            int v39 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            uint64_t result = 0;
          }
          uint64_t v10 = v29;
          a1 = v34;
        }
      }
      goto LABEL_12;
    }
    uint64_t result = 0;
    *a4 += v16 + 2;
LABEL_12:
    unsigned int v19 = *(unsigned __int16 *)(a2 + 10);
    BOOL v20 = v19 >= v8;
    signed int v21 = v19 - v8;
    if (!v20) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1546, "(size_t)(startPos) <= (size_t)((*bs).__size)");
    }
    *(_WORD *)(a2 + 12) = v8;
    if (*(unsigned char *)(a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_37:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1547, "ByteStream_NumReadBytesAvail(*bs) >= (extLen + 2)");
    }
    if (v21 < v16 + 2) {
      goto LABEL_37;
    }
    v8 += v16 + 2;
    *(_WORD *)(a2 + 12) = v8;
    if (result || (v13 & 0x80000000) == 0) {
      return result;
    }
  }
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
  int v32 = *(unsigned __int8 *)(a2 + 14);
  *(unsigned char *)(a2 + 15) = 1;
  if (v32 != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1508, "(*bs).__RWFlag == BYTESTREAM_READ");
  }
LABEL_32:
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_33:
  *(unsigned char *)(a2 + 15) = 1;
  return 411;
}

void sub_10014DAD0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = 0;
  unsigned __int16 v49 = 0;
  if (HIDWORD(xmmword_100A197C0))
  {
    if (a4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Write failed - CID %d!\n", v7, v8, v9, v10, v11, v12, v13, a1);
        uint64_t v14 = sub_100050B4C(7u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    if (sub_10014AEBC(a1, &v50, &v49))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Get connection failed for cid %d\n", v15, v16, v17, v18, v19, v20, v21, a1);
        uint64_t v22 = sub_100050B4C(7u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      uint64_t v31 = (void *)(v50 + 72);
      while (1)
      {
        uint64_t v31 = (void *)*v31;
        if (v31 == (void *)(v50 + 72)) {
          break;
        }
        if (*(v31 - 3) == a2)
        {
          if (!*((_WORD *)v31 - 3))
          {
            int v32 = *((unsigned char *)v31 - 8) ? 0 : *(void (**)(void, uint64_t))(v50 + 104);
            sub_10025C120(v31);
            sub_10025C53C((void *)*(v31 - 3));
            sub_100023010(v31 - 3);
            if (v32) {
              v32(v49, a4);
            }
          }
          goto LABEL_25;
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Write confirmed for packet not in resend queue\n", v33, v34, v35, v36, v37, v38, v39, v48);
        unsigned int v40 = sub_100050B4C(7u);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
LABEL_25:
      uint64_t v41 = v50;
      if (*(void *)(v50 + 56) != v50 + 56)
      {
        uint64_t v42 = sub_10025C1A4((void **)(v50 + 56));
        uint64_t v43 = (void **)(v42 - 24);
        uint64_t v44 = sub_10014C1A4(v42 - 24);
        if (v44)
        {
          uint64_t v45 = v44;
          if (!*(unsigned char *)(v42 - 8))
          {
            uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 104);
            uint64_t v47 = sub_10014AE70(v41);
            v46(v47, v45);
          }
          sub_10025C53C(*v43);
          sub_100023010(v43);
          sub_10014AB44(v41, v45);
        }
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"L2CAP Write complete, but BNEP terminated\n", v23, v24, v25, v26, v27, v28, v29, v48);
    unsigned int v30 = sub_100050B4C(7u);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10014DD1C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 8);
  uint64_t v4 = sub_10014AE70(v3);
  sub_10025C120((void *)(v2 + 24));
  if (*(unsigned char *)(v2 + 17) == 1)
  {
    sub_10025C53C(*(void **)v2);
    sub_100023010((void *)v2);
    sub_10014AB44(v3, 0x7D5u);
  }
  else
  {
    uint64_t v5 = sub_10014C13C(v3, v2);
    if (v5)
    {
      uint64_t v6 = v5;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Resend failed %!\n", v7, v8, v9, v10, v11, v12, v13, v6);
        uint64_t v14 = sub_100050B4C(7u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      int v15 = *(unsigned __int8 *)(v2 + 16);
      sub_10025C53C(*(void **)v2);
      sub_100023010((void *)v2);
      if (v15) {
        sub_10014C770(v3, v15, v6, &v16);
      }
      else {
        (*(void (**)(uint64_t, uint64_t))(v3 + 104))(v4, v6);
      }
    }
    else
    {
      ++*(unsigned char *)(v2 + 17);
    }
  }
}

uint64_t sub_10014DE64(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  if (a1)
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a2) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  if (*(unsigned char *)(a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1029, "(*bs).__RWFlag == BYTESTREAM_READ");
  }
  unsigned __int16 v20 = 0;
  if (*(unsigned char *)(a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_11:
    unsigned int v9 = 0;
    *(unsigned char *)(a2 + 15) = 1;
    goto LABEL_12;
  }
  uint64_t v4 = *(unsigned __int16 *)(a2 + 12);
  if (*(unsigned __int16 *)(a2 + 10) - (int)v4 <= 1) {
    goto LABEL_11;
  }
  uint64_t v5 = (unsigned __int8 *)(*(void *)a2 + v4);
  int v6 = v5[1];
  int v7 = *v5;
  *(_WORD *)(a2 + 12) = v4 + 2;
  if ((v6 & 3) != 0) {
    return 101;
  }
  unsigned int v9 = v6 | (v7 << 8);
LABEL_12:
  int v10 = v9 & 0xFFFC;
  uint64_t v11 = sub_100022FE8((unsigned __int16)v9 & 0xFFFC);
  if (!v11) {
    return 106;
  }
  uint64_t v12 = v11;
  uint64_t v13 = v9 >> 2;
  if (v10)
  {
    uint64_t v14 = v11 + 1;
    uint64_t v15 = v13;
    while (1)
    {
      if (*(unsigned char *)(a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1040, "(*bs).__RWFlag == BYTESTREAM_READ");
      }
      if (*(unsigned char *)(a2 + 15)) {
        break;
      }
      uint64_t v17 = *(unsigned __int16 *)(a2 + 12);
      if (*(unsigned __int16 *)(a2 + 10) - (int)v17 <= 1)
      {
        *(unsigned char *)(a2 + 15) = 1;
LABEL_23:
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_24:
        *(unsigned char *)(a2 + 15) = 1;
        unsigned int v18 = (unsigned __int16)*v14;
        goto LABEL_25;
      }
      *(v14 - 1) = bswap32(*(unsigned __int16 *)(*(void *)a2 + v17)) >> 16;
      *(_WORD *)(a2 + 12) = v17 + 2;
      if (*(unsigned __int16 *)(a2 + 10) - (unsigned __int16)(v17 + 2) < 2) {
        goto LABEL_24;
      }
      unsigned int v18 = __rev16(*(unsigned __int16 *)(*(void *)a2 + (unsigned __int16)(v17 + 2)));
      *uint64_t v14 = v18;
      *(_WORD *)(a2 + 12) = v17 + 4;
LABEL_25:
      if ((unsigned __int16)*(v14 - 1) > v18) {
        sub_10014C440((_DWORD *)a1, 4u, 2);
      }
      v14 += 2;
      if (!--v15) {
        goto LABEL_28;
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
    int v16 = *(unsigned __int8 *)(a2 + 14);
    *(unsigned char *)(a2 + 15) = 1;
    if (v16 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1041, "(*bs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_23;
  }
LABEL_28:
  if (*(unsigned char *)(a2 + 15))
  {
    uint64_t v8 = 411;
  }
  else
  {
    sub_10014AEBC(*(unsigned __int16 *)(a1 + 32), &v21, &v20);
    (*(void (**)(void, void *, uint64_t))(v21 + 136))(v20, v12, v13);
    uint64_t v8 = 0;
  }
  sub_100023010(v12);
  return v8;
}

uint64_t sub_10014E0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  if (a1)
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a2) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  if (*(unsigned char *)(a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1078, "(*bs).__RWFlag == BYTESTREAM_READ");
  }
  unsigned __int16 v24 = 0;
  if (*(unsigned char *)(a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_11:
    unsigned int v5 = 0;
    *(unsigned char *)(a2 + 15) = 1;
    goto LABEL_12;
  }
  uint64_t v4 = *(unsigned __int16 *)(a2 + 12);
  if (*(unsigned __int16 *)(a2 + 10) - (int)v4 <= 1) {
    goto LABEL_11;
  }
  unsigned int v5 = __rev16(*(unsigned __int16 *)(*(void *)a2 + v4));
  *(_WORD *)(a2 + 12) = v4 + 2;
  HIDWORD(v6) = -1431655765 * v5;
  LODWORD(v6) = -1431655765 * v5;
  if ((v6 >> 2) > 0x15555555) {
    return 101;
  }
LABEL_12:
  uint64_t v8 = (43691 * v5) >> 19;
  unsigned int v9 = (char *)sub_100022FE8(12 * ((43691 * v5) >> 19));
  if (!v9) {
    return 106;
  }
  int v10 = v9;
  if (v5 >= 0xC)
  {
    if (v8 <= 1) {
      uint64_t v11 = 1;
    }
    else {
      uint64_t v11 = v8;
    }
    uint64_t v12 = v9;
    do
    {
      if (*(unsigned char *)(a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1089, "(*bs).__RWFlag == BYTESTREAM_READ");
      }
      if (*(unsigned char *)(a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
      }
      else
      {
        uint64_t v13 = *(unsigned __int16 *)(a2 + 12);
        if (*(unsigned __int16 *)(a2 + 10) - (int)v13 >= 6)
        {
          uint64_t v14 = (int *)(*(void *)a2 + v13);
          int v15 = *v14;
          *((_WORD *)v12 + 2) = *((_WORD *)v14 + 2);
          *(_DWORD *)uint64_t v12 = v15;
          *(_WORD *)(a2 + 12) += 6;
          goto LABEL_24;
        }
      }
      *(unsigned char *)(a2 + 15) = 1;
LABEL_24:
      if (*(unsigned char *)(a2 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1090, "(*bs).__RWFlag == BYTESTREAM_READ");
      }
      if (*(unsigned char *)(a2 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
      }
      else
      {
        uint64_t v16 = *(unsigned __int16 *)(a2 + 12);
        if (*(unsigned __int16 *)(a2 + 10) - (int)v16 >= 6)
        {
          uint64_t v17 = (int *)(*(void *)a2 + v16);
          int v18 = *v17;
          *((_WORD *)v12 + 5) = *((_WORD *)v17 + 2);
          *(_DWORD *)(v12 + 6) = v18;
          *(_WORD *)(a2 + 12) += 6;
          goto LABEL_30;
        }
      }
      *(unsigned char *)(a2 + 15) = 1;
LABEL_30:
      unsigned int v19 = bswap32(*(_DWORD *)v12);
      unsigned int v20 = bswap32(*(_DWORD *)(v12 + 6));
      if (v19 != v20) {
        goto LABEL_34;
      }
      unsigned int v19 = bswap32(*((unsigned __int16 *)v12 + 2)) >> 16;
      unsigned int v21 = bswap32(*((unsigned __int16 *)v12 + 5));
      if (v19 != HIWORD(v21))
      {
        unsigned int v20 = HIWORD(v21);
LABEL_34:
        if (v19 < v20) {
          int v22 = -1;
        }
        else {
          int v22 = 1;
        }
        goto LABEL_37;
      }
      int v22 = 0;
LABEL_37:
      if (v22 >= 1) {
        sub_10014C440((_DWORD *)a1, 6u, 65528);
      }
      v12 += 12;
      --v11;
    }
    while (v11);
  }
  if (*(unsigned char *)(a2 + 15))
  {
    uint64_t v7 = 411;
  }
  else
  {
    sub_10014AEBC(*(unsigned __int16 *)(a1 + 32), &v25, &v24);
    (*(void (**)(void, void *, uint64_t))(v25 + 144))(v24, v10, v8);
    uint64_t v7 = 0;
  }
  sub_100023010(v10);
  return v7;
}

uint64_t sub_10014E418(uint64_t a1, uint64_t a2, unsigned int a3, unsigned char *a4)
{
  if (!a2)
  {
    sub_10025B8C0();
    if (a1) {
      goto LABEL_3;
    }
LABEL_10:
    sub_10025B8C0();
    goto LABEL_3;
  }
  if (!a1) {
    goto LABEL_10;
  }
LABEL_3:
  if (a3 > 6 || ((1 << a3) & 0x54) == 0) {
    sub_10025B8C0();
  }
  if (*(unsigned char *)(a2 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c", 1175, "(*bs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/profiles/bnep/bnep_msg.c");
LABEL_19:
    *(unsigned char *)(a2 + 15) = 1;
    return 411;
  }
  uint64_t v8 = *(unsigned __int16 *)(a2 + 12);
  if (*(unsigned __int16 *)(a2 + 10) - (int)v8 <= 1) {
    goto LABEL_19;
  }
  unsigned int v9 = __rev16(*(unsigned __int16 *)(*(void *)a2 + v8));
  *(_WORD *)(a2 + 12) = v8 + 2;
  switch(a3)
  {
    case 6u:
      if (v9) {
        uint64_t v10 = v9 + 2030;
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v11 = a1;
      int v12 = 4;
      goto LABEL_28;
    case 4u:
      if (v9) {
        uint64_t v10 = v9 + 2020;
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v11 = a1;
      int v12 = 2;
      goto LABEL_28;
    case 2u:
      if (v9) {
        uint64_t v10 = v9 + 2010;
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v11 = a1;
      int v12 = 1;
LABEL_28:
      sub_10014C770(v11, v12, v10, a4);
      break;
  }
  return 0;
}

uint64_t sub_10014E56C(uint64_t a1)
{
  if (a1)
  {
    long long v69 = 0u;
    long long v70 = 0u;
    long long v67 = 0u;
    long long v68 = 0u;
    long long v65 = 0u;
    long long v66 = 0u;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    *(_OWORD *)unsigned __int16 v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    *(_OWORD *)uint64_t v39 = 0u;
    long long v40 = 0u;
    __strlcpy_chk();
    __strlcpy_chk();
    __strlcat_chk();
    __strlcat_chk();
    dword_100A030D8 = open(v55, 131073);
    if (dword_100A030D8 < 0)
    {
      if (sub_100058654())
      {
        uint64_t v11 = __error();
        strerror(*v11);
        sub_100056E24((uint64_t)"open(%s) failed (error = %s)", v12, v13, v14, v15, v16, v17, v18, (uint64_t)v55);
        unsigned int v19 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_10074921C();
        }
      }
    }
    else
    {
      dword_100A030DC = open(v39, 131076);
      if ((dword_100A030DC & 0x80000000) == 0)
      {
        dword_100A030E0 = 0;
        dword_100A030E4 = 0;
        sub_100117BD4(&stru_100A030E8);
        if (sub_100117A38((pthread_t *)&qword_100A03118, (void *(__cdecl *)(void *))sub_10014E97C, 0))
        {
          sub_100117AD8((_opaque_pthread_t *)qword_100A03118, 63);
          sub_10016A98C();
          return 0;
        }
        else
        {
          uint64_t v37 = sub_10010B394(104);
          return sub_10014E858(v37);
        }
      }
      if (sub_100058654())
      {
        unsigned int v20 = __error();
        strerror(*v20);
        sub_100056E24((uint64_t)"open(%s) failed (error = %s)", v21, v22, v23, v24, v25, v26, v27, (uint64_t)v39);
        uint64_t v28 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_10074921C();
        }
      }
      close(dword_100A030D8);
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"failed to open %s", v29, v30, v31, v32, v33, v34, v35, a1);
      uint64_t v36 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1201;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Need to know what VirtualCTRL to open, options cannot be NULL", v3, v4, v5, v6, v7, v8, v9, v38);
      uint64_t v10 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 114;
  }
}

uint64_t sub_10014E858()
{
  if (qword_100A030D8)
  {
    dword_100A030E0 = 1;
    close(SHIDWORD(qword_100A030D8));
    close(qword_100A030D8);
    while (!dword_100A030E4)
      sub_1001035E0(&stru_100A030E8);
    sub_100117BFC(&stru_100A030E8);
    qword_100A030D8 = 0;
  }
  return 0;
}

uint64_t sub_10014E8E8(char *__buf, int a2)
{
  if (!a2) {
    return 625;
  }
  unsigned __int16 v2 = a2;
  while (1)
  {
    unsigned int v4 = write(qword_100A030D8, __buf, v2);
    if ((v4 & 0x80000000) != 0) {
      break;
    }
    __buf += v4;
    v2 -= v4;
    if (!v2) {
      return 625;
    }
  }
  uint64_t v6 = __error();
  uint64_t v7 = strerror(*v6);
  sub_10025B778("VirtualCTRL write failed: %s", v7);
  return 1205;
}

uint64_t sub_10014E97C()
{
  sub_100117BB4("RxLoopVirtual");
  memset(&v8, 0, sizeof(v8));
  int v0 = dword_100A030DC;
  if (__darwin_check_fd_set_overflow(dword_100A030DC, &v8, 0)) {
    *(__int32_t *)((char *)v8.fds_bits + (((unint64_t)v0 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v0;
  }
  int v1 = 4096;
  while (1)
  {
    fd_set v7 = v8;
    int v2 = select(dword_100A030DC + 1, &v7, 0, 0, 0);
    if (!v2) {
      break;
    }
    if (v2 >= 1)
    {
      int v3 = v1 >= 4096 ? 4096 : v1;
      if ((int)read(dword_100A030DC, &unk_100A03120, v3) >= 1)
      {
        sub_100023344();
        int v1 = sub_10016A99C();
        sub_1000232E0();
        if (!dword_100A030E0) {
          continue;
        }
      }
    }
    goto LABEL_13;
  }
  sub_10025B8C0();
LABEL_13:
  if (dword_100A030E0)
  {
    sub_100023344();
    dword_100A030E4 = 1;
    j__pthread_cond_signal(&stru_100A030E8);
    sub_1000232E0();
  }
  else
  {
    unsigned int v4 = __error();
    uint64_t v5 = strerror(*v4);
    sub_10025B778("VirtualCTRL read failed: %s\n", v5);
  }
  return 0;
}

uint64_t sub_10014EB20(__int16 *a1, unsigned int *a2)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  if (*a1 == -1)
  {
    sub_10025B8C0();
    if (*a1 == -1) {
      return 101;
    }
  }
  if ((unsigned __int16)a1[4] - 1 >= 2)
  {
    sub_10025B8C0();
    if ((unsigned __int16)a1[4] - 1 > 1) {
      return 101;
    }
  }
  long long v86 = 0u;
  long long v87 = 0u;
  unsigned int v85 = 0;
  unsigned int v4 = (uint64_t *)qword_100A04120;
  int v5 = *((void *)a1 + 3) != 0;
  if (*((void *)a1 + 4)) {
    ++v5;
  }
  if (*((void *)a1 + 5)) {
    int v6 = v5 + 1;
  }
  else {
    int v6 = v5;
  }
  uint64_t v7 = (v6 + 10);
  fd_set v8 = sub_100022FE8(176 * v7);
  if (!v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device Identification Record: out of memory", v17, v18, v19, v20, v21, v22, v23, v82);
      uint64_t v24 = sub_100050B4C(0x3Du);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 106;
  }
  uint64_t v9 = v8;
  uint64_t v10 = (char *)sub_100022FE8(24 * v7);
  if (!v10)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device Identification Record: out of memory", v25, v26, v27, v28, v29, v30, v31, v82);
      uint64_t v32 = sub_100050B4C(0x3Du);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100023010(v9);
    return 106;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_100022FE8(8uLL);
  uint64_t v13 = v12;
  if (!v12)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device Supported Extended Features: out of memory", v33, v34, v35, v36, v37, v38, v39, v82);
      long long v40 = sub_100050B4C(0x3Du);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_47;
  }
  *uint64_t v12 = *((void *)a1 + 2);
  unsigned char *v9 = 1;
  *((_WORD *)v9 + 1) = 2;
  *((_DWORD *)v9 + 2) = (unsigned __int16)*a1;
  v9[16] = 1;
  *((_WORD *)v9 + 9) = 2;
  *((_DWORD *)v9 + 6) = (unsigned __int16)a1[1];
  v9[32] = 1;
  *((_WORD *)v9 + 17) = 2;
  *((_DWORD *)v9 + 10) = (unsigned __int16)a1[2];
  v9[48] = 5;
  *((_WORD *)v9 + 25) = 1;
  v9[56] = *((unsigned char *)a1 + 6);
  v9[64] = 1;
  *((_WORD *)v9 + 33) = 2;
  *((_DWORD *)v9 + 18) = (unsigned __int16)a1[4];
  v9[128] = 1;
  *((_WORD *)v9 + 65) = 4;
  *((_DWORD *)v9 + 34) = *((_DWORD *)a1 + 3);
  v9[144] = 1;
  *((_WORD *)v9 + 73) = 2;
  *((_DWORD *)v9 + 38) = (unsigned __int16)a1[5];
  v9[160] = 1;
  *((_WORD *)v9 + 81) = 8;
  *((void *)v9 + 21) = v12;
  *((void *)v11 + 2) = &unk_1007B9580;
  *(_OWORD *)uint64_t v11 = xmmword_10099C600;
  *((void *)v11 + 5) = 258;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)&qword_10099C618;
  *((_WORD *)v11 + 24) = 513;
  *(_OWORD *)(v11 + 56) = *(_OWORD *)v9;
  *((_WORD *)v11 + 36) = 514;
  *((_OWORD *)v11 + 5) = *((_OWORD *)v9 + 1);
  *((_WORD *)v11 + 48) = 515;
  *(_OWORD *)(v11 + 104) = *((_OWORD *)v9 + 2);
  *((_WORD *)v11 + 60) = 516;
  *((_OWORD *)v11 + 8) = *((_OWORD *)v9 + 3);
  *((_WORD *)v11 + 72) = 517;
  *(_OWORD *)(v11 + 152) = *((_OWORD *)v9 + 4);
  *((_WORD *)v11 + 84) = -24576;
  *((_OWORD *)v11 + 11) = *((_OWORD *)v9 + 8);
  *((_WORD *)v11 + 96) = -20481;
  *(_OWORD *)(v11 + 200) = *((_OWORD *)v9 + 9);
  *((_WORD *)v11 + 108) = -24575;
  *((_OWORD *)v11 + 14) = *((_OWORD *)v9 + 10);
  uint64_t v14 = (const char *)*((void *)a1 + 3);
  if (v14)
  {
    v9[80] = 8;
    *((_WORD *)v9 + 41) = strlen(v14);
    *((void *)v9 + 11) = v14;
    unsigned int v15 = 11;
    *((_WORD *)v11 + 120) = 11;
    *(_OWORD *)(v11 + 248) = *((_OWORD *)v9 + 5);
  }
  else
  {
    unsigned int v15 = 10;
  }
  long long v41 = (const char *)*((void *)a1 + 4);
  if (v41)
  {
    v9[96] = 4;
    *((_WORD *)v9 + 49) = strlen(v41);
    *((void *)v9 + 13) = v41;
    long long v42 = &v11[24 * v15];
    *(_WORD *)long long v42 = 257;
    *(_OWORD *)(v42 + 8) = *((_OWORD *)v9 + 6);
    ++v15;
  }
  long long v43 = (const char *)*((void *)a1 + 5);
  if (v43)
  {
    v9[112] = 8;
    *((_WORD *)v9 + 57) = strlen(v43);
    *((void *)v9 + 15) = v43;
    long long v44 = &v11[24 * v15];
    *(_WORD *)long long v44 = 10;
    *(_OWORD *)(v44 + 8) = *((_OWORD *)v9 + 7);
  }
  *(void *)&long long v86 = v11;
  WORD4(v86) = 10;
  *(void *)&long long v87 = v11 + 240;
  WORD4(v87) = v6;
  sub_10024E258((uint64_t)&v86, (int *)&v85);
  long long v83 = 0u;
  long long v84 = 0u;
  uint64_t v45 = (v6 + 9);
  long long v46 = sub_100022FE8(176 * v45);
  if (!v46)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device Identification Record: out of memory", v54, v55, v56, v57, v58, v59, v60, 512);
      long long v61 = sub_100050B4C(0x3Du);
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_47:
    long long v49 = 0;
    long long v47 = 0;
LABEL_48:
    uint64_t v16 = 106;
    goto LABEL_49;
  }
  long long v47 = v46;
  long long v48 = (char *)sub_100022FE8(24 * v45);
  if (!v48)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device Identification Record: out of memory", v63, v64, v65, v66, v67, v68, v69, 512);
      long long v70 = sub_100050B4C(0x3Du);
      if (os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    long long v49 = 0;
    goto LABEL_48;
  }
  long long v49 = v48;
  *(unsigned char *)long long v47 = 1;
  v47[1] = 2;
  *((_DWORD *)v47 + 2) = (unsigned __int16)*a1;
  *((unsigned char *)v47 + 16) = 1;
  v47[9] = 2;
  *((_DWORD *)v47 + 6) = (unsigned __int16)a1[1];
  *((unsigned char *)v47 + 32) = 1;
  v47[17] = 2;
  *((_DWORD *)v47 + 10) = (unsigned __int16)a1[2];
  *((unsigned char *)v47 + 48) = 5;
  v47[25] = 1;
  *((unsigned char *)v47 + 56) = *((unsigned char *)a1 + 6);
  *((unsigned char *)v47 + 64) = 1;
  v47[33] = 2;
  *((_DWORD *)v47 + 18) = (unsigned __int16)a1[4];
  *((unsigned char *)v47 + 128) = 1;
  v47[65] = 4;
  *((_DWORD *)v47 + 34) = *((_DWORD *)a1 + 3);
  *((unsigned char *)v47 + 144) = 1;
  v47[73] = 2;
  *((_DWORD *)v47 + 38) = (unsigned __int16)a1[5];
  *(_OWORD *)long long v48 = xmmword_10099C600;
  *((void *)v48 + 2) = &unk_1007B9580;
  *((void *)v48 + 5) = 258;
  *(_OWORD *)(v48 + 24) = *(_OWORD *)&qword_10099C618;
  *((_WORD *)v48 + 24) = 513;
  *(_OWORD *)(v48 + 56) = *(_OWORD *)v47;
  *((_WORD *)v48 + 36) = 514;
  *((_OWORD *)v48 + 5) = *((_OWORD *)v47 + 1);
  *((_WORD *)v48 + 48) = 515;
  *(_OWORD *)(v48 + 104) = *((_OWORD *)v47 + 2);
  *((_WORD *)v48 + 60) = 516;
  *((_OWORD *)v48 + 8) = *((_OWORD *)v47 + 3);
  *((_WORD *)v48 + 72) = 517;
  *(_OWORD *)(v48 + 152) = *((_OWORD *)v47 + 4);
  *((_WORD *)v48 + 84) = -24576;
  *((_OWORD *)v48 + 11) = *((_OWORD *)v47 + 8);
  *((_WORD *)v48 + 96) = -20481;
  *(_OWORD *)(v48 + 200) = *((_OWORD *)v47 + 9);
  long long v50 = (const char *)*((void *)a1 + 3);
  if (v50)
  {
    *((unsigned char *)v47 + 80) = 8;
    v47[41] = strlen(v50);
    *((void *)v47 + 11) = v50;
    v49[108] = 11;
    *((_OWORD *)v49 + 14) = *((_OWORD *)v47 + 5);
  }
  long long v51 = (const char *)*((void *)a1 + 4);
  if (v51)
  {
    *((unsigned char *)v47 + 96) = 4;
    v47[49] = strlen(v51);
    *((void *)v47 + 13) = v51;
    v49[108] = 257;
    *((_OWORD *)v49 + 14) = *((_OWORD *)v47 + 6);
  }
  long long v52 = (const char *)*((void *)a1 + 5);
  if (v52)
  {
    *((unsigned char *)v47 + 112) = 8;
    v47[57] = strlen(v52);
    *((void *)v47 + 15) = v52;
    v49[108] = 10;
    *((_OWORD *)v49 + 14) = *((_OWORD *)v47 + 7);
  }
  *(void *)&long long v83 = v49;
  WORD4(v83) = 9;
  *(void *)&long long v84 = v49 + 108;
  WORD4(v84) = v6;
  uint64_t v53 = sub_10024E564(v85, (uint64_t)&v83);
  if (v53)
  {
    uint64_t v16 = v53;
LABEL_49:
    sub_100023010(v9);
    sub_100023010(v11);
    if (v13) {
      sub_100023010(v13);
    }
    if (v49) {
      sub_100023010(v49);
    }
    if (v47) {
      sub_100023010(v47);
    }
    return v16;
  }
  uint64_t v71 = sub_100022FE8(0x30uLL);
  if (!v71)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device Identification Record: out of memory", v74, v75, v76, v77, v78, v79, v80, 512);
      uint64_t v81 = sub_100050B4C(0x3Du);
      if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_48;
  }
  *(void *)uint64_t v71 = 0;
  unsigned int v72 = v85;
  v71[2] = v85;
  *((void *)v71 + 2) = v9;
  *((void *)v71 + 3) = v11;
  *((void *)v71 + 4) = v47;
  *((void *)v71 + 5) = v49;
  if (v4)
  {
    do
    {
      __int16 v73 = v4;
      unsigned int v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    __int16 v73 = &qword_100A04120;
  }
  *__int16 v73 = (uint64_t)v71;
  uint64_t v16 = 0;
  if (a2) {
    *a2 = v72;
  }
  return v16;
}

uint64_t sub_10014F270(int a1)
{
  uint64_t v2 = sub_10024E448(a1);
  if (!v2)
  {
    int v3 = (uint64_t *)qword_100A04120;
    if (qword_100A04120)
    {
      if (*(_DWORD *)(qword_100A04120 + 8) == a1)
      {
        sub_100023010(*(void **)(qword_100A04120 + 16));
        sub_100023010((void *)v3[3]);
        sub_100023010((void *)v3[4]);
        unsigned int v4 = (void **)(v3 + 5);
        int v5 = v3;
        int v3 = &qword_100A04120;
LABEL_9:
        sub_100023010(*v4);
        *int v3 = *v5;
        sub_100023010(v5);
      }
      else
      {
        int v5 = (uint64_t *)qword_100A04120;
        while (1)
        {
          int v5 = (uint64_t *)*v5;
          if (!v5) {
            break;
          }
          if (*((_DWORD *)v5 + 2) == a1)
          {
            sub_100023010((void *)v5[2]);
            unsigned int v4 = (void **)(v5 + 3);
            goto LABEL_9;
          }
        }
      }
    }
  }
  return v2;
}

uint64_t sub_10014F328(uint64_t a1, _DWORD *a2, unsigned int a3, int a4, uint64_t a5, char a6)
{
  if (!a5) {
    return 101;
  }
  __int16 v9 = a3;
  uint64_t result = sub_100155960(a1, a2, a3, (uint64_t)sub_10014F45C, 0x3FAu, 0);
  if (!result)
  {
    sub_100155920(1);
    qword_100A04128 = (uint64_t)sub_10010CE48(0x5F8uLL);
    if (qword_100A04128)
    {
      if (*(_WORD *)(sub_10025B218(0x10u) + 4)) {
        __int16 v11 = *(_WORD *)(sub_10025B218(0x10u) + 4);
      }
      else {
        __int16 v11 = 100;
      }
      *(_WORD *)(qword_100A04128 + 1506) = v11;
      if (*(unsigned char *)(sub_10025B218(0x10u) + 6)) {
        char v12 = *(unsigned char *)(sub_10025B218(0x10u) + 6);
      }
      else {
        char v12 = 32;
      }
      uint64_t v13 = 0;
      uint64_t v14 = qword_100A04128;
      *(unsigned char *)(qword_100A04128 + 1504) = v12;
      *(void *)(v14 + 1480) = a5;
      *(unsigned char *)(v14 + 1511) = 0;
      *(_OWORD *)(v14 + 1488) = 0u;
      *(unsigned char *)(v14 + 1512) = a6;
      *(_WORD *)(v14 + 1508) = v9;
      *(_WORD *)(v14 + 1513) = 0;
      *(unsigned char *)(v14 + 1515) = 0;
      *(_DWORD *)(v14 + 1520) = a4;
      *(_DWORD *)(v14 + 1516) = 0;
      do
      {
        *(_WORD *)(v14 + v13) = -1;
        v13 += 184;
      }
      while (v13 != 1472);
      return 0;
    }
    else
    {
      sub_100155F38();
      return 106;
    }
  }
  return result;
}

void sub_10014F45C(uint64_t a1)
{
  uint64_t v2 = 0;
  unsigned int v4 = (unsigned __int16 *)(a1 + 4);
  int v3 = *(unsigned __int16 *)(a1 + 4);
  uint64_t v5 = qword_100A04128;
  int v6 = (unsigned __int16 *)qword_100A04128;
  do
  {
    int v7 = *v6;
    v6 += 92;
    if (v7 == v3) {
      break;
    }
    ++v2;
  }
  while (v2 != 8);
  switch(*(_DWORD *)a1)
  {
    case 1:
      if (*(_DWORD *)(a1 + 16)) {
        goto LABEL_17;
      }
      v37[0] = 0;
      if (v2 == 8)
      {
        int v8 = sub_100151DA4(v3, *(void *)(a1 + 8));
        if (v8 == 8)
        {
          sub_10025B8C0();
          return;
        }
        LOBYTE(v2) = v8;
        uint64_t v5 = qword_100A04128;
      }
      v37[1] = v4;
      LOWORD(v37[0]) = 2;
      uint64_t v26 = sub_1000268E4((uint64_t)sub_1001527C4, v37, 600, (int *)(v5 + 184 * v2 + 8));
      if (v26)
      {
        uint64_t v27 = v26;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Register SLC timeout handler failed %!\n", v28, v29, v30, v31, v32, v33, v34, v27);
          uint64_t v35 = sub_100050B4C(0x10u);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      break;
    case 2:
      if (*(_DWORD *)(qword_100A04128 + 184 * v2 + 4) == 1814
        || *(_DWORD *)(qword_100A04128 + 184 * v2 + 8))
      {
        *(_DWORD *)a1 = 1;
        *(void *)(a1 + 8) = v5 + 184 * v2 + 80;
        *(_DWORD *)(a1 + 16) = 1814;
      }
      (*(void (**)(uint64_t))(v5 + 1480))(a1);
      int v9 = *(unsigned __int16 *)(a1 + 4);
      sub_100151FC4(v9);
      break;
    case 3:
      if ((*(_WORD *)(qword_100A04128 + 1508) & 0x200) == 0
        || (*(_WORD *)(qword_100A04128 + 184 * v2 + 86) & 0x80) == 0)
      {
        goto LABEL_17;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"1.6 devices should not send SCO connection but +BCC.", v18, v19, v20, v21, v22, v23, v24, v36);
        uint64_t v25 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_100156758(*v4, 0);
      break;
    case 5:
      (*(void (**)(uint64_t))(qword_100A04128 + 1480))(a1);
      __int16 v11 = *(void (**)(uint64_t, uint64_t))(qword_100A04128 + 1496);
      if (v11)
      {
        *(void *)(qword_100A04128 + 1496) = 0;
        uint64_t v12 = *(unsigned __int16 *)(a1 + 4);
        uint64_t v13 = *(unsigned int *)(a1 + 8);
        v11(v12, v13);
      }
      break;
    case 7:
      uint64_t v14 = sub_100131514(qword_100A04128 + 184 * v2 + 96, *(void *)(a1 + 8), *(unsigned __int16 *)(a1 + 16));
      if (v14)
      {
        uint64_t v15 = sub_10014FCB0(*v4, v14);
        if (v15)
        {
          uint64_t v16 = v15;
          unsigned int v17 = *v4;
          sub_100152814(v17, 2u, v16);
        }
      }
      break;
    default:
LABEL_17:
      uint64_t v10 = *(void (**)(uint64_t))(qword_100A04128 + 1480);
      v10(a1);
      break;
  }
}

uint64_t sub_10014F784()
{
  if (sub_1001558F0() && *(void *)(qword_100A04128 + 1488)) {
    *(void *)(qword_100A04128 + 1488) = 0;
  }
  uint64_t v0 = sub_100155F38();
  if (!v0 && qword_100A04128)
  {
    sub_100023010((void *)qword_100A04128);
    qword_100A04128 = 0;
  }
  return v0;
}

uint64_t sub_10014F7DC(__int16 a1)
{
  if (!qword_100A04128) {
    return 408;
  }
  uint64_t result = 0;
  *(_WORD *)(qword_100A04128 + 1508) = a1;
  return result;
}

uint64_t sub_10014F800(char a1)
{
  if (!qword_100A04128) {
    return 408;
  }
  uint64_t result = 0;
  *(unsigned char *)(qword_100A04128 + 1510) = a1 | 6;
  return result;
}

uint64_t sub_10014F828(uint64_t a1, char a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v4 = qword_100A04128;
  if (*(void *)(qword_100A04128 + 1488)) {
    return 119;
  }
  uint64_t result = 0;
  *(void *)(qword_100A04128 + 1488) = a1;
  *(unsigned char *)(v4 + 1511) = a2;
  return result;
}

uint64_t sub_10014F880(unsigned int a1, const void *a2, size_t a3)
{
  BOOL v6 = sub_1001558F0();
  uint64_t result = 408;
  if (v6 && qword_100A04128)
  {
    int v8 = (char *)sub_100022FE8(a3 + 1);
    if (v8)
    {
      int v9 = v8;
      memmove(v8, a2, a3);
      v9[a3] = 0;
      return sub_10014F934(a1, 25, v9, a3, 1);
    }
    else
    {
      return 106;
    }
  }
  return result;
}

uint64_t sub_10014F934(unsigned int a1, int a2, char *a3, size_t a4, int a5)
{
  __int16 v6 = a4;
  unsigned __int8 v10 = 0;
  uint64_t v11 = -1472;
  while (*(unsigned __int16 *)(qword_100A04128 + v11 + 1472) != a1)
  {
    ++v10;
    v11 += 184;
    if (!v11) {
      return 1802;
    }
  }
  if (v10 == 8) {
    return 1802;
  }
  if (*(_DWORD *)(qword_100A04128 + v11 + 1488))
  {
    if (*(unsigned __int8 *)(qword_100A04128 + v11 + 1528) >= *(unsigned __int8 *)(qword_100A04128 + 1504))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SendResponse failed: pending responses queue is full (%d)!\n", v17, v18, v19, v20, v21, v22, v23, *(unsigned __int8 *)(qword_100A04128 + v11 + 1528));
        uint64_t v24 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      uint64_t v12 = 104;
    }
    else
    {
      uint64_t v14 = sub_100022FE8(0x28uLL);
      if (v14)
      {
        *(_DWORD *)uint64_t v14 = a2;
        v14[1] = a3;
        *((_WORD *)v14 + 8) = v6;
        *((unsigned char *)v14 + 18) = a5;
        sub_10025C10C(v14 + 3, qword_100A04128 + v11 + 1536);
        uint64_t v12 = 0;
        ++*(unsigned char *)(qword_100A04128 + v11 + 1528);
        return v12;
      }
      uint64_t v12 = 106;
    }
  }
  else
  {
    if (a5) {
      uint64_t v15 = sub_100152A10;
    }
    else {
      uint64_t v15 = sub_100152A1C;
    }
    uint64_t v12 = sub_100156B98(a1, (uint64_t)v15, a3, a4);
    uint64_t v16 = qword_100A04128 + v11;
    if (!v12)
    {
      *(_DWORD *)(v16 + 1488) = a2;
      *(void *)(v16 + 1496) = a3;
      *(_WORD *)(v16 + 1504) = v6;
      *(unsigned char *)(v16 + 1506) = a5;
      return v12;
    }
    *(_DWORD *)(v16 + 1488) = 0;
  }
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"SendResponse failed %!, type %d", v25, v26, v27, v28, v29, v30, v31, v12),
        uint64_t v32 = sub_100050B4C(0x10u),
        !os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)))
  {
    if (!a5) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  sub_100745764();
  if (a5) {
LABEL_26:
  }
    sub_100023010(a3);
LABEL_27:
  if (v12 == 104)
  {
    if (sub_1001566A8(a1, 104))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_HandsfreeAG_Disconnect failed", v33, v34, v35, v36, v37, v38, v39, v41);
        long long v40 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    sub_100152A28(v10);
    return 104;
  }
  return v12;
}

uint64_t sub_10014FBB0(int a1)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v2 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472) {
      return 0;
    }
  }
  uint64_t result = 0;
  if (dword_100A197F0) {
    return *(unsigned __int16 *)(qword_100A04128 + v2 + 86);
  }
  return result;
}

uint64_t sub_10014FC30(int a1)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v2 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472) {
      return 0;
    }
  }
  uint64_t result = 0;
  if (dword_100A197F0) {
    return *(void *)(qword_100A04128 + v2 + 88);
  }
  return result;
}

uint64_t sub_10014FCB0(unsigned int a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 - 2707) <= 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Extended error specified without extended error code %d\n", v4, v5, v6, v7, v8, v9, v10, v2);
      uint64_t v11 = sub_100050B4C(0x10u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    LODWORD(v2) = 2701;
  }
  return sub_10014FD40(a1, v2, 0);
}

uint64_t sub_10014FD40(unsigned int a1, int a2, uint64_t a3)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if ((a2 - 2707) > 1)
  {
    if ((a2 - 2707) < 0xFFFFFFFA) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = (a2 - 2700);
    }
    if (!a2) {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
    v22[0] = 0;
    v22[1] = 0;
    uint64_t v7 = 1;
    while (*(unsigned __int16 *)(qword_100A04128 + v6) != a1)
    {
      v6 += 184;
      if (v6 == 1472) {
        goto LABEL_14;
      }
    }
    if (*(unsigned char *)(qword_100A04128 + v6 + 136))
    {
      uint64_t v8 = sub_10026314C((uint64_t)v22, 0x1BuLL);
      if (!v8)
      {
        if (a2 == 2707) {
          uint64_t v18 = "\r\n+CME ERROR: %d\r\n";
        }
        else {
          uint64_t v18 = "\r\n+CMS ERROR: %d\r\n";
        }
        uint64_t v19 = sub_1002639B0((uint64_t)v22, (uint64_t)v18, v12, v13, v14, v15, v16, v17, a3);
        if (v19)
        {
          uint64_t v8 = v19;
          sub_10026319C((uint64_t)v22);
        }
        else
        {
          uint64_t v20 = (char *)sub_1002639DC((uint64_t)v22);
          unsigned __int16 v21 = strlen(v20);
          return sub_10014F934(a1, 2, v20, v21, 1);
        }
      }
      return v8;
    }
    uint64_t v7 = 1;
  }
LABEL_14:
  uint64_t v10 = off_10099C630[v7];
  size_t v11 = (unsigned __int16)strlen(v10);

  return sub_10014F934(a1, 2, v10, v11, 0);
}

uint64_t sub_10014FEB4(unsigned int a1, uint64_t a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2 > 0xF) {
    return 101;
  }
  if ((sub_10014FBB0(a1) & 0x10) == 0) {
    return 1808;
  }
  v15[0] = 0;
  v15[1] = 0;
  uint64_t v4 = sub_10026314C((uint64_t)v15, 0xCuLL);
  if (!v4)
  {
    uint64_t v12 = sub_1002639B0((uint64_t)v15, (uint64_t)"\r\n+VGM=%d\r\n", v6, v7, v8, v9, v10, v11, a2);
    if (v12)
    {
      uint64_t v4 = v12;
      sub_10026319C((uint64_t)v15);
    }
    else
    {
      uint64_t v13 = (char *)sub_1002639DC((uint64_t)v15);
      unsigned __int16 v14 = strlen(v13);
      return sub_10014F934(a1, 7, v13, v14, 1);
    }
  }
  return v4;
}

uint64_t sub_10014FF8C(unsigned int a1, uint64_t a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2 > 0xF) {
    return 101;
  }
  if ((sub_10014FBB0(a1) & 0x10) == 0) {
    return 1808;
  }
  v15[0] = 0;
  v15[1] = 0;
  uint64_t v4 = sub_10026314C((uint64_t)v15, 0xCuLL);
  if (!v4)
  {
    uint64_t v12 = sub_1002639B0((uint64_t)v15, (uint64_t)"\r\n+VGS=%d\r\n", v6, v7, v8, v9, v10, v11, a2);
    if (v12)
    {
      uint64_t v4 = v12;
      sub_10026319C((uint64_t)v15);
    }
    else
    {
      uint64_t v13 = (char *)sub_1002639DC((uint64_t)v15);
      unsigned __int16 v14 = strlen(v13);
      return sub_10014F934(a1, 8, v13, v14, 1);
    }
  }
  return v4;
}

uint64_t sub_100150064(unsigned int a1, int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v4 = 0;
  uint64_t v5 = qword_100A04128;
  *(unsigned char *)(qword_100A04128 + 1513) = a2;
  while (*(unsigned __int16 *)(v5 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  uint64_t v7 = 0;
  while (*(unsigned __int16 *)(v5 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472) {
      goto LABEL_13;
    }
  }
  if (*(unsigned char *)(v5 + v7 + 140) == 2) {
    return 117;
  }
LABEL_13:
  uint64_t v8 = 0;
  while (*(unsigned __int16 *)(v5 + v8) != a1)
  {
    v8 += 184;
    if (v8 == 1472) {
      return 0;
    }
  }
  if (*(unsigned char *)(v5 + v8 + 140) != 1 || !*(unsigned char *)(v5 + v4 + 176)) {
    return 0;
  }
  if (a2) {
    uint64_t v9 = "\r\n+CIEV: 1,1\r\n";
  }
  else {
    uint64_t v9 = "\r\n+CIEV: 1,0\r\n";
  }
  LODWORD(result) = sub_10014F934(a1, 9, v9, 0xEuLL, 0);
  if (result == 408) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_100150184(unsigned int a1, int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v4 = 0;
  uint64_t v5 = qword_100A04128;
  *(unsigned char *)(qword_100A04128 + 1514) = a2;
  while (*(unsigned __int16 *)(v5 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  uint64_t v7 = 0;
  while (*(unsigned __int16 *)(v5 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472) {
      goto LABEL_13;
    }
  }
  if (*(unsigned char *)(v5 + v7 + 140) == 2) {
    return 117;
  }
LABEL_13:
  uint64_t v8 = 0;
  while (*(unsigned __int16 *)(v5 + v8) != a1)
  {
    v8 += 184;
    if (v8 == 1472) {
      return 0;
    }
  }
  if (*(unsigned char *)(v5 + v8 + 140) != 1) {
    return 0;
  }
  uint64_t v9 = v5 + v4;
  if (*(unsigned __int8 *)(v9 + 160) == a2) {
    return 0;
  }
  *(unsigned char *)(v9 + 160) = a2;
  if (a2) {
    uint64_t v10 = "\r\n+CIEV: 2,1\r\n";
  }
  else {
    uint64_t v10 = "\r\n+CIEV: 2,0\r\n";
  }
  LODWORD(result) = sub_10014F934(a1, 10, v10, 0xEuLL, 0);
  if (result == 408) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1001502AC(unsigned int a1, unsigned int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2 > 4) {
    return 101;
  }
  uint64_t v5 = 0;
  v21[0] = 0;
  v21[1] = 0;
  uint64_t v6 = qword_100A04128;
  *(unsigned char *)(qword_100A04128 + 1515) = a2;
  while (*(unsigned __int16 *)(v6 + v5) != a1)
  {
    v5 += 184;
    if (v5 == 1472) {
      return 1802;
    }
  }
  uint64_t v8 = 0;
  while (*(unsigned __int16 *)(v6 + v8) != a1)
  {
    v8 += 184;
    if (v8 == 1472) {
      goto LABEL_16;
    }
  }
  if (*(unsigned char *)(v6 + v8 + 140) == 2) {
    return 117;
  }
LABEL_16:
  uint64_t v9 = 0;
  while (*(unsigned __int16 *)(v6 + v9) != a1)
  {
    uint64_t v4 = 0;
    v9 += 184;
    if (v9 == 1472) {
      return v4;
    }
  }
  if (*(unsigned char *)(v6 + v9 + 140) != 1) {
    return 0;
  }
  uint64_t v10 = v6 + v5;
  if (*(unsigned __int8 *)(v10 + 161) == a2) {
    return 0;
  }
  *(unsigned char *)(v10 + 161) = a2;
  uint64_t v4 = sub_10026314C((uint64_t)v21, 0xFuLL);
  if (!v4)
  {
    uint64_t v17 = sub_1002639B0((uint64_t)v21, (uint64_t)"\r\n+CIEV: 3,%c\r\n", v11, v12, v13, v14, v15, v16, a2 + 48);
    if (v17)
    {
      uint64_t v4 = v17;
      sub_10026319C((uint64_t)v21);
    }
    else
    {
      uint64_t v18 = (char *)sub_1002639DC((uint64_t)v21);
      unsigned __int16 v19 = strlen(v18);
      unsigned int v20 = sub_10014F934(a1, 11, v18, v19, 1);
      if (v20 == 408) {
        return 0;
      }
      else {
        return v20;
      }
    }
  }
  return v4;
}

uint64_t sub_10015043C(unsigned int a1, unsigned int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v4 = qword_100A04128;
  if ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0) {
    return 1808;
  }
  if (a2 > 2) {
    return 101;
  }
  uint64_t v6 = 0;
  v20[0] = 0;
  v20[1] = 0;
  *(unsigned char *)(qword_100A04128 + 1516) = a2;
  while (*(unsigned __int16 *)(v4 + v6) != a1)
  {
    v6 += 184;
    if (v6 == 1472) {
      return 1802;
    }
  }
  uint64_t v8 = 0;
  while (*(unsigned __int16 *)(v4 + v8) != a1)
  {
    v8 += 184;
    if (v8 == 1472) {
      goto LABEL_18;
    }
  }
  if (*(unsigned char *)(v4 + v8 + 140) == 2) {
    return 117;
  }
LABEL_18:
  if ((sub_10014FBB0(a1) & 2) == 0) {
    return 1808;
  }
  uint64_t v9 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v9) != a1)
  {
    uint64_t v5 = 0;
    v9 += 184;
    if (v9 == 1472) {
      return v5;
    }
  }
  if (*(unsigned char *)(qword_100A04128 + v9 + 140) != 1 || !(*(unsigned __int8 *)(qword_100A04128 + v6 + 162) | a2)) {
    return 0;
  }
  *(unsigned char *)(qword_100A04128 + v6 + 162) = a2;
  uint64_t v5 = sub_10026314C((uint64_t)v20, 0xFuLL);
  if (!v5)
  {
    uint64_t v16 = sub_1002639B0((uint64_t)v20, (uint64_t)"\r\n+CIEV: 7,%c\r\n", v10, v11, v12, v13, v14, v15, a2 + 48);
    if (v16)
    {
      uint64_t v5 = v16;
      sub_10026319C((uint64_t)v20);
    }
    else
    {
      uint64_t v17 = (char *)sub_1002639DC((uint64_t)v20);
      unsigned __int16 v18 = strlen(v17);
      unsigned int v19 = sub_10014F934(a1, 15, v17, v18, 1);
      if (v19 == 408) {
        return 0;
      }
      else {
        return v19;
      }
    }
  }
  return v5;
}

uint64_t sub_1001505EC(unsigned int a1, uint64_t a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2 > 5) {
    return 101;
  }
  uint64_t v5 = 0;
  v19[0] = 0;
  v19[1] = 0;
  uint64_t v6 = qword_100A04128;
  *(unsigned char *)(qword_100A04128 + 1517) = a2;
  while (*(unsigned __int16 *)(v6 + v5) != a1)
  {
    v5 += 184;
    if (v5 == 1472) {
      return 1802;
    }
  }
  uint64_t v7 = 0;
  while (*(unsigned __int16 *)(v6 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472) {
      return 0;
    }
  }
  if (*(unsigned char *)(v6 + v7 + 140) != 1 || !*(unsigned char *)(v6 + v5 + 179)) {
    return 0;
  }
  uint64_t v4 = sub_10026314C((uint64_t)v19, 0xFuLL);
  if (!v4)
  {
    uint64_t v14 = sub_1002639B0((uint64_t)v19, (uint64_t)"\r\n+CIEV: 4,%d\r\n", v8, v9, v10, v11, v12, v13, a2);
    if (v14)
    {
      uint64_t v4 = v14;
      sub_10026319C((uint64_t)v19);
    }
    else
    {
      uint64_t v16 = (char *)sub_1002639DC((uint64_t)v19);
      unsigned __int16 v17 = strlen(v16);
      unsigned int v18 = sub_10014F934(a1, 12, v16, v17, 1);
      if (v18 == 408) {
        return 0;
      }
      else {
        return v18;
      }
    }
  }
  return v4;
}

uint64_t sub_100150734(unsigned int a1, uint64_t a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2 > 5) {
    return 101;
  }
  uint64_t v5 = 0;
  v20[0] = 0;
  v20[1] = 0;
  uint64_t v6 = qword_100A04128;
  *(unsigned char *)(qword_100A04128 + 1518) = a2;
  while (*(unsigned __int16 *)(v6 + v5) != a1)
  {
    v5 += 184;
    if (v5 == 1472) {
      return 1802;
    }
  }
  uint64_t v8 = 0;
  while (*(unsigned __int16 *)(v6 + v8) != a1)
  {
    v8 += 184;
    if (v8 == 1472) {
      goto LABEL_16;
    }
  }
  if (*(unsigned char *)(v6 + v8 + 140) == 2) {
    return 117;
  }
LABEL_16:
  uint64_t v9 = 0;
  while (*(unsigned __int16 *)(v6 + v9) != a1)
  {
    uint64_t v4 = 0;
    v9 += 184;
    if (v9 == 1472) {
      return v4;
    }
  }
  if (*(unsigned char *)(v6 + v9 + 140) != 1 || !*(unsigned char *)(v6 + v5 + 177)) {
    return 0;
  }
  uint64_t v4 = sub_10026314C((uint64_t)v20, 0xFuLL);
  if (!v4)
  {
    uint64_t v16 = sub_1002639B0((uint64_t)v20, (uint64_t)"\r\n+CIEV: 5,%d\r\n", v10, v11, v12, v13, v14, v15, a2);
    if (v16)
    {
      uint64_t v4 = v16;
      sub_10026319C((uint64_t)v20);
    }
    else
    {
      unsigned __int16 v17 = (char *)sub_1002639DC((uint64_t)v20);
      unsigned __int16 v18 = strlen(v17);
      unsigned int v19 = sub_10014F934(a1, 13, v17, v18, 1);
      if (v19 == 408) {
        return 0;
      }
      else {
        return v19;
      }
    }
  }
  return v4;
}

uint64_t sub_1001508B8(unsigned int a1, int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t v4 = 0;
  uint64_t v5 = qword_100A04128;
  *(unsigned char *)(qword_100A04128 + 1519) = a2;
  while (*(unsigned __int16 *)(v5 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  uint64_t v7 = 0;
  while (*(unsigned __int16 *)(v5 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472) {
      goto LABEL_13;
    }
  }
  if (*(unsigned char *)(v5 + v7 + 140) == 2) {
    return 117;
  }
LABEL_13:
  uint64_t v8 = 0;
  while (*(unsigned __int16 *)(v5 + v8) != a1)
  {
    v8 += 184;
    if (v8 == 1472) {
      return 0;
    }
  }
  if (*(unsigned char *)(v5 + v8 + 140) != 1 || !*(unsigned char *)(v5 + v4 + 178)) {
    return 0;
  }
  if (a2) {
    uint64_t v9 = "\r\n+CIEV: 6,1\r\n";
  }
  else {
    uint64_t v9 = "\r\n+CIEV: 6,0\r\n";
  }
  LODWORD(result) = sub_10014F934(a1, 14, v9, 0xEuLL, 0);
  if (result == 408) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1001509D8(unsigned int a1)
{
  uint64_t v2 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472) {
      return 1802;
    }
  }
  unsigned __int16 v4 = strlen(*(const char **)(qword_100A04128 + v2 + 152));
  uint64_t result = sub_10014F934(a1, 16, *(char **)(qword_100A04128 + v2 + 152), v4, 1);
  *(void *)(qword_100A04128 + v2 + 152) = 0;
  return result;
}

uint64_t sub_100150A6C(unsigned int a1, const char *a2, uint64_t a3, const char *a4, int a5)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2)
  {
    int v9 = strlen(a2);
    if (v9 <= 32) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    if (a4) {
      goto LABEL_7;
    }
LABEL_12:
    int v12 = 0;
    goto LABEL_13;
  }
  int v10 = 0;
  if (!a4) {
    goto LABEL_12;
  }
LABEL_7:
  int v11 = strlen(a4);
  if (v11 <= 128) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
LABEL_13:
  v38[0] = 0;
  v38[1] = 0;
  uint64_t v13 = sub_10026314C((uint64_t)v38, (unsigned __int16)(v10 + v12 + 29));
  if (!v13)
  {
    if (v10 < 1 || (sub_10014FBB0(a1) & 4) == 0) {
      goto LABEL_23;
    }
    uint64_t v20 = 0;
    while (*(unsigned __int16 *)(qword_100A04128 + v20) != a1)
    {
      v20 += 184;
      if (v20 == 1472) {
        goto LABEL_23;
      }
    }
    if (*(unsigned char *)(qword_100A04128 + v20 + 132))
    {
      if (v12 < 1) {
        uint64_t v21 = sub_1002639B0((uint64_t)v38, (uint64_t)"\r\nRING\r\n\r\n+CLIP: \"%s\",%d\r\n", v14, v15, v16, v17, v18, v19, (uint64_t)a2);
      }
      else {
        uint64_t v21 = sub_1002639B0((uint64_t)v38, (uint64_t)"\r\nRING\r\n\r\n+CLIP: \"%s\",%d,,,\"%s\"\r\n", v14, v15, v16, v17, v18, v19, (uint64_t)a2);
      }
    }
    else
    {
LABEL_23:
      uint64_t v21 = sub_1002639B0((uint64_t)v38, (uint64_t)"\r\nRING\r\n", v14, v15, v16, v17, v18, v19, v36);
    }
    uint64_t v13 = v21;
    if (v21)
    {
      sub_10026319C((uint64_t)v38);
    }
    else
    {
      uint64_t v22 = 152;
      while (*(unsigned __int16 *)(qword_100A04128 + v22 - 152) != a1)
      {
        v22 += 184;
        if (v22 == 1624) {
          return 1802;
        }
      }
      uint64_t v23 = *(void **)(qword_100A04128 + v22);
      if (v23)
      {
        sub_100023010(v23);
        *(void *)(qword_100A04128 + v22) = 0;
      }
      uint64_t v24 = sub_1002639DC((uint64_t)v38);
      uint64_t v25 = qword_100A04128;
      *(void *)(qword_100A04128 + v22) = v24;
      if ((*(unsigned char *)(v25 + 1508) & 8) == 0 || *(unsigned __int8 *)(v25 + 1472) > 1u || sub_100156B44(a1) || a5)
      {
        return sub_1001509D8(a1);
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Not sending ring with name as SCO is not connected", v26, v27, v28, v29, v30, v31, v32, v37);
          uint64_t v33 = sub_100050B4C(0x10u);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        uint64_t v34 = *(void **)(qword_100A04128 + v22);
        if (v34)
        {
          sub_100023010(v34);
          uint64_t v13 = 0;
          *(void *)(qword_100A04128 + v22) = 0;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return v13;
}

uint64_t sub_100150CC4(unsigned int a1, int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 4) == 0) {
    return 1808;
  }
  v16[0] = 0;
  v16[1] = 0;
  uint64_t v4 = sub_10026314C((uint64_t)v16, 0xDuLL);
  if (!v4)
  {
    uint64_t v11 = 48;
    if (a2) {
      uint64_t v11 = 49;
    }
    uint64_t v12 = sub_1002639B0((uint64_t)v16, (uint64_t)"\r\n+BVRA: %c\r\n", v5, v6, v7, v8, v9, v10, v11);
    if (v12)
    {
      uint64_t v4 = v12;
      sub_10026319C((uint64_t)v16);
    }
    else
    {
      uint64_t v13 = (char *)sub_1002639DC((uint64_t)v16);
      unsigned __int16 v14 = strlen(v13);
      return sub_10014F934(a1, 19, v13, v14, 1);
    }
  }
  return v4;
}

uint64_t sub_100150D9C(unsigned int a1, const char *a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x10) == 0) {
    return 1808;
  }
  if (a2)
  {
    int v6 = strlen(a2);
    if (v6 > 32) {
      return 101;
    }
  }
  else
  {
    LOWORD(v6) = 0;
  }
  v16[0] = 0;
  v16[1] = 0;
  uint64_t v4 = sub_10026314C((uint64_t)v16, (unsigned __int16)(v6 + 14));
  if (!v4)
  {
    uint64_t v13 = sub_1002639B0((uint64_t)v16, (uint64_t)"\r\n+BINP: \"%s\"\r\n", v7, v8, v9, v10, v11, v12, (uint64_t)a2);
    if (v13)
    {
      uint64_t v4 = v13;
      sub_10026319C((uint64_t)v16);
    }
    else
    {
      unsigned __int16 v14 = (char *)sub_1002639DC((uint64_t)v16);
      unsigned __int16 v15 = strlen(v14);
      return sub_10014F934(a1, 17, v14, v15, 1);
    }
  }
  return v4;
}

uint64_t sub_100150E8C(unsigned int a1, const char *a2, uint64_t a3, const char *a4)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0 || (sub_10014FBB0(a1) & 2) == 0) {
    return 1808;
  }
  if (a2)
  {
    int v9 = strlen(a2);
    if (v9 > 32) {
      return 101;
    }
    if (a4) {
      goto LABEL_10;
    }
LABEL_13:
    int v10 = 0;
    goto LABEL_14;
  }
  int v9 = 0;
  if (!a4) {
    goto LABEL_13;
  }
LABEL_10:
  int v10 = strlen(a4);
  if (v10 > 128) {
    return 101;
  }
LABEL_14:
  v21[0] = 0;
  v21[1] = 0;
  uint64_t v7 = sub_10026314C((uint64_t)v21, (unsigned __int16)(v9 + v10 + 23));
  if (!v7)
  {
    uint64_t v17 = "";
    if (v9 > 0) {
      uint64_t v17 = a2;
    }
    if (v10 < 1) {
      uint64_t v18 = sub_1002639B0((uint64_t)v21, (uint64_t)"\r\n+CCWA: \"%s\",%d,1\r\n", v11, v12, v13, v14, v15, v16, (uint64_t)v17);
    }
    else {
      uint64_t v18 = sub_1002639B0((uint64_t)v21, (uint64_t)"\r\n+CCWA: \"%s\",%d,1,\"%s\"\r\n", v11, v12, v13, v14, v15, v16, (uint64_t)v17);
    }
    uint64_t v7 = v18;
    if (v18)
    {
      sub_10026319C((uint64_t)v21);
    }
    else
    {
      uint64_t v19 = (char *)sub_1002639DC((uint64_t)v21);
      unsigned __int16 v20 = strlen(v19);
      return sub_10014F934(a1, 18, v19, v20, 1);
    }
  }
  return v7;
}

uint64_t sub_100150FFC(unsigned int a1, int a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 8) == 0) {
    return 1808;
  }
  v17[0] = 0;
  v17[1] = 0;
  uint64_t v4 = sub_10026314C((uint64_t)v17, 0xDuLL);
  if (!v4)
  {
    uint64_t v11 = 48;
    if (a2) {
      uint64_t v11 = 49;
    }
    uint64_t v12 = sub_1002639B0((uint64_t)v17, (uint64_t)"\r\n+BSIR: %c\r\n", v5, v6, v7, v8, v9, v10, v11);
    if (v12)
    {
      uint64_t v4 = v12;
      sub_10026319C((uint64_t)v17);
    }
    else
    {
      uint64_t v13 = (char *)sub_1002639DC((uint64_t)v17);
      unsigned __int16 v14 = strlen(v13);
      uint64_t v4 = sub_10014F934(a1, 20, v13, v14, 1);
      if (!v4)
      {
        uint64_t v15 = 0;
        while (*(unsigned __int16 *)(qword_100A04128 + v15) != a1)
        {
          uint64_t v4 = 0;
          v15 += 184;
          if (v15 == 1472) {
            return v4;
          }
        }
        uint64_t v4 = 0;
        *(_DWORD *)(qword_100A04128 + v15 + 128) = a2;
      }
    }
  }
  return v4;
}

uint64_t sub_10015110C(unsigned int a1, const char *a2)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (!a2) {
    return 101;
  }
  v16[0] = 0;
  v16[1] = 0;
  __int16 v4 = strlen(a2);
  uint64_t v11 = sub_10026314C((uint64_t)v16, (unsigned __int16)(v4 + 24));
  if (!v11)
  {
    uint64_t v12 = sub_1002639B0((uint64_t)v16, (uint64_t)"\r\n+CNUM: ,\"%s\",%d,,%d\r\n", v5, v6, v7, v8, v9, v10, (uint64_t)a2);
    if (v12)
    {
      uint64_t v11 = v12;
      sub_10026319C((uint64_t)v16);
    }
    else
    {
      uint64_t v13 = (char *)sub_1002639DC((uint64_t)v16);
      unsigned __int16 v14 = strlen(v13);
      return sub_10014F934(a1, 22, v13, v14, 1);
    }
  }
  return v11;
}

uint64_t sub_1001511F0(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, uint64_t a6, const char *a7, uint64_t a8, const char *a9)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x40) == 0) {
    return 1808;
  }
  uint64_t v14 = 101;
  if (a4 <= 5 && a5 <= 2)
  {
    int v16 = (int)a9;
    if (a7)
    {
      int v17 = strlen(a7);
      if (v17 <= 32) {
        int v18 = v17;
      }
      else {
        int v18 = 0;
      }
    }
    else
    {
      int v18 = 0;
    }
    if (a9)
    {
      int v19 = strlen(a9);
      if (v19 <= 128) {
        int v16 = v19;
      }
      else {
        int v16 = 0;
      }
    }
    v32[0] = 0;
    v32[1] = 0;
    uint64_t v20 = sub_10026314C((uint64_t)v32, (unsigned __int16)(v18 + v16 + 40));
    int v27 = v18;
    uint64_t v14 = v20;
    if (!v20)
    {
      if (v27 < 1 || v16 < 1)
      {
        uint64_t v31 = a2;
        if (v27 < 1) {
          uint64_t v28 = "\r\n+CLCC: %d,%c,%d,%d,%c,,,\r\n";
        }
        else {
          uint64_t v28 = "\r\n+CLCC: %d,%c,%d,%d,%c,\"%s\",%d\r\n";
        }
      }
      else
      {
        uint64_t v31 = a2;
        uint64_t v28 = "\r\n+CLCC: %d,%c,%d,%d,%c,\"%s\",%d,\"%s\"\r\n";
      }
      uint64_t v14 = sub_1002639B0((uint64_t)v32, (uint64_t)v28, v21, v22, v23, v24, v25, v26, v31);
      if (v14)
      {
        sub_10026319C((uint64_t)v32);
      }
      else
      {
        uint64_t v29 = (char *)sub_1002639DC((uint64_t)v32);
        unsigned __int16 v30 = strlen(v29);
        return sub_10014F934(a1, 23, v29, v30, 1);
      }
    }
  }
  return v14;
}

uint64_t sub_1001513C4(unsigned int a1, uint64_t a2, const char *a3)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  if (a2 > 4) {
    return 101;
  }
  v24[0] = 0;
  v24[1] = 0;
  if (a3)
  {
    __int16 v8 = strlen(a3);
    uint64_t v6 = sub_10026314C((uint64_t)v24, (unsigned __int16)(v8 + 18));
    if (v6) {
      return v6;
    }
    uint64_t v15 = sub_1002639B0((uint64_t)v24, (uint64_t)"\r\n+COPS: %d,0,\"%s\"\r\n", v9, v10, v11, v12, v13, v14, a2);
  }
  else
  {
    uint64_t v6 = sub_10026314C((uint64_t)v24, 0xDuLL);
    if (v6) {
      return v6;
    }
    uint64_t v15 = sub_1002639B0((uint64_t)v24, (uint64_t)"\r\n+COPS: %d\r\n", v16, v17, v18, v19, v20, v21, a2);
  }
  uint64_t v6 = v15;
  if (v15)
  {
    sub_10026319C((uint64_t)v24);
  }
  else
  {
    uint64_t v22 = (char *)sub_1002639DC((uint64_t)v24);
    unsigned __int16 v23 = strlen(v22);
    return sub_10014F934(a1, 24, v22, v23, 1);
  }
  return v6;
}

uint64_t sub_1001514C0(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = 0;
  __int16 v17 = a1;
  while (*(unsigned __int16 *)(qword_100A04128 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  v16[0] = 0;
  v16[1] = 0;
  if ((*(unsigned char *)(qword_100A04128 + 1509) & 2) == 0 || (*(_WORD *)(qword_100A04128 + v4 + 86) & 0x80) == 0) {
    return 2701;
  }
  if ((*(_DWORD *)(qword_100A04128 + v4 + 144) & a2) == 0) {
    return 1812;
  }
  *(_DWORD *)(qword_100A04128 + v4 + 164) = a2;
  uint64_t result = sub_10026314C((uint64_t)v16, 0xBuLL);
  if (!result)
  {
    if (sub_1002639B0((uint64_t)v16, (uint64_t)"\r\n+BCS:%d\r\n", v6, v7, v8, v9, v10, v11, a2))
    {
      sub_10026319C((uint64_t)v16);
      return 412;
    }
    else
    {
      uint64_t v12 = (char *)sub_1002639DC((uint64_t)v16);
      unsigned __int16 v13 = strlen(v12);
      uint64_t result = sub_10014F934(a1, 26, v12, v13, 1);
      if (!result)
      {
        v15[1] = &v17;
        v15[0] = (const void *)2;
        uint64_t v14 = qword_100A04128 + v4;
        *(unsigned char *)(v14 + 168) = 1;
        sub_1000268E4((uint64_t)sub_10015161C, v15, 29, (int *)(v14 + 172));
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10015161C(uint64_t result)
{
  uint64_t v1 = 0;
  uint64_t v2 = (unsigned __int16 *)qword_100A04128;
  while (1)
  {
    int v3 = *v2;
    v2 += 92;
    if (v3 == **(unsigned __int16 **)(result + 8)) {
      break;
    }
    if (++v1 == 8) {
      return result;
    }
  }
  uint64_t result = v1;
  if (v1 != 8) {
    return sub_100152D7C(v1, 1809);
  }
  return result;
}

uint64_t sub_100151664(char a1, unsigned int a2, unsigned int a3)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t result = 101;
  if (a2 <= 4 && a3 <= 2)
  {
    uint64_t result = 0;
    uint64_t v7 = qword_100A04128;
    *(unsigned char *)(qword_100A04128 + 1514) = a1;
    *(unsigned char *)(v7 + 1515) = a2;
    *(unsigned char *)(v7 + 1516) = a3;
  }
  return result;
}

uint64_t sub_1001516D0(BOOL *a1, unsigned char *a2, unsigned char *a3)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t result = 0;
  uint64_t v7 = qword_100A04128;
  *a1 = *(unsigned char *)(qword_100A04128 + 1514) != 0;
  *a2 = *(unsigned char *)(v7 + 1515);
  *a3 = *(unsigned char *)(v7 + 1516);
  return result;
}

uint64_t sub_10015173C(char a1, char a2, unsigned int a3, unsigned int a4)
{
  if (!sub_1001558F0()) {
    return 408;
  }
  uint64_t result = 101;
  if (a3 <= 5 && a4 <= 5)
  {
    uint64_t result = 0;
    uint64_t v9 = (unsigned char *)qword_100A04128;
    *(unsigned char *)(qword_100A04128 + 1513) = a1;
    v9[1519] = a2;
    v9[1518] = a3;
    v9[1517] = a4;
  }
  return result;
}

uint64_t sub_1001517B0(int a1)
{
  uint64_t v1 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v1) != a1)
  {
    v1 += 184;
    if (v1 == 1472) {
      return 0;
    }
  }
  return qword_100A04128 + v1 + 80;
}

uint64_t sub_1001517F4(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_HandsfreeAG_SetupAoS - handle:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_1001569D8(a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Trying to establish HandsfreeAoS while it's already established", v10, v11, v12, v13, v14, v15, v16, v32);
      __int16 v17 = sub_100050B4C(0x10u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100749294(v17);
      }
    }
    return 1806;
  }
  else
  {
    *(_OWORD *)std::__fs::filesystem::path buf = 0uLL;
    uint64_t v18 = sub_10026314C((uint64_t)buf, 8uLL);
    if (!v18)
    {
      uint64_t v25 = sub_1002639B0((uint64_t)buf, (uint64_t)"\r\n+HAOS:1\r\n", v19, v20, v21, v22, v23, v24, v32);
      if (v25)
      {
        uint64_t v18 = v25;
        sub_10026319C((uint64_t)buf);
      }
      else
      {
        uint64_t v26 = 0;
        int v27 = (unsigned __int16 *)qword_100A04128;
        do
        {
          int v28 = *v27;
          v27 += 92;
          if (v28 == a1) {
            break;
          }
          ++v26;
        }
        while (v26 != 8);
        *(unsigned char *)(qword_100A04128 + 184 * v26 + 182) = 1;
        uint64_t v29 = (char *)sub_1002639DC((uint64_t)buf);
        unsigned __int16 v30 = strlen(v29);
        return sub_10014F934(a1, 28, v29, v30, 1);
      }
    }
  }
  return v18;
}

uint64_t sub_1001519B4(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_HandsfreeAG_CloseAoSAudio - handle:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_OWORD *)std::__fs::filesystem::path buf = 0uLL;
  uint64_t v16 = sub_10026314C((uint64_t)buf, 8uLL);
  if (!v16)
  {
    uint64_t v17 = sub_1002639B0((uint64_t)buf, (uint64_t)"\r\n+HAOS:2,0\r\n", v10, v11, v12, v13, v14, v15, v21);
    if (v17)
    {
      uint64_t v16 = v17;
      sub_10026319C((uint64_t)buf);
    }
    else
    {
      uint64_t v18 = (char *)sub_1002639DC((uint64_t)buf);
      unsigned __int16 v19 = strlen(v18);
      return sub_10014F934(a1, 28, v18, v19, 1);
    }
  }
  return v16;
}

uint64_t sub_100151AE8(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_HandsfreeAG_TransitionToUnidirectionalAudio - handle:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::__fs::filesystem::path buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_OWORD *)std::__fs::filesystem::path buf = 0uLL;
  uint64_t v16 = sub_10026314C((uint64_t)buf, 8uLL);
  if (!v16)
  {
    uint64_t v17 = sub_1002639B0((uint64_t)buf, (uint64_t)"\r\n+HAOS:2,1\r\n", v10, v11, v12, v13, v14, v15, v21);
    if (v17)
    {
      uint64_t v16 = v17;
      sub_10026319C((uint64_t)buf);
    }
    else
    {
      uint64_t v18 = (char *)sub_1002639DC((uint64_t)buf);
      unsigned __int16 v19 = strlen(v18);
      return sub_10014F934(a1, 28, v18, v19, 1);
    }
  }
  return v16;
}

uint64_t sub_100151C1C(unsigned int a1)
{
  uint64_t v1 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v1) != a1)
  {
    v1 += 184;
    if (v1 == 1472) {
      return 1802;
    }
  }
  *(unsigned char *)(qword_100A04128 + v1 + 182) = 0;
  return sub_10015680C(a1);
}

BOOL sub_100151C60(int a1)
{
  uint64_t v1 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v1) != a1)
  {
    v1 += 184;
    if (v1 == 1472) {
      return 0;
    }
  }
  return *(unsigned char *)(qword_100A04128 + v1 + 182) != 0;
}

uint64_t sub_100151CAC(unsigned int a1, int a2)
{
  uint64_t v2 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472) {
      return 1802;
    }
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_100A04128 + v2 + 86) & 0x80) == 0) {
    return sub_100156758(a1, a2);
  }
  if (a2) {
    return sub_10015680C(a1);
  }
  return sub_10014FD40(a1, 2701, 0);
}

uint64_t sub_100151D10(int a1, uint64_t a2)
{
  uint64_t result = 0;
  uint64_t v4 = qword_100A04128;
  uint64_t v5 = (unsigned __int16 *)qword_100A04128;
  while (1)
  {
    int v6 = *v5;
    v5 += 92;
    if (v6 == a1) {
      break;
    }
    if (++result == 8) {
      goto LABEL_6;
    }
  }
  if (result != 8) {
    goto LABEL_9;
  }
LABEL_6:
  LODWORD(result) = sub_100151DA4(a1, a2);
  if (result == 8)
  {
    sub_10025B8C0();
    LOBYTE(result) = -1;
    return result;
  }
  uint64_t v4 = qword_100A04128;
LABEL_9:
  uint64_t v7 = v4 + 184 * result;
  *(unsigned char *)(v7 + 12) = 0;
  *(_DWORD *)(v7 + 4) = 0;
  return result;
}

uint64_t sub_100151DA4(int a1, uint64_t a2)
{
  __int16 v3 = a1;
  for (uint64_t i = 0; i != 1472; i += 184)
  {
    if (*(unsigned __int16 *)(qword_100A04128 + i) == a1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Cooked device already exists %: !!", v13, v14, v15, v16, v17, v18, v19, a2);
        uint64_t v20 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return 8;
    }
  }
  unsigned __int8 v5 = 0;
  uint64_t v6 = -1472;
  while (*(_DWORD *)(qword_100A04128 + v6 + 1552) || *(_WORD *)(qword_100A04128 + v6 + 1556) != 0)
  {
    ++v5;
    v6 += 184;
    if (!v6) {
      return 8;
    }
  }
  uint64_t v8 = sub_100022FE8(*(unsigned __int16 *)(qword_100A04128 + 1506));
  uint64_t v9 = qword_100A04128 + v6;
  *(void *)(qword_100A04128 + v6 + 1592) = v8;
  if (v8)
  {
    sub_10025C0F0((void *)(v9 + 1536));
    sub_100131ED8(qword_100A04128 + v6 + 1568, (uint64_t)sub_100152E20, *(void *)(qword_100A04128 + v6 + 1592), *(_WORD *)(qword_100A04128 + 1506));
    uint64_t v10 = qword_100A04128;
    uint64_t v11 = qword_100A04128 + v6;
    *(_WORD *)(v11 + 1472) = v3;
    int v12 = *(_DWORD *)a2;
    *(_WORD *)(v11 + 1556) = *(_WORD *)(a2 + 4);
    *(_DWORD *)(v11 + 1552) = v12;
    *(unsigned char *)(v11 + 1484) = 1;
    *(void *)(v11 + 1476) = 1802;
    *(_WORD *)(v11 + 1558) = 0;
    *(_DWORD *)(v11 + 1488) = 0;
    *(void *)(v11 + 1496) = 0;
    *(_WORD *)(v11 + 1504) = 0;
    *(unsigned char *)(v11 + 1506) = 0;
    *(_DWORD *)(v11 + 1600) = (*(unsigned __int16 *)(v10 + 1508) >> 3) & 1;
    *(_OWORD *)(v10 + v6 + 1604) = 0u;
    *(_WORD *)(v11 + 1632) = *(_WORD *)(v10 + 1514);
    *(unsigned char *)(v11 + 1634) = *(unsigned char *)(v10 + 1516);
    *(_DWORD *)(v11 + 1636) = 0;
    *(unsigned char *)(v11 + 1640) = 0;
    *(void *)(v10 + v6 + 1644) = 0x101010100000000;
    *(_WORD *)(v11 + 1652) = 0;
    ++*(unsigned char *)(v10 + 1472);
    return v5;
  }
  return 8;
}

void sub_100151F80(uint64_t a1, unsigned int a2, int a3)
{
  sub_100151FC4(a3);

  sub_100157054(a1, a2);
}

double sub_100151FC4(int a1)
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v1) != a1)
  {
    ++v2;
    v1 += 184;
    if (v2 == 8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not find cooked device to destroy.", v3, v4, v5, v6, v7, v8, v9, v17);
        uint64_t v11 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return result;
    }
  }
  sub_100152A28(v2);
  uint64_t v12 = qword_100A04128;
  uint64_t v13 = *(void **)(qword_100A04128 + v1 + 152);
  if (v13)
  {
    sub_100023010(v13);
    uint64_t v12 = qword_100A04128;
    *(void *)(qword_100A04128 + v1 + 152) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v12 + v1 + 8);
  if (v14)
  {
    sub_100026DB4(v14);
    uint64_t v12 = qword_100A04128;
  }
  sub_100023010(*(void **)(v12 + v1 + 120));
  uint64_t v15 = qword_100A04128;
  uint64_t v16 = qword_100A04128 + v1;
  double result = 0.0;
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(_OWORD *)(v16 + 144) = 0u;
  *(_OWORD *)(v16 + 160) = 0u;
  *(void *)(v16 + 176) = 0;
  *(_WORD *)uint64_t v16 = -1;
  --*(unsigned char *)(v15 + 1472);
  return result;
}

uint64_t sub_1001520D0(int a1, char a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = (unsigned __int16 *)qword_100A04128;
  if (a2)
  {
    while (1)
    {
      int v4 = *v3;
      v3 += 92;
      if (v4 == a1) {
        break;
      }
      if (++v2 == 8) {
        return 0;
      }
    }
    int v6 = 1;
  }
  else
  {
    while (1)
    {
      int v5 = *v3;
      v3 += 92;
      if (v5 == a1) {
        break;
      }
      if (++v2 == 8) {
        return 0;
      }
    }
    int v6 = 0;
  }
  *(_DWORD *)(qword_100A04128 + 184 * v2 + 140) = v6;
  return 0;
}

uint64_t sub_10015213C(int a1, unsigned char *a2, unsigned int a3)
{
  uint64_t v4 = qword_100A04128;
  uint64_t v5 = -1472;
  while (*(unsigned __int16 *)(qword_100A04128 + v5 + 1472) != a1)
  {
    v5 += 184;
    if (!v5) {
      return 1802;
    }
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_100A04128 + v5 + 1558) & 0x80) == 0) {
    return 2701;
  }
  *(_DWORD *)(qword_100A04128 + v5 + 1616) = 0;
  if (a3)
  {
    uint64_t v7 = a3;
    while (1)
    {
      unsigned int v8 = *a2;
      if (v8 <= 0x7E)
      {
        switch(v8)
        {
          case 1u:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 1;
            break;
          case 2u:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 2;
            break;
          case 0x40u:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 0x80;
            break;
          default:
LABEL_28:
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Unsupported codec ID: %d", v11, v12, v13, v14, v15, v16, v17, *a2);
              uint64_t v18 = sub_100050B4C(0x10u);
              if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
              {
                uint64_t v19 = sub_100050714();
                *(_DWORD *)std::__fs::filesystem::path buf = 136446466;
                uint64_t v23 = v19;
                __int16 v24 = 1024;
                int v25 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            goto LABEL_26;
        }
      }
      else
      {
        switch(*a2)
        {
          case 0x7F:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 4;
            break;
          case 0x80:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 0x100;
            break;
          case 0x81:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 0x200;
            break;
          case 0x82:
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 0x400;
            break;
          default:
            if (v8 != 255) {
              goto LABEL_28;
            }
            uint64_t v9 = qword_100A04128 + v5;
            int v10 = *(_DWORD *)(qword_100A04128 + v5 + 1616) | 0x10;
            break;
        }
      }
      *(_DWORD *)(v9 + 1616) = v10;
LABEL_26:
      ++a2;
      if (!--v7)
      {
        uint64_t v4 = qword_100A04128;
        int v20 = *(_DWORD *)(qword_100A04128 + v5 + 1616);
        goto LABEL_32;
      }
    }
  }
  int v20 = 0;
LABEL_32:
  int v21 = v20 & *(_DWORD *)(v4 + 1520);
  if ((v21 & 0x100) != 0)
  {
    *(void *)(v4 + v5 + 1560) |= 1uLL;
    if ((v21 & 0x80) == 0)
    {
LABEL_34:
      if ((v21 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_43;
    }
  }
  else if ((v21 & 0x80) == 0)
  {
    goto LABEL_34;
  }
  *(void *)(v4 + v5 + 1560) |= 4uLL;
  if ((v21 & 2) == 0)
  {
LABEL_35:
    if ((v21 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_44;
  }
LABEL_43:
  *(void *)(v4 + v5 + 1560) |= 2uLL;
  if ((v21 & 4) == 0)
  {
LABEL_36:
    if ((v21 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_45;
  }
LABEL_44:
  *(void *)(v4 + v5 + 1560) |= 8uLL;
  if ((v21 & 0x10) == 0)
  {
LABEL_37:
    if ((v21 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
LABEL_45:
  *(void *)(v4 + v5 + 1560) |= 0x10uLL;
  if ((v21 & 0x200) != 0) {
LABEL_38:
  }
    *(void *)(v4 + v5 + 1560) |= 0x20uLL;
LABEL_39:
  uint64_t result = 0;
  if ((v21 & 0x400) != 0) {
    *(void *)(v4 + v5 + 1560) |= 0x40uLL;
  }
  return result;
}

uint64_t sub_100152484(int a1, unsigned char *a2, unsigned int a3)
{
  uint64_t v3 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v3) != a1)
  {
    v3 += 184;
    if (v3 == 1472)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"FastConnect Device not connected", v4, v5, v6, v7, v8, v9, v10, v16);
        uint64_t v11 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return 1802;
    }
  }
  if (a3 >= 0x14) {
    int v13 = 20;
  }
  else {
    int v13 = a3;
  }
  if (v13)
  {
    int v14 = 0;
    uint64_t v15 = (unsigned char *)(qword_100A04128 + v3);
    do
    {
      if (a3 <= 6)
      {
        switch(v14)
        {
          case 0:
            if (*a2)
            {
              if (*a2 == 1) {
                v15[176] = 1;
              }
            }
            else
            {
              v15[176] = 0;
            }
            break;
          case 3:
            if (a2[3])
            {
              if (a2[3] == 1) {
                v15[179] = 1;
              }
            }
            else
            {
              v15[179] = 0;
            }
            break;
          case 4:
            if (a2[4])
            {
              if (a2[4] == 1) {
                v15[177] = 1;
              }
            }
            else
            {
              v15[177] = 0;
            }
            break;
          case 5:
            if (a2[5])
            {
              if (a2[5] == 1) {
                v15[178] = 1;
              }
            }
            else
            {
              v15[178] = 0;
            }
            break;
          default:
            break;
        }
      }
      ++v14;
    }
    while (v13 != v14);
  }
  return 0;
}

uint64_t sub_10015260C(int a1, __int16 a2)
{
  uint64_t v2 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472) {
      return 1802;
    }
  }
  uint64_t result = 0;
  *(_WORD *)(qword_100A04128 + v2 + 86) = a2;
  return result;
}

uint64_t sub_100152654(uint64_t a1, _DWORD *a2)
{
  *a2 = *(unsigned __int16 *)(qword_100A04128 + 1508);
  return 0;
}

uint64_t sub_10015266C(uint64_t a1, BOOL *a2, unsigned int a3)
{
  if (a3 < 7) {
    return 2701;
  }
  uint64_t result = 0;
  uint64_t v4 = (unsigned char *)qword_100A04128;
  *a2 = *(unsigned char *)(qword_100A04128 + 1513) != 0;
  a2[1] = v4[1514] != 0;
  a2[2] = v4[1515];
  a2[3] = v4[1517];
  a2[4] = v4[1518];
  a2[5] = v4[1519] != 0;
  a2[6] = v4[1516];
  return result;
}

uint64_t sub_1001526DC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (a3 < 7) {
    return 2701;
  }
  uint64_t result = 0;
  *(_DWORD *)a2 = 84082945;
  *(_WORD *)(a2 + 4) = 261;
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0xC0) == 0 || (*(_WORD *)(qword_100A04128 + 1508) & 1) == 0) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  *(unsigned char *)(a2 + 6) = v5;
  return result;
}

uint64_t sub_10015272C(int a1, _WORD *a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = qword_100A04128;
  while (*(unsigned __int16 *)(qword_100A04128 + v2) != a1)
  {
    v2 += 184;
    if (v2 == 1472) {
      return 1802;
    }
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0) {
    return 2701;
  }
  char v5 = *(unsigned char *)(qword_100A04128 + 1510);
  *a2 = v5 & 1;
  if ((*(_WORD *)(v3 + 1508) & 0x80) != 0) {
    __int16 v6 = 30;
  }
  else {
    __int16 v6 = 10;
  }
  __int16 v7 = v6 & 0xFFFE | v5 & 1;
  *a2 = v7;
  unsigned int v8 = *(unsigned __int8 *)(v3 + 1510);
  uint64_t result = 0;
  if ((v8 & 0x18) != 0) {
    *a2 = v7 & 0xFF9F | (32 * ((v8 >> 3) & 3));
  }
  return result;
}

uint64_t sub_1001527C4(uint64_t a1)
{
  uint64_t v1 = 0;
  unsigned int v2 = **(unsigned __int16 **)(a1 + 8);
  while (*(unsigned __int16 *)(qword_100A04128 + v1) != v2)
  {
    v1 += 184;
    if (v1 == 1472) {
      return sub_1001566A8(v2, 1814);
    }
  }
  *(void *)(qword_100A04128 + v1 + 4) = 1814;
  return sub_1001566A8(v2, 1814);
}

uint64_t sub_100152814(unsigned int a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v31 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v6) != a1)
  {
    v6 += 184;
    if (v6 == 1472)
    {
      return sub_1001566A8(a1, 1815);
    }
  }
  if (*(unsigned char *)(qword_100A04128 + v6 + 12))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Error %! occurred sending response, disconnecting\n", v8, v9, v10, v11, v12, v13, v14, a3);
      uint64_t v15 = sub_100050B4C(0x10u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    *(_DWORD *)(qword_100A04128 + v6 + 4) = a3;
    return sub_1001566A8(a1, a3);
  }
  else
  {
    int v16 = *(unsigned __int8 *)(qword_100A04128 + v6 + 168);
    int v17 = sub_100058654();
    if (v16)
    {
      if (v17)
      {
        sub_100056E24((uint64_t)"Error %! Response\n", v18, v19, v20, v21, v22, v23, v24, a3);
        int v25 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      uint64_t v26 = qword_100A04128;
      uint64_t v27 = *(unsigned int *)(qword_100A04128 + v6 + 172);
      if (v27)
      {
        sub_100026DB4(v27);
        uint64_t v26 = qword_100A04128;
        *(_DWORD *)(qword_100A04128 + v6 + 172) = 0;
      }
      *(unsigned char *)(v26 + v6 + 168) = 0;
      LODWORD(v29) = 5;
      WORD2(v29) = a1;
      LODWORD(v30) = a3;
    }
    else
    {
      if (v17)
      {
        sub_100056E24((uint64_t)"Error %! occurred while sending response, type %d\n", v18, v19, v20, v21, v22, v23, v24, a3);
        int v28 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      unint64_t v30 = __PAIR64__(a3, a2);
      WORD2(v29) = a1;
      LODWORD(v29) = 21;
      uint64_t v26 = qword_100A04128;
    }
    return (*(uint64_t (**)(uint64_t *))(v26 + 1480))(&v29);
  }
}

void sub_100152A10(unsigned int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
}

void sub_100152A1C(unsigned int a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
}

void **sub_100152A28(unsigned int a1)
{
  uint64_t v2 = qword_100A04128;
  uint64_t v3 = qword_100A04128 + 184 * a1;
  char v5 = *(void ***)(v3 + 64);
  uint64_t result = (void **)(v3 + 64);
  if (v5 != result)
  {
    do
    {
      uint64_t v6 = sub_10025C1A4(result);
      if (!v6) {
        sub_10025B8C0();
      }
      sub_100152814(*(unsigned __int16 *)(qword_100A04128 + 184 * a1), *(_DWORD *)(v6 - 24), 122);
      if (*(unsigned char *)(v6 - 6)) {
        sub_100023010(*(void **)(v6 - 16));
      }
      sub_100023010((void *)(v6 - 24));
      uint64_t v2 = qword_100A04128;
      uint64_t v7 = qword_100A04128 + 184 * a1;
      uint64_t v8 = *(void ***)(v7 + 64);
      uint64_t result = (void **)(v7 + 64);
    }
    while (v8 != result);
  }
  *(unsigned char *)(v2 + 184 * a1 + 56) = 0;
  return result;
}

void sub_100152ADC(unsigned int a1, unsigned __int8 *ptr, uint64_t a3, int a4)
{
  uint64_t v8 = 64;
  while (*(unsigned __int16 *)(qword_100A04128 + v8 - 64) != a1)
  {
    v8 += 184;
    if (v8 == 1536)
    {
      if (a4)
      {
        sub_100023010(ptr);
      }
      return;
    }
  }
  if (a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Write failed %!\n", v9, v10, v11, v12, v13, v14, v15, a3);
      int v16 = sub_100050B4C(0x10u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_100152814(a1, *(_DWORD *)(qword_100A04128 + v8 - 48), a3);
  }
  else if (*(_DWORD *)(qword_100A04128 + v8 - 48) == 20)
  {
    uint64_t v17 = 0;
    while (*(unsigned __int16 *)(qword_100A04128 + v17) != a1)
    {
      v17 += 184;
      if (v17 == 1472) {
        goto LABEL_21;
      }
    }
    *(_DWORD *)(qword_100A04128 + v17 + 128) = ptr[9] != 48;
  }
LABEL_21:
  if (a4) {
    sub_100023010(ptr);
  }
  *(_DWORD *)(qword_100A04128 + v8 - 48) = 0;
  do
  {
    uint64_t v18 = (void **)(qword_100A04128 + v8);
    if (v18 == *v18) {
      break;
    }
    uint64_t v19 = sub_10025C1A4(v18);
    if (!v19) {
      sub_10025B8C0();
    }
    unsigned int v21 = *(_DWORD *)(v19 - 24);
    uint64_t v20 = v19 - 24;
    uint64_t v22 = sub_10014F934(*(unsigned __int16 *)(qword_100A04128 + v8 - 64), v21, *(void *)(v20 + 8), *(unsigned __int16 *)(v20 + 16), *(unsigned __int8 *)(v20 + 18));
    if (v22)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SendResponse failed from SendNext %!, type %d\n", v23, v24, v25, v26, v27, v28, v29, v22);
        unint64_t v30 = sub_100050B4C(0x10u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100745680(v31, &v32, v30);
        }
      }
      sub_100152814(*(unsigned __int16 *)(qword_100A04128 + v8 - 64), *(_DWORD *)v20, v22);
    }
    if (*(unsigned char *)(qword_100A04128 + v8 - 8)) {
      --*(unsigned char *)(qword_100A04128 + v8 - 8);
    }
    sub_100023010((void *)v20);
  }
  while (v22);
}

uint64_t sub_100152D7C(unsigned int a1, int a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v3 = qword_100A04128;
  uint64_t result = *(unsigned int *)(qword_100A04128 + 184 * a1 + 172);
  if (result)
  {
    uint64_t result = sub_100026DB4(result);
    uint64_t v3 = qword_100A04128;
    *(_DWORD *)(qword_100A04128 + 184 * a1 + 172) = 0;
  }
  uint64_t v6 = v3 + 184 * a1;
  int v8 = *(unsigned __int8 *)(v6 + 168);
  uint64_t v7 = (unsigned char *)(v6 + 168);
  if (v8)
  {
    *uint64_t v7 = 0;
    LODWORD(v9) = 5;
    WORD2(v9) = *(_WORD *)(v3 + 184 * a1);
    LODWORD(v10) = a2;
    return (*(uint64_t (**)(uint64_t *))(v3 + 1480))(&v9);
  }
  return result;
}

uint64_t sub_100152E20(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = 0;
  uint64_t v3 = qword_100A04128;
  while (*(void *)(qword_100A04128 + 184 * v2 + 104) != *(void *)(*(void *)(result + 32) + 8))
  {
    if (++v2 == 8) {
      return result;
    }
  }
  uint64_t v4 = *(unsigned __int16 *)(qword_100A04128 + 184 * v2);
  char v5 = *(const char **)(result + 8);
  if (!v5) {
    goto LABEL_20;
  }
  uint64_t v6 = 0;
  for (uint64_t i = &off_10099C670; strcmp((const char *)*(i - 1), v5); i += 3)
  {
    if (++v6 == 31)
    {
      if ((!*(unsigned char *)(v3 + 184 * v2 + 12) || *(unsigned char *)(v3 + 1511))
        && (int v8 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 1488)) != 0)
      {
        return v8(v4, v1);
      }
      else
      {
        return sub_10014FD40(v4, 2701, 0);
      }
    }
  }
  if (*(unsigned char *)(v3 + 184 * v2 + 12) && ((0x7FFFFD59uLL >> v6) & 1) != 0)
  {
    uint64_t v9 = 2701;
LABEL_26:
    uint64_t result = sub_10014FCB0(v4, v9);
    if (!result) {
      return result;
    }
    uint64_t v10 = result;
    unsigned int v11 = v4;
    unsigned int v12 = 2;
    goto LABEL_28;
  }
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))*i)(v4, v1);
  if (result == 412) {
    return result;
  }
  uint64_t v9 = result;
  if (result) {
    goto LABEL_26;
  }
  if (!*(unsigned char *)(qword_100A04128 + 1512)) {
    return result;
  }
LABEL_20:
  uint64_t result = sub_10014FD40(v4, 0, 0);
  if (!result) {
    return result;
  }
  uint64_t v10 = result;
  unsigned int v11 = v4;
  unsigned int v12 = 1;
LABEL_28:

  return sub_100152814(v11, v12, v10);
}

uint64_t sub_100153004(unsigned __int16 a1)
{
  int v4 = 0;
  uint64_t v5 = 0;
  int v2 = 8;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v2);
  return 0;
}

uint64_t sub_10015304C(unsigned int a1, uint64_t a2)
{
  uint64_t v3 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v3) != a1)
  {
    v3 += 184;
    if (v3 == 1472) {
      return 1802;
    }
  }
  uint64_t v5 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v5) {
    return 134;
  }
  __int16 v6 = sub_100262F1C(v5);
  uint64_t v7 = 0;
  uint64_t v8 = qword_100A04128;
  *(_WORD *)(qword_100A04128 + v3 + 86) = v6;
  v29[0] = 0;
  v29[1] = 0;
  while (*(unsigned __int16 *)(v8 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472)
    {
      uint64_t v9 = 1802;
      goto LABEL_12;
    }
  }
  unsigned __int16 v13 = *(_WORD *)(v8 + 1508);
  uint64_t v9 = sub_10026314C((uint64_t)v29, 0x15uLL);
  if (v9) {
    goto LABEL_12;
  }
  uint64_t v14 = 0;
  if ((*(_WORD *)(qword_100A04128 + v7 + 86) & 0x80) != 0) {
    unsigned __int16 v15 = v13;
  }
  else {
    unsigned __int16 v15 = v13 & 0xFDFF;
  }
  while (*(unsigned __int16 *)(qword_100A04128 + v14) != a1)
  {
    v14 += 184;
    if (v14 == 1472)
    {
      uint64_t v16 = 0;
      goto LABEL_23;
    }
  }
  uint64_t v16 = qword_100A04128 + v14 + 80;
LABEL_23:
  uint64_t v28 = 0;
  sub_10017E2D4(v16, &v28);
  if (v28)
  {
    uint64_t v23 = sub_10024EA9C(v28);
    if (v23)
    {
      if (*((unsigned __int16 *)v23 + 10) < 0x107u) {
        v15 &= 0xF3FFu;
      }
    }
  }
  uint64_t v24 = sub_1002639B0((uint64_t)v29, (uint64_t)"\r\n+BRSF:%d\r\n", v17, v18, v19, v20, v21, v22, v15);
  if (v24)
  {
    uint64_t v9 = v24;
    sub_10026319C((uint64_t)v29);
LABEL_12:
    unsigned int v10 = a1;
    unsigned int v11 = 5;
    uint64_t v12 = v9;
    goto LABEL_13;
  }
  uint64_t v25 = (char *)sub_1002639DC((uint64_t)v29);
  unsigned __int16 v26 = strlen(v25);
  uint64_t v9 = sub_10014F934(a1, 5, v25, v26, 1);
  if (v9) {
    goto LABEL_12;
  }
  if (*(unsigned char *)(qword_100A04128 + v3 + 12))
  {
    uint64_t v27 = sub_10014FD40(a1, 0, 0);
    if (!v27) {
      return 412;
    }
    uint64_t v12 = v27;
    unsigned int v10 = a1;
    unsigned int v11 = 1;
LABEL_13:
    sub_100152814(v10, v11, v12);
    return 412;
  }
  return 0;
}

uint64_t sub_10015325C(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x200) == 0 || (*(_WORD *)(qword_100A04128 + v4 + 86) & 0x80) == 0) {
    return 2701;
  }
  *(_DWORD *)(qword_100A04128 + v4 + 144) = 0;
  __int16 v6 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (v6)
  {
    uint64_t v7 = v6;
    while (sub_100262F5C(v7, "1"))
    {
      if (!sub_100262F5C(v7, "2"))
      {
        int v8 = 2;
        goto LABEL_26;
      }
      if (!sub_100262F5C(v7, "127"))
      {
        int v8 = 4;
        goto LABEL_26;
      }
      if (!sub_100262F5C(v7, "255"))
      {
        int v8 = 16;
        goto LABEL_26;
      }
      if (!sub_100262F5C(v7, "256"))
      {
        int v8 = 256;
        goto LABEL_26;
      }
      if (!sub_100262F5C(v7, "128"))
      {
        int v8 = 128;
        goto LABEL_26;
      }
      if (!sub_100262F5C(v7, "129"))
      {
        int v8 = 512;
        goto LABEL_26;
      }
      if (!sub_100262F5C(v7, "130"))
      {
        int v8 = 1024;
LABEL_26:
        *(_DWORD *)(qword_100A04128 + v4 + 144) |= v8;
      }
      uint64_t v7 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
      if (!v7) {
        goto LABEL_28;
      }
    }
    int v8 = 1;
    goto LABEL_26;
  }
LABEL_28:
  uint64_t v9 = qword_100A04128;
  unsigned int v10 = *(_DWORD *)(qword_100A04128 + v4 + 144) & *(_DWORD *)(qword_100A04128 + 1520);
  if ((v10 & 0x100) != 0)
  {
    *(void *)(qword_100A04128 + v4 + 88) |= 1uLL;
    if ((v10 & 0x80) == 0)
    {
LABEL_30:
      if ((v10 & 2) == 0) {
        goto LABEL_31;
      }
      goto LABEL_43;
    }
  }
  else if ((v10 & 0x80) == 0)
  {
    goto LABEL_30;
  }
  *(void *)(v9 + v4 + 88) |= 4uLL;
  if ((v10 & 2) == 0)
  {
LABEL_31:
    if ((v10 & 4) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  *(void *)(v9 + v4 + 88) |= 2uLL;
  if ((v10 & 4) == 0)
  {
LABEL_32:
    if ((v10 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  *(void *)(v9 + v4 + 88) |= 8uLL;
  if ((v10 & 0x10) == 0)
  {
LABEL_33:
    if ((v10 & 0x200) == 0) {
      goto LABEL_34;
    }
LABEL_46:
    *(void *)(v9 + v4 + 88) |= 0x20uLL;
    if ((v10 & 0x400) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
LABEL_45:
  *(void *)(v9 + v4 + 88) |= 0x10uLL;
  if ((v10 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_34:
  if ((v10 & 0x400) != 0) {
LABEL_35:
  }
    *(void *)(v9 + v4 + 88) |= 0x40uLL;
LABEL_36:
  uint64_t v11 = sub_10014FD40(a1, 0, 0);
  if (v11) {
    sub_100152814(a1, 1u, v11);
  }
  if (!*(unsigned char *)(qword_100A04128 + v4 + 12))
  {
    uint64_t v14 = 0;
    v12[0] = 28;
    v12[1] = (unsigned __int16)a1;
    uint64_t v13 = v10;
    (*(void (**)(_DWORD *))(qword_100A04128 + 1480))(v12);
  }
  return 412;
}

uint64_t sub_100153548(__int16 a1, uint64_t a2)
{
  unsigned __int16 v9 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), &v9);
  if (!v3) {
    return 134;
  }
  uint64_t v4 = v9 - 1;
  if (v3[v4] != 59) {
    return 134;
  }
  v3[v4] = 0;
  if (*v3 == 62)
  {
    LODWORD(v6) = 11;
    WORD2(v6) = a1;
    LOWORD(v7) = sub_100262F1C(v3 + 1);
  }
  else
  {
    LODWORD(v6) = 10;
    WORD2(v6) = a1;
    uint64_t v7 = v3;
  }
  (*(void (**)(uint64_t *))(qword_100A04128 + 1480))(&v6);
  return 0;
}

uint64_t sub_100153604(unsigned __int16 a1, uint64_t a2)
{
  if ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0) {
    return 2701;
  }
  int v8 = 0;
  uint64_t v9 = 0;
  int v6 = 20;
  uint64_t v7 = a1;
  uint64_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v3) {
    return 134;
  }
  int v4 = *v3;
  if (v4 == 48)
  {
    char v5 = 0;
    goto LABEL_9;
  }
  if (v4 != 49) {
    return 134;
  }
  char v5 = 1;
LABEL_9:
  BYTE4(v7) = v5;
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v6);
  return 0;
}

uint64_t sub_1001536AC(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = a1;
  uint64_t v4 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  v26[0] = 0;
  v26[1] = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  if (*(unsigned char *)(qword_100A04128 + 1511))
  {
    (*(void (**)(uint64_t, uint64_t))(qword_100A04128 + 1488))(a1, a2);
    if (!*(_DWORD *)a2) {
      goto LABEL_9;
    }
    return 412;
  }
  if ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0) {
    return 2701;
  }
  if (*(_DWORD *)a2 == 2)
  {
    LODWORD(v27) = 15;
    WORD2(v27) = a1;
    uint64_t v16 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (!v16) {
      return 134;
    }
    int v17 = sub_100262F1C(v16);
    LODWORD(v28) = v17;
    if ((*(unsigned char *)(qword_100A04128 + 1508) & 0x80) != 0 || v17 <= 4)
    {
      (*(void (**)(uint64_t *))(qword_100A04128 + 1480))(&v27);
      return 0;
    }
    return 2701;
  }
  if (*(_DWORD *)a2) {
    return 2701;
  }
  uint64_t v5 = sub_10026314C((uint64_t)v26, 0x1DuLL);
  if (v5) {
    return v5;
  }
  uint64_t v13 = sub_1002639B0((uint64_t)v26, (uint64_t)"\r\n+CHLD: (", v7, v8, v9, v10, v11, v12, v25);
  if (v13) {
    goto LABEL_24;
  }
  uint64_t v14 = qword_100A04128;
  if (*(unsigned char *)(qword_100A04128 + 1510))
  {
    uint64_t v13 = sub_100057604((uint64_t)v26, "0,");
    if (v13) {
      goto LABEL_24;
    }
    uint64_t v14 = qword_100A04128;
  }
  if ((*(_WORD *)(v14 + 1508) & 0x80) != 0) {
    unsigned __int16 v15 = "1,1x,2,2x";
  }
  else {
    unsigned __int16 v15 = "1,2";
  }
  uint64_t v13 = sub_100057604((uint64_t)v26, v15);
  if (v13) {
    goto LABEL_24;
  }
  char v18 = *(unsigned char *)(qword_100A04128 + 1510);
  if ((v18 & 8) != 0)
  {
    uint64_t v13 = sub_100057604((uint64_t)v26, ",3");
    if (!v13)
    {
      char v18 = *(unsigned char *)(qword_100A04128 + 1510);
      goto LABEL_34;
    }
LABEL_24:
    uint64_t v5 = v13;
    sub_10026319C((uint64_t)v26);
    return v5;
  }
LABEL_34:
  if ((v18 & 0x10) != 0)
  {
    uint64_t v13 = sub_100057604((uint64_t)v26, ",4");
    if (v13) {
      goto LABEL_24;
    }
  }
  uint64_t v13 = sub_100057604((uint64_t)v26, ")\r\n");
  if (v13) {
    goto LABEL_24;
  }
  uint64_t v19 = (char *)sub_1002639DC((uint64_t)v26);
  unsigned __int16 v20 = strlen(v19);
  uint64_t v21 = sub_10014F934(v3, 3, v19, v20, 1);
  if (v21)
  {
    unsigned int v22 = v3;
    unsigned int v23 = 3;
  }
  else
  {
    uint64_t v24 = sub_10014FD40(v3, 0, v21);
    if (!v24)
    {
LABEL_9:
      if (*(unsigned char *)(qword_100A04128 + v4 + 12)) {
        sub_10015579C(v3);
      }
      return 412;
    }
    uint64_t v21 = v24;
    unsigned int v22 = v3;
    unsigned int v23 = 1;
  }
  sub_100152814(v22, v23, v21);
  return 412;
}

uint64_t sub_100153914(unsigned __int16 a1)
{
  int v4 = 0;
  uint64_t v5 = 0;
  int v2 = 9;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v2);
  return 0;
}

uint64_t sub_10015395C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a1;
  if (!*(unsigned char *)(qword_100A04128 + 1511))
  {
    v20[0] = 0;
    v20[1] = 0;
    if (*a2)
    {
      if (*a2 != 1) {
        return 2701;
      }
      if (*(_WORD *)(qword_100A04128 + 1508)) {
        size_t v3 = 23;
      }
      else {
        size_t v3 = 21;
      }
      uint64_t v10 = sub_10026314C((uint64_t)v20, v3);
      if (v10) {
        goto LABEL_28;
      }
      if (*(unsigned char *)(qword_100A04128 + 1513)) {
        uint64_t v11 = 49;
      }
      else {
        uint64_t v11 = 48;
      }
      if (*(_WORD *)(qword_100A04128 + 1508)) {
        uint64_t v12 = sub_1002639B0((uint64_t)v20, (uint64_t)"\r\n+CIND: %c,%c,%d,%d,%d,%c,%d\r\n", v4, v5, v6, v7, v8, v9, v11);
      }
      else {
        uint64_t v12 = sub_1002639B0((uint64_t)v20, (uint64_t)"\r\n+CIND: %c,%c,%d,%d,%d,%c\r\n", v4, v5, v6, v7, v8, v9, v11);
      }
      uint64_t v10 = v12;
      if (v12)
      {
        sub_10026319C((uint64_t)v20);
LABEL_28:
        sub_100152814(v2, 4u, v10);
        return 412;
      }
      uint64_t v19 = (const char *)sub_1002639DC((uint64_t)v20);
      size_t v16 = (unsigned __int16)strlen(v19);
      LODWORD(a1) = v2;
      unsigned __int16 v15 = (char *)v19;
      int v17 = 1;
    }
    else
    {
      __int16 v13 = *(_WORD *)(qword_100A04128 + 1508);
      if ((v13 & 0xC0) == 0 || (v13 & 1) == 0) {
        unsigned __int16 v15 = "\r\n"
      }
              "+CIND: (\"service\",(0-1)),(\"call\",(0-1)),(\"callsetup\",(0-3)),(\"battchg\",(0-5)),(\"signal\",(0-5)),("
              "\"roam\",(0-1)),(\"callheld\",(0-1))\r\n";
      else {
        unsigned __int16 v15 = "\r\n"
      }
              "+CIND: (\"service\",(0-1)),(\"call\",(0-1)),(\"callsetup\",(0-3)),(\"battchg\",(0-5)),(\"signal\",(0-5)),("
              "\"roam\",(0-1)),(\"callheld\",(0-2))\r\n";
      size_t v16 = 132;
      int v17 = 0;
    }
    uint64_t v10 = sub_10014F934(a1, 4, v15, v16, v17);
    if (!v10)
    {
      uint64_t v10 = sub_10014FD40(v2, 0, 0);
      if (!v10) {
        return 412;
      }
    }
    goto LABEL_28;
  }
  (*(void (**)(uint64_t))(qword_100A04128 + 1488))(a1);
  return 412;
}

uint64_t sub_100153B14(unsigned int a1, uint64_t a2)
{
  size_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v3) {
    return 134;
  }
  uint64_t v4 = v3;
  if ((sub_10014FBB0(a1) & 4) == 0) {
    return 2701;
  }
  int v6 = *v4;
  if (v6 == 48)
  {
    uint64_t v8 = 0;
    while (*(unsigned __int16 *)(qword_100A04128 + v8) != a1)
    {
      v8 += 184;
      if (v8 == 1472) {
        goto LABEL_17;
      }
    }
    *(_DWORD *)(qword_100A04128 + v8 + 132) = 0;
    goto LABEL_17;
  }
  if (v6 != 49) {
    return 134;
  }
  uint64_t v7 = 0;
  while (*(unsigned __int16 *)(qword_100A04128 + v7) != a1)
  {
    v7 += 184;
    if (v7 == 1472) {
      goto LABEL_17;
    }
  }
  *(_DWORD *)(qword_100A04128 + v7 + 132) = 1;
LABEL_17:
  uint64_t v9 = sub_10014FD40(a1, 0, 0);
  if (v9) {
    sub_100152814(a1, 1u, v9);
  }
  return 412;
}

uint64_t sub_100153C10(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = a1;
  uint64_t v4 = 0;
  uint64_t v5 = qword_100A04128;
  while (*(unsigned __int16 *)(qword_100A04128 + v4) != a1)
  {
    v4 += 184;
    if (v4 == 1472) {
      return 1802;
    }
  }
  if (*(unsigned char *)(qword_100A04128 + 1511))
  {
    uint64_t v7 = 0;
    while (*(unsigned __int16 *)(qword_100A04128 + v7) != a1)
    {
      v7 += 184;
      if (v7 == 1472) {
        goto LABEL_36;
      }
    }
    *(_DWORD *)(qword_100A04128 + v7 + 140) = 2;
LABEL_36:
    (*(void (**)(uint64_t, uint64_t))(v5 + 1488))(a1, a2);
    if (*(unsigned char *)(qword_100A04128 + v4 + 12)
      && ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0 || (sub_10014FBB0(v3) & 2) == 0))
    {
      sub_10015579C(v3);
    }
    return 412;
  }
  uint64_t v8 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v8)
  {
LABEL_29:
    if (*(unsigned char *)(qword_100A04128 + v4 + 12)
      && ((*(_WORD *)(qword_100A04128 + 1508) & 1) == 0 || (sub_10014FBB0(v3) & 2) == 0))
    {
      sub_10015579C(v3);
    }
    uint64_t v13 = sub_10014FD40(v3, 0, 0);
    if (v13) {
      sub_100152814(v3, 1u, v13);
    }
    return 412;
  }
  int v9 = 0;
  while (v9 != 3)
  {
    if (!v9 && *v8 != 51) {
      return 134;
    }
LABEL_28:
    ++v9;
    uint64_t v8 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (!v8) {
      goto LABEL_29;
    }
  }
  int v10 = *v8;
  if (v10 == 48)
  {
    uint64_t v12 = 0;
    while (*(unsigned __int16 *)(qword_100A04128 + v12) != v3)
    {
      v12 += 184;
      if (v12 == 1472) {
        goto LABEL_28;
      }
    }
    *(_DWORD *)(qword_100A04128 + v12 + 140) = 0;
    goto LABEL_28;
  }
  if (v10 == 49)
  {
    uint64_t v11 = 0;
    while (*(unsigned __int16 *)(qword_100A04128 + v11) != v3)
    {
      v11 += 184;
      if (v11 == 1472) {
        goto LABEL_28;
      }
    }
    *(_DWORD *)(qword_100A04128 + v11 + 140) = 1;
    goto LABEL_28;
  }
  return 101;
}

uint64_t sub_100153E20(__int16 a1, uint64_t a2)
{
  if (!sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0)) {
    return 134;
  }
  memset(v12, 0, sizeof(v12));
  if ((*(unsigned char *)(qword_100A04128 + 1508) & 0x10) != 0)
  {
    LODWORD(v12[0]) = 14;
    WORD2(v12[0]) = a1;
    (*(void (**)(void *))(qword_100A04128 + 1480))(v12);
    return 0;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Input request not supported, rejecting %d", v3, v4, v5, v6, v7, v8, v9, *(unsigned __int16 *)(qword_100A04128 + 1508));
      int v10 = sub_100050B4C(0x10u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 2701;
  }
}

uint64_t sub_100153EF0(unsigned __int16 a1)
{
  int v4 = 0;
  uint64_t v5 = 0;
  int v2 = 12;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v2);
  return 0;
}

uint64_t sub_100153F38(__int16 a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  if ((*(unsigned char *)(qword_100A04128 + 1508) & 4) != 0)
  {
    LODWORD(v15) = 13;
    WORD2(v15) = a1;
    uint64_t v11 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v11)
    {
      int v12 = *v11;
      if (v12 == 49)
      {
        char v13 = 1;
        goto LABEL_12;
      }
      if (v12 == 48)
      {
        char v13 = 0;
LABEL_12:
        LOBYTE(v16) = v13;
        (*(void (**)(uint64_t *))(qword_100A04128 + 1480))(&v15);
        return 0;
      }
    }
    return 134;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Voice recognition not supported, rejecting", v2, v3, v4, v5, v6, v7, v8, v14);
    uint64_t v9 = sub_100050B4C(0x10u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return 2701;
}

uint64_t sub_100154020(__int16 a1, uint64_t a2)
{
  if ((*(_WORD *)(qword_100A04128 + 1508) & 2) == 0) {
    return 2701;
  }
  uint64_t v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v4) {
    return 101;
  }
  memset(v5, 0, sizeof(v5));
  if (*v4 != 48) {
    return 101;
  }
  LODWORD(v5[0]) = 16;
  WORD2(v5[0]) = a1;
  (*(void (**)(void *))(qword_100A04128 + 1480))(v5);
  return 0;
}

uint64_t sub_1001540B4(unsigned int a1, uint64_t a2)
{
  if (*(_DWORD *)a2)
  {
    uint64_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v3)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      int v4 = *v3;
      if ((v4 - 48) < 0xA || v4 == 35 || v4 == 42 || (v4 - 65) <= 3)
      {
        LODWORD(v7) = 19;
        WORD2(v7) = a1;
        LOBYTE(v8) = v4;
        (*(void (**)(uint64_t *))(qword_100A04128 + 1480))(&v7);
        return 0;
      }
      else
      {
        return 101;
      }
    }
    else
    {
      return 134;
    }
  }
  else
  {
    uint64_t v6 = sub_10014FD40(a1, 0, 0);
    if (v6) {
      sub_100152814(a1, 1u, v6);
    }
    return 412;
  }
}

uint64_t sub_100154194(unsigned __int16 a1, uint64_t a2)
{
  int v6 = 0;
  uint64_t v7 = 0;
  int v4 = 17;
  uint64_t v5 = a1;
  uint64_t v2 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v2) {
    return 134;
  }
  BYTE4(v5) = sub_100262F1C(v2);
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v4);
  return 0;
}

uint64_t sub_100154204(unsigned __int16 a1, uint64_t a2)
{
  int v6 = 0;
  uint64_t v7 = 0;
  int v4 = 18;
  uint64_t v5 = a1;
  uint64_t v2 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
  if (!v2) {
    return 134;
  }
  BYTE4(v5) = sub_100262F1C(v2);
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v4);
  return 0;
}

uint64_t sub_100154274(__int16 a1, uint64_t a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  if (*(_DWORD *)a2 == 2)
  {
    uint64_t v3 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v3)
    {
      LODWORD(v5) = 26;
      WORD2(v5) = a1;
      LODWORD(v6) = sub_100262F1C(v3);
      goto LABEL_6;
    }
    return 134;
  }
  else
  {
    if (*(_DWORD *)a2 == 1)
    {
      LODWORD(v5) = 25;
      WORD2(v5) = a1;
LABEL_6:
      (*(void (**)(uint64_t *))(qword_100A04128 + 1480))(&v5);
      return 0;
    }
    return 2701;
  }
}

uint64_t sub_10015431C(unsigned __int16 a1, _DWORD *a2)
{
  if (*a2 != 2) {
    return 2701;
  }
  int v5 = 0;
  uint64_t v6 = 0;
  int v3 = 24;
  uint64_t v4 = a1;
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v3);
  return 0;
}

uint64_t sub_100154378(unsigned __int16 a1)
{
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x40) == 0) {
    return 2701;
  }
  int v4 = 0;
  uint64_t v5 = 0;
  int v2 = 22;
  uint64_t v3 = a1;
  (*(void (**)(int *))(qword_100A04128 + 1480))(&v2);
  return 0;
}

uint64_t sub_1001543D0(unsigned int a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 2)
  {
    uint64_t v5 = (unsigned __int8 **)(a2 + 24);
    uint64_t v6 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (v6
      && sub_100262F1C(v6) == 3
      && (uint64_t v7 = sub_100131318(a2, v5, 0)) != 0
      && !sub_100262F1C(v7))
    {
      uint64_t v8 = sub_10014FD40(a1, 0, 0);
      if (v8) {
        sub_100152814(a1, 1u, v8);
      }
      return 412;
    }
    else
    {
      return 134;
    }
  }
  else if (*(_DWORD *)a2 == 1)
  {
    int v11 = 0;
    uint64_t v12 = 0;
    int v9 = 23;
    uint64_t v10 = (unsigned __int16)a1;
    (*(void (**)(int *))(qword_100A04128 + 1480))(&v9);
    return 0;
  }
  else
  {
    return 2701;
  }
}

uint64_t sub_1001544C0(unsigned int a1, uint64_t a2)
{
  if ((*(_WORD *)(qword_100A04128 + 1508) & 0x100) != 0)
  {
    int v4 = sub_100131318(a2, (unsigned __int8 **)(a2 + 24), 0);
    if (!v4) {
      return 134;
    }
    int v5 = *v4;
    if (v5 == 48)
    {
      uint64_t v8 = 0;
      while (*(unsigned __int16 *)(qword_100A04128 + v8) != a1)
      {
        v8 += 184;
        if (v8 == 1472) {
          goto LABEL_18;
        }
      }
      *(_DWORD *)(qword_100A04128 + v8 + 136) = 0;
    }
    else
    {
      if (v5 != 49) {
        return 101;
      }
      uint64_t v6 = 0;
      while (*(unsigned __int16 *)(qword_100A04128 + v6) != a1)
      {
        v6 += 184;
        if (v6 == 1472) {
          goto LABEL_18;
        }
      }
      *(_DWORD *)(qword_100A04128 + v6 + 136) = 1;
    }
LABEL_18:
    uint64_t v3 = sub_10014FD40(a1, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_10014FCB0(a1, 2707);
  }
  if (v3) {
    sub_100152814(a1, 1u, v3);
  }
  return 412;
}

uint64_t sub_1001545C4(unsigned int a1, _DWORD *a2)
{
  if (*a2 != 2) {
    return 2701;
  }
  v20[0] = 0;
  v20[1] = 0;
  uint64_t v3 = sub_10026314C((uint64_t)v20, 0x10uLL);
  if (!v3)
  {
    uint64_t v11 = sub_1002639B0((uint64_t)v20, (uint64_t)"\r\n+CSQ: %d,%d\r\n", v4, v5, v6, v7, v8, v9, byte_1007B95B0[*(unsigned __int8 *)(qword_100A04128 + 1518)]);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_10026319C((uint64_t)v20);
      unsigned int v13 = a1;
      unsigned int v14 = 25;
      uint64_t v15 = v12;
    }
    else
    {
      uint64_t v16 = (char *)sub_1002639DC((uint64_t)v20);
      unsigned __int16 v17 = strlen(v16);
      uint64_t v15 = sub_10014F934(a1, 25, v16, v17, 1);
      if (v15)
      {
        unsigned int v13 = a1;
        unsigned int v14 = 25;
      }
      else
      {
        uint64_t v18 = sub_10014FD40(a1, 0, v15);
        if (!v18) {
          return 412;
        }
        uint64_t v15 = v18;
        unsigned int v13 = a1;
        unsigned int v14 = 1;
      }
    }
    sub_100152814(v13, v14, v15);
    return 412;
  }
  uint64_t v10 = v3;
  sub_100152814(a1, 0x19u, v3);
  return v10;
}

uint64_t sub_1001546E0(unsigned int a1, _DWORD *a2)
{
  if (*a2 != 2) {
    return 2701;
  }
  v22[0] = 0;
  v22[1] = 0;
  uint64_t v3 = sub_10026314C((uint64_t)v22, 0xDuLL);
  if (!v3)
  {
    if (*(unsigned char *)(qword_100A04128 + 1514))
    {
      uint64_t v11 = 4;
    }
    else
    {
      unsigned int v12 = *(unsigned __int8 *)(qword_100A04128 + 1515) - 1;
      if (v12 > 2) {
        uint64_t v11 = 0;
      }
      else {
        uint64_t v11 = dword_1007B95B8[(char)v12];
      }
    }
    uint64_t v13 = sub_1002639B0((uint64_t)v22, (uint64_t)"\r\n+CPAS: %d\r\n", v4, v5, v6, v7, v8, v9, v11);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_10026319C((uint64_t)v22);
      unsigned int v15 = a1;
      unsigned int v16 = 25;
      uint64_t v17 = v14;
    }
    else
    {
      uint64_t v18 = (char *)sub_1002639DC((uint64_t)v22);
      unsigned __int16 v19 = strlen(v18);
      uint64_t v17 = sub_10014F934(a1, 25, v18, v19, 1);
      if (v17)
      {
        unsigned int v15 = a1;
        unsigned int v16 = 25;
      }
      else
      {
        uint64_t v20 = sub_10014FD40(a1, 0, v17);
        if (!v20) {
          return 412;
        }
        uint64_t v17 = v20;
        unsigned int v15 = a1;
        unsigned int v16 = 1;
      }
    }
    sub_100152814(v15, v16, v17);
    return 412;
  }
  uint64_t v10 = v3;
  sub_100152814(a1, 0x19u, v3);
  return v10;
}