uint64_t sub_1001C7258(__int16 a1, __int16 a2, const void *a3, int a4, const void *a5, int a6, char a7, char a8, char a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  uint64_t v23;
  int v24;
  unsigned __int16 v25;
  uint64_t v26;
  int v27;
  int v28;
  unsigned __int16 v29;
  uint64_t v30;
  int v31;
  unsigned __int16 v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int16 v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  const char *v43;
  const char *v44;
  const char *v45;
  const char *v46;
  const char *v47;
  const char *v48;
  const char *v49;
  const char *v50;
  const char *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;

  v53 = 0;
  v54 = 0;
  result = sub_100059D70(&v53);
  if (!result)
  {
    if (HIBYTE(v54))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      v19 = WORD2(v54);
      if (WORD1(v54) > WORD2(v54))
      {
        if (BYTE6(v54) == 2)
        {
          ++WORD2(v54);
          *(unsigned char *)(v53 + v19) = 90;
          if (HIBYTE(v54))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            v20 = WORD2(v54);
            if (WORD1(v54) > WORD2(v54))
            {
              if (BYTE6(v54) == 2)
              {
                ++WORD2(v54);
                *(unsigned char *)(v53 + v20) = 1;
                if (HIBYTE(v54))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v54) - WORD2(v54) > 1)
                {
                  if (BYTE6(v54) == 2)
                  {
                    *(_WORD *)(v53 + WORD2(v54)) = a1;
                    v21 = WORD2(v54) + 2;
                    WORD2(v54) += 2;
                    if (HIBYTE(v54))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else if (WORD1(v54) - v21 > 1)
                    {
                      if (BYTE6(v54) == 2)
                      {
                        *(unsigned char *)(v53 + v21) = a2;
                        *(unsigned char *)(v53 + WORD2(v54) + 1) = HIBYTE(a2);
                        v22 = WORD2(v54) + 2;
                        WORD2(v54) += 2;
                        v23 = v53;
                        if (HIBYTE(v54))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          v24 = 0;
                        }
                        else
                        {
                          v24 = WORD1(v54) - v22;
                        }
                        if (v24 < a4)
                        {
                          v46 = "ByteStream_NumReadBytesAvail(bs) >= (maskLen)";
                        }
                        else
                        {
                          if (BYTE6(v54) == 2)
                          {
                            memmove((void *)(v23 + v22), a3, a4);
                            v25 = WORD2(v54) + a4;
                            WORD2(v54) += a4;
                            v26 = v53;
                            if (HIBYTE(v54))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                              v27 = 0;
                            }
                            else
                            {
                              v27 = WORD1(v54) - v25;
                            }
                            v28 = 27 - a4;
                            if (v27 < v28)
                            {
                              v47 = "ByteStream_NumReadBytesAvail(bs) >= (27 - maskLen)";
                            }
                            else
                            {
                              if (BYTE6(v54) == 2)
                              {
                                bzero((void *)(v26 + v25), v28);
                                v29 = WORD2(v54) + v28;
                                WORD2(v54) = v29;
                                v30 = v53;
                                if (HIBYTE(v54))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                  v31 = 0;
                                }
                                else
                                {
                                  v31 = WORD1(v54) - v29;
                                }
                                if (v31 < a6)
                                {
                                  v48 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                                }
                                else
                                {
                                  if (BYTE6(v54) == 2)
                                  {
                                    memmove((void *)(v30 + v29), a5, a6);
                                    v32 = WORD2(v54) + a6;
                                    WORD2(v54) += a6;
                                    v33 = v53;
                                    if (HIBYTE(v54))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                      v34 = 0;
                                    }
                                    else
                                    {
                                      v34 = WORD1(v54) - v32;
                                    }
                                    v35 = 27 - a6;
                                    if (v34 < v35)
                                    {
                                      v49 = "ByteStream_NumReadBytesAvail(bs) >= (27 - blobLen)";
                                    }
                                    else
                                    {
                                      if (BYTE6(v54) == 2)
                                      {
                                        bzero((void *)(v33 + v32), v35);
                                        v39 = WORD2(v54) + v35;
                                        WORD2(v54) += v35;
                                        if (HIBYTE(v54))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else if (WORD1(v54) > v39)
                                        {
                                          if (BYTE6(v54) == 2)
                                          {
                                            WORD2(v54) = v39 + 1;
                                            *(unsigned char *)(v53 + v39) = a7;
                                            if (HIBYTE(v54))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/bcm/bcm_vsc.c");
                                            }
                                            else
                                            {
                                              v40 = WORD2(v54);
                                              if (WORD1(v54) > WORD2(v54))
                                              {
                                                if (BYTE6(v54) == 2)
                                                {
                                                  ++WORD2(v54);
                                                  *(unsigned char *)(v53 + v40) = a8;
                                                  if (HIBYTE(v54))
                                                  {
                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                  else
                                                  {
                                                    v41 = WORD2(v54);
                                                    if (WORD1(v54) > WORD2(v54))
                                                    {
                                                      if (BYTE6(v54) == 2)
                                                      {
                                                        ++WORD2(v54);
                                                        *(unsigned char *)(v53 + v41) = a9;
                                                        return sub_10001BCBC(233, v53, BYTE4(v54), a10, (uint64_t)sub_1000260B4, v36, v37, v38);
                                                      }
                                                      v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_84:
                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3573, v52);
                                                    }
                                                  }
                                                  v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                  goto LABEL_84;
                                                }
                                                v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_80:
                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3572, v51);
                                              }
                                            }
                                            v51 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                            goto LABEL_80;
                                          }
                                          v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_76:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3571, v50);
                                        }
                                        v50 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_76;
                                      }
                                      v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                    }
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3570, v49);
                                  }
                                  v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                }
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3569, v48);
                              }
                              v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                            }
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3568, v47);
                          }
                          v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                        }
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3567, v46);
                      }
                      v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_60:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3566, v45);
                    }
                    v45 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_60;
                  }
                  v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_56:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3565, v44);
                }
                v44 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_56;
              }
              v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3564, v43);
            }
          }
          v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_52;
        }
        v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3563, v42);
      }
    }
    v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_48;
  }
  return result;
}

uint64_t sub_1001C78BC(__int16 a1, uint64_t a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v8) = 90;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v9 = WORD2(v14);
            if (WORD1(v14) > WORD2(v14))
            {
              if (BYTE6(v14) == 2)
              {
                ++WORD2(v14);
                *(unsigned char *)(v13 + v9) = 2;
                if (HIBYTE(v14))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v14) - WORD2(v14) > 1)
                {
                  if (BYTE6(v14) == 2)
                  {
                    *(_WORD *)(v13 + WORD2(v14)) = a1;
                    WORD2(v14) += 2;
                    return sub_10001BCBC(233, v13, BYTE4(v14), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
                  }
                  v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3587, v12);
                }
                v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_24;
              }
              v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3586, v11);
            }
          }
          v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }
        v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3585, v10);
      }
    }
    v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001C7AA8(uint64_t a1)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v6 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v6) = 90;
          if (HIBYTE(v11))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v7 = WORD2(v11);
            if (WORD1(v11) > WORD2(v11))
            {
              if (BYTE6(v11) == 2)
              {
                ++WORD2(v11);
                *(unsigned char *)(v10 + v7) = 3;
                return sub_10001BCBC(233, v10, BYTE4(v11), a1, (uint64_t)sub_1000260B4, v3, v4, v5);
              }
              uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3600, v9);
            }
          }
          uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3599, v8);
      }
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001C7BFC(__int16 a1, char a2, char a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t result = sub_100059D70(&v29);
  if (!result)
  {
    if (HIBYTE(v30))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v17 = WORD2(v30);
      if (WORD1(v30) > WORD2(v30))
      {
        if (BYTE6(v30) == 2)
        {
          ++WORD2(v30);
          *(unsigned char *)(v29 + v17) = 89;
          if (HIBYTE(v30))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v30) - WORD2(v30) > 1)
          {
            if (BYTE6(v30) == 2)
            {
              *(_WORD *)(v29 + WORD2(v30)) = a1;
              __int16 v18 = WORD2(v30);
              unsigned __int16 v19 = WORD2(v30) + 2;
              WORD2(v30) += 2;
              if (HIBYTE(v30))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v30) > v19)
              {
                if (BYTE6(v30) == 2)
                {
                  WORD2(v30) = v18 + 3;
                  *(unsigned char *)(v29 + v19) = a2;
                  if (HIBYTE(v30))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v20 = WORD2(v30);
                    if (WORD1(v30) > WORD2(v30))
                    {
                      if (BYTE6(v30) == 2)
                      {
                        ++WORD2(v30);
                        *(unsigned char *)(v29 + v20) = a3;
                        if (HIBYTE(v30))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v21 = WORD2(v30);
                          if (WORD1(v30) > WORD2(v30))
                          {
                            if (BYTE6(v30) == 2)
                            {
                              ++WORD2(v30);
                              *(unsigned char *)(v29 + v21) = a4;
                              if (HIBYTE(v30))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v22 = WORD2(v30);
                                if (WORD1(v30) > WORD2(v30))
                                {
                                  if (BYTE6(v30) == 2)
                                  {
                                    ++WORD2(v30);
                                    *(unsigned char *)(v29 + v22) = a6;
                                    return sub_10001BCBC(233, v29, BYTE4(v30), a7, (uint64_t)sub_1000260B4, v14, v15, v16);
                                  }
                                  v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3618, v28);
                                }
                              }
                              v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_45;
                            }
                            v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3617, v27);
                          }
                        }
                        v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_41;
                      }
                      v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3615, v26);
                    }
                  }
                  v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }
                v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3614, v25);
              }
              v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_33;
            }
            v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3613, v24);
          }
          v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }
        v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3612, v23);
      }
    }
    v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1001C7F6C(__int16 a1, char a2, char a3, unsigned int a4, int *a5, char a6, char a7, __int16 a8, __int16 a9, char a10, char a11, char a12, char a13, __int16 a14, uint64_t a15)
{
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t result = sub_100059D70(&v60);
  if (!result)
  {
    if (HIBYTE(v61))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v27 = WORD2(v61);
      if (WORD1(v61) > WORD2(v61))
      {
        if (BYTE6(v61) == 2)
        {
          ++WORD2(v61);
          *(unsigned char *)(v60 + v27) = 13;
          if (HIBYTE(v61))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v61) - WORD2(v61) > 1)
          {
            if (BYTE6(v61) == 2)
            {
              *(_WORD *)(v60 + WORD2(v61)) = a1;
              __int16 v28 = WORD2(v61);
              unsigned __int16 v29 = WORD2(v61) + 2;
              WORD2(v61) += 2;
              if (HIBYTE(v61))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v61) > v29)
              {
                if (BYTE6(v61) == 2)
                {
                  WORD2(v61) = v28 + 3;
                  *(unsigned char *)(v60 + v29) = a2;
                  if (HIBYTE(v61))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v30 = WORD2(v61);
                    if (WORD1(v61) > WORD2(v61))
                    {
                      if (BYTE6(v61) == 2)
                      {
                        ++WORD2(v61);
                        *(unsigned char *)(v60 + v30) = a3;
                        if (!a4) {
                          goto LABEL_36;
                        }
                        uint64_t v31 = a4;
                        do
                        {
                          int v33 = *a5++;
                          int v32 = v33;
                          if (v33 == 762) {
                            char v34 = 62;
                          }
                          else {
                            char v34 = 0;
                          }
                          if (v32 == 761) {
                            char v34 = 61;
                          }
                          if (v32 == 734) {
                            char v34 = 34;
                          }
                          if (v32 == 719) {
                            char v35 = 19;
                          }
                          else {
                            char v35 = 0;
                          }
                          if (v32 == 708) {
                            char v35 = 8;
                          }
                          if (v32 <= 733) {
                            char v36 = v35;
                          }
                          else {
                            char v36 = v34;
                          }
                          if (HIBYTE(v61))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_70:
                            v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_72:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3662, v48);
                          }
                          uint64_t v37 = WORD2(v61);
                          if (WORD1(v61) <= WORD2(v61)) {
                            goto LABEL_70;
                          }
                          if (BYTE6(v61) != 2)
                          {
                            v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                            goto LABEL_72;
                          }
                          ++WORD2(v61);
                          *(unsigned char *)(v60 + v37) = v36;
                          --v31;
                        }
                        while (v31);
                        if (a4 <= 4)
                        {
LABEL_36:
                          unsigned int v38 = a4 - 5;
                          while (!HIBYTE(v61))
                          {
                            uint64_t v39 = WORD2(v61);
                            if (WORD1(v61) <= WORD2(v61)) {
                              goto LABEL_66;
                            }
                            if (BYTE6(v61) != 2)
                            {
                              v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_68;
                            }
                            ++WORD2(v61);
                            *(unsigned char *)(v60 + v39) = 0;
                            if (__CFADD__(v38++, 1)) {
                              goto LABEL_42;
                            }
                          }
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_66:
                          v47 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_68:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3665, v47);
                        }
LABEL_42:
                        if (HIBYTE(v61))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v41 = WORD2(v61);
                          if (WORD1(v61) > WORD2(v61))
                          {
                            if (BYTE6(v61) == 2)
                            {
                              ++WORD2(v61);
                              *(unsigned char *)(v60 + v41) = a6;
                              if (HIBYTE(v61))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v42 = WORD2(v61);
                                if (WORD1(v61) > WORD2(v61))
                                {
                                  if (BYTE6(v61) == 2)
                                  {
                                    ++WORD2(v61);
                                    *(unsigned char *)(v60 + v42) = a7;
                                    if (HIBYTE(v61))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else if (WORD1(v61) - WORD2(v61) > 1)
                                    {
                                      if (BYTE6(v61) == 2)
                                      {
                                        *(_WORD *)(v60 + WORD2(v61)) = a9;
                                        unsigned __int16 v43 = WORD2(v61) + 2;
                                        WORD2(v61) += 2;
                                        if (HIBYTE(v61))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else if (WORD1(v61) - v43 > 1)
                                        {
                                          if (BYTE6(v61) == 2)
                                          {
                                            *(unsigned char *)(v60 + v43) = a8;
                                            *(unsigned char *)(v60 + WORD2(v61) + 1) = HIBYTE(a8);
                                            __int16 v44 = WORD2(v61);
                                            unsigned __int16 v45 = WORD2(v61) + 2;
                                            WORD2(v61) += 2;
                                            if (HIBYTE(v61))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/bcm/bcm_vsc.c");
                                            }
                                            else if (WORD1(v61) > v45)
                                            {
                                              if (BYTE6(v61) == 2)
                                              {
                                                WORD2(v61) = v44 + 3;
                                                *(unsigned char *)(v60 + v45) = a10;
                                                if (HIBYTE(v61))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else if (WORD1(v61) - WORD2(v61) > 1)
                                                {
                                                  if (BYTE6(v61) == 2)
                                                  {
                                                    *(_WORD *)(v60 + WORD2(v61)) = a14;
                                                    unsigned __int16 v46 = WORD2(v61) + 2;
                                                    WORD2(v61) += 2;
                                                    if (HIBYTE(v61))
                                                    {
                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                    }
                                                    else if (WORD1(v61) - v46 > 1)
                                                    {
                                                      if (BYTE6(v61) == 2)
                                                      {
                                                        *(unsigned char *)(v60 + v46) = a12;
                                                        *(unsigned char *)(v60 + WORD2(v61) + 1) = a13;
                                                        WORD2(v61) += 2;
                                                        return sub_10001BCBC(291, v60, BYTE4(v61), a15, (uint64_t)sub_1000260B4, v24, v25, v26);
                                                      }
                                                      v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_116:
                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3673, v59);
                                                    }
                                                    v59 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                    goto LABEL_116;
                                                  }
                                                  v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_112:
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3672, v58);
                                                }
                                                v58 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                goto LABEL_112;
                                              }
                                              v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_108:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3671, v57);
                                            }
                                            v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                            goto LABEL_108;
                                          }
                                          v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_104:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3670, v56);
                                        }
                                        v56 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                        goto LABEL_104;
                                      }
                                      v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_100:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3669, v55);
                                    }
                                    v55 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                    goto LABEL_100;
                                  }
                                  v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_96:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3668, v54);
                                }
                              }
                              v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_96;
                            }
                            v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_92:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3667, v53);
                          }
                        }
                        v53 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_92;
                      }
                      v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_88:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3640, v52);
                    }
                  }
                  v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_88;
                }
                v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_84:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3639, v51);
              }
              v51 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_84;
            }
            v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_80:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3638, v50);
          }
          v50 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_80;
        }
        v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_76:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3637, v49);
      }
    }
    v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_76;
  }
  return result;
}

uint64_t sub_1001C8720(char a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = a1;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v12) > WORD2(v12))
          {
            if (BYTE6(v12) == 2)
            {
              *(unsigned char *)(v11 + WORD2(v12)) = 0;
              ++WORD2(v12);
              return sub_10001BCBC(348, v11, BYTE4(v12), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4080, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4079, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001C8874(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v24 = 0;
  uint64_t v6 = sub_10017E2D4(a1, (uint64_t *)&v26);
  if (!v6)
  {
    uint64_t v7 = sub_100059D70(&v24);
    if (v7) {
      return v7;
    }
    if (HIBYTE(v25))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v25) - WORD2(v25) > 1)
    {
      if (BYTE6(v25) == 2)
      {
        *(_WORD *)(v24 + WORD2(v25)) = *v26;
        __int16 v19 = WORD2(v25);
        unsigned __int16 v20 = WORD2(v25) + 2;
        WORD2(v25) += 2;
        if (HIBYTE(v25))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v25) > v20)
        {
          if (BYTE6(v25) == 2)
          {
            WORD2(v25) = v19 + 3;
            *(unsigned char *)(v24 + v20) = a2;
            return sub_10001BCBC(87, v24, BYTE4(v25), a4, (uint64_t)sub_1000260B4, v16, v17, v18);
          }
          v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_21:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4103, v23);
        }
        v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_21;
      }
      uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 4102, v22);
    }
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_17;
  }
  uint64_t v7 = v6;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC Error %!", v8, v9, v10, v11, v12, v13, v14, v7);
    uint64_t v15 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v7;
}

uint64_t sub_1001C8A58(__int16 a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t result = sub_100059D70(&v25);
  if (!result)
  {
    if (HIBYTE(v26))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v26) - WORD2(v26) > 1)
    {
      if (BYTE6(v26) == 2)
      {
        *(_WORD *)(v25 + WORD2(v26)) = a1;
        __int16 v16 = WORD2(v26);
        unsigned __int16 v17 = WORD2(v26) + 2;
        WORD2(v26) += 2;
        if (HIBYTE(v26))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v26) > v17)
        {
          if (BYTE6(v26) == 2)
          {
            WORD2(v26) = v16 + 3;
            *(unsigned char *)(v25 + v17) = a2;
            if (HIBYTE(v26))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v18 = WORD2(v26);
              if (WORD1(v26) > WORD2(v26))
              {
                if (BYTE6(v26) == 2)
                {
                  ++WORD2(v26);
                  *(unsigned char *)(v25 + v18) = a3;
                  if (HIBYTE(v26))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v19 = WORD2(v26);
                    if (WORD1(v26) > WORD2(v26))
                    {
                      if (BYTE6(v26) == 2)
                      {
                        ++WORD2(v26);
                        *(unsigned char *)(v25 + v19) = a4;
                        if (HIBYTE(v26))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v26) > WORD2(v26))
                        {
                          if (BYTE6(v26) == 2)
                          {
                            *(unsigned char *)(v25 + WORD2(v26)) = a5;
                            ++WORD2(v26);
                            return sub_10001BCBC(435, v25, BYTE4(v26), a6, (uint64_t)sub_1000260B4, v13, v14, v15);
                          }
                          uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5099, v24);
                        }
                        uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                        goto LABEL_38;
                      }
                      v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5098, v23);
                    }
                  }
                  v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_34;
                }
                uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5097, v22);
              }
            }
            uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_30;
          }
          uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5096, v21);
        }
        uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_26;
      }
      unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5095, v20);
    }
    unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1001C8D54(char a1, uint64_t a2)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v19) - WORD2(v19) > 3)
    {
      if (BYTE6(v19) == 2)
      {
        *(unsigned char *)(v18 + WORD2(v19)) = 32;
        *(_WORD *)(v18 + WORD2(v19) + 1) = 0;
        *(unsigned char *)(v18 + WORD2(v19) + 3) = 0;
        __int16 v8 = WORD2(v19);
        unsigned __int16 v9 = WORD2(v19) + 4;
        WORD2(v19) += 4;
        if (HIBYTE(v19))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v19) > v9)
        {
          if (BYTE6(v19) == 2)
          {
            WORD2(v19) = v8 + 5;
            *(unsigned char *)(v18 + v9) = a1;
            if (HIBYTE(v19))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v10 = WORD2(v19);
              if (WORD1(v19) > WORD2(v19))
              {
                if (BYTE6(v19) == 2)
                {
                  ++WORD2(v19);
                  *(unsigned char *)(v18 + v10) = 0;
                  if (HIBYTE(v19))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v11 = WORD2(v19);
                    if (WORD1(v19) > WORD2(v19))
                    {
                      if (BYTE6(v19) == 2)
                      {
                        ++WORD2(v19);
                        *(unsigned char *)(v18 + v11) = 0;
                        if (HIBYTE(v19))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v12 = WORD2(v19);
                          if (WORD1(v19) > WORD2(v19))
                          {
                            if (BYTE6(v19) == 2)
                            {
                              ++WORD2(v19);
                              *(unsigned char *)(v18 + v12) = 0;
                              return sub_10001BCBC(226, v18, BYTE4(v19), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
                            }
                            unsigned __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5119, v17);
                          }
                        }
                        unsigned __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_38;
                      }
                      __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5118, v16);
                    }
                  }
                  __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_34;
                }
                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5117, v15);
              }
            }
            uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_30;
          }
          uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5115, v14);
        }
        uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_26;
      }
      uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5114, v13);
    }
    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1001C9048(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(449, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5133, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5132, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001C91C4(char a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v13) - WORD2(v13) > 3)
    {
      if (BYTE6(v13) == 2)
      {
        *(unsigned char *)(v12 + WORD2(v13)) = 39;
        *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
        *(unsigned char *)(v12 + WORD2(v13) + 3) = 0;
        __int16 v8 = WORD2(v13);
        unsigned __int16 v9 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v13) > v9)
        {
          if (BYTE6(v13) == 2)
          {
            WORD2(v13) = v8 + 5;
            *(unsigned char *)(v12 + v9) = a1;
            return sub_10001BCBC(226, v12, BYTE4(v13), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
          }
          unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5148, v11);
        }
        unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      __int16 v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5147, v10);
    }
    __int16 v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001C9350(int a1, uint64_t a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v8) = -16;
          if (a1)
          {
            if (HIBYTE(v15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              unsigned int v9 = WORD2(v15);
              if (WORD1(v15) > WORD2(v15))
              {
                if (BYTE6(v15) == 2)
                {
                  char v10 = 3;
LABEL_14:
                  WORD2(v15) = v9 + 1;
                  *(unsigned char *)(v14 + v9) = v10;
                  return sub_10001BCBC(490, v14, BYTE4(v15), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
                }
                uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5163, v12);
              }
            }
            uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_23;
          }
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            unsigned int v9 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                char v10 = 0;
                goto LABEL_14;
              }
              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5165, v13);
            }
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_27;
        }
        unsigned __int16 v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5161, v11);
      }
    }
    unsigned __int16 v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001C9518(__int16 a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t result = sub_100059D70(&v51);
  if (!result)
  {
    if (HIBYTE(v52))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v52) - WORD2(v52) > 1)
    {
      if (BYTE6(v52) == 2)
      {
        *(_WORD *)(v51 + WORD2(v52)) = a1;
        __int16 v14 = WORD2(v52);
        unsigned __int16 v15 = WORD2(v52) + 2;
        WORD2(v52) += 2;
        if (HIBYTE(v52))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v52) > v15)
        {
          if (BYTE6(v52) == 2)
          {
            WORD2(v52) = v14 + 3;
            *(unsigned char *)(v51 + v15) = a2;
            if (HIBYTE(v52))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v16 = WORD2(v52);
              if (WORD1(v52) > WORD2(v52))
              {
                if (BYTE6(v52) == 2)
                {
                  ++WORD2(v52);
                  *(unsigned char *)(v51 + v16) = a3;
                  if (HIBYTE(v52))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v17 = WORD2(v52);
                    if (WORD1(v52) > WORD2(v52))
                    {
                      if (BYTE6(v52) == 2)
                      {
                        ++WORD2(v52);
                        *(unsigned char *)(v51 + v17) = a3;
                        if (HIBYTE(v52))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v18 = WORD2(v52);
                          if (WORD1(v52) > WORD2(v52))
                          {
                            if (BYTE6(v52) == 2)
                            {
                              ++WORD2(v52);
                              *(unsigned char *)(v51 + v18) = a3;
                              if (HIBYTE(v52))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v19 = WORD2(v52);
                                if (WORD1(v52) > WORD2(v52))
                                {
                                  if (BYTE6(v52) == 2)
                                  {
                                    ++WORD2(v52);
                                    *(unsigned char *)(v51 + v19) = a3;
                                    if (HIBYTE(v52))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v20 = WORD2(v52);
                                      if (WORD1(v52) > WORD2(v52))
                                      {
                                        if (BYTE6(v52) == 2)
                                        {
                                          ++WORD2(v52);
                                          *(unsigned char *)(v51 + v20) = a3;
                                          if (HIBYTE(v52))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v21 = WORD2(v52);
                                            if (WORD1(v52) > WORD2(v52))
                                            {
                                              if (BYTE6(v52) == 2)
                                              {
                                                ++WORD2(v52);
                                                *(unsigned char *)(v51 + v21) = a3;
                                                if (HIBYTE(v52))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v22 = WORD2(v52);
                                                  if (WORD1(v52) > WORD2(v52))
                                                  {
                                                    if (BYTE6(v52) == 2)
                                                    {
                                                      ++WORD2(v52);
                                                      *(unsigned char *)(v51 + v22) = a3;
                                                      if (HIBYTE(v52))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                      else
                                                      {
                                                        uint64_t v23 = WORD2(v52);
                                                        if (WORD1(v52) > WORD2(v52))
                                                        {
                                                          if (BYTE6(v52) == 2)
                                                          {
                                                            ++WORD2(v52);
                                                            *(unsigned char *)(v51 + v23) = a3;
                                                            if (HIBYTE(v52))
                                                            {
                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                            }
                                                            else
                                                            {
                                                              uint64_t v24 = WORD2(v52);
                                                              if (WORD1(v52) > WORD2(v52))
                                                              {
                                                                if (BYTE6(v52) == 2)
                                                                {
                                                                  ++WORD2(v52);
                                                                  *(unsigned char *)(v51 + v24) = a3;
                                                                  if (HIBYTE(v52))
                                                                  {
                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }
                                                                  else
                                                                  {
                                                                    uint64_t v25 = WORD2(v52);
                                                                    if (WORD1(v52) > WORD2(v52))
                                                                    {
                                                                      if (BYTE6(v52) == 2)
                                                                      {
                                                                        ++WORD2(v52);
                                                                        *(unsigned char *)(v51 + v25) = a3;
                                                                        if (HIBYTE(v52))
                                                                        {
                                                                          sub_10025A794((uint64_t)"/Library/Caches/com.app"
                                                                                                 "le.xbs/Sources/MobileBl"
                                                                                                 "uetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                        }
                                                                        else
                                                                        {
                                                                          uint64_t v26 = WORD2(v52);
                                                                          if (WORD1(v52) > WORD2(v52))
                                                                          {
                                                                            if (BYTE6(v52) == 2)
                                                                            {
                                                                              ++WORD2(v52);
                                                                              *(unsigned char *)(v51 + v26) = a3;
                                                                              if (HIBYTE(v52))
                                                                              {
                                                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                              }
                                                                              else
                                                                              {
                                                                                uint64_t v27 = WORD2(v52);
                                                                                if (WORD1(v52) > WORD2(v52))
                                                                                {
                                                                                  if (BYTE6(v52) == 2)
                                                                                  {
                                                                                    ++WORD2(v52);
                                                                                    *(unsigned char *)(v51 + v27) = a3;
                                                                                    if (HIBYTE(v52))
                                                                                    {
                                                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      uint64_t v28 = WORD2(v52);
                                                                                      if (WORD1(v52) > WORD2(v52))
                                                                                      {
                                                                                        if (BYTE6(v52) == 2)
                                                                                        {
                                                                                          ++WORD2(v52);
                                                                                          *(unsigned char *)(v51 + v28) = a3;
                                                                                          if (HIBYTE(v52))
                                                                                          {
                                                                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            uint64_t v29 = WORD2(v52);
                                                                                            if (WORD1(v52) > WORD2(v52))
                                                                                            {
                                                                                              if (BYTE6(v52) == 2)
                                                                                              {
                                                                                                ++WORD2(v52);
                                                                                                *(unsigned char *)(v51 + v29) = a3;
                                                                                                if (HIBYTE(v52))
                                                                                                {
                                                                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  uint64_t v30 = WORD2(v52);
                                                                                                  if (WORD1(v52) > WORD2(v52))
                                                                                                  {
                                                                                                    if (BYTE6(v52) == 2)
                                                                                                    {
                                                                                                      ++WORD2(v52);
                                                                                                      *(unsigned char *)(v51 + v30) = a3;
                                                                                                      if (HIBYTE(v52))
                                                                                                      {
                                                                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        uint64_t v31 = WORD2(v52);
                                                                                                        if (WORD1(v52) > WORD2(v52))
                                                                                                        {
                                                                                                          if (BYTE6(v52) == 2)
                                                                                                          {
                                                                                                            ++WORD2(v52);
                                                                                                            *(unsigned char *)(v51 + v31) = a3;
                                                                                                            if (HIBYTE(v52))
                                                                                                            {
                                                                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                            }
                                                                                                            else if (WORD1(v52) > WORD2(v52))
                                                                                                            {
                                                                                                              if (BYTE6(v52) == 2)
                                                                                                              {
                                                                                                                *(unsigned char *)(v51 + WORD2(v52)) = a4;
                                                                                                                ++WORD2(v52);
                                                                                                                return sub_10001BCBC(441, v51, BYTE4(v52), a5, (uint64_t)sub_1000260B4, v11, v12, v13);
                                                                                                              }
                                                                                                              v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_136:
                                                                                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5276, v50);
                                                                                                            }
                                                                                                            v50 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                                                                                            goto LABEL_136;
                                                                                                          }
                                                                                                          v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_132:
                                                                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5275, v49);
                                                                                                        }
                                                                                                      }
                                                                                                      v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                      goto LABEL_132;
                                                                                                    }
                                                                                                    v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_128:
                                                                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5274, v48);
                                                                                                  }
                                                                                                }
                                                                                                v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                goto LABEL_128;
                                                                                              }
                                                                                              v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_124:
                                                                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5273, v47);
                                                                                            }
                                                                                          }
                                                                                          v47 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                          goto LABEL_124;
                                                                                        }
                                                                                        unsigned __int16 v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_120:
                                                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5272, v46);
                                                                                      }
                                                                                    }
                                                                                    unsigned __int16 v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                    goto LABEL_120;
                                                                                  }
                                                                                  unsigned __int16 v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_116:
                                                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5271, v45);
                                                                                }
                                                                              }
                                                                              unsigned __int16 v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                              goto LABEL_116;
                                                                            }
                                                                            __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_112:
                                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5270, v44);
                                                                          }
                                                                        }
                                                                        __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                        goto LABEL_112;
                                                                      }
                                                                      unsigned __int16 v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_108:
                                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5269, v43);
                                                                    }
                                                                  }
                                                                  unsigned __int16 v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_108;
                                                                }
                                                                uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_104:
                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5268, v42);
                                                              }
                                                            }
                                                            uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                            goto LABEL_104;
                                                          }
                                                          uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_100:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5267, v41);
                                                        }
                                                      }
                                                      uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_100;
                                                    }
                                                    v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_96:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5266, v40);
                                                  }
                                                }
                                                v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_96;
                                              }
                                              uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_92:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5265, v39);
                                            }
                                          }
                                          uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_92;
                                        }
                                        unsigned int v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_88:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5264, v38);
                                      }
                                    }
                                    unsigned int v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_88;
                                  }
                                  uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_84:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5263, v37);
                                }
                              }
                              uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_84;
                            }
                            char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_80:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5262, v36);
                          }
                        }
                        char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_80;
                      }
                      char v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_76:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5261, v35);
                    }
                  }
                  char v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_76;
                }
                char v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_72:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5260, v34);
              }
            }
            char v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_72;
          }
          int v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_68:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5259, v33);
        }
        int v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_68;
      }
      int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_64:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5258, v32);
    }
    int v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_64;
  }
  return result;
}

uint64_t sub_1001C9EA0(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(484, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5080, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5079, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CA018(_WORD *a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = *a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(491, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5332, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5331, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CA194(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(509, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5346, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CA26C(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t result = sub_100059D70(&v6);
  if (!result) {
    return sub_10001BCBC(474, v6, BYTE4(v7), a1, (uint64_t)sub_1001A4800, v3, v4, v5);
  }
  return result;
}

uint64_t sub_1001CA2C8(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(522, v9, BYTE4(v10), a2, (uint64_t)sub_1001A4910, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5372, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CA3BC(__int16 a1, int a2, uint64_t a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = a1;
        unsigned __int16 v10 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v14) - v10 > 3)
        {
          if (BYTE6(v14) == 2)
          {
            *(unsigned char *)(v13 + v10) = a2;
            *(unsigned char *)(v13 + WORD2(v14) + 1) = BYTE1(a2);
            *(unsigned char *)(v13 + WORD2(v14) + 2) = BYTE2(a2);
            *(unsigned char *)(v13 + WORD2(v14) + 3) = HIBYTE(a2);
            WORD2(v14) += 4;
            return sub_10001BCBC(475, v13, BYTE4(v14), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5387, v12);
        }
        uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_17;
      }
      uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5386, v11);
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CA578(__int16 a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t a8)
{
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t result = sub_100059D70(&v38);
  if (!result)
  {
    if (HIBYTE(v39))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v39) - WORD2(v39) > 1)
    {
      if (BYTE6(v39) == 2)
      {
        *(_WORD *)(v38 + WORD2(v39)) = a1;
        unsigned __int16 v20 = WORD2(v39) + 2;
        WORD2(v39) += 2;
        if (HIBYTE(v39))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v39) - v20 > 3)
        {
          if (BYTE6(v39) == 2)
          {
            *(unsigned char *)(v38 + v20) = a2;
            *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a2);
            unsigned __int16 v21 = WORD2(v39) + 4;
            WORD2(v39) += 4;
            if (HIBYTE(v39))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v39) - v21 > 3)
            {
              if (BYTE6(v39) == 2)
              {
                *(unsigned char *)(v38 + v21) = a3;
                *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a3);
                unsigned __int16 v22 = WORD2(v39) + 4;
                WORD2(v39) += 4;
                if (HIBYTE(v39))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v39) - v22 > 1)
                {
                  if (BYTE6(v39) == 2)
                  {
                    *(unsigned char *)(v38 + v22) = a4;
                    *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a4);
                    unsigned __int16 v23 = WORD2(v39) + 2;
                    WORD2(v39) += 2;
                    if (HIBYTE(v39))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else if (WORD1(v39) - v23 > 1)
                    {
                      if (BYTE6(v39) == 2)
                      {
                        *(unsigned char *)(v38 + v23) = a5;
                        *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a5);
                        __int16 v24 = WORD2(v39);
                        unsigned __int16 v25 = WORD2(v39) + 2;
                        WORD2(v39) += 2;
                        if (HIBYTE(v39))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v39) > v25)
                        {
                          if (BYTE6(v39) == 2)
                          {
                            WORD2(v39) = v24 + 3;
                            *(unsigned char *)(v38 + v25) = a6;
                            if (HIBYTE(v39))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v26 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(unsigned char *)(v38 + v26) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v27 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(unsigned char *)(v38 + v27) = BYTE1(a7);
                                        if (HIBYTE(v39))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v28 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(unsigned char *)(v38 + v28) = BYTE2(a7);
                                              return sub_10001BCBC(476, v38, BYTE4(v39), a8, (uint64_t)sub_1000260B4, v17, v18, v19);
                                            }
                                            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5414, v37);
                                          }
                                        }
                                        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }
                                      char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5412, v36);
                                    }
                                  }
                                  char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }
                                char v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5410, v35);
                              }
                            }
                            char v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }
                          char v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5407, v34);
                        }
                        char v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_54;
                      }
                      int v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5406, v33);
                    }
                    int v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_50;
                  }
                  int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5405, v32);
                }
                int v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_46;
              }
              uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5404, v31);
            }
            uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_42;
          }
          uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5403, v30);
        }
        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_38;
      }
      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5402, v29);
    }
    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_1001CAB24(uint64_t a1, int a2, int a3, __int16 a4, __int16 a5, char a6, int a7, uint64_t a8)
{
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t result = sub_100059D70(&v38);
  if (!result)
  {
    if (HIBYTE(v39))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v39) - WORD2(v39) > 5)
    {
      if (BYTE6(v39) == 2)
      {
        sub_100008A18(v38 + WORD2(v39), a1, 6uLL);
        unsigned __int16 v20 = WORD2(v39) + 6;
        WORD2(v39) += 6;
        if (HIBYTE(v39))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v39) - v20 > 3)
        {
          if (BYTE6(v39) == 2)
          {
            *(unsigned char *)(v38 + v20) = a2;
            *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a2);
            *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a2);
            unsigned __int16 v21 = WORD2(v39) + 4;
            WORD2(v39) += 4;
            if (HIBYTE(v39))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v39) - v21 > 3)
            {
              if (BYTE6(v39) == 2)
              {
                *(unsigned char *)(v38 + v21) = a3;
                *(unsigned char *)(v38 + WORD2(v39) + 1) = BYTE1(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 2) = BYTE2(a3);
                *(unsigned char *)(v38 + WORD2(v39) + 3) = HIBYTE(a3);
                unsigned __int16 v22 = WORD2(v39) + 4;
                WORD2(v39) += 4;
                if (HIBYTE(v39))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v39) - v22 > 1)
                {
                  if (BYTE6(v39) == 2)
                  {
                    *(unsigned char *)(v38 + v22) = a4;
                    *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a4);
                    unsigned __int16 v23 = WORD2(v39) + 2;
                    WORD2(v39) += 2;
                    if (HIBYTE(v39))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else if (WORD1(v39) - v23 > 1)
                    {
                      if (BYTE6(v39) == 2)
                      {
                        *(unsigned char *)(v38 + v23) = a5;
                        *(unsigned char *)(v38 + WORD2(v39) + 1) = HIBYTE(a5);
                        __int16 v24 = WORD2(v39);
                        unsigned __int16 v25 = WORD2(v39) + 2;
                        WORD2(v39) += 2;
                        if (HIBYTE(v39))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v39) > v25)
                        {
                          if (BYTE6(v39) == 2)
                          {
                            WORD2(v39) = v24 + 3;
                            *(unsigned char *)(v38 + v25) = a6;
                            if (HIBYTE(v39))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v26 = WORD2(v39);
                              if (WORD1(v39) > WORD2(v39))
                              {
                                if (BYTE6(v39) == 2)
                                {
                                  ++WORD2(v39);
                                  *(unsigned char *)(v38 + v26) = a7;
                                  if (HIBYTE(v39))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v27 = WORD2(v39);
                                    if (WORD1(v39) > WORD2(v39))
                                    {
                                      if (BYTE6(v39) == 2)
                                      {
                                        ++WORD2(v39);
                                        *(unsigned char *)(v38 + v27) = BYTE1(a7);
                                        if (HIBYTE(v39))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v28 = WORD2(v39);
                                          if (WORD1(v39) > WORD2(v39))
                                          {
                                            if (BYTE6(v39) == 2)
                                            {
                                              ++WORD2(v39);
                                              *(unsigned char *)(v38 + v28) = BYTE2(a7);
                                              return sub_10001BCBC(516, v38, BYTE4(v39), a8, (uint64_t)sub_1000260B4, v17, v18, v19);
                                            }
                                            uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5440, v37);
                                          }
                                        }
                                        uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }
                                      char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5438, v36);
                                    }
                                  }
                                  char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }
                                char v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5436, v35);
                              }
                            }
                            char v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }
                          char v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5433, v34);
                        }
                        char v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_54;
                      }
                      int v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5432, v33);
                    }
                    int v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                    goto LABEL_50;
                  }
                  int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5431, v32);
                }
                int v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_46;
              }
              uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5430, v31);
            }
            uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 4";
            goto LABEL_42;
          }
          uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5429, v30);
        }
        uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_38;
      }
      uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5428, v29);
    }
    uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_1001CB0C8(char a1, __int16 a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t result = sub_100059D70(&v20);
  if (!result)
  {
    if (HIBYTE(v21))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v12 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(unsigned char *)(v20 + v12) = 0;
          if (HIBYTE(v21))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v13 = WORD2(v21);
            if (WORD1(v21) > WORD2(v21))
            {
              if (BYTE6(v21) == 2)
              {
                ++WORD2(v21);
                *(unsigned char *)(v20 + v13) = a1;
                if (HIBYTE(v21))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v21) - WORD2(v21) > 1)
                {
                  if (BYTE6(v21) == 2)
                  {
                    *(_WORD *)(v20 + WORD2(v21)) = a2;
                    __int16 v14 = WORD2(v21);
                    unsigned __int16 v15 = WORD2(v21) + 2;
                    WORD2(v21) += 2;
                    if (HIBYTE(v21))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else if (WORD1(v21) > v15)
                    {
                      if (BYTE6(v21) == 2)
                      {
                        WORD2(v21) = v14 + 3;
                        *(unsigned char *)(v20 + v15) = a3;
                        return sub_10001BCBC(622, v20, BYTE4(v21), a4, (uint64_t)sub_1001A5C80, v9, v10, v11);
                      }
                      uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5456, v19);
                    }
                    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_31;
                  }
                  uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5455, v18);
                }
                uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_27;
              }
              uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5454, v17);
            }
          }
          uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }
        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5453, v16);
      }
    }
    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001CB334(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(592, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5470, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CB40C(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(593, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5484, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CB4E4(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(604, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5498, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CB5BC(uint64_t a1, __int16 a2, char a3, __int16 a4, char a5, char a6, char a7)
{
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t result = sub_100059D70(&v34);
  if (!result)
  {
    if (HIBYTE(v35))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v35) - WORD2(v35) > 5)
    {
      if (BYTE6(v35) == 2)
      {
        sub_100008A18(v34 + WORD2(v35), a1, 6uLL);
        unsigned __int16 v18 = WORD2(v35) + 6;
        WORD2(v35) += 6;
        if (HIBYTE(v35))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v35) - v18 > 1)
        {
          if (BYTE6(v35) == 2)
          {
            *(unsigned char *)(v34 + v18) = a2;
            *(unsigned char *)(v34 + WORD2(v35) + 1) = HIBYTE(a2);
            __int16 v19 = WORD2(v35);
            unsigned __int16 v20 = WORD2(v35) + 2;
            WORD2(v35) += 2;
            if (HIBYTE(v35))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v35) > v20)
            {
              if (BYTE6(v35) == 2)
              {
                WORD2(v35) = v19 + 3;
                *(unsigned char *)(v34 + v20) = a3;
                if (HIBYTE(v35))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v21 = WORD2(v35);
                  if (WORD1(v35) > WORD2(v35))
                  {
                    if (BYTE6(v35) == 2)
                    {
                      ++WORD2(v35);
                      *(unsigned char *)(v34 + v21) = 0;
                      if (HIBYTE(v35))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v35) - WORD2(v35) > 1)
                      {
                        if (BYTE6(v35) == 2)
                        {
                          *(_WORD *)(v34 + WORD2(v35)) = a4;
                          __int16 v22 = WORD2(v35);
                          unsigned __int16 v23 = WORD2(v35) + 2;
                          WORD2(v35) += 2;
                          if (HIBYTE(v35))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v35) > v23)
                          {
                            if (BYTE6(v35) == 2)
                            {
                              WORD2(v35) = v22 + 3;
                              *(unsigned char *)(v34 + v23) = a5;
                              if (HIBYTE(v35))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v24 = WORD2(v35);
                                if (WORD1(v35) > WORD2(v35))
                                {
                                  if (BYTE6(v35) == 2)
                                  {
                                    ++WORD2(v35);
                                    *(unsigned char *)(v34 + v24) = a6;
                                    if (HIBYTE(v35))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v25 = WORD2(v35);
                                      if (WORD1(v35) > WORD2(v35))
                                      {
                                        if (BYTE6(v35) == 2)
                                        {
                                          ++WORD2(v35);
                                          *(unsigned char *)(v34 + v25) = a7;
                                          return sub_10001BCBC(598, v34, BYTE4(v35), 0, (uint64_t)sub_1000260B4, v15, v16, v17);
                                        }
                                        int v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5520, v33);
                                      }
                                    }
                                    int v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_59;
                                  }
                                  int v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5519, v32);
                                }
                              }
                              int v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_55;
                            }
                            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5518, v31);
                          }
                          uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                          goto LABEL_51;
                        }
                        uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5517, v30);
                      }
                      uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_47;
                    }
                    uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5516, v29);
                  }
                }
                uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_43;
              }
              uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5515, v28);
            }
            uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_39;
          }
          uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5514, v27);
        }
        uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_35;
      }
      uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5513, v26);
    }
    uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1001CBA54(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(599, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5535, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5534, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CBBCC(char a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v10) = a1;
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v11) = a2;
                return sub_10001BCBC(600, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
              }
              uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5550, v13);
            }
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5549, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CBD28(__int16 a1, __int16 a2, uint64_t a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v14) - WORD2(v14) > 1)
    {
      if (BYTE6(v14) == 2)
      {
        *(_WORD *)(v13 + WORD2(v14)) = a1;
        unsigned __int16 v10 = WORD2(v14) + 2;
        WORD2(v14) += 2;
        if (HIBYTE(v14))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v14) - v10 > 1)
        {
          if (BYTE6(v14) == 2)
          {
            *(unsigned char *)(v13 + v10) = a2;
            *(unsigned char *)(v13 + WORD2(v14) + 1) = HIBYTE(a2);
            WORD2(v14) += 2;
            return sub_10001BCBC(601, v13, BYTE4(v14), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5565, v12);
        }
        uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_17;
      }
      uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5564, v11);
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CBEBC(int a1, _WORD *a2, unsigned char *a3, char *a4, uint64_t a5)
{
  LODWORD(v9) = a1;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (result) {
    return result;
  }
  if (HIBYTE(v23))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_34;
  }
  uint64_t v14 = WORD2(v23);
  if (WORD1(v23) <= WORD2(v23))
  {
LABEL_34:
    uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_36;
  }
  if (BYTE6(v23) != 2)
  {
    uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5580, v21);
  }
  ++WORD2(v23);
  *(unsigned char *)(v22 + v14) = v9;
  if (v9)
  {
    uint64_t v9 = v9;
    while (!HIBYTE(v23))
    {
      if (WORD1(v23) - WORD2(v23) <= 1) {
        goto LABEL_22;
      }
      if (BYTE6(v23) != 2)
      {
        unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_24;
      }
      *(_WORD *)(v22 + WORD2(v23)) = *a2;
      unsigned __int16 v15 = WORD2(v23) + 2;
      WORD2(v23) += 2;
      if (HIBYTE(v23))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_26:
        __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5584, v19);
      }
      if (WORD1(v23) - v15 <= 1) {
        goto LABEL_26;
      }
      if (BYTE6(v23) != 2)
      {
        __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_28;
      }
      *(unsigned char *)(v22 + v15) = *a3;
      *(unsigned char *)(v22 + WORD2(v23) + 1) = a3[1];
      unsigned __int16 v16 = WORD2(v23) + 2;
      WORD2(v23) += 2;
      if (HIBYTE(v23))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_30:
        unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= (63)";
LABEL_32:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5585, v20);
      }
      if (WORD1(v23) - v16 <= 62) {
        goto LABEL_30;
      }
      if (BYTE6(v23) != 2)
      {
        unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_32;
      }
      memmove((void *)(v22 + v16), a4, 0x3FuLL);
      unsigned __int8 v17 = BYTE4(v23) + 63;
      WORD2(v23) += 63;
      a4 += 63;
      a3 += 2;
      ++a2;
      if (!--v9) {
        return sub_10001BCBC(606, v22, v17, a5, (uint64_t)sub_1000260B4, v11, v12, v13);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_22:
    unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_24:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5583, v18);
  }
  unsigned __int8 v17 = BYTE4(v23);
  return sub_10001BCBC(606, v22, v17, a5, (uint64_t)sub_1000260B4, v11, v12, v13);
}

uint64_t sub_1001CC18C(char a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t result = sub_100059D70(&v22);
  if (!result)
  {
    if (HIBYTE(v23))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v23);
      if (WORD1(v23) > WORD2(v23))
      {
        if (BYTE6(v23) == 2)
        {
          ++WORD2(v23);
          *(unsigned char *)(v22 + v14) = a1;
          if (HIBYTE(v23))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v15 = WORD2(v23);
            if (WORD1(v23) > WORD2(v23))
            {
              if (BYTE6(v23) == 2)
              {
                ++WORD2(v23);
                *(unsigned char *)(v22 + v15) = a2;
                if (HIBYTE(v23))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v16 = WORD2(v23);
                  if (WORD1(v23) > WORD2(v23))
                  {
                    if (BYTE6(v23) == 2)
                    {
                      ++WORD2(v23);
                      *(unsigned char *)(v22 + v16) = a3;
                      if (HIBYTE(v23))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v17 = WORD2(v23);
                        if (WORD1(v23) > WORD2(v23))
                        {
                          if (BYTE6(v23) == 2)
                          {
                            ++WORD2(v23);
                            *(unsigned char *)(v22 + v17) = a4;
                            return sub_10001BCBC(609, v22, BYTE4(v23), a5, (uint64_t)sub_1001A5E60, v11, v12, v13);
                          }
                          uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5603, v21);
                        }
                      }
                      uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_31;
                    }
                    unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5602, v20);
                  }
                }
                unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_27;
              }
              __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5601, v19);
            }
          }
          __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_23;
        }
        unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5600, v18);
      }
    }
    unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001CC3E8(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(605, v14, BYTE4(v15), a3, (uint64_t)sub_1001A614C, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5618, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5617, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001CC560(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(602, v9, BYTE4(v10), a2, (uint64_t)sub_1001A64AC, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5630, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CC654(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(621, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5642, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001CC72C(unsigned int a1, char *a2, char *a3, char *a4, uint64_t a5)
{
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t result = sub_100059D70(&v26);
  if (result) {
    return result;
  }
  if (HIBYTE(v27))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_32;
  }
  uint64_t v14 = WORD2(v27);
  if (WORD1(v27) <= WORD2(v27))
  {
LABEL_32:
    uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }
  if (BYTE6(v27) != 2)
  {
    uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5654, v25);
  }
  ++WORD2(v27);
  *(unsigned char *)(v26 + v14) = a1;
  if (a1)
  {
    uint64_t v15 = a1;
    while (!HIBYTE(v27))
    {
      uint64_t v16 = WORD2(v27);
      if (WORD1(v27) <= WORD2(v27)) {
        goto LABEL_20;
      }
      if (BYTE6(v27) != 2)
      {
        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_22;
      }
      char v17 = *a2;
      ++WORD2(v27);
      *(unsigned char *)(v26 + v16) = v17;
      if (HIBYTE(v27))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_24:
        uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_26:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5657, v23);
      }
      uint64_t v18 = WORD2(v27);
      if (WORD1(v27) <= WORD2(v27)) {
        goto LABEL_24;
      }
      if (BYTE6(v27) != 2)
      {
        uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_26;
      }
      char v19 = *a3;
      ++WORD2(v27);
      *(unsigned char *)(v26 + v18) = v19;
      if (HIBYTE(v27))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_28:
        uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_30:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5658, v24);
      }
      uint64_t v20 = WORD2(v27);
      if (WORD1(v27) <= WORD2(v27)) {
        goto LABEL_28;
      }
      if (BYTE6(v27) != 2)
      {
        uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_30;
      }
      char v21 = *a4++;
      ++WORD2(v27);
      *(unsigned char *)(v26 + v20) = v21;
      ++a3;
      ++a2;
      if (!--v15) {
        return sub_10001BCBC(637, v26, BYTE4(v27), a5, (uint64_t)sub_1000260B4, v11, v12, v13);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_20:
    uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_22:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5656, v22);
  }
  return sub_10001BCBC(637, v26, BYTE4(v27), a5, (uint64_t)sub_1000260B4, v11, v12, v13);
}

uint64_t sub_1001CC9AC(uint64_t a1, int a2, char a3, char a4, char a5, uint64_t *a6, char a7, char a8, char a9, char a10, __int16 a11, char a12, char a13, uint64_t a14)
{
  uint64_t v150 = 0;
  uint64_t v151 = 0;
  uint64_t result = sub_100059D70(&v150);
  if (result) {
    return result;
  }
  if (HIBYTE(v151))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_239;
  }
  if (WORD1(v151) - WORD2(v151) <= 5)
  {
LABEL_239:
    v93 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_241;
  }
  if (BYTE6(v151) != 2)
  {
    v93 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_241:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5681, v93);
  }
  sub_100008A18(v150 + WORD2(v151), a1, 6uLL);
  __int16 v26 = WORD2(v151);
  unsigned __int16 v27 = WORD2(v151) + 6;
  WORD2(v151) += 6;
  if (HIBYTE(v151))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_243;
  }
  if (WORD1(v151) <= v27)
  {
LABEL_243:
    v94 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_245;
  }
  BOOL v28 = BYTE6(v151) > 2u;
  if (BYTE6(v151) != 2)
  {
    v94 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_245:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5682, v94);
  }
  WORD2(v151) = v26 + 7;
  *(unsigned char *)(v150 + v27) = a2;
  if (v28)
  {
    switch(a2)
    {
      case 128:
        if (HIBYTE(v151))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else
        {
          uint64_t v29 = WORD2(v151);
          if (WORD1(v151) > WORD2(v151))
          {
            if (BYTE6(v151) != 2)
            {
              v95 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_248;
            }
            ++WORD2(v151);
            *(unsigned char *)(v150 + v29) = a7;
            if (HIBYTE(v151))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v30 = WORD2(v151);
              if (WORD1(v151) > WORD2(v151))
              {
                if (BYTE6(v151) != 2)
                {
                  v96 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                  goto LABEL_251;
                }
                ++WORD2(v151);
                *(unsigned char *)(v150 + v30) = a8;
                if (HIBYTE(v151))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v31 = WORD2(v151);
                  if (WORD1(v151) > WORD2(v151))
                  {
                    if (BYTE6(v151) != 2)
                    {
                      v97 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                      goto LABEL_254;
                    }
                    ++WORD2(v151);
                    *(unsigned char *)(v150 + v31) = a9;
                    if (HIBYTE(v151))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v32 = WORD2(v151);
                      if (WORD1(v151) > WORD2(v151))
                      {
                        if (BYTE6(v151) != 2)
                        {
                          v98 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_257;
                        }
                        ++WORD2(v151);
                        *(unsigned char *)(v150 + v32) = a10;
                        if (HIBYTE(v151))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v151) - WORD2(v151) > 1)
                        {
                          if (BYTE6(v151) != 2)
                          {
                            v99 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                            goto LABEL_260;
                          }
                          *(_WORD *)(v150 + WORD2(v151)) = a11;
                          __int16 v33 = WORD2(v151);
                          unsigned __int16 v34 = WORD2(v151) + 2;
                          WORD2(v151) += 2;
                          if (HIBYTE(v151))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v151) > v34)
                          {
                            if (BYTE6(v151) != 2)
                            {
                              v100 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_263;
                            }
                            WORD2(v151) = v33 + 3;
                            *(unsigned char *)(v150 + v34) = a12;
                            if (HIBYTE(v151))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              unsigned int v35 = WORD2(v151);
                              if (WORD1(v151) > WORD2(v151))
                              {
                                if (BYTE6(v151) == 2) {
                                  goto LABEL_235;
                                }
                                char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_266:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5733, v36);
                              }
                            }
                            char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_266;
                          }
                          v100 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_263:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5732, v100);
                        }
                        v99 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_260:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5731, v99);
                      }
                    }
                    v98 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_257:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5730, v98);
                  }
                }
                v97 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_254:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5729, v97);
              }
            }
            v96 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_251:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5728, v96);
          }
        }
        v95 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_248:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5727, v95);
      case 129:
        if (HIBYTE(v151))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else
        {
          uint64_t v78 = WORD2(v151);
          if (WORD1(v151) > WORD2(v151))
          {
            if (BYTE6(v151) != 2)
            {
              v135 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_411;
            }
            ++WORD2(v151);
            *(unsigned char *)(v150 + v78) = a7;
            if (HIBYTE(v151))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v79 = WORD2(v151);
              if (WORD1(v151) > WORD2(v151))
              {
                if (BYTE6(v151) != 2)
                {
                  v136 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                  goto LABEL_414;
                }
                ++WORD2(v151);
                *(unsigned char *)(v150 + v79) = a3;
                if (HIBYTE(v151))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v80 = WORD2(v151);
                  if (WORD1(v151) > WORD2(v151))
                  {
                    if (BYTE6(v151) != 2)
                    {
                      v137 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                      goto LABEL_417;
                    }
                    ++WORD2(v151);
                    *(unsigned char *)(v150 + v80) = a8;
                    if (HIBYTE(v151))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v81 = WORD2(v151);
                      if (WORD1(v151) > WORD2(v151))
                      {
                        if (BYTE6(v151) != 2)
                        {
                          v138 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_420;
                        }
                        ++WORD2(v151);
                        *(unsigned char *)(v150 + v81) = a9;
                        if (HIBYTE(v151))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v82 = WORD2(v151);
                          if (WORD1(v151) > WORD2(v151))
                          {
                            if (BYTE6(v151) != 2)
                            {
                              v139 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_423;
                            }
                            ++WORD2(v151);
                            *(unsigned char *)(v150 + v82) = a10;
                            if (HIBYTE(v151))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else if (WORD1(v151) - WORD2(v151) > 1)
                            {
                              if (BYTE6(v151) != 2)
                              {
                                v140 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                goto LABEL_426;
                              }
                              *(_WORD *)(v150 + WORD2(v151)) = a11;
                              __int16 v83 = WORD2(v151);
                              unsigned __int16 v84 = WORD2(v151) + 2;
                              WORD2(v151) += 2;
                              if (HIBYTE(v151))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else if (WORD1(v151) > v84)
                              {
                                if (BYTE6(v151) != 2)
                                {
                                  v141 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_429;
                                }
                                WORD2(v151) = v83 + 3;
                                *(unsigned char *)(v150 + v84) = a12;
                                if (HIBYTE(v151))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else
                                {
                                  unsigned int v35 = WORD2(v151);
                                  if (WORD1(v151) > WORD2(v151))
                                  {
                                    if (BYTE6(v151) == 2) {
                                      goto LABEL_235;
                                    }
                                    v85 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_432:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5744, v85);
                                  }
                                }
                                v85 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                goto LABEL_432;
                              }
                              v141 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_429:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5743, v141);
                            }
                            v140 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_426:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5742, v140);
                          }
                        }
                        v139 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_423:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5741, v139);
                      }
                    }
                    v138 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_420:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5740, v138);
                  }
                }
                v137 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_417:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5739, v137);
              }
            }
            v136 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_414:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5738, v136);
          }
        }
        v135 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_411:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5737, v135);
      case 131:
        if (HIBYTE(v151))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else
        {
          uint64_t v86 = WORD2(v151);
          if (WORD1(v151) > WORD2(v151))
          {
            if (BYTE6(v151) != 2)
            {
              v142 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_435;
            }
            ++WORD2(v151);
            *(unsigned char *)(v150 + v86) = a7;
            if (HIBYTE(v151))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v151) - WORD2(v151) > 15)
            {
              if (BYTE6(v151) != 2)
              {
                v143 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                goto LABEL_438;
              }
              *(_OWORD *)(v150 + WORD2(v151)) = *(_OWORD *)a6;
              __int16 v87 = WORD2(v151);
              unsigned __int16 v88 = WORD2(v151) + 16;
              WORD2(v151) += 16;
              if (HIBYTE(v151))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v151) > v88)
              {
                if (BYTE6(v151) != 2)
                {
                  v144 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                  goto LABEL_441;
                }
                WORD2(v151) = v87 + 17;
                *(unsigned char *)(v150 + v88) = a8;
                if (HIBYTE(v151))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v89 = WORD2(v151);
                  if (WORD1(v151) > WORD2(v151))
                  {
                    if (BYTE6(v151) != 2)
                    {
                      v145 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                      goto LABEL_444;
                    }
                    ++WORD2(v151);
                    *(unsigned char *)(v150 + v89) = a9;
                    if (HIBYTE(v151))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v90 = WORD2(v151);
                      if (WORD1(v151) > WORD2(v151))
                      {
                        if (BYTE6(v151) != 2)
                        {
                          v146 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_447;
                        }
                        ++WORD2(v151);
                        *(unsigned char *)(v150 + v90) = a10;
                        if (HIBYTE(v151))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v151) - WORD2(v151) > 1)
                        {
                          if (BYTE6(v151) != 2)
                          {
                            v147 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                            goto LABEL_450;
                          }
                          *(_WORD *)(v150 + WORD2(v151)) = a11;
                          __int16 v91 = WORD2(v151);
                          unsigned __int16 v92 = WORD2(v151) + 2;
                          WORD2(v151) += 2;
                          if (HIBYTE(v151))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v151) > v92)
                          {
                            if (BYTE6(v151) != 2)
                            {
                              v148 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_453;
                            }
                            WORD2(v151) = v91 + 3;
                            *(unsigned char *)(v150 + v92) = a12;
                            if (HIBYTE(v151))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              unsigned int v35 = WORD2(v151);
                              if (WORD1(v151) > WORD2(v151))
                              {
                                if (BYTE6(v151) == 2) {
                                  goto LABEL_235;
                                }
                                v149 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_456:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5755, v149);
                              }
                            }
                            v149 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_456;
                          }
                          v148 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_453:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5754, v148);
                        }
                        v147 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_450:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5753, v147);
                      }
                    }
                    v146 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_447:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5752, v146);
                  }
                }
                v145 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_444:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5751, v145);
              }
              v144 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_441:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5750, v144);
            }
            v143 = "ByteStream_NumReadBytesAvail(bs) >= (16)";
LABEL_438:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5749, v143);
          }
        }
        v142 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_435:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5748, v142);
      case 132:
        if (HIBYTE(v151))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else
        {
          uint64_t v68 = WORD2(v151);
          if (WORD1(v151) > WORD2(v151))
          {
            if (BYTE6(v151) != 2)
            {
              v126 = "(bs).__RWFlag == BYTESTREAM_WRITE";
              goto LABEL_381;
            }
            ++WORD2(v151);
            *(unsigned char *)(v150 + v68) = a7;
            if (HIBYTE(v151))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v69 = WORD2(v151);
              if (WORD1(v151) > WORD2(v151))
              {
                if (BYTE6(v151) != 2)
                {
                  v127 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                  goto LABEL_384;
                }
                ++WORD2(v151);
                *(unsigned char *)(v150 + v69) = a3;
                if (HIBYTE(v151))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v70 = WORD2(v151);
                  if (WORD1(v151) > WORD2(v151))
                  {
                    if (BYTE6(v151) != 2)
                    {
                      v128 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                      goto LABEL_387;
                    }
                    ++WORD2(v151);
                    *(unsigned char *)(v150 + v70) = a4;
                    if (HIBYTE(v151))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v71 = WORD2(v151);
                      if (WORD1(v151) > WORD2(v151))
                      {
                        if (BYTE6(v151) != 2)
                        {
                          v129 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_390;
                        }
                        ++WORD2(v151);
                        *(unsigned char *)(v150 + v71) = a5;
                        if (HIBYTE(v151))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v72 = WORD2(v151);
                          if (WORD1(v151) > WORD2(v151))
                          {
                            if (BYTE6(v151) != 2)
                            {
                              v130 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              goto LABEL_393;
                            }
                            ++WORD2(v151);
                            *(unsigned char *)(v150 + v72) = a8;
                            if (HIBYTE(v151))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v73 = WORD2(v151);
                              if (WORD1(v151) > WORD2(v151))
                              {
                                if (BYTE6(v151) != 2)
                                {
                                  v131 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                  goto LABEL_396;
                                }
                                ++WORD2(v151);
                                *(unsigned char *)(v150 + v73) = a9;
                                if (HIBYTE(v151))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else
                                {
                                  uint64_t v74 = WORD2(v151);
                                  if (WORD1(v151) > WORD2(v151))
                                  {
                                    if (BYTE6(v151) != 2)
                                    {
                                      v132 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                      goto LABEL_399;
                                    }
                                    ++WORD2(v151);
                                    *(unsigned char *)(v150 + v74) = a10;
                                    if (HIBYTE(v151))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else if (WORD1(v151) - WORD2(v151) > 1)
                                    {
                                      if (BYTE6(v151) != 2)
                                      {
                                        v133 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                        goto LABEL_402;
                                      }
                                      *(_WORD *)(v150 + WORD2(v151)) = a11;
                                      __int16 v75 = WORD2(v151);
                                      unsigned __int16 v76 = WORD2(v151) + 2;
                                      WORD2(v151) += 2;
                                      if (HIBYTE(v151))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                      else if (WORD1(v151) > v76)
                                      {
                                        if (BYTE6(v151) != 2)
                                        {
                                          v134 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                          goto LABEL_405;
                                        }
                                        WORD2(v151) = v75 + 3;
                                        *(unsigned char *)(v150 + v76) = a12;
                                        if (HIBYTE(v151))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else
                                        {
                                          unsigned int v35 = WORD2(v151);
                                          if (WORD1(v151) > WORD2(v151))
                                          {
                                            if (BYTE6(v151) == 2) {
                                              goto LABEL_235;
                                            }
                                            v77 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_408:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5768, v77);
                                          }
                                        }
                                        v77 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_408;
                                      }
                                      v134 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_405:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5767, v134);
                                    }
                                    v133 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_402:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5766, v133);
                                  }
                                }
                                v132 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_399:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5765, v132);
                              }
                            }
                            v131 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_396:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5764, v131);
                          }
                        }
                        v130 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_393:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5763, v130);
                      }
                    }
                    v129 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_390:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5762, v129);
                  }
                }
                v128 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_387:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5761, v128);
              }
            }
            v127 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_384:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5760, v127);
          }
        }
        v126 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_381:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5759, v126);
      default:
        return sub_10001BCBC(81, v150, BYTE4(v151), a14, (uint64_t)sub_1000260B4, v23, v24, v25);
    }
  }
  switch(a2)
  {
    case 0:
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      else
      {
        uint64_t v37 = WORD2(v151);
        if (WORD1(v151) > WORD2(v151))
        {
          if (BYTE6(v151) == 2)
          {
            ++WORD2(v151);
            *(unsigned char *)(v150 + v37) = a8;
            if (HIBYTE(v151))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v38 = WORD2(v151);
              if (WORD1(v151) > WORD2(v151))
              {
                if (BYTE6(v151) == 2)
                {
                  ++WORD2(v151);
                  *(unsigned char *)(v150 + v38) = a9;
                  if (HIBYTE(v151))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v39 = WORD2(v151);
                    if (WORD1(v151) > WORD2(v151))
                    {
                      if (BYTE6(v151) == 2)
                      {
                        ++WORD2(v151);
                        *(unsigned char *)(v150 + v39) = a10;
                        if (HIBYTE(v151))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v151) - WORD2(v151) > 1)
                        {
                          if (BYTE6(v151) == 2)
                          {
                            *(_WORD *)(v150 + WORD2(v151)) = a11;
                            __int16 v40 = WORD2(v151);
                            unsigned __int16 v41 = WORD2(v151) + 2;
                            WORD2(v151) += 2;
                            if (HIBYTE(v151))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else if (WORD1(v151) > v41)
                            {
                              if (BYTE6(v151) == 2)
                              {
                                WORD2(v151) = v40 + 3;
                                *(unsigned char *)(v150 + v41) = a12;
                                if (HIBYTE(v151))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else
                                {
                                  unsigned int v35 = WORD2(v151);
                                  if (WORD1(v151) > WORD2(v151))
                                  {
                                    if (BYTE6(v151) != 2)
                                    {
                                      uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                      goto LABEL_289;
                                    }
                                    goto LABEL_235;
                                  }
                                }
                                uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_289:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5691, v42);
                              }
                              v105 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_286:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5690, v105);
                            }
                            v105 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_286;
                          }
                          v104 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_282:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5689, v104);
                        }
                        v104 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_282;
                      }
                      v103 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_278:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5688, v103);
                    }
                  }
                  v103 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_278;
                }
                v102 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_274:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5687, v102);
              }
            }
            v102 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_274;
          }
          v101 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_270:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5686, v101);
        }
      }
      v101 = "ByteStream_NumReadBytesAvail(bs) >= 1";
      goto LABEL_270;
    case 1:
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_291;
      }
      uint64_t v43 = WORD2(v151);
      if (WORD1(v151) <= WORD2(v151))
      {
LABEL_291:
        v106 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_293;
      }
      if (BYTE6(v151) != 2)
      {
        v106 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_293:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5695, v106);
      }
      ++WORD2(v151);
      *(unsigned char *)(v150 + v43) = a3;
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_295;
      }
      uint64_t v44 = WORD2(v151);
      if (WORD1(v151) <= WORD2(v151))
      {
LABEL_295:
        v107 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_297;
      }
      if (BYTE6(v151) != 2)
      {
        v107 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_297:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5696, v107);
      }
      ++WORD2(v151);
      *(unsigned char *)(v150 + v44) = a8;
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_299;
      }
      uint64_t v45 = WORD2(v151);
      if (WORD1(v151) <= WORD2(v151))
      {
LABEL_299:
        v108 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_301;
      }
      if (BYTE6(v151) != 2)
      {
        v108 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_301:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5697, v108);
      }
      ++WORD2(v151);
      *(unsigned char *)(v150 + v45) = a9;
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_303;
      }
      uint64_t v46 = WORD2(v151);
      if (WORD1(v151) <= WORD2(v151))
      {
LABEL_303:
        v109 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_305;
      }
      if (BYTE6(v151) != 2)
      {
        v109 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_305:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5698, v109);
      }
      ++WORD2(v151);
      *(unsigned char *)(v150 + v46) = a10;
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_307;
      }
      if (WORD1(v151) - WORD2(v151) <= 1)
      {
LABEL_307:
        v110 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_309;
      }
      if (BYTE6(v151) != 2)
      {
        v110 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_309:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5699, v110);
      }
      *(_WORD *)(v150 + WORD2(v151)) = a11;
      __int16 v47 = WORD2(v151);
      unsigned __int16 v48 = WORD2(v151) + 2;
      WORD2(v151) += 2;
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_311;
      }
      if (WORD1(v151) <= v48)
      {
LABEL_311:
        v111 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_313;
      }
      if (BYTE6(v151) != 2)
      {
        v111 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_313:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5700, v111);
      }
      WORD2(v151) = v47 + 3;
      *(unsigned char *)(v150 + v48) = a12;
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        goto LABEL_315;
      }
      unsigned int v35 = WORD2(v151);
      if (WORD1(v151) <= WORD2(v151))
      {
LABEL_315:
        v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_316:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5701, v49);
      }
      if (BYTE6(v151) != 2)
      {
        v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_316;
      }
LABEL_235:
      WORD2(v151) = v35 + 1;
      *(unsigned char *)(v150 + v35) = a13;
      return sub_10001BCBC(81, v150, BYTE4(v151), a14, (uint64_t)sub_1000260B4, v23, v24, v25);
    case 2:
      return sub_10001BCBC(81, v150, BYTE4(v151), a14, (uint64_t)sub_1000260B4, v23, v24, v25);
    case 3:
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      else if (WORD1(v151) - WORD2(v151) > 9)
      {
        if (BYTE6(v151) == 2)
        {
          uint64_t v50 = v150 + WORD2(v151);
          uint64_t v51 = *a6;
          *(_WORD *)(v50 + 8) = *((_WORD *)a6 + 4);
          *(void *)uint64_t v50 = v51;
          __int16 v52 = WORD2(v151);
          unsigned __int16 v53 = WORD2(v151) + 10;
          WORD2(v151) += 10;
          if (HIBYTE(v151))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v151) > v53)
          {
            if (BYTE6(v151) == 2)
            {
              WORD2(v151) = v52 + 11;
              *(unsigned char *)(v150 + v53) = a8;
              if (HIBYTE(v151))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else
              {
                uint64_t v54 = WORD2(v151);
                if (WORD1(v151) > WORD2(v151))
                {
                  if (BYTE6(v151) == 2)
                  {
                    ++WORD2(v151);
                    *(unsigned char *)(v150 + v54) = a9;
                    if (HIBYTE(v151))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v55 = WORD2(v151);
                      if (WORD1(v151) > WORD2(v151))
                      {
                        if (BYTE6(v151) == 2)
                        {
                          ++WORD2(v151);
                          *(unsigned char *)(v150 + v55) = a10;
                          if (HIBYTE(v151))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v151) - WORD2(v151) > 1)
                          {
                            if (BYTE6(v151) == 2)
                            {
                              *(_WORD *)(v150 + WORD2(v151)) = a11;
                              __int16 v56 = WORD2(v151);
                              unsigned __int16 v57 = WORD2(v151) + 2;
                              WORD2(v151) += 2;
                              if (HIBYTE(v151))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else if (WORD1(v151) > v57)
                              {
                                if (BYTE6(v151) == 2)
                                {
                                  WORD2(v151) = v56 + 3;
                                  *(unsigned char *)(v150 + v57) = a12;
                                  if (HIBYTE(v151))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else
                                  {
                                    unsigned int v35 = WORD2(v151);
                                    if (WORD1(v151) > WORD2(v151))
                                    {
                                      if (BYTE6(v151) == 2) {
                                        goto LABEL_235;
                                      }
                                      v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_343:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5711, v58);
                                    }
                                  }
                                  v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_343;
                                }
                                v117 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_340:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5710, v117);
                              }
                              v117 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_340;
                            }
                            v116 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_336:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5709, v116);
                          }
                          v116 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_336;
                        }
                        v115 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_332:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5708, v115);
                      }
                    }
                    v115 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_332;
                  }
                  v114 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_328:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5707, v114);
                }
              }
              v114 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_328;
            }
            v113 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_324:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5706, v113);
          }
          v113 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_324;
        }
        v112 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_320:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5705, v112);
      }
      v112 = "ByteStream_NumReadBytesAvail(bs) >= (10)";
      goto LABEL_320;
    case 4:
      if (HIBYTE(v151))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      else
      {
        uint64_t v59 = WORD2(v151);
        if (WORD1(v151) > WORD2(v151))
        {
          if (BYTE6(v151) == 2)
          {
            ++WORD2(v151);
            *(unsigned char *)(v150 + v59) = a3;
            if (HIBYTE(v151))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v60 = WORD2(v151);
              if (WORD1(v151) > WORD2(v151))
              {
                if (BYTE6(v151) == 2)
                {
                  ++WORD2(v151);
                  *(unsigned char *)(v150 + v60) = a4;
                  if (HIBYTE(v151))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v61 = WORD2(v151);
                    if (WORD1(v151) > WORD2(v151))
                    {
                      if (BYTE6(v151) == 2)
                      {
                        ++WORD2(v151);
                        *(unsigned char *)(v150 + v61) = a5;
                        if (HIBYTE(v151))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v62 = WORD2(v151);
                          if (WORD1(v151) > WORD2(v151))
                          {
                            if (BYTE6(v151) == 2)
                            {
                              ++WORD2(v151);
                              *(unsigned char *)(v150 + v62) = a8;
                              if (HIBYTE(v151))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v63 = WORD2(v151);
                                if (WORD1(v151) > WORD2(v151))
                                {
                                  if (BYTE6(v151) == 2)
                                  {
                                    ++WORD2(v151);
                                    *(unsigned char *)(v150 + v63) = a9;
                                    if (HIBYTE(v151))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v64 = WORD2(v151);
                                      if (WORD1(v151) > WORD2(v151))
                                      {
                                        if (BYTE6(v151) == 2)
                                        {
                                          ++WORD2(v151);
                                          *(unsigned char *)(v150 + v64) = a10;
                                          if (HIBYTE(v151))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else if (WORD1(v151) - WORD2(v151) > 1)
                                          {
                                            if (BYTE6(v151) == 2)
                                            {
                                              *(_WORD *)(v150 + WORD2(v151)) = a11;
                                              __int16 v65 = WORD2(v151);
                                              unsigned __int16 v66 = WORD2(v151) + 2;
                                              WORD2(v151) += 2;
                                              if (HIBYTE(v151))
                                              {
                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                              else if (WORD1(v151) > v66)
                                              {
                                                if (BYTE6(v151) == 2)
                                                {
                                                  WORD2(v151) = v65 + 3;
                                                  *(unsigned char *)(v150 + v66) = a12;
                                                  if (HIBYTE(v151))
                                                  {
                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                  else
                                                  {
                                                    unsigned int v35 = WORD2(v151);
                                                    if (WORD1(v151) > WORD2(v151))
                                                    {
                                                      if (BYTE6(v151) == 2) {
                                                        goto LABEL_235;
                                                      }
                                                      v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_378:
                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5723, v67);
                                                    }
                                                  }
                                                  v67 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                  goto LABEL_378;
                                                }
                                                v125 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_375:
                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5722, v125);
                                              }
                                              v125 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                              goto LABEL_375;
                                            }
                                            v124 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_371:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5721, v124);
                                          }
                                          v124 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                          goto LABEL_371;
                                        }
                                        v123 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_367:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5720, v123);
                                      }
                                    }
                                    v123 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_367;
                                  }
                                  v122 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_363:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5719, v122);
                                }
                              }
                              v122 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_363;
                            }
                            v121 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_359:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5718, v121);
                          }
                        }
                        v121 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_359;
                      }
                      v120 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_355:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5717, v120);
                    }
                  }
                  v120 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_355;
                }
                v119 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_351:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5716, v119);
              }
            }
            v119 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_351;
          }
          v118 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_347:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5715, v118);
        }
      }
      v118 = "ByteStream_NumReadBytesAvail(bs) >= 1";
      goto LABEL_347;
    default:
      JUMPOUT(0);
  }
}

uint64_t sub_1001CE97C(uint64_t a1, __int16 a2, int a3, char a4, char a5, char a6, char a7, char a8, char a9, __int16 a10, uint64_t a11)
{
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t result = sub_100059D70(&v42);
  if (!result)
  {
    if (HIBYTE(v43))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v43) - WORD2(v43) > 5)
    {
      if (BYTE6(v43) == 2)
      {
        sub_100008A18(v42 + WORD2(v43), a1, 6uLL);
        unsigned __int16 v23 = WORD2(v43) + 6;
        WORD2(v43) += 6;
        if (HIBYTE(v43))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v43) - v23 > 1)
        {
          if (BYTE6(v43) == 2)
          {
            *(unsigned char *)(v42 + v23) = a2;
            *(unsigned char *)(v42 + WORD2(v43) + 1) = HIBYTE(a2);
            __int16 v24 = WORD2(v43);
            unsigned __int16 v25 = WORD2(v43) + 2;
            WORD2(v43) += 2;
            if (a3)
            {
              if (HIBYTE(v43))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v43) > v25)
              {
                if (BYTE6(v43) == 2)
                {
                  char v26 = a5 | (a4 << 7);
                  goto LABEL_17;
                }
                uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5785, v38);
              }
              uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_66;
            }
            if (HIBYTE(v43))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v43) > v25)
            {
              if (BYTE6(v43) == 2)
              {
                char v26 = 0;
LABEL_17:
                WORD2(v43) = v24 + 3;
                *(unsigned char *)(v42 + v25) = v26;
                if (HIBYTE(v43))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v27 = WORD2(v43);
                  if (WORD1(v43) > WORD2(v43))
                  {
                    if (BYTE6(v43) == 2)
                    {
                      ++WORD2(v43);
                      *(unsigned char *)(v42 + v27) = a6;
                      if (HIBYTE(v43))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v28 = WORD2(v43);
                        if (WORD1(v43) > WORD2(v43))
                        {
                          if (BYTE6(v43) == 2)
                          {
                            ++WORD2(v43);
                            *(unsigned char *)(v42 + v28) = a7;
                            if (HIBYTE(v43))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v29 = WORD2(v43);
                              if (WORD1(v43) > WORD2(v43))
                              {
                                if (BYTE6(v43) == 2)
                                {
                                  ++WORD2(v43);
                                  *(unsigned char *)(v42 + v29) = a9;
                                  if (HIBYTE(v43))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else if (WORD1(v43) - WORD2(v43) > 1)
                                  {
                                    if (BYTE6(v43) == 2)
                                    {
                                      *(_WORD *)(v42 + WORD2(v43)) = a10;
                                      __int16 v30 = WORD2(v43);
                                      LOWORD(v31) = WORD2(v43) + 2;
                                      WORD2(v43) += 2;
                                      if (a3) {
                                        return sub_10001BCBC(82, v42, v31, a11, (uint64_t)sub_1000260B4, v20, v21, v22);
                                      }
                                      if (HIBYTE(v43))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                      else if (WORD1(v43) > (unsigned __int16)v31)
                                      {
                                        if (BYTE6(v43) == 2)
                                        {
                                          WORD2(v43) = v30 + 3;
                                          *(unsigned char *)(v42 + (unsigned __int16)v31) = a8;
                                          if (HIBYTE(v43))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v31 = WORD2(v43);
                                            if (WORD1(v43) > WORD2(v43))
                                            {
                                              if (BYTE6(v43) == 2)
                                              {
                                                ++WORD2(v43);
                                                *(unsigned char *)(v42 + v31) = a5 | (a4 << 7);
                                                LOBYTE(v31) = BYTE4(v43);
                                                return sub_10001BCBC(82, v42, v31, a11, (uint64_t)sub_1000260B4, v20, v21, v22);
                                              }
                                              unsigned __int16 v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5795, v41);
                                            }
                                          }
                                          unsigned __int16 v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_78;
                                        }
                                        __int16 v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5794, v40);
                                      }
                                      __int16 v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_74;
                                    }
                                    uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5792, v37);
                                  }
                                  uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_62;
                                }
                                char v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5791, v36);
                              }
                            }
                            char v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_58;
                          }
                          unsigned int v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5790, v35);
                        }
                      }
                      unsigned int v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_54;
                    }
                    unsigned __int16 v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5789, v34);
                  }
                }
                unsigned __int16 v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_50;
              }
              uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5787, v39);
            }
            uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_70;
          }
          __int16 v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5783, v33);
        }
        __int16 v33 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_46;
      }
      uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5782, v32);
    }
    uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_1001CEF14(int a1, int a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, uint64_t a13)
{
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  uint64_t result = sub_100059D70(&v81);
  if (!result)
  {
    if (a1)
    {
      if (HIBYTE(v82))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
      }
      else
      {
        uint64_t v25 = WORD2(v82);
        if (WORD1(v82) > WORD2(v82))
        {
          if (BYTE6(v82) == 2)
          {
            ++WORD2(v82);
            *(unsigned char *)(v81 + v25) = a2 | 0x80;
            uint64_t v26 = v81 + WORD2(v82);
            if (a2)
            {
              if (HIBYTE(v82))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v82) - WORD2(v82) > 5)
              {
                if (BYTE6(v82) == 2)
                {
                  *(_WORD *)(v26 + 4) = 0;
                  *(_DWORD *)uint64_t v26 = 0;
                  __int16 v27 = WORD2(v82);
                  unsigned __int16 v28 = WORD2(v82) + 6;
                  WORD2(v82) += 6;
                  if (HIBYTE(v82))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v82) > v28)
                  {
                    if (BYTE6(v82) == 2)
                    {
                      WORD2(v82) = v27 + 7;
                      *(unsigned char *)(v81 + v28) = a7;
                      if (HIBYTE(v82))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v29 = WORD2(v82);
                        if (WORD1(v82) > WORD2(v82))
                        {
                          if (BYTE6(v82) == 2)
                          {
                            ++WORD2(v82);
                            *(unsigned char *)(v81 + v29) = a8;
                            if (HIBYTE(v82))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v30 = WORD2(v82);
                              if (WORD1(v82) > WORD2(v82))
                              {
                                if (BYTE6(v82) == 2)
                                {
                                  ++WORD2(v82);
                                  *(unsigned char *)(v81 + v30) = a9;
                                  if (HIBYTE(v82))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v31 = WORD2(v82);
                                    if (WORD1(v82) - WORD2(v82) > 1)
                                    {
                                      if (BYTE6(v82) != 2)
                                      {
                                        uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                        goto LABEL_117;
                                      }
                                      goto LABEL_67;
                                    }
                                  }
                                  uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_117:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5816, v32);
                                }
                                uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_114:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5815, v59);
                              }
                            }
                            uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_114;
                          }
                          v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_110:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5814, v58);
                        }
                      }
                      v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_110;
                    }
                    unsigned __int16 v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_106:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5813, v57);
                  }
                  unsigned __int16 v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_106;
                }
                __int16 v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_102:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5812, v56);
              }
              __int16 v56 = "ByteStream_NumReadBytesAvail(bs) >= (6)";
              goto LABEL_102;
            }
            if (HIBYTE(v82))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v82) > WORD2(v82))
            {
              if (BYTE6(v82) == 2)
              {
                *(unsigned char *)uint64_t v26 = 0;
                __int16 v39 = WORD2(v82);
                unsigned __int16 v40 = ++WORD2(v82);
                if (HIBYTE(v82))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v82) > v40)
                {
                  if (BYTE6(v82) == 2)
                  {
                    WORD2(v82) = v39 + 2;
                    *(unsigned char *)(v81 + v40) = a3;
                    if (HIBYTE(v82))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v41 = WORD2(v82);
                      if (WORD1(v82) > WORD2(v82))
                      {
                        if (BYTE6(v82) == 2)
                        {
                          ++WORD2(v82);
                          *(unsigned char *)(v81 + v41) = a4;
                          if (HIBYTE(v82))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else
                          {
                            uint64_t v42 = WORD2(v82);
                            if (WORD1(v82) > WORD2(v82))
                            {
                              if (BYTE6(v82) == 2)
                              {
                                ++WORD2(v82);
                                *(unsigned char *)(v81 + v42) = a5;
                                if (HIBYTE(v82))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else if (WORD1(v82) > WORD2(v82))
                                {
                                  if (BYTE6(v82) == 2)
                                  {
                                    *(unsigned char *)(v81 + WORD2(v82)) = 0;
                                    __int16 v43 = WORD2(v82);
                                    unsigned __int16 v44 = ++WORD2(v82);
                                    if (HIBYTE(v82))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else if (WORD1(v82) > v44)
                                    {
                                      if (BYTE6(v82) == 2)
                                      {
                                        WORD2(v82) = v43 + 2;
                                        *(unsigned char *)(v81 + v44) = a6;
                                        if (HIBYTE(v82))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v45 = WORD2(v82);
                                          if (WORD1(v82) > WORD2(v82))
                                          {
                                            if (BYTE6(v82) == 2)
                                            {
                                              ++WORD2(v82);
                                              *(unsigned char *)(v81 + v45) = a7;
                                              if (HIBYTE(v82))
                                              {
                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                              else
                                              {
                                                uint64_t v46 = WORD2(v82);
                                                if (WORD1(v82) > WORD2(v82))
                                                {
                                                  if (BYTE6(v82) == 2)
                                                  {
                                                    ++WORD2(v82);
                                                    *(unsigned char *)(v81 + v46) = a8;
                                                    if (HIBYTE(v82))
                                                    {
                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                    }
                                                    else
                                                    {
                                                      uint64_t v47 = WORD2(v82);
                                                      if (WORD1(v82) > WORD2(v82))
                                                      {
                                                        if (BYTE6(v82) == 2)
                                                        {
                                                          ++WORD2(v82);
                                                          *(unsigned char *)(v81 + v47) = a9;
                                                          if (HIBYTE(v82))
                                                          {
                                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources"
                                                                                   "/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                          }
                                                          else
                                                          {
                                                            uint64_t v31 = WORD2(v82);
                                                            if (WORD1(v82) - WORD2(v82) > 1)
                                                            {
                                                              if (BYTE6(v82) == 2)
                                                              {
LABEL_67:
                                                                *(unsigned char *)(v81 + v31) = a11;
                                                                *(unsigned char *)(v81 + WORD2(v82) + 1) = a12;
                                                                WORD2(v82) += 2;
                                                                return sub_10001BCBC(501, v81, BYTE4(v82), a13, (uint64_t)sub_1000260B4, v22, v23, v24);
                                                              }
                                                              uint64_t v72 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_172:
                                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5828, v72);
                                                            }
                                                          }
                                                          uint64_t v72 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                          goto LABEL_172;
                                                        }
                                                        uint64_t v71 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_168:
                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5827, v71);
                                                      }
                                                    }
                                                    uint64_t v71 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                    goto LABEL_168;
                                                  }
                                                  uint64_t v70 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_164:
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5826, v70);
                                                }
                                              }
                                              uint64_t v70 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                              goto LABEL_164;
                                            }
                                            uint64_t v69 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_160:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5825, v69);
                                          }
                                        }
                                        uint64_t v69 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_160;
                                      }
                                      uint64_t v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_156:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5824, v68);
                                    }
                                    uint64_t v68 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_156;
                                  }
                                  v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_152:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5823, v67);
                                }
                                v67 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                goto LABEL_152;
                              }
                              unsigned __int16 v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_148:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5822, v66);
                            }
                          }
                          unsigned __int16 v66 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                          goto LABEL_148;
                        }
                        __int16 v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_144:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5821, v65);
                      }
                    }
                    __int16 v65 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_144;
                  }
                  uint64_t v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_140:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5820, v64);
                }
                uint64_t v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_140;
              }
              uint64_t v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_136:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5819, v63);
            }
            uint64_t v63 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
            goto LABEL_136;
          }
          uint64_t v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_98:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5809, v55);
        }
      }
      uint64_t v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
      goto LABEL_98;
    }
    if (HIBYTE(v82))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v33 = WORD2(v82);
      if (WORD1(v82) > WORD2(v82))
      {
        if (BYTE6(v82) == 2)
        {
          ++WORD2(v82);
          *(unsigned char *)(v81 + v33) = a2;
          if (a2)
          {
            if (HIBYTE(v82))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v82) - WORD2(v82) > 5)
            {
              if (BYTE6(v82) == 2)
              {
                uint64_t v34 = v81 + WORD2(v82);
                *(_WORD *)(v34 + 4) = 0;
                *(_DWORD *)uint64_t v34 = 0;
                __int16 v35 = WORD2(v82);
                unsigned __int16 v36 = WORD2(v82) + 6;
                WORD2(v82) += 6;
                if (HIBYTE(v82))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v82) > v36)
                {
                  if (BYTE6(v82) == 2)
                  {
                    WORD2(v82) = v35 + 7;
                    *(unsigned char *)(v81 + v36) = a7;
                    if (HIBYTE(v82))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else
                    {
                      uint64_t v37 = WORD2(v82);
                      if (WORD1(v82) > WORD2(v82))
                      {
                        if (BYTE6(v82) != 2)
                        {
                          uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                          goto LABEL_132;
                        }
LABEL_92:
                        WORD2(v82) = v37 + 1;
                        *(unsigned char *)(v81 + v37) = a8;
                        return sub_10001BCBC(501, v81, BYTE4(v82), a13, (uint64_t)sub_1000260B4, v22, v23, v24);
                      }
                    }
                    uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_132:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5836, v38);
                  }
                  uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_129:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5835, v62);
                }
                uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_129;
              }
              uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_125:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5834, v61);
            }
            uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= (6)";
            goto LABEL_125;
          }
          if (HIBYTE(v82))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v48 = WORD2(v82);
            if (WORD1(v82) > WORD2(v82))
            {
              if (BYTE6(v82) == 2)
              {
                ++WORD2(v82);
                *(unsigned char *)(v81 + v48) = a10;
                if (HIBYTE(v82))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v49 = WORD2(v82);
                  if (WORD1(v82) > WORD2(v82))
                  {
                    if (BYTE6(v82) == 2)
                    {
                      ++WORD2(v82);
                      *(unsigned char *)(v81 + v49) = a3;
                      if (HIBYTE(v82))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v50 = WORD2(v82);
                        if (WORD1(v82) > WORD2(v82))
                        {
                          if (BYTE6(v82) == 2)
                          {
                            ++WORD2(v82);
                            *(unsigned char *)(v81 + v50) = a4;
                            if (HIBYTE(v82))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v51 = WORD2(v82);
                              if (WORD1(v82) > WORD2(v82))
                              {
                                if (BYTE6(v82) == 2)
                                {
                                  ++WORD2(v82);
                                  *(unsigned char *)(v81 + v51) = a5;
                                  if (HIBYTE(v82))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v52 = WORD2(v82);
                                    if (WORD1(v82) > WORD2(v82))
                                    {
                                      if (BYTE6(v82) == 2)
                                      {
                                        ++WORD2(v82);
                                        *(unsigned char *)(v81 + v52) = a6;
                                        if (HIBYTE(v82))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else if (WORD1(v82) > WORD2(v82))
                                        {
                                          if (BYTE6(v82) == 2)
                                          {
                                            *(unsigned char *)(v81 + WORD2(v82)) = 0;
                                            __int16 v53 = WORD2(v82);
                                            unsigned __int16 v54 = ++WORD2(v82);
                                            if (HIBYTE(v82))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/bcm/bcm_vsc.c");
                                            }
                                            else if (WORD1(v82) > v54)
                                            {
                                              if (BYTE6(v82) == 2)
                                              {
                                                WORD2(v82) = v53 + 2;
                                                *(unsigned char *)(v81 + v54) = a7;
                                                if (HIBYTE(v82))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v37 = WORD2(v82);
                                                  if (WORD1(v82) > WORD2(v82))
                                                  {
                                                    if (BYTE6(v82) == 2) {
                                                      goto LABEL_92;
                                                    }
                                                    uint64_t v80 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_204:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5846, v80);
                                                  }
                                                }
                                                uint64_t v80 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_204;
                                              }
                                              uint64_t v79 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_200:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5845, v79);
                                            }
                                            uint64_t v79 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                            goto LABEL_200;
                                          }
                                          uint64_t v78 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_196:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5844, v78);
                                        }
                                        uint64_t v78 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                        goto LABEL_196;
                                      }
                                      v77 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_192:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5843, v77);
                                    }
                                  }
                                  v77 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_192;
                                }
                                unsigned __int16 v76 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_188:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5842, v76);
                              }
                            }
                            unsigned __int16 v76 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_188;
                          }
                          __int16 v75 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_184:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5841, v75);
                        }
                      }
                      __int16 v75 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_184;
                    }
                    uint64_t v74 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_180:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5840, v74);
                  }
                }
                uint64_t v74 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_180;
              }
              uint64_t v73 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_176:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5839, v73);
            }
          }
          uint64_t v73 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_176;
        }
        uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_121:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5831, v60);
      }
    }
    uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_121;
  }
  return result;
}

uint64_t sub_1001CFD00(__int16 a1, __int16 a2, char a3, char a4, char a5, __int16 a6, __int16 a7, __int16 a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, uint64_t a17)
{
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t result = sub_100059D70(&v55);
  if (!result)
  {
    if (HIBYTE(v56))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v56) - WORD2(v56) > 1)
    {
      if (BYTE6(v56) == 2)
      {
        *(_WORD *)(v55 + WORD2(v56)) = a1;
        unsigned __int16 v29 = WORD2(v56) + 2;
        WORD2(v56) += 2;
        if (HIBYTE(v56))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v56) - v29 > 1)
        {
          if (BYTE6(v56) == 2)
          {
            *(unsigned char *)(v55 + v29) = a2;
            *(unsigned char *)(v55 + WORD2(v56) + 1) = HIBYTE(a2);
            __int16 v30 = WORD2(v56);
            unsigned __int16 v31 = WORD2(v56) + 2;
            WORD2(v56) += 2;
            if (HIBYTE(v56))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v56) > v31)
            {
              if (BYTE6(v56) == 2)
              {
                WORD2(v56) = v30 + 3;
                *(unsigned char *)(v55 + v31) = a3;
                if (HIBYTE(v56))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v32 = WORD2(v56);
                  if (WORD1(v56) > WORD2(v56))
                  {
                    if (BYTE6(v56) == 2)
                    {
                      ++WORD2(v56);
                      *(unsigned char *)(v55 + v32) = a4;
                      if (HIBYTE(v56))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v33 = WORD2(v56);
                        if (WORD1(v56) > WORD2(v56))
                        {
                          if (BYTE6(v56) == 2)
                          {
                            ++WORD2(v56);
                            *(unsigned char *)(v55 + v33) = a5;
                            if (HIBYTE(v56))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else if (WORD1(v56) - WORD2(v56) > 1)
                            {
                              if (BYTE6(v56) == 2)
                              {
                                *(_WORD *)(v55 + WORD2(v56)) = a6;
                                unsigned __int16 v34 = WORD2(v56) + 2;
                                WORD2(v56) += 2;
                                if (HIBYTE(v56))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else if (WORD1(v56) - v34 > 1)
                                {
                                  if (BYTE6(v56) == 2)
                                  {
                                    *(unsigned char *)(v55 + v34) = a7;
                                    *(unsigned char *)(v55 + WORD2(v56) + 1) = HIBYTE(a7);
                                    unsigned __int16 v35 = WORD2(v56) + 2;
                                    WORD2(v56) += 2;
                                    if (HIBYTE(v56))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else if (WORD1(v56) - v35 > 1)
                                    {
                                      if (BYTE6(v56) == 2)
                                      {
                                        *(unsigned char *)(v55 + v35) = a8;
                                        *(unsigned char *)(v55 + WORD2(v56) + 1) = HIBYTE(a8);
                                        unsigned __int16 v36 = WORD2(v56) + 2;
                                        WORD2(v56) += 2;
                                        if (HIBYTE(v56))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else if (WORD1(v56) - v36 > 1)
                                        {
                                          if (BYTE6(v56) == 2)
                                          {
                                            *(unsigned char *)(v55 + v36) = a9;
                                            *(unsigned char *)(v55 + WORD2(v56) + 1) = a10;
                                            unsigned __int16 v37 = WORD2(v56) + 2;
                                            WORD2(v56) += 2;
                                            if (HIBYTE(v56))
                                            {
                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetoo"
                                                                     "th_base/Stack/vsc/bcm/bcm_vsc.c");
                                            }
                                            else if (WORD1(v56) - v37 > 1)
                                            {
                                              if (BYTE6(v56) == 2)
                                              {
                                                *(unsigned char *)(v55 + v37) = a11;
                                                *(unsigned char *)(v55 + WORD2(v56) + 1) = a12;
                                                unsigned __int16 v38 = WORD2(v56) + 2;
                                                WORD2(v56) += 2;
                                                if (HIBYTE(v56))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else if (WORD1(v56) - v38 > 1)
                                                {
                                                  if (BYTE6(v56) == 2)
                                                  {
                                                    *(unsigned char *)(v55 + v38) = a13;
                                                    *(unsigned char *)(v55 + WORD2(v56) + 1) = a14;
                                                    __int16 v39 = WORD2(v56);
                                                    unsigned __int16 v40 = WORD2(v56) + 2;
                                                    WORD2(v56) += 2;
                                                    if (HIBYTE(v56))
                                                    {
                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mobil"
                                                                             "eBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                    }
                                                    else if (WORD1(v56) > v40)
                                                    {
                                                      if (BYTE6(v56) == 2)
                                                      {
                                                        WORD2(v56) = v39 + 3;
                                                        *(unsigned char *)(v55 + v40) = a15;
                                                        if (HIBYTE(v56))
                                                        {
                                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/M"
                                                                                 "obileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                        }
                                                        else
                                                        {
                                                          uint64_t v41 = WORD2(v56);
                                                          if (WORD1(v56) > WORD2(v56))
                                                          {
                                                            if (BYTE6(v56) == 2)
                                                            {
                                                              ++WORD2(v56);
                                                              *(unsigned char *)(v55 + v41) = a16;
                                                              return sub_10001BCBC(48, v55, BYTE4(v56), a17, (uint64_t)sub_1000260B4, v26, v27, v28);
                                                            }
                                                            unsigned __int16 v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_94:
                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5872, v54);
                                                          }
                                                        }
                                                        unsigned __int16 v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                        goto LABEL_94;
                                                      }
                                                      __int16 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_90:
                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5871, v53);
                                                    }
                                                    __int16 v53 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                    goto LABEL_90;
                                                  }
                                                  uint64_t v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5870, v52);
                                                }
                                                uint64_t v52 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                goto LABEL_86;
                                              }
                                              uint64_t v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5869, v51);
                                            }
                                            uint64_t v51 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                            goto LABEL_82;
                                          }
                                          uint64_t v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5868, v50);
                                        }
                                        uint64_t v50 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                        goto LABEL_78;
                                      }
                                      uint64_t v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5867, v49);
                                    }
                                    uint64_t v49 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                    goto LABEL_74;
                                  }
                                  uint64_t v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5866, v48);
                                }
                                uint64_t v48 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                goto LABEL_70;
                              }
                              uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5865, v47);
                            }
                            uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                            goto LABEL_66;
                          }
                          uint64_t v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5864, v46);
                        }
                      }
                      uint64_t v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_62;
                    }
                    uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5863, v45);
                  }
                }
                uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_58;
              }
              unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5862, v44);
            }
            unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_54;
          }
          __int16 v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5861, v43);
        }
        __int16 v43 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_50;
      }
      uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5860, v42);
    }
    uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_46;
  }
  return result;
}

uint64_t sub_1001D049C(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(49, v9, BYTE4(v10), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5885, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D0590(__int16 a1, __int16 a2, __int16 a3, __int16 a4, char a5, __int16 a6, uint64_t a7)
{
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t result = sub_100059D70(&v29);
  if (!result)
  {
    if (HIBYTE(v30))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v30) - WORD2(v30) > 1)
    {
      if (BYTE6(v30) == 2)
      {
        *(_WORD *)(v29 + WORD2(v30)) = a1;
        unsigned __int16 v18 = WORD2(v30) + 2;
        WORD2(v30) += 2;
        if (HIBYTE(v30))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v30) - v18 > 1)
        {
          if (BYTE6(v30) == 2)
          {
            *(unsigned char *)(v29 + v18) = a2;
            *(unsigned char *)(v29 + WORD2(v30) + 1) = HIBYTE(a2);
            unsigned __int16 v19 = WORD2(v30) + 2;
            WORD2(v30) += 2;
            if (HIBYTE(v30))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v30) - v19 > 1)
            {
              if (BYTE6(v30) == 2)
              {
                *(unsigned char *)(v29 + v19) = a3;
                *(unsigned char *)(v29 + WORD2(v30) + 1) = HIBYTE(a3);
                unsigned __int16 v20 = WORD2(v30) + 2;
                WORD2(v30) += 2;
                if (HIBYTE(v30))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v30) - v20 > 1)
                {
                  if (BYTE6(v30) == 2)
                  {
                    *(unsigned char *)(v29 + v20) = a4;
                    *(unsigned char *)(v29 + WORD2(v30) + 1) = HIBYTE(a4);
                    __int16 v21 = WORD2(v30);
                    unsigned __int16 v22 = WORD2(v30) + 2;
                    WORD2(v30) += 2;
                    if (HIBYTE(v30))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else if (WORD1(v30) > v22)
                    {
                      if (BYTE6(v30) == 2)
                      {
                        WORD2(v30) = v21 + 3;
                        *(unsigned char *)(v29 + v22) = a5;
                        if (HIBYTE(v30))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v30) - WORD2(v30) > 1)
                        {
                          if (BYTE6(v30) == 2)
                          {
                            *(_WORD *)(v29 + WORD2(v30)) = a6;
                            WORD2(v30) += 2;
                            return sub_10001BCBC(50, v29, BYTE4(v30), a7, (uint64_t)sub_1000260B4, v15, v16, v17);
                          }
                          uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5903, v28);
                        }
                        uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_45;
                      }
                      uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5902, v27);
                    }
                    uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_41;
                  }
                  uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5901, v26);
                }
                uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_37;
              }
              uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5900, v25);
            }
            uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 2";
            goto LABEL_33;
          }
          uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5899, v24);
        }
        uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_29;
      }
      uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5898, v23);
    }
    uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1001D0978(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(56, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5917, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5916, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D0AF0(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(53, v14, BYTE4(v15), a3, (uint64_t)sub_1001A5684, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5931, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5930, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D0C68(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 1)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 2;
        WORD2(v15) += 2;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 3;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(51, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5946, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5945, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D0DE0(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(52, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5960, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D0EB8(__int16 a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t result = sub_100059D70(&v23);
  if (!result)
  {
    if (HIBYTE(v24))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v24);
      if (WORD1(v24) > WORD2(v24))
      {
        if (BYTE6(v24) == 2)
        {
          ++WORD2(v24);
          *(unsigned char *)(v23 + v14) = 93;
          if (HIBYTE(v24))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v24) - WORD2(v24) > 1)
          {
            if (BYTE6(v24) == 2)
            {
              *(_WORD *)(v23 + WORD2(v24)) = a1;
              __int16 v15 = WORD2(v24);
              unsigned __int16 v16 = WORD2(v24) + 2;
              WORD2(v24) += 2;
              if (HIBYTE(v24))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v24) > v16)
              {
                if (BYTE6(v24) == 2)
                {
                  WORD2(v24) = v15 + 3;
                  *(unsigned char *)(v23 + v16) = a2;
                  if (HIBYTE(v24))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v24) > WORD2(v24))
                  {
                    if (BYTE6(v24) == 2)
                    {
                      *(unsigned char *)(v23 + WORD2(v24)) = a3;
                      unsigned __int16 v17 = ++WORD2(v24);
                      if (HIBYTE(v24))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v24) > v17)
                      {
                        if (BYTE6(v24) == 2)
                        {
                          *(unsigned char *)(v23 + v17) = a4;
                          ++WORD2(v24);
                          return sub_10001BCBC(233, v23, BYTE4(v24), a5, (uint64_t)sub_1000260B4, v11, v12, v13);
                        }
                        unsigned __int16 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5977, v22);
                      }
                      unsigned __int16 v22 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                      goto LABEL_38;
                    }
                    __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5976, v21);
                  }
                  __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                  goto LABEL_34;
                }
                unsigned __int16 v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5975, v20);
              }
              unsigned __int16 v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_30;
            }
            unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5974, v19);
          }
          unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_26;
        }
        unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5973, v18);
      }
    }
    unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1001D11B8(char a1, char a2, char a3, int a4, char a5, uint64_t a6)
{
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t result = sub_100059D70(&v30);
  if (!result)
  {
    if (HIBYTE(v31))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v16 = WORD2(v31);
      if (WORD1(v31) > WORD2(v31))
      {
        if (BYTE6(v31) == 2)
        {
          ++WORD2(v31);
          *(unsigned char *)(v30 + v16) = 94;
          if (HIBYTE(v31))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v17 = WORD2(v31);
            if (WORD1(v31) > WORD2(v31))
            {
              if (BYTE6(v31) == 2)
              {
                ++WORD2(v31);
                *(unsigned char *)(v30 + v17) = 2;
                if (HIBYTE(v31))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v18 = WORD2(v31);
                  if (WORD1(v31) > WORD2(v31))
                  {
                    if (BYTE6(v31) == 2)
                    {
                      ++WORD2(v31);
                      *(unsigned char *)(v30 + v18) = a1;
                      if (HIBYTE(v31))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v19 = WORD2(v31);
                        if (WORD1(v31) > WORD2(v31))
                        {
                          if (BYTE6(v31) == 2)
                          {
                            ++WORD2(v31);
                            *(unsigned char *)(v30 + v19) = a2;
                            if (HIBYTE(v31))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else
                            {
                              uint64_t v20 = WORD2(v31);
                              if (WORD1(v31) > WORD2(v31))
                              {
                                if (BYTE6(v31) == 2)
                                {
                                  ++WORD2(v31);
                                  *(unsigned char *)(v30 + v20) = a3;
                                  if (HIBYTE(v31))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else if (WORD1(v31) - WORD2(v31) > 3)
                                  {
                                    if (BYTE6(v31) == 2)
                                    {
                                      *(_WORD *)(v30 + WORD2(v31)) = a4;
                                      *(unsigned char *)(v30 + WORD2(v31) + 2) = BYTE2(a4);
                                      *(unsigned char *)(v30 + WORD2(v31) + 3) = HIBYTE(a4);
                                      __int16 v21 = WORD2(v31);
                                      unsigned __int16 v22 = WORD2(v31) + 4;
                                      WORD2(v31) += 4;
                                      if (HIBYTE(v31))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                      else if (WORD1(v31) > v22)
                                      {
                                        if (BYTE6(v31) == 2)
                                        {
                                          WORD2(v31) = v21 + 5;
                                          *(unsigned char *)(v30 + v22) = a5;
                                          return sub_10001BCBC(233, v30, BYTE4(v31), a6, (uint64_t)sub_1000260B4, v13, v14, v15);
                                        }
                                        uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5998, v29);
                                      }
                                      uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_52;
                                    }
                                    uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5997, v28);
                                  }
                                  uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 4";
                                  goto LABEL_48;
                                }
                                uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5996, v27);
                              }
                            }
                            uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_44;
                          }
                          uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5995, v26);
                        }
                      }
                      uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_40;
                    }
                    uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5994, v25);
                  }
                }
                uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }
              uint64_t v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5993, v24);
            }
          }
          uint64_t v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }
        uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5992, v23);
      }
    }
    uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1001D15CC(_WORD *a1, __int16 a2, char a3, uint64_t a4)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v19) - WORD2(v19) > 1)
    {
      if (BYTE6(v19) == 2)
      {
        *(_WORD *)(v18 + WORD2(v19)) = *a1;
        unsigned __int16 v12 = WORD2(v19) + 2;
        WORD2(v19) += 2;
        if (HIBYTE(v19))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v19) - v12 > 1)
        {
          if (BYTE6(v19) == 2)
          {
            *(unsigned char *)(v18 + v12) = a2;
            *(unsigned char *)(v18 + WORD2(v19) + 1) = HIBYTE(a2);
            __int16 v13 = WORD2(v19);
            unsigned __int16 v14 = WORD2(v19) + 2;
            WORD2(v19) += 2;
            if (HIBYTE(v19))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v19) > v14)
            {
              if (BYTE6(v19) == 2)
              {
                WORD2(v19) = v13 + 3;
                *(unsigned char *)(v18 + v14) = a3;
                return sub_10001BCBC(512, v18, BYTE4(v19), a4, (uint64_t)sub_1000260B4, v9, v10, v11);
              }
              uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6014, v17);
            }
            uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }
          uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6013, v16);
        }
        uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_20;
      }
      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6012, v15);
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D17E0(char a1, uint64_t a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 3)
    {
      if (BYTE6(v15) == 2)
      {
        *(unsigned char *)(v14 + WORD2(v15)) = 0;
        *(_WORD *)(v14 + WORD2(v15) + 1) = 0;
        *(unsigned char *)(v14 + WORD2(v15) + 3) = 0;
        __int16 v8 = WORD2(v15);
        unsigned __int16 v9 = WORD2(v15) + 4;
        WORD2(v15) += 4;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v9)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v8 + 5;
            *(unsigned char *)(v14 + v9) = a1;
            if (HIBYTE(v15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v10 = WORD2(v15);
              if (WORD1(v15) > WORD2(v15))
              {
                if (BYTE6(v15) == 2)
                {
                  ++WORD2(v15);
                  *(unsigned char *)(v14 + v10) = 4;
                  return sub_10001BCBC(520, v14, BYTE4(v15), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
                }
                __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6346, v13);
              }
            }
            __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_24;
          }
          unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6345, v12);
        }
        unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_20;
      }
      uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6344, v11);
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D19E4(uint64_t a1)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t result = sub_100059D70(&v7);
  if (!result)
  {
    if (HIBYTE(v8))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v8) - WORD2(v8) > 3)
    {
      if (BYTE6(v8) == 2)
      {
        *(unsigned char *)(v7 + WORD2(v8)) = 1;
        *(_WORD *)(v7 + WORD2(v8) + 1) = 0;
        *(unsigned char *)(v7 + WORD2(v8) + 3) = 0;
        WORD2(v8) += 4;
        return sub_10001BCBC(520, v7, BYTE4(v8), a1, (uint64_t)sub_1001A4A68, v3, v4, v5);
      }
      uint64_t v6 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6360, v6);
    }
    uint64_t v6 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D1AF4(__int16 a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  uint64_t result = sub_100059D70(&v71);
  if (!result)
  {
    if (HIBYTE(v72))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v72) - WORD2(v72) > 1)
    {
      if (BYTE6(v72) == 2)
      {
        *(_WORD *)(v71 + WORD2(v72)) = a1;
        __int16 v16 = WORD2(v72);
        unsigned __int16 v17 = WORD2(v72) + 2;
        WORD2(v72) += 2;
        if (HIBYTE(v72))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v72) > v17)
        {
          if (BYTE6(v72) == 2)
          {
            WORD2(v72) = v16 + 3;
            *(unsigned char *)(v71 + v17) = a2;
            if (HIBYTE(v72))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else
            {
              uint64_t v18 = WORD2(v72);
              if (WORD1(v72) > WORD2(v72))
              {
                if (BYTE6(v72) == 2)
                {
                  ++WORD2(v72);
                  *(unsigned char *)(v71 + v18) = a3;
                  if (HIBYTE(v72))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v19 = WORD2(v72);
                    if (WORD1(v72) > WORD2(v72))
                    {
                      if (BYTE6(v72) == 2)
                      {
                        ++WORD2(v72);
                        *(unsigned char *)(v71 + v19) = a4;
                        if (HIBYTE(v72))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v20 = WORD2(v72);
                          if (WORD1(v72) > WORD2(v72))
                          {
                            if (BYTE6(v72) == 2)
                            {
                              ++WORD2(v72);
                              *(unsigned char *)(v71 + v20) = a4;
                              if (HIBYTE(v72))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v21 = WORD2(v72);
                                if (WORD1(v72) > WORD2(v72))
                                {
                                  if (BYTE6(v72) == 2)
                                  {
                                    ++WORD2(v72);
                                    *(unsigned char *)(v71 + v21) = a4;
                                    if (HIBYTE(v72))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v22 = WORD2(v72);
                                      if (WORD1(v72) > WORD2(v72))
                                      {
                                        if (BYTE6(v72) == 2)
                                        {
                                          ++WORD2(v72);
                                          *(unsigned char *)(v71 + v22) = a4;
                                          if (HIBYTE(v72))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v23 = WORD2(v72);
                                            if (WORD1(v72) > WORD2(v72))
                                            {
                                              if (BYTE6(v72) == 2)
                                              {
                                                ++WORD2(v72);
                                                *(unsigned char *)(v71 + v23) = a4;
                                                if (HIBYTE(v72))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v24 = WORD2(v72);
                                                  if (WORD1(v72) > WORD2(v72))
                                                  {
                                                    if (BYTE6(v72) == 2)
                                                    {
                                                      ++WORD2(v72);
                                                      *(unsigned char *)(v71 + v24) = a4;
                                                      if (HIBYTE(v72))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                      else
                                                      {
                                                        uint64_t v25 = WORD2(v72);
                                                        if (WORD1(v72) > WORD2(v72))
                                                        {
                                                          if (BYTE6(v72) == 2)
                                                          {
                                                            ++WORD2(v72);
                                                            *(unsigned char *)(v71 + v25) = a4;
                                                            if (HIBYTE(v72))
                                                            {
                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                            }
                                                            else
                                                            {
                                                              uint64_t v26 = WORD2(v72);
                                                              if (WORD1(v72) > WORD2(v72))
                                                              {
                                                                if (BYTE6(v72) == 2)
                                                                {
                                                                  ++WORD2(v72);
                                                                  *(unsigned char *)(v71 + v26) = a4;
                                                                  if (HIBYTE(v72))
                                                                  {
                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }
                                                                  else
                                                                  {
                                                                    uint64_t v27 = WORD2(v72);
                                                                    if (WORD1(v72) > WORD2(v72))
                                                                    {
                                                                      if (BYTE6(v72) == 2)
                                                                      {
                                                                        ++WORD2(v72);
                                                                        *(unsigned char *)(v71 + v27) = a4;
                                                                        if (HIBYTE(v72))
                                                                        {
                                                                          sub_10025A794((uint64_t)"/Library/Caches/com.app"
                                                                                                 "le.xbs/Sources/MobileBl"
                                                                                                 "uetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                        }
                                                                        else
                                                                        {
                                                                          uint64_t v28 = WORD2(v72);
                                                                          if (WORD1(v72) > WORD2(v72))
                                                                          {
                                                                            if (BYTE6(v72) == 2)
                                                                            {
                                                                              ++WORD2(v72);
                                                                              *(unsigned char *)(v71 + v28) = a4;
                                                                              if (HIBYTE(v72))
                                                                              {
                                                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                              }
                                                                              else
                                                                              {
                                                                                uint64_t v29 = WORD2(v72);
                                                                                if (WORD1(v72) > WORD2(v72))
                                                                                {
                                                                                  if (BYTE6(v72) == 2)
                                                                                  {
                                                                                    ++WORD2(v72);
                                                                                    *(unsigned char *)(v71 + v29) = a4;
                                                                                    if (HIBYTE(v72))
                                                                                    {
                                                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      uint64_t v30 = WORD2(v72);
                                                                                      if (WORD1(v72) > WORD2(v72))
                                                                                      {
                                                                                        if (BYTE6(v72) == 2)
                                                                                        {
                                                                                          ++WORD2(v72);
                                                                                          *(unsigned char *)(v71 + v30) = a4;
                                                                                          if (HIBYTE(v72))
                                                                                          {
                                                                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            uint64_t v31 = WORD2(v72);
                                                                                            if (WORD1(v72) > WORD2(v72))
                                                                                            {
                                                                                              if (BYTE6(v72) == 2)
                                                                                              {
                                                                                                ++WORD2(v72);
                                                                                                *(unsigned char *)(v71 + v31) = a4;
                                                                                                if (HIBYTE(v72))
                                                                                                {
                                                                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  uint64_t v32 = WORD2(v72);
                                                                                                  if (WORD1(v72) > WORD2(v72))
                                                                                                  {
                                                                                                    if (BYTE6(v72) == 2)
                                                                                                    {
                                                                                                      ++WORD2(v72);
                                                                                                      *(unsigned char *)(v71 + v32) = a4;
                                                                                                      if (HIBYTE(v72))
                                                                                                      {
                                                                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        uint64_t v33 = WORD2(v72);
                                                                                                        if (WORD1(v72) > WORD2(v72))
                                                                                                        {
                                                                                                          if (BYTE6(v72) == 2)
                                                                                                          {
                                                                                                            ++WORD2(v72);
                                                                                                            *(unsigned char *)(v71 + v33) = a4;
                                                                                                            if (HIBYTE(v72))
                                                                                                            {
                                                                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              uint64_t v34 = WORD2(v72);
                                                                                                              if (WORD1(v72) > WORD2(v72))
                                                                                                              {
                                                                                                                if (BYTE6(v72) == 2)
                                                                                                                {
                                                                                                                  ++WORD2(v72);
                                                                                                                  *(unsigned char *)(v71 + v34) = a4;
                                                                                                                  if (HIBYTE(v72))
                                                                                                                  {
                                                                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    uint64_t v35 = WORD2(v72);
                                                                                                                    if (WORD1(v72) > WORD2(v72))
                                                                                                                    {
                                                                                                                      if (BYTE6(v72) == 2)
                                                                                                                      {
                                                                                                                        ++WORD2(v72);
                                                                                                                        *(unsigned char *)(v71 + v35) = a4;
                                                                                                                        if (HIBYTE(v72))
                                                                                                                        {
                                                                                                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          uint64_t v36 = WORD2(v72);
                                                                                                                          if (WORD1(v72) > WORD2(v72))
                                                                                                                          {
                                                                                                                            if (BYTE6(v72) == 2)
                                                                                                                            {
                                                                                                                              ++WORD2(v72);
                                                                                                                              *(unsigned char *)(v71 + v36) = a4;
                                                                                                                              if (HIBYTE(v72))
                                                                                                                              {
                                                                                                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                uint64_t v37 = WORD2(v72);
                                                                                                                                if (WORD1(v72) > WORD2(v72))
                                                                                                                                {
                                                                                                                                  if (BYTE6(v72) == 2)
                                                                                                                                  {
                                                                                                                                    ++WORD2(v72);
                                                                                                                                    *(unsigned char *)(v71 + v37) = a4;
                                                                                                                                    if (HIBYTE(v72))
                                                                                                                                    {
                                                                                                                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      uint64_t v38 = WORD2(v72);
                                                                                                                                      if (WORD1(v72) > WORD2(v72))
                                                                                                                                      {
                                                                                                                                        if (BYTE6(v72) == 2)
                                                                                                                                        {
                                                                                                                                          ++WORD2(v72);
                                                                                                                                          *(unsigned char *)(v71 + v38) = a4;
                                                                                                                                          if (HIBYTE(v72))
                                                                                                                                          {
                                                                                                                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            uint64_t v39 = WORD2(v72);
                                                                                                                                            if (WORD1(v72) > WORD2(v72))
                                                                                                                                            {
                                                                                                                                              if (BYTE6(v72) == 2)
                                                                                                                                              {
                                                                                                                                                ++WORD2(v72);
                                                                                                                                                *(unsigned char *)(v71 + v39) = a4;
                                                                                                                                                if (HIBYTE(v72))
                                                                                                                                                {
                                                                                                                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  uint64_t v40 = WORD2(v72);
                                                                                                                                                  if (WORD1(v72) > WORD2(v72))
                                                                                                                                                  {
                                                                                                                                                    if (BYTE6(v72) == 2)
                                                                                                                                                    {
                                                                                                                                                      ++WORD2(v72);
                                                                                                                                                      *(unsigned char *)(v71 + v40) = a4;
                                                                                                                                                      if (HIBYTE(v72))
                                                                                                                                                      {
                                                                                                                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        uint64_t v41 = WORD2(v72);
                                                                                                                                                        if (WORD1(v72) > WORD2(v72))
                                                                                                                                                        {
                                                                                                                                                          if (BYTE6(v72) == 2)
                                                                                                                                                          {
                                                                                                                                                            ++WORD2(v72);
                                                                                                                                                            *(unsigned char *)(v71 + v41) = a4;
                                                                                                                                                            if (HIBYTE(v72))
                                                                                                                                                            {
                                                                                                                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              uint64_t v42 = WORD2(v72);
                                                                                                                                                              if (WORD1(v72) > WORD2(v72))
                                                                                                                                                              {
                                                                                                                                                                if (BYTE6(v72) == 2)
                                                                                                                                                                {
                                                                                                                                                                  ++WORD2(v72);
                                                                                                                                                                  *(unsigned char *)(v71 + v42) = a4;
                                                                                                                                                                  if (HIBYTE(v72))
                                                                                                                                                                  {
                                                                                                                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                                                                                                                                  }
                                                                                                                                                                  else if (WORD1(v72) > WORD2(v72))
                                                                                                                                                                  {
                                                                                                                                                                    if (BYTE6(v72) == 2)
                                                                                                                                                                    {
                                                                                                                                                                      *(unsigned char *)(v71 + WORD2(v72)) = a5;
                                                                                                                                                                      ++WORD2(v72);
                                                                                                                                                                      return sub_10001BCBC(508, v71, BYTE4(v72), a6, (uint64_t)sub_1000260B4, v13, v14, v15);
                                                                                                                                                                    }
                                                                                                                                                                    uint64_t v70 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_199:
                                                                                                                                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5317, v70);
                                                                                                                                                                  }
                                                                                                                                                                  uint64_t v70 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                                                                                                                                                  goto LABEL_199;
                                                                                                                                                                }
                                                                                                                                                                uint64_t v69 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_195:
                                                                                                                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5316, v69);
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                            uint64_t v69 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                                                            goto LABEL_195;
                                                                                                                                                          }
                                                                                                                                                          uint64_t v68 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_191:
                                                                                                                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5315, v68);
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                      uint64_t v68 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                                                      goto LABEL_191;
                                                                                                                                                    }
                                                                                                                                                    v67 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_187:
                                                                                                                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5314, v67);
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                                v67 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                                                goto LABEL_187;
                                                                                                                                              }
                                                                                                                                              unsigned __int16 v66 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_183:
                                                                                                                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5313, v66);
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                          unsigned __int16 v66 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                                          goto LABEL_183;
                                                                                                                                        }
                                                                                                                                        __int16 v65 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_179:
                                                                                                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5312, v65);
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                    __int16 v65 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                                    goto LABEL_179;
                                                                                                                                  }
                                                                                                                                  uint64_t v64 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_175:
                                                                                                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5311, v64);
                                                                                                                                }
                                                                                                                              }
                                                                                                                              uint64_t v64 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                              goto LABEL_175;
                                                                                                                            }
                                                                                                                            uint64_t v63 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_171:
                                                                                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5310, v63);
                                                                                                                          }
                                                                                                                        }
                                                                                                                        uint64_t v63 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                        goto LABEL_171;
                                                                                                                      }
                                                                                                                      uint64_t v62 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_167:
                                                                                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5309, v62);
                                                                                                                    }
                                                                                                                  }
                                                                                                                  uint64_t v62 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                                  goto LABEL_167;
                                                                                                                }
                                                                                                                uint64_t v61 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_163:
                                                                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5308, v61);
                                                                                                              }
                                                                                                            }
                                                                                                            uint64_t v61 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                            goto LABEL_163;
                                                                                                          }
                                                                                                          uint64_t v60 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_159:
                                                                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5307, v60);
                                                                                                        }
                                                                                                      }
                                                                                                      uint64_t v60 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                      goto LABEL_159;
                                                                                                    }
                                                                                                    uint64_t v59 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_155:
                                                                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5306, v59);
                                                                                                  }
                                                                                                }
                                                                                                uint64_t v59 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                                goto LABEL_155;
                                                                                              }
                                                                                              v58 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_151:
                                                                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5305, v58);
                                                                                            }
                                                                                          }
                                                                                          v58 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                          goto LABEL_151;
                                                                                        }
                                                                                        unsigned __int16 v57 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_147:
                                                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5304, v57);
                                                                                      }
                                                                                    }
                                                                                    unsigned __int16 v57 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                                    goto LABEL_147;
                                                                                  }
                                                                                  uint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_143:
                                                                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5303, v56);
                                                                                }
                                                                              }
                                                                              uint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                              goto LABEL_143;
                                                                            }
                                                                            uint64_t v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_139:
                                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5302, v55);
                                                                          }
                                                                        }
                                                                        uint64_t v55 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                        goto LABEL_139;
                                                                      }
                                                                      unsigned __int16 v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_135:
                                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5301, v54);
                                                                    }
                                                                  }
                                                                  unsigned __int16 v54 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_135;
                                                                }
                                                                __int16 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_131:
                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5300, v53);
                                                              }
                                                            }
                                                            __int16 v53 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                            goto LABEL_131;
                                                          }
                                                          uint64_t v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_127:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5299, v52);
                                                        }
                                                      }
                                                      uint64_t v52 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_127;
                                                    }
                                                    uint64_t v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_123:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5298, v51);
                                                  }
                                                }
                                                uint64_t v51 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_123;
                                              }
                                              uint64_t v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_119:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5297, v50);
                                            }
                                          }
                                          uint64_t v50 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_119;
                                        }
                                        uint64_t v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_115:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5296, v49);
                                      }
                                    }
                                    uint64_t v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_115;
                                  }
                                  uint64_t v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_111:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5295, v48);
                                }
                              }
                              uint64_t v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_111;
                            }
                            uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_107:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5294, v47);
                          }
                        }
                        uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_107;
                      }
                      uint64_t v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_103:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5293, v46);
                    }
                  }
                  uint64_t v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_103;
                }
                uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_99:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5292, v45);
              }
            }
            uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_99;
          }
          unsigned __int16 v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_95:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5291, v44);
        }
        unsigned __int16 v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_95;
      }
      __int16 v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_91:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 5290, v43);
    }
    __int16 v43 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_91;
  }
  return result;
}

uint64_t sub_1001D28B8(__int16 a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = a1;
        WORD2(v10) += 2;
        return sub_10001BCBC(519, v9, BYTE4(v10), a2, (uint64_t)sub_1001A65D8, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3062, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D29AC(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = sub_100059D70(&v13);
  if (!result)
  {
    if (HIBYTE(v14))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v14);
      if (WORD1(v14) > WORD2(v14))
      {
        if (BYTE6(v14) == 2)
        {
          ++WORD2(v14);
          *(unsigned char *)(v13 + v10) = a2;
          if (HIBYTE(v14))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v14) - WORD2(v14) > 1)
          {
            if (BYTE6(v14) == 2)
            {
              *(_WORD *)(v13 + WORD2(v14)) = a1;
              WORD2(v14) += 2;
              return sub_10001BCBC(612, v13, BYTE4(v14), a3, (uint64_t)sub_1001A65D8, v7, v8, v9);
            }
            unsigned __int16 v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3077, v12);
          }
          unsigned __int16 v12 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3076, v11);
      }
    }
    uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D2B24(char a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v13) - WORD2(v13) > 3)
    {
      if (BYTE6(v13) == 2)
      {
        *(unsigned char *)(v12 + WORD2(v13)) = 42;
        *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
        *(unsigned char *)(v12 + WORD2(v13) + 3) = 0;
        __int16 v8 = WORD2(v13);
        unsigned __int16 v9 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v13) > v9)
        {
          if (BYTE6(v13) == 2)
          {
            WORD2(v13) = v8 + 5;
            *(unsigned char *)(v12 + v9) = a1;
            return sub_10001BCBC(226, v12, BYTE4(v13), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
          }
          uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6029, v11);
        }
        uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6028, v10);
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D2CB0(char a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v13) - WORD2(v13) > 3)
    {
      if (BYTE6(v13) == 2)
      {
        *(unsigned char *)(v12 + WORD2(v13)) = 58;
        *(_WORD *)(v12 + WORD2(v13) + 1) = 0;
        *(unsigned char *)(v12 + WORD2(v13) + 3) = 0;
        __int16 v8 = WORD2(v13);
        unsigned __int16 v9 = WORD2(v13) + 4;
        WORD2(v13) += 4;
        if (HIBYTE(v13))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v13) > v9)
        {
          if (BYTE6(v13) == 2)
          {
            WORD2(v13) = v8 + 5;
            *(unsigned char *)(v12 + v9) = a1;
            return sub_10001BCBC(226, v12, BYTE4(v13), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
          }
          uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6043, v11);
        }
        uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6042, v10);
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D2E3C(int a1, int a2, __int16 a3, uint64_t a4)
{
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t result = sub_100059D70(&v19);
  if (!result)
  {
    if (HIBYTE(v20))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v20) - WORD2(v20) > 3)
    {
      if (BYTE6(v20) == 2)
      {
        *(unsigned char *)(v19 + WORD2(v20)) = 58;
        *(_WORD *)(v19 + WORD2(v20) + 1) = 0;
        *(unsigned char *)(v19 + WORD2(v20) + 3) = 0;
        unsigned __int16 v12 = WORD2(v20) + 4;
        WORD2(v20) += 4;
        if (HIBYTE(v20))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v20) - v12 > 3)
        {
          if (BYTE6(v20) == 2)
          {
            *(unsigned char *)(v19 + v12) = a1;
            *(unsigned char *)(v19 + WORD2(v20) + 1) = BYTE1(a1);
            *(unsigned char *)(v19 + WORD2(v20) + 2) = BYTE2(a1);
            *(unsigned char *)(v19 + WORD2(v20) + 3) = HIBYTE(a1);
            __int16 v13 = WORD2(v20);
            unsigned __int16 v14 = WORD2(v20) + 4;
            WORD2(v20) += 4;
            if (HIBYTE(v20))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
            }
            else if (WORD1(v20) > v14)
            {
              if (BYTE6(v20) == 2)
              {
                WORD2(v20) = v13 + 5;
                *(unsigned char *)(v19 + v14) = a2 != 0;
                if (HIBYTE(v20))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v20) - WORD2(v20) > 1)
                {
                  if (BYTE6(v20) == 2)
                  {
                    *(_WORD *)(v19 + WORD2(v20)) = a3;
                    WORD2(v20) += 2;
                    return sub_10001BCBC(226, v19, BYTE4(v20), a4, (uint64_t)sub_1000260B4, v9, v10, v11);
                  }
                  uint64_t v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6059, v18);
                }
                uint64_t v18 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_31;
              }
              unsigned __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6058, v17);
            }
            unsigned __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
            goto LABEL_27;
          }
          __int16 v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6057, v16);
        }
        __int16 v16 = "ByteStream_NumReadBytesAvail(bs) >= 4";
        goto LABEL_23;
      }
      uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6056, v15);
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001D3130(char a1, _WORD *a2, unsigned char *a3, __int16 a4, __int16 a5, __int16 a6, __int16 a7, uint64_t a8)
{
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t result = sub_100059D70(&v33);
  if (!result)
  {
    if (HIBYTE(v34))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v20 = WORD2(v34);
      if (WORD1(v34) > WORD2(v34))
      {
        if (BYTE6(v34) == 2)
        {
          ++WORD2(v34);
          *(unsigned char *)(v33 + v20) = a1;
          if (HIBYTE(v34))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v34) - WORD2(v34) > 1)
          {
            if (BYTE6(v34) == 2)
            {
              *(_WORD *)(v33 + WORD2(v34)) = *a2;
              unsigned __int16 v21 = WORD2(v34) + 2;
              WORD2(v34) += 2;
              if (HIBYTE(v34))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v34) - v21 > 1)
              {
                if (BYTE6(v34) == 2)
                {
                  *(unsigned char *)(v33 + v21) = *a3;
                  *(unsigned char *)(v33 + WORD2(v34) + 1) = a3[1];
                  unsigned __int16 v22 = WORD2(v34) + 2;
                  WORD2(v34) += 2;
                  if (HIBYTE(v34))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v34) - v22 > 1)
                  {
                    if (BYTE6(v34) == 2)
                    {
                      *(unsigned char *)(v33 + v22) = a4;
                      *(unsigned char *)(v33 + WORD2(v34) + 1) = HIBYTE(a4);
                      unsigned __int16 v23 = WORD2(v34) + 2;
                      WORD2(v34) += 2;
                      if (HIBYTE(v34))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v34) - v23 > 1)
                      {
                        if (BYTE6(v34) == 2)
                        {
                          *(unsigned char *)(v33 + v23) = a5;
                          *(unsigned char *)(v33 + WORD2(v34) + 1) = HIBYTE(a5);
                          unsigned __int16 v24 = WORD2(v34) + 2;
                          WORD2(v34) += 2;
                          if (HIBYTE(v34))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v34) - v24 > 1)
                          {
                            if (BYTE6(v34) == 2)
                            {
                              *(unsigned char *)(v33 + v24) = a6;
                              *(unsigned char *)(v33 + WORD2(v34) + 1) = HIBYTE(a6);
                              unsigned __int16 v25 = WORD2(v34) + 2;
                              WORD2(v34) += 2;
                              if (HIBYTE(v34))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else if (WORD1(v34) - v25 > 1)
                              {
                                if (BYTE6(v34) == 2)
                                {
                                  *(unsigned char *)(v33 + v25) = a7;
                                  *(unsigned char *)(v33 + WORD2(v34) + 1) = HIBYTE(a7);
                                  WORD2(v34) += 2;
                                  return sub_10001BCBC(513, v33, BYTE4(v34), a8, (uint64_t)sub_1000260B4, v17, v18, v19);
                                }
                                uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3048, v32);
                              }
                              uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_52;
                            }
                            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3047, v31);
                          }
                          uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_48;
                        }
                        uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3046, v30);
                      }
                      uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_44;
                    }
                    uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3045, v29);
                  }
                  uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                  goto LABEL_40;
                }
                uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3044, v28);
              }
              uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_36;
            }
            uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3043, v27);
          }
          uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_32;
        }
        uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3042, v26);
      }
    }
    uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1001D35B8(__int16 a1, char a2, uint64_t a3, char a4, __int16 a5, char a6, char a7, char a8, uint64_t a9)
{
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t result = sub_100059D70(&v39);
  if (!result)
  {
    if (HIBYTE(v40))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v18 = WORD2(v40);
      if (WORD1(v40) > WORD2(v40))
      {
        if (BYTE6(v40) == 2)
        {
          ++WORD2(v40);
          *(unsigned char *)(v39 + v18) = 1;
          if (HIBYTE(v40))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v40) - WORD2(v40) > 1)
          {
            if (BYTE6(v40) == 2)
            {
              *(_WORD *)(v39 + WORD2(v40)) = a1;
              __int16 v19 = WORD2(v40);
              unsigned __int16 v20 = WORD2(v40) + 2;
              WORD2(v40) += 2;
              if (HIBYTE(v40))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v40) > v20)
              {
                if (BYTE6(v40) == 2)
                {
                  WORD2(v40) = v19 + 3;
                  *(unsigned char *)(v39 + v20) = a2;
                  if (HIBYTE(v40))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v40) - WORD2(v40) > 5)
                  {
                    if (BYTE6(v40) == 2)
                    {
                      sub_100008A18(v39 + WORD2(v40), a3, 6uLL);
                      __int16 v24 = WORD2(v40);
                      unsigned __int16 v25 = WORD2(v40) + 6;
                      WORD2(v40) += 6;
                      if (HIBYTE(v40))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v40) > v25)
                      {
                        if (BYTE6(v40) == 2)
                        {
                          WORD2(v40) = v24 + 7;
                          *(unsigned char *)(v39 + v25) = a4;
                          if (HIBYTE(v40))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v40) - WORD2(v40) > 1)
                          {
                            if (BYTE6(v40) == 2)
                            {
                              *(_WORD *)(v39 + WORD2(v40)) = a5;
                              __int16 v26 = WORD2(v40);
                              unsigned __int16 v27 = WORD2(v40) + 2;
                              WORD2(v40) += 2;
                              if (HIBYTE(v40))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else if (WORD1(v40) > v27)
                              {
                                if (BYTE6(v40) == 2)
                                {
                                  WORD2(v40) = v26 + 3;
                                  *(unsigned char *)(v39 + v27) = a6;
                                  if (HIBYTE(v40))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else
                                  {
                                    uint64_t v28 = WORD2(v40);
                                    if (WORD1(v40) > WORD2(v40))
                                    {
                                      if (BYTE6(v40) == 2)
                                      {
                                        ++WORD2(v40);
                                        *(unsigned char *)(v39 + v28) = a7;
                                        if (HIBYTE(v40))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v29 = WORD2(v40);
                                          if (WORD1(v40) > WORD2(v40))
                                          {
                                            if (BYTE6(v40) == 2)
                                            {
                                              ++WORD2(v40);
                                              *(unsigned char *)(v39 + v29) = a8;
                                              return sub_10001BCBC(556, v39, BYTE4(v40), a9, (uint64_t)sub_1001A4BD8, v21, v22, v23);
                                            }
                                            uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6398, v38);
                                          }
                                        }
                                        uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_66;
                                      }
                                      uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6397, v37);
                                    }
                                  }
                                  uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                  goto LABEL_62;
                                }
                                uint64_t v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_58:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6396, v36);
                              }
                              uint64_t v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_58;
                            }
                            uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_54:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6395, v35);
                          }
                          uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_54;
                        }
                        uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_50:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6394, v34);
                      }
                      uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_50;
                    }
                    uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_46:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6393, v33);
                  }
                  uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                  goto LABEL_46;
                }
                uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_42:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6392, v32);
              }
              uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_42;
            }
            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6391, v31);
          }
          uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_38;
        }
        uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6390, v30);
      }
    }
    uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_1001D3AD0(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = 2;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10001BCBC(556, v11, BYTE4(v12), a2, (uint64_t)sub_1001A4F44, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6412, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6411, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D3C40(__int16 a1, char a2, char a3, __int16 a4, char a5, char a6, char a7, uint64_t a8)
{
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t result = sub_100059D70(&v36);
  if (!result)
  {
    if (HIBYTE(v37))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v20 = WORD2(v37);
      if (WORD1(v37) > WORD2(v37))
      {
        if (BYTE6(v37) == 2)
        {
          ++WORD2(v37);
          *(unsigned char *)(v36 + v20) = 3;
          if (HIBYTE(v37))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v37) - WORD2(v37) > 1)
          {
            if (BYTE6(v37) == 2)
            {
              *(_WORD *)(v36 + WORD2(v37)) = a1;
              __int16 v21 = WORD2(v37);
              unsigned __int16 v22 = WORD2(v37) + 2;
              WORD2(v37) += 2;
              if (HIBYTE(v37))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v37) > v22)
              {
                if (BYTE6(v37) == 2)
                {
                  WORD2(v37) = v21 + 3;
                  *(unsigned char *)(v36 + v22) = a2;
                  if (HIBYTE(v37))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v23 = WORD2(v37);
                    if (WORD1(v37) > WORD2(v37))
                    {
                      if (BYTE6(v37) == 2)
                      {
                        ++WORD2(v37);
                        *(unsigned char *)(v36 + v23) = a3;
                        if (HIBYTE(v37))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v37) - WORD2(v37) > 1)
                        {
                          if (BYTE6(v37) == 2)
                          {
                            *(_WORD *)(v36 + WORD2(v37)) = a4;
                            __int16 v24 = WORD2(v37);
                            unsigned __int16 v25 = WORD2(v37) + 2;
                            WORD2(v37) += 2;
                            if (HIBYTE(v37))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else if (WORD1(v37) > v25)
                            {
                              if (BYTE6(v37) == 2)
                              {
                                WORD2(v37) = v24 + 3;
                                *(unsigned char *)(v36 + v25) = a5;
                                if (HIBYTE(v37))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else
                                {
                                  uint64_t v26 = WORD2(v37);
                                  if (WORD1(v37) > WORD2(v37))
                                  {
                                    if (BYTE6(v37) == 2)
                                    {
                                      ++WORD2(v37);
                                      *(unsigned char *)(v36 + v26) = a6;
                                      if (HIBYTE(v37))
                                      {
                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_bas"
                                                               "e/Stack/vsc/bcm/bcm_vsc.c");
                                      }
                                      else
                                      {
                                        uint64_t v27 = WORD2(v37);
                                        if (WORD1(v37) > WORD2(v37))
                                        {
                                          if (BYTE6(v37) == 2)
                                          {
                                            ++WORD2(v37);
                                            *(unsigned char *)(v36 + v27) = a7;
                                            return sub_10001BCBC(556, v36, BYTE4(v37), a8, (uint64_t)sub_1001A5154, v17, v18, v19);
                                          }
                                          uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6435, v35);
                                        }
                                      }
                                      uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                      goto LABEL_59;
                                    }
                                    uint64_t v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6434, v34);
                                  }
                                }
                                uint64_t v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                goto LABEL_55;
                              }
                              uint64_t v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6433, v33);
                            }
                            uint64_t v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_51;
                          }
                          uint64_t v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6432, v32);
                        }
                        uint64_t v32 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                        goto LABEL_47;
                      }
                      uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6431, v31);
                    }
                  }
                  uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_43;
                }
                uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6430, v30);
              }
              uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_39;
            }
            uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6429, v29);
          }
          uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_35;
        }
        uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6428, v28);
      }
    }
    uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1001D40CC(__int16 a1, char a2, char a3, __int16 a4, __int16 a5, uint64_t a6)
{
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t result = sub_100059D70(&v27);
  if (!result)
  {
    if (HIBYTE(v28))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v16 = WORD2(v28);
      if (WORD1(v28) > WORD2(v28))
      {
        if (BYTE6(v28) == 2)
        {
          ++WORD2(v28);
          *(unsigned char *)(v27 + v16) = 12;
          if (HIBYTE(v28))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v28) - WORD2(v28) > 1)
          {
            if (BYTE6(v28) == 2)
            {
              *(_WORD *)(v27 + WORD2(v28)) = a1;
              __int16 v17 = WORD2(v28);
              unsigned __int16 v18 = WORD2(v28) + 2;
              WORD2(v28) += 2;
              if (HIBYTE(v28))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v28) > v18)
              {
                if (BYTE6(v28) == 2)
                {
                  WORD2(v28) = v17 + 3;
                  *(unsigned char *)(v27 + v18) = a2;
                  if (HIBYTE(v28))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v28) > WORD2(v28))
                  {
                    if (BYTE6(v28) == 2)
                    {
                      *(unsigned char *)(v27 + WORD2(v28)) = a3;
                      unsigned __int16 v19 = ++WORD2(v28);
                      if (HIBYTE(v28))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v28) - v19 > 1)
                      {
                        if (BYTE6(v28) == 2)
                        {
                          *(unsigned char *)(v27 + v19) = a4;
                          *(unsigned char *)(v27 + WORD2(v28) + 1) = HIBYTE(a4);
                          unsigned __int16 v20 = WORD2(v28) + 2;
                          WORD2(v28) += 2;
                          if (HIBYTE(v28))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v28) - v20 > 1)
                          {
                            if (BYTE6(v28) == 2)
                            {
                              *(unsigned char *)(v27 + v20) = a5;
                              *(unsigned char *)(v27 + WORD2(v28) + 1) = HIBYTE(a5);
                              WORD2(v28) += 2;
                              return sub_10001BCBC(556, v27, BYTE4(v28), a6, (uint64_t)sub_1001A52B4, v13, v14, v15);
                            }
                            uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6455, v26);
                          }
                          uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_45;
                        }
                        unsigned __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6454, v25);
                      }
                      unsigned __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_41;
                    }
                    __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6453, v24);
                  }
                  __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                  goto LABEL_37;
                }
                uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6452, v23);
              }
              uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_33;
            }
            unsigned __int16 v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6451, v22);
          }
          unsigned __int16 v22 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }
        __int16 v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6450, v21);
      }
    }
    __int16 v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1001D447C(__int16 a1, char a2, char a3, __int16 a4, __int16 a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t result = sub_100059D70(&v57);
  if (!result)
  {
    if (HIBYTE(v58))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v23 = WORD2(v58);
      if (WORD1(v58) > WORD2(v58))
      {
        if (BYTE6(v58) == 2)
        {
          ++WORD2(v58);
          *(unsigned char *)(v57 + v23) = 14;
          if (HIBYTE(v58))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v58) - WORD2(v58) > 1)
          {
            if (BYTE6(v58) == 2)
            {
              *(_WORD *)(v57 + WORD2(v58)) = a1;
              __int16 v24 = WORD2(v58);
              unsigned __int16 v25 = WORD2(v58) + 2;
              WORD2(v58) += 2;
              if (HIBYTE(v58))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v58) > v25)
              {
                if (BYTE6(v58) == 2)
                {
                  WORD2(v58) = v24 + 3;
                  *(unsigned char *)(v57 + v25) = a2;
                  if (HIBYTE(v58))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v58) > WORD2(v58))
                  {
                    if (BYTE6(v58) == 2)
                    {
                      *(unsigned char *)(v57 + WORD2(v58)) = a3;
                      unsigned __int16 v26 = ++WORD2(v58);
                      if (HIBYTE(v58))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v58) - v26 > 1)
                      {
                        if (BYTE6(v58) == 2)
                        {
                          *(unsigned char *)(v57 + v26) = a4;
                          *(unsigned char *)(v57 + WORD2(v58) + 1) = HIBYTE(a4);
                          unsigned __int16 v27 = WORD2(v58) + 2;
                          WORD2(v58) += 2;
                          if (HIBYTE(v58))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v58) - v27 > 1)
                          {
                            if (BYTE6(v58) == 2)
                            {
                              *(unsigned char *)(v57 + v27) = a5;
                              *(unsigned char *)(v57 + WORD2(v58) + 1) = HIBYTE(a5);
                              WORD2(v58) += 2;
                              if (a7 != 2 && a7 != 16) {
                                sub_10025B8C0();
                              }
                              if (a6)
                              {
                                if (a7)
                                {
                                  uint64_t v28 = a7;
                                  while (!HIBYTE(v58))
                                  {
                                    uint64_t v29 = WORD2(v58);
                                    if (WORD1(v58) <= WORD2(v58)) {
                                      goto LABEL_71;
                                    }
                                    if (BYTE6(v58) != 2)
                                    {
                                      uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                      goto LABEL_73;
                                    }
                                    char v30 = *(unsigned char *)(a6 - 1 + v28--);
                                    ++WORD2(v58);
                                    *(unsigned char *)(v57 + v29) = v30;
                                    if ((unint64_t)(v28 + 1) <= 1) {
                                      goto LABEL_37;
                                    }
                                  }
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
LABEL_71:
                                  uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_73:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6486, v45);
                                }
                              }
                              else if (a7)
                              {
                                unsigned int v31 = a7 + 1;
                                while (!HIBYTE(v58))
                                {
                                  uint64_t v32 = WORD2(v58);
                                  if (WORD1(v58) <= WORD2(v58)) {
                                    goto LABEL_83;
                                  }
                                  if (BYTE6(v58) != 2)
                                  {
                                    uint64_t v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                    goto LABEL_85;
                                  }
                                  ++WORD2(v58);
                                  *(unsigned char *)(v57 + v32) = 0;
                                  if (--v31 <= 1) {
                                    goto LABEL_37;
                                  }
                                }
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
LABEL_83:
                                uint64_t v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_85:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6481, v48);
                              }
LABEL_37:
                              uint64_t v33 = a10;
                              if (a10 >= 0x1Bu) {
                                sub_10025B8C0();
                              }
                              if (a8)
                              {
                                if (!a10)
                                {
                                  if (a9) {
                                    return sub_10001BCBC(556, v57, BYTE4(v58), a11, (uint64_t)sub_1001A52B4, v20, v21, v22);
                                  }
LABEL_62:
                                  uint64_t v42 = v57;
                                  uint64_t v43 = WORD2(v58);
                                  if (HIBYTE(v58))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                    int v44 = 0;
                                  }
                                  else
                                  {
                                    int v44 = WORD1(v58) - WORD2(v58);
                                  }
                                  if (v44 < a10)
                                  {
                                    uint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                                  }
                                  else
                                  {
                                    if (BYTE6(v58) == 2)
                                    {
                                      bzero((void *)(v42 + v43), a10);
                                      WORD2(v58) += a10;
                                      return sub_10001BCBC(556, v57, BYTE4(v58), a11, (uint64_t)sub_1001A52B4, v20, v21, v22);
                                    }
                                    uint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                  }
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6500, v56);
                                }
                                uint64_t v34 = a10;
                                do
                                {
                                  if (HIBYTE(v58))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
LABEL_75:
                                    uint64_t v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_77:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6496, v46);
                                  }
                                  uint64_t v35 = WORD2(v58);
                                  if (WORD1(v58) <= WORD2(v58)) {
                                    goto LABEL_75;
                                  }
                                  if (BYTE6(v58) != 2)
                                  {
                                    uint64_t v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                    goto LABEL_77;
                                  }
                                  char v36 = *(unsigned char *)(a8 - 1 + v34--);
                                  ++WORD2(v58);
                                  *(unsigned char *)(v57 + v35) = v36;
                                }
                                while ((unint64_t)(v34 + 1) > 1);
                                if (!a9) {
                                  goto LABEL_62;
                                }
LABEL_56:
                                if (a10)
                                {
                                  while (!HIBYTE(v58))
                                  {
                                    uint64_t v40 = WORD2(v58);
                                    if (WORD1(v58) <= WORD2(v58)) {
                                      goto LABEL_79;
                                    }
                                    if (BYTE6(v58) != 2)
                                    {
                                      uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                      goto LABEL_81;
                                    }
                                    char v41 = *(unsigned char *)(a9 - 1 + v33--);
                                    ++WORD2(v58);
                                    *(unsigned char *)(v57 + v40) = v41;
                                    if ((unint64_t)(v33 + 1) <= 1) {
                                      return sub_10001BCBC(556, v57, BYTE4(v58), a11, (uint64_t)sub_1001A52B4, v20, v21, v22);
                                    }
                                  }
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
LABEL_79:
                                  uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_81:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6504, v47);
                                }
                                return sub_10001BCBC(556, v57, BYTE4(v58), a11, (uint64_t)sub_1001A52B4, v20, v21, v22);
                              }
                              uint64_t v37 = v57;
                              uint64_t v38 = WORD2(v58);
                              if (HIBYTE(v58))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                                int v39 = 0;
                              }
                              else
                              {
                                int v39 = WORD1(v58) - WORD2(v58);
                              }
                              if (v39 < a10)
                              {
                                uint64_t v55 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                              }
                              else
                              {
                                if (BYTE6(v58) == 2)
                                {
                                  bzero((void *)(v37 + v38), a10);
                                  WORD2(v58) += a10;
                                  if (!a9) {
                                    goto LABEL_62;
                                  }
                                  goto LABEL_56;
                                }
                                uint64_t v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                              }
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6492, v55);
                            }
                            unsigned __int16 v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_109:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6475, v54);
                          }
                          unsigned __int16 v54 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_109;
                        }
                        __int16 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_105:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6474, v53);
                      }
                      __int16 v53 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_105;
                    }
                    uint64_t v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_101:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6473, v52);
                  }
                  uint64_t v52 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                  goto LABEL_101;
                }
                uint64_t v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_97:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6472, v51);
              }
              uint64_t v51 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_97;
            }
            uint64_t v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_93:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6471, v50);
          }
          uint64_t v50 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_93;
        }
        uint64_t v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_89:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6470, v49);
      }
    }
    uint64_t v49 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_89;
  }
  return result;
}

uint64_t sub_1001D4BF8(__int16 a1, char a2, char a3, uint64_t a4)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t result = sub_100059D70(&v20);
  if (!result)
  {
    if (HIBYTE(v21))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v12 = WORD2(v21);
      if (WORD1(v21) > WORD2(v21))
      {
        if (BYTE6(v21) == 2)
        {
          ++WORD2(v21);
          *(unsigned char *)(v20 + v12) = 7;
          if (HIBYTE(v21))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v21) - WORD2(v21) > 1)
          {
            if (BYTE6(v21) == 2)
            {
              *(_WORD *)(v20 + WORD2(v21)) = a1;
              __int16 v13 = WORD2(v21);
              unsigned __int16 v14 = WORD2(v21) + 2;
              WORD2(v21) += 2;
              if (HIBYTE(v21))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v21) > v14)
              {
                if (BYTE6(v21) == 2)
                {
                  WORD2(v21) = v13 + 3;
                  *(unsigned char *)(v20 + v14) = a2;
                  if (HIBYTE(v21))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v15 = WORD2(v21);
                    if (WORD1(v21) > WORD2(v21))
                    {
                      if (BYTE6(v21) == 2)
                      {
                        ++WORD2(v21);
                        *(unsigned char *)(v20 + v15) = a3;
                        return sub_10001BCBC(556, v20, BYTE4(v21), a4, (uint64_t)sub_1001A540C, v9, v10, v11);
                      }
                      unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6523, v19);
                    }
                  }
                  unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_31;
                }
                unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6522, v18);
              }
              unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_27;
            }
            __int16 v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6521, v17);
          }
          __int16 v17 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_23;
        }
        uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6520, v16);
      }
    }
    uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001D4E68(__int16 a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t result = sub_100059D70(&v23);
  if (!result)
  {
    if (HIBYTE(v24))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v24);
      if (WORD1(v24) > WORD2(v24))
      {
        if (BYTE6(v24) == 2)
        {
          ++WORD2(v24);
          *(unsigned char *)(v23 + v14) = 10;
          if (HIBYTE(v24))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v24) - WORD2(v24) > 1)
          {
            if (BYTE6(v24) == 2)
            {
              *(_WORD *)(v23 + WORD2(v24)) = a1;
              unsigned __int16 v15 = WORD2(v24) + 2;
              WORD2(v24) += 2;
              if (HIBYTE(v24))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v24) > v15)
              {
                if (BYTE6(v24) == 2)
                {
                  *(unsigned char *)(v23 + v15) = a2;
                  unsigned __int16 v16 = ++WORD2(v24);
                  if (HIBYTE(v24))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v24) > v16)
                  {
                    if (BYTE6(v24) == 2)
                    {
                      *(unsigned char *)(v23 + v16) = a3;
                      unsigned __int16 v17 = ++WORD2(v24);
                      if (HIBYTE(v24))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v24) > v17)
                      {
                        if (BYTE6(v24) == 2)
                        {
                          *(unsigned char *)(v23 + v17) = a4;
                          ++WORD2(v24);
                          return sub_10001BCBC(556, v23, BYTE4(v24), a5, (uint64_t)sub_1001A556C, v11, v12, v13);
                        }
                        uint64_t v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6541, v22);
                      }
                      uint64_t v22 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                      goto LABEL_38;
                    }
                    uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6540, v21);
                  }
                  uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                  goto LABEL_34;
                }
                uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6539, v20);
              }
              uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
              goto LABEL_30;
            }
            unsigned __int16 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6538, v19);
          }
          unsigned __int16 v19 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_26;
        }
        unsigned __int16 v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6537, v18);
      }
    }
    unsigned __int16 v18 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1001D5168(__int16 a1, char a2, char a3, uint64_t a4, char a5, __int16 a6, char a7, char a8, char a9, char a10, unsigned __int8 a11, const void *a12, const void *a13, uint64_t a14)
{
  if (a11)
  {
    if (!a12 || a13 == 0) {
      return 101;
    }
  }
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t result = sub_100059D70(&v57);
  if (!result)
  {
    if (HIBYTE(v58))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v24 = WORD2(v58);
      if (WORD1(v58) > WORD2(v58))
      {
        if (BYTE6(v58) == 2)
        {
          ++WORD2(v58);
          *(unsigned char *)(v57 + v24) = 13;
          if (HIBYTE(v58))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v25 = WORD2(v58);
            if (WORD1(v58) > WORD2(v58))
            {
              if (BYTE6(v58) == 2)
              {
                ++WORD2(v58);
                *(unsigned char *)(v57 + v25) = a2;
                if (HIBYTE(v58))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v58) - WORD2(v58) > 1)
                {
                  if (BYTE6(v58) == 2)
                  {
                    *(_WORD *)(v57 + WORD2(v58)) = a1;
                    __int16 v26 = WORD2(v58);
                    unsigned __int16 v27 = WORD2(v58) + 2;
                    WORD2(v58) += 2;
                    if (HIBYTE(v58))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                    }
                    else if (WORD1(v58) > v27)
                    {
                      if (BYTE6(v58) == 2)
                      {
                        WORD2(v58) = v26 + 3;
                        *(unsigned char *)(v57 + v27) = a3;
                        if (HIBYTE(v58))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else if (WORD1(v58) - WORD2(v58) > 5)
                        {
                          if (BYTE6(v58) == 2)
                          {
                            sub_100008A18(v57 + WORD2(v58), a4, 6uLL);
                            __int16 v31 = WORD2(v58);
                            unsigned __int16 v32 = WORD2(v58) + 6;
                            WORD2(v58) += 6;
                            if (HIBYTE(v58))
                            {
                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                            }
                            else if (WORD1(v58) > v32)
                            {
                              if (BYTE6(v58) == 2)
                              {
                                WORD2(v58) = v31 + 7;
                                *(unsigned char *)(v57 + v32) = a5;
                                if (HIBYTE(v58))
                                {
                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stac"
                                                         "k/vsc/bcm/bcm_vsc.c");
                                }
                                else if (WORD1(v58) - WORD2(v58) > 1)
                                {
                                  if (BYTE6(v58) == 2)
                                  {
                                    *(_WORD *)(v57 + WORD2(v58)) = a6;
                                    __int16 v33 = WORD2(v58);
                                    unsigned __int16 v34 = WORD2(v58) + 2;
                                    WORD2(v58) += 2;
                                    if (HIBYTE(v58))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else if (WORD1(v58) > v34)
                                    {
                                      if (BYTE6(v58) == 2)
                                      {
                                        WORD2(v58) = v33 + 3;
                                        *(unsigned char *)(v57 + v34) = a7;
                                        if (HIBYTE(v58))
                                        {
                                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_b"
                                                                 "ase/Stack/vsc/bcm/bcm_vsc.c");
                                        }
                                        else
                                        {
                                          uint64_t v35 = WORD2(v58);
                                          if (WORD1(v58) > WORD2(v58))
                                          {
                                            if (BYTE6(v58) == 2)
                                            {
                                              ++WORD2(v58);
                                              *(unsigned char *)(v57 + v35) = a8;
                                              if (HIBYTE(v58))
                                              {
                                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluet"
                                                                       "ooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                              }
                                              else if (WORD1(v58) > WORD2(v58))
                                              {
                                                if (BYTE6(v58) == 2)
                                                {
                                                  *(unsigned char *)(v57 + WORD2(v58)) = a9;
                                                  unsigned __int16 v36 = ++WORD2(v58);
                                                  if (HIBYTE(v58))
                                                  {
                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileB"
                                                                           "luetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                  }
                                                  else if (WORD1(v58) > v36)
                                                  {
                                                    if (BYTE6(v58) == 2)
                                                    {
                                                      *(unsigned char *)(v57 + v36) = a10;
                                                      unsigned __int16 v37 = ++WORD2(v58);
                                                      if (HIBYTE(v58))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                      else if (WORD1(v58) - v37 > 1)
                                                      {
                                                        if (BYTE6(v58) == 2)
                                                        {
                                                          *(unsigned char *)(v57 + v37) = a11;
                                                          *(unsigned char *)(v57 + WORD2(v58) + 1) = 0;
                                                          unsigned __int16 v38 = WORD2(v58) + 2;
                                                          WORD2(v58) += 2;
                                                          if (a11)
                                                          {
                                                            uint64_t v39 = v57;
                                                            if (HIBYTE(v58))
                                                            {
                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                              int v40 = 0;
                                                            }
                                                            else
                                                            {
                                                              int v40 = WORD1(v58) - v38;
                                                            }
                                                            if (v40 < a11)
                                                            {
                                                              uint64_t v55 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                                                            }
                                                            else
                                                            {
                                                              if (BYTE6(v58) == 2)
                                                              {
                                                                memmove((void *)(v39 + v38), a12, a11);
                                                                unsigned __int16 v38 = WORD2(v58) + a11;
                                                                WORD2(v58) = v38;
                                                                uint64_t v41 = v57;
                                                                if (HIBYTE(v58))
                                                                {
                                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/S"
                                                                                         "ources/MobileBluetooth_base/Sta"
                                                                                         "ck/vsc/bcm/bcm_vsc.c");
                                                                  int v42 = 0;
                                                                }
                                                                else
                                                                {
                                                                  int v42 = WORD1(v58) - v38;
                                                                }
                                                                if (v42 < a11)
                                                                {
                                                                  uint64_t v56 = "ByteStream_NumReadBytesAvail(bs) >= (blobLen)";
                                                                }
                                                                else
                                                                {
                                                                  if (BYTE6(v58) == 2)
                                                                  {
                                                                    memmove((void *)(v41 + v38), a13, a11);
                                                                    LOBYTE(v38) = BYTE4(v58) + a11;
                                                                    WORD2(v58) += a11;
                                                                    return sub_10001BCBC(556, v57, v38, a14, (uint64_t)sub_1001A4D38, v28, v29, v30);
                                                                  }
                                                                  uint64_t v56 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                                }
                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6588, v56);
                                                              }
                                                              uint64_t v55 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                                                            }
                                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6587, v55);
                                                          }
                                                          return sub_10001BCBC(556, v57, v38, a14, (uint64_t)sub_1001A4D38, v28, v29, v30);
                                                        }
                                                        unsigned __int16 v54 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_106:
                                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6585, v54);
                                                      }
                                                      unsigned __int16 v54 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                                      goto LABEL_106;
                                                    }
                                                    __int16 v53 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_102:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6584, v53);
                                                  }
                                                  __int16 v53 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                                  goto LABEL_102;
                                                }
                                                uint64_t v52 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_98:
                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6583, v52);
                                              }
                                              uint64_t v52 = "ByteStream_NumReadBytesAvail(bs) >= (1)";
                                              goto LABEL_98;
                                            }
                                            uint64_t v51 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_94:
                                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6582, v51);
                                          }
                                        }
                                        uint64_t v51 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                        goto LABEL_94;
                                      }
                                      uint64_t v50 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_90:
                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6581, v50);
                                    }
                                    uint64_t v50 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_90;
                                  }
                                  uint64_t v49 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_86:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6580, v49);
                                }
                                uint64_t v49 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                goto LABEL_86;
                              }
                              uint64_t v48 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_82:
                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6579, v48);
                            }
                            uint64_t v48 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                            goto LABEL_82;
                          }
                          uint64_t v47 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_78:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6578, v47);
                        }
                        uint64_t v47 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
                        goto LABEL_78;
                      }
                      uint64_t v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_74:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6577, v46);
                    }
                    uint64_t v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                    goto LABEL_74;
                  }
                  uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_70:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6576, v45);
                }
                uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                goto LABEL_70;
              }
              int v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_66:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6575, v44);
            }
          }
          int v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_66;
        }
        uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_62:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6574, v43);
      }
    }
    uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_62;
  }
  return result;
}

uint64_t sub_1001D5964(__int16 a1, __int16 a2, uint64_t a3)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(unsigned char *)(v15 + v10) = 11;
          if (HIBYTE(v16))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v16) - WORD2(v16) > 1)
          {
            if (BYTE6(v16) == 2)
            {
              *(_WORD *)(v15 + WORD2(v16)) = a1;
              unsigned __int16 v11 = WORD2(v16) + 2;
              WORD2(v16) += 2;
              if (HIBYTE(v16))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v16) - v11 > 1)
              {
                if (BYTE6(v16) == 2)
                {
                  *(unsigned char *)(v15 + v11) = a2;
                  *(unsigned char *)(v15 + WORD2(v16) + 1) = HIBYTE(a2);
                  WORD2(v16) += 2;
                  return sub_10001BCBC(556, v15, BYTE4(v16), a3, (uint64_t)sub_1001A55F8, v7, v8, v9);
                }
                uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6557, v14);
              }
              uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_24;
            }
            uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6556, v13);
          }
          uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6555, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D5B74(__int16 a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  uint64_t result = sub_100059D70(&v44);
  if (result) {
    return result;
  }
  if (HIBYTE(v45))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_69;
  }
  uint64_t v14 = WORD2(v45);
  if (WORD1(v45) <= WORD2(v45))
  {
LABEL_69:
    int v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_71;
  }
  if (BYTE6(v45) != 2)
  {
    int v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6605, v40);
  }
  ++WORD2(v45);
  *(unsigned char *)(v44 + v14) = 4;
  if (HIBYTE(v45))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_73;
  }
  if (WORD1(v45) - WORD2(v45) <= 1)
  {
LABEL_73:
    uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_75;
  }
  if (BYTE6(v45) != 2)
  {
    uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6606, v41);
  }
  *(_WORD *)(v44 + WORD2(v45)) = a1;
  __int16 v15 = WORD2(v45);
  unsigned __int16 v16 = WORD2(v45) + 2;
  WORD2(v45) += 2;
  if (HIBYTE(v45))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_77;
  }
  if (WORD1(v45) <= v16)
  {
LABEL_77:
    int v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_79;
  }
  if (BYTE6(v45) != 2)
  {
    int v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6607, v42);
  }
  WORD2(v45) = v15 + 3;
  *(unsigned char *)(v44 + v16) = a2;
  if (HIBYTE(v45))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_81;
  }
  uint64_t v17 = WORD2(v45);
  if (WORD1(v45) <= WORD2(v45))
  {
LABEL_81:
    uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_83;
  }
  if (BYTE6(v45) != 2)
  {
    uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6608, v43);
  }
  unsigned __int8 v18 = a3 - a2 + 1;
  ++WORD2(v45);
  *(unsigned char *)(v44 + v17) = a3;
  if (v18)
  {
    int v19 = 0;
    while (!HIBYTE(v45))
    {
      if (WORD1(v45) - WORD2(v45) <= 5) {
        goto LABEL_41;
      }
      if (BYTE6(v45) != 2)
      {
        __int16 v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_43;
      }
      sub_100008A18(v44 + WORD2(v45), a4, 6uLL);
      __int16 v20 = WORD2(v45);
      unsigned __int16 v21 = WORD2(v45) + 6;
      WORD2(v45) += 6;
      if (HIBYTE(v45))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_45:
        unsigned __int16 v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_47:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6613, v34);
      }
      if (WORD1(v45) <= v21) {
        goto LABEL_45;
      }
      if (BYTE6(v45) != 2)
      {
        unsigned __int16 v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_47;
      }
      char v22 = *(unsigned char *)(a4 + 6);
      WORD2(v45) = v20 + 7;
      *(unsigned char *)(v44 + v21) = v22;
      if (HIBYTE(v45))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_49:
        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_51:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6614, v35);
      }
      if (WORD1(v45) - WORD2(v45) <= 5) {
        goto LABEL_49;
      }
      if (BYTE6(v45) != 2)
      {
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_51;
      }
      uint64_t v23 = (unsigned char *)(a4 + 7);
      sub_100008A18(v44 + WORD2(v45), (uint64_t)v23, 6uLL);
      __int16 v24 = WORD2(v45);
      unsigned __int16 v25 = WORD2(v45) + 6;
      WORD2(v45) += 6;
      if (HIBYTE(v45))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_53:
        unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_55:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6615, v36);
      }
      if (WORD1(v45) <= v25) {
        goto LABEL_53;
      }
      if (BYTE6(v45) != 2)
      {
        unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_55;
      }
      char v26 = v23[6];
      WORD2(v45) = v24 + 7;
      *(unsigned char *)(v44 + v25) = v26;
      if (HIBYTE(v45))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_57:
        unsigned __int16 v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_59:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6616, v37);
      }
      uint64_t v27 = WORD2(v45);
      if (WORD1(v45) <= WORD2(v45)) {
        goto LABEL_57;
      }
      if (BYTE6(v45) != 2)
      {
        unsigned __int16 v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_59;
      }
      char v28 = v23[7];
      ++WORD2(v45);
      *(unsigned char *)(v44 + v27) = v28;
      if (HIBYTE(v45))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_61:
        unsigned __int16 v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_63:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6617, v38);
      }
      uint64_t v29 = WORD2(v45);
      if (WORD1(v45) <= WORD2(v45)) {
        goto LABEL_61;
      }
      if (BYTE6(v45) != 2)
      {
        unsigned __int16 v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_63;
      }
      char v30 = v23[8];
      ++WORD2(v45);
      *(unsigned char *)(v44 + v29) = v30;
      if (HIBYTE(v45))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_65:
        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_67:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6618, v39);
      }
      uint64_t v31 = WORD2(v45);
      if (WORD1(v45) <= WORD2(v45)) {
        goto LABEL_65;
      }
      if (BYTE6(v45) != 2)
      {
        uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_67;
      }
      char v32 = v23[9];
      ++WORD2(v45);
      *(unsigned char *)(v44 + v31) = v32;
      ++v19;
      a4 = (uint64_t)(v23 + 10);
      if (v19 >= v18) {
        return sub_10001BCBC(556, v44, BYTE4(v45), a5, (uint64_t)sub_1001A5710, v11, v12, v13);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_41:
    __int16 v33 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
LABEL_43:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6612, v33);
  }
  return sub_10001BCBC(556, v44, BYTE4(v45), a5, (uint64_t)sub_1001A5710, v11, v12, v13);
}

uint64_t sub_1001D61A0(__int16 a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t result = sub_100059D70(&v28);
  if (!result)
  {
    if (HIBYTE(v29))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v16 = WORD2(v29);
      if (WORD1(v29) > WORD2(v29))
      {
        if (BYTE6(v29) == 2)
        {
          ++WORD2(v29);
          *(unsigned char *)(v28 + v16) = 5;
          if (HIBYTE(v29))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v29) - WORD2(v29) > 1)
          {
            if (BYTE6(v29) == 2)
            {
              *(_WORD *)(v28 + WORD2(v29)) = a1;
              __int16 v17 = WORD2(v29);
              unsigned __int16 v18 = WORD2(v29) + 2;
              WORD2(v29) += 2;
              if (HIBYTE(v29))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v29) > v18)
              {
                if (BYTE6(v29) == 2)
                {
                  WORD2(v29) = v17 + 3;
                  *(unsigned char *)(v28 + v18) = a2;
                  if (HIBYTE(v29))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v19 = WORD2(v29);
                    if (WORD1(v29) > WORD2(v29))
                    {
                      if (BYTE6(v29) == 2)
                      {
                        ++WORD2(v29);
                        *(unsigned char *)(v28 + v19) = a3;
                        if (HIBYTE(v29))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v20 = WORD2(v29);
                          if (WORD1(v29) > WORD2(v29))
                          {
                            if (BYTE6(v29) == 2)
                            {
                              ++WORD2(v29);
                              *(unsigned char *)(v28 + v20) = a4;
                              if (HIBYTE(v29))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v21 = WORD2(v29);
                                if (WORD1(v29) > WORD2(v29))
                                {
                                  if (BYTE6(v29) == 2)
                                  {
                                    ++WORD2(v29);
                                    *(unsigned char *)(v28 + v21) = a5;
                                    return sub_10001BCBC(556, v28, BYTE4(v29), a6, (uint64_t)sub_1001A5870, v13, v14, v15);
                                  }
                                  uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6640, v27);
                                }
                              }
                              uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_45;
                            }
                            char v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6639, v26);
                          }
                        }
                        char v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_41;
                      }
                      unsigned __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6638, v25);
                    }
                  }
                  unsigned __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_37;
                }
                __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_33:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6637, v24);
              }
              __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_33;
            }
            uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_29:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6636, v23);
          }
          uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_29;
        }
        char v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_25:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6635, v22);
      }
    }
    char v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1001D6510(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = 6;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10001BCBC(556, v11, BYTE4(v12), a2, (uint64_t)sub_1001A59D0, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6655, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6654, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D6680(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(1009, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6669, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D6758(__int16 a1, char a2, uint64_t a3)
{
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t result = sub_100059D70(&v16);
  if (!result)
  {
    if (HIBYTE(v17))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(unsigned char *)(v16 + v10) = 1;
          if (HIBYTE(v17))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v17) - WORD2(v17) > 1)
          {
            if (BYTE6(v17) == 2)
            {
              *(_WORD *)(v16 + WORD2(v17)) = a1;
              __int16 v11 = WORD2(v17);
              unsigned __int16 v12 = WORD2(v17) + 2;
              WORD2(v17) += 2;
              if (HIBYTE(v17))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v17) > v12)
              {
                if (BYTE6(v17) == 2)
                {
                  WORD2(v17) = v11 + 3;
                  *(unsigned char *)(v16 + v12) = a2;
                  return sub_10001BCBC(1010, v16, BYTE4(v17), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
                }
                uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6685, v15);
              }
              uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }
            uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6684, v14);
          }
          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_20;
        }
        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6683, v13);
      }
    }
    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D694C(char a1, char a2, uint64_t a3)
{
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t result = sub_100059D70(&v16);
  if (!result)
  {
    if (HIBYTE(v17))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v17);
      if (WORD1(v17) > WORD2(v17))
      {
        if (BYTE6(v17) == 2)
        {
          ++WORD2(v17);
          *(unsigned char *)(v16 + v10) = 2;
          if (HIBYTE(v17))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v11 = WORD2(v17);
            if (WORD1(v17) > WORD2(v17))
            {
              if (BYTE6(v17) == 2)
              {
                ++WORD2(v17);
                *(unsigned char *)(v16 + v11) = a1;
                if (HIBYTE(v17))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v12 = WORD2(v17);
                  if (WORD1(v17) > WORD2(v17))
                  {
                    if (BYTE6(v17) == 2)
                    {
                      ++WORD2(v17);
                      *(unsigned char *)(v16 + v12) = a2;
                      return sub_10001BCBC(1010, v16, BYTE4(v17), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
                    }
                    uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6701, v15);
                  }
                }
                uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }
              uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6700, v14);
            }
          }
          uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }
        uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6699, v13);
      }
    }
    uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D6B24(__int16 a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = 4;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 1)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              WORD2(v12) += 2;
              return sub_10001BCBC(1010, v11, BYTE4(v12), a2, (uint64_t)sub_1001A5B6C, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6716, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6715, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D6C94(__int16 a1, __int16 a2, char a3, char a4, uint64_t a5)
{
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t result = sub_100059D70(&v24);
  if (!result)
  {
    if (HIBYTE(v25))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v25);
      if (WORD1(v25) > WORD2(v25))
      {
        if (BYTE6(v25) == 2)
        {
          ++WORD2(v25);
          *(unsigned char *)(v24 + v14) = 3;
          if (HIBYTE(v25))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v25) - WORD2(v25) > 1)
          {
            if (BYTE6(v25) == 2)
            {
              *(_WORD *)(v24 + WORD2(v25)) = a1;
              unsigned __int16 v15 = WORD2(v25) + 2;
              WORD2(v25) += 2;
              if (HIBYTE(v25))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v25) - v15 > 1)
              {
                if (BYTE6(v25) == 2)
                {
                  *(unsigned char *)(v24 + v15) = a2;
                  *(unsigned char *)(v24 + WORD2(v25) + 1) = HIBYTE(a2);
                  __int16 v16 = WORD2(v25);
                  unsigned __int16 v17 = WORD2(v25) + 2;
                  WORD2(v25) += 2;
                  if (HIBYTE(v25))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else if (WORD1(v25) > v17)
                  {
                    if (BYTE6(v25) == 2)
                    {
                      WORD2(v25) = v16 + 3;
                      *(unsigned char *)(v24 + v17) = a3;
                      if (HIBYTE(v25))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else
                      {
                        uint64_t v18 = WORD2(v25);
                        if (WORD1(v25) > WORD2(v25))
                        {
                          if (BYTE6(v25) == 2)
                          {
                            ++WORD2(v25);
                            *(unsigned char *)(v24 + v18) = a4;
                            return sub_10001BCBC(1010, v24, BYTE4(v25), a5, (uint64_t)sub_1000260B4, v11, v12, v13);
                          }
                          uint64_t v23 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_38:
                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6734, v23);
                        }
                      }
                      uint64_t v23 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                      goto LABEL_38;
                    }
                    char v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_34:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6733, v22);
                  }
                  char v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_34;
                }
                uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_30:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6732, v21);
              }
              uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 2";
              goto LABEL_30;
            }
            uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_26:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6731, v20);
          }
          uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_26;
        }
        uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_22:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6730, v19);
      }
    }
    uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1001D6FA4(char a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = sub_100059D70(&v12);
  if (!result)
  {
    if (HIBYTE(v13))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v13);
      if (WORD1(v13) > WORD2(v13))
      {
        if (BYTE6(v13) == 2)
        {
          ++WORD2(v13);
          *(unsigned char *)(v12 + v8) = 5;
          if (HIBYTE(v13))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v9 = WORD2(v13);
            if (WORD1(v13) > WORD2(v13))
            {
              if (BYTE6(v13) == 2)
              {
                ++WORD2(v13);
                *(unsigned char *)(v12 + v9) = a1;
                return sub_10001BCBC(1010, v12, BYTE4(v13), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
              }
              uint64_t v11 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6749, v11);
            }
          }
          uint64_t v11 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_17;
        }
        uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6748, v10);
      }
    }
    uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D70F8(uint64_t a1)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t result = sub_100059D70(&v8);
  if (!result)
  {
    if (HIBYTE(v9))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v6 = WORD2(v9);
      if (WORD1(v9) > WORD2(v9))
      {
        if (BYTE6(v9) == 2)
        {
          ++WORD2(v9);
          *(unsigned char *)(v8 + v6) = 0;
          return sub_10001BCBC(630, v8, BYTE4(v9), a1, (uint64_t)sub_1001A7F18, v3, v4, v5);
        }
        uint64_t v7 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6763, v7);
      }
    }
    uint64_t v7 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D71CC(int a1, uint64_t a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t result = sub_100059D70(&v11);
  if (!result)
  {
    if (HIBYTE(v12))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v12);
      if (WORD1(v12) > WORD2(v12))
      {
        if (BYTE6(v12) == 2)
        {
          ++WORD2(v12);
          *(unsigned char *)(v11 + v8) = 1;
          if (HIBYTE(v12))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v12) - WORD2(v12) > 3)
          {
            if (BYTE6(v12) == 2)
            {
              *(_WORD *)(v11 + WORD2(v12)) = a1;
              *(unsigned char *)(v11 + WORD2(v12) + 2) = BYTE2(a1);
              *(unsigned char *)(v11 + WORD2(v12) + 3) = HIBYTE(a1);
              WORD2(v12) += 4;
              return sub_10001BCBC(630, v11, BYTE4(v12), a2, (uint64_t)sub_1001A7F18, v5, v6, v7);
            }
            uint64_t v10 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6777, v10);
          }
          uint64_t v10 = "ByteStream_NumReadBytesAvail(bs) >= 4";
          goto LABEL_17;
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6776, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D7364(int a1, unsigned char *a2, char *a3, uint64_t a4)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t result = sub_100059D70(&v23);
  if (result) {
    return result;
  }
  if (HIBYTE(v24))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_29;
  }
  uint64_t v12 = WORD2(v24);
  if (WORD1(v24) <= WORD2(v24))
  {
LABEL_29:
    uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }
  if (BYTE6(v24) != 2)
  {
    uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6791, v21);
  }
  ++WORD2(v24);
  *(unsigned char *)(v23 + v12) = 1;
  if (HIBYTE(v24))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    goto LABEL_33;
  }
  if (WORD1(v24) - WORD2(v24) <= 3)
  {
LABEL_33:
    char v22 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_35;
  }
  if (BYTE6(v24) != 2)
  {
    char v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6792, v22);
  }
  uint64_t v13 = 0;
  *(_WORD *)(v23 + WORD2(v24)) = a1;
  *(unsigned char *)(v23 + WORD2(v24) + 2) = BYTE2(a1);
  *(unsigned char *)(v23 + WORD2(v24) + 3) = HIBYTE(a1);
  WORD2(v24) += 4;
  do
  {
    if (HIBYTE(v24))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_21:
      uint64_t v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_23:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6794, v19);
    }
    uint64_t v14 = WORD2(v24);
    if (WORD1(v24) <= WORD2(v24)) {
      goto LABEL_21;
    }
    if (BYTE6(v24) != 2)
    {
      uint64_t v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
      goto LABEL_23;
    }
    char v15 = a2[v13];
    ++WORD2(v24);
    *(unsigned char *)(v23 + v14) = v15;
    ++v13;
  }
  while (v13 != 4);
  uint64_t v16 = *a2 & 0xF;
  if ((*a2 & 0xF) != 0)
  {
    while (!HIBYTE(v24))
    {
      uint64_t v17 = WORD2(v24);
      if (WORD1(v24) <= WORD2(v24)) {
        goto LABEL_25;
      }
      if (BYTE6(v24) != 2)
      {
        uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
        goto LABEL_27;
      }
      char v18 = *a3++;
      ++WORD2(v24);
      *(unsigned char *)(v23 + v17) = v18;
      if (!--v16) {
        return sub_10001BCBC(615, v23, BYTE4(v24), a4, (uint64_t)sub_1000260B4, v9, v10, v11);
      }
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
LABEL_25:
    uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_27:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6798, v20);
  }
  return sub_10001BCBC(615, v23, BYTE4(v24), a4, (uint64_t)sub_1000260B4, v9, v10, v11);
}

uint64_t sub_1001D7628(char *a1, uint64_t a2)
{
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t result = sub_100059D70(&v37);
  if (!result)
  {
    if (HIBYTE(v38))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v38);
      if (WORD1(v38) > WORD2(v38))
      {
        if (BYTE6(v38) == 2)
        {
          ++WORD2(v38);
          *(unsigned char *)(v37 + v8) = 5;
          if (HIBYTE(v38))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v38) - WORD2(v38) > 2)
          {
            if (BYTE6(v38) == 2)
            {
              uint64_t v9 = v37 + WORD2(v38);
              *(unsigned char *)(v9 + 2) = 0;
              *(_WORD *)uint64_t v9 = 0;
              __int16 v10 = WORD2(v38);
              unsigned __int16 v11 = WORD2(v38) + 3;
              WORD2(v38) += 3;
              if (HIBYTE(v38))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v38) > v11)
              {
                if (BYTE6(v38) == 2)
                {
                  char v12 = *a1;
                  WORD2(v38) = v10 + 4;
                  *(unsigned char *)(v37 + v11) = v12;
                  if (HIBYTE(v38))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v13 = WORD2(v38);
                    if (WORD1(v38) > WORD2(v38))
                    {
                      if (BYTE6(v38) == 2)
                      {
                        char v14 = a1[1];
                        ++WORD2(v38);
                        *(unsigned char *)(v37 + v13) = v14;
                        if (HIBYTE(v38))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v15 = WORD2(v38);
                          if (WORD1(v38) > WORD2(v38))
                          {
                            if (BYTE6(v38) == 2)
                            {
                              char v16 = a1[2];
                              ++WORD2(v38);
                              *(unsigned char *)(v37 + v15) = v16;
                              if (HIBYTE(v38))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v17 = WORD2(v38);
                                if (WORD1(v38) > WORD2(v38))
                                {
                                  if (BYTE6(v38) == 2)
                                  {
                                    char v18 = a1[3];
                                    ++WORD2(v38);
                                    *(unsigned char *)(v37 + v17) = v18;
                                    if (HIBYTE(v38))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v19 = WORD2(v38);
                                      if (WORD1(v38) > WORD2(v38))
                                      {
                                        if (BYTE6(v38) == 2)
                                        {
                                          char v20 = a1[4];
                                          ++WORD2(v38);
                                          *(unsigned char *)(v37 + v19) = v20;
                                          if (HIBYTE(v38))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v21 = WORD2(v38);
                                            if (WORD1(v38) > WORD2(v38))
                                            {
                                              if (BYTE6(v38) == 2)
                                              {
                                                char v22 = a1[5];
                                                ++WORD2(v38);
                                                *(unsigned char *)(v37 + v21) = v22;
                                                if (HIBYTE(v38))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v23 = WORD2(v38);
                                                  if (WORD1(v38) > WORD2(v38))
                                                  {
                                                    if (BYTE6(v38) == 2)
                                                    {
                                                      char v24 = a1[6];
                                                      ++WORD2(v38);
                                                      *(unsigned char *)(v37 + v23) = v24;
                                                      if (HIBYTE(v38))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                      else
                                                      {
                                                        uint64_t v25 = WORD2(v38);
                                                        if (WORD1(v38) > WORD2(v38))
                                                        {
                                                          if (BYTE6(v38) == 2)
                                                          {
                                                            char v26 = a1[7];
                                                            ++WORD2(v38);
                                                            *(unsigned char *)(v37 + v25) = v26;
                                                            return sub_10001BCBC(383, v37, BYTE4(v38), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
                                                          }
                                                          unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6854, v36);
                                                        }
                                                      }
                                                      unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_73;
                                                    }
                                                    uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6853, v35);
                                                  }
                                                }
                                                uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_69;
                                              }
                                              unsigned __int16 v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6852, v34);
                                            }
                                          }
                                          unsigned __int16 v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_65;
                                        }
                                        __int16 v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6851, v33);
                                      }
                                    }
                                    __int16 v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_61;
                                  }
                                  char v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6850, v32);
                                }
                              }
                              char v32 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_57;
                            }
                            uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6849, v31);
                          }
                        }
                        uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_53;
                      }
                      char v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6848, v30);
                    }
                  }
                  char v30 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_49;
                }
                uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6847, v29);
              }
              uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_45;
            }
            uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6846, v28);
          }
          uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= (3)";
          goto LABEL_41;
        }
        uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6845, v27);
      }
    }
    uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_1001D7B6C(int a1, __int16 a2, int a3, char *a4, uint64_t a5)
{
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t result = sub_100059D70(&v28);
  if (!result)
  {
    if (HIBYTE(v29))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v14 = WORD2(v29);
      if (WORD1(v29) > WORD2(v29))
      {
        if (BYTE6(v29) == 2)
        {
          ++WORD2(v29);
          *(unsigned char *)(v28 + v14) = a1;
          if (HIBYTE(v29))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v29) - WORD2(v29) > 1)
          {
            if (BYTE6(v29) == 2)
            {
              *(_WORD *)(v28 + WORD2(v29)) = a2;
              __int16 v15 = WORD2(v29);
              unsigned __int16 v16 = WORD2(v29) + 2;
              WORD2(v29) += 2;
              if (HIBYTE(v29))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v29) > v16)
              {
                if (BYTE6(v29) == 2)
                {
                  char v18 = *a4;
                  uint64_t v17 = a4 + 1;
                  WORD2(v29) = v15 + 3;
                  *(unsigned char *)(v28 + v16) = v18;
                  unsigned __int8 v19 = BYTE4(v29);
                  if (a1 != 2)
                  {
                    uint64_t v20 = WORD2(v29);
                    uint64_t v21 = v28;
                    if (HIBYTE(v29))
                    {
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      int v22 = 0;
                    }
                    else
                    {
                      int v22 = WORD1(v29) - WORD2(v29);
                    }
                    int v23 = a3 - 1;
                    if (v22 < v23)
                    {
                      uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= (length - 1)";
                    }
                    else
                    {
                      if (BYTE6(v29) == 2)
                      {
                        memmove((void *)(v21 + v20), v17, v23);
                        unsigned __int8 v19 = BYTE4(v29) + v23;
                        WORD2(v29) += v23;
                        return sub_10001BCBC(557, v28, v19, a5, (uint64_t)sub_1000260B4, v11, v12, v13);
                      }
                      uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
                    }
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6892, v27);
                  }
                  return sub_10001BCBC(557, v28, v19, a5, (uint64_t)sub_1000260B4, v11, v12, v13);
                }
                char v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6887, v26);
              }
              char v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_31;
            }
            uint64_t v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6885, v25);
          }
          uint64_t v25 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_27;
        }
        char v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6884, v24);
      }
    }
    char v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1001D7E14(char a1, uint64_t a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t result = sub_100059D70(&v9);
  if (!result)
  {
    if (HIBYTE(v10))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v10) - WORD2(v10) > 1)
    {
      if (BYTE6(v10) == 2)
      {
        *(_WORD *)(v9 + WORD2(v10)) = 0xFFFF << (a1 - 1);
        WORD2(v10) += 2;
        return sub_10001BCBC(22, v9, BYTE4(v10), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
      }
      uint64_t v8 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6314, v8);
    }
    uint64_t v8 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D7F14(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(572, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6087, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D7FEC(int a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t result = sub_100059D70(&v23);
  if (!result)
  {
    if (HIBYTE(v24))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v9 = WORD2(v24);
      if (WORD1(v24) > WORD2(v24))
      {
        if (BYTE6(v24) == 2)
        {
          ++WORD2(v24);
          *(unsigned char *)(v23 + v9) = a1;
          if (HIBYTE(v24))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v24) - WORD2(v24) > 5)
          {
            if (BYTE6(v24) == 2)
            {
              sub_100008A18(v23 + WORD2(v24), a2, 6uLL);
              __int16 v13 = WORD2(v24);
              unsigned __int16 v14 = WORD2(v24) + 6;
              WORD2(v24) += 6;
              if (a1 != 1)
              {
                if (a1 != 4 && a1 != 2) {
                  return sub_10001BCBC(498, v23, BYTE4(v24), a4, (uint64_t)sub_1000260B4, v10, v11, v12);
                }
                if (HIBYTE(v24))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else if (WORD1(v24) > v14)
                {
                  if (BYTE6(v24) == 2)
                  {
                    __int16 v15 = v13 + 7;
LABEL_25:
                    WORD2(v24) = v15;
                    *(unsigned char *)(v23 + v14) = a3;
                    return sub_10001BCBC(498, v23, BYTE4(v24), a4, (uint64_t)sub_1000260B4, v10, v11, v12);
                  }
                  unsigned __int8 v19 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_39:
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6910, v19);
                }
                unsigned __int8 v19 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_39;
              }
              if (HIBYTE(v24))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v24) > v14)
              {
                if (BYTE6(v24) == 2)
                {
                  WORD2(v24) = v13 + 7;
                  *(unsigned char *)(v23 + v14) = 0;
                  if (HIBYTE(v24))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v16 = WORD2(v24);
                    if (WORD1(v24) > WORD2(v24))
                    {
                      if (BYTE6(v24) == 2)
                      {
                        ++WORD2(v24);
                        *(unsigned char *)(v23 + v16) = a3;
                        if (HIBYTE(v24))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          unsigned __int16 v14 = WORD2(v24);
                          if (WORD1(v24) > WORD2(v24))
                          {
                            if (BYTE6(v24) == 2)
                            {
                              __int16 v15 = WORD2(v24) + 1;
                              goto LABEL_25;
                            }
                            int v22 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6915, v22);
                          }
                        }
                        int v22 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_51;
                      }
                      uint64_t v21 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6914, v21);
                    }
                  }
                  uint64_t v21 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_47;
                }
                uint64_t v20 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6913, v20);
              }
              uint64_t v20 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_43;
            }
            char v18 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6907, v18);
          }
          char v18 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_35;
        }
        uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6906, v17);
      }
    }
    uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1001D8350(int a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v10 = WORD2(v15);
      if (WORD1(v15) > WORD2(v15))
      {
        if (BYTE6(v15) == 2)
        {
          ++WORD2(v15);
          *(unsigned char *)(v14 + v10) = a1;
          if (a1 != 1) {
            return sub_10001BCBC(603, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          if (HIBYTE(v15))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v11 = WORD2(v15);
            if (WORD1(v15) > WORD2(v15))
            {
              if (BYTE6(v15) == 2)
              {
                ++WORD2(v15);
                *(unsigned char *)(v14 + v11) = a2;
                return sub_10001BCBC(603, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
              }
              __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_19:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6933, v13);
            }
          }
          __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_19;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_15:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6930, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1001D84B4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 5)
    {
      if (BYTE6(v15) == 2)
      {
        sub_100008A18(v14 + WORD2(v15), a2, 6uLL);
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 6;
        WORD2(v15) += 6;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 7;
            *(unsigned char *)(v14 + v11) = a1;
            return sub_10001BCBC(620, v14, BYTE4(v15), a3, (uint64_t)sub_1000260B4, v7, v8, v9);
          }
          __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6946, v13);
        }
        __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6945, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D8624(char a1, uint64_t a2)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t result = sub_100059D70(&v10);
  if (!result)
  {
    if (HIBYTE(v11))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v11);
      if (WORD1(v11) > WORD2(v11))
      {
        if (BYTE6(v11) == 2)
        {
          ++WORD2(v11);
          *(unsigned char *)(v10 + v8) = a1;
          return sub_10001BCBC(635, v10, BYTE4(v11), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
        }
        uint64_t v9 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_10:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6957, v9);
      }
    }
    uint64_t v9 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1001D86FC(char a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t result = sub_100059D70(&v15);
  if (!result)
  {
    if (HIBYTE(v16))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v8 = WORD2(v16);
      if (WORD1(v16) > WORD2(v16))
      {
        if (BYTE6(v16) == 2)
        {
          ++WORD2(v16);
          *(unsigned char *)(v15 + v8) = 3;
          if (HIBYTE(v16))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v16) - WORD2(v16) > 2)
          {
            if (BYTE6(v16) == 2)
            {
              uint64_t v9 = v15 + WORD2(v16);
              *(unsigned char *)(v9 + 2) = 0;
              *(_WORD *)uint64_t v9 = 0;
              __int16 v10 = WORD2(v16);
              unsigned __int16 v11 = WORD2(v16) + 3;
              WORD2(v16) += 3;
              if (HIBYTE(v16))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v16) > v11)
              {
                if (BYTE6(v16) == 2)
                {
                  WORD2(v16) = v10 + 4;
                  *(unsigned char *)(v15 + v11) = a1;
                  return sub_10001BCBC(383, v15, BYTE4(v16), a2, (uint64_t)sub_1000260B4, v5, v6, v7);
                }
                uint64_t v14 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6972, v14);
              }
              uint64_t v14 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_24;
            }
            __int16 v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6971, v13);
          }
          __int16 v13 = "ByteStream_NumReadBytesAvail(bs) >= (3)";
          goto LABEL_20;
        }
        uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6970, v12);
      }
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D88D8(char a1, char a2, char a3, uint64_t a4)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t result = sub_100059D70(&v18);
  if (!result)
  {
    if (HIBYTE(v19))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v12 = WORD2(v19);
      if (WORD1(v19) > WORD2(v19))
      {
        if (BYTE6(v19) == 2)
        {
          ++WORD2(v19);
          *(unsigned char *)(v18 + v12) = a1;
          if (HIBYTE(v19))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v13 = WORD2(v19);
            if (WORD1(v19) > WORD2(v19))
            {
              if (BYTE6(v19) == 2)
              {
                ++WORD2(v19);
                *(unsigned char *)(v18 + v13) = a2;
                if (HIBYTE(v19))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v14 = WORD2(v19);
                  if (WORD1(v19) > WORD2(v19))
                  {
                    if (BYTE6(v19) == 2)
                    {
                      ++WORD2(v19);
                      *(unsigned char *)(v18 + v14) = a3;
                      return sub_10001BCBC(25, v18, BYTE4(v19), a4, (uint64_t)sub_1000260B4, v9, v10, v11);
                    }
                    uint64_t v17 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_24:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6870, v17);
                  }
                }
                uint64_t v17 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_24;
              }
              uint64_t v16 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_20:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6869, v16);
            }
          }
          uint64_t v16 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_20;
        }
        uint64_t v15 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_16:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 6868, v15);
      }
    }
    uint64_t v15 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001D8AB0(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, uint64_t a9)
{
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t result = sub_100059D70(&v42);
  if (!result)
  {
    if (HIBYTE(v43))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v18 = WORD2(v43);
      if (WORD1(v43) > WORD2(v43))
      {
        if (BYTE6(v43) == 2)
        {
          ++WORD2(v43);
          *(unsigned char *)(v42 + v18) = 78;
          v41[0] = BYTE5(a1);
          v41[1] = BYTE4(a1);
          v41[2] = BYTE3(a1);
          v41[3] = BYTE2(a1);
          v41[4] = BYTE1(a1);
          v41[5] = a1;
          if (HIBYTE(v43))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v43) - WORD2(v43) > 5)
          {
            if (BYTE6(v43) == 2)
            {
              sub_100008A18(v42 + WORD2(v43), (uint64_t)v41, 6uLL);
              __int16 v22 = WORD2(v43);
              unsigned __int16 v23 = WORD2(v43) + 6;
              WORD2(v43) += 6;
              if (HIBYTE(v43))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v43) > v23)
              {
                if (BYTE6(v43) == 2)
                {
                  WORD2(v43) = v22 + 7;
                  *(unsigned char *)(v42 + v23) = BYTE6(a1);
                  if (HIBYTE(v43))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v24 = WORD2(v43);
                    if (WORD1(v43) > WORD2(v43))
                    {
                      if (BYTE6(v43) == 2)
                      {
                        ++WORD2(v43);
                        *(unsigned char *)(v42 + v24) = a2;
                        if (HIBYTE(v43))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v25 = WORD2(v43);
                          if (WORD1(v43) > WORD2(v43))
                          {
                            if (BYTE6(v43) == 2)
                            {
                              ++WORD2(v43);
                              *(unsigned char *)(v42 + v25) = a3;
                              if (HIBYTE(v43))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v26 = WORD2(v43);
                                if (WORD1(v43) > WORD2(v43))
                                {
                                  if (BYTE6(v43) == 2)
                                  {
                                    ++WORD2(v43);
                                    *(unsigned char *)(v42 + v26) = a4;
                                    if (HIBYTE(v43))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v27 = WORD2(v43);
                                      if (WORD1(v43) > WORD2(v43))
                                      {
                                        if (BYTE6(v43) == 2)
                                        {
                                          ++WORD2(v43);
                                          *(unsigned char *)(v42 + v27) = a5;
                                          if (HIBYTE(v43))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v28 = WORD2(v43);
                                            if (WORD1(v43) > WORD2(v43))
                                            {
                                              if (BYTE6(v43) == 2)
                                              {
                                                ++WORD2(v43);
                                                *(unsigned char *)(v42 + v28) = a6;
                                                if (HIBYTE(v43))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v29 = WORD2(v43);
                                                  if (WORD1(v43) > WORD2(v43))
                                                  {
                                                    if (BYTE6(v43) == 2)
                                                    {
                                                      ++WORD2(v43);
                                                      *(unsigned char *)(v42 + v29) = a7;
                                                      if (HIBYTE(v43))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                      else
                                                      {
                                                        uint64_t v30 = WORD2(v43);
                                                        if (WORD1(v43) > WORD2(v43))
                                                        {
                                                          if (BYTE6(v43) == 2)
                                                          {
                                                            ++WORD2(v43);
                                                            *(unsigned char *)(v42 + v30) = a8;
                                                            return sub_10001BCBC(233, v42, BYTE4(v43), a9, (uint64_t)sub_1001A6A84, v19, v20, v21);
                                                          }
                                                          int v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_73:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3504, v40);
                                                        }
                                                      }
                                                      int v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_73;
                                                    }
                                                    uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_69:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3503, v39);
                                                  }
                                                }
                                                uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_69;
                                              }
                                              uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_65:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3502, v38);
                                            }
                                          }
                                          uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_65;
                                        }
                                        uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_61:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3501, v37);
                                      }
                                    }
                                    uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_61;
                                  }
                                  unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_57:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3500, v36);
                                }
                              }
                              unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_57;
                            }
                            uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_53:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3499, v35);
                          }
                        }
                        uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_53;
                      }
                      unsigned __int16 v34 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_49:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3498, v34);
                    }
                  }
                  unsigned __int16 v34 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_49;
                }
                __int16 v33 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3497, v33);
              }
              __int16 v33 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_45;
            }
            char v32 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3496, v32);
          }
          char v32 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_41;
        }
        uint64_t v31 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_37:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3493, v31);
      }
    }
    uint64_t v31 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_1001D9038(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, uint64_t a11)
{
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t result = sub_100059D70(&v48);
  if (!result)
  {
    if (HIBYTE(v49))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v20 = WORD2(v49);
      if (WORD1(v49) > WORD2(v49))
      {
        if (BYTE6(v49) == 2)
        {
          ++WORD2(v49);
          *(unsigned char *)(v48 + v20) = 88;
          v47[0] = BYTE5(a1);
          v47[1] = BYTE4(a1);
          v47[2] = BYTE3(a1);
          v47[3] = BYTE2(a1);
          v47[4] = BYTE1(a1);
          v47[5] = a1;
          if (HIBYTE(v49))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else if (WORD1(v49) - WORD2(v49) > 5)
          {
            if (BYTE6(v49) == 2)
            {
              sub_100008A18(v48 + WORD2(v49), (uint64_t)v47, 6uLL);
              __int16 v24 = WORD2(v49);
              unsigned __int16 v25 = WORD2(v49) + 6;
              WORD2(v49) += 6;
              if (HIBYTE(v49))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
              }
              else if (WORD1(v49) > v25)
              {
                if (BYTE6(v49) == 2)
                {
                  WORD2(v49) = v24 + 7;
                  *(unsigned char *)(v48 + v25) = BYTE6(a1);
                  if (HIBYTE(v49))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                  }
                  else
                  {
                    uint64_t v26 = WORD2(v49);
                    if (WORD1(v49) > WORD2(v49))
                    {
                      if (BYTE6(v49) == 2)
                      {
                        ++WORD2(v49);
                        *(unsigned char *)(v48 + v26) = a2;
                        if (HIBYTE(v49))
                        {
                          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                        }
                        else
                        {
                          uint64_t v27 = WORD2(v49);
                          if (WORD1(v49) > WORD2(v49))
                          {
                            if (BYTE6(v49) == 2)
                            {
                              ++WORD2(v49);
                              *(unsigned char *)(v48 + v27) = a3;
                              if (HIBYTE(v49))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else
                              {
                                uint64_t v28 = WORD2(v49);
                                if (WORD1(v49) > WORD2(v49))
                                {
                                  if (BYTE6(v49) == 2)
                                  {
                                    ++WORD2(v49);
                                    *(unsigned char *)(v48 + v28) = a4;
                                    if (HIBYTE(v49))
                                    {
                                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/"
                                                             "Stack/vsc/bcm/bcm_vsc.c");
                                    }
                                    else
                                    {
                                      uint64_t v29 = WORD2(v49);
                                      if (WORD1(v49) > WORD2(v49))
                                      {
                                        if (BYTE6(v49) == 2)
                                        {
                                          ++WORD2(v49);
                                          *(unsigned char *)(v48 + v29) = a5;
                                          if (HIBYTE(v49))
                                          {
                                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth"
                                                                   "_base/Stack/vsc/bcm/bcm_vsc.c");
                                          }
                                          else
                                          {
                                            uint64_t v30 = WORD2(v49);
                                            if (WORD1(v49) > WORD2(v49))
                                            {
                                              if (BYTE6(v49) == 2)
                                              {
                                                ++WORD2(v49);
                                                *(unsigned char *)(v48 + v30) = a6;
                                                if (HIBYTE(v49))
                                                {
                                                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBlu"
                                                                         "etooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                }
                                                else
                                                {
                                                  uint64_t v31 = WORD2(v49);
                                                  if (WORD1(v49) > WORD2(v49))
                                                  {
                                                    if (BYTE6(v49) == 2)
                                                    {
                                                      ++WORD2(v49);
                                                      *(unsigned char *)(v48 + v31) = a7;
                                                      if (HIBYTE(v49))
                                                      {
                                                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mob"
                                                                               "ileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                      }
                                                      else
                                                      {
                                                        uint64_t v32 = WORD2(v49);
                                                        if (WORD1(v49) > WORD2(v49))
                                                        {
                                                          if (BYTE6(v49) == 2)
                                                          {
                                                            ++WORD2(v49);
                                                            *(unsigned char *)(v48 + v32) = a8;
                                                            if (HIBYTE(v49))
                                                            {
                                                              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sourc"
                                                                                     "es/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                                                            }
                                                            else
                                                            {
                                                              uint64_t v33 = WORD2(v49);
                                                              if (WORD1(v49) > WORD2(v49))
                                                              {
                                                                if (BYTE6(v49) == 2)
                                                                {
                                                                  ++WORD2(v49);
                                                                  *(unsigned char *)(v48 + v33) = a9;
                                                                  if (HIBYTE(v49))
                                                                  {
                                                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs"
                                                                                           "/Sources/MobileBluetooth_base"
                                                                                           "/Stack/vsc/bcm/bcm_vsc.c");
                                                                  }
                                                                  else
                                                                  {
                                                                    uint64_t v34 = WORD2(v49);
                                                                    if (WORD1(v49) > WORD2(v49))
                                                                    {
                                                                      if (BYTE6(v49) == 2)
                                                                      {
                                                                        ++WORD2(v49);
                                                                        *(unsigned char *)(v48 + v34) = a10;
                                                                        return sub_10001BCBC(233, v48, BYTE4(v49), a11, (uint64_t)sub_1001A6A84, v21, v22, v23);
                                                                      }
                                                                      uint64_t v46 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_87:
                                                                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3531, v46);
                                                                    }
                                                                  }
                                                                  uint64_t v46 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                                  goto LABEL_87;
                                                                }
                                                                uint64_t v45 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_83:
                                                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3530, v45);
                                                              }
                                                            }
                                                            uint64_t v45 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                            goto LABEL_83;
                                                          }
                                                          uint64_t v44 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_79:
                                                          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3529, v44);
                                                        }
                                                      }
                                                      uint64_t v44 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                      goto LABEL_79;
                                                    }
                                                    uint64_t v43 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_75:
                                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3528, v43);
                                                  }
                                                }
                                                uint64_t v43 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                                goto LABEL_75;
                                              }
                                              uint64_t v42 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_71:
                                              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3527, v42);
                                            }
                                          }
                                          uint64_t v42 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                          goto LABEL_71;
                                        }
                                        uint64_t v41 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_67:
                                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3526, v41);
                                      }
                                    }
                                    uint64_t v41 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                                    goto LABEL_67;
                                  }
                                  int v40 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_63:
                                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3525, v40);
                                }
                              }
                              int v40 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                              goto LABEL_63;
                            }
                            uint64_t v39 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_59:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3524, v39);
                          }
                        }
                        uint64_t v39 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                        goto LABEL_59;
                      }
                      uint64_t v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_55:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3523, v38);
                    }
                  }
                  uint64_t v38 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                  goto LABEL_55;
                }
                uint64_t v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_51:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3522, v37);
              }
              uint64_t v37 = "ByteStream_NumReadBytesAvail(bs) >= 1";
              goto LABEL_51;
            }
            unsigned __int16 v36 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_47:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3521, v36);
          }
          unsigned __int16 v36 = "ByteStream_NumReadBytesAvail(bs) >= OI_BD_ADDR_BYTE_SIZE";
          goto LABEL_47;
        }
        uint64_t v35 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_43:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3518, v35);
      }
    }
    uint64_t v35 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_43;
  }
  return result;
}

uint64_t sub_1001D96B8(char a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, uint64_t a7)
{
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t result = sub_100059D70(&v31);
  if (!result)
  {
    if (HIBYTE(v32))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else
    {
      uint64_t v18 = WORD2(v32);
      if (WORD1(v32) > WORD2(v32))
      {
        if (BYTE6(v32) == 2)
        {
          ++WORD2(v32);
          *(unsigned char *)(v31 + v18) = 81;
          if (HIBYTE(v32))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
          }
          else
          {
            uint64_t v19 = WORD2(v32);
            if (WORD1(v32) > WORD2(v32))
            {
              if (BYTE6(v32) == 2)
              {
                ++WORD2(v32);
                *(unsigned char *)(v31 + v19) = a1;
                if (HIBYTE(v32))
                {
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                }
                else
                {
                  uint64_t v20 = WORD2(v32);
                  if (WORD1(v32) > WORD2(v32))
                  {
                    if (BYTE6(v32) == 2)
                    {
                      ++WORD2(v32);
                      *(unsigned char *)(v31 + v20) = a2;
                      if (HIBYTE(v32))
                      {
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                      }
                      else if (WORD1(v32) - WORD2(v32) > 1)
                      {
                        if (BYTE6(v32) == 2)
                        {
                          *(_WORD *)(v31 + WORD2(v32)) = a3;
                          unsigned __int16 v21 = WORD2(v32) + 2;
                          WORD2(v32) += 2;
                          if (HIBYTE(v32))
                          {
                            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
                          }
                          else if (WORD1(v32) - v21 > 1)
                          {
                            if (BYTE6(v32) == 2)
                            {
                              *(unsigned char *)(v31 + v21) = a4;
                              *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a4);
                              unsigned __int16 v22 = WORD2(v32) + 2;
                              WORD2(v32) += 2;
                              if (HIBYTE(v32))
                              {
                                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/"
                                                       "vsc/bcm/bcm_vsc.c");
                              }
                              else if (WORD1(v32) - v22 > 1)
                              {
                                if (BYTE6(v32) == 2)
                                {
                                  *(unsigned char *)(v31 + v22) = a5;
                                  *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a5);
                                  unsigned __int16 v23 = WORD2(v32) + 2;
                                  WORD2(v32) += 2;
                                  if (HIBYTE(v32))
                                  {
                                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/St"
                                                           "ack/vsc/bcm/bcm_vsc.c");
                                  }
                                  else if (WORD1(v32) - v23 > 1)
                                  {
                                    if (BYTE6(v32) == 2)
                                    {
                                      *(unsigned char *)(v31 + v23) = a6;
                                      *(unsigned char *)(v31 + WORD2(v32) + 1) = HIBYTE(a6);
                                      WORD2(v32) += 2;
                                      return sub_10001BCBC(233, v31, BYTE4(v32), a7, (uint64_t)sub_1001A6BC0, v15, v16, v17);
                                    }
                                    uint64_t v30 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_52:
                                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3550, v30);
                                  }
                                  uint64_t v30 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                                  goto LABEL_52;
                                }
                                uint64_t v29 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_48:
                                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3549, v29);
                              }
                              uint64_t v29 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                              goto LABEL_48;
                            }
                            uint64_t v28 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_44:
                            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3548, v28);
                          }
                          uint64_t v28 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                          goto LABEL_44;
                        }
                        uint64_t v27 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_40:
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3547, v27);
                      }
                      uint64_t v27 = "ByteStream_NumReadBytesAvail(bs) >= 2";
                      goto LABEL_40;
                    }
                    uint64_t v26 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_36:
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3546, v26);
                  }
                }
                uint64_t v26 = "ByteStream_NumReadBytesAvail(bs) >= 1";
                goto LABEL_36;
              }
              unsigned __int16 v25 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_32:
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3545, v25);
            }
          }
          unsigned __int16 v25 = "ByteStream_NumReadBytesAvail(bs) >= 1";
          goto LABEL_32;
        }
        __int16 v24 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_28:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3544, v24);
      }
    }
    __int16 v24 = "ByteStream_NumReadBytesAvail(bs) >= 1";
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1001D9B00(int a1, char a2, uint64_t a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = sub_100059D70(&v14);
  if (!result)
  {
    if (HIBYTE(v15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
    }
    else if (WORD1(v15) - WORD2(v15) > 3)
    {
      if (BYTE6(v15) == 2)
      {
        *(_WORD *)(v14 + WORD2(v15)) = a1;
        *(unsigned char *)(v14 + WORD2(v15) + 2) = BYTE2(a1);
        *(unsigned char *)(v14 + WORD2(v15) + 3) = HIBYTE(a1);
        __int16 v10 = WORD2(v15);
        unsigned __int16 v11 = WORD2(v15) + 4;
        WORD2(v15) += 4;
        if (HIBYTE(v15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c");
        }
        else if (WORD1(v15) > v11)
        {
          if (BYTE6(v15) == 2)
          {
            WORD2(v15) = v10 + 5;
            *(unsigned char *)(v14 + v11) = a2;
            return sub_10001BCBC(77, v14, BYTE4(v15), a3, (uint64_t)sub_1001A65D8, v7, v8, v9);
          }
          uint64_t v13 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_17:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3688, v13);
        }
        uint64_t v13 = "ByteStream_NumReadBytesAvail(bs) >= 1";
        goto LABEL_17;
      }
      uint64_t v12 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_13:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/bcm/bcm_vsc.c", 3687, v12);
    }
    uint64_t v12 = "ByteStream_NumReadBytesAvail(bs) >= 4";
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1001D9CA0(unsigned int *a1)
{
  return *(unsigned __int8 *)(*(void *)(sub_1001E6484(a1) + 112) + 12);
}

uint64_t sub_1001D9CC0(unsigned int *a1, int a2)
{
  if (!*(void *)(sub_1001E6484(a1) + 112))
  {
    uint64_t v4 = sub_10010CE48(0x20uLL);
    *(void *)(sub_1001E6484(a1) + 112) = v4;
  }
  uint64_t v5 = *(void *)(sub_1001E6484(a1) + 112);
  unsigned int v6 = *(unsigned __int16 *)(sub_1001E6484(a1) + 32);
  *(unsigned char *)(v5 + 12) = v6 / *(unsigned __int16 *)(sub_1001E6484(a1) + 60);
  unsigned int v7 = *(unsigned __int16 *)(sub_1001E6484(a1) + 32);
  uint64_t v8 = sub_1001E6484(a1);
  char v9 = *(unsigned char *)(v5 + 12);
  if (v7 % *(unsigned __int16 *)(v8 + 60)) {
    *(unsigned char *)(v5 + 12) = ++v9;
  }
  if ((v9 & 0xF0) != 0) {
    uint64_t result = 104;
  }
  else {
    uint64_t result = 0;
  }
  *(_DWORD *)uint64_t v5 = a2;
  return result;
}

uint64_t sub_1001D9D7C(unsigned int *a1, int a2, __int16 a3)
{
  if (!*(void *)(sub_1001E6484(a1) + 112))
  {
    unsigned int v6 = sub_10010CE48(0x20uLL);
    *(void *)(sub_1001E6484(a1) + 112) = v6;
  }
  uint64_t v7 = *(void *)(sub_1001E6484(a1) + 112);
  *(_DWORD *)(v7 + 4) = a2;
  *(_WORD *)(v7 + 10) = a3;
  return 0;
}

uint64_t sub_1001D9DE8(unsigned int *a1)
{
  return *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4);
}

uint64_t sub_1001D9E08(unsigned int *a1)
{
  uint64_t result = sub_1001E6484(a1);
  uint64_t v3 = *(void **)(result + 112);
  if (v3)
  {
    uint64_t v4 = (void *)v3[2];
    if (v4)
    {
      sub_100023010(v4);
      v3[2] = 0;
    }
    sub_100023010(v3);
    uint64_t result = sub_1001E6484(a1);
    *(void *)(result + 112) = 0;
  }
  return result;
}

uint64_t sub_1001D9E58(unsigned int *a1)
{
  return **(unsigned __int16 **)(sub_1001E6484(a1) + 112);
}

uint64_t sub_1001D9E78(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1001E6484((unsigned int *)a1);
  if (!a2)
  {
    if (!sub_100058654()) {
      goto LABEL_9;
    }
    sub_100056E24((uint64_t)"LE_L2CAP_IncreaseRemoteCredits credits cannot be 0. Disconnecting.\n", v15, v16, v17, v18, v19, v20, v21, v24);
    unsigned __int16 v22 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
LABEL_8:
    sub_100744F6C();
LABEL_9:
    sub_1001E1530(*(unsigned __int16 *)(a1 + 4));
    return 101;
  }
  uint64_t v5 = *(unsigned int **)(v4 + 112);
  unsigned int v6 = *v5 + a2;
  *uint64_t v5 = v6;
  if (v6 >= 0x10000)
  {
    if (!sub_100058654()) {
      goto LABEL_9;
    }
    sub_100056E24((uint64_t)"LE_L2CAP_IncreaseRemoteCredits credits exceed max allowed. Disconnecting.\n", v7, v8, v9, v10, v11, v12, v13, v24);
    uint64_t v14 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  sub_1001F3B00(*(unsigned __int16 *)(a1 + 4));
  return 0;
}

uint64_t sub_1001D9F58(unsigned int *a1, unsigned int a2)
{
  uint64_t v3 = *(unsigned int **)(sub_1001E6484(a1) + 112);
  if (*v3 < a2) {
    return 101;
  }
  uint64_t result = 0;
  *v3 -= a2;
  return result;
}

uint64_t sub_1001D9F9C(uint64_t a1, unsigned __int16 *a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(sub_1001E6484((unsigned int *)a1) + 112);
  if (*(_DWORD *)(v10 + 4))
  {
    uint64_t v11 = sub_1001DA0E8(a1, a2, a3, a4, a5);
    if (v11)
    {
      uint64_t v12 = v11;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_L2CAP_Flow_DataIndication returned %!. Disconnecting L2CAP Channel\n", v13, v14, v15, v16, v17, v18, v19, v12);
        uint64_t v20 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_1001E1530(*(unsigned __int16 *)(a1 + 4));
    }
    else
    {
      unsigned __int16 v21 = *(_WORD *)(v10 + 8) + 1;
      *(_WORD *)(v10 + 8) = v21;
      --*(_DWORD *)(v10 + 4);
      if ((unsigned __int16)(*(_WORD *)(v10 + 10) - 1) >= v21)
      {
        return 0;
      }
      else
      {
        uint64_t v22 = *(void *)sub_1001E6484((unsigned int *)a1);
        char v23 = sub_100202B64();
        sub_10023641C(v22, v23, *(_WORD *)(a1 + 4), *(_WORD *)(v10 + 8));
        uint64_t v12 = 0;
        *(_DWORD *)(v10 + 4) += *(unsigned __int16 *)(v10 + 8);
        *(_WORD *)(v10 + 8) = 0;
      }
    }
  }
  else
  {
    sub_1001E1530(*(unsigned __int16 *)(a1 + 4));
    return 408;
  }
  return v12;
}

uint64_t sub_1001DA0E8(uint64_t a1, unsigned __int16 *a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(sub_1001E6484((unsigned int *)a1) + 112);
  uint64_t v12 = (uint64_t *)(v10 + 16);
  uint64_t v11 = *(char **)(v10 + 16);
  if (v11)
  {
LABEL_2:
    uint64_t v13 = *(unsigned int *)(v10 + 24);
    if (v13 + (unsigned __int16)a3 <= *(_DWORD *)(v10 + 28))
    {
      memmove(&v11[v13], a2, (unsigned __int16)a3);
      int v32 = *(_DWORD *)(v10 + 28);
      int v33 = *(_DWORD *)(v10 + 24) + (unsigned __int16)a3;
      *(_DWORD *)(v10 + 24) = v33;
      char v34 = *(unsigned char *)(v10 + 13) | a4;
      *(unsigned char *)(v10 + 13) = v34;
      if (v33 != v32) {
        return 0;
      }
      sub_1001E20D0(*(unsigned __int16 *)(a1 + 4), *v12, (unsigned __int16)v33, v34 != 0, a5);
      uint64_t v35 = 0;
      goto LABEL_17;
    }
    if (!sub_100058654() {
      || (sub_100056E24((uint64_t)"Too much data received (currentPos=%d, new data size=%d, totalSDU size=%d\n", v14, v15, v16, v17, v18, v19, v20, *(unsigned int *)(v10 + 24)), unsigned __int16 v21 = sub_100050B4C(0x2Fu), !os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)))
    }
    {
LABEL_16:
      uint64_t v35 = 472;
LABEL_17:
      if (*v12) {
        sub_100023010((void *)*v12);
      }
      *(unsigned char *)(v10 + 13) = 0;
      uint64_t *v12 = 0;
      *(void *)(v10 + 24) = 0;
      return v35;
    }
LABEL_15:
    sub_100744F6C();
    goto LABEL_16;
  }
  unsigned int v22 = *a2;
  *(_DWORD *)(v10 + 28) = v22;
  if (v22 > *(unsigned __int16 *)(sub_1001E6484((unsigned int *)a1) + 36))
  {
    if (!sub_100058654()) {
      goto LABEL_16;
    }
    uint64_t v23 = *(unsigned int *)(v10 + 28);
    sub_1001E6484((unsigned int *)a1);
    sub_100056E24((uint64_t)"SDU Size exceeds MTU (SDU Size=%d inMTU=%d\n", v24, v25, v26, v27, v28, v29, v30, v23);
    uint64_t v31 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (*(unsigned __int16 *)(sub_1001E6484((unsigned int *)a1) + 72) < a3)
  {
    if (!sub_100058654()) {
      goto LABEL_16;
    }
    sub_1001E6484((unsigned int *)a1);
    sub_100056E24((uint64_t)"PDU Size exceeds MaxPDUSize (PDU Size=%d maxPDUSize=%d\n", v36, v37, v38, v39, v40, v41, v42, a3);
    uint64_t v43 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  uint64_t v11 = (char *)sub_100022FE8(*(unsigned int *)(v10 + 28));
  *(void *)(v10 + 16) = v11;
  if (v11)
  {
    ++a2;
    LOWORD(a3) = a3 - 2;
    goto LABEL_2;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to allocate reassemblyPacket memory.\n", v45, v46, v47, v48, v49, v50, v51, v53);
    uint64_t v52 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 106;
}

uint64_t sub_1001DA35C(unsigned int a1, unsigned int a2)
{
  uint64_t v30 = 0;
  uint64_t v4 = sub_1001DD56C(a1, (uint64_t *)&v30);
  if (v4)
  {
    uint64_t v5 = v4;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ChanMan_GetChannel failed: %!", v6, v7, v8, v9, v10, v11, v12, v5);
      uint64_t v13 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (sub_1001F1564(a1))
  {
    uint64_t v14 = *(void *)(sub_1001E6484(v30) + 112);
    uint64_t v15 = *(void *)sub_1001E6484(v30);
    char v16 = sub_100202B64();
    uint64_t v5 = sub_10023641C(v15, v16, *((_WORD *)v30 + 2), a2);
    if (!v5)
    {
      *(_DWORD *)(v14 + 4) += a2;
      unsigned int v17 = *(unsigned __int16 *)(v14 + 8);
      uint64_t v5 = 0;
      BOOL v18 = v17 >= a2;
      __int16 v19 = v17 - a2;
      if (v18) {
        *(_WORD *)(v14 + 8) = v19;
      }
      else {
        *(_WORD *)(v14 + 8) = 0;
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This channel is not LE Credit based", v20, v21, v22, v23, v24, v25, v26, v29);
      uint64_t v27 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 403;
  }
  return v5;
}

BOOL sub_1001DA4A4()
{
  if (qword_100A052B8) {
    BOOL v0 = off_100A19690 == 0;
  }
  else {
    BOOL v0 = 1;
  }
  return !v0;
}

const char *sub_1001DA4C8(int a1)
{
  if (a1 > 4096)
  {
    if (a1 <= 0x2000)
    {
      switch(a1)
      {
        case 5121:
          uint64_t result = "OI_DHCI_READ_FAILED_CON_CTR_OPCODE";
          break;
        case 5122:
          uint64_t result = "OI_DHCI_RESET_FAILED_CON_CTR_OPCODE";
          break;
        case 5123:
          uint64_t result = "OI_DHCI_GET_LINK_QUALITY_OPCODE";
          break;
        case 5124:
LABEL_235:
          v2 = "Unknown";
          if ((a1 & 0xFC00) == 0xF800) {
            v2 = "OI_DHCI_BLUETOOTH_LOGO_TEST_OPCODE";
          }
          if (a1 >> 10 <= 0x3E) {
            uint64_t result = v2;
          }
          else {
            uint64_t result = "OI_DHCI_VENDOR_OPCODE";
          }
          break;
        case 5125:
          uint64_t result = "OI_DHCI_READ_RSSI_OPCODE";
          break;
        case 5126:
          uint64_t result = "OI_DHCI_READ_AFH_CHAN_MAP_OPCODE";
          break;
        case 5127:
          uint64_t result = "OI_DHCI_READ_CLOCK_OPCODE";
          break;
        case 5128:
          uint64_t result = "OI_DHCI_CMD_ID_READ_ENCRYPTION_KEY_SIZE_OPCODE";
          break;
        case 5129:
          uint64_t result = "OI_DHCI_CMD_ID_READ_LOCAL_AMP_INFO_OPCODE";
          break;
        case 5130:
          uint64_t result = "OI_DHCI_CMD_ID_READ_LOCAL_AMP_ASSOC_INFO_OPCODE";
          break;
        case 5131:
          uint64_t result = "OI_DHCI_CMD_ID_WRITE_LOCAL_AMP_ASSOC_INFO_OPCODE";
          break;
        default:
          JUMPOUT(0);
      }
    }
    else
    {
      switch(a1)
      {
        case 8193:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_EVENT_MASK_OPCODE";
          break;
        case 8194:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_BUFFER_SIZE_OPCODE";
          break;
        case 8195:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_LOCAL_SUPPORTED_FEATURES_OPCODE";
          break;
        case 8197:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_RANDOM_ADDRESS_OPCODE";
          break;
        case 8198:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_ADVERTISING_PARAMETERS_OPCODE";
          break;
        case 8199:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_ADVERTISING_CHANNEL_TX_POWER_OPCODE";
          break;
        case 8200:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_ADVERTISING_DATA_OPCODE";
          break;
        case 8201:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_SCAN_RESPONSE_DATA_OPCODE";
          break;
        case 8202:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_ADVERTISE_ENABLE_OPCODE";
          break;
        case 8203:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_SCAN_PARAMETERS_OPCODE";
          break;
        case 8204:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_SCAN_ENABLE_OPCODE";
          break;
        case 8205:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CREATE_CONNECTION_OPCODE";
          break;
        case 8206:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CREATE_CONNECTION_CANCEL_OPCODE";
          break;
        case 8207:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_FILTER_ACCEPT_LIST_SIZE_OPCODE";
          break;
        case 8208:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CLEAR_FILTER_ACCEPT_LIST_OPCODE";
          break;
        case 8209:
          uint64_t result = "OI_DHCI_CMD_ID_LE_ADD_DEVICE_TO_FILTER_ACCEPT_LIST_OPCODE";
          break;
        case 8210:
          uint64_t result = "OI_DHCI_CMD_ID_LE_REMOVE_DEVICE_FROM_FILTER_ACCEPT_LIST_OPCODE";
          break;
        case 8211:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CONNECTION_UPDATE_OPCODE";
          break;
        case 8212:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_HOST_CHANNEL_CLASSIFICATION_OPCODE";
          break;
        case 8213:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_CHANNEL_MAP_OPCODE";
          break;
        case 8214:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_REMOTE_USED_FEATURES_OPCODE";
          break;
        case 8215:
          uint64_t result = "OI_DHCI_CMD_ID_LE_ENCRYPT_OPCODE";
          break;
        case 8216:
          uint64_t result = "OI_DHCI_CMD_ID_LE_RAND_OPCODE";
          break;
        case 8217:
          uint64_t result = "OI_DHCI_CMD_ID_LE_START_ENCRYPTION_OPCODE";
          break;
        case 8218:
          uint64_t result = "OI_DHCI_CMD_ID_LE_LONG_TERM_KEY_REQUEST_REPLY_OPCODE";
          break;
        case 8219:
          uint64_t result = "OI_DHCI_CMD_ID_LE_LONG_TERM_KEY_REQUEST_NEG_REPLY_OPCODE";
          break;
        case 8220:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_SUPPORTED_STATES_OPCODE";
          break;
        case 8221:
          uint64_t result = "OI_DHCI_CMD_ID_LE_RECEIVER_TEST_OPCODE";
          break;
        case 8222:
          uint64_t result = "OI_DHCI_CMD_ID_LE_TRANSMITTER_TEST_OPCODE";
          break;
        case 8223:
          uint64_t result = "OI_DHCI_CMD_ID_LE_TEST_END_OPCODE";
          break;
        case 8224:
          uint64_t result = "OI_DHCI_CMD_ID_LE_REMOTE_CONNECTION_PARAM_REQ_REPLY_OPCODE";
          break;
        case 8225:
          uint64_t result = "OI_DHCI_CMD_ID_LE_REMOTE_CONNECTION_PARAM_REQ_NEG_REPLY_OPCODE";
          break;
        case 8226:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_DATA_LENGTH_OPCODE";
          break;
        case 8227:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_SUGGESTED_DEFAULT_DATA_LENGTH_OPCODE";
          break;
        case 8228:
          uint64_t result = "OI_DHCI_CMD_ID_LE_WRITE_SUGGESTED_DEFAULT_DATA_LENGTH_OPCODE";
          break;
        case 8239:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_MAXIMUM_DATA_LENGTH_OPCODE";
          break;
        case 8240:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_PHY_OPCODE";
          break;
        case 8241:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_DEFAULT_PHY_OPCODE";
          break;
        case 8242:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_PHY_OPCODE";
          break;
        case 8288:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_BUFFER_SIZE_V2_OPCODE";
          break;
        case 8310:
          uint64_t result = "OI_DHCI_CMD_ID_LE_ENHANCED_READ_TRANSMIT_POWER_LEVEL_OPCODE";
          break;
        case 8311:
          uint64_t result = "OI_DHCI_CMD_ID_LE_READ_REMOTE_TRANSMIT_POWER_LEVEL_OPCODE";
          break;
        case 8312:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_PATH_LOSS_REPORTING_PARAMETERS_OPCODE";
          break;
        case 8313:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_PATH_LOSS_REPORTING_ENABLE_OPCODE";
          break;
        case 8314:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_TRANSMIT_POWER_REPORTING_ENABLE_OPCODE";
          break;
        case 8317:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_DEFAULT_SUBRATE_OPCODE";
          break;
        case 8318:
          uint64_t result = "OI_DHCI_CMD_ID_LE_SET_HOST_SUBRATING_OPCODE";
          break;
        case 8329:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_READ_LOCAL_SUPPORTED_CAPABILITIES_OPCODE";
          break;
        case 8330:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_READ_REMOTE_SUPPORTED_CAPABILITIES_OPCODE";
          break;
        case 8331:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_WRITE_CACHED_REMOTE_SUPPORTED_CAPABILITIES_OPCODE";
          break;
        case 8332:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_SET_SECURITY_ENABLE_OPCODE";
          break;
        case 8333:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_SET_DEFAULT_SETTINGS_OPCODE";
          break;
        case 8334:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_READ_REMOTE_FAE_TABLE_OPCODE";
          break;
        case 8335:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_WRITE_REMOTE_FAE_TABLE_OPCODE";
          break;
        case 8336:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_CREATE_CONFIG_OPCODE";
          break;
        case 8337:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_REMOVE_CONFIG_OPCODE";
          break;
        case 8338:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_SET_AFH_OPCODE";
          break;
        case 8339:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_SET_PROCEDURE_PARAMETERS_OPCODE";
          break;
        case 8340:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_SET_PROCEDURE_ENABLE_OPCODE";
          break;
        case 8342:
          uint64_t result = "OI_DHCI_CMD_ID_LE_CS_READ_LOCAL_FAE_TABLE_OPCODE";
          break;
        default:
          goto LABEL_235;
      }
    }
  }
  else if (a1 <= 3072)
  {
    switch(a1)
    {
      case 1025:
        uint64_t result = "OI_DHCI_INQUIRY_OPCODE";
        break;
      case 1026:
        uint64_t result = "OI_DHCI_INQUIRY_CANCEL_OPCODE";
        break;
      case 1027:
        uint64_t result = "OI_DHCI_PERIODIC_INQ_MODE_OPCODE";
        break;
      case 1028:
        uint64_t result = "OI_DHCI_EXIT_PERIODIC_INQ_MODE_OPCODE";
        break;
      case 1029:
        uint64_t result = "OI_DHCI_CREATE_CNCT_OPCODE";
        break;
      case 1030:
        uint64_t result = "OI_DHCI_DISC_OPCODE";
        break;
      case 1031:
        uint64_t result = "OI_DHCI_ADD_SCO_CNCT_OPCODE";
        break;
      case 1032:
        uint64_t result = "OI_DHCI_CANCEL_CREATE_CNCT_OPCODE";
        break;
      case 1033:
        uint64_t result = "OI_DHCI_ACCEPT_CNCT_REQ_OPCODE";
        break;
      case 1034:
        uint64_t result = "OI_DHCI_REJ_CNCT_REQ_OPCODE";
        break;
      case 1035:
        uint64_t result = "OI_DHCI_LINK_KEY_REQ_REPLY_OPCODE";
        break;
      case 1036:
        uint64_t result = "OI_DHCI_LINK_KEY_REQ_NEG_REPLY_OPCODE";
        break;
      case 1037:
        uint64_t result = "OI_DHCI_PIN_CODE_REQ_REPLY_OPCODE";
        break;
      case 1038:
        uint64_t result = "OI_DHCI_PIN_CODE_REQ_NEG_REPLY_OPCODE";
        break;
      case 1039:
        uint64_t result = "OI_DHCI_CHANGE_CNCT_PKT_TYPE_OPCODE";
        break;
      case 1040:
      case 1042:
      case 1044:
      case 1046:
      case 1048:
      case 1054:
      case 1056:
      case 1057:
      case 1058:
      case 1059:
      case 1060:
      case 1061:
      case 1062:
      case 1063:
      case 1073:
      case 1074:
        goto LABEL_235;
      case 1041:
        uint64_t result = "OI_DHCI_AUTHENT_REQ_OPCODE";
        break;
      case 1043:
        uint64_t result = "OI_DHCI_SET_CNCT_ENCRYPTION_OPCODE";
        break;
      case 1045:
        uint64_t result = "OI_DHCI_CHANGE_CNCT_LINK_KEY_OPCODE";
        break;
      case 1047:
        uint64_t result = "OI_DHCI_MASTER_LINK_KEY_OPCODE";
        break;
      case 1049:
        uint64_t result = "OI_DHCI_REMOTE_NAME_REQ_OPCODE";
        break;
      case 1050:
        uint64_t result = "OI_DHCI_CANCEL_REMOTE_NAME_REQ_OPCODE";
        break;
      case 1051:
        uint64_t result = "OI_DHCI_READ_REMOTE_FEATURE_OPCODE";
        break;
      case 1052:
        uint64_t result = "OI_DHCI_READ_REMOTE_EXT_FEATURE_OPCODE";
        break;
      case 1053:
        uint64_t result = "OI_DHCI_READ_REMOTE_VER_INFO_OPCODE";
        break;
      case 1055:
        uint64_t result = "OI_DHCI_READ_CLOCK_OFFSET_OPCODE";
        break;
      case 1064:
        uint64_t result = "OI_DHCI_SETUP_SYNCHRONOUS_CNCT_OPCODE";
        break;
      case 1065:
        uint64_t result = "OI_DHCI_ACCEPT_SYNCHRONOUS_CNCT_OPCODE";
        break;
      case 1066:
        uint64_t result = "OI_DHCI_REJ_SYNCHRONOUS_CNCT_OPCODE";
        break;
      case 1067:
        uint64_t result = "OI_DHCI_IO_CAP_REQ_REPLY_OPCODE";
        break;
      case 1068:
        uint64_t result = "OI_DHCI_USER_CONFIRM_REQ_REPLY_OPCODE";
        break;
      case 1069:
        uint64_t result = "OI_DHCI_USER_CONFIRM_REQ_NEG_REPLY_OPCODE";
        break;
      case 1070:
        uint64_t result = "OI_DHCI_USER_PASSKEY_REQ_REPLY_OPCODE";
        break;
      case 1071:
        uint64_t result = "OI_DHCI_USER_PASSKEY_REQ_NEG_REPLY_OPCODE";
        break;
      case 1072:
        uint64_t result = "OI_DHCI_REMOTE_OOB_DATA_REQ_REPLY_OPCODE";
        break;
      case 1075:
        uint64_t result = "OI_DHCI_REMOTE_OOB_DATA_REQ_NEG_REPLY_OPCODE";
        break;
      case 1076:
        uint64_t result = "OI_DHCI_IO_CAP_REQ_NEG_REPLY_OPCODE";
        break;
      case 1077:
        uint64_t result = "OI_DHCI_CMD_ID_CREATE_PHYSICAL_LINK_OPCODE";
        break;
      case 1078:
        uint64_t result = "OI_DHCI_CMD_ID_ACCEPT_PHYSICAL_LINK_OPCODE";
        break;
      case 1079:
        uint64_t result = "OI_DHCI_CMD_ID_DISCONNECT_PHYSICAL_LINK_OPCODE";
        break;
      case 1080:
        uint64_t result = "OI_DHCI_CMD_ID_CREATE_LOGICAL_LINK_OPCODE";
        break;
      case 1081:
        uint64_t result = "OI_DHCI_CMD_ID_ACCEPT_LOGICAL_LINK_OPCODE";
        break;
      case 1082:
        uint64_t result = "OI_DHCI_CMD_ID_DISCONNECT_LOGICAL_LINK_OPCODE";
        break;
      case 1083:
        uint64_t result = "OI_DHCI_CMD_ID_LOGICAL_LINK_CANCEL_OPCODE";
        break;
      case 1084:
        uint64_t result = "OI_DHCI_CMD_ID_FLOW_SPEC_MODIFY_OPCODE";
        break;
      default:
        switch(a1)
        {
          case 2049:
            uint64_t result = "OI_DHCI_HOLD_MODE_OPCODE";
            break;
          case 2050:
          case 2056:
          case 2058:
            goto LABEL_235;
          case 2051:
            uint64_t result = "OI_DHCI_SNIFF_MODE_OPCODE";
            break;
          case 2052:
            uint64_t result = "OI_DHCI_EXIT_SNIFF_MODE_OPCODE";
            break;
          case 2053:
            uint64_t result = "OI_DHCI_PARK_MODE_OPCODE";
            break;
          case 2054:
            uint64_t result = "OI_DHCI_EXIT_PARK_MODE_OPCODE";
            break;
          case 2055:
            uint64_t result = "OI_DHCI_QOS_SETUP_OPCODE";
            break;
          case 2057:
            uint64_t result = "OI_DHCI_ROLE_DISCOVERY_OPCODE";
            break;
          case 2059:
            uint64_t result = "OI_DHCI_SWITCH_ROLE_OPCODE";
            break;
          case 2060:
            uint64_t result = "OI_DHCI_READ_LINKPOLICY_OPCODE";
            break;
          case 2061:
            uint64_t result = "OI_DHCI_WRITE_LINKPOLICY_OPCODE";
            break;
          case 2062:
            uint64_t result = "OI_DHCI_READ_DEFAULT_LINKPOLICY_OPCODE";
            break;
          case 2063:
            uint64_t result = "OI_DHCI_WRITE_DEFAULT_LINKPOLICY_OPCODE";
            break;
          case 2064:
            uint64_t result = "OI_DHCI_WRITE_FLOW_SPECIFICATION_OPCODE";
            break;
          case 2065:
            uint64_t result = "OI_DHCI_SNIFF_SUBRATING_OPCODE";
            break;
          default:
            if (a1) {
              goto LABEL_235;
            }
            uint64_t result = "OI_DHCI_NOP_OPCODE";
            break;
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 3073:
        uint64_t result = "OI_DHCI_SET_EVT_MASK_OPCODE";
        break;
      case 3075:
        uint64_t result = "OI_DHCI_RESET_OPCODE";
        break;
      case 3077:
        uint64_t result = "OI_DHCI_SET_EVT_FILTER_OPCODE";
        break;
      case 3080:
        uint64_t result = "OI_DHCI_FLUSH_OPCODE";
        break;
      case 3081:
        uint64_t result = "OI_DHCI_READ_PIN_TYPE_OPCODE";
        break;
      case 3082:
        uint64_t result = "OI_DHCI_WRITE_PIN_TYPE_OPCODE";
        break;
      case 3083:
        uint64_t result = "OI_DHCI_CREATE_NEW_UNIT_KEY_OPCODE";
        break;
      case 3085:
        uint64_t result = "OI_DHCI_READ_STORED_LINK_KEY_OPCODE";
        break;
      case 3089:
        uint64_t result = "OI_DHCI_WRITE_STORED_LINK_KEY_OPCODE";
        break;
      case 3090:
        uint64_t result = "OI_DHCI_DELETE_STORED_LINK_KEY_OPCODE";
        break;
      case 3091:
        uint64_t result = "OI_DHCI_CHANGE_LOCAL_NAME_OPCODE";
        break;
      case 3092:
        uint64_t result = "OI_DHCI_READ_LOCAL_NAME_OPCODE";
        break;
      case 3093:
        uint64_t result = "OI_DHCI_READ_CNCT_ACCEPT_TO_OPCODE";
        break;
      case 3094:
        uint64_t result = "OI_DHCI_WRITE_CNCT_ACCEPT_TO_OPCODE";
        break;
      case 3095:
        uint64_t result = "OI_DHCI_READ_PAGE_TIMEOUT_OPCODE";
        break;
      case 3096:
        uint64_t result = "OI_DHCI_WRITE_PAGE_TIMEOUT_OPCODE";
        break;
      case 3097:
        uint64_t result = "OI_DHCI_READ_SCAN_ENABLE_OPCODE";
        break;
      case 3098:
        uint64_t result = "OI_DHCI_WRITE_SCAN_ENABLE_OPCODE";
        break;
      case 3099:
        uint64_t result = "OI_DHCI_READ_PAGESCAN_ACTIVITY_OPCODE";
        break;
      case 3100:
        uint64_t result = "OI_DHCI_WRITE_PAGESCAN_ACT_OPCODE";
        break;
      case 3101:
        uint64_t result = "OI_DHCI_READ_INQUIRYSCAN_ACT_OPCODE";
        break;
      case 3102:
        uint64_t result = "OI_DHCI_WRITE_INQUIRYSCAN_ACT_OPCODE";
        break;
      case 3103:
        uint64_t result = "OI_DHCI_READ_AUTHENT_ENABLE_OPCODE";
        break;
      case 3104:
        uint64_t result = "OI_DHCI_WRITE_AUTHENT_ENABLE_OPCODE";
        break;
      case 3105:
        uint64_t result = "OI_DHCI_READ_ENCRYPTION_MODE_OPCODE";
        break;
      case 3106:
        uint64_t result = "OI_DHCI_WRITE_ENCRYPTION_MODE_OPCODE";
        break;
      case 3107:
        uint64_t result = "OI_DHCI_READ_CLASS_OF_DEVICE_OPCODE";
        break;
      case 3108:
        uint64_t result = "OI_DHCI_WRITE_CLASS_OF_DEVICE_OPCODE";
        break;
      case 3109:
        uint64_t result = "OI_DHCI_READ_VOICE_SETTING_OPCODE";
        break;
      case 3110:
        uint64_t result = "OI_DHCI_WRITE_VOICE_SETTING_OPCODE";
        break;
      case 3111:
        uint64_t result = "OI_DHCI_READ_AUTO_FLUSH_TO_OPCODE";
        break;
      case 3112:
        uint64_t result = "OI_DHCI_WRITE_AUTO_FLUSH_TO_OPCODE";
        break;
      case 3113:
        uint64_t result = "OI_DHCI_READ_NUM_BC_RETRANS_OPCODE";
        break;
      case 3114:
        uint64_t result = "OI_DHCI_WRITE_NUM_BC_RETRANS_OPCODE";
        break;
      case 3115:
        uint64_t result = "OI_DHCI_READ_HOLD_MODE_ACT_OPCODE";
        break;
      case 3116:
        uint64_t result = "OI_DHCI_WRITE_HOLD_MODE_ACT_OPCODE";
        break;
      case 3117:
        uint64_t result = "OI_DHCI_READ_TX_POWER_LEVEL_OPCODE";
        break;
      case 3118:
        uint64_t result = "OI_DHCI_READ_SCO_FLOW_CTL_ENA_OPCODE";
        break;
      case 3119:
        uint64_t result = "OI_DHCI_WRITE_SCO_FLOW_CTL_ENA_OPCODE";
        break;
      case 3121:
        uint64_t result = "OI_DHCI_SET_CNTR_TO_HOST_FLOW_OPCODE";
        break;
      case 3123:
        uint64_t result = "OI_DHCI_HOST_BUFFER_SIZE_OPCODE";
        break;
      case 3125:
        uint64_t result = "OI_DHCI_HOST_NUM_COMPLETED_PKTS_OPCODE";
        break;
      case 3126:
        uint64_t result = "OI_DHCI_READ_LINK_SVISION_TO_OPCODE";
        break;
      case 3127:
        uint64_t result = "OI_DHCI_WRITE_LINK_SVISION_TO_OPCODE";
        break;
      case 3128:
        uint64_t result = "OI_DHCI_READ_NUM_SUPPORTED_IAC_OPCODE";
        break;
      case 3129:
        uint64_t result = "OI_DHCI_READ_CURRENT_IAC_LAP_OPCODE";
        break;
      case 3130:
        uint64_t result = "OI_DHCI_WRITE_CURRENT_IAC_LAP_OPCODE";
        break;
      case 3131:
        uint64_t result = "OI_DHCI_READ_PAGESCAN_PRD_MODE_OPCODE";
        break;
      case 3132:
        uint64_t result = "OI_DHCI_WRITE_PAGESCAN_PRD_MODE_OPCODE";
        break;
      case 3133:
        uint64_t result = "OI_DHCI_READ_PAGESCAN_MODE_OPCODE";
        break;
      case 3134:
        uint64_t result = "OI_DHCI_WRITE_PAGESCAN_MODE_OPCODE";
        break;
      case 3135:
        uint64_t result = "OI_DHCI_SET_AFH_CHAN_CLASS_OPCODE";
        break;
      case 3138:
        uint64_t result = "OI_DHCI_READ_INQUIRY_SCAN_TYPE_OPCODE";
        break;
      case 3139:
        uint64_t result = "OI_DHCI_WRITE_INQUIRY_SCAN_TYPE_OPCODE";
        break;
      case 3140:
        uint64_t result = "OI_DHCI_READ_INQUIRY_MODE_OPCODE";
        break;
      case 3141:
        uint64_t result = "OI_DHCI_WRITE_INQUIRY_MODE_OPCODE";
        break;
      case 3142:
        uint64_t result = "OI_DHCI_READ_PAGESCAN_TYPE_OPCODE";
        break;
      case 3143:
        uint64_t result = "OI_DHCI_WRITE_PAGESCAN_TYPE_OPCODE";
        break;
      case 3144:
        uint64_t result = "OI_DHCI_READ_AFH_CHAN_ASSESS_MODE_OPCODE";
        break;
      case 3145:
        uint64_t result = "OI_DHCI_WRITE_AFH_CHAN_ASSESS_MODE_OPCODE";
        break;
      case 3153:
        uint64_t result = "OI_DHCI_READ_EXT_INQ_RESP_OPCODE";
        break;
      case 3154:
        uint64_t result = "OI_DHCI_WRITE_EXT_INQ_RESP_OPCODE";
        break;
      case 3155:
        uint64_t result = "OI_DHCI_REFRESH_ENCRYPTION_KEY_OPCODE";
        break;
      case 3157:
        uint64_t result = "OI_DHCI_READ_SIMPLE_PAIRING_MODE_OPCODE";
        break;
      case 3158:
        uint64_t result = "OI_DHCI_WRITE_SIMPLE_PAIRING_MODE_OPCODE";
        break;
      case 3159:
        uint64_t result = "OI_DHCI_READ_LOCAL_OOB_DATA_OPCODE";
        break;
      case 3160:
        uint64_t result = "OI_DHCI_READ_INQ_RESP_TX_PWR_OPCODE";
        break;
      case 3161:
        uint64_t result = "OI_DHCI_WRITE_INQ_RESP_TX_PWR_OPCODE";
        break;
      case 3162:
        uint64_t result = "OI_DHCI_READ_DEF_ERR_DATA_REPORT_OPCODE";
        break;
      case 3163:
        uint64_t result = "OI_DHCI_WRITE_DEF_ERR_DATA_REPORT_OPCODE";
        break;
      case 3167:
        uint64_t result = "OI_DHCI_ENHANCED_FLUSH_OPCODE";
        break;
      case 3168:
        uint64_t result = "OI_DHCI_SEND_KEY_PRESS_NOTIFY_OPCODE";
        break;
      case 3169:
        uint64_t result = "OI_DHCI_CMD_ID_READ_LOGICAL_LINK_ACCEPT_TIMEOUT_OPCODE";
        break;
      case 3170:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT_OPCODE";
        break;
      case 3171:
        uint64_t result = "OI_DHCI_CMD_ID_SET_EVENT_MASK_PAGE_2_OPCODE";
        break;
      case 3172:
        uint64_t result = "OI_DHCI_CMD_ID_READ_LOCATION_DATA_OPCODE";
        break;
      case 3173:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_LOCATION_DATA_OPCODE";
        break;
      case 3174:
        uint64_t result = "OI_DHCI_CMD_ID_READ_FLOW_CONTROL_MODE_OPCODE";
        break;
      case 3175:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_FLOW_CONTROL_MODE_OPCODE";
        break;
      case 3176:
        uint64_t result = "OI_DHCI_CMD_ID_READ_ENHANCED_TX_POWER_LEVEL_OPCODE";
        break;
      case 3177:
        uint64_t result = "OI_DHCI_CMD_ID_READ_BEST_EFFORT_FLUSH_TIMEOUT_OPCODE";
        break;
      case 3178:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_BEST_EFFORT_FLUSH_TIMEOUT_OPCODE";
        break;
      case 3179:
        uint64_t result = "OI_DHCI_CMD_ID_SHORT_RANGE_MODE_OPCODE";
        break;
      case 3180:
        uint64_t result = "OI_DHCI_CMD_ID_READ_LE_HOST_SUPPORTED_OPCODE";
        break;
      case 3181:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_LE_HOST_SUPPORTED_OPCODE";
        break;
      case 3182:
        uint64_t result = "OI_DHCI_CMD_ID_MWS_SET_CHANNEL_PARAMETERS_OPCODE";
        break;
      case 3183:
        uint64_t result = "OI_DHCI_CMD_ID_MWS_SET_EXTERNAL_FRAME_CONFIG_OPCODE";
        break;
      case 3184:
        uint64_t result = "OI_DHCI_CMD_ID_MWS_SIGNALING_OPCODE";
        break;
      case 3185:
        uint64_t result = "OI_DHCI_CMD_ID_MWS_SET_TRANSPORT_LAYER_OPCODE";
        break;
      case 3186:
        uint64_t result = "OI_DHCI_CMD_ID_MWS_SET_SCAN_FREQ_TABLE_OPCODE";
        break;
      case 3193:
        uint64_t result = "OI_DHCI_CMD_ID_READ_SECURE_CONNECTION_HOST_SUPPORT_OPCODE";
        break;
      case 3194:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_SECURE_CONNECTION_HOST_SUPPORT_OPCODE";
        break;
      case 3195:
        uint64_t result = "OI_DHCI_CMD_ID_READ_AUTHENTICATION_PAYLOAD_TIMEOUT_OPCODE";
        break;
      case 3196:
        uint64_t result = "OI_DHCI_CMD_ID_WRITE_AUTHENTICATION_PAYLOAD_TIMEOUT_OPCODE";
        break;
      case 3204:
        uint64_t result = "OI_DHCI_CMD_ID_SET_MIN_ENCRYPTION_KEY_SIZE_OPCODE";
        break;
      default:
        goto LABEL_235;
    }
  }
  return result;
}

uint64_t sub_1001DB79C()
{
  if (DWORD2(xmmword_100A197C0)) {
    return 140;
  }
  v1 = (unsigned int *)sub_10025B218(6u);
  qword_100A052C0 = (uint64_t)sub_10010CE48(0x10uLL);
  *(void *)qword_100A052C0 = sub_10010CE48(504 * *v1);
  v2 = (_DWORD *)sub_10025B218(6u);
  uint64_t result = 0;
  *(_DWORD *)(qword_100A052C0 + 8) = *v2;
  DWORD2(xmmword_100A197C0) = 1;
  return result;
}

uint64_t sub_1001DB830()
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 0;
  }
  unsigned int v0 = *(_DWORD *)(qword_100A052C0 + 8);
  if (!v0) {
    return 0;
  }
  unsigned __int8 v1 = 0;
  uint64_t v2 = *(void *)qword_100A052C0;
  while (*(_DWORD *)(v2 + 504 * v1 + 12))
  {
    if (v0 <= ++v1) {
      return 0;
    }
  }
  ++*(_DWORD *)(qword_100A052C0 + 12);
  return v2 + 504 * v1;
}

void sub_1001DB898(uint64_t a1)
{
  if (!DWORD2(xmmword_100A197C0)) {
    sub_10025B8C0();
  }
  *(void *)(a1 + 496) = 0;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 12) = 0;
  uint64_t v2 = (void **)qword_100A052C0;
  int v3 = *(_DWORD *)(qword_100A052C0 + 12) - 1;
  *(_DWORD *)(qword_100A052C0 + 12) = v3;
  if (!v3 && DWORD2(xmmword_100A197C0))
  {
    if (*v2)
    {
      sub_100023010(*v2);
      uint64_t v2 = (void **)qword_100A052C0;
      *(void *)qword_100A052C0 = 0;
    }
    sub_100023010(v2);
    qword_100A052C0 = 0;
    DWORD2(xmmword_100A197C0) = 0;
  }
}

uint64_t sub_1001DB95C(_OWORD *a1, _WORD *a2)
{
  if (DWORD2(xmmword_100A197C0) || (uint64_t v11 = sub_1001DB79C(), !v11))
  {
    if (a1)
    {
      uint64_t v4 = sub_1001DB830();
      if (*(_DWORD *)(v4 + 12)) {
        sub_10025B8C0();
      }
      *(_DWORD *)(v4 + 8) = 0;
      *(_OWORD *)(v4 + 32) = *a1;
      long long v5 = a1[1];
      long long v6 = a1[2];
      long long v7 = a1[4];
      *(_OWORD *)(v4 + 80) = a1[3];
      *(_OWORD *)(v4 + 96) = v7;
      *(_OWORD *)(v4 + 48) = v5;
      *(_OWORD *)(v4 + 64) = v6;
      long long v8 = a1[5];
      long long v9 = a1[6];
      long long v10 = a1[8];
      *(_OWORD *)(v4 + 144) = a1[7];
      *(_OWORD *)(v4 + 160) = v10;
      *(_OWORD *)(v4 + 112) = v8;
      *(_OWORD *)(v4 + 128) = v9;
      long long v21 = unk_10099EDB8;
      uint64_t v11 = sub_100263D70((uint64_t)&v21, (uint64_t)off_10099ED90, 0, a2, (uint64_t)&unk_1007BA3C0, 0);
      if (v11)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_OBEXSRV_RegisterL2capServer failed with status %!", v12, v13, v14, v15, v16, v17, v18, v11);
          __int16 v19 = sub_100050B4C(6u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        sub_1001DB898(v4);
      }
      else
      {
        *(_DWORD *)(v4 + 12) = 1;
        *(_WORD *)(v4 + 22) = *a2;
      }
    }
    else
    {
      sub_10025B8C0();
      return 101;
    }
  }
  return v11;
}

uint64_t sub_1001DBAA0(int a1)
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 0;
  }
  unsigned int v1 = *(_DWORD *)(qword_100A052C0 + 8);
  if (!v1) {
    return 0;
  }
  unsigned __int8 v2 = 0;
  uint64_t v3 = *(void *)qword_100A052C0;
  while (*(unsigned __int8 *)(v3 + 504 * v2 + 20) != a1)
  {
    if (v1 <= ++v2) {
      return 0;
    }
  }
  return v3 + 504 * v2;
}

uint64_t sub_1001DBB00(int a1)
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 408;
  }
  uint64_t v2 = sub_1001DBBBC(a1);
  if (!v2) {
    return 406;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_100264110(a1);
  if (v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_BIPSRV_DeregisterAVRCPServer: %!", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(6u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  sub_1001DB898(v3);
  return v4;
}

uint64_t sub_1001DBBBC(int a1)
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 0;
  }
  unsigned int v1 = *(_DWORD *)(qword_100A052C0 + 8);
  if (!v1) {
    return 0;
  }
  unsigned __int8 v2 = 0;
  uint64_t v3 = *(void *)qword_100A052C0;
  while (*(unsigned __int16 *)(v3 + 504 * v2 + 22) != a1)
  {
    if (v1 <= ++v2) {
      return 0;
    }
  }
  return v3 + 504 * v2;
}

uint64_t sub_1001DBC1C(int a1)
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 408;
  }
  uint64_t v1 = sub_1001DBC78(a1);
  if (*(_DWORD *)(v1 + 12) < 2u) {
    return 1709;
  }
  unsigned int v3 = *(unsigned __int16 *)(v1 + 30);

  return sub_1001148A0(v3);
}

uint64_t sub_1001DBC78(int a1)
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 0;
  }
  unsigned int v1 = *(_DWORD *)(qword_100A052C0 + 8);
  if (!v1) {
    return 0;
  }
  unsigned __int8 v2 = 0;
  uint64_t v3 = *(void *)qword_100A052C0;
  while (*(unsigned __int16 *)(v3 + 504 * v2 + 30) != a1)
  {
    if (v1 <= ++v2) {
      return 0;
    }
  }
  return v3 + 504 * v2;
}

uint64_t sub_1001DBCD8(unsigned int a1, int a2)
{
  uint64_t v4 = sub_1001DBC78(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    if (a2) {
      int v6 = 0;
    }
    else {
      int v6 = 3390;
    }
    uint64_t v7 = sub_100114014(a1, a2, v6);
    if (v7)
    {
      uint64_t v8 = v7;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_OBEXSRV_AcceptConnect failed %!", v9, v10, v11, v12, v13, v14, v15, v8);
        uint64_t v16 = sub_100050B4C(6u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      uint64_t v8 = 0;
      if (a2) {
        *(_DWORD *)(v5 + 12) = 2;
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No server registered on OBEX handle %d", v17, v18, v19, v20, v21, v22, v23, a1);
      uint64_t v24 = sub_100050B4C(6u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1709;
  }
  return v8;
}

uint64_t sub_1001DBDE0(int a1, uint64_t a2)
{
  uint64_t v3 = sub_1001DBC78(a1);
  __int16 v4 = *(_WORD *)(v3 + 28);
  *(_DWORD *)a2 = *(_DWORD *)(v3 + 24);
  *(_WORD *)(a2 + 4) = v4;
  return 0;
}

uint64_t sub_1001DBE18(int a1, _OWORD *a2, _OWORD *a3, _DWORD *a4, _OWORD *a5, _OWORD *a6, int a7, int a8)
{
  if (!DWORD2(xmmword_100A197C0)) {
    return 408;
  }
  uint64_t v15 = sub_1001DBC78(a1);
  uint64_t v16 = v15;
  if (a8 && a8 != 1701)
  {
    *(_DWORD *)(v15 + 12) = 2;
    uint64_t v19 = *(void **)(v15 + 232);
    if (v19)
    {
      sub_100023010(v19);
      *(void *)(v16 + 232) = 0;
    }
    unsigned int v20 = *(unsigned __int16 *)(v16 + 30);
    uint64_t v21 = 0;
    goto LABEL_23;
  }
  if (!*(_DWORD *)(v15 + 16))
  {
    if (a2)
    {
      *(unsigned char *)(v15 + 360) = 48;
      *(_OWORD *)(v15 + 368) = *a2;
      unsigned int v17 = 1;
      if (!a3)
      {
LABEL_13:
        if (a4)
        {
          uint64_t v23 = v15 + 24 * v17;
          *(unsigned char *)(v23 + 360) = -61;
          *(_DWORD *)(v23 + 368) = *a4;
          ++v17;
        }
        if (a5)
        {
          uint64_t v24 = v15 + 24 * v17;
          *(unsigned char *)(v24 + 360) = 76;
          *(_OWORD *)(v24 + 368) = *a5;
          ++v17;
        }
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int v17 = 0;
      if (!a3) {
        goto LABEL_13;
      }
    }
    uint64_t v22 = v15 + 24 * v17;
    *(unsigned char *)(v22 + 360) = 113;
    *(_OWORD *)(v22 + 368) = *a3;
    ++v17;
    goto LABEL_13;
  }
  unsigned int v17 = 0;
LABEL_17:
  if (a6)
  {
    if (a7) {
      char v25 = 73;
    }
    else {
      char v25 = 72;
    }
    uint64_t v26 = v15 + 24 * v17;
    *(unsigned char *)(v26 + 360) = v25;
    *(_OWORD *)(v26 + 368) = *a6;
    LOBYTE(v17) = v17 + 1;
  }
  uint64_t v21 = v15 + 480;
  *(void *)(v15 + 480) = v15 + 360;
  *(unsigned char *)(v15 + 488) = v17;
  unsigned int v20 = *(unsigned __int16 *)(v15 + 30);
LABEL_23:

  return sub_100113A54(v20, v21, a8);
}

uint64_t sub_1001DBFB0(int a1, uint64_t a2, int a3)
{
  return sub_1001DBE18(a1, 0, 0, 0, 0, *(_OWORD **)(a2 + 8), *(unsigned __int8 *)(a2 + 16), a3);
}

uint64_t sub_1001DBFD0(int a1, uint64_t a2, int a3)
{
  return sub_1001DBE18(a1, 0, 0, (_DWORD *)(a2 + 16), 0, *(_OWORD **)(a2 + 24), *(unsigned __int8 *)(a2 + 32), a3);
}

uint64_t sub_1001DBFF0(uint64_t a1, int a2)
{
  int v21 = 0;
  __int16 v20 = 0;
  int v19 = 0;
  if (sub_10011484C(a1, &v21)) {
    goto LABEL_2;
  }
  if (v21 == 1)
  {
    unsigned __int16 v17 = 0;
    sub_100264148(a1, &v17);
    uint64_t v13 = sub_1001DBBBC(v17);
  }
  else
  {
    if (v21) {
      goto LABEL_2;
    }
    unsigned __int8 v18 = 0;
    sub_100163948(a1, &v18);
    uint64_t v13 = sub_1001DBAA0(v18);
  }
  uint64_t v14 = v13;
  if (v13)
  {
    uint64_t result = sub_1001147F0(a1, (uint64_t)&v19);
    *(_DWORD *)(v14 + 24) = v19;
    *(_WORD *)(v14 + 28) = v20;
    *(_WORD *)(v14 + 30) = a1;
    unsigned int v15 = *(_DWORD *)(v14 + 8);
    if (a2)
    {
      if (v15 > 2) {
        return result;
      }
      uint64_t v16 = *(uint64_t (**)(uint64_t))(v14 + 48);
      if (!v16) {
        return sub_10011448C(a1, 0, 0, 0, 0);
      }
    }
    else
    {
      if (v15 > 2) {
        return result;
      }
      uint64_t v16 = *(uint64_t (**)(uint64_t))(v14 + 32);
    }
    return v16(a1);
  }
LABEL_2:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Rejecting connection with status %!", v4, v5, v6, v7, v8, v9, v10, 1709);
    uint64_t v11 = sub_100050B4C(6u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return sub_100114014(a1, 0, 1709);
}

void sub_1001DC160(uint64_t a1)
{
  uint64_t v2 = sub_1001DBC78(a1);
  uint64_t v3 = v2;
  if (*(_DWORD *)(v2 + 8) <= 2u) {
    (*(void (**)(uint64_t))(v2 + 40))(a1);
  }
  uint64_t v4 = *(void **)(v3 + 232);
  if (v4)
  {
    sub_100023010(v4);
    *(void *)(v3 + 232) = 0;
  }
  *(void *)(v3 + 240) = 0;
  *(_DWORD *)(v3 + 12) = 1;
  *(_WORD *)(v3 + 30) = 0;
}

uint64_t sub_1001DC1C0(int a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001DC1E0(a1, a2, a3, &off_10099EDC8, 9);
}

uint64_t sub_1001DC1D0(int a1, uint64_t *a2, uint64_t a3)
{
  return sub_1001DC1E0(a1, a2, a3, &off_10099EE58, 8);
}

uint64_t sub_1001DC1E0(int a1, uint64_t *a2, uint64_t a3, _UNKNOWN **a4, int a5)
{
  LODWORD(v5) = a5;
  uint64_t v9 = sub_1001DBC78(a1);
  unsigned int v10 = *(_DWORD *)(v9 + 12);
  if (v10 <= 1)
  {
    sub_10025B8C0();
    return 408;
  }
  uint64_t v12 = v9;
  if (!a3 || a3 == 1752 || a3 == 1701)
  {
    BOOL v13 = v10 == 2;
    if (a2)
    {
      BOOL v15 = a3 != 1701 && a4 == &off_10099EE58;
LABEL_15:
      sub_1000F74DC((int *)(v12 + 248), a2);
      if (v10 != 2)
      {
        if (*(_DWORD *)(v12 + 12) != 3) {
          sub_10025B8C0();
        }
        int v27 = 1;
        goto LABEL_38;
      }
      uint64_t v16 = *(const void ***)(v12 + 256);
      if (v16)
      {
        *(void *)(v12 + 240) = 0;
        if (v5)
        {
          size_t v17 = *(unsigned __int16 *)v16;
          uint64_t v5 = v5;
          while (v17 != *(unsigned __int16 *)*a4 || memcmp(v16[1], *((const void **)*a4 + 1), v17))
          {
            a4 += 2;
            if (!--v5) {
              goto LABEL_22;
            }
          }
          *(void *)(v12 + 240) = a4;
          if (*((_DWORD *)a4 + 2) == 2)
          {
            if (v15 && !*(void *)(v12 + 304)) {
              a4 = &off_10099EE78;
            }
            else {
              a4 = &off_10099EE68;
            }
            *(void *)(v12 + 240) = a4;
          }
          int v38 = *((_DWORD *)a4 + 2);
          int v39 = *(_DWORD *)(v12 + 8);
          if (v39 != 2)
          {
            if (v39 == 1)
            {
              switch(v38)
              {
                case 1:
                  goto LABEL_61;
                case 4:
                  goto LABEL_62;
                case 8:
                case 14:
                  goto LABEL_59;
                case 9:
                  goto LABEL_63;
                case 10:
                  goto LABEL_64;
                case 11:
                  goto LABEL_65;
                case 12:
                  goto LABEL_66;
                default:
                  goto LABEL_72;
              }
            }
            if (!v39)
            {
              switch(v38)
              {
                case 1:
                  goto LABEL_61;
                case 3:
                case 14:
                  goto LABEL_59;
                case 4:
                  uint64_t v40 = (void *)(v12 + 136);
                  goto LABEL_67;
                case 5:
                  goto LABEL_63;
                case 6:
                  goto LABEL_64;
                case 7:
                  goto LABEL_65;
                case 8:
                  goto LABEL_66;
                case 9:
                  goto LABEL_62;
                case 10:
                  uint64_t v40 = (void *)(v12 + 112);
                  goto LABEL_67;
                case 11:
                  uint64_t v40 = (void *)(v12 + 120);
                  goto LABEL_67;
                case 12:
                  uint64_t v40 = (void *)(v12 + 128);
                  goto LABEL_67;
                case 13:
                  uint64_t v40 = (void *)(v12 + 144);
                  goto LABEL_67;
                case 15:
                  uint64_t v40 = (void *)(v12 + 152);
                  goto LABEL_67;
                case 16:
                  uint64_t v40 = (void *)(v12 + 168);
                  goto LABEL_67;
                case 17:
                  uint64_t v40 = (void *)(v12 + 160);
                  goto LABEL_67;
                default:
                  break;
              }
            }
LABEL_72:
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Unimplemented command requested", v42, v43, v44, v45, v46, v47, v48, v58);
              uint64_t v49 = sub_100050B4C(6u);
              if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            return 1717;
          }
          switch(v38)
          {
            case 1:
LABEL_61:
              uint64_t v40 = (void *)(v12 + 56);
              break;
            case 4:
LABEL_62:
              uint64_t v40 = (void *)(v12 + 104);
              break;
            case 8:
LABEL_59:
              uint64_t v40 = (void *)(v12 + 64);
              break;
            case 9:
LABEL_63:
              uint64_t v40 = (void *)(v12 + 72);
              break;
            case 10:
LABEL_64:
              uint64_t v40 = (void *)(v12 + 80);
              break;
            case 11:
LABEL_65:
              uint64_t v40 = (void *)(v12 + 88);
              break;
            case 12:
LABEL_66:
              uint64_t v40 = (void *)(v12 + 96);
              break;
            default:
              goto LABEL_72;
          }
LABEL_67:
          if (!*v40) {
            goto LABEL_72;
          }
          if ((*((unsigned __int16 *)a4 + 6) & ~*(_DWORD *)(v12 + 248)) != 0)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Incomplete request", v50, v51, v52, v53, v54, v55, v56, v58);
              uint64_t v57 = sub_100050B4C(6u);
              if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            return 1741;
          }
          if (*(void *)(v12 + 232)) {
            sub_10025B8C0();
          }
          uint64_t v41 = sub_10010CE48(0x30uLL);
          int v27 = 0;
          *(void *)(v12 + 232) = v41;
          *(_DWORD *)(v12 + 12) = 3;
LABEL_38:
          *(_DWORD *)(v12 + 16) = v27;
          uint64_t v11 = sub_1001DC6E4(v12, a3);
          if (v11)
          {
            uint64_t v28 = *(void **)(v12 + 232);
            if (v28)
            {
              sub_100023010(v28);
              *(void *)(v12 + 232) = 0;
            }
            *(_DWORD *)(v12 + 12) = 2;
          }
          return v11;
        }
LABEL_22:
        if (!sub_100058654()) {
          return 1721;
        }
        sub_100056E24((uint64_t)"Unknown request type", v18, v19, v20, v21, v22, v23, v24, v58);
        char v25 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          return 1721;
        }
      }
      else
      {
        if (!sub_100058654()) {
          return 1721;
        }
        sub_100056E24((uint64_t)"Type header missing in request", v29, v30, v31, v32, v33, v34, v35, v58);
        uint64_t v36 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
          return 1721;
        }
      }
      sub_100744F6C();
      return 1721;
    }
  }
  else
  {
    BOOL v13 = v10 == 2;
    if (a2)
    {
      BOOL v15 = a4 == &off_10099EE58;
      sub_10025B8C0();
      goto LABEL_15;
    }
  }
  if (a3 == 1701) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = a3;
  }
  if (a3 != 1701 && !v13)
  {
    *(_DWORD *)(v9 + 16) = 2;
    if (*(void *)(v9 + 240))
    {
      *(_DWORD *)(v9 + 12) = 3;
      sub_1001DC6E4(v9, a3);
    }
    *(_DWORD *)(v12 + 12) = 2;
    uint64_t v26 = *(void **)(v12 + 232);
    if (v26)
    {
      sub_100023010(v26);
      *(void *)(v12 + 232) = 0;
    }
    return a3;
  }
  return v11;
}

uint64_t sub_1001DC6E4(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (*(_DWORD *)(a1 + 12) != 3) {
    sub_10025B8C0();
  }
  uint64_t result = 1743;
  switch(*(_DWORD *)(*(void *)(a1 + 240) + 8))
  {
    case 1:
      if (*(_DWORD *)(a1 + 8) > 2u) {
        return 408;
      }
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 56);
      if (!v5)
      {
        sub_10025B8C0();
        uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 56);
      }
      uint64_t v6 = *(unsigned __int16 *)(a1 + 30);
      uint64_t v7 = *(void *)(a1 + 232);
      uint64_t v8 = *(unsigned int *)(a1 + 16);
      goto LABEL_163;
    case 3:
      uint64_t v9 = *(unsigned int *)(a1 + 16);
      if (v9)
      {
        if (v9 == 2) {
          goto LABEL_131;
        }
        if (v9 != 1) {
          goto LABEL_136;
        }
        uint64_t v10 = *(void *)(a1 + 232);
      }
      else
      {
        uint64_t v10 = *(void *)(a1 + 232);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)(a1 + 264);
      }
      *(void *)(v10 + 16) = *(void *)(a1 + 304);
      *(unsigned char *)(v10 + 24) = *(unsigned char *)(a1 + 312);
LABEL_131:
      int v52 = *(_DWORD *)(a1 + 8);
      if (v52 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_233;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support PUT_IMAGE command.\n", v194, v195, v196, v197, v198, v199, v200, v243);
        v201 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v201, OS_LOG_TYPE_ERROR)) {
          goto LABEL_233;
        }
      }
      else
      {
        if (v52 != 1)
        {
          if (v52) {
            goto LABEL_136;
          }
          char v25 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 64);
          if (!v25)
          {
            sub_10025B8C0();
            char v25 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 64);
            goto LABEL_186;
          }
          goto LABEL_187;
        }
        if (!sub_100058654()) {
          goto LABEL_233;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support PUT_IMAGE command.\n", v202, v203, v204, v205, v206, v207, v208, v243);
        v209 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v209, OS_LOG_TYPE_ERROR)) {
          goto LABEL_233;
        }
      }
      goto LABEL_232;
    case 4:
      uint64_t v8 = *(unsigned int *)(a1 + 16);
      if ((v8 - 1) < 2) {
        goto LABEL_17;
      }
      if (v8) {
        return 408;
      }
      **(void **)(a1 + 232) = *(void *)(a1 + 280);
LABEL_17:
      int v11 = *(_DWORD *)(a1 + 8);
      if (v11 == 2)
      {
        uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 104);
        if (v5) {
          goto LABEL_162;
        }
        sub_10025B8C0();
        uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 104);
LABEL_161:
        uint64_t v8 = *(unsigned int *)(a1 + 16);
LABEL_162:
        uint64_t v6 = *(unsigned __int16 *)(a1 + 30);
        uint64_t v7 = *(void *)(a1 + 232);
LABEL_163:
        LODWORD(result) = v5(v6, v7, v8, a2);
        goto LABEL_253;
      }
      if (v11 != 1)
      {
        if (v11) {
          return 408;
        }
        uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 136);
        if (v5) {
          goto LABEL_162;
        }
        sub_10025B8C0();
        uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 136);
        goto LABEL_161;
      }
      if (!sub_100058654()) {
        return 1743;
      }
      sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support DELETE_IMAGE command.\n", v71, v72, v73, v74, v75, v76, v77, v243);
      uint64_t v78 = sub_100050B4C(6u);
      if (!os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
        return 1743;
      }
LABEL_166:
      sub_100744F6C();
      return 1743;
    case 5:
      uint64_t v12 = *(unsigned int *)(a1 + 16);
      if (v12)
      {
        if (v12 == 2) {
          goto LABEL_139;
        }
        if (v12 != 1) {
          goto LABEL_144;
        }
        BOOL v13 = *(int8x16_t **)(a1 + 232);
      }
      else
      {
        BOOL v13 = *(int8x16_t **)(a1 + 232);
        *BOOL v13 = vextq_s8(*(int8x16_t *)(a1 + 272), *(int8x16_t *)(a1 + 272), 8uLL);
      }
      v13[1].i64[0] = *(void *)(a1 + 304);
      v13[1].i8[8] = *(unsigned char *)(a1 + 312);
LABEL_139:
      int v53 = *(_DWORD *)(a1 + 8);
      if (v53 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_241;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support PUT_LINKED_ATTACHEMENT command.\n", v210, v211, v212, v213, v214, v215, v216, v243);
        v217 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v217, OS_LOG_TYPE_ERROR)) {
          goto LABEL_241;
        }
      }
      else
      {
        if (v53 != 1)
        {
          if (v53) {
            goto LABEL_144;
          }
          uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 72);
          if (!v30)
          {
            sub_10025B8C0();
            uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 72);
            goto LABEL_196;
          }
          goto LABEL_197;
        }
        if (!sub_100058654()) {
          goto LABEL_241;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support PUT_LINKED_ATTACHEMENT command.\n", v218, v219, v220, v221, v222, v223, v224, v243);
        v225 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v225, OS_LOG_TYPE_ERROR)) {
          goto LABEL_241;
        }
      }
      goto LABEL_240;
    case 6:
      uint64_t v14 = *(unsigned int *)(a1 + 16);
      if (v14)
      {
        if (v14 == 2) {
          goto LABEL_147;
        }
        if (v14 != 1) {
          goto LABEL_152;
        }
        uint64_t v15 = *(void *)(a1 + 232);
      }
      else
      {
        uint64_t v15 = *(void *)(a1 + 232);
        *(void *)uint64_t v15 = *(void *)(a1 + 280);
      }
      *(void *)(v15 + 8) = *(void *)(a1 + 304);
      *(unsigned char *)(v15 + 16) = *(unsigned char *)(a1 + 312);
LABEL_147:
      int v54 = *(_DWORD *)(a1 + 8);
      if (v54 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_251;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support PUT_LINKED_THUMBNAIL command.\n", v226, v227, v228, v229, v230, v231, v232, v243);
        v233 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v233, OS_LOG_TYPE_ERROR)) {
          goto LABEL_251;
        }
      }
      else
      {
        if (v54 != 1)
        {
          if (v54) {
            goto LABEL_152;
          }
          uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 80);
          if (!v23)
          {
            sub_10025B8C0();
            uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 80);
            goto LABEL_179;
          }
          goto LABEL_180;
        }
        if (!sub_100058654()) {
          goto LABEL_251;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support PUT_LINKED_THUMBNAIL command.\n", v234, v235, v236, v237, v238, v239, v240, v243);
        v241 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v241, OS_LOG_TYPE_ERROR)) {
          goto LABEL_251;
        }
      }
      goto LABEL_250;
    case 7:
      uint64_t v14 = *(unsigned int *)(a1 + 16);
      if ((v14 - 1) < 2) {
        goto LABEL_33;
      }
      if (v14) {
        goto LABEL_152;
      }
      uint64_t v16 = *(void *)(a1 + 232);
      *(void *)uint64_t v16 = *(void *)(a1 + 280);
      *(unsigned char *)(v16 + 8) = *(unsigned char *)(a1 + 333);
LABEL_33:
      int v17 = *(_DWORD *)(a1 + 8);
      if (v17 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_251;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support REMOTE_DISPLAY command.\n", v79, v80, v81, v82, v83, v84, v85, v243);
        uint64_t v86 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
          goto LABEL_251;
        }
      }
      else
      {
        if (v17 != 1)
        {
          if (v17) {
            goto LABEL_152;
          }
LABEL_123:
          uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 88);
          if (!v23)
          {
            sub_10025B8C0();
            uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 88);
            goto LABEL_179;
          }
          goto LABEL_180;
        }
        if (!sub_100058654()) {
          goto LABEL_251;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support REMOTE_DISPLAY command.\n", v87, v88, v89, v90, v91, v92, v93, v243);
        v94 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)) {
          goto LABEL_251;
        }
      }
      goto LABEL_250;
    case 8:
      uint64_t v18 = *(unsigned int *)(a1 + 16);
      if ((v18 - 1) < 2) {
        goto LABEL_40;
      }
      if (v18) {
        goto LABEL_121;
      }
      uint64_t v19 = *(void *)(a1 + 232);
      *(_DWORD *)uint64_t v19 = *(_DWORD *)(a1 + 314);
      *(unsigned char *)(v19 + 4) = *(unsigned char *)(a1 + 318);
      *(void *)(v19 + 8) = *(void *)(a1 + 272);
LABEL_40:
      int v20 = *(_DWORD *)(a1 + 8);
      if (v20 == 2) {
        goto LABEL_125;
      }
      if (v20 != 1)
      {
        if (v20) {
          goto LABEL_121;
        }
        uint64_t v21 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 96);
        if (!v21)
        {
          sub_10025B8C0();
          uint64_t v21 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 96);
          goto LABEL_127;
        }
        goto LABEL_128;
      }
      if (!sub_100058654()) {
        goto LABEL_211;
      }
      sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support GET_IMAGES_LIST command.\n", v95, v96, v97, v98, v99, v100, v101, v243);
      v102 = sub_100050B4C(6u);
      if (!os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
        goto LABEL_211;
      }
      goto LABEL_210;
    case 9:
      uint64_t v14 = *(unsigned int *)(a1 + 16);
      if ((v14 - 1) < 2) {
        goto LABEL_48;
      }
      if (v14) {
        goto LABEL_152;
      }
      **(void **)(a1 + 232) = *(void *)(a1 + 280);
LABEL_48:
      int v22 = *(_DWORD *)(a1 + 8);
      if (v22 == 2)
      {
        uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 72);
        if (v23) {
          goto LABEL_180;
        }
        sub_10025B8C0();
        uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 72);
        goto LABEL_179;
      }
      if (v22 != 1)
      {
        if (v22) {
          goto LABEL_152;
        }
        uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 104);
        if (!v23)
        {
          sub_10025B8C0();
          uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 104);
          goto LABEL_179;
        }
        goto LABEL_180;
      }
      if (!sub_100058654()) {
        goto LABEL_251;
      }
      sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support GET_IMAGE_PROPERTIES command.\n", v103, v104, v105, v106, v107, v108, v109, v243);
      v110 = sub_100050B4C(6u);
      if (!os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
        goto LABEL_251;
      }
      goto LABEL_250;
    case 0xA:
      uint64_t v9 = *(unsigned int *)(a1 + 16);
      if ((v9 - 1) < 2) {
        goto LABEL_56;
      }
      if (v9) {
        goto LABEL_136;
      }
      *(int8x16_t *)*(void *)(a1 + 232) = vextq_s8(*(int8x16_t *)(a1 + 272), *(int8x16_t *)(a1 + 272), 8uLL);
LABEL_56:
      int v24 = *(_DWORD *)(a1 + 8);
      if (v24 == 2)
      {
        char v25 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 80);
        if (v25)
        {
LABEL_187:
          LODWORD(result) = v25(*(unsigned __int16 *)(a1 + 30), *(void *)(a1 + 232), v9, a2);
          goto LABEL_234;
        }
        sub_10025B8C0();
        char v25 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 80);
LABEL_186:
        uint64_t v9 = *(unsigned int *)(a1 + 16);
        goto LABEL_187;
      }
      if (v24 != 1)
      {
        if (v24)
        {
LABEL_136:
          LODWORD(result) = 408;
          goto LABEL_234;
        }
        char v25 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 112);
        if (v25) {
          goto LABEL_187;
        }
        sub_10025B8C0();
        char v25 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 112);
        goto LABEL_186;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support GET_IMAGE command.\n", v111, v112, v113, v114, v115, v116, v117, v243);
        v118 = sub_100050B4C(6u);
        if (os_log_type_enabled(v118, OS_LOG_TYPE_ERROR)) {
LABEL_232:
        }
          sub_100744F6C();
      }
LABEL_233:
      LODWORD(result) = 1743;
LABEL_234:
      uint64_t v159 = *(void *)(a1 + 232);
      *(void *)(v159 + 32) = 0;
      goto LABEL_243;
    case 0xB:
      uint64_t v14 = *(unsigned int *)(a1 + 16);
      if ((v14 - 1) < 2) {
        goto LABEL_64;
      }
      if (v14) {
        goto LABEL_152;
      }
      **(void **)(a1 + 232) = *(void *)(a1 + 280);
LABEL_64:
      int v26 = *(_DWORD *)(a1 + 8);
      if (v26 == 2) {
        goto LABEL_123;
      }
      if (v26 == 1)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support GET_LINKED_THUMBNAIL command.\n", v119, v120, v121, v122, v123, v124, v125, v243);
          v126 = sub_100050B4C(6u);
          if (os_log_type_enabled(v126, OS_LOG_TYPE_ERROR)) {
LABEL_250:
          }
            sub_100744F6C();
        }
LABEL_251:
        LODWORD(result) = 1743;
      }
      else if (v26)
      {
LABEL_152:
        LODWORD(result) = 408;
      }
      else
      {
        uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 120);
        if (!v23)
        {
          sub_10025B8C0();
          uint64_t v23 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 120);
LABEL_179:
          uint64_t v14 = *(unsigned int *)(a1 + 16);
        }
LABEL_180:
        LODWORD(result) = v23(*(unsigned __int16 *)(a1 + 30), *(void *)(a1 + 232), v14, a2);
      }
      v242 = *(void **)(a1 + 232);
      void *v242 = 0;
      v242[1] = 0;
      v242[2] = 0;
      goto LABEL_253;
    case 0xC:
      uint64_t v12 = *(unsigned int *)(a1 + 16);
      if ((v12 - 1) < 2) {
        goto LABEL_72;
      }
      if (v12) {
        goto LABEL_144;
      }
      int v27 = *(void **)(a1 + 232);
      uint64_t v28 = *(void *)(a1 + 264);
      void *v27 = *(void *)(a1 + 280);
      v27[1] = v28;
LABEL_72:
      int v29 = *(_DWORD *)(a1 + 8);
      if (v29 == 2)
      {
        uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 96);
        if (v30) {
          goto LABEL_197;
        }
        sub_10025B8C0();
        uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 96);
        goto LABEL_196;
      }
      if (v29 != 1)
      {
        if (v29) {
          goto LABEL_144;
        }
        uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 128);
        if (!v30)
        {
          sub_10025B8C0();
          uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 128);
          goto LABEL_196;
        }
        goto LABEL_197;
      }
      if (!sub_100058654()) {
        goto LABEL_241;
      }
      sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support LINKED_ATTACHMENT command.\n", v127, v128, v129, v130, v131, v132, v133, v243);
      v134 = sub_100050B4C(6u);
      if (!os_log_type_enabled(v134, OS_LOG_TYPE_ERROR)) {
        goto LABEL_241;
      }
      goto LABEL_240;
    case 0xD:
      int v31 = *(_DWORD *)(a1 + 16);
      if (v31 == 2) {
        goto LABEL_82;
      }
      if (v31 == 1) {
        goto LABEL_81;
      }
      if (v31) {
        goto LABEL_144;
      }
      *(_OWORD *)*(void *)(a1 + 232) = *(_OWORD *)(a1 + 336);
LABEL_81:
      uint64_t v32 = *(void *)(a1 + 232);
      *(void *)(v32 + 16) = *(void *)(a1 + 304);
      *(unsigned char *)(v32 + 24) = *(unsigned char *)(a1 + 312);
LABEL_82:
      int v33 = *(_DWORD *)(a1 + 8);
      if (v33 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_241;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support START_PRINT command.\n", v135, v136, v137, v138, v139, v140, v141, v243);
        v142 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v142, OS_LOG_TYPE_ERROR)) {
          goto LABEL_241;
        }
      }
      else
      {
        if (v33 != 1)
        {
          if (v33) {
            goto LABEL_144;
          }
          uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 144);
          if (!v30)
          {
            sub_10025B8C0();
            uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 144);
          }
          uint64_t v34 = *(unsigned __int16 *)(a1 + 30);
          uint64_t v35 = *(void *)(a1 + 232);
          uint64_t v12 = *(unsigned int *)(a1 + 16);
          goto LABEL_198;
        }
        if (!sub_100058654()) {
          goto LABEL_241;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support START_PRINT command.\n", v143, v144, v145, v146, v147, v148, v149, v243);
        uint64_t v150 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v150, OS_LOG_TYPE_ERROR)) {
          goto LABEL_241;
        }
      }
      goto LABEL_240;
    case 0xE:
      uint64_t v18 = *(unsigned int *)(a1 + 16);
      if ((v18 - 1) < 2) {
        goto LABEL_91;
      }
      if (v18) {
        goto LABEL_121;
      }
      uint64_t v36 = *(void **)(a1 + 232);
      *uint64_t v36 = *(void *)(a1 + 264);
      v36[1] = *(void *)(a1 + 320);
LABEL_91:
      int v37 = *(_DWORD *)(a1 + 8);
      if (v37 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_211;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support GET_PARTIAL_IMAGE command.\n", v151, v152, v153, v154, v155, v156, v157, v243);
        v158 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v158, OS_LOG_TYPE_ERROR)) {
          goto LABEL_211;
        }
        goto LABEL_210;
      }
      if (v37 != 1)
      {
        if (v37)
        {
LABEL_121:
          LODWORD(result) = 408;
          goto LABEL_212;
        }
        if (!sub_100058654()) {
          goto LABEL_211;
        }
        sub_100056E24((uint64_t)"IMAGE_REPONDER server type does not support GET_PARTIAL_IMAGE command.\n", v38, v39, v40, v41, v42, v43, v44, v243);
        uint64_t v45 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          goto LABEL_211;
        }
LABEL_210:
        sub_100744F6C();
LABEL_211:
        LODWORD(result) = 1743;
        goto LABEL_212;
      }
LABEL_125:
      uint64_t v21 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 64);
      if (!v21)
      {
        sub_10025B8C0();
        uint64_t v21 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(a1 + 64);
LABEL_127:
        uint64_t v18 = *(unsigned int *)(a1 + 16);
      }
LABEL_128:
      LODWORD(result) = v21(*(unsigned __int16 *)(a1 + 30), *(void *)(a1 + 232), v18, a2);
LABEL_212:
      uint64_t v159 = *(void *)(a1 + 232);
      long long v160 = 0uLL;
      *(_OWORD *)(v159 + 32) = 0u;
      goto LABEL_244;
    case 0xF:
      int v46 = *(_DWORD *)(a1 + 16);
      if ((v46 - 1) < 2) {
        goto LABEL_100;
      }
      if (v46) {
        goto LABEL_122;
      }
      *(_OWORD *)*(void *)(a1 + 232) = *(_OWORD *)(a1 + 336);
LABEL_100:
      int v47 = *(_DWORD *)(a1 + 8);
      if (v47 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_219;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support START_ARCHIVE command.\n", v161, v162, v163, v164, v165, v166, v167, v243);
        v168 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v168, OS_LOG_TYPE_ERROR)) {
          goto LABEL_219;
        }
      }
      else
      {
        if (v47 != 1)
        {
          if (v47)
          {
LABEL_122:
            LODWORD(result) = 408;
          }
          else
          {
            uint64_t v48 = *(uint64_t (**)(void, void, void, uint64_t))(a1 + 152);
            if (!v48)
            {
              sub_10025B8C0();
              uint64_t v48 = *(uint64_t (**)(void, void, void, uint64_t))(a1 + 152);
            }
            LODWORD(result) = v48(*(unsigned __int16 *)(a1 + 30), *(void *)(a1 + 232), *(unsigned int *)(a1 + 16), a2);
          }
LABEL_220:
          v177 = *(void **)(a1 + 232);
          void *v177 = 0;
          v177[1] = 0;
          goto LABEL_253;
        }
        if (!sub_100058654()
          || (sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support START_ARCHIVE command.\n", v169, v170, v171, v172, v173, v174, v175, v243), v176 = sub_100050B4C(6u), !os_log_type_enabled(v176, OS_LOG_TYPE_ERROR)))
        {
LABEL_219:
          LODWORD(result) = 1743;
          goto LABEL_220;
        }
      }
      sub_100744F6C();
      goto LABEL_219;
    case 0x10:
      uint64_t v12 = *(unsigned int *)(a1 + 16);
      if ((v12 - 1) < 2) {
        goto LABEL_109;
      }
      if (v12) {
        goto LABEL_144;
      }
      **(unsigned char **)(a1 + 232) = *(unsigned char *)(a1 + 352) != 0;
LABEL_109:
      int v49 = *(_DWORD *)(a1 + 8);
      if (v49 == 2)
      {
        if (!sub_100058654()) {
          goto LABEL_241;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support GET_MONITORING_IMAGE command.\n", v178, v179, v180, v181, v182, v183, v184, v243);
        v185 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v185, OS_LOG_TYPE_ERROR)) {
          goto LABEL_241;
        }
LABEL_240:
        sub_100744F6C();
LABEL_241:
        LODWORD(result) = 1743;
        goto LABEL_242;
      }
      if (v49 == 1)
      {
        if (!sub_100058654()) {
          goto LABEL_241;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support GET_MONITORING_IMAGE command.\n", v186, v187, v188, v189, v190, v191, v192, v243);
        v193 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v193, OS_LOG_TYPE_ERROR)) {
          goto LABEL_241;
        }
        goto LABEL_240;
      }
      if (v49)
      {
LABEL_144:
        LODWORD(result) = 408;
      }
      else
      {
        uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 168);
        if (!v30)
        {
          sub_10025B8C0();
          uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 168);
LABEL_196:
          uint64_t v12 = *(unsigned int *)(a1 + 16);
        }
LABEL_197:
        uint64_t v34 = *(unsigned __int16 *)(a1 + 30);
        uint64_t v35 = *(void *)(a1 + 232);
LABEL_198:
        LODWORD(result) = v30(v34, v35, v12, a2);
      }
LABEL_242:
      uint64_t v159 = *(void *)(a1 + 232);
LABEL_243:
      long long v160 = 0uLL;
LABEL_244:
      *(_OWORD *)uint64_t v159 = v160;
      *(_OWORD *)(v159 + 16) = v160;
LABEL_253:
      if (result == 1701) {
        return 0;
      }
      else {
        return result;
      }
    case 0x11:
      int v50 = *(_DWORD *)(a1 + 8);
      if (v50 == 2)
      {
        if (!sub_100058654()) {
          return 1743;
        }
        sub_100056E24((uint64_t)"ARCHIVED_OBJECTS server type does not support GET_STATUS command.\n", v55, v56, v57, v58, v59, v60, v61, v243);
        uint64_t v62 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
          return 1743;
        }
      }
      else
      {
        if (v50 != 1)
        {
          if (v50) {
            return 408;
          }
          uint64_t v51 = *(uint64_t (**)(void, uint64_t))(a1 + 160);
          if (!v51)
          {
            sub_10025B8C0();
            uint64_t v51 = *(uint64_t (**)(void, uint64_t))(a1 + 160);
          }
          LODWORD(result) = v51(*(unsigned __int16 *)(a1 + 30), a2);
          goto LABEL_253;
        }
        if (!sub_100058654()) {
          return 1743;
        }
        sub_100056E24((uint64_t)"REFERENCED_OBJECTS server type does not support GET_STATUS command.\n", v63, v64, v65, v66, v67, v68, v69, v243);
        uint64_t v70 = sub_100050B4C(6u);
        if (!os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
          return 1743;
        }
      }
      goto LABEL_166;
    default:
      return result;
  }
}

uint64_t sub_1001DD44C()
{
  return qword_100A052C8;
}

uint64_t sub_1001DD458()
{
  word_100A052D0 = *(_WORD *)(sub_10025B218(0x2Fu) + 2);
  unsigned int v0 = (unsigned __int16)word_100A052D0;
  if ((unsigned __int16)word_100A052D0 >= 0x101u)
  {
    sub_10025B8C0();
    unsigned int v0 = (unsigned __int16)word_100A052D0;
  }
  qword_100A052C8 = (uint64_t)sub_10010CE48(144 * v0);
  if (!qword_100A052C8) {
    return 106;
  }
  uint64_t result = 0;
  word_100A052D2 = 1;
  return result;
}

uint64_t sub_1001DD4C8(unsigned int a1, uint64_t a2)
{
  uint64_t v14 = 0;
  if (sub_1001DD56C(a1, &v14))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid CID %d", v4, v5, v6, v7, v8, v9, v10, a1);
      int v11 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
    return 403;
  }
  else
  {
    uint64_t v13 = v14;
    if (*(void *)(v14 + 136)) {
      sub_10025B8C0();
    }
    uint64_t result = 0;
    *(void *)(v13 + 136) = a2;
  }
  return result;
}

uint64_t sub_1001DD56C(unsigned int a1, uint64_t *a2)
{
  if (a1 > 0x3F)
  {
    unsigned __int16 v4 = a1;
    if (a1 <= 0xFF) {
      unsigned __int16 v4 = a1 - 64;
    }
    if ((unsigned __int16)word_100A052D0 > v4)
    {
      unsigned int v5 = v4;
      uint64_t i = qword_100A052C8 + 144 * v4;
      if (*(_DWORD *)i)
      {
        if (*(unsigned __int16 *)(qword_100A052C8 + 144 * v5 + 4) == a1)
        {
LABEL_13:
          uint64_t result = 0;
          *a2 = i;
          return result;
        }
      }
    }
  }
  else
  {
    uint64_t v2 = (unsigned __int16)word_100A052D0;
    if (word_100A052D0)
    {
      for (uint64_t i = qword_100A052C8; !*(_DWORD *)i || *(unsigned __int16 *)(i + 4) != a1; i += 144)
      {
        if (!--v2) {
          return 404;
        }
      }
      goto LABEL_13;
    }
  }
  return 404;
}

BOOL sub_1001DD610(unsigned int *a1)
{
  return *(_WORD *)(sub_1001E6484(a1) + 38) && *(__int16 *)(sub_1001E6484(a1) + 38) != -1;
}

void sub_1001DD658()
{
  if (HIDWORD(xmmword_100A19860))
  {
    sub_10025B778("L2CAP data dump:\n");
    uint64_t v0 = qword_100A052C8;
    if (word_100A052D0) {
      BOOL v1 = qword_100A052C8 == 0;
    }
    else {
      BOOL v1 = 1;
    }
    if (v1)
    {
      unsigned __int16 v3 = 0;
    }
    else
    {
      uint64_t v2 = 0;
      unsigned __int16 v3 = 0;
      unint64_t v4 = 1;
      do
      {
        unsigned int v5 = (unsigned int *)(v0 + v2);
        int v6 = *(_DWORD *)(v0 + v2);
        switch(v6)
        {
          case 1:
            sub_10025B778("CL ");
            sub_10025B778("cid=0x%x ", *(unsigned __int16 *)(v0 + v2 + 4));
            sub_10025B778("psm=0x%x ");
            goto LABEL_16;
          case 2:
          case 4:
            BOOL v1 = v6 == 2;
            uint64_t v7 = "MAG";
            if (v1) {
              uint64_t v7 = "CO ";
            }
            sub_10025B778("%s", v7);
            uint64_t v8 = v0 + v2;
            sub_10025B778("localCID=0x%x ", *(unsigned __int16 *)(v8 + 4));
            uint64_t v9 = sub_1001E6484(v5);
            sub_10025B778("remoteCID=0x%x ", *(unsigned __int16 *)(v9 + 8));
            sub_10025B778("psm=0x%x ", *(unsigned __int16 *)(v8 + 6));
            uint64_t v10 = sub_1001E6484(v5);
            sub_10025B778("addr=%: ", v10 + 10);
            uint64_t v11 = sub_1001E6484(v5);
            sub_10025B778("inMTU=%d ", *(unsigned __int16 *)(v11 + 36));
            uint64_t v12 = sub_1001E6484(v5);
            sub_10025B778("outMTU=%d ", *(unsigned __int16 *)(v12 + 32));
            uint64_t v13 = sub_1001E6484(v5);
            sub_10025B778("outFlushTO=%d ", *(unsigned __int16 *)(v13 + 38));
            uint64_t v14 = sub_1001E6484(v5);
            sub_10025B778("linkTO=%d ", *(unsigned __int16 *)(v14 + 40));
            sub_10025B778("\n");
            sub_1001F26D8(v5);
            goto LABEL_16;
          case 3:
            sub_10025B778("FX ");
            sub_10025B778("cid=0x%x ", *(unsigned __int16 *)(v0 + v2 + 4));
            uint64_t v15 = (unsigned __int16 *)sub_1001E688C((unsigned int *)(v0 + v2));
            sub_10025B778("mtu=%d ", *v15);
            uint64_t v16 = sub_1001E688C((unsigned int *)(v0 + v2));
            sub_10025B778("flushTO=%d ", *(unsigned __int16 *)(v16 + 2));
            unint64_t v17 = *(char *)(sub_1001E688C((unsigned int *)(v0 + v2)) + 5);
            if (v17 <= 4) {
              sub_10025B778(off_10099EED8[v17], v21);
            }
LABEL_16:
            ++v3;
            sub_10025B778("\n");
            break;
          default:
            break;
        }
        uint64_t v0 = qword_100A052C8;
        v2 += 144;
      }
      while (v4++ < (unsigned __int16)word_100A052D0 && qword_100A052C8 != 0);
    }
    uint64_t v20 = sub_10025B778("%d channels in use\n", v3);
    nullsub_95(v20);
  }
}

uint64_t sub_1001DD96C(int a1, uint64_t a2, void *a3)
{
  if (!sub_100197770(a2))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid HCI handle provided - cannot retrieve channel", v9, v10, v11, v12, v13, v14, v15, v18);
      uint64_t v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 406;
  }
  if (!word_100A052D0) {
    return 406;
  }
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = qword_100A052C8;
    if (*(_DWORD *)(qword_100A052C8 + v6) == 2
      && *(unsigned __int16 *)(sub_1001E6484((unsigned int *)(qword_100A052C8 + v6)) + 8) == a1
      && *(void *)sub_1001E6484((unsigned int *)(v8 + v6)) == a2)
    {
      break;
    }
    ++v7;
    v6 += 144;
    if (v7 >= (unsigned __int16)word_100A052D0) {
      return 406;
    }
  }
  uint64_t result = 0;
  *a3 = v8 + v6;
  return result;
}

uint64_t sub_1001DDA80(unsigned int a1, void *a2)
{
  uint64_t v6 = 0;
  uint64_t v3 = sub_1001DD56C(a1, (uint64_t *)&v6);
  if (!v3)
  {
    unint64_t v4 = v6;
    if (sub_1001E6484(v6)) {
      *a2 = *(void *)sub_1001E6484(v4);
    }
  }
  return v3;
}

uint64_t sub_1001DDAE8(uint64_t a1, int a2, void *a3)
{
  if (!sub_100197698(a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid HCI handle provided - cannot retrieve channel", v13, v14, v15, v16, v17, v18, v19, v22);
      uint64_t v20 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 406;
  }
  if (!word_100A052D0) {
    return 406;
  }
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = qword_100A052C8;
    int v9 = *(_DWORD *)(qword_100A052C8 + v6);
    BOOL v10 = v9 == 4 || v9 == 2;
    if (v10 && *(unsigned __int8 *)(sub_1001E6484((unsigned int *)(qword_100A052C8 + v6)) + 28) == a2)
    {
      uint64_t v11 = sub_1001E6484((unsigned int *)(v8 + v6));
      if (*(_DWORD *)(a1 + 48) == *(_DWORD *)(v11 + 10)
        && *(unsigned __int16 *)(a1 + 52) == *(unsigned __int16 *)(v11 + 14))
      {
        break;
      }
    }
    ++v7;
    v6 += 144;
    if (v7 >= (unsigned __int16)word_100A052D0) {
      return 406;
    }
  }
  uint64_t result = 0;
  *a3 = v8 + v6;
  return result;
}

uint64_t sub_1001DDC0C(uint64_t a1, int a2, void *a3)
{
  if (!sub_100197770(a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid HCI handle provided - cannot retrieve channel", v13, v14, v15, v16, v17, v18, v19, v22);
      uint64_t v20 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 406;
  }
  if (!word_100A052D0) {
    return 406;
  }
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = qword_100A052C8;
    int v9 = *(_DWORD *)(qword_100A052C8 + v6);
    BOOL v10 = v9 == 4 || v9 == 2;
    if (v10 && *(unsigned __int8 *)(sub_1001E6484((unsigned int *)(qword_100A052C8 + v6)) + 28) == a2)
    {
      uint64_t v11 = sub_1001E6484((unsigned int *)(v8 + v6));
      if (*(_DWORD *)(a1 + 49) == *(_DWORD *)(v11 + 10)
        && *(unsigned __int16 *)(a1 + 53) == *(unsigned __int16 *)(v11 + 14))
      {
        break;
      }
    }
    ++v7;
    v6 += 144;
    if (v7 >= (unsigned __int16)word_100A052D0) {
      return 406;
    }
  }
  uint64_t result = 0;
  *a3 = v8 + v6;
  return result;
}

uint64_t sub_1001DDD30(uint64_t a1, int a2)
{
  if (a1 && word_100A052D0)
  {
    unint64_t v4 = (unsigned __int16)word_100A052D0 + 1;
    uint64_t v5 = 144 * (unsigned __int16)word_100A052D0 - 144;
    unsigned int v6 = 48;
    while (1)
    {
      unint64_t v7 = (unsigned int *)(qword_100A052C8 + v5);
      int v8 = *(_DWORD *)(qword_100A052C8 + v5);
      switch(v8)
      {
        case 4:
          goto LABEL_9;
        case 3:
          if (v6 < *(unsigned __int16 *)sub_1001E688C((unsigned int *)(qword_100A052C8 + v5))) {
            unsigned int v6 = *(unsigned __int16 *)sub_1001E688C(v7);
          }
          break;
        case 2:
LABEL_9:
          if (*(unsigned __int8 *)(sub_1001E6484((unsigned int *)(qword_100A052C8 + v5)) + 16) >= 3u
            && !*(unsigned char *)(sub_1001E6484(v7) + 17)
            && *(void *)sub_1001E6484(v7) == a1)
          {
            uint64_t v9 = sub_1001E6484(v7);
            if (a2)
            {
              if (v6 < *(unsigned __int16 *)(v9 + 36)) {
                unsigned int v6 = *(unsigned __int16 *)(sub_1001E6484(v7) + 36);
              }
            }
            else if (v6 < *(unsigned __int16 *)(v9 + 32))
            {
              unsigned int v6 = *(unsigned __int16 *)(sub_1001E6484(v7) + 32);
            }
          }
          break;
      }
      --v4;
      v5 -= 144;
      if (v4 <= 1) {
        return (unsigned __int16)v6;
      }
    }
  }
  LOWORD(v6) = 48;
  return (unsigned __int16)v6;
}

uint64_t sub_1001DDE70(uint64_t a1, void *a2)
{
  if (!word_100A052D0) {
    return 406;
  }
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (1)
  {
    int v6 = *(_DWORD *)(qword_100A052C8 + v4);
    if (v6 == 4 || v6 == 2)
    {
      uint64_t v8 = sub_1001E6484((unsigned int *)(qword_100A052C8 + v4));
      BOOL v9 = *(_DWORD *)a1 == *(_DWORD *)(v8 + 10) && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v8 + 14);
      if (v9
        && !*(unsigned char *)(sub_1001E6484((unsigned int *)(qword_100A052C8 + v4)) + 16)
        && *(unsigned char *)(sub_1001E6484((unsigned int *)(qword_100A052C8 + v4)) + 25) == 1)
      {
        break;
      }
    }
    ++v5;
    v4 += 144;
    if (v5 >= (unsigned __int16)word_100A052D0) {
      return 406;
    }
  }
  uint64_t result = 0;
  *a2 = qword_100A052C8 + v4;
  return result;
}

uint64_t sub_1001DDF4C()
{
  uint64_t v0 = (unsigned __int16)word_100A052D0;
  if (!word_100A052D0) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v2 = qword_100A052C8;
  uint64_t v3 = (int *)qword_100A052C8;
  do
  {
    int v4 = *v3;
    v3 += 36;
    if (v4 == 4) {
      uint64_t result = (*(_DWORD *)(v2 + 84) + result);
    }
    uint64_t v2 = (uint64_t)v3;
    --v0;
  }
  while (v0);
  return result;
}

uint64_t sub_1001DDF94()
{
  uint64_t v0 = (unsigned __int16)word_100A052D0;
  if (!word_100A052D0) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v2 = qword_100A052C8;
  uint64_t v3 = (int *)qword_100A052C8;
  do
  {
    int v4 = *v3;
    v3 += 36;
    if (v4 == 4) {
      uint64_t result = (*(_DWORD *)(v2 + 80) + result);
    }
    uint64_t v2 = (uint64_t)v3;
    --v0;
  }
  while (v0);
  return result;
}

_DWORD *sub_1001DDFDC(int a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v1 = (unsigned __int16)word_100A052D0;
  if (!word_100A052D0) {
    return 0;
  }
  for (uint64_t i = (_DWORD *)qword_100A052C8; !qword_100A052C8 || !*i || i[18] != a1; i += 36)
  {
    if (!--v1) {
      return 0;
    }
  }
  return i;
}

uint64_t sub_1001DE028(void *a1)
{
  *a1 = 0;
  *(unsigned char *)a1 = 6;
  uint64_t v1 = (unsigned __int16)word_100A052D0;
  if (word_100A052D0)
  {
    uint64_t v2 = (unsigned __int16 *)(qword_100A052C8 + 4);
    do
    {
      if (*((_DWORD *)v2 - 1) == 3)
      {
        unint64_t v3 = *v2;
        if (v3 <= 0x3F) {
          *((unsigned char *)a1 + (v3 >> 3)) |= 1 << (v3 & 7);
        }
      }
      v2 += 72;
      --v1;
    }
    while (v1);
  }
  return 0;
}

uint64_t sub_1001DE094(uint64_t a1)
{
  uint64_t v7 = 0;
  uint64_t result = sub_1001DD56C(a1, &v7);
  if (!result)
  {
    uint64_t v3 = v7;
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v4 = *(void *)(v7 + 16);
    int v6 = *(unsigned __int16 *)(v7 + 24);
    *(void *)(v7 + 8) = 0;
    *(void *)(v3 + 16) = 0;
    *(_WORD *)(v3 + 24) = 0;
    *(_DWORD *)(v3 + 80) += v6;
    if (v5)
    {
      return v5(a1, v4);
    }
  }
  return result;
}

void sub_1001DE118(unsigned int a1)
{
  uint64_t v11 = 0;
  if (sub_1001DD56C(a1, &v11))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid CID %d", v2, v3, v4, v5, v6, v7, v8, a1);
      BOOL v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
  }
  else
  {
    uint64_t v10 = v11;
    *(void *)(v11 + 8) = 0;
    *(void *)(v10 + 16) = 0;
    *(_WORD *)(v10 + 24) = 0;
  }
}

uint64_t sub_1001DE4BC(uint64_t result)
{
  if (result) {
    return sub_1001DE094(**(unsigned __int16 **)(result + 8));
  }
  return result;
}

uint64_t sub_1001DE4D0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, size_t a5)
{
  if (a1 && a4 && a5)
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    uint64_t result = sub_1001DD56C(a2, &v21);
    if (!result)
    {
      if (a3 && (a3 = sub_100197A30(a3)) == 0)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid address.", v12, v13, v14, v15, v16, v17, v18, *(uint64_t *)&v20[0]);
          uint64_t v19 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 122;
      }
      else
      {
        sub_1000226D0((uint64_t)v20, 1u);
        sub_100022798((unsigned __int8 *)v20, a4, a5, 2u);
        uint64_t v11 = v21;
        *((void *)&v20[0] + 1) = v21;
        uint64_t result = ((uint64_t (*)(void, uint64_t, uint64_t, _OWORD *, void))loc_1001DE1A4)(0, a2, a3, v20, 0);
        if (!result)
        {
          *(void *)(v11 + 8) = a1;
          *(void *)(v11 + 16) = a4;
          *(_WORD *)(v11 + 24) = a5;
        }
      }
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return result;
}

uint64_t sub_1001DE600(unsigned int a1, uint64_t *a2, char a3)
{
  if (a1 > 4 || ((1 << a1) & 0x16) == 0) {
    sub_10025B8C0();
  }
  if (word_100A052D0)
  {
    uint64_t v6 = 0;
    uint64_t v7 = qword_100A052C8;
    while (*(_DWORD *)v7)
    {
      ++v6;
      v7 += 144;
      if ((unsigned __int16)word_100A052D0 == v6) {
        goto LABEL_8;
      }
    }
    if (*(void *)(v7 + 112)) {
      sub_10025B8C0();
    }
    if (*(void *)(v7 + 104)) {
      sub_10025B8C0();
    }
    if (*(void *)(v7 + 120)) {
      sub_10025B8C0();
    }
    *(_OWORD *)(v7 + 112) = 0u;
    *(_OWORD *)(v7 + 128) = 0u;
    *(_OWORD *)(v7 + 80) = 0u;
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)uint64_t v7 = 0u;
    if (a3)
    {
      if ((unsigned __int16)word_100A052D0 >= 0x41u) {
        sub_10025B8C0();
      }
      *(_WORD *)(v7 + 4) = v6 + 64;
    }
    else
    {
      if (!word_100A052D2) {
        sub_10025B8C0();
      }
      if ((unsigned __int16)word_100A052D0 <= (unsigned __int16)v6) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/chanman.c", 541, "index < maxChannels");
      }
      int v17 = (unsigned __int16)word_100A052D2;
      *(_WORD *)(v7 + 4) = v6 | (word_100A052D2 << 8);
      if (v17 == 255) {
        __int16 v18 = 1;
      }
      else {
        __int16 v18 = v17 + 1;
      }
      word_100A052D2 = v18;
      if (!v18) {
        sub_10025B8C0();
      }
    }
    *(_DWORD *)uint64_t v7 = a1;
    switch(a1)
    {
      case 1u:
        uint64_t v20 = sub_100022FE8(0x18uLL);
        *(void *)(v7 + 104) = v20;
        v20[1] = 0;
        v20[2] = 0;
        *uint64_t v20 = 0;
        break;
      case 2u:
        uint64_t v21 = sub_100022FE8(0x78uLL);
        *(void *)(v7 + 112) = v21;
        *uint64_t v21 = 0u;
        v21[1] = 0u;
        v21[2] = 0u;
        v21[3] = 0u;
        v21[4] = 0u;
        v21[5] = 0u;
        v21[6] = 0u;
        *((void *)v21 + 14) = 0;
        *(unsigned char *)(sub_1001E6484((unsigned int *)v7) + 16) = 0;
        *(_WORD *)(sub_1001E6484((unsigned int *)v7) + 36) = 1024;
        *(_WORD *)(sub_1001E6484((unsigned int *)v7) + 32) = 672;
        *(_WORD *)(sub_1001E6484((unsigned int *)v7) + 34) = -1;
        *(_WORD *)(sub_1001E6484((unsigned int *)v7) + 38) = -1;
        *(_WORD *)(sub_1001E6484((unsigned int *)v7) + 40) = 5000;
        *(_DWORD *)(v7 + 72) = 0;
        *(unsigned char *)(sub_1001E6484((unsigned int *)v7) + 30) = 0;
        *(unsigned char *)(sub_1001E6484((unsigned int *)v7) + 17) = 0;
        *(unsigned char *)(sub_1001E6484((unsigned int *)v7) + 77) = 0;
        break;
      case 4u:
        uint64_t v19 = sub_100022FE8(0x78uLL);
        *(void *)(v7 + 112) = v19;
        *uint64_t v19 = 0u;
        v19[1] = 0u;
        v19[2] = 0u;
        v19[3] = 0u;
        v19[4] = 0u;
        v19[5] = 0u;
        v19[6] = 0u;
        *((void *)v19 + 14) = 0;
        break;
    }
    uint64_t result = 0;
    *(void *)(v7 + 128) = 0;
    *(_DWORD *)(v7 + 76) = -1;
    *a2 = v7;
  }
  else
  {
LABEL_8:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No free channels found\n", v8, v9, v10, v11, v12, v13, v14, v22);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 104;
  }
  return result;
}

uint64_t sub_1001DE89C(uint64_t a1, _DWORD *a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (word_100A052D0)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    int v6 = 0;
    unsigned __int8 v7 = 0;
    do
    {
      uint64_t v8 = qword_100A052C8 + v4;
      if (*(_DWORD *)(qword_100A052C8 + v4))
      {
        uint64_t v9 = *(void *)(v8 + 96);
        if (v9)
        {
          if (*(unsigned __int8 *)(v9 + 27) >= 0xBu)
          {
            uint64_t v10 = (void *)sub_1001E6484((unsigned int *)(qword_100A052C8 + v4));
            if (a1 && *v10)
            {
              if (*(unsigned __int8 *)(*(void *)sub_1001E6484((unsigned int *)v8) + 2) == *(unsigned __int8 *)(a1 + 2)) {
                ++v6;
              }
              if (*(void *)sub_1001E6484((unsigned int *)v8) == a1) {
                ++v7;
              }
            }
            else if (sub_100058654())
            {
              sub_100056E24((uint64_t)"L2CAP reserved priority channel does not contain valid ACL", v11, v12, v13, v14, v15, v16, v17, v20);
              __int16 v18 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
                sub_100745680(v21, &v22, v18);
              }
            }
          }
        }
      }
      ++v5;
      v4 += 144;
    }
    while (v5 < (unsigned __int16)word_100A052D0);
  }
  else
  {
    unsigned __int8 v7 = 0;
    int v6 = 0;
  }
  *a2 = v6;
  return v7;
}

uint64_t sub_1001DEA28(unsigned int a1, int a2, char a3, unsigned int a4, void *a5, uint64_t a6)
{
  if (a2)
  {
    if (word_100A052D0)
    {
      char v10 = a2;
      uint64_t v12 = (unsigned __int16 *)(qword_100A052C8 + 4);
      uint64_t v13 = (unsigned __int16)word_100A052D0;
      do
      {
        if (*((_DWORD *)v12 - 1) && *v12 == a1)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"CID %d already regitered", v17, v18, v19, v20, v21, v22, v23, a1);
            int v24 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          return 402;
        }
        v12 += 72;
        --v13;
      }
      while (v13);
      uint64_t v14 = 0;
      uint64_t v15 = qword_100A052C8;
      while (*(_DWORD *)(qword_100A052C8 + v14))
      {
        v14 += 144;
        if (144 * (unsigned __int16)word_100A052D0 == v14) {
          return 104;
        }
      }
      uint64_t v25 = qword_100A052C8 + v14;
      if (*(void *)(qword_100A052C8 + v14 + 112)) {
        sub_10025B8C0();
      }
      if (*(void *)(v25 + 104)) {
        sub_10025B8C0();
      }
      uint64_t v26 = v15 + v14;
      if (*(void *)(v26 + 120)) {
        sub_10025B8C0();
      }
      *(_OWORD *)(v25 + 112) = 0u;
      *(_OWORD *)(v25 + 128) = 0u;
      *(_OWORD *)(v25 + 80) = 0u;
      *(_OWORD *)(v25 + 96) = 0u;
      *(_OWORD *)(v25 + 48) = 0u;
      *(_OWORD *)(v25 + 64) = 0u;
      *(_OWORD *)(v25 + 16) = 0u;
      *(_OWORD *)(v25 + 32) = 0u;
      *(_OWORD *)uint64_t v25 = 0u;
      int v27 = sub_100022FE8(0x20uLL);
      *(void *)(v26 + 120) = v27;
      _OWORD *v27 = 0u;
      v27[1] = 0u;
      *(void *)(v26 + 128) = 0;
      *(_WORD *)(v26 + 4) = a1;
      *(_DWORD *)uint64_t v26 = 3;
      *(_DWORD *)(v26 + 76) = -1;
      *(void *)(sub_1001E688C((unsigned int *)v25) + 24) = a6;
      *(_WORD *)sub_1001E688C((unsigned int *)v25) = 672;
      *(_WORD *)(sub_1001E688C((unsigned int *)v25) + 2) = -1;
      *(unsigned char *)(sub_1001E688C((unsigned int *)v25) + 4) = v10;
      *a5 = v25;
      sub_1001F3B3C(*(unsigned __int16 *)(v26 + 4), a3, a4, 0, (uint64_t *)(v26 + 96), *(_DWORD *)(v26 + 76));
      return 0;
    }
    else
    {
      return 104;
    }
  }
  else
  {
    sub_10025B8C0();
    return 718;
  }
}

uint64_t sub_1001DEC18(uint64_t a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (*(_DWORD *)a1 == 4 || *(_DWORD *)a1 == 2)
  {
    sub_1001F23A4((unsigned int *)a1);
    if (!*(void *)(a1 + 112)) {
      sub_10025B8C0();
    }
    sub_100202DE4((unsigned int *)a1);
  }
  sub_1001F42C8((void *)*(unsigned __int16 *)(a1 + 4));
  uint64_t v3 = *(void **)(a1 + 48);
  if (v3) {
    sub_100023010(v3);
  }
  *(void *)(a1 + 48) = 0;
  unsigned int v4 = *(_DWORD *)a1;
  *(_DWORD *)a1 = 0;
  if (v4 == 1)
  {
    uint64_t v11 = *(void **)(a1 + 104);
    uint64_t v7 = a1 + 104;
    char v10 = v11;
    if (!v11)
    {
      sub_10025B8C0();
      char v10 = *(void **)v7;
    }
    if (*v10)
    {
      sub_10025B8C0();
      char v10 = *(void **)v7;
    }
    sub_100023010(v10);
    uint64_t v5 = 0;
    goto LABEL_31;
  }
  if (v4 == 4 || (uint64_t v5 = 0, v4 == 2))
  {
    sub_100026DB4(*(unsigned int *)(*(void *)(a1 + 112) + 80));
    sub_100026DB4(*(unsigned int *)(*(void *)(a1 + 112) + 84));
    if (sub_100197698(**(void **)(a1 + 112))) {
      uint64_t v5 = sub_1001F667C(**(void **)(a1 + 112));
    }
    else {
      uint64_t v5 = 0;
    }
  }
  switch(v4)
  {
    case 2u:
      goto LABEL_22;
    case 3u:
      uint64_t v12 = *(void **)(a1 + 120);
      uint64_t v7 = a1 + 120;
      int v6 = v12;
LABEL_30:
      sub_100023010(v6);
LABEL_31:
      *(void *)uint64_t v7 = 0;
      return v5;
    case 4u:
LABEL_22:
      uint64_t v8 = *(void **)(a1 + 112);
      uint64_t v7 = a1 + 112;
      int v6 = v8;
      uint64_t v9 = (void *)v8[14];
      if (v9)
      {
        sub_100023010(v9);
        int v6 = *(void **)v7;
        *(void *)(*(void *)v7 + 112) = 0;
      }
      goto LABEL_30;
  }
  return v5;
}

void *sub_1001DED74(uint64_t a1, unsigned int a2)
{
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 430;
  }
  if (word_100A052D0)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    do
    {
      uint64_t v6 = qword_100A052C8;
      uint64_t v7 = (int *)(qword_100A052C8 + v4);
      int v8 = *(_DWORD *)(qword_100A052C8 + v4);
      if (v8 == 4 || v8 == 2)
      {
        if (*(void *)sub_1001E6484((unsigned int *)(qword_100A052C8 + v4)) == a1)
        {
          sub_1001F68C8(*(unsigned __int16 *)(v6 + v4 + 4));
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)(v6 + v4)) + 16) != 1
            || *(unsigned char *)(sub_1001E6484((unsigned int *)(v6 + v4)) + 30)
            || sub_100197770(a1))
          {
            goto LABEL_18;
          }
          uint64_t v10 = sub_1001E6484((unsigned int *)(v6 + v4));
          ++*(unsigned char *)(v10 + 30);
          uint64_t v11 = sub_1001E6484((unsigned int *)(v6 + v4));
          sub_100026DB4(*(unsigned int *)(v11 + 80));
          uint64_t v12 = sub_1001E6484((unsigned int *)(v6 + v4));
          sub_100026DB4(*(unsigned int *)(v12 + 84));
          uint64_t v13 = *(unsigned int *)(v6 + v4 + 72);
          if (v13)
          {
            sub_10025D444(v13);
            *(_DWORD *)(v6 + v4 + 72) = 0;
          }
          *(unsigned char *)(sub_1001E6484((unsigned int *)(v6 + v4)) + 16) = 0;
          *(unsigned char *)(sub_1001E6484((unsigned int *)(v6 + v4)) + 25) = 1;
          *(void *)sub_1001E6484((unsigned int *)(v6 + v4)) = 0;
          uint64_t v14 = sub_1001E6484((unsigned int *)(v6 + v4));
          if (sub_10017B9C4((uint64_t)sub_1001DFB1C, v14 + 10)) {
LABEL_18:
          }
            sub_1001DF3FC(v6 + v4, v3);
          else {
            sub_10017BD74(a1, 0x13u);
          }
        }
        int v8 = *v7;
      }
      if (v8 == 3)
      {
        sub_1001F2AC4(v6 + v4, a1);
        int v8 = *v7;
      }
      if (v8 == 1)
      {
        int v17 = *(_DWORD *)(a1 + 48);
        __int16 v18 = *(_WORD *)(a1 + 52);
        if (sub_1001E5904(*(unsigned __int16 *)(v6 + v4 + 4), (uint64_t)&v17) != 434)
        {
          uint64_t v15 = sub_1001E67E4((unsigned int *)(v6 + v4));
          (*(void (**)(int *))(v15 + 16))(&v17);
        }
      }
      ++v5;
      v4 += 144;
    }
    while (v5 < (unsigned __int16)word_100A052D0);
  }
  sub_1001F2D98(a1);
  return sub_1001F2DA8(a1);
}

uint64_t sub_1001DEF88(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _WORD *a7, uint64_t a8)
{
  uint64_t v45 = 0;
  uint64_t v16 = sub_1001DE600(2u, (uint64_t *)&v45, 0);
  if (!v16)
  {
    uint64_t v44 = a8;
    uint64_t v17 = sub_100197A30(a3);
    if (!v17)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_L2CAP_createChannelForFastConnect NULL Handle", v18, v19, v20, v21, v22, v23, v24, a8);
        uint64_t v25 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    uint64_t v26 = v45;
    uint64_t v27 = sub_1001E6484(v45);
    __int16 v28 = *(_WORD *)(a3 + 4);
    *(_DWORD *)(v27 + 10) = *(_DWORD *)a3;
    *(_WORD *)(v27 + 14) = v28;
    *(void *)sub_1001E6484(v26) = v17;
    *(unsigned char *)(sub_1001E6484(v26) + 25) = 0;
    *(unsigned char *)(sub_1001E6484(v26) + 28) = 0;
    __int16 v29 = *(_WORD *)a2;
    *(_WORD *)(sub_1001E6484(v26) + 36) = v29;
    *((_WORD *)v26 + 3) = a1;
    *(unsigned char *)(sub_1001E6484(v26) + 16) = 0;
    *(unsigned char *)(sub_1001E6484(v26) + 24) = 1;
    *(unsigned char *)(sub_1001E6484(v26) + 27) = 3;
    *(unsigned char *)(sub_1001E6484(v26) + 26) = 3;
    *(unsigned char *)(sub_1001E6484(v26) + 28) = 0;
    *(unsigned char *)(sub_1001E6484(v26) + 52) = 0;
    *(void *)(sub_1001E6484(v26) + 88) = a5;
    *(void *)(sub_1001E6484(v26) + 96) = a4;
    *((void *)v26 + 4) = a6;
    *(_WORD *)(sub_1001E6484(v26) + 48) = 0;
    *(unsigned char *)(sub_1001E6484(v26) + 78) = 0;
    uint64_t v30 = sub_1001F1F8C(v26, 0, 0);
    if (v30)
    {
      uint64_t v16 = v30;
      sub_1001DEC18((uint64_t)v26);
    }
    else
    {
      int v32 = *(_DWORD *)(a2 + 8);
      if (!v32) {
        int v32 = -1;
      }
      v26[19] = v32;
      char v33 = *(unsigned char *)(a2 + 6);
      if (!v33) {
        char v33 = 4;
      }
      *(unsigned char *)(a2 + 6) = v33;
      char v34 = *(unsigned char *)(a2 + 7);
      if (!v34) {
        char v34 = 5;
      }
      *(unsigned char *)(a2 + 7) = v34;
      sub_10017BCA0(v17);
      sub_1001F3B3C(*((unsigned __int16 *)v26 + 2), *(unsigned char *)(a2 + 6), *(unsigned __int8 *)(a2 + 7), 0, (uint64_t *)v26 + 12, v26[19]);
      uint64_t v35 = (uint64_t *)sub_1001E6484(v26);
      sub_1001F667C(*v35);
      *a7 = *((_WORD *)v26 + 2);
      *((void *)v26 + 8) = v44;
      uint64_t v16 = sub_1001DF5F8(v26, (__int16 *)a2);
      if (v16)
      {
        sub_1001DEC18((uint64_t)v26);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_L2CAP_createChannelForFastConnect Failed to set channel params", v36, v37, v38, v39, v40, v41, v42, v44);
          uint64_t v43 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
  }
  return v16;
}

uint64_t sub_1001DF230(unsigned int a1, _WORD *a2, _WORD *a3, unsigned char *a4)
{
  uint64_t v19 = 0;
  uint64_t v7 = sub_1001DD56C(a1, &v19);
  if (v7)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_L2CAP_getL2CAPChannelInfo Get Channel failed", v8, v9, v10, v11, v12, v13, v14, v18);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v16 = v19;
    *a2 = *(_WORD *)(v19 + 6);
    *a3 = *(_WORD *)(*(void *)(v16 + 112) + 36);
    *a4 = *(unsigned char *)(sub_1001E6484((unsigned int *)v16) + 52);
  }
  return v7;
}

uint64_t sub_1001DF2E4(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)sub_1001DD44C();
  if (*(_WORD *)(sub_10025B218(0x2Fu) + 2))
  {
    unsigned int v3 = 0;
    unsigned int v4 = 0xFFFF;
    do
    {
      BOOL v5 = *v2 == 4 || *v2 == 2;
      if (v5 && *(void *)sub_1001E6484(v2) == a1 && *(unsigned __int16 *)(sub_1001E6484(v2) + 40) < v4) {
        unsigned int v4 = *(unsigned __int16 *)(sub_1001E6484(v2) + 40);
      }
      ++v3;
      v2 += 36;
    }
    while (v3 < *(unsigned __int16 *)(sub_10025B218(0x2Fu) + 2));
    unsigned int v6 = 8 * v4 / 5;
    if (v4 == 65534) {
      LOWORD(v6) = 0;
    }
    if (v4 == 0xFFFF) {
      unsigned __int16 v7 = 32000;
    }
    else {
      unsigned __int16 v7 = v6;
    }
  }
  else
  {
    unsigned __int16 v7 = 32000;
  }
  if (*(unsigned __int16 *)(a1 + 140) == v7) {
    return 0;
  }

  return sub_1001884A4(a1, v7);
}

void sub_1001DF3FC(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(sub_1001E6484((unsigned int *)a1) + 88);
  uint64_t v4 = *(unsigned __int16 *)(a1 + 4);
  unsigned int v5 = *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 16);
  sub_1001E6484((unsigned int *)a1);
  uint64_t v22 = *(void (**)(uint64_t, void, void, uint64_t))(sub_1001E6484((unsigned int *)a1) + 96);
  int v6 = *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 24);
  uint64_t v7 = *(void *)sub_1001E6484((unsigned int *)a1);
  if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 17))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Disconnect notification for PSM: %x already pending on dispatcher", v8, v9, v10, v11, v12, v13, v14, *(unsigned __int16 *)(a1 + 6));
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(_DWORD *)(sub_1001E6484((unsigned int *)a1) + 20) = a2;
    *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 17) = 1;
    *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 16) = 0;
    sub_1001F68C8(v4);
    sub_1001DEC18(a1);
    if (sub_100197698(v7))
    {
      sub_10017BD74(v7, 0x13u);
      if (sub_100197698(v7)) {
        sub_1001DF2E4(v7);
      }
    }
    uint64_t v16 = *(unsigned int *)(a1 + 72);
    if (v16) {
      sub_10025D444(v16);
    }
    BOOL v18 = a2 != 464 && v5 > 3;
    if (v5 == 2 || v18)
    {
      if (v23)
      {
        v23(v4, a2);
      }
    }
    else
    {
      if (v6) {
        BOOL v19 = v5 == 3;
      }
      else {
        BOOL v19 = 1;
      }
      int v20 = v19;
      if (v22 && v20)
      {
        uint64_t v21 = *(unsigned __int16 *)(a1 + 4);
        v22(v21, 0, 0, a2);
      }
    }
  }
}

uint64_t sub_1001DF5F8(unsigned int *a1, __int16 *a2)
{
  if (a1)
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a2) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  if (!a2[1]
    || (unsigned __int16)a2[1] == 0xFFFF && (byte_100A195D2 & 0x40) != 0
    || (uint64_t v4 = (unsigned int *)sub_1001DD44C(), !*(_WORD *)(sub_10025B218(0x2Fu) + 2)))
  {
LABEL_26:
    if (a2[2]) {
      __int16 v20 = a2[2];
    }
    else {
      __int16 v20 = -2;
    }
    *(_WORD *)(sub_1001E6484(a1) + 40) = v20;
    __int16 v21 = *a2;
    *(_WORD *)(sub_1001E6484(a1) + 36) = v21;
    __int16 v22 = a2[1];
    uint64_t v23 = sub_1001E6484(a1);
    uint64_t result = 0;
    *(_WORD *)(v23 + 38) = v22;
  }
  else
  {
    unsigned int v5 = 0;
    while (1)
    {
      if (v4 != a1 && *v4 && *v4 != 3)
      {
        uint64_t v7 = sub_1001E6484(a1);
        uint64_t v8 = sub_1001E6484(v4);
        if (*(_DWORD *)(v7 + 10) == *(_DWORD *)(v8 + 10)
          && *(unsigned __int16 *)(v7 + 14) == *(unsigned __int16 *)(v8 + 14))
        {
          if (*(_WORD *)(sub_1001E6484(v4) + 38))
          {
            if (*(__int16 *)(sub_1001E6484(v4) + 38) != -1)
            {
              int v10 = (unsigned __int16)a2[1];
              if (v10 != *(unsigned __int16 *)(sub_1001E6484(v4) + 38)) {
                break;
              }
            }
          }
        }
      }
      ++v5;
      v4 += 36;
      if (v5 >= *(unsigned __int16 *)(sub_10025B218(0x2Fu) + 2)) {
        goto LABEL_26;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_L2CAP_Accept: conflicting flush timeout, cannot accept connection", v11, v12, v13, v14, v15, v16, v17, v24);
      BOOL v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100749BC0();
      }
    }
    sub_1001DEC18((uint64_t)a1);
    return 101;
  }
  return result;
}

uint64_t sub_1001DF7BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, _WORD *a7, uint64_t a8)
{
  uint64_t v44 = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_L2CAP_Connect %: PSM = 0x%x, Cb 0x%x", v16, v17, v18, v19, v20, v21, v22, a5);
    uint64_t v23 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      int v46 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1 && a8 && a2 && a3 && (a4 & 0x1010101) == 1 && a7)
  {
    uint64_t v24 = sub_1001DFCC0((unsigned __int16 *)a6);
    if (!v24)
    {
      uint64_t v24 = sub_1001DE600(2u, (uint64_t *)&v44, 0);
      if (!v24)
      {
        *(unsigned char *)(sub_1001E6484(v44) + 24) = 0;
        uint64_t v25 = sub_1001E6484(v44);
        __int16 v26 = *(_WORD *)(a5 + 4);
        *(_DWORD *)(v25 + 10) = *(_DWORD *)a5;
        *(_WORD *)(v25 + 14) = v26;
        uint64_t v27 = v44;
        *((_WORD *)v44 + 3) = a4;
        *(unsigned char *)(sub_1001E6484(v27) + 16) = 0;
        *(void *)(sub_1001E6484(v44) + 88) = a2;
        *(void *)(sub_1001E6484(v44) + 96) = a1;
        __int16 v28 = v44;
        *((void *)v44 + 4) = a3;
        *((void *)v28 + 8) = a8;
        if (a6)
        {
          uint64_t v29 = *(void *)(a6 + 16);
          uint64_t v30 = sub_1001E6484(v28);
          if (v29)
          {
            int v31 = *(uint64_t **)(a6 + 16);
            uint64_t v32 = *v31;
            *(_WORD *)(v30 + 50) = *((_WORD *)v31 + 4);
            *(void *)(v30 + 42) = v32;
          }
          else
          {
            *(_WORD *)(v30 + 48) = 0;
          }
          char v38 = *(unsigned char *)(a6 + 24);
          *(unsigned char *)(sub_1001E6484(v44) + 78) = v38;
          uint64_t v24 = sub_1001F1F8C(v44, *(unsigned __int8 *)(a6 + 12), *(unsigned char *)(a6 + 13));
          if (v24) {
            goto LABEL_21;
          }
          if (*(_DWORD *)(a6 + 8)) {
            unsigned int v35 = *(_DWORD *)(a6 + 8);
          }
          else {
            unsigned int v35 = -1;
          }
          char v34 = v44;
          v44[19] = v35;
          if (*(unsigned char *)(a6 + 6)) {
            char v37 = *(unsigned char *)(a6 + 6);
          }
          else {
            char v37 = 4;
          }
          if (*(unsigned char *)(a6 + 7)) {
            unsigned int v36 = *(unsigned __int8 *)(a6 + 7);
          }
          else {
            unsigned int v36 = 5;
          }
        }
        else
        {
          *(_WORD *)(sub_1001E6484(v28) + 48) = 0;
          *(unsigned char *)(sub_1001E6484(v44) + 78) = 0;
          uint64_t v24 = sub_1001F1F8C(v44, 0, 0);
          if (v24) {
            goto LABEL_21;
          }
          char v34 = v44;
          unsigned int v35 = -1;
          v44[19] = -1;
          unsigned int v36 = 5;
          char v37 = 4;
        }
        uint64_t v24 = sub_1001F3B3C(*((unsigned __int16 *)v34 + 2), v37, v36, 0, (uint64_t *)v34 + 12, v35);
        uint64_t v39 = v44;
        if (v24) {
          goto LABEL_32;
        }
        *a7 = *((_WORD *)v44 + 2);
        if (!a6 || (uint64_t v40 = sub_1001DF5F8(v39, (__int16 *)a6), !v40))
        {
          unsigned int v41 = *(unsigned __int16 *)(sub_10025B218(0x28u) + 8);
          if (v41 <= *(unsigned __int16 *)(sub_1001E6484(v44) + 36)) {
            uint64_t v42 = (__int16 *)(sub_10025B218(0x28u) + 8);
          }
          else {
            uint64_t v42 = (__int16 *)(sub_1001E6484(v44) + 36);
          }
          __int16 v43 = *v42;
          *(_WORD *)(sub_1001E6484(v44) + 36) = v43;
          uint64_t v24 = sub_10017B9C4((uint64_t)sub_1001DFB1C, a5);
          uint64_t v39 = v44;
          if (!v24)
          {
            *(unsigned char *)(sub_1001E6484(v44) + 25) = 1;
            return v24;
          }
          goto LABEL_32;
        }
        uint64_t v24 = v40;
LABEL_21:
        uint64_t v39 = v44;
LABEL_32:
        sub_1001DEC18((uint64_t)v39);
      }
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return v24;
}

void sub_1001DFB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = 0;
  if (!sub_1001DDE70(a2, &v25))
  {
    if (*(unsigned char *)(sub_1001E6484(v25) + 16) || *(unsigned char *)(sub_1001E6484(v25) + 25) != 1) {
      sub_10025B8C0();
    }
    if (!a1)
    {
      *(void *)sub_1001E6484(v25) = a3;
      if (!a3) {
        sub_10025B8C0();
      }
      if (*(unsigned char *)(a3 + 228))
      {
        *(unsigned char *)(sub_1001E6484(v25) + 25) = 2;
        uint64_t v14 = sub_1001E6484(v25);
        if (!sub_10025CE54((uint64_t)sub_1001E0B2C, v14 + 10, *((long long **)v25 + 8), (int *)v25 + 18, 0)) {
          return;
        }
      }
      else
      {
        *(unsigned char *)(a3 + 228) = 1;
        uint64_t v15 = sub_100204E48((uint64_t)sub_1001E2404, 1, a2, 2);
        if (!v15) {
          return;
        }
        uint64_t v16 = v15;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not ask device for extended features, result is %!", v17, v18, v19, v20, v21, v22, v23, v16);
          uint64_t v24 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
    sub_1001E2644((uint64_t)v25, a1);
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"no waiting channel found for completed ACL link %: with %!", v6, v7, v8, v9, v10, v11, v12, a2);
    uint64_t v13 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1001DFCC0(unsigned __int16 *a1)
{
  if (!a1) {
    return 0;
  }
  unsigned int v2 = *a1;
  if (v2 < 0x80) {
    return 483;
  }
  if (v2 <= *(unsigned __int16 *)(sub_10025B218(0x28u) + 8))
  {
    if (a1[1] - 1280 < 0xFAFF) {
      return 484;
    }
    return 0;
  }
  if (sub_100058654())
  {
    uint64_t v4 = sub_10025B218(0x28u);
    sub_100056E24((uint64_t)"Could not validate connect parameters: no resources, max %d, in %d", v5, v6, v7, v8, v9, v10, v11, *(unsigned __int16 *)(v4 + 8));
    uint64_t v12 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 104;
}

void sub_1001DFD90(uint64_t a1, uint64_t a2)
{
  if (sub_100197770(a1))
  {
    uint64_t v4 = *(void *)(a1 + 224);
    if (v4)
    {
      uint64_t v5 = sub_1002598B4(v4, 0);
      if (v5)
      {
        uint64_t v6 = (unsigned __int16 *)v5;
        do
        {
          uint64_t v16 = 0;
          if (!sub_1001DD56C(*v6, (uint64_t *)&v16))
          {
            uint64_t v7 = (uint64_t *)sub_1001E6484(v16);
            if (a2)
            {
              if (v7[12])
              {
                uint64_t v8 = sub_1001E6484(v16);
                (*(void (**)(void, void, void, uint64_t))(v8 + 96))(*((unsigned __int16 *)v16 + 2), 0, 0, a2);
              }
              sub_1001DEC18((uint64_t)v16);
            }
            else
            {
              uint64_t v9 = *v7;
              char v10 = *(unsigned char *)(sub_1001E6484(v16) + 28);
              __int16 v11 = *((_WORD *)v16 + 3);
              __int16 v12 = *((_WORD *)v16 + 2);
              __int16 v13 = *(_WORD *)(sub_1001E6484(v16) + 36);
              __int16 v14 = *(_WORD *)(sub_1001E6484(v16) + 72);
              __int16 v15 = sub_1001D9DE8(v16);
              sub_100236250(v9, v10, v11, v12, v13, v14, v15);
            }
          }
          sub_100023010(v6);
          uint64_t v6 = (unsigned __int16 *)sub_1002598B4(*(void *)(a1 + 224), 0);
        }
        while (v6);
      }
      sub_1002595D8(*(void **)(a1 + 224));
      *(void *)(a1 + 224) = 0;
    }
  }
}

void sub_1001DFED4(uint64_t a1, uint64_t a2)
{
  if ((sub_100237A40(a1) & 1) == 0)
  {
    sub_1001DFD90(a1, a2);
  }
}

void sub_1001DFF24(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100197B34(a1);

  sub_1001DFD90(v4, a3);
}

double sub_1001DFF5C()
{
  *(void *)&double result = sub_10023413C((__n128 *)off_1009FAE08).n128_u64[0];
  return result;
}

uint64_t sub_1001DFF68()
{
  return sub_1002341F8(off_1009FAE08);
}

uint64_t sub_1001DFF74(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, __int16 *a6, _WORD *a7)
{
  if (a1 && a2 && a3 && ((__int16 v12 = a4, (a4 - 1) < 0x7F) || (a4 & 0xFF80) == 0x80) && a7)
  {
    if (sub_100197770(a5))
    {
      uint64_t v14 = sub_1001E0228((uint64_t)a6);
      if (!v14)
      {
        __int16 v43 = 0;
        uint64_t v14 = sub_1001DE600(2u, (uint64_t *)&v43, 1);
        if (!v14)
        {
          __int16 v15 = v43;
          *a7 = *((_WORD *)v43 + 2);
          *(unsigned char *)(sub_1001E6484(v15) + 24) = 0;
          *(void *)sub_1001E6484(v43) = a5;
          uint64_t v16 = sub_1001E6484(v43);
          __int16 v17 = *(_WORD *)(a5 + 53);
          *(_DWORD *)(v16 + 10) = *(_DWORD *)(a5 + 49);
          *(_WORD *)(v16 + 14) = v17;
          uint64_t v18 = v43;
          *((_WORD *)v43 + 3) = v12;
          *(unsigned char *)(sub_1001E6484(v18) + 16) = 1;
          *(void *)(sub_1001E6484(v43) + 88) = a2;
          *(void *)(sub_1001E6484(v43) + 96) = a1;
          uint64_t v19 = v43;
          *((void *)v43 + 4) = a3;
          *(_WORD *)(sub_1001E6484(v19) + 48) = 0;
          *(unsigned char *)(sub_1001E6484(v43) + 78) = 0;
          char v20 = sub_100202B64();
          *(unsigned char *)(sub_1001E6484(v43) + 28) = v20;
          __int16 v21 = *a6;
          *(_WORD *)(sub_1001E6484(v43) + 36) = v21;
          unsigned int v22 = *(unsigned __int16 *)(sub_10025B218(0x28u) + 8);
          if (v22 <= *(unsigned __int16 *)(sub_1001E6484(v43) + 36)) {
            uint64_t v23 = (__int16 *)(sub_10025B218(0x28u) + 8);
          }
          else {
            uint64_t v23 = (__int16 *)(sub_1001E6484(v43) + 36);
          }
          __int16 v25 = *v23;
          *(_WORD *)(sub_1001E6484(v43) + 36) = v25;
          __int16 v26 = a6[1];
          *(_WORD *)(sub_1001E6484(v43) + 72) = v26;
          uint64_t v27 = sub_1001D9D7C(v43, (unsigned __int16)a6[4], a6[3]);
          if (v27)
          {
            uint64_t v14 = v27;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"LE_L2CAP_InitLocalParams returned %!. Failed to initiate parameters. Aborting.\n", v28, v29, v30, v31, v32, v33, v34, v14);
              unsigned int v35 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            sub_1001DEC18((uint64_t)v43);
          }
          else
          {
            *(unsigned char *)(sub_1001E6484(v43) + 25) = 1;
            uint64_t v36 = *(void *)sub_1001E6484(v43);
            char v37 = *(unsigned char *)(sub_1001E6484(v43) + 28);
            __int16 v38 = *((_WORD *)v43 + 3);
            __int16 v39 = *((_WORD *)v43 + 2);
            __int16 v40 = *(_WORD *)(sub_1001E6484(v43) + 36);
            __int16 v41 = *(_WORD *)(sub_1001E6484(v43) + 72);
            __int16 v42 = sub_1001D9DE8(v43);
            sub_100236250(v36, v37, v38, v39, v40, v41, v42);
            return 0;
          }
        }
      }
    }
    else
    {
      return 414;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return v14;
}

uint64_t sub_1001E0228(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (unsigned __int16 *)result;
    unsigned int v2 = *(unsigned __int16 *)result;
    if (v2 <= *(unsigned __int16 *)(sub_10025B218(0x28u) + 8))
    {
      if (v1[1] <= *v1)
      {
        return 0;
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"MTU must be equal or greater than MPS (MPS=%d, MTU=%d)\n", v11, v12, v13, v14, v15, v16, v17, v1[1]);
          uint64_t v18 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 101;
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not validate connect parameters: no resources", v3, v4, v5, v6, v7, v8, v9, v19);
        char v10 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  return result;
}

uint64_t sub_1001E0320(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v109 = 0;
  uint64_t v13 = sub_1001DD56C(a4, (uint64_t *)&v109);
  if (!v13)
  {
    if (*(unsigned char *)(sub_1001E6484(v109) + 16) != 2)
    {
      if (sub_100058654())
      {
        uint64_t v32 = sub_1001E6484(v109);
        sub_100056E24((uint64_t)"Invalid State: %d", v33, v34, v35, v36, v37, v38, v39, *(unsigned __int8 *)(v32 + 16));
        __int16 v40 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 408;
    }
    if (!a6)
    {
      sub_1001E08A4((uint64_t)v109, 530, 0);
      return 0;
    }
    if (!a1 || !a2 || !a3 || !a7)
    {
      sub_10025B8C0();
      return 101;
    }
    uint64_t v23 = sub_1001DFCC0((unsigned __int16 *)a5);
    if (v23)
    {
      uint64_t v14 = v23;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid Connect Params: %!", v24, v25, v26, v27, v28, v29, v30, v14);
        uint64_t v31 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          goto LABEL_50;
        }
      }
      return v14;
    }
    *(void *)(sub_1001E6484(v109) + 96) = a1;
    *(void *)(sub_1001E6484(v109) + 88) = a2;
    __int16 v42 = v109;
    *((void *)v109 + 4) = a3;
    *((void *)v42 + 8) = a7;
    if (a5)
    {
      uint64_t v43 = *(void *)(a5 + 16);
      uint64_t v44 = sub_1001E6484(v42);
      if (v43)
      {
        uint64_t v45 = *(uint64_t **)(a5 + 16);
        uint64_t v46 = *v45;
        *(_WORD *)(v44 + 50) = *((_WORD *)v45 + 4);
        *(void *)(v44 + 42) = v46;
      }
      else
      {
        *(_WORD *)(v44 + 48) = 0;
      }
      char v48 = *(unsigned char *)(a5 + 24);
      *(unsigned char *)(sub_1001E6484(v109) + 78) = v48;
      uint64_t v14 = sub_1001F1F8C(v109, *(unsigned __int8 *)(a5 + 12), *(unsigned char *)(a5 + 13));
      if (v14)
      {
LABEL_30:
        if (!sub_100058654()) {
          goto LABEL_46;
        }
        sub_100056E24((uint64_t)"Flow init failed with %!, rejecting connection", v49, v50, v51, v52, v53, v54, v55, v14);
        uint64_t v56 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
      if (*(_DWORD *)(a5 + 8)) {
        unsigned int v57 = *(_DWORD *)(a5 + 8);
      }
      else {
        unsigned int v57 = -1;
      }
      uint64_t v58 = v109;
      v109[19] = v57;
      if (*(unsigned char *)(a5 + 6)) {
        char v59 = *(unsigned char *)(a5 + 6);
      }
      else {
        char v59 = 4;
      }
      if (*(unsigned char *)(a5 + 7)) {
        unsigned int v60 = *(unsigned __int8 *)(a5 + 7);
      }
      else {
        unsigned int v60 = 5;
      }
      uint64_t v14 = sub_1001F3B3C(*((unsigned __int16 *)v58 + 2), v59, v60, 0, (uint64_t *)v58 + 12, v57);
      if (v14) {
        goto LABEL_43;
      }
      uint64_t v69 = sub_1001DF5F8(v109, (__int16 *)a5);
      if (v69)
      {
        uint64_t v14 = v69;
        sub_1001DEC18((uint64_t)v109);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_ConnectMan_handleChannelParamConflicts failed: %!", v70, v71, v72, v73, v74, v75, v76, v14);
          uint64_t v77 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
            goto LABEL_50;
          }
        }
        return v14;
      }
    }
    else
    {
      *(_WORD *)(sub_1001E6484(v42) + 48) = 0;
      *(unsigned char *)(sub_1001E6484(v109) + 78) = 0;
      uint64_t v14 = sub_1001F1F8C(v109, 0, 0);
      if (v14) {
        goto LABEL_30;
      }
      int v47 = v109;
      v109[19] = -1;
      uint64_t v14 = sub_1001F3B3C(*((unsigned __int16 *)v47 + 2), 4, 5u, 0, (uint64_t *)v47 + 12, 0xFFFFFFFF);
      if (v14)
      {
LABEL_43:
        if (!sub_100058654()) {
          goto LABEL_46;
        }
        sub_100056E24((uint64_t)"Queue register failed with %!, rejecting connection", v61, v62, v63, v64, v65, v66, v67, v14);
        uint64_t v68 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
    }
    unsigned int v78 = *(unsigned __int16 *)(sub_10025B218(0x28u) + 8);
    if (v78 <= *(unsigned __int16 *)(sub_1001E6484(v109) + 36)) {
      uint64_t v79 = (__int16 *)(sub_10025B218(0x28u) + 8);
    }
    else {
      uint64_t v79 = (__int16 *)(sub_1001E6484(v109) + 36);
    }
    __int16 v80 = *v79;
    *(_WORD *)(sub_1001E6484(v109) + 36) = v80;
    uint64_t v81 = v109;
    if (*((void *)v109 + 8))
    {
      uint64_t v82 = (uint64_t *)sub_1001E6484(v109);
      int v84 = sub_100253758(*v82, **((void **)v109 + 8), *(void *)(*((void *)v109 + 8) + 8), v83);
      uint64_t v81 = v109;
      if (v84)
      {
        uint64_t v85 = *(unsigned char **)sub_1001E6484(v109);
        char v86 = *(unsigned char *)(sub_1001E6484(v109) + 29);
        uint64_t v87 = *((unsigned __int16 *)v109 + 2);
        sub_1001E6484(v109);
        uint64_t v91 = sub_100202E24("aaaa", 3u, 0, v85, v86, v88, v89, v90, v87);
        if (v91)
        {
          uint64_t v14 = v91;
          if (!sub_100058654()) {
            goto LABEL_46;
          }
          sub_100056E24((uint64_t)"Sending Pending response failed %!", v92, v93, v94, v95, v96, v97, v98, v14);
          uint64_t v99 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v99, OS_LOG_TYPE_ERROR)) {
            goto LABEL_46;
          }
          goto LABEL_45;
        }
        uint64_t v81 = v109;
      }
    }
    uint64_t v100 = sub_1001E6484(v81);
    uint64_t v14 = sub_10025CE54((uint64_t)sub_1001E0B2C, v100 + 10, *((long long **)v109 + 8), (int *)v109 + 18, 1);
    if (!v14)
    {
      *(unsigned char *)(sub_1001E6484(v109) + 25) = 2;
      return v14;
    }
    if (!sub_100058654()) {
      goto LABEL_46;
    }
    sub_100056E24((uint64_t)"Policy Mgr for new connection failed %!", v101, v102, v103, v104, v105, v106, v107, v14);
    uint64_t v108 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v108, OS_LOG_TYPE_ERROR)) {
      goto LABEL_46;
    }
LABEL_45:
    sub_100744F6C();
LABEL_46:
    sub_1001E08A4((uint64_t)v109, v14, 0);
    return v14;
  }
  uint64_t v14 = v13;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_ChanMan_GetChannel failed: %!", v15, v16, v17, v18, v19, v20, v21, v14);
    unsigned int v22 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
LABEL_50:
    }
      sub_100744F6C();
  }
  return v14;
}

void sub_1001E08A4(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1) {
    sub_10025B8C0();
  }
  uint64_t v6 = *(unsigned char **)sub_1001E6484((unsigned int *)a1);
  char v7 = *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 29);
  if (a2) {
    goto LABEL_4;
  }
  if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 16) != 2) {
    sub_10025B8C0();
  }
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 25) = 3;
  uint64_t v33 = *(unsigned __int16 *)(a1 + 4);
  sub_1001E6484((unsigned int *)a1);
  uint64_t v37 = sub_100202E24("aaaa", 3u, 0, v6, v7, v34, v35, v36, v33);
  if (v37)
  {
    uint64_t v38 = v37;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to complete incoming connection %!", v39, v40, v41, v42, v43, v44, v45, v38);
      uint64_t v46 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_4:
    int v8 = sub_100058654();
    if (a3)
    {
      if (v8)
      {
        sub_100056E24((uint64_t)"Incoming connection security failed", v9, v10, v11, v12, v13, v14, v15, v58);
        uint64_t v16 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      int v17 = 3;
    }
    else
    {
      if (v8)
      {
        sub_100056E24((uint64_t)"Incoming connection refused: %!", v9, v10, v11, v12, v13, v14, v15, a2);
        uint64_t v18 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      int v17 = 4;
    }
    uint64_t v19 = *(unsigned __int16 *)(a1 + 4);
    sub_1001E6484((unsigned int *)a1);
    uint64_t v23 = sub_100202E24("aaaa", 3u, 0, v6, v7, v20, v21, v22, v19);
    if (v23)
    {
      uint64_t v24 = v23;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SignalMan_ConnectRsp failed %!", v25, v26, v27, v28, v29, v30, v31, v24);
        uint64_t v32 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    sub_1001DF3FC(a1, (v17 + 450));
    return;
  }
  sub_1001E2EE0((unsigned int *)a1);
  uint64_t v47 = sub_1001E6484((unsigned int *)a1);
  uint64_t v48 = sub_10025BC54(*(_DWORD *)(v47 + 80), 1);
  if (v48)
  {
    uint64_t v49 = v48;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_Dispatch_SetFuncTimeout failed %!", v50, v51, v52, v53, v54, v55, v56, v49);
      unsigned int v57 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
}

void sub_1001E0B2C(int a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_1001DDFDC(a1);
  if (v5)
  {
    uint64_t v6 = v5;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Policy enforcement failed %! - cid 0x%x, handle %d securityFailed %d", v7, v8, v9, v10, v11, v12, v13, a2);
        uint64_t v14 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (!*(unsigned char *)(sub_1001E6484(v6) + 24))
      {
        sub_1001DF3FC((uint64_t)v6, a2);
        return;
      }
      goto LABEL_12;
    }
    if (*(unsigned char *)(sub_1001E6484(v5) + 24))
    {
LABEL_12:
      sub_1001E08A4((uint64_t)v6, a2, a3);
      return;
    }
    sub_1001E2644((uint64_t)v6, 0);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Channel not found in PolicyCB!", v15, v16, v17, v18, v19, v20, v21, v23);
    uint64_t v22 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1001E0C70(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6)
{
  uint64_t v85 = 0;
  uint64_t v11 = sub_1001DD56C(a4, (uint64_t *)&v85);
  if (v11 || !sub_1001E6484(v85))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ChanMan_GetChannel failed: %!", v12, v13, v14, v15, v16, v17, v18, v11);
      uint64_t v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return v11;
  }
  uint64_t v20 = *(void *)sub_1001E6484(v85);
  if (*(unsigned char *)(sub_1001E6484(v85) + 16) != 2)
  {
    if (sub_100058654())
    {
      uint64_t v25 = sub_1001E6484(v85);
      sub_100056E24((uint64_t)"Invalid State: %d", v26, v27, v28, v29, v30, v31, v32, *(unsigned __int8 *)(v25 + 16));
      uint64_t v33 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  int v21 = sub_100234878(v20);
  int v22 = sub_1002349E0(v20);
  unsigned __int8 v84 = 0;
  if (v22) {
    sub_100234A68(v20, &v84);
  }
  if (!*(unsigned char *)(a5 + 4))
  {
    if (*(unsigned char *)(a5 + 5))
    {
      int v34 = sub_100234900(v20);
      if (v34) {
        int v24 = 4;
      }
      else {
        int v24 = 6;
      }
      if (!v34 || (a6 & 1) == 0) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
LABEL_29:
    if (!a6)
    {
      int v24 = 4;
      goto LABEL_40;
    }
LABEL_30:
    if (!a1 || !a2 || !a3)
    {
      sub_10025B8C0();
      return 101;
    }
    uint64_t v35 = sub_1001E0228(a5);
    if (v35)
    {
      uint64_t v11 = v35;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid Connect Params: %!", v36, v37, v38, v39, v40, v41, v42, v11);
        uint64_t v43 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return v11;
    }
    *(void *)(sub_1001E6484(v85) + 96) = a1;
    *(void *)(sub_1001E6484(v85) + 88) = a2;
    char v59 = v85;
    *((void *)v85 + 4) = a3;
    *(_WORD *)(sub_1001E6484(v59) + 48) = 0;
    *(unsigned char *)(sub_1001E6484(v85) + 78) = 0;
    __int16 v60 = *(_WORD *)a5;
    *(_WORD *)(sub_1001E6484(v85) + 36) = v60;
    uint64_t v61 = sub_1001F1F8C(v85, 5, 0);
    if (v61
      || (!*(_DWORD *)(a5 + 12) ? (unsigned int v62 = -1) : (unsigned int v62 = *(_DWORD *)(a5 + 12)),
          uint64_t v63 = v85,
          v85[19] = v62,
          uint64_t v61 = sub_1001F3B3C(*((unsigned __int16 *)v63 + 2), 15, 5u, 0, (uint64_t *)v63 + 12, v62),
          v61))
    {
      uint64_t v11 = v61;
      sub_1001DEC18((uint64_t)v85);
      return v11;
    }
    __int16 v80 = *(_WORD *)(a5 + 2);
    *(_WORD *)(sub_1001E6484(v85) + 72) = v80;
    sub_1001D9D7C(v85, *(unsigned __int16 *)(a5 + 8), *(_WORD *)(a5 + 6));
    unsigned int v81 = *(unsigned __int16 *)(sub_10025B218(0x28u) + 8);
    if (v81 <= *(unsigned __int16 *)(sub_1001E6484(v85) + 36)) {
      uint64_t v82 = (__int16 *)(sub_10025B218(0x28u) + 8);
    }
    else {
      uint64_t v82 = (__int16 *)(sub_1001E6484(v85) + 36);
    }
    __int16 v83 = *v82;
    int v24 = 0;
    *(_WORD *)(sub_1001E6484(v85) + 36) = v83;
    goto LABEL_40;
  }
  if (!v21)
  {
    int v24 = 8;
    goto LABEL_40;
  }
  if (v84 < 0x10u) {
    char v23 = v22;
  }
  else {
    char v23 = 0;
  }
  if ((v23 & 1) == 0)
  {
    if ((*(unsigned __int8 *)(v20 + 168) | 2) != 3)
    {
      int v24 = 5;
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  int v24 = 7;
LABEL_40:
  uint64_t v44 = v85;
  if (!v85) {
    sub_10025B8C0();
  }
  uint64_t v45 = *(void *)sub_1001E6484(v44);
  char v46 = *(unsigned char *)(sub_1001E6484(v44) + 29);
  if (!v24 && *(unsigned char *)(sub_1001E6484(v44) + 16) != 2) {
    sub_10025B8C0();
  }
  __int16 v47 = *((_WORD *)v44 + 2);
  __int16 v48 = *(_WORD *)(sub_1001E6484(v44) + 36);
  __int16 v49 = *(_WORD *)(sub_1001E6484(v44) + 72);
  __int16 v50 = sub_1001D9DE8(v44);
  uint64_t v11 = sub_100236084(v45, v46, v47, v48, v49, v50, v24);
  *(unsigned char *)(sub_1001E6484(v44) + 16) = 4;
  if (v11
    && sub_100058654()
    && (sub_100056E24((uint64_t)"SignalMan_LeChannelConnectionRsp failed %!", v51, v52, v53, v54, v55, v56, v57, v11),
        uint64_t v58 = sub_100050B4C(0x2Fu),
        os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)))
  {
    sub_100744F6C();
    if (v24) {
      goto LABEL_49;
    }
  }
  else if (v24)
  {
LABEL_49:
    sub_1001DF3FC((uint64_t)v44, (v24 + 580));
    return v11;
  }
  uint64_t v64 = (uint64_t *)sub_1001E6484(v44);
  uint64_t v65 = sub_1001F667C(*v64);
  if (v11)
  {
    if (sub_100058654())
    {
      uint64_t v66 = *(void *)sub_1001E6484(v44);
      sub_1001E6484(v44);
      sub_100056E24((uint64_t)"OI_Sar_SetMTU(%d, %d) failed %!", v67, v68, v69, v70, v71, v72, v73, v66);
      uint64_t v74 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, void, uint64_t))(sub_1001E6484(v44) + 96);
  uint64_t v76 = *((unsigned __int16 *)v44 + 2);
  uint64_t v77 = *(unsigned __int16 *)(sub_1001E6484(v44) + 36);
  uint64_t v78 = sub_1001E6484(v44);
  v75(v76, v77, *(unsigned __int16 *)(v78 + 32), v65);
  return v11;
}

uint64_t sub_1001E1170(unsigned int a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v4 = sub_1001DD56C(a1, (uint64_t *)&v15);
  if (v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"GetChannel with cid %d failed with status %!", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v13 = v15;
    if (!v15)
    {
      sub_10025B8C0();
      uint64_t v13 = v15;
    }
    *(void *)(sub_1001E6484(v13) + 88) = a2;
  }
  return v4;
}

uint64_t sub_1001E121C(unsigned int a1, uint64_t a2)
{
  uint64_t v33 = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"L2CAP Disconnect cid=%d(0x%x) , reason=%!", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v35 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_1001DD56C(a1, (uint64_t *)&v33)) {
    return 404;
  }
  if (*(unsigned char *)(sub_1001E6484(v33) + 17)) {
    return 0;
  }
  if (*(unsigned char *)(sub_1001E6484(v33) + 16) != 4 && *(unsigned char *)(sub_1001E6484(v33) + 16) != 5) {
    return 408;
  }
  uint64_t v13 = v33;
  unsigned int v14 = *v33;
  if (*v33 == 2)
  {
    sub_1001F54A0(a1);
    uint64_t v13 = v33;
    return sub_1001E1430(v13, a2);
  }
  if (v14 != 4)
  {
    if (v14 == 3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't disconnect fixed of Magnet channels using the signal manager.", v15, v16, v17, v18, v19, v20, v21, v32);
        int v22 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 403;
    }
    return sub_1001E1430(v13, a2);
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Magnet got messed up", v23, v24, v25, v26, v27, v28, v29, v32);
    uint64_t v30 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_10025B96C(5006);
  uint64_t v31 = (unsigned __int16 **)sub_1001E6484(v33);
  return sub_10016F7CC(*v31);
}

uint64_t sub_1001E1430(unsigned int *a1, uint64_t a2)
{
  if (!*(void *)sub_1001E6484(a1)) {
    sub_10025B8C0();
  }
  *(unsigned char *)(sub_1001E6484(a1) + 16) = 6;
  *(_DWORD *)(sub_1001E6484(a1) + 20) = a2;
  uint64_t v4 = *(unsigned char **)sub_1001E6484(a1);
  char v5 = sub_100202B64();
  uint64_t v6 = sub_1001E6484(a1);
  uint64_t v10 = sub_100202E24("aa", 6u, a1, v4, v5, v7, v8, v9, *(unsigned __int16 *)(v6 + 8));
  if (v10)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send disconnect, closing channel", v11, v12, v13, v14, v15, v16, v17, v20);
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_10074932C();
      }
    }
    sub_1001DF3FC((uint64_t)a1, a2);
  }
  return v10;
}

uint64_t sub_1001E1530(unsigned int a1)
{
  uint64_t v26 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v26)) {
    return 404;
  }
  if (*v26 - 3 > 1)
  {
    if (*(unsigned char *)(sub_1001E6484(v26) + 17))
    {
      return 0;
    }
    else if (*(unsigned char *)(sub_1001E6484(v26) + 16) == 4)
    {
      uint64_t v10 = v26;
      if (!*(void *)sub_1001E6484(v26)) {
        sub_10025B8C0();
      }
      *(unsigned char *)(sub_1001E6484(v10) + 16) = 6;
      *(_DWORD *)(sub_1001E6484(v10) + 20) = 436;
      char v11 = sub_100202B64();
      *(unsigned char *)(sub_1001E6484(v10) + 28) = v11;
      uint64_t v12 = *(void *)sub_1001E6484(v10);
      char v13 = *(unsigned char *)(sub_1001E6484(v10) + 28);
      __int16 v14 = *((_WORD *)v10 + 2);
      uint64_t v15 = sub_1001E6484(v10);
      uint64_t v1 = sub_1002367B8(v12, v13, v14, *(_WORD *)(v15 + 8));
      if (v1)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send disconnect, closing channel", v16, v17, v18, v19, v20, v21, v22, v25);
          uint64_t v23 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            sub_10074932C();
          }
        }
        sub_1001DF3FC((uint64_t)v10, 436);
      }
    }
    else
    {
      return 408;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can't disconnect fixed of Magnet channels using the signal manager.", v2, v3, v4, v5, v6, v7, v8, v25);
      uint64_t v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 403;
  }
  return v1;
}

uint64_t sub_1001E16E0(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int16 *)(a2 + 4);
  uint64_t v5 = sub_1001E6484((unsigned int *)a1);
  uint64_t v51 = &v50;
  uint64_t v6 = *(unsigned __int16 *)(v5 + 60);
  uint64_t v62 = 0;
  long long v61 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  memset(v54, 0, sizeof(v54));
  int v53 = 0;
  __int16 v52 = 0;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v50 - v7;
  bzero((char *)&v50 - v7, v9);
  if (v4 <= *(unsigned __int16 *)(sub_1001E6484((unsigned int *)a1) + 32))
  {
    if (v4)
    {
      int v20 = 0;
      *(void *)&long long v10 = 136446466;
      long long v50 = v10;
      while (1)
      {
        __int16 v21 = *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 60);
        if (v20) {
          __int16 v22 = -4;
        }
        else {
          __int16 v22 = -6;
        }
        unsigned __int16 v23 = v22 + v21;
        if ((int)(v4 - v20) >= v23) {
          unsigned __int16 v24 = v23;
        }
        else {
          unsigned __int16 v24 = v4 - v20;
        }
        int v25 = sub_100022D4C(v8, a2, v24);
        if (v24 != v25)
        {
          unsigned __int16 v26 = v25;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to get the full payload size (%d), only got %d bytes", v27, v28, v29, v30, v31, v32, v33, v24);
            int v34 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
            {
              uint64_t v40 = sub_100050714();
              int buf = v50;
              uint64_t v64 = v40;
              __int16 v65 = 1024;
              int v66 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", (uint8_t *)&buf, 0x12u);
            }
          }
          unsigned __int16 v24 = v26;
        }
        LOWORD(v53) = 2 * (v20 == 0) + v24;
        HIWORD(v53) = *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 8);
        if (v20)
        {
          sub_1000226D0((uint64_t)&v55 + 8, 2u);
          uint64_t v35 = (char *)&v53;
          size_t v36 = 4;
        }
        else
        {
          __int16 v52 = v4;
          sub_1000226D0((uint64_t)&v55 + 8, 3u);
          sub_100022798((unsigned __int8 *)&v55 + 8, (char *)&v53, 4uLL, 0);
          uint64_t v35 = (char *)&v52;
          size_t v36 = 2;
        }
        sub_100022798((unsigned __int8 *)&v55 + 8, v35, v36, 0);
        sub_100022798((unsigned __int8 *)&v55 + 8, v8, v24, 2u);
        v54[0] = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
        uint64_t v37 = *(void *)(a1 + 128);
        *(void *)&long long v56 = a1;
        *(void *)&long long v55 = v37;
        *(void *)(a1 + 128) = 0;
        uint64_t v38 = (unsigned char **)sub_1001E6484((unsigned int *)a1);
        uint64_t v39 = sub_1001F68CC((uint64_t)v54, *v38, 0, *(_WORD *)(a1 + 4));
        uint64_t v19 = v39;
        if (v39 != 412)
        {
          if (v39) {
            break;
          }
        }
        int v20 = (unsigned __int16)(v24 + v20);
        if (v20 == v4) {
          return v19;
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_L2CAP_FragmentWriteMBUF %!", v41, v42, v43, v44, v45, v46, v47, v19);
        __int16 v48 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      return 531;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Error, packet too large", v11, v12, v13, v14, v15, v16, v17, v50);
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 472;
  }
  return v19;
}

uint64_t sub_1001E1AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  unsigned int v3 = *(unsigned __int16 *)(a2 + 4);
  uint64_t v4 = sub_1001E6484((unsigned int *)a1);
  __int16 v5 = *(_WORD *)(v4 + 72);
  __chkstk_darwin(v4, (unsigned __int16)(v5 - 6));
  uint64_t v7 = (char *)&v52 - v6;
  bzero((char *)&v52 - v6, v8);
  int v9 = *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 77);
  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v58 = 0u;
  long long v56 = 0u;
  memset(v57, 0, 120);
  long long v55 = 0u;
  int v10 = *(unsigned __int16 *)(sub_1001E6484((unsigned int *)a1) + 72);
  if (*(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 66) * v10 >= v3
    || *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 64) == 3)
  {
    uint64_t v11 = sub_1001E6484((unsigned int *)a1);
    if (!v3) {
      return 531;
    }
    int v13 = 0;
    if (*(unsigned char *)(v11 + 78)) {
      unsigned __int16 v14 = v5 - 8;
    }
    else {
      unsigned __int16 v14 = v5 - 6;
    }
    signed int v15 = v14;
    unsigned int v53 = v9 & 0xFFFFFFFD;
    *(void *)&long long v12 = 136446466;
    long long v52 = v12;
    while (1)
    {
      if ((int)(v3 - v13) >= v15) {
        unsigned __int16 v16 = v15;
      }
      else {
        unsigned __int16 v16 = v3 - v13;
      }
      if (v53) {
        goto LABEL_12;
      }
      if (!v13 && v3 == v16)
      {
        *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 77) = 0;
        unsigned __int16 v16 = v3;
        goto LABEL_23;
      }
      if (v13)
      {
LABEL_12:
        unsigned int v17 = v13 + v16;
        if (v17 >= v3)
        {
          if (v17 != v3)
          {
            sub_10025B8C0();
            *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 77) = 0;
            goto LABEL_23;
          }
          uint64_t v18 = sub_1001E6484((unsigned int *)a1);
          char v19 = 2;
        }
        else
        {
          uint64_t v18 = sub_1001E6484((unsigned int *)a1);
          char v19 = 3;
        }
        *(unsigned char *)(v18 + 77) = v19;
      }
      else
      {
        *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 77) = 1;
        v16 -= 2;
      }
LABEL_23:
      int v20 = sub_100022D4C(v7, v54, v16);
      if (v20 != v16)
      {
        unsigned __int16 v21 = v20;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to get the full payload size (%d), only got %d bytes", v22, v23, v24, v25, v26, v27, v28, v16);
          uint64_t v29 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
          {
            int v34 = sub_100050714();
            *(_DWORD *)int buf = v52;
            int v66 = v34;
            __int16 v67 = 1024;
            int v68 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
        unsigned __int16 v16 = v21;
      }
      sub_1000226D0((uint64_t)&v58, 1u);
      sub_100022798((unsigned __int8 *)&v58, v7, v16, 2u);
      BYTE8(v56) = *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 77);
      WORD5(v56) = v3;
      LOBYTE(v55) = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
      *(_OWORD *)&v57[1] = v58;
      *(_OWORD *)&v57[3] = v59;
      *(_OWORD *)&v57[11] = v63;
      *(_OWORD *)&v57[13] = v64;
      *(_OWORD *)&v57[5] = v60;
      *(_OWORD *)&v57[7] = v61;
      *(_OWORD *)&v57[9] = v62;
      uint64_t v30 = *(void *)(a1 + 128);
      v57[2] = a1;
      v57[0] = v30;
      *(void *)(a1 + 128) = 0;
      uint64_t v31 = (unsigned char **)sub_1001E6484((unsigned int *)a1);
      uint64_t v32 = sub_1001F68CC((uint64_t)&v55, *v31, 0, *(_WORD *)(a1 + 4));
      uint64_t v33 = v32;
      if (v32 != 412)
      {
        if (v32)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to send packet. Bailing. result %!", v35, v36, v37, v38, v39, v40, v41, v33);
            uint64_t v42 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        return v33;
      }
      int v13 = (unsigned __int16)(v16 + v13);
      if (v13 == v3) {
        return v33;
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Error, packet too large (exceeds MaxPDUSize * window)", v43, v44, v45, v46, v47, v48, v49, v52);
    long long v50 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 472;
}

uint64_t sub_1001E1EB4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (a1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a1) {
      goto LABEL_3;
    }
  }
  sub_10025B8C0();
LABEL_3:
  if (*(_DWORD *)a1 != 2 && *(_DWORD *)a1 != 4) {
    sub_10025B8C0();
  }
  uint64_t v36 = 0;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v29 = 0u;
  memset(v28, 0, sizeof(v28));
  unsigned int v5 = *(unsigned __int16 *)(a2 + 4);
  if (v5 <= *(unsigned __int16 *)(sub_1001E6484((unsigned int *)a1) + 32))
  {
    __int16 v37 = v5 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0);
    char v38 = *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 8);
    char v39 = *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 9);
    sub_1000226D0((uint64_t)&v29 + 8, 2u);
    sub_100022798((unsigned __int8 *)&v29 + 8, (char *)&v37, 4uLL, 0);
    sub_10025C92C((unsigned __int8 *)&v29 + 8, a2);
    LOBYTE(v28[0]) = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
    uint64_t v16 = *(void *)(a1 + 128);
    *(void *)&long long v30 = a1;
    *(void *)&long long v29 = v16;
    *(void *)(a1 + 128) = 0;
    BYTE1(v28[0]) = *(_DWORD *)(a2 + 8) == 626;
    unsigned int v17 = (unsigned char **)sub_1001E6484((unsigned int *)a1);
    uint64_t v18 = sub_1001F68CC((uint64_t)v28, *v17, 0, *(_WORD *)(a1 + 4));
    uint64_t v15 = v18;
    if (v18)
    {
      if (v18 != 412)
      {
        if (sub_100058654())
        {
          sub_1001E6484((unsigned int *)a1);
          sub_100056E24((uint64_t)"OI_ConnectMan_WriteMBUF %! to %p", v19, v20, v21, v22, v23, v24, v25, v15);
          uint64_t v26 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C480((uint64_t)&v29 + 8);
    }
  }
  else
  {
    if (sub_100058654())
    {
      uint64_t v6 = sub_1001E6484((unsigned int *)a1);
      sub_100056E24((uint64_t)"MTU size (%d) exceeded! - data length = %d", v7, v8, v9, v10, v11, v12, v13, *(unsigned __int16 *)(v6 + 32));
      unsigned __int16 v14 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 472;
  }
  return v15;
}

void sub_1001E20D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v37 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v37))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Data received for invalid CID %d, ignoring packet", v10, v11, v12, v13, v14, v15, v16, a1);
      unsigned int v17 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (!sub_1001E6484(v37))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v20, v21, v22, v23, v24, v25, v26, v36);
    uint64_t v27 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_12:
    sub_100744F6C();
    return;
  }
  if (*(unsigned char *)(sub_1001E6484(v37) + 16) == 4)
  {
    uint64_t v18 = v37;
    v37[21] += a3;
    uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t))*((void *)v18 + 5);
    if (v19) {
      v19(a1, a2, a3, 0, a4);
    }
    else {
      (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v18 + 4))(a1, a2, a3, a4, a5);
    }
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Data received for connection not in OPEN state, ignoring packet with cid %d", v28, v29, v30, v31, v32, v33, v34, a1);
    long long v35 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      goto LABEL_12;
    }
  }
}

void sub_1001E226C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v39 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v39))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Data received for invalid CID %d, ignoring packet", v12, v13, v14, v15, v16, v17, v18, a1);
      uint64_t v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (!sub_1001E6484(v39))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v22, v23, v24, v25, v26, v27, v28, v38);
    uint64_t v29 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_12:
    sub_100744F6C();
    return;
  }
  if (*(unsigned char *)(sub_1001E6484(v39) + 16) == 4)
  {
    uint64_t v20 = v39;
    v39[21] += a3;
    uint64_t v21 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v20 + 5);
    if (v21) {
      v21(a1, a2, a3, a4, a5);
    }
    else {
      (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v20 + 4))(a1, a2, a3, a5, a6);
    }
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Data received for connection not in OPEN state, ignoring packet", v30, v31, v32, v33, v34, v35, v36, v38);
    __int16 v37 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      goto LABEL_12;
    }
  }
}

void sub_1001E2404(uint64_t a1, uint64_t a2, int a3, _DWORD *a4, int a5, int a6)
{
  uint64_t v34 = 0;
  uint64_t v12 = sub_100197A30(a1);
  uint64_t v13 = v12;
  if (v12)
  {
    if (!a6)
    {
      if (a3 == 2 && a5 == 4)
      {
        *(_DWORD *)(v12 + 229) = *a4;
        if (*(char *)a4 < 0 && !sub_100204E48((uint64_t)sub_1001E2404, a2, a1, 3)) {
          return;
        }
      }
      else if (a3 == 3 && a5 == 8)
      {
        *(void *)(v12 + 233) = *(void *)a4;
      }
    }
    for (uint64_t i = 0; i != 6; i += 2)
    {
      uint64_t v15 = (void (*)(uint64_t))qword_100A052D8[i];
      if (v15
        && ((*(unsigned __int8 *)(v13 + ((unint64_t)LOWORD(qword_100A052D8[i + 1]) >> 3) + 233) >> (qword_100A052D8[i + 1] & 7)) & 1) != 0)
      {
        v15(a1);
      }
    }
    goto LABEL_11;
  }
  sub_10025B8C0();
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"Received infoResponseCallback from %:, but it appears this device is no longer connected", v16, v17, v18, v19, v20, v21, v22, a1), uint64_t v23 = sub_100050B4C(0x2Fu), !os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
  {
LABEL_11:
    if (!a2) {
      return;
    }
    goto LABEL_12;
  }
  sub_100744F6C();
  if (!a2) {
    return;
  }
LABEL_12:
  if (sub_1001DDE70(a1, &v34))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"no waiting channel found for completed ACL link %: %!", v24, v25, v26, v27, v28, v29, v30, a1);
      uint64_t v31 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    if (*(unsigned char *)(sub_1001E6484(v34) + 16) || *(unsigned char *)(sub_1001E6484(v34) + 25) != 1) {
      sub_10025B8C0();
    }
    *(void *)sub_1001E6484(v34) = v13;
    *(unsigned char *)(sub_1001E6484(v34) + 25) = 2;
    uint64_t v32 = sub_1001E6484(v34);
    uint64_t v33 = sub_10025CE54((uint64_t)sub_1001E0B2C, v32 + 10, *((long long **)v34 + 8), (int *)v34 + 18, 0);
    if (v33) {
      sub_1001E2644((uint64_t)v34, v33);
    }
  }
}

void sub_1001E2644(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2)
    {
LABEL_3:
      sub_1001DF3FC(a1, a2);
      return;
    }
  }
  else
  {
    sub_10025B8C0();
    if (a2) {
      goto LABEL_3;
    }
  }
  if (*(_DWORD *)a1 == 3)
  {
    uint64_t v4 = *(unsigned char **)sub_1001E6484((unsigned int *)a1);
    char v5 = sub_100202B64();
    uint64_t v6 = *(unsigned __int16 *)(sub_1001E6484((unsigned int *)a1) + 8);
    int v10 = sub_100202E24("aac", 0xCu, (unsigned int *)a1, v4, v5, v7, v8, v9, v6);
  }
  else
  {
    if (sub_1001F199C((unsigned int *)a1) && !sub_1001F189C((unsigned int *)a1)) {
      return;
    }
    uint64_t v11 = *(unsigned char **)sub_1001E6484((unsigned int *)a1);
    char v12 = sub_100202B64();
    int v10 = sub_100202E24("aa", 2u, (unsigned int *)a1, v11, v12, v13, v14, v15, *(unsigned __int16 *)(a1 + 6));
  }
  if (!v10)
  {
    *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 16) = 1;
    *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 25) = 0;
  }
}

void sub_1001E2774(uint64_t a1, int a2, uint64_t a3, char a4)
{
  int v68 = 0;
  if (byte_100A05308)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Rejecting connect attempt, PTS error code is overriden to %d", v7, v8, v9, v10, v11, v12, v13, byte_100A05308);
      uint64_t v14 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_14:
    sub_100202E24("aaaa", 3u, 0, (unsigned char *)a1, a4, v11, v12, v13, 0);
    return;
  }
  __int16 v15 = a2;
  if ((a2 & 0x1010101) != 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! - rejecting connect attempt to invalid PSM %d", v26, v27, v28, v29, v11, v12, v13, 407);
      uint64_t v30 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_14;
  }
  uint64_t v16 = sub_10017BCA0(a1);
  if (v16)
  {
    uint64_t v17 = v16;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_LP_ConnectionAdded failed (%!), rejecting connection", v18, v19, v20, v21, v22, v23, v24, v17);
      uint64_t v25 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_20:
    uint64_t v35 = (unsigned char *)a1;
    uint64_t v36 = a3;
    uint64_t v37 = 4;
LABEL_21:
    sub_1001E2B6C(v35, v36, v37, a4, v21, v22, v23, v24);
    return;
  }
  if (sub_1001DE600(2u, (uint64_t *)&v68, 0))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to allocate channel, rejecting connection", v31, v32, v33, v21, v22, v23, v24, v67);
      uint64_t v34 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_20;
  }
  uint64_t v38 = v68;
  *((_WORD *)v68 + 3) = v15;
  uint64_t v39 = sub_1001E6484(v38);
  __int16 v40 = *(_WORD *)(a1 + 52);
  *(_DWORD *)(v39 + 10) = *(_DWORD *)(a1 + 48);
  *(_WORD *)(v39 + 14) = v40;
  *(unsigned char *)(sub_1001E6484(v68) + 24) = 1;
  *(void *)sub_1001E6484(v68) = a1;
  *(_WORD *)(sub_1001E6484(v68) + 8) = a3;
  *(unsigned char *)(sub_1001E6484(v68) + 29) = a4;
  *(unsigned char *)(sub_1001E6484(v68) + 16) = 2;
  if (sub_100058654())
  {
    uint64_t v41 = *((unsigned __int16 *)v68 + 2);
    sub_1001E6484(v68);
    sub_100056E24((uint64_t)"RecvConnectReq cid=%d psm=%d addr=%:", v42, v43, v44, v45, v46, v47, v48, v41);
    uint64_t v49 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
    {
      long long v50 = sub_100050714();
      *(_DWORD *)int buf = 136446210;
      uint64_t v70 = v50;
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v51 = sub_1001E6484(v68);
  int v52 = sub_1001E6534(v51 + 10, *((unsigned __int16 *)v68 + 2), *((unsigned __int16 *)v68 + 3));
  unsigned int v53 = v68;
  if (v52)
  {
    sub_1001DEC18((uint64_t)v68);
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection refused - invalid PSM", v54, v55, v56, v21, v22, v23, v24, v67);
      long long v57 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v35 = (unsigned char *)a1;
    uint64_t v36 = a3;
    uint64_t v37 = 2;
    goto LABEL_21;
  }
  if (*v68)
  {
    if (!*(unsigned char *)(a1 + 228))
    {
      *(unsigned char *)(a1 + 228) = 1;
      uint64_t v58 = sub_1001E6484(v53);
      if (sub_100204E48((uint64_t)sub_1001E2404, 0, v58 + 10, 2))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not ask device for extended features.", v59, v60, v61, v62, v63, v64, v65, v67);
          int v66 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
  }
}

uint64_t sub_1001E2B6C(unsigned char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100202E24("aaaa", 3u, 0, a1, a4, a6, a7, a8, 0);

  return sub_10017BD74((uint64_t)a1, 0x13u);
}

void sub_1001E2BD8(uint64_t a1, int a2, __int16 a3, unsigned int a4, uint64_t a5, unsigned int a6)
{
  uint64_t v63 = 0;
  memset(v62, 0, 44);
  if (sub_1001DDAE8(a1, a6, &v63))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"RecvConnectRsp, unknown identifier 0x%x, ignoring", v11, v12, v13, v14, v15, v16, v17, a6);
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (!sub_1001E6484(v63))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v27, v28, v29, v30, v31, v32, v33, v61);
    uint64_t v34 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_13;
  }
  if (*(void *)sub_1001E6484(v63) == a1)
  {
    if (*(unsigned char *)(sub_1001E6484(v63) + 16) == 1)
    {
      if (a4 <= 1 && *((unsigned __int16 *)v63 + 2) != a2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"RecvConnectRsp, wrong source CID (s/b %d, rcvd %d).  Dropping connection", v43, v44, v45, v46, v47, v48, v49, *((unsigned __int16 *)v63 + 2));
          long long v50 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t v51 = v63;
        uint64_t v52 = 454;
        goto LABEL_35;
      }
      *(_WORD *)(sub_1001E6484(v63) + 8) = a3;
      *(unsigned char *)(sub_1001E6484(v63) + 25) = 3;
      if (a4 == 1)
      {
        unsigned int v53 = v63;
        uint64_t v54 = sub_10025B218(0x2Fu);
        sub_100202B88(v53, *(unsigned __int16 *)(v54 + 8));
        return;
      }
      if (!a4)
      {
        if (sub_1001F1A9C() && (*(unsigned char *)(a1 + 229) & 0x20) != 0) {
          sub_1001E6484(v63);
        }
        uint64_t v55 = v62;
        int v56 = sub_1001F1800(v63, 1, (uint64_t)v62);
        if (v56 != 1)
        {
          if (v56 == 2)
          {
            uint64_t v51 = v63;
            uint64_t v52 = 461;
            goto LABEL_35;
          }
          uint64_t v55 = 0;
        }
        sub_1001E2EE0(v63);
        long long v57 = v63;
        __int16 v58 = *(_WORD *)(sub_1001E6484(v63) + 36);
        int v59 = *(unsigned __int16 *)(sub_1001E6484(v63) + 38);
        uint64_t v60 = sub_1001E6484(v63);
        sub_1001E2F9C(v57, v58, v59, *(unsigned __int16 *)(v60 + 40), (uint64_t)v55);
        return;
      }
      uint64_t v51 = v63;
      uint64_t v52 = a4 + 450;
LABEL_35:
      sub_1001DF3FC((uint64_t)v51, v52);
      return;
    }
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"RecvConnectRsp, unexpected connect RSP, ignoring", v35, v36, v37, v38, v39, v40, v41, v61);
    uint64_t v42 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_13:
    sub_100744F6C();
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"RecvConnectRsp not excpected for this ACL handle", v19, v20, v21, v22, v23, v24, v25, v61);
    uint64_t v26 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_10074A534();
    }
  }
}

uint64_t sub_1001E2EE0(unsigned int *a1)
{
  uint64_t v9 = a1;
  if (!a1) {
    sub_10025B8C0();
  }
  int v2 = *(unsigned __int8 *)(sub_1001E6484(a1) + 16);
  uint64_t v3 = sub_1001E6484(a1);
  if (v2 == 4) {
    char v4 = 5;
  }
  else {
    char v4 = 3;
  }
  *(unsigned char *)(v3 + 16) = v4;
  v8[0] = 0;
  *(unsigned char *)(sub_1001E6484(a1) + 26) = 0;
  *(unsigned char *)(sub_1001E6484(a1) + 27) = 0;
  v8[1] = &v9;
  LOWORD(v8[0]) = 8;
  int v5 = *(unsigned __int16 *)(sub_10025B218(0x2Fu) + 10);
  uint64_t v6 = sub_1001E6484(v9);
  return sub_1000268E4((uint64_t)sub_1001E516C, v8, v5, (int *)(v6 + 80));
}

uint64_t sub_1001E2F9C(unsigned int *a1, __int16 a2, int a3, int a4, uint64_t a5)
{
  if (*(unsigned char *)(sub_1001E6484(a1) + 16) != 4
    && *(unsigned char *)(sub_1001E6484(a1) + 16) != 3
    && *(unsigned char *)(sub_1001E6484(a1) + 16) != 5)
  {
    if (sub_100058654())
    {
      uint64_t v40 = sub_1001E6484(a1);
      sub_100056E24((uint64_t)"invalid state for config (%d)", v41, v42, v43, v44, v45, v46, v47, *(unsigned __int8 *)(v40 + 16));
      uint64_t v48 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  sub_1001E6484(a1);
  sub_1001E6484(a1);
  *(_WORD *)(sub_1001E6484(a1) + 36) = a2;
  *(_WORD *)(sub_1001E6484(a1) + 38) = a3;
  uint64_t v10 = (uint64_t *)sub_1001E6484(a1);
  uint64_t v11 = sub_1001F667C(*v10);
  if (!v11)
  {
    if ((a3 - 1) <= 0xFFFD)
    {
      uint64_t v22 = (uint64_t *)sub_1001E6484(a1);
      uint64_t v29 = sub_10001BDE0(85, (uint64_t)sub_1001E5380, v23, v24, v25, v26, v27, v28, *v22);
      if (v29)
      {
        uint64_t v12 = v29;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Write flushTO failed %!", v30, v31, v32, v33, v34, v35, v36, v12);
          uint64_t v37 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
            goto LABEL_7;
          }
        }
        return v12;
      }
    }
    if (a4 != 0xFFFF)
    {
      uint64_t v38 = (uint64_t *)sub_1001E6484(a1);
      uint64_t v12 = sub_1001DF2E4(*v38);
      if (v12) {
        return v12;
      }
    }
    if (*(unsigned char *)(sub_1001E6484(a1) + 25) != 3)
    {
      if (!a5) {
        goto LABEL_42;
      }
      goto LABEL_44;
    }
    if (*a1 != 4 && *a1 != 2) {
      goto LABEL_41;
    }
    uint64_t v39 = a1;
    if (!*(_WORD *)(sub_1001E6484(a1) + 38))
    {
      uint64_t v39 = (unsigned int *)sub_1001DD44C();
      if (!*(_WORD *)(sub_10025B218(0x2Fu) + 2)) {
        goto LABEL_41;
      }
      unsigned int v49 = 0;
      while (1)
      {
        if (v39 != a1 && (*v39 == 4 || *v39 == 2))
        {
          uint64_t v51 = *(void *)sub_1001E6484(a1);
          if (v51 != *(void *)sub_1001E6484(v39)
            && *(_WORD *)(sub_1001E6484(v39) + 38)
            && (*(__int16 *)(sub_1001E6484(v39) + 38) != -1 || (byte_100A195D2 & 0x40) == 0))
          {
            break;
          }
        }
        ++v49;
        v39 += 36;
        if (v49 >= *(unsigned __int16 *)(sub_10025B218(0x2Fu) + 2)) {
          goto LABEL_41;
        }
      }
    }
    if (*(_WORD *)(sub_1001E6484(v39) + 38) != 0xFFFF)
    {
      if (!a5)
      {
LABEL_42:
        if (*(unsigned char *)(sub_1001E6484(a1) + 52))
        {
          sub_1001E6484(a1);
          sub_1001E6484(a1);
          sub_1001E6484(a1);
          sub_1001E6484(a1);
        }
      }
LABEL_44:
      if (*(unsigned char *)(sub_1001E6484(a1) + 16) == 4) {
        sub_1001E2EE0(a1);
      }
      uint64_t v52 = *(unsigned char **)sub_1001E6484(a1);
      char v53 = sub_100202B64();
      uint64_t v54 = sub_1001E6484(a1);
      sub_100202E24("aamsfro", 4u, a1, v52, v53, v55, v56, v57, *(unsigned __int16 *)(v54 + 8));
      uint64_t v12 = 0;
      *(unsigned char *)(sub_1001E6484(a1) + 26) = 2;
      return v12;
    }
LABEL_41:
    if (!a5) {
      goto LABEL_42;
    }
    goto LABEL_44;
  }
  uint64_t v12 = v11;
  if (sub_100058654())
  {
    uint64_t v13 = (uint64_t *)sub_1001E6484(a1);
    sub_100056E24((uint64_t)"OI_Sar_SetMTU(%d, %d) failed %!", v14, v15, v16, v17, v18, v19, v20, *v13);
    uint64_t v21 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
LABEL_7:
    }
      sub_100744F6C();
  }
  return v12;
}

void sub_1001E3424(uint64_t a1, char a2, unsigned int a3, int a4, uint64_t a5)
{
  uint64_t v116 = 0;
  __int16 v115 = *(_WORD *)(sub_10025B218(0x28u) + 8);
  __int16 v114 = -1;
  char v113 = 1;
  memset(v112, 0, 44);
  if (sub_1001DD56C(a3, (uint64_t *)&v116))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"cid %d not found %!", v10, v11, v12, v13, v14, v15, v16, a3);
      uint64_t v17 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
LABEL_16:
        sub_100744F6C();
        return;
      }
    }
    return;
  }
  if (*v116 != 2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Ignoring configuration request on non-connection channel %d", v26, v27, v28, v29, v30, v31, v32, a3);
      uint64_t v33 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
    }
    return;
  }
  if (!sub_1001E6484(v116))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid packets.", v34, v35, v36, v37, v38, v39, v40, v110);
      uint64_t v41 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
    }
    return;
  }
  if (*(void *)sub_1001E6484(v116) != a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ConnectMan_RecvConfigReq unexpected CID", v18, v19, v20, v21, v22, v23, v24, v110);
      uint64_t v25 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_10074A5AC();
      }
    }
    return;
  }
  uint64_t v42 = v116;
  if (*v116 == 2)
  {
    int v43 = *(unsigned __int8 *)(sub_1001E6484(v116) + 16);
    uint64_t v42 = v116;
    if (v43 == 3)
    {
      int v44 = *(unsigned __int8 *)(sub_1001E6484(v116) + 26);
      uint64_t v42 = v116;
      if (!v44)
      {
        int v45 = *(unsigned __int8 *)(sub_1001E6484(v116) + 27);
        uint64_t v42 = v116;
        if (!v45)
        {
          int v46 = *(unsigned __int8 *)(sub_1001E6484(v116) + 24);
          uint64_t v42 = v116;
          if (v46)
          {
            uint64_t v47 = sub_1001E6484(v116);
            sub_100026DB4(*(unsigned int *)(v47 + 80));
            sub_1001E2EE0(v116);
            uint64_t v42 = v116;
          }
        }
      }
    }
  }
  if (*(unsigned char *)(sub_1001E6484(v42) + 16) == 4) {
    sub_1001E2EE0(v116);
  }
  if ((*(unsigned char *)(sub_1001E6484(v116) + 16) == 3 || *(unsigned char *)(sub_1001E6484(v116) + 16) == 5)
    && !*(unsigned char *)(sub_1001E6484(v116) + 27))
  {
    int v48 = *(unsigned __int8 *)(sub_1001E6484(v116) + 16);
    if (*(unsigned char *)a5)
    {
      if (*(unsigned __int16 *)(a5 + 4) < 0x30u
        || *(unsigned char *)(sub_1001E6484(v116) + 16) == 5
        && (unsigned int v50 = *(unsigned __int16 *)(a5 + 4), v50 < *(unsigned __int16 *)(sub_1001E6484(v116) + 32)))
      {
        uint64_t v111 = &v115;
        int v49 = 1;
      }
      else
      {
        __int16 v51 = *(_WORD *)(a5 + 4);
        *(_WORD *)(sub_1001E6484(v116) + 32) = v51;
        int v49 = 0;
        uint64_t v111 = (__int16 *)(sub_1001E6484(v116) + 32);
      }
    }
    else
    {
      int v49 = 0;
      uint64_t v111 = 0;
    }
    int v52 = *(_DWORD *)a5;
    if ((*(_DWORD *)a5 & 2) != 0)
    {
      if (*(_WORD *)(a5 + 6))
      {
        __int16 v53 = *(_WORD *)(a5 + 6);
        *(_WORD *)(sub_1001E6484(v116) + 34) = v53;
        int v52 = *(_DWORD *)a5;
      }
      else
      {
        int v49 = 1;
      }
    }
    if ((v52 & 4) != 0 && *(unsigned __int8 *)(a5 + 8) >= 2u) {
      int v49 = 1;
    }
    int v54 = sub_1001F1A9C();
    if ((v52 & 0x10) == 0)
    {
      if (!v54 || (*(unsigned char *)(a1 + 229) & 0x20) == 0)
      {
LABEL_55:
        if ((*(_DWORD *)a5 & 8) != 0)
        {
          int v65 = sub_1001F1ABC(v116, a5, 1, (uint64_t)v112);
          int v49 = v65;
          if ((*(unsigned char *)a5 & 0x10) != 0)
          {
            if (v65 == 2)
            {
              uint64_t v64 = 0;
            }
            else if (BYTE10(v112[0]) - 3 <= 1 && sub_1001F1A9C())
            {
              char v67 = *(unsigned char *)(a1 + 229);
              uint64_t v64 = v112;
              if ((v67 & 0x20) != 0) {
                goto LABEL_75;
              }
            }
            else
            {
              uint64_t v64 = v112;
            }
            goto LABEL_74;
          }
          if (v65 == 2)
          {
            uint64_t v64 = 0;
          }
          else if (BYTE10(v112[0]) - 3 <= 1 && sub_1001F1A9C())
          {
            char v66 = *(unsigned char *)(a1 + 229);
            uint64_t v64 = v112;
            if ((v66 & 0x20) != 0) {
              goto LABEL_75;
            }
          }
          else
          {
            uint64_t v64 = v112;
          }
        }
        else
        {
          uint64_t v64 = 0;
          if ((*(_DWORD *)a5 & 0x10) != 0)
          {
LABEL_74:
            *(unsigned char *)(sub_1001E6484(v116) + 78) = 0;
            sub_1001E6484(v116);
            goto LABEL_75;
          }
        }
        *(unsigned char *)(sub_1001E6484(v116) + 78) = 0;
LABEL_75:
        if ((*(unsigned char *)a5 & 0x20) != 0 && *(unsigned __int8 *)(a5 + 25) > 1u)
        {
          int v78 = v48;
          int v79 = 0;
          BOOL v80 = 0;
          int v49 = 1;
        }
        else
        {
          if (v49 == 2)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Critical negotiation : disconnecting.", v68, v69, v70, v71, v72, v73, v74, v110);
              uint64_t v75 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v76 = v116;
            uint64_t v77 = 452;
LABEL_82:
            sub_1001E1430(v76, v77);
            return;
          }
          int v78 = v48;
          int v79 = 0;
          BOOL v80 = v49 == 0;
          if (!v49 && !a4)
          {
            int v49 = 0;
            int v79 = 1;
            *(unsigned char *)(sub_1001E6484(v116) + 27) = 1;
            BOOL v80 = 1;
          }
        }
        *(unsigned char *)(sub_1001E6484(v116) + 29) = a2;
        if (v111) {
          *(unsigned char *)(sub_1001E6484(v116) + 31) = 1;
        }
        if ((a4 & 1) == 0)
        {
          int v81 = *(unsigned __int8 *)(sub_1001E6484(v116) + 31);
          uint64_t v82 = sub_1001E6484(v116);
          if (v81) {
            *(unsigned char *)(v82 + 31) = 0;
          }
        }
        if (!v64)
        {
          uint64_t v64 = v112;
          int v97 = sub_1001F1800(v116, 1, (uint64_t)v112);
          if (v97 != 1)
          {
            if (v97 == 2)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Critical negotiation : disconnecting.", v98, v99, v100, v101, v102, v103, v104, v110);
                uint64_t v105 = sub_100050B4C(0x2Fu);
                if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
              uint64_t v76 = v116;
              if (v80) {
                uint64_t v77 = 0;
              }
              else {
                uint64_t v77 = (v49 + 450);
              }
              goto LABEL_82;
            }
            uint64_t v64 = 0;
          }
        }
        sub_1001E3C04(v116, v49, a4);
        if (v79)
        {
          if (*(unsigned char *)(sub_1001E6484(v116) + 26) == 3)
          {
            if (v78 != 5)
            {
              uint64_t v83 = *(unsigned __int16 *)(sub_1001E6484(v116) + 32);
              uint64_t v84 = sub_1001F5694(*((unsigned __int16 *)v116 + 2));
              if (v84)
              {
                uint64_t v85 = v84;
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Queue Tag serviced failed with status %!", v86, v87, v88, v89, v90, v91, v92, v85);
                  uint64_t v93 = sub_100050B4C(0x2Fu);
                  if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
                    sub_100744F6C();
                  }
                }
              }
              uint64_t v94 = *(void (**)(uint64_t, void, uint64_t, void))(sub_1001E6484(v116) + 96);
              uint64_t v95 = *((unsigned __int16 *)v116 + 2);
              uint64_t v96 = sub_1001E6484(v116);
              v94(v95, *(unsigned __int16 *)(v96 + 36), v83, 0);
            }
          }
          else if (!*(unsigned char *)(sub_1001E6484(v116) + 26))
          {
            uint64_t v106 = v116;
            __int16 v107 = *(_WORD *)(sub_1001E6484(v116) + 36);
            int v108 = *(unsigned __int16 *)(sub_1001E6484(v116) + 38);
            uint64_t v109 = sub_1001E6484(v116);
            sub_1001E2F9C(v106, v107, v108, *(unsigned __int16 *)(v109 + 40), (uint64_t)v64);
          }
        }
        return;
      }
      *(unsigned char *)(sub_1001E6484(v116) + 78) = 1;
LABEL_54:
      sub_1001E6484(v116);
      goto LABEL_55;
    }
    if (v54)
    {
      unsigned int v55 = *(unsigned __int8 *)(a5 + 20);
      if (v55 <= 1)
      {
        *(unsigned char *)(sub_1001E6484(v116) + 78) = v55;
        goto LABEL_54;
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"We don't support FCS.", v56, v57, v58, v59, v60, v61, v62, v110);
      uint64_t v63 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    int v49 = 1;
    goto LABEL_55;
  }
}

uint64_t sub_1001E3C04(unsigned int *a1, int a2, char a3)
{
  uint64_t v6 = *(unsigned char **)sub_1001E6484(a1);
  char v7 = *(unsigned char *)(sub_1001E6484(a1) + 29);
  uint64_t v8 = sub_1001E6484(a1);
  uint64_t result = sub_100202E24("aaamsfro", 5u, 0, v6, v7, v9, v10, v11, *(unsigned __int16 *)(v8 + 8));
  if (!a2 && (a3 & 1) == 0)
  {
    *(unsigned char *)(sub_1001E6484(a1) + 27) = 3;
    uint64_t result = sub_1001E6484(a1);
    if (*(unsigned char *)(result + 26) == 3)
    {
      uint64_t v13 = sub_1001E6484(a1);
      sub_100026DB4(*(unsigned int *)(v13 + 80));
      *(unsigned char *)(sub_1001E6484(a1) + 16) = 4;
      *(unsigned char *)(sub_1001E6484(a1) + 25) = 0;
      uint64_t result = sub_1001E6484(a1);
      *(unsigned char *)(result + 28) = 0;
    }
  }
  return result;
}

void sub_1001E3D4C(uint64_t a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, __int16 a10)
{
  uint64_t v69 = 0;
  memset(v68, 0, 44);
  if (sub_1001DD56C(a3, (uint64_t *)&v69))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"cid %d not found %!", v14, v15, v16, v17, v18, v19, v20, a3);
      uint64_t v21 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (!sub_1001E6484(v69))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v30, v31, v32, v33, v34, v35, v36, v67);
    uint64_t v37 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_13:
    sub_100744F6C();
    return;
  }
  if (*(void *)sub_1001E6484(v69) != a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ConnectMan_RecvConfigRsp unexpected CID", v22, v23, v24, v25, v26, v27, v28, v67);
      uint64_t v29 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_10074A5AC();
      }
    }
    return;
  }
  if (*(unsigned char *)(sub_1001E6484(v69) + 16) != 3 && *(unsigned char *)(sub_1001E6484(v69) + 16) != 5
    || *(unsigned char *)(sub_1001E6484(v69) + 26) != 2)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid state for configuration", v39, v40, v41, v42, v43, v44, v45, v67);
    int v46 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_13;
  }
  if (a10)
  {
    if (a8) {
      LODWORD(a8) = sub_1001F1ABC(v69, a8, 0, (uint64_t)v68);
    }
    if (a9) {
      char v38 = *a9;
    }
    else {
      char v38 = 0;
    }
    *(unsigned char *)(sub_1001E6484(v69) + 78) = v38;
    if (a8 != 2)
    {
      uint64_t v57 = v69;
      __int16 v58 = *(_WORD *)(sub_1001E6484(v69) + 36);
      int v59 = *(unsigned __int16 *)(sub_1001E6484(v69) + 38);
      uint64_t v60 = sub_1001E6484(v69);
      sub_1001E2F9C(v57, v58, v59, *(unsigned __int16 *)(v60 + 40), (uint64_t)v68);
      return;
    }
    int v47 = 2;
  }
  else
  {
    int v47 = 0;
  }
  uint64_t v48 = sub_1001E6484(v69);
  if (a10)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"config rsp = %!\n", v49, v50, v51, v52, v53, v54, v55, v47 | 0x1CCu);
      uint64_t v56 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1001E1430(v69, (v47 + 450));
  }
  else
  {
    int v61 = *(unsigned __int8 *)(v48 + 16);
    if ((a4 & 1) == 0)
    {
      *(unsigned char *)(sub_1001E6484(v69) + 26) = 3;
      if (*(unsigned char *)(sub_1001E6484(v69) + 27) == 3)
      {
        *(unsigned char *)(sub_1001E6484(v69) + 16) = 4;
        *(unsigned char *)(sub_1001E6484(v69) + 25) = 0;
        uint64_t v62 = sub_1001E6484(v69);
        sub_100026DB4(*(unsigned int *)(v62 + 80));
        *(unsigned char *)(sub_1001E6484(v69) + 28) = 0;
      }
    }
    if (*(unsigned char *)(sub_1001E6484(v69) + 26) == 3 && *(unsigned char *)(sub_1001E6484(v69) + 27) == 3 && v61 != 5)
    {
      uint64_t v63 = *(unsigned __int16 *)(sub_1001E6484(v69) + 32);
      uint64_t v64 = *(void (**)(uint64_t, void, uint64_t, void))(sub_1001E6484(v69) + 96);
      uint64_t v65 = *((unsigned __int16 *)v69 + 2);
      uint64_t v66 = sub_1001E6484(v69);
      v64(v65, *(unsigned __int16 *)(v66 + 36), v63, 0);
    }
  }
}

void sub_1001E40F4(unsigned char *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  int v47 = 0;
  if (sub_1001DD56C(a2, (uint64_t *)&v47))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No channel exists for CID %d (%!)", v8, v9, v10, v11, v12, v13, v14, a2);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100204800(a1, 2u, 0, a2, a3, a4, v13, v14);
    return;
  }
  if (!sub_1001E6484(v47))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v24, v25, v26, v27, v28, v29, v30, v46);
    uint64_t v31 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_15:
    sub_100744F6C();
    return;
  }
  if (*(unsigned __int16 *)(sub_1001E6484(v47) + 8) != a3)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid source CID %d", v32, v33, v34, v35, v36, v37, v38, a3);
    uint64_t v39 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_15;
  }
  if (*(unsigned char **)sub_1001E6484(v47) == a1)
  {
    *(unsigned char *)(sub_1001E6484(v47) + 29) = a4;
    uint64_t v40 = *(unsigned char **)sub_1001E6484(v47);
    char v41 = *(unsigned char *)(sub_1001E6484(v47) + 29);
    uint64_t v42 = *((unsigned __int16 *)v47 + 2);
    sub_1001E6484(v47);
    sub_100202E24("aa", 7u, 0, v40, v41, v43, v44, v45, v42);
    sub_1001DF3FC((uint64_t)v47, 431);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_ConnectMan_RecvDisconnectReq unexpected CID", v16, v17, v18, v19, v20, v21, v22, v46);
    uint64_t v23 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_10074A5AC();
    }
  }
}

void sub_1001E4310(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v45 = 0;
  if (sub_1001DD56C(a2, (uint64_t *)&v45))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No channel exists for CID %d (%!)", v8, v9, v10, v11, v12, v13, v14, a2);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1002365C0(a1, 2, 0, a2, a3, a4);
    return;
  }
  if (!sub_1001E6484(v45))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v24, v25, v26, v27, v28, v29, v30, v44);
    uint64_t v31 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_15:
    sub_100744F6C();
    return;
  }
  if (*(unsigned __int16 *)(sub_1001E6484(v45) + 8) != a3)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid source CID %d", v32, v33, v34, v35, v36, v37, v38, a3);
    uint64_t v39 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_15;
  }
  if (*(void *)sub_1001E6484(v45) == a1)
  {
    *(unsigned char *)(sub_1001E6484(v45) + 29) = a4;
    uint64_t v40 = *(void *)sub_1001E6484(v45);
    char v41 = *(unsigned char *)(sub_1001E6484(v45) + 29);
    __int16 v42 = *((_WORD *)v45 + 2);
    uint64_t v43 = sub_1001E6484(v45);
    sub_10023695C(v40, v41, v42, *(_WORD *)(v43 + 8));
    sub_1001DF3FC((uint64_t)v45, 431);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_ConnectMan_RecvDisconnectReq unexpected CID", v16, v17, v18, v19, v20, v21, v22, v44);
    uint64_t v23 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_10074A5AC();
    }
  }
}

void sub_1001E451C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v25 = 0;
  if (!sub_1001DD56C(a3, (uint64_t *)&v25)
    && sub_1001E6484(v25)
    && *(unsigned char *)(sub_1001E6484(v25) + 16) == 6
    && *(unsigned __int16 *)(sub_1001E6484(v25) + 8) == a2
    && *((unsigned __int16 *)v25 + 2) == a3)
  {
    if (*(void *)sub_1001E6484(v25) == a1)
    {
      *(unsigned char *)(sub_1001E6484(v25) + 28) = 0;
      uint64_t v22 = v25;
      uint64_t v23 = sub_1001E6484(v25);
      sub_1001DF3FC((uint64_t)v22, *(unsigned int *)(v23 + 20));
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ConnectMan_RecvDisconnectRsp unexpected CID", v14, v15, v16, v17, v18, v19, v20, v24);
      uint64_t v21 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_10074A5AC();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid packet", v6, v7, v8, v9, v10, v11, v12, v24);
    uint64_t v13 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1001E4664(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v23 = 0;
  if (!sub_1001DD56C(a2, (uint64_t *)&v23)
    && sub_1001E6484(v23)
    && *(unsigned char *)(sub_1001E6484(v23) + 16) == 6
    && *(unsigned __int16 *)(sub_1001E6484(v23) + 8) == a3
    && *((unsigned __int16 *)v23 + 2) == a2)
  {
    if (*(void *)sub_1001E6484(v23) == a1)
    {
      sub_1001DF3FC((uint64_t)v23, 436);
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_ConnectMan_RecvDisconnectRsp unexpected CID", v14, v15, v16, v17, v18, v19, v20, v22);
      uint64_t v21 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_10074A5AC();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid packet", v6, v7, v8, v9, v10, v11, v12, v22);
    uint64_t v13 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1001E4794(uint64_t a1, int a2, __int16 a3, unsigned int a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v84 = 0;
  if (byte_100A05308)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Rejecting connect attempt, PTS error code is overriden to %d", v11, v12, v13, v14, v15, v16, v17, byte_100A05308);
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    __int16 v19 = byte_100A05308;
    uint64_t v20 = a1;
    char v21 = a7;
    __int16 v22 = a3;
    return sub_100236084(v20, v21, v22, 0, 0, 0, v19);
  }
  __int16 v27 = a2;
  if ((a2 - 1) >= 0x7F && (a2 & 0xFF80) != 0x80)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! - rejecting connect attempt due to invalid PSM %d", v28, v29, v30, v31, v32, v33, v34, 582);
      uint64_t v35 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_11:
    uint64_t v20 = a1;
    char v21 = a7;
    __int16 v22 = a3;
    __int16 v19 = 2;
    return sub_100236084(v20, v21, v22, 0, 0, 0, v19);
  }
  if ((a3 & 0xFFC0) != 0x40)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! - Rejecting connect attempt due to source CID out of range", v44, v45, v46, v47, v48, v49, v50, 589);
      uint64_t v51 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v20 = a1;
    char v21 = a7;
    __int16 v22 = a3;
    __int16 v19 = 9;
    return sub_100236084(v20, v21, v22, 0, 0, 0, v19);
  }
  uint64_t v83 = 0;
  sub_1001DD96C(a3, a1, &v83);
  if (v83)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! - Rejecting connect attempt due to source CID already connected", v36, v37, v38, v39, v40, v41, v42, 10);
      uint64_t v43 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v20 = a1;
    char v21 = a7;
    __int16 v22 = a3;
    __int16 v19 = 10;
    return sub_100236084(v20, v21, v22, 0, 0, 0, v19);
  }
  if (sub_1001DE600(2u, (uint64_t *)&v84, 1))
  {
    if (!sub_100058654()) {
      goto LABEL_32;
    }
    sub_100056E24((uint64_t)"%! - rejecting connect attempt due to ailure to allocate channel", v52, v53, v54, v55, v56, v57, v58, 584);
    int v59 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  uint64_t v60 = v84;
  *((_WORD *)v84 + 3) = v27;
  uint64_t v61 = sub_1001E6484(v60);
  __int16 v62 = *(_WORD *)(a1 + 52);
  *(_DWORD *)(v61 + 10) = *(_DWORD *)(a1 + 48);
  *(_WORD *)(v61 + 14) = v62;
  uint64_t v63 = sub_1001E6484(v84);
  int v64 = *(_DWORD *)(a1 + 51);
  *(_DWORD *)(v63 + 104) = *(_DWORD *)(a1 + 48);
  *(_DWORD *)(v63 + 107) = v64;
  *(unsigned char *)(sub_1001E6484(v84) + 24) = 1;
  *(void *)sub_1001E6484(v84) = a1;
  *(_WORD *)(sub_1001E6484(v84) + 8) = a3;
  *(unsigned char *)(sub_1001E6484(v84) + 29) = a7;
  if (14 * a5 < a4) {
    LOWORD(a4) = 14 * a5;
  }
  *(_WORD *)(sub_1001E6484(v84) + 32) = a4;
  *(_WORD *)(sub_1001E6484(v84) + 60) = a5;
  if (sub_1001D9CC0(v84, a6))
  {
    sub_1001DEC18((uint64_t)v84);
    if (!sub_100058654()) {
      goto LABEL_32;
    }
    sub_100056E24((uint64_t)"%! - rejecting connect attempt due to failure to init remote parameters, returned %!(%d), ejecting connection", v65, v66, v67, v68, v69, v70, v71, 584);
    uint64_t v72 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v72, OS_LOG_TYPE_ERROR)) {
      goto LABEL_32;
    }
LABEL_31:
    sub_100744F6C();
LABEL_32:
    uint64_t v20 = a1;
    char v21 = a7;
    __int16 v22 = a3;
    __int16 v19 = 4;
    return sub_100236084(v20, v21, v22, 0, 0, 0, v19);
  }
  *(unsigned char *)(sub_1001E6484(v84) + 16) = 2;
  uint64_t v74 = sub_1001E6484(v84);
  uint64_t result = sub_1001E667C(v74 + 104, *((unsigned __int16 *)v84 + 2), *((unsigned __int16 *)v84 + 3), a7, a8);
  if (result)
  {
    sub_1001DEC18((uint64_t)v84);
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! - rejecting connect attempt due to failure to find a handler for this channel", v75, v76, v77, v78, v79, v80, v81, 582);
      uint64_t v82 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_11;
  }
  return result;
}

void sub_1001E4BE0(uint64_t a1, __int16 a2, unsigned int a3, int a4, int a5, int a6, unsigned int a7)
{
  uint64_t v104 = 0;
  if (sub_1001DDC0C(a1, a7, &v104))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"RecvLeConnectRsp, unknown identifier 0x%x, ignoring", v14, v15, v16, v17, v18, v19, v20, a7);
      char v21 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (!sub_1001E6484(v104))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packets.", v30, v31, v32, v33, v34, v35, v36, v103);
    uint64_t v37 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_13:
    sub_100744F6C();
    return;
  }
  if (*(void *)sub_1001E6484(v104) != a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"RecvLeConnectRsp not excpected for this ACL handle", v22, v23, v24, v25, v26, v27, v28, v103);
      uint64_t v29 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_10074A534();
      }
    }
    return;
  }
  if (*(unsigned char *)(sub_1001E6484(v104) + 16) != 1)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"RecvLeConnectRsp, unexpected connect RSP, ignoring", v50, v51, v52, v53, v54, v55, v56, v103);
    uint64_t v57 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_13;
  }
  if ((a6 - 7) >= 2 && a6 != 5)
  {
    if (a6)
    {
      uint64_t v69 = v104;
      uint64_t v70 = (a6 + 580);
    }
    else
    {
      if ((a2 & 0xFFC0) == 0x40)
      {
        *(_WORD *)(sub_1001E6484(v104) + 8) = a2;
        if (14 * a4 >= a3) {
          __int16 v38 = a3;
        }
        else {
          __int16 v38 = 14 * a4;
        }
        *(_WORD *)(sub_1001E6484(v104) + 32) = v38;
        *(_WORD *)(sub_1001E6484(v104) + 60) = a4;
        unsigned __int16 v39 = sub_1001D9CC0(v104, a5);
        uint64_t v40 = v39;
        if (v39)
        {
          unsigned __int16 v41 = v39;
          if (!sub_100058654()) {
            goto LABEL_51;
          }
          sub_100056E24((uint64_t)"LE_L2CAP_InitRemoteParams returned %d\n", v42, v43, v44, v45, v46, v47, v48, v40);
          uint64_t v49 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
            goto LABEL_51;
          }
        }
        else
        {
          unsigned __int16 v79 = sub_1001F1F8C(v104, 5, 0);
          uint64_t v80 = v79;
          if (v79)
          {
            unsigned __int16 v41 = v79;
            if (!sub_100058654()) {
              goto LABEL_51;
            }
            sub_100056E24((uint64_t)"BT_L2CAP_Flow_InitChannel returned %d\n", v81, v82, v83, v84, v85, v86, v87, v80);
            uint64_t v88 = sub_100050B4C(0x2Fu);
            if (!os_log_type_enabled(v88, OS_LOG_TYPE_ERROR)) {
              goto LABEL_51;
            }
          }
          else
          {
            unsigned __int16 v41 = sub_1001F3B3C(*((unsigned __int16 *)v104 + 2), 15, 5u, 0, (uint64_t *)v104 + 12, v104[19]);
            if (!v41) {
              goto LABEL_52;
            }
            if (!sub_100058654()
              || (sub_100056E24((uint64_t)"BT_L2CAP_Queue_Register returned %d\n", v89, v90, v91, v92, v93, v94, v95, v41), uint64_t v96 = sub_100050B4C(0x2Fu), !os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)))
            {
LABEL_51:
              sub_1001DF3FC((uint64_t)v104, 4);
LABEL_52:
              if (!v41)
              {
                int v97 = (uint64_t *)sub_1001E6484(v104);
                uint64_t v98 = sub_1001F667C(*v97);
                *(unsigned char *)(sub_1001E6484(v104) + 16) = 4;
                uint64_t v99 = *(void (**)(uint64_t, uint64_t, void, uint64_t))(sub_1001E6484(v104) + 96);
                uint64_t v100 = *((unsigned __int16 *)v104 + 2);
                uint64_t v101 = *(unsigned __int16 *)(sub_1001E6484(v104) + 36);
                uint64_t v102 = sub_1001E6484(v104);
                v99(v100, v101, *(unsigned __int16 *)(v102 + 32), v98);
              }
              return;
            }
          }
        }
        sub_100744F6C();
        goto LABEL_51;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"destination CID out of range", v71, v72, v73, v74, v75, v76, v77, v103);
        uint64_t v78 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v69 = v104;
      uint64_t v70 = 9;
    }
    sub_1001DF3FC((uint64_t)v69, v70);
    return;
  }
  uint64_t v58 = sub_100022FE8(2uLL);
  if (!v58)
  {
    sub_1001DEC18((uint64_t)v104);
    sub_1001DF3FC((uint64_t)v104, 1164);
  }
  _WORD *v58 = *((_WORD *)v104 + 2);
  int v59 = *(void **)(a1 + 224);
  if (!v59)
  {
    int v59 = sub_10025959C(0, 0);
    *(void *)(a1 + 224) = v59;
  }
  sub_100259764((uint64_t)v59, (uint64_t)v58, 0);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Start Pairing", v60, v61, v62, v63, v64, v65, v66, v103);
    uint64_t v67 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v68 = sub_100050714();
      *(_DWORD *)int buf = 136446210;
      uint64_t v106 = v68;
      _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_10023F5B4(a1, 1);
}

uint64_t sub_1001E50D4(uint64_t a1, __int16 a2)
{
  uint64_t v2 = 0;
  while (qword_100A052D8[v2] != a1)
  {
    v2 += 2;
    if (v2 == 6) {
      goto LABEL_6;
    }
  }
  qword_100A052D8[v2] = 0;
LABEL_6:
  uint64_t v3 = 0;
  while (1)
  {
    uint64_t v4 = qword_100A052D8[v3];
    if (!v4) {
      break;
    }
    v3 += 2;
    if (v3 == 6) {
      return 104;
    }
  }
  int v5 = &qword_100A052D8[v3];
  *int v5 = a1;
  *((_WORD *)v5 + 4) = a2;
  return v4;
}

uint64_t sub_1001E5134(uint64_t a1)
{
  uint64_t v1 = 0;
  while (qword_100A052D8[v1] != a1)
  {
    v1 += 2;
    if (v1 == 6) {
      return 404;
    }
  }
  uint64_t result = 0;
  qword_100A052D8[v1] = 0;
  return result;
}

uint64_t sub_1001E516C(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (v1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"L2CAP Config Timeout on cid %d, psm %d", v2, v3, v4, v5, v6, v7, v8, *(unsigned __int16 *)(v1 + 4));
      uint64_t v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    sub_10025B8C0();
  }
  if (*(_DWORD *)v1 != 2
    || *(unsigned char *)(sub_1001E6484((unsigned int *)v1) + 16) != 3
    || *(unsigned char *)(sub_1001E6484((unsigned int *)v1) + 26)
    || *(unsigned char *)(sub_1001E6484((unsigned int *)v1) + 27)
    || !*(unsigned char *)(sub_1001E6484((unsigned int *)v1) + 24))
  {
    if (sub_100058654())
    {
      if (*(_DWORD *)v1 == 2)
      {
        uint64_t v17 = sub_1001E6484((unsigned int *)v1);
        uint64_t v25 = (const char *)sub_10025B48C(v17 + 10, v18, v19, v20, v21, v22, v23, v24);
      }
      else
      {
        uint64_t v25 = "group";
      }
      sub_100056E24((uint64_t)"Configuration process timed out, remote device %s", v10, v11, v12, v13, v14, v15, v16, (uint64_t)v25);
      uint64_t v26 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v27 = 464;
    return sub_1001E1430((unsigned int *)v1, v27);
  }
  sub_1001E2EE0(v1);
  if (sub_1001F1A9C() && (*(unsigned char *)(*(void *)sub_1001E6484((unsigned int *)v1) + 229) & 0x20) != 0) {
    sub_1001E6484((unsigned int *)v1);
  }
  __int16 v29 = *(_WORD *)(sub_1001E6484((unsigned int *)v1) + 36);
  int v30 = *(unsigned __int16 *)(sub_1001E6484((unsigned int *)v1) + 38);
  uint64_t v31 = sub_1001E6484((unsigned int *)v1);
  uint64_t result = sub_1001E2F9C((unsigned int *)v1, v29, v30, *(unsigned __int16 *)(v31 + 40), 0);
  if (result)
  {
    uint64_t v27 = result;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ConfigReqHelper failed %!", v32, v33, v34, v35, v36, v37, v38, v27);
      unsigned __int16 v39 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return sub_1001E1430((unsigned int *)v1, v27);
  }
  return result;
}

void sub_1001E5380(uint64_t a1)
{
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to write FlushTO %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1001E542C(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = 0;
  if (!a3) {
    sub_10025B8C0();
  }
  int v49 = 0;
  memset(v39, 0, sizeof(v39));
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v47 = 0;
  if (a2 == 2)
  {
    unsigned int v6 = *(unsigned __int16 *)(a3 + 4);
    sub_1000226D0((uint64_t)&v40 + 8, 2u);
    char v7 = v6;
    unsigned int v8 = v6 >> 8;
    goto LABEL_5;
  }
  uint64_t v9 = sub_1001DD56C(a2, (uint64_t *)&v48);
  if (v9) {
    return v9;
  }
  if (*v48 == 3)
  {
    unsigned int v10 = *(unsigned __int16 *)(a3 + 4);
    if (v10 <= *(unsigned __int16 *)sub_1001E688C(v48))
    {
      sub_1000226D0((uint64_t)&v40 + 8, 2u);
      if (a2 == 43)
      {
        LOBYTE(v39[0]) = a1[129] == 0;
LABEL_17:
        sub_10025C92C((unsigned __int8 *)&v40 + 8, a3);
        if (v48)
        {
          uint64_t v20 = *((void *)v48 + 16);
          *((void *)v48 + 16) = 0;
        }
        else
        {
          uint64_t v20 = 0;
        }
        *(void *)&long long v40 = v20;
        uint64_t v21 = sub_1001F68CC((uint64_t)v39, a1, 0, a2);
        uint64_t v9 = v21;
        if (v21)
        {
          if (v21 != 412)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"OI_ConnectMan_WriteMBUF %!", v22, v23, v24, v25, v26, v27, v28, v9);
              __int16 v29 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
          }
          sub_10025C480((uint64_t)&v40 + 8);
        }
        return v9;
      }
      char v7 = v10;
      unsigned int v8 = v10 >> 8;
LABEL_5:
      LOBYTE(v49) = v7;
      BYTE1(v49) = v8;
      HIWORD(v49) = a2;
      sub_100022798((unsigned __int8 *)&v40 + 8, (char *)&v49, 4uLL, 0);
      if (a2 == 2)
      {
        LOBYTE(v39[0]) = 1;
        *(void *)&long long v41 = 0;
        if (v48)
        {
          *(void *)&long long v40 = *((void *)v48 + 16);
          *((void *)v48 + 16) = 0;
        }
        else
        {
          *(void *)&long long v40 = 0;
        }
      }
      else
      {
        LOBYTE(v39[0]) = *(__int16 *)(sub_1001E688C(v48) + 2) == -1;
        *(void *)&long long v41 = v48;
      }
      goto LABEL_17;
    }
    if (sub_100058654())
    {
      uint64_t v11 = (unsigned __int16 *)sub_1001E688C(v48);
      sub_100056E24((uint64_t)"MTU size (%d) exceeded! - data length = %d", v12, v13, v14, v15, v16, v17, v18, *v11);
      uint64_t v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 472;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"CID %d is not a fixed channel", v30, v31, v32, v33, v34, v35, v36, a2);
      uint64_t v37 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 532;
  }
}

void sub_1001E56F8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v46 = 0;
  if (sub_1001DD56C(a2, (uint64_t *)&v46))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can't find channel %d, dropping packet.", v10, v11, v12, v13, v14, v15, v16, a2);
      uint64_t v17 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v18 = v46;
    v46[21] += a4;
    if ((*(unsigned char *)(sub_1001E688C(v18) + 4) & 1) != 0 && !*(unsigned char *)(a1 + 2)
      || (*(unsigned char *)(sub_1001E688C(v46) + 4) & 2) != 0 && *(unsigned char *)(a1 + 2) == 4)
    {
      uint64_t v19 = sub_1001E688C(v46);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 24))(a1, a3, a4, a5);
    }
    else
    {
      sub_10025B8C0();
      if (sub_100058654())
      {
        sub_1001E688C(v46);
        sub_100056E24((uint64_t)"Fixed Channel 0x%x on wrong physical link 0x%x, should be 0x%x", v27, v28, v29, v30, v31, v32, v33, a2);
        uint64_t v34 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_1007456E8();
        }
      }
      uint64_t v35 = sub_10019304C(5u, v20, v21, v22, v23, v24, v25, v26, a1);
      uint64_t v36 = sub_10019F308(a1, v35);
      if (v36)
      {
        uint64_t v37 = v36;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Disconnect failed with status %!", v38, v39, v40, v41, v42, v43, v44, v37);
          long long v45 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            sub_1007456E8();
          }
        }
      }
    }
  }
}

uint64_t sub_1001E58C8()
{
  uint64_t v0 = (unsigned __int16 *)sub_10025B218(0x2Fu);
  qword_100A05310 = (uint64_t)sub_10010CE48(16 * *v0);
  if (qword_100A05310) {
    return 0;
  }
  else {
    return 106;
  }
}

uint64_t sub_1001E5904(unsigned int a1, uint64_t a2)
{
  uint64_t v10 = 0;
  if (a2)
  {
    if (sub_1001DD56C(a1, (uint64_t *)&v10)) {
      return 434;
    }
    uint64_t v4 = *(void **)sub_1001E67E4(v10);
    if (!v4) {
      return 434;
    }
    if (*(_DWORD *)v4 != *(_DWORD *)a2 || *((unsigned __int16 *)v4 + 2) != *(unsigned __int16 *)(a2 + 4))
    {
      while (1)
      {
        unsigned int v6 = v4;
        uint64_t v4 = (void *)v4[2];
        if (!v4) {
          return 434;
        }
        if (*(_DWORD *)v4 == *(_DWORD *)a2 && *((unsigned __int16 *)v4 + 2) == *(unsigned __int16 *)(a2 + 4)) {
          goto LABEL_18;
        }
      }
    }
    unsigned int v6 = 0;
LABEL_18:
    uint64_t v8 = v4[2];
    if (v6) {
      uint64_t v9 = v6 + 2;
    }
    else {
      uint64_t v9 = (void *)sub_1001E67E4(v10);
    }
    *uint64_t v9 = v8;
    sub_10017BD74(v4[1], 0x13u);
    sub_100023010(v4);
    return 0;
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

uint64_t sub_1001E59E4(uint64_t a1, long long *a2, uint64_t a3)
{
  if (!a3) {
    sub_10025B8C0();
  }
  uint64_t v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v11 = 0u;
  memset(v10, 0, sizeof(v10));
  if (a2)
  {
    int v6 = 0;
  }
  else
  {
    if (!*(void *)sub_1001E67E4((unsigned int *)a1)) {
      return 426;
    }
    int v6 = 2;
  }
  v19[0] = *(_WORD *)(a3 + 4) + 2;
  v19[1] = 2;
  v19[2] = *(_WORD *)(a1 + 6);
  sub_1000226D0((uint64_t)&v11 + 8, 2u);
  sub_100022798((unsigned __int8 *)&v11 + 8, (char *)v19, 6uLL, 0);
  sub_10025C92C((unsigned __int8 *)&v11 + 8, a3);
  LOBYTE(v10[0]) = 0;
  *(void *)&long long v11 = 0;
  *(void *)&long long v12 = a1;
  if (a2) {
    char v7 = a2;
  }
  else {
    char v7 = &xmmword_100A04B80;
  }
  uint64_t v8 = sub_1001F68CC((uint64_t)v10, v7, v6, *(_WORD *)(a1 + 4));
  if (v8) {
    sub_10025C480((uint64_t)&v11 + 8);
  }
  return v8;
}

void sub_1001E5B0C(uint64_t a1, _WORD *a2, unsigned int a3)
{
  if (a3 >= 6)
  {
    if (!a2) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/group.c", 509, "buf");
    }
    __int16 v4 = a3;
    uint64_t v5 = (unsigned __int16)*a2;
    if (!*a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"psm should be non-zero", v6, v7, v8, v9, v10, v11, v12, v19);
        long long v13 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_1007457DC(v13);
        }
      }
    }
    if (*(_WORD *)sub_10025B218(0x2Fu))
    {
      uint64_t v14 = 0;
      unint64_t v15 = 0;
      long long v16 = a2 + 1;
      uint64_t v17 = (unsigned __int16)(v4 - 2);
      do
      {
        if (v5 == *(unsigned __int16 *)(qword_100A05310 + v14))
        {
          uint64_t v18 = *(void (**)(uint64_t, _WORD *, uint64_t))(qword_100A05310 + v14 + 8);
          if (v18) {
            v18(v5, v16, v17);
          }
        }
        ++v15;
        v14 += 16;
      }
      while (v15 < *(unsigned __int16 *)sub_10025B218(0x2Fu));
    }
  }
}

uint64_t sub_1001E5C1C(uint64_t a1)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_L2CAP_Init: configuration parameter is deprecated", v2, v3, v4, v5, v6, v7, v8, v67);
      uint64_t v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B260(a1, 47);
  }
  if (HIDWORD(xmmword_100A19860)) {
    return 0;
  }
  if (!sub_10025B218(0x2Fu)) {
    sub_10025B8C0();
  }
  if (!sub_10025B218(0x2Fu)) {
    return 127;
  }
  uint64_t v12 = (unsigned __int16 *)sub_10025B218(0x2Fu);
  qword_100A05318 = (uint64_t)sub_10010CE48(32 * *v12);
  if (!qword_100A05318) {
    return 106;
  }
  uint64_t v13 = sub_1001DD458();
  if (v13)
  {
    uint64_t v10 = v13;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ChanMan_Init failed %!", v14, v15, v16, v17, v18, v19, v20, v10);
      uint64_t v21 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
LABEL_39:
      }
        sub_100744F6C();
    }
  }
  else
  {
    uint64_t v22 = sub_1001E58C8();
    if (v22)
    {
      uint64_t v10 = v22;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_GroupMan_Init failed %!", v23, v24, v25, v26, v27, v28, v29, v10);
        uint64_t v30 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          goto LABEL_39;
        }
      }
    }
    else
    {
      uint64_t v31 = sub_100202A9C();
      if (v31)
      {
        uint64_t v10 = v31;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_SignalMan_Init failed %!", v32, v33, v34, v35, v36, v37, v38, v10);
          uint64_t v39 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
            goto LABEL_39;
          }
        }
      }
      else
      {
        uint64_t v40 = sub_1001F640C();
        if (v40)
        {
          uint64_t v10 = v40;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Sar_Init failed %!", v41, v42, v43, v44, v45, v46, v47, v10);
            uint64_t v48 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
              goto LABEL_39;
            }
          }
        }
        else
        {
          uint64_t v49 = sub_1001F5700();
          if (v49)
          {
            uint64_t v10 = v49;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Queue_Init failed %!", v50, v51, v52, v53, v54, v55, v56, v10);
              uint64_t v57 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
                goto LABEL_39;
              }
            }
          }
          else
          {
            if (!BYTE9(xmmword_100A19600) || (sub_1001DFF5C(), !v58))
            {
              uint64_t v10 = 0;
              HIDWORD(xmmword_100A19860) = 1;
              return v10;
            }
            uint64_t v10 = v58;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"LE_SecurityCbInit failed %!", v59, v60, v61, v62, v63, v64, v65, v10);
              uint64_t v66 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
                goto LABEL_39;
              }
            }
          }
        }
      }
    }
  }
  return v10;
}

uint64_t sub_1001E5F0C(unsigned __int16 *a1)
{
  for (unsigned __int16 i = 192; ; ++i)
  {
    unsigned int v3 = i;
    if ((sub_1001E5F64(i) & 1) == 0) {
      break;
    }
    if (v3 >= 0xFF) {
      return 104;
    }
  }
  uint64_t result = 0;
  *a1 = i;
  return result;
}

uint64_t sub_1001E5F64(int a1)
{
  if (!*(_WORD *)sub_10025B218(0x2Fu)) {
    return 0;
  }
  uint64_t v2 = 0;
  unint64_t v3 = 0;
  while (*(unsigned __int16 *)(qword_100A05318 + v2) != a1 || *(unsigned char *)(qword_100A05318 + v2 + 24) != 1)
  {
    ++v3;
    v2 += 32;
    if (v3 >= *(unsigned __int16 *)sub_10025B218(0x2Fu)) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1001E5FF0(int a1, uint64_t a2)
{
  if (!HIDWORD(xmmword_100A19860)) {
    sub_10025B8C0();
  }
  if ((a1 & 0x1010101) != 1) {
    return 482;
  }

  return sub_1001E6064(a1, 0, a2, 0);
}

uint64_t sub_1001E6064(int a1, char a2, uint64_t a3, uint64_t a4)
{
  if (sub_1001E63FC(a1) & 1) != 0 || (sub_1001E5F64(a1)) {
    return 402;
  }
  if (*(_WORD *)sub_10025B218(0x2Fu))
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    while (*(_WORD *)(qword_100A05318 + v9))
    {
      ++v10;
      v9 += 32;
      if (v10 >= *(unsigned __int16 *)sub_10025B218(0x2Fu)) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    uint64_t v19 = qword_100A05318 + v9;
    *(_WORD *)uint64_t v19 = a1;
    *(void *)(v19 + 8) = a3;
    *(void *)(v19 + 16) = a4;
    *(unsigned char *)(v19 + 24) = a2;
  }
  else
  {
LABEL_8:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not register L2CAP: no resources.", v11, v12, v13, v14, v15, v16, v17, v20);
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 104;
  }
  return result;
}

uint64_t sub_1001E6164(int a1, uint64_t a2)
{
  if (!HIDWORD(xmmword_100A19860)) {
    sub_10025B8C0();
  }
  if ((a1 - 1) >= 0x7F && (a1 & 0xFF80) != 0x80) {
    return 482;
  }

  return sub_1001E6064(a1, 1, 0, a2);
}

uint64_t sub_1001E61E4(int a1)
{
  return sub_1001E61EC(a1, 0);
}

uint64_t sub_1001E61EC(int a1, int a2)
{
  uint64_t v4 = sub_1001DD44C();
  if (!*(_WORD *)sub_10025B218(0x2Fu)) {
    return 120;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  while (*(unsigned __int16 *)(qword_100A05318 + v5) != a1 || *(unsigned __int8 *)(qword_100A05318 + v5 + 24) != a2)
  {
    ++v6;
    v5 += 32;
    if (v6 >= *(unsigned __int16 *)sub_10025B218(0x2Fu)) {
      return 120;
    }
  }
  if (*(_WORD *)(sub_10025B218(0x2Fu) + 2))
  {
    int v8 = 0;
    while (*(_DWORD *)v4 != 2
         || !*(unsigned char *)(sub_1001E6484((unsigned int *)v4) + 16)
         || !*(unsigned char *)(sub_1001E6484((unsigned int *)v4) + 24)
         || *(unsigned __int16 *)(v4 + 6) != a1)
    {
      v4 += 144;
      if (++v8 >= *(unsigned __int16 *)(sub_10025B218(0x2Fu) + 2)) {
        goto LABEL_14;
      }
    }
    return 141;
  }
  else
  {
LABEL_14:
    uint64_t result = 0;
    uint64_t v9 = qword_100A05318 + v5;
    *(_WORD *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    *(void *)(v9 + 16) = 0;
    *(unsigned char *)(v9 + 24) = 0;
  }
  return result;
}

uint64_t sub_1001E6310(int a1)
{
  return sub_1001E61EC(a1, 1);
}

uint64_t sub_1001E6318(_WORD *a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  char v2 = 0;
  int v3 = 61435;
  int v4 = 4101;
  do
  {
    if (v2) {
      return 0;
    }
    if ((v4 & 0x101) != 1) {
      sub_10025B8C0();
    }
    char v5 = sub_1001E63FC((unsigned __int16)v4);
    if ((v5 & 1) == 0) {
      *a1 = v4;
    }
    char v2 = v5 ^ 1;
    unsigned __int16 v6 = v4 + 2;
    if (((v4 + 2) & 0x100) != 0) {
      unsigned __int16 v6 = v4 + 258;
    }
    if (v6 <= 0x1005u) {
      int v4 = 4101;
    }
    else {
      int v4 = v6;
    }
    --v3;
  }
  while (v3);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to allocate PSM: no resources.", v7, v8, v9, v10, v11, v12, v13, v16);
    uint64_t v14 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 104;
}

uint64_t sub_1001E63FC(int a1)
{
  if (!*(_WORD *)sub_10025B218(0x2Fu)) {
    return 0;
  }
  uint64_t v2 = 0;
  unint64_t v3 = 0;
  while (*(unsigned __int16 *)(qword_100A05318 + v2) != a1 || *(unsigned char *)(qword_100A05318 + v2 + 24))
  {
    ++v3;
    v2 += 32;
    if (v3 >= *(unsigned __int16 *)sub_10025B218(0x2Fu)) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1001E6484(unsigned int *a1)
{
  int v2 = *a1;
  if (*a1 != 2 && v2 != 4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid access: type %d, cid %d, psm %d", v4, v5, v6, v7, v8, v9, v10, *a1);
      uint64_t v11 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    int v2 = *a1;
  }
  if (v2 != 2 && v2 != 4) {
    sub_10025B8C0();
  }
  uint64_t result = *((void *)a1 + 14);
  if (!result)
  {
    sub_10025B8C0();
    return *((void *)a1 + 14);
  }
  return result;
}

uint64_t sub_1001E6534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_WORD *)sub_10025B218(0x2Fu))
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    while (*(unsigned __int16 *)(qword_100A05318 + v6) != a3 || *(unsigned char *)(qword_100A05318 + v6 + 24))
    {
      ++v7;
      v6 += 32;
      if (v7 >= *(unsigned __int16 *)sub_10025B218(0x2Fu)) {
        goto LABEL_6;
      }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(qword_100A05318 + v6 + 8))(a3, a1, a2);
    return 0;
  }
  else
  {
LABEL_6:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! (%d over %d", v8, v9, v10, v11, v12, v13, v14, 407);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"addr %:", v16, v17, v18, v19, v20, v21, v22, a1);
      uint64_t v23 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 407;
  }
}

uint64_t sub_1001E667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(_WORD *)sub_10025B218(0x2Fu))
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    while (*(unsigned __int16 *)(qword_100A05318 + v9) != a3 || *(unsigned char *)(qword_100A05318 + v9 + 24) != 1)
    {
      ++v10;
      v9 += 32;
      if (v10 >= *(unsigned __int16 *)sub_10025B218(0x2Fu)) {
        goto LABEL_6;
      }
    }
    v28[0] = 0;
    v28[1] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(qword_100A05318 + v9 + 16))(a3, a1, a2, a5, v28);
    return 0;
  }
  else
  {
LABEL_6:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%! (%d over %d)", v11, v12, v13, v14, v15, v16, v17, 407);
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"addr %:", v19, v20, v21, v22, v23, v24, v25, a1);
      uint64_t v26 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 407;
  }
}

uint64_t sub_1001E67E4(unsigned int *a1)
{
  if (*a1 != 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid access: type %d, cid %d, psm %d", v2, v3, v4, v5, v6, v7, v8, *a1);
      uint64_t v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (*a1 != 1) {
      sub_10025B8C0();
    }
  }
  uint64_t result = *((void *)a1 + 13);
  if (!result)
  {
    sub_10025B8C0();
    return *((void *)a1 + 13);
  }
  return result;
}

uint64_t sub_1001E688C(unsigned int *a1)
{
  if (*a1 != 3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid access: type %d, cid %d, psm %d", v2, v3, v4, v5, v6, v7, v8, *a1);
      uint64_t v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (*a1 != 3) {
      sub_10025B8C0();
    }
  }
  uint64_t result = *((void *)a1 + 15);
  if (!result)
  {
    sub_10025B8C0();
    return *((void *)a1 + 15);
  }
  return result;
}

uint64_t sub_1001E6934()
{
  return byte_100A05320;
}

uint64_t sub_1001E6940(uint64_t result)
{
  byte_100A05320 = result;
  return result;
}

uint64_t sub_1001E694C(uint64_t *a1, void *a2)
{
  if (getenv("BT_HCI_TRANSPORT"))
  {
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    *(_OWORD *)__str = 0u;
    long long v16 = 0u;
    __strlcpy_chk();
    uint64_t v4 = strtok(__str, ":");
    if (v4)
    {
      uint64_t v5 = v4;
      sub_10025B778("Searching for transport: \"%s\"\n", v4);
      uint64_t v6 = (uint64_t *)&off_10099EF00;
      do
      {
        uint64_t v7 = *v6;
        if (!*v6)
        {
          sub_10025B778("FATAL ERROR - HCI Transport\t%s could not be matched.\n", v5);
          return 1065;
        }
        ++v6;
      }
      while (strcmp(*(const char **)(v7 + 8), v5));
      uint64_t v8 = strtok(0, ":");
      if (v8)
      {
        uint64_t v9 = sub_1001E6C5C(v8);
        if (!v9) {
          return 1065;
        }
        uint64_t v10 = v9;
        uint64_t v11 = strtok(0, ":");
        if (v11) {
          *(void *)(v10 + 16) = strdup(v11);
        }
        goto LABEL_15;
      }
      uint64_t v10 = sub_1001E6C5C(*(const char **)(v7 + 8));
      if (v10)
      {
LABEL_15:
        uint64_t result = 0;
        *a1 = v10;
        *a2 = v7;
        return result;
      }
    }
    return 1065;
  }
  sub_10025B778("BT_HCI_TRANSPORT not set - Attempting to read from plist.\n");
  switch(sub_10016B718())
  {
    case 0u:
      sub_10025B778("HCI Transport is set to USB\n");
      goto LABEL_25;
    case 1u:
      sub_10025B778("HCI Transport is set to H4\n");
      uint64_t result = 0;
      uint64_t v13 = &unk_1009F8D48;
      goto LABEL_20;
    case 2u:
      sub_10025B778("HCI Transport is set to H4DS\n");
      uint64_t result = 0;
      uint64_t v13 = &unk_1009F8E90;
      goto LABEL_20;
    case 3u:
      sub_10025B778("HCI Transport is set to H4BC\n");
      uint64_t result = 0;
      uint64_t v13 = &unk_1009F8DE8;
      goto LABEL_20;
    case 4u:
      sub_10025B778("HCI Transport is set to H5\n");
      uint64_t result = 0;
      uint64_t v13 = &unk_1009F8F30;
LABEL_20:
      *a2 = v13;
      uint64_t v14 = &unk_1009F8C48;
      goto LABEL_27;
    case 5u:
      sub_10025B778("BCSP Transport not supported - Setting to USB\n");
      goto LABEL_25;
    case 6u:
      sub_10025B778("HCI Transport is set to APPLEBT\n");
      uint64_t result = 0;
      *a2 = &unk_1009F8BA0;
      uint64_t v14 = &unk_1009F8B20;
      goto LABEL_27;
    case 7u:
      sub_10025B778("HCI Transport is set to PCIE Skywalk\n");
      uint64_t result = 0;
      *a2 = &unk_1009F8A80;
      uint64_t v14 = &unk_1009F8A00;
      goto LABEL_27;
    case 0xAu:
      sub_10025B778("HCI Transport is set to virtual\n");
      uint64_t result = 0;
      *a2 = &unk_1009FAF80;
      uint64_t v14 = &unk_1009FAF00;
      goto LABEL_27;
    default:
      sub_10025B778("HCI Transport is unknown - Setting to USB\n");
LABEL_25:
      uint64_t result = 0;
      *a2 = &unk_1009F9050;
      uint64_t v14 = &unk_1009F8FD0;
LABEL_27:
      *a1 = (uint64_t)v14;
      break;
  }
  return result;
}

uint64_t sub_1001E6C5C(const char *a1)
{
  sub_10025B778("Searching for driver: \"%s\"\n", a1);
  for (unsigned __int16 i = (uint64_t *)&off_10099EF58; ; ++i)
  {
    uint64_t v3 = *i;
    if (!*i) {
      break;
    }
    if (!strcmp(*(const char **)(v3 + 8), a1)) {
      return v3;
    }
  }
  sub_10025B778("FATAL ERROR - HCI Driver\t %s could not be matched.\n", a1);
  return v3;
}

uint64_t sub_1001E6CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int16 *)(a1 + 36);
  long long v27 = 0;
  if (v2 == *(unsigned __int16 *)(a2 + 36))
  {
    __int16 v3 = *(_WORD *)(a1 + 38);
    __int16 v4 = *(_WORD *)(a2 + 38);
    if (!sub_1001DD56C(v2, (uint64_t *)&v27))
    {
      unsigned int v22 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(v27) + 112) + 4);
      if (v3 <= v22 || v4 <= v22)
      {
        if (v3 < v22 && v4 > v22) {
          return 1;
        }
        if (v3 > v22 && v4 < v22) {
          return 0xFFFFFFFFLL;
        }
      }
      return v3 - v4;
    }
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"Can't get channel (0x%x), this is bad.", v6, v7, v8, v9, v10, v11, v12, v2);
      uint64_t v13 = sub_100050B4C(0x2Fu);
      uint64_t result = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100744F6C();
        return 0;
      }
    }
  }
  else
  {
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"WTF ?? Can't compare 2 packets with different CID", v14, v15, v16, v17, v18, v19, v20, v26);
      long long v21 = sub_100050B4C(0x2Fu);
      uint64_t result = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100744F6C();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1001E6E08(unsigned __int16 *a1)
{
  unint64_t v2 = *((char *)a1 + 3);
  __int16 v3 = "???";
  __int16 v4 = "???";
  if (v2 <= 2) {
    __int16 v4 = off_10099EF98[v2];
  }
  if (*((unsigned char *)a1 + 2) == 1) {
    __int16 v3 = "E_RETRANSMIT_TX_XMIT";
  }
  if (*((unsigned char *)a1 + 2)) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = "E_RETRANSMIT_TX_WAIT_F";
  }
  sub_10025B778("cid=0x%x, txState=%s, rxState=%s, nextTxSeq=%d, expectedACKSeq=%d, expectedTxSeq=%d, bufferSeq=%d, remoteBusy=%d, localbusy=%d", *a1, v5, v4, a1[2], a1[3], a1[4], a1[5], *((unsigned __int8 *)a1 + 15), *((unsigned __int8 *)a1 + 16));
  sub_10025B778("sRejListSize=%d, retryCount=%d, rnrSent=%d, rejActioned=%d, srejActioned=%d, sRejSaveReqSeq=%d, sendRej=%d, bufferSeqSrej=%d, framesSent=%d\n", a1[72], *((unsigned __int8 *)a1 + 146), *((unsigned __int8 *)a1 + 147), *((unsigned __int8 *)a1 + 148), *((unsigned __int8 *)a1 + 149), *((unsigned __int8 *)a1 + 150), *((unsigned __int8 *)a1 + 151), a1[76], a1[77]);
  uint64_t v6 = "YES";
  if (*((_DWORD *)a1 + 40)) {
    uint64_t v7 = "YES";
  }
  else {
    uint64_t v7 = "NO";
  }
  if (!*((_DWORD *)a1 + 41)) {
    uint64_t v6 = "NO";
  }
  return sub_10025B778("retransmissionTimer=%s, monitorTimer=%s\n", v7, v6);
}

uint64_t sub_1001E6F2C(unsigned int *a1)
{
  *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2) = 0;
  int v2 = *(unsigned __int8 *)(*(void *)(sub_1001E6484(a1) + 112) + 16);
  uint64_t v3 = *(void *)(sub_1001E6484(a1) + 112);
  int v4 = *(unsigned __int8 *)(v3 + 14);
  *(unsigned char *)(v3 + 14) = 0;
  char v5 = v4 != 0;
  if (v2)
  {
    return sub_1001E6FBC((uint64_t)a1, 1, v5);
  }
  else
  {
    return sub_1001E721C((uint64_t)a1, 1, v5);
  }
}

uint64_t sub_1001E6FBC(uint64_t a1, char a2, char a3)
{
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v23 = 0;
  __int16 v18 = 0;
  LOBYTE(v19) = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
  *((void *)&v19 + 1) = *(void *)sub_1001E6484((unsigned int *)a1);
  LODWORD(v20) = 0;
  WORD2(v20) = *(_WORD *)(a1 + 4);
  WORD3(v20) = 256;
  BYTE8(v20) = 0;
  uint64_t v6 = sub_1001E6484((unsigned int *)a1);
  size_t v7 = (sub_1001F24D0((unsigned int *)a1, 2, a2, a3, *(unsigned char *)(*(void *)(v6 + 112) + 10), (_WORD *)&v23 + 2)+ 4);
  WORD5(v20) = 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0) + v7;
  LOBYTE(v23) = v7 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0);
  BYTE1(v23) = (unsigned __int16)(v7 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0)) >> 8;
  WORD1(v23) = *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 8);
  sub_1000226D0((uint64_t)v21 + 8, 2u);
  sub_100022798((unsigned __int8 *)v21 + 8, (char *)&v23, v7, 2u);
  if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78))
  {
    sub_1001F13E8((uint64_t)v21 + 8, &v18);
    sub_100022798((unsigned __int8 *)v21 + 8, (char *)&v18, 2uLL, 2u);
  }
  uint64_t v8 = sub_1001F4F80((uint64_t)&v19);
  if (v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send S-Frame %!.", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 147) = 1;
  }
  return v8;
}

uint64_t sub_1001E71F8(unsigned int *a1)
{
  uint64_t v1 = *(void *)(sub_1001E6484(a1) + 112);
  uint64_t result = *(unsigned __int8 *)(v1 + 14);
  *(unsigned char *)(v1 + 14) = 0;
  return result;
}

uint64_t sub_1001E721C(uint64_t a1, char a2, char a3)
{
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v23 = 0;
  __int16 v18 = 0;
  LOBYTE(v19) = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
  *((void *)&v19 + 1) = *(void *)sub_1001E6484((unsigned int *)a1);
  LODWORD(v20) = 0;
  WORD2(v20) = *(_WORD *)(a1 + 4);
  WORD3(v20) = 256;
  BYTE8(v20) = 0;
  uint64_t v6 = sub_1001E6484((unsigned int *)a1);
  size_t v7 = (sub_1001F24D0((unsigned int *)a1, 0, a2, a3, *(unsigned char *)(*(void *)(v6 + 112) + 10), (_WORD *)&v23 + 2)+ 4);
  WORD5(v20) = 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0) + v7;
  LOBYTE(v23) = v7 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0);
  BYTE1(v23) = (unsigned __int16)(v7 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0)) >> 8;
  WORD1(v23) = *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 8);
  sub_1000226D0((uint64_t)v21 + 8, 2u);
  sub_100022798((unsigned __int8 *)v21 + 8, (char *)&v23, v7, 2u);
  if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78))
  {
    sub_1001F13E8((uint64_t)v21 + 8, &v18);
    sub_100022798((unsigned __int8 *)v21 + 8, (char *)&v18, 2uLL, 2u);
  }
  uint64_t v8 = sub_1001F4F80((uint64_t)&v19);
  if (v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send S-Frame %!.", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v8;
}

uint64_t sub_1001E7444(unsigned int *a1, char a2)
{
  uint64_t result = sub_1001E6484(a1);
  *(unsigned char *)(*(void *)(result + 112) + 156) = a2;
  return result;
}

uint64_t sub_1001E7470(unsigned int *a1, unsigned int a2)
{
  uint64_t v3 = sub_1001E6484(a1);
  uint64_t v4 = sub_1002599CC(*(void *)(*(void *)(v3 + 112) + 176));
  uint64_t v15 = v4;
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = sub_1002599F0(v4);
      if (*(unsigned __int16 *)(v5 + 38) == a2) {
        return *(unsigned __int8 *)(v5 + 48);
      }
      sub_1002599D4((uint64_t)&v15);
      uint64_t v4 = v15;
      if (!v15) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"Could not find frame %d in retransmission list", v7, v8, v9, v10, v11, v12, v13, a2);
      uint64_t v14 = sub_100050B4C(0x2Fu);
      uint64_t result = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100744F6C();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1001E7520(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2 || a3 <= 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received bad packet with length %d", v22, v23, v24, v25, v26, v27, v28, a3);
      long long v29 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v30 = sub_1001E6484((unsigned int *)a1);
    sub_1001E6E08(*(unsigned __int16 **)(v30 + 112));
    return 546;
  }
  if (*a2)
  {
    if (a3 != 2 && a3 != 4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received bad S-Frame packet with length %d", v49, v50, v51, v52, v53, v54, v55, a3);
        uint64_t v56 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      uint64_t v57 = sub_1001E6484((unsigned int *)a1);
      sub_1001E6E08(*(unsigned __int16 **)(v57 + 112));
      return 547;
    }
    unsigned int v31 = *(unsigned __int16 *)a2;
    if (a4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AP wakeup by SFrame bundleID=com.apple.bluetoothd, dataLen=%d", v32, v33, v34, v35, v36, v37, v38, a3);
        uint64_t v39 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 136446210;
          v389 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 3)) {
      return sub_1001E9814(a1, v31);
    }
    if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 3) == 1)
    {
      switch((v31 >> 2) & 3)
      {
        case 1u:
          unsigned int v82 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          unsigned int v83 = (v31 >> 8) & 0x3F;
          if ((v31 & 0x80) == 0)
          {
            if (v82 > v83 || v83 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v84 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v85 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v84 <= v83)
              {
                if (v83 - v85 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                  goto LABEL_302;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v85) & 0x3Fu) < v83)
              {
                goto LABEL_302;
              }
            }
            if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
            {
              unsigned int v125 = sub_1001E7470((unsigned int *)a1, (v31 >> 8) & 0x3F);
              if (v125 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
                goto LABEL_302;
              }
            }
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
            sub_1001ED99C(a1, (v31 >> 8) & 0x3F, 0);
            uint64_t v126 = sub_1001EDB98(a1, (v31 >> 8) & 0x3F, (v31 & 0x10) != 0);
            if (!v126) {
              goto LABEL_237;
            }
            uint64_t v127 = v126;
            if (!sub_100058654()) {
              goto LABEL_237;
            }
            sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v128, v129, v130, v131, v132, v133, v134, v127);
            uint64_t v135 = sub_100050B4C(0x2Fu);
            if (!os_log_type_enabled(v135, OS_LOG_TYPE_ERROR)) {
              goto LABEL_237;
            }
            goto LABEL_236;
          }
          if (v82 > v83 || v83 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v108 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v109 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v108 <= v83)
            {
              if (v83 - v109 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                          + 32))
                goto LABEL_302;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v109) & 0x3Fu) < v83)
            {
              goto LABEL_302;
            }
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            unsigned int v155 = sub_1001E7470((unsigned int *)a1, (v31 >> 8) & 0x3F);
            if (v155 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
              goto LABEL_302;
            }
          }
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_302;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148)) {
            goto LABEL_269;
          }
          uint64_t v156 = sub_1001EDB98(a1, (v31 >> 8) & 0x3F, (v31 & 0x10) != 0);
          if (v156)
          {
            uint64_t v157 = v156;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v158, v159, v160, v161, v162, v163, v164, v157);
              uint64_t v165 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v165, OS_LOG_TYPE_ERROR)) {
                break;
              }
            }
          }
          goto LABEL_357;
        case 2u:
          unsigned int v86 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          unsigned int v87 = (v31 >> 8) & 0x3F;
          if ((v31 & 0x10) != 0)
          {
            if (v86 > v87 || v87 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v110 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v111 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v110 <= v87)
              {
                if (v87 - v111 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                            + 32))
                  goto LABEL_302;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v111) & 0x3Fu) < v87)
              {
                goto LABEL_302;
              }
            }
            if (((v31 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
              goto LABEL_302;
            }
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 1;
            sub_1001ED99C(a1, (v31 >> 8) & 0x3F, (v31 >> 7) & 1);
            uint64_t result = sub_1001E721C(a1, 0, 1);
            if (!result) {
              return result;
            }
            uint64_t v166 = result;
            uint64_t result = sub_100058654();
            if (!result) {
              return result;
            }
            sub_100056E24((uint64_t)"Failed to send RR(F=1) : %!", v167, v168, v169, v170, v171, v172, v173, v166);
            uint64_t v174 = sub_100050B4C(0x2Fu);
            uint64_t result = os_log_type_enabled(v174, OS_LOG_TYPE_ERROR);
            if (!result) {
              return result;
            }
          }
          else
          {
            if (v86 > v87 || v87 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v88 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v89 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v88 <= v87)
              {
                if (v87 - v89 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                  goto LABEL_302;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v89) & 0x3Fu) < v87)
              {
                goto LABEL_302;
              }
            }
            if (((v31 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
              goto LABEL_302;
            }
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 1;
            sub_1001ED99C(a1, (v31 >> 8) & 0x3F, (v31 >> 7) & 1);
            uint64_t result = sub_1001E721C(a1, 0, 0);
            if (!result) {
              return result;
            }
            uint64_t v136 = result;
            uint64_t result = sub_100058654();
            if (!result) {
              return result;
            }
            sub_100056E24((uint64_t)"Failed to send RR(F=1) : %!", v137, v138, v139, v140, v141, v142, v143, v136);
            uint64_t v144 = sub_100050B4C(0x2Fu);
            uint64_t result = os_log_type_enabled(v144, OS_LOG_TYPE_ERROR);
            if (!result) {
              return result;
            }
          }
          goto LABEL_352;
        case 3u:
          if (!(v31 & 0x10 | (v31 >> 7) & 1))
          {
            unsigned int v105 = (v31 >> 8) & 0x3F;
            if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v105
              || v105 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v112 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v113 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v112 <= v105)
              {
                if (v105 - v113 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                             + 32))
                  goto LABEL_302;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v113) & 0x3Fu) < v105)
              {
                goto LABEL_302;
              }
            }
            if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
            {
              unsigned int v181 = sub_1001E7470((unsigned int *)a1, v105);
              if (v181 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
                goto LABEL_302;
              }
            }
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
            sub_1001E6484((unsigned int *)a1);
            uint64_t v182 = sub_1001EE04C(a1, v105, 0);
            if (!v182) {
              goto LABEL_284;
            }
            uint64_t v183 = v182;
            if (!sub_100058654()) {
              goto LABEL_284;
            }
            sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v184, v185, v186, v187, v188, v189, v190, v183);
            uint64_t v191 = sub_100050B4C(0x2Fu);
            if (!os_log_type_enabled(v191, OS_LOG_TYPE_ERROR)) {
              goto LABEL_284;
            }
            goto LABEL_283;
          }
          int v90 = (v31 >> 7) & 1;
          if ((v31 & 0x10) != 0 || !v90)
          {
            if ((v31 & 0x10) == 0) {
              goto LABEL_302;
            }
            unsigned int v105 = (v31 >> 8) & 0x3F;
            if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v105
              || v105 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v114 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v115 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v114 <= v105)
              {
                if (v105 - v115 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                             + 32))
                  goto LABEL_302;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v115) & 0x3Fu) < v105)
              {
                goto LABEL_302;
              }
            }
            if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
            {
              unsigned int v286 = sub_1001E7470((unsigned int *)a1, v105);
              if (v286 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
                goto LABEL_302;
              }
            }
            if (v90 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
              goto LABEL_302;
            }
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
            sub_1001ED99C(a1, v105, v90);
            uint64_t v327 = sub_1001EE04C(a1, v105, 1);
            if (v327)
            {
              uint64_t v328 = v327;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v329, v330, v331, v332, v333, v334, v335, v328);
                v336 = sub_100050B4C(0x2Fu);
                if (os_log_type_enabled(v336, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
            }
            sub_1001EDB40(a1, 0);
            uint64_t v337 = sub_1001E6484((unsigned int *)a1);
            uint64_t result = 0;
            if (*(unsigned char *)(*(void *)(v337 + 112) + 2)) {
              return result;
            }
            goto LABEL_285;
          }
          unsigned int v91 = (v31 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v91
            || v91 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v92 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v93 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v92 <= v91)
            {
              if (v91 - v93 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                         + 32))
                goto LABEL_302;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v93) & 0x3Fu) < v91)
            {
              goto LABEL_302;
            }
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            unsigned int v194 = sub_1001E7470((unsigned int *)a1, v91);
            if (v194 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
              goto LABEL_302;
            }
          }
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_302;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001EDF74(a1, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149)
            && v91 == *(unsigned __int8 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 150))
          {
            uint64_t v195 = sub_1001E6484((unsigned int *)a1);
            uint64_t result = 0;
            *(unsigned char *)(*(void *)(v195 + 112) + 149) = 0;
            return result;
          }
          uint64_t result = sub_1001EE04C(a1, v91, 0);
          if (!result) {
            return result;
          }
          uint64_t v338 = result;
          uint64_t result = sub_100058654();
          if (!result) {
            return result;
          }
          sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v339, v340, v341, v342, v343, v344, v345, v338);
          v346 = sub_100050B4C(0x2Fu);
          uint64_t result = os_log_type_enabled(v346, OS_LOG_TYPE_ERROR);
          if (!result) {
            return result;
          }
          goto LABEL_352;
        default:
          if ((v31 & 0x80) == 0)
          {
            unsigned int v40 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            unsigned int v41 = (v31 >> 8) & 0x3F;
            if ((v31 & 0x10) == 0)
            {
              if (v40 <= v41
                && v41 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
              {
                goto LABEL_224;
              }
              unsigned int v42 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v43 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v42 > v41)
              {
                if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
                                                              + 176)
                                                  + 32)
                     + (_BYTE)v43) & 0x3Fu) < v41)
                  goto LABEL_302;
                goto LABEL_224;
              }
              if (v41 - v43 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                          + 32))
              {
LABEL_224:
                sub_1001ED99C(a1, v41, 0);
                if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15)) {
                  goto LABEL_312;
                }
                uint64_t v196 = sub_1001E6484((unsigned int *)a1);
                if (!sub_100059E10(*(void *)(*(void *)(v196 + 112) + 176))) {
                  goto LABEL_312;
                }
                uint64_t v197 = sub_1001ED78C((unsigned int *)a1);
                if (!v197) {
                  goto LABEL_312;
                }
                uint64_t v198 = v197;
                if (!sub_100058654()) {
                  goto LABEL_312;
                }
                sub_100056E24((uint64_t)"Failed to start retransmission timer %!.", v199, v200, v201, v202, v203, v204, v205, v198);
                uint64_t v206 = sub_100050B4C(0x2Fu);
                if (!os_log_type_enabled(v206, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_312;
                }
LABEL_311:
                sub_100744F6C();
LABEL_312:
                *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
                sub_1001EE2B0((unsigned int *)a1);
                return 0;
              }
LABEL_302:
              uint64_t v287 = sub_1001E6484((unsigned int *)a1);
              sub_1001E6E08(*(unsigned __int16 **)(v287 + 112));
              if (!sub_100058654()) {
                return sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
              }
              sub_100056E24((uint64_t)"Invalid S-Frame header while in REJ", v288, v289, v290, v291, v292, v293, v294, v387);
              v295 = sub_100050B4C(0x2Fu);
              if (!os_log_type_enabled(v295, OS_LOG_TYPE_ERROR)) {
                return sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
              }
              goto LABEL_341;
            }
            if (v40 > v41 || v41 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v116 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v117 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v116 <= v41)
              {
                if (v41 - v117 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                            + 32))
                  goto LABEL_302;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v117) & 0x3Fu) < v41)
              {
                goto LABEL_302;
              }
            }
            sub_1001ED99C(a1, v41, 0);
            if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15))
            {
              uint64_t v229 = sub_1001E6484((unsigned int *)a1);
              if (sub_100059E10(*(void *)(*(void *)(v229 + 112) + 176)))
              {
                uint64_t v230 = sub_1001ED78C((unsigned int *)a1);
                if (v230)
                {
                  uint64_t v231 = v230;
                  if (sub_100058654())
                  {
                    sub_100056E24((uint64_t)"Failed to start retransmission timer %!.", v232, v233, v234, v235, v236, v237, v238, v231);
                    uint64_t v239 = sub_100050B4C(0x2Fu);
                    if (os_log_type_enabled(v239, OS_LOG_TYPE_ERROR)) {
                      sub_100744F6C();
                    }
                  }
                }
              }
            }
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
            uint64_t result = sub_1001E721C(a1, 0, 1);
            if (!result) {
              return result;
            }
            uint64_t v240 = result;
            uint64_t result = sub_100058654();
            if (!result) {
              return result;
            }
            sub_100056E24((uint64_t)"Failed to send RR(F=1) : %!", v241, v242, v243, v244, v245, v246, v247, v240);
            v248 = sub_100050B4C(0x2Fu);
            uint64_t result = os_log_type_enabled(v248, OS_LOG_TYPE_ERROR);
            if (!result) {
              return result;
            }
LABEL_352:
            sub_100744F6C();
            return 0;
          }
          unsigned int v94 = (v31 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v94
            || v94 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v95 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v96 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v95 <= v94)
            {
              if (v94 - v96 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                         + 32))
                goto LABEL_302;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v96) & 0x3Fu) < v94)
            {
              goto LABEL_302;
            }
          }
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_302;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148)) {
            goto LABEL_269;
          }
          uint64_t v145 = sub_1001EDB98(a1, (v31 >> 8) & 0x3F, (v31 & 0x10) != 0);
          if (!v145) {
            goto LABEL_357;
          }
          uint64_t v146 = v145;
          if (!sub_100058654()) {
            goto LABEL_357;
          }
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v147, v148, v149, v150, v151, v152, v153, v146);
          uint64_t v154 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v154, OS_LOG_TYPE_ERROR)) {
            goto LABEL_357;
          }
          break;
      }
LABEL_356:
      sub_100744F6C();
LABEL_357:
      sub_1001EDB40(a1, 0);
      return 0;
    }
    if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 3) != 2) {
      goto LABEL_70;
    }
    switch((v31 >> 2) & 3)
    {
      case 1u:
        unsigned int v97 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
        unsigned int v98 = (v31 >> 8) & 0x3F;
        if ((v31 & 0x80) != 0)
        {
          if (v97 > v98 || v98 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v121 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v122 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v121 <= v98)
            {
              if (v98 - v122 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                          + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v122) & 0x3Fu) < v98)
            {
              goto LABEL_339;
            }
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            unsigned int v259 = sub_1001E7470((unsigned int *)a1, (v31 >> 8) & 0x3F);
            if (v259 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
              goto LABEL_339;
            }
          }
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_339;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148)) {
            goto LABEL_269;
          }
          uint64_t v377 = sub_1001EDB98(a1, (v31 >> 8) & 0x3F, (v31 & 0x10) != 0);
          if (!v377) {
            goto LABEL_357;
          }
          uint64_t v378 = v377;
          if (!sub_100058654()) {
            goto LABEL_357;
          }
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v379, v380, v381, v382, v383, v384, v385, v378);
          v386 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v386, OS_LOG_TYPE_ERROR)) {
            goto LABEL_357;
          }
          goto LABEL_356;
        }
        if (v97 > v98 || v98 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v99 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v100 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v99 <= v98)
          {
            if (v98 - v100 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                        + 32))
              goto LABEL_339;
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v100) & 0x3Fu) < v98)
          {
            goto LABEL_339;
          }
        }
        if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
        {
          unsigned int v207 = sub_1001E7470((unsigned int *)a1, (v31 >> 8) & 0x3F);
          if (v207 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
            goto LABEL_339;
          }
        }
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
        sub_1001ED99C(a1, (v31 >> 8) & 0x3F, 0);
        uint64_t v208 = sub_1001EDB98(a1, (v31 >> 8) & 0x3F, (v31 & 0x10) != 0);
        if (v208)
        {
          uint64_t v209 = v208;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v210, v211, v212, v213, v214, v215, v216, v209);
            v217 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v217, OS_LOG_TYPE_ERROR)) {
LABEL_236:
            }
              sub_100744F6C();
          }
        }
LABEL_237:
        sub_1001EDB40(a1, 0);
        uint64_t v218 = sub_1001E6484((unsigned int *)a1);
        uint64_t result = 0;
        if (!*(unsigned char *)(*(void *)(v218 + 112) + 2))
        {
          uint64_t v219 = sub_1001E6484((unsigned int *)a1);
          uint64_t result = 0;
          *(unsigned char *)(*(void *)(v219 + 112) + 148) = 1;
        }
        return result;
      case 2u:
        unsigned int v101 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
        unsigned int v102 = (v31 >> 8) & 0x3F;
        if ((v31 & 0x10) != 0)
        {
          if (v101 > v102 || v102 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v123 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v124 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v123 <= v102)
            {
              if (v102 - v124 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v124) & 0x3Fu) < v102)
            {
              goto LABEL_339;
            }
          }
          if (((v31 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_339;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 1;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, (v31 >> 7) & 1);
          uint64_t result = sub_1001EE4E4((unsigned int *)a1);
          if (result)
          {
            uint64_t v261 = result;
            uint64_t result = sub_100058654();
            if (result)
            {
              sub_100056E24((uint64_t)"Failed to send SREJ's tail %!", v262, v263, v264, v265, v266, v267, v268, v261);
              v269 = sub_100050B4C(0x2Fu);
              uint64_t result = os_log_type_enabled(v269, OS_LOG_TYPE_ERROR);
              if (result) {
                goto LABEL_352;
              }
            }
          }
        }
        else
        {
          if (v101 > v102 || v102 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v103 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v104 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v103 <= v102)
            {
              if (v102 - v104 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v104) & 0x3Fu) < v102)
            {
              goto LABEL_339;
            }
          }
          if (((v31 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_339;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 1;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, (v31 >> 7) & 1);
          uint64_t result = sub_1001E721C(a1, 0, 0);
          if (result)
          {
            uint64_t v220 = result;
            uint64_t result = sub_100058654();
            if (result)
            {
              sub_100056E24((uint64_t)"Failed to send RR(F=1) : %!", v221, v222, v223, v224, v225, v226, v227, v220);
              uint64_t v228 = sub_100050B4C(0x2Fu);
              uint64_t result = os_log_type_enabled(v228, OS_LOG_TYPE_ERROR);
              if (result) {
                goto LABEL_352;
              }
            }
          }
        }
        return result;
      case 3u:
        if ((v31 & 0x90) == 0x80)
        {
          unsigned int v175 = (v31 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v175
            || v175 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v176 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v177 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v176 <= v175)
            {
              if (v175 - v177 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v177) & 0x3Fu) < v175)
            {
              goto LABEL_339;
            }
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            unsigned int v284 = sub_1001E7470((unsigned int *)a1, v175);
            if (v284 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
              goto LABEL_339;
            }
          }
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_339;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001EDF74(a1, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149)
            && v175 == *(unsigned __int8 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 150))
          {
            uint64_t v285 = sub_1001E6484((unsigned int *)a1);
            uint64_t result = 0;
            *(unsigned char *)(*(void *)(v285 + 112) + 149) = 1;
          }
          else
          {
            uint64_t result = sub_1001EE04C(a1, v175, 0);
            if (result)
            {
              uint64_t v368 = result;
              uint64_t result = sub_100058654();
              if (result)
              {
                sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v369, v370, v371, v372, v373, v374, v375, v368);
                v376 = sub_100050B4C(0x2Fu);
                uint64_t result = os_log_type_enabled(v376, OS_LOG_TYPE_ERROR);
                if (result) {
                  goto LABEL_352;
                }
              }
            }
          }
          return result;
        }
        if ((v31 & 0x90) != 0)
        {
          if ((v31 & 0x10) == 0) {
            goto LABEL_339;
          }
          unsigned int v178 = (v31 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v178
            || v178 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v179 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v180 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v179 <= v178)
            {
              if (v178 - v180 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v180) & 0x3Fu) < v178)
            {
              goto LABEL_339;
            }
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            unsigned int v347 = sub_1001E7470((unsigned int *)a1, (v31 >> 8) & 0x3F);
            if (v347 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
              goto LABEL_339;
            }
          }
          if (((v31 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            goto LABEL_339;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, (v31 >> 7) & 1);
          uint64_t v357 = sub_1001EE04C(a1, (v31 >> 8) & 0x3F, 1);
          if (v357)
          {
            uint64_t v358 = v357;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v359, v360, v361, v362, v363, v364, v365, v358);
              v366 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v366, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
          }
          sub_1001EDB40(a1, 0);
          uint64_t v367 = sub_1001E6484((unsigned int *)a1);
          uint64_t result = 0;
          if (*(unsigned char *)(*(void *)(v367 + 112) + 2)) {
            return result;
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149) = 1;
          BOOL v281 = v178 == 0;
        }
        else
        {
          unsigned int v105 = (v31 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v105
            || v105 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v106 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v107 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v106 <= v105)
            {
              if (v105 - v107 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v107) & 0x3Fu) < v105)
            {
              goto LABEL_339;
            }
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            unsigned int v270 = sub_1001E7470((unsigned int *)a1, v105);
            if (v270 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
              goto LABEL_339;
            }
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001E6484((unsigned int *)a1);
          uint64_t v271 = sub_1001EE04C(a1, v105, 0);
          if (v271)
          {
            uint64_t v272 = v271;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v273, v274, v275, v276, v277, v278, v279, v272);
              v280 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v280, OS_LOG_TYPE_ERROR)) {
LABEL_283:
              }
                sub_100744F6C();
            }
          }
LABEL_284:
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
            return 0;
          }
LABEL_285:
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149) = 1;
          BOOL v281 = v105 == 0;
        }
        char v282 = !v281;
        uint64_t v283 = sub_1001E6484((unsigned int *)a1);
        uint64_t result = 0;
        *(unsigned char *)(*(void *)(v283 + 112) + 150) = v282;
        return result;
      default:
        if ((v31 & 0x80) == 0)
        {
          unsigned int v58 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          unsigned int v59 = (v31 >> 8) & 0x3F;
          if ((v31 & 0x10) == 0)
          {
            if (v58 > v59 || v59 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              unsigned int v60 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v61 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              if (v60 <= v59)
              {
                if (v59 - v61 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32))
                  goto LABEL_339;
              }
              else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                                 + 176)
              }
                                                     + 32)
                        + (_BYTE)v61) & 0x3Fu) < v59)
              {
                goto LABEL_339;
              }
            }
            sub_1001ED99C(a1, v59, 0);
            if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15)) {
              goto LABEL_312;
            }
            uint64_t v296 = sub_1001E6484((unsigned int *)a1);
            if (!sub_100059E10(*(void *)(*(void *)(v296 + 112) + 176))) {
              goto LABEL_312;
            }
            uint64_t v297 = sub_1001ED78C((unsigned int *)a1);
            if (!v297) {
              goto LABEL_312;
            }
            uint64_t v298 = v297;
            if (!sub_100058654()) {
              goto LABEL_312;
            }
            sub_100056E24((uint64_t)"Failed to start retransmission timer %!.", v299, v300, v301, v302, v303, v304, v305, v298);
            v306 = sub_100050B4C(0x2Fu);
            if (!os_log_type_enabled(v306, OS_LOG_TYPE_ERROR)) {
              goto LABEL_312;
            }
            goto LABEL_311;
          }
          if (v58 > v59 || v59 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v192 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v193 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v192 <= v59)
            {
              if (v59 - v193 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                          + 32))
                goto LABEL_339;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v193) & 0x3Fu) < v59)
            {
              goto LABEL_339;
            }
          }
          sub_1001ED99C(a1, v59, 0);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15))
          {
            uint64_t v307 = sub_1001E6484((unsigned int *)a1);
            if (sub_100059E10(*(void *)(*(void *)(v307 + 112) + 176)))
            {
              uint64_t v308 = sub_1001ED78C((unsigned int *)a1);
              if (v308)
              {
                uint64_t v309 = v308;
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Failed to start retransmission timer %!.", v310, v311, v312, v313, v314, v315, v316, v309);
                  v317 = sub_100050B4C(0x2Fu);
                  if (os_log_type_enabled(v317, OS_LOG_TYPE_ERROR)) {
                    sub_100744F6C();
                  }
                }
              }
            }
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          uint64_t result = sub_1001EE4E4((unsigned int *)a1);
          if (result)
          {
            uint64_t v318 = result;
            uint64_t result = sub_100058654();
            if (result)
            {
              sub_100056E24((uint64_t)"Failed to send SREJ's tail %!", v319, v320, v321, v322, v323, v324, v325, v318);
              v326 = sub_100050B4C(0x2Fu);
              uint64_t result = os_log_type_enabled(v326, OS_LOG_TYPE_ERROR);
              if (result) {
                goto LABEL_352;
              }
            }
          }
          return result;
        }
        unsigned int v118 = (v31 >> 8) & 0x3F;
        if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v118
          || v118 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v119 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v120 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v119 <= v118)
          {
            if (v118 - v120 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                         + 32))
              goto LABEL_339;
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v120) & 0x3Fu) < v118)
          {
            goto LABEL_339;
          }
        }
        if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2))
        {
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001ED99C(a1, (v31 >> 8) & 0x3F, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148))
          {
LABEL_269:
            uint64_t v260 = sub_1001E6484((unsigned int *)a1);
            uint64_t result = 0;
            *(unsigned char *)(*(void *)(v260 + 112) + 148) = 0;
            return result;
          }
          uint64_t v249 = sub_1001EDB98(a1, (v31 >> 8) & 0x3F, (v31 & 0x10) != 0);
          if (!v249) {
            goto LABEL_357;
          }
          uint64_t v250 = v249;
          if (!sub_100058654()) {
            goto LABEL_357;
          }
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v251, v252, v253, v254, v255, v256, v257, v250);
          v258 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v258, OS_LOG_TYPE_ERROR)) {
            goto LABEL_357;
          }
          goto LABEL_356;
        }
LABEL_339:
        uint64_t v348 = sub_1001E6484((unsigned int *)a1);
        sub_1001E6E08(*(unsigned __int16 **)(v348 + 112));
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid S-Frame header while in SREJ", v349, v350, v351, v352, v353, v354, v355, v387);
          v356 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v356, OS_LOG_TYPE_ERROR)) {
LABEL_341:
          }
            sub_100745764();
        }
        return sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
    }
  }
  uint64_t v10 = sub_1001E6484((unsigned int *)a1);
  unint64_t v11 = 4;
  if (!*(unsigned char *)(v10 + 78)) {
    unint64_t v11 = 2;
  }
  if (v11 > a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received bad I-Frame packet with length %d", v12, v13, v14, v15, v16, v17, v18, a3);
      long long v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    uint64_t v20 = sub_1001E6484((unsigned int *)a1);
    sub_1001E6E08(*(unsigned __int16 **)(v20 + 112));
    return 548;
  }
  unsigned int v44 = *(unsigned __int16 *)a2;
  uint64_t v45 = sub_100022FE8(0x18uLL);
  if (!v45)
  {
    if (!sub_100058654()) {
      return 549;
    }
    sub_100056E24((uint64_t)"Could not allocate enough memory for incoming frame.", v62, v63, v64, v65, v66, v67, v68, v387);
    uint64_t v69 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
      return 549;
    }
LABEL_61:
    sub_100744F6C();
    return 549;
  }
  uint64_t v46 = (uint64_t)v45;
  *uint64_t v45 = *(_WORD *)(a1 + 4);
  v45[1] = (v44 >> 1) & 0x3F;
  *((unsigned char *)v45 + 4) = v44 >> 14;
  if (v44 >> 14 == 1)
  {
    __int16 v47 = a2[2] | (a2[4] << 8);
    __int16 v48 = -4;
  }
  else
  {
    __int16 v47 = 0;
    __int16 v48 = -2;
  }
  unsigned __int16 v70 = v48 + a3;
  v45[3] = v47;
  v45[8] = v70;
  uint64_t v71 = sub_100022FE8(v70);
  *(void *)(v46 + 8) = v71;
  if (!v71)
  {
    sub_100023010((void *)v46);
    if (!sub_100058654()) {
      return 549;
    }
    sub_100056E24((uint64_t)"Could not allocate enough memory for incoming frame.", v72, v73, v74, v75, v76, v77, v78, v387);
    unsigned __int16 v79 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
      return 549;
    }
    goto LABEL_61;
  }
  memmove(v71, &a2[a3 - *(unsigned __int16 *)(v46 + 16)], *(unsigned __int16 *)(v46 + 16));
  if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 3))
  {
    if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 3) == 1)
    {
      return sub_1001EBDB4((unsigned int *)a1, v44, v46, a4, a5);
    }
    if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 3) == 2)
    {
      return sub_1001EC2E0((unsigned int *)a1, v44, v46, a4, a5);
    }
LABEL_70:
    uint64_t v80 = sub_1001E6484((unsigned int *)a1);
    sub_1001E6E08(*(unsigned __int16 **)(v80 + 112));
    uint64_t v81 = sub_1001E6484((unsigned int *)a1);
    sub_1001E6E08(*(unsigned __int16 **)(v81 + 112));
    return 550;
  }

  return sub_1001EB1F4((unsigned int *)a1, v44, v46, a4, a5);
}

uint64_t sub_1001E9814(uint64_t a1, unsigned int a2)
{
  switch((a2 >> 2) & 3)
  {
    case 1u:
      unsigned int v8 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
      unsigned int v9 = (a2 >> 8) & 0x3F;
      if ((a2 & 0x80) != 0)
      {
        if (v8 > v9 || v9 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v21 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v22 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v21 <= v9)
          {
            if (v9 - v22 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32)) {
              goto LABEL_83;
            }
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v22) & 0x3Fu) < v9)
          {
            goto LABEL_83;
          }
        }
        if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
        {
          unsigned int v64 = sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
          if (v64 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
            goto LABEL_83;
          }
        }
        if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
          goto LABEL_83;
        }
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
        sub_1001ED99C(a1, (a2 >> 8) & 0x3F, 1);
        if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148)) {
          goto LABEL_157;
        }
        uint64_t v132 = sub_1001EDB98(a1, (a2 >> 8) & 0x3F, (a2 & 0x10) != 0);
        if (!v132) {
          goto LABEL_51;
        }
        uint64_t v133 = v132;
        if (!sub_100058654()) {
          goto LABEL_51;
        }
        sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v134, v135, v136, v137, v138, v139, v140, v133);
        uint64_t v141 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v141, OS_LOG_TYPE_ERROR)) {
          goto LABEL_51;
        }
LABEL_155:
        sub_100744F6C();
LABEL_51:
        sub_1001EDB40(a1, 0);
        return 0;
      }
      if (v8 > v9 || v9 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
      {
        unsigned int v10 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
        int v11 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
        if (v10 > v9)
        {
          if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                            + 32)
               + (_BYTE)v11) & 0x3Fu) < v9)
            goto LABEL_83;
          goto LABEL_67;
        }
        if (v9 - v11 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32))
        {
LABEL_83:
          if (!sub_100058654()) {
            goto LABEL_225;
          }
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v9
            && v9 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            BOOL v67 = 1;
          }
          else
          {
            unsigned int v65 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v66 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v65 <= v9) {
              BOOL v67 = v9 - v66 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
            }
                                          + 32);
            else {
              BOOL v67 = ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
            }
                                                             + 176)
                                                 + 32)
                    + (_BYTE)v66) & 0x3Fu) >= v9;
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
            sub_1001E6484((unsigned int *)a1);
          }
          sub_100056E24((uint64_t)"S-Frame Reject Error: ValidReqSeq_Retrans %d, MaxRetransExceeded %d", v124, v125, v126, v127, v128, v129, v130, v67);
          uint64_t v131 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v131, OS_LOG_TYPE_ERROR)) {
            goto LABEL_225;
          }
          goto LABEL_224;
        }
      }
LABEL_67:
      if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
      {
        unsigned int v53 = sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
        if (v53 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
          goto LABEL_83;
        }
      }
      *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
      sub_1001ED99C(a1, (a2 >> 8) & 0x3F, 0);
      uint64_t v54 = sub_1001EDB98(a1, (a2 >> 8) & 0x3F, (a2 & 0x10) != 0);
      if (v54)
      {
        uint64_t v55 = v54;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v56, v57, v58, v59, v60, v61, v62, v55);
          uint64_t v63 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_1001EDB40(a1, 0);
      uint64_t v7 = 0;
      if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2))
      {
        uint64_t v7 = 0;
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148) = 1;
      }
      return v7;
    case 2u:
      unsigned int v12 = a2 >> 4;
      unsigned int v13 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
      unsigned int v14 = (a2 >> 8) & 0x3F;
      if (v12)
      {
        if (v13 > v14 || v14 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v23 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v24 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v23 <= v14)
          {
            if (v14 - v24 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32)) {
              goto LABEL_91;
            }
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v24) & 0x3Fu) < v14)
          {
            goto LABEL_91;
          }
        }
        if (((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2))
        {
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 1;
          sub_1001ED99C(a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
          sub_1001ED254((unsigned int *)a1);
          uint64_t v7 = sub_1001EDAB8((unsigned int *)a1, 0, 1);
          if (v7)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Failed to send RR or RNR %!", v76, v77, v78, v79, v80, v81, v82, v7);
              unsigned int v83 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
          }
          return v7;
        }
      }
      else
      {
        if (v13 > v14 || v14 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v15 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v16 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v15 <= v14)
          {
            if (v14 - v16 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32)) {
              goto LABEL_91;
            }
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v16) & 0x3Fu) < v14)
          {
            goto LABEL_91;
          }
        }
        if (((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2))
        {
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 1;
          sub_1001ED99C(a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
          sub_1001ED254((unsigned int *)a1);
          return 0;
        }
      }
LABEL_91:
      if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v14
        || v14 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
      {
        if (!sub_100058654()) {
          return sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
        }
        sub_100056E24((uint64_t)"Invalid reqseq", v68, v69, v70, v71, v72, v73, v74, v233);
        uint64_t v75 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
          return sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
        }
        goto LABEL_233;
      }
      if (!sub_100058654()) {
        goto LABEL_225;
      }
      if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v14
        || v14 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
      {
        sub_1001E6484((unsigned int *)a1);
        sub_1001E6484((unsigned int *)a1);
        sub_1001E6484((unsigned int *)a1);
      }
      if ((a2 & 0x80) != 0) {
        sub_1001E6484((unsigned int *)a1);
      }
      sub_100056E24((uint64_t)"S-Frame Receiver Not Ready Error: P-bit %d, ValidReqSeq %d, ValidF-bit %d", v86, v87, v88, v89, v90, v91, v92, (a2 >> 4) & 1);
      uint64_t v210 = sub_100050B4C(0x2Fu);
      if (!os_log_type_enabled(v210, OS_LOG_TYPE_ERROR)) {
        goto LABEL_225;
      }
      goto LABEL_224;
    case 3u:
      if (a2 & 0x10 | (a2 >> 7) & 1)
      {
        int v17 = (a2 >> 7) & 1;
        if ((a2 & 0x10) == 0 && v17)
        {
          unsigned int v18 = (a2 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v18
            || v18 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            unsigned int v19 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v20 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v19 <= v18)
            {
              if (v18 - v20 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                         + 32))
                goto LABEL_134;
            }
            else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                               + 176)
            }
                                                   + 32)
                      + (_BYTE)v20) & 0x3Fu) < v18)
            {
              goto LABEL_134;
            }
          }
          if (!*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67)
            || (unsigned int v117 = sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F),
                v117 < *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)))
          {
            if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2))
            {
              *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
              sub_1001EDF74(a1, 1);
              if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149)
                && v18 == *(unsigned __int8 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 150))
              {
                uint64_t v7 = 0;
                *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149) = 0;
                return v7;
              }
              uint64_t v166 = sub_1001EE04C(a1, (a2 >> 8) & 0x3F, 0);
              if (v166)
              {
                uint64_t v167 = v166;
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v168, v169, v170, v171, v172, v173, v174, v167);
                  unsigned int v175 = sub_100050B4C(0x2Fu);
                  if (os_log_type_enabled(v175, OS_LOG_TYPE_ERROR)) {
                    sub_100744F6C();
                  }
                }
              }
              return 0;
            }
          }
LABEL_134:
          if (!sub_100058654()) {
            goto LABEL_225;
          }
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v18
            && v18 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            BOOL v120 = 1;
          }
          else
          {
            unsigned int v118 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v119 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v118 <= v18) {
              BOOL v120 = v18 - v119 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
            }
                                             + 32);
            else {
              BOOL v120 = ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
            }
                                                              + 176)
                                                  + 32)
                     + (_BYTE)v119) & 0x3Fu) >= v18;
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
            sub_1001E6484((unsigned int *)a1);
          }
          sub_100056E24((uint64_t)"S-Frame p 0, f 1, Error: ValidReqSeq_Retrans %d, MaxRetransExceeded %d", v176, v177, v178, v179, v180, v181, v182, v120);
          uint64_t v183 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v183, OS_LOG_TYPE_ERROR)) {
            goto LABEL_225;
          }
          goto LABEL_224;
        }
        if ((a2 & 0x10) == 0)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Got S_FRAME but something is not correct", v45, v46, v47, v48, v49, v50, v51, v233);
            uint64_t v52 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          goto LABEL_225;
        }
        unsigned int v39 = (a2 >> 8) & 0x3F;
        if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v39
          || v39 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v84 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v85 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v84 <= v39)
          {
            if (v39 - v85 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32))
            {
LABEL_169:
              if (!sub_100058654()) {
                goto LABEL_225;
              }
              if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v39
                && v39 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
              {
                BOOL v155 = 1;
              }
              else
              {
                unsigned int v153 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
                int v154 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
                if (v153 <= v39) {
                  BOOL v155 = v39 - v154 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
                }
                                                             + 176)
                                                 + 32);
                else {
                  BOOL v155 = ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
                }
                                                                  + 176)
                                                      + 32)
                         + (_BYTE)v154) & 0x3Fu) >= v39;
              }
              if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
              {
                sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
                sub_1001E6484((unsigned int *)a1);
              }
              sub_100056E24((uint64_t)"S-Frame p == 1 Error ValidReqSeq_Retrans %d, MaxRetransExceeded %d", v212, v213, v214, v215, v216, v217, v218, v155);
              uint64_t v219 = sub_100050B4C(0x2Fu);
              if (!os_log_type_enabled(v219, OS_LOG_TYPE_ERROR)) {
                goto LABEL_225;
              }
              goto LABEL_224;
            }
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v85) & 0x3Fu) < v39)
          {
            goto LABEL_169;
          }
        }
        if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
        {
          unsigned int v152 = sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
          if (v152 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
            goto LABEL_169;
          }
        }
        if (v17 && *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
          goto LABEL_169;
        }
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
        sub_1001ED99C(a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
        uint64_t v156 = sub_1001EE04C(a1, (a2 >> 8) & 0x3F, 1);
        if (v156)
        {
          uint64_t v157 = v156;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v158, v159, v160, v161, v162, v163, v164, v157);
            uint64_t v165 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v165, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        sub_1001EDB40(a1, 0);
        uint64_t v7 = 0;
        if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
          return v7;
        }
LABEL_183:
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 149) = 1;
        uint64_t v7 = 0;
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 150) = v39 != 0;
        return v7;
      }
      unsigned int v39 = (a2 >> 8) & 0x3F;
      if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v39
        && v39 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
      {
        goto LABEL_116;
      }
      unsigned int v40 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
      int v41 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
      if (v40 <= v39)
      {
        if (v39 - v41 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32))
        {
LABEL_124:
          if (!sub_100058654()) {
            goto LABEL_225;
          }
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v39
            && v39 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            BOOL v116 = 1;
          }
          else
          {
            unsigned int v114 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v115 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            if (v114 <= v39) {
              BOOL v116 = v39 - v115 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
            }
                                             + 32);
            else {
              BOOL v116 = ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
            }
                                                              + 176)
                                                  + 32)
                     + (_BYTE)v115) & 0x3Fu) >= v39;
          }
          if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
          {
            sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F);
            sub_1001E6484((unsigned int *)a1);
          }
          sub_100056E24((uint64_t)"S-Frame Select Reject Error: ValidReqSeq_Retrans %d, MaxRetransExceeded %d", v202, v203, v204, v205, v206, v207, v208, v116);
          uint64_t v209 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v209, OS_LOG_TYPE_ERROR)) {
            goto LABEL_225;
          }
          goto LABEL_224;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) {
                                             + 32)
      }
                + (_BYTE)v41) & 0x3Fu) < v39)
      {
        goto LABEL_124;
      }
LABEL_116:
      if (!*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67)
        || (unsigned int v103 = sub_1001E7470((unsigned int *)a1, (a2 >> 8) & 0x3F),
            v103 < *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)))
      {
        *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
        sub_1001E6484((unsigned int *)a1);
        uint64_t v104 = sub_1001EE04C(a1, (a2 >> 8) & 0x3F, 0);
        if (v104)
        {
          uint64_t v105 = v104;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to retransmit requested I-Frames %!.", v106, v107, v108, v109, v110, v111, v112, v105);
            int v113 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v113, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2)) {
          return 0;
        }
        goto LABEL_183;
      }
      goto LABEL_124;
    default:
      if (a2 & 0x80 | (a2 >> 4) & 1)
      {
        if ((a2 & 0x80) == 0)
        {
          if (((a2 >> 4) & 1) == 0) {
            goto LABEL_225;
          }
          unsigned int v4 = (a2 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v4
            && v4 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            goto LABEL_9;
          }
          unsigned int v5 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v6 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v5 <= v4)
          {
            if (v4 - v6 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32)) {
              goto LABEL_9;
            }
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v6) & 0x3Fu) >= v4)
          {
LABEL_9:
            sub_1001ED99C(a1, (a2 >> 8) & 0x3F, 0);
            sub_1001EDE84((unsigned int *)a1);
            uint64_t v7 = 0;
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
            return v7;
          }
          if (sub_100058654())
          {
            if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v4
              && v4 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              BOOL v151 = 1;
            }
            else
            {
              unsigned int v149 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              int v150 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
              BOOL v151 = v149 <= v4
                   ? v4 - v150 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                            + 32)
                   : ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
                                                              + 176)
                                                  + 32)
                     + (_BYTE)v150) & 0x3Fu) >= v4;
            }
            sub_100056E24((uint64_t)"S-Frame Receiver Ready Error: ValidReqSeq %d, ValidF-bit %d", v142, v143, v144, v145, v146, v147, v148, v151);
            uint64_t v220 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v220, OS_LOG_TYPE_ERROR)) {
LABEL_224:
            }
              sub_100745764();
          }
LABEL_225:
          uint64_t v221 = sub_1001E6484((unsigned int *)a1);
          sub_1001E6E08(*(unsigned __int16 **)(v221 + 112));
          if (sub_100058654())
          {
            uint64_t v222 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            unsigned int v223 = (a2 >> 8) & 0x3F;
            sub_1001E6484((unsigned int *)a1);
            sub_1001E6484((unsigned int *)a1);
            if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v223
              || v223 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              sub_1001E6484((unsigned int *)a1);
              sub_1001E6484((unsigned int *)a1);
              sub_1001E6484((unsigned int *)a1);
            }
            if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v223
              || v223 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
            {
              sub_1001E6484((unsigned int *)a1);
              sub_1001E6484((unsigned int *)a1);
              sub_1001E6484((unsigned int *)a1);
            }
            sub_1001E6484((unsigned int *)a1);
            sub_1001E6484((unsigned int *)a1);
            sub_1001E6484((unsigned int *)a1);
            sub_100056E24((uint64_t)"Invalid S-Frame header while in RECV e:%d, r:%d, n:%d, u:%d, WITH_VALID_REQSEQ=%d, WITH_VALID_REQSEQ_VALUE=%d, WITH_VALID_REQSEQ_BOUNDS=%d", v224, v225, v226, v227, v228, v229, v230, v222);
            uint64_t v231 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v231, OS_LOG_TYPE_ERROR)) {
LABEL_233:
            }
              sub_100745764();
          }
          return sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
        }
        unsigned int v42 = (a2 >> 8) & 0x3F;
        if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) > v42
          || v42 > *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          unsigned int v43 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v44 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          if (v43 <= v42)
          {
            if (v42 - v44 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32)) {
              goto LABEL_141;
            }
          }
          else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) {
                                                             + 176)
          }
                                                 + 32)
                    + (_BYTE)v44) & 0x3Fu) < v42)
          {
            goto LABEL_141;
          }
        }
        if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2))
        {
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          sub_1001ED99C(a1, (a2 >> 8) & 0x3F, 1);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148))
          {
LABEL_157:
            uint64_t v7 = 0;
            *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 148) = 0;
            return v7;
          }
          uint64_t v192 = sub_1001EDB98(a1, (a2 >> 8) & 0x3F, (a2 & 0x10) != 0);
          if (!v192) {
            goto LABEL_51;
          }
          uint64_t v193 = v192;
          if (!sub_100058654()) {
            goto LABEL_51;
          }
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v194, v195, v196, v197, v198, v199, v200, v193);
          uint64_t v201 = sub_100050B4C(0x2Fu);
          if (!os_log_type_enabled(v201, OS_LOG_TYPE_ERROR)) {
            goto LABEL_51;
          }
          goto LABEL_155;
        }
LABEL_141:
        if (sub_100058654())
        {
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v42
            && v42 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
          {
            BOOL v123 = 1;
          }
          else
          {
            unsigned int v121 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            int v122 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
            BOOL v123 = v121 <= v42
                 ? v42 - v122 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                           + 32)
                 : ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112)
                                                            + 176)
                                                + 32)
                   + (_BYTE)v122) & 0x3Fu) >= v42;
          }
          sub_1001E6484((unsigned int *)a1);
          sub_100056E24((uint64_t)"S-Frame Receiver Ready Error: ValidReqSeq %d, ValidF-bit %d", v184, v185, v186, v187, v188, v189, v190, v123);
          uint64_t v191 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v191, OS_LOG_TYPE_ERROR)) {
            goto LABEL_224;
          }
        }
        goto LABEL_225;
      }
      unsigned int v25 = (a2 >> 8) & 0x3F;
      if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v25
        && v25 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
      {
        goto LABEL_44;
      }
      unsigned int v26 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
      int v27 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
      if (v26 <= v25)
      {
        if (v25 - v27 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) + 32))
        {
LABEL_44:
          sub_1001ED99C(a1, (a2 >> 8) & 0x3F, 0);
          if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15))
          {
            uint64_t v28 = sub_1001E6484((unsigned int *)a1);
            if (sub_100059E10(*(void *)(*(void *)(v28 + 112) + 176)))
            {
              uint64_t v29 = sub_1001ED78C((unsigned int *)a1);
              if (v29)
              {
                uint64_t v30 = v29;
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Failed to start retransmission timer %!.", v31, v32, v33, v34, v35, v36, v37, v30);
                  uint64_t v38 = sub_100050B4C(0x2Fu);
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
                    sub_100744F6C();
                  }
                }
              }
            }
          }
          *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 15) = 0;
          goto LABEL_51;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176) {
                                             + 32)
      }
                + (_BYTE)v27) & 0x3Fu) >= v25)
      {
        goto LABEL_44;
      }
      if (sub_100058654())
      {
        if (*(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6) <= v25
          && v25 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 4))
        {
          BOOL v102 = 1;
        }
        else
        {
          unsigned int v100 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          int v101 = *(unsigned __int16 *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 6);
          BOOL v102 = v100 <= v25
               ? v25 - v101 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                         + 32)
               : ((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 176)
                                              + 32)
                 + (_BYTE)v101) & 0x3Fu) >= v25;
        }
        sub_100056E24((uint64_t)"S-Frame Receiver Ready Error: ValidReqSeq %d, ValidF-bit %d", v93, v94, v95, v96, v97, v98, v99, v102);
        uint64_t v211 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v211, OS_LOG_TYPE_ERROR)) {
          goto LABEL_224;
        }
      }
      goto LABEL_225;
  }
}

uint64_t sub_1001EB1F4(unsigned int *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v10 = a2 >> 7;
  int v11 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  unsigned int v12 = (a2 >> 1) & 0x3F;
  if ((v10 & 1) == 0)
  {
    if (v11 != v12) {
      goto LABEL_21;
    }
    unsigned int v13 = (a2 >> 8) & 0x3F;
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v13
      || v13 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
    {
      unsigned int v14 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v15 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v14 <= v13)
      {
        if (v13 - v15 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
          goto LABEL_21;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v15) & 0x3Fu) < v13)
      }
      {
        goto LABEL_21;
      }
    }
    if (*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16)) {
      goto LABEL_21;
    }
    __int16 v19 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) + 1) & 0x3F;
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) = v19;
    sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, 0);
    sub_1001EE7FC(a1, a3, a4, a5);
LABEL_17:
    sub_1001EE2B0(a1);
    return 0;
  }
  if (v11 != v12) {
    goto LABEL_21;
  }
  unsigned int v16 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v16
    || v16 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v17 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v18 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v17 <= v16)
    {
      if (v16 - v18 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
        goto LABEL_21;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v18) & 0x3Fu) < v16)
    }
    {
      goto LABEL_21;
    }
  }
  if (!*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)
    && !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16))
  {
    __int16 v90 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) + 1) & 0x3F;
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) = v90;
    sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, 1);
    sub_1001EE7FC(a1, a3, a4, a5);
    if (*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 148))
    {
      *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 148) = 0;
    }
    else
    {
      uint64_t v91 = sub_1001EDB98((uint64_t)a1, (a2 >> 8) & 0x3F, 0);
      if (v91)
      {
        uint64_t v92 = v91;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v93, v94, v95, v96, v97, v98, v99, v92);
          unsigned int v100 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_1001EDB40((uint64_t)a1, 0);
    }
    goto LABEL_17;
  }
LABEL_21:
  int v20 = (a2 >> 7) & 1;
  int v21 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v22 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v21;
  unsigned int v23 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  if (v22 > 0x3F)
  {
    if (v12 < v23)
    {
      __int16 v25 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
      if (((*(unsigned char *)(sub_1001E6484(a1) + 54) + (_BYTE)v25) & 0x3Fu) <= v12) {
        goto LABEL_41;
      }
    }
  }
  else
  {
    if (v23 > v12) {
      goto LABEL_41;
    }
    int v24 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    if (*(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v24 < v12) {
      goto LABEL_41;
    }
  }
  unsigned int v26 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  unsigned int v27 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v28 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  if (v26 >= v27)
  {
    if (v28 > v12) {
      goto LABEL_41;
    }
LABEL_31:
    if (v12 >= *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8)) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
  if (v28 > v12) {
    goto LABEL_31;
  }
LABEL_32:
  unsigned int v29 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v29
    || v29 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v30 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v31 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v30 <= v29)
    {
      if (v29 - v31 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
        goto LABEL_41;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v31) & 0x3Fu) < v29)
    }
    {
      goto LABEL_41;
    }
  }
  if ((!v20 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
    && !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16))
  {
    uint64_t v64 = sub_1001E6484(a1);
    sub_1001E6E08(*(unsigned __int16 **)(v64 + 112));
    uint64_t v55 = (uint64_t)a1;
    unsigned int v56 = (a2 >> 8) & 0x3F;
LABEL_96:
    sub_1001ED99C(v55, v56, v20);
    return 0;
  }
LABEL_41:
  int v32 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v33 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v32;
  unsigned int v34 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  if (v33 > 0x3F)
  {
    if (v12 < v34)
    {
      __int16 v36 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
      if (((*(unsigned char *)(sub_1001E6484(a1) + 54) + (_BYTE)v36) & 0x3Fu) <= v12) {
        goto LABEL_61;
      }
    }
  }
  else
  {
    if (v34 > v12) {
      goto LABEL_61;
    }
    int v35 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    if (*(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v35 < v12) {
      goto LABEL_61;
    }
  }
  int v37 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v38 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v37;
  unsigned int v39 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  if (v38 > 0x3F)
  {
    if (v12 <= v39)
    {
      int v40 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
      if (v40 + *(unsigned __int8 *)(sub_1001E6484(a1) + 54) - 64 <= (int)v12) {
        goto LABEL_61;
      }
    }
  }
  else if (v12 <= v39)
  {
    goto LABEL_61;
  }
  unsigned int v41 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v41
    || v41 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v42 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v43 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v42 <= v41)
    {
      if (v41 - v43 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
        goto LABEL_61;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v43) & 0x3Fu) < v41)
    }
    {
      goto LABEL_61;
    }
  }
  if (v20 && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)
    || *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16))
  {
LABEL_61:
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8) == v12)
    {
      unsigned int v44 = (a2 >> 8) & 0x3F;
      if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) <= v44
        && v44 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
      {
        goto LABEL_87;
      }
      unsigned int v45 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v46 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v45 <= v44)
      {
        if (v44 - v46 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
          goto LABEL_87;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v46) & 0x3Fu) >= v44)
      }
      {
LABEL_87:
        if ((!v20 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
          && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16))
        {
          sub_1001ED99C((uint64_t)a1, v44, v20);
          sub_1001EE88C(a1, a3);
          __int16 v59 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) + 1) & 0x3F;
          uint64_t v60 = sub_1001E6484(a1);
          uint64_t result = 0;
          *(_WORD *)(*(void *)(v60 + 112) + 8) = v59;
          return result;
        }
      }
    }
    else
    {
      unsigned int v44 = (a2 >> 8) & 0x3F;
    }
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v44
      || v44 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
    {
      unsigned int v47 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v48 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v47 <= v44)
      {
        if (v44 - v48 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32))
        {
LABEL_85:
          uint64_t v57 = sub_1001E6484(a1);
          sub_1001E6E08(*(unsigned __int16 **)(v57 + 112));
          return 543;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v48) & 0x3Fu) < v44)
      }
      {
        goto LABEL_85;
      }
    }
    int v49 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    unsigned int v50 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v49;
    unsigned int v51 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    if (v50 > 0x3F)
    {
      if (v12 < v51)
      {
        __int16 v53 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
        if (((*(unsigned char *)(sub_1001E6484(a1) + 54) + (_BYTE)v53) & 0x3Fu) <= v12) {
          goto LABEL_85;
        }
      }
    }
    else
    {
      if (v51 > v12) {
        goto LABEL_85;
      }
      int v52 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
      if (*(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v52 < v12) {
        goto LABEL_85;
      }
    }
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8) == v12
      || v20 && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)
      || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16))
    {
      goto LABEL_85;
    }
    uint64_t v54 = sub_1001E6484(a1);
    sub_1001E6E08(*(unsigned __int16 **)(v54 + 112));
    uint64_t v55 = (uint64_t)a1;
    unsigned int v56 = v44;
    goto LABEL_96;
  }
  uint64_t v61 = sub_1001E6484(a1);
  sub_1001E6E08(*(unsigned __int16 **)(v61 + 112));
  if (v12 >= *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8))
  {
    int v63 = v12 - *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  }
  else
  {
    uint64_t v62 = sub_1001E6484(a1);
    if ((int)(*(unsigned __int16 *)(*(void *)(v62 + 112) + 8) - (v12 | 0x40)) >= 0) {
      int v63 = -((*(unsigned __int16 *)(*(void *)(v62 + 112) + 8) - (v12 | 0x40)) & 0x3F);
    }
    else {
      int v63 = (((unsigned __int16)v12 | 0x40) - *(_WORD *)(*(void *)(v62 + 112) + 8)) & 0x3F;
    }
  }
  sub_1001ED99C((uint64_t)a1, v41, v20);
  if (v63 > 2)
  {
    uint64_t v79 = sub_1001EEA60((uint64_t)a1);
    if (v79)
    {
      uint64_t v80 = v79;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to send a REJ %!", v81, v82, v83, v84, v85, v86, v87, v80);
        uint64_t v88 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v88, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    uint64_t v89 = sub_1001E6484(a1);
    uint64_t result = 0;
    uint64_t v77 = *(void *)(v89 + 112);
    char v78 = 1;
  }
  else
  {
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144) = 0;
    *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 151) = 0;
    __int16 v65 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 152) = v65;
    sub_1001EE88C(a1, a3);
    uint64_t v66 = sub_1001EE938(a1, v12);
    if (v66)
    {
      uint64_t v67 = v66;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to send SREJ : %!", v68, v69, v70, v71, v72, v73, v74, v67);
        uint64_t v75 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    uint64_t v76 = sub_1001E6484(a1);
    uint64_t result = 0;
    uint64_t v77 = *(void *)(v76 + 112);
    char v78 = 2;
  }
  *(unsigned char *)(v77 + 3) = v78;
  return result;
}

uint64_t sub_1001EBDB4(unsigned int *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v10 = a2 >> 7;
  int v11 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  unsigned int v12 = (a2 >> 1) & 0x3F;
  if ((v10 & 1) == 0)
  {
    if (v11 != v12) {
      goto LABEL_19;
    }
    unsigned int v13 = (a2 >> 8) & 0x3F;
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v13
      || v13 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
    {
      unsigned int v14 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v15 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v14 <= v13)
      {
        if (v13 - v15 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
          goto LABEL_19;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v15) & 0x3Fu) < v13)
      }
      {
        goto LABEL_19;
      }
    }
    __int16 v19 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) + 1) & 0x3F;
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) = v19;
    sub_1001ED99C((uint64_t)a1, v13, 0);
    sub_1001EE7FC(a1, a3, a4, a5);
LABEL_16:
    sub_1001EE2B0(a1);
    uint64_t v20 = sub_1001E6484(a1);
    uint64_t result = 0;
    *(unsigned char *)(*(void *)(v20 + 112) + 3) = 0;
    return result;
  }
  if (v11 != v12) {
    goto LABEL_19;
  }
  unsigned int v16 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) <= v16
    && v16 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    goto LABEL_18;
  }
  unsigned int v17 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
  int v18 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
  if (v17 <= v16)
  {
    if (v16 - v18 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) + (_BYTE)v18) & 0x3Fu) >= v16)
  {
LABEL_18:
    if (*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)) {
      goto LABEL_19;
    }
    __int16 v36 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) + 1) & 0x3F;
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) = v36;
    sub_1001ED99C((uint64_t)a1, v16, 1);
    sub_1001EE7FC(a1, a3, a4, a5);
    if (*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 148))
    {
      *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 148) = 0;
    }
    else
    {
      uint64_t v37 = sub_1001EDB98((uint64_t)a1, v16, 0);
      if (v37)
      {
        uint64_t v38 = v37;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to retransmit I-Frames %!.", v39, v40, v41, v42, v43, v44, v45, v38);
          int v46 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_1001EDB40((uint64_t)a1, 0);
    }
    goto LABEL_16;
  }
LABEL_19:
  int v22 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v23 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v22;
  unsigned int v24 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  if (v23 > 0x3F)
  {
    if (v12 < v24)
    {
      __int16 v26 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
      if (((*(unsigned char *)(sub_1001E6484(a1) + 54) + (_BYTE)v26) & 0x3Fu) <= v12) {
        goto LABEL_38;
      }
    }
  }
  else
  {
    if (v24 > v12) {
      goto LABEL_38;
    }
    int v25 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    if (*(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v25 < v12) {
      goto LABEL_38;
    }
  }
  int v27 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v28 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v27;
  unsigned int v29 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  if (v28 > 0x3F)
  {
    if (v12 <= v29)
    {
      int v30 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
      if (v30 + *(unsigned __int8 *)(sub_1001E6484(a1) + 54) - 64 <= (int)v12) {
        goto LABEL_38;
      }
    }
  }
  else if (v12 <= v29)
  {
    goto LABEL_38;
  }
  unsigned int v31 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v31
    || v31 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v32 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v33 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v32 <= v31)
    {
      if (v31 - v33 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32))
      {
LABEL_38:
        uint64_t v35 = sub_1001E6484(a1);
        sub_1001E6E08(*(unsigned __int16 **)(v35 + 112));
        return 544;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v33) & 0x3Fu) < v31)
    }
    {
      goto LABEL_38;
    }
  }
  int v34 = (a2 >> 7) & 1;
  if (v34 && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)) {
    goto LABEL_38;
  }
  sub_1001ED99C((uint64_t)a1, v31, v34);
  return 0;
}

uint64_t sub_1001EC2E0(unsigned int *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (a2 >> 1) & 0x3F;
  if (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144)
    && *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 18) == v10)
  {
    unsigned int v11 = (a2 >> 8) & 0x3F;
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v11
      || v11 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
    {
      unsigned int v12 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v13 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v12 <= v11)
      {
        if (v11 - v13 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
          goto LABEL_14;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v13) & 0x3Fu) < v11)
      }
      {
        goto LABEL_14;
      }
    }
    if ((((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
      && !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 151)
      && *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144) == 1)
    {
      sub_1001EE88C(a1, a3);
      sub_1001EEEC4(a1);
      sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
      sub_1001EEFC8(a1, a3, a4, a5);
      __int16 v14 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 152);
      *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10) = v14;
      sub_1001EE2B0(a1);
      uint64_t v15 = 0;
      *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 3) = 0;
      return v15;
    }
  }
LABEL_14:
  if (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144)
    && *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 18) == v10)
  {
    unsigned int v16 = (a2 >> 8) & 0x3F;
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v16
      || v16 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
    {
      unsigned int v17 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v18 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v17 <= v16)
      {
        if (v16 - v18 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
          goto LABEL_31;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v18) & 0x3Fu) < v16)
      }
      {
        goto LABEL_31;
      }
    }
    if ((((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
      && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 151)
      && *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144) == 1)
    {
      sub_1001EE88C(a1, a3);
      sub_1001EEEC4(a1);
      sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
      sub_1001EEFC8(a1, a3, a4, a5);
      __int16 v19 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 152);
      *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10) = v19;
      uint64_t v20 = sub_1001EEA60((uint64_t)a1);
      if (v20)
      {
        uint64_t v21 = v20;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send a REJ %!", v22, v23, v24, v25, v26, v27, v28, v21);
          unsigned int v29 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      uint64_t v15 = 0;
      *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 3) = 1;
      return v15;
    }
  }
LABEL_31:
  if (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144)
    && *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 18) == v10)
  {
    unsigned int v30 = (a2 >> 8) & 0x3F;
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v30
      || v30 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
    {
      unsigned int v31 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      int v32 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
      if (v31 <= v30)
      {
        if (v30 - v32 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
          goto LABEL_43;
        }
      }
      else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
                + (_BYTE)v32) & 0x3Fu) < v30)
      }
      {
        goto LABEL_43;
      }
    }
    if ((((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
      && *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 144) >= 2u)
    {
      sub_1001EE88C(a1, a3);
      sub_1001EEEC4(a1);
      sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
      sub_1001EEFC8(a1, a3, a4, a5);
      return 0;
    }
  }
LABEL_43:
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8) != v10) {
    goto LABEL_52;
  }
  unsigned int v33 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v33
    || v33 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v34 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v35 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v34 <= v33)
    {
      if (v33 - v35 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
        goto LABEL_52;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v35) & 0x3Fu) < v33)
    }
    {
      goto LABEL_52;
    }
  }
  if (((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
  {
    int v44 = (a2 >> 7) & 1;
    sub_1001EE88C(a1, a3);
    __int16 v45 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) + 1) & 0x3F;
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) = v45;
    uint64_t v46 = (uint64_t)a1;
    unsigned int v47 = v33;
    int v48 = v44;
LABEL_125:
    sub_1001ED99C(v46, v47, v48);
    return 0;
  }
LABEL_52:
  int v36 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v37 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v36;
  unsigned int v38 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  if (v37 > 0x3F)
  {
    if (v10 < v38)
    {
      __int16 v40 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
      if (((*(unsigned char *)(sub_1001E6484(a1) + 54) + (_BYTE)v40) & 0x3Fu) <= v10) {
        goto LABEL_73;
      }
    }
  }
  else
  {
    if (v38 > v10) {
      goto LABEL_73;
    }
    int v39 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    if (*(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v39 < v10) {
      goto LABEL_73;
    }
  }
  int v41 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v42 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v41;
  unsigned int v43 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  if (v42 > 0x3F)
  {
    if (v10 <= v43)
    {
      int v49 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
      if (v49 + *(unsigned __int8 *)(sub_1001E6484(a1) + 54) - 64 <= (int)v10) {
        goto LABEL_73;
      }
    }
  }
  else if (v10 <= v43)
  {
    goto LABEL_73;
  }
  unsigned int v50 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v50
    || v50 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v51 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v52 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v51 <= v50)
    {
      if (v50 - v52 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
        goto LABEL_73;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v52) & 0x3Fu) < v50)
    }
    {
      goto LABEL_73;
    }
  }
  if ((((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
    && !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 151))
  {
    sub_1001EE88C(a1, a3);
    sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
    uint64_t v69 = sub_1001EE938(a1, (a2 >> 1) & 0x3F);
    if (v69)
    {
      uint64_t v70 = v69;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to send SREJ : %!", v71, v72, v73, v74, v75, v76, v77, v70);
        char v78 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    return 0;
  }
LABEL_73:
  int v53 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v54 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v53;
  unsigned int v55 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  if (v54 > 0x3F)
  {
    if (v10 < v55)
    {
      __int16 v57 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
      if (((*(unsigned char *)(sub_1001E6484(a1) + 54) + (_BYTE)v57) & 0x3Fu) <= v10) {
        goto LABEL_94;
      }
    }
  }
  else
  {
    if (v55 > v10) {
      goto LABEL_94;
    }
    int v56 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
    if (*(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v56 < v10) {
      goto LABEL_94;
    }
  }
  int v58 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 10);
  unsigned int v59 = *(unsigned __int8 *)(sub_1001E6484(a1) + 54) + v58;
  unsigned int v60 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  if (v59 > 0x3F)
  {
    if (v10 <= v60)
    {
      int v61 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
      if (v61 + *(unsigned __int8 *)(sub_1001E6484(a1) + 54) - 64 <= (int)v10) {
        goto LABEL_94;
      }
    }
  }
  else if (v10 <= v60)
  {
    goto LABEL_94;
  }
  unsigned int v62 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v62
    || v62 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v63 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v64 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v63 <= v62)
    {
      if (v62 - v64 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)) {
        goto LABEL_94;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v64) & 0x3Fu) < v62)
    }
    {
      goto LABEL_94;
    }
  }
  if ((((a2 >> 7) & 1) == 0 || !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2))
    && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 151))
  {
    int v48 = (a2 >> 7) & 1;
    uint64_t v46 = (uint64_t)a1;
    unsigned int v47 = (a2 >> 8) & 0x3F;
    goto LABEL_125;
  }
LABEL_94:
  if (!*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144)
    || !*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144))
  {
    goto LABEL_114;
  }
  unsigned __int8 v65 = 0;
  while (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 2 * v65 + 18) != v10)
  {
    if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 144) <= ++v65) {
      goto LABEL_114;
    }
  }
  if (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144)
    && *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 18) == v10)
  {
    goto LABEL_114;
  }
  unsigned int v66 = (a2 >> 8) & 0x3F;
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) > v66
    || v66 > *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
  {
    unsigned int v67 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    int v68 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
    if (v67 <= v66)
    {
      if (v66 - v68 > *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32))
      {
LABEL_114:
        if (*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 8 * v10 + 184))
        {
          unsigned int v79 = (a2 >> 8) & 0x3F;
          if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6) <= v79
            && v79 <= *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 4))
          {
            goto LABEL_121;
          }
          unsigned int v80 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
          int v81 = *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 6);
          if (v80 > v79)
          {
            if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32)
                 + (_BYTE)v81) & 0x3Fu) < v79)
              goto LABEL_123;
            goto LABEL_121;
          }
          if (v79 - v81 <= *(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32))
          {
LABEL_121:
            if (((a2 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)) {
              goto LABEL_123;
            }
            int v48 = (a2 >> 7) & 1;
            uint64_t v46 = (uint64_t)a1;
            unsigned int v47 = (a2 >> 8) & 0x3F;
            goto LABEL_125;
          }
        }
LABEL_123:
        uint64_t v82 = sub_1001E6484(a1);
        sub_1001E6E08(*(unsigned __int16 **)(v82 + 112));
        return 545;
      }
    }
    else if (((*(_DWORD *)(*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 176) + 32) {
              + (_BYTE)v68) & 0x3Fu) < v66)
    }
    {
      goto LABEL_114;
    }
  }
  if (((a2 >> 7) & 1) != 0 && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2)) {
    goto LABEL_114;
  }
  sub_1001EE88C(a1, a3);
  sub_1001ED99C((uint64_t)a1, (a2 >> 8) & 0x3F, (a2 >> 7) & 1);
  LOWORD(a3) = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 18);
  memset(__src, 0, 126);
  if (*(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 144) >= 2u)
  {
    uint64_t v92 = 0;
    while (1)
    {
      uint64_t v15 = sub_1001EE5E0((uint64_t)a1, a3, 0);
      if (v15) {
        break;
      }
      if (v92 == 62)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not find txSeq %d in our SREJ list", v111, v112, v113, v114, v115, v116, v117, v10);
          unsigned int v118 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v118, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        goto LABEL_130;
      }
      LODWORD(a3) = *(unsigned __int8 *)(*(void *)(sub_1001E6484(a1) + 112) + 2 * v92++ + 20);
      if (a3 == v10)
      {
        LOBYTE(a3) = v10;
        goto LABEL_142;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send SREJ: %!", v93, v94, v95, v96, v97, v98, v99, v15);
      unsigned int v100 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_142:
    __int16 v101 = *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144);
    if ((unsigned __int16)(v101 + ~v92) >= 0x40u)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Number of sRejFramesRemaining is too large %d", v102, v103, v104, v105, v106, v107, v108, (unsigned __int16)(v101 + ~v92));
        uint64_t v109 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v109, OS_LOG_TYPE_FAULT)) {
          sub_10074A624(v109);
        }
      }
      goto LABEL_130;
    }
    sub_1001E6484(a1);
    __memmove_chk();
    *((_WORD *)__src + (unsigned __int16)(v101 + ~v92)) = a3;
    uint64_t v110 = sub_1001E6484(a1);
    memmove((void *)(*(void *)(v110 + 112) + 18), __src, 0x7EuLL);
    *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144) = v101 - v92;
    if (v15) {
      goto LABEL_131;
    }
  }
  else
  {
    sub_10025B8C0();
LABEL_130:
    uint64_t v15 = 538;
LABEL_131:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send SREJ list : %!", v84, v85, v86, v87, v88, v89, v90, v15);
      uint64_t v91 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v15;
}

uint64_t sub_1001ED254(unsigned int *a1)
{
  uint64_t result = sub_1001E6484(a1);
  if (*(_DWORD *)(*(void *)(result + 112) + 160))
  {
    uint64_t v3 = sub_1001E6484(a1);
    sub_100026DB4(*(unsigned int *)(*(void *)(v3 + 112) + 160));
    uint64_t result = sub_1001E6484(a1);
    *(_DWORD *)(*(void *)(result + 112) + 160) = 0;
  }
  return result;
}

uint64_t sub_1001ED2A8(unsigned int *a1)
{
  if (!*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 156) || !*(_WORD *)(sub_1001E6484(a1) + 70)) {
    return 0;
  }
  if (*(_DWORD *)(*(void *)(sub_1001E6484(a1) + 112) + 164))
  {
    unsigned int v2 = *(_DWORD *)(*(void *)(sub_1001E6484(a1) + 112) + 164);
    uint64_t v3 = sub_1001E6484(a1);
    uint64_t v4 = sub_10025BC54(v2, (5243 * (*(unsigned __int16 *)(v3 + 70) >> 2)) >> 17);
  }
  else
  {
    v17[1] = a1 + 1;
    v17[0] = (const void *)2;
    unsigned int v7 = (5243 * (*(unsigned __int16 *)(sub_1001E6484(a1) + 70) >> 2)) >> 17;
    uint64_t v8 = sub_1001E6484(a1);
    uint64_t v4 = sub_1000268E4((uint64_t)sub_1001EF05C, v17, v7, (int *)(*(void *)(v8 + 112) + 164));
  }
  uint64_t v5 = v4;
  if (v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not register timer %!", v9, v10, v11, v12, v13, v14, v15, v5);
      unsigned int v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v5;
}

double sub_1001ED3E8(uint64_t a1)
{
  if (*(void *)(sub_1001E6484((unsigned int *)a1) + 112))
  {
    unsigned int v2 = *(char **)(sub_1001E6484((unsigned int *)a1) + 112);
    sub_1002595D8(*((void **)v2 + 22));
  }
  else
  {
    unsigned int v2 = (char *)sub_100022FE8(0x2C8uLL);
    *(void *)(sub_1001E6484((unsigned int *)a1) + 112) = v2;
  }
  *(_WORD *)unsigned int v2 = *(_WORD *)(a1 + 4);
  v2[2] = 1;
  *((_WORD *)v2 + 7) = 0;
  v2[16] = 0;
  *(void *)(v2 + 3) = 0;
  v2[11] = 0;
  *((void *)v2 + 18) = 0;
  *((_DWORD *)v2 + 38) = 0;
  v2[156] = 1;
  *((void *)v2 + 20) = 0;
  *((_DWORD *)v2 + 42) = 0;
  uint64_t v3 = sub_10025959C(0, 0);
  double result = 0.0;
  *(_OWORD *)(v2 + 184) = 0u;
  uint64_t v5 = v2 + 184;
  *((void *)v5 - 1) = v3;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *((_OWORD *)v5 + 6) = 0u;
  *((_OWORD *)v5 + 7) = 0u;
  *((_OWORD *)v5 + 8) = 0u;
  *((_OWORD *)v5 + 9) = 0u;
  *((_OWORD *)v5 + 10) = 0u;
  *((_OWORD *)v5 + 11) = 0u;
  *((_OWORD *)v5 + 12) = 0u;
  *((_OWORD *)v5 + 13) = 0u;
  *((_OWORD *)v5 + 14) = 0u;
  *((_OWORD *)v5 + 15) = 0u;
  *((_OWORD *)v5 + 16) = 0u;
  *((_OWORD *)v5 + 17) = 0u;
  *((_OWORD *)v5 + 18) = 0u;
  *((_OWORD *)v5 + 19) = 0u;
  *((_OWORD *)v5 + 20) = 0u;
  *((_OWORD *)v5 + 21) = 0u;
  *((_OWORD *)v5 + 22) = 0u;
  *((_OWORD *)v5 + 23) = 0u;
  *((_OWORD *)v5 + 24) = 0u;
  *((_OWORD *)v5 + 25) = 0u;
  *((_OWORD *)v5 + 26) = 0u;
  *((_OWORD *)v5 + 27) = 0u;
  *((_OWORD *)v5 + 28) = 0u;
  *((_OWORD *)v5 + 29) = 0u;
  *((_OWORD *)v5 + 30) = 0u;
  *((_OWORD *)v5 + 31) = 0u;
  *((void *)v5 + 64) = 0;
  *((_DWORD *)v5 + 130) = 0;
  return result;
}

uint64_t sub_1001ED4D8(unsigned int *a1)
{
  uint64_t result = sub_1001E6484(a1);
  uint64_t v3 = *(void *)(result + 112);
  if (v3)
  {
    for (uint64_t i = 184; i != 696; i += 8)
    {
      uint64_t v5 = *(void **)(v3 + i);
      if (v5)
      {
        sub_1001ED5C0(v5);
        *(void *)(v3 + i) = 0;
      }
    }
    int v6 = *(void **)(v3 + 696);
    if (v6)
    {
      sub_100023010(v6);
      *(void *)(v3 + 696) = 0;
    }
    sub_1001ED604(a1);
    sub_1001ED254(a1);
    uint64_t v7 = *(unsigned int *)(v3 + 168);
    if (v7)
    {
      sub_100026DB4(v7);
      *(_DWORD *)(v3 + 168) = 0;
    }
    uint64_t v8 = *(void *)(v3 + 176);
    if (v8)
    {
      uint64_t v9 = sub_1002599CC(v8);
      for (j = v9; j; uint64_t v9 = j)
      {
        uint64_t v10 = (void *)sub_1002599F0(v9);
        uint64_t v11 = v10[5];
        if (v11) {
          sub_10025C3A8(v11);
        }
        sub_100023010(v10);
        sub_1002599D4((uint64_t)&j);
      }
      sub_1002595D8(*(void **)(v3 + 176));
    }
    sub_100023010((void *)v3);
    uint64_t result = sub_1001E6484(a1);
    *(void *)(result + 112) = 0;
  }
  return result;
}

void sub_1001ED5C0(void *ptr)
{
  unsigned int v2 = (void *)ptr[1];
  if (v2) {
    sub_100023010(v2);
  }
  ptr[1] = 0;

  sub_100023010(ptr);
}

uint64_t sub_1001ED604(unsigned int *a1)
{
  uint64_t result = sub_1001E6484(a1);
  if (*(_DWORD *)(*(void *)(result + 112) + 164))
  {
    uint64_t v3 = sub_1001E6484(a1);
    sub_100026DB4(*(unsigned int *)(*(void *)(v3 + 112) + 164));
    uint64_t result = sub_1001E6484(a1);
    *(_DWORD *)(*(void *)(result + 112) + 164) = 0;
  }
  return result;
}

uint64_t sub_1001ED658(unsigned int *a1)
{
  uint64_t v1 = *(void *)(sub_1001E6484(a1) + 112);
  __int16 v2 = *(_WORD *)(v1 + 4);
  *(_WORD *)(v1 + 4) = ((_BYTE)v2 + 1) & 0x3F;
  return v2;
}

BOOL sub_1001ED688(unsigned int *a1)
{
  uint64_t v2 = sub_1001E6484(a1);
  unsigned int v3 = sub_100059E10(*(void *)(*(void *)(v2 + 112) + 176));
  return v3 < *(unsigned __int8 *)(sub_1001E6484(a1) + 66)
      && !*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 15)
      && *(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 2) == 1;
}

uint64_t sub_1001ED704(unsigned int *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(sub_1001E6484(a1) + 112);
  if (*(unsigned char *)(sub_1001E6484(a1) + 67)) {
    ++*(unsigned char *)(a2 + 48);
  }
  ++*(_WORD *)(v4 + 154);
  sub_1001ED78C(a1);
  sub_1002597B8(*(void *)(v4 + 176), a2, 8, sub_1001E6CD8);
  return 0;
}

uint64_t sub_1001ED78C(unsigned int *a1)
{
  if (!*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 156)
    || !*(_WORD *)(sub_1001E6484(a1) + 68)
    || *(_DWORD *)(*(void *)(sub_1001E6484(a1) + 112) + 164))
  {
    return 0;
  }
  if (*(_DWORD *)(*(void *)(sub_1001E6484(a1) + 112) + 160))
  {
    unsigned int v4 = *(_DWORD *)(*(void *)(sub_1001E6484(a1) + 112) + 160);
    uint64_t v5 = sub_1001E6484(a1);
    uint64_t v6 = sub_10025BC54(v4, (5243 * (*(unsigned __int16 *)(v5 + 68) >> 2)) >> 17);
  }
  else
  {
    v17[1] = a1 + 1;
    v17[0] = (const void *)2;
    unsigned int v7 = (5243 * (*(unsigned __int16 *)(sub_1001E6484(a1) + 68) >> 2)) >> 17;
    uint64_t v8 = sub_1001E6484(a1);
    uint64_t v6 = sub_1000268E4((uint64_t)sub_1001EF254, v17, v7, (int *)(*(void *)(v8 + 112) + 160));
  }
  uint64_t v2 = v6;
  if (v6)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not register timer %!", v9, v10, v11, v12, v13, v14, v15, v2);
      unsigned int v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v2;
}

uint64_t sub_1001ED8E0(unsigned int *a1)
{
  uint64_t v1 = sub_1001E6484(a1);
  return (unsigned __int16)sub_100059E10(*(void *)(*(void *)(v1 + 112) + 176));
}

uint64_t sub_1001ED908(unsigned int *a1)
{
  return *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
}

uint64_t sub_1001ED928(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(sub_1001E6484(a1) + 112);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 176);
    if (v6)
    {
      uint64_t v7 = sub_1002599CC(v6);
      for (i = v7; i; uint64_t v7 = i)
      {
        uint64_t v8 = sub_1002599F0(v7);
        if (*(void *)(v8 + 8) == a2) {
          *(void *)(v8 + 8) = a3;
        }
        sub_1002599D4((uint64_t)&i);
      }
    }
  }
  return 0;
}

uint64_t sub_1001ED99C(uint64_t a1, unsigned int a2, int a3)
{
  if (*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2) == 1)
  {
    return sub_1001EE1D8((unsigned int *)a1, a2);
  }
  else
  {
    uint64_t result = sub_1001EE1D8((unsigned int *)a1, a2);
    if (a3 == 1)
    {
      sub_1001ED604((unsigned int *)a1);
      uint64_t v7 = sub_1001E6484((unsigned int *)a1);
      if (sub_100059E10(*(void *)(*(void *)(v7 + 112) + 176)))
      {
        uint64_t v8 = sub_1001ED78C((unsigned int *)a1);
        if (v8)
        {
          uint64_t v9 = v8;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to restart retransmission timer : %!", v10, v11, v12, v13, v14, v15, v16, v9);
            unsigned int v17 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
      }
      *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2) = 1;
      return sub_1001F3B00(*(unsigned __int16 *)(a1 + 4));
    }
  }
  return result;
}

uint64_t sub_1001EDAB8(unsigned int *a1, char a2, char a3)
{
  if (*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16))
  {
    return sub_1001E6FBC((uint64_t)a1, a2, a3);
  }
  else
  {
    return sub_1001E721C((uint64_t)a1, a2, a3);
  }
}

uint64_t sub_1001EDB40(uint64_t a1, char a2)
{
  if (!*(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 14)) {
    *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 14) = a2;
  }
  uint64_t v4 = *(unsigned __int16 *)(a1 + 4);

  return sub_1001F3B00(v4);
}

uint64_t sub_1001EDB98(uint64_t a1, unsigned int a2, char a3)
{
  uint64_t v6 = *(void *)(sub_1001E6484((unsigned int *)a1) + 112);
  uint64_t v43 = 0;
  memset(v42, 0, sizeof(v42));
  uint64_t v7 = sub_1002599CC(*(void *)(v6 + 176));
  int v41 = (void *)v7;
  if (v7)
  {
    char v8 = a3 ^ 1;
    while (*(unsigned __int16 *)(sub_1002599F0(v7) + 38) != a2)
    {
      sub_1002599D4((uint64_t)&v41);
      uint64_t v7 = (uint64_t)v41;
      if (!v41) {
        goto LABEL_5;
      }
    }
    int v18 = v41;
    do
    {
      uint64_t v19 = sub_1002599F0((uint64_t)v41);
      sub_1002596A4((uint64_t)v42, v19, 8);
    }
    while ((sub_1002599D4((uint64_t)&v41) & 1) != 0);
    sub_100259AF4(*(void **)(v6 + 176), v18, 0);
    uint64_t v20 = sub_1002599CC((uint64_t)v42);
    int v41 = (void *)v20;
    if (v20)
    {
      while (1)
      {
        uint64_t v21 = sub_1002599F0(v20);
        if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67))
        {
          unsigned int v22 = *(unsigned __int8 *)(v21 + 48);
          if (v22 >= *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)) {
            break;
          }
        }
        if ((v8 & 1) == 0) {
          *(unsigned char *)(v6 + 14) = 1;
        }
        if (sub_1001F5104(v21))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to retransmit packet.", v23, v24, v25, v26, v27, v28, v29, v40);
            unsigned int v30 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
            {
              unsigned int v31 = sub_100050714();
              *(_DWORD *)int buf = 136446466;
              __int16 v45 = v31;
              __int16 v46 = 1024;
              int v47 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_1002597B8(*(void *)(v6 + 176), v21, 8, sub_1001E6CD8);
        }
        sub_1002599D4((uint64_t)&v41);
        uint64_t v20 = (uint64_t)v41;
        char v8 = 1;
        if (!v41) {
          goto LABEL_22;
        }
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Retry count exceeded", v32, v33, v34, v35, v36, v37, v38, v40);
        int v39 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
      return 541;
    }
    else
    {
LABEL_22:
      sub_100259640((uint64_t)v42);
      if (!*(_DWORD *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 160)) {
        sub_1001ED78C((unsigned int *)a1);
      }
      return 0;
    }
  }
  else
  {
LABEL_5:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not find the IFrame with reqSeq %d", v9, v10, v11, v12, v13, v14, v15, a2);
      uint64_t v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 540;
  }
}

uint64_t sub_1001EDE84(unsigned int *a1)
{
  *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 154) = 0;
  uint64_t v2 = *(void *)(sub_1001E6484(a1) + 112);
  int v3 = *(unsigned __int8 *)(v2 + 16);
  if (*(unsigned char *)(v2 + 16))
  {
    sub_1001E6FBC((uint64_t)a1, 0, 1);
    char v4 = 0;
  }
  else
  {
    char v4 = 1;
  }
  if (*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 15))
  {
    uint64_t v5 = sub_1001E6484(a1);
    if (sub_100059E10(*(void *)(*(void *)(v5 + 112) + 176))) {
      sub_1001ED78C(a1);
    }
  }
  if (!*(unsigned char *)(*(void *)(sub_1001E6484(a1) + 112) + 16)
    && !*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 154))
  {
    sub_1001E721C((uint64_t)a1, 0, v3 == 0);
    char v4 = 0;
  }

  return sub_1001EDB40((uint64_t)a1, v4);
}

uint64_t sub_1001EDF74(uint64_t a1, int a2)
{
  uint64_t result = sub_1001E6484((unsigned int *)a1);
  if (a2 == 1 && *(unsigned char *)(*(void *)(result + 112) + 2) != 1)
  {
    sub_1001ED604((unsigned int *)a1);
    uint64_t v5 = sub_1001E6484((unsigned int *)a1);
    if (sub_100059E10(*(void *)(*(void *)(v5 + 112) + 176)))
    {
      uint64_t v6 = sub_1001ED78C((unsigned int *)a1);
      if (v6)
      {
        uint64_t v7 = v6;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to restart retransmission timer : %!", v8, v9, v10, v11, v12, v13, v14, v7);
          uint64_t v15 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
    *(unsigned char *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 2) = 1;
    return sub_1001F3B00(*(unsigned __int16 *)(a1 + 4));
  }
  return result;
}

uint64_t sub_1001EE04C(uint64_t a1, int a2, int a3)
{
  uint64_t v6 = *(void *)(sub_1001E6484((unsigned int *)a1) + 112);
  uint64_t v7 = (void *)sub_1002599CC(*(void *)(v6 + 176));
  ptr = v7;
  if (!v7)
  {
LABEL_18:
    if (!*(_DWORD *)(*(void *)(sub_1001E6484((unsigned int *)a1) + 112) + 160))
    {
      sub_1001ED604((unsigned int *)a1);
      sub_1001ED78C((unsigned int *)a1);
    }
    return 0;
  }
  while (1)
  {
    uint64_t v8 = sub_1002599F0((uint64_t)v7);
    if (*(unsigned __int16 *)(v8 + 38) == a2) {
      break;
    }
    sub_1002599D4((uint64_t)&ptr);
    uint64_t v7 = ptr;
    if (!ptr) {
      goto LABEL_18;
    }
  }
  uint64_t v9 = v8;
  if (!*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67)
    || (unsigned int v10 = *(unsigned __int8 *)(v9 + 48), v10 < *(unsigned __int8 *)(sub_1001E6484((unsigned int *)a1) + 67)))
  {
    if (a3) {
      *(unsigned char *)(v6 + 14) = 1;
    }
    if (sub_1001F5104(v9))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to retransmit packet.", v11, v12, v13, v14, v15, v16, v17, v28);
        int v18 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      sub_100259A44(*(void *)(v6 + 176), ptr, 0);
    }
    goto LABEL_18;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Retry count exceeded", v19, v20, v21, v22, v23, v24, v25, v28);
    uint64_t v26 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  sub_1001E121C(*(unsigned __int16 *)(a1 + 4), 436);
  return 542;
}

uint64_t sub_1001EE1D8(unsigned int *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(sub_1001E6484(a1) + 112);
  uint64_t v5 = (void *)sub_1002599CC(*(void *)(v4 + 176));
  ptr = v5;
  if (v5)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = sub_1002599F0((uint64_t)v5);
        unsigned int v7 = *(unsigned __int16 *)(v4 + 6);
        unsigned int v8 = *(unsigned __int16 *)(v6 + 38);
        if (v7 <= v8 && v8 < a2) {
          break;
        }
        BOOL v10 = v7 > v8 && v8 >= a2;
        BOOL v11 = !v10;
        if (v7 > a2 && v11) {
          break;
        }
        sub_1002599D4((uint64_t)&ptr);
        uint64_t v5 = ptr;
        if (!ptr) {
          goto LABEL_21;
        }
      }
      sub_1001F2DB8((void *)v6);
      uint64_t v14 = ptr;
      sub_1002599D4((uint64_t)&v14);
      sub_100259A44(*(void *)(v4 + 176), ptr, 1);
      uint64_t v5 = v14;
      ptr = v14;
    }
    while (v14);
  }
LABEL_21:
  *(_WORD *)(v4 + 6) = a2;
  uint64_t result = sub_100059E10(*(void *)(v4 + 176));
  if (!result) {
    return sub_1001ED254(a1);
  }
  return result;
}

uint64_t sub_1001EE2B0(unsigned int *a1)
{
  uint64_t v2 = *(void *)(sub_1001E6484(a1) + 112);
  if (*(unsigned char *)(v2 + 16))
  {
    return sub_1001E6FBC((uint64_t)a1, 0, 0);
  }
  if (*(unsigned char *)(v2 + 15)
    || !sub_1001F51D8(*((unsigned __int16 *)a1 + 2))
    || (uint64_t v4 = sub_1001E6484(a1),
        unsigned int v5 = sub_100059E10(*(void *)(*(void *)(v4 + 112) + 176)),
        v5 >= *(unsigned __int8 *)(sub_1001E6484(a1) + 66)))
  {
    v13[1] = a1 + 1;
    v13[0] = (const void *)2;
    int v7 = *(_DWORD *)(v2 + 168);
    uint64_t v6 = (unsigned int *)(v2 + 168);
    unsigned __int16 v8 = *((_WORD *)v6 - 78) + 1;
    *((_WORD *)v6 - 78) = v8;
    if (v7)
    {
      unsigned int v9 = v8;
      uint64_t result = sub_1001E6484(a1);
      if (*(unsigned __int8 *)(result + 54) <= 0x23u)
      {
        uint64_t result = sub_1001E6484(a1);
        unsigned int v10 = *(unsigned __int8 *)(result + 54) >> 2;
      }
      else
      {
        unsigned int v10 = 8;
      }
      if (v10 >= v9) {
        return result;
      }
      sub_100026DB4(*v6);
      int v11 = 0;
      uint64_t v12 = 0;
    }
    else
    {
      int v11 = 1;
      uint64_t v12 = (int *)v6;
    }
    return sub_1000268E4((uint64_t)sub_1001EE430, v13, v11, v12);
  }

  return sub_1001EDB40((uint64_t)a1, 0);
}

void sub_1001EE430(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
  unsigned int v10 = 0;
  if (sub_1001DD56C(v1, (uint64_t *)&v10))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SFrame ac Timeout triggered on a released channel (0x%x), this is bad.", v2, v3, v4, v5, v6, v7, v8, v1);
      unsigned int v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(_WORD *)(*(void *)(sub_1001E6484(v10) + 112) + 12) = 0;
    *(_DWORD *)(*(void *)(sub_1001E6484(v10) + 112) + 168) = 0;
    sub_1001E721C((uint64_t)v10, 0, 0);
  }
}

uint64_t sub_1001EE4E4(unsigned int *a1)
{
  if (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 144))
  {
    uint64_t v2 = *(void *)(sub_1001E6484(a1) + 112);
    uint64_t v3 = sub_1001E6484(a1);
    uint64_t v4 = sub_1001EE5E0((uint64_t)a1, *(unsigned char *)(v2 + 2 * *(unsigned __int16 *)(*(void *)(v3 + 112) + 144) + 16), 1);
    if (v4)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to send SREJ : %!", v5, v6, v7, v8, v9, v10, v11, v4);
        uint64_t v12 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Nothing queued in SREJ list.", v13, v14, v15, v16, v17, v18, v19, v22);
      uint64_t v20 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 539;
  }
  return v4;
}

uint64_t sub_1001EE5E0(uint64_t a1, char a2, char a3)
{
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v22 = 0;
  __int16 v17 = 0;
  LOBYTE(v18) = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
  *((void *)&v18 + 1) = *(void *)sub_1001E6484((unsigned int *)a1);
  LODWORD(v19) = 0;
  WORD2(v19) = *(_WORD *)(a1 + 4);
  WORD3(v19) = 256;
  BYTE8(v19) = 0;
  size_t v6 = (sub_1001F24D0((unsigned int *)a1, 3, 0, a3, a2, (_WORD *)&v22 + 2) + 4);
  WORD5(v19) = 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0) + v6;
  LOBYTE(v22) = v6 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0);
  BYTE1(v22) = (unsigned __int16)(v6 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0)) >> 8;
  WORD1(v22) = *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 8);
  sub_1000226D0((uint64_t)v20 + 8, 2u);
  sub_100022798((unsigned __int8 *)v20 + 8, (char *)&v22, v6, 2u);
  if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78))
  {
    sub_1001F13E8((uint64_t)v20 + 8, &v17);
    sub_100022798((unsigned __int8 *)v20 + 8, (char *)&v17, 2uLL, 2u);
  }
  uint64_t v7 = sub_1001F4F80((uint64_t)&v18);
  if (v7)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send S-Frame %!.", v8, v9, v10, v11, v12, v13, v14, v7);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v7;
}

void sub_1001EE7FC(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v8 = (*(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10) + 1) & 0x3F;
  *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 10) = v8;
  sub_1001ED254(a1);
  sub_1001ED604(a1);

  sub_1001EEC80((uint64_t)a1, a2, a3, a4);
}

uint64_t sub_1001EE88C(unsigned int *a1, uint64_t a2)
{
  if (*(void *)(*(void *)(sub_1001E6484(a1) + 112) + 8 * *(unsigned __int16 *)(a2 + 2) + 184))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Got the same frame twice (txSeq=%d", v4, v5, v6, v7, v8, v9, v10, *(unsigned __int16 *)(a2 + 2));
      uint64_t v11 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  uint64_t result = sub_1001E6484(a1);
  *(void *)(*(void *)(result + 112) + 8 * *(unsigned __int16 *)(a2 + 2) + 184) = a2;
  return result;
}

uint64_t sub_1001EE938(unsigned int *a1, unsigned __int8 a2)
{
  unsigned int v4 = *(unsigned __int8 *)(*(void *)(sub_1001E6484(a1) + 112) + 8);
  unsigned __int8 v5 = a2 + 64;
  if (v4 <= a2) {
    unsigned __int8 v5 = a2;
  }
  unsigned int v6 = v5;
  if (v5 <= v4)
  {
LABEL_6:
    uint64_t v10 = 0;
  }
  else
  {
    while (1)
    {
      uint64_t v7 = sub_1001EE5E0((uint64_t)a1, v4 & 0x3F, 0);
      if (v7) {
        break;
      }
      uint64_t v8 = *(void *)(sub_1001E6484(a1) + 112);
      *(_WORD *)(v8 + 2 * *(unsigned __int16 *)(*(void *)(sub_1001E6484(a1) + 112) + 144) + 18) = v4 & 0x3F;
      uint64_t v9 = sub_1001E6484(a1);
      ++*(_WORD *)(*(void *)(v9 + 112) + 144);
      LOBYTE(v4) = v4 + 1;
      if (v6 <= v4) {
        goto LABEL_6;
      }
    }
    uint64_t v10 = v7;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send SREJ : %!", v12, v13, v14, v15, v16, v17, v18, v10);
      long long v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  *(_WORD *)(*(void *)(sub_1001E6484(a1) + 112) + 8) = (a2 + 1) & 0x3F;
  return v10;
}

uint64_t sub_1001EEA60(uint64_t a1)
{
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v19 = 0;
  __int16 v14 = 0;
  LOBYTE(v15) = *(__int16 *)(sub_1001E6484((unsigned int *)a1) + 38) == -1;
  *((void *)&v15 + 1) = *(void *)sub_1001E6484((unsigned int *)a1);
  LODWORD(v16) = 0;
  WORD2(v16) = *(_WORD *)(a1 + 4);
  WORD3(v16) = 256;
  BYTE8(v16) = 0;
  uint64_t v2 = sub_1001E6484((unsigned int *)a1);
  size_t v3 = (sub_1001F24D0((unsigned int *)a1, 1, 0, 0, *(unsigned char *)(*(void *)(v2 + 112) + 8), (_WORD *)&v19 + 2)+ 4);
  WORD5(v16) = 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0) + v3;
  uint64_t v19 = (v3 - 4 + 2 * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0));
  *(_DWORD *)((char *)&v19 + 1) = ((unsigned __int16)(v3
                                                                     - 4
                                                                     + 2
                                                                     * (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78) != 0)) >> 8);
  WORD1(v19) = *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 8);
  sub_1000226D0((uint64_t)v17 + 8, 2u);
  sub_100022798((unsigned __int8 *)v17 + 8, (char *)&v19, v3, 2u);
  if (*(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 78))
  {
    sub_1001F13E8((uint64_t)v17 + 8, &v14);
    sub_100022798((unsigned __int8 *)v17 + 8, (char *)&v14, 2uLL, 2u);
  }
  uint64_t v4 = sub_1001F4F80((uint64_t)&v15);
  if (v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send S-Frame %!.", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v4;
}

void sub_1001EEC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1001E6484((unsigned int *)a1) + 112);
  if (*(unsigned char *)(a2 + 4) == 1)
  {
    if (*(void *)(v8 + 696)) {
      sub_10025B8C0();
    }
    uint64_t v9 = (char *)sub_100022FE8(*(unsigned __int16 *)(a2 + 6));
    *(void *)(v8 + 696) = v9;
    if (!v9) {
      goto LABEL_23;
    }
    *(unsigned char *)(v8 + 708) = 0;
  }
  else
  {
    if (!*(unsigned char *)(a2 + 4))
    {
      sub_1001E226C(*(unsigned __int16 *)(a1 + 4), *(void *)(a2 + 8), *(unsigned __int16 *)(a2 + 16), *(unsigned __int16 *)(a2 + 2), a3, a4);
LABEL_12:
LABEL_14:
      sub_1001ED5C0((void *)a2);
      return;
    }
    uint64_t v9 = *(char **)(v8 + 696);
    if (!v9)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Looks like we didn't get a START before this position (%d) -> ignoring.", v14, v15, v16, v17, v18, v19, v20, *(unsigned __int8 *)(a2 + 4));
        uint64_t v21 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_14;
    }
  }
  size_t v10 = *(unsigned __int16 *)(a2 + 16);
  uint64_t v11 = *(unsigned int *)(v8 + 704);
  if (*(unsigned __int16 *)(a2 + 6) - v11 >= v10)
  {
    memmove(&v9[v11], *(const void **)(a2 + 8), v10);
    int v12 = *(_DWORD *)(v8 + 704) + *(unsigned __int16 *)(a2 + 16);
    *(_DWORD *)(v8 + 704) = v12;
    char v13 = *(unsigned char *)(v8 + 708) | a3;
    *(unsigned char *)(v8 + 708) = v13;
    if (*(unsigned char *)(a2 + 4) == 2)
    {
      sub_1001E226C(*(unsigned __int16 *)(a1 + 4), *(void *)(v8 + 696), (unsigned __int16)v12, *(unsigned __int16 *)(a2 + 2), v13 != 0, a4);
      sub_100023010(*(void **)(v8 + 696));
      *(void *)(v8 + 696) = 0;
      *(_DWORD *)(v8 + 704) = 0;
    }
    goto LABEL_12;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"retransmissionData->reassemblyPacket buffer space (%d) is too small for received data (%d).", v22, v23, v24, v25, v26, v27, v28, *(unsigned __int16 *)(a2 + 6) - *(_DWORD *)(v8 + 704));
    a2 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled((os_log_t)a2, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  sub_10010B394(428);
LABEL_23:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to allocate %d bytes for retransmissionData.", v29, v30, v31, v32, v33, v34, v35, *(unsigned __int16 *)(a2 + 6));
    uint64_t v36 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v37 = sub_10010B394(106);
  sub_1001EEEC4(v37);
}

uint64_t sub_1001EEEC4(unsigned int *a1)
{
  uint64_t v2 = sub_1001E6484(a1);
  __int16 v3 = *(_WORD *)(*(void *)(v2 + 112) + 144);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v11 - v4;
  bzero((char *)&v11 - v4, v6);
  uint64_t result = sub_1001E6484(a1);
  uint64_t v8 = *(void *)(result + 112);
  if ((v3 & 0xFE) != 0)
  {
    size_t v9 = (v3 - 1);
    memmove(v5, (const void *)(v8 + 20), v9);
    uint64_t v10 = sub_1001E6484(a1);
    memmove((void *)(*(void *)(v10 + 112) + 18), v5, v9);
    uint64_t result = sub_1001E6484(a1);
    --*(_WORD *)(*(void *)(result + 112) + 144);
  }
  else
  {
    *(_WORD *)(v8 + 144) = 0;
  }
  return result;
}

void sub_1001EEFC8(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1001E6484(a1) + 112);
  unsigned int v9 = *(unsigned __int16 *)(a2 + 2);
  if (v9 == *(unsigned __int16 *)(v8 + 152))
  {
    for (uint64_t i = v8 + 8 * v9; ; uint64_t i = v8 + 8 * v9)
    {
      uint64_t v13 = *(void *)(i + 184);
      int v12 = (void *)(i + 184);
      uint64_t v11 = v13;
      if (!v13) {
        break;
      }
      sub_1001EEC80((uint64_t)a1, v11, a3, a4);
      *(_WORD *)(v8 + 152) = (*(_WORD *)(v8 + 152) + 1) & 0x3F;
      void *v12 = 0;
      unsigned int v9 = (v9 + 1) & 0x3F;
    }
  }
}

void sub_1001EF05C(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
  unsigned int v42 = 0;
  if (sub_1001DD56C(v1, (uint64_t *)&v42))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Monitor timer triggered on a released channel (0x%x), this is bad.", v2, v3, v4, v5, v6, v7, v8, v1);
      unsigned int v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
LABEL_20:
      }
        sub_100744F6C();
    }
  }
  else
  {
    *(_DWORD *)(*(void *)(sub_1001E6484(v42) + 112) + 164) = 0;
    uint64_t v10 = v42;
    if (*(unsigned char *)(*(void *)(sub_1001E6484(v42) + 112) + 2))
    {
      sub_10025B8C0();
      return;
    }
    unsigned int v11 = *(unsigned __int8 *)(*(void *)(sub_1001E6484(v10) + 112) + 146);
    if (v11 >= *(unsigned __int8 *)(sub_1001E6484(v10) + 67))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Monitor timeout expired", v23, v24, v25, v26, v27, v28, v29, v41);
        uint64_t v30 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_1001E121C(*((unsigned __int16 *)v10 + 2), 436);
    }
    else
    {
      char v12 = *(unsigned char *)(*(void *)(sub_1001E6484(v10) + 112) + 146) + 1;
      *(unsigned char *)(*(void *)(sub_1001E6484(v10) + 112) + 146) = v12;
      uint64_t v13 = sub_1001EDAB8(v10, 1, 0);
      if (v13)
      {
        uint64_t v14 = v13;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send RR or RNR : %!", v15, v16, v17, v18, v19, v20, v21, v14);
          uint64_t v22 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        uint64_t v31 = sub_1001ED2A8(v10);
        if (v31)
        {
          uint64_t v32 = v31;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to start monitor timer %!.", v33, v34, v35, v36, v37, v38, v39, v32);
            uint64_t v40 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
              goto LABEL_20;
            }
          }
        }
      }
    }
  }
}

void sub_1001EF254(uint64_t a1)
{
  uint64_t v1 = **(unsigned __int16 **)(a1 + 8);
  uint64_t v31 = 0;
  if (sub_1001DD56C(v1, (uint64_t *)&v31))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Monitor timer triggered on a released channel (0x%x), this is bad.", v2, v3, v4, v5, v6, v7, v8, v1);
      unsigned int v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
LABEL_4:
      }
        sub_100744F6C();
    }
  }
  else
  {
    *(_DWORD *)(*(void *)(sub_1001E6484(v31) + 112) + 160) = 0;
    uint64_t v10 = v31;
    if (*(unsigned char *)(*(void *)(sub_1001E6484(v31) + 112) + 2) == 1)
    {
      uint64_t v11 = sub_1001EDAB8(v10, 1, 0);
      if (v11)
      {
        uint64_t v12 = v11;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send RR or RNR : %!", v13, v14, v15, v16, v17, v18, v19, v12);
          uint64_t v20 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        *(unsigned char *)(*(void *)(sub_1001E6484(v10) + 112) + 146) = 1;
        uint64_t v21 = sub_1001ED2A8(v10);
        if (v21)
        {
          uint64_t v22 = v21;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to start monitor timer %!.", v23, v24, v25, v26, v27, v28, v29, v22);
            uint64_t v30 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        *(unsigned char *)(*(void *)(sub_1001E6484(v10) + 112) + 2) = 0;
      }
    }
    else
    {
      sub_10025B8C0();
    }
  }
}

void sub_1001EF3E8(uint64_t a1, __int16 a2, int a3)
{
  qword_100A05328 = a1;
  word_100A05330 = a2;
  if (a3 != 1216)
  {
    if ((byte_100A05334 & 1) == 0) {
      sub_10025B8C0();
    }
    v14[0] = (const void *)8;
    byte_100A05334 = 0;
    sub_100026C30((uint64_t)&unk_100A0533C);
    v15[0] = a3;
    v15[1] = byte_100A05338;
    v14[1] = v15;
    uint64_t v4 = sub_100026DA8((uint64_t)sub_1001EF4D8, v14, 0);
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_Dispatch_RegisterFunc failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

void sub_1001EF4D8(uint64_t a1)
{
}

uint64_t sub_1001EF4E8()
{
  uint64_t result = sub_10016A9AC();
  if (!result)
  {
    uint64_t v1 = sub_10010CE48(0x810uLL);
    qword_100A05348 = (uint64_t)v1;
    v1[509] = 4;
    *((unsigned char *)v1 + 2060) = 0;
    if (*((unsigned char *)v1 + 2040)) {
      *((unsigned char *)v1 + 2040) = 0;
    }
    qword_100A05350 = 0;
    sub_100026C30((uint64_t)&unk_100A0533C);
    *(unsigned char *)(qword_100A05348 + 2049) = 0;
    sub_1001EFED4(5);
    return 109;
  }
  return result;
}

uint64_t sub_1001EF560()
{
  if (*(_DWORD *)(qword_100A05348 + 2036) == 4) {
    return 109;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001EF580()
{
  return 2032;
}

uint64_t sub_1001EF588(int a1, __int16 a2, int a3)
{
  char v5 = a1;
  if (a1 != 1 && *(unsigned char *)(qword_100A05348 + 2040)) {
    return 129;
  }
  if (a1 == 2) {
    unsigned __int16 v7 = 5;
  }
  else {
    unsigned __int16 v7 = 4;
  }
  if (byte_100A05334 == 1)
  {
    sub_10025B8C0();
    return 118;
  }
  else
  {
    if (!qword_100A05328) {
      sub_10025B8C0();
    }
    unsigned int v9 = (unsigned __int16)word_100A05330;
    if (!word_100A05330)
    {
      sub_10025B8C0();
      unsigned int v9 = (unsigned __int16)word_100A05330;
    }
    uint64_t v10 = qword_100A05328;
    uint64_t v6 = 105;
    if (qword_100A05328 && v9)
    {
      if (a3 + v7 <= v9)
      {
        *(unsigned char *)qword_100A05328 = v5;
        *(_WORD *)(v10 + 1) = a2;
        *(_WORD *)(v10 + 3) = a3;
        if (a3) {
          sub_100022CA0((char *)(v10 + v7));
        }
        else {
          sub_100023604();
        }
        byte_100A05338 = v5;
        byte_100A05334 = 1;
        uint64_t v6 = sub_10016A97C();
        if (v6)
        {
          sub_100026C30((uint64_t)&unk_100A0533C);
          byte_100A05334 = 0;
        }
        uint64_t v11 = qword_100A05348;
        if (*(unsigned char *)(qword_100A05348 + 2040) && *(_DWORD *)(qword_100A05348 + 2036) == 4)
        {
          *(unsigned char *)(qword_100A05348 + 2049) = 0;
          *(_DWORD *)(v11 + 2036) = 1;
          *(_WORD *)(v11 + 2042) = 5;
          sub_1001EFED4(0x7FFF);
        }
      }
      else
      {
        sub_10025B8C0();
        return 105;
      }
    }
  }
  return v6;
}

uint64_t sub_1001EF704(char *__src, int a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      uint64_t v4 = qword_100A05348;
      if (*(unsigned char *)(qword_100A05348 + 2040))
      {
        *(void *)int buf = 0;
        uint64_t v67 = 0;
        sub_10010BD04(&v67);
        sub_10010BD6C(v67, qword_100A05350, &stru_100A05358, buf, v5, v6, v7);
        if (v8)
        {
          uint64_t v9 = v8;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"OI_AbsoluteTime_Diff returned %!", v10, v11, v12, v13, v14, v15, v16, v9);
            uint64_t v17 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              sub_100745680(v68, &v69, v17);
            }
          }
        }
        if ((*(unsigned int *)&buf[4] | ((unint64_t)*(unsigned int *)buf << 32)) >= 0x12A153440) {
          sub_10010B394(112);
        }
        j__usleep(0);
        uint64_t v4 = qword_100A05348;
      }
      switch(*(_DWORD *)(v4 + 2036))
      {
        case 0:
        case 4:
          goto LABEL_53;
        case 1:
          uint64_t v18 = *__src;
          if ((v18 - 1) >= 4u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"unknown packet type received %d", v37, v38, v39, v40, v41, v42, v43, v18);
              int v44 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
              {
                unsigned int v63 = sub_100050714();
                *(_DWORD *)int buf = 136446466;
                *(void *)&uint8_t buf[4] = v63;
                __int16 v71 = 1024;
                int v72 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            sub_10025B778("VirtualCTRL: unknown packet type received %d\n", v18);
            sub_1001F0114(0xF0u);
          }
          else
          {
            *(_WORD *)(v4 + 2042) = 0x2000300040003uLL >> (16 * (v18 - 1));
            *(unsigned char *)(v4 + 2048) = v18;
            *(_WORD *)(v4 + 2044) = 0;
            *(_DWORD *)(v4 + 2036) = 2;
            sub_1001EFED4(20);
          }
          if (*(_DWORD *)(qword_100A05348 + 2036) == 2)
          {
            ++__src;
            --v2;
          }
          continue;
        case 2:
          int v27 = 0;
          __int16 v28 = *(_WORD *)(v4 + 2042);
          uint64_t v29 = __src;
          break;
        case 3:
          if ((unsigned __int16)v2 >= *(unsigned __int16 *)(v4 + 2042)) {
            size_t v33 = *(unsigned __int16 *)(v4 + 2042);
          }
          else {
            size_t v33 = (unsigned __int16)v2;
          }
          memmove((void *)(v4 + *(unsigned __int16 *)(v4 + 2044) + 4), __src, v33);
          uint64_t v34 = qword_100A05348;
          int v35 = *(unsigned __int16 *)(qword_100A05348 + 2042);
          v2 -= v33;
          *(_WORD *)(qword_100A05348 + 2044) += v33;
          __src += v33;
          int v36 = v35 - v33;
          *(_WORD *)(v34 + 2042) = v36;
          if (v36) {
            continue;
          }
          goto LABEL_47;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid receive state %d", v19, v20, v21, v22, v23, v24, v25, *(unsigned int *)(qword_100A05348 + 2036));
            uint64_t v26 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              unsigned int v62 = sub_100050714();
              *(_DWORD *)int buf = 136446466;
              *(void *)&uint8_t buf[4] = v62;
              __int16 v71 = 1024;
              int v72 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_10025B778("VirtualCTRL: Invalid receive state %d\n", *(_DWORD *)(qword_100A05348 + 2036));
          sub_1001F0114(0xF2u);
          sub_10025B8C0();
          continue;
      }
      while (v28)
      {
        char v30 = *v29++;
        uint64_t v31 = *(unsigned __int16 *)(v4 + 2044);
        *(_WORD *)(v4 + 2044) = v31 + 1;
        *(unsigned char *)(v4 + v31 + 4) = v30;
        __int16 v28 = *(_WORD *)(v4 + 2042) - 1;
        *(_WORD *)(v4 + 2042) = v28;
        if ((unsigned __int16)++v27 >= (unsigned __int16)v2)
        {
          int v27 = v2;
          if (v28) {
            goto LABEL_46;
          }
          break;
        }
      }
      *(_DWORD *)(v4 + 2036) = 3;
      switch(*(unsigned char *)(v4 + 2048))
      {
        case 1:
        case 3:
          __int16 v32 = *(unsigned __int8 *)(v4 + 6);
          goto LABEL_41;
        case 2:
          __int16 v32 = *(_WORD *)(v4 + 6);
          goto LABEL_41;
        case 4:
          __int16 v32 = *(unsigned __int8 *)(v4 + 5);
LABEL_41:
          *(_WORD *)(v4 + 2042) = v32;
          unsigned __int16 v53 = *(_WORD *)(v4 + 2044) + v32;
          *(_WORD *)(v4 + 2046) = v53;
          if (v53 >= 0x7F1u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"RxPacketHeader - bogus packet length (%d)", v54, v55, v56, v57, v58, v59, v60, *(unsigned __int16 *)(qword_100A05348 + 2046));
              int v61 = sub_100050B4C(0x3Au);
              if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
              {
                int v64 = sub_100050714();
                *(_DWORD *)int buf = 136446466;
                *(void *)&uint8_t buf[4] = v64;
                __int16 v71 = 1024;
                int v72 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            sub_10025B778("VirtualCTRL: RxPacketHeader - bogus packet length (%d)\n", *(unsigned __int16 *)(qword_100A05348 + 2046));
            sub_1001F0114(0xF4u);
          }
          break;
        default:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid packet type %d", v45, v46, v47, v48, v49, v50, v51, *(unsigned __int8 *)(qword_100A05348 + 2048));
            int v52 = sub_100050B4C(0x3Au);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
            {
              unsigned __int8 v65 = sub_100050714();
              *(_DWORD *)int buf = 136446466;
              *(void *)&uint8_t buf[4] = v65;
              __int16 v71 = 1024;
              int v72 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_10025B778("VirtualCTRL: Invalid packet type %d\n", *(unsigned __int8 *)(qword_100A05348 + 2048));
          sub_1001F0114(0xF0u);
          sub_10025B8C0();
          int v27 = 0;
          break;
      }
LABEL_46:
      __src += (unsigned __int16)v27;
      v2 -= v27;
      uint64_t v34 = qword_100A05348;
      if (!*(_WORD *)(qword_100A05348 + 2042))
      {
LABEL_47:
        if (*(unsigned char *)(v34 + 2040))
        {
          sub_1001F0254();
        }
        else
        {
          if (*(unsigned __int16 *)(v34 + 2046) >= 0x7F1u) {
            sub_10025B8C0();
          }
          sub_1001F02D0();
        }
      }
    }
    while ((_WORD)v2);
  }
LABEL_53:
  if (*(_WORD *)(qword_100A05348 + 2042)) {
    return *(unsigned __int16 *)(qword_100A05348 + 2042);
  }
  else {
    return 5;
  }
}

uint64_t sub_1001EFD28(int a1, __int16 a2, size_t __len, void *__src)
{
  char v4 = a1;
  if (a1 != 1 && *(unsigned char *)(qword_100A05348 + 2040)) {
    return 129;
  }
  uint64_t v6 = 4;
  if (a1 == 2) {
    uint64_t v6 = 5;
  }
  if (byte_100A05334 == 1)
  {
    sub_10025B8C0();
    return 118;
  }
  else
  {
    uint64_t v7 = qword_100A05328;
    if (qword_100A05328) {
      BOOL v8 = word_100A05330 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8)
    {
      return 105;
    }
    else
    {
      *(unsigned char *)qword_100A05328 = a1;
      *(_WORD *)(v7 + 1) = a2;
      *(_WORD *)(v7 + 3) = __len;
      memmove((void *)(v7 + v6), __src, __len);
      byte_100A05338 = v4;
      byte_100A05334 = 1;
      uint64_t v9 = sub_10016A97C();
      uint64_t v5 = v9;
      if (v9)
      {
        sub_100026C30((uint64_t)&unk_100A0533C);
        byte_100A05334 = 0;
      }
      uint64_t v10 = qword_100A05348;
      if (*(unsigned char *)(qword_100A05348 + 2040) && *(_DWORD *)(qword_100A05348 + 2036) == 4)
      {
        *(unsigned char *)(qword_100A05348 + 2049) = 0;
        *(_DWORD *)(v10 + 2036) = 1;
        *(_WORD *)(v10 + 2042) = 5;
        sub_1001EFED4(0x7FFF);
      }
    }
  }
  return v5;
}

void sub_1001EFE64(int a1)
{
  if (a1)
  {
    if (!*(unsigned char *)(qword_100A05348 + 2040))
    {
      *(unsigned char *)(qword_100A05348 + 2040) = 1;
      sub_10010BD04(&qword_100A05350);
      sub_10010BD30(&stru_100A05358);
    }
  }
  else
  {
    if (*(unsigned char *)(qword_100A05348 + 2040)) {
      *(unsigned char *)(qword_100A05348 + 2040) = 0;
    }
    qword_100A05350 = 0;
  }
}

uint64_t sub_1001EFED4(int a1)
{
  BOOL v2 = sub_100026E24(*(_DWORD *)qword_100A05348);
  uint64_t v3 = (int *)qword_100A05348;
  if (v2)
  {
    unsigned int v4 = *(_DWORD *)qword_100A05348;
    return sub_10025BC54(v4, a1);
  }
  else
  {
    return sub_1000268E4((uint64_t)sub_1001EFF58, 0, a1, v3);
  }
}

void sub_1001EFF58()
{
  uint64_t v0 = qword_100A05348;
  unsigned int v1 = *(_DWORD *)(qword_100A05348 + 2036);
  if (v1 < 2)
  {
    if (!*(unsigned char *)(qword_100A05348 + 2040))
    {
LABEL_14:
      sub_1001EFED4(0x7FFFLL);
      return;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"timed out waiting for reset response %d", v10, v11, v12, v13, v14, v15, v16, *(unsigned int *)(qword_100A05348 + 2036));
      uint64_t v17 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_1007456E8();
      }
    }
  }
  else
  {
    if (v1 - 2 < 2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Timed out while receiving a packet. Current state:%d", v2, v3, v4, v5, v6, v7, v8, *(unsigned int *)(qword_100A05348 + 2036));
        uint64_t v9 = sub_100050B4C(0x3Au);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_1007456E8();
        }
      }
      sub_10025B778("VirtualCTRL: Timed out while receiving a packet. Current state:%d\n", *(_DWORD *)(qword_100A05348 + 2036));
      sub_1001F0114(0xF1u);
      return;
    }
    if (v1 == 4)
    {
      if (*(unsigned char *)(qword_100A05348 + 2040)) {
        return;
      }
      *(unsigned char *)(qword_100A05348 + 2049) = 0;
      *(_DWORD *)(v0 + 2036) = 1;
      *(_WORD *)(v0 + 2042) = 5;
      goto LABEL_14;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid receive state %d", v18, v19, v20, v21, v22, v23, v24, *(unsigned int *)(qword_100A05348 + 2036));
      uint64_t v25 = sub_100050B4C(0x3Au);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B778("VirtualCTRL: Invalid receive state %d\n", *(_DWORD *)(qword_100A05348 + 2036));
    sub_1001F0114(0xF3u);
    sub_10025B8C0();
  }
}

uint64_t sub_1001F0114(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"RxErrorDetected:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x3Au);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744FE4();
    }
  }
  uint64_t v10 = qword_100A05348;
  if (!*(unsigned char *)(qword_100A05348 + 2040))
  {
    *(_WORD *)(qword_100A05348 + 4) = 272;
    *(unsigned char *)(v10 + 6) = a1;
    *(_WORD *)(v10 + 2046) = 3;
    *(unsigned char *)(v10 + 2048) = 4;
    sub_1001F01D4();
    uint64_t v10 = qword_100A05348;
  }
  *(_DWORD *)(v10 + 2036) = 4;
  sub_1001EFE64(1);
  return sub_1001EFED4(5);
}

void sub_1001F01D4()
{
  uint64_t v0 = qword_100A05348;
  if (*(unsigned __int16 *)(qword_100A05348 + 2046) >= 0x7F1u)
  {
    sub_10025B8C0();
    uint64_t v0 = qword_100A05348;
  }
  *(unsigned char *)(v0 + 2049) = 0;
  *(_DWORD *)(v0 + 2036) = 1;
  *(_WORD *)(v0 + 2042) = 5;
  sub_1001EFED4(0x7FFFLL);
  v1[1] = 0;
  v1[0] = mach_continuous_time();
  sub_100023868(*(unsigned __int8 *)(qword_100A05348 + 2048), (unsigned __int8 *)(qword_100A05348 + 4), *(unsigned __int16 *)(qword_100A05348 + 2046), (uint64_t)v1);
}

void sub_1001F0254()
{
  if (*(unsigned char *)(qword_100A05348 + 2048) == 4 && *(_WORD *)(qword_100A05348 + 2046) == 6)
  {
    uint64_t v0 = 0;
    char v1 = 1;
    uint64_t v2 = &byte_1007BA3F1;
    do
    {
      int v3 = (*(v2 - 1) & *(unsigned char *)(qword_100A05348 + 4 + v0));
      int v4 = *v2;
      v2 += 2;
      if (v3 != v4) {
        char v1 = 0;
      }
      ++v0;
    }
    while (v0 != 6);
    if (v1)
    {
      if (*(unsigned char *)(qword_100A05348 + 2040)) {
        *(unsigned char *)(qword_100A05348 + 2040) = 0;
      }
      qword_100A05350 = 0;
      sub_1001F01D4();
    }
  }
}

void sub_1001F02D0()
{
  uint64_t v0 = qword_100A05348;
  if (*(unsigned __int16 *)(qword_100A05348 + 2046) >= 0x7F1u)
  {
    sub_10025B8C0();
    uint64_t v0 = qword_100A05348;
  }
  if (*(unsigned char *)(v0 + 2060))
  {
    sub_10025B778("Rx routing suspended during stack termination!\n");
  }
  else
  {
    *(unsigned char *)(v0 + 2049) = 0;
    *(_DWORD *)(v0 + 2036) = 1;
    *(_WORD *)(v0 + 2042) = 5;
    sub_1001EFED4(0x7FFF);
    v1[1] = 0;
    v1[0] = mach_continuous_time();
    sub_100023868(*(unsigned __int8 *)(qword_100A05348 + 2048), (unsigned __int8 *)(qword_100A05348 + 4), *(unsigned __int16 *)(qword_100A05348 + 2046), (uint64_t)v1);
  }
}

uint64_t sub_1001F0384()
{
  return 0;
}

void sub_1001F038C()
{
  *(unsigned char *)(qword_100A05348 + 2060) = 1;
}

char *sub_1001F03A0(char *result, int a2)
{
  if (a2 >= 2)
  {
    uint64_t v2 = a2 >> 1;
    int v3 = a2 - 1;
    int v4 = result;
    do
    {
      char v5 = *v4;
      *v4++ = result[v3];
      result[v3--] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1001F03D4(const void *a1, unsigned int a2, void *a3, int a4)
{
  long long v43 = 0uLL;
  long long v42 = 0uLL;
  long long v41 = *(_OWORD *)"1pmt";
  unint64_t v8 = a2;
  __memmove_chk();
  if (a2 <= 0xF)
  {
    unsigned int v9 = 16 - a2;
    unint64_t v10 = v8;
    do
    {
      unsigned int v11 = v9 - a2;
      if (v9 >= a2) {
        size_t v12 = a2;
      }
      else {
        size_t v12 = v9;
      }
      memmove((char *)&v43 + v10, a1, v12);
      v10 += v8;
      unsigned int v9 = v11;
    }
    while (v10 < 0x10);
  }
  if (!a4)
  {
    uint64_t v23 = sub_100181620(&v43, 0x746D7031u, &v42);
    if (v23)
    {
      uint64_t v14 = v23;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SMP_Crypto_h6 failed creating ILK %!", v24, v25, v26, v27, v28, v29, v30, v14);
        uint64_t v31 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return v14;
    }
    goto LABEL_16;
  }
  uint64_t v13 = sub_10018175C(&v43, &v41, &v42);
  if (!v13)
  {
LABEL_16:
    uint64_t v14 = sub_100181620(&v42, 0x6C656272u, a3);
    if (v14)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SMP_Crypto_h6 failed creating LTK %!", v32, v33, v34, v35, v36, v37, v38, v14);
        uint64_t v39 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          goto LABEL_19;
        }
      }
    }
    return v14;
  }
  uint64_t v14 = v13;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SMP_Crypto_h7 failed creating ILK %!", v15, v16, v17, v18, v19, v20, v21, v14);
    uint64_t v22 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
LABEL_19:
    }
      sub_100745764();
  }
  return v14;
}

uint64_t sub_1001F05E0(uint64_t a1, unsigned int a2, void *a3, int a4)
{
  long long v41 = 0uLL;
  long long v40 = 0uLL;
  long long v39 = *(_OWORD *)"2pmt";
  __memmove_chk();
  if (a2 <= 0xF)
  {
    unsigned int v7 = 16 - a2;
    unint64_t v8 = a2;
    do
    {
      unsigned int v9 = v7 - a2;
      if (v7 >= a2) {
        size_t v10 = a2;
      }
      else {
        size_t v10 = v7;
      }
      memmove((char *)&v41 + v8, a3, v10);
      v8 += a2;
      unsigned int v7 = v9;
    }
    while (v8 < 0x10);
  }
  if (!a4)
  {
    uint64_t v21 = sub_100181620(&v41, 0x746D7032u, &v40);
    if (v21)
    {
      uint64_t v12 = v21;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SMP_Crypto_h6 failed creating ILK %!", v22, v23, v24, v25, v26, v27, v28, v12);
        uint64_t v29 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return v12;
    }
    goto LABEL_16;
  }
  uint64_t v11 = sub_10018175C(&v41, &v39, &v40);
  if (!v11)
  {
LABEL_16:
    uint64_t v12 = sub_100181620(&v40, 0x62726C65u, a3);
    if (v12)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SMP_Crypto_h6 failed creating LK %!", v30, v31, v32, v33, v34, v35, v36, v12);
        uint64_t v37 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          goto LABEL_19;
        }
      }
    }
    return v12;
  }
  uint64_t v12 = v11;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SMP_Crypto_h7 failed creating ILTK %!", v13, v14, v15, v16, v17, v18, v19, v12);
    uint64_t v20 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_19:
    }
      sub_100745764();
  }
  return v12;
}

long long *sub_1001F07E8()
{
  return &xmmword_100A05360;
}

long long *sub_1001F07F4()
{
  return &xmmword_100A05370;
}

__n128 sub_1001F0800(__n128 *a1)
{
  __n128 result = *a1;
  xmmword_100A05360 = (__int128)*a1;
  return result;
}

__n128 sub_1001F0814(__n128 *a1)
{
  __n128 result = *a1;
  xmmword_100A05370 = (__int128)*a1;
  return result;
}

void sub_1001F0828(char *ptr, uint64_t a2, int a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)ptr;
  long long v29 = 0uLL;
  if (a2)
  {
    BOOL v7 = 0;
  }
  else
  {
    long long v29 = *(_OWORD *)(ptr + 562);
    BOOL v7 = ptr[593] != 0;
  }
  uint64_t v8 = *((unsigned int *)ptr + 3);
  if (v8)
  {
    sub_100026DB4(v8);
    *((_DWORD *)ptr + 3) = 0;
  }
  if (!v4)
  {
    if (ptr[612])
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Pairing completed with a compromised device", v9, v10, v11, v12, v13, v14, v15, v28);
        uint64_t v16 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v4 = 4832;
    }
    else
    {
      uint64_t v4 = 0;
    }
  }
  if (*((_DWORD *)ptr + 154))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"using override status %d", v17, v18, v19, v20, v21, v22, v23, *((unsigned int *)ptr + 154));
      uint64_t v24 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v4 = *((unsigned int *)ptr + 154);
  }
  sub_100023010(ptr);
  if (sub_100197770(v6))
  {
    *(void *)(v6 + 240) = 0;
    if (a3 && unk_100A19760)
    {
      if (*(unsigned char *)(v6 + 55)) {
        uint64_t v25 = v6 + 56;
      }
      else {
        uint64_t v25 = 0;
      }
      unk_100A19760(v6 + 48, v25, v4, 0);
    }
    BOOL v27 = v4 == 4832 || v4 == 0;
    *(unsigned char *)(v6 + 208) = v27;
    sub_1002176F8(v6);
  }
  else if (sub_100197698(v6))
  {
    *(void *)(v6 + 312) = 0;
    if (a3)
    {
      if (off_100A19768) {
        off_100A19768(v6 + 48, v4, &v29, v7, 0);
      }
    }
  }
}

void sub_1001F0A1C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (!a2 || !a3)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"BR/EDR Security Manager error : invalid size %d", v8, v9, v10, v11, v12, v13, v14, a3);
    uint64_t v15 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_21:
    sub_100744F6C();
    return;
  }
  if (sub_100197698(a1))
  {
    unsigned int v6 = *a2;
    if (v6 < 0xF)
    {
      BOOL v7 = &unk_10099D5F0;
      goto LABEL_12;
    }
  }
  if (!sub_100197770(a1) || (unsigned int v6 = *a2, v6 >= 0xF))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid connection", v17, v18, v19, v20, v21, v22, v23, v33);
    uint64_t v24 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_21;
  }
  BOOL v7 = &unk_10099F2A0;
LABEL_12:
  uint64_t v16 = (void (*)(uint64_t, unsigned __int8 *, void))v7[v6];
  if (!v16)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Unknow SMP header 0x%x or invalid connection", v25, v26, v27, v28, v29, v30, v31, *a2);
    uint64_t v32 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_21;
  }

  v16(a1, a2 + 1, (unsigned __int16)(a3 - 1));
}

uint64_t sub_1001F0BBC(uint64_t a1)
{
  if (sub_100197770(a1))
  {
    uint64_t v2 = a1 + 240;
    return *(void *)v2;
  }
  if (sub_100197698(a1))
  {
    uint64_t v2 = a1 + 312;
    return *(void *)v2;
  }
  return 0;
}

uint64_t sub_1001F0C08(uint64_t a1, char *a2, size_t a3, int a4)
{
  memset(v49, 0, sizeof(v49));
  if (!sub_100197770(a1) && !sub_100197698(a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid handle", v27, v28, v29, v30, v31, v32, v33, v48);
      uint64_t v34 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4820;
  }
  uint64_t v8 = sub_1000226D0((uint64_t)v49, 1u);
  if (!v8)
  {
    uint64_t v18 = sub_100022798((unsigned __int8 *)v49, a2, a3, 2u);
    if (v18)
    {
      uint64_t v9 = v18;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to append mbuf result %!", v19, v20, v21, v22, v23, v24, v25, v9);
        uint64_t v26 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          goto LABEL_26;
        }
      }
      return v9;
    }
    if (sub_100197698(a1))
    {
      uint64_t v36 = 7;
    }
    else
    {
      if (!sub_100197770(a1))
      {
        uint64_t v9 = 0;
        goto LABEL_23;
      }
      uint64_t v36 = 6;
    }
    uint64_t v9 = ((uint64_t (*)(void, uint64_t, uint64_t, _OWORD *, void))loc_1001DE1A4)(0, v36, a1, v49, 0);
    if (v9) {
      sub_10025B8C0();
    }
LABEL_23:
    sub_10025C480((uint64_t)v49);
    uint64_t v37 = sub_1001F0BBC(a1);
    if (v9)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not write to the SMP channel for handle 0x%x with status %!", v38, v39, v40, v41, v42, v43, v44, a1);
        uint64_t v45 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      uint64_t v46 = (int *)v37;
      if (v37)
      {
        uint64_t v47 = *(unsigned int *)(v37 + 12);
        if (v47)
        {
          sub_100026DB4(v47);
          v46[3] = 0;
        }
        if (a4) {
          sub_1001F0E4C(v46);
        }
      }
      return 0;
    }
    return v9;
  }
  uint64_t v9 = v8;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to init mbuf result %!", v10, v11, v12, v13, v14, v15, v16, v9);
    uint64_t v17 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
LABEL_26:
    }
      sub_100745764();
  }
  return v9;
}

void sub_1001F0E4C(int *a1)
{
  v11[1] = a1;
  v11[0] = (const void *)8;
  uint64_t v1 = sub_1000268E4((uint64_t)sub_1001F1220, v11, 300, a1 + 3);
  if (v1)
  {
    uint64_t v2 = v1;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not register timeout for SMP Tx wth status %!.", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
}

unsigned char *sub_1001F0EE8(uint64_t a1)
{
  if (sub_100197770(a1) && *(void *)(a1 + 240) || sub_100197698(a1) && *(void *)(a1 + 312)) {
    return 0;
  }
  uint64_t v3 = sub_100022FE8(0x270uLL);
  uint64_t v2 = v3;
  if (v3)
  {
    bzero(v3, 0x270uLL);
    *(void *)uint64_t v2 = a1;
    v2[8] = 0;
  }
  if (sub_100197770(a1))
  {
    *(void *)(a1 + 240) = v2;
    sub_100217614(a1);
  }
  else if (sub_100197698(a1))
  {
    *(void *)(a1 + 312) = v2;
  }
  return v2;
}

BOOL sub_1001F0F88(uint64_t a1, char a2, char a3, char a4, unsigned int a5, char a6, char a7)
{
  *(unsigned char *)(a1 + 78) = a2;
  *(unsigned char *)(a1 + 79) = a3;
  *(unsigned char *)(a1 + 80) = a4;
  *(unsigned char *)(a1 + 82) = a6;
  *(unsigned char *)(a1 + 83) = a7;
  if (sub_100197770(*(void *)a1))
  {
    if (a5 >= 0x10) {
      char v9 = 16;
    }
    else {
      char v9 = a5;
    }
    *(unsigned char *)(a1 + 81) = v9;
  }
  else
  {
    *(unsigned char *)(a1 + 9) = 1;
  }

  return sub_1001F0FFC((uint64_t *)a1);
}

BOOL sub_1001F0FFC(uint64_t *a1)
{
  BOOL result = sub_100197770(*a1);
  if (result)
  {
    BOOL result = sub_100197770(*a1);
    if (!result)
    {
      uint64_t v3 = *a1;
      return sub_100197698(v3);
    }
  }
  return result;
}

BOOL sub_1001F1054(uint64_t a1)
{
  return sub_100197770(a1) && *(void *)(a1 + 240) || sub_100197698(a1) && *(void *)(a1 + 312);
}

uint64_t sub_1001F10A4(uint64_t result)
{
  byte_1009FAEC0 = result;
  return result;
}

uint64_t sub_1001F10B0()
{
  return byte_1009FAEC0;
}

uint64_t sub_1001F10BC(char a1)
{
  if ((a1 + 16) > 0x1Eu) {
    return 4800;
  }
  else {
    return dword_1007BA420[(char)(a1 + 16)];
  }
}

const char *sub_1001F10E8()
{
  return "";
}

void sub_1001F10F4(uint64_t a1, char a2)
{
  if (sub_100017A14())
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SMP State device:%: %s -> %s", v4, v5, v6, v7, v8, v9, v10, *(void *)a1 + 49);
      uint64_t v11 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 136446210;
        uint64_t v13 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  *(unsigned char *)(a1 + 8) = a2;
}

BOOL sub_1001F11E4(uint64_t a1, int a2)
{
  return *(unsigned __int8 *)(a1 + 8) == a2;
}

uint64_t sub_1001F11F4(uint64_t a1, int a2)
{
  uint64_t result = sub_1001F0BBC(a1);
  if (result) {
    *(_DWORD *)(result + 616) = a2;
  }
  return result;
}

void sub_1001F1220(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SMP timeout for handle 0x%x.", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  if (!sub_100197770(v1) && !sub_100197698(v1))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Handle is not valid anymore, probably disconnected. Ignoring.", v22, v23, v24, v25, v26, v27, v28, v30);
    uint64_t v29 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_17:
    sub_100745764();
    return;
  }
  uint64_t v10 = sub_1001F0BBC(v1);
  if (!v10)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"No pairing entry for handle 0x%x", v14, v15, v16, v17, v18, v19, v20, v1);
    uint64_t v21 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_17;
  }
  uint64_t v11 = (char *)v10;
  BOOL v12 = sub_100197770(v1);
  uint64_t v13 = 4807;
  if (v12)
  {
    if (v11[490]) {
      uint64_t v13 = 4807;
    }
    else {
      uint64_t v13 = 4827;
    }
  }
  sub_1001F0828(v11, v13, 1);
}

BOOL sub_1001F136C(char *a1, unsigned int a2, char *a3, unsigned int a4, int a5)
{
  unsigned __int16 v10 = 0;
  int v8 = sub_100157B64(a1, a2, &v10);
  BOOL result = 0;
  if (!v8) {
    return !sub_100157B64(a3, a4, &v10) && v10 == a5;
  }
  return result;
}

uint64_t sub_1001F13E8(uint64_t a1, _WORD *a2)
{
  size_t v4 = *(unsigned __int16 *)(a1 + 4);
  __chkstk_darwin();
  uint64_t v6 = &v8[-v5];
  bzero(&v8[-v5], v4);
  __int16 v9 = 0;
  sub_100022D4C(v6, a1, v4);
  sub_10025C574(a1);
  uint64_t result = sub_100157B64(v6, v4, &v9);
  if (!result) {
    *a2 = v9;
  }
  return result;
}

unsigned int *sub_1001F14B8(unsigned int a1)
{
  uint64_t v2 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v2)) {
    return 0;
  }
  uint64_t result = v2;
  if (v2)
  {
    if (*(unsigned char *)(sub_1001E6484(v2) + 64)) {
      return (unsigned int *)*(unsigned __int8 *)(sub_1001E6484(v2) + 66);
    }
    return 0;
  }
  return result;
}

BOOL sub_1001F150C(unsigned int a1)
{
  uint64_t v3 = 0;
  if (!sub_1001DD56C(a1, (uint64_t *)&v3) && (*v3 != 4 ? (BOOL v2 = *v3 == 2) : (BOOL v2 = 1), v2)) {
    return *(unsigned char *)(sub_1001E6484(v3) + 64) == 3;
  }
  else {
    return 0;
  }
}

BOOL sub_1001F1564(unsigned int a1)
{
  uint64_t v3 = 0;
  if (!sub_1001DD56C(a1, (uint64_t *)&v3) && (*v3 != 4 ? (BOOL v2 = *v3 == 2) : (BOOL v2 = 1), v2)) {
    return *(unsigned char *)(sub_1001E6484(v3) + 64) == 5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001F15BC(unsigned int a1)
{
  uint64_t v11 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v11))
  {
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"Invalid channel 0x%x", v3, v4, v5, v6, v7, v8, v9, a1);
      unsigned __int16 v10 = sub_100050B4C(0x2Fu);
      uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100744F6C();
        return 0;
      }
    }
  }
  else
  {
    return *(unsigned char *)(sub_1001E6484(v11) + 64) != 3 || sub_1001ED688(v11);
  }
  return result;
}

uint64_t sub_1001F1664(unsigned int a1)
{
  BOOL v2 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v2) || *(unsigned char *)(sub_1001E6484(v2) + 64) != 3) {
    return 0;
  }
  else {
    return sub_1001ED658(v2);
  }
}

uint64_t sub_1001F16B4(unsigned int a1)
{
  BOOL v2 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v2)) {
    return 0;
  }
  else {
    return sub_1001D9DE8(v2);
  }
}

uint64_t sub_1001F16F0(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v4)) {
    return 533;
  }
  if (*(unsigned char *)(sub_1001E6484(v4) + 64) == 3) {
    return sub_1001ED704(v4, a2);
  }
  return 534;
}

uint64_t sub_1001F1758(unsigned int a1)
{
  BOOL v2 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v2) || *(unsigned char *)(sub_1001E6484(v2) + 64) != 3) {
    return 0;
  }
  else {
    return sub_1001ED8E0(v2);
  }
}

uint64_t sub_1001F17A8(unsigned int a1, char a2)
{
  uint64_t v4 = 0;
  uint64_t result = sub_1001DD56C(a1, (uint64_t *)&v4);
  if (!result)
  {
    uint64_t result = sub_1001E6484(v4);
    if (*(unsigned char *)(result + 64) == 3) {
      return sub_1001E7444(v4, a2);
    }
  }
  return result;
}

uint64_t sub_1001F1800(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  if (sub_1001F189C(a1))
  {
    uint64_t v6 = *(unsigned __int8 *)(sub_1001E6484(a1) + 64);
    *(unsigned char *)(a3 + 10) = v6;
    ((void (*)(unsigned int *, uint64_t, uint64_t))off_10099EFB0[v6])(a1, a2, a3);
    if (!*(unsigned char *)(sub_1001E6484(a1) + 64)) {
      return sub_1001F199C(a1);
    }
  }
  else
  {
    if (sub_1001F199C(a1)) {
      return 2;
    }
    *(unsigned char *)(a3 + 10) = 0;
  }
  return 1;
}

BOOL sub_1001F189C(unsigned int *a1)
{
  uint64_t v2 = *(void *)sub_1001E6484(a1);
  int v3 = *(unsigned __int8 *)(sub_1001E6484(a1) + 64);
  if (*(unsigned char *)(v2 + 2))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Forcing channel mode for non-ACL handle.", v4, v5, v6, v7, v8, v9, v10, v13);
      uint64_t v11 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return v3 == 0;
  }
  else
  {
    BOOL result = 1;
    switch(v3)
    {
      case 0:
        return result;
      case 1:
        BOOL result = *(unsigned char *)(v2 + 229) & 1;
        break;
      case 2:
        BOOL result = (*(unsigned __int8 *)(v2 + 229) >> 1) & 1;
        break;
      case 3:
        BOOL result = (*(unsigned __int8 *)(v2 + 229) >> 3) & 1;
        break;
      case 4:
        BOOL result = (*(unsigned __int8 *)(v2 + 229) >> 2) & 1;
        break;
      default:
        BOOL result = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_1001F199C(unsigned int *a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  return *(unsigned __int8 *)(sub_1001E6484(a1) + 65);
}

uint64_t sub_1001F19D0(uint64_t a1)
{
  int v2 = a1;
  uint64_t result = 1;
  switch(v2)
  {
    case 0:
      return result;
    case 1:
    case 2:
    case 4:
      goto LABEL_2;
    case 3:
      uint64_t result = *(unsigned char *)(sub_10025B218(0x2Fu) + 12) != 0;
      break;
    default:
      uint64_t result = sub_100058654();
      if (result)
      {
        sub_100056E24((uint64_t)"Unknown mode 0x%x.", v4, v5, v6, v7, v8, v9, v10, a1);
        uint64_t v11 = sub_100050B4C(0x2Fu);
        uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
        if (result)
        {
          sub_100744F6C();
LABEL_2:
          uint64_t result = 0;
        }
      }
      break;
  }
  return result;
}

uint64_t sub_1001F1A9C()
{
  return *(unsigned __int8 *)(sub_10025B218(0x2Fu) + 13);
}

uint64_t sub_1001F1ABC(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v8 = *(unsigned __int8 *)(sub_1001E6484(a1) + 64);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 10);
  if (v8 == v9)
  {
    *(unsigned char *)(a4 + 10) = v8;
    goto LABEL_3;
  }
  int v21 = sub_1001F199C(a1);
  int v22 = v21;
  if (!a3)
  {
    if (v21)
    {
      uint64_t v24 = 2;
      if (sub_100058654())
      {
        if (v9 > 5) {
          uint64_t v48 = "L2CAP_FLOW_MODE_UNKNOWN";
        }
        else {
          uint64_t v48 = off_10099F010[(char)v9];
        }
        sub_100056E24((uint64_t)"Remote responded with %s, since our mode (%s) is mandatory, failing.", v41, v42, v43, v44, v45, v46, v47, (uint64_t)v48);
        uint64_t v82 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
          return 2;
        }
        goto LABEL_57;
      }
      return v24;
    }
    if (sub_1001F19D0(v9)) {
      goto LABEL_44;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Remote device responded with a mode we don't support, falling back to basic.", v57, v58, v59, v60, v61, v62, v63, v100);
      int v64 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_46;
  }
  int v23 = *(unsigned __int8 *)(sub_1001E6484(a1) + 76);
  if (!v22)
  {
    if (v23)
    {
      if (!sub_1001F19D0(v9))
      {
        uint64_t v24 = 2;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Remote device requested an unsupported mode a second time, failling negotiation.", v49, v50, v51, v52, v53, v54, v55, v100);
          uint64_t v56 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
            goto LABEL_57;
          }
          return 2;
        }
        return v24;
      }
LABEL_47:
      *(unsigned char *)(a4 + 10) = v9;
LABEL_3:
      uint64_t v10 = sub_1001E6484(a1);
      uint64_t v11 = *(unsigned __int8 *)(a2 + 10);
      uint64_t v12 = *(unsigned __int8 *)(a4 + 10);
      if (v12 != v11)
      {
        if (v12 == *(unsigned __int8 *)(v10 + 64))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Mode negotiation resulted in using our mode -> using our params.", v33, v34, v35, v36, v37, v38, v39, v100);
            uint64_t v40 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        ((void (*)(unsigned int *, uint64_t, uint64_t))off_10099EFB0[v12])(a1, a3, a4);
        return 1;
      }
      if (*(unsigned char *)(a2 + 10))
      {
        if (v11 != 3) {
          goto LABEL_55;
        }
        if (*(unsigned __int8 *)(a2 + 11) - 64 <= 0xFFFFFFC0)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid parameter %s:%d=%d", v13, v14, v15, v16, v17, v18, v19, (uint64_t)"checkParams");
            uint64_t v20 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_54:
            }
              sub_100744F6C();
          }
LABEL_55:
          uint64_t v24 = 2;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Remote side parameters are invalid, bailing.", v91, v92, v93, v94, v95, v96, v97, v100);
            uint64_t v98 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
LABEL_57:
            }
              sub_100744F6C();
            return 2;
          }
          return v24;
        }
        if ((a3 & 1) == 0)
        {
          if ((unsigned __int16)(*(_WORD *)(a2 + 14) + 5535) <= 0x1602u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid parameter %s:%d=%d", v65, v66, v67, v68, v69, v70, v71, (uint64_t)"checkParams");
              int v72 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR)) {
                goto LABEL_54;
              }
            }
            goto LABEL_55;
          }
          if ((unsigned __int16)(*(_WORD *)(a2 + 16) + 5535) <= 0x1602u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid parameter %s:%d=%d", v83, v84, v85, v86, v87, v88, v89, (uint64_t)"checkParams");
              uint64_t v90 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR)) {
                goto LABEL_54;
              }
            }
            goto LABEL_55;
          }
        }
      }
      ((void (*)(unsigned int *, uint64_t, uint64_t))off_10099EFE0[v11])(a1, a2, a4);
      return 0;
    }
    if (sub_1001F189C(a1))
    {
LABEL_44:
      if (v9 > v8)
      {
LABEL_45:
        *(unsigned char *)(a4 + 10) = v8;
        uint64_t v81 = sub_1001E6484(a1);
        ++*(unsigned char *)(v81 + 76);
        goto LABEL_3;
      }
      goto LABEL_47;
    }
LABEL_46:
    *(unsigned char *)(a4 + 10) = 0;
    goto LABEL_3;
  }
  if (!v23)
  {
    if (!sub_1001F189C(a1))
    {
      uint64_t v24 = 2;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Remote device doesn't support our mandatory mode, can't negotiate.", v73, v74, v75, v76, v77, v78, v79, v100);
        unsigned int v80 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v80, OS_LOG_TYPE_ERROR)) {
          goto LABEL_57;
        }
        return 2;
      }
      return v24;
    }
    goto LABEL_45;
  }
  uint64_t v24 = 2;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to negotiate mode.", v25, v26, v27, v28, v29, v30, v31, v100);
    uint64_t v32 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      goto LABEL_57;
    }
    return 2;
  }
  return v24;
}

uint64_t sub_1001F1F8C(unsigned int *a1, int a2, char a3)
{
  unsigned __int16 v36 = 0;
  if (a1)
  {
    sub_10019E3B4(&v36);
    if (v36 - 12 <= (unsigned __int16)word_1009FAEC2) {
      word_1009FAEC2 = v36 - 12;
    }
    uint64_t result = 490;
    switch(a2)
    {
      case 0:
        *(unsigned char *)(sub_1001E6484(a1) + 66) = 0;
        *(unsigned char *)(sub_1001E6484(a1) + 67) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 68) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 70) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 72) = 0;
        *(unsigned char *)(sub_1001E6484(a1) + 54) = 0;
        *(unsigned char *)(sub_1001E6484(a1) + 55) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 56) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 58) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 60) = 0;
        goto LABEL_22;
      case 3:
        int v15 = *(unsigned __int16 *)(sub_1001E6484(a1) + 48);
        uint64_t v16 = sub_1001E6484(a1);
        if (v15)
        {
          if (!*(unsigned char *)(v16 + 42)) {
            sub_10025B8C0();
          }
          if (!*(unsigned char *)(sub_1001E6484(a1) + 43)) {
            sub_10025B8C0();
          }
          uint64_t v17 = sub_1001E6484(a1);
          uint64_t v18 = sub_1001E6484(a1);
          __int16 v19 = *(_WORD *)(v18 + 50);
          *(void *)(v17 + 66) = *(void *)(v18 + 42);
          *(_WORD *)(v17 + 74) = v19;
          uint64_t v20 = sub_1001E6484(a1);
          uint64_t v21 = sub_1001E6484(a1);
          __int16 v22 = *(_WORD *)(v21 + 50);
          *(void *)(v20 + 54) = *(void *)(v21 + 42);
          *(_WORD *)(v20 + 62) = v22;
        }
        else
        {
          *(unsigned char *)(v16 + 66) = 63;
          *(unsigned char *)(sub_1001E6484(a1) + 67) = 16;
          *(_WORD *)(sub_1001E6484(a1) + 68) = 2000;
          *(_WORD *)(sub_1001E6484(a1) + 70) = 12000;
          __int16 v30 = word_1009FAEC2 - 4;
          *(_WORD *)(sub_1001E6484(a1) + 72) = v30;
          *(unsigned char *)(sub_1001E6484(a1) + 54) = 63;
          *(unsigned char *)(sub_1001E6484(a1) + 55) = 16;
          *(_WORD *)(sub_1001E6484(a1) + 56) = 2000;
          *(_WORD *)(sub_1001E6484(a1) + 58) = 12000;
          __int16 v31 = word_1009FAEC2 - 4;
          *(_WORD *)(sub_1001E6484(a1) + 60) = v31;
        }
        sub_1001ED3E8((uint64_t)a1);
        goto LABEL_22;
      case 4:
        int v23 = *(unsigned __int16 *)(sub_1001E6484(a1) + 48);
        uint64_t v24 = sub_1001E6484(a1) + 66;
        if (v23)
        {
          uint64_t v25 = sub_1001E6484(a1);
          __int16 v26 = *(_WORD *)(v25 + 50);
          *(void *)uint64_t v24 = *(void *)(v25 + 42);
          *(_WORD *)(v24 + 8) = v26;
          uint64_t v27 = sub_1001E6484(a1);
          uint64_t v28 = sub_1001E6484(a1);
          __int16 v29 = *(_WORD *)(v28 + 50);
          *(void *)(v27 + 54) = *(void *)(v28 + 42);
          *(_WORD *)(v27 + 62) = v29;
        }
        else
        {
          *(unsigned char *)uint64_t v24 = 0;
          *(unsigned char *)(sub_1001E6484(a1) + 67) = 0;
          *(_WORD *)(sub_1001E6484(a1) + 68) = 0;
          *(_WORD *)(sub_1001E6484(a1) + 70) = 0;
          __int16 v32 = word_1009FAEC2 - 4;
          *(_WORD *)(sub_1001E6484(a1) + 72) = v32;
          *(unsigned char *)(sub_1001E6484(a1) + 54) = 0;
          *(unsigned char *)(sub_1001E6484(a1) + 55) = 0;
          *(_WORD *)(sub_1001E6484(a1) + 56) = 0;
          *(_WORD *)(sub_1001E6484(a1) + 58) = 0;
          __int16 v33 = word_1009FAEC2 - 4;
          *(_WORD *)(sub_1001E6484(a1) + 60) = v33;
        }
        goto LABEL_22;
      case 5:
        *(unsigned char *)(sub_1001E6484(a1) + 66) = 0;
        *(unsigned char *)(sub_1001E6484(a1) + 67) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 68) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 70) = 0;
        *(unsigned char *)(sub_1001E6484(a1) + 54) = 0;
        *(unsigned char *)(sub_1001E6484(a1) + 55) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 56) = 0;
        *(_WORD *)(sub_1001E6484(a1) + 58) = 0;
LABEL_22:
        *(unsigned char *)(sub_1001E6484(a1) + 64) = a2;
        *(unsigned char *)(sub_1001E6484(a1) + 65) = a3;
        uint64_t v34 = sub_1001E6484(a1);
        uint64_t result = 0;
        *(unsigned char *)(v34 + 52) = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_10025B8C0();
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid channel", v7, v8, v9, v10, v11, v12, v13, v35);
      uint64_t v14 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 535;
  }
  return result;
}

uint64_t sub_1001F23A4(unsigned int *a1)
{
  if (*(unsigned char *)(sub_1001E6484(a1) + 52) == 3 || *(unsigned char *)(sub_1001E6484(a1) + 64) == 3)
  {
    return sub_1001ED4D8(a1);
  }
  else
  {
    uint64_t result = sub_1001E6484(a1);
    if (*(unsigned char *)(result + 64) == 5)
    {
      return sub_1001D9E08(a1);
    }
  }
  return result;
}

uint64_t sub_1001F243C(unsigned int *a1, _WORD *a2, __int16 a3, char a4)
{
  int v8 = *(unsigned __int8 *)(sub_1001E6484(a1) + 64);
  if ((v8 - 3) < 2)
  {
    int v11 = ((sub_1001E71F8(a1) & 1) << 7) | (2 * (a4 & 0x3F));
    *a2 = (a3 << 14) | ((sub_1001ED908(a1) & 0x3F) << 8) | v11;
    return 2;
  }
  else
  {
    if (v8) {
      BOOL v9 = v8 == 5;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      sub_10025B8C0();
    }
    return 0;
  }
}

uint64_t sub_1001F24D0(unsigned int *a1, char a2, char a3, char a4, char a5, _WORD *a6)
{
  int v11 = *(unsigned __int8 *)(sub_1001E6484(a1) + 64);
  if ((v11 - 3) < 2)
  {
    *a6 = ((16 * (a3 & 1)) | (4 * (a2 & 3)) | (a4 << 7)) | 1 | ((a5 & 0x3F) << 8);
    return 2;
  }
  else
  {
    if (v11) {
      BOOL v12 = v11 == 5;
    }
    else {
      BOOL v12 = 1;
    }
    if (!v12) {
      sub_10025B8C0();
    }
    return 0;
  }
}

uint64_t sub_1001F2560(unsigned int a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v19 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v19))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unable to get channel from CID=0x%x", v10, v11, v12, v13, v14, v15, v16, a1);
      uint64_t v17 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 536;
  }
  else
  {
    if (!*(unsigned char *)(sub_1001E6484(v19) + 64)) {
      sub_10025B8C0();
    }
    if (*(unsigned char *)(sub_1001E6484(v19) + 64) == 3)
    {
      return sub_1001E7520((uint64_t)v19, a2, a3, a4, a5);
    }
    else if (*(unsigned char *)(sub_1001E6484(v19) + 64) == 5)
    {
      return sub_1001D9F9C((uint64_t)v19, a2, a3, a4, a5);
    }
    else
    {
      sub_10025B8C0();
      return 0;
    }
  }
}

uint64_t sub_1001F2680(unsigned int a1)
{
  int v2 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v2)) {
    return 537;
  }
  if (*(unsigned char *)(sub_1001E6484(v2) + 64) == 3) {
    return sub_1001E6F2C(v2);
  }
  return 0;
}

uint64_t sub_1001F26D8(unsigned int *a1)
{
  uint64_t result = sub_1001E6484(a1);
  if (*(unsigned char *)(result + 64) == 3)
  {
    int v3 = *(unsigned __int16 **)(sub_1001E6484(a1) + 112);
    return sub_1001E6E08(v3);
  }
  return result;
}

uint64_t sub_1001F2734(unsigned int *a1, int a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 *)(a3 + 10);
  uint64_t result = sub_1001E6484(a1);
  if (v6 == *(unsigned __int8 *)(result + 64))
  {
    *(_WORD *)(a3 + 11) = 4159;
    if (a2) {
      __int16 v8 = 0;
    }
    else {
      __int16 v8 = 2000;
    }
    if (a2) {
      __int16 v9 = 0;
    }
    else {
      __int16 v9 = 12000;
    }
    *(_WORD *)(a3 + 14) = v8;
    *(_WORD *)(a3 + 16) = v9;
    __int16 v10 = word_1009FAEC2 - 4;
  }
  else
  {
    *(unsigned char *)(a3 + 11) = *(unsigned char *)(sub_1001E6484(a1) + 66);
    *(unsigned char *)(a3 + 12) = *(unsigned char *)(sub_1001E6484(a1) + 67);
    if (a2)
    {
      __int16 v11 = 0;
      *(_WORD *)(a3 + 14) = 0;
    }
    else
    {
      *(_WORD *)(a3 + 14) = *(_WORD *)(sub_1001E6484(a1) + 68);
      __int16 v11 = *(_WORD *)(sub_1001E6484(a1) + 70);
    }
    *(_WORD *)(a3 + 16) = v11;
    uint64_t result = sub_1001E6484(a1);
    __int16 v10 = *(_WORD *)(result + 72);
  }
  *(_WORD *)(a3 + 18) = v10;
  return result;
}

uint64_t sub_1001F280C(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 10);
  uint64_t result = sub_1001E6484(a1);
  if (v5 == *(unsigned __int8 *)(result + 64))
  {
    __int16 v7 = word_1009FAEC2 - 4;
  }
  else
  {
    uint64_t result = sub_1001E6484(a1);
    __int16 v7 = *(_WORD *)(result + 72);
  }
  *(_WORD *)(a3 + 18) = v7;
  return result;
}

uint64_t sub_1001F286C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 64) = v3;
  unsigned int v4 = *(unsigned __int16 *)(a1 + 4);

  return sub_1001F5284(v4);
}

uint64_t sub_1001F28AC(uint64_t a1, uint64_t a2, _WORD *a3)
{
  char v6 = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 64) = v6;
  char v7 = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 66) = v7;
  char v8 = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 67) = v8;
  __int16 v9 = *(_WORD *)(a2 + 14);
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 68) = v9;
  if (!*(_WORD *)(a2 + 14)) {
    *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 68) = 2000;
  }
  __int16 v10 = *(_WORD *)(a2 + 16);
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 70) = v10;
  if (!*(_WORD *)(sub_1001E6484((unsigned int *)a1) + 70)) {
    *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 70) = 12000;
  }
  __int16 v11 = *(_WORD *)(a2 + 18);
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 72) = v11;
  LOBYTE(v11) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 52) = v11;
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 54) = 63;
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 55) = 16;
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 56) = 2000;
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 58) = 12000;
  __int16 v12 = word_1009FAEC2 - 4;
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 60) = v12;
  if (a3)
  {
    *(_WORD *)((char *)a3 + 11) = *(_WORD *)(a2 + 11);
    __int16 v13 = *(_WORD *)(a2 + 14);
    if (!v13) {
      __int16 v13 = 2000;
    }
    a3[7] = v13;
    __int16 v14 = *(_WORD *)(a2 + 16);
    if (!v14) {
      __int16 v14 = 12000;
    }
    a3[8] = v14;
    a3[9] = *(_WORD *)(a2 + 18);
  }
  sub_1001ED3E8(a1);
  unsigned int v15 = *(unsigned __int16 *)(a1 + 4);

  return sub_1001F5284(v15);
}

uint64_t sub_1001F2A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 64) = v6;
  __int16 v7 = *(_WORD *)(a2 + 18);
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 72) = v7;
  LOBYTE(v7) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(sub_1001E6484((unsigned int *)a1) + 52) = v7;
  __int16 v8 = word_1009FAEC2 - 4;
  *(_WORD *)(sub_1001E6484((unsigned int *)a1) + 60) = v8;
  if (a3) {
    *(_WORD *)(a3 + 18) = *(_WORD *)(a2 + 18);
  }
  unsigned int v9 = *(unsigned __int16 *)(a1 + 4);

  return sub_1001F5284(v9);
}

uint64_t sub_1001F2AC4(uint64_t result, uint64_t a2)
{
  if (qword_100A05380)
  {
    char v3 = (_DWORD *)result;
    uint64_t v4 = qword_100A05380;
    while (*(unsigned __int16 *)(v4 + 24) != *(unsigned __int16 *)(result + 4))
    {
      uint64_t v4 = *(void *)(v4 + 80);
      if (v4 == qword_100A05380 || v4 == 0) {
        return result;
      }
    }
    if (*(unsigned char *)(v4 + 16))
    {
      sub_1001F2C84(*(void **)(v4 + 8), a2);
      char v6 = *(void **)v4;
      return (uint64_t)sub_1001F2C84(v6, a2);
    }
    else
    {
      BOOL v7 = sub_1001F2D0C(v4);
      sub_1001F2C84(*(void **)v4, a2);
      uint64_t result = sub_1001F2D0C(v4);
      if (v7 && (result & 1) == 0 && *v3 == 3)
      {
        __int16 v8 = (unsigned __int16 *)(v4 + 24);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"queueDrained, cid 0x%x\n", v9, v10, v11, v12, v13, v14, v15, *v8);
          uint64_t v16 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          {
            LODWORD(buf) = 136446210;
            *(void *)((char *)&buf + 4) = sub_100050714();
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
          }
        }
        *(void *)&long long buf = 2;
        *((void *)&buf + 1) = v8;
        return sub_1000268E4((uint64_t)sub_1001F598C, (const void **)&buf, 0, 0);
      }
    }
  }
  return result;
}

void *sub_1001F2C84(void *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = (uint64_t)result;
    uint64_t result = (void *)sub_1002599CC((uint64_t)result);
    for (ptr = result; result; ptr = result)
    {
      while (1)
      {
        uint64_t v4 = sub_1002599F0((uint64_t)result);
        if (v4)
        {
          if (*(void *)(v4 + 8) == a2) {
            break;
          }
        }
        sub_1002599D4((uint64_t)&ptr);
        uint64_t result = ptr;
        if (!ptr) {
          return result;
        }
      }
      sub_100259A44(v3, ptr, 1);
      uint64_t result = (void *)sub_1002599CC(v3);
    }
  }
  return result;
}

BOOL sub_1001F2D0C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    return sub_100059E10(*(void *)a1) - *(_DWORD *)(a1 + 20) == *(unsigned __int8 *)(a1 + 26);
  }
  else
  {
    BOOL v3 = sub_1001F1564(*(unsigned __int16 *)(a1 + 24));
    unsigned int v4 = sub_100059E10(*(void *)a1);
    unsigned int v5 = *(unsigned __int8 *)(a1 + 26);
    if (!v3) {
      return v4 >= v5;
    }
    return v4 == v5 - sub_1001F33D8(*(unsigned __int16 *)(a1 + 24));
  }
}

void *sub_1001F2D98(uint64_t a1)
{
  return sub_1001F2C84((void *)qword_100A05390, a1);
}

void *sub_1001F2DA8(uint64_t a1)
{
  return sub_1001F2C84((void *)qword_100A05398, a1);
}

void sub_1001F2DB8(void *ptr)
{
  int v2 = *(unsigned __int8 *)ptr;
  BOOL v3 = (void *)ptr[3];
  if (v2)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3) {
    sub_10025C53C(v3);
  }
  BOOL v3 = (void *)ptr[5];
  if (v3) {
LABEL_3:
  }
    sub_10025C3A8((uint64_t)v3);
LABEL_4:

  sub_100023010(ptr);
}

uint64_t sub_1001F2E14(uint64_t result, const void **a2)
{
  int v2 = result;
  if (a2)
  {
    if (*((unsigned __int16 *)a2 + 12) == result)
    {
      sub_10025B778("\t cid : 0x%x, address %p\n", result, a2);
      if (*((unsigned char *)a2 + 29)) {
        unsigned int v4 = "Yes";
      }
      else {
        unsigned int v4 = "No";
      }
      sub_10025B778("\t\t stalled : %s\n", v4);
      if (*((unsigned char *)a2 + 16)) {
        unsigned int v5 = "Yes";
      }
      else {
        unsigned int v5 = "No";
      }
      sub_10025B778("\t\t retransmitEnabled : %s\n", v5);
      sub_10025B778("\t\t maxPackets : %d\n", *((unsigned __int8 *)a2 + 26));
      sub_10025B778("\t\t priority : %d\n", *((unsigned __int8 *)a2 + 27));
      sub_10025B778("\t\t transport : 0x%x\n", *((unsigned __int8 *)a2 + 28));
      if (a2[8]) {
        char v6 = "Yes";
      }
      else {
        char v6 = "No";
      }
      sub_10025B778("\t\t readyForTx : %s\n", v6);
      sub_10025B778("\t\t packetSent : 0x%x\n", a2[9]);
      sub_10025B778("\t\t nextQueue : 0x%x\n", a2[10]);
      sub_10025B778("\t\t previousQueue : 0x%x\n", a2[11]);
      if (*((unsigned char *)a2 + 16))
      {
        sub_10025B778("\t\t iFrames : %p\n", *a2);
        uint64_t v7 = sub_1002599CC((uint64_t)*a2);
        uint64_t v14 = v7;
        if (v7)
        {
          int v8 = 0;
          do
          {
            uint64_t v9 = (unsigned __int8 *)sub_1002599F0(v7);
            sub_10025B778("\tiFrame number %d\n", (unsigned __int16)v8);
            sub_1001F3098(v9);
            sub_1002599D4((uint64_t)&v14);
            ++v8;
            uint64_t v7 = v14;
          }
          while (v14);
        }
        sub_10025B778("\t\t sFrames : %p\n", a2[1]);
        uint64_t result = sub_1002599CC((uint64_t)a2[1]);
        uint64_t v14 = result;
        if (result)
        {
          int v10 = 0;
          do
          {
            uint64_t v11 = (unsigned __int8 *)sub_1002599F0(result);
            sub_10025B778("\tsFrame number %d\n", (unsigned __int16)v10);
            sub_1001F3098(v11);
            sub_1002599D4((uint64_t)&v14);
            ++v10;
            uint64_t result = v14;
          }
          while (v14);
        }
      }
      else
      {
        sub_10025B778("\t\t dataQueues : %p\n", *a2);
        uint64_t result = sub_1002599CC((uint64_t)*a2);
        uint64_t v14 = result;
        if (result)
        {
          int v12 = 0;
          do
          {
            uint64_t v13 = (unsigned __int8 *)sub_1002599F0(result);
            sub_10025B778("\tFrame number %d\n", (unsigned __int16)v12);
            sub_1001F3098(v13);
            sub_1002599D4((uint64_t)&v14);
            ++v12;
            uint64_t result = v14;
          }
          while (v14);
        }
      }
    }
  }
  else
  {
    sub_10025B8C0();
    return sub_10025B778("Queue is null, cid 0x%x", v2);
  }
  return result;
}

uint64_t sub_1001F3098(unsigned __int8 *a1)
{
  sub_10025B778("\t\t\t address : %p\n", a1);
  sub_10025B778("\t\t\t frameType : 0x%x\n", *a1);
  if (a1[1]) {
    int v2 = "Yes";
  }
  else {
    int v2 = "No";
  }
  sub_10025B778("\t\t\t reliable : %s\n", v2);
  sub_10025B778("\t\t\t sendState : 0x%x\n", *((_DWORD *)a1 + 1));
  sub_10025B778("\t\t\t handle : %p\n", *((const void **)a1 + 1));
  sub_10025B778("\t\t\t mbuf : %p\n", *((const void **)a1 + 3));
  sub_10025B778("\t\t\t priority : %d\n", a1[32]);
  sub_10025B778("\t\t\t packetPosition : 0x%x\n", a1[33]);
  sub_10025B778("\t\t\t totalSize : %d\n", *((unsigned __int16 *)a1 + 17));
  sub_10025B778("\t\t\t cid : 0x%x\n", *((unsigned __int16 *)a1 + 18));
  sub_10025B778("\t\t\t txSequence : %d\n", *((unsigned __int16 *)a1 + 19));
  if (*((void *)a1 + 5)) {
    sub_10025B778("\t\t\t payloadMBuf : %p, numbytes %d\n");
  }
  else {
    sub_10025B778("\t\t\t payloadMBuf : NONE\n");
  }
  return sub_10025B778("\t\t\t retryCount : %d\n", a1[48]);
}

void sub_1001F31EC()
{
  uint64_t v0 = qword_100A05380;
  uint64_t v9 = 0;
  sub_10025B778("L2CAP Queue states :\n");
  sub_10025B778("\trunning = 0x%x\n", byte_100A053A0);
  sub_10025B778("\tnbQueues = %d\n", byte_100A05388);
  sub_10025B778("\tqueues = %p\n", (const void *)qword_100A05380);
  sub_10025B778("\tfragmentedQueue = %p\n", (const void *)qword_100A05390);
  sub_10025B778("\tunstallableQueue = %p\n", (const void *)qword_100A05398);
  uint64_t v1 = 0;
  if (dword_100A053A4 <= 2) {
    uint64_t v1 = off_10099F040[dword_100A053A4];
  }
  sub_10025B778("TxQ State: %s\n", v1);
  sub_10025B778("L2CAP Queues :\n");
  if (v0)
  {
    do
    {
      sub_1001F2E14(*(unsigned __int16 *)(v0 + 24), (const void **)v0);
      uint64_t v0 = *(void *)(v0 + 80);
      if (v0) {
        BOOL v2 = v0 == qword_100A05380;
      }
      else {
        BOOL v2 = 1;
      }
    }
    while (!v2);
  }
  if (qword_100A05390)
  {
    sub_10025B778("Fragmented Queue : %p\n", (const void *)qword_100A05390);
    uint64_t v3 = sub_1002599CC(qword_100A05390);
    uint64_t v9 = v3;
    if (v3)
    {
      int v4 = 0;
      do
      {
        unsigned int v5 = (unsigned __int8 *)sub_1002599F0(v3);
        sub_10025B778("\tFrame number %d\n", (unsigned __int16)v4);
        sub_1001F3098(v5);
        sub_1002599D4((uint64_t)&v9);
        ++v4;
        uint64_t v3 = v9;
      }
      while (v9);
    }
  }
  if (qword_100A05398)
  {
    sub_10025B778("Unstallable Queue : %p\n", (const void *)qword_100A05398);
    uint64_t v6 = sub_1002599CC(qword_100A05398);
    uint64_t v9 = v6;
    if (v6)
    {
      int v7 = 0;
      do
      {
        int v8 = (unsigned __int8 *)sub_1002599F0(v6);
        sub_10025B778("\tPacket number %d\n", (unsigned __int16)v7);
        sub_1001F3098(v8);
        sub_1002599D4((uint64_t)&v9);
        ++v7;
        uint64_t v6 = v9;
      }
      while (v9);
    }
  }
  sub_1001DD658();
}

uint64_t sub_1001F33D8(unsigned int a1)
{
  uint64_t v3 = 0;
  if (!sub_1001DD56C(a1, (uint64_t *)&v3)
    && v3
    && (*v3 != 4 ? (BOOL v2 = *v3 == 2) : (BOOL v2 = 1), v2 && sub_1001F1564(*((unsigned __int16 *)v3 + 2))))
  {
    return sub_1001D9CA0(v3);
  }
  else
  {
    return 1;
  }
}

uint64_t sub_1001F3438(unsigned int a1)
{
  if (qword_100A05380)
  {
    unsigned int v1 = a1;
    uint64_t v2 = qword_100A05380;
    while (*(unsigned __int16 *)(v2 + 24) != a1)
    {
      uint64_t v2 = *(void *)(v2 + 80);
      if (v2 == qword_100A05380 || v2 == 0) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    sub_10025B8C0();
    __break(1u);
  }
  if (!*(unsigned char *)(v2 + 16))
  {
    if (!sub_100059E10(*(void *)v2)) {
      sub_10025B8C0();
    }
    uint64_t v13 = sub_1002598B4(*(void *)v2, 0);
    if (v13)
    {
      (*(void (**)(uint64_t, uint64_t))(v2 + 72))(v2, v13);
      sub_1001DE118(v1);
    }
    else
    {
      uint64_t result = sub_100058654();
      if (!result) {
        return result;
      }
      sub_100056E24((uint64_t)"Invalid packet", v14, v15, v16, v17, v18, v19, v20, v22);
      uint64_t v21 = sub_100050B4C(0x2Fu);
      uint64_t result = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
      sub_100744F6C();
    }
    return 0;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Should not be flushing Queue with E/RT enabled", v4, v5, v6, v7, v8, v9, v10, v22);
    uint64_t v11 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 485;
}

void sub_1001F355C()
{
  dword_100A053A4 = 2;
}

void sub_1001F356C(int a1)
{
  if (!a1 && dword_100A053A4 == 1 || a1 && dword_100A053A4 != 2)
  {
    dword_100A053A4 = 2;
    sub_1001F359C();
  }
}

void sub_1001F359C()
{
  ptr = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
  uint64_t v48 = 0;
  while (1)
  {
    uint64_t v49 = 0;
    uint64_t v0 = sub_10010BA04();
    uint64_t v1 = qword_100A05380;
    if (qword_100A05380)
    {
      uint64_t v2 = v0;
      uint64_t v3 = (void *)qword_100A05380;
      do
      {
        unint64_t v4 = v3[7];
        unint64_t v5 = v2 - v3[6];
        if (v5 > v4 || v4 == 0xFFFFFFFF && v5 >= 0xFA1)
        {
          uint64_t v6 = sub_1001F5DF8((uint64_t)v3, (uint64_t)&v49, v2, &v48);
          if (v6) {
            goto LABEL_18;
          }
          uint64_t v1 = qword_100A05380;
        }
        uint64_t v3 = (void *)v3[10];
        if (v3 == (void *)v1)
        {
          uint64_t v49 = 0;
          if (!v1) {
            goto LABEL_20;
          }
LABEL_14:
          while (1)
          {
            uint64_t v6 = sub_1001F5DF8(v1, (uint64_t)&v49, v2, &v48);
            if (v6) {
              break;
            }
            uint64_t v1 = *(void *)(v1 + 80);
            if (v1 == qword_100A05380)
            {
              uint64_t v49 = 0;
              goto LABEL_20;
            }
            if (!v1) {
              goto LABEL_20;
            }
          }
LABEL_18:
          uint64_t v7 = v6;
          goto LABEL_26;
        }
      }
      while (v3);
      if (v1) {
        goto LABEL_14;
      }
    }
LABEL_20:
    if (sub_100059E10(qword_100A05398))
    {
      uint64_t v7 = qword_100A05398;
      uint64_t v49 = sub_10025989C(qword_100A05398);
      if (!v7) {
        goto LABEL_90;
      }
      goto LABEL_26;
    }
    if (!sub_1001F6150((uint64_t)&v49)) {
      goto LABEL_90;
    }
    if (!v49) {
      break;
    }
    uint64_t v7 = qword_100A05390;
    if (!qword_100A05390) {
      goto LABEL_90;
    }
LABEL_26:
    sub_10019D478(*(void *)(v49 + 8));
    uint64_t v8 = v49;
    unsigned int v9 = *(_DWORD *)(v49 + 4);
    if (v9 != 1)
    {
      if (v9)
      {
        sub_10025B8C0();
        unsigned int v9 = 1;
      }
      else
      {
        *(_DWORD *)(v49 + 4) = 1;
        if (*(unsigned char *)(v8 + 1) && (byte_100A195D2 & 0x40) != 0)
        {
          unsigned int v9 = 0;
        }
        else if (*(_WORD *)(v8 + 36) == 43)
        {
          unsigned int v9 = 3;
        }
        else
        {
          unsigned int v9 = 2;
        }
      }
    }
    uint64_t v10 = sub_10019D4D4(*(unsigned __int16 **)(v8 + 8), v9, *(_DWORD *)(v8 + 16), *(void *)(v8 + 24));
    uint64_t v11 = v10;
    if (v10 == 613)
    {
      if (!sub_100198F2C()) {
        sub_10010B394(613);
      }
    }
    else if (!v10)
    {
      if (*(_WORD *)(*(void *)(v8 + 24) + 4)) {
        *(_DWORD *)(v8 + 4) = 1;
      }
      else {
        *(_DWORD *)(v8 + 4) = 2;
      }
      goto LABEL_50;
    }
    if (sub_100058654()
      && (sub_100056E24((uint64_t)"OI_HCIAPI_WriteAclData failed with %!", v12, v13, v14, v15, v16, v17, v18, v11),
          uint64_t v19 = sub_100050B4C(0x2Fu),
          os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)))
    {
      sub_1007498EC(&v52, &v53);
      if (!v11) {
        goto LABEL_50;
      }
    }
    else if (!v11)
    {
      goto LABEL_50;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Send packet fail with status %!", v20, v21, v22, v23, v24, v25, v26, v11);
      uint64_t v27 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_1007498EC(&v50, &v51);
      }
    }
    if (v11 == 118 || v11 == 613) {
      goto LABEL_94;
    }
    *(_DWORD *)(v49 + 4) = 2;
LABEL_50:
    uint64_t v28 = v49;
    if (*(_DWORD *)(v49 + 4) == 2)
    {
      *(void *)long long buf = 0;
      int v29 = sub_1001DD56C(*(unsigned __int16 *)(v49 + 36), (uint64_t *)buf);
      uint64_t v30 = v49;
      if (!v29 && *(unsigned char *)v49 != 1) {
        *(_DWORD *)(*(void *)buf + 80) += *(unsigned __int16 *)(v49 + 34);
      }
      if (*(void *)(v30 + 56))
      {
        __int16 v31 = sub_10019E5A8(*(void *)(v30 + 8));
        uint64_t v30 = v49;
        uint64_t v32 = *(void *)(v49 + 8);
        *(_WORD *)(v32 + 18) = v31;
        *(void *)(v32 + 8) = *(void *)(v30 + 56);
      }
      if (v30 != sub_1001F5C24(v7))
      {
        sub_1001F31EC();
        sub_10025B8C0();
      }
      if (v7 == qword_100A05390)
      {
        if (qword_100A05380)
        {
          uint64_t v7 = qword_100A05380;
          while (*(unsigned __int16 *)(v7 + 24) != *(unsigned __int16 *)(v49 + 36))
          {
            uint64_t v7 = *(void *)(v7 + 80);
            if (v7 == qword_100A05380 || v7 == 0) {
              goto LABEL_67;
            }
          }
        }
        else
        {
LABEL_67:
          sub_10025B8C0();
          uint64_t v7 = 0;
        }
      }
      if (v7 == qword_100A05398)
      {
        if (qword_100A05380)
        {
          uint64_t v7 = qword_100A05380;
          while (*(unsigned __int16 *)(v7 + 24) != *(unsigned __int16 *)(v49 + 36))
          {
            uint64_t v7 = *(void *)(v7 + 80);
            if (v7 == qword_100A05380 || v7 == 0) {
              goto LABEL_77;
            }
          }
        }
        else
        {
LABEL_77:
          sub_10025B8C0();
          uint64_t v7 = 0;
        }
      }
      if (*(void *)(v7 + 40)) {
        sub_100026DB4(*(unsigned int *)(v7 + 32));
      }
      (*(void (**)(uint64_t, uint64_t))(v7 + 72))(v7, v49);
    }
    else if (qword_100A05390 != v7)
    {
      if (sub_1001F5C24(v7) != v28)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Wrong packet dequeued !!!", v35, v36, v37, v38, v39, v40, v41, v46);
          uint64_t v42 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
          {
            uint64_t v43 = sub_100050714();
            *(_DWORD *)long long buf = 136446466;
            *(void *)&uint8_t buf[4] = v43;
            __int16 v55 = 1024;
            int v56 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
      }
      sub_100259764(qword_100A05390, v28, 8);
    }
  }
  uint64_t v49 = 0;
LABEL_90:
  uint64_t v44 = qword_100A05380;
  if (sub_100059E10(qword_100A05390) || sub_100059E10(qword_100A05398))
  {
LABEL_92:
    int v45 = 1;
  }
  else
  {
    do
    {
      if (!v44) {
        break;
      }
      if (*(unsigned char *)(v44 + 16) && sub_100059E10(*(void *)(v44 + 8))
        || sub_100059E10(*(void *)v44))
      {
        goto LABEL_92;
      }
      uint64_t v44 = *(void *)(v44 + 80);
    }
    while (v44 != qword_100A05380);
    int v45 = 0;
  }
  dword_100A053A4 = v45;
LABEL_94:
  sub_1002595D8(ptr);
}

uint64_t sub_1001F3B00(uint64_t result)
{
  if (qword_100A05380)
  {
    uint64_t v1 = qword_100A05380;
    do
    {
      if (*(unsigned __int16 *)(v1 + 24) == result) {
        break;
      }
      uint64_t v1 = *(void *)(v1 + 80);
    }
    while (v1 != qword_100A05380 && v1 != 0);
  }
  dword_100A053A4 = 2;
  return result;
}

uint64_t sub_1001F3B3C(unsigned int a1, char a2, unsigned int a3, uint64_t a4, uint64_t *a5, unsigned int a6)
{
  uint64_t v26 = 0;
  if (byte_100A05388 > 0x29u) {
    return 104;
  }
  if (!qword_100A05380)
  {
LABEL_11:
    uint64_t v15 = sub_100022FE8(0x68uLL);
    if (!v15) {
      return 106;
    }
    uint64_t v16 = (uint64_t)v15;
    if (a3 >= 0x13) {
      int v17 = 19;
    }
    else {
      int v17 = a3;
    }
    if (a3) {
      unsigned int v18 = v17;
    }
    else {
      unsigned int v18 = 1;
    }
    if (sub_1001F150C(a1))
    {
      *(unsigned char *)(v16 + 16) = 1;
      *(_DWORD *)(v16 + 20) = 0;
      *(void *)uint64_t v16 = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
      *(void *)(v16 + 8) = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
      *(void *)(v16 + 64) = sub_1001F3DC8;
      uint64_t v19 = sub_1001F3F18;
    }
    else
    {
      BOOL v20 = sub_1001F1564(a1);
      *(unsigned char *)(v16 + 16) = 0;
      *(_DWORD *)(v16 + 20) = 0;
      *(void *)uint64_t v16 = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
      if (v20)
      {
        *(void *)(v16 + 64) = sub_1001F3FB0;
        uint64_t v19 = sub_1001F40D0;
      }
      else
      {
        *(void *)(v16 + 64) = sub_1001F4130;
        uint64_t v19 = sub_1001F4270;
      }
    }
    *(void *)(v16 + 72) = v19;
    *(void *)(v16 + 56) = a6;
    *(_WORD *)(v16 + 24) = a1;
    *(unsigned char *)(v16 + 26) = a2;
    *(unsigned char *)(v16 + 27) = v18;
    *(_WORD *)(v16 + 28) = 255;
    *(void *)(v16 + 40) = a4;
    *(_DWORD *)(v16 + 32) = 0;
    *(void *)(v16 + 48) = sub_10010BA04();
    uint64_t v21 = qword_100A05380;
    if (qword_100A05380)
    {
      uint64_t v22 = qword_100A05380;
      while (*(unsigned __int8 *)(v22 + 27) >= v18)
      {
        uint64_t v22 = *(void *)(v22 + 80);
        if (qword_100A05380 == v22)
        {
          uint64_t v22 = qword_100A05380;
          break;
        }
      }
      uint64_t v23 = *(void *)(v22 + 88);
      *(void *)(v16 + 80) = v22;
      *(void *)(v16 + 88) = v23;
      *(void *)(*(void *)(v22 + 88) + 80) = v16;
      *(void *)(v22 + 88) = v16;
      if (*(unsigned __int8 *)(v21 + 27) >= v18) {
        goto LABEL_34;
      }
      uint64_t v24 = &qword_100A05380;
    }
    else
    {
      qword_100A05380 = v16;
      *(void *)(v16 + 80) = v16;
      uint64_t v24 = (uint64_t *)(v16 + 88);
    }
    uint64_t *v24 = v16;
LABEL_34:
    if (a5) {
      *a5 = v16;
    }
    ++byte_100A05388;
    if (!sub_1001DD56C(a1, (uint64_t *)&v26) && *v26 == 4)
    {
      uint64_t v25 = (unsigned __int16 **)sub_1001E6484(v26);
      sub_100171A04(*v25);
    }
    return 0;
  }
  uint64_t v13 = qword_100A05380;
  while (*(unsigned __int16 *)(v13 + 24) != a1)
  {
    uint64_t v13 = *(void *)(v13 + 80);
    if (v13 == qword_100A05380 || v13 == 0) {
      goto LABEL_11;
    }
  }
  return 119;
}

uint64_t sub_1001F3DC8(uint64_t a1, uint64_t *a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  *a2 = 0;
  if (*(unsigned char *)(a1 + 29)) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(a1 + 8);
  if (!sub_100059E10(*(void *)(a1 + 8)))
  {
    unint64_t v4 = (uint64_t *)a1;
    if (!sub_100059E10(*(void *)a1))
    {
      if (*(void *)(a1 + 56) == 0xFFFFFFFFLL)
      {
        uint64_t v13 = sub_10010BA04();
        uint64_t result = 0;
        *(void *)(a1 + 48) = v13;
        return result;
      }
      return 0;
    }
  }
  uint64_t v5 = sub_10025989C(*v4);
  *(void *)(a1 + 96) = *v4;
  uint64_t v6 = *(void *)(v5 + 8);
  int v7 = *(unsigned __int8 *)(v6 + 2);
  if (!*(unsigned char *)(v6 + 2) && byte_100A19739 == 0) {
    return 0;
  }
  if (v7 == 4 && byte_100A1973A == 0) {
    return 0;
  }
  if (v7 == 8 && byte_100A19738 == 0) {
    return 0;
  }
  uint64_t v11 = v5;
  if (!sub_100197698(*(void *)(v5 + 8))
    && !sub_100197740(v6)
    && !sub_100197770(v6)
    && !sub_1001977A0(v6)
    || (*(unsigned char *)(*(void *)(v11 + 8) + 2) || (uint64_t result = sub_1001977D8(v6), result))
    && (uint64_t result = sub_1001F6284(v6, *(unsigned __int8 *)(a1 + 27)), result))
  {
    *a2 = v11;
    return 1;
  }
  return result;
}

void sub_1001F3F18(uint64_t a1, unsigned char *a2)
{
  uint64_t v3 = (void *)*((void *)a2 + 3);
  if (*a2)
  {
    sub_10025C3A8((uint64_t)v3);
    *((void *)a2 + 3) = 0;
    sub_100023010(a2);
  }
  else
  {
    if (v3)
    {
      sub_10025C53C(v3);
      *((void *)a2 + 3) = 0;
    }
    sub_10025C574(*((void *)a2 + 5));
    if (sub_1001F16F0(*((unsigned __int16 *)a2 + 18), (uint64_t)a2))
    {
      sub_1001F2DB8(a2);
    }
  }
}

uint64_t sub_1001F3FB0(uint64_t a1, uint64_t *a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  *a2 = 0;
  uint64_t v4 = *(void *)a1;
  *(void *)(a1 + 96) = *(void *)a1;
  if (!sub_100059E10(v4))
  {
    if (*(void *)(a1 + 56) == 0xFFFFFFFFLL)
    {
      uint64_t v9 = sub_10010BA04();
      uint64_t result = 0;
      *(void *)(a1 + 48) = v9;
      return result;
    }
    return 0;
  }
  uint64_t v5 = sub_10025989C(*(void *)a1);
  if (!sub_100197698(*(void *)(v5 + 8))
    && !sub_100197740(*(void *)(v5 + 8))
    && !sub_100197770(*(void *)(v5 + 8))
    && !sub_1001977A0(*(void *)(v5 + 8)))
  {
    goto LABEL_17;
  }
  uint64_t v10 = 0;
  uint64_t v6 = *(void *)(v5 + 8);
  if (*(unsigned char *)(v6 + 2) == 4 && byte_100A1973A == 0) {
    return 0;
  }
  uint64_t result = sub_100197810(v6);
  if (!result) {
    return result;
  }
  if (sub_1001DD56C(*(unsigned __int16 *)(a1 + 24), (uint64_t *)&v10) && v10) {
    return 0;
  }
  uint64_t result = sub_1001D9E58(v10);
  if (result)
  {
    uint64_t result = sub_1001F6284(*(void *)(v5 + 8), *(unsigned __int8 *)(v5 + 32));
    if (result)
    {
LABEL_17:
      *a2 = v5;
      return 1;
    }
  }
  return result;
}

void sub_1001F40D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (!sub_1001DD56C(*(unsigned __int16 *)(a2 + 36), (uint64_t *)&v4)) {
    sub_1001D9F58(v4, 1u);
  }
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    sub_10025C3A8(v3);
    *(void *)(a2 + 24) = 0;
  }
  sub_100023010((void *)a2);
}

BOOL sub_1001F4130(uint64_t a1, uint64_t *a2)
{
  if (!a1) {
    sub_10025B8C0();
  }
  *a2 = 0;
  if (*(unsigned char *)(a1 + 29)) {
    return 0;
  }
  uint64_t v5 = *(void *)a1;
  *(void *)(a1 + 96) = *(void *)a1;
  uint64_t v6 = sub_10025989C(v5);
  if (!v6)
  {
    if (*(void *)(a1 + 56) == 0xFFFFFFFFLL)
    {
      uint64_t v10 = sub_10010BA04();
      BOOL result = 0;
      *(void *)(a1 + 48) = v10;
      return result;
    }
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 + 8);
  if (!sub_100197698(v8) && !sub_100197740(v8) && !sub_100197770(v8) && !sub_1001977A0(v8))
  {
LABEL_26:
    *a2 = v7;
    return 1;
  }
  int v9 = *(unsigned __int8 *)(v8 + 2);
  if (v9 == 8) {
    goto LABEL_24;
  }
  if (v9 != 4)
  {
    if (!*(unsigned char *)(v8 + 2))
    {
      if (byte_100A19739 && (sub_1001977D8(v8) & 1) != 0) {
        goto LABEL_25;
      }
      return 0;
    }
    sub_10025B8C0();
LABEL_24:
    if (byte_100A19738) {
      goto LABEL_25;
    }
    return 0;
  }
  if (!*(unsigned char *)(v8 + 129) && (!byte_100A1973A || !sub_100197810(v8))) {
    return 0;
  }
LABEL_25:
  BOOL result = sub_1001F6284(v8, *(unsigned __int8 *)(v7 + 32));
  if (result) {
    goto LABEL_26;
  }
  return result;
}

void sub_1001F4270(uint64_t a1, void *a2)
{
  if (!a2) {
    sub_10025B8C0();
  }
  uint64_t v3 = a2[3];
  if (v3 || (sub_10025B8C0(), (uint64_t v3 = a2[3]) != 0))
  {
    sub_10025C3A8(v3);
    a2[3] = 0;
  }

  sub_100023010(a2);
}

void *sub_1001F42C8(void *result)
{
  if (byte_100A053A0 != 1) {
    return result;
  }
  int v1 = (int)result;
  if (qword_100A05380)
  {
    uint64_t v2 = (void **)qword_100A05380;
    while (*((unsigned __int16 *)v2 + 12) != result)
    {
      uint64_t v2 = (void **)v2[10];
      if (v2 == (void **)qword_100A05380 || v2 == 0) {
        goto LABEL_22;
      }
    }
    if (v2[5]) {
      sub_100026DB4(*((unsigned int *)v2 + 8));
    }
    uint64_t v4 = v2[10];
    if (v4 == v2)
    {
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v5 = v2[11];
      v5[10] = v4;
      uint64_t v6 = (uint64_t)v2[10];
      *(void *)(v6 + 88) = v5;
      if ((void **)qword_100A05380 != v2)
      {
LABEL_19:
        --byte_100A05388;
        if (*((unsigned char *)v2 + 16)) {
          sub_1002595D8(v2[1]);
        }
        sub_1002595D8(*v2);
        sub_100023010(v2);
        goto LABEL_22;
      }
    }
    qword_100A05380 = v6;
    goto LABEL_19;
  }
LABEL_22:
  sub_1001F43E0(qword_100A05390, v1);
  uint64_t v7 = qword_100A05398;

  return sub_1001F43E0(v7, v1);
}

void *sub_1001F43E0(uint64_t a1, int a2)
{
  BOOL result = (void *)sub_1002599CC(a1);
  for (ptr = result; ptr; BOOL result = ptr)
  {
    while (1)
    {
      uint64_t v5 = sub_1002599F0((uint64_t)result);
      if (!v5 || *(unsigned __int16 *)(v5 + 36) != a2) {
        break;
      }
      sub_100259A44(a1, ptr, 1);
      BOOL result = (void *)sub_1002599CC(a1);
      ptr = result;
      if (!result) {
        return result;
      }
    }
    sub_1002599D4((uint64_t)&ptr);
  }
  return result;
}

uint64_t sub_1001F4460(int a1)
{
  if (!qword_100A05380) {
    return 0;
  }
  uint64_t v1 = qword_100A05380;
  while (*(unsigned __int16 *)(v1 + 24) != a1)
  {
    uint64_t v1 = *(void *)(v1 + 80);
    if (v1 == qword_100A05380 || v1 == 0) {
      return 0;
    }
  }
  return sub_100059E10(*(void *)v1);
}

void sub_1001F449C(unsigned int a1)
{
  if (!qword_100A05380) {
    return;
  }
  uint64_t v2 = qword_100A05380;
  while (*(unsigned __int16 *)(v2 + 24) != a1)
  {
    uint64_t v2 = *(void *)(v2 + 80);
    if (v2 == qword_100A05380 || v2 == 0) {
      return;
    }
  }
  if (!*(unsigned char *)(v2 + 16))
  {
    BOOL v6 = sub_1001F1564(a1);
    unsigned int v7 = sub_100059E10(*(void *)v2);
    unsigned int v8 = *(unsigned __int8 *)(v2 + 26);
    if (v6)
    {
      if (v7 != v8 - sub_1001F33D8(a1)) {
        goto LABEL_14;
      }
    }
    else if (v7 < v8)
    {
      goto LABEL_14;
    }
LABEL_13:
    v9[0] = (const void *)2;
    v9[1] = (const void *)(v2 + 24);
    sub_1000268E4((uint64_t)sub_1001F598C, v9, 0, 0);
    goto LABEL_14;
  }
  if (sub_100059E10(*(void *)v2))
  {
    int v4 = sub_100059E10(*(void *)v2);
    if (v4 + sub_1001F1758(*(unsigned __int16 *)(v2 + 24)) >= *(unsigned __int8 *)(v2 + 26)) {
      goto LABEL_13;
    }
  }
LABEL_14:
  int v5 = *(unsigned __int8 *)(v2 + 16);
  sub_100259640(*(void *)v2);
  if (v5) {
    sub_100259640(*(void *)(v2 + 8));
  }
}

unsigned int *sub_1001F45C4(unsigned int *result, unsigned __int16 *a2, unint64_t a3, char a4)
{
  unsigned int v7 = result;
  uint64_t v8 = qword_100A05380;
  do
  {
    if (!v8) {
      break;
    }
    unsigned int v9 = *(unsigned __int16 *)(v8 + 24);
    if (a3)
    {
      if (v9 == *a2)
      {
        BOOL v10 = 1;
      }
      else
      {
        uint64_t v11 = 1;
        do
        {
          unint64_t v12 = v11;
          if (a3 == v11) {
            break;
          }
          int v13 = a2[v11++];
        }
        while (v9 != v13);
        BOOL v10 = v12 < a3;
      }
    }
    else
    {
      BOOL v10 = 0;
    }
    uint64_t v14 = 0;
    BOOL result = (unsigned int *)sub_1001DD56C(v9, (uint64_t *)&v14);
    if (!v10 && !result)
    {
      BOOL result = v14;
      if (*v14 == 2)
      {
        BOOL result = (unsigned int *)sub_1001E6484(v14);
        if (*(unsigned int **)result == v7) {
          *(unsigned char *)(v8 + 29) = a4;
        }
      }
    }
    uint64_t v8 = *(void *)(v8 + 80);
  }
  while (v8 != qword_100A05380);
  if ((a4 & 1) == 0) {
    dword_100A053A4 = 2;
  }
  return result;
}

uint64_t sub_1001F46C0(uint64_t result, unsigned __int16 *a2, uint64_t a3, char a4)
{
  uint64_t v7 = result;
  int v13 = 0;
  uint64_t v8 = qword_100A05380;
  do
  {
    if (!v8) {
      break;
    }
    BOOL result = *(unsigned __int16 *)(v8 + 24);
    char v9 = 0;
    if (a3)
    {
      uint64_t v10 = a3;
      uint64_t v11 = a2;
      do
      {
        int v12 = *v11++;
        v9 |= result == v12;
        --v10;
      }
      while (v10);
    }
    if (result >= 0x40 && (v9 & 1) == 0)
    {
      BOOL result = sub_1001DD56C(result, (uint64_t *)&v13);
      if (!result)
      {
        BOOL result = (uint64_t)v13;
        if (*v13 == 4)
        {
          BOOL result = sub_1001E6484(v13);
          if (*(void *)result == v7) {
            *(unsigned char *)(v8 + 29) = a4;
          }
        }
      }
    }
    uint64_t v8 = *(void *)(v8 + 80);
  }
  while (v8 != qword_100A05380);
  if ((a4 & 1) == 0) {
    dword_100A053A4 = 2;
  }
  return result;
}

uint64_t sub_1001F479C(uint64_t a1, uint64_t a2, unsigned __int16 *a3, unint64_t a4)
{
  uint64_t v43 = 0;
  uint64_t i = 0;
  uint64_t v8 = qword_100A05380;
  char v9 = (mach_header_64 *)&_mh_execute_header;
  do
  {
    if (!v8) {
      break;
    }
    unsigned int v10 = *(unsigned __int16 *)(v8 + 24);
    if (v10 >= 0x40)
    {
      if (a4)
      {
        if (v10 == *a3)
        {
          BOOL v11 = 1;
        }
        else
        {
          uint64_t v12 = 1;
          do
          {
            unint64_t v13 = v12;
            if (a4 == v12) {
              break;
            }
            int v14 = a3[v12++];
          }
          while (v10 != v14);
          BOOL v11 = v13 < a4;
        }
      }
      else
      {
        BOOL v11 = 0;
      }
      if (!sub_1001DD56C(v10, (uint64_t *)&v43))
      {
        BOOL v15 = *v43 != 4 || v11;
        if (!v15 && *(void *)sub_1001E6484(v43) == a1)
        {
          *(void *)sub_1001E6484(v43) = a2;
          uint64_t v16 = v9;
          if (*(unsigned char *)(v8 + 16)) {
            uint64_t v17 = *(void *)(v8 + 8);
          }
          else {
            uint64_t v17 = 0;
          }
          uint64_t v18 = *(void *)v8;
          if (*(void *)v8)
          {
            if (sub_100059E10(*(void *)v8))
            {
              uint64_t v19 = sub_1002599CC(v18);
              for (i = v19; i; uint64_t v19 = i)
              {
                uint64_t v20 = sub_1002599F0(v19);
                if (*(void *)(v20 + 8) == a1) {
                  *(void *)(v20 + 8) = a2;
                }
                sub_1002599D4((uint64_t)&i);
              }
            }
          }
          char v9 = v16;
          if (v17)
          {
            if (sub_100059E10(v17))
            {
              uint64_t v21 = sub_1002599CC(v17);
              for (i = v21; i; uint64_t v21 = i)
              {
                uint64_t v22 = sub_1002599F0(v21);
                if (*(void *)(v22 + 8) == a1) {
                  *(void *)(v22 + 8) = a2;
                }
                sub_1002599D4((uint64_t)&i);
              }
            }
          }
          sub_1001ED928(v43, a1, a2);
        }
      }
      if (sub_100058654())
      {
        uint64_t v23 = *(unsigned __int16 *)(v8 + 24);
        sub_1001E6484(v43);
        sub_100056E24((uint64_t)"CID:0x%04x cidExcluded:%d currentHandle:%p oldHandle:%p newHandle:%p", v24, v25, v26, v27, v28, v29, v30, v23);
        __int16 v31 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v46 = v32;
          _os_log_impl(v9, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    uint64_t v8 = *(void *)(v8 + 80);
  }
  while (v8 != qword_100A05380);
  uint64_t v33 = sub_1002599CC(qword_100A05390);
  for (i = v33; i; uint64_t v33 = i)
  {
    uint64_t v34 = sub_1002599F0(v33);
    if (a4)
    {
      unsigned int v35 = *(unsigned __int16 *)(v34 + 36);
      uint64_t v36 = a3;
      unint64_t v37 = a4;
      do
      {
        if (v35 >= 0x40 && v35 != *v36 && *(void *)(v34 + 8) == a1) {
          *(void *)(v34 + 8) = a2;
        }
        ++v36;
        --v37;
      }
      while (v37);
    }
    sub_1002599D4((uint64_t)&i);
  }
  uint64_t result = sub_1002599CC(qword_100A05398);
  for (i = result; i; uint64_t result = i)
  {
    uint64_t v39 = sub_1002599F0(result);
    if (a4)
    {
      unsigned int v40 = *(unsigned __int16 *)(v39 + 36);
      uint64_t v41 = a3;
      unint64_t v42 = a4;
      do
      {
        if (v40 >= 0x40 && v40 != *v41 && *(void *)(v39 + 8) == a1) {
          *(void *)(v39 + 8) = a2;
        }
        ++v41;
        --v42;
      }
      while (v42);
    }
    sub_1002599D4((uint64_t)&i);
  }
  return result;
}

uint64_t sub_1001F4AFC(uint64_t a1)
{
  if (!qword_100A05380) {
    return 404;
  }
  unsigned int v2 = *(unsigned __int16 *)(a1 + 20);
  uint64_t v3 = qword_100A05380;
  while (*(unsigned __int16 *)(v3 + 24) != v2)
  {
    uint64_t v3 = *(void *)(v3 + 80);
    if (v3 == qword_100A05380 || v3 == 0) {
      return 404;
    }
  }
  uint64_t v7 = (unsigned __int16 *)(v3 + 24);
  int v8 = sub_1001F150C(v2);
  int v9 = *(unsigned __int8 *)(v3 + 16);
  if (v9 != v8)
  {
    sub_10025B8C0();
    int v9 = *(unsigned __int8 *)(v3 + 16);
  }
  if (v9)
  {
    int v10 = sub_100059E10(*(void *)v3);
    unsigned int v11 = v10 - *(_DWORD *)(v3 + 20);
    unsigned int v12 = *(unsigned __int8 *)(v3 + 26);
    if (v11 >= v12) {
      return 410;
    }
    int v13 = v10;
    if (v11 == v12 - 1) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = 412;
    }
    int v14 = sub_100022FE8(0x40uLL);
    if (!v14) {
      return 106;
    }
    BOOL v15 = v14;
    *int v14 = 0;
    v14[1] = *(unsigned char *)a1;
    *((_DWORD *)v14 + 1) = 0;
    *((void *)v14 + 1) = *(void *)(a1 + 8);
    *((_DWORD *)v14 + 4) = *(_DWORD *)(a1 + 16);
    if (sub_10025C220((void *)v14 + 5, a1 + 40, 0))
    {
      sub_100023010(v15);
      return 106;
    }
    *((unsigned char *)v15 + 32) = *(unsigned char *)(v3 + 27);
    *((unsigned char *)v15 + 33) = *(unsigned char *)(a1 + 24);
    *((_WORD *)v15 + 17) = *(_WORD *)(a1 + 26);
    unsigned int v19 = *(unsigned __int16 *)(v3 + 24);
    *((_WORD *)v15 + 18) = v19;
    *((_WORD *)v15 + 19) = sub_1001F1664(v19);
    *((void *)v15 + 3) = 0;
    *((unsigned char *)v15 + 48) = 0;
    *((void *)v15 + 7) = *(void *)(a1 + 32);
    if (!v13 && *(void *)(v3 + 56) == 0xFFFFFFFFLL) {
      *(void *)(v3 + 48) = sub_10010BA04();
    }
    uint64_t v20 = *(void *)v3;
    uint64_t v21 = (uint64_t)v15;
    goto LABEL_53;
  }
  v29[0] = 0;
  __int16 v30 = 0;
  unsigned int v16 = sub_100059E10(*(void *)v3);
  if (v16 >= *(unsigned __int8 *)(v3 + 26))
  {
    uint64_t v5 = 410;
    goto LABEL_54;
  }
  unsigned int v17 = v16;
  if (sub_1001F1564(*v7)
    && (int v18 = *(unsigned __int8 *)(v3 + 26), v17 >= ~sub_1001F33D8(*(unsigned __int16 *)(v3 + 24)) + v18))
  {
    uint64_t v5 = 0;
  }
  else if (v17 == *(unsigned __int8 *)(v3 + 26) - 1)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 412;
  }
  uint64_t v22 = sub_100022FE8(0x40uLL);
  if (!v22)
  {
LABEL_43:
    uint64_t v5 = 106;
    goto LABEL_54;
  }
  uint64_t v23 = v22;
  *uint64_t v22 = -1;
  unsigned int v24 = *v7;
  *((_WORD *)v23 + 18) = v24;
  v23[1] = *(unsigned char *)a1;
  *((_DWORD *)v23 + 1) = 0;
  *((void *)v23 + 1) = *(void *)(a1 + 8);
  *((_DWORD *)v23 + 4) = *(_DWORD *)(a1 + 16);
  *((void *)v23 + 7) = *(void *)(a1 + 32);
  BOOL v25 = 0;
  if (!sub_1001DD56C(v24, (uint64_t *)v29)) {
    BOOL v25 = (*(_DWORD *)v29[0] == 4 || *(_DWORD *)v29[0] == 2)
  }
       && *(unsigned char *)(sub_1001E6484((unsigned int *)v29[0]) + 78) != 0;
  uint64_t v26 = (uint64_t *)(v23 + 24);
  if (sub_10025C220((void *)v23 + 3, a1 + 40, v25))
  {
    sub_100023010(v23);
    goto LABEL_43;
  }
  if (v25)
  {
    sub_1001F13E8(*v26, &v30);
    sub_100022798((unsigned __int8 *)*v26, (char *)&v30, 2uLL, 0);
  }
  *((_WORD *)v23 + 17) = *(_WORD *)(*((void *)v23 + 3) + 4);
  *((void *)v23 + 5) = 0;
  v23[32] = *(unsigned char *)(v3 + 27);
  if (!v17 && *(void *)(v3 + 56) == 0xFFFFFFFFLL) {
    *(void *)(v3 + 48) = sub_10010BA04();
  }
  if (*(unsigned char *)(a1 + 1)) {
    uint64_t v20 = qword_100A05398;
  }
  else {
    uint64_t v20 = *(void *)v3;
  }
  uint64_t v21 = (uint64_t)v23;
LABEL_53:
  sub_100259764(v20, v21, 8);
LABEL_54:
  if (v5 == 412 || !v5)
  {
    dword_100A053A4 = 2;
    if (*(void *)(v3 + 40))
    {
      unsigned int v28 = *(_DWORD *)(v3 + 32);
      uint64_t v27 = (unsigned int *)(v3 + 32);
      if (sub_100026E24(v28))
      {
        sub_10025BC54(*v27, 300);
      }
      else
      {
        v29[1] = v7;
        v29[0] = (const void *)2;
        sub_1000268E4((uint64_t)sub_1001F4E80, v29, 300, (int *)v27);
      }
    }
  }
  return v5;
}

void sub_1001F4E80(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = **(unsigned __int16 **)(a1 + 8);
    if (qword_100A05380)
    {
      uint64_t v3 = qword_100A05380;
      while (*(unsigned __int16 *)(v3 + 24) != v2)
      {
        uint64_t v3 = *(void *)(v3 + 80);
        if (v3 == qword_100A05380 || v3 == 0) {
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      sub_10025B8C0();
      uint64_t v3 = 0;
    }
    if (!*(void *)(v3 + 40)) {
      sub_10025B8C0();
    }
    sub_10010BA04();
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Stall Monitor detected TX stall on CID 0x%04x Priority= %u maxLatency=%llu lastServiceTime=%llu, deltaTime=%llu ms,  CB 0x%x", v5, v6, v7, v8, v9, v10, v11, v2);
      unsigned int v12 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    int v13 = *(void (**)(uint64_t))(v3 + 40);
    if (v13) {
      v13(v2);
    }
  }
  else
  {
    sub_10025B8C0();
  }
}

uint64_t sub_1001F4F80(uint64_t a1)
{
  if (!qword_100A05380) {
    goto LABEL_15;
  }
  uint64_t v2 = qword_100A05380;
  while (*(unsigned __int16 *)(v2 + 24) != *(unsigned __int16 *)(a1 + 20))
  {
    uint64_t v2 = *(void *)(v2 + 80);
    if (v2 == qword_100A05380 || v2 == 0) {
      goto LABEL_15;
    }
  }
  if (*(unsigned char *)(v2 + 16))
  {
    sub_100059E10(*(void *)(v2 + 8));
    int v4 = sub_100059E10(*(void *)(v2 + 8));
    uint64_t v5 = sub_100022FE8(0x40uLL);
    if (!v5) {
      return 106;
    }
    uint64_t v6 = (uint64_t)v5;
    *uint64_t v5 = 1;
    v5[1] = *(unsigned char *)a1;
    *((_DWORD *)v5 + 1) = 0;
    *((void *)v5 + 1) = *(void *)(a1 + 8);
    *((_DWORD *)v5 + 4) = *(_DWORD *)(a1 + 16);
    if (sub_10025C220((void *)v5 + 3, a1 + 40, 0))
    {
      sub_100023010((void *)v6);
      return 106;
    }
    *(unsigned char *)(v6 + 32) = *(unsigned char *)(v2 + 27);
    *(unsigned char *)(v6 + 33) = *(unsigned char *)(a1 + 24);
    *(_WORD *)(v6 + 34) = *(_WORD *)(a1 + 26);
    *(_WORD *)(v6 + 36) = *(_WORD *)(v2 + 24);
    *(unsigned char *)(v6 + 48) = 0;
    *(void *)(v6 + 56) = 0;
    *(void *)(v6 + 40) = 0;
    if (*(void *)(v2 + 56) == 0xFFFFFFFFLL && !v4) {
      *(void *)(v2 + 48) = sub_10010BA04();
    }
    sub_100259764(*(void *)(v2 + 8), v6, 8);
    uint64_t result = 0;
    dword_100A053A4 = 2;
  }
  else
  {
LABEL_15:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can't retransmit a basic flow control channel.", v8, v9, v10, v11, v12, v13, v14, v16);
      BOOL v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B8C0();
    return 509;
  }
  return result;
}

uint64_t sub_1001F5104(uint64_t a1)
{
  if (!qword_100A05380) {
    goto LABEL_12;
  }
  uint64_t v1 = qword_100A05380;
  while (*(unsigned __int16 *)(v1 + 24) != *(unsigned __int16 *)(a1 + 36))
  {
    uint64_t v1 = *(void *)(v1 + 80);
    if (v1 == qword_100A05380 || v1 == 0) {
      goto LABEL_12;
    }
  }
  if (*(unsigned char *)(v1 + 16))
  {
    *(_DWORD *)(a1 + 4) = 0;
    sub_1002596A4(*(void *)v1, a1, 8);
    uint64_t result = 0;
    ++*(_DWORD *)(v1 + 20);
    dword_100A053A4 = 2;
  }
  else
  {
LABEL_12:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can't retransmit a basic flow control channel.", v4, v5, v6, v7, v8, v9, v10, v12);
      uint64_t v11 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B8C0();
    return 510;
  }
  return result;
}

uint64_t sub_1001F51D8(int a1)
{
  if (qword_100A05380)
  {
    uint64_t v1 = qword_100A05380;
    while (*(unsigned __int16 *)(v1 + 24) != a1)
    {
      uint64_t v1 = *(void *)(v1 + 80);
      if (v1 == qword_100A05380 || v1 == 0) {
        goto LABEL_12;
      }
    }
    if (*(unsigned char *)(v1 + 16)) {
      return sub_100059E10(*(void *)v1) != 0;
    }
  }
LABEL_12:
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Why is this called with a channel where retransmission isn't enabled ?", v4, v5, v6, v7, v8, v9, v10, v12);
    uint64_t v11 = sub_100050B4C(0x2Fu);
    uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001F5284(unsigned int a1)
{
  if (!qword_100A05380) {
    return 404;
  }
  uint64_t v2 = (void **)qword_100A05380;
  while (*((unsigned __int16 *)v2 + 12) != a1)
  {
    uint64_t v2 = (void **)v2[10];
    if (v2 == (void **)qword_100A05380 || v2 == 0) {
      return 404;
    }
  }
  int v5 = *((unsigned __int8 *)v2 + 16);
  if (v5 == sub_1001F150C(a1))
  {
    unsigned int v6 = *((unsigned __int8 *)v2 + 26);
    if (sub_1001F14B8(a1) < v6) {
      return 0;
    }
    goto LABEL_27;
  }
  int v7 = *((unsigned __int8 *)v2 + 16);
  int v8 = sub_100059E10((uint64_t)*v2);
  if (!v7)
  {
    if (v8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Warning there is packets queued in the basic queue. This will drop packets", v18, v19, v20, v21, v22, v23, v24, v27);
        BOOL v25 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_1001F449C(a1);
    }
    sub_1002595D8(*v2);
    *((unsigned char *)v2 + 16) = 1;
    *((_DWORD *)v2 + 5) = 0;
    const char *v2 = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
    v2[1] = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
    v2[8] = sub_1001F3DC8;
    v2[9] = sub_1001F3F18;
LABEL_27:
    unsigned __int8 v26 = sub_1001F14B8(a1);
    uint64_t result = 0;
    *((unsigned char *)v2 + 26) = v26 + 1;
    return result;
  }
  if (v8 || sub_100059E10((uint64_t)v2[1]))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Warning there is packets queued in the sFrame or iFrame queues. This will drop packets", v9, v10, v11, v12, v13, v14, v15, v27);
      uint64_t v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1001F449C(a1);
  }
  *((unsigned char *)v2 + 16) = 0;
  *((_DWORD *)v2 + 5) = 0;
  sub_1002595D8(*v2);
  sub_1002595D8(v2[1]);
  unsigned int v17 = sub_10025959C(0, (uint64_t)sub_1001F2DB8);
  uint64_t result = 0;
  const char *v2 = v17;
  v2[8] = sub_1001F4130;
  v2[9] = sub_1001F4270;
  return result;
}

uint64_t sub_1001F54A0(int a1)
{
  uint64_t v1 = qword_100A05380;
  if (!qword_100A05380) {
    return 404;
  }
  uint64_t v2 = qword_100A05380;
  while (*(unsigned __int16 *)(v2 + 24) != a1)
  {
    uint64_t v2 = *(void *)(v2 + 80);
    if (v2 == qword_100A05380 || v2 == 0) {
      return 404;
    }
  }
  *(unsigned char *)(v2 + 27) = 10;
  if (v1 == v2) {
    return 0;
  }
  uint64_t v5 = *(void *)(v2 + 80);
  if (v2 == v5) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v6 = *(void *)(v2 + 88);
  *(void *)(v6 + 80) = v5;
  *(void *)(*(void *)(v2 + 80) + 88) = v6;
  uint64_t v7 = *(void *)(v1 + 88);
  *(void *)(v2 + 80) = v1;
  *(void *)(v2 + 88) = v7;
  *(void *)(*(void *)(v1 + 88) + 80) = v2;
  *(void *)(v1 + 88) = v2;
  qword_100A05380 = v2;
  return result;
}

uint64_t sub_1001F5528(int a1, unsigned int a2, unsigned int a3)
{
  if (!qword_100A05380) {
    return 404;
  }
  char v4 = a2;
  uint64_t v5 = qword_100A05380;
  while (*(unsigned __int16 *)(v5 + 24) != a1)
  {
    uint64_t v5 = *(void *)(v5 + 80);
    if (v5 == qword_100A05380 || v5 == 0) {
      return 404;
    }
  }
  if (a2 >= 0x14)
  {
    sub_10025B8C0();
    if (sub_100058654())
    {
      char v4 = 19;
      sub_100056E24((uint64_t)"Scaling down requested priority to %d", v8, v9, v10, v11, v12, v13, v14, 19);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      sub_100745764();
    }
    char v4 = 19;
    goto LABEL_17;
  }
  if (a2 != 12)
  {
LABEL_17:
    sub_100117B0C((_opaque_pthread_t *)qword_100A053A8, 0, 0, 0, 1);
    goto LABEL_18;
  }
  sub_100117B0C((_opaque_pthread_t *)qword_100A053A8, 0, 0, 0, 0);
  char v4 = 12;
LABEL_18:
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 48) = sub_10010BA04();
  *(unsigned char *)(v5 + 27) = v4;
  uint64_t v16 = qword_100A05380;
  if (qword_100A05380 == v5) {
    return 0;
  }
  uint64_t v17 = *(void *)(v5 + 80);
  if (v5 == v17) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v18 = *(void *)(v5 + 88);
  *(void *)(v18 + 80) = v17;
  *(void *)(*(void *)(v5 + 80) + 88) = v18;
  uint64_t v19 = *(void *)(v16 + 88);
  *(void *)(v5 + 80) = v16;
  *(void *)(v5 + 88) = v19;
  *(void *)(*(void *)(v16 + 88) + 80) = v5;
  *(void *)(v16 + 88) = v5;
  qword_100A05380 = v5;
  return result;
}

uint64_t sub_1001F5694(int a1)
{
  if (!qword_100A05380) {
    return 404;
  }
  uint64_t v1 = qword_100A05380;
  while (*(unsigned __int16 *)(v1 + 24) != a1)
  {
    uint64_t v1 = *(void *)(v1 + 80);
    if (v1 == qword_100A05380 || v1 == 0) {
      return 404;
    }
  }
  uint64_t v4 = sub_10010BA04();
  uint64_t result = 0;
  *(void *)(v1 + 48) = v4;
  return result;
}

uint64_t sub_1001F56F4()
{
  return j__pthread_cond_signal(&stru_100A053B0);
}

uint64_t sub_1001F5700()
{
  if (byte_100A053A0 == 1) {
    sub_10025B8C0();
  }
  if (byte_100A05388) {
    sub_10025B8C0();
  }
  if (qword_100A05380) {
    sub_10025B8C0();
  }
  byte_100A053A0 = 1;
  sub_100117BD4(&stru_100A053B0);
  sub_100117BD4(&stru_100A053E0);
  dword_100A053A4 = 0;
  qword_100A05390 = (uint64_t)sub_10025959C(0, (uint64_t)sub_1001F2DB8);
  qword_100A05398 = (uint64_t)sub_10025959C(0, (uint64_t)sub_1001F2DB8);
  sub_1001F3B3C(1u, 48, 0xAu, 0, 0, 0xFFFFFFFF);
  sub_1001F3B3C(2u, 5, 1u, 0, 0, 0xFFFFFFFF);
  if (!sub_100117A38((pthread_t *)&qword_100A053A8, (void *(__cdecl *)(void *))sub_1001F5830, 0)) {
    return 511;
  }
  sub_100117AD8((_opaque_pthread_t *)qword_100A053A8, 63);
  uint64_t result = 0;
  byte_100A05410 = 1;
  return result;
}

uint64_t sub_1001F5830()
{
  if (byte_100A053A0 == 1)
  {
    do
    {
      sub_1001F359C();
      sub_1001035E0(&stru_100A053B0);
    }
    while ((byte_100A053A0 & 1) != 0);
  }
  sub_1000232E0();
  byte_100A05410 = 0;
  j__pthread_cond_signal(&stru_100A053E0);
  return 0;
}

BOOL sub_1001F58A4()
{
  if ((byte_100A053A0 & 1) == 0) {
    sub_10025B8C0();
  }
  if (!qword_100A05380) {
    sub_10025B8C0();
  }
  if (byte_100A05388 <= 1u) {
    sub_10025B8C0();
  }
  sub_1001F42C8((void *)1);
  sub_1001F42C8((void *)2);
  sub_1002595D8((void *)qword_100A05390);
  qword_100A05390 = 0;
  sub_1002595D8((void *)qword_100A05398);
  qword_100A05398 = 0;
  byte_100A05388 = 0;
  qword_100A05380 = 0;
  byte_100A053A0 = 0;
  dword_100A053A4 = 0;
  j__pthread_cond_signal(&stru_100A053B0);
  do
    sub_1001035E0(&stru_100A053E0);
  while ((byte_100A05410 & 1) != 0);
  sub_100117BFC(&stru_100A053B0);

  return sub_100117BFC(&stru_100A053E0);
}

uint64_t sub_1001F598C(uint64_t a1)
{
  return sub_1001DE094(**(unsigned __int16 **)(a1 + 8));
}

void sub_1001F5998(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int16 *)(a1 + 36);
  unsigned int v35 = 0;
  uint64_t v36 = 0;
  __int16 v37 = 0;
  __int16 v34 = 0;
  if (!sub_1001DD56C(v2, (uint64_t *)&v35) && (*v35 != 4 ? (BOOL v11 = *v35 == 2) : (BOOL v11 = 1), v11))
  {
    if (!*(void *)(a1 + 24))
    {
      WORD1(v36) = *(_WORD *)(sub_1001E6484(v35) + 8);
      if (*(unsigned char *)a1)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Why are we trying to add a header to a S-Frame ???", v12, v13, v14, v15, v16, v17, v18, v33);
          uint64_t v19 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        __int16 v20 = sub_1001F243C(v35, (_WORD *)&v36 + 2, *(unsigned __int8 *)(a1 + 33), *(_WORD *)(a1 + 38));
        unsigned __int16 v21 = v20 + 4;
        if (*(unsigned char *)(a1 + 33) == 1)
        {
          *(_WORD *)((char *)&v36 + (unsigned __int16)(v20 + 4)) = *(_WORD *)(a1 + 34);
          unsigned __int16 v21 = v20 + 6;
        }
        __int16 v22 = *(_WORD *)(*(void *)(a1 + 40) + 4) + v21 - 4;
        LOBYTE(v36) = v22 + 2 * (*(unsigned char *)(sub_1001E6484(v35) + 78) != 0);
        BYTE1(v36) = (unsigned __int16)(v22 + 2 * (*(unsigned char *)(sub_1001E6484(v35) + 78) != 0)) >> 8;
        uint64_t v23 = (unsigned __int8 *)sub_10025C1E0(7u);
        *(void *)(a1 + 24) = v23;
        if (v23)
        {
          sub_100022798(v23, (char *)&v36, v21, 0);
          if (!*(unsigned char *)a1) {
            sub_10025C92C(*(unsigned __int8 **)(a1 + 24), *(void *)(a1 + 40));
          }
          if (*(unsigned char *)(sub_1001E6484(v35) + 78))
          {
            sub_1001F13E8(*(void *)(a1 + 24), &v34);
            sub_100022798(*(unsigned __int8 **)(a1 + 24), (char *)&v34, 2uLL, 0);
          }
          unsigned int v24 = *(unsigned __int16 *)(*(void *)(a1 + 24) + 4);
          if (v24 > *(unsigned __int16 *)(sub_1001E6484(v35) + 72)) {
            sub_10025B8C0();
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to allocate a MBUF for flow control.", v25, v26, v27, v28, v29, v30, v31, v33);
          uint64_t v32 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
            goto LABEL_4;
          }
        }
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to get channel for CID 0x%x", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
LABEL_4:
    }
      sub_100744F6C();
  }
}

uint64_t sub_1001F5C24(uint64_t a1)
{
  uint64_t v1 = a1;
  if (qword_100A05390 != a1 && qword_100A05398 != a1)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      if (sub_100059E10(*(void *)(a1 + 8)))
      {
        a1 = *(void *)(v1 + 8);
        goto LABEL_6;
      }
      if (!sub_100059E10(*(void *)v1))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to dequeue packet, there is no SFrames or IFrames queued.", v9, v10, v11, v12, v13, v14, v15, (uint64_t)v17[0]);
          uint64_t v16 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        sub_10025B8C0();
        return 0;
      }
      int v8 = *(_DWORD *)(v1 + 20);
      if (v8) {
        *(_DWORD *)(v1 + 20) = v8 - 1;
      }
      uint64_t v7 = sub_1002598B4(*(void *)v1, 0);
      if (sub_100059E10(*(void *)v1) - *(_DWORD *)(v1 + 20) != *(unsigned __int8 *)(v1 + 26) - 1) {
        return v7;
      }
    }
    else
    {
      if (!sub_100059E10(*(void *)a1)) {
        sub_10025B8C0();
      }
      BOOL v3 = sub_1001F1564(*(unsigned __int16 *)(v1 + 24));
      unsigned int v4 = sub_100059E10(*(void *)v1);
      unsigned int v5 = *(unsigned __int8 *)(v1 + 26);
      if (v3)
      {
        int v6 = v5 - sub_1001F33D8(*(unsigned __int16 *)(v1 + 24));
        uint64_t v7 = sub_1002598B4(*(void *)v1, 0);
        if (v4 != v6) {
          return v7;
        }
      }
      else
      {
        uint64_t v7 = sub_1002598B4(*(void *)v1, 0);
        if (v4 < v5) {
          return v7;
        }
      }
    }
    v17[0] = (const void *)2;
    v17[1] = (const void *)(v1 + 24);
    sub_1000268E4((uint64_t)sub_1001F598C, v17, 0, 0);
    return v7;
  }
LABEL_6:

  return sub_1002598B4(a1, 0);
}

uint64_t sub_1001F5DF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a1;
  if (!(*(unsigned int (**)(void))(a1 + 64))()) {
    return 0;
  }
  if (sub_1001F6150(a2))
  {
    if (qword_100A05380)
    {
      unsigned int v8 = *(unsigned __int16 *)(*(void *)a2 + 36);
      uint64_t v9 = qword_100A05380;
      while (*(unsigned __int16 *)(v9 + 24) != v8)
      {
        uint64_t v9 = *(void *)(v9 + 80);
        if (v9 == qword_100A05380 || v9 == 0) {
          goto LABEL_11;
        }
      }
      if (!*(unsigned char *)(v9 + 16) || (sub_1001F15BC(v8) & 1) != 0)
      {
        uint64_t v39 = &qword_100A05390;
        goto LABEL_72;
      }
      return 0;
    }
LABEL_11:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Fragmented packet with cid 0x%4x available, but no queue with corresponding CID exists", v11, v12, v13, v14, v15, v16, v17, *(unsigned __int16 *)(*(void *)a2 + 36));
      uint64_t v18 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    goto LABEL_55;
  }
  uint64_t v19 = sub_1002599CC(qword_100A05398);
  uint64_t v20 = v19;
  uint64_t v42 = v19;
  if (!a2)
  {
    sub_10025B8C0();
    if (v20) {
      goto LABEL_18;
    }
LABEL_40:
    if (*(unsigned char *)(v7 + 16))
    {
      if (!sub_100059E10(*(void *)(v7 + 8)))
      {
        if (!sub_1001F15BC(*(unsigned __int16 *)(v7 + 24))) {
          return 0;
        }
        unsigned int v40 = (unsigned char *)sub_10025989C(*(void *)v7);
        *(void *)a2 = v40;
        if (!*v40) {
          sub_1001F5998((uint64_t)v40);
        }
LABEL_63:
        if (qword_100A05390 != v7 && qword_100A05398 != v7) {
          goto LABEL_79;
        }
        return v7;
      }
      uint64_t v27 = *(void *)(v7 + 8);
    }
    else
    {
      uint64_t v27 = *(void *)v7;
    }
    *(void *)a2 = sub_10025989C(v27);
    goto LABEL_63;
  }
  if (!v19) {
    goto LABEL_40;
  }
  while (1)
  {
LABEL_18:
    uint64_t v21 = sub_1002599F0(v20);
    uint64_t v22 = *(void *)(v21 + 8);
    if (*(void *)a2 && v22 != *(void *)(*(void *)a2 + 8)) {
      goto LABEL_39;
    }
    if (!sub_100197698(v22)
      && !sub_100197740(*(void *)(v21 + 8))
      && !sub_100197770(*(void *)(v21 + 8))
      && !sub_1001977A0(*(void *)(v21 + 8)))
    {
      break;
    }
    int v23 = *(unsigned __int8 *)(*(void *)(v21 + 8) + 2);
    if (*(unsigned char *)(*(void *)(v21 + 8) + 2)) {
      BOOL v24 = 1;
    }
    else {
      BOOL v24 = byte_100A19739 == 0;
    }
    if (!v24
      || (v23 == 4 ? (BOOL v25 = byte_100A1973A == 0) : (BOOL v25 = 1),
          !v25 || (v23 == 8 ? (BOOL v26 = byte_100A19738 == 0) : (BOOL v26 = 1), !v26)))
    {
      *(void *)a2 = v21;
      sub_1002599F8(qword_100A05398, v42);
      uint64_t v21 = *(void *)a2;
      goto LABEL_44;
    }
LABEL_39:
    sub_1002599D4((uint64_t)&v42);
    uint64_t v20 = v42;
    if (!v42) {
      goto LABEL_40;
    }
  }
  *(void *)a2 = v21;
LABEL_44:
  if (!qword_100A05380)
  {
LABEL_52:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unstallable packet with cid 0x%4x available, but no queue with corresponding CID exists", v30, v31, v32, v33, v34, v35, v36, *(unsigned __int16 *)(*(void *)a2 + 36));
      __int16 v37 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
LABEL_55:
    sub_10025B8C0();
    return 0;
  }
  unsigned int v28 = *(unsigned __int16 *)(v21 + 36);
  uint64_t v9 = qword_100A05380;
  while (*(unsigned __int16 *)(v9 + 24) != v28)
  {
    uint64_t v9 = *(void *)(v9 + 80);
    if (v9 == qword_100A05380 || v9 == 0) {
      goto LABEL_52;
    }
  }
  if (*(unsigned char *)(v9 + 16) && (sub_1001F15BC(v28) & 1) == 0) {
    return 0;
  }
  uint64_t v39 = &qword_100A05398;
LABEL_72:
  uint64_t v7 = *v39;
  if (*v39)
  {
    if (v7 == qword_100A05390 || v7 == qword_100A05398)
    {
      *a4 = a3 - *(void *)(v9 + 48);
      *(void *)(v9 + 48) = a3;
    }
    else
    {
LABEL_79:
      *a4 = a3 - *(void *)(v7 + 48);
      *(void *)(v7 + 48) = a3;
    }
  }
  return v7;
}

uint64_t sub_1001F6150(uint64_t a1)
{
  uint64_t v2 = sub_1002599CC(qword_100A05390);
  uint64_t v3 = v2;
  uint64_t v11 = v2;
  if (!a1)
  {
    sub_10025B8C0();
    if (v3) {
      goto LABEL_5;
    }
    return 0;
  }
  if (!v2) {
    return 0;
  }
  while (1)
  {
LABEL_5:
    uint64_t v4 = sub_1002599F0(v3);
    uint64_t v5 = *(void *)(v4 + 8);
    if (*(void *)a1 && v5 != *(void *)(*(void *)a1 + 8)) {
      goto LABEL_26;
    }
    if (!sub_100197698(v5)
      && !sub_100197740(*(void *)(v4 + 8))
      && !sub_100197770(*(void *)(v4 + 8))
      && !sub_1001977A0(*(void *)(v4 + 8)))
    {
      break;
    }
    int v6 = *(unsigned __int8 *)(*(void *)(v4 + 8) + 2);
    if (*(unsigned char *)(*(void *)(v4 + 8) + 2)) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = byte_100A19739 == 0;
    }
    if (!v7
      || (v6 == 4 ? (BOOL v8 = byte_100A1973A == 0) : (BOOL v8 = 1), !v8 || (v6 == 8 ? (v9 = byte_100A19738 == 0) : (v9 = 1), !v9)))
    {
      *(void *)a1 = v4;
      sub_1002599F8(qword_100A05390, v11);
      return 1;
    }
LABEL_26:
    sub_1002599D4((uint64_t)&v11);
    uint64_t v3 = v11;
    if (!v11) {
      return 0;
    }
  }
  *(void *)a1 = v4;
  return 1;
}

BOOL sub_1001F6284(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 2) == 4)
  {
    unsigned int v8 = sub_10019E490();
    int v9 = sub_100198E60();
    unsigned int v11 = sub_10019F7AC(2);
    if (*(unsigned char *)(a1 + 129)) {
      return 1;
    }
    unsigned int v10 = v11;
  }
  else
  {
    if (*(unsigned char *)(a1 + 2))
    {
      sub_10025B8C0();
      return 0;
    }
    BOOL v4 = sub_10019F7C0();
    int v5 = sub_10019F7D4();
    if (v5) {
      int v6 = 2;
    }
    else {
      int v6 = 1;
    }
    if (v4) {
      int v7 = v6;
    }
    else {
      int v7 = v5;
    }
    unsigned int v8 = sub_10019E404() - v7;
    int v9 = sub_100198D88();
    unsigned int v10 = sub_10019F7AC(0) - v7;
  }
  int v26 = 0;
  if (!v9)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"connectionHandle %x and NumOfConnections %d", v18, v19, v20, v21, v22, v23, v24, a1);
      BOOL v25 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 1;
  }
  int v12 = sub_1001DE89C(a1, &v26);
  if (v9 + 2 * v26 <= v8) {
    int v13 = 2;
  }
  else {
    int v13 = v26 + v9 <= v8;
  }
  int v14 = v8 - v9 + (v12 - v26) * v13;
  unsigned int v15 = v14 + 1;
  if (v10 >= v14 + 1) {
    unsigned int v16 = v14 + 1;
  }
  else {
    unsigned int v16 = v10;
  }
  if (v15 <= *(unsigned __int16 *)(a1 + 16)) {
    return 0;
  }
  if (a2 <= 0xA) {
    return !*(_WORD *)(a1 + 16) || v16 > v13 * v12;
  }
  return v16 != 0;
}

uint64_t sub_1001F6400()
{
  return sub_1002341F8(off_10099F058);
}

uint64_t sub_1001F640C()
{
  qword_100A05418 = 0;
  *(void *)&word_100A05420 = 0;
  sub_100182488(sub_1001F6B4C);
  sub_100253728((uint64_t (*)(void, void, void))sub_1001F6A84);
  sub_10025CE14((uint64_t)sub_1001F6BDC);
  sub_10023413C((__n128 *)off_10099F058);

  return sub_10018EEAC(&off_10099F070, 0);
}

uint64_t sub_1001F6490(uint64_t a1)
{
  uint64_t v2 = sub_100022FE8(0x18uLL);
  if (!v2) {
    return 104;
  }
  uint64_t v3 = v2;
  v2[6] = 48;
  BOOL v4 = sub_100022FE8(0x30uLL);
  *(void *)uint64_t v3 = v4;
  if (!v4)
  {
    sub_100023010(v3);
    return 104;
  }
  v3[7] = 0;
  int v5 = *(unsigned __int8 *)(a1 + 2);
  if (v5 == 8)
  {
    uint64_t result = 0;
    *(void *)(a1 + 64) = v3;
  }
  else if (v5 == 4)
  {
    *(void *)(a1 + 192) = v3;
    int v7 = sub_10025959C(0, 0);
    uint64_t result = 0;
    *(void *)(a1 + 224) = v7;
  }
  else
  {
    uint64_t result = 0;
    if (!*(unsigned char *)(a1 + 2))
    {
      uint64_t result = 0;
      *(void *)(a1 + 160) = v3;
    }
  }
  return result;
}

void sub_1001F653C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 2);
  if (v2 == 8)
  {
    int v5 = (uint64_t *)(a1 + 64);
    int v7 = *(void ***)(a1 + 64);
    if (!v7) {
      return;
    }
    sub_100023010(*v7);
    goto LABEL_11;
  }
  if (v2 == 4)
  {
    unsigned int v8 = *(void ***)(a1 + 192);
    if (v8)
    {
      sub_100023010(*v8);
      sub_100023010(*(void **)(a1 + 192));
      *(void *)(a1 + 192) = 0;
    }
    uint64_t v10 = *(void *)(a1 + 224);
    int v5 = (uint64_t *)(a1 + 224);
    uint64_t v9 = v10;
    if (v10)
    {
      uint64_t v11 = sub_1002598B4(v9, 0);
      if (v11)
      {
        int v12 = (unsigned __int16 *)v11;
        do
        {
          int v14 = 0;
          if (!sub_1001DD56C(*v12, (uint64_t *)&v14) && *(void *)(sub_1001E6484(v14) + 96))
          {
            uint64_t v13 = sub_1001E6484(v14);
            (*(void (**)(void, void, void, uint64_t))(v13 + 96))(*((unsigned __int16 *)v14 + 2), 0, 0, 414);
          }
          sub_100023010(v12);
          int v12 = (unsigned __int16 *)sub_1002598B4(*v5, 0);
        }
        while (v12);
      }
      sub_1002595D8((void *)*v5);
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(a1 + 2))
  {
    uint64_t v3 = *(void ***)(a1 + 160);
    if (v3)
    {
      sub_100023010(*v3);
      sub_100023010(*(void **)(a1 + 160));
      *(void *)(a1 + 160) = 0;
    }
    int v6 = *(void ***)(a1 + 168);
    int v5 = (uint64_t *)(a1 + 168);
    BOOL v4 = v6;
    if (v6)
    {
      if (!*v4)
      {
LABEL_12:
        sub_100023010(v4);
LABEL_23:
        *int v5 = 0;
        return;
      }
      sub_100023010(*v4);
      *(void *)*int v5 = 0;
LABEL_11:
      BOOL v4 = (void **)*v5;
      goto LABEL_12;
    }
  }
}

uint64_t sub_1001F667C(uint64_t a1)
{
  if (!sub_100197698(a1) && !sub_100197770(a1))
  {
    uint64_t result = sub_1001977A0(a1);
    if (!result) {
      return result;
    }
  }
  unsigned int v3 = sub_1001DDD30(a1, 1);
  if (v3 <= 0x2F) {
    sub_10025B8C0();
  }
  int v4 = *(unsigned __int8 *)(a1 + 2);
  if (v4 == 8)
  {
    int v5 = (uint64_t *)(a1 + 64);
    goto LABEL_12;
  }
  if (v4 == 4)
  {
    int v5 = (uint64_t *)(a1 + 192);
LABEL_12:
    uint64_t v6 = *v5;
    if (*v5) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (!*(unsigned char *)(a1 + 2))
  {
    int v5 = (uint64_t *)(a1 + 160);
    goto LABEL_12;
  }
LABEL_13:
  sub_10025B8C0();
  uint64_t v6 = 0;
LABEL_14:
  if (v3 == *(unsigned __int16 *)(v6 + 12)) {
    return 0;
  }
  int v7 = *(void **)v6;
  if (!*(_WORD *)(v6 + 14))
  {
    sub_100023010(*(void **)v6);
    uint64_t v18 = sub_100022FE8(v3);
    *(void *)uint64_t v6 = v18;
    if (v18)
    {
LABEL_35:
      uint64_t result = 0;
      *(_WORD *)(v6 + 12) = v3;
      return result;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not allocate new reassembly buffer", v19, v20, v21, v22, v23, v24, v25, v38);
      int v26 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v27 = sub_100022FE8(*(unsigned __int16 *)(v6 + 12));
    *(void *)uint64_t v6 = v27;
    if (!v27) {
      sub_10025B8C0();
    }
    return 106;
  }
  unsigned int v8 = sub_100022FE8(v3);
  *(void *)uint64_t v6 = v8;
  if (v8)
  {
    size_t v9 = *(unsigned __int16 *)(v6 + 14);
    if (v9 <= v3)
    {
      memmove(v8, v7, v9);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"The new MTU is smaller than the current data size we have in the buffer ... dropping the current data (curRecvCount == %d, newBufsize=%d)", v10, v11, v12, v13, v14, v15, v16, *(unsigned __int16 *)(v6 + 14));
        uint64_t v17 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      *(_WORD *)(v6 + 14) = 0;
      *(unsigned char *)(v6 + 16) = 0;
    }
    sub_100023010(v7);
    goto LABEL_35;
  }
  *(void *)uint64_t v6 = v7;
  unsigned int v28 = *(unsigned __int16 *)(v6 + 12);
  uint64_t result = sub_100058654();
  if (v3 >= v28)
  {
    if (result)
    {
      sub_100056E24((uint64_t)"No resources for larger reassembly buffer", v29, v30, v31, v32, v33, v34, v35, v38);
      __int16 v37 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 106;
  }
  if (result)
  {
    sub_100056E24((uint64_t)"Could not allocate new reassembly buffer - continuing with existing buffer", v29, v30, v31, v32, v33, v34, v35, v38);
    uint64_t v36 = sub_100050B4C(0x2Fu);
    uint64_t result = os_log_type_enabled(v36, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001F68CC(uint64_t a1, unsigned char *a2, int a3, __int16 a4)
{
  if (!a3)
  {
    if (sub_100197698((uint64_t)a2) || sub_100197770((uint64_t)a2) || sub_1001977A0((uint64_t)a2))
    {
      if (sub_100197698((uint64_t)a2) && (a2[152] == 255 || (a2[54] & 0xFE) == 6))
      {
        if (!sub_100058654()) {
          return 414;
        }
        sub_100056E24((uint64_t)"Link going down", v9, v10, v11, v12, v13, v14, v15, v33);
        uint64_t v16 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          return 414;
        }
      }
      else
      {
        if (sub_100197770((uint64_t)a2) && (a2[124] & 0xFE) == 6) {
          return 414;
        }
        if (!sub_1001977A0((uint64_t)a2) || (a2[60] & 0xFE) != 6) {
          goto LABEL_2;
        }
        if (!sub_100058654()) {
          return 414;
        }
        sub_100056E24((uint64_t)"Invalid handle", v17, v18, v19, v20, v21, v22, v23, v33);
        uint64_t v24 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          return 414;
        }
      }
    }
    else
    {
      if (!sub_100058654()) {
        return 414;
      }
      sub_100056E24((uint64_t)"Invalid handle", v25, v26, v27, v28, v29, v30, v31, v33);
      uint64_t v32 = sub_100050B4C(0x2Fu);
      if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        return 414;
      }
    }
    sub_100744F6C();
    return 414;
  }
LABEL_2:
  *(void *)(a1 + 8) = a2;
  *(_WORD *)(a1 + 20) = a4;
  *(_DWORD *)(a1 + 16) = a3;

  return sub_1001F4AFC(a1);
}

void sub_1001F6A7C(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_1001F6A84(uint64_t a1, uint64_t a2, int a3)
{
  if (*(unsigned char *)(a2 + 2) == 4)
  {
    sub_100199198(a2);
    sub_1001F356C(1);
  }
  else if (*(unsigned char *)(a2 + 2))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid connection type.", v5, v6, v7, v8, v9, v10, v11, v13);
      uint64_t v12 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    char v4 = a3;
    if (a3)
    {
      if (!*(unsigned char *)(a2 + 153))
      {
        sub_100199198(a2);
        sub_1001F356C(1);
      }
    }
    *(unsigned char *)(a2 + 153) = v4;
  }
}

void sub_1001F6B4C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 2))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received mode change for non ACL connection handle.", v2, v3, v4, v5, v6, v7, v8, v10);
      uint64_t v9 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    sub_100199198(a2);
    sub_1001F356C(3);
  }
}

void sub_1001F6BDC(uint64_t a1)
{
  sub_100199198(a1);

  sub_1001F356C(2);
}

unsigned char *sub_1001F6C0C(unsigned char *result)
{
  if (!result[2])
  {
    uint64_t v1 = (uint64_t)result;
    result[192] = 1;
    if (result[152] == 2)
    {
      if (result[256])
      {
        uint64_t v9 = 0;
        sub_100026C30((uint64_t)&v9);
        uint64_t result = (unsigned char *)sub_1002629B8((int *)(v1 + 204), (int *)&v9);
        if (result <= (5 * *(unsigned __int16 *)(v1 + 136)) >> 3)
        {
          uint64_t result = (unsigned char *)sub_10019304C(0x2Au, v2, v3, v4, v5, v6, v7, v8, v1);
          if (!result) {
            *(unsigned char *)(v1 + 152) |= 0x80u;
          }
        }
        *(void *)(v1 + 204) = v9;
      }
    }
  }
  return result;
}

void sub_1001F6CA8(unsigned __int16 *a1, unsigned int a2, int a3, uint64_t a4, size_t a5, uint64_t a6, uint64_t a7)
{
  if (*(unsigned char *)(a7 + 8))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"HciEvent_AclDataPacketReceived: wakeupCause ACL Packet from BT Controller (handle=0x%04x pbf=%d bf=%d dataLen=%d)\n", v13, v14, v15, v16, v17, v18, v19, *a1);
      uint64_t v20 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v51 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  if (*((unsigned char *)a1 + 2))
  {
    if (a5) {
      goto LABEL_7;
    }
LABEL_15:
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"SAR, HciEvent_AclDataPacketReceived received zero-length packet, ignoring", v22, v23, v24, v25, v26, v27, v28, v49);
    uint64_t v29 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_26:
    sub_100744F6C();
    return;
  }
  if (!*((_DWORD *)a1 + 37)) {
    sub_10017BB4C((uint64_t)a1);
  }
  *((unsigned char *)a1 + 192) = 1;
  if (!a5) {
    goto LABEL_15;
  }
LABEL_7:
  if (a3 == 4 && *(_WORD *)(a4 + 2) != 2)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"SAR, HciEvent_AclDataPacketReceived received APB for wrong CID=%d, ignoring", v30, v31, v32, v33, v34, v35, v36, *(unsigned __int16 *)(a4 + 2));
    __int16 v37 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_26;
  }
  int v21 = *(unsigned __int8 *)(a7 + 8);
  switch(a2)
  {
    case 0u:
    case 2u:
      if (!a3 && *((unsigned char *)a1 + 25))
      {
        BOOL v46 = v21 != 0;
        uint64_t v47 = (uint64_t)a1;
        unsigned int v48 = a2;
        goto LABEL_31;
      }
      sub_1001F71BC((char *)a4, a5, (uint64_t)a1, a3, v21 != 0, a7);
      break;
    case 1u:
      if (a3 || !*((unsigned char *)a1 + 25))
      {
        sub_1001F74D4((char *)a4, a5, (uint64_t)a1, a3, v21 != 0, a7);
      }
      else
      {
        BOOL v46 = v21 != 0;
        uint64_t v47 = (uint64_t)a1;
        unsigned int v48 = 1;
LABEL_31:
        sub_1001F706C(v47, v48, (char *)a4, a5, v46, a7);
      }
      break;
    case 3u:
      sub_1001E56F8((uint64_t)a1, 0x2Bu, a4, a5, v21 != 0);
      break;
    default:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid packet boundary flag - dropping packet", v38, v39, v40, v41, v42, v43, v44, v49);
        int v45 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
          goto LABEL_26;
        }
      }
      break;
  }
}

uint64_t sub_1001F6FA4(uint64_t a1)
{
  uint64_t v2 = sub_1001DD44C();
  uint64_t result = sub_10025B218(0x2Fu);
  if (*(_WORD *)(result + 2))
  {
    unint64_t v4 = 0;
    do
    {
      BOOL v5 = *(_DWORD *)v2 == 4 || *(_DWORD *)v2 == 2;
      if (v5
        && *(void *)sub_1001E6484((unsigned int *)v2) == a1
        && *(unsigned char *)(sub_1001E6484((unsigned int *)v2) + 16) == 4
        && sub_1001DD610((unsigned int *)v2))
      {
        sub_1001F2680(*(unsigned __int16 *)(v2 + 4));
        ++*(_DWORD *)(v2 + 88);
        uint64_t v6 = *(void (**)(void))(v2 + 136);
        if (v6) {
          v6(*(unsigned __int16 *)(v2 + 4));
        }
      }
      ++v4;
      uint64_t result = sub_10025B218(0x2Fu);
      v2 += 144;
    }
    while (v4 < *(unsigned __int16 *)(result + 2));
  }
  return result;
}

void sub_1001F706C(uint64_t a1, unsigned int a2, char *a3, unsigned int a4, int a5, uint64_t a6)
{
  unsigned __int16 v12 = 0;
  __int16 v13 = 0;
  unsigned __int16 v14 = a4;
  while (1)
  {
    int v15 = *(unsigned __int16 *)(a1 + 28);
    *(_WORD *)(a1 + 28) = 0;
    if (!v15) {
      LOWORD(v15) = *(_WORD *)a3 + 4;
    }
    if (a2 >= 3) {
      break;
    }
    if ((unsigned __int16)v15 >= v14) {
      size_t v16 = v14;
    }
    else {
      size_t v16 = (unsigned __int16)v15;
    }
    if (a2 != 1 || v13) {
      sub_1001F71BC(a3, v16, a1, 0, a5, a6);
    }
    else {
      sub_1001F74D4(a3, v16, a1, 0, a5, a6);
    }
    v12 += v16;
    unsigned __int16 v14 = a4 - v12;
    if (a4 < v12) {
      unsigned __int16 v14 = 0;
    }
    if (v12 == a4) {
      return;
    }
    if (v12 > a4)
    {
      *(_WORD *)(a1 + 28) = v12 - a4;
      return;
    }
    a3 += v16;
    ++v13;
  }
  sub_10025B8C0();
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"L2CAPAGG RX: This should never happen, Invalid packet boundary flag for aggregated packets - dropping packet", v17, v18, v19, v20, v21, v22, v23, v31);
    uint64_t v24 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v25 = (char *)sub_10010B394(411);
  sub_1001F71BC(v25, v26, v27, v28, v29, v30);
}

void sub_1001F71BC(char *__src, size_t __len, uint64_t a3, int a4, char a5, uint64_t a6)
{
  unsigned int v10 = __len;
  int v12 = *(unsigned __int8 *)(a3 + 2);
  if (!a4)
  {
    if (v12 == 8)
    {
      uint64_t v21 = (void *)(a3 + 64);
    }
    else if (v12 == 4)
    {
      uint64_t v21 = (void *)(a3 + 192);
    }
    else
    {
      if (*(unsigned char *)(a3 + 2))
      {
LABEL_17:
        sub_10025B8C0();
        uint64_t v22 = 0;
        goto LABEL_18;
      }
      uint64_t v21 = (void *)(a3 + 160);
    }
    uint64_t v22 = (_WORD *)*v21;
    if (*v21) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (!*(unsigned char *)(a3 + 2))
  {
    uint64_t v22 = *(_WORD **)(a3 + 168);
    if (!v22)
    {
      if (!sub_100197698(a3)) {
        return;
      }
      uint64_t v23 = sub_10010CE48(0x18uLL);
      *(void *)(a3 + 168) = v23;
      if (!v23) {
        return;
      }
      uint64_t v22 = v23;
      v23[6] = *(_WORD *)(sub_10025B218(0x2Fu) + 4);
      *(void *)(a3 + 168) = v22;
    }
LABEL_18:
    size_t v24 = (unsigned __int16)v22[6];
    if (v22[7])
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"SAR: Rcvd FIRST packet, previous packet incomplete.  Discarding previous packet.", v25, v26, v27, v28, v29, v30, v31, v60);
        uint64_t v32 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      v22[7] = 0;
      *((unsigned char *)v22 + 16) = 0;
    }
    if (v10 <= 3)
    {
      memmove(v22 + 4, __src, v10);
      v22[7] += v10;
      return;
    }
    int v34 = *(_DWORD *)__src;
    uint64_t v33 = __src + 4;
    *((_DWORD *)v22 + 2) = v34;
    *((unsigned char *)v22 + 16) = a5;
    uint64_t v35 = (unsigned __int16)v34;
    unsigned int v36 = (unsigned __int16)(v10 - 4);
    if ((unsigned __int16)v34 < v36)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Packet size of %d exceeds the payload length %d", v37, v38, v39, v40, v41, v42, v43, (unsigned __int16)(v10 - 4));
        uint64_t v44 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
          goto LABEL_32;
        }
      }
      return;
    }
    if (v35 > v24)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Recv_FirstPacket, length in L2CAP header %d exceeds buffer size %d", v45, v46, v47, v48, v49, v50, v51, v35);
        int v52 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
          goto LABEL_32;
        }
      }
      return;
    }
    unsigned int v53 = (unsigned __int16)v22[5];
    uint64_t v62 = 0;
    unsigned int v61 = v53;
    if (sub_1001DD56C(v53, &v62))
    {
      if (v35 == v36) {
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v59 = *(unsigned __int16 **)(v62 + 48);
      if (v35 == v36)
      {
        if (v59)
        {
          memmove(*(void **)(v62 + 48), v33, (unsigned __int16)(v10 - 4));
          BOOL v54 = *((unsigned char *)v22 + 16) != 0;
          __int16 v55 = (unsigned char *)a3;
          uint64_t v56 = v61;
          uint64_t v57 = v59;
          size_t v58 = (unsigned __int16)(v10 - 4);
          goto LABEL_39;
        }
LABEL_35:
        BOOL v54 = *((unsigned char *)v22 + 16) != 0;
        __int16 v55 = (unsigned char *)a3;
        uint64_t v56 = v61;
        uint64_t v57 = (unsigned __int16 *)v33;
        size_t v58 = v35;
LABEL_39:
        sub_1001F78D4(v55, v56, v57, v58, v54, a6);
        return;
      }
      if (v59)
      {
LABEL_45:
        memmove(v59, v33, (unsigned __int16)(v10 - 4));
        v22[7] = v10;
        return;
      }
    }
    uint64_t v59 = *(unsigned __int16 **)v22;
    if (!*(void *)v22)
    {
      if (!a4) {
        sub_10025B8C0();
      }
      uint64_t v59 = (unsigned __int16 *)sub_100022FE8(v24);
      *(void *)uint64_t v22 = v59;
      if (!v59) {
        return;
      }
    }
    goto LABEL_45;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Broadcast packet on non-ACL handle 0x%x. Bailing.", v13, v14, v15, v16, v17, v18, v19, a3);
    uint64_t v20 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_32:
    }
      sub_100744F6C();
  }
}

void sub_1001F74D4(char *__src, uint64_t __len, uint64_t a3, int a4, int a5, uint64_t a6)
{
  uint64_t v9 = __len;
  unsigned int v10 = __src;
  int v11 = *(unsigned __int8 *)(a3 + 2);
  if (a4)
  {
    if (*(unsigned char *)(a3 + 2)) {
      goto LABEL_15;
    }
    int v12 = (uint64_t *)(a3 + 168);
  }
  else if (v11 == 8)
  {
    int v12 = (uint64_t *)(a3 + 64);
  }
  else if (v11 == 4)
  {
    int v12 = (uint64_t *)(a3 + 192);
  }
  else
  {
    if (*(unsigned char *)(a3 + 2)) {
      goto LABEL_15;
    }
    int v12 = (uint64_t *)(a3 + 160);
  }
  uint64_t v13 = *v12;
  if (!*v12 || (uint64_t v14 = *(unsigned __int16 *)(v13 + 14), !*(_WORD *)(v13 + 14)))
  {
LABEL_15:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"CONTINUE packet with no FIRST packet - discarding this CONTINUE packet", v16, v17, v18, v19, v20, v21, v22, v79);
      uint64_t v23 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
    }
    return;
  }
  if ((v14 + __len) <= 3)
  {
    memmove((void *)(v13 + v14 + 8), __src, __len);
    __int16 v15 = *(_WORD *)(v13 + 14) + v9;
LABEL_14:
    *(_WORD *)(v13 + 14) = v15;
    return;
  }
  if (v14 > 3)
  {
    LOWORD(v25) = *(_WORD *)(v13 + 8);
    unsigned __int16 v35 = v14 - 4;
    unsigned int v26 = *(unsigned __int16 *)(v13 + 12);
    int v36 = __len;
    goto LABEL_30;
  }
  uint64_t v24 = 4 - v14;
  memmove((void *)(v13 + 8 + v14), __src, 4 - v14);
  uint64_t v25 = *(unsigned __int16 *)(v13 + 8);
  unsigned int v26 = *(unsigned __int16 *)(v13 + 12);
  if (v25 > v26)
  {
    if (!sub_100058654()) {
      goto LABEL_34;
    }
    sub_100056E24((uint64_t)"Length in L2CAP header %d exceeds MTU %d", v27, v28, v29, v30, v31, v32, v33, v25);
    int v34 = sub_100050B4C(0x2Fu);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v25 >= v9)
  {
    unsigned __int16 v35 = 0;
    v10 += v24;
    LOWORD(v9) = v9 - v24;
    int v36 = (unsigned __int16)v9;
LABEL_30:
    uint64_t v45 = v36 + v35;
    if (v45 > v26)
    {
      if (!sub_100058654()) {
        goto LABEL_34;
      }
      sub_100056E24((uint64_t)"Received data %d exceeds exceeds buffer size %d", v46, v47, v48, v49, v50, v51, v52, v45);
      unsigned int v53 = sub_100050B4C(0x2Fu);
      if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
        goto LABEL_34;
      }
LABEL_33:
      sub_100744F6C();
      goto LABEL_34;
    }
    uint64_t v54 = *(unsigned __int16 *)(v13 + 10);
    uint64_t v84 = 0;
    if (sub_1001DD56C(v54, &v84) || (unsigned int v80 = *(unsigned __int16 **)(v84 + 48)) == 0)
    {
      memmove((void *)(*(void *)v13 + v35), v10, (unsigned __int16)v9);
      __int16 v55 = 0;
      char v56 = 1;
      if (!a5) {
        goto LABEL_39;
      }
    }
    else
    {
      char v83 = 0;
      __int16 v82 = 0;
      unsigned __int16 v81 = 0;
      if (sub_1001DF230(v54, &v82, &v81, &v83) || v45 > v81)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Received %d length data exceeding upper layer l2cap buffer size %d", v71, v72, v73, v74, v75, v76, v77, v45);
          uint64_t v78 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return;
      }
      uint64_t v70 = (char *)v80 + v35;
      __int16 v55 = v80;
      memmove(v70, v10, (unsigned __int16)v9);
      char v56 = 0;
      if (!a5)
      {
LABEL_39:
        if ((unsigned __int16)v45 == (unsigned __int16)v25)
        {
          *(_WORD *)(v13 + 14) = 0;
          if (v56)
          {
            uint64_t v57 = *(unsigned __int16 **)v13;
            BOOL v58 = *(unsigned char *)(v13 + 16) != 0;
            size_t v59 = (unsigned __int16)v25;
            uint64_t v60 = (unsigned char *)a3;
            uint64_t v61 = v54;
          }
          else
          {
            BOOL v58 = *(unsigned char *)(v13 + 16) != 0;
            size_t v59 = (unsigned __int16)v25;
            uint64_t v60 = (unsigned char *)a3;
            uint64_t v61 = v54;
            uint64_t v57 = v55;
          }
          sub_1001F78D4(v60, v61, v57, v59, v58, a6);
          goto LABEL_35;
        }
        if ((unsigned __int16)v45 <= (unsigned __int16)v25)
        {
          __int16 v15 = v45 + 4;
          goto LABEL_14;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Received data %d exceeds size in L2CAP header %d", v62, v63, v64, v65, v66, v67, v68, (unsigned __int16)v45);
          uint64_t v69 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
LABEL_34:
        *(_WORD *)(v13 + 14) = 0;
LABEL_35:
        *(unsigned char *)(v13 + 16) = 0;
        return;
      }
    }
    *(unsigned char *)(v13 + 16) = 1;
    goto LABEL_39;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Packet size of %d exceeds the expected payload length %d", v37, v38, v39, v40, v41, v42, v43, v9);
    uint64_t v44 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
LABEL_17:
    }
      sub_100744F6C();
  }
}

void sub_1001F78D4(unsigned char *a1, uint64_t a2, unsigned __int16 *a3, size_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v53 = 0;
  if (a5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"UpperLayerRecv: wakeupCause Packet from BT Controller (handle=0x%04x cid=0x%4x, len=%d)\n", v12, v13, v14, v15, v16, v17, v18, *(unsigned __int16 *)a1);
      uint64_t v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        __int16 v55 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  word_100A05420 = a2;
  switch(a2)
  {
    case 2:
      sub_1001E5B0C((uint64_t)a1, a3, a4);
LABEL_15:
      word_100A05420 = 0;
      return;
    case 1:
      sub_100204FD8(a1, a3, a4);
      goto LABEL_15;
    case 0:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"%! (%d)", v20, v21, v22, v23, v24, v25, v26, 105);
        uint64_t v27 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_15;
  }
  if (a2 <= 0x3F)
  {
    sub_1001E56F8((uint64_t)a1, a2, (uint64_t)a3, a4, a5);
    goto LABEL_15;
  }
  if (sub_1001DD56C(a2, (uint64_t *)&v53))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Data received for invalid CID %d, ignoring packet", v28, v29, v30, v31, v32, v33, v34, a2);
      unsigned __int16 v35 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
LABEL_36:
      }
        sub_100744F6C();
    }
  }
  else if (sub_1001E6484(v53))
  {
    if (*(unsigned char **)sub_1001E6484(v53) == a1)
    {
      if (!*(unsigned char *)(sub_1001E6484(v53) + 78)
        || (int v44 = *(unsigned __int16 *)((char *)a3 + a4 - 2),
            *(_WORD *)long long buf = a4,
            *(_WORD *)&buf[2] = a2,
            LOWORD(a4) = a4 - 2,
            sub_1001F136C((char *)buf, 4u, (char *)a3, (unsigned __int16)a4, v44)))
      {
        if (sub_1001F150C(a2) || sub_1001F1564(a2)) {
          sub_1001F2560(a2, a3, (unsigned __int16)a4, a5, a6);
        }
        else {
          sub_1001E20D0(a2, (uint64_t)a3, (unsigned __int16)a4, a5, a6);
        }
        goto LABEL_15;
      }
    }
    else
    {
      if (*(void *)sub_1001E6484(v53)) {
        sub_1001E6484(v53);
      }
      if (sub_100058654())
      {
        sub_1001E6484(v53);
        sub_100056E24((uint64_t)"(CID: %#06x) Received ACL handle %#06x (%p) does not match stored handle %#06x (%p), ignoring packet", v45, v46, v47, v48, v49, v50, v51, a2);
        uint64_t v52 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
          goto LABEL_36;
        }
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"No connection data, ignoring packet", v36, v37, v38, v39, v40, v41, v42, a2);
    uint64_t v43 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
      goto LABEL_36;
    }
  }
}

void sub_1001F7C70(uint64_t a1, const void *a2)
{
  dword_100A05428 = a1;
  if ((a1 - 1) > 0x7CE)
  {
    if ((a1 - 2000) > 0x7CF)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid chipset %d", v4, v5, v6, v7, v8, v9, v10, a1);
        int v11 = sub_100050B4C(0x54u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    else
    {
      sub_1001189C0(&off_100A05538);
      sub_100118998((void (**)(uint64_t *, uint64_t))&off_100A05E28, a2);
    }
  }
  else
  {
    sub_1001B5410(&off_100A05538);
    sub_1001B53E8((void (**)(uint64_t, uint64_t))&off_100A05E28, a2);
  }
}

uint64_t sub_1001F7D74()
{
  return dword_100A05428;
}

uint64_t sub_1001F7D80(int a1, uint64_t a2)
{
  if ((a1 - 1) >= 0x7CF && a1 != 6000 && (a1 - 4000) < 0xFFFFF830) {
    return 101;
  }
  uint64_t v2 = 0;
  dword_1009FAEC4 = a1;
  qword_100A05E30 = a2;
  return v2;
}

uint64_t sub_1001F7DC8()
{
  sub_1001F7C70(dword_1009FAEC4, (const void *)qword_100A05E30);
  dword_100A05530 = 0;
  uint64_t v0 = sub_10018243C((uint64_t)sub_1001F7E70, 0);
  if (v0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to register vsevent %!", v1, v2, v3, v4, v5, v6, v7, v0);
      uint64_t v8 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v0;
}

void sub_1001F7E70(unsigned __int8 *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return;
  }
  if (!a1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/vsc.c", 268, "pData");
  }
  uint64_t v7 = a1;
  __int16 v8 = a2;
  __int16 v11 = 1;
  __int16 v9 = a2;
  if (a2 <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/vsc/vsc.c", 272, "ByteStream_NumReadBytesAvail(bs) >= 1");
  }
  int v6 = *a1;
  __int16 v10 = 2;
  if (a2 - 2 != a1[1]) {
    sub_10025B8C0();
  }
  if (v6 == 14)
  {
    if (a2 >= 6) {
      return;
    }
LABEL_12:
    sub_10025B8C0();
    return;
  }
  if (v6 != 255)
  {
    if (v6 != 15 || a2 == 6) {
      return;
    }
    goto LABEL_12;
  }
  if (a2 <= 2) {
    sub_10025B8C0();
  }
  if (off_100A05E28) {
    off_100A05E28(&v7, a4);
  }
}

void sub_1001F7F8C(uint64_t a1)
{
  qword_100A05E58 = a1;
  if ((dword_100A05428 - 1) > 0x7CE)
  {
    if ((dword_100A05428 - 2000) > 0x7CF)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid chipset %d", v1, v2, v3, v4, v5, v6, v7, dword_100A05428);
        __int16 v8 = sub_100050B4C(0x54u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    else
    {
      sub_100118AA8(&unk_100A05E38);
    }
  }
  else
  {
    sub_1001B5468(&unk_100A05E38);
  }
}

void sub_1001F8070(uint64_t a1)
{
  qword_100A05FD0 = a1;
  if ((dword_100A05428 - 1) > 0x7CE)
  {
    if ((dword_100A05428 - 2001) > 0x7CE)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid chipset %d for LMP Halt VSE Callback Registration", v1, v2, v3, v4, v5, v6, v7, dword_100A05428);
        __int16 v8 = sub_100050B4C(0x54u);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    else
    {
      sub_100118AA8(&unk_100A05E38);
    }
  }
  else
  {
    sub_1001B5468(&unk_100A05E38);
  }
}

void sub_1001F8154(uint64_t a1)
{
  qword_100A05F10 = a1;
  if ((dword_100A05428 - 1) > 0x7CE)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid chipset %d for Advanced Sniff Mode Change Registration", v1, v2, v3, v4, v5, v6, v7, dword_100A05428);
      __int16 v8 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    sub_1001B5468(&unk_100A05E38);
  }
}

uint64_t sub_1001F8204()
{
  if (off_100A05538)
  {
    uint64_t v0 = off_100A05538();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    __int16 v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8290()
{
  if (off_100A05548)
  {
    uint64_t v0 = off_100A05548();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    __int16 v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F831C()
{
  if (off_100A05540)
  {
    uint64_t v0 = off_100A05540();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    __int16 v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F83A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  if (off_100A05550)
  {
    uint64_t v8 = off_100A05550(a1, a2, a3, a4);
    if (!v8) {
      return v8;
    }
  }
  else
  {
    uint64_t v8 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v9, v10, v11, v12, v13, v14, v15, v8);
    uint64_t v16 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v8;
}

uint64_t sub_1001F846C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  if (off_100A05558)
  {
    uint64_t v6 = off_100A05558(a1, a2, a3);
    if (!v6) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v7, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v6;
}

uint64_t sub_1001F8528()
{
  if (off_100A05560)
  {
    uint64_t v0 = off_100A05560();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F85B4()
{
  if (off_100A05568)
  {
    uint64_t v0 = off_100A05568();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8640()
{
  if (off_100A05570)
  {
    uint64_t v0 = off_100A05570();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F86CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  if (off_100A05578)
  {
    uint64_t v6 = off_100A05578(a1, a2, a3);
    if (!v6) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v7, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v6;
}

uint64_t sub_1001F8788()
{
  if (off_100A05598)
  {
    uint64_t v0 = off_100A05598();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8814()
{
  if (off_100A055A0)
  {
    uint64_t v0 = off_100A055A0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F88A0()
{
  if (off_100A055A8)
  {
    uint64_t v0 = off_100A055A8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F892C()
{
  if (off_100A055B0)
  {
    uint64_t v0 = off_100A055B0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F89B8(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A055B8)
  {
    uint64_t v1 = off_100A055B8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001F8A50()
{
  if (off_100A055C0)
  {
    uint64_t v0 = off_100A055C0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8ADC()
{
  if (off_100A055C8)
  {
    uint64_t v0 = off_100A055C8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8B68()
{
  if (off_100A055D0)
  {
    uint64_t v0 = off_100A055D0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8BF4()
{
  if (off_100A055D8)
  {
    uint64_t v0 = off_100A055D8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8C80()
{
  if (off_100A055E0)
  {
    uint64_t v0 = off_100A055E0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8D0C()
{
  if (off_100A05580)
  {
    uint64_t v0 = off_100A05580();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8D98()
{
  if (off_100A05588)
  {
    uint64_t v0 = off_100A05588();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return 101;
  }
  uint64_t v15 = 0;
  uint64_t v5 = sub_10017E2D4(a2, &v15);
  if (!v5)
  {
    if (off_100A05590)
    {
      uint64_t v5 = off_100A05590(a1, v15, a3);
      if (!v5) {
        return v5;
      }
    }
    else
    {
      uint64_t v5 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v7, v8, v9, v10, v11, v12, v13, v5);
      uint64_t v14 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v5;
}

uint64_t sub_1001F8EF0()
{
  if (off_100A055E8)
  {
    uint64_t v0 = off_100A055E8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F8F7C()
{
  if (off_100A055F0)
  {
    uint64_t v0 = off_100A055F0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9008(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A055F8)
  {
    uint64_t v1 = off_100A055F8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001F90A0()
{
  if (dword_100A05428 != 12) {
    return 3601;
  }
  if (off_100A05610)
  {
    uint64_t v0 = off_100A05610();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9144()
{
  if (off_100A05618)
  {
    uint64_t v0 = off_100A05618();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F91D0()
{
  if (off_100A05620)
  {
    uint64_t v0 = off_100A05620();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F925C()
{
  if (off_100A05648)
  {
    uint64_t v0 = off_100A05648();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F92E8()
{
  if (off_100A05660)
  {
    uint64_t v0 = off_100A05660();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9374()
{
  if (off_100A05650)
  {
    uint64_t v0 = off_100A05650();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9400()
{
  if (off_100A05658)
  {
    uint64_t v0 = off_100A05658();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F948C()
{
  if (off_100A05698)
  {
    uint64_t v0 = off_100A05698();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9518(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v18 = 0;
  unint64_t v5 = sub_10022A5E0(a2);
  int v16 = v5;
  __int16 v17 = WORD2(v5);
  uint64_t v6 = sub_10017E2D4((uint64_t)&v16, &v18);
  if (!v6)
  {
    if (off_100A05668)
    {
      uint64_t v6 = off_100A05668(a1, v18, a3);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v8, v9, v10, v11, v12, v13, v14, v6);
      uint64_t v15 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v6;
}

uint64_t sub_1001F95EC()
{
  if (off_100A05670)
  {
    uint64_t v0 = off_100A05670();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9678()
{
  if (off_100A05678)
  {
    uint64_t v0 = off_100A05678();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9704()
{
  if (off_100A05680)
  {
    uint64_t v0 = off_100A05680();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9790()
{
  if (off_100A05688)
  {
    uint64_t v0 = off_100A05688();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F981C()
{
  if (off_100A05690)
  {
    uint64_t v0 = off_100A05690();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F98A8(uint64_t a1, uint64_t a2)
{
  if (off_100A05C70)
  {
    uint64_t v2 = off_100A05C70(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001F9944(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,uint64_t a25)
{
  if (off_100A05E08)
  {
    BYTE4(v35) = a24;
    LODWORD(v35) = a23;
    uint64_t v25 = off_100A05E08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
            a20,
            a21,
            a22,
            v35,
            a25);
    if (!v25) {
      return v25;
    }
  }
  else
  {
    uint64_t v25 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v26, v27, v28, v29, v30, v31, v32, v25);
    uint64_t v33 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v25;
}

uint64_t sub_1001F9B20()
{
  if (off_100A05E10)
  {
    uint64_t v0 = off_100A05E10();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9BAC()
{
  if (off_100A056A0)
  {
    uint64_t v0 = off_100A056A0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9C38()
{
  if (off_100A056A8)
  {
    uint64_t v0 = off_100A056A8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC LMP Halt failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9CC4()
{
  if (off_100A056B0)
  {
    uint64_t v0 = off_100A056B0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9D50()
{
  if (off_100A056B8)
  {
    uint64_t v0 = off_100A056B8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9DDC()
{
  if (off_100A056C0)
  {
    uint64_t v0 = off_100A056C0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9E68()
{
  if (off_100A05D08)
  {
    uint64_t v0 = off_100A05D08();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001F9EF4(unsigned int a1, uint64_t a2)
{
  uint64_t v2 = 101;
  if (a1 <= 1 && a2)
  {
    if (off_100A056E0)
    {
      uint64_t v2 = off_100A056E0();
      if (!v2) {
        return v2;
      }
    }
    else
    {
      uint64_t v2 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v2;
}

uint64_t sub_1001F9F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 101;
  if (a2 && a3)
  {
    if (off_100A056C8)
    {
      uint64_t v3 = off_100A056C8();
      if (!v3) {
        return v3;
      }
    }
    else
    {
      uint64_t v3 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v3;
}

uint64_t sub_1001FA028(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 101;
  }
  if (off_100A056D0)
  {
    uint64_t v2 = off_100A056D0();
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FA0C0()
{
  if (off_100A056D8)
  {
    uint64_t v0 = off_100A056D8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA14C()
{
  if (off_100A056E8)
  {
    uint64_t v0 = off_100A056E8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA1D8()
{
  if (off_100A056F0)
  {
    uint64_t v0 = off_100A056F0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA264()
{
  if (off_100A056F8)
  {
    uint64_t v0 = off_100A056F8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA2F0(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05700)
  {
    uint64_t v1 = off_100A05700();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FA388(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A057E8)
  {
    uint64_t v1 = off_100A057E8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FA420(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 101;
  }
  if (off_100A057F0)
  {
    uint64_t v2 = off_100A057F0(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FA4C0()
{
  if (off_100A05810)
  {
    uint64_t v0 = off_100A05810();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA54C()
{
  if (off_100A05708)
  {
    uint64_t v0 = off_100A05708();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA5D8(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = 101;
  if (a1 && a2 <= 0x15)
  {
    if (off_100A05710)
    {
      uint64_t v2 = off_100A05710();
      if (!v2) {
        return v2;
      }
    }
    else
    {
      uint64_t v2 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v2;
}

uint64_t sub_1001FA674(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = 101;
  if (a1 && a2 <= 0x15)
  {
    if (off_100A05718)
    {
      uint64_t v2 = off_100A05718();
      if (!v2) {
        return v2;
      }
    }
    else
    {
      uint64_t v2 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v2;
}

uint64_t sub_1001FA710()
{
  if (off_100A05720)
  {
    uint64_t v0 = off_100A05720();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA79C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5 = 101;
  if (a2 <= 2 && a5 <= 0xF)
  {
    if (off_100A05638)
    {
      uint64_t v5 = off_100A05638();
      if (!v5) {
        return v5;
      }
    }
    else
    {
      uint64_t v5 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
      uint64_t v13 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v5;
}

uint64_t sub_1001FA83C()
{
  if (off_100A05AE0)
  {
    uint64_t v0 = off_100A05AE0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA8C8()
{
  if (off_100A05AE8)
  {
    uint64_t v0 = off_100A05AE8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FA954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  uint64_t v8 = 101;
  if (a8 <= 8 && ((1 << a8) & 0x116) != 0)
  {
    if (off_100A05640)
    {
      uint64_t v8 = off_100A05640(a1, a2, a3);
      if (!v8) {
        return v8;
      }
    }
    else
    {
      uint64_t v8 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v9, v10, v11, v12, v13, v14, v15, v8);
      int v16 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v8;
}

uint64_t sub_1001FAA18(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4 = 101;
  if (a4 <= a2 && a2 <= 0x19 && a1 && a3)
  {
    if (off_100A05780)
    {
      uint64_t v4 = off_100A05780(a1, a2, a3);
      if (!v4) {
        return v4;
      }
    }
    else
    {
      uint64_t v4 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v4;
}

uint64_t sub_1001FAAE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4 = 101;
  if (a4 <= a2 && a2 <= 0x16 && a1 && a3)
  {
    if (off_100A05788)
    {
      uint64_t v4 = off_100A05788(a1, a2, a3);
      if (!v4) {
        return v4;
      }
    }
    else
    {
      uint64_t v4 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v4;
}

uint64_t sub_1001FABB8(unsigned int a1, unsigned int a2, uint64_t a3)
{
  if ((a1 - 21) < 0xECu || a3 == 0) {
    return 101;
  }
  BOOL v7 = a1 > 4 && a2 != 0;
  uint64_t v4 = 101;
  if (a2 <= 0x19 && !v7)
  {
    if (off_100A05790)
    {
      uint64_t v4 = off_100A05790();
      if (!v4) {
        return v4;
      }
    }
    else
    {
      uint64_t v4 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v8, v9, v10, v11, v12, v13, v14, v4);
      uint64_t v15 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v4;
}

uint64_t sub_1001FAC78()
{
  if (off_100A057C8)
  {
    uint64_t v0 = off_100A057C8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FAD04()
{
  if (off_100A05798)
  {
    uint64_t v0 = off_100A05798();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FAD90(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5 = 101;
  if (a5 == 3 && a3 == 3 && a2 && a4)
  {
    if (off_100A057A0)
    {
      uint64_t v5 = off_100A057A0();
      if (!v5) {
        return v5;
      }
    }
    else
    {
      uint64_t v5 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
      uint64_t v13 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v5;
}

uint64_t sub_1001FAE40()
{
  if (off_100A057A8)
  {
    uint64_t v0 = off_100A057A8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FAECC()
{
  if (off_100A057B0)
  {
    uint64_t v0 = off_100A057B0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FAF58(unsigned __int8 a1)
{
  if (off_100A057B8)
  {
    uint64_t v1 = off_100A057B8(a1);
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FAFE8()
{
  if (off_100A057C0)
  {
    uint64_t v0 = off_100A057C0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB074(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4 = 101;
  if (a4 <= a2 && a2 <= 0x16 && a1 && a3)
  {
    if (off_100A05728)
    {
      uint64_t v4 = off_100A05728(a1, a2);
      if (!v4) {
        return v4;
      }
    }
    else
    {
      uint64_t v4 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v4;
}

uint64_t sub_1001FB124()
{
  if (off_100A05748)
  {
    uint64_t v0 = off_100A05748();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB1B0()
{
  if (off_100A05760)
  {
    uint64_t v0 = off_100A05760();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB23C()
{
  if (off_100A05768)
  {
    uint64_t v0 = off_100A05768();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB2C8(char a1, unsigned int a2, uint64_t a3)
{
  if ((a1 - 26) < 0xE7u || a2 > 1 || a3 == 0) {
    return 101;
  }
  if (off_100A05770)
  {
    uint64_t v5 = off_100A05770();
    if (!v5) {
      return v5;
    }
  }
  else
  {
    uint64_t v5 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
    uint64_t v13 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v5;
}

uint64_t sub_1001FB374()
{
  if (off_100A05778)
  {
    uint64_t v0 = off_100A05778();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB400()
{
  if (off_100A05750)
  {
    uint64_t v0 = off_100A05750();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB48C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  unsigned int v8 = *(unsigned __int16 *)(a1 + 80);
  if (*(_WORD *)(a1 + 80) || (sub_10025B8C0(), unsigned int v8 = *(unsigned __int16 *)(a1 + 80), *(_WORD *)(a1 + 80)))
  {
    unsigned int v9 = a3 / v8;
    if (v9 >= 0x100) {
      sub_10025B8C0();
    }
  }
  else
  {
    LOBYTE(v9) = 127;
  }
  if (off_100A05730)
  {
    uint64_t v10 = off_100A05730(a1, a2, v9, a4);
    if (!v10) {
      return v10;
    }
  }
  else
  {
    uint64_t v10 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v11, v12, v13, v14, v15, v16, v17, v10);
    uint64_t v18 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v10;
}

uint64_t sub_1001FB57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  if (!a2) {
    return 101;
  }
  if (off_100A05738)
  {
    uint64_t v8 = off_100A05738(a1, a2, a3, a4);
    if (!v8) {
      return v8;
    }
  }
  else
  {
    uint64_t v8 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v9, v10, v11, v12, v13, v14, v15, v8);
    uint64_t v16 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v8;
}

uint64_t sub_1001FB64C(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05740)
  {
    uint64_t v1 = off_100A05740();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FB6E4(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05D38)
  {
    uint64_t v2 = off_100A05D38(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FB794()
{
  if (off_100A05D40)
  {
    uint64_t v0 = off_100A05D40();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FB820(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05D30)
  {
    uint64_t v1 = off_100A05D30(a1);
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FB8C0(uint64_t a1, uint64_t a2)
{
  if (off_100A05818)
  {
    uint64_t v2 = off_100A05818(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FB974(unint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 101;
  }
  uint64_t v3 = sub_100197AF8(a1);
  if (!sub_100197770(v3)) {
    return 122;
  }
  *(_DWORD *)((char *)v14 + 3) = 0;
  v14[0] = 0;
  uint64_t v4 = 101;
  if (!sub_100225E94(v3, (uint64_t)v14, 0) && !LOBYTE(v14[0]))
  {
    if (off_100A05820)
    {
      uint64_t v4 = off_100A05820(v3, (char *)v14 + 1, a2);
      if (!v4) {
        return v4;
      }
    }
    else
    {
      uint64_t v4 = 3601;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v4;
}

uint64_t sub_1001FBA68(uint64_t a1, uint64_t a2)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  __int16 v15 = 0;
  int v14 = 0;
  if (off_100A05820)
  {
    uint64_t v4 = off_100A05820(a1, &v14, a2);
    if (!v4) {
      return v4;
    }
  }
  else
  {
    uint64_t v4 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v4;
}

uint64_t sub_1001FBB20(void *a1)
{
  if (!a1 || !*a1) {
    return 101;
  }
  if (off_100A05758)
  {
    uint64_t v1 = off_100A05758();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v1);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FBBBC(uint64_t a1)
{
  if (!a1 || !*(void *)(a1 + 8)) {
    return 101;
  }
  if (off_100A057D0)
  {
    uint64_t v1 = off_100A057D0();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v1);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FBC58(void *a1)
{
  if (!a1 || !*a1) {
    return 101;
  }
  if (off_100A057D8)
  {
    uint64_t v1 = off_100A057D8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v1);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FBCF4(int a1, __int16 a2, __int16 a3)
{
  if (!a1 || (uint64_t v3 = 101, (unsigned __int16)(a2 - 16385) >= 0xC003u) && (unsigned __int16)(a3 - 16385) >= 0xC003u)
  {
    if (off_100A057E0)
    {
      uint64_t v3 = off_100A057E0();
      if (!v3) {
        return v3;
      }
    }
    else
    {
      uint64_t v3 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v3;
}

uint64_t sub_1001FBDA8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5)
{
  if (a4)
  {
    if (!a1) {
      return 101;
    }
  }
  else
  {
    sub_10025B8C0();
    if (!a1) {
      return 101;
    }
  }
  uint64_t v24 = 0;
  uint64_t v10 = sub_10017E2D4(a1, (uint64_t *)&v24);
  if (!v10)
  {
    uint64_t v11 = (uint64_t)v24;
    if (*v24 == -1) {
      return 101;
    }
    int v12 = *((_DWORD *)v24 + 62);
    if ((a2 - 3) <= 0xFFFFFFFD && (v12 - 1) < 2) {
      return 101;
    }
    if (a3)
    {
      *((_DWORD *)v24 + 62) = v12 | a2;
      *a4 = v12 | a2;
      if (!v12)
      {
LABEL_23:
        if (off_100A05830)
        {
          uint64_t v10 = off_100A05830(a1, a3, a2, a5);
          if (!v10) {
            return v10;
          }
        }
        else
        {
          uint64_t v10 = 3601;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"VSC failed %!", v16, v17, v18, v19, v20, v21, v22, v10);
          uint64_t v23 = sub_100050B4C(0x54u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        return v10;
      }
    }
    else
    {
      int v14 = v12 & ~a2;
      *((_DWORD *)v24 + 62) = v14;
      if (v12 && !v14)
      {
        if (*(unsigned char *)(v11 + 144) == 1)
        {
          int v15 = *(unsigned __int8 *)(v11 + 197);
          if (*(unsigned char *)(v11 + 197))
          {
            *(unsigned char *)(v11 + 197) = 0;
            sub_100188C50(v11, 2);
            int v15 = *((_DWORD *)v24 + 62);
          }
        }
        else
        {
          int v15 = 0;
        }
        *a4 = v15;
        goto LABEL_23;
      }
      *a4 = v14;
    }
    return 3603;
  }
  return v10;
}

uint64_t sub_1001FBF2C()
{
  if (off_100A05828)
  {
    uint64_t v0 = off_100A05828();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FBFB8()
{
  if (off_100A05838)
  {
    uint64_t v0 = off_100A05838();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FC044()
{
  if (off_100A05840)
  {
    uint64_t v0 = off_100A05840();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FC0D0()
{
  if (off_100A05850)
  {
    uint64_t v0 = off_100A05850();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FC15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return 101;
  }
  uint64_t v15 = 0;
  uint64_t v5 = sub_10017E2D4(a2, &v15);
  if (!v5)
  {
    if (off_100A05858)
    {
      uint64_t v5 = off_100A05858(a1, v15, a3);
      if (!v5) {
        return v5;
      }
    }
    else
    {
      uint64_t v5 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v7, v8, v9, v10, v11, v12, v13, v5);
      int v14 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v5;
}

uint64_t sub_1001FC228()
{
  if (off_100A05860)
  {
    uint64_t v0 = off_100A05860();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FC2B4(uint64_t a1)
{
  if (a1) {
    return 101;
  }
  if (off_100A05868)
  {
    uint64_t v1 = off_100A05868(0);
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v1);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FC34C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 101;
  }
  uint64_t v13 = 0;
  uint64_t v3 = sub_10017E2D4(a1, &v13);
  if (!v3)
  {
    if (off_100A05870)
    {
      uint64_t v3 = off_100A05870(v13, a2);
      if (!v3) {
        return v3;
      }
    }
    else
    {
      uint64_t v3 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v3);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v3;
}

uint64_t sub_1001FC400()
{
  if (off_100A05880)
  {
    uint64_t v0 = off_100A05880();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FC48C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 101;
  }
  uint64_t v13 = 0;
  uint64_t v3 = sub_10017E2D4(a1, &v13);
  if (!v3)
  {
    if (off_100A05888)
    {
      uint64_t v3 = off_100A05888(v13, a2);
      if (!v3) {
        return v3;
      }
    }
    else
    {
      uint64_t v3 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v3);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v3;
}

uint64_t sub_1001FC540(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05890)
  {
    uint64_t v1 = off_100A05890();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FC5D8(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05898)
  {
    uint64_t v1 = off_100A05898();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FC670(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A058A0)
  {
    uint64_t v1 = off_100A058A0();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FC708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    return 101;
  }
  uint64_t v17 = 0;
  uint64_t v7 = sub_10017E2D4(a1, &v17);
  if (!v7)
  {
    if (off_100A058A8)
    {
      uint64_t v7 = off_100A058A8(v17, a2, a3, a4);
      if (!v7) {
        return v7;
      }
    }
    else
    {
      uint64_t v7 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v9, v10, v11, v12, v13, v14, v15, v7);
      uint64_t v16 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v7;
}

uint64_t sub_1001FC7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a1) {
    return 101;
  }
  uint64_t v23 = 0;
  uint64_t v13 = sub_10017E2D4(a1, &v23);
  if (!v13)
  {
    if (off_100A058B0)
    {
      uint64_t v13 = off_100A058B0(v23, a2, a3, a4, a5, a6, a7);
      if (!v13) {
        return v13;
      }
    }
    else
    {
      uint64_t v13 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v15, v16, v17, v18, v19, v20, v21, v13);
      uint64_t v22 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v13;
}

uint64_t sub_1001FC8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  if (!a1) {
    return 101;
  }
  uint64_t v27 = 0;
  uint64_t v17 = sub_10017E2D4(a1, &v27);
  if (!v17)
  {
    if (off_100A058B8)
    {
      uint64_t v17 = off_100A058B8(v27, a2, a3, a4, a5, a6, a7, a8, a9, a10);
      if (!v17) {
        return v17;
      }
    }
    else
    {
      uint64_t v17 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v19, v20, v21, v22, v23, v24, v25, v17);
      uint64_t v26 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v17;
}

uint64_t sub_1001FC9D4()
{
  if (off_100A058C0)
  {
    uint64_t v0 = off_100A058C0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FCA60()
{
  if (off_100A058C8)
  {
    uint64_t v0 = off_100A058C8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FCAEC(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A058D0)
  {
    uint64_t v1 = off_100A058D0();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FCB84(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A058D8)
  {
    uint64_t v1 = off_100A058D8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FCC1C(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A058E0)
  {
    uint64_t v1 = off_100A058E0();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FCCB4(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A058E8)
  {
    uint64_t v1 = off_100A058E8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FCD4C()
{
  if (off_100A058F0)
  {
    uint64_t v0 = off_100A058F0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FCDD8()
{
  if (off_100A058F8)
  {
    uint64_t v0 = off_100A058F8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FCE64()
{
  if (off_100A05900)
  {
    uint64_t v0 = off_100A05900();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FCEF0()
{
  if (off_100A05908)
  {
    uint64_t v0 = off_100A05908();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FCF7C()
{
  if (off_100A05910)
  {
    uint64_t v0 = off_100A05910();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD008()
{
  if (off_100A05920)
  {
    uint64_t v0 = off_100A05920();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD094()
{
  if (off_100A05928)
  {
    uint64_t v0 = off_100A05928();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD120()
{
  if (off_100A05930)
  {
    uint64_t v0 = off_100A05930();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD1AC()
{
  if (off_100A05938)
  {
    uint64_t v0 = off_100A05938();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD238()
{
  if (off_100A05940)
  {
    uint64_t v0 = off_100A05940();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD2C4()
{
  if (off_100A05948)
  {
    uint64_t v0 = off_100A05948();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD350()
{
  if (off_100A05950)
  {
    uint64_t v0 = off_100A05950();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD3DC(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_100197770((uint64_t)a1)) {
    return 122;
  }
  if (off_100A05968)
  {
    uint64_t v8 = off_100A05968(*a1, a2, a3, a4);
    if (!v8) {
      return v8;
    }
  }
  else
  {
    uint64_t v8 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v9, v10, v11, v12, v13, v14, v15, v8);
    uint64_t v16 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v8;
}

uint64_t sub_1001FD4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1) {
    return 101;
  }
  uint64_t v19 = 0;
  uint64_t v9 = sub_10017E2D4(a1, &v19);
  if (!v9)
  {
    if (off_100A05918)
    {
      uint64_t v9 = off_100A05918(v19, a2, a3, a4, a5);
      if (!v9) {
        return v9;
      }
    }
    else
    {
      uint64_t v9 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v11, v12, v13, v14, v15, v16, v17, v9);
      uint64_t v18 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v9;
}

uint64_t sub_1001FD57C()
{
  if (off_100A05958)
  {
    uint64_t v0 = off_100A05958();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD608()
{
  if (off_100A05960)
  {
    uint64_t v0 = off_100A05960();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD694()
{
  if (off_100A05970)
  {
    uint64_t v0 = off_100A05970();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD720()
{
  if (off_100A05978)
  {
    uint64_t v0 = off_100A05978();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD7AC(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  uint64_t v11 = 0;
  uint64_t v1 = sub_10017E2D4(a1, (uint64_t *)&v11);
  if (v1) {
    return v1;
  }
  if (*v11 == 0xFFFF) {
    return 101;
  }
  if (off_100A059D0)
  {
    uint64_t v1 = off_100A059D0();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v1);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FD880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_100197770(a1))
  {
    if (off_100A05980)
    {
      uint64_t v6 = off_100A05980(a1, a2, a3);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 3601;
    }
  }
  else
  {
    uint64_t v6 = 122;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v7, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v6;
}

uint64_t sub_1001FD93C()
{
  if (off_100A05988)
  {
    uint64_t v0 = off_100A05988();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FD9C8()
{
  if (off_100A05990)
  {
    uint64_t v0 = off_100A05990();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDA54()
{
  if (off_100A05998)
  {
    uint64_t v0 = off_100A05998();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDAE0()
{
  if (off_100A059A0)
  {
    uint64_t v0 = off_100A059A0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_100197770(a1)) {
    return 122;
  }
  if (*(unsigned __int16 *)(a1 + 94) == a2) {
    return 3603;
  }
  *(_WORD *)(a1 + 94) = a2;
  if (off_100A059E0)
  {
    uint64_t v6 = off_100A059E0(a1, a2, a3);
    if (!v6) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v8, v9, v10, v11, v12, v13, v14, v6);
    uint64_t v15 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v6;
}

uint64_t sub_1001FDC3C(uint64_t a1, unsigned __int16 a2)
{
  if (off_100A05C98)
  {
    uint64_t v2 = off_100A05C98(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FDCCC()
{
  if (off_100A05CA0)
  {
    uint64_t v0 = off_100A05CA0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDD58()
{
  if (off_100A059A8)
  {
    uint64_t v0 = off_100A059A8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDDE4()
{
  if (off_100A059B0)
  {
    uint64_t v0 = off_100A059B0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDE70()
{
  if (off_100A059B8)
  {
    uint64_t v0 = off_100A059B8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDEFC()
{
  if (off_100A059C0)
  {
    uint64_t v0 = off_100A059C0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FDF88()
{
  if (off_100A059E8)
  {
    uint64_t v0 = off_100A059E8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE014()
{
  if (off_100A059F0)
  {
    uint64_t v0 = off_100A059F0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE0A0()
{
  if (off_100A059F8)
  {
    uint64_t v0 = off_100A059F8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE12C()
{
  if (off_100A05A00)
  {
    uint64_t v0 = off_100A05A00();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE1B8()
{
  if (off_100A05A08)
  {
    uint64_t v0 = off_100A05A08();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE244()
{
  if (off_100A05A10)
  {
    uint64_t v0 = off_100A05A10();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE2D0()
{
  if (off_100A05A18)
  {
    uint64_t v0 = off_100A05A18();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE35C()
{
  if (off_100A05A20)
  {
    uint64_t v0 = off_100A05A20();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE3E8()
{
  if (off_100A05A28)
  {
    uint64_t v0 = off_100A05A28();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE474()
{
  if (off_100A05A30)
  {
    uint64_t v0 = off_100A05A30();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE500()
{
  if (off_100A05A38)
  {
    uint64_t v0 = off_100A05A38();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE58C()
{
  if (off_100A05A40)
  {
    uint64_t v0 = off_100A05A40();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE618()
{
  if (off_100A05A48)
  {
    uint64_t v0 = off_100A05A48();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE6A4()
{
  if (off_100A05A50)
  {
    uint64_t v0 = off_100A05A50();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE730()
{
  if (off_100A05A58)
  {
    uint64_t v0 = off_100A05A58();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE7BC()
{
  if (off_100A05A60)
  {
    uint64_t v0 = off_100A05A60();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE848()
{
  if (off_100A05A68)
  {
    uint64_t v0 = off_100A05A68();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE8D4()
{
  if (off_100A05A70)
  {
    uint64_t v0 = off_100A05A70();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE960()
{
  if (off_100A05A78)
  {
    uint64_t v0 = off_100A05A78();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FE9EC()
{
  if (off_100A05A80)
  {
    uint64_t v0 = off_100A05A80();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FEA78()
{
  if (off_100A05A88)
  {
    uint64_t v0 = off_100A05A88();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FEB04(uint64_t a1, uint64_t a2)
{
  if (off_100A05A90)
  {
    uint64_t v2 = off_100A05A90(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FEBC0(uint64_t a1, uint64_t a2)
{
  if (off_100A05A98)
  {
    uint64_t v2 = off_100A05A98(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FEC64(uint64_t a1, uint64_t a2)
{
  if (off_100A05AA0)
  {
    uint64_t v2 = off_100A05AA0(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FED10(uint64_t a1, uint64_t a2)
{
  if (off_100A05AA8)
  {
    uint64_t v2 = off_100A05AA8(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FEDCC()
{
  if (off_100A05AB0)
  {
    uint64_t v0 = off_100A05AB0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FEE58()
{
  if (off_100A05AB8)
  {
    uint64_t v0 = off_100A05AB8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FEEE4()
{
  if (off_100A05AC0)
  {
    uint64_t v0 = off_100A05AC0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FEF70()
{
  if (off_100A05AC8)
  {
    uint64_t v0 = off_100A05AC8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FEFFC()
{
  if (off_100A05AD0)
  {
    uint64_t v0 = off_100A05AD0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF088()
{
  if (off_100A05AD8)
  {
    uint64_t v0 = off_100A05AD8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF114()
{
  if (off_100A05B00)
  {
    uint64_t v0 = off_100A05B00();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF1A0()
{
  if (off_100A05B08)
  {
    uint64_t v0 = off_100A05B08();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF22C()
{
  if (off_100A05B30)
  {
    uint64_t v0 = off_100A05B30();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF2B8()
{
  if (off_100A05B38)
  {
    uint64_t v0 = off_100A05B38();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF344()
{
  if (off_100A05B40)
  {
    uint64_t v0 = off_100A05B40();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF3D0()
{
  if (off_100A05C88)
  {
    uint64_t v0 = off_100A05C88();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF45C()
{
  if (off_100A05DE8)
  {
    uint64_t v0 = off_100A05DE8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF4E8()
{
  if (off_100A05B48)
  {
    uint64_t v0 = off_100A05B48();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF574()
{
  if (off_100A05C40)
  {
    uint64_t v0 = off_100A05C40();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF600(uint64_t a1)
{
  if (off_100A05B60)
  {
    uint64_t v1 = off_100A05B60(a1);
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1001FF694()
{
  if (off_100A05B68)
  {
    uint64_t v0 = off_100A05B68();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF720()
{
  if (off_100A05B70)
  {
    uint64_t v0 = off_100A05B70();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF7AC(uint64_t a1, uint64_t a2)
{
  if (off_100A05B78)
  {
    uint64_t v2 = off_100A05B78(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_1001FF848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (off_100A05B80)
  {
    uint64_t v7 = off_100A05B80(a1, a2, a3, a4, a5, a6, a7);
    if (!v7) {
      return v7;
    }
  }
  else
  {
    uint64_t v7 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v8, v9, v10, v11, v12, v13, v14, v7);
    uint64_t v15 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v7;
}

uint64_t sub_1001FF904()
{
  if (off_100A05B88)
  {
    uint64_t v0 = off_100A05B88();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FF990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (off_100A05B90)
  {
    uint64_t v3 = off_100A05B90(a1, a2, a3);
    if (!v3) {
      return v3;
    }
  }
  else
  {
    uint64_t v3 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
    uint64_t v11 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v3;
}

uint64_t sub_1001FFA34()
{
  if (off_100A05B98)
  {
    uint64_t v0 = off_100A05B98();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFAC0()
{
  if (off_100A05BA0)
  {
    uint64_t v0 = off_100A05BA0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFB4C()
{
  if (off_100A05BB0)
  {
    uint64_t v0 = off_100A05BB0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (off_100A05BA8)
  {
    uint64_t v4 = off_100A05BA8(a1, a2, a3, a4);
    if (!v4) {
      return v4;
    }
  }
  else
  {
    uint64_t v4 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v4;
}

uint64_t sub_1001FFC8C()
{
  if (off_100A05BB8)
  {
    uint64_t v0 = off_100A05BB8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFD18()
{
  if (off_100A05BC0)
  {
    uint64_t v0 = off_100A05BC0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFDA4()
{
  if (off_100A05BC8)
  {
    uint64_t v0 = off_100A05BC8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFE30()
{
  if (off_100A05BD0)
  {
    uint64_t v0 = off_100A05BD0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFEBC()
{
  if (off_100A05BD8)
  {
    uint64_t v0 = off_100A05BD8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFF48()
{
  if (off_100A05BE0)
  {
    uint64_t v0 = off_100A05BE0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1001FFFD4()
{
  if (off_100A05BE8)
  {
    uint64_t v0 = off_100A05BE8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200060()
{
  if (off_100A05BF0)
  {
    uint64_t v0 = off_100A05BF0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002000EC()
{
  if (off_100A05BF8)
  {
    uint64_t v0 = off_100A05BF8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200178()
{
  if (off_100A05C00)
  {
    uint64_t v0 = off_100A05C00();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200204()
{
  if (off_100A05C08)
  {
    uint64_t v0 = off_100A05C08();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200290(uint64_t a1, uint64_t a2, void *a3)
{
  if (off_100A05C10)
  {
    uint64_t v4 = off_100A05C10(a1, a2, a3);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
LABEL_8:
  free(a3);
  return v4;
}

uint64_t sub_100200334()
{
  if (off_100A05C28)
  {
    uint64_t v0 = off_100A05C28();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002003C0()
{
  if (off_100A05D10)
  {
    uint64_t v0 = off_100A05D10();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_10020044C()
{
  if (off_100A05C68)
  {
    uint64_t v0 = off_100A05C68();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002004D8()
{
  if (off_100A05CB0)
  {
    uint64_t v0 = off_100A05CB0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200564()
{
  if (off_100A05CB8)
  {
    uint64_t v0 = off_100A05CB8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002005F0()
{
  if (off_100A05CC0)
  {
    uint64_t v0 = off_100A05CC0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_10020067C()
{
  if (off_100A05CC8)
  {
    uint64_t v0 = off_100A05CC8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200708()
{
  if (off_100A05CD0)
  {
    uint64_t v0 = off_100A05CD0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200794()
{
  if (off_100A05CD8)
  {
    uint64_t v0 = off_100A05CD8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200820()
{
  if (off_100A05CE0)
  {
    uint64_t v0 = off_100A05CE0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002008AC()
{
  if (off_100A05CE8)
  {
    uint64_t v0 = off_100A05CE8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200938()
{
  if (off_100A05CF0)
  {
    uint64_t v0 = off_100A05CF0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002009C4()
{
  if (off_100A05CA8)
  {
    uint64_t v0 = off_100A05CA8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200A50()
{
  if (off_100A05D00)
  {
    uint64_t v0 = off_100A05D00();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (off_100A05D28)
  {
    uint64_t v5 = off_100A05D28(a1, a2, a3, a4, a5);
    if (!v5) {
      return v5;
    }
  }
  else
  {
    uint64_t v5 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v6, v7, v8, v9, v10, v11, v12, v5);
    uint64_t v13 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v5;
}

uint64_t sub_100200BB8()
{
  if (off_100A05CF8)
  {
    uint64_t v0 = off_100A05CF8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200C44()
{
  if (off_100A059C8)
  {
    uint64_t v0 = off_100A059C8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200CD0()
{
  if (off_100A05B18)
  {
    uint64_t v0 = off_100A05B18();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200D5C()
{
  if (off_100A05C30)
  {
    uint64_t v0 = off_100A05C30();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200DE8()
{
  if (off_100A05C48)
  {
    uint64_t v0 = off_100A05C48();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200E74()
{
  if (off_100A05C50)
  {
    uint64_t v0 = off_100A05C50();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200F00()
{
  if (off_100A059D8)
  {
    uint64_t v0 = off_100A059D8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100200F8C()
{
  if (off_100A05C58)
  {
    uint64_t v0 = off_100A05C58();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201018()
{
  if (off_100A05C60)
  {
    uint64_t v0 = off_100A05C60();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002010A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = a3;
  if (*(unsigned __int8 *)(a1 + 30) == a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Phy stats for handle %p is already %s", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  else
  {
    if (off_100A05AF0)
    {
      uint64_t v13 = off_100A05AF0(a1, a2, a3);
      if (!v13)
      {
        *(unsigned char *)(a1 + 30) = v3 != 0;
        return v13;
      }
    }
    else
    {
      uint64_t v13 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC PhyStatsEnable failed %!", v14, v15, v16, v17, v18, v19, v20, v13);
      uint64_t v21 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v13;
}

uint64_t sub_1002011C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = a3;
  if (*(unsigned __int8 *)(a1 + 31) == a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"State of Phy stats for handle %p is already %s", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  else
  {
    if (off_100A05AF0)
    {
      uint64_t v13 = off_100A05AF0(a1, a2, a3);
      if (!v13)
      {
        *(unsigned char *)(a1 + 31) = v3;
        *(unsigned char *)(a1 + 30) = v3 != 0;
        return v13;
      }
    }
    else
    {
      uint64_t v13 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC PhyStatsEnable failed %!", v14, v15, v16, v17, v18, v19, v20, v13);
      uint64_t v21 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v13;
}

uint64_t sub_1002012FC()
{
  if (off_100A05C90)
  {
    uint64_t v0 = off_100A05C90();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201388()
{
  if (off_100A05628)
  {
    uint64_t v0 = off_100A05628();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201414()
{
  if (off_100A05630)
  {
    uint64_t v0 = off_100A05630();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002014A0()
{
  if (off_100A05C38)
  {
    uint64_t v0 = off_100A05C38();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_10020152C()
{
  if (off_100A05AF8)
  {
    uint64_t v0 = off_100A05AF8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002015B8()
{
  if (off_100A05D48)
  {
    uint64_t v0 = off_100A05D48();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201644()
{
  if (off_100A05B10)
  {
    uint64_t v0 = off_100A05B10();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002016D0()
{
  if (off_100A05B20)
  {
    uint64_t v0 = off_100A05B20();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_10020175C()
{
  if (off_100A05B28)
  {
    uint64_t v0 = off_100A05B28();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002017E8()
{
  if (off_100A05848)
  {
    uint64_t v0 = off_100A05848();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201874()
{
  if (off_100A05B50)
  {
    uint64_t v0 = off_100A05B50();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201944()
{
  if (off_100A05B58)
  {
    uint64_t v0 = off_100A05B58();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002019D0()
{
  if (off_100A05D18)
  {
    uint64_t v0 = off_100A05D18();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201A5C()
{
  if (off_100A05D20)
  {
    uint64_t v0 = off_100A05D20();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201AE8()
{
  if (off_100A05D50)
  {
    uint64_t v0 = off_100A05D50();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201B74(uint64_t a1, uint64_t a2)
{
  if (off_100A05C78)
  {
    uint64_t v2 = off_100A05C78(a1, a2);
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_100201C18()
{
  if (off_100A05C80)
  {
    uint64_t v0 = off_100A05C80();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201CA4(unsigned int a1, __int16 a2, uint64_t a3, unsigned int a4)
{
  if ((dword_100A05428 - 1) > 0x7CE || (uint64_t v4 = 101, (a2 & 0x8000) == 0) && a1 <= 4 && a3 && a4 <= 0xE6)
  {
    if (off_100A05D58)
    {
      uint64_t v4 = off_100A05D58();
      if (!v4) {
        return v4;
      }
    }
    else
    {
      uint64_t v4 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v4;
}

uint64_t sub_100201D60(uint64_t a1, int a2)
{
  if ((dword_100A05428 - 1) <= 0x7CE && (!a1 || a2 != 250 && a2 != 210)) {
    return 101;
  }
  if (off_100A05D60)
  {
    uint64_t v2 = off_100A05D60();
    if (!v2) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v2;
}

uint64_t sub_100201E1C(unsigned int a1, uint64_t a2, unsigned int a3)
{
  if ((dword_100A05428 - 1) > 0x7CE || (uint64_t v3 = 101, a1 <= 0x18) && a2 && a3 <= 0xCF)
  {
    if (off_100A05D68)
    {
      uint64_t v3 = off_100A05D68();
      if (!v3) {
        return v3;
      }
    }
    else
    {
      uint64_t v3 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v3;
}

uint64_t sub_100201ED4()
{
  if (off_100A05D78)
  {
    uint64_t v0 = off_100A05D78();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201F60()
{
  if (off_100A05DA8)
  {
    uint64_t v0 = off_100A05DA8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100201FEC()
{
  if (off_100A05D80)
  {
    uint64_t v0 = off_100A05D80();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202078()
{
  if (off_100A05DB0)
  {
    uint64_t v0 = off_100A05DB0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202104()
{
  if (off_100A05D88)
  {
    uint64_t v0 = off_100A05D88();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202190()
{
  if (off_100A05D90)
  {
    uint64_t v0 = off_100A05D90();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_10020221C()
{
  if (off_100A05D98)
  {
    uint64_t v0 = off_100A05D98();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002022A8()
{
  if (off_100A05DA0)
  {
    uint64_t v0 = off_100A05DA0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202334(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05D70)
  {
    uint64_t v1 = off_100A05D70();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1002023CC()
{
  if (off_100A05DB8)
  {
    uint64_t v0 = off_100A05DB8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202458(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05DC0)
  {
    uint64_t v1 = off_100A05DC0();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1002024F0(uint64_t a1)
{
  if (!a1) {
    return 101;
  }
  if (off_100A05DC8)
  {
    uint64_t v1 = off_100A05DC8();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v2, v3, v4, v5, v6, v7, v8, v1);
    uint64_t v9 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_100202588()
{
  if (off_100A05DD0)
  {
    uint64_t v0 = off_100A05DD0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202614(uint64_t a1)
{
  if (!a1 || !*(void *)(a1 + 8) || !*(void *)(a1 + 32)) {
    return 101;
  }
  if (off_100A05E18)
  {
    uint64_t v1 = off_100A05E18();
    if (!v1) {
      return v1;
    }
  }
  else
  {
    uint64_t v1 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"%s failed %!", v3, v4, v5, v6, v7, v8, v9, (uint64_t)"BT_VSC_AddToFilterAcceptListUnified");
    uint64_t v10 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v1;
}

uint64_t sub_1002026C0()
{
  if (off_100A05DD8)
  {
    uint64_t v0 = off_100A05DD8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_10020274C(unsigned int a1, uint64_t a2)
{
  uint64_t v2 = 101;
  if (a1 <= 0x1E && a2)
  {
    if (off_100A05DE0)
    {
      uint64_t v2 = off_100A05DE0();
      if (!v2) {
        return v2;
      }
    }
    else
    {
      uint64_t v2 = 3601;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"VSC failed %!", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v2;
}

uint64_t sub_1002027E8(unsigned int a1, const void *a2, unsigned int a3, uint64_t (*a4)(void, void, void, void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = sub_10019343C(a1, a2, a3, a4, a5, a6, a7, a8, a5, v18);
  if (v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"%s failed %!", v9, v10, v11, v12, v13, v14, v15, (uint64_t)"BT_VSC_sendRawHCIcmd");
      uint64_t v16 = sub_100050B4C(0x54u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v8;
}

uint64_t sub_10020286C()
{
  if (off_100A05DF0)
  {
    uint64_t v0 = off_100A05DF0();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_1002028F8()
{
  if (off_100A05DF8)
  {
    uint64_t v0 = off_100A05DF8();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202984()
{
  if (off_100A05E00)
  {
    uint64_t v0 = off_100A05E00();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202A10()
{
  if (off_100A05E20)
  {
    uint64_t v0 = off_100A05E20();
    if (!v0) {
      return v0;
    }
  }
  else
  {
    uint64_t v0 = 3601;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"VSC failed %!", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x54u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v0;
}

uint64_t sub_100202A9C()
{
  byte_100A06000 = 0;
  qword_100A06010 = 0;
  return 0;
}

uint64_t sub_100202AB4(char *a1)
{
  *(_DWORD *)a1 = 0;
  if (sub_1001F19D0(2)) {
    *a1 |= 1u;
  }
  if (sub_1001F19D0(1)) {
    *a1 |= 2u;
  }
  if (sub_1001F19D0(3)) {
    *a1 |= 8u;
  }
  if (sub_1001F19D0(4)) {
    *a1 |= 0x10u;
  }
  int v2 = sub_1001F1A9C();
  char v3 = *a1;
  if (v2) {
    char v3 = *a1 | 0x20;
  }
  *a1 = v3 | 0x80;
  a1[1] |= 2u;
  return 0;
}

uint64_t sub_100202B64()
{
  if (((byte_100A06000 + 1) & 0x100) != 0) {
    unsigned __int8 v0 = byte_100A06000 + 2;
  }
  else {
    unsigned __int8 v0 = byte_100A06000 + 1;
  }
  byte_100A06000 = v0;
  return v0;
}

uint64_t sub_100202B88(unsigned int *a1, int a2)
{
  v6[1] = &v7;
  uint64_t v7 = a1;
  v6[0] = (const void *)8;
  uint64_t v3 = sub_1001E6484(a1);
  sub_100026DB4(*(unsigned int *)(v3 + 84));
  *(_DWORD *)(sub_1001E6484(v7) + 84) = 0;
  uint64_t v4 = sub_1001E6484(v7);
  return sub_1000268E4((uint64_t)sub_100202C04, v6, a2, (int *)(v4 + 84));
}

void sub_100202C04(uint64_t a1)
{
  uint64_t v1 = **(unsigned int ***)(a1 + 8);
  if (*v1)
  {
    *(_DWORD *)(sub_1001E6484(**(unsigned int ***)(a1 + 8)) + 84) = 0;
    switch(*(unsigned char *)(sub_1001E6484(v1) + 16))
    {
      case 1:
        if (!sub_100058654()) {
          goto LABEL_18;
        }
        sub_100056E24((uint64_t)"Timeout waiting for CONNECT_RSP", v18, v19, v20, v21, v22, v23, v24, v42);
        uint64_t v25 = sub_100050B4C(0x2Fu);
        if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          goto LABEL_18;
        }
        goto LABEL_17;
      case 3:
      case 5:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Timeout waiting for CONFIG_RSP", v2, v3, v4, v5, v6, v7, v8, v42);
          uint64_t v9 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
            goto LABEL_17;
          }
        }
        goto LABEL_18;
      case 6:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Timeout waiting for DISCONNECT_RSP", v34, v35, v36, v37, v38, v39, v40, v42);
          uint64_t v41 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
LABEL_17:
          }
            sub_100744F6C();
        }
LABEL_18:
        sub_1001DF3FC((uint64_t)v1, 559);
        break;
      default:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Timeout for unknown message type!", v26, v27, v28, v29, v30, v31, v32, v42);
          uint64_t v33 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            goto LABEL_8;
          }
        }
        break;
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Timer expired, but channel %p is not used any more.", v10, v11, v12, v13, v14, v15, v16, (uint64_t)v1);
    uint64_t v17 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
LABEL_8:
    }
      sub_100744F6C();
  }
}

uint64_t sub_100202DE4(unsigned int *a1)
{
  uint64_t v2 = sub_1001E6484(a1);
  uint64_t v3 = sub_100026DB4(*(unsigned int *)(v2 + 84));
  *(_DWORD *)(sub_1001E6484(a1) + 84) = 0;
  return v3;
}

uint64_t sub_100202E24(unsigned char *a1, unsigned int a2, unsigned int *a3, unsigned char *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v118 = 0;
  int v119 = 0;
  ptr = 0;
  uint64_t result = sub_100204460((uint64_t *)&ptr, 107, a2, a5);
  if (result) {
    return result;
  }
  uint64_t v114 = a3;
  char v115 = a5;
  uint64_t v116 = a4;
  int v15 = 0;
  LOBYTE(a3) = 0;
  LOBYTE(v16) = 0;
  int v119 = &a9;
  while (2)
  {
    switch(*a1)
    {
      case 'a':
        uint64_t v17 = v119++;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_157:
          uint64_t v78 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_159:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 626, v78);
        }
        if (WORD1(v118) - WORD2(v118) <= 1) {
          goto LABEL_157;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v78 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_159;
        }
        LODWORD(a3) = *(_DWORD *)v17;
        *((unsigned char *)ptr + WORD2(v118)) = *(_DWORD *)v17;
        unsigned int v16 = a3 >> 8;
        *((unsigned char *)ptr + WORD2(v118) + 1) = BYTE1(a3);
        WORD2(v118) += 2;
        v15 += 2;
        goto LABEL_136;
      case 'b':
      case 'e':
      case 'g':
      case 'h':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'n':
      case 'p':
      case 'q':
        goto LABEL_136;
      case 'c':
        uint64_t v18 = v119++;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_161:
          uint64_t v79 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_163:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 633, v79);
        }
        uint64_t v19 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_161;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v79 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_163;
        }
        LOBYTE(v16) = 0;
        LODWORD(a3) = *(_DWORD *)v18;
        ++WORD2(v118);
        *((unsigned char *)ptr + v19) = (_BYTE)a3;
        ++v15;
        goto LABEL_136;
      case 'd':
        uint64_t v42 = v119++;
        uint64_t v43 = (const void *)*v42;
        int v119 = v42 + 2;
        int v44 = *((_DWORD *)v42 + 2);
        uint64_t v45 = (char *)ptr;
        uint64_t v46 = WORD2(v118);
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          int v47 = 0;
        }
        else
        {
          int v47 = WORD1(v118) - WORD2(v118);
        }
        if (v47 < (unsigned __int16)v44)
        {
          unsigned int v80 = "ByteStream_NumReadBytesAvail(bs) >= (count)";
          goto LABEL_166;
        }
        if (BYTE6(v118) != 2)
        {
          unsigned int v80 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_166:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 723, v80);
        }
        v15 += v44;
        memmove(&v45[v46], v43, (unsigned __int16)v44);
        WORD2(v118) += v44;
LABEL_136:
        ++a1;
        continue;
      case 'f':
        uint64_t v20 = v119++;
        uint64_t v21 = (unsigned char *)*v20;
        if (!v21) {
          goto LABEL_136;
        }
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_168:
          unsigned __int16 v81 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_170:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 659, v81);
        }
        uint64_t v22 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_168;
        }
        if (BYTE6(v118) != 2)
        {
          unsigned __int16 v81 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_170;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v22) = 2;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_172:
          __int16 v82 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_174:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 661, v82);
        }
        uint64_t v23 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_172;
        }
        if (BYTE6(v118) != 2)
        {
          __int16 v82 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_174;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v23) = 2;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_176:
          char v83 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_177:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 663, v83);
        }
        uint64_t v24 = WORD2(v118);
        if (WORD1(v118) - WORD2(v118) <= 1) {
          goto LABEL_176;
        }
        if (BYTE6(v118) != 2)
        {
          char v83 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_177;
        }
LABEL_75:
        *((unsigned char *)ptr + v24) = *v21;
        *((unsigned char *)ptr + WORD2(v118) + 1) = v21[1];
        WORD2(v118) += 2;
        v15 += 4;
        goto LABEL_136;
      case 'm':
        uint64_t v48 = v119++;
        uint64_t v21 = (unsigned char *)*v48;
        if (!v21) {
          goto LABEL_136;
        }
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_227:
          uint64_t v96 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_229:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 643, v96);
        }
        uint64_t v49 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_227;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v96 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_229;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v49) = 1;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_231:
          uint64_t v97 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_233:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 645, v97);
        }
        uint64_t v50 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_231;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v97 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_233;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v50) = 2;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_235:
          uint64_t v98 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_237:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 647, v98);
        }
        uint64_t v24 = WORD2(v118);
        if (WORD1(v118) - WORD2(v118) <= 1) {
          goto LABEL_235;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v98 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_237;
        }
        goto LABEL_75;
      case 'o':
        uint64_t v25 = (char **)v119++;
        uint64_t v26 = *v25;
        if (!v26) {
          goto LABEL_136;
        }
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_179:
          uint64_t v84 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_181:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 756, v84);
        }
        uint64_t v27 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_179;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v84 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_181;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v27) = 5;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_183:
          uint64_t v85 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_185:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 758, v85);
        }
        uint64_t v28 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_183;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v85 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_185;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v28) = 1;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_187:
          uint64_t v86 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_189:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 760, v86);
        }
        uint64_t v29 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_187;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v86 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_189;
        }
        char v30 = *v26;
        ++WORD2(v118);
        *((unsigned char *)ptr + v29) = v30;
        v15 += 3;
        goto LABEL_136;
      case 'r':
        uint64_t v51 = (char **)v119++;
        uint64_t v52 = *v51;
        if (!v52) {
          goto LABEL_136;
        }
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_239:
          uint64_t v99 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_241:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 675, v99);
        }
        uint64_t v53 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_239;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v99 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_241;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v53) = 4;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_243:
          uint64_t v100 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_245:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 677, v100);
        }
        uint64_t v54 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_243;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v100 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_245;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v54) = 9;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_247:
          __int16 v101 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_249:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 679, v101);
        }
        uint64_t v55 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_247;
        }
        if (BYTE6(v118) != 2)
        {
          __int16 v101 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_249;
        }
        char v56 = *v52;
        ++WORD2(v118);
        *((unsigned char *)ptr + v55) = v56;
        uint64_t v57 = (char **)v119++;
        BOOL v58 = *v57;
        if (*v57)
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_251:
            uint64_t v102 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_253:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 684, v102);
          }
          unsigned int v59 = WORD2(v118);
          if (WORD1(v118) <= WORD2(v118)) {
            goto LABEL_251;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v102 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_253;
          }
          char v60 = *v58;
        }
        else
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_271:
            uint64_t v107 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_273:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 686, v107);
          }
          unsigned int v59 = WORD2(v118);
          if (WORD1(v118) <= WORD2(v118)) {
            goto LABEL_271;
          }
          char v60 = (char)a3;
          if (BYTE6(v118) != 2)
          {
            uint64_t v107 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_273;
          }
        }
        WORD2(v118) = v59 + 1;
        *((unsigned char *)ptr + v59) = v60;
        uint64_t v61 = (char **)v119++;
        uint64_t v62 = *v61;
        if (*v61)
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_255:
            uint64_t v103 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_257:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 690, v103);
          }
          unsigned int v63 = WORD2(v118);
          if (WORD1(v118) <= WORD2(v118)) {
            goto LABEL_255;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v103 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_257;
          }
          char v64 = *v62;
        }
        else
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_275:
            uint64_t v108 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_277:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 692, v108);
          }
          unsigned int v63 = WORD2(v118);
          if (WORD1(v118) <= WORD2(v118)) {
            goto LABEL_275;
          }
          char v64 = (char)a3;
          if (BYTE6(v118) != 2)
          {
            uint64_t v108 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_277;
          }
        }
        WORD2(v118) = v63 + 1;
        *((unsigned char *)ptr + v63) = v64;
        uint64_t v65 = v119++;
        uint64_t v66 = (unsigned char *)*v65;
        if (v66)
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_259:
            uint64_t v104 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_261:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 697, v104);
          }
          if (WORD1(v118) - WORD2(v118) <= 1) {
            goto LABEL_259;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v104 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_261;
          }
          *((unsigned char *)ptr + WORD2(v118)) = *v66;
          char v67 = v66[1];
        }
        else
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_279:
            uint64_t v109 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_281:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 699, v109);
          }
          if (WORD1(v118) - WORD2(v118) <= 1) {
            goto LABEL_279;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v109 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_281;
          }
          *((unsigned char *)ptr + WORD2(v118)) = (_BYTE)a3;
          char v67 = v16;
        }
        *((unsigned char *)ptr + WORD2(v118) + 1) = v67;
        unsigned __int16 v68 = WORD2(v118) + 2;
        WORD2(v118) += 2;
        uint64_t v69 = v119++;
        uint64_t v70 = (unsigned char *)*v69;
        if (v70)
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_263:
            uint64_t v105 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_265:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 703, v105);
          }
          if (WORD1(v118) - v68 <= 1) {
            goto LABEL_263;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v105 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_265;
          }
          *((unsigned char *)ptr + v68) = *v70;
          char v71 = v70[1];
        }
        else
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_283:
            uint64_t v110 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_285:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 705, v110);
          }
          if (WORD1(v118) - v68 <= 1) {
            goto LABEL_283;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v110 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_285;
          }
          *((unsigned char *)ptr + v68) = (_BYTE)a3;
          char v71 = v16;
        }
        *((unsigned char *)ptr + WORD2(v118) + 1) = v71;
        unsigned __int16 v72 = WORD2(v118) + 2;
        WORD2(v118) += 2;
        uint64_t v73 = v119++;
        uint64_t v74 = (unsigned char *)*v73;
        if (v74)
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_267:
            uint64_t v106 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_269:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 709, v106);
          }
          if (WORD1(v118) - v72 <= 1) {
            goto LABEL_267;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v106 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_269;
          }
          *((unsigned char *)ptr + v72) = *v74;
          char v75 = v74[1];
        }
        else
        {
          if (HIBYTE(v118))
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_287:
            uint64_t v111 = "ByteStream_NumReadBytesAvail(bs) >= 2";
LABEL_289:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 711, v111);
          }
          if (WORD1(v118) - v72 <= 1) {
            goto LABEL_287;
          }
          if (BYTE6(v118) != 2)
          {
            uint64_t v111 = "(bs).__RWFlag == BYTESTREAM_WRITE";
            goto LABEL_289;
          }
          *((unsigned char *)ptr + v72) = (_BYTE)a3;
          char v75 = v16;
        }
        *((unsigned char *)ptr + WORD2(v118) + 1) = v75;
        WORD2(v118) += 2;
        v15 += 11;
        goto LABEL_136;
      case 's':
        uint64_t v31 = (char **)v119++;
        uint64_t v32 = *v31;
        if (!v32) {
          goto LABEL_136;
        }
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_191:
          uint64_t v87 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_193:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 732, v87);
        }
        uint64_t v33 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_191;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v87 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_193;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v33) = 3;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_195:
          uint64_t v88 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_197:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 734, v88);
        }
        uint64_t v34 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_195;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v88 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_197;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v34) = 22;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_199:
          uint64_t v89 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_201:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 736, v89);
        }
        uint64_t v35 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_199;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v89 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_201;
        }
        ++WORD2(v118);
        *((unsigned char *)ptr + v35) = 0;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_203:
          uint64_t v90 = "ByteStream_NumReadBytesAvail(bs) >= 1";
LABEL_205:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 738, v90);
        }
        uint64_t v36 = WORD2(v118);
        if (WORD1(v118) <= WORD2(v118)) {
          goto LABEL_203;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v90 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_205;
        }
        char v37 = *v32;
        ++WORD2(v118);
        *((unsigned char *)ptr + v36) = v37;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_207:
          uint64_t v91 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_209:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 740, v91);
        }
        if (WORD1(v118) - WORD2(v118) <= 3) {
          goto LABEL_207;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v91 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_209;
        }
        *((unsigned char *)ptr + WORD2(v118)) = 0;
        *(_WORD *)((char *)ptr + WORD2(v118) + 1) = 0;
        *((unsigned char *)ptr + WORD2(v118) + 3) = 0;
        unsigned __int16 v38 = WORD2(v118) + 4;
        WORD2(v118) += 4;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_211:
          uint64_t v92 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_213:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 741, v92);
        }
        if (WORD1(v118) - v38 <= 3) {
          goto LABEL_211;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v92 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_213;
        }
        *((unsigned char *)ptr + v38) = 0;
        *(_WORD *)((char *)ptr + WORD2(v118) + 1) = 0;
        *((unsigned char *)ptr + WORD2(v118) + 3) = 0;
        unsigned __int16 v39 = WORD2(v118) + 4;
        WORD2(v118) += 4;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_215:
          uint64_t v93 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_217:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 742, v93);
        }
        if (WORD1(v118) - v39 <= 3) {
          goto LABEL_215;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v93 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_217;
        }
        *((unsigned char *)ptr + v39) = 0;
        *(_WORD *)((char *)ptr + WORD2(v118) + 1) = 0;
        *((unsigned char *)ptr + WORD2(v118) + 3) = 0;
        unsigned __int16 v40 = WORD2(v118) + 4;
        WORD2(v118) += 4;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_219:
          uint64_t v94 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_221:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 743, v94);
        }
        if (WORD1(v118) - v40 <= 3) {
          goto LABEL_219;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v94 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_221;
        }
        *((unsigned char *)ptr + v40) = -1;
        *((unsigned char *)ptr + WORD2(v118) + 1) = -1;
        *((unsigned char *)ptr + WORD2(v118) + 2) = -1;
        *((unsigned char *)ptr + WORD2(v118) + 3) = -1;
        unsigned __int16 v41 = WORD2(v118) + 4;
        WORD2(v118) += 4;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_223:
          uint64_t v95 = "ByteStream_NumReadBytesAvail(bs) >= 4";
LABEL_225:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 744, v95);
        }
        if (WORD1(v118) - v41 <= 3) {
          goto LABEL_223;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v95 = "(bs).__RWFlag == BYTESTREAM_WRITE";
          goto LABEL_225;
        }
        *((unsigned char *)ptr + v41) = -1;
        *((unsigned char *)ptr + WORD2(v118) + 1) = -1;
        *((unsigned char *)ptr + WORD2(v118) + 2) = -1;
        *((unsigned char *)ptr + WORD2(v118) + 3) = -1;
        WORD2(v118) += 4;
        v15 += 24;
        goto LABEL_136;
      default:
        if (*a1) {
          goto LABEL_136;
        }
        unsigned int v76 = WORD2(v118);
        WORD2(v118) = 0;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          goto LABEL_291;
        }
        if (WORD1(v118) <= 1u)
        {
LABEL_291:
          uint64_t v112 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_293;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v112 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_293:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 776, v112);
        }
        *(unsigned char *)ptr = v15 + 4;
        *((unsigned char *)ptr + WORD2(v118) + 1) = (unsigned __int16)(v15 + 4) >> 8;
        WORD2(v118) += 2;
        if (WORD1(v118) <= 5u) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 777, "(size_t)(6) <= (size_t)((bs).__size)");
        }
        WORD2(v118) = 6;
        if (HIBYTE(v118))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          goto LABEL_296;
        }
        if (WORD1(v118) <= 7u)
        {
LABEL_296:
          uint64_t v113 = "ByteStream_NumReadBytesAvail(bs) >= 2";
          goto LABEL_298;
        }
        if (BYTE6(v118) != 2)
        {
          uint64_t v113 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_298:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 778, v113);
        }
        *((unsigned char *)ptr + 6) = v15;
        *((unsigned char *)ptr + WORD2(v118) + 1) = BYTE1(v15);
        WORD2(v118) += 2;
        if (v76 > WORD1(v118)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 779, "(size_t)(pos) <= (size_t)((bs).__size)");
        }
        WORD2(v118) = v76;
        if (BYTE6(v118) == 2) {
          WORD1(v118) = v76;
        }
        BYTE6(v118) = 15;
        if (a2 <= 6 && ((1 << a2) & 0x54) != 0)
        {
          if (!v114) {
            sub_10025B8C0();
          }
          uint64_t v77 = sub_10025B218(0x2Fu);
          if (sub_100202B88(v114, *(unsigned __int16 *)(v77 + 6)))
          {
            sub_100023010(ptr);
            return 104;
          }
          *(unsigned char *)(sub_1001E6484(v114) + 28) = v115;
        }
        return sub_100204750(v116, (uint64_t)&ptr);
    }
  }
}

uint64_t sub_100204460(uint64_t *a1, __int16 a2, char a3, char a4)
{
  __int16 v8 = a2 + 8;
  uint64_t v9 = sub_100022FE8((unsigned __int16)(a2 + 8));
  if (v9)
  {
    if (!v8) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 452, "(totalLen) > 0");
    }
    *a1 = (uint64_t)v9;
    *((_WORD *)a1 + 4) = v8;
    *((_DWORD *)a1 + 3) = 0x20000;
    *((_WORD *)a1 + 5) = v8;
    if (v8 == 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 456, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
    }
    *uint64_t v9 = a2 + 4;
    *(unsigned char *)(*a1 + *((unsigned __int16 *)a1 + 6) + 1) = (unsigned __int16)(a2 + 4) >> 8;
    unsigned __int16 v10 = *((_WORD *)a1 + 6) + 2;
    *((_WORD *)a1 + 6) = v10;
    if (*((unsigned char *)a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    }
    else if (*((unsigned __int16 *)a1 + 5) - v10 > 1)
    {
      if (*((unsigned char *)a1 + 14) == 2)
      {
        *(unsigned char *)(*a1 + v10) = 1;
        *(unsigned char *)(*a1 + *((unsigned __int16 *)a1 + 6) + 1) = 0;
        __int16 v11 = *((_WORD *)a1 + 6);
        *((_WORD *)a1 + 6) = v11 + 2;
        if (*((unsigned char *)a1 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
        }
        else if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v11 + 2))
        {
          if (*((unsigned char *)a1 + 14) == 2)
          {
            uint64_t v12 = *a1;
            *((_WORD *)a1 + 6) = v11 + 3;
            *(unsigned char *)(v12 + (unsigned __int16)(v11 + 2)) = a3;
            if (*((unsigned char *)a1 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            }
            else
            {
              uint64_t v13 = *((unsigned __int16 *)a1 + 6);
              if (*((unsigned __int16 *)a1 + 5) > v13)
              {
                if (*((unsigned char *)a1 + 14) == 2)
                {
                  uint64_t v14 = *a1;
                  *((_WORD *)a1 + 6) = v13 + 1;
                  *(unsigned char *)(v14 + v13) = a4;
                  if (*((unsigned char *)a1 + 15))
                  {
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
                  }
                  else
                  {
                    uint64_t v15 = *((unsigned __int16 *)a1 + 6);
                    if (*((unsigned __int16 *)a1 + 5) - (int)v15 > 1)
                    {
                      if (*((unsigned char *)a1 + 14) == 2)
                      {
                        uint64_t result = 0;
                        *(unsigned char *)(*a1 + v15) = a2;
                        *(unsigned char *)(*a1 + *((unsigned __int16 *)a1 + 6) + 1) = HIBYTE(a2);
                        *((_WORD *)a1 + 6) += 2;
                        return result;
                      }
                      uint64_t v20 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_35:
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 462, v20);
                    }
                  }
                  uint64_t v20 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
                  goto LABEL_35;
                }
                uint64_t v19 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_31:
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 461, v19);
              }
            }
            uint64_t v19 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
            goto LABEL_31;
          }
          uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_27:
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 460, v18);
        }
        uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
        goto LABEL_27;
      }
      uint64_t v17 = "(*pBs).__RWFlag == BYTESTREAM_WRITE";
LABEL_23:
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 457, v17);
    }
    uint64_t v17 = "ByteStream_NumReadBytesAvail(*pBs) >= 2";
    goto LABEL_23;
  }
  return 106;
}

uint64_t sub_100204750(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = (unsigned __int8 *)sub_10010CE48(0x98uLL);
  if (!v4) {
    return 106;
  }
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 40;
  sub_1000226D0((uint64_t)(v4 + 40), 1u);
  sub_100022798(v6, *(char **)a2, *(unsigned __int16 *)(a2 + 10), 1u);
  *uint64_t v5 = 1;
  *((void *)v5 + 4) = 0;
  unsigned int v7 = sub_1001F68CC((uint64_t)v5, a1, 0, 1);
  if (v7)
  {
    sub_10025C480((uint64_t)v6);
    sub_100023010(v5);
  }
  if (v7 == 412) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_100204800(unsigned char *a1, unsigned int a2, __int16 a3, __int16 a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = 0;
  if (a2 == 2)
  {
    LOWORD(v10) = a4;
    BYTE2(v10) = a5;
    uint64_t v8 = 3;
    HIBYTE(a3) = HIBYTE(a5);
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    LOBYTE(v10) = a3;
    uint64_t v8 = 1;
LABEL_5:
    *(unsigned char *)((unint64_t)&v10 | v8) = HIBYTE(a3);
  }
  return sub_100202E24("ad", 1u, 0, a1, a6, a6, a7, a8, a2);
}

uint64_t sub_1002048A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (a3 && a1)
  {
    int v10 = sub_10010CE48(0xE0uLL);
    if (v10)
    {
      uint64_t v11 = (uint64_t)v10;
      v10[152] = 8;
      *((void *)v10 + 24) = qword_100A06010;
      qword_100A06010 = (uint64_t)v10;
      if (((byte_100A06000 + 1) & 0x100) != 0) {
        char v12 = byte_100A06000 + 2;
      }
      else {
        char v12 = byte_100A06000 + 1;
      }
      byte_100A06000 = v12;
      v10[153] = v12;
      int v13 = *(_DWORD *)a3;
      *((_WORD *)v10 + 92) = *(_WORD *)(a3 + 4);
      *((_DWORD *)v10 + 45) = v13;
      *((void *)v10 + 21) = a2;
      *((void *)v10 + 25) = a1;
      *((void *)v10 + 26) = a4;
      *((_WORD *)v10 + 108) = a5;
      uint64_t v14 = sub_10017B9C4((uint64_t)sub_100204994, a3);
      if (v14) {
        sub_100204CF4(v11, 0);
      }
    }
    else
    {
      return 104;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return v14;
}

void sub_100204994(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  int v5 = a1;
  uint64_t v6 = qword_100A06010;
  if (!qword_100A06010)
  {
LABEL_7:
    if (sub_100058654()
      && (sub_100056E24((uint64_t)"Missing command tracker %:", v8, v9, v10, v11, v12, v13, v14, a2),
          uint64_t v15 = sub_100050B4C(0x2Fu),
          os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)))
    {
      sub_10074A6AC();
      if (v5) {
        return;
      }
    }
    else if (v5)
    {
      return;
    }
    sub_10017BD74((uint64_t)a3, 0x13u);
    return;
  }
  while (*(_DWORD *)(v6 + 180) != *(_DWORD *)a2 || *(unsigned __int16 *)(v6 + 184) != *(unsigned __int16 *)(a2 + 4))
  {
    uint64_t v6 = *(void *)(v6 + 192);
    if (!v6) {
      goto LABEL_7;
    }
  }
  uint64_t v43 = v6;
  if (!a1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    *(void *)(v6 + 160) = a3;
    int v16 = *(unsigned __int8 *)(v6 + 152);
    if (v16 != 8)
    {
      if (v16 != 10) {
        goto LABEL_32;
      }
      uint64_t v17 = sub_100204460(&v41, 2, 10, *(unsigned char *)(v6 + 153));
      if (!v17)
      {
        if (HIBYTE(v42))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
        }
        else
        {
          __int16 v18 = WORD2(v42);
          if (WORD1(v42) - WORD2(v42) > 1)
          {
            if (BYTE6(v42) == 2)
            {
              uint64_t v19 = (unsigned char *)(v41 + WORD2(v42));
              *uint64_t v19 = *(unsigned char *)(v6 + 200);
              v19[1] = *(unsigned char *)(v6 + 201);
              __int16 v20 = v18 + 2;
              goto LABEL_28;
            }
            char v37 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_41:
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 871, v37);
          }
        }
        char v37 = "ByteStream_NumReadBytesAvail(bs) >= 2";
        goto LABEL_41;
      }
LABEL_29:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to send command", v27, v28, v29, v30, v31, v32, v33, v39);
        uint64_t v34 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_10074932C();
        }
      }
LABEL_34:
      sub_100204CF4(v6, v17);
      return;
    }
    uint64_t v17 = sub_100204460(&v41, *(_WORD *)(v6 + 216) + 2, 8, *(unsigned char *)(v6 + 153));
    if (v17) {
      goto LABEL_29;
    }
    if (HIBYTE(v42))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    }
    else
    {
      int v21 = WORD1(v42);
      __int16 v22 = WORD2(v42);
      if (WORD1(v42) - WORD2(v42) > 1)
      {
        if (BYTE6(v42) == 2)
        {
          uint64_t v23 = v41;
          uint64_t v24 = (unsigned char *)(v41 + WORD2(v42));
          unsigned char *v24 = *(unsigned char *)(v6 + 216);
          v24[1] = *(unsigned char *)(v6 + 217);
          unsigned __int16 v25 = v22 + 2;
          size_t v26 = *(unsigned __int16 *)(v6 + 216);
          if (v21 - (unsigned __int16)(v22 + 2) < (int)v26) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 880, "ByteStream_NumReadBytesAvail(bs) >= (tracker->data.echoData.len)");
          }
          memmove((void *)(v23 + v25), *(const void **)(v6 + 208), v26);
          __int16 v20 = *(_WORD *)(v6 + 216) + v25;
LABEL_28:
          WORD2(v42) = v20;
          WORD1(v42) = v20;
          BYTE6(v42) = 15;
          uint64_t v17 = sub_100204750(a3, (uint64_t)&v41);
          if (v17) {
            goto LABEL_29;
          }
LABEL_32:
          v40[1] = &v43;
          v40[0] = (const void *)8;
          uint64_t v35 = sub_10025B218(0x2Fu);
          uint64_t v36 = sub_1000268E4((uint64_t)sub_1002054FC, v40, *(unsigned __int16 *)(v35 + 6), (int *)(v43 + 176));
          if (!v36) {
            return;
          }
          uint64_t v17 = v36;
          uint64_t v6 = v43;
          goto LABEL_34;
        }
        unsigned __int16 v38 = "(bs).__RWFlag == BYTESTREAM_WRITE";
LABEL_45:
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 879, v38);
      }
    }
    unsigned __int16 v38 = "ByteStream_NumReadBytesAvail(bs) >= 2";
    goto LABEL_45;
  }

  sub_100204CF4(v6, a1);
}

void sub_100204CF4(uint64_t a1, uint64_t a2)
{
  if (!qword_100A06010) {
    sub_10025B8C0();
  }
  uint64_t v4 = *(void *)(a1 + 160);
  if (v4) {
    sub_10017BD74(v4, 0x13u);
  }
  int v5 = &qword_100A06010;
  uint64_t v6 = qword_100A06010;
  if (qword_100A06010 == a1)
  {
LABEL_9:
    *int v5 = *(void *)(a1 + 192);
    sub_100026DB4(*(unsigned int *)(a1 + 176));
    if (a2)
    {
      uint64_t v8 = sub_100197A30(a1 + 180);
      if (sub_100197698(v8)
        || (uint64_t v9 = sub_100197A30(a1 + 180), sub_100197740(v9))
        || (uint64_t v10 = sub_100197A30(a1 + 180), sub_100197770(v10))
        || (uint64_t v11 = sub_100197A30(a1 + 180), sub_1001977A0(v11)))
      {
        int v12 = *(unsigned __int8 *)(a1 + 152);
        if (v12 == 10)
        {
          (*(void (**)(uint64_t, void, void, void, void, uint64_t))(a1 + 208))(a1 + 180, *(void *)(a1 + 168), *(unsigned __int16 *)(a1 + 200), 0, 0, a2);
        }
        else if (v12 == 8)
        {
          (*(void (**)(uint64_t, void, void, void, void, void, uint64_t))(a1 + 200))(a1 + 180, *(void *)(a1 + 168), *(void *)(a1 + 208), *(unsigned __int16 *)(a1 + 216), 0, 0, a2);
        }
        else
        {
          sub_10025B8C0();
        }
      }
    }
    sub_100023010((void *)a1);
  }
  else
  {
    while (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 192);
      if (v6 == a1)
      {
        int v5 = (uint64_t *)(v7 + 192);
        goto LABEL_9;
      }
    }
  }
}

uint64_t sub_100204E48(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a1 && a3)
  {
    uint64_t v8 = sub_10010CE48(0xE0uLL);
    if (v8)
    {
      uint64_t v9 = (uint64_t)v8;
      v8[152] = 10;
      *((void *)v8 + 24) = qword_100A06010;
      qword_100A06010 = (uint64_t)v8;
      if (((byte_100A06000 + 1) & 0x100) != 0) {
        char v10 = byte_100A06000 + 2;
      }
      else {
        char v10 = byte_100A06000 + 1;
      }
      byte_100A06000 = v10;
      v8[153] = v10;
      int v11 = *(_DWORD *)a3;
      *((_WORD *)v8 + 92) = *(_WORD *)(a3 + 4);
      *((_DWORD *)v8 + 45) = v11;
      *((void *)v8 + 21) = a2;
      *((_WORD *)v8 + 100) = a4;
      *((void *)v8 + 26) = a1;
      uint64_t v12 = sub_10017B9C4((uint64_t)sub_100204994, a3);
      if (v12) {
        sub_100204CF4(v9, 0);
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"AllocCommandTracker() failed", v14, v15, v16, v17, v18, v19, v20, v22);
        int v21 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
  return v12;
}

uint64_t sub_100204F78(unsigned int a1, uint64_t a2)
{
  uint64_t v6 = 0;
  if (sub_1001DD56C(a1, (uint64_t *)&v6)) {
    return 403;
  }
  uint64_t v4 = sub_1001E6484(v6);
  uint64_t result = 0;
  __int16 v5 = *(_WORD *)(v4 + 14);
  *(_DWORD *)a2 = *(_DWORD *)(v4 + 10);
  *(_WORD *)(a2 + 4) = v5;
  return result;
}

void sub_100204FD8(unsigned char *a1, unsigned __int16 *a2, size_t size)
{
  unsigned __int16 v68 = 0;
  if (!a1[2])
  {
    unsigned int v11 = size;
    if (size <= 3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received L2CAP header with 0 length, disc ACL", v13, v14, v15, v16, v17, v18, v19, (uint64_t)(a1 + 48));
        uint64_t v20 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_10017C104((uint64_t)(a1 + 48));
      return;
    }
    int v21 = a2;
    if (a2[1] + 4 == size)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v23 = (unsigned __int16 *)sub_100022FE8(size);
      if (!v23)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_SignalMan_Recv Malloc failed!", v51, v52, v53, v54, v55, v56, v57, v67);
          BOOL v58 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
            goto LABEL_4;
          }
        }
        return;
      }
      uint64_t v22 = v23;
      memmove(v23, v21, v11);
      int v21 = v22;
    }
    uint64_t v69 = v21;
    __int16 v70 = v11;
    int v72 = 0x10000;
    unsigned __int16 v71 = v11;
    while (1)
    {
      unsigned int v24 = v71;
      uint64_t v25 = (unsigned __int16)v72;
      if (v71 <= (unsigned __int16)v72) {
        break;
      }
      if (BYTE2(v72) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1850, "(bs).__RWFlag == BYTESTREAM_READ");
      }
      LOWORD(v72) = v72 + 1;
      if (v71 <= (unsigned __int16)(v25 + 1))
      {
        HIBYTE(v72) = 1;
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_47:
        HIBYTE(v72) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_SignalMan_Recv - %!", v59, v60, v61, v62, v63, v64, v65, 411);
          uint64_t v66 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        break;
      }
      uint64_t v26 = *((unsigned __int8 *)v69 + v25);
      LOWORD(v72) = v25 + 2;
      if (v71 - (unsigned __int16)(v25 + 2) <= 1) {
        goto LABEL_47;
      }
      uint64_t v27 = *((unsigned __int8 *)v69 + v25 + 1);
      uint64_t v28 = *(unsigned __int16 *)((char *)v69 + v25 + 2);
      unsigned __int16 v29 = v25 + 4;
      LOWORD(v72) = v29;
      if ((v26 - 18) > 0xFFFFFFEE)
      {
        if (v26 <= 0x11 && ((1 << v26) & 0x2A0AA) != 0)
        {
          if (sub_1001DDAE8((uint64_t)a1, v27, &v68)) {
            break;
          }
          sub_100202DE4(v68);
          unsigned __int16 v29 = v72;
          unsigned int v24 = v71;
        }
        unsigned int v40 = v28 + v29;
        if (v40 <= v24)
        {
          qword_10099F090[v26](&v69, v27, v28, a1);
          if (v40 > v71) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1895, "(size_t)(endSignalPos) <= (size_t)((bs).__size)");
          }
        }
        else
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"%! - Signalling packet length error", v41, v42, v43, v44, v45, v46, v47, 411);
            uint64_t v48 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
            {
              uint64_t v50 = sub_100050714();
              *(_DWORD *)long long buf = 136446466;
              uint64_t v74 = v50;
              __int16 v75 = 1024;
              int v76 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          LOWORD(v40) = v71;
        }
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unrecognized command (%d), sending CommandReject", v30, v31, v32, v33, v34, v35, v36, v26);
          char v37 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            uint64_t v49 = sub_100050714();
            *(_DWORD *)long long buf = 136446466;
            uint64_t v74 = v49;
            __int16 v75 = 1024;
            int v76 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
        *(_DWORD *)long long buf = 0;
        sub_100202E24("ad", 1u, 0, a1, v27, v34, v35, v36, 0);
        if (HIBYTE(v72))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          int v38 = 0;
        }
        else
        {
          int v38 = v71 - (unsigned __int16)v72;
        }
        if (v38 < (int)v28)
        {
          HIBYTE(v72) = 1;
LABEL_51:
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          break;
        }
        LOWORD(v40) = v72 + v28;
      }
      LOWORD(v72) = v40;
      if (HIBYTE(v72)) {
        goto LABEL_51;
      }
    }
    if (v22) {
      sub_100023010(v22);
    }
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Signalling channel should only be used by ACL handles.", v3, v4, v5, v6, v7, v8, v9, v67);
    char v10 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
LABEL_4:
    }
      sub_100744F6C();
  }
}

void *sub_1002054E4(void *result)
{
  off_100A06008 = result;
  return result;
}

void sub_1002054F0()
{
  off_100A06008 = 0;
}

void sub_1002054FC(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  if (*(unsigned char *)(v1 + 152) == 8) {
    uint64_t v2 = 440;
  }
  else {
    uint64_t v2 = 441;
  }
  sub_100204CF4(v1, v2);
}

void sub_100205518(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  qmemcpy(v74, "IOIOIO", sizeof(v74));
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v8 = 0;
  }
  else
  {
    int v8 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v8 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1006, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1009, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v73 = 0;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_10:
    *(unsigned char *)(a1 + 15) = 1;
    __int16 v10 = 20297;
    goto LABEL_11;
  }
  uint64_t v9 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) - (int)v9 < 2) {
    goto LABEL_10;
  }
  __int16 v10 = *(_WORD *)(*(void *)a1 + v9);
  *(_WORD *)(a1 + 12) = v9 + 2;
LABEL_11:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Received Command Reject, identifier %d, handle %d, reason %d", v11, v12, v13, v14, v15, v16, v17, a2);
    uint64_t v18 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  if (v10 == 2)
  {
    if (*(unsigned char *)(a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1020, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      int v27 = *(unsigned __int8 *)(a1 + 14);
      *(unsigned char *)(a1 + 15) = 1;
      if (v27 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1021, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
    }
    else
    {
      uint64_t v36 = *(unsigned __int16 *)(a1 + 12);
      if (*(unsigned __int16 *)(a1 + 10) - (int)v36 > 1)
      {
        v74[1] = *(_WORD *)(*(void *)a1 + v36);
        *(_WORD *)(a1 + 12) = v36 + 2;
        if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v36 + 2) >= 2)
        {
          v74[0] = *(_WORD *)(*(void *)a1 + (unsigned __int16)(v36 + 2));
          *(_WORD *)(a1 + 12) = v36 + 4;
LABEL_42:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"  Rejected - invalid CID, localCID %d, remoteCID %d", v46, v47, v48, v49, v50, v51, v52, v74[1]);
            uint64_t v53 = sub_100050B4C(0x2Fu);
            if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
              goto LABEL_44;
            }
          }
          goto LABEL_45;
        }
LABEL_41:
        *(unsigned char *)(a1 + 15) = 1;
        goto LABEL_42;
      }
      *(unsigned char *)(a1 + 15) = 1;
    }
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    goto LABEL_41;
  }
  if (v10 == 1)
  {
    if (*(unsigned char *)(a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1016, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    }
    else
    {
      uint64_t v37 = *(unsigned __int16 *)(a1 + 12);
      if (*(unsigned __int16 *)(a1 + 10) - (int)v37 >= 2)
      {
        v74[2] = *(_WORD *)(*(void *)a1 + v37);
        *(_WORD *)(a1 + 12) = v37 + 2;
LABEL_36:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"  Rejected - MTU exceeded, max MTU = %d", v38, v39, v40, v41, v42, v43, v44, v74[2]);
          uint64_t v45 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            goto LABEL_44;
          }
        }
        goto LABEL_45;
      }
    }
    *(unsigned char *)(a1 + 15) = 1;
    goto LABEL_36;
  }
  if (v10)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"  Rejected - unknown reason code", v28, v29, v30, v31, v32, v33, v34, v72);
      uint64_t v35 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        goto LABEL_44;
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"  Rejected - Command not understood", v19, v20, v21, v22, v23, v24, v25, v72);
    uint64_t v26 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
LABEL_44:
    }
      sub_100744F6C();
  }
LABEL_45:
  if (*(unsigned char *)(a1 + 15))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SignalMan_RecvCommandReject - %!", v54, v55, v56, v57, v58, v59, v60, 411);
      uint64_t v61 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (sub_1001DDAE8(a4, a2, &v73))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No channel found for identifier %d, ignoring command reject packet", v62, v63, v64, v65, v66, v67, v68, a2);
      uint64_t v69 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (*v73 == 2)
  {
    uint64_t v70 = sub_1001E6484(v73);
    if (*(_DWORD *)(a4 + 48) != *(_DWORD *)(v70 + 10)
      || *(unsigned __int16 *)(a4 + 52) != *(unsigned __int16 *)(v70 + 14))
    {
      sub_10025B8C0();
    }
    sub_1001DF3FC((uint64_t)v73, 445);
  }
}

void sub_100205A14(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v14 = 771;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1067, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  unsigned __int16 v13 = 0;
  if (!sub_10025A86C((uint64_t *)a1, 1u, (uint64_t)&v14, 2u, a5, a6, a7, a8, (uint64_t)&v13)) {
    sub_1001E2774(a4, v13, 0, a2);
  }
}

void sub_100205AEC(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v14 = 50529027;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1089, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  __int16 v13 = 0;
  if (!sub_10025A86C((uint64_t *)a1, 1u, (uint64_t)&v14, 4u, a5, a6, a7, a8, (uint64_t)&v13)) {
    sub_1001E2BD8(a4, 0, v13, 0, 0, a2);
  }
}

void sub_100205BDC(uint64_t *a1, char a2, unsigned int a3, uint64_t a4)
{
  memset(v132, 0, 44);
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v8 = 0;
  }
  else
  {
    int v8 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
  }
  if (v8 < (int)a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1158, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1164, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v9 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v10 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v10 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1165, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_13;
  }
  if (*((unsigned __int16 *)a1 + 5) - (int)v9 <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_13:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    unsigned __int16 v127 = 0;
    goto LABEL_14;
  }
  unsigned __int16 v127 = *(_WORD *)(*a1 + v9);
  *((_WORD *)a1 + 6) = v9 + 2;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v9 + 2) >= 2)
  {
    char v11 = *(unsigned char *)(*a1 + (unsigned __int16)(v9 + 2));
    *((_WORD *)a1 + 6) = v9 + 4;
    goto LABEL_15;
  }
LABEL_14:
  char v11 = 0;
  *((unsigned char *)a1 + 15) = 1;
LABEL_15:
  unsigned int v130 = v9 + a3;
  if (a3 <= 3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Bogus length in configuration request - must be corrupt packet", v13, v14, v15, v16, v17, v18, v19, v125);
      uint64_t v20 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_10074A7AC();
      }
    }
    uint64_t v12 = 411;
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v128 = a4;
  char v126 = a2;
  unsigned int v21 = *((unsigned __int16 *)a1 + 6);
  unsigned int v22 = v130;
  if (v130 > v21)
  {
    unsigned __int16 v129 = 0;
    uint64_t v23 = 0;
    LOBYTE(v24) = 0;
    int __len = 0;
    while (1)
    {
      if (*((unsigned char *)a1 + 15)) {
        goto LABEL_133;
      }
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1179, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      unsigned int v25 = *((unsigned __int16 *)a1 + 5);
      if (v25 <= v21) {
        break;
      }
      uint64_t v26 = *a1;
      uint64_t v27 = v21 + 1;
      *((_WORD *)a1 + 6) = v27;
      char v28 = *(unsigned char *)(v26 + v21);
      if (v25 <= v27)
      {
        LOBYTE(v24) = v28;
        goto LABEL_30;
      }
      uint64_t v29 = *a1;
      *((_WORD *)a1 + 6) = v21 + 2;
      int __len = *(unsigned __int8 *)(v29 + v27);
      int v30 = 1;
LABEL_31:
      uint64_t v24 = v28 & 0x7F;
      switch(v28 & 0x7F)
      {
        case 1:
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1190, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (v30)
          {
            uint64_t v31 = *((unsigned __int16 *)a1 + 6);
            if (*((unsigned __int16 *)a1 + 5) - (int)v31 >= 2)
            {
              WORD2(v132[0]) = *(_WORD *)(*a1 + v31);
              *((_WORD *)a1 + 6) = v31 + 2;
              goto LABEL_90;
            }
          }
          else
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          }
          *((unsigned char *)a1 + 15) = 1;
LABEL_90:
          LODWORD(v132[0]) |= 1u;
          goto LABEL_113;
        case 2:
          LODWORD(v132[0]) |= 2u;
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1194, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if ((v30 & 1) == 0) {
            goto LABEL_111;
          }
          uint64_t v44 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) - (int)v44 < 2) {
            goto LABEL_112;
          }
          WORD3(v132[0]) = *(_WORD *)(*a1 + v44);
          goto LABEL_81;
        case 3:
          LODWORD(v132[0]) |= 4u;
          if ((v30 & 1) == 0)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_83:
            *((unsigned char *)a1 + 15) = 1;
            if (*((unsigned char *)a1 + 14) != 1) {
LABEL_175:
            }
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1199, "(*pBs).__RWFlag == BYTESTREAM_READ");
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            goto LABEL_85;
          }
          uint64_t v45 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) <= v45) {
            goto LABEL_83;
          }
          uint64_t v46 = v45 + 1;
          *((_WORD *)a1 + 6) = v45 + 1;
          if (*((unsigned char *)a1 + 14) != 1) {
            goto LABEL_175;
          }
          unsigned int v47 = *((unsigned __int16 *)a1 + 5);
          if (v47 > v46)
          {
            uint64_t v48 = *a1;
            int v49 = v45 + 2;
            *((_WORD *)a1 + 6) = v49;
            BYTE8(v132[0]) = *(unsigned char *)(v48 + v46);
            int v50 = v47 - v49;
            goto LABEL_86;
          }
LABEL_85:
          *((unsigned char *)a1 + 15) = 1;
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
          int v50 = 0;
LABEL_86:
          if (v50 < __len - 2) {
            goto LABEL_112;
          }
          __int16 v57 = *((_WORD *)a1 + 6) + __len - 2;
          goto LABEL_123;
        case 4:
          LODWORD(v132[0]) |= 8u;
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1204, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (!v30)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v65 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v65 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1205, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_101:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v68 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v68 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1206, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_102:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v69 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v69 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1207, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_103:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v70 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v70 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1208, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_104:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v71 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v71 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1209, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
            goto LABEL_111;
          }
          uint64_t v51 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) <= v51)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_101;
          }
          uint64_t v52 = *a1;
          *((_WORD *)a1 + 6) = v51 + 1;
          BYTE10(v132[0]) = *(unsigned char *)(v52 + v51);
          if (*((unsigned __int16 *)a1 + 5) <= (v51 + 1))
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_102;
          }
          uint64_t v53 = *a1;
          uint64_t v54 = v51 + 2;
          *((_WORD *)a1 + 6) = v51 + 2;
          BYTE11(v132[0]) = *(unsigned char *)(v53 + v51 + 1);
          if (*((unsigned __int16 *)a1 + 5) <= (v51 + 2))
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_103;
          }
          uint64_t v55 = *a1;
          unsigned __int16 v56 = v51 + 3;
          *((_WORD *)a1 + 6) = v56;
          BYTE12(v132[0]) = *(unsigned char *)(v55 + v54);
          if (*((unsigned __int16 *)a1 + 5) - v56 <= 1)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_104;
          }
          HIWORD(v132[0]) = *(_WORD *)(*a1 + v56);
          *((_WORD *)a1 + 6) = v56 + 2;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v56 + 2) <= 1)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_111;
          }
          LOWORD(v132[1]) = *(_WORD *)(*a1 + (unsigned __int16)(v56 + 2));
          *((_WORD *)a1 + 6) = v56 + 4;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v56 + 4) < 2) {
            goto LABEL_112;
          }
          WORD1(v132[1]) = *(_WORD *)(*a1 + (unsigned __int16)(v56 + 4));
          __int16 v57 = v56 + 6;
          goto LABEL_123;
        case 5:
          LODWORD(v132[0]) |= 0x10u;
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1212, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if ((v30 & 1) == 0) {
            goto LABEL_111;
          }
          uint64_t v58 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) <= v58) {
            goto LABEL_112;
          }
          uint64_t v59 = *a1;
          *((_WORD *)a1 + 6) = v58 + 1;
          BYTE4(v132[1]) = *(unsigned char *)(v59 + v58);
          goto LABEL_113;
        case 6:
          LODWORD(v132[0]) |= 0x20u;
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1215, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if (!v30)
          {
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v66 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v66 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1216, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_107:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v72 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v72 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1217, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_108:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v73 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v73 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1218, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_109:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v74 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v74 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1219, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_110:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            int v75 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v75 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1220, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
LABEL_111:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
            goto LABEL_112;
          }
          uint64_t v60 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) <= v60)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_107;
          }
          uint64_t v61 = *a1;
          uint64_t v62 = v60 + 1;
          *((_WORD *)a1 + 6) = v60 + 1;
          BYTE8(v132[1]) = *(unsigned char *)(v61 + v60);
          if (*((unsigned __int16 *)a1 + 5) <= (v60 + 1))
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_108;
          }
          uint64_t v63 = *a1;
          unsigned __int16 v64 = v60 + 2;
          *((_WORD *)a1 + 6) = v64;
          BYTE9(v132[1]) = *(unsigned char *)(v63 + v62);
          if (*((unsigned __int16 *)a1 + 5) - v64 <= 1)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_109;
          }
          WORD5(v132[1]) = *(_WORD *)(*a1 + v64);
          *((_WORD *)a1 + 6) = v64 + 2;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v64 + 2) <= 3)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_110;
          }
          HIDWORD(v132[1]) = *(_DWORD *)(*a1 + (unsigned __int16)(v64 + 2));
          *((_WORD *)a1 + 6) = v64 + 6;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v64 + 6) <= 3)
          {
            *((unsigned char *)a1 + 15) = 1;
            goto LABEL_111;
          }
          LODWORD(v132[2]) = *(_DWORD *)(*a1 + (unsigned __int16)(v64 + 6));
          *((_WORD *)a1 + 6) = v64 + 10;
          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v64 + 10) < 4) {
            goto LABEL_112;
          }
          DWORD1(v132[2]) = *(_DWORD *)(*a1 + (unsigned __int16)(v64 + 10));
          __int16 v57 = v64 + 14;
          goto LABEL_123;
        case 7:
          LODWORD(v132[0]) |= 0x40u;
          if (*((unsigned char *)a1 + 14) != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1223, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          if ((v30 & 1) == 0) {
            goto LABEL_111;
          }
          uint64_t v44 = *((unsigned __int16 *)a1 + 6);
          if (*((unsigned __int16 *)a1 + 5) - (int)v44 < 2) {
            goto LABEL_112;
          }
          WORD4(v132[2]) = *(_WORD *)(*a1 + v44);
LABEL_81:
          __int16 v57 = v44 + 2;
          goto LABEL_123;
        default:
          if (v28 < 0)
          {
            if (v30)
            {
              int v67 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
            }
            else
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              int v67 = 0;
            }
            if (v67 < __len)
            {
LABEL_112:
              *((unsigned char *)a1 + 15) = 1;
            }
            else
            {
              __int16 v57 = *((_WORD *)a1 + 6) + __len;
LABEL_123:
              *((_WORD *)a1 + 6) = v57;
            }
          }
          else
          {
            if (!v23)
            {
              uint64_t v23 = sub_100022FE8(a3 - 4);
              if (!v23)
              {
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Unable to allocate buffer for unknown opts", v117, v118, v119, v120, v121, v122, v123, v125);
                  uint64_t v124 = sub_100050B4C(0x2Fu);
                  if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
                    sub_10074A72C();
                  }
                }
                uint64_t v23 = 0;
                uint64_t v12 = 104;
                goto LABEL_136;
              }
            }
            if ((unsigned __int16)(a3 - 4) < (unsigned __int16)(v129 + 2 + __len))
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Bogus length in unknown option - must be corrupt packet", v108, v109, v110, v111, v112, v113, v114, v125);
                char v115 = sub_100050B4C(0x2Fu);
                if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR)) {
                  sub_10074A7AC();
                }
              }
              goto LABEL_135;
            }
            v23[v129] = v24;
            v23[v129 + 1] = __len;
            unsigned __int16 v32 = v129;
            memmove(&v23[v129 + 2], (const void *)(*a1 + *((unsigned __int16 *)a1 + 6)), __len);
            v129 += __len + 2;
            uint64_t v33 = (unsigned __int16)(v32 + __len + 2);
            int v34 = sub_100058654();
            if (v33 > 0x5D)
            {
              if (v34)
              {
                sub_100056E24((uint64_t)"Buffers can not accomedate unknownOptsLen %d, optionLen %d", v35, v36, v37, v38, v39, v40, v41, v33);
                uint64_t v116 = sub_100050B4C(0x2Fu);
                if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
                  sub_100745764();
                }
              }
              uint64_t v12 = 428;
              goto LABEL_136;
            }
            if (v34)
            {
              sub_100056E24((uint64_t)"Received config request with unknown option (%d), optionLen %d, unknownOptsLen %d", v35, v36, v37, v38, v39, v40, v41, v24);
              uint64_t v42 = sub_100050B4C(0x2Fu);
              if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
              {
                int v76 = sub_100050714();
                *(_DWORD *)long long buf = 136446466;
                *(void *)&uint8_t buf[4] = v76;
                __int16 v134 = 1024;
                int v135 = 463;
                _os_log_error_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
            if (*((unsigned char *)a1 + 15))
            {
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              int v43 = 0;
            }
            else
            {
              int v43 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
            }
            if (v43 >= __len) {
              *((_WORD *)a1 + 6) += __len;
            }
            else {
              *((unsigned char *)a1 + 15) = 1;
            }
            unsigned int v22 = v130;
          }
LABEL_113:
          unsigned int v21 = *((unsigned __int16 *)a1 + 6);
          if (v22 <= v21) {
            goto LABEL_133;
          }
          break;
      }
    }
    *((unsigned char *)a1 + 15) = 1;
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_30:
    int v30 = 0;
    *((unsigned char *)a1 + 15) = 1;
    char v28 = v24;
    goto LABEL_31;
  }
  uint64_t v23 = 0;
LABEL_133:
  if (a3 >= 4)
  {
    if (*((unsigned char *)a1 + 15))
    {
LABEL_135:
      uint64_t v12 = 411;
      goto LABEL_136;
    }
    if (!v23)
    {
      sub_1001E3424(v128, v126, v127, v11 & 1, (uint64_t)v132);
      return;
    }
    *(void *)long long buf = 0;
    if (sub_1001DD56C(v127, (uint64_t *)buf))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"cid %d not found", v95, v96, v97, v98, v99, v100, v101, v127);
        uint64_t v102 = sub_100050B4C(0x2Fu);
        if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
          sub_10074932C();
        }
      }
    }
    else
    {
      uint64_t v103 = *(unsigned char **)sub_1001E6484(*(unsigned int **)buf);
      uint64_t v104 = sub_1001E6484(*(unsigned int **)buf);
      sub_100202E24("aaad", 5u, 0, v103, v126, v105, v106, v107, *(unsigned __int16 *)(v104 + 8));
    }
    goto LABEL_144;
  }
LABEL_136:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"SignalMan_RecvConfigReq %!", v77, v78, v79, v80, v81, v82, v83, v12);
    uint64_t v84 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  if (v12 != 428
    || (uint64_t v85 = sub_10017C104(v128 + 48), !v85)
    || (uint64_t v86 = v85, !sub_100058654())
    || (sub_100056E24((uint64_t)"Failed to forced disconnect %!", v87, v88, v89, v90, v91, v92, v93, v86),
        uint64_t v94 = sub_100050B4C(0x2Fu),
        !os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)))
  {
    if (!v23) {
      return;
    }
    goto LABEL_144;
  }
  sub_100745764();
  if (v23) {
LABEL_144:
  }
    sub_100023010(v23);
}

void sub_100206B60(uint64_t *a1, unsigned int a2, int a3, uint64_t a4)
{
  int v73 = 0;
  __int16 v72 = 0;
  memset(v71, 0, 44);
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v8 = 0;
  }
  else
  {
    int v8 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
  }
  if (v8 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1323, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1329, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v9 = *((unsigned __int16 *)a1 + 6);
  uint64_t v67 = a4;
  unsigned int v66 = a2;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v10 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v10 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1330, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_14;
  }
  if (*((unsigned __int16 *)a1 + 5) - (int)v9 <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_14:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v14 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v14 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1334, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned __int16 v64 = 0;
    goto LABEL_16;
  }
  unsigned __int16 v64 = *(_WORD *)(*a1 + v9);
  *((_WORD *)a1 + 6) = v9 + 2;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v9 + 2) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_16:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    char v65 = 0;
    LOWORD(v12) = *((_WORD *)a1 + 6);
    goto LABEL_17;
  }
  char v11 = *(unsigned char *)(*a1 + (unsigned __int16)(v9 + 2));
  LOWORD(v12) = v9 + 4;
  *((_WORD *)a1 + 6) = v9 + 4;
  char v65 = v11 & 1;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v9 + 4) >= 2)
  {
    int v13 = 0;
    __int16 v63 = *(_WORD *)(*a1 + (unsigned __int16)(v9 + 4));
    LOWORD(v12) = v9 + 6;
    *((_WORD *)a1 + 6) = v9 + 6;
    goto LABEL_18;
  }
LABEL_17:
  __int16 v63 = 0;
  int v13 = 1;
  *((unsigned char *)a1 + 15) = 1;
LABEL_18:
  unsigned int v15 = v9 + a3;
  if ((int)v9 + a3 > (unsigned __int16)v12)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    int v69 = 0;
    int v70 = 0;
    int v68 = 0;
    uint64_t v18 = 0;
    int v19 = 0;
    while (2)
    {
      if (*((unsigned char *)a1 + 15)) {
        goto LABEL_97;
      }
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1338, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      unsigned int v20 = *((unsigned __int16 *)a1 + 5);
      if (v20 <= (unsigned __int16)v12)
      {
        *((unsigned char *)a1 + 15) = 1;
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      }
      else
      {
        uint64_t v21 = *a1;
        *((_WORD *)a1 + 6) = v12 + 1;
        uint64_t v18 = *(unsigned __int8 *)(v21 + (unsigned __int16)v12);
        if (v20 > (unsigned __int16)(v12 + 1))
        {
          uint64_t v22 = *a1;
          *((_WORD *)a1 + 6) = v12 + 2;
          int v19 = *(unsigned __int8 *)(v22 + (unsigned __int16)v12 + 1);
          int v23 = 1;
LABEL_27:
          switch((int)v18)
          {
            case 1:
              if (*((unsigned char *)a1 + 14) != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1342, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              if ((v23 & 1) == 0)
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_59:
                *((unsigned char *)a1 + 15) = 1;
                goto LABEL_60;
              }
              uint64_t v24 = *((unsigned __int16 *)a1 + 6);
              if (*((unsigned __int16 *)a1 + 5) - (int)v24 < 2) {
                goto LABEL_59;
              }
              HIWORD(v73) = *(_WORD *)(*a1 + v24);
              *((_WORD *)a1 + 6) = v24 + 2;
LABEL_60:
              int v69 = (char *)&v73 + 2;
LABEL_90:
              unsigned int v12 = *((unsigned __int16 *)a1 + 6);
              if (v15 <= v12)
              {
                if (*((unsigned char *)a1 + 15)) {
                  goto LABEL_97;
                }
                goto LABEL_101;
              }
              continue;
            case 2:
              if (*((unsigned char *)a1 + 14) != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1346, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              if (v23)
              {
                uint64_t v34 = *((unsigned __int16 *)a1 + 6);
                if (*((unsigned __int16 *)a1 + 5) - (int)v34 >= 2)
                {
                  LOWORD(v73) = *(_WORD *)(*a1 + v34);
                  *((_WORD *)a1 + 6) = v34 + 2;
LABEL_63:
                  int v70 = &v73;
                  goto LABEL_90;
                }
              }
              else
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              }
              *((unsigned char *)a1 + 15) = 1;
              goto LABEL_63;
            case 3:
              if (*((unsigned char *)a1 + 14) != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1361, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              if (v23)
              {
                unsigned int v35 = *((unsigned __int16 *)a1 + 5);
                uint64_t v36 = *((unsigned __int16 *)a1 + 6);
                if (v35 > v36)
                {
                  uint64_t v37 = *a1;
                  *((_WORD *)a1 + 6) = v36 + 1;
                  HIBYTE(v72) = *(unsigned char *)(v37 + v36);
                  int v38 = v35 - (v36 + 1);
LABEL_66:
                  if (v38 >= v19 - 1) {
                    *((_WORD *)a1 + 6) += v19 - 1;
                  }
                  else {
                    *((unsigned char *)a1 + 15) = 1;
                  }
                  int v68 = (char *)&v72 + 1;
                  goto LABEL_90;
                }
              }
              else
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              }
              *((unsigned char *)a1 + 15) = 1;
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              int v38 = 0;
              goto LABEL_66;
            case 4:
              if (*((unsigned char *)a1 + 14) != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1351, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              if (v23)
              {
                uint64_t v39 = *((unsigned __int16 *)a1 + 6);
                if (*((unsigned __int16 *)a1 + 5) > v39)
                {
                  uint64_t v40 = *a1;
                  *((_WORD *)a1 + 6) = v39 + 1;
                  BYTE10(v71[0]) = *(unsigned char *)(v40 + v39);
                  if (*((unsigned __int16 *)a1 + 5) > (v39 + 1))
                  {
                    uint64_t v41 = *a1;
                    uint64_t v42 = v39 + 2;
                    *((_WORD *)a1 + 6) = v39 + 2;
                    BYTE11(v71[0]) = *(unsigned char *)(v41 + v39 + 1);
                    if (*((unsigned __int16 *)a1 + 5) > (v39 + 2))
                    {
                      uint64_t v43 = *a1;
                      unsigned __int16 v44 = v39 + 3;
                      *((_WORD *)a1 + 6) = v44;
                      BYTE12(v71[0]) = *(unsigned char *)(v43 + v42);
                      if (*((unsigned __int16 *)a1 + 5) - v44 > 1)
                      {
                        HIWORD(v71[0]) = *(_WORD *)(*a1 + v44);
                        *((_WORD *)a1 + 6) = v44 + 2;
                        if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v44 + 2) > 1)
                        {
                          LOWORD(v71[1]) = *(_WORD *)(*a1 + (unsigned __int16)(v44 + 2));
                          *((_WORD *)a1 + 6) = v44 + 4;
                          if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v44 + 4) >= 2)
                          {
                            WORD1(v71[1]) = *(_WORD *)(*a1 + (unsigned __int16)(v44 + 4));
                            *((_WORD *)a1 + 6) = v44 + 6;
LABEL_89:
                            uint64_t v16 = v71;
                            goto LABEL_90;
                          }
LABEL_88:
                          *((unsigned char *)a1 + 15) = 1;
                          goto LABEL_89;
                        }
                        *((unsigned char *)a1 + 15) = 1;
LABEL_87:
                        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestac"
                                               "k/l2cap/signalman.c");
                        goto LABEL_88;
                      }
                      *((unsigned char *)a1 + 15) = 1;
LABEL_86:
                      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/"
                                             "l2cap/signalman.c");
                      int v53 = *((unsigned __int8 *)a1 + 14);
                      *((unsigned char *)a1 + 15) = 1;
                      if (v53 != 1) {
                        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1356, "(*pBs).__RWFlag == BYTESTREAM_READ");
                      }
                      goto LABEL_87;
                    }
                    *((unsigned char *)a1 + 15) = 1;
LABEL_85:
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
                    int v52 = *((unsigned __int8 *)a1 + 14);
                    *((unsigned char *)a1 + 15) = 1;
                    if (v52 != 1) {
                      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1355, "(*pBs).__RWFlag == BYTESTREAM_READ");
                    }
                    goto LABEL_86;
                  }
                  *((unsigned char *)a1 + 15) = 1;
LABEL_84:
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
                  int v51 = *((unsigned __int8 *)a1 + 14);
                  *((unsigned char *)a1 + 15) = 1;
                  if (v51 != 1) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1354, "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
                  goto LABEL_85;
                }
                *((unsigned char *)a1 + 15) = 1;
              }
              else
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
                int v49 = *((unsigned __int8 *)a1 + 14);
                *((unsigned char *)a1 + 15) = 1;
                if (v49 != 1) {
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1352, "(*pBs).__RWFlag == BYTESTREAM_READ");
                }
              }
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              int v50 = *((unsigned __int8 *)a1 + 14);
              *((unsigned char *)a1 + 15) = 1;
              if (v50 != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1353, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              goto LABEL_84;
            case 5:
              if (*((unsigned char *)a1 + 14) != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1365, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              if (v23)
              {
                unsigned int v45 = *((unsigned __int16 *)a1 + 5);
                uint64_t v46 = *((unsigned __int16 *)a1 + 6);
                if (v45 > v46)
                {
                  uint64_t v47 = *a1;
                  *((_WORD *)a1 + 6) = v46 + 1;
                  LOBYTE(v72) = *(unsigned char *)(v47 + v46);
                  int v48 = v45 - (v46 + 1);
LABEL_72:
                  if (v48 >= v19 - 1) {
                    *((_WORD *)a1 + 6) += v19 - 1;
                  }
                  else {
                    *((unsigned char *)a1 + 15) = 1;
                  }
                  uint64_t v17 = (char *)&v72;
                  goto LABEL_90;
                }
              }
              else
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              }
              *((unsigned char *)a1 + 15) = 1;
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
              int v48 = 0;
              goto LABEL_72;
            default:
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"rcvd config rsp with unknown option (%d) len %d, ignoring option", v25, v26, v27, v28, v29, v30, v31, v18);
                unsigned __int16 v32 = sub_100050B4C(0x2Fu);
                if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v54 = sub_100050714();
                  *(_DWORD *)long long buf = 136446466;
                  int v75 = v54;
                  __int16 v76 = 1024;
                  int v77 = 0xFFFF;
                  _os_log_error_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
                }
              }
              if (*((unsigned char *)a1 + 15))
              {
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
                int v33 = 0;
              }
              else
              {
                int v33 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
              }
              if (v33 >= v19) {
                *((_WORD *)a1 + 6) += v19;
              }
              else {
                *((unsigned char *)a1 + 15) = 1;
              }
              goto LABEL_90;
          }
        }
      }
      break;
    }
    int v23 = 0;
    *((unsigned char *)a1 + 15) = 1;
    goto LABEL_27;
  }
  int v68 = 0;
  int v69 = 0;
  int v70 = 0;
  uint64_t v17 = 0;
  uint64_t v16 = 0;
  if (v13)
  {
LABEL_97:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SignalMan_RecvConfigRsp - %!", v55, v56, v57, v58, v59, v60, v61, 411);
      uint64_t v62 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
LABEL_101:
    sub_1001E3D4C(v67, v66, v64, v65, (uint64_t)v69, (uint64_t)v68, (uint64_t)v70, (uint64_t)v16, v17, v63);
  }
}

void sub_1002074D4(uint64_t a1, uint64_t a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v14 = 771;
  unsigned __int16 v13 = 0;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1109, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (!sub_10025A86C((uint64_t *)a1, 1u, (uint64_t)&v14, 2u, a5, a6, a7, a8, (uint64_t)&v13)) {
    sub_1001E40F4(a4, v13, 0, a2);
  }
}

void sub_1002075AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v13 = 771;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v11 = 0;
  }
  else
  {
    int v11 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v11 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1129, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  unsigned __int16 v12 = 0;
  if (!sub_10025A86C((uint64_t *)a1, 1u, (uint64_t)&v13, 2u, a5, a6, a7, a8, (uint64_t)&v12)) {
    sub_1001E451C(a4, v12, 0);
  }
}

void sub_100207684(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v8 = 0;
  }
  else
  {
    int v8 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
  }
  if (v8 < (int)a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1396, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  __int16 v25 = 0;
  int v24 = 0;
  if (sub_10017E37C((uint64_t)a4, (uint64_t)&v24))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"getBdaddrFromHandle failed", v12, v13, v14, v15, v16, v17, v18, v23);
      int v19 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (a3 >= 0x18 && off_100A06008)
  {
    off_100A06008(*a1, *((unsigned __int16 *)a1 + 5), a3, a2, a4);
  }
  else
  {
    uint64_t v20 = *a1;
    uint64_t v21 = *((unsigned __int16 *)a1 + 6);
    if (a3 == 5
      && (*(_DWORD *)(v20 + v21) == 1819308097 ? (BOOL v22 = *(unsigned char *)(v20 + v21 + 4) == 101) : (BOOL v22 = 0), v22))
    {
      sub_100202E24("d", 9u, 0, a4, a2, v9, v10, v11, (uint64_t)"Apple Computer Inc.");
    }
    else
    {
      sub_100202E24("d", 9u, 0, a4, a2, v9, v10, v11, v20 + v21);
    }
  }
}

void sub_10020781C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v6 = 0;
  }
  else
  {
    int v6 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v6 < (int)a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1430, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  uint64_t v7 = qword_100A06010;
  if (!qword_100A06010) {
    goto LABEL_15;
  }
  while (*(unsigned __int8 *)(v7 + 153) != a2)
  {
    uint64_t v7 = *(void *)(v7 + 192);
    if (!v7) {
      goto LABEL_15;
    }
  }
  if (*(unsigned char *)(v7 + 152) == 8)
  {
    int v8 = *(void (**)(uint64_t, void, void, void, void, uint64_t, void))(v7 + 200);
    if (!v8)
    {
      sub_10025B8C0();
      int v8 = *(void (**)(uint64_t, void, void, void, void, uint64_t, void))(v7 + 200);
    }
    v8(v7 + 180, *(void *)(v7 + 168), *(void *)(v7 + 208), *(unsigned __int16 *)(v7 + 216), *(void *)a1 + *(unsigned __int16 *)(a1 + 12), a3, 0);
    sub_100204CF4(v7, 0);
  }
  else
  {
LABEL_15:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unexpected Echo Response (id %d)", v9, v10, v11, v12, v13, v14, v15, a2);
      uint64_t v16 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_10074A824();
      }
    }
  }
}

void sub_100207984(uint64_t a1, char a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v29 = 0;
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1457, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1459, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    goto LABEL_13;
  }
  uint64_t v13 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) - (int)v13 < 2)
  {
LABEL_13:
    *(unsigned char *)(a1 + 15) = 1;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"SignalMan_RecvInfoReq - %!", v15, v16, v17, v18, v19, v20, v21, 411);
      BOOL v22 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  uint64_t v14 = *(unsigned __int16 *)(*(void *)a1 + v13);
  *(_WORD *)(a1 + 12) = v13 + 2;
  switch(v14)
  {
    case 3:
      uint64_t v30 = 0;
      if (sub_1001DE028(&v30))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error retreiving the supported fixed channels", v23, v24, v25, v26, a6, a7, a8, v28);
          uint64_t v27 = sub_100050B4C(0x2Fu);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      uint64_t v14 = 3;
      break;
    case 2:
      sub_100202AB4((char *)&v29);
      uint64_t v14 = 2;
      break;
    case 1:
      sub_10025B218(0x2Fu);
      uint64_t v14 = 1;
      break;
  }
  sub_100202E24("aad", 0xBu, 0, a4, a2, a6, a7, a8, v14);
}

void sub_100207BEC(uint64_t *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v8 = 0;
  }
  else
  {
    int v8 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
  }
  if (v8 < (int)a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1525, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 <= 3) {
    sub_10025B8C0();
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v9 = 0;
  }
  else
  {
    int v9 = *((unsigned __int16 *)a1 + 5) - *((unsigned __int16 *)a1 + 6);
  }
  unsigned __int16 v10 = a3 - 4;
  if (a3 < 4 || v9 < (int)a3)
  {
    if (sub_100058654())
    {
      if (*((unsigned char *)a1 + 15)) {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      }
      sub_100056E24((uint64_t)"Invalid RecvInfoRsp input: cmdLen %d, NumReadBytesAvail %d.  Disconecting physical link.", v12, v13, v14, v15, v16, v17, v18, a3);
      uint64_t v27 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_10017C380(a4 + 48);
    return;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1534, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v11 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v11 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1535, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_27;
  }
  uint64_t v19 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) - (int)v19 <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_27:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    unsigned __int16 v21 = 0;
    uint64_t v20 = *a1;
    unsigned __int16 v22 = *((_WORD *)a1 + 6);
    goto LABEL_28;
  }
  uint64_t v20 = *a1;
  unsigned __int16 v21 = *(_WORD *)(*a1 + v19);
  unsigned __int16 v22 = v19 + 2;
  *((_WORD *)a1 + 6) = v19 + 2;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v19 + 2) < 2)
  {
LABEL_28:
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v26 = v20 + v22;
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v28 = 0;
    goto LABEL_29;
  }
  int v23 = *(unsigned __int16 *)(v20 + (unsigned __int16)(v19 + 2));
  unsigned __int16 v24 = v19 + 4;
  *((_WORD *)a1 + 6) = v19 + 4;
  if (!v23)
  {
    uint64_t v26 = v20 + v24;
    int v28 = *((unsigned __int16 *)a1 + 5) - v24;
LABEL_29:
    int v23 = 0;
    if (v28 >= v10)
    {
      *((_WORD *)a1 + 6) += v10;
      int v25 = 1;
    }
    else
    {
      int v25 = 1;
      *((unsigned char *)a1 + 15) = 1;
    }
    goto LABEL_32;
  }
  int v25 = 0;
  unsigned __int16 v10 = 0;
  uint64_t v26 = 0;
LABEL_32:
  uint64_t v29 = qword_100A06010;
  if (!qword_100A06010) {
    goto LABEL_41;
  }
  while (*(unsigned __int8 *)(v29 + 153) != a2)
  {
    uint64_t v29 = *(void *)(v29 + 192);
    if (!v29) {
      goto LABEL_41;
    }
  }
  if (*(unsigned char *)(v29 + 152) == 10)
  {
    sub_100026DB4(*(unsigned int *)(v29 + 176));
    if (!*(void *)(v29 + 208)) {
      sub_10025B8C0();
    }
    if (*((unsigned char *)a1 + 15))
    {
      uint64_t v30 = v29;
      uint64_t v31 = 411;
    }
    else
    {
      if (v25) {
        uint64_t v40 = 0;
      }
      else {
        uint64_t v40 = (v23 + 470);
      }
      (*(void (**)(uint64_t, void, void, uint64_t, void, uint64_t))(v29 + 208))(v29 + 180, *(void *)(v29 + 168), v21, v26, v10, v40);
      uint64_t v30 = v29;
      uint64_t v31 = 0;
    }
    sub_100204CF4(v30, v31);
  }
  else
  {
LABEL_41:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unexpected Info Response (id %d)", v32, v33, v34, v35, v36, v37, v38, a2);
      uint64_t v39 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_10074A824();
      }
    }
  }
}

uint64_t sub_100207FB4(uint64_t a1, char a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1572, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 == 5)
  {
    if (*(unsigned char *)(a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1575, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      int v13 = *(unsigned __int8 *)(a1 + 14);
      *(unsigned char *)(a1 + 15) = 1;
      if (v13 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1576, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      goto LABEL_18;
    }
    int v19 = *(unsigned __int16 *)(a1 + 12);
    if (*(unsigned __int16 *)(a1 + 10) - v19 <= 1)
    {
      *(unsigned char *)(a1 + 15) = 1;
LABEL_18:
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      int v20 = *(unsigned __int8 *)(a1 + 14);
      *(unsigned char *)(a1 + 15) = 1;
      if (v20 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1577, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      goto LABEL_19;
    }
    *(_WORD *)(a1 + 12) = v19 + 2;
    if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v19 + 2) <= 1)
    {
      *(unsigned char *)(a1 + 15) = 1;
LABEL_19:
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      goto LABEL_20;
    }
    *(_WORD *)(a1 + 12) = v19 + 4;
    if (*(unsigned __int16 *)(a1 + 10) <= (unsigned __int16)(v19 + 4))
    {
LABEL_20:
      *(unsigned char *)(a1 + 15) = 1;
      return sub_100202E24("ad", 1u, 0, a4, a2, a6, a7, a8, 0);
    }
    *(_WORD *)(a1 + 12) = v19 + 5;
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Wrong command size for channel creation command", v14, v15, v16, v17, a6, a7, a8, v22);
    uint64_t v18 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return sub_100202E24("ad", 1u, 0, a4, a2, a6, a7, a8, 0);
}

void sub_1002081EC(uint64_t a1, unsigned int a2, int a3)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v6 = 0;
  }
  else
  {
    int v6 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v6 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1604, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 != 8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Wrong command size for channel creation response", v8, v9, v10, v11, v12, v13, v14, v29);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1607, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v7 = *(unsigned __int8 *)(a1 + 14);
    *(unsigned char *)(a1 + 15) = 1;
    if (v7 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1608, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_19;
  }
  int v16 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) - v16 <= 1)
  {
    *(unsigned char *)(a1 + 15) = 1;
LABEL_19:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v17 = *(unsigned __int8 *)(a1 + 14);
    *(unsigned char *)(a1 + 15) = 1;
    if (v17 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1609, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_20;
  }
  *(_WORD *)(a1 + 12) = v16 + 2;
  if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v16 + 2) <= 1)
  {
    *(unsigned char *)(a1 + 15) = 1;
LABEL_20:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v18 = *(unsigned __int8 *)(a1 + 14);
    *(unsigned char *)(a1 + 15) = 1;
    if (v18 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1610, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_21;
  }
  *(_WORD *)(a1 + 12) = v16 + 4;
  if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v16 + 4) <= 1)
  {
    *(unsigned char *)(a1 + 15) = 1;
LABEL_21:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    goto LABEL_22;
  }
  *(_WORD *)(a1 + 12) = v16 + 6;
  if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v16 + 6) < 2)
  {
LABEL_22:
    *(unsigned char *)(a1 + 15) = 1;
    goto LABEL_23;
  }
  *(_WORD *)(a1 + 12) = v16 + 8;
LABEL_23:
  uint64_t v19 = qword_100A06010;
  if (!qword_100A06010) {
    goto LABEL_30;
  }
  while (*(unsigned __int8 *)(v19 + 153) != a2)
  {
    uint64_t v19 = *(void *)(v19 + 192);
    if (!v19) {
      goto LABEL_30;
    }
  }
  if (*(unsigned char *)(v19 + 152) == 12)
  {
    sub_100026DB4(*(unsigned int *)(v19 + 176));
    if (*(unsigned char *)(a1 + 15)) {
      uint64_t v20 = 411;
    }
    else {
      uint64_t v20 = 0;
    }
    sub_100204CF4(v19, v20);
  }
  else
  {
LABEL_30:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unexpected create channel Response (id %d)", v21, v22, v23, v24, v25, v26, v27, a2);
      int v28 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_10074A824();
      }
    }
  }
}

uint64_t sub_100208500(uint64_t a1, char a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1643, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 == 3)
  {
    if (*(unsigned char *)(a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1646, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      int v13 = *(unsigned __int8 *)(a1 + 14);
      *(unsigned char *)(a1 + 15) = 1;
      if (v13 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1647, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      goto LABEL_17;
    }
    int v19 = *(unsigned __int16 *)(a1 + 12);
    if (*(unsigned __int16 *)(a1 + 10) - v19 <= 1)
    {
      *(unsigned char *)(a1 + 15) = 1;
LABEL_17:
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      goto LABEL_18;
    }
    *(_WORD *)(a1 + 12) = v19 + 2;
    if (*(unsigned __int16 *)(a1 + 10) <= (unsigned __int16)(v19 + 2))
    {
LABEL_18:
      *(unsigned char *)(a1 + 15) = 1;
      return sub_100202E24("ad", 1u, 0, a4, a2, a6, a7, a8, 0);
    }
    *(_WORD *)(a1 + 12) = v19 + 3;
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Wrong command size for channel move command", v14, v15, v16, v17, a6, a7, a8, v21);
    int v18 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return sub_100202E24("ad", 1u, 0, a4, a2, a6, a7, a8, 0);
}

void sub_1002086D0(uint64_t a1, unsigned int a2, int a3)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v6 = 0;
  }
  else
  {
    int v6 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v6 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1667, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 != 4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Wrong command size for channel move response", v8, v9, v10, v11, v12, v13, v14, v27);
      uint64_t v15 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1670, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v7 = *(unsigned __int8 *)(a1 + 14);
    *(unsigned char *)(a1 + 15) = 1;
    if (v7 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1671, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_17;
  }
  int v16 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) - v16 <= 1)
  {
    *(unsigned char *)(a1 + 15) = 1;
LABEL_17:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    goto LABEL_18;
  }
  *(_WORD *)(a1 + 12) = v16 + 2;
  if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v16 + 2) < 2)
  {
LABEL_18:
    *(unsigned char *)(a1 + 15) = 1;
    goto LABEL_19;
  }
  *(_WORD *)(a1 + 12) = v16 + 4;
LABEL_19:
  uint64_t v17 = qword_100A06010;
  if (!qword_100A06010) {
    goto LABEL_26;
  }
  while (*(unsigned __int8 *)(v17 + 153) != a2)
  {
    uint64_t v17 = *(void *)(v17 + 192);
    if (!v17) {
      goto LABEL_26;
    }
  }
  if (*(unsigned char *)(v17 + 152) == 14)
  {
    sub_100026DB4(*(unsigned int *)(v17 + 176));
    if (*(unsigned char *)(a1 + 15)) {
      uint64_t v18 = 411;
    }
    else {
      uint64_t v18 = 0;
    }
    sub_100204CF4(v17, v18);
  }
  else
  {
LABEL_26:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unexpected create channel Response (id %d)", v19, v20, v21, v22, v23, v24, v25, a2);
      uint64_t v26 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_10074A824();
      }
    }
  }
}

uint64_t sub_100208914(uint64_t a1, char a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v12 = 0;
  }
  else
  {
    int v12 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v12 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1703, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 == 4)
  {
    if (*(unsigned char *)(a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1705, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*(unsigned char *)(a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      int v13 = *(unsigned __int8 *)(a1 + 14);
      *(unsigned char *)(a1 + 15) = 1;
      if (v13 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1706, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      goto LABEL_17;
    }
    int v19 = *(unsigned __int16 *)(a1 + 12);
    if (*(unsigned __int16 *)(a1 + 10) - v19 <= 1)
    {
      *(unsigned char *)(a1 + 15) = 1;
LABEL_17:
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
      goto LABEL_18;
    }
    *(_WORD *)(a1 + 12) = v19 + 2;
    if (*(unsigned __int16 *)(a1 + 10) - (unsigned __int16)(v19 + 2) < 2)
    {
LABEL_18:
      *(unsigned char *)(a1 + 15) = 1;
      return sub_100202E24("ad", 1u, 0, a4, a2, a6, a7, a8, 0);
    }
    *(_WORD *)(a1 + 12) = v19 + 4;
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Wrong command size for channel move confirmation", v14, v15, v16, v17, a6, a7, a8, v21);
    uint64_t v18 = sub_100050B4C(0x2Fu);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return sub_100202E24("ad", 1u, 0, a4, a2, a6, a7, a8, 0);
}

void sub_100208AE8(uint64_t a1, unsigned int a2, int a3)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
    int v6 = 0;
  }
  else
  {
    int v6 = *(unsigned __int16 *)(a1 + 10) - *(unsigned __int16 *)(a1 + 12);
  }
  if (v6 < a3) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1723, "cmdLen <= ByteStream_NumReadBytesAvail(*pBs)");
  }
  if (a3 != 2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Wrong command size for channel move response", v7, v8, v9, v10, v11, v12, v13, v26);
      uint64_t v14 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c", 1726, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/l2cap/signalman.c");
LABEL_14:
    *(unsigned char *)(a1 + 15) = 1;
    goto LABEL_15;
  }
  int v15 = *(unsigned __int16 *)(a1 + 12);
  if (*(unsigned __int16 *)(a1 + 10) - v15 < 2) {
    goto LABEL_14;
  }
  *(_WORD *)(a1 + 12) = v15 + 2;
LABEL_15:
  uint64_t v16 = qword_100A06010;
  if (!qword_100A06010) {
    goto LABEL_22;
  }
  while (*(unsigned __int8 *)(v16 + 153) != a2)
  {
    uint64_t v16 = *(void *)(v16 + 192);
    if (!v16) {
      goto LABEL_22;
    }
  }
  if (*(unsigned char *)(v16 + 152) == 16)
  {
    sub_100026DB4(*(unsigned int *)(v16 + 176));
    if (*(unsigned char *)(a1 + 15)) {
      uint64_t v17 = 411;
    }
    else {
      uint64_t v17 = 0;
    }
    sub_100204CF4(v16, v17);
  }
  else
  {
LABEL_22:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unexpected move channel Confirmation Response (id %d)", v18, v19, v20, v21, v22, v23, v24, a2);
      uint64_t v25 = sub_100050B4C(0x2Fu);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_10074A824();
      }
    }
  }
}

uint64_t sub_100208D04()
{
  return byte_100A06018;
}

void sub_100208D10(int a1)
{
  if (sub_100058654())
  {
    uint64_t v9 = "incoming connection";
    if (a1) {
      uint64_t v9 = "address change";
    }
    sub_100056E24((uint64_t)"Advertising stopped due to %s", v2, v3, v4, v5, v6, v7, v8, (uint64_t)v9);
    uint64_t v10 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v24 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  byte_100A06019 = 0;
  unsigned int v11 = byte_100A0A1E8;
  if (byte_100A0A1E8)
  {
    uint64_t v12 = &byte_100A06D2D;
    uint64_t v13 = byte_100A0A1E8;
    do
    {
      char *v12 = 0;
      v12 += 3368;
      --v13;
    }
    while (v13);
    if (byte_100A0A1E9)
    {
      uint64_t v14 = sub_10001BDE0(207, 0, v3, v4, v5, v6, v7, v8, 0);
      if (v14)
      {
        uint64_t v15 = v14;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not stop the LE advertising OI_HCI_CMD_LE_SetExtendedAdvertisingEnable returned %!", v2, v3, v4, v5, v6, v7, v8, v15);
          uint64_t v16 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
    else
    {
      unint64_t v20 = a1 ^ 1u;
      if (v11 > v20)
      {
        do
        {
          if (sub_1001FD2C4())
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not stop the LE advertising for instance %d with status %!, but moving forward !", v2, v3, v4, v5, v6, v7, v8, byte_100A0A1EA[v20]);
              uint64_t v21 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
              {
                uint64_t v22 = sub_100050714();
                *(_DWORD *)long long buf = 136446466;
                uint64_t v24 = v22;
                __int16 v25 = 1024;
                int v26 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
          }
          ++v20;
        }
        while (v20 < byte_100A0A1E8);
      }
    }
    sub_10020902C(0, v2, v3, v4, v5, v6, v7, v8);
  }
  else
  {
    if (a1)
    {
      if (!byte_100A06D2D) {
        return;
      }
      uint64_t v17 = sub_10001BDE0(170, (uint64_t)sub_100209374, v3, v4, v5, v6, v7, v8, 0);
      if (!v17)
      {
        byte_100A06D2D = 3;
        return;
      }
      uint64_t v18 = v17;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not stop the LE advertising : %!", v2, v3, v4, v5, v6, v7, v8, v18);
        uint64_t v19 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      byte_100A06D2D = 0;
    }
    sub_100209374(0, v2, v3, v4, v5, v6, v7, v8);
  }
}

void sub_10020902C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (byte_100A0A1E9)
  {
    uint64_t v9 = byte_100A0A1E8;
    if (byte_100A0A1E8)
    {
      uint64_t v10 = &byte_100A06D2D;
      do
      {
        char *v10 = 0;
        v10 += 3368;
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    uint64_t v11 = byte_100A0A1F4;
    BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 0;
    if ((int)v11 + 1 < byte_100A0A1E8)
    {
      unint64_t v12 = v11 + 1;
      uint64_t v13 = (char *)&qword_100A06020[421 * v11 + 838] + 5;
      do
      {
        if (*v13 == 2)
        {
          byte_100A0A1F4 = v12;
          uint64_t v14 = sub_1001FD2C4();
          if (!v14) {
            return;
          }
          uint64_t v15 = v14;
          a1 = sub_100058654();
          if (a1)
          {
            sub_100056E24((uint64_t)"Could not stop the LE advertising : %!", a2, a3, a4, a5, a6, a7, a8, v15);
            uint64_t v16 = sub_100050B4C(0x42u);
            a1 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);
            if (a1)
            {
              uint64_t v17 = sub_100050714();
              *(_DWORD *)long long buf = 136446466;
              uint64_t v31 = v17;
              __int16 v32 = 1024;
              int v33 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
        }
        *uint64_t v13 = 0;
        ++v12;
        v13 += 3368;
      }
      while (v12 < byte_100A0A1E8);
    }
  }
  if (byte_100A06018)
  {
    unint64_t v18 = 0;
    uint64_t v19 = &byte_100A06D2D;
    do
    {
      if (*v19)
      {
        sub_10025B8C0();
        if (*v19)
        {
          a1 = sub_100058654();
          if (a1)
          {
            sub_100056E24((uint64_t)"instance=%d state=%d instead of 0", a2, a3, a4, a5, a6, a7, a8, v29);
            unint64_t v20 = sub_100050B4C(0x42u);
            a1 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
            if (a1)
            {
              uint64_t v21 = sub_100050714();
              *(_DWORD *)long long buf = 136446466;
              uint64_t v31 = v21;
              __int16 v32 = 1024;
              int v33 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          *uint64_t v19 = 0;
        }
      }
      ++v18;
      v19 += 3368;
    }
    while (v18 < byte_100A06018);
  }
  if (byte_100A06019)
  {
    uint64_t v22 = sub_10020CC58(a1, a2, a3, a4, a5, a6, a7, a8);
    if (!v22) {
      return;
    }
    uint64_t v23 = v22;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to restart advertising : %!", v24, v25, a4, a5, a6, a7, a8, v23);
      int v26 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    byte_100A06D2D = 0;
    uint64_t v27 = v23;
    int v28 = 0;
  }
  else
  {
    byte_100A06D2D = 0;
    uint64_t v27 = v8;
    int v28 = 1;
  }
  sub_10020C73C(v27, v28, 0, a4, a5, a6, a7, a8);
}

void sub_100209374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  byte_100A06D2D = 0;
  if (byte_100A06019 == 1)
  {
    *(_DWORD *)((char *)v24 + 3) = 0;
    v24[0] = 0;
    sub_100229724((uint64_t)v24);
    uint64_t v14 = sub_10001BDE0(166, (uint64_t)sub_100209DEC, v8, v9, v10, v11, v12, v13, (unsigned __int16)word_100A06030);
    if (v14)
    {
      uint64_t v15 = v14;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to restart advertising : %!", v16, v17, v18, v19, v20, v21, v22, v15);
        uint64_t v23 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_10020C73C(v15, 0, 0, v18, v19, v20, v21, v22);
    }
  }
  else
  {
    sub_10020C73C(a1, 1, 0, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_100209494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, const void *a10, char a11, unsigned __int16 a12, const void *a13, char a14, unsigned __int8 a15, int *a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,uint64_t a24)
{
  *(_DWORD *)((char *)v183 + 3) = 0;
  v183[0] = 0;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"StartAdvertising tech=%d handle=%d", v32, v33, v34, v35, v36, v37, v38, byte_100A0A1E9);
    uint64_t v39 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v185 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a1) {
    return 101;
  }
  if (a15 && !byte_100A0A1E8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"We're doing legacy advertising, why did we try to set handle to %d", v40, v41, v42, v43, v44, v45, v46, a15);
      uint64_t v47 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B8C0();
    return 101;
  }
  if (sub_10022A318())
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"We are busy rotating our address", v50, v51, v52, v53, v54, v55, v56, v182);
      uint64_t v57 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4073;
  }
  byte_100A0A1F4 = a15;
  if (byte_100A0A1E8) {
    unsigned int v58 = a15;
  }
  else {
    unsigned int v58 = 0;
  }
  if (BYTE5(qword_100A06020[421 * v58 + 417]))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE Advertising already in progress (handle:%d state:%d).", v59, v60, v61, v62, v63, v64, v65, byte_100A0A1F4);
      unsigned int v66 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 118;
  }
  if ((a3 - 16385) <= 0xFFFFC01E)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising interval parameters : %d", v67, v68, v69, v70, v71, v72, v73, a3);
    int v74 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if ((a4 - 16385) <= 0xFFFFC01E)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising interval parameters : %d", v75, v76, v77, v78, v79, v80, v81, a4);
    uint64_t v82 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a5 >= 4)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising type parameters : %d", v83, v84, v85, v86, v87, v88, v89, a5);
    uint64_t v90 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v90, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a5 == 1 && !a6)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Address can't be NULL", v91, v92, v93, v94, v95, v96, v97, v182);
    uint64_t v98 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a5 == 1 && *a6 >= 2u)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid address type parameters : %d", v115, v116, v117, v118, v119, v120, v121, *a6);
    uint64_t v122 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v122, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_65:
    sub_100744F6C();
    return 101;
  }
  if ((a7 - 8) <= 0xFFFFFFF8)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising map parameters : %d", v99, v100, v101, v102, v103, v104, v105, a7);
    uint64_t v106 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a8 >= 4)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising filter parameters : %d", v107, v108, v109, v110, v111, v112, v113, a8);
    uint64_t v114 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v114, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a9 && !a10)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising data length parameters : %d", v123, v124, v125, v126, v127, v128, v129, a9);
    unsigned int v130 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v130, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a12 && !a13)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan data length parameters : %d", v131, v132, v133, v134, v135, v136, v137, a9);
    uint64_t v138 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v138, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_65;
  }
  if (a16 && (a15 & 0xFB) != 0)
  {
    uint64_t v139 = &qword_100A06020[421 * a15];
    int v140 = *a16;
    *(_DWORD *)((char *)v139 + 3345) = *(int *)((char *)a16 + 3);
    *(_DWORD *)((char *)v139 + 3342) = v140;
    *((unsigned char *)v139 + 3349) = 1;
  }
  else
  {
    uint64_t v141 = &qword_100A06020[421 * a15];
    *((unsigned char *)v141 + 3349) = 1;
    uint64_t v142 = (_DWORD *)((char *)&unk_100A0A1F5 + 8 * a15 - a15);
    BOOL v143 = *v142 == dword_100A0A218 && *(_DWORD *)((char *)v142 + 3) == *(int *)((char *)&dword_100A0A218 + 3);
    uint64_t v144 = (char *)v141 + 3342;
    if (v143)
    {
      if ((a15 & 0xFB) != 0)
      {
        unsigned char *v144 = 1;
        arc4random_buf((char *)&qword_100A06020[421 * a15 + 417] + 7, 6uLL);
        HIBYTE(qword_100A06020[421 * byte_100A0A1F4 + 417]) &= 0x3Fu;
      }
      else
      {
        sub_1002296C8(0, (uint64_t)v144);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v144 = *v142;
      *(_DWORD *)((char *)v141 + 3345) = *(_DWORD *)((char *)v142 + 3);
    }
  }
  if (byte_100A0A1E8)
  {
    unsigned int v145 = byte_100A0A1F4;
    uint64_t v146 = &qword_100A06020[421 * byte_100A0A1F4];
    uint64_t *v146 = a1;
    v146[1] = a2;
    *((_WORD *)v146 + 8) = a3;
    *((_WORD *)v146 + 9) = a4;
    *((unsigned char *)v146 + 20) = a5;
    *((unsigned char *)v146 + 28) = a7;
    *((unsigned char *)v146 + 29) = a8;
    *((_WORD *)v146 + 15) = a9;
    *((unsigned char *)v146 + 1684) = a11;
    *((unsigned char *)v146 + 3340) = a14;
    *((_WORD *)v146 + 841) = 0;
    *((_WORD *)v146 + 1669) = 0;
    *((unsigned char *)v146 + 3350) = a17;
    *((unsigned char *)v146 + 3351) = a18;
    *((unsigned char *)v146 + 3352) = a19;
    *((unsigned char *)v146 + 3353) = a20;
    *((unsigned char *)v146 + 3354) = a21;
    *((unsigned char *)v146 + 3355) = a22;
    *((unsigned char *)v146 + 3356) = a23;
    uint64_t v147 = v146 + 4;
    v146[420] = a24;
    bzero(v146 + 4, 0x672uLL);
    if (a10)
    {
      memmove(v147, a10, a9);
      unsigned int v145 = byte_100A0A1F4;
    }
    uint64_t v148 = &qword_100A06020[421 * v145];
    *((_WORD *)v148 + 843) = a12;
    unsigned int v149 = v148 + 211;
    bzero(v148 + 211, 0x672uLL);
    uint64_t v157 = (uint64_t)a13;
    if (a13) {
      int v150 = memmove(v149, a13, a12);
    }
    uint64_t v48 = sub_10020CC58((uint64_t)v150, v157, v151, v152, v153, v154, v155, v156);
  }
  else
  {
    sub_100229724((uint64_t)v183);
    qword_100A06020[0] = a1;
    qword_100A06028 = a2;
    word_100A06030 = a3;
    word_100A06032 = a4;
    byte_100A06034 = a5;
    if (a5 == 1)
    {
      int v164 = *(_DWORD *)a6;
      __int16 v165 = *((_WORD *)a6 + 2);
      byte_100A0603B = a6[6];
      word_100A06039 = v165;
      dword_100A06035 = v164;
    }
    else
    {
      *(int *)((char *)&dword_100A06035 + 3) = 0;
      dword_100A06035 = 0;
    }
    byte_100A0603C = a7;
    byte_100A0603D = a8;
    word_100A0603E = a9;
    byte_100A066B4 = a11;
    byte_100A06D2C = a14;
    word_100A066B2 = 0;
    word_100A06D2A = 0;
    unk_100A06040 = 0;
    unk_100A06050 = 0;
    unk_100A06048 = 0;
    unk_100A06057 = 0;
    if (a10) {
      __memmove_chk();
    }
    word_100A066B6 = a12;
    unk_100A066B8 = 0;
    unk_100A066C8 = 0;
    unk_100A066C0 = 0;
    unk_100A066CF = 0;
    if (a13) {
      __memmove_chk();
    }
    uint64_t v48 = sub_10001BDE0(166, (uint64_t)sub_100209DEC, v158, v159, v160, v161, v162, v163, (unsigned __int16)word_100A06030);
    byte_100A06D2D = 1;
  }
  if (byte_100A0A21F && (++dword_100A0A1F0, !(dword_100A0A1F0 % byte_100A0A21F)))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Faking OI_BUSY_FAIL now", v166, v167, v168, v169, v170, v171, v172, v182);
      uint64_t v173 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v173, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v48 = 118;
  }
  else if (!v48)
  {
    return v48;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not start a LE advertising %!", v174, v175, v176, v177, v178, v179, v180, v48);
    uint64_t v181 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v181, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return v48;
}

void sub_100209DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (a1
    || (uint64_t v8 = sub_10001BDE0(168, (uint64_t)sub_10020CA10, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_100A0603E),
        v8))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"advertisingParametersCb Could not start advertising : %!", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    byte_100A06D2D = 0;
    sub_10020C73C(v8, 0, 0, v11, v12, v13, v14, v15);
  }
}

uint64_t sub_100209EA4()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"StopAdvertising tech=%d", v0, v1, v2, v3, v4, v5, v6, byte_100A0A1E9);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v59 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_10022A318())
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"We are busy rotating our address", v14, v15, v16, v17, v18, v19, v20, v57);
      uint64_t v21 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4073;
  }
  uint64_t v23 = byte_100A0A1E8;
  if (byte_100A0A1E8)
  {
    if (byte_100A0A1E9)
    {
      uint64_t v24 = sub_10001BDE0(207, (uint64_t)sub_10020902C, v8, v9, v10, v11, v12, v13, 0);
      if (v24)
      {
        uint64_t v22 = v24;
        if (!sub_100058654()) {
          return v22;
        }
        sub_100056E24((uint64_t)"Could not stop the LE advertising OI_HCI_CMD_LE_SetExtendedAdvertisingEnable returned %!", v25, v26, v27, v28, v29, v30, v31, v22);
        uint64_t v32 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          return v22;
        }
LABEL_14:
        sub_100744F6C();
        return v22;
      }
      uint64_t v43 = byte_100A0A1E8;
      if (byte_100A0A1E8)
      {
        uint64_t v44 = &byte_100A06D2D;
        do
        {
          *uint64_t v44 = 3;
          v44 += 3368;
          --v43;
        }
        while (v43);
      }
      return 0;
    }
    uint64_t v41 = 0;
    for (uint64_t i = &byte_100A06D2D; *i != 2; i += 3368)
    {
      *uint64_t i = 0;
      if (v23 == ++v41) {
        return 0;
      }
    }
    byte_100A0A1F4 = v41;
    uint64_t v45 = sub_1001FD2C4();
    if (v45)
    {
      uint64_t v46 = v45;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not stop the LE advertising : %!, resetting its state to idle", v47, v48, v49, v50, v51, v52, v53, v46);
        uint64_t v54 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      char v55 = 0;
    }
    else
    {
      char v55 = 3;
    }
    uint64_t v22 = 0;
    *uint64_t i = v55;
  }
  else
  {
    if (byte_100A06D2D != 2) {
      return 0;
    }
    uint64_t v22 = sub_10001BDE0(170, (uint64_t)sub_100209374, v8, v9, v10, v11, v12, v13, 0);
    if (!v22)
    {
      byte_100A06D2D = 3;
      return v22;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not stop the LE advertising : %!", v33, v34, v35, v36, v37, v38, v39, v22);
      uint64_t v40 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
        goto LABEL_14;
      }
    }
  }
  return v22;
}

uint64_t sub_10020A1C0(int a1)
{
  if (byte_100A06D2D != 2 || (byte_100A06019 & 1) != 0 || a1 && byte_100A0603D != 3) {
    return 0;
  }
  uint64_t result = sub_100209EA4();
  if (!result) {
    byte_100A06019 = 1;
  }
  return result;
}

BOOL sub_10020A224()
{
  return byte_100A06D2D == 2 && byte_100A06034 < 2u;
}

void sub_10020A244()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Halting advertising and resetting states", v0, v1, v2, v3, v4, v5, v6, v30);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v32 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  byte_100A06019 = 0;
  uint64_t v8 = byte_100A0A1E8;
  if (byte_100A0A1E8)
  {
    uint64_t v9 = qword_100A06020;
    do
    {
      *((unsigned char *)v9 + 3341) = 0;
      *uint64_t v9 = 0;
      v9 += 421;
      --v8;
    }
    while (v8);
    if (byte_100A0A1E9)
    {
      uint64_t v10 = sub_10001BDE0(207, 0, v1, v2, v3, v4, v5, v6, 0);
      if (v10)
      {
        uint64_t v11 = v10;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not stop the LE advertising OI_HCI_CMD_LE_SetExtendedAdvertisingEnable returned %!", v12, v13, v14, v15, v16, v17, v18, v11);
          uint64_t v19 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
    else
    {
      unint64_t v20 = 0;
      do
      {
        if (sub_1001FD2C4())
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not stop the LE advertising for instance %d with status %!, but moving forward !", v21, v22, v23, v24, v25, v26, v27, byte_100A0A1EA[v20]);
            uint64_t v28 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
            {
              uint64_t v29 = sub_100050714();
              *(_DWORD *)long long buf = 136446466;
              uint64_t v32 = v29;
              __int16 v33 = 1024;
              int v34 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
        }
        ++v20;
      }
      while (v20 < byte_100A0A1E8);
    }
  }
  byte_100A0A1F4 = 0;
  bzero(qword_100A06020, 0x41C8uLL);
}

void sub_10020A4B4()
{
}

char *sub_10020A4C4(unsigned int a1)
{
  return (char *)&unk_100A0A1F5 + 8 * a1 - a1;
}

uint64_t sub_10020A4D8(int *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_100A0A1E8 <= a2) {
    return 120;
  }
  uint64_t v8 = (_DWORD *)((char *)&unk_100A0A1F5 + 8 * a2 - a2);
  int v9 = *a1;
  *(_DWORD *)((char *)v8 + 3) = *(int *)((char *)a1 + 3);
  *uint64_t v8 = v9;
  if (byte_100A0A1E9)
  {
    uint64_t v10 = sub_10001BDE0(203, a3, a3, a4, a5, a6, a7, a8, byte_100A0A1EA[a2]);
    if (v10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_HCI_CMD_LE_SetAdvertisingSetRandomAddress returned %!", v11, v12, v13, v14, v15, v16, v17, v10);
        uint64_t v18 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
LABEL_6:
        }
          sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v10 = sub_1001FD350();
    if (v10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BT_VSC_UpdateMultipleAdvInstanceAddress returned %!", v20, v21, v22, v23, v24, v25, v26, v10);
        uint64_t v27 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          goto LABEL_6;
        }
      }
    }
  }
  return v10;
}

uint64_t sub_10020A608(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = 101;
  if (a2 <= 2 && a3 <= 2)
  {
    uint64_t v3 = sub_1001F95EC();
    if (v3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"BT_VSC_SetAdvPhyOptions returned %!", v4, v5, v6, v7, v8, v9, v10, v3);
        uint64_t v11 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  return v3;
}

uint64_t sub_10020A6A0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10020A4D8(a1, 0, a2, a4, a5, a6, a7, a8);
}

uint64_t sub_10020A6AC()
{
  return byte_100A0A1E8;
}

uint64_t sub_10020A6B8(unsigned int a1)
{
  if (byte_100A0A1E8 <= a1) {
    return 0;
  }
  else {
    return byte_100A0A1EA[a1];
  }
}

uint64_t sub_10020A6E0(uint64_t (*a1)(void, void, void))
{
  if (off_100A0A220)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Already initializing", v1, v2, v3, v4, v5, v6, v7, v29);
      uint64_t v8 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  if (byte_100A0A1E8) {
    return 140;
  }
  bzero(qword_100A06020, 0x41C8uLL);
  off_100A0A220 = a1;
  if (byte_100A0A1E9 == 1)
  {
    uint64_t v12 = byte_100A06018;
    byte_100A0A1E8 = byte_100A06018;
    __memset_chk();
    if (v12)
    {
      for (uint64_t i = 0; i != v12; ++i)
        byte_100A0A1EA[i] = i;
    }
    sub_1002296C8(0, (uint64_t)&unk_100A0A211);
    if (!sub_10001BDE0(208, (uint64_t)sub_10020A8E0, v14, v15, v16, v17, v18, v19, v29)) {
      return 0;
    }
    sub_10025B8C0();
    int v32 = 105;
    v31[1] = &v32;
    v31[0] = (const void *)4;
    uint64_t v20 = sub_1000268E4((uint64_t)sub_10020A9F8, v31, 0, 0);
    if (!v20) {
      return 105;
    }
    uint64_t v9 = v20;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not register dispatchReadRemoteVersionInformation", v21, v22, v23, v24, v25, v26, v27, v30);
      uint64_t v28 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return v9;
  }

  return sub_1001FD008();
}

void sub_10020A8E0(int a1, unsigned int a2)
{
  int v20 = a1;
  if (a1) {
    a2 = (unsigned __int16)word_100A0A22A;
  }
  else {
    word_100A0A22A = a2;
  }
  if (a2 >= 0x673)
  {
    sub_10025B8C0();
    if ((unsigned __int16)word_100A0A22A >= 0x673u)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"fControllerMaxExtendedAdvertisingPayloadSize=%d", v2, v3, v4, v5, v6, v7, v8, (unsigned __int16)word_100A0A22A);
        uint64_t v9 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      word_100A0A22A = 1650;
    }
  }
  v19[1] = &v20;
  v19[0] = (const void *)4;
  if (sub_1000268E4((uint64_t)sub_10020A9F8, v19, 0, 0) && sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not register dispatchReadRemoteVersionInformation", v10, v11, v12, v13, v14, v15, v16, v18);
    uint64_t v17 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_10020A9F8(uint64_t a1)
{
  uint64_t result = off_100A0A220(**(unsigned int **)(a1 + 8), byte_100A0A1EA, byte_100A0A1E8);
  off_100A0A220 = 0;
  return result;
}

uint64_t sub_10020AA3C(uint64_t a1, char a2)
{
  if (a1)
  {
    uint64_t result = off_100A0A220(a1, byte_100A0A1EA, byte_100A0A1E8);
    off_100A0A220 = 0;
  }
  else
  {
    char v3 = byte_100A0A1E8;
    byte_100A0A1EA[byte_100A0A1E8] = a2;
    byte_100A0A1E8 = v3 + 1;
    if (byte_100A06018 == (v3 + 1))
    {
      __memset_chk();
      sub_1002296C8(0, (uint64_t)&unk_100A0A211);
      sub_1002296C8(0, (uint64_t)&unk_100A0A1F5);
      uint64_t v4 = (uint64_t (*)(void, char *, uint64_t))off_100A0A220;
      uint64_t v5 = byte_100A0A1E8;
      return v4(0, byte_100A0A1EA, v5);
    }
    else
    {
      *(_DWORD *)((char *)v6 + 3) = 0;
      v6[0] = 1;
      arc4random_buf((char *)v6 + 1, 6uLL);
      BYTE1(v6[0]) &= 0x3Fu;
      return sub_1001FD008();
    }
  }
  return result;
}

uint64_t sub_10020AB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!byte_100A0A1E8) {
    return 103;
  }
  if (byte_100A0A1E9)
  {
    uint64_t v8 = sub_10001BDE0(211, (uint64_t)nullsub_107, a3, a4, a5, a6, a7, a8, v31);
    if (v8)
    {
      uint64_t v9 = v8;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_HCI_CMD_LE_ClearAdvertisingSets returned %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint64_t v17 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
  else if (byte_100A06018)
  {
    unint64_t v19 = 0;
    do
    {
      uint64_t v20 = sub_1001FD094();
      if (v20)
      {
        uint64_t v21 = v20;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"BT_VSC_RemoveMultipleAdvInstance returned %!", v22, v23, v24, v25, v26, v27, v28, v21);
          uint64_t v29 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
          {
            uint64_t v30 = sub_100050714();
            *(_DWORD *)long long buf = 136446466;
            __int16 v33 = v30;
            __int16 v34 = 1024;
            int v35 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
      }
      ++v19;
    }
    while (v19 < byte_100A06018);
  }
  uint64_t result = 0;
  byte_100A0A1E8 = 0;
  off_100A0A220 = 0;
  return result;
}

BOOL sub_10020AD4C()
{
  return byte_100A06D2D == 3 || byte_100A06D2D == 0;
}

uint64_t sub_10020AD64(uint64_t result)
{
  byte_100A0A1E9 = result;
  return result;
}

uint64_t sub_10020AD70(uint64_t result)
{
  byte_100A0A228 = result;
  if (result) {
    byte_100A0A1E9 = 1;
  }
  return result;
}

uint64_t sub_10020AD8C(uint64_t result)
{
  byte_100A06018 = result;
  return result;
}

uint64_t sub_10020AD98()
{
  return (unsigned __int16)word_100A0A22A;
}

BOOL sub_10020ADA4()
{
  if (byte_100A0A1E8)
  {
    uint64_t v0 = 0;
    BOOL v1 = 0;
    for (uint64_t i = &byte_100A06D2D; (*i | 2) != 3; i += 3368)
    {
      BOOL v1 = ++v0 >= (unint64_t)byte_100A0A1E8;
      if (byte_100A0A1E8 == v0) {
        return 1;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ADV instance %d is in state %d", v3, v4, v5, v6, v7, v8, v9, byte_100A0A1EA[v0]);
      uint64_t v10 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v13 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    return 1;
  }
  return v1;
}

BOOL sub_10020AECC()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_isPeriodicAdvStarting", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v12);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v12 = 136446210;
      *(void *)&v12[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v12, 0xCu);
    }
  }
  uint64_t v8 = 0;
  char v9 = 1;
  do
  {
    int v10 = dword_100A0A250[420 * v8];
    if ((v9 & 1) == 0) {
      break;
    }
    char v9 = 0;
    uint64_t v8 = 1;
  }
  while (v10 != 1);
  return v10 == 1;
}

BOOL sub_10020AFC0(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_isPeriodicAdvCtxInUse advHandle=%d", v2, v3, v4, v5, v6, v7, v8, a1);
    char v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v16 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v10 = 0;
  int v11 = 1;
  do
  {
    while (1)
    {
      int v12 = v11;
      if (BYTE2(dword_100A0A250[420 * v10 + 1]) == a1) {
        break;
      }
      int v11 = 0;
      BOOL result = 0;
      uint64_t v10 = 1;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
    int v13 = dword_100A0A250[420 * v10];
    BOOL result = v13 == 2;
    if (v13 == 2) {
      break;
    }
    int v11 = 0;
    uint64_t v10 = 1;
  }
  while (((v12 ^ 1) & 1) == 0);
  return result;
}

_DWORD *sub_10020B0E8()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_AllocatePeriodicAdvCtx", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v21);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v21 = 136446210;
      *(void *)&uint8_t v21[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v21, 0xCu);
    }
  }
  uint64_t v8 = 0;
  char v9 = 1;
  do
  {
    uint64_t v10 = &dword_100A0A250[420 * v8];
    if (!*v10)
    {
      bzero(v10, 0x690uLL);
      return v10;
    }
    char v11 = v9;
    char v9 = 0;
    uint64_t v8 = 1;
  }
  while ((v11 & 1) != 0);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_AllocatePeriodicAdvCtx there is no free periodic advertisng parameter.", v12, v13, v14, v15, v16, v17, v18, *(uint64_t *)v21);
    unint64_t v19 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 0;
}

uint64_t sub_10020B22C(uint64_t (*a1)(void, void), uint64_t (*a2)(void, void))
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_InitPeriodicAdvertising", v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)v13);
    char v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v13 = 136446210;
      *(void *)&v13[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", v13, 0xCu);
    }
  }
  byte_100A0A238 = 0;
  off_100A0A240 = a1;
  off_100A0A248 = a2;
  bzero(dword_100A0A250, 0xD20uLL);
  return 0;
}

void sub_10020B324()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_TerminatePeriodicAdvertising", v0, v1, v2, v3, v4, v5, v6, v23);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v25 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_10020B4F4())
  {
    uint64_t v8 = 0;
    char v9 = 1;
    do
    {
      char v10 = v9;
      if ((dword_100A0A250[420 * v8] - 1) <= 1)
      {
        char v11 = &dword_100A0A250[420 * v8];
        unsigned int v13 = *((unsigned __int8 *)v11 + 6);
        uint64_t v12 = (unsigned __int8 *)v11 + 6;
        if (sub_10020B5C0(v13, 1))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to stop periodic advertising advHandle %x", v14, v15, v16, v17, v18, v19, v20, *v12);
            uint64_t v21 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              uint64_t v22 = sub_100050714();
              *(_DWORD *)long long buf = 136446466;
              uint64_t v25 = v22;
              __int16 v26 = 1024;
              int v27 = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
        }
      }
      char v9 = 0;
      uint64_t v8 = 1;
    }
    while ((v10 & 1) != 0);
  }
}

uint64_t sub_10020B4F4()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_ReturnNumPeriodicAdvStarted numPeriodicAdvStarted=%d", v0, v1, v2, v3, v4, v5, v6, byte_100A0A238);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      char v10 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return byte_100A0A238;
}

uint64_t sub_10020B5C0(unsigned int a1, char a2)
{
  uint64_t v4 = 0;
  char v5 = 1;
  do
  {
    char v6 = v5;
    if (BYTE2(dword_100A0A250[420 * v4 + 1]) == a1)
    {
      uint64_t v15 = &dword_100A0A250[420 * v4];
      goto LABEL_9;
    }
    char v5 = 0;
    uint64_t v4 = 1;
  }
  while ((v6 & 1) != 0);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_GetPeriodicAdvCtxByAdvHandle cannot find the context advHandle=%d.", v7, v8, v9, v10, v11, v12, v13, a1);
    uint64_t v14 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v15 = 0;
LABEL_9:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_StopPeriodicAdvertising advHandle=%d", v16, v17, v18, v19, v20, v21, v22, a1);
    uint64_t v23 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v80 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if ((a2 & 1) == 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_isPeriodicAdvStopping", v24, v25, v26, v27, v28, v29, v30, v78);
      uint64_t v31 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        int v32 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v80 = v32;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v33 = 0;
    char v34 = 1;
    do
    {
      int v35 = dword_100A0A250[420 * v33];
      if ((v34 & 1) == 0) {
        break;
      }
      char v34 = 0;
      uint64_t v33 = 1;
    }
    while (v35 != 3);
    if (v35 == 3)
    {
      if (!sub_100058654()) {
        return 117;
      }
      sub_100056E24((uint64_t)"LE_StopPeriodicAdvertising pending stop command", v54, v55, v56, v57, v58, v59, v60, v78);
      uint64_t v61 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
        return 117;
      }
      goto LABEL_41;
    }
  }
  if (v15)
  {
    if (off_100A0A248)
    {
      if (*v15 == 2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Stopping Periodic Advertising", v36, v37, v38, v39, v40, v41, v42, v78);
          uint64_t v43 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v44 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v80 = v44;
            _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t result = sub_10001BDE0(214, (uint64_t)sub_10020BDB0, v37, v38, v39, v40, v41, v42, 0);
        if (!result) {
          *uint64_t v15 = 3;
        }
        return result;
      }
      if (!sub_100058654()) {
        return 117;
      }
      sub_100056E24((uint64_t)"No LE Periodic Advertising in progress.", v70, v71, v72, v73, v74, v75, v76, v78);
      uint64_t v77 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
        return 117;
      }
LABEL_41:
      sub_100744F6C();
      return 117;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid periodic advertising parameters no periodicAdvStoppedCb", v62, v63, v64, v65, v66, v67, v68, v78);
      uint64_t v69 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 114;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_StopPeriodicAdvertising invalid advHandle=%d", v46, v47, v48, v49, v50, v51, v52, a1);
      uint64_t v53 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 120;
  }
}

uint64_t sub_10020B99C(unsigned __int8 *a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_StartPeriodicAdvertising advHandle=%d", v2, v3, v4, v5, v6, v7, v8, *a1);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v88 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_10020AECC())
  {
    if (!sub_100058654()) {
      return 117;
    }
    sub_100056E24((uint64_t)"LE_StartPeriodicAdvertising pending start command", v10, v11, v12, v13, v14, v15, v16, v86);
    uint64_t v17 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      return 117;
    }
    goto LABEL_7;
  }
  if (off_100A0A240)
  {
    unsigned int v19 = *a1;
    if (v19 >= 0xF0)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid periodic advertising parameters advHandle: %x", v20, v21, v22, v23, v24, v25, v26, *a1);
      uint64_t v27 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_25;
    }
    if (*((unsigned __int16 *)a1 + 1) <= 5u)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid periodic advertising parameters periodicAdvInterval: %x", v36, v37, v38, v39, v40, v41, v42, *((unsigned __int16 *)a1 + 1));
      uint64_t v43 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_25;
    }
    if ((a1[4] & 0xBF) != 0)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid periodic advertising parameters periodicAdvProperty: %x", v44, v45, v46, v47, v48, v49, v50, a1[4]);
      uint64_t v51 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
LABEL_25:
      sub_100744F6C();
      return 101;
    }
    if (sub_10020AFC0(v19))
    {
      if (!sub_100058654()) {
        return 117;
      }
      sub_100056E24((uint64_t)"LE_StartPeriodicAdvertising advHandle=%d is already started", v53, v54, v55, v56, v57, v58, v59, *a1);
      uint64_t v60 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
        return 117;
      }
LABEL_7:
      sub_100744F6C();
      return 117;
    }
    uint64_t v61 = sub_10020B0E8();
    if (v61)
    {
      uint64_t v68 = v61;
      *((unsigned char *)v61 + 6) = *a1;
      *((_WORD *)v61 + 4) = *((_WORD *)a1 + 1);
      *((unsigned char *)v61 + 10) = a1[4];
      size_t v69 = *((unsigned __int16 *)a1 + 3);
      if (*((_WORD *)a1 + 3))
      {
        memmove((char *)v61 + 14, a1 + 8, v69);
        *((_WORD *)v68 + 6) = *((_WORD *)a1 + 3);
        *((_WORD *)v68 + 832) = 0;
      }
      uint64_t v18 = sub_10020BD3C((unsigned __int8 *)v68, v62, v69, v63, v64, v65, v66, v67);
      if (v18)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not start the LE periodic advertising %!", v70, v71, v72, v73, v74, v75, v76, v18);
          uint64_t v77 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_StartPeriodicAdvertising No resource", v78, v79, v80, v81, v82, v83, v84, v86);
        uint64_t v85 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v85, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid periodic advertising parameters no periodicAdvStartedCb", v28, v29, v30, v31, v32, v33, v34, v86);
      int v35 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 114;
  }
  return v18;
}

uint64_t sub_10020BD3C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = sub_10001BDE0(212, (uint64_t)sub_10020DCC0, a3, a4, a5, a6, a7, a8, a1[6]);
  if (v9) {
    sub_10020DA20(a1);
  }
  else {
    *(_DWORD *)a1 = 1;
  }
  return v9;
}

void sub_10020BDB0(uint64_t a1)
{
  uint64_t v2 = 0;
  char v3 = 1;
  while (1)
  {
    uint64_t v4 = (unsigned __int8 *)&dword_100A0A250[420 * v2];
    if (*(_DWORD *)v4 == 3) {
      break;
    }
    char v5 = v3;
    char v3 = 0;
    uint64_t v2 = 1;
    if ((v5 & 1) == 0)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_GetPeriodicAdvCtxStopping cannot find the context", v6, v7, v8, v9, v10, v11, v12, v39);
        uint64_t v13 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_10025B8C0();
      uint64_t v4 = 0;
      break;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Periodic advertising stopped %! advHandle=%d", v14, v15, v16, v17, v18, v19, v20, a1);
    uint64_t v21 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v41 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_DWORD *)uint64_t v4 = 0;
  --byte_100A0A238;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"notifyPeriodicAdvStoppped status=%d advHandle=%d", v22, v23, v24, v25, v26, v27, v28, a1);
    uint64_t v29 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v41 = v30;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_10020DA20(v4);
  if (off_100A0A248)
  {
    off_100A0A248(a1, v4[6]);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find a callback, might be a problem ?", v31, v32, v33, v34, v35, v36, v37, v39);
    uint64_t v38 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_10020BFEC()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_RefreshPeriodicAdvRandomAddress", v0, v1, v2, v3, v4, v5, v6, v20);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v22 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  char v10 = 1;
  do
  {
    char v11 = v10;
    if (dword_100A0A250[420 * v8] == 2)
    {
      uint64_t v12 = (char *)&dword_100A0A250[420 * v8];
      v12[4] = 1;
      uint64_t v13 = v12 + 4;
      uint64_t v14 = sub_10001BDE0(214, (uint64_t)sub_10020C1E0, v1, v2, v3, v4, v5, v6, 1);
      if (v14)
      {
        uint64_t v15 = v14;
        *uint64_t v13 = 0;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Fail to refresh random address for periodic advertising advHandle=%d", v16, v1, v2, v3, v4, v5, v6, v13[2]);
          uint64_t v17 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            uint64_t v18 = sub_100050714();
            *(_DWORD *)long long buf = 136446466;
            uint64_t v22 = v18;
            __int16 v23 = 1024;
            int v24 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
        uint64_t v9 = v15;
      }
    }
    char v10 = 0;
    uint64_t v8 = 1;
  }
  while ((v11 & 1) != 0);
  return v9;
}

void sub_10020C1E0(uint64_t a1)
{
  uint64_t v2 = (unsigned __int8 *)sub_10020DC2C();
  if (!v2) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Periodic advertising started %! advHandle=%d addressChanged=%d", v3, v4, v5, v6, v7, v8, v9, a1);
    char v10 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v28 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (v2[4])
  {
    if (a1 && sub_100058654())
    {
      sub_100056E24((uint64_t)"Fail to refresh random address for periodic advertising advHandle=%d", v11, v12, v13, v14, v15, v16, v17, v2[6]);
      uint64_t v18 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    v2[4] = 0;
  }
  else
  {
    if (a1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not start advertising : %!", v19, v20, v21, v22, v23, v24, v25, a1);
        uint64_t v26 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      *(_DWORD *)uint64_t v2 = 2;
      ++byte_100A0A238;
    }
    sub_10020DAF0(a1, v2);
  }
}

uint64_t sub_10020C394(uint64_t result)
{
  byte_100A0A230 = result;
  return result;
}

uint64_t sub_10020C3A0()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_GetPeriodicAdvertisingEnabled enabled=%d", v0, v1, v2, v3, v4, v5, v6, byte_100A0A230);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      char v10 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return byte_100A0A230;
}

void sub_10020C46C(char a1)
{
  byte_100A0A21F = a1;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invoking fake OI_BUSY_FAIL every %d attempts", v1, v2, v3, v4, v5, v6, v7, byte_100A0A21F);
    uint64_t v8 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      char v10 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
}

uint64_t sub_10020C538()
{
  sub_10025B778("LE_Advertising:\n");
  uint64_t result = sub_10025B778("gNumOfAdvHandles=%d gInitMultiAdvCb=%x currentHandle=%d tech=%d extendedAdvertisingEnabled=%d gMaxControllerSupportedAdvertisingPacketSize=%d", byte_100A0A1E8, off_100A0A220, byte_100A0A1F4, byte_100A0A1E9, byte_100A0A228, (unsigned __int16)word_100A0A22A);
  if (byte_100A0A1E8)
  {
    unint64_t v1 = 0;
    uint64_t v2 = (char *)&unk_100A0A1F6;
    uint64_t v3 = &qword_100A06020;
    do
    {
      sub_10025B778("advertisingParams for instance %d :", v1);
      sub_10025B778("\tintervalMin=%d intervalMax=%d type=%d channelMap=%d state=%d", *((unsigned __int16 *)v3 + 8), *((unsigned __int16 *)v3 + 9), *((unsigned __int8 *)v3 + 20), *((unsigned __int8 *)v3 + 28), *((unsigned __int8 *)v3 + 3341));
      sub_10025B778("\tdata:%@", v3 + 4, *((unsigned __int16 *)v3 + 15));
      sub_10025B778("\tscanRsp:%@", v3 + 211, *((unsigned __int16 *)v3 + 843));
      sub_10025B778("\taddress: %: type:%d", v2, *(v2 - 1));
      sub_10025B778("\tprimaryPHY:%d", *((unsigned __int8 *)v3 + 3350));
      sub_10025B778("\tsecondaryPHY:%d", *((unsigned __int8 *)v3 + 3351));
      sub_10025B778("\tprimaryPhyOptions:%d", *((unsigned __int8 *)v3 + 3352));
      sub_10025B778("\tsecondaryPhyOptions:%d", *((unsigned __int8 *)v3 + 3353));
      sub_10025B778("\tuseDecisionBasedAdvPayload:%d", *((unsigned __int8 *)v3 + 3354));
      sub_10025B778("\tDBAFDecisionTypeFlags:%d", *((unsigned __int8 *)v3 + 3355));
      sub_10025B778("\tDBAFDecisionDataLength:%d", *((unsigned __int8 *)v3 + 3356));
      uint64_t result = sub_10025B778("\tDBAFDecisionData:%s", (const char *)v3[420]);
      ++v1;
      v2 += 7;
      v3 += 421;
    }
    while (v1 < byte_100A0A1E8);
  }
  return result;
}

void sub_10020C73C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a3;
  uint64_t v9 = a1;
  char v10 = 0;
  uint64_t v45 = qword_100A06028;
  uint64_t v11 = byte_100A06019;
  unint64_t v12 = 0x1FFFFFFFFFFFF7C7uLL;
  do
  {
    if (qword_100A06020[v12 + 2105]) {
      char v10 = (void (*)(uint64_t, uint64_t))qword_100A06020[v12 + 2105];
    }
    v12 += 421;
  }
  while (v12 * 8);
  if (a1)
  {
    if (byte_100A0A1E8)
    {
      if (byte_100A0A1E9)
      {
        uint64_t v13 = sub_10001BDE0(207, 0, a3, a4, a5, a6, a7, a8, 0);
        if (v13)
        {
          uint64_t v14 = v13;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not stop the LE advertising OI_HCI_CMD_LE_SetExtendedAdvertisingEnable returned %!", v15, v16, v17, v18, v19, v20, v21, v14);
            uint64_t v22 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
      }
      else
      {
        unint64_t v33 = 0;
        do
        {
          uint64_t v34 = sub_1001FD2C4();
          if (v34)
          {
            uint64_t v35 = v34;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not stop the LE advertising BT_VSC_SetMultipleAdvInstanceEnable returned  %!", v36, v37, v38, v39, v40, v41, v42, v35);
              uint64_t v43 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
              {
                uint64_t v44 = sub_100050714();
                *(_DWORD *)long long buf = 136446466;
                uint64_t v47 = v44;
                __int16 v48 = 1024;
                int v49 = 0xFFFF;
                _os_log_error_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
              }
            }
          }
          ++v33;
        }
        while (v33 < byte_100A0A1E8);
      }
    }
  }
  else if (!a2)
  {
    goto LABEL_14;
  }
  byte_100A0A1F4 = 0;
  uint64_t v23 = &qword_100A06020[421 * v8];
  bzero(v23 + 4, 0x672uLL);
  bzero(v23 + 211, 0x672uLL);
  *((_WORD *)v23 + 843) = 0;
  *((_WORD *)v23 + 15) = 0;
  *((unsigned char *)v23 + 3341) = 0;
LABEL_14:
  byte_100A06019 = 0;
  if (v10)
  {
    if (sub_10022A318())
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Stopped due to address change, recovering silentRestartSequence=%d", v24, v25, v26, v27, v28, v29, v30, v11);
        uint64_t v31 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v47 = v32;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      uint64_t v9 = 4073;
    }
    if ((v11 & 1) == 0) {
      v10(v9, v45);
    }
  }
}

void sub_10020CA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (a1)
  {
LABEL_2:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"advertisingDataCb Could not start advertising : %!", v9, v10, v11, v12, v13, v14, v15, v24);
      uint64_t v16 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    byte_100A06D2D = 0;
    sub_10020C73C(v8, 0, 0, v11, v12, v13, v14, v15);
    return;
  }
  if (word_100A066B6)
  {
    uint64_t v8 = sub_10001BDE0(169, (uint64_t)sub_10020CB1C, a3, a4, a5, a6, a7, a8, (unsigned __int16)word_100A066B6);
    if (!v8) {
      return;
    }
    goto LABEL_2;
  }
  if (sub_10001BDE0(169, (uint64_t)sub_10020CB1C, a3, a4, a5, a6, a7, a8, 0))
  {
    sub_10020CB1C(0, v17, v18, v19, v20, v21, v22, v23);
  }
}

void sub_10020CB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (a1 || (uint64_t v8 = sub_10001BDE0(170, (uint64_t)sub_10020CBCC, a3, a4, a5, a6, a7, a8, 1), v8))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"scanResponseDataCb Could not start advertising : %!", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    byte_100A06D2D = 0;
    sub_10020C73C(v8, 0, 0, v11, v12, v13, v14, v15);
  }
}

void sub_10020CBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"advertiseStart Could not start advertising : %!", v9, v10, a4, a5, a6, a7, a8, a1);
      uint64_t v11 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  byte_100A06D2D = 2;
  sub_10020C73C(a1, 0, 0, a4, a5, a6, a7, a8);
}

uint64_t sub_10020CC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = byte_100A0A1F4;
  if (!byte_100A0A1E9)
  {
    uint64_t v10 = sub_1001FD120();
    if (v10) {
      return v10;
    }
LABEL_9:
    uint64_t v10 = 0;
    BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 1;
    return v10;
  }
  if (byte_100A0A1F4 == 4) {
    uint64_t v8 = &dword_100000004;
  }
  uint64_t v9 = sub_10001BDE0(204, (uint64_t)sub_10020D128, a3, a4, a5, a6, a7, a8, byte_100A0A1EA[v8]);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = v9;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_HCI_CMD_LE_SetExtendedAdvertisingParameters returned %!", v11, v12, v13, v14, v15, v16, v17, v10);
    uint64_t v18 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return v10;
}

void sub_10020CE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (a1)
  {
LABEL_2:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"setMultipleAdvParamsCompleteCb Could not start advertising : %!", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v17 = byte_100A0A1F4;
    BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 0;
    sub_10020C73C(v8, 0, v17, v11, v12, v13, v14, v15);
    return;
  }
  if (!HIWORD(qword_100A06020[421 * byte_100A0A1F4 + 3])
    || (byte_100A0A1F4 == 4
      ? (BOOL v18 = BYTE4(qword_100A06020[421 * byte_100A0A1F4 + 210]) == 0)
      : (BOOL v18 = 0),
        v18))
  {
    sub_10020D2A8(0, a2, a3, a4, a5, a6, a7, a8);
    return;
  }
  if (!byte_100A0A1E9)
  {
    if (HIWORD(qword_100A06020[421 * byte_100A0A1F4 + 3]) >= 0x20u) {
      sub_10025B8C0();
    }
    uint64_t v36 = sub_1001FD1AC();
LABEL_28:
    uint64_t v8 = v36;
    if (!v36) {
      return;
    }
    goto LABEL_2;
  }
  if (!BYTE2(qword_100A06020[421 * byte_100A0A1F4 + 419]))
  {
    uint64_t v36 = sub_10020D474(a1, a2, a3, a4, a5, a6, a7, a8);
    goto LABEL_28;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"We are using DBAF! Sending Decision Ind Data instead.", v19, v20, v21, v22, v23, v24, v25, v37);
    uint64_t v26 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v39 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v27 = sub_10001BDE0(257, (uint64_t)sub_10020D944, v20, v21, v22, v23, v24, v25, byte_100A0A1EA[byte_100A0A1F4]);
  if (v27)
  {
    uint64_t v8 = v27;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_HCI_CMD_LE_SetDecisionDataCommand returned %!", v28, v29, v30, v31, v32, v33, v34, v8);
      uint64_t v35 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_2;
  }
}

void sub_10020D128(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_10022A2E0(a2, byte_100A0A1F4);
  uint64_t v10 = byte_100A0A1F4;
  if (!byte_100A0A1F4)
  {
    uint64_t v11 = (unsigned __int16)word_100A0603E;
    if (word_100A0603E)
    {
      int v12 = 0;
      unsigned __int8 v13 = 0;
      do
      {
        if ((unsigned __int16)word_100A0603E - 2 > v12
          && *((unsigned char *)&qword_100A06020[4] + v13) == 2
          && *((unsigned char *)&qword_100A06020[4] + (v12 + 1)) == 10)
        {
          uint64_t v15 = (v12 + 2);
          goto LABEL_10;
        }
        int v12 = ++v13;
      }
      while (v13 < (unsigned __int16)word_100A0603E);
      if ((unsigned __int16)word_100A0603E > 0x1Bu) {
        goto LABEL_11;
      }
    }
    word_100A0603E += 3;
    uint64_t v14 = (char *)&unk_100A06040 + v11;
    *uint64_t v14 = 2;
    uint64_t v15 = v11 + 2;
    v14[1] = 10;
LABEL_10:
    *((unsigned char *)&qword_100A06020[4] + v15) = v2;
  }
LABEL_11:
  uint64_t v16 = &qword_100A06020[421 * v10];
  uint64_t v17 = *((unsigned __int8 *)v16 + 3352);
  if (*((unsigned char *)v16 + 3352))
  {
    if (a1) {
      goto LABEL_13;
    }
    LODWORD(v4) = BYTE1(qword_100A06020[421 * v10 + 419]);
  }
  else if (a1 {
         || (BOOL v18 = &qword_100A06020[421 * v10],
  }
             uint64_t v4 = *((unsigned __int8 *)v18 + 3353),
             !*((unsigned char *)v18 + 3353)))
  {
LABEL_13:
    sub_10020CE74(a1, v17, v4, v5, v6, v7, v8, v9);
    return;
  }
  uint64_t v19 = sub_10020A608(byte_100A0A1EA[v10], v17, v4);
  if (v19)
  {
    sub_10020D9A8(v19, v20, v21, v22, v23, v24, v25, v26);
  }
}

void sub_10020D2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (!a1)
  {
    if (HIWORD(qword_100A06020[421 * byte_100A0A1F4 + 210]) && !byte_100A0A1F4)
    {
      if (byte_100A0A1E9)
      {
        uint64_t v18 = sub_10001BDE0(206, (uint64_t)sub_10020D594, (uint64_t)&unk_100A066B8, a4, a5, a6, a7, a8, byte_100A0A1EA[byte_100A0A1F4]);
        if (!v18) {
          return;
        }
        uint64_t v8 = v18;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_HCI_CMD_LE_SetExtendedScanResponseData returned %!", a2, a3, a4, a5, a6, a7, a8, v8);
          uint64_t v19 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        uint64_t v8 = sub_1001FD238();
      }
      if (HIWORD(qword_100A06020[421 * byte_100A0A1F4 + 210])) {
        BOOL v20 = v8 == 0;
      }
      else {
        BOOL v20 = 1;
      }
      if (v20)
      {
        if (!v8) {
          return;
        }
        goto LABEL_2;
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
    sub_10020D594(0, a2, a3, a4, a5, a6, a7, a8);
    return;
  }
LABEL_2:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"setMultipleAdvertisingDataCompleteCb Could not start advertising : %!", v9, v10, v11, v12, v13, v14, v15, v8);
    uint64_t v16 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v17 = byte_100A0A1F4;
  BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 0;
  sub_10020C73C(v8, 0, v17, v11, v12, v13, v14, v15);
}

uint64_t sub_10020D474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = &qword_100A06020[421 * byte_100A0A1F4];
  __int16 v9 = *((_WORD *)v8 + 841);
  if ((unsigned __int16)(*((_WORD *)v8 + 15) - v9) >= 0xFBu) {
    __int16 v10 = 251;
  }
  else {
    __int16 v10 = *((_WORD *)v8 + 15) - v9;
  }
  uint64_t v11 = sub_10001BDE0(205, (uint64_t)sub_10020D948, a3, a4, a5, a6, a7, a8, byte_100A0A1EA[byte_100A0A1F4]);
  if (v11)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_HCI_CMD_LE_SetExtendedAdvertisingData returned %!", v12, v13, v14, v15, v16, v17, v18, v11);
      uint64_t v19 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    WORD1(qword_100A06020[421 * byte_100A0A1F4 + 210]) += v10;
  }
  return v11;
}

void sub_10020D594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  if (a1)
  {
LABEL_2:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"setMultipleAdvertisingScanRspDataCompleteCb Could not start advertising : %!", v9, v10, v11, v12, v13, v14, v15, v8);
      uint64_t v16 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v17 = byte_100A0A1F4;
    BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 0;
    sub_10020C73C(v8, 0, v17, v11, v12, v13, v14, v15);
    return;
  }
  uint64_t v18 = byte_100A0A1F4;
  uint64_t v19 = (int *)((char *)&unk_100A0A1F5 + 8 * v18 - v18);
  BOOL v20 = (int *)((char *)&qword_100A06020[421 * byte_100A0A1F4 + 417] + 6);
  int v21 = *v19;
  int v22 = *(int *)((char *)v19 + 3);
  if (v21 != *v20 || v22 != *(_DWORD *)((char *)&qword_100A06020[421 * byte_100A0A1F4 + 418] + 1))
  {
    uint64_t v24 = sub_10020A4D8(v20, byte_100A0A1F4, (uint64_t)sub_10020D6F8, a4, a5, a6, a7, a8);
    if (!v24) {
      return;
    }
    uint64_t v8 = v24;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_UpdateMultiAdvertisingSetAddress returned %!", v25, v26, v27, v28, v29, v30, v31, v8);
      uint64_t v32 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    goto LABEL_2;
  }

  sub_10020D6F8((uint64_t)v20, v18, a3, a4, a5, a6, a7, a8);
}

void sub_10020D6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = (_DWORD *)((char *)&unk_100A0A1F5 + 8 * byte_100A0A1F4 - byte_100A0A1F4);
  uint64_t v9 = (_DWORD *)((char *)&qword_100A06020[421 * byte_100A0A1F4 + 417] + 6);
  *uint64_t v8 = *v9;
  *(_DWORD *)((char *)v8 + 3) = *(_DWORD *)((char *)v9 + 3);
  if (byte_100A0A1E9)
  {
    uint64_t v10 = sub_10001BDE0(207, (uint64_t)sub_10020D89C, a3, a4, a5, a6, a7, a8, 1);
    if (!v10) {
      return;
    }
    uint64_t v11 = v10;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to start advertising OI_HCI_CMD_LE_SetExtendedAdvertisingEnable returned %!", v12, v13, v14, v15, v16, v17, v18, v11);
      uint64_t v19 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    uint64_t v11 = sub_1001FD2C4();
    if (!v11) {
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"setAdvertisingSetAddressBeforeEnablingCB Could not start advertising : %!", v20, v21, v22, v23, v24, v25, v26, v11);
    uint64_t v27 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v28 = byte_100A0A1F4;
  BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 0;
  sub_10020C73C(v11, 0, v28, v22, v23, v24, v25, v26);
}

void sub_10020D89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"multipleAdvStartCb Could not start advertising : %!", v9, v10, a4, a5, a6, a7, a8, a1);
      uint64_t v11 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    BYTE5(qword_100A06020[421 * byte_100A0A1F4 + 417]) = 2;
  }
  sub_10020C73C(a1, 0, byte_100A0A1F4, a4, a5, a6, a7, a8);
}

void sub_10020D948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1
    || HIWORD(qword_100A06020[421 * byte_100A0A1F4 + 3]) == WORD1(qword_100A06020[421
                                                                                                 * byte_100A0A1F4
                                                                                                 + 210])
    || (a1 = sub_10020D474(), a1))
  {
    sub_10020D2A8(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

void sub_10020D9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not setAdvPhyOptions: %!", a2, a3, a4, a5, a6, a7, a8, a1);
      uint64_t v9 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  sub_10020CE74(0, a2, a3, a4, a5, a6, a7, a8);
}

void sub_10020DA20(void *a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_FreePeriodicAdvCtx", v2, v3, v4, v5, v6, v7, v8, *(uint64_t *)v10);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v10 = 136446210;
      *(void *)&v10[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", v10, 0xCu);
    }
  }
  if (a1) {
    bzero(a1, 0x690uLL);
  }
}

void sub_10020DAF0(uint64_t a1, unsigned __int8 *a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"notifyPeriodicAdvStarted status=%d advHandle=%d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v22 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1) {
    sub_10020DA20(a2);
  }
  if (off_100A0A240)
  {
    off_100A0A240(a1, a2[6]);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not find a callback, might be a problem ?", v12, v13, v14, v15, v16, v17, v18, v20);
    uint64_t v19 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

_DWORD *sub_10020DC2C()
{
  uint64_t v0 = 0;
  for (char i = 1; ; char i = 0)
  {
    uint64_t result = (_DWORD *)((char *)&unk_100A0A250 + 1680 * v0);
    if (*result == 1) {
      break;
    }
    char v3 = i;
    uint64_t v0 = 1;
    if ((v3 & 1) == 0)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_GetPeriodicAdvCtxStarting cannot find the context", v4, v5, v6, v7, v8, v9, v10, v12);
        uint64_t v11 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 0;
    }
  }
  return result;
}

void sub_10020DCC0(uint64_t a1)
{
  uint64_t v2 = (unsigned __int8 *)sub_10020DC2C();
  if (!v2) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"setPeriodicAdvParamsCompleteCb status %! ", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v29 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1)
  {
LABEL_7:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not start periodic advertising : %!", v11, v12, v13, v14, v15, v16, v17, a1);
      uint64_t v18 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    *(_DWORD *)uint64_t v2 = 0;
    sub_10020DAF0(a1, v2);
    return;
  }
  if (*((_WORD *)v2 + 6))
  {
    a1 = sub_10020E03C((uint64_t)v2);
    if (!a1) {
      return;
    }
    goto LABEL_7;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Periodic advertising data size is 0, skip setting data for adv instance %d", v19, v20, v21, v22, v23, v24, v25, v2[6]);
    uint64_t v26 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v29 = v27;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_10020DE98(0, v2);
}

void sub_10020DE98(uint64_t a1, unsigned __int8 *a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Set Periodic Advertising Data Complete %! advHandle=%d", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v30 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a1)
  {
    uint64_t v20 = sub_10001BDE0(214, (uint64_t)sub_10020C1E0, v5, v6, v7, v8, v9, v10, 1);
    if (!v20) {
      return;
    }
    a1 = v20;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to start advertising OI_HCI_CMD_LE_SetPeriodicAdvertisingEnable returned %!", v21, v22, v23, v24, v25, v26, v27, a1);
      uint64_t v28 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not start peirodic advertising : %!", v12, v13, v14, v15, v16, v17, v18, a1);
    uint64_t v19 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  *(_DWORD *)a2 = 0;
  sub_10020DAF0(a1, a2);
}

uint64_t sub_10020E03C(uint64_t a1)
{
  unsigned __int16 v2 = *(_WORD *)(a1 + 12) - *(_WORD *)(a1 + 1664);
  if (v2 >= 0xFCu) {
    __int16 v3 = 252;
  }
  else {
    __int16 v3 = *(_WORD *)(a1 + 12) - *(_WORD *)(a1 + 1664);
  }
  if (v2 > 0xFCu) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 3;
  }
  if (*(_WORD *)(a1 + 1664)) {
    uint64_t v5 = 2 * (v2 < 0xFDu);
  }
  else {
    uint64_t v5 = v4;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"setPeriodicAdvDataPacket operation:%d dataLeft:%d totalDataLen:%d dataLengthThisPacket:%d position:%d", v6, v7, v8, v9, v10, v11, v12, v5);
    uint64_t v13 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v25 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v14 = sub_10001BDE0(213, (uint64_t)sub_10020E1E4, v7, v8, v9, v10, v11, v12, *(unsigned __int8 *)(a1 + 6));
  if (v14)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_HCI_CMD_LE_SetPeriodicAdvertisingData returned %!", v15, v16, v17, v18, v19, v20, v21, v14);
      uint64_t v22 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(_WORD *)(a1 + 1664) += v3;
  }
  return v14;
}

void sub_10020E1E4(uint64_t a1)
{
  unsigned __int16 v2 = (unsigned __int8 *)sub_10020DC2C();
  if (!v2) {
    sub_10025B8C0();
  }
  int v3 = *((unsigned __int16 *)v2 + 6);
  int v4 = *((unsigned __int16 *)v2 + 832);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"setPeriodicAdvDataPacketCompleteCb dataLeft:%d status:%!", v5, v6, v7, v8, v9, v10, v11, (unsigned __int16)(v3 - v4));
    uint64_t v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v14 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1 || v3 == v4 || (a1 = sub_10020E03C(v2), a1)) {
    sub_10020DE98(a1, v2);
  }
}

uint64_t sub_10020E300()
{
  if (qword_100A0AF80) {
    return qword_100A0AF80();
  }
  return result;
}

uint64_t sub_10020E314()
{
  if (off_100A0AF90) {
    return off_100A0AF90();
  }
  return result;
}

uint64_t sub_10020E328()
{
  if (off_100A0AF88) {
    return off_100A0AF88();
  }
  return result;
}

uint64_t sub_10020E33C()
{
  xmmword_100A0AFA0 = 0u;
  unk_100A0AFB0 = 0u;
  qword_100A0AFC0 = 0;
  sub_10023413C((__n128 *)off_10099F120);
  if (v0)
  {
    uint64_t v1 = v0;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to add state callbacks : %!", v2, v3, v4, v5, v6, v7, v8, v1);
      uint64_t v9 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
LABEL_4:
      }
        sub_100744F6C();
    }
  }
  else
  {
    uint64_t v10 = sub_100224014((uint64_t)off_10099F138);
    if (v10)
    {
      uint64_t v1 = v10;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to add GAP connections callbacks : %!", v11, v12, v13, v14, v15, v16, v17, v1);
        uint64_t v18 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      dword_100A0AFC8 = 0;
      qword_100A0AFD0 = 0;
      uint64_t v1 = sub_1001DEA28(4u, 3, 16, 3u, &xmmword_100A0AFA0, (uint64_t)sub_10020FE04);
      if (v1 || !(void)xmmword_100A0AFA0)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not register the l2cap : %!", v19, v20, v21, v22, v23, v24, v25, v1);
          uint64_t v26 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(_WORD *)sub_1001E688C((unsigned int *)xmmword_100A0AFA0) = 527;
        *(_WORD *)(sub_1001E688C((unsigned int *)xmmword_100A0AFA0) + 2) = -1;
      }
      if (sub_100058654())
      {
        uint64_t v27 = (unsigned __int16 *)sub_1001E688C((unsigned int *)xmmword_100A0AFA0);
        sub_100056E24((uint64_t)"ATT L2CAP channel MTU: %d", v28, v29, v30, v31, v32, v33, v34, *v27);
        uint64_t v35 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136446210;
          __int16 v48 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      qword_100A0AFD8 = (uint64_t)sub_10025959C(0, (uint64_t)sub_100212218);
      uint64_t v36 = sub_10010D4E4();
      if (v36)
      {
        uint64_t v37 = v36;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"ATT classic registration failed with %!", v38, v39, v40, v41, v42, v43, v44, v37);
          uint64_t v45 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
    }
  }
  return v1;
}

void sub_10020E5FC()
{
  if ((void)xmmword_100A0AFA0) {
    sub_1001DEC18(xmmword_100A0AFA0);
  }
  uint64_t v0 = (void *)*((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    do
    {
      uint64_t v1 = (void *)v0[10];
      uint64_t v2 = (void *)v0[6];
      if (v2) {
        sub_100023010(v2);
      }
      if (off_100A0AF98) {
        off_100A0AF98(v0);
      }
      sub_100023010(v0);
      uint64_t v0 = v1;
    }
    while (v1);
  }
  sub_1002341F8(off_10099F120);
  sub_1002241AC((uint64_t)off_10099F138);
  qword_100A0AFC0 = 0;
  xmmword_100A0AFA0 = 0u;
  unk_100A0AFB0 = 0u;
  if (qword_100A0AFD8) {
    sub_1002595D8((void *)qword_100A0AFD8);
  }
  off_100A0AFE0 = 0;
  dword_100A0AFC8 = 0;
  qword_100A0AFD0 = 0;
}

uint64_t sub_10020E6C4(void *a1)
{
  if (off_100A0AFE0) {
    return 119;
  }
  uint64_t result = 0;
  off_100A0AFE0 = a1;
  return result;
}

uint64_t sub_10020E6E8(void *a1, uint64_t a2)
{
  if (!a1) {
    return 101;
  }
  if (off_100A0AFB8) {
    return 119;
  }
  uint64_t result = 0;
  off_100A0AFB8 = a1;
  qword_100A0AFC0 = a2;
  return result;
}

void *sub_10020E720(void *result)
{
  if (off_100A0AFB8 == result)
  {
    off_100A0AFB8 = 0;
    qword_100A0AFC0 = 0;
  }
  return result;
}

uint64_t (*sub_10020E744(void *a1))(void)
{
  uint64_t v1 = (void *)*((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    return 0;
  }
  uint64_t v3 = (void *)*((void *)&xmmword_100A0AFA0 + 1);
  while (v3 != a1)
  {
    uint64_t v3 = (void *)v3[10];
    if (!v3) {
      return 0;
    }
  }
  uint64_t v4 = a1[11];
  if (v4) {
    *(void *)(v4 + 80) = a1[10];
  }
  uint64_t v5 = a1[10];
  if (v5) {
    *(void *)(v5 + 88) = v4;
  }
  if (v1 == a1) {
    *((void *)&xmmword_100A0AFA0 + 1) = v5;
  }
  uint64_t v6 = (void *)a1[6];
  if (v6) {
    sub_100023010(v6);
  }
  uint64_t v7 = *((unsigned int *)a1 + 15);
  if (v7) {
    sub_100026DB4(v7);
  }
  if (off_100A0AF98) {
    off_100A0AF98(a1);
  }
  uint64_t v8 = (void *)sub_1002599CC(qword_100A0AFD8);
  for (ptr = v8; ptr; uint64_t v8 = ptr)
  {
    while (1)
    {
      uint64_t v9 = sub_1002599F0((uint64_t)v8);
      if (v9) {
        break;
      }
LABEL_25:
      sub_100259A44(qword_100A0AFD8, ptr, 1);
      uint64_t v8 = (void *)sub_1002599CC(qword_100A0AFD8);
      ptr = v8;
      if (!v8) {
        goto LABEL_26;
      }
    }
    if (*a1 == *(void *)v9)
    {
      if (!*(unsigned char *)(v9 + 16)) {
        sub_10020E8E0();
      }
      goto LABEL_25;
    }
    sub_1002599D4((uint64_t)&ptr);
  }
LABEL_26:
  if (*a1 != qword_100A0AFD0)
  {
LABEL_29:
    sub_100023010(a1);
    return 0;
  }
  uint64_t v22 = 0;
  uint64_t v10 = sub_1001DD56C(4u, &v22);
  if (!v10)
  {
    uint64_t v11 = v22;
    *(void *)(v22 + 8) = 0;
    *(void *)(v11 + 16) = 0;
    *(_WORD *)(v11 + 24) = 0;
    sub_10020E94C();
    goto LABEL_29;
  }
  uint64_t v13 = v10;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_LE_ATT_RemoveATTSession %!", v14, v15, v16, v17, v18, v19, v20, v13);
    uint64_t v21 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  sub_10010B394(v13);
  return sub_10020E8E0();
}

uint64_t (*sub_10020E8E0())(void)
{
  int v0 = dword_100A0AFC8;
  if (dword_100A0AFC8 <= 0)
  {
    sub_10025B8C0();
    int v0 = dword_100A0AFC8;
  }
  dword_100A0AFC8 = v0 - 1;
  uint64_t result = (uint64_t (*)(void))off_100A0AFE0;
  if (v0 == 1 && off_100A0AFE0 != 0)
  {
    return (uint64_t (*)(void))result();
  }
  return result;
}

void sub_10020E94C()
{
  qword_100A0AFD0 = 0;
  do
  {
    int v0 = (uint64_t *)sub_1002598B4(qword_100A0AFD8, 0);
    if (!v0) {
      break;
    }
    uint64_t v1 = v0;
    if (!*v0)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_ATT_WriteCfm - Packet handle NULL", v2, v3, v4, v5, v6, v7, v8, v20);
        uint64_t v9 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_1007498EC(&v23, &v24);
        }
      }
    }
    uint64_t v10 = sub_10020F15C(*v1);
    uint64_t v11 = v10;
    if (v10 != 412)
    {
      if (v10)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_ATT_WriteCfm - Write Failed:%!", v12, v13, v14, v15, v16, v17, v18, v11);
          uint64_t v19 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
            sub_1007498EC(&v21, &v22);
          }
        }
      }
      else
      {
        qword_100A0AFD0 = *v1;
      }
    }
    if (!*((unsigned char *)v1 + 16)) {
      sub_10020E8E0();
    }
    sub_10025C3A8(v1[1]);
    sub_100023010(v1);
  }
  while (v11);
  if (!qword_100A0AFD0) {
    sub_100213868();
  }
}

uint64_t sub_10020EAE4(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3 = a1;
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 18) = a3;
  *(_WORD *)(a1 + 64) = 0;
  uint64_t v4 = sub_1002131E4(a2, a3);
  *(void *)(v3 + 72) = v4;
  if (!v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to allocate ATT DB Session", v5, v6, v7, v8, v9, v10, v11, v14);
      uint64_t v12 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  return v3;
}

unsigned char *sub_10020EB6C(uint64_t a1, char a2)
{
  if (sub_10020EC74(a1))
  {
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Already have a session ATT", v4, v5, v6, v7, v8, v9, v10, v25);
    uint64_t v11 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
    goto LABEL_4;
  }
  uint64_t result = sub_10010CE48(0x68uLL);
  if (!result)
  {
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Failed to allocate the bearer", v17, v18, v19, v20, v21, v22, v23, v25);
    uint64_t v24 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
LABEL_4:
    sub_100744F6C();
    return 0;
  }
  result[66] = a2;
  int v13 = *(_DWORD *)a1;
  __int16 v14 = *(_WORD *)(a1 + 4);
  *((void *)result + 10) = 0;
  *((_WORD *)result + 6) = v14;
  *((_DWORD *)result + 2) = v13;
  uint64_t v15 = *((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    do
    {
      uint64_t v16 = v15;
      uint64_t v15 = *(void *)(v15 + 80);
    }
    while (v15);
    *((void *)result + 11) = v16;
    *(void *)(v16 + 80) = result;
  }
  else
  {
    *((void *)&xmmword_100A0AFA0 + 1) = result;
    *((void *)result + 10) = 0;
    *((void *)result + 11) = 0;
  }
  return result;
}

uint64_t sub_10020EC74(uint64_t a1)
{
  for (uint64_t result = *((void *)&xmmword_100A0AFA0 + 1); result; uint64_t result = *(void *)(result + 80))
  {
    if (*(_DWORD *)(result + 8) == *(_DWORD *)a1 && *(unsigned __int16 *)(result + 12) == *(unsigned __int16 *)(a1 + 4)) {
      break;
    }
  }
  return result;
}

uint64_t sub_10020ECAC(uint64_t a1, char a2)
{
  uint64_t v4 = (void *)*((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    while (*v4 != a1)
    {
      uint64_t v4 = (void *)v4[10];
      if (!v4) {
        goto LABEL_4;
      }
    }
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Already have a session ATT", v9, v10, v11, v12, v13, v14, v15, v26);
    uint64_t v16 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
LABEL_13:
    sub_100744F6C();
    return 0;
  }
LABEL_4:
  sub_1001F667C(a1);
  sub_100217614(a1);
  uint64_t v5 = sub_10010CE48(0x68uLL);
  if (!v5)
  {
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Failed to allocate the bearer", v17, v18, v19, v20, v21, v22, v23, v26);
    uint64_t v24 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
    goto LABEL_13;
  }
  v5[66] = a2;
  int v6 = *(_DWORD *)(a1 + 49);
  *((_WORD *)v5 + 6) = *(_WORD *)(a1 + 53);
  *((_DWORD *)v5 + 2) = v6;
  LOBYTE(v6) = *(unsigned char *)(a1 + 48);
  *((void *)v5 + 10) = 0;
  v5[14] = v6;
  uint64_t v7 = *((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    do
    {
      uint64_t v8 = v7;
      uint64_t v7 = *(void *)(v7 + 80);
    }
    while (v7);
    *((void *)v5 + 11) = v8;
    *(void *)(v8 + 80) = v5;
  }
  else
  {
    *((void *)&xmmword_100A0AFA0 + 1) = v5;
    *((void *)v5 + 10) = 0;
    *((void *)v5 + 11) = 0;
  }

  return sub_10020EAE4((uint64_t)v5, a1, 23);
}

void *sub_10020EE0C(uint64_t a1)
{
  uint64_t result = (void *)*((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    do
    {
      if (*result == a1) {
        break;
      }
      uint64_t result = (void *)result[10];
    }
    while (result);
  }
  return result;
}

uint64_t sub_10020EE34(unsigned __int16 *a1)
{
  uint64_t v1 = (uint64_t *)*((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    return 149;
  }
  while ((unsigned __int16 *)*v1 != a1)
  {
    uint64_t v1 = (uint64_t *)v1[10];
    if (!v1) {
      return 149;
    }
  }
  if (v1[9])
  {
    sub_1002134D0(a1);
    a1 = (unsigned __int16 *)*v1;
  }
  if (!a1)
  {
    sub_10025B8C0();
    a1 = (unsigned __int16 *)*v1;
  }
  if (sub_100197770((uint64_t)a1)) {
    sub_1002176F8(*v1);
  }
  sub_10020E744(v1);
  return 0;
}

uint64_t sub_10020EEB0(int a1)
{
  for (uint64_t result = *((void *)&xmmword_100A0AFA0 + 1); result; uint64_t result = *(void *)(result + 80))
  {
    if (*(unsigned __int16 *)(result + 16) == a1) {
      break;
    }
  }
  return result;
}

uint64_t sub_10020EED8(uint64_t a1)
{
  uint64_t v1 = 0;
  if (a1)
  {
    uint64_t v2 = *((void *)&xmmword_100A0AFA0 + 1);
    if (*((void *)&xmmword_100A0AFA0 + 1))
    {
      while (v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 80);
        if (!v2) {
          return 0;
        }
      }
      return *(unsigned __int16 *)(a1 + 18);
    }
  }
  return v1;
}

uint64_t sub_10020EF10(uint64_t result, __int16 a2)
{
  if (result)
  {
    uint64_t v2 = *((void *)&xmmword_100A0AFA0 + 1);
    if (*((void *)&xmmword_100A0AFA0 + 1))
    {
      while (v2 != result)
      {
        uint64_t v2 = *(void *)(v2 + 80);
        if (!v2) {
          return result;
        }
      }
      *(_WORD *)(result + 18) = a2;
    }
  }
  return result;
}

uint64_t sub_10020EF3C(uint64_t a1)
{
  uint64_t v1 = 0;
  if (a1)
  {
    uint64_t v2 = *((void *)&xmmword_100A0AFA0 + 1);
    if (*((void *)&xmmword_100A0AFA0 + 1))
    {
      while (v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 80);
        if (!v2) {
          return 0;
        }
      }
      return *(void *)(a1 + 72);
    }
  }
  return v1;
}

uint64_t sub_10020EF74(uint64_t a1, uint64_t a2, char a3, BOOL *a4)
{
  if (!qword_100A0AFD0)
  {
    uint64_t v9 = sub_10020F15C(a1);
    if (v9 != 412)
    {
      uint64_t v8 = v9;
      if (!v9)
      {
        qword_100A0AFD0 = a1;
        if (!a4) {
          return v8;
        }
        goto LABEL_28;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Wrote ATT MBUF - Write Failed:%! reliable:%d _queuedNonReliablePackets:%d", v21, v22, v23, v24, v25, v26, v27, v8);
        uint64_t v28 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          sub_100745764();
          if (!a4) {
            return v8;
          }
          goto LABEL_28;
        }
      }
      goto LABEL_27;
    }
    if (qword_100A0AFD0) {
      sub_10025B8C0();
    }
LABEL_26:
    uint64_t v8 = 0;
LABEL_27:
    if (!a4) {
      return v8;
    }
LABEL_28:
    *a4 = qword_100A0AFD0 == 0;
    return v8;
  }
  if ((a3 & 1) == 0 && dword_100A0AFC8 > 31)
  {
    uint64_t v8 = 4001;
    if (!a4) {
      return v8;
    }
    goto LABEL_28;
  }
  uint64_t v10 = sub_100022FE8(0x18uLL);
  if (!v10)
  {
    uint64_t v8 = 106;
    if (!a4) {
      return v8;
    }
    goto LABEL_28;
  }
  uint64_t v11 = v10;
  void *v10 = a1;
  *((unsigned char *)v10 + 16) = a3;
  uint64_t v12 = sub_10025C220(v10 + 1, a2, 0);
  if (!v12)
  {
    sub_100259764(qword_100A0AFD8, (uint64_t)v11, 8);
    if ((a3 & 1) == 0)
    {
      uint64_t v8 = 0;
      ++dword_100A0AFC8;
      if (!a4) {
        return v8;
      }
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  uint64_t v8 = v12;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Wrote ATT MBUF - OI_MBUF_Copy Failed:%!", v13, v14, v15, v16, v17, v18, v19, v8);
    uint64_t v20 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  sub_100023010(v11);
  if (a4) {
    goto LABEL_28;
  }
  return v8;
}

uint64_t sub_10020F15C(uint64_t a1)
{
  if (sub_100197698(a1))
  {
    uint64_t v2 = *((void *)&xmmword_100A0AFA0 + 1);
    if (*((void *)&xmmword_100A0AFA0 + 1))
    {
      while (*(void *)v2 != a1)
      {
        uint64_t v2 = *(void *)(v2 + 80);
        if (!v2) {
          goto LABEL_5;
        }
      }
      if (!*(_WORD *)(v2 + 16)) {
        sub_10025B8C0();
      }
LABEL_12:
      JUMPOUT(0x1001DE1A4);
    }
LABEL_5:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can not find classic session in ATT WriteBuf", v3, v4, v5, v6, v7, v8, v9, v12);
      uint64_t v10 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else if (sub_100197770(a1))
  {
    goto LABEL_12;
  }
  return 4202;
}

uint64_t sub_10020F264(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  __int16 v7 = a3;
  if (a3 < 0x17) {
    return 101;
  }
  if (*(_WORD *)(a1 + 18) != 23) {
    return 146;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  *(_WORD *)(a1 + 40) = 3;
  uint64_t v8 = *((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1))
  {
LABEL_12:
    uint64_t result = 142;
    goto LABEL_13;
  }
  while (v8 != a1)
  {
    uint64_t v8 = *(void *)(v8 + 80);
    if (!v8) {
      goto LABEL_12;
    }
  }
  uint64_t v9 = sub_10010CE48(3uLL);
  *(void *)(a1 + 48) = v9;
  if (!v9)
  {
    uint64_t result = 106;
    goto LABEL_13;
  }
  *uint64_t v9 = 2;
  *(_WORD *)(*(void *)(a1 + 48) + 1) = v7;
  uint64_t result = sub_10020F3C0(a1);
  if (result)
  {
LABEL_13:
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(_WORD *)(v5 + 16) = 0;
    return result;
  }
  uint64_t v10 = sub_100212610(*(void *)a1);
  if (v10)
  {
    sub_100212B74((uint64_t)v10, 1, 0);
    return 0;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Couldn't find server session for connection 0x%08x - can't change MTU!", v11, v12, v13, v14, v15, v16, v17, *(void *)a1);
    uint64_t v18 = sub_100050B4C(0x44u);
    uint64_t result = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10020F3C0(uint64_t a1)
{
  uint64_t v24 = a1;
  if (!a1) {
    return 4002;
  }
  uint64_t v2 = *(void *)a1;
  if (!v2) {
    return 0;
  }
  memset(v23, 0, sizeof(v23));
  if (*(unsigned char *)(v2 + 2) != 4) {
    goto LABEL_7;
  }
  if (!sub_100197770(v2))
  {
    if (!sub_100058654()) {
      return 4003;
    }
    sub_100056E24((uint64_t)"Not valid LE connection handle", v5, v6, v7, v8, v9, v10, v11, (uint64_t)v22[0]);
    uint64_t v12 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      return 4003;
    }
    goto LABEL_23;
  }
  uint64_t v2 = *(void *)a1;
  if (*(void *)a1)
  {
LABEL_7:
    if (*(unsigned char *)(v2 + 2) || sub_100197698(v2)) {
      goto LABEL_8;
    }
    if (!sub_100058654()) {
      return 4003;
    }
    sub_100056E24((uint64_t)"Not valid ACL connection handle", v13, v14, v15, v16, v17, v18, v19, (uint64_t)v22[0]);
    uint64_t v20 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      return 4003;
    }
LABEL_23:
    sub_100744F6C();
    return 4003;
  }
LABEL_8:
  uint64_t v3 = sub_1000226D0((uint64_t)v23, 1u);
  if (!v3)
  {
    uint64_t v3 = sub_100022798((unsigned __int8 *)v23, *(char **)(a1 + 48), *(unsigned __int16 *)(a1 + 40), 2u);
    if (!v3)
    {
      uint64_t v4 = sub_10020EF74(*(void *)a1, (uint64_t)v23, *(unsigned char *)(a1 + 56), 0);
      if (v4 == 412 || (uint64_t v3 = v4, !v4))
      {
        if (*(unsigned char *)(a1 + 56))
        {
          v22[1] = &v24;
          v22[0] = (const void *)8;
          sub_1000268E4((uint64_t)sub_100212264, v22, (unsigned __int16)dword_1009FAED8, (int *)(a1 + 60));
        }
        uint64_t v3 = 0;
      }
    }
  }
  sub_10025C480((uint64_t)v23);
  return v3;
}

uint64_t sub_10020F574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  if (*(unsigned __int16 *)(a3 + 3) <= (unsigned __int16)(*(_WORD *)(a3 + 1) - 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  *(_WORD *)(a1 + 40) = 5;
  uint64_t v8 = *((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    goto LABEL_13;
  }
  while (v8 != a1)
  {
    uint64_t v8 = *(void *)(v8 + 80);
    if (!v8) {
      goto LABEL_13;
    }
  }
  if (*(unsigned __int16 *)(a1 + 18) >= 5u)
  {
    uint64_t v11 = sub_10010CE48(5uLL);
    *(void *)(a1 + 48) = v11;
    if (v11)
    {
      memmove(v11, (const void *)a3, *(unsigned __int16 *)(a1 + 40));
      uint64_t v6 = sub_10020F3C0(a1);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 106;
    }
  }
  else
  {
LABEL_13:
    uint64_t v6 = 142;
  }
  uint64_t v10 = *(void **)(a1 + 48);
  if (v10) {
    sub_100023010(v10);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  return v6;
}

uint64_t sub_10020F674(uint64_t a1, uint64_t a2, __int16 a3, __int16 a4, unsigned int a5, const void *a6, unsigned int a7, uint64_t a8)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v9 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  __int16 v11 = a5;
  if (a5 <= (unsigned __int16)(a4 - 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a8;
  *(_WORD *)(a1 + 40) = a7 + 7;
  uint64_t v16 = *((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    while (v16 != a1)
    {
      uint64_t v16 = *(void *)(v16 + 80);
      if (!v16) {
        goto LABEL_13;
      }
    }
    LODWORD(v16) = *(unsigned __int16 *)(a1 + 18);
  }
LABEL_13:
  if (v16 >= (unsigned __int16)(a7 + 7))
  {
    uint64_t v18 = (char *)sub_10010CE48((unsigned __int16)(a7 + 7));
    *(void *)(a1 + 48) = v18;
    if (v18)
    {
      *uint64_t v18 = 6;
      *(_WORD *)(v18 + 1) = a4;
      *(_WORD *)(v18 + 3) = v11;
      *(_WORD *)(v18 + 5) = a3;
      memmove((void *)(*(void *)(a1 + 48) + 7), a6, a7);
      uint64_t v10 = sub_10020F3C0(a1);
      if (!v10) {
        return v10;
      }
    }
    else
    {
      uint64_t v10 = 106;
    }
  }
  else
  {
    uint64_t v10 = 142;
  }
  uint64_t v19 = *(void **)(a1 + 48);
  if (v19) {
    sub_100023010(v19);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  *(_WORD *)(v9 + 16) = 0;
  return v10;
}

uint64_t sub_10020F7A8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  if (*(unsigned __int16 *)((char *)a3 + 3) <= (unsigned __int16)(*(_WORD *)((char *)a3 + 1) - 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  uint64_t v8 = (long long *)((char *)a3 + 5);
  size_t v9 = *((unsigned __int8 *)a3 + 5) + 5;
  *(_WORD *)(a1 + 40) = v9;
  uint64_t v10 = *((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    goto LABEL_13;
  }
  while (v10 != a1)
  {
    uint64_t v10 = *(void *)(v10 + 80);
    if (!v10) {
      goto LABEL_13;
    }
  }
  if (*(unsigned __int16 *)(a1 + 18) >= v9)
  {
    uint64_t v13 = sub_10010CE48(v9);
    *(void *)(a1 + 48) = v13;
    if (v13)
    {
      int v14 = *a3;
      v13[4] = *((unsigned char *)a3 + 4);
      *(_DWORD *)uint64_t v13 = v14;
      long long v15 = *v8;
      int v16 = *(int *)((char *)a3 + 21);
      sub_10022A6F4((unsigned char *)(*(void *)(a1 + 48) + 5), (unsigned __int8 *)&v15, 1);
      uint64_t v6 = sub_10020F3C0(a1);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 106;
    }
  }
  else
  {
LABEL_13:
    uint64_t v6 = 142;
  }
  uint64_t v12 = *(void **)(a1 + 48);
  if (v12) {
    sub_100023010(v12);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  return v6;
}

uint64_t sub_10020F908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  if (!*(_WORD *)(a3 + 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  *(_WORD *)(a1 + 40) = 3;
  uint64_t v8 = *((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    goto LABEL_12;
  }
  while (v8 != a1)
  {
    uint64_t v8 = *(void *)(v8 + 80);
    if (!v8) {
      goto LABEL_12;
    }
  }
  if (*(unsigned __int16 *)(a1 + 18) >= 3u)
  {
    __int16 v11 = sub_10010CE48(3uLL);
    *(void *)(a1 + 48) = v11;
    if (v11)
    {
      memmove(v11, (const void *)a3, *(unsigned __int16 *)(a1 + 40));
      uint64_t v6 = sub_10020F3C0(a1);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 106;
    }
  }
  else
  {
LABEL_12:
    uint64_t v6 = 142;
  }
  size_t v9 = *(void **)(a1 + 48);
  if (v9) {
    sub_100023010(v9);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  return v6;
}

uint64_t sub_10020F9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  if (!*(_WORD *)(a3 + 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  *(_WORD *)(a1 + 40) = 5;
  uint64_t v8 = *((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    goto LABEL_12;
  }
  while (v8 != a1)
  {
    uint64_t v8 = *(void *)(v8 + 80);
    if (!v8) {
      goto LABEL_12;
    }
  }
  if (*(unsigned __int16 *)(a1 + 18) >= 5u)
  {
    __int16 v11 = sub_10010CE48(5uLL);
    *(void *)(a1 + 48) = v11;
    if (v11)
    {
      memmove(v11, (const void *)a3, *(unsigned __int16 *)(a1 + 40));
      uint64_t v6 = sub_10020F3C0(a1);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 106;
    }
  }
  else
  {
LABEL_12:
    uint64_t v6 = 142;
  }
  size_t v9 = *(void **)(a1 + 48);
  if (v9) {
    sub_100023010(v9);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  return v6;
}

uint64_t sub_10020FAE8(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  if (!*(__int16 *)((char *)a3 + 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = a2 != 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  uint64_t v9 = *(unsigned __int16 *)((char *)a3 + 3);
  if (v9 > 0xFFFC) {
    goto LABEL_13;
  }
  size_t v10 = v9 + 3;
  *(_WORD *)(a1 + 40) = v9 + 3;
  uint64_t v11 = *((void *)&xmmword_100A0AFA0 + 1);
  if (!*((void *)&xmmword_100A0AFA0 + 1)) {
    goto LABEL_13;
  }
  while (v11 != a1)
  {
    uint64_t v11 = *(void *)(v11 + 80);
    if (!v11) {
      goto LABEL_13;
    }
  }
  if (*(unsigned __int16 *)(a1 + 18) < v10)
  {
LABEL_13:
    uint64_t v6 = 142;
    goto LABEL_14;
  }
  int v14 = sub_10010CE48(v10);
  *(void *)(a1 + 48) = v14;
  if (!v14)
  {
    uint64_t v6 = 106;
    goto LABEL_14;
  }
  __int16 v15 = *a3;
  _DWORD v14[2] = *((unsigned char *)a3 + 2);
  *(_WORD *)int v14 = v15;
  memmove((void *)(*(void *)(a1 + 48) + 3), *(const void **)((char *)a3 + 5), *(unsigned __int16 *)((char *)a3 + 3));
  uint64_t v6 = sub_10020F3C0(a1);
  if (v6)
  {
LABEL_14:
    uint64_t v12 = *(void **)(a1 + 48);
    if (v12) {
      sub_100023010(v12);
    }
    *(void *)(a1 + 48) = 0;
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(_WORD *)(v5 + 16) = 0;
    return v6;
  }
  if (a2) {
    return 0;
  }
  if (!dword_100A0AFC8 && off_100A0AFE0) {
    off_100A0AFE0();
  }
  sub_100023010(*(void **)(a1 + 48));
  uint64_t v6 = 0;
  *(void *)(a1 + 48) = 0;
  return v6;
}

uint64_t sub_10020FC3C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (!a1)
  {
    sub_10025B8C0();
    return 101;
  }
  uint64_t v5 = a1 + 24;
  if (*(void *)(a1 + 24)) {
    return 118;
  }
  if (!*(_WORD *)((char *)a3 + 1)) {
    return 101;
  }
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a4;
  unsigned __int16 v8 = *(_WORD *)((char *)a3 + 5) + 5;
  *(_WORD *)(a1 + 40) = v8;
  uint64_t v9 = *((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    while (v9 != a1)
    {
      uint64_t v9 = *(void *)(v9 + 80);
      if (!v9) {
        goto LABEL_12;
      }
    }
    LODWORD(v9) = *(unsigned __int16 *)(a1 + 18);
  }
LABEL_12:
  if (v9 >= v8)
  {
    size_t v10 = sub_10010CE48(v8);
    *(void *)(a1 + 48) = v10;
    if (v10)
    {
      int v11 = *a3;
      v10[4] = *((unsigned char *)a3 + 4);
      *(_DWORD *)size_t v10 = v11;
      memmove((void *)(*(void *)(a1 + 48) + 5), *(const void **)((char *)a3 + 7), *(unsigned __int16 *)((char *)a3 + 5));
      uint64_t v6 = sub_10020F3C0(a1);
      if (!v6) {
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 106;
    }
  }
  else
  {
    uint64_t v6 = 142;
  }
  uint64_t v12 = *(void **)(a1 + 48);
  if (v12) {
    sub_100023010(v12);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  return v6;
}

uint64_t sub_10020FD48(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a1)
  {
    uint64_t v5 = a1 + 24;
    if (!*(void *)(a1 + 24))
    {
      *(unsigned char *)(a1 + 56) = 1;
      *(void *)(a1 + 24) = a2;
      *(void *)(a1 + 32) = a4;
      *(_WORD *)(a1 + 40) = 2;
      unsigned __int16 v8 = sub_10010CE48(2uLL);
      *(void *)(a1 + 48) = v8;
      if (v8)
      {
        *unsigned __int16 v8 = 24;
        *(unsigned char *)(*(void *)(a1 + 48) + 1) = a3;
        uint64_t v6 = sub_10020F3C0(a1);
        if (!v6) {
          return v6;
        }
        uint64_t v9 = *(void **)(a1 + 48);
        if (v9) {
          sub_100023010(v9);
        }
        *(void *)(a1 + 48) = 0;
        *(void *)uint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
      }
      else
      {
        *(void *)uint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        uint64_t v6 = 106;
      }
      *(_WORD *)(v5 + 16) = 0;
      return v6;
    }
    return 118;
  }
  else
  {
    sub_10025B8C0();
    return 101;
  }
}

void sub_10020FE04(uint64_t a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4)
{
  if (!a1) {
    goto LABEL_15;
  }
  int v8 = *(unsigned __int8 *)(a1 + 2);
  if (v8 == 4)
  {
    if (!sub_100197770(a1)) {
      goto LABEL_15;
    }
    int v8 = *(unsigned __int8 *)(a1 + 2);
  }
  if (!v8 && !sub_100197698(a1))
  {
LABEL_15:
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"ATT error : not transport handle", v11, v12, v13, v14, v15, v16, v17, v325);
    uint64_t v18 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_162:
    sub_100744F6C();
    return;
  }
  if (!a2 || !a3)
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Invalid packet size.", v19, v20, v21, v22, v23, v24, v25, v325);
    uint64_t v26 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_162;
  }
  if (sub_100212610(a1))
  {
    uint64_t v9 = *a2;
    switch(*a2)
    {
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 9u:
      case 0xBu:
      case 0xDu:
      case 0xFu:
      case 0x11u:
      case 0x13u:
      case 0x17u:
      case 0x19u:
        uint64_t v10 = *((void *)&xmmword_100A0AFA0 + 1);
        if (!*((void *)&xmmword_100A0AFA0 + 1)) {
          return;
        }
        break;
      case 2u:
      case 4u:
      case 6u:
      case 8u:
      case 0xAu:
      case 0xCu:
      case 0xEu:
      case 0x10u:
      case 0x12u:
      case 0x16u:
      case 0x18u:
        goto LABEL_31;
      case 0x14u:
      case 0x15u:
      case 0x1Au:
      case 0x1Cu:
        goto LABEL_34;
      case 0x1Bu:
        uint64_t v43 = (void (*)(uint64_t, uint64_t, unsigned __int8 *, void, uint64_t, uint64_t))off_100A0AFB8;
        if (off_100A0AFB8)
        {
          uint64_t v44 = *(unsigned __int16 *)(a2 + 1);
          uint64_t v45 = qword_100A0AFC0;
          v43(a1, v44, a2 + 3, (unsigned __int16)(a3 - 3), a4, v45);
        }
        return;
      case 0x1Du:
        sub_100211154(a1, (unsigned __int16 *)(a2 + 1), (unsigned __int16)(a3 - 1), a4);
        return;
      case 0x1Eu:
        sub_100213CB8(a1);
        return;
      default:
        if (v9 == 82 || v9 == 210)
        {
LABEL_31:
          sub_100213D28((unsigned __int16 *)a1, (char *)a2, a3, a4);
        }
        else
        {
LABEL_34:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Received unknown opcode 0x%x", v35, v36, v37, v38, v39, v40, v41, v9);
            uint64_t v42 = sub_100050B4C(0x44u);
            if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          sub_100211220(a1, v9);
        }
        return;
    }
    while (*(void *)v10 != a1)
    {
      uint64_t v10 = *(void *)(v10 + 80);
      if (!v10) {
        return;
      }
    }
    switch(*a2)
    {
      case 1u:
        sub_10021161C(v10, a2 + 1, (unsigned __int16)(a3 - 1));
        return;
      case 3u:
        uint64_t v54 = *(unsigned char **)(v10 + 48);
        if (v54 && *v54 == 2)
        {
          unsigned __int16 v55 = a3 - 1;
          uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24);
          int v57 = v54[1];
          int v58 = v54[2];
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          if (v55 != 2)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid MTU payload size %d.", v240, v241, v242, v243, v244, v245, v246, v55);
              uint64_t v247 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v247, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v248 = *(void *)(v10 + 32);
            uint64_t v249 = v10;
            uint64_t v250 = 4005;
            uint64_t v251 = 0;
            goto LABEL_209;
          }
          unsigned int v59 = *(unsigned __int16 *)(a2 + 1);
          if (v59 <= 0x17) {
            unsigned int v59 = 23;
          }
          if ((v57 | (v58 << 8)) >= v59) {
            int v60 = v59;
          }
          else {
            int v60 = v57 | (v58 << 8);
          }
          LOWORD(v330) = v60;
          int v61 = *(unsigned __int16 *)(v10 + 18);
          if (v61 != 23 && v60 != v61)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"The negotiated MTU is different from a previously negotiated one: %u != %u", v62, v63, v64, v65, v66, v67, v68, *(unsigned __int16 *)(v10 + 18));
              size_t v69 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
          }
          uint64_t v70 = *((void *)&xmmword_100A0AFA0 + 1);
          if (*((void *)&xmmword_100A0AFA0 + 1))
          {
            while (v70 != v10)
            {
              uint64_t v70 = *(void *)(v70 + 80);
              if (!v70) {
                goto LABEL_202;
              }
            }
            *(_WORD *)(v10 + 18) = v60;
          }
LABEL_202:
          v295 = sub_100212610(*(void *)v10);
          if (v295)
          {
            sub_100212B74((uint64_t)v295, 0, &v330);
            if (!v56) {
              return;
            }
            goto LABEL_208;
          }
          if (!sub_100058654()
            || (sub_100056E24((uint64_t)"Couldn't find server session for connection 0x%08x - can't change MTU!", v296, v297, v298, v299, v300, v301, v302, *(void *)v10), uint64_t v303 = sub_100050B4C(0x44u), !os_log_type_enabled(v303, OS_LOG_TYPE_ERROR)))
          {
            if (!v56) {
              return;
            }
            goto LABEL_208;
          }
          sub_100744F6C();
          if (v56)
          {
LABEL_208:
            uint64_t v251 = (unsigned __int16)v330;
            uint64_t v248 = *(void *)(v10 + 32);
            uint64_t v249 = v10;
            uint64_t v250 = 0;
LABEL_209:
            v56(v249, v250, v251, v248);
            return;
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No MTU request matching this response. Ignoring.", v168, v169, v170, v171, v172, v173, v174, v325);
          uint64_t v175 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v175, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 5u:
        uint64_t v71 = *(unsigned char **)(v10 + 48);
        if (v71 && *v71 == 4)
        {
          unsigned __int16 v72 = a3 - 1;
          uint64_t v73 = *(void (**)(uint64_t, uint64_t, void *, void, uint64_t))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          uint64_t v74 = v72;
          if (v72 <= 4u)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid find information payload size %d.", v75, v76, v77, v78, v79, v80, v81, v72);
              uint64_t v82 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v83 = *(void *)(v10 + 32);
            uint64_t v84 = v10;
            uint64_t v85 = 4006;
LABEL_176:
            v73(v84, v85, 0, 0, v83);
            return;
          }
          uint64_t v252 = a2 + 1;
          int v253 = a2[1];
          if (v253 == 1) {
            uint64_t v254 = 2;
          }
          else {
            uint64_t v254 = 16 * (v253 == 2);
          }
          if (!v254 || ((int)v74 - 1) % (v254 + 2))
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid find information payload size %d (uuidSize == %u).", v255, v256, v257, v258, v259, v260, v261, v74);
              uint64_t v262 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v262, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v83 = *(void *)(v10 + 32);
            uint64_t v84 = v10;
            uint64_t v85 = 4007;
            goto LABEL_176;
          }
          uint64_t v304 = (unsigned __int16)(((int)v74 - 1) / (v254 + 2));
          unsigned __int16 v329 = ((int)v74 - 1) / (v254 + 2);
          uint64_t v305 = (char *)sub_100022FE8(24 * v329);
          v306 = v305;
          if (v305)
          {
            if (v304)
            {
              int v307 = 0;
              uint64_t v308 = a2 + 3;
              uint64_t v309 = v305;
              do
              {
                uint64_t v310 = (unsigned __int16)v307 & 0xFFFE | 1;
                __int16 v311 = v252[(v307 & 0xFFFE) + 2];
                *(_WORD *)uint64_t v309 = v311 << 8;
                *(_WORD *)uint64_t v309 = v252[v310] | (unsigned __int16)(v311 << 8);
                sub_10022A5EC((int8x16_t *)&v308[v310], v254, 1, (uint64_t)&v330);
                long long v312 = v330;
                *((_DWORD *)v309 + 5) = v331;
                *(_OWORD *)(v309 + 4) = v312;
                v309 += 24;
                v307 += v254 + 2;
                --v304;
              }
              while (v304);
            }
          }
          else
          {
            unsigned __int16 v329 = 0;
          }
          if (v73) {
            v73(v10, 0, v306, v329, *(void *)(v10 + 32));
          }
          sub_100023010(v306);
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No Find information request matching this response. Ignoring.", v176, v177, v178, v179, v180, v181, v182, v325);
          uint64_t v183 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v183, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 7u:
        uint64_t v86 = *(unsigned char **)(v10 + 48);
        if (v86 && *v86 == 6)
        {
          unsigned __int16 v87 = a3 - 1;
          v326 = *(void (**)(uint64_t, void, unsigned __int8 *, uint64_t, uint64_t))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          if (v87 >= 4u && (v87 & 3) == 0)
          {
            uint64_t v88 = *(void *)(v10 + 32);
            uint64_t v89 = a2 + 1;
            uint64_t v90 = v87 >> 2;
            uint64_t v91 = v10;
            uint64_t v92 = v326;
            goto LABEL_101;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid find by type value payload size %d.", v263, v264, v265, v266, v267, v268, v269, v87);
            unsigned int v270 = sub_100050B4C(0x44u);
            if (os_log_type_enabled(v270, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          v326(v10, 4022, 0, 0, *(void *)(v10 + 32));
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No Find by type value request matching this response. Ignoring.", v184, v185, v186, v187, v188, v189, v190, v325);
          uint64_t v191 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v191, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 9u:
        uint64_t v93 = *(unsigned char **)(v10 + 48);
        if (v93 && *v93 == 8)
        {
          uint64_t v94 = *(void (**)(uint64_t, uint64_t, void *, void, uint64_t, uint64_t))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          uint64_t v95 = (unsigned __int16)(a3 - 1);
          if (v95 <= 2)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid read by type payload size %d.", v96, v97, v98, v99, v100, v101, v102, v95);
              uint64_t v103 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v104 = *(void *)(v10 + 32);
            uint64_t v105 = v10;
            uint64_t v106 = 4008;
            goto LABEL_193;
          }
          uint64_t v271 = a2 + 1;
          uint64_t v272 = a2[1];
          if (v272 < 2
            || (unsigned int v273 = ((int)v95 - 1) / v272, ((int)v95 - 1) % v272))
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid read by type payload size %d.", v274, v275, v276, v277, v278, v279, v280, v95);
              BOOL v281 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v281, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v104 = *(void *)(v10 + 32);
            uint64_t v105 = v10;
            uint64_t v106 = 4009;
            goto LABEL_193;
          }
          uint64_t v313 = sub_100022FE8(16 * (unsigned __int16)(((int)v95 - 1) / v272));
          uint64_t v314 = v313;
          if (!v313) {
            goto LABEL_225;
          }
          if ((_WORD)v273)
          {
            uint64_t v315 = 0;
            uint64_t v316 = v313;
            do
            {
              v317 = &v271[(unsigned __int16)(v315 * v272 + 1)];
              __int16 v318 = v317[1];
              *(_WORD *)uint64_t v316 = v318 << 8;
              *(_WORD *)uint64_t v316 = *v317 | (unsigned __int16)(v318 << 8);
              v316[1] = v317 + 2;
              ++v315;
              v316 += 2;
            }
            while ((unsigned __int16)v273 != v315);
          }
          goto LABEL_226;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read by type request matching this response. Ignoring.", v192, v193, v194, v195, v196, v197, v198, v325);
          uint64_t v199 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v199, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0xBu:
        uint64_t v107 = *(unsigned char **)(v10 + 48);
        if (v107 && *v107 == 10) {
          goto LABEL_99;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read request matching this response. Ignoring.", v108, v109, v110, v111, v112, v113, v114, v325);
          uint64_t v115 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0xDu:
        uint64_t v116 = *(unsigned char **)(v10 + 48);
        if (v116 && *v116 == 12) {
          goto LABEL_99;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read blob request matching this response. Ignoring.", v117, v118, v119, v120, v121, v122, v123, v325);
          uint64_t v124 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0xFu:
        uint64_t v125 = *(unsigned char **)(v10 + 48);
        if (v125 && *v125 == 14)
        {
LABEL_99:
          uint64_t v327 = *(void (**)(uint64_t, void, unsigned __int8 *, uint64_t, uint64_t))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          uint64_t v92 = v327;
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          if (v327)
          {
            uint64_t v88 = *(void *)(v10 + 32);
            uint64_t v89 = a2 + 1;
            uint64_t v90 = (unsigned __int16)(a3 - 1);
            uint64_t v91 = v10;
LABEL_101:
            v92(v91, 0, v89, v90, v88);
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read blob request matching this response. Ignoring.", v200, v201, v202, v203, v204, v205, v206, v325);
          uint64_t v207 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v207, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0x11u:
        uint64_t v126 = *(unsigned char **)(v10 + 48);
        if (v126 && *v126 == 16)
        {
          uint64_t v94 = *(void (**)(uint64_t, uint64_t, void *, void, uint64_t, uint64_t))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          uint64_t v127 = (unsigned __int16)(a3 - 1);
          if (v127 <= 4)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid read by group type payload size %d.", v128, v129, v130, v131, v132, v133, v134, v127);
              uint64_t v135 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v135, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v104 = *(void *)(v10 + 32);
            uint64_t v105 = v10;
            uint64_t v106 = 4010;
LABEL_193:
            v94(v105, v106, 0, 0, 0, v104);
            return;
          }
          char v282 = a2 + 1;
          uint64_t v272 = a2[1];
          if (v272 < 4
            || (unsigned int v273 = ((int)v127 - 1) / v272, ((int)v127 - 1) % v272))
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid read by group type payload size %d.", v283, v284, v285, v286, v287, v288, v289, v127);
              uint64_t v290 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v290, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            uint64_t v104 = *(void *)(v10 + 32);
            uint64_t v105 = v10;
            uint64_t v106 = 4011;
            goto LABEL_193;
          }
          uint64_t v319 = sub_100022FE8(16 * (unsigned __int16)(((int)v127 - 1) / v272));
          uint64_t v314 = v319;
          if (v319)
          {
            if ((_WORD)v273)
            {
              uint64_t v320 = 0;
              uint64_t v321 = v319;
              do
              {
                uint64_t v322 = &v282[(unsigned __int16)(v320 * v272 + 1)];
                __int16 v323 = v322[1];
                *uint64_t v321 = v323 << 8;
                *uint64_t v321 = *v322 | (unsigned __int16)(v323 << 8);
                __int16 v324 = v322[3];
                v321[1] = v324 << 8;
                v321[1] = v322[2] | (unsigned __int16)(v324 << 8);
                *((void *)v321 + 1) = v322 + 4;
                ++v320;
                v321 += 8;
              }
              while ((unsigned __int16)v273 != v320);
            }
          }
          else
          {
LABEL_225:
            uint64_t v272 = 0;
            LOWORD(v273) = 0;
          }
LABEL_226:
          if (v94) {
            v94(v10, 0, v314, (unsigned __int16)v273, v272, *(void *)(v10 + 32));
          }
          sub_100023010(v314);
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read blob request matching this response. Ignoring.", v208, v209, v210, v211, v212, v213, v214, v325);
          uint64_t v215 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v215, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0x13u:
        uint64_t v136 = *(unsigned __int8 **)(v10 + 48);
        if (v136 && ((int v137 = *v136, v137 != 210) ? (v138 = v137 == 18) : (v138 = 1), v138))
        {
          unsigned __int16 v139 = a3 - 1;
          int v140 = *(void (**)(uint64_t, void, void))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          if (!v139) {
            goto LABEL_134;
          }
          if (!sub_100058654()) {
            goto LABEL_134;
          }
          sub_100056E24((uint64_t)"Invalid Write response length %d.", v141, v142, v143, v144, v145, v146, v147, v139);
          uint64_t v148 = sub_100050B4C(0x44u);
          if (!os_log_type_enabled(v148, OS_LOG_TYPE_ERROR)) {
            goto LABEL_134;
          }
          sub_100744F6C();
          if (v140) {
            goto LABEL_135;
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read blob request matching this response. Ignoring.", v232, v233, v234, v235, v236, v237, v238, v325);
          uint64_t v239 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v239, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0x17u:
        unsigned int v149 = *(unsigned char **)(v10 + 48);
        if (v149 && *v149 == 22)
        {
          uint64_t v328 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, void, uint64_t))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          if ((unsigned __int16)(a3 - 1) > 3u)
          {
            if (v328)
            {
              if ((unsigned __int16)(a3 - 1) == 4) {
                uint64_t v291 = 0;
              }
              else {
                uint64_t v291 = a2 + 5;
              }
              uint64_t v292 = *(unsigned __int16 *)(a2 + 3);
              uint64_t v293 = *(unsigned __int16 *)(a2 + 1);
              uint64_t v294 = *(void *)(v10 + 32);
              v328(v10, 0, v293, v292, v291, (unsigned __int16)(a3 - 5), v294);
            }
          }
          else
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Invalid prepare write response length %d.", v150, v151, v152, v153, v154, v155, v156, (unsigned __int16)(a3 - 1));
              uint64_t v157 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v157, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            v328(v10, 4012, 0, 0, 0, 0, *(void *)(v10 + 32));
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read blob request matching this response. Ignoring.", v216, v217, v218, v219, v220, v221, v222, v325);
          unsigned int v223 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v223, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        return;
      case 0x19u:
        uint64_t v158 = *(unsigned char **)(v10 + 48);
        if (v158 && *v158 == 24)
        {
          unsigned __int16 v159 = a3 - 1;
          int v140 = *(void (**)(uint64_t, void, void))(v10 + 24);
          sub_100026DB4(*(unsigned int *)(v10 + 60));
          *(_DWORD *)(v10 + 60) = 0;
          sub_100023010(*(void **)(v10 + 48));
          *(void *)(v10 + 48) = 0;
          *(void *)(v10 + 24) = 0;
          if (v159
            && sub_100058654()
            && (sub_100056E24((uint64_t)"Invalid execute write response length %d.", v160, v161, v162, v163, v164, v165, v166, v159), uint64_t v167 = sub_100050B4C(0x44u), os_log_type_enabled(v167, OS_LOG_TYPE_ERROR)))
          {
            sub_100744F6C();
            if (v140) {
              goto LABEL_135;
            }
          }
          else
          {
LABEL_134:
            if (v140)
            {
LABEL_135:
              v140(v10, 0, *(void *)(v10 + 32));
              return;
            }
          }
        }
        else if (sub_100058654())
        {
          sub_100056E24((uint64_t)"No read blob request matching this response. Ignoring.", v224, v225, v226, v227, v228, v229, v230, v325);
          uint64_t v231 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v231, OS_LOG_TYPE_ERROR)) {
            goto LABEL_162;
          }
        }
        break;
      default:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unknown opcode 0x%x", v46, v47, v48, v49, v50, v51, v52, v9);
          uint64_t v53 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
            goto LABEL_23;
          }
        }
        return;
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid handle, there is no active session associated with the handle.", v27, v28, v29, v30, v31, v32, v33, v325);
    uint64_t v34 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
LABEL_23:
    }
      sub_100744F6C();
  }
}

void sub_100211154(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  if (a2 && a3 >= 2)
  {
    uint64_t v9 = v4;
    uint64_t v10 = v5;
    if (off_100A0AFB8) {
      off_100A0AFB8(a1, *a2, a2 + 1, (unsigned __int16)(a3 - 2), a4, qword_100A0AFC0);
    }
    char v8 = 0;
    memset(v7, 0, sizeof(v7));
    if (!sub_1000226D0((uint64_t)v7, 1u))
    {
      char v8 = 30;
      if (!sub_100022798((unsigned __int8 *)v7, &v8, 1uLL, 0)) {
        sub_10020EF74(a1, (uint64_t)v7, 1, 0);
      }
    }
    sub_10025C480((uint64_t)v7);
  }
}

void sub_100211220(uint64_t a1, char a2)
{
  __src[0] = 1;
  __src[1] = a2;
  __int16 v6 = 0;
  char v7 = 6;
  uint64_t v2 = *((void *)&xmmword_100A0AFA0 + 1);
  if (*((void *)&xmmword_100A0AFA0 + 1))
  {
    while (*(void *)v2 != a1)
    {
      uint64_t v2 = *(void *)(v2 + 80);
      if (!v2) {
        return;
      }
    }
    *(void *)(v2 + 24) = 0;
    *(unsigned char *)(v2 + 56) = 0;
    *(void *)(v2 + 32) = 0;
    *(_WORD *)(v2 + 40) = 5;
    uint64_t v3 = sub_10010CE48(5uLL);
    *(void *)(v2 + 48) = v3;
    if (v3)
    {
      memmove(v3, __src, *(unsigned __int16 *)(v2 + 40));
      if (!sub_10020F3C0(v2)) {
        return;
      }
      uint64_t v4 = *(void **)(v2 + 48);
      if (v4) {
        sub_100023010(v4);
      }
    }
    *(void *)(v2 + 48) = 0;
    *(void *)(v2 + 24) = 0;
    *(void *)(v2 + 32) = 0;
    *(_WORD *)(v2 + 40) = 0;
  }
}

uint64_t sub_1002112D8(uint64_t a1)
{
  if (sub_100197770(a1))
  {
    if (!a1) {
      sub_10025B8C0();
    }
    if (*(_WORD *)(a1 + 86)) {
      unsigned __int16 v2 = 625 * *(_WORD *)(a1 + 86);
    }
    else {
      unsigned __int16 v2 = 7500;
    }
    if (*(unsigned char *)(a1 + 70))
    {
      uint64_t v3 = 527;
    }
    else
    {
      __int16 v12 = sub_100219FA8(*(unsigned __int16 *)(a1 + 108), *(unsigned __int16 *)(a1 + 104), v2, *(_DWORD *)(a1 + 144), *(_DWORD *)(a1 + 148));
      if (v12)
      {
        unsigned __int16 v13 = v12 - 4;
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Calculated MTU is zero for rx %d, tx %d, and CE %d us, probe %d", v14, v15, v16, v17, v18, v19, v20, *(unsigned __int16 *)(a1 + 108));
          uint64_t v21 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        unsigned __int16 v13 = 527;
      }
      if (v13 >= 0x20Fu) {
        uint64_t v3 = 527;
      }
      else {
        uint64_t v3 = v13;
      }
    }
    if (sub_100058654())
    {
      uint64_t v29 = "peripheral";
      if (!*(unsigned char *)(a1 + 70)) {
        uint64_t v29 = "central";
      }
      sub_100056E24((uint64_t)"ATT %s MTU %d (calculated %d): for rx %d bytes, tx %d bytes, ce %d us, probestate %d", v22, v23, v24, v25, v26, v27, v28, (uint64_t)v29);
      uint64_t v30 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v34 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid LE Handle", v4, v5, v6, v7, v8, v9, v10, v32);
      uint64_t v11 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  return v3;
}

__n128 sub_1002114FC(uint64_t a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  result.n128_u64[0] = (unint64_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*(int64x2_t *)&qword_100A0AF80), (int32x4_t)vceqzq_s64(*(int64x2_t *)&off_100A0AF90))));
  result.n128_u16[0] = vmaxv_u16((uint16x4_t)result.n128_u64[0]);
  if (result.n128_u8[0]) {
    sub_10025B8C0();
  }
  if (a1)
  {
    __n128 result = *(__n128 *)a1;
    long long v3 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)&qword_100A0AF80 = *(_OWORD *)a1;
    *(_OWORD *)&off_100A0AF90 = v3;
  }
  return result;
}

double sub_100211560()
{
  double result = 0.0;
  *(_OWORD *)&qword_100A0AF80 = 0u;
  *(_OWORD *)&off_100A0AF90 = 0u;
  return result;
}

void sub_100211578(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = sub_10020EC74(a1 + 1);
  if (v4)
  {
    *(unsigned char *)(v4 + 65) = 1;
    if (*(unsigned char *)(v4 + 64))
    {
      *(unsigned char *)(v4 + 64) = 0;
      uint64_t v5 = *(unsigned char **)(v4 + 48);
      if (v5)
      {
        if (*(_WORD *)(v4 + 40))
        {
          if (a3 != 4832 && a3)
          {
            int v6 = 251658240;
            LOBYTE(v6) = *v5;
            sub_10021161C(v4, (unsigned __int8 *)&v6, 4);
          }
          else
          {
            sub_10020F3C0(v4);
          }
        }
      }
    }
  }
}

void sub_10021161C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, unint64_t, void, uint64_t))(a1 + 24);
  if (v4)
  {
    if (a3 == 4)
    {
      unint64_t v6 = a2[3];
      uint64_t v7 = *(unsigned __int8 **)(a1 + 48);
      if (v7)
      {
        int v8 = *a2;
        if (*v7 == v8)
        {
          uint64_t v25 = v4;
          if (((v6 < 0x10) & (0x9120u >> v6)) == 0
            || *(unsigned char *)(a1 + 65)
            || (int v19 = sub_1002118FC((uint64_t *)a1, v6), v19 != 4804) && v19)
          {
            sub_100026DB4(*(unsigned int *)(a1 + 60));
            *(_DWORD *)(a1 + 60) = 0;
            *(void *)(a1 + 24) = 0;
            uint64_t v9 = *(void **)(a1 + 48);
            if (v9) {
              sub_100023010(v9);
            }
            *(void *)(a1 + 48) = 0;
            switch(v8)
            {
              case 2:
                uint64_t v23 = *(void *)(a1 + 32);
                v25(a1, v6, 0, v23);
                break;
              case 3:
              case 5:
              case 7:
              case 9:
              case 11:
              case 13:
              case 15:
              case 17:
              case 19:
              case 20:
              case 21:
              case 23:
                return;
              case 4:
              case 6:
              case 10:
              case 12:
              case 14:
                uint64_t v10 = *(void *)(a1 + 32);
                ((void (*)(uint64_t, unint64_t, void, void, uint64_t))v25)(a1, v6, 0, 0, v10);
                break;
              case 8:
              case 16:
                uint64_t v21 = *(void *)(a1 + 32);
                ((void (*)(uint64_t, unint64_t, void, void, void, uint64_t))v25)(a1, v6, 0, 0, 0, v21);
                break;
              case 18:
              case 24:
                goto LABEL_26;
              case 22:
                uint64_t v24 = *(void *)(a1 + 32);
                ((void (*)(uint64_t, unint64_t, void, void, void, void, uint64_t))v25)(a1, v6, 0, 0, 0, 0, v24);
                break;
              default:
                if (v8 == 210)
                {
LABEL_26:
                  uint64_t v22 = *(void *)(a1 + 32);
                  ((void (*)(uint64_t, unint64_t, uint64_t))v25)(a1, v6, v22);
                }
                break;
            }
          }
          else
          {
            *(unsigned char *)(a1 + 64) = 1;
            uint64_t v20 = *(unsigned int *)(a1 + 60);
            sub_100026DB4(v20);
          }
        }
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid error payload size %d.", v11, v12, v13, v14, v15, v16, v17, a3);
      uint64_t v18 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
}

uint64_t sub_1002118FC(uint64_t *a1, int a2)
{
  if ((sub_1002349E0(*a1) & 1) == 0)
  {
    if (a2 <= 11)
    {
      if (a2 == 5)
      {
        uint64_t v35 = *a1;
        return sub_10023F5B4(v35, 1);
      }
      if (a2 != 8) {
        return 4004;
      }
      if (!sub_100058654()) {
        return sub_10023F5B4(*a1, 1);
      }
      sub_100056E24((uint64_t)"GATT is Asking to pair due to LE_ATT_ERROR_INSUFFICIENT_AUTHORIZATION", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)v43);
      uint64_t v12 = sub_100050B4C(0x44u);
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        return sub_10023F5B4(*a1, 1);
      }
      goto LABEL_24;
    }
    if (a2 != 12)
    {
      if (a2 != 15) {
        return 4004;
      }
      if (!sub_100058654()) {
        return sub_10023F5B4(*a1, 1);
      }
      sub_100056E24((uint64_t)"GATT is Asking to pair due to LE_ATT_ERROR_INSUFFICIENT_ENCRYPTION", v20, v21, v22, v23, v24, v25, v26, *(uint64_t *)v43);
      uint64_t v12 = sub_100050B4C(0x44u);
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        return sub_10023F5B4(*a1, 1);
      }
      goto LABEL_24;
    }
    return 1424;
  }
  if ((sub_100234878(*a1) & 1) == 0)
  {
    if (a2 > 11)
    {
      if (a2 == 12) {
        return 1424;
      }
      if (a2 != 15) {
        return 4004;
      }
    }
    else if (a2 != 5)
    {
      if (a2 != 8) {
        return 4004;
      }
      if (!sub_100058654()) {
        return sub_10023F5B4(*a1, 1);
      }
      sub_100056E24((uint64_t)"GATT is Asking to pair due to LE_ATT_ERROR_INSUFFICIENT_AUTHORIZATION", v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)v43);
      uint64_t v12 = sub_100050B4C(0x44u);
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        return sub_10023F5B4(*a1, 1);
      }
      goto LABEL_24;
    }
    uint64_t v34 = *a1;
    return sub_100234720(v34);
  }
  if ((sub_100234900(*a1) & 1) == 0)
  {
    if (a2 <= 11)
    {
      if (a2 != 5)
      {
        if (a2 == 8)
        {
          if (!sub_100058654()) {
            return sub_10023F5B4(*a1, 1);
          }
          sub_100056E24((uint64_t)"GATT is Asking to pair due to LE_ATT_ERROR_INSUFFICIENT_AUTHORIZATION", v27, v28, v29, v30, v31, v32, v33, *(uint64_t *)v43);
          uint64_t v12 = sub_100050B4C(0x44u);
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
            return sub_10023F5B4(*a1, 1);
          }
          goto LABEL_24;
        }
        return 4004;
      }
      if (!sub_100058654()) {
        return sub_10023F5B4(*a1, 1);
      }
      sub_100056E24((uint64_t)"GATT is Asking to pair due to LE_ATT_ERROR_INSUFFICIENT_AUTHENTICATION", v36, v37, v38, v39, v40, v41, v42, *(uint64_t *)v43);
      uint64_t v12 = sub_100050B4C(0x44u);
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        return sub_10023F5B4(*a1, 1);
      }
LABEL_24:
      *(_DWORD *)uint64_t v43 = 136446210;
      *(void *)&v43[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", v43, 0xCu);
      return sub_10023F5B4(*a1, 1);
    }
    if (a2 == 12)
    {
LABEL_48:
      return sub_100211CD4(a1);
    }
    if (a2 != 15) {
      return 4004;
    }
    return 1424;
  }
  uint64_t result = 1424;
  if (a2 > 11)
  {
    if (a2 == 15) {
      return result;
    }
    if (a2 != 12) {
      return 4004;
    }
    goto LABEL_48;
  }
  if (a2 != 5 && a2 != 8) {
    return 4004;
  }
  return result;
}

uint64_t sub_100211CD4(uint64_t *a1)
{
  char v31 = 0;
  uint64_t v2 = sub_100234A68(*a1, &v31);
  if (v2)
  {
    uint64_t v3 = v2;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to retrieve LTK size : %!.", v4, v5, v6, v7, v8, v9, v10, v3);
      uint64_t v11 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (v31 == 16)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Already using max key size. Erroring out.", v12, v13, v14, v15, v16, v17, v18, v30);
      uint64_t v19 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1424;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"GATT is Asking to pair due to short encryption link", v20, v21, v22, v23, v24, v25, v26, v30);
      uint64_t v27 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v28 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v33 = v28;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return sub_10023F5B4(*a1, 1);
  }
  return v3;
}

void sub_100211E58(uint64_t a1, unsigned __int16 *a2, int a3)
{
  if (a3 != 702)
  {
    if (a3 || !sub_100197770((uint64_t)a2))
    {
      if (sub_100058654())
      {
        uint64_t v15 = a2 ? *a2 : 0;
        sub_100056E24((uint64_t)"GATT connection notification from lmHandle 0x%x (%x) with status %!", v8, v9, v10, v11, v12, v13, v14, v15);
        uint64_t v16 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    else
    {
      uint64_t v4 = (unsigned __int16 **)*((void *)&xmmword_100A0AFA0 + 1);
      if (*((void *)&xmmword_100A0AFA0 + 1))
      {
        while (*v4 != a2)
        {
          uint64_t v4 = (unsigned __int16 **)v4[10];
          if (!v4) {
            goto LABEL_7;
          }
        }
        if (!sub_100058654()) {
          goto LABEL_24;
        }
        sub_100056E24((uint64_t)"ATT already has a bearer for this !", v17, v18, v19, v20, v21, v22, v23, v33);
        uint64_t v24 = sub_100050B4C(0x44u);
        if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          goto LABEL_24;
        }
LABEL_23:
        sub_100744F6C();
LABEL_24:
        sub_10025B8C0();
        return;
      }
LABEL_7:
      BOOL v5 = sub_100225F4C((uint64_t)a2);
      uint64_t v6 = sub_10020ECAC((uint64_t)a2, !v5);
      if (!v6)
      {
        if (!sub_100058654()) {
          goto LABEL_24;
        }
        sub_100056E24((uint64_t)"ATT failed to create session", v25, v26, v27, v28, v29, v30, v31, v33);
        uint64_t v32 = sub_100050B4C(0x44u);
        if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          goto LABEL_24;
        }
        goto LABEL_23;
      }
      uint64_t v7 = qword_100A0AF80;
      if (qword_100A0AF80)
      {
        ((void (*)(unsigned __int16 *, uint64_t, void))v7)(a2, v6, 0);
      }
    }
  }
}

void sub_100211FE8(unsigned __int16 *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = sub_10020EE34(a1);
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Session destroy failed with %!", v6, v7, v8, v9, v10, v11, v12, v5);
        uint64_t v13 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    if (off_100A0AF88) {
      off_100A0AF88(a1, a2);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_GATT_LE_DisconnectedCB lmhandle 0x%x (0x%x) is not valid with reason %!", v14, v15, v16, v17, v18, v19, v20, 0);
    uint64_t v21 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_1002120D4(unsigned __int16 *a1, int a2)
{
  if (!sub_100197770((uint64_t)a1)) {
    sub_10025B8C0();
  }
  if (a2)
  {
    if (sub_100058654())
    {
      if (a1) {
        uint64_t v11 = *a1;
      }
      else {
        uint64_t v11 = 0;
      }
      sub_100056E24((uint64_t)"GATT ready notification from lmHandle 0x%x (%x) with error %!", v4, v5, v6, v7, v8, v9, v10, v11);
      uint64_t v13 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    if (a1) {
      sub_100213954((uint64_t)a1);
    }
    if (off_100A0AF90)
    {
      uint64_t v12 = *((void *)&xmmword_100A0AFA0 + 1);
      if (*((void *)&xmmword_100A0AFA0 + 1))
      {
        while (*(unsigned __int16 **)v12 != a1)
        {
          uint64_t v12 = *(void *)(v12 + 80);
          if (!v12) {
            goto LABEL_13;
          }
        }
        int v14 = *(unsigned __int8 *)(v12 + 66);
        uint64_t v15 = sub_1002112D8((uint64_t)a1);
        uint64_t v16 = off_100A0AF90;
        if (off_100A0AF90)
        {
          ((void (*)(unsigned __int16 *, BOOL, uint64_t, void))v16)(a1, v14 != 0, v15, 0);
        }
      }
      else
      {
LABEL_13:
        sub_10025B8C0();
      }
    }
  }
}

void sub_100212218(void *ptr)
{
  if (ptr)
  {
    uint64_t v2 = ptr[1];
    if (v2) {
      sub_10025C3A8(v2);
    }
    sub_100023010(ptr);
  }
}

void sub_100212264(uint64_t a1)
{
  uint64_t v1 = **(uint64_t ***)(a1 + 8);
  uint64_t v2 = (uint64_t *)*((void *)&xmmword_100A0AFA0 + 1);
  if (v1) {
    BOOL v3 = *((void *)&xmmword_100A0AFA0 + 1) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
LABEL_7:
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Bearer is not valid", v4, v5, v6, v7, v8, v9, v10, v33);
    uint64_t v11 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_9;
  }
  while (v2 != v1)
  {
    uint64_t v2 = (uint64_t *)v2[10];
    if (!v2) {
      goto LABEL_7;
    }
  }
  uint64_t v12 = *v1;
  int v13 = sub_100058654();
  if (!v12)
  {
    if (!v13) {
      return;
    }
    sub_100056E24((uint64_t)"Bearer handle is not valid", v14, v15, v16, v17, v18, v19, v20, v33);
    uint64_t v23 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_9:
    sub_100744F6C();
    return;
  }
  if (v13)
  {
    sub_100056E24((uint64_t)"Timeout waiting for ATT response, forcing a disconnect.", v14, v15, v16, v17, v18, v19, v20, v33);
    uint64_t v21 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  int v35 = *((_DWORD *)v1 + 2);
  __int16 v36 = *((_WORD *)v1 + 6);
  char v34 = *((unsigned char *)v1 + 14);
  if (*v1)
  {
    if (*(unsigned char *)(*v1 + 2))
    {
      if (*(unsigned char *)(*v1 + 2) != 4) {
        return;
      }
      uint64_t v22 = sub_100228E9C(&v34);
    }
    else
    {
      uint64_t v22 = sub_10010E0B8(((unint64_t)*((unsigned __int8 *)v1 + 8) << 40) | ((unint64_t)*((unsigned __int8 *)v1 + 9) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 10) << 24) | ((unint64_t)*((unsigned __int8 *)v1 + 11) << 16) | ((unint64_t)*((unsigned __int8 *)v1 + 12) << 8) | *((unsigned __int8 *)v1 + 13));
    }
    uint64_t v24 = v22;
    if (v22)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT disconnect timedout with status %!", v25, v26, v27, v28, v29, v30, v31, v24);
        uint64_t v32 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

uint64_t sub_10021242C()
{
  int v0 = sub_10010CE48(0x10uLL);
  *((void *)&xmmword_100A0B010 + 1) = v0;
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t result = 0;
    unsigned char *v1 = 1;
    word_100A0B020 = 1;
    LOBYTE(xmmword_100A0B000) = 1;
    LOBYTE(xmmword_100A0B010) = 1;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to allocate zero-index handle!", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4013;
  }
  return result;
}

double sub_1002124C8()
{
  double result = 0.0;
  xmmword_100A0B030 = 0u;
  *(_OWORD *)&qword_100A0B040 = 0u;
  xmmword_100A0B010 = 0u;
  *(_OWORD *)&word_100A0B020 = 0u;
  xmmword_100A0B000 = 0u;
  xmmword_100A0B060 = 0u;
  xmmword_100A0B070 = 0u;
  xmmword_100A0B080 = 0u;
  off_100A0B090 = 0;
  dword_100A0B098 = 0;
  return result;
}

__n128 sub_100212500(uint64_t a1)
{
  result.n128_u64[0] = (unint64_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)xmmword_100A0B060), (int32x4_t)vceqzq_s64((int64x2_t)xmmword_100A0B070))));
  result.n128_u16[0] = vmaxv_u16((uint16x4_t)result.n128_u64[0]);
  if ((result.n128_u8[0] & 1) == 0 && *(void *)a1 && *(void *)(a1 + 8) && *(void *)(a1 + 16))
  {
    if (*(void *)(a1 + 24))
    {
      __n128 result = *(__n128 *)a1;
      long long v2 = *(_OWORD *)(a1 + 16);
      long long v3 = *(_OWORD *)(a1 + 32);
      off_100A0B090 = *(_UNKNOWN **)(a1 + 48);
      xmmword_100A0B070 = v2;
      xmmword_100A0B080 = v3;
      xmmword_100A0B060 = (__int128)result;
    }
  }
  return result;
}

uint64_t sub_100212578(uint64_t a1)
{
  long long v2 = (void *)&xmmword_100A0B000 + 1;
  do
  {
    uint64_t v3 = *v2;
    long long v2 = (void *)(*v2 + 24);
  }
  while (v3 != a1 && v3 != 0);
  if (v3) {
    return *(unsigned __int16 *)(a1 + 8);
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Couldn't find active session %p!", v6, v7, v8, v9, v10, v11, v12, a1);
    int v13 = sub_100050B4C(0x44u);
    uint64_t result = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

void *sub_100212610(uint64_t a1)
{
  uint64_t result = (void *)*((void *)&xmmword_100A0B000 + 1);
  if (*((void *)&xmmword_100A0B000 + 1))
  {
    do
    {
      if (*result == a1) {
        break;
      }
      uint64_t result = (void *)result[3];
    }
    while (result);
  }
  return result;
}

uint64_t sub_100212638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a2 + 32)) {
    sub_10025B8C0();
  }
  if (a3 >= 0x201)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Number of requested handles (%d) exceeds maximum allowed (%d)", v6, v7, v8, v9, v10, v11, v12, a3);
      int v13 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4016;
  }
  if (a1) {
    unsigned int v15 = *(unsigned __int16 *)(*(void *)(*((void *)&xmmword_100A0B010 + 1) + 16 * a1 + 8) + 24);
  }
  else {
    unsigned int v15 = 0xFFFF;
  }
  uint64_t v16 = (unsigned __int16)word_100A0B020;
  unsigned int v17 = a1 + 1;
  if ((int)a1 + 1 < (unsigned __int16)word_100A0B020 && v15 > a1)
  {
    uint64_t v19 = (void *)*((void *)&xmmword_100A0B010 + 1);
    do
    {
      uint64_t v20 = (unsigned __int8 *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v17);
      LODWORD(v21) = *v20;
      if (v21 == 2)
      {
        LODWORD(v22) = *(unsigned __int16 *)(*((void *)v20 + 1) + 24);
      }
      else if (*v20)
      {
        LODWORD(v22) = v17;
      }
      else
      {
        if (a3 && v17 < (unsigned __int16)word_100A0B020)
        {
          LODWORD(v22) = v17;
          if (v17 <= v15)
          {
            uint64_t v21 = 0;
            uint64_t v23 = (unsigned __int8 *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v17);
            while (1)
            {
              unint64_t v22 = v17 + v21;
              int v24 = *v23;
              v23 += 16;
              if (v24) {
                break;
              }
              if (++v21 + (unint64_t)v17 >= (unsigned __int16)word_100A0B020
                || v22 >= v15
                || v21 >= a3)
              {
                LODWORD(v22) = v17 + v21;
                break;
              }
            }
          }
        }
        else
        {
          LODWORD(v22) = v17;
        }
        if (v21 == a3)
        {
          *uint64_t v20 = 2;
          LOWORD(v16) = v17;
          goto LABEL_48;
        }
      }
      unsigned int v17 = v22 + 1;
    }
    while ((int)v22 + 1 < (unsigned __int16)word_100A0B020 && v22 < v15);
  }
  if (a1)
  {
    if (!sub_100058654()) {
      goto LABEL_53;
    }
    sub_100056E24((uint64_t)"No room for %d attributes in group [0x%04x -> 0x%04x]", v27, v28, v29, v30, v31, v32, v33, (a3 + 1));
    char v34 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  int v35 = sub_10010CE48(16 * ((unsigned __int16)word_100A0B020 + a3) + 16);
  if (v35)
  {
    uint64_t v19 = v35;
    __int16 v36 = (const void *)*((void *)&xmmword_100A0B010 + 1);
    if (!*((void *)&xmmword_100A0B010 + 1))
    {
      sub_10025B8C0();
      __int16 v36 = (const void *)*((void *)&xmmword_100A0B010 + 1);
    }
    memmove(v19, v36, 16 * (unsigned __int16)word_100A0B020);
    sub_100023010(*((void **)&xmmword_100A0B010 + 1));
    *((void *)&xmmword_100A0B010 + 1) = v19;
    word_100A0B020 += a3 + 1;
    *((unsigned char *)v19 + 16 * v16) = 2;
LABEL_48:
    if ((_WORD)v16)
    {
      uint64_t result = 0;
      *((void *)v19 + 2 * (unsigned __int16)v16 + 1) = a2;
      *(_WORD *)a2 = v16;
      *(_WORD *)(a2 + 24) = v16 + a3;
      return result;
    }
    goto LABEL_53;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to allocate new handle map of size %d", v37, v38, v39, v40, v41, v42, v43, a3 + (unsigned __int16)word_100A0B020 + 1);
    uint64_t v44 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
LABEL_52:
    }
      sub_100744F6C();
  }
LABEL_53:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Can't add attribute to parent handle 0x%04x, with 0x%04x extra handles", v45, v46, v47, v48, v49, v50, v51, a1);
    uint64_t v52 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 4017;
}

void sub_100212940(unsigned int a1, int a2)
{
  uint64_t v2 = *((void *)&xmmword_100A0B010 + 1);
  if (*(unsigned char *)(*((void *)&xmmword_100A0B010 + 1) + 16 * a1) == 2)
  {
    uint64_t v3 = *(unsigned __int16 **)(*((void *)&xmmword_100A0B010 + 1) + 16 * a1 + 8);
    uint64_t v4 = v3[12];
    uint64_t v5 = *v3;
    if (v5 <= v4)
    {
      uint64_t v7 = 16 * v5;
      uint64_t v8 = v4 - v5 + 1;
      do
      {
        *(unsigned char *)(v2 + v7) = 3;
        if (a2)
        {
          uint64_t v9 = *(void **)(v2 + v7 + 8);
          if (v9)
          {
            sub_100023010(v9);
            uint64_t v2 = *((void *)&xmmword_100A0B010 + 1);
          }
        }
        *(void *)(v2 + v7 + 8) = 0;
        v7 += 16;
        --v8;
      }
      while (v8);
    }
    if ((unsigned __int16)word_100A0B020 - 1 == v4)
    {
      sub_100212A1C();
    }
  }
}

void sub_100212A1C()
{
  unsigned __int16 v0 = word_100A0B020;
  if (word_100A0B020)
  {
    int v1 = (unsigned __int16)word_100A0B020 - 1;
    if (word_100A0B020 == 1)
    {
LABEL_10:
      unsigned __int16 v6 = 0;
      unsigned __int16 v0 = 1;
    }
    else
    {
      unsigned __int16 v2 = word_100A0B020 - 1;
      uint64_t v3 = (unsigned __int8 *)(*((void *)&xmmword_100A0B010 + 1) + 16 * (unsigned __int16)v1);
      while (1)
      {
        int v5 = *v3;
        v3 -= 16;
        int v4 = v5;
        unsigned __int16 v6 = v2;
        if (v5 != 3 && v4 != 0) {
          break;
        }
        --v2;
        unsigned __int16 v0 = v6;
        if (!v2) {
          goto LABEL_10;
        }
      }
    }
    if (v1 > v6)
    {
      uint64_t v8 = (char *)sub_10010CE48(16 * v0);
      if (v8)
      {
        uint64_t v9 = v8;
        memmove(v8, *((const void **)&xmmword_100A0B010 + 1), 16 * v0);
        sub_100023010(*((void **)&xmmword_100A0B010 + 1));
        *((void *)&xmmword_100A0B010 + 1) = v9;
        word_100A0B020 = v0;
        if (v6)
        {
          uint64_t v10 = v9 + 24;
          uint64_t v11 = v6;
          do
          {
            if (*((unsigned char *)v10 - 8) == 2)
            {
              uint64_t v12 = *v10;
              if (*v10)
              {
                if (*(unsigned __int16 *)(v12 + 24) > v6) {
                  *(_WORD *)(v12 + 24) = v6;
                }
              }
            }
            v10 += 2;
            --v11;
          }
          while (v11);
        }
      }
      else if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to allocate new handle map of size %d", v13, v14, v15, v16, v17, v18, v19, v0);
        uint64_t v20 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

void sub_100212B74(uint64_t a1, int a2, _WORD *a3)
{
  int v5 = (void *)&xmmword_100A0B000 + 1;
  do
  {
    uint64_t v6 = *v5;
    int v5 = (void *)(*v5 + 24);
  }
  while (v6 != a1 && v6 != 0);
  if (v6)
  {
    if (a2)
    {
      if (*(unsigned char *)(a1 + 16)) {
        sub_10025B8C0();
      }
      *(unsigned char *)(a1 + 16) = 1;
    }
    else
    {
      if (!a3) {
        sub_10025B8C0();
      }
      *(unsigned char *)(a1 + 16) = 0;
      *(_WORD *)(a1 + 8) = *a3;
      uint64_t v16 = (void (*)(uint64_t))*(&xmmword_100A0B070 + 1);
      v16(a1);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Couldn't find active session %p!", v8, v9, v10, v11, v12, v13, v14, a1);
    uint64_t v15 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_100212C60(uint64_t a1, __int16 a2, int a3, const void *a4, int a5)
{
  BOOL v53 = 0;
  uint64_t v10 = (void *)&xmmword_100A0B000 + 1;
  do
  {
    uint64_t v11 = *v10;
    uint64_t v10 = (void *)(*v10 + 24);
  }
  while (v11 != a1 && v11 != 0);
  if (v11)
  {
    if ((_BYTE)xmmword_100A0B010)
    {
      if (*(unsigned char *)(a1 + 16))
      {
        return 146;
      }
      else
      {
        uint64_t v23 = (char *)sub_10010CE48(*(unsigned __int16 *)(a1 + 8));
        if (v23)
        {
          int v24 = v23;
          if (a3) {
            char v25 = 27;
          }
          else {
            char v25 = 29;
          }
          char *v23 = v25;
          *(_WORD *)(v23 + 1) = a2;
          if (*(unsigned __int16 *)(a1 + 8) - 3 < a5) {
            LOWORD(a5) = *(_WORD *)(a1 + 8) - 3;
          }
          memmove(v23 + 3, a4, (unsigned __int16)a5);
          if ((a3 & 1) == 0 && *(_DWORD *)(a1 + 12) && (sub_10025B8C0(), *(_DWORD *)(a1 + 12)))
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Session 0x%x already has an outstanding indication!", v26, v27, v28, v29, v30, v31, v32, a1);
              uint64_t v33 = sub_100050B4C(0x44u);
              if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            sub_100023010(v24);
            return 4020;
          }
          else
          {
            uint64_t v13 = sub_100212F18(*(void *)a1, (char *)v24, (unsigned __int16)(a5 + 3), &v53);
            sub_100023010(v24);
            if (v13)
            {
              if (sub_100058654())
              {
                uint64_t v41 = "indication";
                if (a3) {
                  uint64_t v41 = "notification";
                }
                sub_100056E24((uint64_t)"Failed to send %s for session 0x%x with result %!", v34, v35, v36, v37, v38, v39, v40, (uint64_t)v41);
                uint64_t v42 = sub_100050B4C(0x44u);
                if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
                  sub_100744F6C();
                }
              }
            }
            else
            {
              LOBYTE(xmmword_100A0B010) = v53;
              if ((a3 & 1) == 0)
              {
                v52[1] = (const void *)a1;
                v52[0] = (const void *)8;
                sub_1000268E4((uint64_t)sub_100212FC8, v52, (unsigned __int16)dword_1009FAED8, (int *)(a1 + 12));
              }
              return 0;
            }
          }
        }
        else
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to allocate memory for update", v43, v44, v45, v46, v47, v48, v49, v51);
            uint64_t v50 = sub_100050B4C(0x44u);
            if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          return 4019;
        }
      }
    }
    else
    {
      return 410;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Couldn't find active session %p!", v14, v15, v16, v17, v18, v19, v20, a1);
      uint64_t v21 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4018;
  }
  return v13;
}

uint64_t sub_100212F18(uint64_t a1, char *a2, size_t a3, BOOL *a4)
{
  memset(v11, 0, sizeof(v11));
  uint64_t v8 = sub_1000226D0((uint64_t)v11, 1u);
  if (!v8)
  {
    uint64_t v8 = sub_100022798((unsigned __int8 *)v11, a2, a3, 2u);
    if (!v8)
    {
      unsigned int v9 = sub_10020EF74(a1, (uint64_t)v11, 1, a4);
      if (v9 == 412) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = v9;
      }
    }
  }
  sub_10025C480((uint64_t)v11);
  return v8;
}

void sub_100212FC8(uint64_t a1)
{
  int v1 = (void *)*((void *)&xmmword_100A0B000 + 1);
  if (!*((void *)&xmmword_100A0B000 + 1)) {
    return;
  }
  uint64_t v2 = **(void **)(a1 + 8);
  while (*v1 != v2)
  {
    int v1 = (void *)v1[3];
    if (!v1) {
      return;
    }
  }
  if (!sub_100058654()
    || (sub_100056E24((uint64_t)"Timed out waiting for indication response - disconnecting!", v3, v4, v5, v6, v7, v8, v9, v30), uint64_t v10 = sub_100050B4C(0x44u), !os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)))
  {
    if (v2) {
      goto LABEL_9;
    }
LABEL_22:
    if (sub_100058654())
    {
      BOOL v28 = 0;
LABEL_24:
      sub_100056E24((uint64_t)"Invalid transport %d in Indication Response Timeout Handler", v21, v22, v23, v24, v25, v26, v27, v28);
      uint64_t v29 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
LABEL_26:
    sub_10025B8C0();
    return;
  }
  sub_100744F6C();
  if (!v2) {
    goto LABEL_22;
  }
LABEL_9:
  if (!*(unsigned char *)(v2 + 2))
  {
    uint64_t v12 = sub_10010E0B8(((unint64_t)*(unsigned __int8 *)(v2 + 48) << 40) | ((unint64_t)*(unsigned __int8 *)(v2 + 49) << 32) | ((unint64_t)*(unsigned __int8 *)(v2 + 50) << 24) | ((unint64_t)*(unsigned __int8 *)(v2 + 51) << 16) | ((unint64_t)*(unsigned __int8 *)(v2 + 52) << 8) | *(unsigned __int8 *)(v2 + 53));
    goto LABEL_14;
  }
  if (*(unsigned char *)(v2 + 2) != 4)
  {
    if (sub_100058654())
    {
      BOOL v28 = *(unsigned __int8 *)(v2 + 2) == 4;
      goto LABEL_24;
    }
    goto LABEL_26;
  }
  *(_DWORD *)((char *)v31 + 3) = 0;
  v31[0] = 0;
  uint64_t v11 = 0;
  if (!sub_100225E94(v2, (uint64_t)v31, 0))
  {
    *(_DWORD *)(v2 + 132) = 6;
    *(_DWORD *)(v2 + 140) = 4541;
    uint64_t v12 = sub_100228E9C(v31);
LABEL_14:
    uint64_t v11 = v12;
  }
  if (v11 && sub_100058654())
  {
    sub_100056E24((uint64_t)"ATT disconnect failure during Indication response with status %!", v13, v14, v15, v16, v17, v18, v19, v11);
    uint64_t v20 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_100213194()
{
  uint64_t v0 = (unsigned __int16)word_100A0B020;
  if ((unsigned __int16)word_100A0B020 >= 0x100uLL)
  {
    LOBYTE(result) = 0;
    uint64_t v2 = (unsigned __int8 *)*((void *)&xmmword_100A0B010 + 1);
    do
    {
      int v4 = *v2;
      v2 += 16;
      int v3 = v4;
      if (result)
      {
        uint64_t result = 1;
        if (v3 == 2) {
          return result;
        }
      }
      else
      {
        if (v3) {
          BOOL v5 = v3 == 3;
        }
        else {
          BOOL v5 = 1;
        }
        LOBYTE(result) = v5;
      }
      --v0;
    }
    while (v0);
  }
  return 0;
}

_WORD *sub_1002131E4(uint64_t a1, __int16 a2)
{
  int v4 = sub_10010CE48(0x28uLL);
  BOOL v5 = v4;
  if (v4)
  {
    uint64_t v6 = *((void *)&xmmword_100A0B000 + 1);
    *(void *)int v4 = a1;
    v4[4] = a2;
    sub_1001F667C(a1);
    while (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 24);
      if (!v6)
      {
        *(void *)(v7 + 24) = v5;
        *((void *)v5 + 4) = v7;
        goto LABEL_10;
      }
    }
    *((void *)&xmmword_100A0B000 + 1) = v5;
LABEL_10:
    sub_1002132B0(a1, 1);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to allocate new DB session!", v8, v9, v10, v11, v12, v13, v14, v17);
    uint64_t v15 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return v5;
}

void sub_1002132B0(uint64_t a1, int a2)
{
  unsigned __int16 v2 = word_100A0B048;
  if (word_100A0B048) {
    BOOL v3 = *((void *)&xmmword_100A0B030 + 1) == 0;
  }
  else {
    BOOL v3 = 0;
  }
  if (v3)
  {
    uint64_t v6 = 0;
    uint64_t v7 = qword_100A0B040;
    unint64_t v8 = 1;
    unsigned __int16 v9 = word_100A0B048;
    do
    {
      uint64_t v10 = (void *)(v7 + v6);
      if (!a1 || *v10 == a1)
      {
        if (a2) {
          sub_100213D28(*(unsigned __int16 **)(v7 + v6), *(char **)(v7 + v6 + 8), *(unsigned __int16 *)(v7 + v6 + 16), 0);
        }
        sub_100023010(*(void **)(v7 + v6 + 8));
        void *v10 = 0;
        v10[1] = 0;
        _OWORD v10[2] = 0;
        --v9;
        unsigned __int16 v2 = word_100A0B048;
        uint64_t v11 = *((void *)&xmmword_100A0B030 + 1);
        uint64_t v7 = qword_100A0B040;
      }
      else
      {
        uint64_t v11 = 0;
      }
      if (v8 >= v2) {
        break;
      }
      v6 += 24;
      ++v8;
    }
    while (!v11);
    if (v9 != v2)
    {
      if (!v9)
      {
        uint64_t v13 = 0;
        uint64_t v15 = (char *)qword_100A0B040;
        goto LABEL_26;
      }
      uint64_t v12 = (char *)sub_10010CE48(24 * v9);
      if (v12)
      {
        uint64_t v13 = v12;
        unsigned int v14 = (unsigned __int16)word_100A0B048;
        uint64_t v15 = (char *)qword_100A0B040;
        if (word_100A0B048)
        {
          uint64_t v16 = 0;
          unint64_t v17 = 0;
          unsigned __int16 v18 = 0;
          do
          {
            uint64_t v19 = &v15[v16];
            if (*(void *)&v15[v16])
            {
              if (v18 >= v9)
              {
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Not enough allocation to update stalled request", v31, v32, v33, v34, v35, v36, v37, v39);
                  uint64_t v38 = sub_100050B4C(0x44u);
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
                    sub_100744F6C();
                  }
                }
                sub_100023010(v13);
                return;
              }
              int v20 = v18++;
              uint64_t v21 = &v13[24 * v20];
              long long v22 = *(_OWORD *)v19;
              *((void *)v21 + 2) = *((void *)v19 + 2);
              *(_OWORD *)uint64_t v21 = v22;
              uint64_t v15 = (char *)qword_100A0B040;
              unsigned int v14 = (unsigned __int16)word_100A0B048;
            }
            ++v17;
            v16 += 24;
          }
          while (v17 < v14);
        }
LABEL_26:
        sub_100023010(v15);
        qword_100A0B040 = (uint64_t)v13;
        word_100A0B048 = v9;
        return;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to allocate room for updated stall queue", v23, v24, v25, v26, v27, v28, v29, v39);
        uint64_t v30 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

void sub_1002134D0(unsigned __int16 *a1)
{
  uint64_t v2 = *((void *)&xmmword_100A0B000 + 1);
  uint64_t v3 = sub_1002135EC(a1);
  if (v3) {
    sub_100213738(v3);
  }
  if (v2)
  {
    while (*(unsigned __int16 **)v2 != a1)
    {
      uint64_t v2 = *(void *)(v2 + 24);
      if (!v2) {
        goto LABEL_6;
      }
    }
  }
  else
  {
LABEL_6:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to find the DB session to destroy!", v4, v5, v6, v7, v8, v9, v10, v14);
      uint64_t v2 = sub_100050B4C(0x44u);
      if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10025B8C0();
    __break(1u);
  }
  uint64_t v11 = *(unsigned int *)(v2 + 12);
  if (v11)
  {
    sub_100026DB4(v11);
    xmmword_100A0B070(v2);
  }
  if (xmmword_100A0B080) {
    xmmword_100A0B080(0, v2, 0, 0, 0);
  }
  sub_1002132B0((uint64_t)a1, 0);
  uint64_t v13 = *(void *)(v2 + 24);
  uint64_t v12 = *(void *)(v2 + 32);
  if (v12)
  {
    *(void *)(v12 + 24) = v13;
    uint64_t v13 = *(void *)(v2 + 24);
    if (!v13) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  *((void *)&xmmword_100A0B000 + 1) = *(void *)(v2 + 24);
  if (v13) {
LABEL_16:
  }
    *(void *)(v13 + 32) = v12;
LABEL_17:

  sub_100023010((void *)v2);
}

uint64_t sub_1002135EC(unsigned __int16 *a1)
{
  if (!sub_100197770((uint64_t)a1) && !sub_100197698((uint64_t)a1))
  {
    if (!sub_100058654()) {
      return 0;
    }
    sub_100056E24((uint64_t)"Invalid Handle", v5, v6, v7, v8, v9, v10, v11, v29);
    uint64_t v12 = sub_100050B4C(0x44u);
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
    goto LABEL_17;
  }
  uint64_t v2 = (unsigned __int16)xmmword_100A0B030;
  if ((_WORD)xmmword_100A0B030)
  {
    uint64_t result = qword_100A0B028;
    if (!qword_100A0B028)
    {
      if (!sub_100058654()) {
        return 0;
      }
      sub_100056E24((uint64_t)"findResponseByHCIHandle response is NULL lmHandle=%d", v13, v14, v15, v16, v17, v18, v19, *a1);
      int v20 = sub_100050B4C(0x44u);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        return 0;
      }
      goto LABEL_17;
    }
    while (1)
    {
      uint64_t v4 = *(unsigned __int16 ***)(result + 24);
      if (!v4) {
        break;
      }
      if (*v4 == a1) {
        return result;
      }
      result += 72;
      if (!--v2) {
        return 0;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"findResponseByHCIHandle session is NULL lmHandle=%d", v21, v22, v23, v24, v25, v26, v27, *a1);
      uint64_t v28 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
LABEL_17:
      }
        sub_100744F6C();
    }
  }
  return 0;
}

void sub_100213738(uint64_t a1)
{
  if ((_WORD)xmmword_100A0B030)
  {
    uint64_t v2 = 0;
    size_t v3 = 72 * (unsigned __int16)(xmmword_100A0B030 - 1);
    for (uint64_t i = 72; qword_100A0B028 + i - 72 != a1; i += 72)
    {
      ++v2;
      v3 -= 72;
      if ((unsigned __int16)xmmword_100A0B030 == v2) {
        return;
      }
    }
    unsigned __int16 v5 = xmmword_100A0B030 - 1;
    if ((_WORD)xmmword_100A0B030 == 1)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v6 = sub_10010CE48(72 * (unsigned __int16)(xmmword_100A0B030 - 1));
      uint64_t v7 = v6;
      if ((_WORD)v2) {
        memmove(v6, (const void *)qword_100A0B028, i - 72);
      }
      if (v5 > (unsigned __int16)v2) {
        memmove(v7, (const void *)(qword_100A0B028 + i), v3);
      }
    }
    uint64_t v8 = *(void **)(a1 + 56);
    if (v8) {
      sub_100023010(v8);
    }
    uint64_t v9 = *(void **)(a1 + 40);
    if (v9) {
      sub_100023010(v9);
    }
    uint64_t v10 = *(unsigned int *)(a1 + 16);
    if (v10) {
      sub_100026DB4(v10);
    }
    sub_100023010((void *)qword_100A0B028);
    qword_100A0B028 = (uint64_t)v7;
    LOWORD(xmmword_100A0B030) = v5;
  }
}

uint64_t sub_100213868()
{
  LOBYTE(xmmword_100A0B010) = 1;
  return (*((uint64_t (**)(void))&xmmword_100A0B070 + 1))(0);
}

void sub_100213884(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Overriding ATT MTU to %d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v11 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  word_100A0B09C = a1;
}

uint64_t sub_100213954(uint64_t a1)
{
  v59[2] = 0;
  *(_WORD *)unsigned int v59 = 3;
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  if (!a1
    && sub_100058654()
    && (sub_100056E24((uint64_t)"LE ATT DB Handle MTU Change Request null hci handle", v3, v4, v5, v6, v7, v8, v9, v58),
        uint64_t v10 = sub_100050B4C(0x44u),
        os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)))
  {
    sub_100745764();
    if (i) {
      goto LABEL_12;
    }
  }
  else if (i)
  {
    goto LABEL_12;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE ATT DB Handle MTU Change Request session not found", v11, v12, v13, v14, v15, v16, v17, v58);
    uint64_t v18 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  sub_10025B8C0();
LABEL_12:
  unsigned int v19 = *(unsigned __int16 *)(i + 18);
  if (!*(_WORD *)(i + 18))
  {
    uint64_t v28 = 0;
    if (!sub_100058654()) {
      return v28;
    }
    sub_100056E24((uint64_t)"No pending ATT MTU requests", v21, v22, v23, v24, v25, v26, v27, v58);
    uint64_t v29 = sub_100050B4C(0x44u);
    uint64_t v28 = 0;
    if (!os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
      return v28;
    }
    *(_DWORD *)long long buf = 136446210;
    int v61 = sub_100050714();
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    return 0;
  }
  *(_WORD *)(i + 18) = 0;
  if (a1 && !*(unsigned char *)(a1 + 2))
  {
    uint64_t v20 = *(unsigned __int16 *)(i + 8);
  }
  else
  {
    uint64_t v20 = (unsigned __int16)word_100A0B09C;
    if (!word_100A0B09C) {
      uint64_t v20 = sub_1002112D8(a1);
    }
  }
  if (v19 >= v20) {
    uint64_t v30 = v20;
  }
  else {
    uint64_t v30 = v19;
  }
  int v31 = *(unsigned __int16 *)(i + 8);
  if (v31 != 23 && v30 != v31)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"The negotiated MTU is different from a previously negotiated one: %u != %u", v32, v33, v34, v35, v36, v37, v38, *(unsigned __int16 *)(i + 8));
      uint64_t v39 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  *(_WORD *)&v59[1] = v30;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"MTU response: desiredMTU %d, remoteMTU %d", v40, v41, v42, v43, v44, v45, v46, v20);
    uint64_t v47 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      int v61 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (sub_100212F18(a1, v59, 3uLL, 0))
  {
    *(_DWORD *)long long buf = 513;
    LOBYTE(v61) = 17;
    return sub_100212F18(a1, (char *)buf, 5uLL, 0);
  }
  *(_WORD *)(i + 8) = v30;
  uint64_t v48 = sub_10022BB88(a1, v30);
  if (!v48)
  {
    if (off_100A0B090) {
      off_100A0B090(i, v30);
    }
    return 0;
  }
  uint64_t v28 = v48;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ATT DB failed to set GATT MTU", v49, v50, v51, v52, v53, v54, v55, v58);
    uint64_t v56 = sub_100050B4C(0x44u);
    if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  return v28;
}

uint64_t sub_100213CB8(uint64_t a1)
{
  uint64_t v1 = *((void *)&xmmword_100A0B000 + 1);
  if (!*((void *)&xmmword_100A0B000 + 1)) {
    return 4202;
  }
  while (*(void *)v1 != a1)
  {
    uint64_t v1 = *(void *)(v1 + 24);
    if (!v1) {
      return 4202;
    }
  }
  uint64_t v3 = *(unsigned int *)(v1 + 12);
  if (!v3) {
    return 4203;
  }
  sub_100026DB4(v3);
  *(_DWORD *)(v1 + 12) = 0;
  xmmword_100A0B070(v1);
  return 0;
}

void sub_100213D28(unsigned __int16 *a1, char *a2, unsigned int a3, char a4)
{
  if ((sub_100197770((uint64_t)a1) || sub_100197698((uint64_t)a1)) && a2 && a3)
  {
    if ((_BYTE)xmmword_100A0B000)
    {
      if ((*a2 | 0x80) == 0xD2 || !sub_1002135EC(a1))
      {
        uint64_t v8 = (unsigned __int16 **)*((void *)&xmmword_100A0B000 + 1);
        if (*((void *)&xmmword_100A0B000 + 1))
        {
          while (*v8 != a1)
          {
            uint64_t v8 = (unsigned __int16 **)v8[3];
            if (!v8) {
              goto LABEL_10;
            }
          }
        }
        else
        {
LABEL_10:
          if (sub_100058654())
          {
            uint64_t v16 = a1 ? *a1 : 0;
            sub_100056E24((uint64_t)"Couldn't find active session for ATT Request lmHandle 0x%x request %d", v9, v10, v11, v12, v13, v14, v15, v16);
            uint64_t v33 = sub_100050B4C(0x44u);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          sub_10025B8C0();
        }
        int v34 = *a2;
        if (!*((void *)&xmmword_100A0B030 + 1))
        {
          switch(*a2)
          {
            case 2:
              int v42 = sub_10021424C((uint64_t)a1, (uint64_t)a2, a3);
              goto LABEL_55;
            case 3:
            case 5:
            case 7:
            case 9:
            case 11:
            case 13:
            case 15:
            case 17:
            case 19:
            case 20:
            case 21:
            case 23:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
              goto LABEL_61;
            case 4:
              int v42 = sub_1002144A4((uint64_t)a1, a2, a3);
              goto LABEL_55;
            case 6:
              int v42 = sub_1002147FC((uint64_t)a1, a2, a3, a4);
              goto LABEL_55;
            case 8:
            case 16:
              int v42 = sub_100214B3C(a1, (unsigned __int8 *)a2, a3, a4);
              goto LABEL_55;
            case 10:
            case 12:
              int v42 = sub_100215010((uint64_t)a1, a2, a3, a4);
              goto LABEL_55;
            case 14:
              int v42 = sub_100215388((uint64_t)a1, (unsigned __int8 *)a2, a3, a4);
              goto LABEL_55;
            case 18:
            case 22:
              goto LABEL_45;
            case 24:
              int v42 = sub_100215E48((uint64_t)a1, a2, a3);
              goto LABEL_55;
            case 30:
              int v42 = sub_100213CB8((uint64_t)a1);
              goto LABEL_55;
            default:
              if (v34 != 82) {
                goto LABEL_61;
              }
LABEL_45:
              int v42 = sub_100215780((uint64_t)a1, (unsigned __int8 *)a2, a3);
LABEL_55:
              if (v42 > 4309)
              {
                if (v42 == 4310) {
                  return;
                }
                int v67 = 4540;
              }
              else
              {
                if (!v42) {
                  return;
                }
                int v67 = 4300;
              }
              if (v42 == v67) {
                return;
              }
LABEL_61:
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"LE_ATT_DB_ProcessClientRequest opcode 0x%x failed with %!", v68, v69, v70, v71, v72, v73, v74, *a2);
                uint64_t v75 = sub_100050B4C(0x44u);
                if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_63;
                }
              }
              return;
          }
        }
        if ((v34 | 0x80) != 0xD2)
        {
          uint64_t v35 = (unsigned __int16)word_100A0B048;
          if (!word_100A0B048)
          {
LABEL_30:
            uint64_t v37 = sub_100022FE8(a3);
            if (v37)
            {
              uint64_t v38 = v37;
              memmove(v37, a2, a3);
              uint64_t v39 = (char *)sub_10010CE48(24 * (unsigned __int16)word_100A0B048 + 24);
              if (v39)
              {
                uint64_t v40 = (uint64_t)v39;
                uint64_t v41 = &v39[24 * (unsigned __int16)word_100A0B048];
                *(void *)uint64_t v41 = a1;
                *((void *)v41 + 1) = v38;
                *((_WORD *)v41 + 8) = a3;
                *(_DWORD *)(v41 + 18) = 0;
                *((_WORD *)v41 + 11) = 0;
                if (qword_100A0B040)
                {
                  memmove(v39, (const void *)qword_100A0B040, 24 * (unsigned __int16)word_100A0B048);
                  sub_100023010((void *)qword_100A0B040);
                }
                qword_100A0B040 = v40;
                ++word_100A0B048;
                return;
              }
              if (!sub_100058654()) {
                return;
              }
              sub_100056E24((uint64_t)"Failed to add new request to stall queue", v59, v60, v61, v62, v63, v64, v65, v76);
              uint64_t v66 = sub_100050B4C(0x44u);
              if (!os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
                return;
              }
            }
            else
            {
              if (!sub_100058654()) {
                return;
              }
              sub_100056E24((uint64_t)"Failed to backup stalled request", v51, v52, v53, v54, v55, v56, v57, v76);
              uint64_t v58 = sub_100050B4C(0x44u);
              if (!os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
                return;
              }
            }
LABEL_63:
            sub_100744F6C();
            return;
          }
          uint64_t v36 = (unsigned __int16 **)qword_100A0B040;
          while (*v36 != a1)
          {
            v36 += 3;
            if (!--v35) {
              goto LABEL_30;
            }
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Ignoring request as connection 0x%x already has one in the stall queue", v43, v44, v45, v46, v47, v48, v49, (uint64_t)a1);
            uint64_t v50 = sub_100050B4C(0x44u);
            if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
              goto LABEL_63;
            }
          }
        }
      }
      else if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Ignoring request [%@] as connection 0x%x is already pending transaction %d", v25, v26, v27, v28, v29, v30, v31, (uint64_t)a2);
        uint64_t v32 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          goto LABEL_63;
        }
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Ignoring request as ATT database is not initialized!", v17, v18, v19, v20, v21, v22, v23, v76);
      uint64_t v24 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        goto LABEL_63;
      }
    }
  }
}

uint64_t sub_10021424C(uint64_t a1, uint64_t a2, int a3)
{
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  if (a1)
  {
    if (!i)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE ATT DB Handle MTU Change Request session not found", v7, v8, v9, v10, v11, v12, v13, v44);
        uint64_t v14 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      sub_10025B8C0();
    }
    if (a3 != 3)
    {
      *(_DWORD *)long long buf = 513;
      char v24 = 4;
LABEL_21:
      LOBYTE(v46) = v24;
      return sub_100212F18(a1, (char *)buf, 5uLL, 0);
    }
    unsigned int v15 = *(unsigned __int16 *)(a2 + 1);
    *(_WORD *)(i + 18) = v15;
    if (v15 <= 0x16)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid requested MTU %d", v16, v17, v18, v19, v20, v21, v22, *(unsigned __int16 *)(i + 18));
        uint64_t v23 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      *(_DWORD *)long long buf = 513;
      char v24 = 17;
      goto LABEL_21;
    }
    if (*(_DWORD *)(a1 + 132) == 7)
    {
      return sub_100213954(a1);
    }
    else
    {
      int v41 = sub_100058654();
      uint64_t result = 0;
      if (v41)
      {
        sub_100056E24((uint64_t)"Peer asked for MTU:%d while link is not ready, waiting for link to be ready", v34, v35, v36, v37, v38, v39, v40, *(unsigned __int16 *)(i + 18));
        int v42 = sub_100050B4C(0x44u);
        BOOL v43 = os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0;
        if (v43)
        {
          *(_DWORD *)long long buf = 136446210;
          uint64_t v46 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          return 0;
        }
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE ATT DB Handle MTU Change Request null hci handle", v25, v26, v27, v28, v29, v30, v31, v44);
      uint64_t v32 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return 414;
  }
  return result;
}

uint64_t sub_1002144A4(uint64_t a1, char *a2, unsigned int a3)
{
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  if (a3 <= 4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not unpack Find Information Request", v5, v6, v7, v8, v9, v10, v11, v48);
      uint64_t v12 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    int v50 = 1025;
    char v13 = 4;
    goto LABEL_33;
  }
  char v14 = *a2;
  uint64_t v15 = *(unsigned __int16 *)(a2 + 1);
  unint64_t v16 = *(unsigned __int16 *)(a2 + 3);
  if (v16 <= (unsigned __int16)(v15 - 1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid handle(s) (0x%04x, 0x%04x) for Find Information Request", v30, v31, v32, v33, v34, v35, v36, v15);
      uint64_t v37 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    char v13 = 1;
    LOBYTE(v50) = 1;
    BYTE1(v50) = v14;
    HIWORD(v50) = v15;
    goto LABEL_33;
  }
  uint64_t v17 = sub_10010CE48(*(unsigned __int16 *)(i + 8));
  if (!v17)
  {
    LOBYTE(v50) = 1;
    BYTE1(v50) = v14;
    HIWORD(v50) = v15;
    char v13 = 17;
    goto LABEL_33;
  }
  uint64_t v18 = v17;
  char v49 = v14;
  int v19 = *(unsigned __int16 *)(i + 8);
  *uint64_t v17 = 5;
  if (v15 > v16
    || (unsigned __int16 v20 = word_100A0B020, v15 >= (unsigned __int16)word_100A0B020))
  {
LABEL_27:
    sub_100023010(v18);
    LOBYTE(v50) = 1;
    BYTE1(v50) = v49;
    HIWORD(v50) = v15;
    char v13 = 10;
LABEL_33:
    char v51 = v13;
    return sub_100212F18(a1, (char *)&v50, 5uLL, 0);
  }
  int v21 = 0;
  uint64_t v22 = *((void *)&xmmword_100A0B010 + 1);
  uint64_t v23 = 16 * v15;
  unint64_t v24 = v15;
  int v25 = 1;
  do
  {
    if (*(unsigned char *)(v22 + v23) == 2)
    {
      int v26 = *(unsigned __int8 *)(*(void *)(v22 + v23 + 8) + 4);
      if (v21)
      {
        if (v21 != v26) {
          goto LABEL_35;
        }
      }
      else
      {
        if (v26 == 2) {
          char v27 = 1;
        }
        else {
          char v27 = 2;
        }
        uint64_t v28 = (unsigned __int16)v25++;
        *((unsigned char *)v18 + v28) = v27;
        int v21 = v26;
      }
      if (v19 - (unsigned __int16)v25 < v21 + 2) {
        goto LABEL_35;
      }
      *((unsigned char *)v18 + (unsigned __int16)v25) = v24;
      *((unsigned char *)v18 + (unsigned __int16)(v25 + 1)) = BYTE1(v24);
      int v29 = v25 + 2;
      sub_10022A6F4((unsigned char *)v18 + (unsigned __int16)(v25 + 2), (unsigned __int8 *)(*(void *)(*((void *)&xmmword_100A0B010 + 1) + v23 + 8) + 4), 1);
      int v25 = v29 + v21;
      unsigned __int16 v20 = word_100A0B020;
      uint64_t v22 = *((void *)&xmmword_100A0B010 + 1);
    }
    if (v24 >= v16) {
      break;
    }
    ++v24;
    v23 += 16;
  }
  while (v24 < v20);
  if ((unsigned __int16)v25 == 1) {
    goto LABEL_27;
  }
LABEL_35:
  if (!sub_100212F18(a1, (char *)v18, (unsigned __int16)v25, 0))
  {
    sub_100023010(v18);
    return 0;
  }
  LOBYTE(v50) = 1;
  BYTE1(v50) = v49;
  HIWORD(v50) = v15;
  char v51 = 17;
  uint64_t v39 = sub_100212F18(a1, (char *)&v50, 5uLL, 0);
  sub_100023010(v18);
  uint64_t result = 0;
  if (v39)
  {
    if (v39 != 412)
    {
      uint64_t result = sub_100058654();
      if (result)
      {
        sub_100056E24((uint64_t)"ATT Send status %!", v40, v41, v42, v43, v44, v45, v46, v39);
        uint64_t v47 = sub_100050B4C(0x44u);
        uint64_t result = os_log_type_enabled(v47, OS_LOG_TYPE_ERROR);
        if (result)
        {
          sub_100745764();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1002147FC(uint64_t a1, _DWORD *a2, unsigned int a3, char a4)
{
  __int16 v52 = 0;
  char v51 = 0;
  uint64_t v49 = 0;
  *(_OWORD *)ptr = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  LODWORD(v45) = dword_100A0B098;
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  *((void *)&v46 + 1) = i;
  if (a3 <= 6)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not unpack Find By Type Value Request", v9, v10, v11, v12, v13, v14, v15, v42);
      unint64_t v16 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    LODWORD(v43[0]) = 1537;
    char v17 = 4;
    goto LABEL_9;
  }
  *(_DWORD *)int v50 = *a2;
  *(_DWORD *)&v50[3] = *(_DWORD *)((char *)a2 + 3);
  __int16 v18 = *(_WORD *)&v50[1];
  if (*(unsigned __int16 *)&v50[3] <= (unsigned __int16)(*(_WORD *)&v50[1] - 1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid handle(s) (0x%04x, 0x%04x) for Find By Type Value Request", v23, v24, v25, v26, v27, v28, v29, *(unsigned __int16 *)&v50[1]);
      uint64_t v30 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    LOBYTE(v43[0]) = 1;
    BYTE1(v43[0]) = v50[0];
    WORD1(v43[0]) = *(_WORD *)&v50[1];
    BYTE4(v43[0]) = 1;
    return sub_100212F18(a1, (char *)v43, 5uLL, 0);
  }
  if (a3 != 7)
  {
    char v51 = (char *)a2 + 7;
    __int16 v52 = a3 - 7;
  }
  int v19 = sub_10010CE48(*(unsigned __int16 *)(i + 8));
  ptr[1] = v19;
  if (!v19)
  {
    LOBYTE(v43[0]) = 1;
    BYTE1(v43[0]) = v50[0];
    WORD1(v43[0]) = *(_WORD *)&v50[1];
    char v17 = 17;
LABEL_9:
    BYTE4(v43[0]) = v17;
    return sub_100212F18(a1, (char *)v43, 5uLL, 0);
  }
  LOWORD(v48) = *(_WORD *)(i + 8);
  WORD1(v48) = 1;
  *int v19 = 7;
  int v20 = sub_100216118((uint64_t)v50, (unsigned int *)&v45, a4);
  int v21 = v20;
  if (v20 == 240)
  {
    *((void *)&v45 + 1) = sub_100216350;
    uint64_t v32 = sub_100022FE8(a3);
    *((void *)&v48 + 1) = v32;
    LOWORD(v49) = a3;
    if (v32)
    {
      memmove(v32, a2, a3);
      v43[2] = *(_OWORD *)ptr;
      v43[3] = v48;
      uint64_t v44 = v49;
      v43[0] = v45;
      v43[1] = v46;
      sub_1002165A8(v43);
      return 4540;
    }
    goto LABEL_27;
  }
  if (v20)
  {
    LOBYTE(v43[0]) = 1;
    BYTE1(v43[0]) = v50[0];
    WORD1(v43[0]) = v18;
    BYTE4(v43[0]) = v20;
LABEL_28:
    uint64_t v33 = sub_100212F18(a1, (char *)v43, 5uLL, 0);
    sub_100023010(ptr[1]);
    if (v33)
    {
      if (v33 != 412)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"ATT Send status %!", v34, v35, v36, v37, v38, v39, v40, v33);
          uint64_t v41 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
    }
    goto LABEL_33;
  }
  uint64_t v22 = ptr[1];
  if (sub_100212F18(a1, (char *)ptr[1], WORD1(v48), 0))
  {
LABEL_27:
    LOBYTE(v43[0]) = 1;
    BYTE1(v43[0]) = v50[0];
    WORD1(v43[0]) = v18;
    BYTE4(v43[0]) = 17;
    goto LABEL_28;
  }
  sub_100023010(v22);
LABEL_33:
  if (v21) {
    return (v21 + 4300);
  }
  else {
    return 0;
  }
}

uint64_t sub_100214B3C(unsigned __int16 *a1, unsigned __int8 *a2, unsigned int a3, char a4)
{
  int v7 = *a2;
  uint64_t v70 = 0;
  *(_OWORD *)ptr = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  LODWORD(v66) = dword_100A0B098;
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(unsigned __int16 **)i == a1) {
      break;
    }
  }
  *((void *)&v67 + 1) = i;
  if (a3 != 7 && a3 != 21)
  {
    if (sub_100058654())
    {
      uint64_t v26 = "Type";
      if (v7 == 16) {
        uint64_t v26 = "Group Type";
      }
      sub_100056E24((uint64_t)"Could not unpack Read By %s Request", v19, v20, v21, v22, v23, v24, v25, (uint64_t)v26);
      uint64_t v27 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    char v28 = *a2;
    v71[0] = 1;
    v71[1] = v28;
    *(_WORD *)&v71[2] = 0;
    char v29 = 4;
    goto LABEL_50;
  }
  uint64_t v9 = *(unsigned __int16 *)(a2 + 1);
  unsigned int v10 = *(unsigned __int16 *)(a2 + 3);
  sub_10022A5EC((int8x16_t *)(a2 + 5), (a3 - 5), 1, (uint64_t)v71);
  int v11 = *(_DWORD *)v71;
  uint64_t v12 = *(unsigned __int16 *)&v71[4];
  v78[0] = *(void *)&v71[6];
  *(void *)((char *)v78 + 6) = *(void *)&v71[12];
  if (v10 <= (unsigned __int16)(v9 - 1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid handle(s) (0x%04x, 0x%04x) for Read By %s Request", v30, v31, v32, v33, v34, v35, v36, v9);
      uint64_t v37 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    char v29 = 1;
    v71[0] = 1;
    v71[1] = v7;
    *(_WORD *)&v71[2] = v9;
    goto LABEL_50;
  }
  if (v7 == 16)
  {
    uint64_t v13 = (uint64_t (*)(unsigned char *))xmmword_100A0B060;
    if (!(void)xmmword_100A0B060)
    {
      sub_10025B8C0();
      uint64_t v13 = (uint64_t (*)(unsigned char *))xmmword_100A0B060;
    }
    *(_DWORD *)uint64_t v71 = v11;
    *(_WORD *)&v71[4] = v12;
    *(void *)&v71[6] = v78[0];
    *(void *)&v71[12] = *(void *)((char *)v78 + 6);
    if ((v13(v71) & 1) == 0)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid grouping type 0x%x for Read By Group Type Request", v46, v47, v48, v49, v50, v51, v52, v12);
        uint64_t v53 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      *(_WORD *)uint64_t v71 = 4097;
      *(_WORD *)&v71[2] = v9;
      char v29 = 16;
      goto LABEL_50;
    }
  }
  if (!i)
  {
    if (sub_100058654())
    {
      uint64_t v45 = a1 ? *a1 : 0;
      sub_100056E24((uint64_t)"Couldn't find active session for lmHandle 0x%x, Read By Type Request failed", v38, v39, v40, v41, v42, v43, v44, v45);
      uint64_t v64 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    v71[0] = 1;
    v71[1] = v7;
    *(_WORD *)&v71[2] = v9;
    char v29 = 14;
    goto LABEL_50;
  }
  LOWORD(ptr[0]) = v9;
  uint64_t v14 = sub_10010CE48(*(unsigned __int16 *)(i + 8));
  ptr[1] = v14;
  if (!v14)
  {
    v71[0] = 1;
    v71[1] = v7;
    *(_WORD *)&v71[2] = v9;
    char v29 = 17;
LABEL_50:
    v71[4] = v29;
    return sub_100212F18((uint64_t)a1, v71, 5uLL, 0);
  }
  LOWORD(v69) = *(_WORD *)(i + 8);
  if (v7 == 16) {
    char v15 = 17;
  }
  else {
    char v15 = 9;
  }
  WORD1(v69) = 1;
  *uint64_t v14 = v15;
  int v75 = v11;
  __int16 v76 = v12;
  *(void *)uint64_t v77 = v78[0];
  *(void *)&v77[6] = *(void *)((char *)v78 + 6);
  int v16 = sub_1002167A4(v7, v9, v10, (unsigned __int8 *)&v75, 0, (unsigned int *)&v66, a4);
  if (v16 == 240)
  {
    *((void *)&v66 + 1) = sub_1002169CC;
    char v17 = sub_100022FE8(a3);
    *((void *)&v69 + 1) = v17;
    LOWORD(v70) = a3;
    if (v17)
    {
      memmove(v17, a2, a3);
      long long v72 = *(_OWORD *)ptr;
      long long v73 = v69;
      uint64_t v74 = v70;
      *(_OWORD *)uint64_t v71 = v66;
      *(_OWORD *)&v71[16] = v67;
      sub_1002165A8(v71);
      return 4540;
    }
    v71[0] = 1;
    v71[1] = v7;
    *(_WORD *)&v71[2] = ptr[0];
    v71[4] = 17;
    uint64_t v55 = sub_100212F18((uint64_t)a1, v71, 5uLL, 0);
    sub_100023010(ptr[1]);
    uint64_t result = 4540;
    if (v55 && v55 != 412)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Send status %!", v56, v57, v58, v59, v60, v61, v62, v55);
        uint64_t v63 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return 4540;
    }
  }
  else
  {
    int v54 = sub_100216CB4(*a2, (uint64_t)&v66, v16);
    sub_100023010(ptr[1]);
    if (v54) {
      return (v54 + 4300);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100215010(uint64_t a1, char *a2, unsigned int a3, char a4)
{
  int v8 = *a2;
  memset(v52, 0, 5);
  uint64_t v51 = 0;
  *(_OWORD *)ptr = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  LODWORD(v47) = dword_100A0B098;
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  *((void *)&v48 + 1) = i;
  if (v8 == 12) {
    int v10 = 5;
  }
  else {
    int v10 = 3;
  }
  if (v10 != a3)
  {
    if (sub_100058654())
    {
      uint64_t v27 = "Read";
      if (v8 == 12) {
        uint64_t v27 = "Read Blob";
      }
      sub_100056E24((uint64_t)"Could not unpack %s Request", v20, v21, v22, v23, v24, v25, v26, (uint64_t)v27);
      char v28 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    char v29 = *a2;
    LOBYTE(v45[0]) = 1;
    BYTE1(v45[0]) = v29;
    WORD1(v45[0]) = 0;
    char v19 = 4;
    goto LABEL_20;
  }
  __memmove_chk();
  if (v8 == 12 && *(unsigned __int16 *)((char *)v52 + 3) >= 0x201u)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid offset (%u) for Read By Group Type Request", v11, v12, v13, v14, v15, v16, v17, *(unsigned __int16 *)((char *)v52 + 3));
      __int16 v18 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    LOBYTE(v45[0]) = 1;
    BYTE1(v45[0]) = v52[0];
    WORD1(v45[0]) = *(_WORD *)((char *)v52 + 1);
    char v19 = 7;
    goto LABEL_20;
  }
  uint64_t v31 = sub_10010CE48(*(unsigned __int16 *)(i + 8));
  ptr[1] = v31;
  if (!v31)
  {
    LOBYTE(v45[0]) = 1;
    BYTE1(v45[0]) = v52[0];
    WORD1(v45[0]) = *(_WORD *)((char *)v52 + 1);
    char v19 = 17;
LABEL_20:
    BYTE4(v45[0]) = v19;
    return sub_100212F18(a1, (char *)v45, 5uLL, 0);
  }
  LOWORD(v50) = *(_WORD *)(i + 8);
  if (v8 == 12) {
    char v32 = 13;
  }
  else {
    char v32 = 11;
  }
  WORD1(v50) = 1;
  *uint64_t v31 = v32;
  int v33 = sub_1002167A4(LOBYTE(v52[0]), *(unsigned __int16 *)((char *)v52 + 1), *(unsigned __int16 *)((char *)v52 + 1), 0, *(unsigned __int16 *)((char *)v52 + 3), (unsigned int *)&v47, a4);
  if (v33 == 240)
  {
    *((void *)&v47 + 1) = sub_1002169CC;
    uint64_t v34 = sub_100022FE8(a3);
    *((void *)&v50 + 1) = v34;
    LOWORD(v51) = a3;
    if (v34)
    {
      memmove(v34, a2, a3);
      v45[2] = *(_OWORD *)ptr;
      v45[3] = v50;
      uint64_t v46 = v51;
      v45[0] = v47;
      v45[1] = v48;
      sub_1002165A8(v45);
      return 4540;
    }
    LOBYTE(v45[0]) = 1;
    BYTE1(v45[0]) = v52[0];
    WORD1(v45[0]) = *(_WORD *)((char *)v52 + 1);
    BYTE4(v45[0]) = 17;
    uint64_t v36 = sub_100212F18(a1, (char *)v45, 5uLL, 0);
    sub_100023010(ptr[1]);
    uint64_t result = 4540;
    if (v36 && v36 != 412)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Send status %!", v37, v38, v39, v40, v41, v42, v43, v36);
        uint64_t v44 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return 4540;
    }
  }
  else
  {
    int v35 = sub_100216CB4(*a2, (uint64_t)&v47, v33);
    sub_100023010(ptr[1]);
    if (v35) {
      return (v35 + 4300);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100215388(uint64_t a1, unsigned __int8 *a2, unsigned int a3, char a4)
{
  uint64_t v66 = 0;
  *(_OWORD *)ptr = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  LODWORD(v62) = dword_100A0B098;
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  *((void *)&v63 + 1) = i;
  if (a3 < 5 || (unsigned int v7 = a3 - 1, ((a3 - 1) & 1) != 0))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not unpack Read Multiple Request", v16, v17, v18, v19, v20, v21, v22, v55);
      uint64_t v23 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    LODWORD(v60[0]) = 3585;
    char v24 = 4;
LABEL_20:
    BYTE4(v60[0]) = v24;
    return sub_100212F18(a1, (char *)v60, 5uLL, 0);
  }
  else
  {
    unsigned int v8 = 0;
    uint64_t v9 = a2 + 1;
    int v59 = *a2;
    unsigned int v56 = v7 >> 1;
    unsigned int v10 = (unsigned __int16)(v7 >> 1);
    do
    {
      uint64_t v11 = *(unsigned __int16 *)&v9[2 * v8];
      if (v11 >= (unsigned __int16)word_100A0B020
        || *(unsigned char *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v11) != 2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Handle 0x%04x is invalid!", v26, v27, v28, v29, v30, v31, v32, v11);
          int v33 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        char v24 = 1;
        LOBYTE(v60[0]) = 1;
        BYTE1(v60[0]) = v59;
        WORD1(v60[0]) = v11;
        goto LABEL_20;
      }
      int v12 = sub_100216DAC(a1, *(unsigned __int8 *)(*(void *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v11 + 8) + 26), 1);
      if (v12)
      {
        char v34 = v12;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Handle 0x%04x does not have read permissions!", v35, v36, v37, v38, v39, v40, v41, v11);
          uint64_t v42 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        LOBYTE(v60[0]) = 1;
        BYTE1(v60[0]) = v59;
        WORD1(v60[0]) = v11;
        BYTE4(v60[0]) = v34;
        return sub_100212F18(a1, (char *)v60, 5uLL, 0);
      }
      ++v8;
    }
    while (v8 < v10);
    uint64_t v13 = sub_10010CE48(*(unsigned __int16 *)(i + 8));
    ptr[1] = v13;
    if (!v13)
    {
      LOBYTE(v60[0]) = 1;
      BYTE1(v60[0]) = v59;
      WORD1(v60[0]) = 0;
      char v24 = 17;
      goto LABEL_20;
    }
    uint64_t v14 = 0;
    LOWORD(v65) = *(_WORD *)(i + 8);
    WORD1(v65) = 1;
    *uint64_t v13 = 15;
    while (1)
    {
      LOWORD(ptr[0]) = *(_WORD *)&a2[v14 + 1];
      int v15 = sub_1002167A4(v59, LOWORD(ptr[0]), LOWORD(ptr[0]), 0, 0, (unsigned int *)&v62, a4);
      if (v15) {
        break;
      }
      v14 += 2;
      if (2 * v56 == v14) {
        goto LABEL_35;
      }
    }
    if (v15 == 240)
    {
      *((void *)&v62 + 1) = sub_1002169CC;
      uint64_t v43 = sub_100022FE8(a3);
      *((void *)&v65 + 1) = v43;
      LOWORD(v66) = a3;
      if (v43)
      {
        memmove(v43, a2, a3);
        v60[2] = *(_OWORD *)ptr;
        v60[3] = v65;
        uint64_t v61 = v66;
        v60[0] = v62;
        v60[1] = v63;
        sub_1002165A8(v60);
        return 4540;
      }
      LOBYTE(v60[0]) = 1;
      BYTE1(v60[0]) = v59;
      WORD1(v60[0]) = ptr[0];
      BYTE4(v60[0]) = 17;
      uint64_t v46 = sub_100212F18(a1, (char *)v60, 5uLL, 0);
      sub_100023010(ptr[1]);
      uint64_t result = 4540;
      if (v46 && v46 != 412)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"ATT Send status %!", v47, v48, v49, v50, v51, v52, v53, v46);
          int v54 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        return 4540;
      }
    }
    else
    {
LABEL_35:
      uint64_t v44 = ptr[1];
      int v45 = sub_100216CB4(*a2, (uint64_t)&v62, v15);
      sub_100023010(v44);
      if (v45) {
        return (v45 + 4300);
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100215780(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  int v6 = *a2;
  for (uint64_t i = *((void *)&xmmword_100A0B000 + 1); i; uint64_t i = *(void *)(i + 24))
  {
    if (*(void *)i == a1) {
      break;
    }
  }
  unsigned int v8 = dword_100A0B098;
  if (v6 == 82)
  {
    BOOL v11 = 0;
    unsigned int v10 = "Write Command";
  }
  else
  {
    uint64_t v9 = "Prepare Write Request";
    if (v6 == 18) {
      uint64_t v9 = "Write Request";
    }
    if (v6 == 210) {
      unsigned int v10 = "Signed Write Command";
    }
    else {
      unsigned int v10 = v9;
    }
    BOOL v11 = v6 == 210;
    if (a3 <= 0xE && v6 == 210) {
      goto LABEL_31;
    }
  }
  BOOL v13 = a3 < 5 && v6 == 22;
  if (a3 < 3 || v13)
  {
LABEL_31:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not unpack %s", v27, v28, v29, v30, v31, v32, v33, (uint64_t)v10);
      char v34 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    if ((v6 | 4) != 0x16) {
      return 4021;
    }
    LODWORD(v92[0]) = 1;
    char v26 = 4;
LABEL_38:
    BYTE4(v92[0]) = v26;
    return sub_100212F18(a1, (char *)v92, 5uLL, 0);
  }
  uint64_t v14 = *(unsigned __int16 *)(a2 + 1);
  if (v6 == 22)
  {
    __int16 v15 = 5;
    if (!v11) {
      goto LABEL_24;
    }
    goto LABEL_37;
  }
  __int16 v15 = 3;
  if (v11)
  {
LABEL_37:
    LOBYTE(v92[0]) = 1;
    BYTE1(v92[0]) = v6;
    WORD1(v92[0]) = v14;
    char v26 = 6;
    goto LABEL_38;
  }
LABEL_24:
  if (!*(_WORD *)(a2 + 1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid handle (0x%04x) for %s", v36, v37, v38, v39, v40, v41, v42, 0);
      uint64_t v43 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    if ((v6 | 4) == 0x16)
    {
      char v26 = 1;
      LOBYTE(v92[0]) = 1;
      BYTE1(v92[0]) = v6;
      WORD1(v92[0]) = 0;
      goto LABEL_38;
    }
    return 4021;
  }
  uint64_t v91 = *(unsigned __int16 *)(a2 + 1);
  if (v6 == 22)
  {
    unsigned int v16 = *(unsigned __int16 *)(i + 8);
    unsigned __int16 v17 = a3 - v15;
    if ((int)(v16 - 5) < (unsigned __int16)(a3 - v15))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Prepare Write sent with ValueLength=%d which is larger than allowed (ATT_MTU-5=%d)", v18, v19, v20, v21, v22, v23, v24, v17);
        uint64_t v25 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      LOWORD(v92[0]) = 5633;
      WORD1(v92[0]) = v91;
      char v26 = 13;
      goto LABEL_38;
    }
  }
  else
  {
    if (v6 != 18)
    {
      size_t v48 = 0;
      __int16 v46 = 0;
      int v45 = 0;
      __int16 v59 = 0;
      goto LABEL_60;
    }
    unsigned int v16 = *(unsigned __int16 *)(i + 8);
  }
  uint64_t v44 = (char *)sub_10010CE48(v16);
  if (!v44)
  {
    LOBYTE(v92[0]) = 1;
    BYTE1(v92[0]) = v6;
    WORD1(v92[0]) = v91;
    char v26 = 17;
    goto LABEL_38;
  }
  int v45 = v44;
  __int16 v46 = *(_WORD *)(i + 8);
  if (*a2 == 18) {
    char v47 = 19;
  }
  else {
    char v47 = 23;
  }
  *uint64_t v44 = v47;
  unsigned int v8 = dword_100A0B098;
  size_t v48 = 1;
  uint64_t v14 = v91;
  if (v6 == 22 && !(void)xmmword_100A0B080)
  {
    uint64_t v49 = v44;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No callback provided to handle Prepare Writes!", v50, v51, v52, v53, v54, v55, v56, v83);
      uint64_t v57 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    int v58 = 6;
    LOWORD(v14) = v91;
LABEL_81:
    LOBYTE(v92[0]) = 1;
    BYTE1(v92[0]) = v6;
    WORD1(v92[0]) = v14;
    BYTE4(v92[0]) = v58;
    uint64_t v70 = sub_100212F18(a1, (char *)v92, 5uLL, 0);
    int v45 = v49;
    goto LABEL_85;
  }
  __int16 v59 = v91;
LABEL_60:
  if (v14 < (unsigned __int16)word_100A0B020
    && *(unsigned char *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v14) == 2
    && (uint64_t v60 = *(void *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v14 + 8)) != 0)
  {
    __int16 v85 = v59;
    __int16 v86 = v46;
    unsigned int v87 = v48;
    ptr = v45;
    if (*((void *)&xmmword_100A0B080 + 1))
    {
      uint64_t v84 = (unsigned __int8 *)(v60 + 4);
      uint64_t v61 = *(void *)(*((void *)&xmmword_100A0B010 + 1) + 16 * v14 + 8);
      BOOL v62 = sub_10022A44C((unsigned __int8 *)(v60 + 4), (unsigned __int8 *)&xmmword_1007BA4D8);
      uint64_t v60 = v61;
      if (!v62)
      {
        BOOL v63 = sub_10022A44C(v84, (unsigned __int8 *)&xmmword_1007BA4EC);
        uint64_t v60 = v61;
        if (!v63)
        {
          BOOL v64 = sub_10022A44C(v84, (unsigned __int8 *)&xmmword_1007BA500);
          uint64_t v60 = v61;
          if (!v64)
          {
            (*((void (**)(uint64_t, uint64_t))&xmmword_100A0B080 + 1))(v61, i);
            uint64_t v60 = v61;
          }
        }
      }
    }
    uint64_t v65 = v60;
    int v66 = sub_100216DAC(*(void *)i, *(unsigned __int8 *)(v60 + 26), 0);
    LOWORD(v14) = v91;
    int v45 = ptr;
    __int16 v46 = v86;
    size_t v48 = v87;
    __int16 v59 = v85;
    if (!v66)
    {
      long long v67 = *(uint64_t (**)(uint64_t))(v65 + 40);
      if (v67)
      {
        int v66 = v67(v65);
        __int16 v59 = v85;
        __int16 v46 = v86;
        size_t v48 = v87;
        int v45 = ptr;
        LOWORD(v14) = v91;
      }
      else
      {
        int v66 = 3;
      }
    }
  }
  else
  {
    int v66 = 1;
  }
  if ((v6 | 4) == 0x16)
  {
    if (v66 != 240)
    {
      int v58 = v66;
      if (!v66)
      {
        uint64_t v68 = v45;
        int v58 = sub_100212F18(a1, v45, v48, 0);
        if (v58)
        {
          LOBYTE(v92[0]) = 1;
          BYTE1(v92[0]) = v6;
          WORD1(v92[0]) = v91;
          BYTE4(v92[0]) = 17;
          unsigned __int8 v69 = sub_100212F18(a1, (char *)v92, 5uLL, 0);
          uint64_t v70 = 0;
          int v58 = v69;
        }
        else
        {
          uint64_t v70 = 0;
        }
        int v45 = v68;
        goto LABEL_85;
      }
      uint64_t v49 = v45;
      goto LABEL_81;
    }
    __int16 v71 = v59;
    __int16 v88 = v48;
    __int16 v72 = v46;
    ptra = v45;
    long long v73 = sub_100022FE8(a3);
    if (v73)
    {
      uint64_t v74 = v73;
      memmove(v73, a2, a3);
      v92[0] = v8;
      v92[1] = sub_1002170FC;
      v92[2] = 0;
      v92[3] = i;
      __int16 v93 = v71;
      int v94 = 0;
      __int16 v95 = 0;
      uint64_t v96 = ptra;
      __int16 v97 = v72;
      __int16 v98 = v88;
      int v99 = 0;
      uint64_t v100 = v74;
      __int16 v101 = a3;
      int v102 = 0;
      __int16 v103 = 0;
      sub_1002165A8(v92);
      return 4540;
    }
    LOBYTE(v92[0]) = 1;
    BYTE1(v92[0]) = v6;
    WORD1(v92[0]) = v91;
    BYTE4(v92[0]) = 17;
    uint64_t v70 = sub_100212F18(a1, (char *)v92, 5uLL, 0);
    int v58 = 240;
    int v45 = ptra;
  }
  else
  {
    uint64_t v70 = 0;
    int v58 = v66;
  }
LABEL_85:
  if (v45) {
    sub_100023010(v45);
  }
  if (v70)
  {
    if (v70 != 412)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Send status %!", v75, v76, v77, v78, v79, v80, v81, v70);
        uint64_t v82 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
  }
  if (v58) {
    return (v58 + 4300);
  }
  else {
    return 0;
  }
}

uint64_t sub_100215E48(uint64_t a1, char *a2, int a3)
{
  uint64_t v53 = 0;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  LODWORD(v49) = dword_100A0B098;
  uint64_t v5 = (void *)*((void *)&xmmword_100A0B000 + 1);
  if (*((void *)&xmmword_100A0B000 + 1))
  {
    do
    {
      if (*v5 == a1) {
        break;
      }
      uint64_t v5 = (void *)v5[3];
    }
    while (v5);
  }
  *((void *)&v50 + 1) = v5;
  if (a3 != 2)
  {
    LODWORD(v48[0]) = 6145;
    BYTE4(v48[0]) = 4;
    return sub_100212F18(a1, (char *)v48, 5uLL, 0);
  }
  if (xmmword_100A0B080)
  {
    xmmword_100A0B080();
    v48[0] = 0;
    if (*((void *)&xmmword_100A0B030 + 1)) {
      sub_10025B8C0();
    }
    int v6 = sub_100022FE8(0x48uLL);
    *((void *)&xmmword_100A0B030 + 1) = v6;
    if (!v6)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to backup Execute Write Request", v39, v40, v41, v42, v43, v44, v45, v47);
        __int16 v46 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 17;
    }
    *(_OWORD *)int v6 = v49;
    long long v7 = v50;
    long long v8 = v51;
    long long v9 = v52;
    v6[8] = v53;
    *((_OWORD *)v6 + 2) = v8;
    *((_OWORD *)v6 + 3) = v9;
    *((_OWORD *)v6 + 1) = v7;
    v48[1] = &v49;
    LOWORD(v48[0]) = 4;
    unsigned __int8 v10 = sub_1000268E4((uint64_t)sub_1002172E0, v48, 100, (int *)(*((void *)&xmmword_100A0B030 + 1) + 16));
    uint64_t v11 = v10;
    if (v10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to create dispatch timer for execute write with result %!", v12, v13, v14, v15, v16, v17, v18, v11);
        uint64_t v19 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_100023010(*((void **)&xmmword_100A0B030 + 1));
      *((void *)&xmmword_100A0B030 + 1) = 0;
      return 17;
    }
    uint64_t result = 0;
    ++dword_100A0B098;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No callback provided to handle Execute Writes", v21, v22, v23, v24, v25, v26, v27, v47);
      uint64_t v28 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    char v29 = *a2;
    LOBYTE(v48[0]) = 1;
    BYTE1(v48[0]) = v29;
    WORD1(v48[0]) = 0;
    BYTE4(v48[0]) = 6;
    uint64_t v30 = sub_100212F18(a1, (char *)v48, 5uLL, 0);
    uint64_t result = 4306;
    if (v30 && v30 != 412)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ATT Send status %!", v31, v32, v33, v34, v35, v36, v37, v30);
        uint64_t v38 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      return 4306;
    }
  }
  return result;
}

uint64_t sub_100216118(uint64_t a1, unsigned int *a2, char a3)
{
  __n_2[1] = 0;
  int v31 = 0;
  __n_2[0] = 2;
  WORD2(__n_2[0]) = *(_WORD *)(a1 + 5);
  unint64_t v4 = *(unsigned __int16 *)(a1 + 1);
  if (*(_WORD *)(a1 + 1))
  {
    BOOL v6 = v4 > *(unsigned __int16 *)(a1 + 3) || v4 >= (unsigned __int16)word_100A0B020;
    if (!v6)
    {
      uint64_t v8 = 16 * v4;
      do
      {
        if (*(unsigned char *)(*((void *)&xmmword_100A0B010 + 1) + v8) == 2)
        {
          if (*((unsigned __int16 *)a2 + 24) - *((unsigned __int16 *)a2 + 25) < 4) {
            return 0;
          }
          long long v9 = *(char **)(*((void *)&xmmword_100A0B010 + 1) + v8 + 8);
          if (sub_10022A44C((unsigned __int8 *)v9 + 4, (unsigned __int8 *)__n_2))
          {
            *((_WORD *)a2 + 16) = v4;
            if (!*(void *)(a1 + 7)) {
              goto LABEL_17;
            }
            unsigned __int8 v10 = sub_100022FE8(0x200uLL);
            unsigned __int16 __n = 0;
            if (!v10) {
              return 17;
            }
            uint64_t v11 = v10;
            LOBYTE(v28) = a3;
            uint64_t v12 = (*((uint64_t (**)(char *, void, void *, uint64_t, unsigned __int16 *, void, void, void (*)(int, int, void *, size_t), int))v9
                   + 4))(v9, 0, v10, 512, &__n, *a2, *((void *)a2 + 3), sub_100216350, v28);
            if (v12)
            {
              uint64_t v26 = v12;
              sub_100023010(v11);
              return v26;
            }
            if (__n == *(unsigned __int16 *)(a1 + 15) && !memcmp(v11, *(const void **)(a1 + 7), __n))
            {
              sub_100023010(v11);
LABEL_17:
              char v13 = *v9;
              uint64_t v14 = *((void *)a2 + 5);
              uint64_t v15 = *((unsigned __int16 *)a2 + 25);
              *((_WORD *)a2 + 25) = v15 + 1;
              *(unsigned char *)(v14 + v15) = v13;
              char v16 = v9[1];
              uint64_t v17 = *((void *)a2 + 5);
              uint64_t v18 = *((unsigned __int16 *)a2 + 25);
              *((_WORD *)a2 + 25) = v18 + 1;
              *(unsigned char *)(v17 + v18) = v16;
              char v19 = v9[24];
              uint64_t v20 = *((void *)a2 + 5);
              uint64_t v21 = *((unsigned __int16 *)a2 + 25);
              *((_WORD *)a2 + 25) = v21 + 1;
              *(unsigned char *)(v20 + v21) = v19;
              char v22 = v9[25];
              uint64_t v23 = *((void *)a2 + 5);
              uint64_t v24 = *((unsigned __int16 *)a2 + 25);
              *((_WORD *)a2 + 25) = v24 + 1;
              *(unsigned char *)(v23 + v24) = v22;
              goto LABEL_18;
            }
            sub_100023010(v11);
          }
        }
LABEL_18:
        BOOL v6 = v4++ >= *(unsigned __int16 *)(a1 + 3);
        v8 += 16;
      }
      while (!v6 && v4 < (unsigned __int16)word_100A0B020);
    }
  }
  if (*((_WORD *)a2 + 25) == 1) {
    return 10;
  }
  else {
    return 0;
  }
}

void sub_100216350(int a1, int a2, void *__s1, size_t __n)
{
  uint64_t v4 = (unsigned __int16)xmmword_100A0B030;
  if ((_WORD)xmmword_100A0B030)
  {
    unsigned int v5 = __n;
    for (uint64_t i = qword_100A0B028; *(_DWORD *)i != a1; i += 72)
    {
      if (!--v4) {
        return;
      }
    }
    long long v9 = *(_DWORD **)(i + 56);
    if (!v9 || (unsigned int v10 = *(unsigned __int16 *)(i + 64), v10 <= 7))
    {
      sub_10025B8C0();
      long long v9 = *(_DWORD **)(i + 56);
      LOWORD(v10) = *(_WORD *)(i + 64);
    }
    *(_DWORD *)uint64_t v35 = *v9;
    *(_DWORD *)&v35[3] = *(_DWORD *)((char *)v9 + 3);
    uint64_t v36 = (char *)v9 + 7;
    __int16 v37 = v10 - 7;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to read value at attribute handle 0x%04x with result %d", v11, v12, v13, v14, v15, v16, v17, *(unsigned __int16 *)(i + 32));
        uint64_t v18 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v19 = **(void **)(i + 24);
      char v38 = 1;
      char v39 = v35[0];
      __int16 v40 = *(_WORD *)&v35[1];
      char v41 = a2;
      goto LABEL_14;
    }
    if (v5 == (unsigned __int16)(v10 - 7) && !memcmp(__s1, (char *)v9 + 7, v5))
    {
      uint64_t v20 = *(char **)(*((void *)&xmmword_100A0B010 + 1) + 16 * *(unsigned __int16 *)(i + 32) + 8);
      char v21 = *v20;
      uint64_t v22 = *(void *)(i + 40);
      uint64_t v23 = *(unsigned __int16 *)(i + 50);
      *(_WORD *)(i + 50) = v23 + 1;
      *(unsigned char *)(v22 + v23) = v21;
      char v24 = v20[1];
      uint64_t v25 = *(void *)(i + 40);
      uint64_t v26 = *(unsigned __int16 *)(i + 50);
      *(_WORD *)(i + 50) = v26 + 1;
      *(unsigned char *)(v25 + v26) = v24;
      char v27 = v20[24];
      uint64_t v28 = *(void *)(i + 40);
      uint64_t v29 = *(unsigned __int16 *)(i + 50);
      *(_WORD *)(i + 50) = v29 + 1;
      *(unsigned char *)(v28 + v29) = v27;
      LOBYTE(v20) = v20[25];
      uint64_t v30 = *(void *)(i + 40);
      uint64_t v31 = *(unsigned __int16 *)(i + 50);
      *(_WORD *)(i + 50) = v31 + 1;
      *(unsigned char *)(v30 + v31) = (_BYTE)v20;
    }
    __int16 v32 = *(_WORD *)(i + 32) + 1;
    *(_WORD *)&v35[1] = v32;
    int v33 = sub_100216118(v35, i, 0);
    if (v33 != 240)
    {
      if (v33)
      {
        uint64_t v34 = **(void **)(i + 24);
        char v38 = 1;
        char v39 = v35[0];
        __int16 v40 = v32;
        char v41 = v33;
        uint64_t v19 = v34;
      }
      else
      {
        if (!sub_100212F18(**(void **)(i + 24), *(char **)(i + 40), *(unsigned __int16 *)(i + 50), 0))goto LABEL_15; {
        uint64_t v19 = **(void **)(i + 24);
        }
        char v38 = 1;
        char v39 = v35[0];
        __int16 v40 = v32;
        char v41 = 17;
      }
LABEL_14:
      sub_100212F18(v19, &v38, 5uLL, 0);
LABEL_15:
      sub_100213738(i);
    }
  }
}

void sub_1002165A8(void *a1)
{
  uint64_t v2 = (char *)sub_10010CE48(72 * (unsigned __int16)xmmword_100A0B030 + 72);
  if (v2)
  {
    uint64_t v3 = v2;
    v18[0] = 0;
    uint64_t v4 = &v2[72 * (unsigned __int16)xmmword_100A0B030];
    *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
    uint64_t v5 = a1[8];
    long long v7 = *((_OWORD *)a1 + 2);
    long long v6 = *((_OWORD *)a1 + 3);
    *((_OWORD *)v4 + 1) = *((_OWORD *)a1 + 1);
    *((_OWORD *)v4 + 2) = v7;
    *((_OWORD *)v4 + 3) = v6;
    *((void *)v4 + 8) = v5;
    v18[1] = a1;
    LOWORD(v18[0]) = 4;
    uint64_t v8 = sub_1000268E4((uint64_t)sub_100216704, v18, 100, (int *)&v2[72 * (unsigned __int16)xmmword_100A0B030 + 16]);
    if (v8)
    {
      uint64_t v9 = v8;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to create dispatch timer for async response with result %!", v10, v11, v12, v13, v14, v15, v16, v9);
        uint64_t v17 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_100023010(v3);
    }
    else
    {
      if (qword_100A0B028)
      {
        memmove(v3, (const void *)qword_100A0B028, 72 * (unsigned __int16)xmmword_100A0B030);
        sub_100023010((void *)qword_100A0B028);
      }
      qword_100A0B028 = (uint64_t)v3;
      LOWORD(xmmword_100A0B030) = xmmword_100A0B030 + 1;
      ++dword_100A0B098;
    }
  }
}

uint64_t sub_100216704(uint64_t result)
{
  uint64_t v1 = (unsigned __int16)xmmword_100A0B030;
  if ((_WORD)xmmword_100A0B030)
  {
    uint64_t result = **(unsigned int **)(result + 8);
    for (uint64_t i = (unsigned int *)qword_100A0B028; *i != result; i += 18)
    {
      if (!--v1) {
        return result;
      }
    }
    i[4] = 0;
    uint64_t v3 = (void (*)(uint64_t))*((void *)&xmmword_100A0B060 + 1);
    if (!*((void *)&xmmword_100A0B060 + 1))
    {
      sub_10025B8C0();
      uint64_t v3 = (void (*)(uint64_t))*((void *)&xmmword_100A0B060 + 1);
      uint64_t result = *i;
    }
    v3(result);
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, void, void))*((void *)i + 1);
    uint64_t v5 = *i;
    return v4(v5, 241, 0, 0);
  }
  return result;
}

uint64_t sub_1002167A4(int a1, unsigned int a2, unsigned int a3, unsigned __int8 *a4, unsigned int a5, unsigned int *a6, char a7)
{
  if (a1 == 8
    || a1 == 16
    || (uint64_t v9 = 1, a2)
    && (unsigned __int16)word_100A0B020 > a2
    && *(unsigned char *)(*((void *)&xmmword_100A0B010 + 1) + 16 * a2) == 2)
  {
    uint64_t v9 = 0;
    if (a2 - 1 < a3 && (unsigned __int16)word_100A0B020 > a2)
    {
      uint64_t v10 = 16 * a2;
      unint64_t v11 = a2;
      unint64_t v12 = a3;
      while (1)
      {
        *((_WORD *)a6 + 16) = v11;
        if (*(unsigned char *)(*((void *)&xmmword_100A0B010 + 1) + v10) == 2)
        {
          uint64_t v13 = *(void *)(*((void *)&xmmword_100A0B010 + 1) + v10 + 8);
          unsigned __int16 v23 = 0;
          if (!a4 || sub_10022A44C((unsigned __int8 *)(v13 + 4), a4))
          {
            if (*((void *)&xmmword_100A0B080 + 1)
              && !sub_10022A44C((unsigned __int8 *)(v13 + 4), (unsigned __int8 *)&xmmword_1007BA4D8)
              && !sub_10022A44C((unsigned __int8 *)(v13 + 4), (unsigned __int8 *)&xmmword_1007BA4EC)
              && !sub_10022A44C((unsigned __int8 *)(v13 + 4), (unsigned __int8 *)&xmmword_1007BA500))
            {
              (*((void (**)(uint64_t, void))&xmmword_100A0B080 + 1))(v13, *((void *)a6 + 3));
            }
            uint64_t v14 = sub_100216DAC(**((void **)a6 + 3), *(unsigned __int8 *)(v13 + 26), 1);
            if (v14) {
              return v14;
            }
            uint64_t v15 = sub_100022FE8(0x200uLL);
            if (!v15) {
              return 17;
            }
            uint64_t v16 = v15;
            LOBYTE(v19) = a7;
            uint64_t v17 = (*(uint64_t (**)(uint64_t, void, void *, uint64_t, unsigned __int16 *, void, void, void (*)(int, int, void *, int), int))(v13 + 32))(v13, a5, v15, 512, &v23, *a6, *((void *)a6 + 3), sub_1002169CC, v19);
            if (v17 || (uint64_t v17 = sub_100216F20(a1, (char *)v13, v16, v23, (uint64_t)a6), v17))
            {
              uint64_t v9 = v17;
              sub_100023010(v16);
              return v9;
            }
            sub_100023010(v16);
          }
        }
        uint64_t v9 = 0;
        if (v11 < v12)
        {
          ++v11;
          v10 += 16;
          if (v11 < (unsigned __int16)word_100A0B020) {
            continue;
          }
        }
        return v9;
      }
    }
  }
  return v9;
}

void sub_1002169CC(int a1, int a2, void *a3, int a4)
{
  uint64_t v4 = (unsigned __int16)xmmword_100A0B030;
  if (!(_WORD)xmmword_100A0B030) {
    return;
  }
  for (uint64_t i = qword_100A0B028; *(_DWORD *)i != a1; i += 72)
  {
    if (!--v4) {
      return;
    }
  }
  uint64_t v7 = **(unsigned __int8 **)(i + 56);
  uint64_t v8 = *(unsigned __int16 *)(i + 32);
  if (v8 >= (unsigned __int16)word_100A0B020
    || (uint64_t v9 = *(char **)(*((void *)&xmmword_100A0B010 + 1) + 16 * v8 + 8)) == 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Attribute handle 0x%04x is no longer available for transaction ID %d", v13, v14, v15, v16, v17, v18, v19, *(unsigned __int16 *)(i + 32));
      uint64_t v20 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    a2 = 14;
    goto LABEL_21;
  }
  if (a2 || (a2 = sub_100216F20(**(unsigned __int8 **)(i + 56), v9, a3, a4, i)) != 0)
  {
LABEL_21:
    sub_100216CB4(v7, i, a2);
    sub_100213738(i);
    return;
  }
  a2 = 0;
  switch((int)v7)
  {
    case 8:
    case 16:
      uint64_t v10 = *(void *)(i + 56);
      if (!v10 || (unsigned int v11 = *(unsigned __int16 *)(i + 64), v11 <= 5))
      {
        sub_10025B8C0();
        uint64_t v10 = *(void *)(i + 56);
        LOBYTE(v11) = *(unsigned char *)(i + 64);
      }
      long long v30 = 0uLL;
      int v31 = 0;
      uint64_t v12 = *(unsigned __int16 *)(v10 + 3);
      sub_10022A5EC((int8x16_t *)(v10 + 5), (v11 - 5), 1, (uint64_t)&v30);
      long long v28 = v30;
      int v29 = v31;
      a2 = sub_1002167A4(v7, (unsigned __int16)(*(_WORD *)(i + 32) + 1), v12, &v28, 0, i, 0);
      goto LABEL_15;
    case 10:
    case 12:
      goto LABEL_21;
    default:
      uint64_t v21 = *(void *)(i + 56);
      if (!v21 || (int v22 = *(unsigned __int16 *)(i + 64), v22 <= 1))
      {
        sub_10025B8C0();
        int v22 = *(unsigned __int16 *)(i + 64);
        uint64_t v21 = *(void *)(i + 56);
      }
      int v23 = v22 - 1;
      if (v22 < 1) {
        int v23 = v22;
      }
      unsigned int v24 = v23 >> 1;
      uint64_t v25 = v21 + 1;
      if (v22 < 3)
      {
        LOWORD(v26) = 0;
        goto LABEL_34;
      }
      LOWORD(v26) = 0;
      break;
  }
  while (*(unsigned __int16 *)(v25 + 2 * (unsigned __int16)v26) != *(unsigned __int16 *)(i + 32))
  {
    LOWORD(v26) = v26 + 1;
    if ((unsigned __int16)v26 >= (unsigned __int16)v24)
    {
      int v26 = v23 >> 1;
      break;
    }
  }
LABEL_34:
  unsigned __int16 v27 = v26 + 1;
  if (v24 <= (unsigned __int16)(v26 + 1))
  {
    a2 = 0;
    goto LABEL_21;
  }
  while (1)
  {
    *(_WORD *)(i + 32) = *(_WORD *)(v25 + 2 * v27);
    a2 = sub_1002167A4(v7, *(unsigned __int16 *)(v25 + 2 * v27), *(unsigned __int16 *)(v25 + 2 * v27), 0, 0, i, 0);
    if (a2) {
      break;
    }
    if (v24 <= ++v27) {
      goto LABEL_21;
    }
  }
LABEL_15:
  if (a2 != 240) {
    goto LABEL_21;
  }
}

uint64_t sub_100216CB4(int a1, uint64_t a2, int a3)
{
  char v4 = a1;
  if ((a1 == 16 || a1 == 8) && a3 == 0)
  {
    if (*(_WORD *)(a2 + 50) != 1) {
      goto LABEL_16;
    }
    LOBYTE(a3) = 10;
  }
  else if (!a3 || a3 == 243)
  {
    goto LABEL_16;
  }
  if (a1 != 16 && a1 != 8 || *(unsigned __int16 *)(a2 + 50) < 2u)
  {
    __int16 v11 = *(_WORD *)(a2 + 32);
    uint64_t v9 = **(void **)(a2 + 24);
    v15[0] = 1;
    v15[1] = v4;
    __int16 v16 = v11;
    char v17 = a3;
    uint64_t v10 = v15;
    goto LABEL_19;
  }
LABEL_16:
  LOBYTE(result) = sub_100212F18(**(void **)(a2 + 24), *(char **)(a2 + 40), *(unsigned __int16 *)(a2 + 50), 0);
  if ((_BYTE)result)
  {
    __int16 v8 = *(_WORD *)(a2 + 32);
    uint64_t v9 = **(void **)(a2 + 24);
    v12[0] = 1;
    v12[1] = v4;
    __int16 v13 = v8;
    char v14 = 17;
    uint64_t v10 = v12;
LABEL_19:
    LOBYTE(result) = sub_100212F18(v9, v10, 5uLL, 0);
  }
  return result;
}

uint64_t sub_100216DAC(uint64_t a1, int a2, int a3)
{
  char v19 = 0;
  if (a2 & 0x15) == 0 && (a3) {
    return 2;
  }
  if ((a2 & 0x2A) == 0 && !a3) {
    return 3;
  }
  if (a3) {
    int v5 = 20;
  }
  else {
    int v5 = 40;
  }
  if ((v5 & a2) == 0) {
    return 0;
  }
  int v6 = a2 & 0x30;
  int v7 = a2 & 0xC;
  if (!a1) {
    goto LABEL_33;
  }
  if (*(unsigned char *)(a1 + 2) == 4)
  {
    int v8 = sub_1002349E0(a1);
    int v9 = sub_100234878(a1);
    char v19 = sub_100234900(a1);
    goto LABEL_20;
  }
  if (*(unsigned char *)(a1 + 2))
  {
LABEL_33:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid physical link at permission check", v10, v11, v12, v13, v14, v15, v16, v18);
      char v17 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    int v8 = 0;
    int v9 = 0;
  }
  else
  {
    int v8 = sub_10025363C(a1, &v19);
    int v9 = sub_100253590(a1);
  }
LABEL_20:
  if (v6 | v7 && !v8 && !v9) {
    return 5;
  }
  if (v9)
  {
    if (v7 && !v19) {
      return 5;
    }
  }
  else if (v6 | v7)
  {
    return 15;
  }
  return 0;
}

uint64_t sub_100216F20(int a1, char *a2, void *__src, int a4, uint64_t a5)
{
  unsigned __int16 v6 = 0;
  switch(a1)
  {
    case 8:
      unsigned int v9 = *(unsigned __int16 *)(a5 + 48);
      if (v9 >= 0x101) {
        unsigned __int16 v6 = 253;
      }
      else {
        unsigned __int16 v6 = v9 - 4;
      }
      int v7 = 2;
      goto LABEL_16;
    case 10:
    case 12:
    case 14:
      unsigned __int16 v6 = *(_WORD *)(a5 + 48) - 1;
      goto LABEL_3;
    case 16:
      unsigned int v10 = *(unsigned __int16 *)(a5 + 48);
      if (v10 >= 0x101) {
        unsigned __int16 v6 = 251;
      }
      else {
        unsigned __int16 v6 = v10 - 6;
      }
      int v7 = 4;
      goto LABEL_16;
    default:
LABEL_3:
      int v7 = 0;
      if (a1 == 16 || a1 == 8)
      {
LABEL_16:
        if (a4 >= v6) {
          int v8 = v6;
        }
        else {
          int v8 = a4;
        }
        uint64_t v11 = *(unsigned __int16 *)(a5 + 50);
        int v12 = v7 + v8;
        if (*(unsigned __int16 *)(a5 + 48) - (int)v11 < v7 + v8) {
          return -13;
        }
        uint64_t v14 = *(void *)(a5 + 40);
        if (v11 >= 2 && *(unsigned char *)(v14 + 1))
        {
          if (v12 != *(unsigned __int8 *)(v14 + 1)) {
            return 13;
          }
        }
        else
        {
          *(_WORD *)(a5 + 50) = v11 + 1;
          *(unsigned char *)(v14 + v11) = v12;
          uint64_t v14 = *(void *)(a5 + 40);
          LODWORD(v11) = *(unsigned __int16 *)(a5 + 50);
        }
        char v15 = *a2;
        *(_WORD *)(a5 + 50) = v11 + 1;
        *(unsigned char *)(v14 + v11) = v15;
        char v16 = a2[1];
        uint64_t v17 = *(void *)(a5 + 40);
        uint64_t v18 = *(unsigned __int16 *)(a5 + 50);
        *(_WORD *)(a5 + 50) = v18 + 1;
        *(unsigned char *)(v17 + v18) = v16;
        if (a1 == 16)
        {
          char v19 = a2[24];
          uint64_t v20 = *(void *)(a5 + 40);
          uint64_t v21 = *(unsigned __int16 *)(a5 + 50);
          *(_WORD *)(a5 + 50) = v21 + 1;
          *(unsigned char *)(v20 + v21) = v19;
          char v22 = a2[25];
          uint64_t v23 = *(void *)(a5 + 40);
          uint64_t v24 = *(unsigned __int16 *)(a5 + 50);
          *(_WORD *)(a5 + 50) = v24 + 1;
          *(unsigned char *)(v23 + v24) = v22;
        }
      }
      else if (*(unsigned __int16 *)(a5 + 48) - *(unsigned __int16 *)(a5 + 50) >= a4)
      {
        LOWORD(v8) = a4;
      }
      else
      {
        LOWORD(v8) = *(_WORD *)(a5 + 48) - *(_WORD *)(a5 + 50);
      }
      memmove((void *)(*(void *)(a5 + 40) + *(unsigned __int16 *)(a5 + 50)), __src, (unsigned __int16)v8);
      unsigned __int16 v25 = *(_WORD *)(a5 + 50) + v8;
      *(_WORD *)(a5 + 50) = v25;
      if (*(unsigned __int16 *)(a5 + 48) == v25) {
        return -13;
      }
      else {
        return 0;
      }
  }
}

void sub_1002170FC(int a1, int a2)
{
  uint64_t v2 = (unsigned __int16)xmmword_100A0B030;
  if ((_WORD)xmmword_100A0B030)
  {
    for (uint64_t i = qword_100A0B028; *(_DWORD *)i != a1; i += 72)
    {
      if (!--v2) {
        return;
      }
    }
    int v5 = *(unsigned __int8 **)(i + 56);
    int v6 = *v5;
    if (v6 == 22)
    {
      size_t v7 = *(unsigned __int16 *)(i + 64) - 1;
      uint64_t v8 = *(unsigned __int16 *)(i + 50);
      if ((int)v7 > *(unsigned __int16 *)(i + 48) - (int)v8)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Write rejected: response->responseBuffer buffer space (%d) is too small for response->context (%d).", v9, v10, v11, v12, v13, v14, v15, *(unsigned __int16 *)(*(void *)(i + 24) + 8) - *(unsigned __int16 *)(i + 50));
          char v16 = sub_100050B4C(0x44u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        LOBYTE(a2) = -11;
        goto LABEL_14;
      }
      memmove((void *)(*(void *)(i + 40) + v8), v5 + 1, v7);
      *(_WORD *)(i + 50) = *(_WORD *)(i + 64) + *(_WORD *)(i + 50) - 1;
    }
    if (!a2)
    {
      if (!sub_100212F18(**(void **)(i + 24), *(char **)(i + 40), *(unsigned __int16 *)(i + 50), 0))goto LABEL_19; {
      __int16 v28 = *(_WORD *)(i + 32);
      }
      uint64_t v26 = **(void **)(i + 24);
      v29[0] = 1;
      v29[1] = v6;
      __int16 v30 = v28;
      char v31 = 17;
      unsigned __int16 v27 = v29;
LABEL_18:
      sub_100212F18(v26, v27, 5uLL, 0);
LABEL_19:
      sub_100213738(i);
      return;
    }
LABEL_14:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to write value to attribute handle 0x%04x with result %d", v17, v18, v19, v20, v21, v22, v23, *(unsigned __int16 *)(i + 32));
      uint64_t v24 = sub_100050B4C(0x44u);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    __int16 v25 = *(_WORD *)(i + 32);
    uint64_t v26 = **(void **)(i + 24);
    v32[0] = 1;
    v32[1] = v6;
    __int16 v33 = v25;
    char v34 = a2;
    unsigned __int16 v27 = v32;
    goto LABEL_18;
  }
}

uint64_t sub_1002172E0(uint64_t result)
{
  uint64_t v1 = (unsigned int *)*((void *)&xmmword_100A0B030 + 1);
  if (*((void *)&xmmword_100A0B030 + 1))
  {
    uint64_t result = **(unsigned int **)(result + 8);
    if (**((_DWORD **)&xmmword_100A0B030 + 1) == result)
    {
      *(_DWORD *)(*((void *)&xmmword_100A0B030 + 1) + 16) = 0;
      uint64_t v2 = (void (*)(uint64_t))*((void *)&xmmword_100A0B060 + 1);
      if (!*((void *)&xmmword_100A0B060 + 1))
      {
        sub_10025B8C0();
        uint64_t v2 = (void (*)(uint64_t))*((void *)&xmmword_100A0B060 + 1);
        uint64_t result = *v1;
      }
      v2(result);
      uint64_t v3 = *v1;
      return sub_100217364(v3, 241, 0);
    }
  }
  return result;
}

uint64_t sub_100217364(uint64_t result, int a2, uint64_t a3)
{
  uint64_t v3 = *((void *)&xmmword_100A0B030 + 1);
  if (*((void *)&xmmword_100A0B030 + 1) && **((_DWORD **)&xmmword_100A0B030 + 1) == result)
  {
    char v4 = a2;
    if (a2)
    {
      if (word_100A0B020)
      {
        uint64_t v5 = 0;
        int v6 = (void *)(*((void *)&xmmword_100A0B010 + 1) + 8);
        while (*((unsigned char *)v6 - 8) != 2 || *v6 != a3)
        {
          v6 += 2;
          if ((unsigned __int16)word_100A0B020 == ++v5) {
            goto LABEL_9;
          }
        }
      }
      else
      {
LABEL_9:
        LOWORD(v5) = 0;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Execute write failed at attribute handle 0x%04x with result %d", v7, v8, v9, v10, v11, v12, v13, *(unsigned __int16 *)(v3 + 32));
        uint64_t v14 = sub_100050B4C(0x44u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      uint64_t v15 = **(void **)(v3 + 24);
      v20[0] = 6145;
      v20[1] = v5;
      char v21 = v4;
      char v16 = (char *)v20;
    }
    else
    {
      char v17 = 25;
      if (!sub_100212F18(**(void **)(*((void *)&xmmword_100A0B030 + 1) + 24), &v17, 1uLL, 0))
      {
LABEL_17:
        sub_100023010(*((void **)&xmmword_100A0B030 + 1));
        *((void *)&xmmword_100A0B030 + 1) = 0;
        return sub_1002132B0(0, 1);
      }
      uint64_t v15 = **(void **)(v3 + 24);
      int v18 = 6145;
      char v19 = 17;
      char v16 = (char *)&v18;
    }
    sub_100212F18(v15, v16, 5uLL, 0);
    goto LABEL_17;
  }
  return result;
}

const char *sub_1002174D0(unsigned int a1)
{
  if (a1 > 7) {
    return "unknown";
  }
  else {
    return off_10099F1A8[a1];
  }
}

void sub_1002174F4()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Resetting LE_Connection state", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v8);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v8 = 136446210;
      *(void *)&v8[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v8, 0xCu);
    }
  }
  byte_100A0B0A0 = 0;
  byte_100A0B0C4 = 0;
  byte_100A0B0A1 = 0;
  byte_100A0B0C8 = 0;
  qword_100A0B0B4 = 0;
  *(void *)&word_100A0B0BC = 0;
  qword_100A0B0AC = 0;
}

void sub_1002175E0()
{
  byte_100A0B0A0 = 0;
  byte_100A0B0C4 = 0;
  byte_100A0B0A1 = 0;
  byte_100A0B0C8 = 0;
  qword_100A0B0B4 = 0;
  *(void *)&word_100A0B0BC = 0;
  qword_100A0B0AC = 0;
}

void sub_100217614(uint64_t a1)
{
  if (!sub_100197770(a1)) {
    sub_10025B8C0();
  }
  if (sub_100197770(a1))
  {
    if (*(int *)(a1 + 204) < 255)
    {
      atomic_fetch_add_explicit((atomic_uint *volatile)(a1 + 204), 1u, memory_order_relaxed);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Reached max connection retain count. Not incrementing ref count", v2, v3, v4, v5, v6, v7, v8, v18);
        uint64_t v9 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (*(int *)(a1 + 148) <= 254) {
        sub_10025B8C0();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This command is only available to LE devices.", v10, v11, v12, v13, v14, v15, v16, v18);
    char v17 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_1002176F8(uint64_t a1)
{
  if (!sub_100197770(a1)) {
    sub_10025B8C0();
  }
  if (sub_100197770(a1))
  {
    int v2 = *(_DWORD *)(a1 + 204);
    if (v2 < 255)
    {
      if (v2 <= 0) {
        sub_10025B8C0();
      }
      atomic_fetch_add_explicit((atomic_uint *volatile)(a1 + 204), 0xFFFFFFFF, memory_order_relaxed);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Reached max connection retain count. Not decrementing ref count", v3, v4, v5, v6, v7, v8, v9, v19);
        uint64_t v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      if (*(int *)(a1 + 148) <= 254) {
        sub_10025B8C0();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE connection is invalid, can't decrement", v11, v12, v13, v14, v15, v16, v17, v19);
    uint64_t v18 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1002177E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (byte_100A0B0A0 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot connect to device, pending attempt already in progress.", v9, v10, v11, v12, v13, v14, v15, v136);
      uint64_t v16 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1309;
  }
  if (byte_100A0B0A1 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot connect to device, pending cancel connection already in progress.", v18, v19, v20, v21, v22, v23, v24, v136);
      __int16 v25 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1319;
  }
  if ((a9 & a8) != 0xFF && !byte_100A0B0A2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot connect to device, V2 command not supported.", v34, v35, v36, v37, v38, v39, v40, v136);
      char v41 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 152;
  }
  if (sub_100197B34((_DWORD *)a1))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Already connected to this address.", v42, v43, v44, v45, v46, v47, v48, v136);
      long long v49 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 133;
  }
  if ((a8 + 16) <= 0xEu)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid advertising handle %x", v50, v51, v52, v53, v54, v55, v56, a8);
    uint64_t v57 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  if ((char)a9 <= -2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid subevent %x", v58, v59, v60, v61, v62, v63, v64, a9);
    uint64_t v65 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  if ((a2 - 16385) <= 0xFFFFC002)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan interval %d", v66, v67, v68, v69, v70, v71, v72, a2);
    long long v73 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v73, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  if ((a3 - 16385) <= 0xFFFFC002)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan window %d", v74, v75, v76, v77, v78, v79, v80, a3);
    uint64_t v81 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v81, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  if (a5 >= 0x1F5)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid connection latency %d", v82, v83, v84, v85, v86, v87, v88, a5);
    uint64_t v89 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v89, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  unsigned int v90 = (int)((double)a4 / 1.25);
  if ((unsigned __int16)(v90 - 3201) <= 0xF384u)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid connection interval %dms", v91, v92, v93, v94, v95, v96, v97, a4);
    __int16 v98 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  if (v90 - 8 <= 8) {
    int v99 = 8;
  }
  else {
    int v99 = (unsigned __int16)(v90 - 8);
  }
  unsigned int v100 = (3 * a5 + 3) * v90;
  if (v100 >= 0x259)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Connection latency (%d) and connection interval (%d ms) are in a range taht will cause issues", v101, v102, v103, v104, v105, v106, v107, a5);
    uint64_t v108 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v108, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_56;
  }
  if ((a7 - 8) <= 0xFFFFFFF8)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid initPHYs %x", v109, v110, v111, v112, v113, v114, v115, a7);
    uint64_t v116 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_56:
    sub_100744F6C();
    return 101;
  }
  unsigned int v138 = v99;
  if (v100 <= (104858 * ((5 * (unsigned __int16)(int)((double)v90 * 1.25)) & 0x7FFFu)) >> 19) {
    LOWORD(v100) = (unsigned __int16)((104858 * ((5 * (unsigned __int16)(int)((double)v90 * 1.25)) & 0x7FFFu)) >> 16) >> 3;
  }
  if ((unsigned __int16)v100 >= 0x258u) {
    LOWORD(v100) = 600;
  }
  __int16 v139 = v100;
  sub_100229724((uint64_t)&dword_100A0B0A3);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Connecting with interval:%dms-%dms, latency=%d, timeout=%dms, initPHYs=%x connectingAddress=%s:%:, advHandle=%x subevent=%x", v118, v119, v120, v121, v122, v123, v124, ((double)v138 * 1.25));
    log = sub_100050B4C(0x42u);
    if (os_log_type_enabled(log, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v141 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_WORD *)long long buf = a2;
  *(_WORD *)&buf[2] = a2;
  LOWORD(v141) = a2;
  if (byte_100A0B0A2)
  {
    uint64_t v125 = sub_10019304C(0x100u, v118, v119, v120, v121, v122, v123, v124, a8);
  }
  else if (byte_100A0B0AA)
  {
    uint64_t v125 = sub_10019304C(0xD9u, v118, v119, v120, v121, v122, v123, v124, 0);
  }
  else
  {
    uint64_t v125 = sub_10019304C(0xADu, v118, v119, v120, v121, v122, v123, v124, a2);
  }
  uint64_t v17 = v125;
  if (v125)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not connect to device %!", v126, v127, v128, v129, v130, v131, v132, v17);
      uint64_t v133 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    byte_100A0B0A0 = 1;
    LOBYTE(qword_100A0B0AC) = 1;
    __int16 v134 = *(_WORD *)(a1 + 4);
    char v135 = *(unsigned char *)(a1 + 6);
    *(_DWORD *)((char *)&qword_100A0B0AC + 3) = *(_DWORD *)a1;
    BYTE1(qword_100A0B0B4) = v135;
    *(_WORD *)((char *)&qword_100A0B0AC + 7) = v134;
    WORD1(qword_100A0B0B4) = a2;
    WORD2(qword_100A0B0B4) = a3;
    HIWORD(qword_100A0B0B4) = a4;
    word_100A0B0BC = a5;
    word_100A0B0BE = v139;
    word_100A0B0C0 = a6;
    byte_100A0B0C2 = a7;
    BYTE1(qword_100A0B0AC) = a8;
    BYTE2(qword_100A0B0AC) = a9;
  }
  return v17;
}

uint64_t sub_100218014(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10)
{
  __int16 v166 = 0;
  v165[1] = 0;
  if (byte_100A0B0A0 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot connect to device, pending attempt already in progress.", v10, v11, v12, v13, v14, v15, v16, v159);
      uint64_t v17 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1309;
  }
  if (byte_100A0B0A1 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot connect to device, pending cancel connection already in progress.", v19, v20, v21, v22, v23, v24, v25, v159);
      uint64_t v26 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1319;
  }
  if ((a10 & a9) != 0xFF && byte_100A0B0A2 == 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot connect to device, V2 command not supported.", v45, v46, v47, v48, v49, v50, v51, v159);
      uint64_t v52 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 152;
  }
  v165[0] = 0;
  uint64_t v34 = sub_100241B5C(v165);
  if (!v165[0])
  {
LABEL_19:
    if ((a9 + 16) <= 0xEu)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid advertising handle %x", v37, v38, v39, v40, v41, v42, v43, a9);
      uint64_t v44 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_80;
    }
    if ((char)a10 <= -2)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid subevent %x", v53, v54, v55, v56, v57, v58, v59, a10);
      uint64_t v60 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_80;
    }
    if ((a1 - 16385) <= 0xFFFFC002)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid scan interval %d", v69, v70, v71, v72, v73, v74, v75, a1);
      uint64_t v76 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_80;
    }
    if ((a2 - 16385) <= 0xFFFFC002)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid scan window %d", v77, v78, v79, v80, v81, v82, v83, a2);
      uint64_t v84 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_80;
    }
    if (a5 >= 0x1F5)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid connection latency %d", v85, v86, v87, v88, v89, v90, v91, a5);
      uint64_t v92 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v92, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_80;
    }
    unsigned int v93 = a3;
    if (a4 <= (unsigned __int16)(a3 - 1))
    {
      if (!a3 || a4 != a3 && a4)
      {
        if (!sub_100058654()) {
          return 101;
        }
        sub_100056E24((uint64_t)"Invalid min/max connection interval %d/%d", v112, v113, v114, v115, v116, v117, v118, a3);
        uint64_t v119 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
          return 101;
        }
        goto LABEL_80;
      }
      double v128 = (double)a3 / 1.25;
      unsigned int v94 = (int)v128;
      if (((int)v128 - 6) >= 0xC7B)
      {
        if (!sub_100058654()) {
          return 101;
        }
        sub_100056E24((uint64_t)"Invalid connection interval %dms", v141, v142, v143, v144, v145, v146, v147, a3);
        uint64_t v148 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v148, OS_LOG_TYPE_ERROR)) {
          return 101;
        }
        goto LABEL_80;
      }
      if (v94 < 0xC78)
      {
        if (v94 > 0xE)
        {
          LOWORD(a4) = v94 + 8;
          LOWORD(v94) = v94 - 8;
        }
        else
        {
          LOWORD(a4) = v94 + 16;
        }
      }
      else
      {
        a4 = (int)v128;
        LOWORD(v94) = v94 - 16;
      }
    }
    else
    {
      LOWORD(v94) = a3;
      unsigned int v93 = (a4 + a3) >> 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"overriding min/max connection intervals to %d-%dms (%dms)", v95, v96, v97, v98, v99, v100, v101, a3);
        log = sub_100050B4C(0x42u);
        if (os_log_type_enabled(log, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v102 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v168 = v102;
          _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    unsigned int v103 = (3 * a5 + 3) * (unsigned __int16)a4;
    if (v103 < 0x259)
    {
      if ((a7 - 8) > 0xFFFFFFF8)
      {
        unsigned __int16 loga = v94;
        __int16 v164 = v93;
        if (v103 <= (104858 * ((5 * (unsigned __int16)(int)((double)v93 * 1.25)) & 0x7FFFu)) >> 19) {
          LOWORD(v103) = (unsigned __int16)((104858 * ((5 * (unsigned __int16)(int)((double)v93 * 1.25)) & 0x7FFFu)) >> 16) >> 3;
        }
        if ((unsigned __int16)v103 >= 0x258u) {
          __int16 v129 = 600;
        }
        else {
          __int16 v129 = v103;
        }
        sub_100229724((uint64_t)&dword_100A0B0A3);
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Connecting with interval:%dms-%dms, latency=%d, timeout=%dms, initPHYs=%x connectingAddress=%s:%:, advHandle=%x subevent=%x", v130, v131, v132, v133, v134, v135, v136, ((double)loga * 1.25));
          int v137 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v137, OS_LOG_TYPE_DEFAULT))
          {
            unsigned int v138 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v168 = v138;
            _os_log_impl((void *)&_mh_execute_header, v137, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        *(_WORD *)long long buf = a1;
        *(_WORD *)&buf[2] = a1;
        LOWORD(v168) = a1;
        __int16 v160 = v129;
        if (byte_100A0B0A2)
        {
          unsigned __int8 v139 = a9;
          uint64_t v18 = sub_10019304C(0x100u, v130, v131, v132, v133, v134, v135, v136, a9);
          __int16 v140 = v164;
        }
        else
        {
          __int16 v140 = v164;
          unsigned __int8 v139 = a9;
          if (byte_100A0B0AA) {
            uint64_t v150 = sub_10019304C(0xD9u, v130, v131, v132, v133, v134, v135, v136, 1);
          }
          else {
            uint64_t v150 = sub_10019304C(0xADu, v130, v131, v132, v133, v134, v135, v136, a1);
          }
          uint64_t v18 = v150;
        }
        if (v18)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not start auto-connect : %!", v151, v152, v153, v154, v155, v156, v157, v18);
            uint64_t v158 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v158, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        else
        {
          byte_100A0B0A0 = 1;
          LOBYTE(qword_100A0B0AC) = 0;
          WORD1(qword_100A0B0B4) = a1;
          WORD2(qword_100A0B0B4) = a2;
          HIWORD(qword_100A0B0B4) = v140;
          word_100A0B0BC = a5;
          word_100A0B0BE = v160;
          word_100A0B0C0 = a6;
          byte_100A0B0C2 = a7;
          BYTE1(qword_100A0B0AC) = v139;
          BYTE2(qword_100A0B0AC) = a10;
        }
        return v18;
      }
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Invalid initPHYs %x", v120, v121, v122, v123, v124, v125, v126, a7);
      uint64_t v127 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v127, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
    }
    else
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"Connection latency (%d) and connection interval (%d ms) are in a range taht will cause issues", v104, v105, v106, v107, v108, v109, v110, a5);
      uint64_t v111 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
    }
LABEL_80:
    sub_100744F6C();
    return 101;
  }
  uint64_t v35 = (_DWORD *)v34;
  unint64_t v36 = 0;
  while (!sub_100197B34(v35))
  {
    ++v36;
    uint64_t v35 = (_DWORD *)((char *)v35 + 7);
    if (v36 >= v165[0]) {
      goto LABEL_19;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Already connected to this address.", v61, v62, v63, v64, v65, v66, v67, v159);
    uint64_t v68 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 133;
}

uint64_t sub_100218970()
{
  return byte_100A0B0A0;
}

BOOL sub_10021897C(int a1, int a2)
{
  if (byte_100A0B0A0 != 1) {
    return 0;
  }
  return WORD1(qword_100A0B0B4) == a1 && WORD2(qword_100A0B0B4) == a2;
}

uint64_t sub_1002189B4(uint64_t a1)
{
  if (sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 124) == 7)
    {
      return 0;
    }
    else
    {
      uint64_t v11 = sub_10019304C(5);
      uint64_t v2 = sub_10019F308(a1, v11);
      if (v2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not disconnect LE device %!", v13, v14, v15, v16, v17, v18, v19, v2);
          uint64_t v20 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(unsigned char *)(a1 + 124) = 7;
      }
      sub_100199220(a1, v12);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v3, v4, v5, v6, v7, v8, v9, v22);
      uint64_t v10 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return v2;
}

uint64_t sub_100218AC4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (byte_100A0B0A0)
  {
    if (byte_100A0B0A1 != 1 || (a1 & 1) != 0)
    {
      byte_100A0B0C4 = a1;
      uint64_t v8 = sub_10001BDE0(174, (uint64_t)sub_100218BC0, a3, a4, a5, a6, a7, a8, v18);
      if (v8)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to cancel a connection : %!", v9, v10, v11, v12, v13, v14, v15, v8);
          uint64_t v16 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        byte_100A0B0A1 = 1;
      }
    }
    else
    {
      uint64_t v8 = 0;
      byte_100A0B0C4 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    while (sub_100198EB8(&v19))
    {
      if (*(_DWORD *)(v19 + 132) != 7) {
        return 1302;
      }
    }
    return 1301;
  }
  return v8;
}

void sub_100218BC0(uint64_t a1)
{
  uint64_t v1 = a1;
  int v19 = a1;
  int v2 = byte_100A0B0C4;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"connectionCancelCb lConnectionInProgress %d, lRestartConnectionInProgress %d, lCancelConnectionInProgress %d lCancelConnectionDeferInProgress %d - %!", v3, v4, v5, v6, v7, v8, v9, byte_100A0B0A0);
    uint64_t v10 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 136446210;
      *(void *)((char *)&buf + 4) = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, " %{public}s", (uint8_t *)&buf, 0xCu);
    }
  }
  if (v1 == 712)
  {
    if (byte_100A0B0A1 == 1 && (byte_100A0B0C8 & 1) == 0)
    {
      *((void *)&buf + 1) = &v19;
      *(void *)&long long buf = 4;
      byte_100A0B0C8 = 1;
      sub_1000268E4((uint64_t)sub_10021D2BC, (const void **)&buf, 1, 0);
      return;
    }
    byte_100A0B0A1 = 0;
    byte_100A0B0C8 = 0;
    byte_100A0B0A0 = 0;
    uint64_t v1 = 712;
  }
  else
  {
    byte_100A0B0A1 = 0;
    byte_100A0B0C8 = 0;
    if (v1 == 702)
    {
      if ((byte_100A0B0A0 & 1) == 0) {
        sub_10025B8C0();
      }
      byte_100A0B0A0 = 0;
      if (byte_100A0B0C4)
      {
        if ((_BYTE)qword_100A0B0AC) {
          sub_1002177E8((uint64_t)&qword_100A0B0AC + 3, WORD1(qword_100A0B0B4), WORD2(qword_100A0B0B4), HIWORD(qword_100A0B0B4), (unsigned __int16)word_100A0B0BC, word_100A0B0C0, byte_100A0B0C2, BYTE1(qword_100A0B0AC), BYTE2(qword_100A0B0AC));
        }
        else {
          sub_100218014(WORD1(qword_100A0B0B4), WORD2(qword_100A0B0B4), HIWORD(qword_100A0B0B4), 0, (unsigned __int16)word_100A0B0BC, word_100A0B0C0, byte_100A0B0C2, 0, BYTE1(qword_100A0B0AC), BYTE2(qword_100A0B0AC));
        }
      }
      else if ((_BYTE)qword_100A0B0AC)
      {
        uint64_t v1 = 0;
        LOBYTE(qword_100A0B0AC) = 0;
        goto LABEL_25;
      }
    }
    else
    {
      if (v1)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Unexpected error code %! for connection cancel.", v11, v12, v13, v14, v15, v16, v17, v1);
          uint64_t v18 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        goto LABEL_25;
      }
      if ((byte_100A0B0A0 & 1) == 0) {
        sub_10025B8C0();
      }
    }
    uint64_t v1 = 0;
  }
LABEL_25:
  byte_100A0B0C4 = 0;
  if (!v2) {
    sub_1002252F0(v1);
  }
}

uint64_t sub_100218E4C()
{
  return byte_100A0B0A1;
}

uint64_t sub_100218E58(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 1) == 0 && (byte_100A0B0A0 == 1 ? (BOOL v8 = byte_100A0B0C4 == 0) : (BOOL v8 = 0), v8)) {
    return sub_100218AC4(1, a2, a3, a4, a5, a6, a7, a8);
  }
  else {
    return 0;
  }
}

BOOL sub_100218E88(unsigned int a1)
{
  uint64_t v13 = 0;
  for (BOOL result = sub_100198EB8((uint64_t *)&v13); result; BOOL result = sub_100198EB8((uint64_t *)&v13))
  {
    if (v13[52] > 0x1Bu || v13[54] >= 0x1Cu)
    {
      uint64_t v3 = sub_100218F90(v13, a1);
      if (v3)
      {
        uint64_t v4 = v3;
        if (v3 != 4000)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"ClassicSynchronousConfigChanged LE scaling completed with error %!", v5, v6, v7, v8, v9, v10, v11, v4);
            uint64_t v12 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
              sub_1007498EC(&v14, &v15);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100218F90(unsigned __int16 *a1, unsigned int a2)
{
  unsigned __int16 v153 = a1[54];
  unsigned __int16 v3 = a1[43];
  uint64_t v152 = 0;
  if (sub_1001990B0(&v152))
  {
    char v150 = 0;
    unsigned __int16 v4 = 0;
    do
    {
      unsigned int v5 = *(unsigned __int8 *)(v152 + 60);
      if (*(unsigned char *)(v152 + 60) && !*(unsigned char *)(v152 + 56))
      {
        if (v5 <= 6) {
          __int16 v6 = 2500;
        }
        else {
          __int16 v6 = 625 * v5 - 1250;
        }
        if (v5 <= 0xC)
        {
          if (sub_100058654())
          {
            uint64_t v7 = *a1;
            sub_10018215C();
            sub_100056E24((uint64_t)"LE_ScaleDataLength lmHandle 0x%x SCO found voicelmHandle 0x%x _ceClassicAllowance %d interval %d piconets %d", v8, v9, v10, v11, v12, v13, v14, v7);
            uint64_t v15 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v16 = sub_100050714();
              *(_DWORD *)long long buf = 136446210;
              uint64_t v155 = v16;
              _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
            }
            char v150 = 1;
          }
          else
          {
            char v150 = 1;
          }
        }
        unsigned int v17 = sub_10018215C();
        unsigned __int16 v18 = v6 - 625;
        if (v17 <= 1) {
          unsigned __int16 v18 = v6;
        }
        if (v4 <= v18) {
          unsigned __int16 v4 = v18;
        }
      }
    }
    while (sub_1001990B0(&v152));
  }
  else
  {
    unsigned __int16 v4 = 0;
    char v150 = 0;
  }
  unsigned __int16 v19 = 625 * v3;
  uint64_t v151 = 0;
  char v21 = 0;
  while (sub_100198EB8(&v151))
  {
    if (*(unsigned char *)(v151 + 124) != 7 && *(unsigned char *)(v151 + 128))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_ScaleDataLength lmHandle 0x%x LEA streaming found voicelmHandle 0x%x", v22, v23, v24, v25, v26, v27, v28, *a1);
        int v29 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v30 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v155 = v30;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      char v21 = 1;
    }
  }
  unsigned __int16 v31 = 625 * v3;
  if (v4 < v19) {
    unsigned __int16 v31 = v4;
  }
  if (v4) {
    unsigned __int16 v32 = v31;
  }
  else {
    unsigned __int16 v32 = 625 * v3;
  }
  int v33 = *((_DWORD *)a1 + 36);
  int v34 = *((_DWORD *)a1 + 37);
  if (v34 == 2)
  {
    int v35 = 360;
    char v36 = 2;
  }
  else if (v34 == 3)
  {
    int v35 = 1276;
    char v36 = 6;
  }
  else
  {
    int v35 = 412;
    char v36 = 3;
  }
  unsigned int v37 = a1[54];
  if (v33 == 2)
  {
    int v38 = 60;
    char v39 = 2;
  }
  else if (v33 == 3)
  {
    int v38 = 976;
    char v39 = 6;
  }
  else
  {
    int v38 = 112;
    char v39 = 3;
  }
  if (v35 + v38 + (a1[52] << v36) + (v37 << v39) > v32 || *((unsigned char *)a1 + 265) || *((unsigned char *)a1 + 266))
  {
    if (a1[56] <= v37) {
      unsigned int v40 = a1[54];
    }
    else {
      unsigned int v40 = a1[56];
    }
    LOWORD(v20) = a1[40];
    uint64_t v41 = sub_100219CF0(v40, &v153, v32, (int)((double)v20 * 1.25), 1, v33, v34);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"lmHandle 0x%x CE %d is larger than calculated symmetric pair, do not scale", v78, v79, v80, v81, v82, v83, v84, *a1);
      uint64_t v85 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v86 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v155 = v86;
        _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v41 = a1[52];
    unsigned __int16 v153 = a1[54];
  }
  if (*((unsigned char *)a1 + 70) == 1 && a1[57] == v4 && (v41 > a1[52] || v153 > a1[54]))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Peripheral optimal[tx %d, rx %d] is larger than connection[tx %d, rx %d], scaling down lmHandle 0x%x ", v42, v43, v44, v45, v46, v47, v48, v41);
      uint64_t v49 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v50 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v155 = v50;
        _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (v41 >= a1[52]) {
      LODWORD(v41) = a1[52];
    }
    unsigned __int16 v51 = v153;
    if (v153 >= a1[54]) {
      unsigned __int16 v51 = a1[54];
    }
    unsigned __int16 v153 = v51;
  }
  a1[57] = v4;
  if (word_100A0B0C6)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"EDL: Tx length override to %d", v52, v53, v54, v55, v56, v57, v58, (unsigned __int16)word_100A0B0C6);
      uint64_t v59 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v60 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v155 = v60;
        _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    int v61 = (unsigned __int16)word_100A0B0C6;
    LODWORD(v41) = (unsigned __int16)word_100A0B0C6;
  }
  else
  {
    int v61 = 0;
  }
  int v62 = *((_DWORD *)a1 + 36);
  __int16 v63 = 4 * v41 + 60;
  if (v41 <= 0x42) {
    __int16 v63 = 328;
  }
  if (v41 <= 0x1A) {
    __int16 v64 = 328;
  }
  else {
    __int16 v64 = 8 * v41 + 112;
  }
  if (v62 != 1) {
    __int16 v64 = ((_WORD)v41 << 6) + 976;
  }
  if (v62 == 2) {
    unsigned __int16 v65 = v63;
  }
  else {
    unsigned __int16 v65 = v64;
  }
  if (v21) {
    LOBYTE(v66) = 28;
  }
  else {
    LOBYTE(v66) = byte_1009FAEC8;
  }
  if (v21) {
    unsigned __int8 v67 = 63;
  }
  else {
    unsigned __int8 v67 = byte_1009FAEC9;
  }
  if (v61 || !((v4 != 0) & v150 | v21 & 1) || !*((unsigned char *)a1 + 32)) {
    goto LABEL_115;
  }
  if (v62 == 2)
  {
    unsigned int v87 = 4 * v67 + 60;
    if (v67 <= 0x42u) {
      unsigned int v87 = 328;
    }
    if (v87 >= v65 && v41 <= v67) {
      goto LABEL_115;
    }
    int v148 = v67;
    if (!sub_100058654()
      || (sub_100056E24((uint64_t)"LE_ScaleDataLength Capping Tx with 2M for lmHandle 0x%x ceClassicAllowance %d txTime %d >= %d optimalTxBytes %d Cap txTime and optimalTxBytes rxPhy %d", v89, v90, v91, v92, v93, v94, v95, *a1), uint64_t v77 = sub_100050B4C(0x42u), !os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT)))
    {
LABEL_114:
      char v97 = 1;
      LODWORD(v41) = v148;
      goto LABEL_116;
    }
LABEL_113:
    uint64_t v96 = sub_100050714();
    *(_DWORD *)long long buf = 136446210;
    uint64_t v155 = v96;
    _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    goto LABEL_114;
  }
  if (v62 == 1)
  {
    unsigned int v68 = 8 * v66 + 112;
    if (v66 <= 0x1Au) {
      unsigned int v68 = 328;
    }
    if (v68 < v65 || v41 > v66)
    {
      int v148 = v66;
      if (!sub_100058654()) {
        goto LABEL_114;
      }
      sub_100056E24((uint64_t)"LE_ScaleDataLength Capping Tx with 1M for lmHandle 0x%x ceClassicAllowance %d txTime %d >= %d optimalTxBytes %d Cap txTime and optimalTxBytes rxPhy %d", v70, v71, v72, v73, v74, v75, v76, *a1);
      uint64_t v77 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_114;
      }
      goto LABEL_113;
    }
  }
LABEL_115:
  char v97 = 0;
LABEL_116:
  *((unsigned char *)a1 + 266) = v97;
  int v98 = *((_DWORD *)a1 + 37);
  if (v98 == 2)
  {
    unsigned int v99 = v153;
    unsigned __int16 v100 = 4 * v153 + 60;
    BOOL v101 = v153 > 0x42u;
  }
  else
  {
    if (v98 != 1)
    {
      unsigned int v99 = v153;
      unsigned __int16 v102 = (v153 << 6) + 976;
      goto LABEL_124;
    }
    unsigned int v99 = v153;
    unsigned __int16 v100 = 8 * v153 + 112;
    BOOL v101 = v153 > 0x1Au;
  }
  if (v101) {
    unsigned __int16 v102 = v100;
  }
  else {
    unsigned __int16 v102 = 328;
  }
LABEL_124:
  if (!((v4 != 0) & v150 | v21 & 1) || !*((unsigned char *)a1 + 32)) {
    goto LABEL_142;
  }
  if (v98 != 2)
  {
    if (v98 == 1)
    {
      int v66 = v66;
      unsigned int v103 = v66 <= 0x1Au ? 328 : 8 * v66 + 112;
      if (v103 < v102 || v99 > v66)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_ScaleDataLength Capping Rx with 1M for lmHandle 0x%x ceClassicAllowance %d rxTime %d >= %d optimalRxBytes %d Cap rxTime and optimalRxBytes txPhy %d", v104, v105, v106, v107, v108, v109, v110, *a1);
          uint64_t v111 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v111, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v112 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v155 = v112;
            _os_log_impl((void *)&_mh_execute_header, v111, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        unsigned __int16 v153 = v66;
        char v113 = 1;
        goto LABEL_143;
      }
    }
LABEL_142:
    char v113 = 0;
    int v66 = v99;
    goto LABEL_143;
  }
  int v66 = v67;
  if (v67 <= 0x42u) {
    unsigned int v114 = 328;
  }
  else {
    unsigned int v114 = 4 * v67 + 60;
  }
  if (v114 >= v102 && v99 <= v67) {
    goto LABEL_142;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_ScaleDataLength Capping Rx with 2M for lmHandle 0x%x ceClassicAllowance %d rxTime %d >= %d optimalRxBytes %d Cap rxTime and optimalRxBytes txPhy %d", v138, v139, v140, v141, v142, v143, v144, *a1);
    uint64_t v145 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v146 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v155 = v146;
      _os_log_impl((void *)&_mh_execute_header, v145, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  unsigned __int16 v153 = v67;
  char v113 = 1;
LABEL_143:
  *((unsigned char *)a1 + 265) = v113;
  unsigned int v115 = a1[40];
  unsigned int v116 = 8 * sub_100219FA8(v66, v41, v32, *((_DWORD *)a1 + 36), *((_DWORD *)a1 + 37));
  if (v116) {
    unsigned int v116 = v116 * (0x3E8u / (int)((double)v115 * 1.25)) / 0x3E8;
  }
  *((_DWORD *)a1 + 53) = v116;
  *((_DWORD *)a1 + 54) = sub_100219FA8(v153, v41, v19, *((_DWORD *)a1 + 36), *((_DWORD *)a1 + 37));
  sub_1000E5010((uint64_t)a1);
  if (v41 == a1[52] && v153 == a1[54])
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Tx length is already at best-fit, exiting", v117, v118, v119, v120, v121, v122, v123, v147);
      uint64_t v124 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v124, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v125 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v155 = v125;
        _os_log_impl((void *)&_mh_execute_header, v124, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v126 = 4000;
  }
  else
  {
    uint64_t v126 = sub_1001F9008((uint64_t)a1);
  }
  if (sub_100058654())
  {
    if (a2 > 7) {
      uint64_t v127 = "UNKNOWN";
    }
    else {
      uint64_t v127 = off_10099F168[a2];
    }
    sub_10018215C();
    sub_100056E24((uint64_t)"Reason %s Selected %d with optimal [tx %d, rx %d], all-time rx %d,  CE %d, calc-CE %d, tput %d, classic-alw [%d -> %d], probe: %s, piconets %d, status %!. Current: tx[%d, %d] rx[%d, %d] lmHandle 0x%x ", v128, v129, v130, v131, v132, v133, v134, (uint64_t)v127);
    uint64_t v135 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v135, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v136 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v155 = v136;
      _os_log_impl((void *)&_mh_execute_header, v135, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v126;
}

void sub_100219B7C(unsigned __int16 *a1, uint64_t a2)
{
  if ((a2 - 5) >= 3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_LEAConfigChanged Unexpected reason %d", v15, v16, v17, v18, v19, v20, v21, a2);
      uint64_t v22 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    uint64_t v23 = 0;
    while (sub_100198EB8((uint64_t *)&v23))
    {
      if ((v23[52] > 0x1Bu || v23[54] >= 0x1Cu) && v23 != a1 && *((unsigned char *)v23 + 127) == 0)
      {
        uint64_t v5 = sub_100218F90(v23, a2);
        if (v5)
        {
          uint64_t v6 = v5;
          if (v5 != 4000)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"LE_LEAConfigChanged LE scaling completed with error %!", v7, v8, v9, v10, v11, v12, v13, v6);
              uint64_t v14 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
                sub_1007498EC(&v24, &v25);
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100219CF0(unsigned int a1, unsigned __int16 *a2, unsigned int a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  if (sub_100058654())
  {
    uint64_t v17 = "dynamic";
    if (a5) {
      uint64_t v17 = "static";
    }
    sub_100056E24((uint64_t)"Finding bestfit for %s-rx %d, ce %d, interval %d", v10, v11, v12, v13, v14, v15, v16, (uint64_t)v17);
    uint64_t v18 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v44 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  unsigned int v19 = 0;
  unsigned __int16 v20 = 251;
  int v21 = 23;
  unsigned __int16 v22 = a1;
  unsigned __int16 v23 = 251;
  do
  {
    if (v23 >= a1) {
      unsigned __int16 v24 = a1;
    }
    else {
      unsigned __int16 v24 = v23;
    }
    uint64_t v25 = a5;
    if (a5) {
      unsigned __int16 v26 = v24;
    }
    else {
      unsigned __int16 v26 = v23;
    }
    unsigned int v27 = 8 * sub_100219FA8(v26, v23, a3, a6, a7);
    if (v27) {
      unsigned int v27 = v27 * (0x3E8 / a4) / 0x3E8;
    }
    if (v27 > v19)
    {
      unsigned int v19 = v27;
      unsigned __int16 v20 = v23;
      unsigned __int16 v22 = v26;
    }
    if (v23 == 251) {
      unsigned __int16 v23 = 240;
    }
    else {
      v23 -= 10;
    }
    --v21;
    a5 = v25;
  }
  while (v21);
  if (a2) {
    *a2 = v22;
  }
  if (a1 >= v22) {
    char v28 = v25;
  }
  else {
    char v28 = 0;
  }
  if ((v28 & 1) == 0 && v25) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Optimal length is [tx %d, rx %d] yielding %d kbps", v29, v30, v31, v32, v33, v34, v35, v20);
    char v36 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v37 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v44 = v37;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v20;
}

unint64_t sub_100219F44(int a1, int a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  int v7 = 8 * sub_100219FA8(a1, a2, a3, a5, a6);
  if (v7) {
    return v7 * (0x3E8 / a4) / 0x3E8uLL;
  }
  else {
    return 0;
  }
}

uint64_t sub_100219F9C(uint64_t result)
{
  word_100A0B0C6 = result;
  return result;
}

uint64_t sub_100219FA8(int a1, int a2, unsigned int a3, int a4, int a5)
{
  if (a5 == 3) {
    char v5 = 6;
  }
  else {
    char v5 = 3;
  }
  if (a5 == 3) {
    int v6 = 976;
  }
  else {
    int v6 = 112;
  }
  if (a5 == 2)
  {
    char v5 = 2;
    int v7 = 60;
  }
  else
  {
    int v7 = v6;
  }
  int v8 = (a2 << v5) + v7;
  if (a4 == 3) {
    int v9 = 720;
  }
  else {
    int v9 = 80;
  }
  if (a4 == 3) {
    char v10 = 6;
  }
  else {
    char v10 = 3;
  }
  if (a4 == 3) {
    int v11 = 976;
  }
  else {
    int v11 = 112;
  }
  if (a4 == 2) {
    int v12 = 44;
  }
  else {
    int v12 = v9;
  }
  if (a4 == 2)
  {
    char v10 = 2;
    int v13 = 60;
  }
  else
  {
    int v13 = v11;
  }
  if (v8 + (a1 << v10) + v13 + 300 <= a3)
  {
    if (a2 == 27 && a1 == 27) {
      unsigned int v24 = v8 + (a1 << v10) + v13 + 300;
    }
    else {
      unsigned int v24 = v8 + v12 + 300;
    }
    return a3 / v24 * a2;
  }
  else
  {
    if (!sub_100058654()) {
      return 27;
    }
    uint64_t v21 = 27;
    sub_100056E24((uint64_t)"CE length is smaller than one pair of max Tx/Rx. BytesPerInterval %d: # pkts %d, asym %d us, sym %d us, totalTime %d, remainder %d. Input: tx %d, ce %d", v14, v15, v16, v17, v18, v19, v20, 27);
    unsigned __int16 v22 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      unsigned int v27 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      return 27;
    }
  }
  return v21;
}

void sub_10021A13C(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_setTxDataLengthExtendedCB %!", v2, v3, v4, v5, v6, v7, v8, a1);
    int v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v19 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"Set data length extended error status %!", v10, v11, v12, v13, v14, v15, v16, a1);
    uint64_t v17 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

uint64_t sub_10021A248(uint64_t a1, uint64_t a2, int a3, unsigned int a4, int a5, int a6, int a7, int a8, unsigned __int16 a9)
{
  if (a1 && sub_100197770(a1))
  {
    if (a3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"new connection parameters interval %dms-%dms, timeout=%dms, CE %d-%d latency=%d", v22, v23, v24, v25, v26, v27, v28, (int)((double)a4 * 1.25));
        uint64_t v29 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136446210;
          uint64_t v69 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (sub_100058654())
      {
        LOWORD(v37) = *(_WORD *)(a1 + 90);
        sub_100056E24((uint64_t)"current connection params interval %dms-%dms, timeout=%dms, CE %d-%d latency=%d", v30, v31, v32, v33, v34, v35, v36, (int)((double)v37 * 1.25));
        int v38 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          char v39 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v69 = v39;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (*(unsigned __int16 *)(a1 + 88) == a8
        && *(unsigned __int16 *)(a1 + 86) == a9
        && *(unsigned __int16 *)(a1 + 92) == a5
        && *(unsigned __int16 *)(a1 + 90) == a4
        && *(unsigned __int16 *)(a1 + 84) == a7
        && *(unsigned __int16 *)(a1 + 82) == a6)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Ignoring request to update parameters since we are already configured for the same values", v40, v41, v42, v43, v44, v45, v46, v67);
          uint64_t v47 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v48 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v69 = v48;
            _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        return 4170;
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Sending parameters to controller", v58, v59, v60, v61, v62, v63, v64, v67);
          unsigned __int16 v65 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
          {
            int v66 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v69 = v66;
            _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t result = sub_10001BDE0(192, (uint64_t)sub_10021A630, v59, v60, v61, v62, v63, v64, a1);
        if (!result)
        {
          if (*(unsigned __int16 *)(a1 + 86) != a9) {
            *(_WORD *)(a1 + 96) = a9;
          }
          uint64_t result = 0;
          *(_WORD *)(a1 + 98) = a8;
          *(_WORD *)(a1 + 100) = a5;
          *(_WORD *)(a1 + 102) = a4;
          *(unsigned char *)(a1 + 153) = 1;
        }
      }
    }
    else
    {
      return sub_10001BDE0(193, (uint64_t)sub_10021A6A4, v16, v17, v18, v19, v20, v21, a1);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection handle is invalid.", v50, v51, v52, v53, v54, v55, v56, v67);
      uint64_t v57 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return result;
}

void sub_10021A630(uint64_t a1)
{
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"LE Remote Connection Parameter Request Reply HCI command failed with result %!", v2, v3, v4, v5, v6, v7, v8, a1);
    int v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10021A6A4(uint64_t a1)
{
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"LE Remote Connection Parameter Request Negative Reply HCI command failed with result %!", v2, v3, v4, v5, v6, v7, v8, a1);
    int v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

uint64_t sub_10021A718(uint64_t a1, unsigned int a2, unsigned int a3, int a4, int a5, int a6, int a7)
{
  if (a1 && sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 70) == 1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't send a connection update as a peripheral.", v14, v15, v16, v17, v18, v19, v20, v85);
        uint64_t v21 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 132;
    }
    else if (a2 <= a3 && 10 * a5 >= a3)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"new connection parameters interval %dms-%dms, timeout=%dms, CE %d-%d latency=%d", v39, v40, v41, v42, v43, v44, v45, (int)((double)a2 * 1.25));
        uint64_t v46 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136446210;
          unsigned int v87 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (sub_100058654())
      {
        LOWORD(v54) = *(_WORD *)(a1 + 90);
        sub_100056E24((uint64_t)"current connection params interval %dms-%dms, timeout=%dms, CE %d-%d latency=%d connectionInterval:%dms", v47, v48, v49, v50, v51, v52, v53, (int)((double)v54 * 1.25));
        uint64_t v55 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v56 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          unsigned int v87 = v56;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (*(unsigned char *)(a1 + 153))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Controller connection update pending, saving: interval %dms-%dms, timeout=%dms, CE %d-%d", v57, v58, v59, v60, v61, v62, v63, (int)((double)a2 * 1.25));
          uint64_t v64 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
          {
            unsigned __int16 v65 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            unsigned int v87 = v65;
            _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t result = 0;
        *(_WORD *)(a1 + 154) = a2;
        *(_WORD *)(a1 + 156) = a3;
        *(_WORD *)(a1 + 158) = a4;
        *(_WORD *)(a1 + 160) = a5;
        *(_WORD *)(a1 + 162) = a6;
        *(_WORD *)(a1 + 164) = a7;
      }
      else if (*(unsigned __int16 *)(a1 + 88) == a6 {
             && *(unsigned __int16 *)(a1 + 86) == a7
      }
             && (*(unsigned __int16 *)(a1 + 92) == a3 && *(unsigned __int16 *)(a1 + 90) == a2
              || (unsigned int v66 = *(unsigned __int16 *)(a1 + 80), v66 >= a2) && v66 <= a3)
             && *(unsigned __int16 *)(a1 + 84) == a5
             && *(unsigned __int16 *)(a1 + 82) == a4)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Ignoring request to update parameters since we are already configured for the same values, and current CI is within range", v67, v68, v69, v70, v71, v72, v73, v85);
          uint64_t v74 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v75 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            unsigned int v87 = v75;
            _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        return 4170;
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Sending parameters to controller", v76, v77, v78, v79, v80, v81, v82, v85);
          uint64_t v83 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v84 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            unsigned int v87 = v84;
            _os_log_impl((void *)&_mh_execute_header, v83, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        if (*(unsigned __int16 *)(a1 + 86) != a7) {
          *(_WORD *)(a1 + 96) = a7;
        }
        *(_WORD *)(a1 + 98) = a6;
        *(_WORD *)(a1 + 100) = a3;
        *(_WORD *)(a1 + 102) = a2;
        uint64_t result = sub_10019304C(0xB3u, v76, v77, v78, v79, v80, v81, v82, a1);
        if (!result) {
          *(unsigned char *)(a1 + 153) = 1;
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Max interval should not be lower than min or larger than timeout", v31, v32, v33, v34, v35, v36, v37, v85);
        int v38 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 101;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection handle is invalid.", v23, v24, v25, v26, v27, v28, v29, v85);
      uint64_t v30 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return result;
}

uint64_t sub_10021AC58(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6)
{
  if (a1 && sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 290))
    {
      uint64_t result = 718;
      if (a2 - 501 >= 0xFFFFFE0C
        && a3 - 501 >= 0xFFFFFE0C
        && a2 <= a3
        && a4 <= 0x1F3
        && a5 <= 0x1F3
        && a5 <= a3
        && (a6 - 3201) >= 0xFFFFF389)
      {
        uint64_t result = sub_10019304C(0xFBu, v12, v13, v14, v15, v16, v17, v18, a1);
        if (!result) {
          *(unsigned char *)(a1 + 153) = 1;
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Remote device does not support connection subrating.", v28, v29, v30, v31, v32, v33, v34, v36);
        uint64_t v35 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 1330;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection handle is invalid", v20, v21, v22, v23, v24, v25, v26, v36);
      uint64_t v27 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return result;
}

uint64_t sub_10021ADB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10019304C(0x17u, a2, a3, a4, a5, a6, a7, a8, a1);
}

uint64_t sub_10021ADDC()
{
  return sub_10019304C(182);
}

uint64_t sub_10021AE04(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_100197864(a2);
  *((_WORD *)v10 + 141) = a3;
  *((_WORD *)v10 + 142) = a4;
  *((_WORD *)v10 + 143) = a5;
  *((_WORD *)v10 + 144) = a6;

  return sub_1002253F8((uint64_t)v10, a3, a4, a5, a6);
}

void sub_10021B680(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = sub_100197864(a2);
  if (v9)
  {
    uint64_t v10 = (uint64_t)v9;
    *((_WORD *)v9 + 40) = a3;
    *((_WORD *)v9 + 41) = a4;
    *((_WORD *)v9 + 42) = a5;
    *((unsigned char *)v9 + 153) = 0;
    uint64_t v11 = sub_1000262CC(a1);
    if (v11)
    {
      uint64_t v12 = v11;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Connection Update Completed with error %!", v13, v14, v15, v16, v17, v18, v19, v12);
        uint64_t v20 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      if ((v12 - 708) > 0x36 || ((1 << (v12 + 60)) & 0x40000004004801) == 0) {
        sub_10025B8C0();
      }
    }
    else
    {
      __int16 v29 = *(_WORD *)(v10 + 96);
      if (v29)
      {
        *(_WORD *)(v10 + 86) = v29;
        *(_WORD *)(v10 + 96) = 0;
        unsigned int v30 = *(unsigned __int16 *)(v10 + 104);
        if (v30 <= 0x1B && (unsigned int v31 = *(unsigned __int16 *)(v10 + 108), v31 < 0x1C))
        {
          unsigned int v42 = *(unsigned __int16 *)(v10 + 80);
          unsigned int v43 = 8
              * sub_100219FA8(v31, v30, (unsigned __int16)(625 * v29), *(_DWORD *)(v10 + 144), *(_DWORD *)(v10 + 148));
          if (v43) {
            unsigned int v43 = v43 * (0x3E8u / (int)((double)v42 * 1.25)) / 0x3E8;
          }
          *(_DWORD *)(v10 + 212) = v43;
          *(_DWORD *)(v10 + 216) = sub_100219FA8(*(unsigned __int16 *)(v10 + 108), *(unsigned __int16 *)(v10 + 104), (unsigned __int16)(625 * *(_WORD *)(v10 + 86)), *(_DWORD *)(v10 + 144), *(_DWORD *)(v10 + 148));
        }
        else
        {
          uint64_t v32 = sub_100218F90((unsigned __int16 *)v10, 2u);
          if (v32)
          {
            uint64_t v33 = v32;
            if (v32 != 4000)
            {
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Connection Update Completed with error %!", v34, v35, v36, v37, v38, v39, v40, v33);
                uint64_t v41 = sub_100050B4C(0x42u);
                if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
                  sub_100745764();
                }
              }
            }
          }
        }
      }
      if (*(_WORD *)(v10 + 98))
      {
        *(_WORD *)(v10 + 88) = *(_WORD *)(v10 + 98);
        *(_WORD *)(v10 + 98) = 0;
      }
      if (*(_WORD *)(v10 + 100))
      {
        *(_WORD *)(v10 + 92) = *(_WORD *)(v10 + 100);
        *(_WORD *)(v10 + 100) = 0;
      }
      if (*(_WORD *)(v10 + 102))
      {
        *(_WORD *)(v10 + 90) = *(_WORD *)(v10 + 102);
        *(_WORD *)(v10 + 102) = 0;
      }
    }
    if (*(_WORD *)(v10 + 160))
    {
      sub_10021A718(v10, *(unsigned __int16 *)(v10 + 154), *(unsigned __int16 *)(v10 + 156), *(unsigned __int16 *)(v10 + 158), *(unsigned __int16 *)(v10 + 160), *(unsigned __int16 *)(v10 + 162), *(unsigned __int16 *)(v10 + 164));
      if (a1 && sub_100058654())
      {
        sub_100056E24((uint64_t)"Error executing pending connection update with %!", v44, v45, v46, v47, v48, v49, v50, a1);
        uint64_t v51 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      *(_DWORD *)(v10 + 162) = 0;
      *(void *)(v10 + 154) = 0;
    }
    sub_10022535C(v10, a3, a4, a5, *(unsigned __int16 *)(v10 + 86));
    sub_100199220(v10, v52);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"We are not tracking this LM handle...", v21, v22, v23, v24, v25, v26, v27, v53);
    uint64_t v28 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10021B970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    if (!sub_100197770(a2)) {
      sub_10025B8C0();
    }
    int v9 = *(_DWORD *)(a2 + 204);
    sub_100116838(*(_WORD *)a2 & 0xFFF);
    sub_1001DED74(a2, a3);
    sub_100225140(a2, a3, a4, a5);
    if (v9 && !*(_DWORD *)(a2 + 204)) {
      sub_1001984E0((unsigned __int16 *)a2);
    }
    sub_100109728(a2);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"OI_HCIEventHandler_DisconnectionComplete no connection handle: reason %! ignoring", v10, v11, v12, v13, v14, v15, v16, a3);
    uint64_t v17 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10021BA7C(uint64_t a1, unsigned int a2, void *a3)
{
  uint64_t v6 = sub_100197864(a2);
  uint64_t v7 = (uint64_t)v6;
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Remote used features error: %!", v8, v9, v10, v11, v12, v13, v14, a1);
      uint64_t v15 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
LABEL_9:
    sub_10022572C(a1, v7, (char *)(v7 + 170));
    return;
  }
  if (a3)
  {
    if (v6) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_10025B8C0();
    if (v7)
    {
LABEL_7:
      *(void *)(v7 + 170) = *a3;
      if (sub_1001F7D74() == 11) {
        *(unsigned char *)(v7 + 170) &= ~0x20u;
      }
      goto LABEL_9;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invaid LM handle %x from LE_RemoteUsedFeatures", v16, v17, v18, v19, v20, v21, v22, a2);
    uint64_t v23 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

uint64_t sub_10021BB90(uint64_t a1, uint64_t a2)
{
  if (!a1 || !sub_100197770(a1)) {
    return 149;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Setting Connection Data Length to Tx %d bytes and %d us", v4, v5, v6, v7, v8, v9, v10, a2);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v23 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v12 = sub_10001BDE0(194, (uint64_t)sub_10021BCEC, v5, v6, v7, v8, v9, v10, a1);
  if (v12)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Set Data Length failed with status %!", v13, v14, v15, v16, v17, v18, v19, v12);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v12;
}

void sub_10021BCEC(uint64_t a1, unsigned __int16 *a2)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Write data length complete with %!, triggering changed", v4, v5, v6, v7, v8, v9, v10, a1);
      uint64_t v11 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    sub_10021BEC0(*a2, a2[52], a2[53], a2[54], a2[55]);
  }
}

void sub_10021BD7C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (a3 && !*(unsigned char *)(a1 + 152))
  {
    int v13 = 4;
    goto LABEL_13;
  }
  if (!a2) {
    return;
  }
  if (*(_DWORD *)(a1 + 136) != 1)
  {
    int v13 = 3;
LABEL_13:
    *(_DWORD *)(a1 + 132) = v13;
    return;
  }
  if (*(unsigned char *)(a1 + 125) && *(unsigned char *)(a1 + 316))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"FastLEConnection:pendingAuth and fastLEConnectEnabled, waiting for encryption started", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)v14);
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v14 = 136446210;
        *(void *)&v14[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", v14, 0xCu);
      }
    }
    int v13 = 5;
    goto LABEL_13;
  }

  sub_100223E64(a1, a4);
}

void sub_10021BEC0(unsigned int a1, int a2, int a3, unsigned int a4, int a5)
{
  uint64_t v10 = sub_100197864(a1);
  if (v10)
  {
    uint64_t v11 = (uint64_t)v10;
    if (sub_100197770((uint64_t)v10))
    {
      unsigned int v12 = *(unsigned __int16 *)(v11 + 112);
      if (v12 <= a4) {
        LOWORD(v12) = a4;
      }
      *(_WORD *)(v11 + 112) = v12;
      if (sub_100058654())
      {
        uint64_t v20 = "peripheral";
        if (!*(unsigned char *)(v11 + 70)) {
          uint64_t v20 = "central";
        }
        sub_100056E24((uint64_t)"Data Length Changed for %s lmhandle %x: Tx [%d -> %d, %d], Rx [%d -> %d, %d], ready-state: %s, mfgrName 0x%x, probe: %s, phy-ready %d", v13, v14, v15, v16, v17, v18, v19, (uint64_t)v20);
        uint64_t v21 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136446210;
          unsigned int v42 = sub_100050714();
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      if (*(unsigned __int16 *)(v11 + 104) != a2
        || *(unsigned __int16 *)(v11 + 106) != a3
        || *(unsigned __int16 *)(v11 + 108) != a4
        || *(unsigned __int16 *)(v11 + 110) != a5)
      {
        *(_WORD *)(v11 + 104) = a2;
        *(_WORD *)(v11 + 106) = a3;
        *(_WORD *)(v11 + 108) = a4;
        *(_WORD *)(v11 + 110) = a5;
        uint64_t v22 = sub_100218F90((unsigned __int16 *)v11, 3u);
        uint64_t v23 = v22;
        if (!v22)
        {
LABEL_25:
          if (*(_DWORD *)(v11 + 132) == 3 && *(_DWORD *)(v11 + 136) == 1)
          {
            if sub_10017E6E4() && (*(unsigned char *)(v11 + 171)) {
              int v40 = sub_10018F604() ^ 1;
            }
            else {
              int v40 = 0;
            }
            if (v40 | *(unsigned __int8 *)(v11 + 316)) {
              sub_10021BD7C(v11, 1, 1, v23);
            }
            else {
              sub_100223E64(v11, v23);
            }
          }
          return;
        }
        if (v22 != 4000)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Scaling Data Length completed with error %!", v32, v33, v34, v35, v36, v37, v38, v23);
            uint64_t v39 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
              sub_100745764();
            }
          }
          goto LABEL_25;
        }
      }
      if (!*(_DWORD *)(v11 + 136)) {
        sub_10021C1B4(v11);
      }
      uint64_t v23 = 0;
      goto LABEL_25;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid LM handle %x", v24, v25, v26, v27, v28, v29, v30, a1);
    unsigned int v31 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10021C1B4(uint64_t a1)
{
  if (sub_100058654())
  {
    int v9 = *(_DWORD *)(a1 + 136);
    uint64_t v10 = "unknown";
    if (v9 == 1) {
      uint64_t v10 = "complete";
    }
    if (v9) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = "idle";
    }
    sub_100056E24((uint64_t)"Updating Probe-State: %s -> %s", v2, v3, v4, v5, v6, v7, v8, (uint64_t)v11);
    unsigned int v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v14 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  *(_DWORD *)(a1 + 136) = 1;
}

void sub_10021C2AC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v5 = a3;
  if ((a3 - 1) >= 3) {
    sub_10025B8C0();
  }
  if ((a4 - 1) >= 3) {
    sub_10025B8C0();
  }
  if (a2)
  {
    *(unsigned char *)(a2 + 152) = 1;
    if (a1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Phy update returned status %! and lmhandle 0x%4x", v8, v9, v10, v11, v12, v13, v14, a1);
        uint64_t v15 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
      if (a1 == 42 || a1 == 35)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Transaction collision occured, default to 1M PHY and continue as success", v16, v17, v18, v19, v20, v21, v22, v61);
          uint64_t v23 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 136446210;
            uint64_t v63 = sub_100050714();
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        a1 = 0;
      }
      int v5 = 1;
      a4 = 1;
    }
    if ((*(unsigned char *)(a2 + 170) & 0x20) != 0) {
      int v24 = sub_10017E6D4();
    }
    else {
      int v24 = 0;
    }
    *(_DWORD *)(a2 + 144) = a4;
    *(_DWORD *)(a2 + 148) = v5;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"PhyUpdateComplete: status %!, lmhandle 0x%4x, txPhy 0x%4x, rxPhy 0x%4x, readystate %s", v33, v34, v35, v36, v37, v38, v39, a1);
      int v40 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v41 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v63 = v41;
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (*(_DWORD *)(a2 + 132) == 4)
    {
      uint64_t v42 = sub_100218F90((unsigned __int16 *)a2, 4u);
      if (v42
        && (uint64_t v43 = v42, v42 != 4000)
        && sub_100058654()
        && (sub_100056E24((uint64_t)"PhyUpdateComplete LE scaling completed with error %!", v44, v45, v46, v47, v48, v49, v50, v43), uint64_t v51 = sub_100050B4C(0x42u), os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)))
      {
        sub_100745764();
        if (v24) {
          goto LABEL_32;
        }
      }
      else if (v24)
      {
LABEL_32:
        sub_10021BD7C(a2, 1, 1, a1);
        return;
      }
      if (*(unsigned char *)(a2 + 125) && *(unsigned char *)(a2 + 316))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"FastLEConnection:pendingAuth and fastLEConnectEnabled, waiting for encryption started", v52, v53, v54, v55, v56, v57, v58, v61);
          uint64_t v59 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v60 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v63 = v60;
            _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        *(_DWORD *)(a2 + 132) = 5;
      }
      else
      {
        sub_100223E64(a2, a1);
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Connection handle invalid for phy update %p, status %!", v25, v26, v27, v28, v29, v30, v31, 0);
    uint64_t v32 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

__n128 sub_10021C63C(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[3];
  v5[2] = a2[2];
  v5[3] = v2;
  v5[4] = a2[4];
  long long v3 = a2[1];
  v5[0] = *a2;
  v5[1] = v3;
  sub_10022AB1C(a1, (unsigned __int16 **)v5);
  return result;
}

void sub_10021C6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v10 = a4;
    uint64_t v11 = (unint64_t *)a5;
    do
    {
      *(int *)((char *)v14 + 3) = 0;
      v14[0] = 0;
      unint64_t v12 = *v11++;
      uint64_t v13 = sub_1002284B8(v12);
      v14[0] = v13;
      BYTE2(v14[1]) = BYTE6(v13);
      LOWORD(v14[1]) = WORD2(v13);
      sub_100241B74(v14);
      --v10;
    }
    while (v10);
    if ((byte_100A0B0A0 & 1) == 0) {
      byte_100A0B0A0 = 1;
    }
  }
  sub_10022AFC8(a1, a2, a3, a4, a5);
}

void sub_10021C760(uint64_t a1, uint64_t a2, unsigned int a3, __int16 a4, __int16 a5)
{
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_ReadRemoteVersionInformationComplete with error %!", v10, v11, v12, v13, v14, v15, v16, a1);
      uint64_t v17 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    if (!sub_100197770(a2)) {
      sub_10025B8C0();
    }
    *(unsigned char *)(a2 + 24) = a3;
    *(_WORD *)(a2 + 20) = a4;
    *(_WORD *)(a2 + 22) = a5;
  }
  sub_100225494(a1, a2, a3);
}

BOOL sub_10021C824(unsigned __int16 *a1, int a2, int a3, int a4)
{
  BOOL result = sub_100197770((uint64_t)a1);
  if (result) {
    return a1[40] == a2 && a1[44] == a3 && a1[43] == a4;
  }
  return result;
}

uint64_t sub_10021C88C(_WORD *a1, _WORD *a2, _WORD *a3, _WORD *a4, _WORD *a5, _WORD *a6, _WORD *a7, _WORD *a8)
{
  if (!sub_100197770((uint64_t)a1)) {
    return 101;
  }
  if (a2) {
    *a2 = a1[40];
  }
  if (a3) {
    *a3 = a1[41];
  }
  if (a4) {
    *a4 = a1[44];
  }
  if (a5) {
    *a5 = a1[43];
  }
  if (a6) {
    *a6 = a1[42];
  }
  if (a7) {
    *a7 = a1[45];
  }
  uint64_t result = 0;
  if (a8) {
    *a8 = a1[46];
  }
  return result;
}

uint64_t sub_10021C948()
{
  int v0 = (unsigned __int16)word_1009FAECA;
  uint64_t result = (unsigned __int16)word_1009FAECA;
  if (word_1009FAECA != word_1009FAECE)
  {
    sub_10025B8C0();
    uint64_t result = (unsigned __int16)word_1009FAECA;
    int v0 = (unsigned __int16)word_1009FAECE;
  }
  if (result) {
    BOOL v2 = v0 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2)
  {
    sub_10025B8C0();
    return (unsigned __int16)word_1009FAECA;
  }
  return result;
}

uint64_t sub_10021C9A0(int a1, int a2, unsigned int a3, int a4)
{
  if (sub_1001F7D74() == 11)
  {
    word_1009FAECA = 27;
    word_1009FAECC = 328;
    word_1009FAECE = 27;
    word_1009FAED0 = 328;
  }
  if (sub_100058654())
  {
    uint64_t v15 = (BYTE4(xmmword_100A195E0) & 0x20) != 0 ? "supported" : "not supported";
    sub_100056E24((uint64_t)"Local EDL %s; TxOctets %d, TxTime %d, RxOctets %d, RxTime %d\n",
      v8,
      v9,
      v10,
      v11,
      v12,
      v13,
      v14,
      (uint64_t)v15);
    uint64_t v16 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v35 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1 != a3) {
    sub_10025B8C0();
  }
  if ((a1 - 27) >= 0xE1) {
    sub_10025B8C0();
  }
  if (a2 != a4) {
    sub_10025B8C0();
  }
  word_1009FAECA = a1;
  word_1009FAECC = a2;
  word_1009FAECE = a3;
  word_1009FAED0 = a4;
  if ((BYTE4(xmmword_100A195E0) & 0x20) == 0) {
    return 0;
  }
  unsigned int v18 = sub_100219CF0(a3, 0, 0x1D4Cu, 0x1Eu, 0, 1, 1);
  word_1009FAED2 = v18;
  uint64_t v17 = sub_10001BDE0(196, (uint64_t)sub_10021CBEC, v19, v20, v21, v22, v23, v24, v18);
  if (v17)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Write Suggested default failed with %!", v25, v26, v27, v28, v29, v30, v31, v17);
      uint64_t v32 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v17;
}

void sub_10021CBEC(uint64_t a1)
{
  if (a1 && sub_100058654())
  {
    sub_100056E24((uint64_t)"Write Suggested default failed with %!", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

uint64_t sub_10021CC60(uint64_t result)
{
  byte_100A0B0AA = result;
  return result;
}

uint64_t sub_10021CC6C(uint64_t result)
{
  byte_100A0B0A2 = result;
  return result;
}

uint64_t sub_10021CC78(uint64_t a1, uint64_t a2)
{
  if (!a1 || !sub_100197770(a1)) {
    return 149;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Set PHY allPhys=%x txPhys=%x rxPhys=%x phyOptions=%x", v4, v5, v6, v7, v8, v9, v10, a2);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v23 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v12 = sub_10019304C(0xC8u, v4, v5, v6, v7, v8, v9, v10, a1);
  if (v12)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Set PHY failed with status %!", v13, v14, v15, v16, v17, v18, v19, v12);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v12;
}

uint64_t sub_10021CDE4()
{
  sub_10025B778("LE_Connection:\n");
  sub_10025B778("lConnectionInProgress:%x lCancelConnectionInProgress:%x lRestartConnectionInProgress:%x\n", byte_100A0B0A0, byte_100A0B0A1, byte_100A0B0C4);
  if ((_BYTE)dword_100A0B0A3) {
    int v0 = "Random";
  }
  else {
    int v0 = "Public";
  }
  sub_10025B778("gLocalConnectableAddress.Type:%s gLocalConnectableAddress.address:%:", v0, (char *)&dword_100A0B0A3 + 1);
  sub_10025B778("ConnectionInProgressStruct: directed: address:%: scanInterval:%x scanWin:%x connectionInt:%x ConnectionLatency:%x supervisionTO:%x CELen:%x initPHYs:%x advHandle:%x subevent:%x\n", qword_100A0B0AC, (char *)&qword_100A0B0AC + 4, WORD1(qword_100A0B0B4), WORD2(qword_100A0B0B4), HIWORD(qword_100A0B0B4), (unsigned __int16)word_100A0B0BC, (unsigned __int16)word_100A0B0BE, (unsigned __int16)word_100A0B0C0, byte_100A0B0C2, BYTE1(qword_100A0B0AC), BYTE2(qword_100A0B0AC));
  sub_10025B778("Local EDL support: maxTxOctets %d, maxTxTime %d, maxRxOctets %d, maxRxTime %d\n\n", (unsigned __int16)word_1009FAECA, (unsigned __int16)word_1009FAECC, (unsigned __int16)word_1009FAECE, (unsigned __int16)word_1009FAED0);
  sub_10025B778("gEnableExtendedCreateConnectionCommand:%d", byte_100A0B0AA);
  return sub_10025B778("gEnableExtendedCreateConnectionCommandV2:%d", byte_100A0B0A2);
}

void sub_10021CF28(int a1, int a2)
{
  if (a1)
  {
    char v3 = a1;
    sub_10025B778("LE_SetCappedLength for 1M: %d -> %d", byte_1009FAEC8, a1);
    byte_1009FAEC8 = v3;
  }
  if (a2)
  {
    sub_10025B778("LE_SetCappedLength for 2M: %d -> %d", byte_1009FAEC9, a2);
    byte_1009FAEC9 = a2;
  }
}

uint64_t sub_10021CFA4(char a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result = 0;
  for (char i = 1; ; char i = 0)
  {
    char v7 = i;
    uint64_t v8 = (char *)&unk_100A0B0D0 + 32 * result;
    if (!v8[2]) {
      break;
    }
    uint64_t v9 = *((void *)v8 + 1);
    if (!v9) {
      break;
    }
    if (v9 == a2) {
      return result;
    }
    uint64_t result = 1;
    if ((v7 & 1) == 0) {
      return 0xFFFFFFFFLL;
    }
  }
  v8[2] = 1;
  *((void *)v8 + 1) = a2;
  *((void *)v8 + 2) = a3;
  v8[1] = a1;
  *((_DWORD *)v8 + 6) = a4;
  return result;
}

uint64_t sub_10021D008(uint64_t result)
{
  if (result == 1) {
    byte_100A0B0F2 = 0;
  }
  return result;
}

uint64_t sub_10021D01C(uint64_t result, __int16 a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v23 = 0;
  char v14 = 1;
  do
  {
    char v15 = v14;
    uint64_t v16 = (char *)&unk_100A0B0D0 + 32 * v13;
    int v18 = v16[2];
    uint64_t v17 = v16 + 2;
    if (v18)
    {
      uint64_t v19 = (uint64_t (*)(uint64_t))*((void *)&unk_100A0B0D0 + 4 * v13 + 1);
      if (v19)
      {
        uint64_t v20 = (char *)&unk_100A0B0D0 + 32 * v13;
        if (*((void *)v20 + 2)) {
          uint64_t v21 = (uint64_t *)*((void *)v20 + 2);
        }
        else {
          uint64_t v21 = &v23;
        }
        *((unsigned char *)v21 + 3) = a3;
        *(_WORD *)uint64_t v21 = a2;
        *((unsigned char *)v21 + 2) = v12;
        *((unsigned char *)v21 + 4) = a4;
        *((unsigned char *)v21 + 5) = a5;
        *((unsigned char *)v21 + 6) = a6;
        *((unsigned char *)v21 + 7) = a7;
        uint64_t result = v19(v12);
        if (v20[1]) {
          *uint64_t v17 = 0;
        }
      }
    }
    char v14 = 0;
    uint64_t v13 = 1;
  }
  while ((v15 & 1) != 0);
  return result;
}

void sub_10021D100(unsigned int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, unsigned __int8 a12, unsigned __int16 a13, unsigned __int16 a14, unsigned __int16 a15, unsigned __int16 a16, unsigned __int16 a17, unsigned __int8 a18)
{
  uint64_t v26 = sub_100197864(a1);
  if (a2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"CS read remote supported capabilities error: %!", v27, v28, v29, v30, v31, v32, v33, a2);
      uint64_t v34 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
LABEL_10:
      }
        sub_100745764();
    }
  }
  else
  {
    uint64_t v35 = v26;
    if (v26 && sub_100197770((uint64_t)v26))
    {
      *((unsigned char *)v35 + 292) = a3;
      *((_WORD *)v35 + 147) = a4;
      *((unsigned char *)v35 + 296) = a5;
      *((unsigned char *)v35 + 297) = a6;
      *((unsigned char *)v35 + 298) = a7;
      *((unsigned char *)v35 + 299) = a8;
      *((unsigned char *)v35 + 300) = a9;
      *((unsigned char *)v35 + 301) = a10;
      *((unsigned char *)v35 + 302) = a11;
      *((unsigned char *)v35 + 303) = a12;
      *((_WORD *)v35 + 152) = a13;
      *((_WORD *)v35 + 153) = a14;
      *((_WORD *)v35 + 154) = a15;
      *((_WORD *)v35 + 155) = a16;
      *((_WORD *)v35 + 156) = a17;
      *((unsigned char *)v35 + 314) = a18;
      sub_10025B778("Channel Sounding numConfigSupported: %d maxProceduresSupported: %d numAntennasSupported: %d rolesSupported: %d modes_Supported: %d rttCapability: %d rttCoarseN: %d rttSoundingN: %d rttRandomPayloadN: %d csSyncPHYsSupported: %d subfeaturesSupported: %d tIP1TimesSupported: %d tIP2TimesSupported: %d tFcsTimesSupported: %d tPMTimesSupported: %d tSWTimesSupported: %d ", a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
        a18);
      return;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invaid LM handle %x from CS read remote supported capabilities", v36, v37, v38, v39, v40, v41, v42, a1);
      uint64_t v43 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        goto LABEL_10;
      }
    }
  }
}

uint64_t sub_10021D2BC(uint64_t a1)
{
  uint64_t v1 = **(unsigned int **)(a1 + 8);
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_connectionCancelDefer lConnectionInProgress %d, lRestartConnectionInProgress %d, lCancelConnectionInProgress %d lCancelConnectionDeferInProgress %d - %!", v2, v3, v4, v5, v6, v7, v8, byte_100A0B0A0);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v12 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return sub_100218BC0(v1);
}

void sub_10021D484(uint64_t *a1, char a2)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  unsigned int v4 = *((unsigned __int16 *)a1 + 5);
  uint64_t v5 = *((unsigned __int16 *)a1 + 6);
  uint64_t v2 = v4 - v5;
  __int16 v104 = 0;
  int v103 = 0;
  if (v2 != 18)
  {
LABEL_14:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid connection complete event packet size : %d, expecting %d", v22, v23, v24, v25, v26, v27, v28, v2);
      uint64_t v29 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 67, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v4 <= v5)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the status of the LE connection complete event", v30, v31, v32, v33, v34, v35, v36, v101);
    uint64_t v37 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_29:
    sub_100744F6C();
    return;
  }
  uint64_t v6 = *a1;
  *((_WORD *)a1 + 6) = v5 + 1;
  if ((int)(v4 - (v5 + 1)) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the connection handle of the LE connection complete event", v38, v39, v40, v41, v42, v43, v44, v101);
    uint64_t v45 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_29;
  }
  uint64_t v7 = *(unsigned __int8 *)(v6 + v5);
  unsigned __int16 v8 = *(_WORD *)(v6 + v5 + 1);
  *((_WORD *)a1 + 6) = v5 + 3;
  if (v4 <= (unsigned __int16)(v5 + 3))
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the connection role of the LE connection complete event", v46, v47, v48, v49, v50, v51, v52, v101);
    uint64_t v53 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_29;
  }
  unsigned __int16 v9 = v5 + 4;
  *((_WORD *)a1 + 6) = v5 + 4;
  if (v4 <= (unsigned __int16)(v5 + 4))
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the peer address type of the LE connection complete event", v54, v55, v56, v57, v58, v59, v60, v101);
    uint64_t v61 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_29;
  }
  uint64_t v10 = *(unsigned __int8 *)(v6 + (unsigned __int16)(v5 + 3));
  unsigned __int16 v11 = v5 + 5;
  *((_WORD *)a1 + 6) = v11;
  char v102 = *(unsigned char *)(v6 + v9);
  if ((int)(v4 - v11) <= 5) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 75, "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE");
  }
  sub_100008A18((uint64_t)&v103, v6 + v11, 6uLL);
  __int16 v13 = *((_WORD *)a1 + 6);
  *((_WORD *)a1 + 6) = v13 + 6;
  if (*((unsigned char *)a1 + 15))
  {
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the peer address of the LE connection complete event", v14, v15, v16, v17, v18, v19, v20, v101);
    uint64_t v21 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_47;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 77, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  unsigned int v62 = *((unsigned __int16 *)a1 + 5);
  if ((int)(v62 - (unsigned __int16)(v13 + 6)) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the connection interval of the LE connection complete event", v69, v70, v71, v72, v73, v74, v75, v101);
    uint64_t v76 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_47:
    sub_100744F6C();
    return;
  }
  uint64_t v63 = *a1;
  unsigned __int16 v64 = *(_WORD *)(*a1 + (unsigned __int16)(v13 + 6));
  *((_WORD *)a1 + 6) = v13 + 8;
  if ((int)(v62 - (unsigned __int16)(v13 + 8)) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the connection latency  of the LE connection complete event", v77, v78, v79, v80, v81, v82, v83, v101);
    uint64_t v84 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_47;
  }
  unsigned __int16 v65 = *(_WORD *)(v63 + (unsigned __int16)(v13 + 8));
  *((_WORD *)a1 + 6) = v13 + 10;
  if ((int)(v62 - (unsigned __int16)(v13 + 10)) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the supervision timeout of the LE connection complete event", v85, v86, v87, v88, v89, v90, v91, v101);
    uint64_t v92 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v92, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_47;
  }
  unsigned int v66 = (unsigned __int8 *)(v63 + (unsigned __int16)(v13 + 10));
  int v67 = *v66;
  int v68 = v66[1];
  *((_WORD *)a1 + 6) = v13 + 12;
  if (v62 > (unsigned __int16)(v13 + 12))
  {
    *((_WORD *)a1 + 6) = v13 + 13;
    BYTE4(v101) = a2;
    WORD1(v101) = -1;
    BYTE1(v101) = -1;
    LOBYTE(v101) = *(unsigned char *)(v63 + (unsigned __int16)(v13 + 12));
    ((void (*)(uint64_t, void, uint64_t, char *, void, void, void, void, uint64_t))loc_10021AE70)(v7, v8, v10, &v102, 0, v64, v65, v67 | (v68 << 8), v101);
    return;
  }
  *((unsigned char *)a1 + 15) = 1;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not get the central clock accuracy of the LE connection complete event", v93, v94, v95, v96, v97, v98, v99, v101);
    unsigned __int16 v100 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR)) {
      goto LABEL_47;
    }
  }
}

void sub_10021D97C(uint64_t *a1, char a2)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v2 = 0;
LABEL_4:
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Not enough data in the packet : %d, expecting at least %d", v6, v7, v8, v9, v10, v11, v12, v2);
    __int16 v13 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_6;
  }
  unsigned int v4 = *((unsigned __int16 *)a1 + 5);
  uint64_t v5 = *((unsigned __int16 *)a1 + 6);
  uint64_t v2 = v4 - v5;
  *(_OWORD *)ptr = 0u;
  memset(v106, 0, sizeof(v106));
  long long v104 = 0u;
  if (v2 <= 9) {
    goto LABEL_4;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 104, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v4 <= v5)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the number of reports of the LE advertising report event", v39, v40, v41, v42, v43, v44, v45, v103);
    uint64_t v46 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_6:
    sub_100744F6C();
    return;
  }
  uint64_t v14 = *a1;
  *((_WORD *)a1 + 6) = v5 + 1;
  int v15 = *(unsigned __int8 *)(v14 + v5);
  BYTE1(ptr[1]) = a2;
  if (!v15) {
    return;
  }
  int v16 = 0;
  while (1)
  {
    if (*((unsigned char *)a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 111, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_45:
      *((unsigned char *)a1 + 15) = 1;
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get the event type of the LE advertising report event", v47, v48, v49, v50, v51, v52, v53, v103);
      uint64_t v54 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_67;
    }
    unsigned int v17 = *((unsigned __int16 *)a1 + 5);
    uint64_t v18 = *((unsigned __int16 *)a1 + 6);
    if (v17 <= v18) {
      goto LABEL_45;
    }
    uint64_t v19 = *a1;
    uint64_t v20 = v18 + 1;
    *((_WORD *)a1 + 6) = v18 + 1;
    LOBYTE(v104) = *(unsigned char *)(v19 + v18);
    if (v17 <= (int)v18 + 1) {
      break;
    }
    uint64_t v21 = v18 + 2;
    *((_WORD *)a1 + 6) = v21;
    BYTE1(v104) = *(unsigned char *)(v19 + v20);
    if ((int)(v17 - v21) <= 5) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 115, "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE");
    }
    sub_100008A18((uint64_t)&v104 + 2, v19 + v21, 6uLL);
    __int16 v22 = *((_WORD *)a1 + 6);
    *((_WORD *)a1 + 6) = v22 + 6;
    if (*((unsigned char *)a1 + 15))
    {
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get the address of the LE advertising report event", v63, v64, v65, v66, v67, v68, v69, v103);
      uint64_t v70 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_67;
    }
    if (*((unsigned char *)a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 117, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned __int16 *)a1 + 5) <= (unsigned __int16)(v22 + 6))
    {
      *((unsigned char *)a1 + 15) = 1;
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get the dataLength of the LE advertising report event", v71, v72, v73, v74, v75, v76, v77, v103);
      uint64_t v78 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_67;
    }
    uint64_t v23 = *a1;
    *((_WORD *)a1 + 6) = v22 + 7;
    uint64_t v24 = (unsigned __int16)(v22 + 6);
    size_t v25 = *(unsigned __int8 *)(v23 + v24);
    WORD4(v104) = *(unsigned __int8 *)(v23 + v24);
    if (v25 >= 0x20)
    {
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Too many info bytes in the LE advertising report event.", v79, v80, v81, v82, v83, v84, v85, v103);
      uint64_t v86 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_67;
    }
    uint64_t v26 = sub_100022FE8(v25);
    ptr[0] = v26;
    uint64_t v27 = WORD4(v104);
    int v28 = *((unsigned __int8 *)a1 + 14);
    if (v26) {
      BOOL v29 = WORD4(v104) == 0;
    }
    else {
      BOOL v29 = 1;
    }
    if (!v29)
    {
      if (v28 != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 125, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v30 = v26;
      uint64_t v31 = *a1;
      uint64_t v32 = *((unsigned __int16 *)a1 + 6);
      if (*((unsigned char *)a1 + 15))
      {
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
        int v33 = 0;
      }
      else
      {
        int v33 = *((unsigned __int16 *)a1 + 5) - v32;
      }
      if (v33 < WORD4(v104))
      {
        *((unsigned char *)a1 + 15) = 1;
LABEL_65:
        if (!sub_100058654()) {
          return;
        }
        sub_100056E24((uint64_t)"Could not get the dataLength of the LE advertising report event", v95, v96, v97, v98, v99, v100, v101, v103);
        char v102 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
          return;
        }
LABEL_67:
        sub_100744F6C();
        return;
      }
      uint64_t v34 = (char *)(v31 + v32);
      uint64_t v35 = &v30[v27];
      do
      {
        char v36 = *v34++;
        *v30++ = v36;
      }
      while (v30 < v35);
      *((_WORD *)a1 + 6) += WORD4(v104);
      if (*((unsigned char *)a1 + 15)) {
        goto LABEL_65;
      }
      int v28 = *((unsigned __int8 *)a1 + 14);
    }
    if (v28 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 128, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a1 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_61:
      *((unsigned char *)a1 + 15) = 1;
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get the rssi of the LE advertising report event", v87, v88, v89, v90, v91, v92, v93, v103);
      uint64_t v94 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_67;
    }
    uint64_t v37 = *((unsigned __int16 *)a1 + 6);
    if (*((unsigned __int16 *)a1 + 5) <= v37) {
      goto LABEL_61;
    }
    uint64_t v38 = *a1;
    *((_WORD *)a1 + 6) = v37 + 1;
    LOBYTE(ptr[1]) = *(unsigned char *)(v38 + v37);
    if (BYTE1(v104) >= 2u) {
      BYTE1(v104) -= 2;
    }
    BYTE12(v106[0]) = 0;
    *(_DWORD *)((char *)v106 + 15) = 256;
    sub_10005986C((unsigned __int16 *)&v104);
    sub_100023010(ptr[0]);
    if (++v16 == v15) {
      return;
    }
  }
  *((unsigned char *)a1 + 15) = 1;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not get the address type of the LE advertising report event", v55, v56, v57, v58, v59, v60, v61, v103);
    unsigned int v62 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
      goto LABEL_67;
    }
  }
}

void sub_10021DF54(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v2 - v3;
    if (v1 == 9)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 175, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (v2 <= v3)
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the status of the LE connection update event", v20, v21, v22, v23, v24, v25, v26, v60);
          uint64_t v27 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        uint64_t v4 = *a1;
        *((_WORD *)a1 + 6) = v3 + 1;
        if ((int)(v2 - (v3 + 1)) <= 1)
        {
          *((unsigned char *)a1 + 15) = 1;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get the connection handle of the LE connection update event", v28, v29, v30, v31, v32, v33, v34, v60);
            uint64_t v35 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
              goto LABEL_15;
            }
          }
        }
        else
        {
          uint64_t v5 = *(unsigned __int8 *)(v4 + v3);
          unsigned __int16 v6 = *(_WORD *)(v4 + v3 + 1);
          *((_WORD *)a1 + 6) = v3 + 3;
          if ((int)(v2 - (unsigned __int16)(v3 + 3)) <= 1)
          {
            *((unsigned char *)a1 + 15) = 1;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not get the connection interval of the LE connection update event", v36, v37, v38, v39, v40, v41, v42, v60);
              uint64_t v43 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
                goto LABEL_15;
              }
            }
          }
          else
          {
            unsigned __int16 v7 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 3));
            *((_WORD *)a1 + 6) = v3 + 5;
            if ((int)(v2 - (unsigned __int16)(v3 + 5)) <= 1)
            {
              *((unsigned char *)a1 + 15) = 1;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Could not get the connection latency  of the LE connection update event", v44, v45, v46, v47, v48, v49, v50, v60);
                uint64_t v51 = sub_100050B4C(0x42u);
                if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_15;
                }
              }
            }
            else
            {
              uint64_t v8 = (unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 5));
              int v9 = *v8;
              int v10 = v8[1];
              *((_WORD *)a1 + 6) = v3 + 7;
              if ((int)(v2 - (unsigned __int16)(v3 + 7)) <= 1)
              {
                *((unsigned char *)a1 + 15) = 1;
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Could not get the supervision timeout of the LE connection update event", v52, v53, v54, v55, v56, v57, v58, v60);
                  uint64_t v59 = sub_100050B4C(0x42u);
                  if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_15;
                  }
                }
              }
              else
              {
                uint64_t v11 = *(unsigned __int16 *)(v4 + (unsigned __int16)(v3 + 7));
                *((_WORD *)a1 + 6) = v3 + 9;
                sub_10021B680(v5, v6, v7, v9 | (v10 << 8), v11);
              }
            }
          }
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the connection update packet : %d expecting at least %d", v12, v13, v14, v15, v16, v17, v18, v1);
    uint64_t v19 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
LABEL_15:
    }
      sub_100744F6C();
  }
}

void sub_10021E240(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
    goto LABEL_11;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  uint64_t v1 = v2 - v3;
  uint64_t v43 = 0;
  if (v1 != 11)
  {
LABEL_11:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Not enough data in the feature packet : %d expecting at least %d", v10, v11, v12, v13, v14, v15, v16, v1);
      uint64_t v17 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 205, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (v2 <= v3)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the status of the read remote used features event", v18, v19, v20, v21, v22, v23, v24, v42);
    uint64_t v25 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_23:
    sub_100744F6C();
    return;
  }
  uint64_t v4 = *a1;
  *((_WORD *)a1 + 6) = v3 + 1;
  if ((int)(v2 - (v3 + 1)) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
    if (!sub_100058654()) {
      return;
    }
    sub_100056E24((uint64_t)"Could not get the connection handle of the read remote used features event", v26, v27, v28, v29, v30, v31, v32, v42);
    uint64_t v33 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_23;
  }
  unsigned int v5 = *(unsigned __int8 *)(v4 + v3);
  unsigned __int16 v6 = *(_WORD *)(v4 + v3 + 1);
  *((_WORD *)a1 + 6) = v3 + 3;
  if ((int)(v2 - (unsigned __int16)(v3 + 3)) >= 8)
  {
    uint64_t v7 = 0;
    uint64_t v8 = v4 + (unsigned __int16)(v3 + 3);
    do
    {
      *((unsigned char *)&v43 + v7) = *(unsigned char *)(v8 + v7);
      ++v7;
    }
    while (v7 != 8);
    *((_WORD *)a1 + 6) = v3 + 11;
    uint64_t v9 = sub_1000262CC(v5);
    sub_10021BA7C(v9, v6, &v43);
    return;
  }
  *((unsigned char *)a1 + 15) = 1;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not get the features of the read remote used features event", v34, v35, v36, v37, v38, v39, v40, v42);
    uint64_t v41 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      goto LABEL_23;
    }
  }
}

void sub_10021E494(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = (v2 - v3);
    uint64_t v33 = 0;
    if (v1 == 12)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 228, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v4 = *a1;
      unsigned __int16 v5 = *(_WORD *)(*a1 + v3);
      *((_WORD *)a1 + 6) = v3 + 2;
      if (v2 - (unsigned __int16)(v3 + 2) < 8)
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the random number of the long term key request event", v16, v17, v18, v19, v20, v21, v22, v32);
          uint64_t v23 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        for (uint64_t i = 0; i != 8; ++i)
          *((unsigned char *)&v33 + i) = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 2) + i);
        *((_WORD *)a1 + 6) = v3 + 10;
        if (v2 - (unsigned __int16)(v3 + 10) <= 1)
        {
          *((unsigned char *)a1 + 15) = 1;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get the encryption diversifier of the long term key request event", v24, v25, v26, v27, v28, v29, v30, v32);
            uint64_t v31 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
        else
        {
          uint64_t v7 = *(unsigned __int16 *)(v4 + (unsigned __int16)(v3 + 10));
          *((_WORD *)a1 + 6) = v3 + 12;
          sub_100232FC8(v5, &v33, v7);
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the long term key request packet : %d expecting at least %d", v8, v9, v10, v11, v12, v13, v14, v1);
    uint64_t v15 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
LABEL_12:
    }
      sub_100744F6C();
  }
}

void sub_10021E694(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    int v2 = *(unsigned __int16 *)(a1 + 10);
    uint64_t v3 = *(unsigned __int16 *)(a1 + 12);
    uint64_t v1 = (v2 - v3);
    if (v1 == 10)
    {
      if (*(unsigned char *)(a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 255, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v4 = *(unsigned __int16 *)(*(void *)a1 + v3);
      *(_WORD *)(a1 + 12) = v3 + 2;
      if (v2 - (unsigned __int16)(v3 + 2) <= 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 256, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      *(_WORD *)(a1 + 12) = v3 + 4;
      if (v2 - (unsigned __int16)(v3 + 4) <= 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 257, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      *(_WORD *)(a1 + 12) = v3 + 6;
      if (v2 - (unsigned __int16)(v3 + 6) <= 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 258, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      *(_WORD *)(a1 + 12) = v3 + 8;
      if (v2 - (unsigned __int16)(v3 + 8) <= 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 259, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
      }
      *(_WORD *)(a1 + 12) = v3 + 10;
      if (sub_100197864(v4))
      {
        sub_100226074();
      }
      else if (sub_100058654())
      {
        sub_100056E24((uint64_t)"LE_HCIEventHandler_RemoteConnectionParameterRequest: Invalid connectionHandle for lmHandle 0x%2x", v13, v14, v15, v16, v17, v18, v19, v4);
        uint64_t v20 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the Remote Connection Parameter Request message: %d expecting at least %d", v5, v6, v7, v8, v9, v10, v11, v1);
    uint64_t v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
LABEL_15:
    }
      sub_100744F6C();
  }
}

void sub_10021E8F8(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
    goto LABEL_12;
  }
  int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  uint64_t v1 = (v2 - v3);
  if (v1 != 10)
  {
LABEL_12:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Not enough data for data length changed: %d expecting at least %d", v12, v13, v14, v15, v16, v17, v18, v1);
      uint64_t v19 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 284, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v4 = *a1;
  unsigned __int16 v5 = *(_WORD *)(*a1 + v3);
  *((_WORD *)a1 + 6) = v3 + 2;
  if (v2 - (unsigned __int16)(v3 + 2) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 285, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  unsigned __int16 v6 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 2));
  *((_WORD *)a1 + 6) = v3 + 4;
  if (v2 - (unsigned __int16)(v3 + 4) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 286, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  unsigned __int16 v7 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 4));
  *((_WORD *)a1 + 6) = v3 + 6;
  if (v2 - (unsigned __int16)(v3 + 6) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 287, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v8 = (unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 6));
  int v9 = *v8;
  int v10 = v8[1];
  *((_WORD *)a1 + 6) = v3 + 8;
  if (v2 - (unsigned __int16)(v3 + 8) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 288, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  int v11 = *(unsigned __int16 *)(v4 + (unsigned __int16)(v3 + 8));
  *((_WORD *)a1 + 6) = v3 + 10;

  sub_10021BEC0(v5, v6, v7, v9 | (v10 << 8), v11);
}

void sub_10021EAD8(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
    goto LABEL_12;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  uint64_t v1 = v2 - v3;
  if (v1 != 5)
  {
LABEL_12:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Not enough data for phy update complete: %d expecting aØt least 6", v10, v11, v12, v13, v14, v15, v16, v1);
      uint64_t v17 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (v2 <= v3)
  {
    uint64_t v18 = "ByteStream_NumReadBytesAvail(*pBs) >= 1";
    goto LABEL_18;
  }
  if (*((unsigned char *)a1 + 14) != 1)
  {
    uint64_t v18 = "(*pBs).__RWFlag == BYTESTREAM_READ";
LABEL_18:
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 300, v18);
  }
  uint64_t v4 = *a1;
  *((_WORD *)a1 + 6) = v3 + 1;
  if ((int)(v2 - (v3 + 1)) <= 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 301, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
  }
  uint64_t v5 = *(unsigned __int8 *)(v4 + v3);
  unsigned __int16 v6 = *(_WORD *)(v4 + v3 + 1);
  *((_WORD *)a1 + 6) = v3 + 3;
  if (v2 <= (unsigned __int16)(v3 + 3)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 302, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  *((_WORD *)a1 + 6) = v3 + 4;
  if (v2 <= (unsigned __int16)(v3 + 4)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 303, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  int v7 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 3));
  *((_WORD *)a1 + 6) = v3 + 5;
  int v8 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 4));
  int v9 = sub_100197864(v6);

  sub_10021C2AC(v5, (uint64_t)v9, v7, v8);
}

void sub_10021ECA0(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
    goto LABEL_11;
  }
  unsigned int v2 = *((unsigned __int16 *)a1 + 5);
  int v3 = *((unsigned __int16 *)a1 + 6);
  uint64_t v1 = v2 - v3;
  if (v1 != 3)
  {
LABEL_11:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Not enough data for phy update complete: %d expecting at least 3", v14, v15, v16, v17, v18, v19, v20, v1);
      uint64_t v21 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 320, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  *((_WORD *)a1 + 6) = v3 + 2;
  if (v2 <= (unsigned __int16)(v3 + 2)) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 321, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
  }
  uint64_t v4 = *a1;
  *((_WORD *)a1 + 6) = v3 + 3;
  uint64_t v5 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 2));
  if (v5 >= 2) {
    sub_10025B8C0();
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE channel Selection algorithm %d", v6, v7, v8, v9, v10, v11, v12, v5);
    uint64_t v13 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v23 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
}

void sub_10021EE50(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v2 - v3;
    if (v1 > 4)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 481, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (v2 <= v3)
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the status of the LE advertising set terminated event", v18, v19, v20, v21, v22, v23, v24, v50);
          uint64_t v25 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        uint64_t v12 = *a1;
        *((_WORD *)a1 + 6) = v3 + 1;
        if (v2 <= (unsigned __int16)(v3 + 1))
        {
          *((unsigned char *)a1 + 15) = 1;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get the advertising handle of the LE advertising set terminated event", v26, v27, v28, v29, v30, v31, v32, v50);
            uint64_t v33 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
              goto LABEL_6;
            }
          }
        }
        else
        {
          uint64_t v13 = *(unsigned __int8 *)(v12 + v3);
          uint64_t v14 = v3 + 2;
          *((_WORD *)a1 + 6) = v3 + 2;
          if ((int)(v2 - (v3 + 2)) <= 1)
          {
            *((unsigned char *)a1 + 15) = 1;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not get the connection handle of the LE advertising set terminated event", v34, v35, v36, v37, v38, v39, v40, v50);
              uint64_t v41 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
                goto LABEL_6;
              }
            }
          }
          else
          {
            uint64_t v15 = v12 + v14;
            int v16 = *(unsigned __int8 *)(v12 + v14);
            int v17 = *(unsigned __int8 *)(v15 + 1);
            *((_WORD *)a1 + 6) = v3 + 4;
            if (v2 <= (unsigned __int16)(v3 + 4))
            {
              *((unsigned char *)a1 + 15) = 1;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Could not get the number of advertising events of the LE advertising set terminated event", v42, v43, v44, v45, v46, v47, v48, v50);
                uint64_t v49 = sub_100050B4C(0x42u);
                if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_6;
                }
              }
            }
            else
            {
              *((_WORD *)a1 + 6) = v3 + 5;
              sub_100197864(v16 | (v17 << 8));
              nullsub_95(v13);
            }
          }
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the packet : %d, expecting at least %d", v4, v5, v6, v7, v8, v9, v10, v1);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
LABEL_6:
    }
      sub_100744F6C();
  }
}

void sub_10021F0E8(int a1, uint64_t *a2, char a3)
{
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = *((unsigned __int16 *)a2 + 5) - *((unsigned __int16 *)a2 + 6);
  }
  *(_DWORD *)&v145[3] = 0;
  *(_DWORD *)uint64_t v145 = 0;
  *(_DWORD *)((char *)v144 + 3) = 0;
  v144[0] = 0;
  if (a1 != 1 || v6 == 30)
  {
    if (a1 == 2 && v6 != 33)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid enhanced connection complete V2 event packet size : %d, expecting %d", v15, v16, v17, v18, v19, v20, v21, v6);
        uint64_t v22 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 654, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_26:
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the status of the LE enhanced connection complete event", v40, v41, v42, v43, v44, v45, v46, v143);
        uint64_t v47 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
    unsigned int v23 = *((unsigned __int16 *)a2 + 5);
    uint64_t v24 = *((unsigned __int16 *)a2 + 6);
    if (v23 <= v24) {
      goto LABEL_26;
    }
    uint64_t v25 = *a2;
    *((_WORD *)a2 + 6) = v24 + 1;
    if ((int)(v23 - (v24 + 1)) <= 1)
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the connection handle of the LE enhanced connection complete event", v48, v49, v50, v51, v52, v53, v54, v143);
        uint64_t v55 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    uint64_t v26 = *(unsigned __int8 *)(v25 + v24);
    unsigned __int16 v27 = *(_WORD *)(v25 + v24 + 1);
    *((_WORD *)a2 + 6) = v24 + 3;
    if (v23 <= (unsigned __int16)(v24 + 3))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the connection role of the LE enhanced connection complete event", v56, v57, v58, v59, v60, v61, v62, v143);
        uint64_t v63 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    unsigned __int16 v28 = v24 + 4;
    *((_WORD *)a2 + 6) = v24 + 4;
    if (v23 <= (unsigned __int16)(v24 + 4))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the peer address type of the LE enhanced connection complete event", v64, v65, v66, v67, v68, v69, v70, v143);
        uint64_t v71 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    uint64_t v29 = *(unsigned __int8 *)(v25 + (unsigned __int16)(v24 + 3));
    unsigned __int16 v30 = v24 + 5;
    *((_WORD *)a2 + 6) = v30;
    v145[0] = *(unsigned char *)(v25 + v28);
    if ((int)(v23 - v30) <= 5) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 666, "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE");
    }
    sub_100008A18((uint64_t)&v145[1], v25 + v30, 6uLL);
    __int16 v31 = *((_WORD *)a2 + 6);
    *((_WORD *)a2 + 6) = v31 + 6;
    if (*((unsigned char *)a2 + 15))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the peer address of the LE enhanced connection complete event", v32, v33, v34, v35, v36, v37, v38, v143);
        uint64_t v39 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
    int v72 = *((unsigned __int16 *)a2 + 5);
    if (v72 - (unsigned __int16)(v31 + 6) <= 5) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 669, "ByteStream_NumReadBytesAvail(*pBs) >= (6)");
    }
    unsigned __int16 v73 = v31 + 12;
    *((_WORD *)a2 + 6) = v73;
    if (v72 - v73 <= 5)
    {
      uint64_t v142 = "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE";
    }
    else
    {
      if (*((unsigned char *)a2 + 14) == 1)
      {
        sub_100008A18((uint64_t)v144 + 1, *a2 + v73, 6uLL);
        __int16 v74 = *((_WORD *)a2 + 6);
        *((_WORD *)a2 + 6) = v74 + 6;
        if (*((unsigned char *)a2 + 15))
        {
          if (!sub_100058654()) {
            return;
          }
          sub_100056E24((uint64_t)"Could not get the peer address of the LE enhanced connection complete event", v75, v76, v77, v78, v79, v80, v81, v143);
          uint64_t v82 = sub_100050B4C(0x42u);
          if (!os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
            return;
          }
          goto LABEL_84;
        }
        LOBYTE(v144[0]) = 1;
        if (*((unsigned char *)a2 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 675, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        unsigned int v83 = *((unsigned __int16 *)a2 + 5);
        if ((int)(v83 - (unsigned __int16)(v74 + 6)) <= 1)
        {
          *((unsigned char *)a2 + 15) = 1;
          if (!sub_100058654()) {
            return;
          }
          sub_100056E24((uint64_t)"Could not get the connection interval of the LE enhanced connection complete event", v91, v92, v93, v94, v95, v96, v97, v143);
          uint64_t v98 = sub_100050B4C(0x42u);
          if (!os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
            return;
          }
        }
        else
        {
          uint64_t v84 = *a2;
          unsigned __int16 v85 = *(_WORD *)(*a2 + (unsigned __int16)(v74 + 6));
          *((_WORD *)a2 + 6) = v74 + 8;
          if ((int)(v83 - (unsigned __int16)(v74 + 8)) <= 1)
          {
            *((unsigned char *)a2 + 15) = 1;
            if (!sub_100058654()) {
              return;
            }
            sub_100056E24((uint64_t)"Could not get the connection latency  of the LE enhanced connection complete event", v99, v100, v101, v102, v103, v104, v105, v143);
            uint64_t v106 = sub_100050B4C(0x42u);
            if (!os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
              return;
            }
          }
          else
          {
            unsigned __int16 v86 = *(_WORD *)(v84 + (unsigned __int16)(v74 + 8));
            *((_WORD *)a2 + 6) = v74 + 10;
            if ((int)(v83 - (unsigned __int16)(v74 + 10)) <= 1)
            {
              *((unsigned char *)a2 + 15) = 1;
              if (!sub_100058654()) {
                return;
              }
              sub_100056E24((uint64_t)"Could not get the supervision timeout of the LE enhanced connection complete event", v107, v108, v109, v110, v111, v112, v113, v143);
              unsigned int v114 = sub_100050B4C(0x42u);
              if (!os_log_type_enabled(v114, OS_LOG_TYPE_ERROR)) {
                return;
              }
            }
            else
            {
              unsigned __int16 v87 = *(_WORD *)(v84 + (unsigned __int16)(v74 + 10));
              *((_WORD *)a2 + 6) = v74 + 12;
              if (v83 <= (unsigned __int16)(v74 + 12))
              {
                *((unsigned char *)a2 + 15) = 1;
                if (!sub_100058654()) {
                  return;
                }
                sub_100056E24((uint64_t)"Could not get the central clock accuracy of the LE enhanced connection complete event", v115, v116, v117, v118, v119, v120, v121, v143);
                uint64_t v122 = sub_100050B4C(0x42u);
                if (!os_log_type_enabled(v122, OS_LOG_TYPE_ERROR)) {
                  return;
                }
              }
              else
              {
                *((_WORD *)a2 + 6) = v74 + 13;
                char v88 = *(unsigned char *)(v84 + (unsigned __int16)(v74 + 12));
                if (a1 != 2)
                {
                  __int16 v90 = -1;
                  char v89 = -1;
                  goto LABEL_68;
                }
                if (v83 <= (unsigned __int16)(v74 + 13))
                {
                  *((unsigned char *)a2 + 15) = 1;
                  if (!sub_100058654()) {
                    return;
                  }
                  sub_100056E24((uint64_t)"Could not get the advertising handle of the LE enhanced connection complete V2 event", v124, v125, v126, v127, v128, v129, v130, v143);
                  uint64_t v131 = sub_100050B4C(0x42u);
                  if (!os_log_type_enabled(v131, OS_LOG_TYPE_ERROR)) {
                    return;
                  }
                }
                else
                {
                  *((_WORD *)a2 + 6) = v74 + 14;
                  if ((int)(v83 - (unsigned __int16)(v74 + 14)) >= 2)
                  {
                    char v89 = *(unsigned char *)(v84 + (unsigned __int16)(v74 + 13));
                    __int16 v90 = *(_WORD *)(v84 + (unsigned __int16)(v74 + 14));
                    *((_WORD *)a2 + 6) = v74 + 16;
LABEL_68:
                    int v123 = v145[0] & 0xFE;
                    if (v145[0] == 3)
                    {
                      v145[0] = 1;
                    }
                    else if (v145[0] == 2)
                    {
                      v145[0] = 0;
                    }
                    if (v123 == 2) {
                      uint64_t v132 = (unsigned __int8 *)v144;
                    }
                    else {
                      uint64_t v132 = v145;
                    }
                    if (v123 == 2) {
                      uint64_t v133 = v145;
                    }
                    else {
                      uint64_t v133 = 0;
                    }
                    BYTE4(v143) = a3;
                    WORD1(v143) = v90;
                    BYTE1(v143) = v89;
                    LOBYTE(v143) = v88;
                    ((void (*)(uint64_t, void, uint64_t, unsigned __int8 *, unsigned __int8 *, void, void, void, uint64_t))loc_10021AE70)(v26, v27, v29, v132, v133, v85, v86, v87, v143);
                    return;
                  }
                  *((unsigned char *)a2 + 15) = 1;
                  if (!sub_100058654()) {
                    return;
                  }
                  sub_100056E24((uint64_t)"Could not get the sync handle of the LE enhanced connection complete V2 event", v134, v135, v136, v137, v138, v139, v140, v143);
                  uint64_t v141 = sub_100050B4C(0x42u);
                  if (!os_log_type_enabled(v141, OS_LOG_TYPE_ERROR)) {
                    return;
                  }
                }
              }
            }
          }
        }
LABEL_84:
        sub_100744F6C();
        return;
      }
      uint64_t v142 = "(*pBs).__RWFlag == BYTESTREAM_READ";
    }
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 671, v142);
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid enhanced connection complete event packet size : %d, expecting %d", v7, v8, v9, v10, v11, v12, v13, v6);
    uint64_t v14 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
LABEL_38:
    }
      sub_100744F6C();
  }
}

void sub_10021F860(int a1, uint64_t *a2)
{
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *((unsigned __int16 *)a2 + 5) - *((unsigned __int16 *)a2 + 6);
  }
  memset(v128, 0, 20);
  if (a1 != 1 || v4 == 15)
  {
    if (a1 == 2 && v4 != 19)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid periodic advertising sync established V2 event packet size : %d, expecting %d", v13, v14, v15, v16, v17, v18, v19, v4);
        uint64_t v20 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 737, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_26:
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the status of the LE periodic advertising sync established event", v36, v37, v38, v39, v40, v41, v42, v127);
        uint64_t v43 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
    unsigned int v21 = *((unsigned __int16 *)a2 + 5);
    uint64_t v22 = *((unsigned __int16 *)a2 + 6);
    if (v21 <= v22) {
      goto LABEL_26;
    }
    uint64_t v23 = *a2;
    *((_WORD *)a2 + 6) = v22 + 1;
    if ((int)(v21 - (v22 + 1)) <= 1)
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the sync handle of the LE periodic advertising sync established event", v44, v45, v46, v47, v48, v49, v50, v127);
        uint64_t v51 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    unsigned int v24 = *(unsigned __int8 *)(v23 + v22);
    LOWORD(v128[0]) = *(_WORD *)(v23 + v22 + 1);
    *((_WORD *)a2 + 6) = v22 + 3;
    if (v21 <= (unsigned __int16)(v22 + 3))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the SID of the LE periodic advertising sync established event", v52, v53, v54, v55, v56, v57, v58, v127);
        uint64_t v59 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    unsigned __int16 v25 = v22 + 4;
    *((_WORD *)a2 + 6) = v22 + 4;
    BYTE2(v128[0]) = *(unsigned char *)(v23 + (unsigned __int16)(v22 + 3));
    if (v21 <= (unsigned __int16)(v22 + 4))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the advertiser address type of the LE periodic advertising sync established event", v60, v61, v62, v63, v64, v65, v66, v127);
        uint64_t v67 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
          goto LABEL_38;
        }
      }
      return;
    }
    unsigned __int16 v26 = v22 + 5;
    *((_WORD *)a2 + 6) = v26;
    BYTE3(v128[0]) = *(unsigned char *)(v23 + v25);
    if ((int)(v21 - v26) <= 5) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 745, "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE");
    }
    sub_100008A18((uint64_t)v128 + 4, v23 + v26, 6uLL);
    __int16 v27 = *((_WORD *)a2 + 6);
    *((_WORD *)a2 + 6) = v27 + 6;
    if (*((unsigned char *)a2 + 15))
    {
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get the advertiser address of the LE periodic advertising sync established event", v28, v29, v30, v31, v32, v33, v34, v127);
      uint64_t v35 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_70;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 747, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v68 = *((unsigned __int16 *)a2 + 5);
    if (v68 <= (unsigned __int16)(v27 + 6))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get the PHY of the LE periodic advertising sync established event", v71, v72, v73, v74, v75, v76, v77, v127);
      uint64_t v78 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
        return;
      }
    }
    else
    {
      uint64_t v69 = *a2;
      *((_WORD *)a2 + 6) = v27 + 7;
      BYTE2(v128[1]) = *(unsigned char *)(v69 + (unsigned __int16)(v27 + 6));
      if ((int)(v68 - (unsigned __int16)(v27 + 7)) <= 1)
      {
        *((unsigned char *)a2 + 15) = 1;
        if (!sub_100058654()) {
          return;
        }
        sub_100056E24((uint64_t)"Could not get the periodic advertsing interval of the LE periodic advertising sync established event", v79, v80, v81, v82, v83, v84, v85, v127);
        unsigned __int16 v86 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
          return;
        }
      }
      else
      {
        WORD2(v128[1]) = *(_WORD *)(v69 + (unsigned __int16)(v27 + 7));
        *((_WORD *)a2 + 6) = v27 + 9;
        if (v68 <= (unsigned __int16)(v27 + 9))
        {
          *((unsigned char *)a2 + 15) = 1;
          if (!sub_100058654()) {
            return;
          }
          sub_100056E24((uint64_t)"Could not get the central clock accuracy of the LE periodic advertising sync established event", v87, v88, v89, v90, v91, v92, v93, v127);
          uint64_t v94 = sub_100050B4C(0x42u);
          if (!os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)) {
            return;
          }
        }
        else
        {
          *((_WORD *)a2 + 6) = v27 + 10;
          BYTE6(v128[1]) = *(unsigned char *)(v69 + (unsigned __int16)(v27 + 9));
          *(_DWORD *)((char *)&v128[1] + 7) = 0;
          if (a1 != 2)
          {
LABEL_49:
            uint64_t v70 = sub_1000262CC(v24);
            sub_100109780((uint64_t)v128, v70);
            return;
          }
          if (v68 <= (unsigned __int16)(v27 + 10))
          {
            *((unsigned char *)a2 + 15) = 1;
            if (!sub_100058654()) {
              return;
            }
            sub_100056E24((uint64_t)"Could not get Number_Subevents of LE periodic advertising sync transfer received event", v95, v96, v97, v98, v99, v100, v101, v127);
            uint64_t v102 = sub_100050B4C(0x42u);
            if (!os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
              return;
            }
          }
          else
          {
            *((_WORD *)a2 + 6) = v27 + 11;
            HIBYTE(v128[1]) = *(unsigned char *)(v69 + (unsigned __int16)(v27 + 10));
            if (v68 <= (unsigned __int16)(v27 + 11))
            {
              *((unsigned char *)a2 + 15) = 1;
              if (!sub_100058654()) {
                return;
              }
              sub_100056E24((uint64_t)"Could not get Subevent_Interval of LE periodic advertising sync transfer received event", v103, v104, v105, v106, v107, v108, v109, v127);
              uint64_t v110 = sub_100050B4C(0x42u);
              if (!os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
                return;
              }
            }
            else
            {
              *((_WORD *)a2 + 6) = v27 + 12;
              LOBYTE(v128[2]) = *(unsigned char *)(v69 + (unsigned __int16)(v27 + 11));
              if (v68 <= (unsigned __int16)(v27 + 12))
              {
                *((unsigned char *)a2 + 15) = 1;
                if (!sub_100058654()) {
                  return;
                }
                sub_100056E24((uint64_t)"Could not get Response_Slot_Delay of LE periodic advertising sync transfer received event", v111, v112, v113, v114, v115, v116, v117, v127);
                uint64_t v118 = sub_100050B4C(0x42u);
                if (!os_log_type_enabled(v118, OS_LOG_TYPE_ERROR)) {
                  return;
                }
              }
              else
              {
                *((_WORD *)a2 + 6) = v27 + 13;
                BYTE1(v128[2]) = *(unsigned char *)(v69 + (unsigned __int16)(v27 + 12));
                if (v68 > (unsigned __int16)(v27 + 13))
                {
                  *((_WORD *)a2 + 6) = v27 + 14;
                  BYTE2(v128[2]) = *(unsigned char *)(v69 + (unsigned __int16)(v27 + 13));
                  goto LABEL_49;
                }
                *((unsigned char *)a2 + 15) = 1;
                if (!sub_100058654()) {
                  return;
                }
                sub_100056E24((uint64_t)"Could not get Response_Slot_Spacing of LE periodic advertising sync transfer received event", v119, v120, v121, v122, v123, v124, v125, v127);
                uint64_t v126 = sub_100050B4C(0x42u);
                if (!os_log_type_enabled(v126, OS_LOG_TYPE_ERROR)) {
                  return;
                }
              }
            }
          }
        }
      }
    }
LABEL_70:
    sub_100744F6C();
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid periodic advertising sync established event packet size : %d, expecting %d", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
LABEL_38:
    }
      sub_100744F6C();
  }
}

void sub_10021FEF8(int a1, uint64_t *a2)
{
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *((unsigned __int16 *)a2 + 5) - *((unsigned __int16 *)a2 + 6);
  }
  if (a1 != 1 || v4 > 6)
  {
    if (a1 == 2 && v4 <= 9)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid periodic advertising report V2 event packet size : %d, expecting at least %d", v13, v14, v15, v16, v17, v18, v19, v4);
        uint64_t v20 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 793, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_25:
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the sync handle of the LE periodic advertising report event", v36, v37, v38, v39, v40, v41, v42, v131);
        uint64_t v43 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
    unsigned int v21 = *((unsigned __int16 *)a2 + 5);
    uint64_t v22 = *((unsigned __int16 *)a2 + 6);
    if ((int)(v21 - v22) <= 1) {
      goto LABEL_25;
    }
    uint64_t v23 = *a2;
    unsigned __int16 v24 = *(_WORD *)(*a2 + v22);
    *((_WORD *)a2 + 6) = v22 + 2;
    if (v21 <= (unsigned __int16)(v22 + 2))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the TX power of the LE periodic advertising report event", v44, v45, v46, v47, v48, v49, v50, v131);
        uint64_t v51 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    *((_WORD *)a2 + 6) = v22 + 3;
    if (v21 <= (unsigned __int16)(v22 + 3))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the RSSI of the LE periodic advertising report event", v52, v53, v54, v55, v56, v57, v58, v131);
        uint64_t v59 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    char v25 = *(unsigned char *)(v23 + (unsigned __int16)(v22 + 2));
    *((_WORD *)a2 + 6) = v22 + 4;
    if (v21 <= (unsigned __int16)(v22 + 4))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the CTE Type of the LE periodic advertising report event", v60, v61, v62, v63, v64, v65, v66, v131);
        uint64_t v67 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    char v26 = *(unsigned char *)(v23 + (unsigned __int16)(v22 + 3));
    unsigned __int16 v27 = v22 + 5;
    *((_WORD *)a2 + 6) = v22 + 5;
    char v28 = *(unsigned char *)(v23 + (unsigned __int16)(v22 + 4));
    if (a1 == 2)
    {
      if ((int)(v21 - v27) <= 1)
      {
        *((unsigned char *)a2 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the periodic event counter of the LE periodic advertising report event", v87, v88, v89, v90, v91, v92, v93, v131);
          uint64_t v94 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
        }
        return;
      }
      uint64_t v29 = (unsigned __int8 *)(v23 + v27);
      __int16 v30 = *v29;
      __int16 v31 = v29[1];
      unsigned __int16 v32 = v22 + 7;
      *((_WORD *)a2 + 6) = v22 + 7;
      if (v21 <= (unsigned __int16)(v22 + 7))
      {
        *((unsigned char *)a2 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the subevent of the LE periodic advertising report event", v103, v104, v105, v106, v107, v108, v109, v131);
          uint64_t v110 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
            goto LABEL_56;
          }
        }
        return;
      }
      __int16 v33 = v30 | (v31 << 8);
      unsigned __int16 v34 = v22 + 8;
      *((_WORD *)a2 + 6) = v34;
      char v35 = *(unsigned char *)(v23 + v32);
    }
    else
    {
      __int16 v33 = 0;
      char v35 = 0;
      unsigned __int16 v34 = v22 + 5;
    }
    if (v21 <= v34)
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the data status of the LE periodic advertising report event", v79, v80, v81, v82, v83, v84, v85, v131);
        unsigned __int16 v86 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    uint64_t v68 = v34 + 1;
    *((_WORD *)a2 + 6) = v34 + 1;
    if (v21 <= (unsigned __int16)(v34 + 1))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get the data length of the LE periodic advertising report event", v95, v96, v97, v98, v99, v100, v101, v131);
        uint64_t v102 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    char v69 = *(unsigned char *)(v23 + v34);
    *((_WORD *)a2 + 6) = v34 + 2;
    uint64_t v70 = *(unsigned __int8 *)(v23 + v68);
    if (v70 >= 0xF8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Too many data bytes in the LE extended advertising report event.", v71, v72, v73, v74, v75, v76, v77, v131);
        uint64_t v78 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
          goto LABEL_56;
        }
      }
      return;
    }
    if (*(unsigned char *)(v23 + v68))
    {
      uint64_t v111 = sub_100022FE8(*(unsigned __int8 *)(v23 + v68));
      if (v111)
      {
        if (*((unsigned char *)a2 + 14) != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 820, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        uint64_t v112 = v111;
        uint64_t v132 = *((unsigned __int16 *)a2 + 6);
        uint64_t v133 = *a2;
        if (*((unsigned char *)a2 + 15))
        {
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
          int v113 = 0;
        }
        else
        {
          int v113 = *((unsigned __int16 *)a2 + 5) - *((unsigned __int16 *)a2 + 6);
        }
        if (v113 < (int)v70)
        {
          *((unsigned char *)a2 + 15) = 1;
          goto LABEL_74;
        }
        uint64_t v122 = 0;
        do
        {
          v112[v122] = *(unsigned char *)(v133 + v132 + v122);
          ++v122;
        }
        while (&v112[v122] < &v112[v70]);
        *((_WORD *)a2 + 6) += v70;
        if (*((unsigned char *)a2 + 15))
        {
LABEL_74:
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get the data of the LE periodic advertising report event", v123, v124, v125, v126, v127, v128, v129, v131);
            uint64_t v130 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          goto LABEL_77;
        }
LABEL_66:
        unsigned __int16 v134 = v24;
        char v135 = v25;
        char v136 = v26;
        char v137 = v28;
        char v138 = 0;
        __int16 v139 = v33;
        char v140 = v35;
        char v141 = v69;
        char v142 = v70;
        int v143 = 0;
        char v144 = 0;
        uint64_t v145 = v112;
        sub_100109DAC(&v134);
        if (!v112) {
          return;
        }
LABEL_77:
        sub_100023010(v112);
        return;
      }
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not allocate memory for the LE periodic advertising report event", v114, v115, v116, v117, v118, v119, v120, v131);
        uint64_t v121 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v121, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    uint64_t v112 = 0;
    goto LABEL_66;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid periodic advertising report event packet size : %d, expecting at least %d", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
LABEL_56:
    }
      sub_100744F6C();
  }
}

void sub_100220578(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
    goto LABEL_8;
  }
  uint64_t v2 = *(unsigned __int16 *)(a1 + 12);
  uint64_t v1 = *(unsigned __int16 *)(a1 + 10) - v2;
  if (v1 != 2)
  {
LABEL_8:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid periodic advertising sync established event packet size : %d, expecting %d", v5, v6, v7, v8, v9, v10, v11, v1);
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  if (*(unsigned char *)(a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 850, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  __int16 v3 = v2 + 2;
  int v4 = *(unsigned __int16 *)(*(void *)a1 + v2);
  *(_WORD *)(a1 + 12) = v3;

  sub_100109D3C(v4);
}

void sub_100220678(int a1, uint64_t *a2)
{
  if (*((unsigned char *)a2 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *((unsigned __int16 *)a2 + 5) - *((unsigned __int16 *)a2 + 6);
  }
  *(int *)((char *)v157 + 3) = 0;
  v157[0] = 0;
  if (a1 != 1 || v4 == 19)
  {
    if (a1 == 1 && v4 != 23)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid periodic advertising sync transfer received event packet size : %d, expecting ", v13, v14, v15, v16, v17, v18, v19, v4);
        uint64_t v20 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
      }
      return;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 883, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    if (*((unsigned char *)a2 + 15))
    {
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_28:
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get status of LE periodic advertising sync transfer received event", v40, v41, v42, v43, v44, v45, v46, v153);
        uint64_t v47 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return;
    }
    unsigned int v21 = *((unsigned __int16 *)a2 + 5);
    uint64_t v22 = *((unsigned __int16 *)a2 + 6);
    if (v21 <= v22) {
      goto LABEL_28;
    }
    uint64_t v23 = *a2;
    *((_WORD *)a2 + 6) = v22 + 1;
    if ((int)(v21 - (v22 + 1)) <= 1)
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get connection_handle of LE periodic advertising sync transfer received event", v48, v49, v50, v51, v52, v53, v54, v153);
        uint64_t v55 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
      }
      return;
    }
    unsigned int v24 = *(unsigned __int8 *)(v23 + v22);
    unsigned __int16 v25 = *(_WORD *)(v23 + v22 + 1);
    *((_WORD *)a2 + 6) = v22 + 3;
    if ((int)(v21 - (unsigned __int16)(v22 + 3)) <= 1)
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get service_data of LE periodic advertising sync transfer received event", v56, v57, v58, v59, v60, v61, v62, v153);
        uint64_t v63 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
      }
      return;
    }
    __int16 v26 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 3));
    *((_WORD *)a2 + 6) = v22 + 5;
    if ((int)(v21 - (unsigned __int16)(v22 + 5)) <= 1)
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get sync_handle of LE periodic advertising sync transfer received event", v64, v65, v66, v67, v68, v69, v70, v153);
        uint64_t v71 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
      }
      return;
    }
    __int16 v27 = *(_WORD *)(v23 + (unsigned __int16)(v22 + 5));
    *((_WORD *)a2 + 6) = v22 + 7;
    if (v21 <= (unsigned __int16)(v22 + 7))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get advertising_SID of LE periodic advertising sync transfer received event", v72, v73, v74, v75, v76, v77, v78, v153);
        uint64_t v79 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
      }
      return;
    }
    unsigned __int16 v28 = v22 + 8;
    *((_WORD *)a2 + 6) = v22 + 8;
    if (v21 <= (unsigned __int16)(v22 + 8))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not get advertiser address_type of LE periodic advertising sync transfer received event", v80, v81, v82, v83, v84, v85, v86, v153);
        uint64_t v87 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
      }
      return;
    }
    char v29 = *(unsigned char *)(v23 + (unsigned __int16)(v22 + 7));
    unsigned __int16 v30 = v22 + 9;
    *((_WORD *)a2 + 6) = v30;
    LOBYTE(v157[0]) = *(unsigned char *)(v23 + v28);
    if ((int)(v21 - v30) <= 5) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 895, "ByteStream_NumReadBytesAvail(*pBs) >= OI_BD_ADDR_BYTE_SIZE");
    }
    sub_100008A18((uint64_t)v157 + 1, v23 + v30, 6uLL);
    __int16 v31 = *((_WORD *)a2 + 6);
    *((_WORD *)a2 + 6) = v31 + 6;
    if (*((unsigned char *)a2 + 15))
    {
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get advertiser address of LE periodic advertising sync transfer received event", v32, v33, v34, v35, v36, v37, v38, v153);
      uint64_t v39 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_79;
    }
    if (*((unsigned char *)a2 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 897, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v88 = *((unsigned __int16 *)a2 + 5);
    if (v88 <= (unsigned __int16)(v31 + 6))
    {
      *((unsigned char *)a2 + 15) = 1;
      if (!sub_100058654()) {
        return;
      }
      sub_100056E24((uint64_t)"Could not get advertiser_PHY of LE periodic advertising sync transfer received event", v95, v96, v97, v98, v99, v100, v101, v153);
      uint64_t v102 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
        return;
      }
    }
    else
    {
      uint64_t v89 = *a2;
      *((_WORD *)a2 + 6) = v31 + 7;
      if ((int)(v88 - (unsigned __int16)(v31 + 7)) <= 1)
      {
        *((unsigned char *)a2 + 15) = 1;
        if (!sub_100058654()) {
          return;
        }
        sub_100056E24((uint64_t)"Could not get Periodic_Advertising_Interval of LE periodic advertising sync transfer received event", v103, v104, v105, v106, v107, v108, v109, v153);
        uint64_t v110 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
          return;
        }
      }
      else
      {
        int v90 = *(unsigned __int8 *)(v89 + (unsigned __int16)(v31 + 6));
        __int16 v91 = *(_WORD *)(v89 + (unsigned __int16)(v31 + 7));
        *((_WORD *)a2 + 6) = v31 + 9;
        if (v88 <= (unsigned __int16)(v31 + 9))
        {
          *((unsigned char *)a2 + 15) = 1;
          if (!sub_100058654()) {
            return;
          }
          sub_100056E24((uint64_t)"Could not get Advertiser_Clock_Accuracy of LE periodic advertising sync transfer received event", v111, v112, v113, v114, v115, v116, v117, v153);
          uint64_t v118 = sub_100050B4C(0x42u);
          if (!os_log_type_enabled(v118, OS_LOG_TYPE_ERROR)) {
            return;
          }
        }
        else
        {
          int v156 = v90;
          *((_WORD *)a2 + 6) = v31 + 10;
          char v92 = *(unsigned char *)(v89 + (unsigned __int16)(v31 + 9));
          if (a1 != 2)
          {
            char v154 = 0;
            char v155 = 0;
            char v93 = 0;
            char v94 = 0;
            goto LABEL_67;
          }
          if (v88 <= (unsigned __int16)(v31 + 10))
          {
            *((unsigned char *)a2 + 15) = 1;
            if (!sub_100058654()) {
              return;
            }
            sub_100056E24((uint64_t)"Could not get Number_Subevents of LE periodic advertising sync transfer received event", v121, v122, v123, v124, v125, v126, v127, v153);
            uint64_t v128 = sub_100050B4C(0x42u);
            if (!os_log_type_enabled(v128, OS_LOG_TYPE_ERROR)) {
              return;
            }
          }
          else
          {
            *((_WORD *)a2 + 6) = v31 + 11;
            if (v88 <= (unsigned __int16)(v31 + 11))
            {
              *((unsigned char *)a2 + 15) = 1;
              if (!sub_100058654()) {
                return;
              }
              sub_100056E24((uint64_t)"Could not get Subevent_Interval of LE periodic advertising sync transfer received event", v129, v130, v131, v132, v133, v134, v135, v153);
              char v136 = sub_100050B4C(0x42u);
              if (!os_log_type_enabled(v136, OS_LOG_TYPE_ERROR)) {
                return;
              }
            }
            else
            {
              char v155 = *(unsigned char *)(v89 + (unsigned __int16)(v31 + 10));
              *((_WORD *)a2 + 6) = v31 + 12;
              if (v88 <= (unsigned __int16)(v31 + 12))
              {
                *((unsigned char *)a2 + 15) = 1;
                if (!sub_100058654()) {
                  return;
                }
                sub_100056E24((uint64_t)"Could not get Response_Slot_Delay of LE periodic advertising sync transfer received event", v137, v138, v139, v140, v141, v142, v143, v153);
                char v144 = sub_100050B4C(0x42u);
                if (!os_log_type_enabled(v144, OS_LOG_TYPE_ERROR)) {
                  return;
                }
              }
              else
              {
                char v154 = *(unsigned char *)(v89 + (unsigned __int16)(v31 + 11));
                *((_WORD *)a2 + 6) = v31 + 13;
                if (v88 > (unsigned __int16)(v31 + 13))
                {
                  char v93 = *(unsigned char *)(v89 + (unsigned __int16)(v31 + 12));
                  *((_WORD *)a2 + 6) = v31 + 14;
                  char v94 = *(unsigned char *)(v89 + (unsigned __int16)(v31 + 13));
LABEL_67:
                  uint64_t v119 = sub_100197864(v25);
                  uint64_t v120 = sub_1000262CC(v24);
                  sub_100109E24(v120, (uint64_t)v119, v26, v27, v29, v157, v156, v91, v92, v155, v154, v93, v94);
                  return;
                }
                *((unsigned char *)a2 + 15) = 1;
                if (!sub_100058654()) {
                  return;
                }
                sub_100056E24((uint64_t)"Could not get Response_Slot_Spacing of LE periodic advertising sync transfer received event", v145, v146, v147, v148, v149, v150, v151, v153);
                uint64_t v152 = sub_100050B4C(0x42u);
                if (!os_log_type_enabled(v152, OS_LOG_TYPE_ERROR)) {
                  return;
                }
              }
            }
          }
        }
      }
    }
LABEL_79:
    sub_100744F6C();
    return;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid periodic advertising sync transfer received event packet size : %d, expecting ", v5, v6, v7, v8, v9, v10, v11, v4);
    uint64_t v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
LABEL_46:
    }
      sub_100744F6C();
  }
}

void sub_100220E1C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 936, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    if (v2 > v3)
    {
      uint64_t v4 = *a1;
      *((_WORD *)a1 + 6) = v3 + 1;
      if ((int)(v2 - (v3 + 1)) <= 1)
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get connection_handle of tx power report  event", v21, v22, v23, v24, v25, v26, v27, v69);
          unsigned __int16 v28 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        uint64_t v5 = *(unsigned __int8 *)(v4 + v3);
        unsigned __int16 v6 = *(_WORD *)(v4 + v3 + 1);
        *((_WORD *)a1 + 6) = v3 + 3;
        if (v2 <= (unsigned __int16)(v3 + 3))
        {
          *((unsigned char *)a1 + 15) = 1;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get reason of tx power report  event", v29, v30, v31, v32, v33, v34, v35, v69);
            uint64_t v36 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
              goto LABEL_17;
            }
          }
        }
        else
        {
          *((_WORD *)a1 + 6) = v3 + 4;
          if (v2 <= (unsigned __int16)(v3 + 4))
          {
            *((unsigned char *)a1 + 15) = 1;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not get phy of tx power report  event", v37, v38, v39, v40, v41, v42, v43, v69);
              uint64_t v44 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
                goto LABEL_17;
              }
            }
          }
          else
          {
            char v7 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 3));
            *((_WORD *)a1 + 6) = v3 + 5;
            if (v2 <= (unsigned __int16)(v3 + 5))
            {
              *((unsigned char *)a1 + 15) = 1;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Could not get TX_Power_Level of tx power report  event", v45, v46, v47, v48, v49, v50, v51, v69);
                uint64_t v52 = sub_100050B4C(0x42u);
                if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_17;
                }
              }
            }
            else
            {
              char v8 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 4));
              *((_WORD *)a1 + 6) = v3 + 6;
              if (v2 <= (unsigned __int16)(v3 + 6))
              {
                *((unsigned char *)a1 + 15) = 1;
                if (sub_100058654())
                {
                  sub_100056E24((uint64_t)"Could not get TX_Power_Level_Flag of tx power report  event", v53, v54, v55, v56, v57, v58, v59, v69);
                  uint64_t v60 = sub_100050B4C(0x42u);
                  if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_17;
                  }
                }
              }
              else
              {
                char v9 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 5));
                *((_WORD *)a1 + 6) = v3 + 7;
                if (v2 <= (unsigned __int16)(v3 + 7))
                {
                  *((unsigned char *)a1 + 15) = 1;
                  if (sub_100058654())
                  {
                    sub_100056E24((uint64_t)"Could not get delta of tx power report  event", v61, v62, v63, v64, v65, v66, v67, v69);
                    uint64_t v68 = sub_100050B4C(0x42u);
                    if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_17;
                    }
                  }
                }
                else
                {
                  char v10 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 6));
                  *((_WORD *)a1 + 6) = v3 + 8;
                  char v11 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 7));
                  __int16 v12 = v6;
                  if (sub_100197864(v6))
                  {
                    sub_10021D01C(v5, v12, v7, v8, v9, v10, v11);
                  }
                }
              }
            }
          }
        }
      }
      return;
    }
  }
  *((unsigned char *)a1 + 15) = 1;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not get status tx power report  event", v13, v14, v15, v16, v17, v18, v19, v69);
    uint64_t v20 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
LABEL_17:
    }
      sub_100744F6C();
  }
}

void sub_100221198(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v2 - v3;
    if (v1 == 25)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1360, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v4 = *a1;
      unsigned __int16 v5 = *(_WORD *)(*a1 + v3);
      *((_WORD *)a1 + 6) = v3 + 2;
      if (v2 <= (unsigned __int16)(v3 + 2))
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the status of the read remote used features event", v35, v36, v37, v38, v39, v40, v41, v43);
          uint64_t v42 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
            goto LABEL_25;
          }
        }
      }
      else
      {
        *((_WORD *)a1 + 6) = v3 + 3;
        if (v2 <= (unsigned __int16)(v3 + 3)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1364, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned int v6 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 2));
        *((_WORD *)a1 + 6) = v3 + 4;
        if ((int)(v2 - (unsigned __int16)(v3 + 4)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1365, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        int v7 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 3));
        unsigned __int16 v8 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 4));
        *((_WORD *)a1 + 6) = v3 + 6;
        if (v2 <= (unsigned __int16)(v3 + 6)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1366, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        *((_WORD *)a1 + 6) = v3 + 7;
        if (v2 <= (unsigned __int16)(v3 + 7)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1367, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        int v9 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 6));
        *((_WORD *)a1 + 6) = v3 + 8;
        if (v2 <= (unsigned __int16)(v3 + 8)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1368, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        int v10 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 7));
        *((_WORD *)a1 + 6) = v3 + 9;
        if (v2 <= (unsigned __int16)(v3 + 9)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1369, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        int v11 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 8));
        *((_WORD *)a1 + 6) = v3 + 10;
        if (v2 <= (unsigned __int16)(v3 + 10)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1370, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        int v12 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 9));
        *((_WORD *)a1 + 6) = v3 + 11;
        if (v2 <= (unsigned __int16)(v3 + 11)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1371, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned __int8 v13 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 10));
        *((_WORD *)a1 + 6) = v3 + 12;
        if (v2 <= (unsigned __int16)(v3 + 12)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1372, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned __int8 v14 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 11));
        *((_WORD *)a1 + 6) = v3 + 13;
        if (v2 <= (unsigned __int16)(v3 + 13)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1373, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned __int8 v15 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 12));
        *((_WORD *)a1 + 6) = v3 + 14;
        if ((int)(v2 - (unsigned __int16)(v3 + 14)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1374, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        unsigned __int8 v16 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 13));
        unsigned __int16 v17 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 14));
        *((_WORD *)a1 + 6) = v3 + 16;
        if ((int)(v2 - (unsigned __int16)(v3 + 16)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1375, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        unsigned __int16 v18 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 16));
        *((_WORD *)a1 + 6) = v3 + 18;
        if ((int)(v2 - (unsigned __int16)(v3 + 18)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1376, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        unsigned __int16 v19 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 18));
        *((_WORD *)a1 + 6) = v3 + 20;
        if ((int)(v2 - (unsigned __int16)(v3 + 20)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1377, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        unsigned __int16 v20 = *(_WORD *)(v4 + (unsigned __int16)(v3 + 20));
        *((_WORD *)a1 + 6) = v3 + 22;
        if ((int)(v2 - (unsigned __int16)(v3 + 22)) <= 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1378, "ByteStream_NumReadBytesAvail(*pBs) >= 2");
        }
        unsigned __int8 v44 = v14;
        unsigned __int8 v45 = v13;
        int v49 = v11;
        int v50 = v12;
        int v47 = v9;
        int v48 = v10;
        int v46 = v7;
        uint64_t v21 = (unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 22));
        __int16 v22 = *v21;
        __int16 v23 = v21[1];
        *((_WORD *)a1 + 6) = v3 + 24;
        if (v2 <= (unsigned __int16)(v3 + 24)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1379, "ByteStream_NumReadBytesAvail(*pBs) >= 1");
        }
        unsigned __int16 v24 = v22 | (v23 << 8);
        *((_WORD *)a1 + 6) = v3 + 25;
        unsigned __int8 v25 = *(unsigned char *)(v4 + (unsigned __int16)(v3 + 24));
        uint64_t v26 = sub_1000262CC(v6);
        sub_10021D100(v5, v26, v46, v8, v47, v48, v49, v50, v45, v44, v15, v16, v17, v18, v19, v20, v24, v25);
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the capabilites packet : %d expecting at least %d", v27, v28, v29, v30, v31, v32, v33, v1);
    uint64_t v34 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
LABEL_25:
    }
      sub_100744F6C();
  }
}

void sub_100221678(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v2 - v3;
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    if (v1 == 75)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1397, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v4 = *a1;
      unsigned __int16 v5 = *(_WORD *)(*a1 + v3);
      *((_WORD *)a1 + 6) = v3 + 2;
      if (v2 <= (unsigned __int16)(v3 + 2))
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the status of the read remote used features event", v17, v18, v19, v20, v21, v22, v23, v26);
          unsigned __int16 v24 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        *((_WORD *)a1 + 6) = v3 + 3;
        uint64_t v6 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 2));
        if ((int)(v2 - (unsigned __int16)(v3 + 3)) < 72)
        {
          *((unsigned char *)a1 + 15) = 1;
        }
        else
        {
          uint64_t v7 = 0;
          uint64_t v8 = v4 + (unsigned __int16)(v3 + 3);
          do
          {
            *((unsigned char *)v27 + v7) = *(unsigned char *)(v8 + v7);
            ++v7;
          }
          while (v7 != 72);
          *((_WORD *)a1 + 6) = v3 + 75;
        }
        unsigned __int8 v25 = sub_100197864(v5);
        sub_100225A44(v6, (uint64_t)v25, (uint64_t)v27);
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the capabilites packet : %d expecting at least %d", v9, v10, v11, v12, v13, v14, v15, v1);
    unsigned __int8 v16 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
LABEL_12:
    }
      sub_100744F6C();
  }
}

void sub_100221850(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v2 - v3;
    if (v1 == 3)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1419, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      uint64_t v4 = *a1;
      unsigned __int16 v5 = (unsigned __int8 *)(*a1 + v3);
      int v6 = *v5;
      int v7 = v5[1];
      *((_WORD *)a1 + 6) = v3 + 2;
      if (v2 <= (unsigned __int16)(v3 + 2))
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the status of the read remote used features event", v18, v19, v20, v21, v22, v23, v24, v26);
          unsigned __int8 v25 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
            goto LABEL_11;
          }
        }
      }
      else
      {
        *((_WORD *)a1 + 6) = v3 + 3;
        uint64_t v8 = *(unsigned __int8 *)(v4 + (unsigned __int16)(v3 + 2));
        uint64_t v9 = sub_100197864(v6 | (v7 << 8));
        sub_100225AC8(v8, (uint64_t)v9);
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data for security enable complete event : %d expecting at least %d", v10, v11, v12, v13, v14, v15, v16, v1);
    uint64_t v17 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
LABEL_11:
    }
      sub_100744F6C();
  }
}

void sub_1002219C8(uint64_t *a1)
{
  if (!*((unsigned char *)a1 + 15))
  {
    unsigned int v3 = *((unsigned __int16 *)a1 + 5);
    uint64_t v4 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v3 - v4;
    if (v1 != 74) {
      goto LABEL_16;
    }
    if (*((unsigned char *)a1 + 14) != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1450, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v5 = *a1;
    unsigned __int16 v6 = *(_WORD *)(*a1 + v4);
    *((_WORD *)a1 + 6) = v4 + 2;
    if (v3 <= (unsigned __int16)(v4 + 2))
    {
      *((unsigned char *)a1 + 15) = 1;
      sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    }
    else
    {
      *((_WORD *)a1 + 6) = v4 + 3;
      if (v3 > (unsigned __int16)(v4 + 3))
      {
        uint64_t v7 = *(unsigned __int8 *)(v5 + (unsigned __int16)(v4 + 2));
        *((_WORD *)a1 + 6) = v4 + 4;
        uint64_t v8 = *(unsigned __int8 *)(v5 + (unsigned __int16)(v4 + 3));
        if (v3 <= (unsigned __int16)(v4 + 4))
        {
          unsigned __int16 v39 = v6;
          *((unsigned char *)a1 + 15) = 1;
          sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
          int v40 = *((unsigned __int8 *)a1 + 14);
          *((unsigned char *)a1 + 15) = 1;
          if (v40 != 1) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1457, "(*pBs).__RWFlag == BYTESTREAM_READ");
          }
          uint64_t v9 = 0;
        }
        else
        {
          *((_WORD *)a1 + 6) = v4 + 5;
          uint64_t v9 = *(unsigned __int8 *)(v5 + (unsigned __int16)(v4 + 4));
          if (v3 > (unsigned __int16)(v4 + 5))
          {
            *((_WORD *)a1 + 6) = v4 + 6;
            uint64_t v10 = *(unsigned __int8 *)(v5 + (unsigned __int16)(v4 + 5));
            if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v4 + 6))
            {
              uint64_t v11 = *a1;
              *((_WORD *)a1 + 6) = v4 + 7;
              int v12 = *(unsigned __int8 *)(v11 + (unsigned __int16)(v4 + 6));
              if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v4 + 7))
              {
                uint64_t v13 = *a1;
                *((_WORD *)a1 + 6) = v4 + 8;
                unsigned int v14 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v4 + 7));
                if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v4 + 8))
                {
                  uint64_t v15 = *a1;
                  *((_WORD *)a1 + 6) = v4 + 9;
                  unsigned int v16 = *(unsigned __int8 *)(v15 + (unsigned __int16)(v4 + 8));
                  if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v4 + 9))
                  {
                    uint64_t v17 = *a1;
                    *((_WORD *)a1 + 6) = v4 + 10;
                    char v18 = *(unsigned char *)(v17 + (unsigned __int16)(v4 + 9));
                    unsigned int v49 = v16;
                    if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v4 + 10))
                    {
                      uint64_t v19 = *a1;
                      *((_WORD *)a1 + 6) = v4 + 11;
                      char v20 = *(unsigned char *)(v19 + (unsigned __int16)(v4 + 10));
                      if (*((unsigned __int16 *)a1 + 5) > (unsigned __int16)(v4 + 11))
                      {
                        uint64_t v21 = *a1;
                        *((_WORD *)a1 + 6) = v4 + 12;
                        char v22 = *(unsigned char *)(v21 + (unsigned __int16)(v4 + 11));
LABEL_39:
                        int v46 = sub_100197864(v6);
                        HIBYTE(v48) = v20;
                        LOBYTE(v48) = v18;
                        sub_100225B44(v8, (uint64_t)v46, v7, v9, v10, v12, v14, v49, v48, v22);
                        return;
                      }
LABEL_38:
                      char v22 = 0;
                      *((unsigned char *)a1 + 15) = 1;
                      goto LABEL_39;
                    }
                    unsigned __int16 v39 = v6;
                    *((unsigned char *)a1 + 15) = 1;
LABEL_37:
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
                    char v20 = 0;
                    unsigned __int16 v6 = v39;
                    goto LABEL_38;
                  }
                  unsigned __int16 v39 = v6;
                  *((unsigned char *)a1 + 15) = 1;
LABEL_35:
                  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
                  int v45 = *((unsigned __int8 *)a1 + 14);
                  *((unsigned char *)a1 + 15) = 1;
                  if (v45 != 1) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1462, "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
                  unsigned int v49 = v16;
                  char v18 = 0;
                  goto LABEL_37;
                }
                unsigned __int16 v39 = v6;
                *((unsigned char *)a1 + 15) = 1;
LABEL_33:
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
                int v44 = *((unsigned __int8 *)a1 + 14);
                *((unsigned char *)a1 + 15) = 1;
                if (v44 != 1) {
                  sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1461, "(*pBs).__RWFlag == BYTESTREAM_READ");
                }
                unsigned int v16 = 0;
                goto LABEL_35;
              }
              unsigned __int16 v39 = v6;
              *((unsigned char *)a1 + 15) = 1;
LABEL_31:
              sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
              int v43 = *((unsigned __int8 *)a1 + 14);
              *((unsigned char *)a1 + 15) = 1;
              if (v43 != 1) {
                sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1460, "(*pBs).__RWFlag == BYTESTREAM_READ");
              }
              unsigned int v14 = 0;
              goto LABEL_33;
            }
            unsigned __int16 v39 = v6;
            *((unsigned char *)a1 + 15) = 1;
LABEL_29:
            sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
            int v42 = *((unsigned __int8 *)a1 + 14);
            *((unsigned char *)a1 + 15) = 1;
            if (v42 != 1) {
              sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1459, "(*pBs).__RWFlag == BYTESTREAM_READ");
            }
            int v12 = 0;
            goto LABEL_31;
          }
          unsigned __int16 v39 = v6;
          *((unsigned char *)a1 + 15) = 1;
        }
        sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
        int v41 = *((unsigned __int8 *)a1 + 14);
        *((unsigned char *)a1 + 15) = 1;
        if (v41 != 1) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1458, "(*pBs).__RWFlag == BYTESTREAM_READ");
        }
        uint64_t v10 = 0;
        goto LABEL_29;
      }
    }
    *((unsigned char *)a1 + 15) = 1;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not get the status of the read remote used features event", v31, v32, v33, v34, v35, v36, v37, v47);
      uint64_t v38 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
        goto LABEL_18;
      }
    }
    return;
  }
  sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
  uint64_t v1 = 0;
LABEL_16:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the capabilites packet : %d expecting at least %d", v23, v24, v25, v26, v27, v28, v29, v1);
    uint64_t v30 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
LABEL_18:
    }
      sub_100744F6C();
  }
}

void sub_100221EDC(uint64_t *a1)
{
  memset(v74, 0, sizeof(v74));
  memset(v73, 0, sizeof(v73));
  memset(v72, 0, sizeof(v72));
  memset(v71, 0, sizeof(v71));
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1491, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    goto LABEL_9;
  }
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) - (int)v2 <= 1)
  {
LABEL_9:
    *((unsigned char *)a1 + 15) = 1;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not get the connection handle of the read remote used features event", v7, v8, v9, v10, v11, v12, v13, v66);
      unsigned int v14 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  int v3 = *(unsigned __int16 *)(*a1 + v2);
  *((_WORD *)a1 + 6) = v2 + 2;
  uint64_t v4 = sub_100197864(v3);
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1494, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v5 = (uint64_t)v4;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v6 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v6 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1495, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_23;
  }
  uint64_t v15 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) <= v15)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_23:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v35 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v35 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1496, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v17 = 0;
    goto LABEL_25;
  }
  uint64_t v16 = *a1;
  *((_WORD *)a1 + 6) = v15 + 1;
  uint64_t v17 = *(unsigned __int8 *)(v16 + v15);
  if (*((unsigned __int16 *)a1 + 5) - ((int)v15 + 1) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_25:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v36 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v36 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1497, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v18 = 0;
    goto LABEL_27;
  }
  unsigned int v18 = *(unsigned __int8 *)(*a1 + v15 + 1);
  *((_WORD *)a1 + 6) = v15 + 3;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v15 + 3) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_27:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v37 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v37 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1498, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v19 = 0;
    goto LABEL_29;
  }
  unsigned int v19 = *(unsigned __int8 *)(*a1 + (unsigned __int16)(v15 + 3));
  *((_WORD *)a1 + 6) = v15 + 5;
  if (*((unsigned __int16 *)a1 + 5) <= (unsigned __int16)(v15 + 5))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_29:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v38 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v38 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1499, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v21 = 0;
    goto LABEL_31;
  }
  uint64_t v20 = *a1;
  *((_WORD *)a1 + 6) = v15 + 6;
  unsigned int v21 = *(unsigned __int8 *)(v20 + (unsigned __int16)(v15 + 5));
  if (*((unsigned __int16 *)a1 + 5) <= (unsigned __int16)(v15 + 6))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_31:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v39 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v39 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1500, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v23 = 0;
    goto LABEL_33;
  }
  uint64_t v22 = *a1;
  *((_WORD *)a1 + 6) = v15 + 7;
  unsigned int v23 = *(unsigned __int8 *)(v22 + (unsigned __int16)(v15 + 6));
  if (*((unsigned __int16 *)a1 + 5) <= (unsigned __int16)(v15 + 7))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_33:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v40 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v40 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1501, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v25 = 0;
    goto LABEL_35;
  }
  uint64_t v24 = *a1;
  *((_WORD *)a1 + 6) = v15 + 8;
  unsigned int v25 = *(unsigned __int8 *)(v24 + (unsigned __int16)(v15 + 7));
  if (*((unsigned __int16 *)a1 + 5) <= (unsigned __int16)(v15 + 8))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_35:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v41 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v41 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1503, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v69 = v23;
    unsigned int v70 = v21;
    unsigned int v67 = v18;
    unsigned int v68 = v19;
    unsigned int v27 = 0;
    goto LABEL_37;
  }
  uint64_t v26 = *a1;
  *((_WORD *)a1 + 6) = v15 + 9;
  unsigned int v27 = *(unsigned __int8 *)(v26 + (unsigned __int16)(v15 + 8));
  unsigned int v69 = v23;
  unsigned int v70 = v21;
  unsigned int v67 = v18;
  unsigned int v68 = v19;
  if (*((unsigned __int16 *)a1 + 5) <= (unsigned __int16)(v15 + 9))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_37:
    unsigned int v30 = v27;
    unsigned int v31 = v25;
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    LODWORD(v29) = 0;
    goto LABEL_38;
  }
  uint64_t v28 = *a1;
  *((_WORD *)a1 + 6) = v15 + 10;
  uint64_t v29 = *(unsigned __int8 *)(v28 + (unsigned __int16)(v15 + 9));
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v15 + 10) >= (int)v29)
  {
    if (*(unsigned char *)(v28 + (unsigned __int16)(v15 + 9)))
    {
      unsigned int v30 = v27;
      unsigned int v31 = v25;
      uint64_t v63 = (char *)(v28 + (unsigned __int16)(v15 + 10));
      uint64_t v64 = v74;
      do
      {
        char v65 = *v63++;
        *v64++ = v65;
      }
      while (v64 < (unsigned char *)v74 + v29);
      int v33 = v29;
      uint64_t v42 = v29;
      goto LABEL_39;
    }
    unsigned int v30 = v27;
    unsigned int v31 = v25;
LABEL_38:
    int v33 = 0;
    uint64_t v42 = 0;
LABEL_39:
    int v34 = v29;
    unsigned __int16 v32 = *((_WORD *)a1 + 6) + v29;
    *((_WORD *)a1 + 6) = v32;
    uint64_t v29 = v42;
    goto LABEL_40;
  }
  unsigned int v30 = v27;
  unsigned int v31 = v25;
  *((unsigned char *)a1 + 15) = 1;
  unsigned __int16 v32 = *((_WORD *)a1 + 6);
  int v33 = v29;
  int v34 = v29;
LABEL_40:
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1504, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v43 = *a1;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v44 = 0;
  }
  else
  {
    int v44 = *((unsigned __int16 *)a1 + 5) - v32;
  }
  if (v44 >= v33)
  {
    if (v34)
    {
      int v46 = (char *)(v43 + v32);
      uint64_t v47 = v73;
      do
      {
        char v48 = *v46++;
        *v47++ = v48;
      }
      while (v47 < (unsigned char *)v73 + v29);
    }
    unsigned __int16 v45 = *((_WORD *)a1 + 6) + v34;
    *((_WORD *)a1 + 6) = v45;
  }
  else
  {
    *((unsigned char *)a1 + 15) = 1;
    unsigned __int16 v45 = *((_WORD *)a1 + 6);
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1505, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v49 = *a1;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v50 = 0;
  }
  else
  {
    int v50 = *((unsigned __int16 *)a1 + 5) - v45;
  }
  if (v50 >= v33)
  {
    if (v34)
    {
      uint64_t v51 = (char *)(v49 + v45);
      uint64_t v52 = v72;
      do
      {
        char v53 = *v51++;
        *v52++ = v53;
      }
      while (v52 < (unsigned char *)v72 + v29);
    }
    *((_WORD *)a1 + 6) += v34;
  }
  else
  {
    *((unsigned char *)a1 + 15) = 1;
  }
  unsigned __int16 v54 = 0;
  if (v34)
  {
    uint64_t v55 = (unsigned __int8 *)v72;
    do
    {
      __int16 v56 = *v55++;
      v54 += v56;
      --v29;
    }
    while (v29);
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1510, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v57 = *a1;
  uint64_t v58 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v59 = 0;
  }
  else
  {
    int v59 = *((unsigned __int16 *)a1 + 5) - v58;
  }
  if (v59 >= v54)
  {
    if (v54)
    {
      uint64_t v60 = (char *)(v57 + v58);
      uint64_t v61 = v71;
      do
      {
        char v62 = *v60++;
        *v61++ = v62;
      }
      while (v61 < (unsigned char *)v71 + v54);
    }
    *((_WORD *)a1 + 6) += v54;
  }
  else
  {
    *((unsigned char *)a1 + 15) = 1;
  }
  sub_100225C1C(v5, v17, v67, v68, v70, v69, v31, v30, v34, (uint64_t)v74, (uint64_t)v73, (uint64_t)v72, (uint64_t)v71);
}

void sub_100222728(uint64_t *a1)
{
  memset(v63, 0, sizeof(v63));
  memset(v62, 0, sizeof(v62));
  memset(v61, 0, sizeof(v61));
  memset(v60, 0, sizeof(v60));
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1530, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    goto LABEL_9;
  }
  uint64_t v2 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) - (int)v2 <= 1)
  {
LABEL_9:
    *((unsigned char *)a1 + 15) = 1;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not get the connection handle of the read remote used features event", v7, v8, v9, v10, v11, v12, v13, v58);
      unsigned int v14 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return;
  }
  int v3 = *(unsigned __int16 *)(*a1 + v2);
  *((_WORD *)a1 + 6) = v2 + 2;
  uint64_t v4 = sub_100197864(v3);
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1533, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v5 = v4;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v6 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v6 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1534, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_20;
  }
  uint64_t v15 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) <= v15)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_20:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v28 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v28 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1535, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v17 = 0;
    goto LABEL_22;
  }
  uint64_t v16 = *a1;
  *((_WORD *)a1 + 6) = v15 + 1;
  uint64_t v17 = *(unsigned __int8 *)(v16 + v15);
  if (*((unsigned __int16 *)a1 + 5) <= (v15 + 1))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_22:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v29 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v29 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1536, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v19 = 0;
    goto LABEL_24;
  }
  uint64_t v18 = *a1;
  *((_WORD *)a1 + 6) = v15 + 2;
  uint64_t v19 = *(unsigned __int8 *)(v18 + v15 + 1);
  if (*((unsigned __int16 *)a1 + 5) <= (v15 + 2))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_24:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v30 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v30 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1537, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v21 = 0;
    goto LABEL_26;
  }
  uint64_t v20 = *a1;
  *((_WORD *)a1 + 6) = v15 + 3;
  uint64_t v21 = *(unsigned __int8 *)(v20 + v15 + 2);
  if (*((unsigned __int16 *)a1 + 5) <= (v15 + 3))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_26:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v31 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v31 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1539, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned int v59 = 0;
    goto LABEL_28;
  }
  uint64_t v22 = *a1;
  *((_WORD *)a1 + 6) = v15 + 4;
  unsigned int v59 = *(unsigned __int8 *)(v22 + v15 + 3);
  if (*((unsigned __int16 *)a1 + 5) <= (v15 + 4))
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_28:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v24 = 0;
    goto LABEL_29;
  }
  uint64_t v23 = *a1;
  *((_WORD *)a1 + 6) = v15 + 5;
  uint64_t v24 = *(unsigned __int8 *)(v23 + v15 + 4);
  if (*((unsigned __int16 *)a1 + 5) - ((int)v15 + 5) >= (int)v24)
  {
    if (*(unsigned char *)(v23 + v15 + 4))
    {
      uint64_t v55 = (char *)(v23 + v15 + 5);
      __int16 v56 = v63;
      do
      {
        char v57 = *v55++;
        *v56++ = v57;
      }
      while (v56 < (unsigned char *)v63 + v24);
      int v26 = v24;
      uint64_t v32 = v24;
      goto LABEL_30;
    }
LABEL_29:
    int v26 = 0;
    uint64_t v32 = 0;
LABEL_30:
    uint64_t v27 = v24;
    unsigned __int16 v25 = *((_WORD *)a1 + 6) + v24;
    *((_WORD *)a1 + 6) = v25;
    uint64_t v24 = v32;
    goto LABEL_31;
  }
  *((unsigned char *)a1 + 15) = 1;
  unsigned __int16 v25 = *((_WORD *)a1 + 6);
  int v26 = v24;
  uint64_t v27 = v24;
LABEL_31:
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1540, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v33 = *a1;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v34 = 0;
  }
  else
  {
    int v34 = *((unsigned __int16 *)a1 + 5) - v25;
  }
  if (v34 >= v26)
  {
    if (v27)
    {
      int v36 = (char *)(v33 + v25);
      int v37 = v62;
      do
      {
        char v38 = *v36++;
        *v37++ = v38;
      }
      while (v37 < (unsigned char *)v62 + v24);
    }
    unsigned __int16 v35 = *((_WORD *)a1 + 6) + v27;
    *((_WORD *)a1 + 6) = v35;
  }
  else
  {
    *((unsigned char *)a1 + 15) = 1;
    unsigned __int16 v35 = *((_WORD *)a1 + 6);
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1541, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v39 = *a1;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v40 = 0;
  }
  else
  {
    int v40 = *((unsigned __int16 *)a1 + 5) - v35;
  }
  if (v40 >= v26)
  {
    if (v27)
    {
      uint64_t v42 = (char *)(v39 + v35);
      uint64_t v43 = v61;
      do
      {
        char v44 = *v42++;
        *v43++ = v44;
      }
      while (v43 < (unsigned char *)v61 + v24);
    }
    unsigned __int16 v41 = *((_WORD *)a1 + 6) + v27;
    *((_WORD *)a1 + 6) = v41;
  }
  else
  {
    *((unsigned char *)a1 + 15) = 1;
    unsigned __int16 v41 = *((_WORD *)a1 + 6);
  }
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1542, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  uint64_t v45 = *a1;
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v46 = 0;
  }
  else
  {
    int v46 = *((unsigned __int16 *)a1 + 5) - v41;
  }
  if (v46 >= v26)
  {
    uint64_t v47 = (uint64_t)v5;
    uint64_t v48 = v17;
    uint64_t v49 = v19;
    uint64_t v50 = v21;
    uint64_t v51 = v59;
    if (v27)
    {
      uint64_t v52 = (char *)(v45 + v41);
      char v53 = v60;
      do
      {
        char v54 = *v52++;
        *v53++ = v54;
      }
      while (v53 < (unsigned char *)v60 + v24);
    }
    *((_WORD *)a1 + 6) += v27;
  }
  else
  {
    *((unsigned char *)a1 + 15) = 1;
    uint64_t v47 = (uint64_t)v5;
    uint64_t v48 = v17;
    uint64_t v49 = v19;
    uint64_t v50 = v21;
    uint64_t v51 = v59;
  }
  sub_100225CEC(v47, v48, v49, v50, v51, v27, (uint64_t)v63, (uint64_t)v62, (uint64_t)v61, (uint64_t)v60);
}

void sub_100222DC4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 14) != 1) {
    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1315, "(*pBs).__RWFlag == BYTESTREAM_READ");
  }
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v2 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v2 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1316, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    goto LABEL_13;
  }
  uint64_t v3 = *((unsigned __int16 *)a1 + 6);
  if (*((unsigned __int16 *)a1 + 5) <= v3)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_13:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v11 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v11 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1317, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    uint64_t v5 = 0;
    goto LABEL_15;
  }
  uint64_t v4 = *a1;
  *((_WORD *)a1 + 6) = v3 + 1;
  uint64_t v5 = *(unsigned __int8 *)(v4 + v3);
  if (*((unsigned __int16 *)a1 + 5) - ((int)v3 + 1) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_15:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v12 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v12 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1318, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned __int16 v6 = 0;
    goto LABEL_17;
  }
  unsigned __int16 v6 = *(_WORD *)(*a1 + v3 + 1);
  *((_WORD *)a1 + 6) = v3 + 3;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v3 + 3) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_17:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v13 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v13 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1319, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned __int16 v7 = 0;
    goto LABEL_19;
  }
  unsigned __int16 v7 = *(_WORD *)(*a1 + (unsigned __int16)(v3 + 3));
  *((_WORD *)a1 + 6) = v3 + 5;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v3 + 5) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_19:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    int v14 = *((unsigned __int8 *)a1 + 14);
    *((unsigned char *)a1 + 15) = 1;
    if (v14 != 1) {
      sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 1320, "(*pBs).__RWFlag == BYTESTREAM_READ");
    }
    unsigned __int16 v8 = 0;
    goto LABEL_21;
  }
  unsigned __int16 v8 = *(_WORD *)(*a1 + (unsigned __int16)(v3 + 5));
  *((_WORD *)a1 + 6) = v3 + 7;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v3 + 7) <= 1)
  {
    *((unsigned char *)a1 + 15) = 1;
LABEL_21:
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    unsigned __int16 v9 = 0;
    goto LABEL_22;
  }
  unsigned __int16 v9 = *(_WORD *)(*a1 + (unsigned __int16)(v3 + 7));
  *((_WORD *)a1 + 6) = v3 + 9;
  if (*((unsigned __int16 *)a1 + 5) - (unsigned __int16)(v3 + 9) >= 2)
  {
    unsigned __int16 v10 = *(_WORD *)(*a1 + (unsigned __int16)(v3 + 9));
    *((_WORD *)a1 + 6) = v3 + 11;
    goto LABEL_23;
  }
LABEL_22:
  unsigned __int16 v10 = 0;
  *((unsigned char *)a1 + 15) = 1;
LABEL_23:
  if (sub_100197864(v6))
  {
    sub_10021AE04(v5, v6, v7, v8, v9, v10);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_HCIEventHandler_RemoteConnectionParameterRequest: Invalid connectionHandle for lmHandle 0x%2x", v15, v16, v17, v18, v19, v20, v21, v6);
    uint64_t v22 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_100223164(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v2 = *((unsigned __int16 *)a1 + 5);
    uint64_t v3 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v2 - v3;
    if (v1 == 3)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 521, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (v2 <= v3)
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the advertising handle of the LE Periodic Advertising Subevent Data Request event", v14, v15, v16, v17, v18, v19, v20, v38);
          uint64_t v21 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        uint64_t v4 = *a1;
        *((_WORD *)a1 + 6) = v3 + 1;
        if (v2 <= (int)v3 + 1)
        {
          *((unsigned char *)a1 + 15) = 1;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get the subevent start of the LE Periodic Advertising Subevent Data Request event", v22, v23, v24, v25, v26, v27, v28, v38);
            int v29 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
              goto LABEL_13;
            }
          }
        }
        else
        {
          uint64_t v5 = *(unsigned __int8 *)(v4 + v3);
          *((_WORD *)a1 + 6) = v3 + 2;
          if (v2 <= (int)v3 + 2)
          {
            *((unsigned char *)a1 + 15) = 1;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not get the subevent data count of the LE Periodic Advertising Subevent Data Request event", v30, v31, v32, v33, v34, v35, v36, v38);
              int v37 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
                goto LABEL_13;
              }
            }
          }
          else
          {
            *((_WORD *)a1 + 6) = v3 + 3;
            nullsub_95(v5);
          }
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid Periodic Advertising Subevent Data Request event packet size : %d, expecting %d", v6, v7, v8, v9, v10, v11, v12, v1);
    int v13 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
LABEL_13:
    }
      sub_100744F6C();
  }
}

void sub_10022336C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 15))
  {
    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
    uint64_t v1 = 0;
  }
  else
  {
    unsigned int v3 = *((unsigned __int16 *)a1 + 5);
    uint64_t v4 = *((unsigned __int16 *)a1 + 6);
    uint64_t v1 = v3 - v4;
    if (v1 > 0xA)
    {
      if (*((unsigned char *)a1 + 14) != 1) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 568, "(*pBs).__RWFlag == BYTESTREAM_READ");
      }
      if (v3 <= v4)
      {
        *((unsigned char *)a1 + 15) = 1;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not get the advertising handle of the LE Periodic Advertising Response Report event", v20, v21, v22, v23, v24, v25, v26, v84);
          uint64_t v27 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        uint64_t v13 = *a1;
        *((_WORD *)a1 + 6) = v4 + 1;
        if (v3 <= (int)v4 + 1)
        {
          *((unsigned char *)a1 + 15) = 1;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not get the subevent of the LE Periodic Advertising Response Report event", v28, v29, v30, v31, v32, v33, v34, v84);
            uint64_t v35 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
              goto LABEL_6;
            }
          }
        }
        else
        {
          uint64_t v14 = *(unsigned __int8 *)(v13 + v4);
          *((_WORD *)a1 + 6) = v4 + 2;
          if (v3 <= (int)v4 + 2)
          {
            *((unsigned char *)a1 + 15) = 1;
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not get the txStatus of the LE Periodic Advertising Response Report event", v36, v37, v38, v39, v40, v41, v42, v84);
              uint64_t v43 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
                goto LABEL_6;
              }
            }
          }
          else
          {
            uint64_t v15 = v4 + 3;
            *((_WORD *)a1 + 6) = v4 + 3;
            if (v3 <= (int)v4 + 3)
            {
              *((unsigned char *)a1 + 15) = 1;
              if (sub_100058654())
              {
                sub_100056E24((uint64_t)"Could not get the number of responses of the LE Periodic Advertising Response Report event", v44, v45, v46, v47, v48, v49, v50, v84);
                uint64_t v51 = sub_100050B4C(0x42u);
                if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_6;
                }
              }
            }
            else
            {
              *((_WORD *)a1 + 6) = v4 + 4;
              if (*(unsigned char *)(v13 + v15))
              {
                int v16 = *(unsigned __int8 *)(v13 + v15);
                while (1)
                {
                  if (*((unsigned char *)a1 + 14) != 1) {
                    sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c", 581, "(*pBs).__RWFlag == BYTESTREAM_READ");
                  }
                  if (*((unsigned char *)a1 + 15)) {
                    break;
                  }
                  unsigned int v17 = *((unsigned __int16 *)a1 + 5);
                  unsigned int v18 = *((unsigned __int16 *)a1 + 6);
                  if (v17 <= v18) {
                    goto LABEL_37;
                  }
                  *((_WORD *)a1 + 6) = v18 + 1;
                  if (v17 <= v18 + 1)
                  {
                    *((unsigned char *)a1 + 15) = 1;
                    if (!sub_100058654()) {
                      return;
                    }
                    sub_100056E24((uint64_t)"Could not get the address type of the LE advertising report event", v60, v61, v62, v63, v64, v65, v66, v84);
                    unsigned int v67 = sub_100050B4C(0x42u);
                    if (!os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
                      return;
                    }
                    goto LABEL_6;
                  }
                  *((_WORD *)a1 + 6) = v18 + 2;
                  if (v17 <= v18 + 2)
                  {
                    *((unsigned char *)a1 + 15) = 1;
                    if (!sub_100058654()) {
                      return;
                    }
                    sub_100056E24((uint64_t)"Could not get the address of the LE advertising report event", v68, v69, v70, v71, v72, v73, v74, v84);
                    uint64_t v75 = sub_100050B4C(0x42u);
                    if (!os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
                      return;
                    }
                    goto LABEL_6;
                  }
                  *((_WORD *)a1 + 6) = v18 + 3;
                  if (v17 <= v18 + 3)
                  {
                    *((unsigned char *)a1 + 15) = 1;
                    sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_47:
                    *((unsigned char *)a1 + 15) = 1;
                    if (!sub_100058654()) {
                      return;
                    }
                    sub_100056E24((uint64_t)"Could not get the dataLength of the LE advertising report event", v76, v77, v78, v79, v80, v81, v82, v84);
                    uint64_t v83 = sub_100050B4C(0x42u);
                    if (!os_log_type_enabled(v83, OS_LOG_TYPE_ERROR)) {
                      return;
                    }
                    goto LABEL_6;
                  }
                  *((_WORD *)a1 + 6) = v18 + 4;
                  if (v17 <= v18 + 4) {
                    goto LABEL_47;
                  }
                  *((_WORD *)a1 + 6) = v18 + 5;
                  uint64_t v19 = sub_100022FE8(0);
                  nullsub_95(v14);
                  sub_100023010(v19);
                  if (!--v16) {
                    return;
                  }
                }
                sub_10025A794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/le/LE_Events.c");
LABEL_37:
                *((unsigned char *)a1 + 15) = 1;
                if (!sub_100058654()) {
                  return;
                }
                sub_100056E24((uint64_t)"Could not get the event type of the LE advertising report event", v52, v53, v54, v55, v56, v57, v58, v84);
                unsigned int v59 = sub_100050B4C(0x42u);
                if (!os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
                  return;
                }
                goto LABEL_6;
              }
            }
          }
        }
      }
      return;
    }
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Not enough data in the packet : %d, expecting at least %d", v5, v6, v7, v8, v9, v10, v11, v1);
    uint64_t v12 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
LABEL_6:
    }
      sub_100744F6C();
  }
}

void sub_100223818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((int)a1 > 8258)
  {
    if ((int)a1 > 8317)
    {
      if (a1 == 8318)
      {
        if (a2)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to send connection subrating command: %!", v29, v30, v31, v32, v33, v34, v35, a2);
            uint64_t v36 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
              goto LABEL_36;
            }
          }
        }
        return;
      }
      if (a1 != 8325) {
        goto LABEL_34;
      }
    }
    else if (a1 != 8259)
    {
      if (a1 == 8260)
      {
        if (a2)
        {
          sub_100109AC0();
        }
        return;
      }
      goto LABEL_34;
    }
LABEL_24:
    BYTE4(v45) = 0;
    LODWORD(v45) = -256;
    ((void (*)(uint64_t, void, void, uint64_t, void, void, void, void, uint64_t))loc_10021AE70)(a2, 0, 0, a3, 0, 0, 0, 0, v45);
    return;
  }
  if ((int)a1 > 8213)
  {
    if (a1 == 8214)
    {
      if (a2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send remote used features: %!", v21, v22, v23, v24, v25, v26, v27, a2);
          uint64_t v28 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
            goto LABEL_36;
          }
        }
      }
      return;
    }
    if (a1 == 8242)
    {
      if (a2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send set phy: %!", v13, v14, v15, v16, v17, v18, v19, a2);
          uint64_t v20 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
            goto LABEL_36;
          }
        }
      }
      return;
    }
    goto LABEL_34;
  }
  if (a1 == 8205) {
    goto LABEL_24;
  }
  if (a1 != 8211)
  {
LABEL_34:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unknown LE event code 0x%x", v37, v38, v39, v40, v41, v42, v43, a1);
      uint64_t v44 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        goto LABEL_36;
      }
    }
    return;
  }
  if (a2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send connection update : %!", v5, v6, v7, v8, v9, v10, v11, a2);
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
LABEL_36:
      }
        sub_100745764();
    }
  }
}

void sub_100223A80(uint64_t a1, uint64_t a2)
{
  if (!a1 || !*(unsigned char *)(a1 + 125)) {
    return;
  }
  if ((int)a2 <= 760)
  {
    if (!a2)
    {
      if (*(unsigned char *)(a1 + 55)) {
        uint64_t v20 = (_DWORD *)(a1 + 56);
      }
      else {
        uint64_t v20 = (_DWORD *)(a1 + 48);
      }
      if (sub_100237AD0(v20) && *(_DWORD *)(a1 + 132)) {
        goto LABEL_35;
      }
      goto LABEL_21;
    }
    if (a2 != 634)
    {
      if (a2 == 706)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Encryption failed, peer removed keys, keepConnectedAfterFailedInitialEncryption=%d", v4, v5, v6, v7, v8, v9, v10, *(unsigned __int8 *)(a1 + 264));
          uint64_t v11 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        if (!*(unsigned char *)(a1 + 264))
        {
          *(_DWORD *)(a1 + 132) = 6;
          *(_DWORD *)(a1 + 140) = 4833;
          sub_100223D18(a1);
          return;
        }
      }
      goto LABEL_21;
    }
LABEL_13:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Encryption failed due to %!, aborting connection notifications, waiting for disconnection event", v12, v13, v14, v15, v16, v17, v18, a2);
      uint64_t v19 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return;
  }
  if ((a2 - 761) <= 1) {
    goto LABEL_13;
  }
LABEL_21:
  *(unsigned char *)(a1 + 125) = 0;
  if (*(unsigned char *)(a1 + 316))
  {
    if (*(_DWORD *)(a1 + 132) == 5) {
      sub_100223E64(a1, a2);
    }
LABEL_35:
    if (*(_DWORD *)(a1 + 132) == 5) {
      sub_100223E64(a1, 0);
    }
    return;
  }
  if (*(unsigned char *)(a1 + 70))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"FastLEConnection:Skipping LE_GAP_ReadRemoteVersionInformation on encryptionStartedCb", v21, v22, v23, v24, v25, v26, v27, v39);
      uint64_t v28 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v41 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    goto LABEL_35;
  }
  uint64_t v29 = sub_100223DC8(a1);
  if (!v29)
  {
    *(unsigned char *)(a1 + 126) = 1;
    if (*(_DWORD *)(a1 + 132) != 6) {
      *(_DWORD *)(a1 + 132) = 1;
    }
    goto LABEL_35;
  }
  uint64_t v30 = v29;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_GAP_ReadRemoteVersionInformation failed %!", v31, v32, v33, v34, v35, v36, v37, v30);
    uint64_t v38 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
  *(_DWORD *)(a1 + 132) = 5;
}

uint64_t sub_100223D18(uint64_t a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (a1 && sub_100197770(a1))
  {
    return sub_1002189B4(a1);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v3, v4, v5, v6, v7, v8, v9, v11);
      uint64_t v10 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
}

uint64_t sub_100223DC8(uint64_t a1)
{
  uint64_t v11 = a1;
  if (!a1) {
    return 1310;
  }
  uint64_t v1 = a1;
  if (!sub_100197770(a1)) {
    return 1310;
  }
  if (dword_100A0F404)
  {
    v10[1] = &v11;
    v10[0] = (const void *)8;
    uint64_t result = sub_1000268E4((uint64_t)sub_100229064, v10, (unsigned __int16)((dword_100A0F404 + 99) / 0x64u), 0);
    if (!result) {
      return result;
    }
    uint64_t v1 = v11;
  }
  return sub_10021ADB4(v1, v2, v3, v4, v5, v6, v7, v8);
}

void sub_100223E64(uint64_t a1, uint64_t a2)
{
  if (a1 && !a2)
  {
    uint64_t v24 = 0;
    sub_100026C30((uint64_t)&v24);
    *(_DWORD *)(a1 + 328) = sub_1002629B8((int *)(a1 + 320), (int *)&v24);
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LinkReady took %llums from connectionComplete", v4, v5, v6, v7, v8, v9, v10, *(unsigned int *)(a1 + 328));
      uint64_t v11 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v26 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    goto LABEL_12;
  }
  if (!a2)
  {
LABEL_12:
    unsigned int v21 = (unsigned __int16)word_100A0B110;
    if (word_100A0B110)
    {
      unint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void (**)(uint64_t, void, void))(qword_100A0B118[v22] + 40);
        if (v23)
        {
          v23(a1, 0, *(unsigned __int8 *)(a1 + 316));
          unsigned int v21 = (unsigned __int16)word_100A0B110;
        }
        ++v22;
      }
      while (v22 < v21);
    }
    goto LABEL_17;
  }
  if (a2 != 719 && *(unsigned char *)(a1 + 124) != 7)
  {
    if (sub_100058654())
    {
      sub_1001991F8(*(unsigned __int8 *)(a1 + 124));
      sub_100056E24((uint64_t)"GAP LinkReadyCB error with status %! during %s, not-disconnecting", v13, v14, v15, v16, v17, v18, v19, a2);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
LABEL_17:
  *(_DWORD *)(a1 + 132) = 7;
  *(unsigned char *)(a1 + 316) = 0;
}

uint64_t sub_100224014(uint64_t a1)
{
  __int16 v1 = word_100A0B110;
  uint64_t v2 = (unsigned __int16)word_100A0B110;
  if (word_100A0B110)
  {
    if (word_100A0B110 == 8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't add anymore callbacks.", v3, v4, v5, v6, v7, v8, v9, v14);
        uint64_t v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 4050;
    }
    else
    {
      unsigned __int8 v12 = 0;
      while (qword_100A0B118[v12] != a1)
      {
        if ((unsigned __int16)word_100A0B110 <= ++v12)
        {
          uint64_t v2 = v12;
          goto LABEL_11;
        }
      }
      return 0;
    }
  }
  else
  {
LABEL_11:
    uint64_t v11 = 0;
    qword_100A0B118[v2] = a1;
    word_100A0B110 = v1 + 1;
  }
  return v11;
}

uint64_t sub_1002240E0(uint64_t a1)
{
  __int16 v1 = word_100A0B158;
  uint64_t v2 = (unsigned __int16)word_100A0B158;
  if (word_100A0B158)
  {
    if (word_100A0B158 == 8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't add anymore callbacks.", v3, v4, v5, v6, v7, v8, v9, v14);
        uint64_t v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 4050;
    }
    else
    {
      unsigned __int8 v12 = 0;
      while (qword_100A0B160[v12] != a1)
      {
        if ((unsigned __int16)word_100A0B158 <= ++v12)
        {
          uint64_t v2 = v12;
          goto LABEL_11;
        }
      }
      return 0;
    }
  }
  else
  {
LABEL_11:
    uint64_t v11 = 0;
    qword_100A0B160[v2] = a1;
    word_100A0B158 = v1 + 1;
  }
  return v11;
}

uint64_t sub_1002241AC(uint64_t result)
{
  if (word_100A0B110)
  {
    unsigned __int8 v1 = 0;
    while (qword_100A0B118[v1] != result)
    {
      if ((unsigned __int16)word_100A0B110 <= ++v1) {
        return result;
      }
    }
    uint64_t v3 = qword_100A0B118[(unsigned __int16)--word_100A0B110];
    unsigned __int16 v2 = word_100A0B110;
    qword_100A0B118[v1] = v3;
    qword_100A0B118[v2] = 0;
  }
  return result;
}

void sub_100224200(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (byte_100A0B1A0 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection complete, we need to update our own address now", v8, v9, v10, v11, v12, v13, v14, v77);
      uint64_t v15 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_100224730();
  }
  if (a2)
  {
    if (*(unsigned char *)(a2 + 55)) {
      uint64_t v16 = (unsigned __int8 *)(a2 + 56);
    }
    else {
      uint64_t v16 = a1;
    }
    unint64_t v17 = ((unint64_t)v16[1] << 40) | ((unint64_t)v16[2] << 32) | ((unint64_t)v16[3] << 24) | ((unint64_t)v16[4] << 16) | ((unint64_t)v16[5] << 8) | v16[6] | ((unint64_t)*v16 << 48);
    if (sub_100224B2C(v17))
    {
      if (sub_100058654())
      {
        uint64_t v25 = *a1 ? "Random" : "Public";
        sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_IsFastLeConnectionEnabledForAddress enabled for %s:%:", v18, v19, v20, v21, v22, v23, v24, (uint64_t)v25);
        uint64_t v26 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v27 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          *(void *)&uint8_t buf[4] = v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      *(unsigned char *)(a2 + 316) = 1;
      *(unsigned char *)(a2 + 317) = sub_100224CE8(v17);
      *(unsigned char *)(a2 + 318) = sub_100224ED8(v17);
    }
    if (*(unsigned char *)(a2 + 55))
    {
      int v84 = 0;
      long long v82 = 0u;
      long long v83 = 0u;
      long long v80 = 0u;
      long long v81 = 0u;
      *(_OWORD *)long long buf = 0u;
      long long v79 = 0u;
      *(_DWORD *)&buf[1] = *(_DWORD *)(a2 + 49);
      *(_WORD *)&buf[5] = *(_WORD *)(a2 + 53);
      buf[7] = *(unsigned char *)(a2 + 56);
      *(_DWORD *)&buf[8] = *(_DWORD *)(a2 + 57);
      *(_WORD *)&unsigned char buf[12] = *(_WORD *)(a2 + 61);
      sub_1001166F0(buf, 14);
      a1 = (unsigned __int8 *)(a2 + 56);
    }
    if (!a3)
    {
      if (*(unsigned char *)(a2 + 70) == 1)
      {
        byte_100A0B259 &= 0xFCu;
        sub_100208D10(0);
      }
      else if (*(unsigned char *)(a2 + 316))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"FastLEConnection:Skipping startLinkEncryption, pendingAuth=%d", v35, v36, v37, v38, v39, v40, v41, *(unsigned __int8 *)(a2 + 317));
          uint64_t v42 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v43 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            *(void *)&uint8_t buf[4] = v43;
            _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        *(unsigned char *)(a2 + 125) = *(unsigned char *)(a2 + 317);
      }
      else
      {
        if (!sub_1002250C8(a2))
        {
          int v44 = 1;
          *(unsigned char *)(a2 + 125) = 1;
          goto LABEL_35;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Encryption start fails with status %!", v69, v70, v71, v72, v73, v74, v75, 0);
          uint64_t v76 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      int v44 = 1;
      goto LABEL_35;
    }
  }
  if (a3 != 702)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"GAP_ConnectionCompleteCallback with error stats %! on lm 0x%x", v28, v29, v30, v31, v32, v33, v34, a3);
      uint64_t v45 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  int v44 = 0;
LABEL_35:
  unsigned __int16 v46 = word_100A0B110;
  if (word_100A0B110)
  {
    unsigned __int8 v47 = 0;
    do
    {
      uint64_t v48 = *(void (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t, BOOL))qword_100A0B118[v47];
      if (v48)
      {
        if (a2) {
          BOOL v49 = *(unsigned char *)(a2 + 316) != 0;
        }
        else {
          BOOL v49 = 0;
        }
        v48(a1, a2, a3, a4, v49);
        unsigned __int16 v46 = word_100A0B110;
      }
      ++v47;
    }
    while (v46 > v47);
  }
  if (v44 && *(unsigned char *)(a2 + 70) == 1)
  {
    if (*(_DWORD *)(a2 + 132)) {
      sub_10025B8C0();
    }
    if (*(unsigned char *)(a2 + 316))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"FastLEConnection:Skipping LE_GAP_ReadRemoteVersionInformation", v50, v51, v52, v53, v54, v55, v56, v77);
        uint64_t v57 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v58 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          *(void *)&uint8_t buf[4] = v58;
          _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    else
    {
      uint64_t v59 = sub_100223DC8(a2);
      if (v59)
      {
        uint64_t v60 = v59;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_GAP_ReadRemoteVersionInformation failed %!", v61, v62, v63, v64, v65, v66, v67, v60);
          uint64_t v68 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
        sub_100223E64(a2, v60);
      }
      else
      {
        *(_DWORD *)(a2 + 132) = 1;
      }
    }
  }
}

void sub_100224730()
{
  if (byte_100A0F414 == 1)
  {
    *(_WORD *)long long buf = 0;
    sub_10025BD90(dword_100A0F410, buf);
  }
  if (sub_100058654())
  {
    uint64_t v0 = byte_100A0F400;
    sub_100218970();
    sub_100231B30();
    sub_100056E24((uint64_t)"refreshing PrivateAddressTimer gPrivateMode=%d gOverrideLocalAddress=%d IsConnectionInProgress=%d IsScanInProgress=%d gHoldStableAddress=%d gHoldStableAddressCount=%d gLeHoldStablePrivateAddressTimer=%d Hold Time Remaining=%d:%d", v1, v2, v3, v4, v5, v6, v7, v0);
    uint64_t v8 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v39 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1002283C8();
  byte_100A0F414 = 0;
  word_100A0F416 = 0;
  sub_10022B750();
  if (!byte_100A0F400 && (byte_100A0F401 & 1) == 0)
  {
    if (sub_10020ADA4())
    {
      if (byte_100A0F41A)
      {
LABEL_10:
        byte_100A0F418 = 0;
        if (sub_10022920C(byte_100A0F3CD) && sub_100058654())
        {
          sub_100056E24((uint64_t)"createAddress with type %d failed with stats %! in refreshLePrivateAddress", v10, v11, v12, v13, v14, v15, v16, byte_100A0F3CD);
          unint64_t v17 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        sub_1002284E4((int *)((char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD), 1);
        return;
      }
      if ((sub_100218970() & 1) == 0 && !sub_100231B30())
      {
        if (!byte_100A0F41A)
        {
          byte_100A0B1A0 = 0;
          byte_100A0F41B = 0;
          dword_100A0F41C = 0;
          word_100A0F420 = 0;
        }
        goto LABEL_10;
      }
      if ((byte_100A0B1A0 & 1) == 0 && (byte_100A0F41B & 1) == 0) {
        sub_10010B914((uint64_t)&dword_100A0F41C);
      }
      if (sub_100218970()) {
        byte_100A0B1A0 = 1;
      }
      if (sub_100231B30()) {
        byte_100A0F41B = 1;
      }
      uint64_t v37 = 0;
      sub_10010B914((uint64_t)&v37);
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Busy with a connection/scan, can't update an address right now (gRefreshLocalAddressOnConnectionComplete=%d gRefreshLocalAddressOnScanComplete=%d). Address refresh deferral for %d seconds", v27, v28, v29, v30, v31, v32, v33, byte_100A0B1A0);
        uint64_t v34 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v35 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v39 = v35;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Advertising is starting/stopping, wait with the address change until we're settled", v18, v19, v20, v21, v22, v23, v24, v36);
        uint64_t v25 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v26 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v39 = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      byte_100A0F418 = 1;
    }
    sub_10022B58C();
  }
}

BOOL sub_100224B2C(unint64_t a1)
{
  if ((a1 & 0xFFFFFFFFFFFFLL) == 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEnabledForAddress compare with zero address", v2, v3, v4, v5, v6, v7, v8, v25);
      uint64_t v9 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  if (!byte_100A0F438) {
    return 0;
  }
  if (qword_100A0F440[0] != a1)
  {
    unint64_t v11 = 0;
    uint64_t v12 = &qword_100A0F450;
    while (byte_100A0F438 - 1 != v11)
    {
      uint64_t v13 = *v12;
      v12 += 2;
      ++v11;
      if (v13 == a1)
      {
        BOOL v1 = v11 < byte_100A0F438;
        goto LABEL_14;
      }
    }
    return 0;
  }
  BOOL v1 = 1;
LABEL_14:
  uint64_t v14 = (a1 << 32) & 0xFF0000000000 | (a1 << 48) | (a1 << 16) & 0xFF00000000 | a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
  if (sub_100058654())
  {
    uint64_t v22 = "Random";
    if (!(_BYTE)v14) {
      uint64_t v22 = "Public";
    }
    sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEnabledForAddress for %s:%: enabled", v15, v16, v17, v18, v19, v20, v21, (uint64_t)v22);
    uint64_t v23 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v27 = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v1;
}

uint64_t sub_100224CE8(unint64_t a1)
{
  if ((a1 & 0xFFFFFFFFFFFFLL) != 0)
  {
    unsigned int v1 = byte_100A0F438;
    if (byte_100A0F438)
    {
      if (qword_100A0F440[0] == a1)
      {
        unint64_t v2 = 0;
        BOOL v3 = 1;
LABEL_12:
        uint64_t v15 = (a1 << 32) & 0xFF0000000000 | (a1 << 48) | (a1 << 16) & 0xFF00000000 | a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
        if (sub_100058654())
        {
          uint64_t v23 = "Random";
          if (!(_BYTE)v15) {
            uint64_t v23 = "Public";
          }
          sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEncryptionExpectedForAddress for %s:%: pending:%d", v16, v17, v18, v19, v20, v21, v22, (uint64_t)v23);
          uint64_t v24 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v25 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v28 = v25;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        unsigned int v1 = LOBYTE(qword_100A0F440[2 * v2 + 1]) != 0;
        return v3 & v1;
      }
      unint64_t v2 = 0;
      uint64_t v13 = &qword_100A0F450;
      while (byte_100A0F438 - 1 != v2)
      {
        uint64_t v14 = *v13;
        v13 += 2;
        ++v2;
        if (v14 == a1)
        {
          BOOL v3 = v2 < byte_100A0F438;
          goto LABEL_12;
        }
      }
    }
    BOOL v3 = 0;
    return v3 & v1;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEncryptionExpectedForAddress compare with zero address", v5, v6, v7, v8, v9, v10, v11, v26);
    uint64_t v12 = sub_100050B4C(0x42u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100224ED8(unint64_t a1)
{
  if ((a1 & 0xFFFFFFFFFFFFLL) != 0)
  {
    unsigned int v1 = byte_100A0F438;
    if (byte_100A0F438)
    {
      if (qword_100A0F440[0] == a1)
      {
        unint64_t v2 = 0;
        BOOL v3 = 1;
LABEL_12:
        uint64_t v15 = (a1 << 32) & 0xFF0000000000 | (a1 << 48) | (a1 << 16) & 0xFF00000000 | a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
        if (sub_100058654())
        {
          uint64_t v23 = "Random";
          if (!(_BYTE)v15) {
            uint64_t v23 = "Public";
          }
          sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEncryptionFakeEvent for %s:%: fakeEncryptionEvent:%d", v16, v17, v18, v19, v20, v21, v22, (uint64_t)v23);
          uint64_t v24 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v25 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            uint64_t v28 = v25;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        unsigned int v1 = BYTE1(qword_100A0F440[2 * v2 + 1]) != 0;
        return v3 & v1;
      }
      unint64_t v2 = 0;
      uint64_t v13 = &qword_100A0F450;
      while (byte_100A0F438 - 1 != v2)
      {
        uint64_t v14 = *v13;
        v13 += 2;
        ++v2;
        if (v14 == a1)
        {
          BOOL v3 = v2 < byte_100A0F438;
          goto LABEL_12;
        }
      }
    }
    BOOL v3 = 0;
    return v3 & v1;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEncryptionFakeEvent compare with zero address", v5, v6, v7, v8, v9, v10, v11, v26);
    uint64_t v12 = sub_100050B4C(0x42u);
    uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002250C8(uint64_t a1)
{
  uint64_t v3 = a1;
  if (dword_100A0F404)
  {
    v2[1] = &v3;
    v2[0] = (const void *)8;
    uint64_t result = sub_1000268E4((uint64_t)sub_10022B0E4, v2, (unsigned __int16)((dword_100A0F404 + 99) / 0x64u), 0);
    if (!result) {
      return result;
    }
    a1 = v3;
  }
  return sub_100234720(a1);
}

void sub_100225140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (*(_DWORD *)(a1 + 140) && *(_DWORD *)(a1 + 132) == 6)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Link disconnected readyStateReason:%!, readyStatus:LE_READY_DISCONNECTING, overriding", v8, v9, v10, v11, v12, v13, v14, *(unsigned int *)(a1 + 140));
      uint64_t v15 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v20 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    a2 = *(unsigned int *)(a1 + 140);
  }
  if (mach_continuous_time() <= a4)
  {
    uint64_t v16 = 0;
  }
  else
  {
    mach_continuous_time();
    uint64_t v16 = UpTicksToMilliseconds();
  }
  if (word_100A0B110)
  {
    unsigned __int8 v17 = 0;
    do
    {
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_100A0B118[v17] + 8);
      if (v18)
      {
        v18(a1, a2, a3, v16);
        if (*(unsigned char *)(a1 + 127)) {
          sub_100219B7C((unsigned __int16 *)a1, 7);
        }
      }
      ++v17;
    }
    while ((unsigned __int16)word_100A0B110 > v17);
  }
  if (off_100A0B1A8)
  {
    if (!sub_100198E60())
    {
      off_100A0B1A8();
      off_100A0B1A8 = 0;
    }
  }
}

uint64_t sub_1002252F0(uint64_t result)
{
  unsigned __int16 v1 = word_100A0B110;
  if (word_100A0B110)
  {
    uint64_t v2 = result;
    unsigned __int8 v3 = 0;
    do
    {
      uint64_t v4 = *(uint64_t (**)(uint64_t))(qword_100A0B118[v3] + 16);
      if (v4)
      {
        uint64_t result = v4(v2);
        unsigned __int16 v1 = word_100A0B110;
      }
      ++v3;
    }
    while (v1 > v3);
  }
  return result;
}

uint64_t sub_10022535C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v5 = word_100A0B110;
  if (word_100A0B110)
  {
    uint64_t v10 = result;
    unsigned __int8 v11 = 0;
    do
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_100A0B118[v11] + 24);
      if (v12)
      {
        uint64_t result = v12(v10, a2, a3, a4, a5);
        unsigned __int16 v5 = word_100A0B110;
      }
      ++v11;
    }
    while (v5 > v11);
  }
  return result;
}

uint64_t sub_1002253F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v5 = word_100A0B110;
  if (word_100A0B110)
  {
    uint64_t v10 = result;
    unsigned __int8 v11 = 0;
    do
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_100A0B118[v11] + 32);
      if (v12)
      {
        uint64_t result = v12(v10, a2, a3, a4, a5);
        unsigned __int16 v5 = word_100A0B110;
      }
      ++v11;
    }
    while (v5 > v11);
  }
  return result;
}

void sub_100225494(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (sub_100058654())
  {
    sub_1002174D0(*(_DWORD *)(a2 + 132));
    sub_100056E24((uint64_t)"ReadRemoteVersionInformationCB LMPVersion=%d mfgName=%d LMPSubVersion=%d status %!, ready: %s, role %d", v6, v7, v8, v9, v10, v11, v12, a3);
    uint64_t v13 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      int v44 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (!a1)
  {
    if (*(_DWORD *)(a2 + 132) != 1) {
      sub_10025B8C0();
    }
    *(_DWORD *)(a2 + 132) = 5;
    if (a3 <= 6)
    {
      uint64_t v29 = 0;
      *(unsigned char *)(a2 + 126) = 0;
LABEL_21:
      sub_100223E64(a2, v29);
      return;
    }
    if (*(unsigned char *)(a2 + 70) && (BYTE4(xmmword_100A195E0) & 8) == 0) {
      goto LABEL_17;
    }
    if (*(unsigned char *)(a2 + 316))
    {
      *(_DWORD *)(a2 + 132) = 2;
      uint64_t v29 = 0;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_ReadRemoteVersionInformationCompleteCallback skipping LE_ReadRemoteUsedFeatures due to FastLEConnection", v22, v23, v24, v25, v26, v27, v28, v42);
        uint64_t v30 = sub_100050B4C(0x42u);
        uint64_t v29 = 0;
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v31 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          int v44 = v31;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
LABEL_17:
          uint64_t v29 = 0;
        }
      }
    }
    else
    {
      uint64_t v33 = sub_10021ADDC();
      if (!v33)
      {
        *(_DWORD *)(a2 + 132) = 2;
        *(unsigned char *)(a2 + 126) = 0;
        return;
      }
      uint64_t v29 = v33;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ReadRemoteUsedFeatures failed %!", v34, v35, v36, v37, v38, v39, v40, v29);
        uint64_t v41 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    int v32 = *(_DWORD *)(a2 + 132);
    *(unsigned char *)(a2 + 126) = 0;
    if (v32 != 5) {
      return;
    }
    goto LABEL_21;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"ReadRemoteVersionInformationCB %!, waiting for disconnection event", v14, v15, v16, v17, v18, v19, v20, a1);
    uint64_t v21 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10022572C(uint64_t a1, uint64_t a2, char *a3)
{
  char v6 = *a3;
  char v7 = a3[1];
  *(unsigned char *)(a2 + 290) = (a3[4] & 0x60) != 0;
  if (a1 && *(_DWORD *)(a2 + 140) == 5300)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ReadRemoteUsedFeaturesCB %!, waiting for disconnection event", v8, v9, v10, v11, v12, v13, v14, a1);
      uint64_t v15 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    return;
  }
  if (*(_DWORD *)(a2 + 132) != 2) {
    sub_10025B8C0();
  }
  if (a1)
  {
    if (a1 == 726) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = a1;
    }
    sub_100223E64(a2, v16);
    return;
  }
  if ((v7 & 1) != 0 && sub_10017E6E4())
  {
    int v17 = sub_10018F604() ^ 1;
    if ((v6 & 0x20) != 0)
    {
LABEL_18:
      int v18 = sub_10017E6D4();
      goto LABEL_21;
    }
  }
  else
  {
    int v17 = 0;
    if ((v6 & 0x20) != 0) {
      goto LABEL_18;
    }
  }
  int v18 = 0;
LABEL_21:
  if (sub_100058654())
  {
    sub_1002174D0(*(_DWORD *)(a2 + 132));
    sub_10017E6D4();
    sub_10017E6E4();
    sub_10017E6F4();
    sub_100056E24((uint64_t)"Remote Features: %@ , handle %x, ready: %s, EDL [remote %d, local %d], 2M [remote %d, local %d], ChanSel2 [remote %d, local %d] PHYReady:%s, SupportsSubrating: %d", v19, v20, v21, v22, v23, v24, v25, (uint64_t)a3);
    uint64_t v26 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v38 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if ((v17 | v18) == 1 && (((v17 | v18 ^ 1) & 1) != 0 || *(_DWORD *)(a2 + 136) != 1))
  {
    if (!*(unsigned char *)(a2 + 152))
    {
      sub_10021BD7C(a2, v18, v17, 0);
      return;
    }
    uint64_t v27 = sub_100218F90((unsigned __int16 *)a2, 4u);
    if (v27)
    {
      uint64_t v28 = v27;
      if (v27 != 4000)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"PhyUpdateComplete LE scaling completed with error %!", v29, v30, v31, v32, v33, v34, v35, v28);
          uint64_t v36 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
    }
  }
  sub_100223E64(a2, 0);
}

uint64_t sub_100225A44(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned __int16 v3 = word_100A0B158;
  if (word_100A0B158)
  {
    uint64_t v6 = result;
    unsigned __int8 v7 = 0;
    do
    {
      uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))**((void **)&unk_100A0B160 + v7);
      if (v8)
      {
        uint64_t result = v8(v6, a2, a3);
        unsigned __int16 v3 = word_100A0B158;
      }
      ++v7;
    }
    while (v3 > v7);
  }
  return result;
}

uint64_t sub_100225AC8(uint64_t result, uint64_t a2)
{
  unsigned __int16 v2 = word_100A0B158;
  if (word_100A0B158)
  {
    uint64_t v4 = result;
    unsigned __int8 v5 = 0;
    do
    {
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(qword_100A0B160[v5] + 8);
      if (v6)
      {
        uint64_t result = v6(v4, a2);
        unsigned __int16 v2 = word_100A0B158;
      }
      ++v5;
    }
    while (v2 > v5);
  }
  return result;
}

uint64_t sub_100225B44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7, unsigned int a8, __int16 a9, char a10)
{
  HIDWORD(v18) = a6;
  unsigned __int16 v10 = word_100A0B158;
  if (word_100A0B158)
  {
    uint64_t v15 = result;
    unsigned __int8 v16 = 0;
    do
    {
      int v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t))(qword_100A0B160[v16] + 16);
      if (v17)
      {
        BYTE2(v18) = a10;
        LOWORD(v18) = a9;
        uint64_t result = v17(v15, a2, a3, a4, a5, HIDWORD(v18), a7, a8, v18);
        unsigned __int16 v10 = word_100A0B158;
      }
      ++v16;
    }
    while (v10 > v16);
  }
  return result;
}

uint64_t sub_100225C1C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned __int16 v13 = word_100A0B158;
  if (word_100A0B158)
  {
    uint64_t v16 = result;
    unsigned __int8 v17 = 0;
    do
    {
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, int, uint64_t, uint64_t, uint64_t, uint64_t))(qword_100A0B160[v17] + 24);
      if (v18)
      {
        LOBYTE(v19) = a9;
        uint64_t result = v18(v16, a2, a3, a4, a5, a6, a7, a8, v19, a10, a11, a12, a13);
        unsigned __int16 v13 = word_100A0B158;
      }
      ++v17;
    }
    while (v13 > v17);
  }
  return result;
}

uint64_t sub_100225CEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned __int16 v10 = word_100A0B158;
  if (word_100A0B158)
  {
    uint64_t v16 = result;
    unsigned __int8 v17 = 0;
    do
    {
      uint64_t v18 = qword_100A0B160[v17];
      if (*(void *)(v18 + 24))
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32))(v16, a2, a3, a4, a5, a6, a7, a8, a9, a10);
        unsigned __int16 v10 = word_100A0B158;
      }
      ++v17;
    }
    while (v10 > v17);
  }
  return result;
}

uint64_t sub_100225DB8(uint64_t a1, _WORD *a2)
{
  if (!a2) {
    return 101;
  }
  if (!dword_100A198B8) {
    return 103;
  }
  if (!sub_100197770(a1)) {
    return 4051;
  }
  uint64_t result = 0;
  *a2 = *(_WORD *)(a1 + 80);
  return result;
}

uint64_t sub_100225E20(uint64_t a1, __int16 *a2)
{
  if (!a2) {
    return 101;
  }
  if (!dword_100A198B8) {
    return 103;
  }
  if (!sub_100197770(a1)) {
    return 149;
  }
  uint64_t result = 0;
  __int16 v5 = *(_WORD *)(a1 + 86);
  if (!v5) {
    __int16 v5 = 12;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_100225E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (!sub_100197770(a1)) {
    return 4052;
  }
  uint64_t v6 = a1 + 48;
  if (a3)
  {
    if (*(unsigned char *)(a1 + 55))
    {
      int v7 = *(_DWORD *)(a1 + 56);
      __int16 v8 = *(_WORD *)(a1 + 60);
      *(unsigned char *)(a3 + 6) = *(unsigned char *)(a1 + 62);
      *(_WORD *)(a3 + 4) = v8;
      *(_DWORD *)a3 = v7;
    }
    else
    {
      *(_DWORD *)(a3 + 3) = 0;
      *(_DWORD *)a3 = 0;
    }
  }
  else if (*(unsigned char *)(a1 + 55))
  {
    uint64_t v6 = a1 + 56;
  }
  uint64_t result = 0;
  int v10 = *(_DWORD *)v6;
  __int16 v11 = *(_WORD *)(v6 + 4);
  *(unsigned char *)(a2 + 6) = *(unsigned char *)(v6 + 6);
  *(_WORD *)(a2 + 4) = v11;
  *(_DWORD *)a2 = v10;
  return result;
}

BOOL sub_100225F4C(uint64_t a1)
{
  BOOL result = 0;
  if (a1 && dword_100A198B8)
  {
    BOOL result = sub_100197770(a1);
    if (result) {
      return *(unsigned char *)(a1 + 70) == 1;
    }
  }
  return result;
}

uint64_t sub_100225F9C(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 && dword_100A198B8)
  {
    uint64_t result = sub_100197770(a1);
    if (result) {
      return *(unsigned __int16 *)(a1 + 80);
    }
  }
  return result;
}

uint64_t sub_100225FE4(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 && dword_100A198B8)
  {
    uint64_t result = sub_100197770(a1);
    if (result) {
      return *(unsigned __int16 *)(a1 + 82);
    }
  }
  return result;
}

uint64_t sub_10022602C(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 && dword_100A198B8)
  {
    uint64_t result = sub_100197770(a1);
    if (result) {
      return *(unsigned __int16 *)(a1 + 84);
    }
  }
  return result;
}

uint64_t sub_100226074()
{
  if (!off_100A0B1B0) {
    return 121;
  }
  off_100A0B1B0();
  return 0;
}

uint64_t sub_1002260A4(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5, int a6, int a7, int a8, unsigned __int16 a9, unsigned int a10)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (a1 && sub_100197770(a1))
  {
    if (a10 == 1)
    {
      return sub_10021A248(a1, a2, a3, a4, a5, a6, a7, a8, a9);
    }
    else if (a10)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid LE Connection Parameter Request Origin type: %d", v27, v28, v29, v30, v31, v32, v33, a10);
        uint64_t v34 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 101;
    }
    else
    {
      return sub_1002358D8(a1, a2, a3 ^ 1u, a4, a5, a6, a7, a8, a9);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v19, v20, v21, v22, v23, v24, v25, v35);
      uint64_t v26 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
}

uint64_t sub_10022627C(uint64_t a1)
{
  __int16 v1 = word_100A0B1B8;
  uint64_t v2 = (unsigned __int16)word_100A0B1B8;
  if (word_100A0B1B8)
  {
    if (word_100A0B1B8 == 8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't add anymore callbacks.", v3, v4, v5, v6, v7, v8, v9, v14);
        int v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 4053;
    }
    else
    {
      unsigned __int8 v12 = 0;
      while (qword_100A0B1C0[v12] != a1)
      {
        if ((unsigned __int16)word_100A0B1B8 <= ++v12)
        {
          uint64_t v2 = v12;
          goto LABEL_11;
        }
      }
      return 0;
    }
  }
  else
  {
LABEL_11:
    uint64_t v11 = 0;
    qword_100A0B1C0[v2] = a1;
    word_100A0B1B8 = v1 + 1;
  }
  return v11;
}

uint64_t sub_100226348(uint64_t result)
{
  if (word_100A0B1B8)
  {
    unsigned __int8 v1 = 0;
    while (qword_100A0B1C0[v1] != result)
    {
      if ((unsigned __int16)word_100A0B1B8 <= ++v1) {
        return result;
      }
    }
    uint64_t v3 = qword_100A0B1C0[(unsigned __int16)--word_100A0B1B8];
    unsigned __int16 v2 = word_100A0B1B8;
    qword_100A0B1C0[v1] = v3;
    qword_100A0B1C0[v2] = 0;
  }
  return result;
}

void sub_10022639C()
{
  if (word_100A0B1B8)
  {
    unsigned __int8 v0 = 0;
    do
    {
      uint64_t v1 = v0;
      unsigned __int16 v2 = (void (*)(void))qword_100A0B1C0[v0];
      if (v2 || (sub_10025B8C0(), (unsigned __int16 v2 = (void (*)(void))qword_100A0B1C0[v1]) != 0)) {
        v2();
      }
      unsigned __int8 v0 = v1 + 1;
    }
    while ((unsigned __int16)word_100A0B1B8 > (v1 + 1));
  }
}

uint64_t sub_100226404(uint64_t a1)
{
  __int16 v1 = word_100A0B200;
  uint64_t v2 = (unsigned __int16)word_100A0B200;
  if (word_100A0B200)
  {
    if (word_100A0B200 == 8)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Can't add anymore callbacks.", v3, v4, v5, v6, v7, v8, v9, v14);
        int v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 4053;
    }
    else
    {
      unsigned __int8 v12 = 0;
      while (qword_100A0B208[v12] != a1)
      {
        if ((unsigned __int16)word_100A0B200 <= ++v12)
        {
          uint64_t v2 = v12;
          goto LABEL_11;
        }
      }
      return 0;
    }
  }
  else
  {
LABEL_11:
    uint64_t v11 = 0;
    qword_100A0B208[v2] = a1;
    word_100A0B200 = v1 + 1;
  }
  return v11;
}

void sub_1002264D0()
{
  if (word_100A0B200)
  {
    unsigned __int8 v0 = 0;
    do
    {
      uint64_t v1 = v0;
      uint64_t v2 = (void (*)(void))qword_100A0B208[v0];
      if (v2 || (sub_10025B8C0(), (uint64_t v2 = (void (*)(void))qword_100A0B208[v1]) != 0)) {
        v2();
      }
      unsigned __int8 v0 = v1 + 1;
    }
    while ((unsigned __int16)word_100A0B200 > (v1 + 1));
  }
}

uint64_t sub_100226538(uint64_t (*a1)(void))
{
  if (off_100A0B1B0)
  {
    if (off_100A0B1B0 == a1) {
      return 0;
    }
    else {
      return 119;
    }
  }
  else
  {
    uint64_t result = 0;
    off_100A0B1B0 = a1;
  }
  return result;
}

uint64_t sub_100226564(void *a1)
{
  if (off_100A0B248)
  {
    if (off_100A0B248 == a1) {
      return 0;
    }
    else {
      return 119;
    }
  }
  else
  {
    uint64_t result = 0;
    off_100A0B248 = a1;
  }
  return result;
}

uint64_t *sub_100226590(uint64_t *result)
{
  qword_100A0B250 = *result;
  return result;
}

uint64_t sub_1002265A0(uint64_t a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if ((byte_100A0B258 & a1) != 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE Role 0x%x already set.", v2, v3, v4, v5, v6, v7, v8, a1);
      uint64_t v9 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4054;
  }
  else
  {
    uint64_t result = 0;
    byte_100A0B258 |= a1;
  }
  return result;
}

uint64_t sub_100226648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!dword_100A198B8) {
    return 103;
  }
  uint64_t v8 = a1;
  unsigned int v9 = byte_100A0B258;
  if ((byte_100A0B258 & a1) != 0)
  {
    byte_100A0B258 &= ~(_BYTE)a1;
    BOOL v10 = (v9 & ~(_BYTE)a1 & 0xA) == 0 && (v9 & 0xA) != 0;
    BOOL v11 = (v9 & ~(_BYTE)a1 & 8) == 0;
    int v12 = (v9 & ~(_BYTE)a1 & 5) == 0 && (v9 & 5) != 0;
    if ((v9 & 4) != 0 && (v9 & ~(_BYTE)a1 & 4) == 0)
    {
      a1 = sub_10020A224();
      v12 |= a1;
    }
    int v13 = v11 & (v9 >> 3);
    if (v10)
    {
      a1 = sub_100231B64();
      if (!v13)
      {
LABEL_14:
        if (!v12) {
          return 0;
        }
        goto LABEL_22;
      }
    }
    else if (!v13)
    {
      goto LABEL_14;
    }
    sub_100226764(a1, a2, a3, a4, a5, a6, a7, a8);
    if (v12) {
LABEL_22:
    }
      sub_1002267A4(0);
    return 0;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"LE Role 0x%x not set.", v15, v16, v17, v18, v19, v20, v21, v8);
    uint64_t v22 = sub_100050B4C(0x42u);
    uint64_t result = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100226764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = sub_100218AC4(0, a2, a3, a4, a5, a6, a7, a8);
  if (sub_100017A14() && v8 == 1302) {
    sub_100199524();
  }
  return v8;
}

uint64_t sub_1002267A4(int a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (dword_100A0F3BC)
  {
    sub_100026DB4(dword_100A0F3BC);
    dword_100A0F3BC = 0;
  }
  byte_100A0B259 &= 0xFCu;
  byte_100A0F3A8 = sub_10020A6AC();
  byte_100A0F3B8 = 0;
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_GAP_StopAdvertising Force stop", v2, v3, v4, v5, v6, v7, v8, v11);
      unsigned int v9 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_100227AF0();
    byte_100A0F3A8 = 0;
    off_100A0F3B0 = 0;
    sub_10020A244();
    return 0;
  }
  else
  {
    return sub_100209EA4();
  }
}

void sub_10022688C(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_GAP_ConfigureAppleADVTypePowerAssertionMask mask:%llu", v2, v3, v4, v5, v6, v7, v8, a1);
    unsigned int v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v11 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  qword_100A19770 = a1;
}

uint64_t sub_100226958(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = 162;
  if (a1 && a2)
  {
    if (!a3) {
      return 101;
    }
    if (a2 < 3) {
      return 0;
    }
    unint64_t v7 = 2;
    do
    {
      if (*(unsigned char *)(a1 + v7) == 1)
      {
        if ((v7 + 16) >= a2) {
          return 162;
        }
        int v8 = 0;
        LODWORD(v9) = v7 + 1;
        int v10 = 16;
      }
      else
      {
        unint64_t v9 = (v7 + 1);
        if (v9 >= a2) {
          return 162;
        }
        int v10 = *(unsigned char *)(a1 + v9) & 0x1F;
        if (v10 == 31)
        {
          unint64_t v11 = (v7 + 2);
          if (v11 >= a2) {
            return 162;
          }
          int v10 = *(unsigned __int8 *)(a1 + v11) + 31;
          int v8 = 2;
        }
        else
        {
          int v8 = 1;
        }
        if ((v10 + v7 + v8) > a2) {
          return 162;
        }
      }
      int v12 = a3();
      uint64_t result = 0;
      unint64_t v7 = (v9 + v10 + v8);
    }
    while (v7 < a2 && v12);
  }
  return result;
}

uint64_t sub_100226B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if ((qword_100A0B250 & 0x20) == 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Local device does not support active scanning.", v3, v4, v5, v6, v7, v8, v9, v43);
      int v10 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1330;
  }
  if (!a1)
  {
    sub_10025B8C0();
    if (a2) {
      goto LABEL_10;
    }
LABEL_30:
    sub_10025B8C0();
    goto LABEL_31;
  }
  if (!a2) {
    goto LABEL_30;
  }
LABEL_10:
  if (*(void *)a2 && *(void *)(a2 + 8) && a1 && *(void *)(a2 + 16))
  {
    if ((byte_100A0B258 & 0xA) != 0)
    {
      if (qword_100A0B260 || off_100A0B270 || off_100A0B268)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"We are already scanning.", v35, v36, v37, v38, v39, v40, v41, v43);
          uint64_t v42 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 4060;
      }
      else
      {
        unsigned __int16 v15 = *(_WORD *)(a1 + 4);
        if (!v15) {
          unsigned __int16 v15 = *(unsigned __int8 *)(a1 + 1) << 11;
        }
        uint64_t v16 = *(unsigned __int16 *)(a1 + 6);
        if (!*(_WORD *)(a1 + 6))
        {
          if (*(unsigned char *)(a1 + 1)) {
            uint64_t v16 = 18;
          }
          else {
            uint64_t v16 = 0;
          }
        }
        uint64_t result = sub_10023115C(*(unsigned char *)a1 ^ 1u, v15, v16, *(unsigned __int16 *)(a1 + 8), *(unsigned __int16 *)(a1 + 12), *(unsigned __int16 *)(a1 + 10), *(unsigned __int8 *)(a1 + 2), *(unsigned __int8 *)(a1 + 3), *(unsigned char *)(a1 + 15), *(unsigned char *)(a1 + 14), *(unsigned char *)(a1 + 17), *(unsigned char *)(a1 + 18), *(_DWORD *)(a1 + 20), HIWORD(*(_DWORD *)(a1 + 20)), *(_WORD *)(a1 + 24), HIBYTE(*(_WORD *)(a1 + 24)), (uint64_t)sub_100226DEC, sub_100050574, (uint64_t)sub_100226E00,
                   a3);
        if (!result)
        {
          if (*(unsigned char *)(a1 + 1)) {
            char v17 = 1;
          }
          else {
            char v17 = 2;
          }
          byte_100A0B278 = v17;
          uint64_t v18 = *(void **)(a2 + 16);
          *(_OWORD *)&qword_100A0B260 = *(_OWORD *)a2;
          off_100A0B270 = v18;
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"We can only scan in Central or Obeserver mode.", v27, v28, v29, v30, v31, v32, v33, v43);
        uint64_t v34 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 132;
    }
    return result;
  }
LABEL_31:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Invalid parameters", v19, v20, v21, v22, v23, v24, v25, v43);
    uint64_t v26 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 101;
}

uint64_t sub_100226DEC()
{
  if (qword_100A0B260) {
    return qword_100A0B260();
  }
  return result;
}

void sub_100226E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void (*)(uint64_t, uint64_t))off_100A0B270;
  qword_100A0B260 = 0;
  off_100A0B268 = 0;
  off_100A0B270 = 0;
  byte_100A0B278 = 0;
  if (!byte_100A0F41A && byte_100A0F41B == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"scan complete, we need to update our own address now", v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)v13);
      int v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int v13 = 136446210;
        *(void *)&v13[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", v13, 0xCu);
      }
    }
    sub_100224730();
  }
  if (v4) {
    v4(a1, a2);
  }
}

uint64_t sub_100226F18(unsigned char *a1, unsigned int a2, unsigned __int8 *a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  unsigned __int16 v133 = 0;
  bzero(v135, 0x672uLL);
  unsigned __int16 v132 = 0;
  bzero(__dst, 0x672uLL);
  if (!a1) {
    sub_10025B8C0();
  }
  if (!dword_100A198B8) {
    return 103;
  }
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"You must specify at least numOfInstances>=1", v19, v20, v21, v22, v23, v24, v25, v131);
    uint64_t v26 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_22:
    sub_100744F6C();
    return 101;
  }
  if (a2 >= 6)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"numOfInstances can not be greater than %d", v10, v11, v12, v13, v14, v15, v16, 5);
    char v17 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_22;
  }
  int v27 = sub_10020A6AC();
  if (a2 >= 2 && !v27)
  {
    if (!sub_100058654()) {
      return 101;
    }
    unsigned int v28 = sub_10020A6AC();
    sub_100056E24((uint64_t)"numOfInstances can not be greater than 1, using regular advertising", v29, v30, v31, v32, v33, v34, v35, v28);
    uint64_t v36 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_22;
  }
  if (sub_10020A6AC() && sub_10020A6AC() < a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    unsigned int v37 = sub_10020A6AC();
    sub_100056E24((uint64_t)"numOfInstances can not be greater than %d", v38, v39, v40, v41, v42, v43, v44, v37);
    uint64_t v45 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_22;
  }
  __memmove_chk();
  if (a4)
  {
    unsigned int v46 = 0;
    byte_100A0F3A8 = 0;
  }
  else
  {
    unsigned int v46 = byte_100A0F3A8;
  }
  if (v46 < a2)
  {
    while (*(unsigned __int16 *)&a1[3336 * v46 + 2] >= 0x4000u)
    {
      LOBYTE(v46) = v46 + 1;
      byte_100A0F3A8 = v46;
      uint64_t v18 = 101;
      if (a2 <= v46) {
        return v18;
      }
    }
  }
  if (a2 == v46) {
    return 101;
  }
  if ((_BYTE)v46)
  {
    char v48 = byte_100A0B258;
LABEL_35:
    if (v48)
    {
      char v66 = byte_100A0B259 & 0xFC;
    }
    else
    {
      if (*a1) {
        char v49 = 1;
      }
      else {
        char v49 = 2;
      }
      if ((v48 & 4) == 0)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Role should be broadcaster to enable discoverable states.", v50, v51, v52, v53, v54, v55, v56, v131);
          uint64_t v57 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 4055;
      }
      char v66 = byte_100A0B259 & 0xFC | v49;
    }
    byte_100A0B259 = v66;
    uint64_t v18 = sub_100227688((uint64_t)&a1[3336 * v46], (uint64_t)v135, &v133, __dst, &v132, v46);
    if (!v18)
    {
      if (a4)
      {
        if (a2 <= 1) {
          uint64_t v67 = 0;
        }
        else {
          uint64_t v67 = a4;
        }
        off_100A0F3B0 = v67;
      }
      byte_100A0F3B8 = 1;
      if (a2 <= 1) {
        uint64_t v68 = (void (*)(uint64_t, uint64_t))a4;
      }
      else {
        uint64_t v68 = sub_1002278EC;
      }
      uint64_t v69 = &a1[3336 * byte_100A0F3A8];
      uint64_t v70 = *((unsigned __int16 *)v69 + 1);
      uint64_t v71 = v70;
      if (!*((_WORD *)v69 + 1))
      {
        if (a1[3336 * byte_100A0F3A8]) {
          uint64_t v70 = 400;
        }
        else {
          uint64_t v70 = 2048;
        }
        if (a1[3336 * byte_100A0F3A8]) {
          uint64_t v71 = 800;
        }
        else {
          uint64_t v71 = 4096;
        }
      }
      uint64_t v72 = &a1[3336 * byte_100A0F3A8];
      if (v72[3317]) {
        uint64_t v73 = (int *)(v72 + 3310);
      }
      else {
        uint64_t v73 = 0;
      }
      uint64_t v74 = sub_100209494((uint64_t)v68, a5, v70, v71, v72[1], a3, 7, 0, v133, v135, v72[3319], v132, __dst, v72[3320], byte_100A0F3A8, v73, *(_DWORD *)(v72 + 3321), BYTE1(*(_DWORD *)(v72 + 3321)), BYTE2(*(_DWORD *)(v72 + 3321)),
              HIBYTE(*(_DWORD *)(v72 + 3321)),
              *(_WORD *)(v72 + 3325),
              HIBYTE(*(_WORD *)(v72 + 3325)),
              v72[3327],
              *((void *)v72 + 416));
      if (v74)
      {
        uint64_t v18 = v74;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_StartAdvertising failed with status %! currentAdvHandle=%d gMultiAdvCompleteCb=%p numOfInstances=%d ", v75, v76, v77, v78, v79, v80, v81, v18);
          long long v82 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      else
      {
        if (a1[3336 * byte_100A0F3A8])
        {
          uint64_t v18 = sub_1000268E4((uint64_t)sub_100227AD0, 0, 300, &dword_100A0F3BC);
          if (v18)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Could not register callback, status:%!", v123, v124, v125, v126, v127, v128, v129, v18);
              uint64_t v130 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
          }
        }
        else
        {
          uint64_t v18 = 0;
        }
        ++byte_100A0F3A8;
      }
    }
  }
  else
  {
    switch(a1[1])
    {
      case 0:
        if ((qword_100A0B250 & 4) != 0) {
          goto LABEL_87;
        }
        if (!sub_100058654()) {
          return 1330;
        }
        sub_100056E24((uint64_t)"Device does not support direct advertising.", v58, v59, v60, v61, v62, v63, v64, v131);
        uint64_t v65 = sub_100050B4C(0x42u);
        if (!os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
          return 1330;
        }
        goto LABEL_85;
      case 1:
        if ((qword_100A0B250 & 8) != 0) {
          goto LABEL_87;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Device does not support connectable advertising.", v83, v84, v85, v86, v87, v88, v89, v131);
          int v90 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR)) {
            goto LABEL_85;
          }
        }
        return 1330;
      case 2:
        if ((qword_100A0B250 & 2) != 0) {
          goto LABEL_87;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Device does not support discoverable advertising.", v91, v92, v93, v94, v95, v96, v97, v131);
          uint64_t v98 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
            goto LABEL_85;
          }
        }
        return 1330;
      case 3:
        if (qword_100A0B250) {
          goto LABEL_87;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Device does not support non-connectable advertising.", v99, v100, v101, v102, v103, v104, v105, v131);
          uint64_t v106 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR)) {
LABEL_85:
          }
            sub_100744F6C();
        }
        return 1330;
      default:
LABEL_87:
        char v48 = byte_100A0B258;
        if ((byte_100A0B258 & 5) != 0)
        {
          if (a1[1] > 1u || (byte_100A0B258 & 5) != 1) {
            goto LABEL_35;
          }
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"We can't be connectable in Broadcaster mode.", v107, v108, v109, v110, v111, v112, v113, v131);
            uint64_t v114 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v114, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          uint64_t v18 = 4061;
        }
        else
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"We can only advertise in Peripheral or Broadcaster mode.", v115, v116, v117, v118, v119, v120, v121, v131);
            uint64_t v122 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v122, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          uint64_t v18 = 132;
        }
        break;
    }
  }
  return v18;
}

uint64_t sub_100227688(uint64_t a1, uint64_t a2, _WORD *a3, void *__dst, _WORD *a5, unsigned int a6)
{
  if (!a2 || !a3 || !__dst || !a5)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"createAdvertisingData: Unexpected <null> pointer parameters", v12, v13, v14, v15, v16, v17, v18, v45);
      uint64_t v19 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 101;
  }
  if (*(unsigned char *)(a1 + 3318))
  {
    unsigned int v11 = 0;
    goto LABEL_22;
  }
  unsigned int v11 = 0;
  if (a6 <= 4 && ((1 << a6) & 0x13) != 0)
  {
    if (*(unsigned __int16 *)(a1 + 1656) > 0x1Cu)
    {
      unsigned int v11 = 0;
      if (a6) {
        goto LABEL_22;
      }
    }
    else
    {
      *(_WORD *)a2 = 258;
      char v20 = byte_100A0B259;
      if (a6) {
        char v20 = byte_100A0B259 | 2;
      }
      *(unsigned char *)(a2 + 2) = v20;
      unsigned int v11 = 3;
      if (a6) {
        goto LABEL_22;
      }
    }
    if (*(unsigned __int16 *)(a1 + 1656) > 0x19u) {
      goto LABEL_22;
    }
    if (*(unsigned char *)(a1 + 4))
    {
      *(_WORD *)(a2 + v11) = 2562;
      char v21 = *(unsigned char *)(a1 + 4);
LABEL_21:
      uint64_t v22 = a2 + v11;
      v11 += 3;
      *(unsigned char *)(v22 + 2) = v21;
      goto LABEL_22;
    }
    char v21 = dword_100A0F3C8;
    if ((_BYTE)dword_100A0F3C8 && dword_100A0F3C8 != 127)
    {
      *(_WORD *)(a2 + v11) = 2562;
      goto LABEL_21;
    }
  }
LABEL_22:
  size_t v23 = *(unsigned __int16 *)(a1 + 1656);
  if (*(_WORD *)(a1 + 1656))
  {
    if (a6 == 4) {
      unsigned int v24 = 1650;
    }
    else {
      unsigned int v24 = 31;
    }
    if (v23 + v11 > v24)
    {
      if (!sub_100058654()) {
        goto LABEL_39;
      }
      sub_100056E24((uint64_t)"Not enough room in ADV packet. (currently length=%d)", v25, v26, v27, v28, v29, v30, v31, *(unsigned __int16 *)(a1 + 1656));
      uint64_t v32 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        goto LABEL_39;
      }
      goto LABEL_38;
    }
    memmove((void *)(a2 + v11), (const void *)(a1 + 5), v23);
    LOWORD(v11) = *(_WORD *)(a1 + 1656) + v11;
  }
  size_t v33 = *(unsigned __int16 *)(a1 + 3308);
  if (*(_WORD *)(a1 + 3308))
  {
    if (a6 == 4) {
      unsigned int v34 = 1650;
    }
    else {
      unsigned int v34 = 31;
    }
    if (v34 < v33)
    {
      if (!sub_100058654()) {
        goto LABEL_39;
      }
      sub_100056E24((uint64_t)"Not enough room in SCN_RSP packet.", v35, v36, v37, v38, v39, v40, v41, v45);
      uint64_t v42 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        goto LABEL_39;
      }
LABEL_38:
      sub_100744F6C();
LABEL_39:
      sub_10025B8C0();
      return 101;
    }
    memmove(__dst, (const void *)(a1 + 1658), v33);
    __int16 v44 = *(_WORD *)(a1 + 3308);
  }
  else
  {
    __int16 v44 = 0;
  }
  uint64_t result = 0;
  *a3 = v11;
  *a5 = v44;
  return result;
}

void sub_1002278EC(uint64_t a1, uint64_t a2)
{
  if (a1 && a1 != 4073)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"failed to start advertising instance %d with status %! . Abort ! Abort ! Abort !", v5, v6, v7, v8, v9, v10, v11, byte_100A0F3A8);
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
    if (byte_100A0F3A8 >= 2u)
    {
      byte_100A0F3A8 = sub_10020A6AC();
      sub_1002267A4(0);
      sub_10020A4B4();
    }
    off_100A0F3B0(a1, a2);
  }
  else
  {
    unsigned int v4 = byte_100A0F3A8;
    if (v4 >= sub_10020A6AC() || sub_10020AD4C())
    {
      off_100A0F3B0(a1, a2);
      byte_100A0F3A8 = 0;
    }
    else
    {
      uint64_t v21 = sub_10020A6AC();
      if (sub_100226F18(&unk_100A0B280, v21, 0, 0, 0) != 101) {
        return;
      }
      byte_100A0F3A8 = 0;
      off_100A0F3B0(0, a2);
    }
  }
  if (byte_100A0F418 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Advertising settled, need to rotate our address now", v13, v14, v15, v16, v17, v18, v19, v22);
      char v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        unsigned int v24 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_100224730();
    byte_100A0F418 = 0;
  }
}

uint64_t sub_100227AD0()
{
  uint64_t result = sub_100209EA4();
  dword_100A0F3BC = 0;
  return result;
}

uint64_t sub_100227AF0()
{
  sub_10025B778("LE_GAP:\n");
  sub_10025B778("gOverrideLocalAddress:%d gPrivateMode:%d gLePrivateAddressTimer:%d gHoldStableAddress=%d gLeHoldStablePrivateAddressTimer=%d callCount=%d\n", byte_100A0F401, byte_100A0F400, dword_100A0F40C, byte_100A0F414, dword_100A0F410, (unsigned __int16)word_100A0F416);
  sub_10025B778("gNoAddressRotationWhileScanningOrConnecting=%d gRefreshLocalAddressOnConnectionComplete=%d gRefreshLocalAddressOnScanComplete=%d gAddressRefreshFirstDeferral=%ld.%d\n", byte_100A0B1A0, byte_100A0F41B, dword_100A0F41C, word_100A0F420, v2);
  sub_10025B778("gRefreshLocalAddressOnAdvertisingSettled=%d", byte_100A0F418);
  sub_10025B778("supportedStates:%@ ADFlags:%x LeRoles:%x LeCurrentAddressType:%x discoveryType:%x\n", &qword_100A0B250, 8, byte_100A0B259, byte_100A0B258, byte_100A0F3CD, byte_100A0B278);
  sub_10025B778("gPeripheralPrivacyFlagEnabled:%x gLeBondable:%x gAutoAddressRefresh:%x\n", byte_100A0F402, byte_100A0F408, byte_1009FAED4);
  sub_10025B778("gPrivateAddressRotateInterval=%d gPrivateAddressRotateIntervalOverride=%d\n\n", 6000, (unsigned __int16)word_100A0F424);
  sub_10025B778("gAddressRotationInProgress=%d", byte_100A0F419);
  sub_10025B778("gFastLeConnectionMaxSlots=%d gFastLeConnectionUsedSlots=%d MAX_FAST_LE_CONNECTION_LIST_SIZE=%d", byte_100A0F438, byte_100A0F439, 32);
  sub_10025B778("Advertising TX Power:\n");
  if (sub_100208D04())
  {
    unint64_t v0 = 0;
    do
    {
      sub_10025B778("\tInstance:%d power:%d\n", v0, *((char *)&dword_100A0F3C8 + v0));
      ++v0;
    }
    while (v0 < sub_100208D04());
  }
  sub_10021CDE4();
  sub_10020C538();

  return sub_100232234();
}

void sub_100227CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_initMultipleAdvertisingLocalCB", v6, v7, v8, v9, v10, v11, v12, *(uint64_t *)v14);
    uint64_t v13 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v14 = 136446210;
      *(void *)&v14[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", v14, 0xCu);
    }
  }
  if (!a1) {
    sub_100227DE4();
  }
  if (off_100A0F3C0) {
    off_100A0F3C0(a1, a2, a3);
  }
  off_100A0F3C0 = 0;
}

void sub_100227DE4()
{
  byte_100A0F402 = byte_100A0F3CD != 0;
  sub_1002284E4((int *)((char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD), 1);
  if (!byte_100A0F3CD)
  {
    sub_100218E58(0, v0, v1, v2, v3, v4, v5, v6);
    sub_10020A1C0(0);
    sub_100232068(0);
  }
}

uint64_t sub_100227E68(unsigned int a1, char a2, int a3, uint64_t (*a4)(void, void, void))
{
  byte_100A0F3A8 = 0;
  off_100A0F3B0 = 0;
  byte_100A0F3B8 = 0;
  dword_100A0F3C8 = 2139062143;
  byte_100A0F3CC = 127;
  if (a1 >= 5)
  {
    sub_10025B8C0();
    return 4062;
  }
  byte_100A0F3CD = a1;
  byte_1009FAED4 = a2;
  bzero(&unk_100A0B280, 0x4128uLL);
  uint64_t v7 = sub_100228058();
  if (v7)
  {
    uint64_t v4 = v7;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_GAP_GenerateAddress failed with status %!", v8, v9, v10, v11, v12, v13, v14, v4);
      uint64_t v15 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
LABEL_7:
      }
        sub_100744F6C();
    }
  }
  else
  {
    off_100A0F3C0 = a4;
    if (a3)
    {
      uint64_t v4 = sub_10020A6E0((uint64_t (*)(void, void, void))sub_100227CEC);
      if (v4)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_InitMultipleAdvertising failed with status %!", v17, v18, v19, v20, v21, v22, v23, v4);
          unsigned int v24 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            goto LABEL_7;
          }
        }
      }
    }
    else
    {
      sub_100227DE4();
      off_100A0F3F8 = a4;
      if (!a4) {
        return 0;
      }
      uint64_t v4 = sub_1000268E4((uint64_t)sub_100228104, 0, 0, 0);
      if (v4)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not register LE GAP Init Callback timer, status:%!", v25, v26, v27, v28, v29, v30, v31, v4);
          uint64_t v32 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 4062;
      }
    }
  }
  return v4;
}

uint64_t sub_100228058()
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (byte_100A0F3CD != 3) {
    return 0;
  }
  uint64_t v0 = sub_10022920C(3);
  if (v0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"creaetAddress with address type %d failed with error %! in LE_GAP_GenerateAddress", v1, v2, v3, v4, v5, v6, v7, byte_100A0F3CD);
      uint64_t v8 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v0;
}

uint64_t sub_100228104()
{
  return off_100A0F3F8(0, 0, 0);
}

uint64_t sub_10022811C(unint64_t a1)
{
  if (byte_100A0F400)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Cannot override local address while in private mode", v1, v2, v3, v4, v5, v6, v7, v39);
      uint64_t v8 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 408;
  }
  if (!a1)
  {
    byte_100A0F401 = 0;
    sub_100224730();
    int v28 = sub_100058654();
    uint64_t result = 0;
    if (!v28) {
      return result;
    }
    sub_100056E24((uint64_t)"Going back to self rotating address", v21, v22, v23, v24, v25, v26, v27, v39);
    uint64_t v29 = sub_100050B4C(0x42u);
    BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v30) {
      return result;
    }
    *(_DWORD *)long long buf = 136446210;
    uint64_t v41 = sub_100050714();
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    return 0;
  }
  if ((a1 & 0xFF000000000000) != 0)
  {
    sub_1002283C8();
    byte_100A0F401 = 1;
    uint64_t v11 = (char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD;
    v11[6] = a1;
    *((_WORD *)v11 + 2) = ((a1 << 16) & 0xFF00000000 | ((unint64_t)BYTE1(a1) << 40)) >> 32;
    *(_DWORD *)uint64_t v11 = a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
    if (sub_100058654())
    {
      uint64_t v19 = *((unsigned char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD)
          ? "Random"
          : "Public";
      sub_100056E24((uint64_t)"Overriding address to %s:%:", v12, v13, v14, v15, v16, v17, v18, (uint64_t)v19);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v41 = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    sub_1002284E4((int *)((char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD), 0);
    return 0;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Cannot set local public address !", v31, v32, v33, v34, v35, v36, v37, v39);
    uint64_t v38 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 101;
}

uint64_t sub_1002283C8()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Canceling PrivateAddressTimer gPrivateMode=%d gOverrideLocalAddress=%d gHoldStableAddress=%d", v0, v1, v2, v3, v4, v5, v6, byte_100A0F400);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v10 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t result = dword_100A0F40C;
  if (dword_100A0F40C)
  {
    uint64_t result = sub_100026DB4(dword_100A0F40C);
    dword_100A0F40C = 0;
  }
  return result;
}

uint64_t sub_1002284B8(unint64_t a1)
{
  return (a1 << 32) & 0xFF0000000000 | (a1 << 48) | (a1 << 16) & 0xFF00000000 | a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
}

void sub_1002284E4(int *a1, int a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_refreshLeAddressHelper gNeedToStopAdvertisingWhenAddressChanges=%d gOverrideLocalAddress:%d gHoldStableAddress=%d callCount=%d gLeHoldStablePrivateAddressTimer=%d gLeCurrentAddress=%d gLeNonConnectableAddressType=%d gLeNonConnectableSecondaryAddressType=%d", v4, v5, v6, v7, v8, v9, v10, byte_100A0F3B8);
    uint64_t v11 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      *(void *)&uint8_t buf[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  byte_100A0F419 = 1;
  if (byte_100A0F3B8 == 1)
  {
    byte_100A0F3B8 = 0;
    sub_100208D10(1);
  }
  sub_1002264D0();
  if (!sub_10020A6AC() || !a2) {
    goto LABEL_20;
  }
  if (*(unsigned char *)a1 == 1)
  {
    sub_10020A6A0(a1, 0, v12, v13, v14, v15, v16, v17);
    sub_10020A4D8(a1, 4u, 0, v18, v19, v20, v21, v22);
  }
  __int16 v78 = 0;
  int v77 = 0;
  char v76 = 1;
  arc4random_buf(&v77, 6uLL);
  LOBYTE(v77) = v77 & 0x3F;
  if (byte_1009FAED6)
  {
    if (byte_1009FAED5 != 3)
    {
      if (byte_1009FAED5 != 2) {
        goto LABEL_15;
      }
      int v28 = (int *)&v76;
      goto LABEL_14;
    }
    uint64_t v55 = sub_10024052C();
    __int16 v75 = 0;
    int v74 = 0;
    *(_WORD *)&buf[5] = 0;
    *(_DWORD *)&buf[1] = 0;
    buf[0] = 1;
    do
    {
      arc4random_buf(&buf[1], 3uLL);
      BOOL v56 = *(unsigned __int16 *)&buf[1] == (unsigned __int16)v74 && buf[3] == BYTE2(v74);
    }
    while (v56 || !(*(unsigned __int16 *)&buf[1] ^ 0xFF | buf[3]));
    buf[1] = buf[1] & 0x3F | 0x40;
    uint64_t v57 = sub_10023E880((__int16 *)&buf[1], 1);
    if (v57)
    {
      uint64_t v58 = v57;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to generate a non connectable random address with status %! for address %:, falling back to non resolvable", v59, v60, v61, v62, v63, v64, v65, v58);
        char v66 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    else
    {
      char v73 = 0;
      __int16 v72 = 0;
      uint64_t v67 = sub_100180780(v55, (__int16 *)&buf[1], (uint64_t)&v72);
      if (!v67)
      {
        int v28 = (int *)buf;
LABEL_14:
        sub_10020A4D8(v28, 1u, 0, v23, v24, v25, v26, v27);
        goto LABEL_15;
      }
      uint64_t v68 = v67;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to resolve the non connectable random address with status %! for address %:, falling back to non resolvable", v69, v70, v61, v62, v63, v64, v65, v68);
        uint64_t v71 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
          sub_100745764();
        }
      }
    }
    sub_10020A4D8((int *)&v76, 1u, 0, v61, v62, v63, v64, v65);
    return;
  }
LABEL_15:
  if (sub_100058654())
  {
    uint64_t v36 = "  Non Connectable:";
    if (!byte_1009FAED6) {
      uint64_t v36 = "";
    }
    sub_100056E24((uint64_t)"_refreshLeAddressHelper %@%@%@%@", v29, v30, v31, v32, v33, v34, v35, (uint64_t)v36);
    uint64_t v37 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v38 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      *(void *)&uint8_t buf[4] = v38;
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
LABEL_20:
  if (sub_10020B4F4()) {
    sub_10020BFEC();
  }
  if (*(unsigned char *)a1)
  {
    sub_10001BDE0(165, (uint64_t)sub_10022B558, v39, v40, v41, v42, v43, v44, (uint64_t)a1 + 1);
  }
  else
  {
    uint64_t v45 = sub_1000268E4((uint64_t)sub_10022B524, 0, 0, 0);
    if (v45)
    {
      uint64_t v46 = v45;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to register a fake GAPAddressTypeChangedCB status:%!", v47, v48, v49, v50, v51, v52, v53, v46);
        uint64_t v54 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_1002283C8();
      sub_10022B58C();
      byte_100A0F419 = 0;
      sub_10022639C();
    }
  }
  sub_100199524();
}

uint64_t sub_100228998()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_GAP_TerminateAdvertising", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v17);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v17 = 136446210;
      *(void *)&v17[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v17, 0xCu);
    }
  }
  sub_1002267A4(0);
  byte_100A0F3A8 = 0;
  off_100A0F3B0 = 0;
  byte_100A0F3CD = 0;
  sub_10020A4B4();
  return sub_10020AB70(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_100228A7C(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned __int8 a7, unsigned __int8 a8)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if ((qword_100A0B250 & 0x40) != 0)
  {
    if ((byte_100A0B258 & 8) != 0)
    {
      if (sub_100241B50())
      {
        if (a1) {
          uint64_t v33 = a1;
        }
        else {
          uint64_t v33 = 204;
        }
        if (a2) {
          uint64_t v34 = a2;
        }
        else {
          uint64_t v34 = 108;
        }
        if (a5) {
          uint64_t v35 = a5;
        }
        else {
          uint64_t v35 = 20;
        }
        uint64_t v16 = sub_100218014(v33, v34, v35, a6, 0, 12, a3, a4, a7, a8);
        if (v16)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Could not start auto-connect : %!", v36, v37, v38, v39, v40, v41, v42, v16);
            uint64_t v43 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
      }
      else
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"There are no devices in the filter accept list. Can't trigger auto-connection.", v44, v45, v46, v47, v48, v49, v50, v53);
          uint64_t v51 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 4066;
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"We can only be in auto connection mode in Central role.", v17, v18, v19, v20, v21, v22, v23, v53);
        uint64_t v24 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 4065;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Device does not support incoming connections.", v8, v9, v10, v11, v12, v13, v14, v53);
      uint64_t v15 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1330;
  }
  return v16;
}

uint64_t sub_100228C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (a1 && sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 70) == 1)
    {
      return sub_100235AE0(a1, a2, a3, a4, a5);
    }
    else
    {
      return sub_10021A718(a1, a2, a3, a4, a5, a6, a7);
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v15, v16, v17, v18, v19, v20, v21, v23);
      uint64_t v22 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
}

uint64_t sub_100228DB0(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (a1 && sub_100197770(a1))
  {
    return sub_10021AC58(a1, a2, a3, a4, a5, a6);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v13, v14, v15, v16, v17, v18, v19, v21);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
}

uint64_t sub_100228E9C(_DWORD *a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  uint64_t v1 = sub_100197B34(a1);

  return sub_100223D18(v1);
}

uint64_t sub_100228EE0(uint64_t (*a1)(void))
{
  uint64_t v12 = 0;
  if (!dword_100A198B8) {
    return 103;
  }
  while (sub_100198EB8(&v12))
  {
    if (*(unsigned char *)(v12 + 124) != 7)
    {
      if (sub_100223D18(v12))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to disconnect handle %x (address %:)", v2, v3, v4, v5, v6, v7, v8, v12);
          uint64_t v9 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          {
            uint64_t v10 = sub_100050714();
            *(_DWORD *)long long buf = 136446466;
            uint64_t v14 = v10;
            __int16 v15 = 1024;
            int v16 = 0xFFFF;
            _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
          }
        }
      }
      off_100A0B1A8 = a1;
    }
  }
  if (off_100A0B1A8) {
    return 0;
  }
  else {
    return 122;
  }
}

uint64_t sub_100229064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10021ADB4(**(void **)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100229074(char a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  uint64_t result = 0;
  byte_100A0F408 = a1;
  return result;
}

uint64_t sub_1002290A0()
{
  return byte_100A0F408;
}

uint64_t sub_1002290AC(uint64_t a1, int a2)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if ((byte_100A0B258 & 0xC) != 0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_GAP is Asking to pair... because someone called StartBonding.", v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)v21);
      uint64_t v11 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v21 = 136446210;
        *(void *)&uint8_t v21[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", v21, 0xCu);
      }
    }
    return sub_10023F5B4(a1, a2);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"We can only pair in Central or peripheral role.", v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)v21);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4068;
  }
}

uint64_t sub_1002291F8(uint64_t result)
{
  byte_100A0F409 = result;
  return result;
}

uint64_t sub_100229204()
{
  return 152;
}

uint64_t sub_10022920C(uint64_t a1)
{
  switch((int)a1)
  {
    case 0:
      uint64_t v2 = 0;
      LOBYTE(dword_100A0F3CE[0]) = 0;
      *(int *)((char *)dword_100A0F3CE + 1) = xmmword_100A195C0;
      *(__int16 *)((char *)&word_100A0F3D2 + 1) = WORD2(xmmword_100A195C0);
      break;
    case 1:
      byte_100A0F3D5 = 1;
      arc4random_buf(&byte_100A0F3D6, 6uLL);
      uint64_t v2 = 0;
      byte_100A0F3D6 |= 0xC0u;
      break;
    case 2:
      byte_100A0F3DC = 1;
      while (1)
      {
        do
          arc4random_buf(&dword_100A0F3DD, 6uLL);
        while (!(dword_100A0F3DD | (unsigned __int16)word_100A0F3E1));
        if (dword_100A0F3DD ^ 0xFF | (unsigned __int16)word_100A0F3E1)
        {
          if (dword_100A0F3DD != xmmword_100A195C0
            || (unsigned __int16)word_100A0F3E1 != WORD2(xmmword_100A195C0))
          {
            break;
          }
        }
      }
      uint64_t v2 = 0;
      LOBYTE(dword_100A0F3DD) = dword_100A0F3DD & 0x3F;
      break;
    case 3:
      uint64_t v12 = sub_100240528();
      byte_100A0F3E3 = 1;
      do
      {
        do
          arc4random_buf(&word_100A0F3E4, 3uLL);
        while (!((unsigned __int16)word_100A0F3E4 | byte_100A0F3E6));
      }
      while (!((unsigned __int16)word_100A0F3E4 ^ 0xFF | byte_100A0F3E6));
      LOBYTE(word_100A0F3E4) = word_100A0F3E4 & 0x3F | 0x40;
      uint64_t v13 = sub_10023E880(&word_100A0F3E4, 0);
      if (v13)
      {
        uint64_t v2 = v13;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to generate a random address with status %! for address %:", v14, v15, v16, v17, v18, v19, v20, v2);
          uint64_t v21 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      else
      {
        char v24 = 0;
        __int16 v23 = 0;
        uint64_t v2 = sub_100180780(v12, &word_100A0F3E4, (uint64_t)&v23);
        if (v2) {
          goto LABEL_4;
        }
      }
      break;
    default:
      sub_10025B8C0();
      uint64_t v2 = 4069;
LABEL_4:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not generate a new address of type %d with status %!.", v3, v4, v5, v6, v7, v8, v9, a1);
        uint64_t v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      break;
  }
  return v2;
}

void sub_100229480(unsigned int a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"EnablePrivateMode:%d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v11 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  byte_100A0F400 = a1;
  if ((a1 & 1) == 0) {
    sub_100224730();
  }
}

uint64_t sub_100229558(unsigned int a1, char a2)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (a1 < 5 && a1)
  {
    byte_1009FAED5 = a1;
    byte_1009FAED6 = a2;
    sub_1002284E4((int *)((char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD), 1);
    return 0;
  }
  else
  {
    sub_10025B8C0();
    return 4071;
  }
}

uint64_t sub_1002295D0()
{
  if (!dword_100A198B8) {
    return 103;
  }
  unsigned int v0 = byte_100A0F3CD;
  byte_100A0F402 = byte_100A0F3CD != 0;
  if (byte_100A0F3CD == 3)
  {
    uint64_t v1 = sub_10022920C(3);
    if (v1)
    {
      uint64_t v2 = v1;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"createAddress with type %d failed with status %! in LE_GAP_RefreshAddress", v3, v4, v5, v6, v7, v8, v9, byte_100A0F3CD);
        uint64_t v10 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return v2;
    }
    unsigned int v0 = byte_100A0F3CD;
  }
  sub_1002284E4((int *)((char *)&dword_100A0F3CE[2 * v0] - v0), 1);
  if (!byte_100A0F3CD)
  {
    sub_100218E58(0, v11, v12, v13, v14, v15, v16, v17);
    sub_10020A1C0(0);
    sub_100232068(0);
  }
  return 0;
}

char *sub_1002296C8(unsigned int a1, uint64_t a2)
{
  if (a1) {
    uint64_t result = sub_10020A4C4(a1);
  }
  else {
    uint64_t result = (char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD;
  }
  int v4 = *(_DWORD *)result;
  __int16 v5 = *((_WORD *)result + 2);
  *(unsigned char *)(a2 + 6) = result[6];
  *(_WORD *)(a2 + 4) = v5;
  *(_DWORD *)a2 = v4;
  return result;
}

uint64_t sub_100229724(uint64_t result)
{
  uint64_t v1 = (char *)&dword_100A0F3CE[2 * byte_100A0F3CD] - byte_100A0F3CD;
  char v2 = v1[6];
  __int16 v3 = *((_WORD *)v1 + 2);
  *(_DWORD *)uint64_t result = *(_DWORD *)v1;
  *(_WORD *)(result + 4) = v3;
  *(unsigned char *)(result + 6) = v2;
  return result;
}

uint64_t sub_100229758(uint64_t result)
{
  int v1 = dword_100A0F3CE[0];
  __int16 v2 = word_100A0F3D2;
  *(unsigned char *)(result + 6) = byte_100A0F3D4;
  *(_WORD *)(result + 4) = v2;
  *(_DWORD *)uint64_t result = v1;
  return result;
}

uint64_t sub_10022977C()
{
  if (!BYTE9(xmmword_100A19600)) {
    return 0;
  }
  if (dword_100A198B8) {
    return 140;
  }
  LOBYTE(dword_100A0F3CE[0]) = 0;
  *(int *)((char *)dword_100A0F3CE + 1) = xmmword_100A195C0;
  *(__int16 *)((char *)&word_100A0F3D2 + 1) = WORD2(xmmword_100A195C0);
  sub_10022920C(2);
  byte_100A0F3D5 = 1;
  arc4random_buf(&byte_100A0F3D6, 6uLL);
  byte_100A0F3D6 |= 0xC0u;
  byte_100A0F3CD = 0;
  dword_100A0F40C = 0;
  dword_100A0F410 = 0;
  if (BYTE8(xmmword_100A19600)) {
    BOOL v1 = BYTE9(xmmword_100A19600) == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (v1) {
    char v2 = 4;
  }
  else {
    char v2 = 24;
  }
  byte_100A0B259 |= v2;
  sub_100236B00((uint64_t (*)(void, void, void, void, void, void, void, void))sub_100226074);
  sub_10023413C((__n128 *)&off_10099F1E8);
  sub_1002320F4();
  uint64_t result = 0;
  dword_100A198B8 = 1;
  off_100A0B1A8 = 0;
  byte_100A0F400 = 0;
  byte_100A0F401 = 0;
  byte_100A0F414 = 0;
  word_100A0F416 = 0;
  byte_100A0F418 = 0;
  byte_100A0F419 = 0;
  if (!byte_100A0F41A)
  {
    uint64_t result = 0;
    byte_100A0B1A0 = 0;
    byte_100A0F41B = 0;
    dword_100A0F41C = 0;
    word_100A0F420 = 0;
  }
  return result;
}

uint64_t sub_1002298EC(unsigned int a1, unsigned __int16 a2)
{
  if (dword_100A0F410) {
    sub_10022B750();
  }
  unsigned __int16 v41 = 0;
  uint64_t v4 = sub_10025BD90(dword_100A0F40C, &v41);
  if (v4)
  {
    uint64_t v5 = v4;
    if (!sub_100058654()) {
      goto LABEL_7;
    }
    sub_100056E24((uint64_t)"Failed to read timeout value for private address refresh timer, status:%! gHoldStableAddress:%d gHoldStableAddressCount:%d ", v6, v7, v8, v9, v10, v11, v12, v5);
    uint64_t v13 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v41 >= a1)
  {
    uint64_t v5 = sub_1000268E4((uint64_t)sub_100229B80, 0, a2, &dword_100A0F410);
    if (v5)
    {
      if (!sub_100058654()) {
        goto LABEL_7;
      }
      sub_100056E24((uint64_t)"Failed to register resetLeHoldStablePrivateAddress, status:%! gHoldStableAddress:%d gHoldStableAddressCount:%d ", v24, v25, v26, v27, v28, v29, v30, v5);
      uint64_t v31 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        goto LABEL_7;
      }
LABEL_6:
      sub_100744F6C();
LABEL_7:
      sub_10022B750();
      word_100A0F416 = 0;
      byte_100A0F414 = 0;
      return v5;
    }
  }
  else
  {
    uint64_t v15 = sub_10025BCC4(dword_100A0F40C, a2);
    if (v15)
    {
      uint64_t v5 = v15;
      if (!sub_100058654()) {
        goto LABEL_7;
      }
      sub_100056E24((uint64_t)"Failed to update private address refresh timer, status:%! gHoldStableAddress:%d gHoldStableAddressCount:%d", v16, v17, v18, v19, v20, v21, v22, v5);
      __int16 v23 = sub_100050B4C(0x42u);
      if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    ++word_100A0F416;
    uint64_t v5 = 116;
  }
  byte_100A0F414 = 1;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"EnableHoldStableAddress: gHoldStableAddressCount=%d gLeHoldStablePrivateAddressTimer=%d gLePrivateAddressTimer=%d", v32, v33, v34, v35, v36, v37, v38, (unsigned __int16)word_100A0F416);
    uint64_t v39 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v40 = sub_100050714();
      *(_DWORD *)long long buf = 136446210;
      uint64_t v43 = v40;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v5;
}

uint64_t sub_100229B80()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LeHoldStablePrivateAddress expired:%d PrivateAddressTimer active:%s", v0, v1, v2, v3, v4, v5, v6, (unsigned __int16)word_100A0F416);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v10 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t result = sub_10022B750();
  byte_100A0F414 = 0;
  word_100A0F416 = 0;
  return result;
}

uint64_t sub_100229C78(_DWORD *a1)
{
  unsigned __int16 v3 = 0;
  uint64_t result = sub_10025BD90(dword_100A0F40C, &v3);
  if (!result) {
    *a1 = 100 * v3;
  }
  return result;
}

unsigned char *sub_100229CC8(unsigned char *result, unsigned char *a2, unsigned char *a3, _WORD *a4, _DWORD *a5, _DWORD *a6)
{
  *uint64_t result = byte_100A0F414;
  *a2 = byte_100A0F401;
  *a3 = byte_100A0F400;
  *a4 = word_100A0F416;
  *a5 = dword_100A0F40C;
  *a6 = dword_100A0F410;
  return result;
}

uint64_t sub_100229D14(uint64_t result)
{
  word_100A0F424 = 10 * result;
  return result;
}

uint64_t sub_100229D28(uint64_t result)
{
  byte_100A0F41A = result;
  return result;
}

uint64_t sub_100229D34()
{
  if (!BYTE9(xmmword_100A19600)) {
    return 0;
  }
  if (!dword_100A198B8) {
    return 103;
  }
  sub_1002283C8();
  sub_10022B750();
  qword_100A0B250 = 0;
  sub_1002341F8(&off_10099F1E8);
  sub_1001DFF68();
  sub_1001F6400();
  byte_100A0B259 = 0;
  byte_100A0B258 = 0;
  byte_100A0F3CD = 0;
  byte_100A0B278 = 0;
  off_100A0B1A8 = 0;
  off_100A0B268 = 0;
  off_100A0B270 = 0;
  qword_100A0B260 = 0;
  byte_100A0B1A0 = 0;
  byte_100A0F41B = 0;
  byte_100A0F418 = 0;
  byte_100A0F400 = 0;
  byte_100A0F401 = 0;
  byte_100A0F414 = 0;
  word_100A0F416 = 0;
  byte_100A0F419 = 0;
  sub_100229F14();
  sub_100228998();
  sub_100241C3C();
  sub_10010A510();
  sub_10024126C();
  sub_100236F58();
  sub_100232190();
  sub_1002175E0();
  sub_10010A060();
  if (dword_100A0F428)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Canceling power assertion", v0, v1, v2, v3, v4, v5, v6, *(uint64_t *)v9);
      uint64_t v7 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v9 = 136446210;
        *(void *)&v9[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", v9, 0xCu);
      }
    }
    sub_100026DB4(dword_100A0F428);
    dword_100A0F428 = 0;
    qword_100A0F430 = 0;
    sub_10010C9D0();
  }
  uint64_t result = 0;
  dword_100A198B8 = 0;
  return result;
}

uint64_t sub_100229F14()
{
  uint64_t result = sub_10020C3A0();
  if (result)
  {
    if (sub_10020B4F4()) {
      sub_10020B324();
    }
    return sub_10020B22C(0, 0);
  }
  return result;
}

uint64_t sub_100229F5C(uint64_t (*a1)(void, void), uint64_t (*a2)(void, void))
{
  if (!sub_10020C3A0()) {
    return 0;
  }
  uint64_t v4 = sub_10020B22C(a1, a2);
  if (v4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_InitPeriodicAdvertising failed with status %!", v5, v6, v7, v8, v9, v10, v11, v4);
      uint64_t v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v4;
}

uint64_t sub_100229FF0(unsigned __int8 *a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if (sub_10020C3A0())
  {
    unsigned int v2 = *a1;
    if (v2 >= sub_10020A6AC())
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid advHandle=%d", v20, v21, v22, v23, v24, v25, v26, *a1);
        uint64_t v27 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 101;
    }
    else
    {
      uint64_t v3 = sub_10020B99C(a1);
      if (v3)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"LE_StartPeriodicAdvertising failed with status %! advHandle=%d ", v4, v5, v6, v7, v8, v9, v10, v3);
          uint64_t v11 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE GAP Periodic Advertising is not enabled", v12, v13, v14, v15, v16, v17, v18, v29);
      uint64_t v19 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 117;
  }
  return v3;
}

uint64_t sub_10022A138(unsigned int a1)
{
  if (!dword_100A198B8) {
    return 103;
  }
  if ((sub_10020C3A0() & 1) == 0)
  {
    if (!sub_100058654()) {
      return 117;
    }
    sub_100056E24((uint64_t)"LE GAP Periodic Advertising is not enabled", v11, v12, v13, v14, v15, v16, v17, v28);
    uint64_t v18 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      return 117;
    }
LABEL_14:
    sub_100744F6C();
    return 117;
  }
  if (!sub_10020B4F4())
  {
    if (!sub_100058654()) {
      return 117;
    }
    sub_100056E24((uint64_t)"LE_GAP_StopPeriodicAdvertising there is no active periodic advertising set.", v19, v20, v21, v22, v23, v24, v25, v28);
    uint64_t v26 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      return 117;
    }
    goto LABEL_14;
  }
  uint64_t v2 = sub_10020B5C0(a1, 0);
  if (v2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_StopPeriodicAdvertising failed with status %! advHandle=%d ", v3, v4, v5, v6, v7, v8, v9, v2);
      uint64_t v10 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  return v2;
}

void sub_10022A26C(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"LE_GAP_SetForceConnectionDelay Overriding Encryption and remote version information delay to %d", v2, v3, v4, v5, v6, v7, v8, a1);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  dword_100A0F404 = a1;
}

uint64_t sub_10022A2E0(uint64_t result, unsigned int a2)
{
  *((unsigned char *)&dword_100A0F3C8 + a2) = result;
  return result;
}

BOOL sub_10022A2F0()
{
  if (dword_100A198B8) {
    BOOL v0 = BYTE9(xmmword_100A19600) == 0;
  }
  else {
    BOOL v0 = 1;
  }
  return !v0;
}

uint64_t sub_10022A318()
{
  if (sub_100058654())
  {
    if (byte_100A0F419) {
      uint64_t v7 = "YES";
    }
    else {
      uint64_t v7 = "NO";
    }
    sub_100056E24((uint64_t)"Address rotation in progress:%s", v0, v1, v2, v3, v4, v5, v6, (uint64_t)v7);
    uint64_t v8 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v11 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return byte_100A0F419;
}

void sub_10022A3FC(int a1)
{
  if (a1)
  {
    dword_100A198B8 = 0;
    uint64_t v1 = sub_100228998();
    sub_1002419F0(v1, v2, v3, v4, v5, v6, v7, v8);
    sub_100232190();
    sub_1002174F4();
  }
  else
  {
    dword_100A198B8 = 1;
  }
}

BOOL sub_10022A44C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return 1;
  }
  size_t v2 = *a1;
  int v3 = *a2;
  if (v2 == v3)
  {
    return memcmp(a1 + 4, a2 + 4, v2) == 0;
  }
  else
  {
    *(_DWORD *)uint64_t v8 = 0;
    *(_DWORD *)uint64_t v7 = 0;
    if (v2 == 4)
    {
      v8[0] = 16;
      *(_OWORD *)&v8[4] = xmmword_1007BA4C6;
      *(_DWORD *)&v8[4] = bswap32(*((_DWORD *)a1 + 1));
    }
    else if (v2 == 2)
    {
      v8[0] = 16;
      *(_OWORD *)&v8[4] = xmmword_1007BA4C6;
      *(_WORD *)&unsigned char v8[6] = bswap32(*((unsigned __int16 *)a1 + 2)) >> 16;
    }
    else
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)a1;
      *(_DWORD *)&v8[16] = *((_DWORD *)a1 + 4);
    }
    if (v3 == 4)
    {
      v7[0] = 16;
      *(_OWORD *)&v7[4] = xmmword_1007BA4C6;
      *(_DWORD *)&v7[4] = bswap32(*((_DWORD *)a2 + 1));
    }
    else if (v3 == 2)
    {
      v7[0] = 16;
      *(_OWORD *)&v7[4] = xmmword_1007BA4C6;
      *(_WORD *)&v7[6] = bswap32(*((unsigned __int16 *)a2 + 2)) >> 16;
    }
    else
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
      *(_DWORD *)&v7[16] = *((_DWORD *)a2 + 4);
    }
    return *(void *)v8 == *(void *)v7
        && *(void *)&v8[8] == *(void *)&v7[8]
        && *(unsigned int *)&v8[16] == (unint64_t)*(unsigned int *)&v7[16];
  }
}

unint64_t sub_10022A5E0(unint64_t a1)
{
  return bswap64(a1) >> 16;
}

void sub_10022A5EC(int8x16_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(_DWORD *)(a4 + 16) = 0;
  *(unsigned char *)a4 = a2;
  switch(a2)
  {
    case 0x10:
      if (a3 == 1)
      {
        int8x16_t v7 = vrev64q_s8(*a1);
        int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
      }
      else
      {
        int8x16_t v8 = *a1;
      }
      *(int8x16_t *)(a4 + 4) = v8;
      break;
    case 4:
      if (a3 == 1) {
        unsigned int v9 = a1->i32[0];
      }
      else {
        unsigned int v9 = bswap32(a1->i32[0]);
      }
      *(_DWORD *)(a4 + 4) = v9;
      break;
    case 2:
      if (a3 == 1) {
        LOWORD(v6) = a1->i16[0];
      }
      else {
        unsigned int v6 = bswap32(a1->u16[0]) >> 16;
      }
      *(_WORD *)(a4 + 4) = v6;
      break;
    default:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid UUID length of %d when converting to LE_UUID", v10, v11, v12, v13, v14, v15, v16, a2);
        uint64_t v17 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      *(unsigned char *)a4 = 16;
      break;
  }
}

void sub_10022A6F4(unsigned char *a1, unsigned __int8 *a2, int a3)
{
  int v4 = *a2;
  switch(v4)
  {
    case 16:
      if (a3 == 1)
      {
        *a1 = a2[19];
        a1[1] = a2[18];
        a1[2] = a2[17];
        a1[3] = a2[16];
        a1[4] = a2[15];
        a1[5] = a2[14];
        a1[6] = a2[13];
        a1[7] = a2[12];
        a1[8] = a2[11];
        a1[9] = a2[10];
        a1[10] = a2[9];
        a1[11] = a2[8];
        a1[12] = a2[7];
        a1[13] = a2[6];
        a1[14] = a2[5];
        a1[15] = a2[4];
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)(a2 + 4);
      }
      break;
    case 4:
      int v7 = *((_DWORD *)a2 + 1);
      if (a3 == 1)
      {
        *a1 = v7;
        a1[1] = BYTE1(*((_DWORD *)a2 + 1));
        a1[2] = *((_WORD *)a2 + 3);
        a1[3] = a2[7];
      }
      else
      {
        a1[3] = v7;
        a1[2] = BYTE1(*((_DWORD *)a2 + 1));
        a1[1] = *((_WORD *)a2 + 3);
        *a1 = a2[7];
      }
      break;
    case 2:
      __int16 v5 = *((_WORD *)a2 + 2);
      if (a3 == 1)
      {
        *a1 = v5;
        unsigned __int8 v6 = a2[5];
      }
      else
      {
        *a1 = HIBYTE(v5);
        unsigned __int8 v6 = a2[4];
      }
      a1[1] = v6;
      break;
    default:
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Invalid UUID length of %d when copying to array", v8, v9, v10, v11, v12, v13, v14, *a2);
        uint64_t v15 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      break;
  }
}

uint64_t sub_10022A898(uint64_t result)
{
  byte_100A0F438 = result;
  return result;
}

uint64_t sub_10022A8A4(unint64_t a1, char a2, char a3, char a4)
{
  if ((a1 & 0xFFFFFFFFFFFFLL) != 0)
  {
    if (byte_100A0F438)
    {
      uint64_t v4 = 0;
      unsigned __int8 v5 = byte_100A0F438 + 1;
      unsigned __int8 v6 = qword_100A0F440;
      unsigned __int8 v7 = byte_100A0F438 + 1;
      do
      {
        uint64_t v9 = *v6;
        v6 += 2;
        uint64_t v8 = v9;
        if (v7 >= byte_100A0F438 && v8 == 0) {
          unsigned __int8 v7 = v4;
        }
        if (v8 == a1) {
          unsigned __int8 v5 = v4;
        }
        ++v4;
      }
      while (byte_100A0F438 != v4);
      if (a3) {
        goto LABEL_14;
      }
    }
    else
    {
      unsigned __int8 v7 = 1;
      unsigned __int8 v5 = 1;
      if (a3)
      {
LABEL_14:
        if (byte_100A0F438 <= v7)
        {
          uint64_t v21 = 106;
          goto LABEL_29;
        }
        if (byte_100A0F438 <= v5)
        {
          uint64_t v11 = &qword_100A0F440[2 * v7];
          uint64_t *v11 = a1;
          *((unsigned char *)v11 + 8) = a2;
          *((unsigned char *)v11 + 9) = a4;
          char v12 = byte_100A0F439 + 1;
LABEL_25:
          uint64_t v21 = 0;
          byte_100A0F439 = v12;
          goto LABEL_29;
        }
        goto LABEL_28;
      }
    }
    if (byte_100A0F438 <= v5)
    {
      uint64_t v21 = 101;
      goto LABEL_29;
    }
    uint64_t v22 = &qword_100A0F440[2 * v5];
    *uint64_t v22 = 0;
    *((_WORD *)v22 + 4) = 0;
    if (byte_100A0F439)
    {
      char v12 = byte_100A0F439 - 1;
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v21 = 0;
LABEL_29:
    uint64_t v23 = (a1 << 32) & 0xFF0000000000 | (a1 << 48) | (a1 << 16) & 0xFF00000000 | a1 & 0xFF000000 | (a1 >> 16) & 0xFF0000 | WORD2(a1) & 0xFF00 | BYTE6(a1);
    if (sub_100058654())
    {
      uint64_t v31 = "Random";
      if (!(_BYTE)v23) {
        uint64_t v31 = "Public";
      }
      sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_EnableFastLeConnectionForAddress %s:%: freeLocation:%d existingLocation:%d gFastLeConnectionMaxSlots:%d gFastLeConnectionUsedSlots:%d ret:%d", v24, v25, v26, v27, v28, v29, v30, (uint64_t)v31);
      uint64_t v32 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v33 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v37 = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    return v21;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"FastLeConnection:LE_GAP_IsFastLeConnectionEncryptionFakeEvent compare with zero address", v13, v14, v15, v16, v17, v18, v19, v35);
    uint64_t v20 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 101;
}

void sub_10022AB1C(uint64_t a1, unsigned __int16 **a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_FastLEConnectionReady status:%d role:%d address:%d localResolvableAddr:%d, peerResolvableAddr:%d interval:%d latency:%d timeout:%d centralClockAccuracy:%d LMPVersion:%d mfgr:%d LMPSubversion:%d featuresLength:%d txPHY:%d rxPHY:%d maxTxOctets:%d maxTxTime:%d maxRxOctets:%d maxRxTime:%d instantValue:%d", *((unsigned __int8 *)a2 + 62), *((unsigned __int16 *)a2 + 32), *((unsigned __int16 *)a2 + 33), *((unsigned __int16 *)a2 + 34), *((unsigned __int16 *)a2 + 35), *((unsigned __int16 *)a2 + 36), v4, a1);
    unsigned __int8 v5 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v53 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_FastLEConnectionReady Fast LE Connection not succesful status:%d fastLEConnectEnabled:%d", v6, v7, v8, v9, v10, v11, v12, a1);
      uint64_t v13 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = sub_100050714();
        *(_DWORD *)long long buf = 136446210;
        uint64_t v53 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    if (*((unsigned char *)*a2 + 316))
    {
      *((unsigned char *)*a2 + 316) = 0;
      uint64_t v15 = (uint64_t)*a2;
      if (*((unsigned char *)*a2 + 70))
      {
        uint64_t v16 = sub_100223DC8(v15);
        if (v16)
        {
          uint64_t v17 = v16;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_ReadRemoteVersionInformation failed %!", v18, v19, v20, v21, v22, v23, v24, v17);
            uint64_t v25 = sub_100050B4C(0x42u);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
              sub_100745764();
            }
          }
          sub_100223E64((uint64_t)*a2, v17);
        }
        else
        {
          *((_DWORD *)*a2 + 33) = 1;
        }
      }
      else if (sub_1002250C8(v15))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"FastLEConnection:Encryption start fails with status %!", v36, v37, v38, v39, v40, v41, v42, a1);
          uint64_t v43 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
            sub_100745764();
          }
        }
      }
      else
      {
        *((unsigned char *)*a2 + 125) = 1;
      }
    }
  }
  else
  {
    if (!sub_100197770((uint64_t)*a2)) {
      sub_10025B8C0();
    }
    if (*((unsigned char *)*a2 + 316) || (sub_10025B8C0(), *((unsigned char *)*a2 + 316)))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_FastLEConnectionReady Setting up connection fastLEConnectEncryptionPending:%d fastLEConnectionFakeEncryptEvent:%d", v26, v27, v28, v29, v30, v31, v32, *((unsigned __int8 *)*a2 + 317));
        uint64_t v33 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v34 = sub_100050714();
          *(_DWORD *)long long buf = 136446210;
          uint64_t v53 = v34;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
        }
      }
      (*a2)[40] = *((_WORD *)a2 + 20);
      (*a2)[41] = *((_WORD *)a2 + 21);
      (*a2)[42] = *((_WORD *)a2 + 22);
      *((unsigned char *)*a2 + 118) = *((unsigned char *)a2 + 46);
      *((unsigned char *)*a2 + 125) = *((unsigned char *)*a2 + 317);
      uint64_t v35 = (uint64_t)*a2;
      if (*((unsigned char *)*a2 + 125))
      {
        *(unsigned char *)(v35 + 167) = 16;
        *((unsigned char *)*a2 + 169) = 1;
        uint64_t v35 = (uint64_t)*a2;
        if (*((unsigned char *)*a2 + 318))
        {
          sub_100232CBC(0, v35, 1);
          uint64_t v35 = (uint64_t)*a2;
        }
      }
      *(_DWORD *)(v35 + 132) = 1;
      *((unsigned char *)*a2 + 126) = 1;
      sub_10021C760(0, (uint64_t)*a2, *((unsigned __int8 *)a2 + 47), *((_WORD *)a2 + 24), *((_WORD *)a2 + 25));
      *((_DWORD *)*a2 + 33) = 2;
      sub_10021BA7C(0, **a2, (unsigned __int16 **)((char *)a2 + 52));
      *((_DWORD *)*a2 + 33) = 3;
      *((_DWORD *)*a2 + 34) = 0;
      sub_10021BEC0(**a2, *((unsigned __int16 *)a2 + 32), *((unsigned __int16 *)a2 + 33), *((unsigned __int16 *)a2 + 34), *((unsigned __int16 *)a2 + 35));
      *((_DWORD *)*a2 + 33) = 4;
      sub_10021C2AC(0, (uint64_t)*a2, *((unsigned __int8 *)a2 + 61), *((unsigned __int8 *)a2 + 62));
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"FastLEConnection:LE_GAP_FastLEConnectionReady for invalid address %llu", v44, v45, v46, v47, v48, v49, v50, (uint64_t)a2[2]);
        uint64_t v51 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_10025B8C0();
    }
  }
}

void sub_10022AFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"AutoReconnect: state:%d scan:%d / %d ms numOfAddr:%d", v10, v11, v12, v13, v14, v15, v16, a1);
    uint64_t v17 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v19 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (off_100A0B248) {
    off_100A0B248(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_10022B0E4(uint64_t a1)
{
  return sub_100234720(**(void **)(a1 + 8));
}

uint64_t sub_10022B0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  if (a2 % a3)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid UUID list length: (%u %% %u) != 0", v7, v8, v9, v10, v11, v12, v13, a2);
      uint64_t v14 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4056;
  }
  if (a2)
  {
    unsigned int v19 = 0;
    unsigned __int8 v20 = *a5;
    while (v20 < 0x7Du)
    {
      uint64_t v21 = a4 + 20 * v20;
      sub_10022A5EC((int8x16_t *)(a1 + v19), a3, 1, (uint64_t)&v30);
      *(_OWORD *)uint64_t v21 = v30;
      *(_DWORD *)(v21 + 16) = v31;
      unsigned __int8 v20 = *a5 + 1;
      *a5 = v20;
      unsigned int v19 = (v19 + a3);
      if (v19 >= a2) {
        return 0;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid index %u for UUIDs in parseADUuids", v22, v23, v24, v25, v26, v27, v28, *a5);
      uint64_t v29 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4056;
  }
  return 0;
}

uint64_t sub_10022B274(int8x16_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a3;
  unsigned __int8 v5 = a2 - a3;
  if (a2 < a3)
  {
    if (!sub_100058654()) {
      return 4057;
    }
    sub_100056E24((uint64_t)"Invalid service data length: %d < %d (UUID size=%d)", v7, v8, v9, v10, v11, v12, v13, a2);
    uint64_t v14 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      return 4057;
    }
    goto LABEL_12;
  }
  if (!a4)
  {
    if (!sub_100058654()) {
      return 4057;
    }
    sub_100056E24((uint64_t)"Invalid parsedData for parseADServiceData", v25, v26, v27, v28, v29, v30, v31, v45);
    uint64_t v32 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      return 4057;
    }
LABEL_12:
    sub_100744F6C();
    return 4057;
  }
  uint64_t v16 = (char *)(a4 + 5632);
  if (*(unsigned __int8 *)(a4 + 5632) >= 0xAuLL)
  {
    if (!sub_100058654()) {
      return 4057;
    }
    sub_100056E24((uint64_t)"Invalid parsedData nbServiceData %u for parseADServiceData", v17, v18, v19, v20, v21, v22, v23, *v16);
    uint64_t v24 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return 4057;
    }
    goto LABEL_12;
  }
  uint64_t v34 = a4 + 56 * *(unsigned __int8 *)(a4 + 5632);
  sub_10022A5EC(a1, a3, 1, (uint64_t)&v46);
  *(_OWORD *)(v34 + 5072) = v46;
  *(_DWORD *)(v34 + 5088) = v47;
  if (v5 >= 0x20u)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid size %d for serviceData in parseADServiceData", v35, v36, v37, v38, v39, v40, v41, v5);
      uint64_t v42 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4057;
  }
  memmove((void *)(a4 + 5072 + 56 * *v16 + 20), &a1->i8[v4], v5);
  uint64_t result = 0;
  char v44 = *v16;
  *(_WORD *)(a4 + 5072 + 56 * *v16 + 52) = v5;
  *uint64_t v16 = v44 + 1;
  return result;
}

void sub_10022B494()
{
  dword_100A0F428 = 0;
  uint64_t v0 = sub_10010BA04();
  __int16 v1 = v0 - qword_100A0F430;
  if (v0 - qword_100A0F430 < 0x3E8)
  {
    sub_1000268E4((uint64_t)sub_10022B494, 0, (unsigned __int16)(1099 - v1) / 0x64u, &dword_100A0F428);
  }
  else
  {
    sub_10010C9D0();
  }
}

void sub_10022B524()
{
  sub_1002283C8();
  sub_10022B58C();
  byte_100A0F419 = 0;

  sub_10022639C();
}

void sub_10022B558()
{
  sub_1002283C8();
  sub_10022B58C();
  byte_100A0F419 = 0;

  sub_10022639C();
}

void sub_10022B58C()
{
  LOWORD(v0) = word_100A0F424;
  if (!word_100A0F424)
  {
    uint32_t v1 = arc4random();
    unsigned int v0 = v1 - 6000 * ((unsigned __int16)v1 / 0x1770u) + 6000;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Registering PrivateAddressTimer gPrivateMode=%d gOverrideLocalAddress=%d gLePrivateAddressTimer=%d gLeCurrentAddress=%d gAutoAddressRefresh=%d gPrivateAddressRotateInterval=%d gPrivateAddressRotateIntervalOverride=%d nextRandomAddressChange=%d seconds gHoldStableAddress=%d", v2, v3, v4, v5, v6, v7, v8, byte_100A0F400);
    uint64_t v9 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v21 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (byte_1009FAED4)
  {
    uint64_t v10 = sub_1000268E4((uint64_t)sub_100224730, 0, (unsigned __int16)v0, &dword_100A0F40C);
    if (v10)
    {
      uint64_t v11 = v10;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to register a private address refresh timer, status:%!", v12, v13, v14, v15, v16, v17, v18, v11);
        uint64_t v19 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
  }
}

uint64_t sub_10022B750()
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Canceling LeHoldStablePrivateAddressTimer [%d]", v0, v1, v2, v3, v4, v5, v6, (unsigned __int16)word_100A0F416);
    uint64_t v7 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v10 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t result = dword_100A0F410;
  if (dword_100A0F410)
  {
    uint64_t result = sub_100026DB4(dword_100A0F410);
    dword_100A0F410 = 0;
  }
  return result;
}

void *sub_10022B82C()
{
  sub_100211560();
  sub_10020E5FC();
  uint64_t result = (void *)qword_100A0F640;
  if (qword_100A0F640)
  {
    do
    {
      uint64_t v1 = (void *)result[12];
      sub_100023010(result);
      uint64_t result = v1;
    }
    while (v1);
  }
  qword_100A0F640 = 0;
  return result;
}

uint64_t sub_10022B870()
{
  uint64_t v0 = sub_10020E33C();
  if (v0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ATT initialization failed with status %!", v1, v2, v3, v4, v5, v6, v7, v0);
      uint64_t v8 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else
  {
    sub_1002114FC((uint64_t)off_10099F200);
  }
  return v0;
}

uint64_t sub_10022B8F4(uint64_t a1)
{
  uint64_t v1 = sub_10020EE0C(a1);
  uint64_t v2 = qword_100A0F640;
  if (qword_100A0F640)
  {
    while (*(void **)v2 != v1)
    {
      uint64_t v2 = *(void *)(v2 + 96);
      if (!v2) {
        goto LABEL_4;
      }
    }
    return *(unsigned __int16 *)(v2 + 8);
  }
  else
  {
LABEL_4:
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"Could not find GATT session with HCI handle", v4, v5, v6, v7, v8, v9, v10, v12);
      uint64_t v11 = sub_100050B4C(0x45u);
      uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_100744F6C();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10022B97C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10022BA54(a1);
  if (v3)
  {
    LOWORD(v4) = *((_WORD *)v3 + 4);
  }
  else
  {
    uint64_t v5 = sub_100022FE8(0x70uLL);
    if (v5)
    {
      *(void *)uint64_t v5 = a2;
      __int16 v6 = word_100A0F648;
      int v4 = (unsigned __int16)word_100A0F648++ + 1;
      v5[4] = v4;
      if ((v4 & 0x10000) != 0)
      {
        word_100A0F648 = v6 + 2;
        v5[4] = v6 + 2;
        LOWORD(v4) = 1;
      }
      *((void *)v5 + 10) = 0;
      v5[44] = 0;
      *((void *)v5 + 2) = 0;
      *((void *)v5 + 3) = 0;
      uint64_t v7 = qword_100A0F640;
      *((void *)v5 + 12) = qword_100A0F640;
      *((void *)v5 + 13) = 0;
      if (v7) {
        *(void *)(v7 + 104) = v5;
      }
      qword_100A0F640 = (uint64_t)v5;
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to allocate a session.", v8, v9, v10, v11, v12, v13, v14, v17);
        uint64_t v15 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      LOWORD(v4) = 0;
    }
  }
  return (unsigned __int16)v4;
}

void *sub_10022BA54(uint64_t a1)
{
  uint64_t v1 = sub_10020EE0C(a1);
  uint64_t v2 = 0;
  if (v1)
  {
    uint64_t v3 = (void *)qword_100A0F640;
    if (qword_100A0F640)
    {
      while ((void *)*v3 != v1)
      {
        uint64_t v3 = (void *)v3[12];
        if (!v3) {
          return 0;
        }
      }
      return v3;
    }
  }
  return (void *)v2;
}

uint64_t sub_10022BAA4(unsigned int a1, _WORD *a2)
{
  uint64_t v3 = (uint64_t *)sub_10022BAF4(a1);
  if (!v3) {
    return 101;
  }
  int v4 = sub_10020EED8(*v3);
  if (!v4) {
    return 4100;
  }
  __int16 v5 = v4;
  uint64_t result = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_10022BAF4(unsigned int a1)
{
  uint64_t result = qword_100A0F640;
  if (qword_100A0F640)
  {
    while (*(unsigned __int16 *)(result + 8) != a1)
    {
      uint64_t result = *(void *)(result + 96);
      if (!result) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not find session with handle %x", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_10022BB88(uint64_t a1, __int16 a2)
{
  uint64_t v3 = sub_10022BA54(a1);
  if (!v3) {
    return 101;
  }
  sub_10020EF10(*v3, a2);
  return 0;
}

uint64_t sub_10022BBC8(unsigned int a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t *)sub_10022BAF4(a1);
  uint64_t result = 101;
  if (v7 && a2)
  {
    if (v7[2])
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F264(*v7, (uint64_t)sub_10022BC44, a3, (uint64_t)v7);
      if (!result)
      {
        v7[2] = a2;
        v7[3] = a4;
      }
    }
  }
  return result;
}

uint64_t sub_10022BC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    sub_10020EF10(a1, a3);
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  *(void *)(a4 + 16) = 0;

  return v8(a2, a3, v7);
}

uint64_t sub_10022BCA0(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)sub_10022BAF4(a1);
  *(_OWORD *)uint64_t v7 = xmmword_1007BA928;
  *(_OWORD *)((char *)&v7[2] + 1) = *(long long *)((char *)&xmmword_1007BA928 + 9);
  uint64_t result = 101;
  if (v5 && a2)
  {
    if (v5[2])
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F7A8(*v5, (uint64_t)sub_10022BD78, v7, (uint64_t)v5);
      if (!result)
      {
        v5[2] = a2;
        v5[3] = a3;
        v5[4] = 0;
        _OWORD v5[5] = 0;
        v5[6] = 0xFFFF000100000000;
        v5[7] = 0;
        v5[8] = 0;
        v5[9] = 0;
      }
    }
  }
  return result;
}

void sub_10022BD78(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6)
{
  if (a2 != 10)
  {
    uint64_t v7 = a2;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received error response for services discovery: %d", v24, v25, v26, v27, v28, v29, v30, v7);
        uint64_t v31 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_26;
    }
    unsigned int v37 = *(unsigned __int16 *)(a6 + 54);
    uint64_t v11 = (char *)sub_100022FE8(24 * (*(unsigned __int16 *)(a6 + 88) + (unint64_t)a4));
    __dst = v11;
    int v12 = 0;
    if (a4)
    {
      uint64_t v13 = (int8x16_t **)(a3 + 8);
      uint64_t v14 = v11;
      uint64_t v15 = a4;
      while (1)
      {
        int v16 = *(unsigned __int16 *)(a6 + 88);
        uint64_t v17 = &v14[24 * *(unsigned __int16 *)(a6 + 88)];
        *(_DWORD *)uint64_t v17 = *((_DWORD *)v13 - 2);
        if (a5 == 20) {
          break;
        }
        if (a5 == 6)
        {
          uint64_t v18 = &v14[24 * v16];
          uint64_t v19 = *v13;
          uint64_t v20 = 2;
LABEL_9:
          sub_10022A5EC(v19, v20, 1, (uint64_t)v38);
          long long v21 = *(_OWORD *)v38;
          *((_DWORD *)v18 + 5) = *(_DWORD *)&v38[16];
          *(_OWORD *)(v18 + 4) = v21;
        }
        if (*((unsigned __int16 *)v17 + 1) <= (unsigned __int16)v12) {
          int v12 = (unsigned __int16)v12;
        }
        else {
          int v12 = *((unsigned __int16 *)v17 + 1);
        }
        v13 += 2;
        v14 += 24;
        if (!--v15) {
          goto LABEL_14;
        }
      }
      uint64_t v18 = &v14[24 * v16];
      uint64_t v19 = *v13;
      uint64_t v20 = 16;
      goto LABEL_9;
    }
LABEL_14:
    uint64_t v22 = *(const void **)(a6 + 80);
    uint64_t v23 = *(unsigned __int16 *)(a6 + 88);
    if (v22)
    {
      memmove(__dst, v22, 24 * v23);
      sub_100023010(*(void **)(a6 + 80));
      LOWORD(v23) = *(_WORD *)(a6 + 88);
    }
    *(void *)(a6 + 80) = __dst;
    *(_WORD *)(a6 + 88) = v23 + a4;
    if (v12) {
      unsigned __int16 v32 = v12;
    }
    else {
      unsigned __int16 v32 = -1;
    }
    if (v37 > v32)
    {
      v38[0] = 16;
      *(_WORD *)&v38[1] = v32 + 1;
      *(_WORD *)&v38[3] = v37;
      int v39 = 0;
      *(_OWORD *)&v38[5] = xmmword_1007BA4D8;
      uint64_t v7 = sub_10020F7A8(*(void *)a6, (uint64_t)sub_10022BD78, (int *)v38, a6);
      if (!v7) {
        return;
      }
      goto LABEL_26;
    }
  }
  uint64_t v7 = 0;
LABEL_26:
  uint64_t v34 = *(void (**)(uint64_t, void, void, uint64_t))(a6 + 16);
  uint64_t v33 = *(void *)(a6 + 24);
  *(void *)(a6 + 16) = 0;
  v34(v7, *(void *)(a6 + 80), *(unsigned __int16 *)(a6 + 88), v33);
  uint64_t v35 = *(void **)(a6 + 80);
  if (v35) {
    sub_100023010(v35);
  }
  *(void *)(a6 + 80) = 0;
  *(_WORD *)(a6 + 88) = 0;
}

double sub_10022BFD8(unsigned int a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v7 = sub_10022BAF4(a1);
  long long v12 = *(_OWORD *)a3;
  int v13 = *((_DWORD *)a3 + 4);
  __chkstk_darwin(v7, *a3);
  uint64_t v9 = (char *)&v12 - v8;
  bzero((char *)&v12 - v8, v10);
  if (v7 && a2 && !*(void *)(v7 + 16))
  {
    sub_10022A6F4(v9, a3, 1);
    if (!sub_10020F674(*(void *)v7, (uint64_t)sub_10022C118, 10240, 1, 0xFFFFu, v9, *a3, v7))
    {
      *(void *)(v7 + 16) = a2;
      *(void *)(v7 + 24) = a4;
      double result = *(double *)&v12;
      *(_OWORD *)(v7 + 32) = v12;
      *(_DWORD *)(v7 + 48) = v13;
      *(_DWORD *)(v7 + 52) = -65535;
      *(void *)(v7 + 64) = 0;
      *(void *)(v7 + 72) = 0;
      *(void *)(v7 + 56) = 0;
    }
  }
  return result;
}

void sub_10022C118(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  if (a2 != 10)
  {
    uint64_t v6 = a2;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received error response for services matching UUID discovery: %d", v24, v25, v26, v27, v28, v29, v30, v6);
        uint64_t v31 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_21;
    }
    long long v9 = *(_OWORD *)(a5 + 48);
    long long v37 = *(_OWORD *)(a5 + 32);
    long long v38 = v9;
    long long v39 = *(_OWORD *)(a5 + 64);
    long long v35 = v37;
    int v36 = *(_DWORD *)(a5 + 48);
    size_t v10 = (char *)sub_100022FE8(24 * (*(unsigned __int16 *)(a5 + 88) + (unint64_t)a4));
    uint64_t v11 = v10;
    unsigned int v12 = 0;
    if (a4)
    {
      int v13 = (unsigned __int16 *)(a3 + 2);
      uint64_t v14 = v10;
      uint64_t v15 = a4;
      do
      {
        int v16 = &v14[24 * *(unsigned __int16 *)(a5 + 88)];
        *(_WORD *)int v16 = *(v13 - 1);
        unsigned int v18 = *v13;
        v13 += 2;
        unsigned int v17 = v18;
        *((_WORD *)v16 + 1) = v18;
        *((_DWORD *)v16 + 5) = v36;
        *(_OWORD *)(v16 + 4) = v35;
        if (v18 <= (unsigned __int16)v12) {
          unsigned int v12 = (unsigned __int16)v12;
        }
        else {
          unsigned int v12 = v17;
        }
        v14 += 24;
        --v15;
      }
      while (v15);
    }
    uint64_t v19 = *(const void **)(a5 + 80);
    if (v19)
    {
      memmove(v10, v19, 24 * *(unsigned __int16 *)(a5 + 88));
      sub_100023010(*(void **)(a5 + 80));
    }
    *(void *)(a5 + 80) = v11;
    *(_WORD *)(a5 + 88) += a4;
    if (v12) {
      unsigned __int16 v20 = v12;
    }
    else {
      unsigned __int16 v20 = -1;
    }
    if (WORD3(v38) > v20)
    {
      __chkstk_darwin(v10, v37);
      uint64_t v22 = (char *)&v35 - v21;
      bzero((char *)&v35 - v21, v23);
      sub_10022A6F4(v22, (unsigned __int8 *)&v37, 1);
      uint64_t v6 = sub_10020F674(*(void *)a5, (uint64_t)sub_10022C118, 10240, v20 + 1, 0xFFFFu, v22, v37, a5);
      if (!v6) {
        return;
      }
      goto LABEL_21;
    }
  }
  uint64_t v6 = 0;
LABEL_21:
  uint64_t v33 = *(void (**)(uint64_t, void, void, uint64_t))(a5 + 16);
  uint64_t v32 = *(void *)(a5 + 24);
  *(void *)(a5 + 16) = 0;
  v33(v6, *(void *)(a5 + 80), *(unsigned __int16 *)(a5 + 88), v32);
  uint64_t v34 = *(void **)(a5 + 80);
  if (v34) {
    sub_100023010(v34);
  }
  *(void *)(a5 + 80) = 0;
  *(_WORD *)(a5 + 88) = 0;
}

uint64_t sub_10022C374(unsigned int a1, uint64_t a2, __int16 a3, __int16 a4, uint64_t a5)
{
  uint64_t v9 = sub_10022BAF4(a1);
  char v11 = 8;
  __int16 v12 = a3;
  __int16 v13 = a4;
  int v15 = 0;
  long long v14 = xmmword_1007BA500;
  uint64_t result = 101;
  if (v9 && a2)
  {
    if (*(void *)(v9 + 16))
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F7A8(*(void *)v9, (uint64_t)sub_10022C46C, (int *)&v11, v9);
      if (!result)
      {
        *(void *)(v9 + 16) = a2;
        *(void *)(v9 + 24) = a5;
        *(void *)(v9 + 32) = 0;
        *(void *)(v9 + 40) = 0;
        *(_DWORD *)(v9 + 48) = 0;
        *(_WORD *)(v9 + 52) = a3;
        *(_WORD *)(v9 + 54) = a4;
        *(void *)(v9 + 64) = 0;
        *(void *)(v9 + 72) = 0;
        *(void *)(v9 + 56) = 0;
      }
    }
  }
  return result;
}

void sub_10022C46C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6)
{
  if (a2 == 10)
  {
    if (sub_10022E2FC(a6)) {
      return;
    }
  }
  else
  {
    uint64_t v7 = a2;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received error response for included services discovery: %d", v27, v28, v29, v30, v31, v32, v33, v7);
        uint64_t v34 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_30;
    }
    unsigned int v40 = *(unsigned __int16 *)(a6 + 54);
    char v11 = (char *)sub_100022FE8(28 * (*(unsigned __int16 *)(a6 + 88) + (unint64_t)a4));
    __dst = v11;
    int v12 = 0;
    if (a4)
    {
      __int16 v13 = (_WORD **)(a3 + 8);
      long long v14 = v11;
      for (uint64_t i = a4; i; --i)
      {
        uint64_t v16 = *(unsigned __int16 *)(a6 + 88);
        uint64_t v17 = 28 * v16;
        unsigned int v18 = &v14[28 * v16];
        *(_WORD *)unsigned int v18 = *((_WORD *)v13 - 4);
        uint64_t v19 = *v13;
        *((_WORD *)v18 + 1) = **v13;
        *((_WORD *)v18 + 2) = v19[1];
        if (a5 == 22)
        {
          uint64_t v21 = &v14[28 * v16];
          uint64_t v22 = (int8x16_t *)(v19 + 2);
          uint64_t v23 = 16;
        }
        else
        {
          if (a5 != 8)
          {
            if (a5 == 6)
            {
              unsigned __int16 v20 = &v14[28 * v16];
              v20[8] = 0;
              *((_WORD *)v20 + 6) = 0;
            }
            goto LABEL_12;
          }
          uint64_t v21 = &v14[28 * v16];
          uint64_t v22 = (int8x16_t *)(v19 + 2);
          uint64_t v23 = 2;
        }
        sub_10022A5EC(v22, v23, 1, (uint64_t)v41);
        long long v24 = *(_OWORD *)v41;
        *((_DWORD *)v21 + 6) = *(_DWORD *)&v41[16];
        *(_OWORD *)(v21 + 8) = v24;
LABEL_12:
        if (*(unsigned __int16 *)&v14[v17] <= (unsigned __int16)v12) {
          int v12 = (unsigned __int16)v12;
        }
        else {
          int v12 = *(unsigned __int16 *)&v14[v17];
        }
        v14 += 28;
        v13 += 2;
      }
    }
    uint64_t v25 = *(const void **)(a6 + 80);
    uint64_t v26 = *(unsigned __int16 *)(a6 + 88);
    if (v25)
    {
      memmove(__dst, v25, 28 * v26);
      sub_100023010(*(void **)(a6 + 80));
      LOWORD(v26) = *(_WORD *)(a6 + 88);
    }
    *(void *)(a6 + 80) = __dst;
    *(_WORD *)(a6 + 88) = v26 + a4;
    if (v12) {
      unsigned __int16 v35 = v12;
    }
    else {
      unsigned __int16 v35 = -1;
    }
    if (v40 > v35)
    {
      v41[0] = 8;
      *(_WORD *)&v41[1] = v35 + 1;
      *(_WORD *)&v41[3] = v40;
      int v42 = 0;
      *(_OWORD *)&v41[5] = xmmword_1007BA500;
      uint64_t v7 = sub_10020F7A8(*(void *)a6, (uint64_t)sub_10022C46C, (int *)v41, a6);
      if (!v7) {
        return;
      }
      goto LABEL_30;
    }
  }
  uint64_t v7 = 0;
LABEL_30:
  long long v37 = *(void (**)(uint64_t, void, void, uint64_t))(a6 + 16);
  uint64_t v36 = *(void *)(a6 + 24);
  *(void *)(a6 + 16) = 0;
  v37(v7, *(void *)(a6 + 80), *(unsigned __int16 *)(a6 + 88), v36);
  long long v38 = *(void **)(a6 + 80);
  if (v38) {
    sub_100023010(v38);
  }
  *(void *)(a6 + 80) = 0;
  *(_WORD *)(a6 + 88) = 0;
}

uint64_t sub_10022C710(unsigned int a1, uint64_t a2, __int16 a3, __int16 a4, uint64_t a5)
{
  uint64_t v9 = sub_10022BAF4(a1);
  char v11 = 8;
  __int16 v12 = a3;
  __int16 v13 = a4;
  int v15 = 0;
  long long v14 = xmmword_1007BA514;
  uint64_t result = 101;
  if (v9 && a2)
  {
    if (*(void *)(v9 + 16))
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F7A8(*(void *)v9, (uint64_t)sub_10022C808, (int *)&v11, v9);
      if (!result)
      {
        *(void *)(v9 + 16) = a2;
        *(void *)(v9 + 24) = a5;
        *(void *)(v9 + 32) = 0;
        *(void *)(v9 + 40) = 0;
        *(_DWORD *)(v9 + 48) = 0;
        *(_WORD *)(v9 + 52) = a3;
        *(_WORD *)(v9 + 54) = a4;
        *(void *)(v9 + 64) = 0;
        *(void *)(v9 + 72) = 0;
        *(void *)(v9 + 56) = 0;
      }
    }
  }
  return result;
}

void sub_10022C808(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6)
{
  uint64_t v6 = a6;
  if (a2 != 10)
  {
    uint64_t v7 = a2;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received error response for characteristics discovery: %d", v23, v24, v25, v26, v27, v28, v29, v7);
        uint64_t v30 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_31;
    }
    LODWORD(v8) = a4;
    int v38 = *(unsigned __int16 *)(a6 + 54);
    long long v43 = *(_OWORD *)(a6 + 32);
    int v44 = *(_DWORD *)(a6 + 48);
    size_t v10 = (char *)sub_100022FE8(28 * (*(unsigned __int16 *)(a6 + 88) + (unint64_t)a4));
    if (v8)
    {
      unsigned __int16 v11 = 0;
      LOWORD(v12) = 0;
      __int16 v13 = (char **)(a3 + 8);
      uint64_t v8 = v8;
      uint64_t v39 = v6;
      while (1)
      {
        long long v14 = v10;
        int v15 = &v10[28 * *(unsigned __int16 *)(v6 + 88)];
        uint64_t v16 = &v15[28 * v11];
        *(_WORD *)uint64_t v16 = *((_WORD *)v13 - 4);
        uint64_t v17 = *v13;
        v16[2] = **v13;
        *((_WORD *)v16 + 2) = *(_WORD *)(v17 + 1);
        unsigned int v18 = (unsigned __int16 *)(v16 + 4);
        if (a5 == 21)
        {
          uint64_t v19 = &v15[28 * v11];
          unsigned __int16 v20 = (int8x16_t *)(v17 + 3);
          uint64_t v21 = 16;
        }
        else
        {
          if (a5 != 7) {
            goto LABEL_10;
          }
          uint64_t v19 = &v15[28 * v11];
          unsigned __int16 v20 = (int8x16_t *)(v17 + 3);
          uint64_t v21 = 2;
        }
        sub_10022A5EC(v20, v21, 1, (uint64_t)v41);
        long long v22 = *(_OWORD *)v41;
        *((_DWORD *)v19 + 6) = *(_DWORD *)&v41[16];
        *(_OWORD *)(v19 + 8) = v22;
        uint64_t v6 = v39;
LABEL_10:
        if (!(_BYTE)v43 || sub_10022A44C((unsigned __int8 *)&v43, (unsigned __int8 *)&v15[28 * v11 + 8])) {
          ++v11;
        }
        if (*v18 <= (unsigned __int16)v12) {
          int v12 = (unsigned __int16)v12;
        }
        else {
          int v12 = *v18;
        }
        v13 += 2;
        --v8;
        size_t v10 = v14;
        if (!v8) {
          goto LABEL_22;
        }
      }
    }
    int v12 = 0;
    unsigned __int16 v11 = 0;
LABEL_22:
    uint64_t v31 = *(const void **)(v6 + 80);
    uint64_t v32 = *(unsigned __int16 *)(v6 + 88);
    if (v31)
    {
      memmove(v10, v31, 28 * v32);
      sub_100023010(*(void **)(v6 + 80));
      LOWORD(v32) = *(_WORD *)(v6 + 88);
    }
    *(void *)(v6 + 80) = v10;
    *(_WORD *)(v6 + 88) = v32 + v11;
    if (v12) {
      unsigned __int16 v33 = v12;
    }
    else {
      unsigned __int16 v33 = -1;
    }
    if (v38 - 1 > v33)
    {
      v41[0] = 8;
      *(_WORD *)&v41[1] = v33 + 1;
      *(_WORD *)&v41[3] = v38;
      int v42 = 0;
      *(_OWORD *)&v41[5] = xmmword_1007BA514;
      uint64_t v7 = sub_10020F7A8(a1, (uint64_t)sub_10022C808, (int *)v41, v6);
      if (!v7) {
        return;
      }
      goto LABEL_31;
    }
  }
  uint64_t v7 = 0;
LABEL_31:
  unsigned __int16 v35 = *(void (**)(uint64_t, void, void, uint64_t))(v6 + 16);
  uint64_t v34 = *(void *)(v6 + 24);
  *(void *)(v6 + 16) = 0;
  v35(v7, *(void *)(v6 + 80), *(unsigned __int16 *)(v6 + 88), v34);
  uint64_t v36 = *(void **)(v6 + 80);
  if (v36) {
    sub_100023010(v36);
  }
  *(void *)(v6 + 80) = 0;
  *(_WORD *)(v6 + 88) = 0;
}

__n128 sub_10022CACC(unsigned int a1, uint64_t a2, __n128 *a3, __int16 a4, __int16 a5, uint64_t a6)
{
  uint64_t v11 = sub_10022BAF4(a1);
  char v15 = 8;
  __int16 v16 = a4;
  __int16 v17 = a5;
  int v19 = 0;
  long long v18 = xmmword_1007BA514;
  __n128 result = *a3;
  __n128 v13 = *a3;
  unsigned __int32 v14 = a3[1].n128_u32[0];
  if (v11
    && a2
    && !*(void *)(v11 + 16)
    && !sub_10020F7A8(*(void *)v11, (uint64_t)sub_10022C808, (int *)&v15, v11))
  {
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a6;
    __n128 result = v13;
    *(__n128 *)(v11 + 32) = v13;
    *(_DWORD *)(v11 + 48) = v14;
    *(_WORD *)(v11 + 52) = a4;
    *(_WORD *)(v11 + 54) = a5;
    *(void *)(v11 + 64) = 0;
    *(void *)(v11 + 72) = 0;
    *(void *)(v11 + 56) = 0;
  }
  return result;
}

uint64_t sub_10022CBE0(unsigned int a1, uint64_t a2, __int16 a3, __int16 a4, uint64_t a5)
{
  uint64_t v9 = sub_10022BAF4(a1);
  char v11 = 4;
  __int16 v12 = a3;
  __int16 v13 = a4;
  uint64_t result = 101;
  if (v9 && a2)
  {
    if (*(void *)(v9 + 16))
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F574(*(void *)v9, (uint64_t)sub_10022CC98, (uint64_t)&v11, v9);
      if (!result)
      {
        *(void *)(v9 + 16) = a2;
        *(void *)(v9 + 24) = a5;
        *(void *)(v9 + 32) = 0;
        *(void *)(v9 + 40) = 0;
        *(_DWORD *)(v9 + 48) = 0;
        *(_WORD *)(v9 + 52) = a3;
        *(_WORD *)(v9 + 54) = a4;
        *(void *)(v9 + 64) = 0;
        *(void *)(v9 + 72) = 0;
        *(void *)(v9 + 56) = 0;
      }
    }
  }
  return result;
}

void sub_10022CC98(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  if (a2 != 10)
  {
    uint64_t v6 = a2;
    if (a2)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Received error response for descriptors discovery: %u", v21, v22, v23, v24, v25, v26, v27, v6);
        uint64_t v28 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      goto LABEL_21;
    }
    unsigned int v9 = *(unsigned __int16 *)(a5 + 54);
    size_t v10 = (char *)sub_100022FE8(40 * (*(unsigned __int16 *)(a5 + 88) + (unint64_t)a4));
    char v11 = v10;
    unsigned int v12 = 0;
    if (a4)
    {
      __int16 v13 = (long long *)(a3 + 4);
      unsigned __int32 v14 = v10;
      uint64_t v15 = a4;
      do
      {
        __int16 v16 = &v14[40 * *(unsigned __int16 *)(a5 + 88)];
        unsigned int v17 = *((unsigned __int16 *)v13 - 2);
        *(_WORD *)__int16 v16 = v17;
        long long v18 = *v13;
        *((_DWORD *)v16 + 5) = *((_DWORD *)v13 + 4);
        *(_OWORD *)(v16 + 4) = v18;
        *((void *)v16 + 3) = 0;
        *((_WORD *)v16 + 16) = 0;
        if (v17 <= (unsigned __int16)v12) {
          unsigned int v12 = (unsigned __int16)v12;
        }
        else {
          unsigned int v12 = v17;
        }
        v14 += 40;
        __int16 v13 = (long long *)((char *)v13 + 24);
        --v15;
      }
      while (v15);
    }
    int v19 = *(const void **)(a5 + 80);
    if (v19)
    {
      memmove(v10, v19, 40 * *(unsigned __int16 *)(a5 + 88));
      sub_100023010(*(void **)(a5 + 80));
    }
    *(void *)(a5 + 80) = v11;
    *(_WORD *)(a5 + 88) += a4;
    if (v12) {
      unsigned __int16 v20 = v12;
    }
    else {
      unsigned __int16 v20 = -1;
    }
    if (v9 > v20)
    {
      char v32 = 4;
      __int16 v33 = v20 + 1;
      __int16 v34 = v9;
      uint64_t v6 = sub_10020F574(*(void *)a5, (uint64_t)sub_10022CC98, (uint64_t)&v32, a5);
      if (!v6) {
        return;
      }
      goto LABEL_21;
    }
  }
  uint64_t v6 = 0;
LABEL_21:
  uint64_t v30 = *(void (**)(uint64_t, void, void, uint64_t))(a5 + 16);
  uint64_t v29 = *(void *)(a5 + 24);
  *(void *)(a5 + 16) = 0;
  v30(v6, *(void *)(a5 + 80), *(unsigned __int16 *)(a5 + 88), v29);
  uint64_t v31 = *(void **)(a5 + 80);
  if (v31) {
    sub_100023010(v31);
  }
  *(void *)(a5 + 80) = 0;
  *(_WORD *)(a5 + 88) = 0;
}

uint64_t sub_10022CE5C(unsigned int a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v7 = sub_10022BAF4(a1);
  char v9 = 10;
  __int16 v10 = a3;
  uint64_t result = 101;
  if (v7 && a2)
  {
    if (*(void *)(v7 + 16))
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F908(*(void *)v7, (uint64_t)sub_10022CF08, (uint64_t)&v9, v7);
      if (!result)
      {
        *(void *)(v7 + 16) = a2;
        *(void *)(v7 + 24) = a4;
        *(void *)(v7 + 32) = 0;
        *(void *)(v7 + 40) = 0;
        *(_DWORD *)(v7 + 48) = 0;
        *(_WORD *)(v7 + 52) = a3;
        *(void *)(v7 + 54) = 0;
        *(void *)(v7 + 70) = 0;
        *(void *)(v7 + 62) = 0;
        *(_WORD *)(v7 + 78) = 0;
      }
    }
  }
  return result;
}

void sub_10022CF08(uint64_t a1, uint64_t a2, const void *a3, unsigned int a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v6 = a2;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE_GATT_Handle_ReadLongCharacteristicValueResponse Received error response for characteristic read: %u", v7, v8, v9, v10, v11, v12, v13, v6);
      unsigned __int32 v14 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    __int16 v19 = *(_WORD *)(a5 + 52);
    int v20 = *(unsigned __int16 *)(a5 + 56);
    size_t v21 = a4;
    uint64_t v22 = (char *)sub_100022FE8(*(unsigned __int16 *)(a5 + 88) + (unint64_t)a4);
    memmove(&v22[*(unsigned __int16 *)(a5 + 88)], a3, v21);
    uint64_t v23 = *(const void **)(a5 + 80);
    if (v23)
    {
      memmove(v22, v23, *(unsigned __int16 *)(a5 + 88));
      sub_100023010(*(void **)(a5 + 80));
    }
    *(void *)(a5 + 80) = v22;
    unsigned __int16 v24 = *(_WORD *)(a5 + 88) + a4;
    *(_WORD *)(a5 + 88) = v24;
    int v25 = sub_10020EED8(*(void *)a5);
    if (!v24 || v20 + v24 > 0x1FF || v25 - 1 > (int)a4)
    {
      uint64_t v27 = *(void (**)(void, void, void, uint64_t))(a5 + 16);
      uint64_t v26 = *(void *)(a5 + 24);
      *(void *)(a5 + 16) = 0;
      v27(0, *(void *)(a5 + 80), *(unsigned __int16 *)(a5 + 88), v26);
      goto LABEL_12;
    }
    char v29 = 12;
    __int16 v30 = v19;
    __int16 v31 = v20 + v24;
    uint64_t v6 = sub_10020F9F8(*(void *)a5, (uint64_t)sub_10022CF08, (uint64_t)&v29, a5);
    if (!v6) {
      return;
    }
  }
  __int16 v16 = *(void (**)(uint64_t, void, void, uint64_t))(a5 + 16);
  uint64_t v15 = *(void *)(a5 + 24);
  *(void *)(a5 + 16) = 0;
  v16(v6, 0, 0, v15);
LABEL_12:
  uint64_t v28 = *(void **)(a5 + 80);
  if (v28) {
    sub_100023010(v28);
  }
  *(void *)(a5 + 80) = 0;
  *(_WORD *)(a5 + 88) = 0;
}

uint64_t sub_10022D0A0(unsigned int a1, uint64_t a2, long long *a3, __int16 a4, unsigned int a5, __int16 a6, uint64_t a7)
{
  uint64_t v13 = (uint64_t *)sub_10022BAF4(a1);
  char v27 = 8;
  __int16 v28 = a4;
  __int16 v29 = a5;
  long long v30 = *a3;
  int v31 = *((_DWORD *)a3 + 4);
  long long v25 = *a3;
  int v26 = *((_DWORD *)a3 + 4);
  if (a5 <= (unsigned __int16)(a4 - 1)) {
    return 101;
  }
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = 101;
  if (v13 && a2)
  {
    if (v13[2])
    {
      return 118;
    }
    else
    {
      uint64_t v15 = sub_10020F7A8(*v13, (uint64_t)sub_10022D224, (int *)&v27, (uint64_t)v13);
      if (v15)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send discover all services request for bearer 0x%x %!", v17, v18, v19, v20, v21, v22, v23, v14);
          unsigned __int16 v24 = sub_100050B4C(0x45u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(void *)(v14 + 16) = a2;
        *(void *)(v14 + 24) = a7;
        *(_OWORD *)(v14 + 32) = v25;
        *(_DWORD *)(v14 + 48) = v26;
        *(_WORD *)(v14 + 52) = a4;
        *(_WORD *)(v14 + 54) = a5;
        *(void *)(v14 + 56) = 0;
        *(void *)(v14 + 64) = 0;
        *(_WORD *)(v14 + 72) = 0;
        *(_WORD *)(v14 + 74) = a6;
        *(_DWORD *)(v14 + 76) = 0;
      }
    }
  }
  return v15;
}

void sub_10022D224(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6)
{
  uint64_t v9 = &qword_100A0F640;
  do
  {
    uint64_t v10 = *v9;
    uint64_t v9 = (uint64_t *)(*v9 + 96);
  }
  while (v10 != a6 && v10 != 0);
  if (v10)
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 16);
    if (a2 == 10)
    {
      if (!v12) {
        return;
      }
      *(void *)(a6 + 16) = 0;
      uint64_t v24 = *(void *)(a6 + 80);
      uint64_t v14 = *(unsigned __int16 *)(a6 + 88);
      uint64_t v25 = *(void *)(a6 + 24);
      uint64_t v26 = 10;
    }
    else if (a2)
    {
      if (sub_100058654()
        && (sub_100056E24((uint64_t)"Received error response for read value %d", v27, v28, v29, v30, v31, v32, v33, a2),
            __int16 v34 = sub_100050B4C(0x45u),
            os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)))
      {
        sub_100744F6C();
        if (!v12) {
          return;
        }
      }
      else if (!v12)
      {
        return;
      }
      *(void *)(a6 + 16) = 0;
      uint64_t v25 = *(void *)(a6 + 24);
      uint64_t v26 = a2;
      uint64_t v24 = 0;
      uint64_t v14 = 0;
    }
    else
    {
      unsigned int v13 = sub_10022E790(a6, a3, a4, a5);
      uint64_t v14 = *(unsigned __int16 *)(a6 + 88);
      if (v14 >= *(unsigned __int16 *)(a6 + 74)
        || v13 == 0xFFFF
        || (unsigned int v15 = *(unsigned __int16 *)(a6 + 54), v13 >= v15))
      {
        if (!v12) {
          return;
        }
        *(void *)(a6 + 16) = 0;
        uint64_t v24 = *(void *)(a6 + 80);
      }
      else
      {
        char v36 = 8;
        __int16 v37 = v13 + 1;
        __int16 v38 = v15;
        long long v39 = *(_OWORD *)(a6 + 32);
        int v40 = *(_DWORD *)(a6 + 48);
        if (!sub_10020F7A8(a1, (uint64_t)sub_10022D224, (int *)&v36, a6)) {
          return;
        }
        if (sub_100058654()
          && (sub_100056E24((uint64_t)"Failed to send read characteristics value request for bearer 0x%x", v16, v17, v18, v19, v20, v21, v22, a1), uint64_t v23 = sub_100050B4C(0x45u), os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)))
        {
          sub_100744F6C();
          if (!v12) {
            return;
          }
        }
        else if (!v12)
        {
          return;
        }
        *(void *)(a6 + 16) = 0;
        uint64_t v24 = *(void *)(a6 + 80);
        uint64_t v14 = *(unsigned __int16 *)(a6 + 88);
      }
      uint64_t v25 = *(void *)(a6 + 24);
      uint64_t v26 = 0;
    }
    v12(v26, v24, v14, v25);
    unsigned __int16 v35 = *(void **)(a6 + 80);
    if (v35) {
      sub_100023010(v35);
    }
    *(void *)(a6 + 80) = 0;
    *(_WORD *)(a6 + 88) = 0;
  }
}

uint64_t sub_10022D448(unsigned int a1, uint64_t a2, __int16 a3, __int16 a4, uint64_t a5)
{
  uint64_t v9 = sub_10022BAF4(a1);
  char v11 = 12;
  __int16 v12 = a3;
  __int16 v13 = a4;
  uint64_t result = 101;
  if (v9 && a2)
  {
    if (*(void *)(v9 + 16))
    {
      return 118;
    }
    else
    {
      uint64_t result = sub_10020F9F8(*(void *)v9, (uint64_t)sub_10022CF08, (uint64_t)&v11, v9);
      if (!result)
      {
        *(void *)(v9 + 16) = a2;
        *(void *)(v9 + 24) = a5;
        *(void *)(v9 + 32) = 0;
        *(void *)(v9 + 40) = 0;
        *(_DWORD *)(v9 + 48) = 0;
        *(_WORD *)(v9 + 52) = a3;
        *(_WORD *)(v9 + 54) = 0;
        *(_WORD *)(v9 + 56) = a4;
        *(void *)(v9 + 66) = 0;
        *(void *)(v9 + 58) = 0;
        *(void *)(v9 + 72) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_10022D508(unsigned int a1, uint64_t a2, __int16 a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  char v11 = (uint64_t *)sub_10022BAF4(a1);
  if (a2) {
    char v12 = 18;
  }
  else {
    char v12 = 82;
  }
  char v26 = v12;
  __int16 v27 = a3;
  __int16 v28 = a5;
  uint64_t v29 = a4;
  if (!v11) {
    return 101;
  }
  uint64_t v13 = (uint64_t)v11;
  if (v11[2]) {
    return 118;
  }
  uint64_t v16 = *v11;
  if (a2) {
    uint64_t v17 = sub_10022D60C;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v14 = sub_10020FAE8(v16, (uint64_t)v17, (__int16 *)&v26, v13);
  if (v14)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to write request for bearer 0x%x %!", v18, v19, v20, v21, v22, v23, v24, v13);
      uint64_t v25 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a6;
  }
  return v14;
}

void sub_10022D60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &qword_100A0F640;
  do
  {
    uint64_t v6 = *v5;
    uint64_t v5 = (uint64_t *)(*v5 + 96);
  }
  while (v6 != a3 && v6 != 0);
  if (v6)
  {
    uint64_t v8 = *(void (**)(uint64_t, void))(a3 + 16);
    *(void *)(a3 + 16) = 0;
    if (a2
      && sub_100058654()
      && (sub_100056E24((uint64_t)"Received error response for write value %d", v9, v10, v11, v12, v13, v14, v15, a2),
          uint64_t v16 = sub_100050B4C(0x45u),
          os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)))
    {
      sub_100744F6C();
      if (!v8) {
        return;
      }
    }
    else if (!v8)
    {
      return;
    }
    v8(a2, *(void *)(a3 + 24));
  }
}

uint64_t sub_10022D6C4(unsigned int a1, uint64_t a2, __int16 a3, __int16 a4, const void *a5, unsigned int a6, uint64_t a7)
{
  uint64_t v13 = (uint64_t *)sub_10022BAF4(a1);
  char v27 = 22;
  __int16 v28 = a3;
  __int16 v29 = a4;
  __int16 v30 = a6;
  uint64_t v14 = 101;
  uint64_t v31 = a5;
  if (v13 && a2)
  {
    uint64_t v15 = (uint64_t)v13;
    if (v13[2])
    {
      return 118;
    }
    else
    {
      if (a6 + 5 > sub_10020EED8(*v13)) {
        __int16 v30 = sub_10020EED8(*(void *)v15) - 5;
      }
      uint64_t v17 = sub_10020FC3C(*(void *)v15, (uint64_t)sub_10022D834, (int *)&v27, v15);
      if (v17)
      {
        uint64_t v14 = v17;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to write request for bearer 0x%x %!", v18, v19, v20, v21, v22, v23, v24, v15);
          uint64_t v25 = sub_100050B4C(0x45u);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(void *)(v15 + 16) = a2;
        *(void *)(v15 + 24) = a7;
        *(void *)(v15 + 32) = 0;
        *(void *)(v15 + 40) = 0;
        *(_DWORD *)(v15 + 48) = 0;
        *(_WORD *)(v15 + 52) = a3;
        *(_WORD *)(v15 + 54) = 0;
        *(_WORD *)(v15 + 56) = a4;
        *(void *)(v15 + 66) = 0;
        *(void *)(v15 + 72) = 0;
        *(void *)(v15 + 58) = 0;
        *(_WORD *)(v15 + 72) = a6;
        char v26 = sub_100022FE8(a6);
        *(void *)(v15 + 64) = v26;
        if (v26) {
          memmove(v26, a5, a6);
        }
        return 0;
      }
    }
  }
  return v14;
}

void sub_10022D834(int a1, uint64_t a2, uint64_t a3, int a4, void *__s2, size_t __n, uint64_t *a7)
{
  uint64_t v10 = &qword_100A0F640;
  do
  {
    uint64_t v11 = (uint64_t *)*v10;
    uint64_t v10 = (uint64_t *)(*v10 + 96);
  }
  while (v11 != a7 && v11 != 0);
  if (!v11) {
    return;
  }
  uint64_t v13 = *a7;
  *(unsigned char *)(*a7 + 96) = a2;
  uint64_t v14 = (void (*)(uint64_t, uint64_t))a7[2];
  if (a2)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Received error response %d for write long value - canceling execution", v15, v16, v17, v18, v19, v20, v21, a2);
      uint64_t v22 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v23 = sub_10020FD48(*a7, (uint64_t)sub_10022E918, 0, (uint64_t)a7);
    if (v23)
    {
      uint64_t v24 = v23;
      if (!sub_100058654()
        || (sub_100056E24((uint64_t)"Failed to execute write request %!", v25, v26, v27, v28, v29, v30, v31, v24),
            uint64_t v32 = sub_100050B4C(0x45u),
            !os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)))
      {
        if (!v14) {
          goto LABEL_18;
        }
        goto LABEL_16;
      }
      sub_100744F6C();
      if (v14)
      {
LABEL_16:
        a7[2] = 0;
        uint64_t v33 = a7[3];
        uint64_t v34 = a2;
LABEL_17:
        v14(v34, v33);
      }
LABEL_18:
      unsigned __int16 v35 = (void *)a7[8];
      if (v35)
      {
        sub_100023010(v35);
        a7[8] = 0;
      }
      return;
    }
    return;
  }
  if (*((unsigned __int16 *)a7 + 26) != a3)
  {
    if (sub_100058654()
      && (sub_100056E24((uint64_t)"Invalid handle, got 0x%x, expecting 0x%x", v58, v59, v60, v61, v62, v63, v64, a3),
          uint64_t v65 = sub_100050B4C(0x45u),
          os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)))
    {
      sub_100744F6C();
      if (!v14)
      {
LABEL_34:
        char v66 = (void *)a7[8];
        if (v66) {
          sub_100023010(v66);
        }
        return;
      }
    }
    else if (!v14)
    {
      goto LABEL_34;
    }
    a7[2] = 0;
    v14(1, a7[3]);
    goto LABEL_34;
  }
  uint64_t v36 = *((unsigned __int16 *)a7 + 27);
  unsigned __int16 v37 = v36 + __n;
  unsigned int v38 = *((unsigned __int16 *)a7 + 36);
  if ((int)v36 + (int)__n <= v38)
  {
    uint64_t v39 = a7[8];
    if (!memcmp((const void *)(v39 + v36), __s2, __n))
    {
      *((_WORD *)a7 + 27) = v37;
      if (v37 == v38)
      {
        uint64_t v67 = sub_10020FD48(v13, (uint64_t)sub_10022E984, 1, (uint64_t)a7);
        if (!v67) {
          return;
        }
        uint64_t v68 = v67;
        if (!sub_100058654()) {
          goto LABEL_58;
        }
        sub_100056E24((uint64_t)"Failed to execute write request %!", v69, v70, v71, v72, v73, v74, v75, v68);
        char v76 = sub_100050B4C(0x45u);
        if (!os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
          goto LABEL_58;
        }
      }
      else
      {
        if (v37 <= v38)
        {
          __int16 v86 = *((_WORD *)a7 + 28);
          char v99 = 22;
          __int16 v100 = a3;
          __int16 v101 = v86 + v37;
          __int16 v102 = v38 - v37;
          uint64_t v103 = v39 + v37;
          unsigned int v87 = sub_10020EED8(v13);
          if ((unsigned __int16)(v38 - v37) + 5 > v87) {
            __int16 v102 = sub_10020EED8(*a7) - 5;
          }
          uint64_t v88 = sub_10020FC3C(*a7, (uint64_t)sub_10022D834, (int *)&v99, (uint64_t)a7);
          if (!v88) {
            return;
          }
          uint64_t v68 = v88;
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to prepare write request %!", v89, v90, v91, v92, v93, v94, v95, v68);
            uint64_t v96 = sub_100050B4C(0x45u);
            if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
LABEL_58:
          uint64_t v97 = (void *)a7[8];
          if (v97)
          {
            sub_100023010(v97);
            a7[8] = 0;
          }
          if (v14)
          {
            a7[2] = 0;
            v14(v68, a7[3]);
          }
          return;
        }
        *(unsigned char *)(v13 + 96) = 13;
        uint64_t v77 = sub_10020FD48(v13, (uint64_t)sub_10022E918, 0, (uint64_t)a7);
        if (!v77) {
          return;
        }
        uint64_t v68 = v77;
        if (!sub_100058654()) {
          goto LABEL_58;
        }
        sub_100056E24((uint64_t)"Failed to execute write request %!", v78, v79, v80, v81, v82, v83, v84, v68);
        uint64_t v85 = sub_100050B4C(0x45u);
        if (!os_log_type_enabled(v85, OS_LOG_TYPE_ERROR)) {
          goto LABEL_58;
        }
      }
      sub_100744F6C();
      goto LABEL_58;
    }
  }
  *(unsigned char *)(v13 + 96) = 4;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Data doesn't match.", v40, v41, v42, v43, v44, v45, v46, v98);
    int v47 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v48 = sub_10020FD48(*a7, (uint64_t)sub_10022E918, 0, (uint64_t)a7);
  if (!v48)
  {
    if (v14)
    {
      a7[2] = 0;
      uint64_t v33 = a7[3];
      uint64_t v34 = 0;
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  uint64_t v49 = v48;
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to execute write request %!", v50, v51, v52, v53, v54, v55, v56, v49);
    uint64_t v57 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_10022DCD4(unsigned int a1, uint64_t a2, __int16 a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t *)sub_10022BAF4(a1);
  char v23 = 18;
  __int16 v24 = a3;
  __int16 v25 = a5;
  uint64_t v26 = a4;
  uint64_t v12 = 101;
  if (v11 && a2)
  {
    uint64_t v13 = (uint64_t)v11;
    if (v11[2])
    {
      return 118;
    }
    else
    {
      uint64_t v12 = sub_10020FAE8(*v11, (uint64_t)sub_10022D60C, (__int16 *)&v23, (uint64_t)v11);
      if (v12)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to write characteristic descriptor %: %!", v15, v16, v17, v18, v19, v20, v21, v13);
          uint64_t v22 = sub_100050B4C(0x45u);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        *(void *)(v13 + 16) = a2;
        *(void *)(v13 + 24) = a6;
      }
    }
  }
  return v12;
}

__n128 sub_10022DDC8(__n128 *a1)
{
  if (!a1) {
    sub_10025B8C0();
  }
  if (xmmword_100A0F650 != 0) {
    sub_10025B8C0();
  }
  if (a1)
  {
    __n128 result = *a1;
    off_100A0F660 = (uint64_t (*)(void, void, void, void))a1[1].n128_u64[0];
    xmmword_100A0F650 = (__int128)result;
  }
  return result;
}

void sub_10022DE1C()
{
  xmmword_100A0F650 = 0uLL;
  off_100A0F660 = 0;
}

uint64_t sub_10022DE30(uint64_t result)
{
  dword_1009FAED8 = result;
  return result;
}

void sub_10022DE3C(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  if (sub_100058654())
  {
    uint64_t v13 = a1 ? *a1 : 0;
    sub_100056E24((uint64_t)"_GATT_LE_ConnectCompleteCB notification from lmHandle 0x%x with status %!", v6, v7, v8, v9, v10, v11, v12, v13);
    uint64_t v14 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v30 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  uint64_t v15 = sub_10022B97C((uint64_t)a1, a2);
  if (v15)
  {
    uint64_t v16 = (void (*)(unsigned __int16 *, uint64_t, uint64_t, uint64_t, uint64_t))xmmword_100A0F650;
    if ((void)xmmword_100A0F650)
    {
      uint64_t v17 = v15;
      uint64_t v18 = sub_10020EF3C(a2);
      uint64_t v19 = 1;
      if (a1)
      {
        if (*((unsigned char *)a1 + 2) == 4) {
          uint64_t v19 = 2;
        }
        else {
          uint64_t v19 = 1;
        }
      }
      v16(a1, v17, v18, v19, a3);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Failed to create LE GATT session ", v20, v21, v22, v23, v24, v25, v26, v28);
    uint64_t v27 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10022DFBC(uint64_t a1, uint64_t a2)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_GATT_LE_DisconnectedCB on handle %p with reason %!", v4, v5, v6, v7, v8, v9, v10, a1);
    uint64_t v11 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v21 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a1)
  {
    if (*((void *)&xmmword_100A0F650 + 1)) {
      (*((void (**)(uint64_t, uint64_t))&xmmword_100A0F650 + 1))(a1, a2);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"_GATT_LE_DisconnectedCB handle is not valid with reason %!", v12, v13, v14, v15, v16, v17, v18, a2);
    uint64_t v19 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100745764();
    }
  }
}

void sub_10022E0F0(unsigned __int16 *a1, uint64_t a2, uint64_t a3, int a4)
{
  if (sub_100058654())
  {
    uint64_t v15 = a1 ? *a1 : 0;
    sub_100056E24((uint64_t)"_GATT_LE_LinkReadyCB notification from lmHandle 0x%x with status %!", v8, v9, v10, v11, v12, v13, v14, v15);
    uint64_t v16 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v27 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  if (a4)
  {
    if (sub_100058654())
    {
      if (a1) {
        uint64_t v24 = *a1;
      }
      else {
        uint64_t v24 = 0;
      }
      sub_100056E24((uint64_t)"GATT ready notification from lmHandle 0x%x (%x) with error %!", v17, v18, v19, v20, v21, v22, v23, v24);
      uint64_t v25 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100745764();
      }
    }
  }
  else if (off_100A0F660)
  {
    off_100A0F660(a1, a2, a3, 0);
  }
}

void sub_10022E260(uint64_t a1)
{
  uint64_t v1 = (void *)qword_100A0F640;
  if (qword_100A0F640)
  {
    while (1)
    {
      uint64_t v2 = v1[12];
      if (*v1 == a1) {
        break;
      }
      uint64_t v1 = (void *)v1[12];
      if (!v2) {
        return;
      }
    }
    if (v2) {
      *(void *)(v2 + 104) = v1[13];
    }
    uint64_t v3 = v1[13];
    if (v3) {
      uint64_t v4 = (uint64_t *)(v3 + 96);
    }
    else {
      uint64_t v4 = &qword_100A0F640;
    }
    *uint64_t v4 = v2;
    uint64_t v5 = (void *)v1[10];
    if (v5) {
      sub_100023010(v5);
    }
    v1[10] = 0;
    *((_WORD *)v1 + 44) = 0;
    sub_100023010(v1);
  }
}

BOOL sub_10022E2FC(uint64_t a1)
{
  unint64_t v1 = *(unsigned __int16 *)(a1 + 88);
  if (!*(_WORD *)(a1 + 88)) {
    return 0;
  }
  uint64_t v3 = *(void (**)(void))(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 80);
  if (*(unsigned char *)(v4 + 8))
  {
    unint64_t v5 = 0;
    uint64_t v6 = (unsigned __int8 *)(v4 + 36);
    while (v1 - 1 != v5)
    {
      int v7 = *v6;
      v6 += 28;
      ++v5;
      if (!v7)
      {
        BOOL v8 = v5 < v1;
        goto LABEL_9;
      }
    }
    return 0;
  }
  unint64_t v5 = 0;
  BOOL v8 = 1;
LABEL_9:
  __int16 v9 = *(_WORD *)(v4 + 28 * v5 + 2);
  char v11 = 10;
  __int16 v12 = v9;
  if (sub_10020F908(*(void *)a1, (uint64_t)sub_10022E3FC, (uint64_t)&v11, a1))
  {
    if (v3)
    {
      *(void *)(a1 + 16) = 0;
      v3();
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 48) = 0;
    *(_WORD *)(a1 + 52) = v9;
    *(_WORD *)(a1 + 54) = v5;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 56) = 0;
  }
  return v8;
}

void sub_10022E3FC(uint64_t a1, uint64_t a2, int8x16_t *a3, uint64_t a4, uint64_t a5)
{
  BOOL v8 = &qword_100A0F640;
  do
  {
    uint64_t v9 = *v8;
    BOOL v8 = (uint64_t *)(*v8 + 96);
  }
  while (v9 != a5 && v9 != 0);
  if (!v9) {
    return;
  }
  char v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16);
  if (a2 == 10)
  {
    if ((sub_10022E2FC(a5) & 1) == 0 && v11)
    {
      __int16 v12 = (_WORD *)(a5 + 88);
      uint64_t v27 = *(unsigned __int16 *)(a5 + 88);
      *(void *)(a5 + 16) = 0;
      v11(0, *(void *)(a5 + 80), v27, *(void *)(a5 + 24));
      uint64_t v28 = *(void **)(a5 + 80);
      if (!v28) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
    return;
  }
  if (a2)
  {
    if (sub_100058654()
      && (sub_100056E24((uint64_t)"Received error response for included service discovery 0x%x", v29, v30, v31, v32, v33, v34, v35, a2), uint64_t v36 = sub_100050B4C(0x45u), os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)))
    {
      sub_100744F6C();
      if (!v11) {
        return;
      }
    }
    else if (!v11)
    {
      return;
    }
    *(void *)(a5 + 16) = 0;
    v11(a2, 0, 0, *(void *)(a5 + 24));
    unsigned __int16 v37 = *(void **)(a5 + 80);
    if (v37) {
      sub_100023010(v37);
    }
    *(void *)(a5 + 80) = 0;
    __int16 v12 = (_WORD *)(a5 + 88);
    goto LABEL_39;
  }
  __int16 v12 = (_WORD *)(a5 + 88);
  uint64_t v13 = *(unsigned __int16 *)(a5 + 54);
  if (*(unsigned __int16 *)(a5 + 88) <= v13)
  {
    if (!sub_100058654()) {
      goto LABEL_32;
    }
    sub_100056E24((uint64_t)"Invalid position %d / %d", v38, v39, v40, v41, v42, v43, v44, v13);
    uint64_t v45 = sub_100050B4C(0x45u);
    if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  uint64_t v14 = *(unsigned __int16 *)(a5 + 52);
  uint64_t v15 = *(void *)(a5 + 80);
  if (*(unsigned __int16 *)(v15 + 28 * *(unsigned __int16 *)(a5 + 54) + 2) != v14)
  {
    if (!sub_100058654()) {
      goto LABEL_32;
    }
    sub_100056E24((uint64_t)"Handles don't match 0x%x 0x%x", v46, v47, v48, v49, v50, v51, v52, v14);
    uint64_t v53 = sub_100050B4C(0x45u);
    if (!os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  uint64_t v16 = v15 + 28 * *(unsigned __int16 *)(a5 + 54);
  int v18 = *(unsigned __int8 *)(v16 + 8);
  uint64_t v17 = v16 + 8;
  if (!v18)
  {
    if (a4 == 2 || a4 == 16)
    {
      sub_10022A5EC(a3, a4, 1, (uint64_t)&v75);
      long long v65 = v75;
      *(_DWORD *)(v17 + 16) = v76;
      *(_OWORD *)uint64_t v17 = v65;
      goto LABEL_44;
    }
    if (!sub_100058654()
      || (sub_100056E24((uint64_t)"Invalid length %d", v66, v67, v68, v69, v70, v71, v72, a4),
          uint64_t v73 = sub_100050B4C(0x45u),
          !os_log_type_enabled(v73, OS_LOG_TYPE_ERROR)))
    {
LABEL_32:
      if (sub_100058654()
        && (sub_100056E24((uint64_t)"Error parsing the read response", v54, v55, v56, v57, v58, v59, v60, v74),
            uint64_t v61 = sub_100050B4C(0x45u),
            os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)))
      {
        sub_100744F6C();
        if (!v11) {
          return;
        }
      }
      else if (!v11)
      {
        return;
      }
      *(void *)(a5 + 16) = 0;
      uint64_t v62 = *(void *)(a5 + 24);
      uint64_t v63 = 0;
      uint64_t v64 = 0;
LABEL_36:
      v11(0, v63, v64, v62);
      uint64_t v28 = *(void **)(a5 + 80);
      if (!v28)
      {
LABEL_38:
        *(void *)(a5 + 80) = 0;
LABEL_39:
        _WORD *v12 = 0;
        return;
      }
LABEL_37:
      sub_100023010(v28);
      goto LABEL_38;
    }
LABEL_31:
    sub_100744F6C();
    goto LABEL_32;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"UUID length is not 0 (%d) !", v19, v20, v21, v22, v23, v24, v25, *(unsigned __int8 *)(*(void *)(a5 + 80) + 28 * v13 + 8));
    uint64_t v26 = sub_100050B4C(0x45u);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
LABEL_44:
  if ((sub_10022E2FC(a5) & 1) == 0 && v11)
  {
    *(void *)(a5 + 16) = 0;
    uint64_t v63 = *(void *)(a5 + 80);
    uint64_t v64 = *(unsigned __int16 *)(a5 + 88);
    uint64_t v62 = *(void *)(a5 + 24);
    goto LABEL_36;
  }
}

uint64_t sub_10022E790(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  uint64_t v8 = a3;
  size_t v9 = 260 * a3;
  __chkstk_darwin(a1, a2);
  char v11 = (char *)&v21 - v10;
  bzero((char *)&v21 - v10, v9);
  if (a3)
  {
    size_t v12 = a4 - 2;
    uint64_t v13 = (const void **)(a2 + 8);
    uint64_t v14 = v8;
    uint64_t v15 = v11;
    do
    {
      uint64_t v16 = *((unsigned __int16 *)v13 - 4);
      *uint64_t v15 = v16;
      v15[129] = v12;
      uint64_t v17 = *v13;
      v13 += 2;
      memmove(v15 + 1, v17, v12);
      v15 += 130;
      --v14;
    }
    while (v14);
    if (!a1) {
      return v16;
    }
  }
  else
  {
    uint64_t v16 = 0xFFFFLL;
    if (!a1) {
      return v16;
    }
  }
  int v18 = *(void **)(a1 + 80);
  uint64_t v19 = (char *)sub_100022FE8(260 * (*(unsigned __int16 *)(a1 + 88) + v8));
  *(void *)(a1 + 80) = v19;
  if (!v19) {
    return 0xFFFFLL;
  }
  if (v18)
  {
    memmove(v19, v18, 260 * *(unsigned __int16 *)(a1 + 88));
    sub_100023010(v18);
    uint64_t v19 = *(char **)(a1 + 80);
  }
  memmove(&v19[260 * *(unsigned __int16 *)(a1 + 88)], v11, v9);
  *(_WORD *)(a1 + 88) += a3;
  return v16;
}

void sub_10022E918(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = &qword_100A0F640;
  do
  {
    unint64_t v5 = (void *)*v4;
    uint64_t v4 = (uint64_t *)(*v4 + 96);
  }
  while (v5 != a3 && v5 != 0);
  if (v5)
  {
    int v7 = (void (*)(void, void))a3[2];
    a3[2] = 0;
    if (v7) {
      v7(*(unsigned __int8 *)(*a3 + 96), a3[3]);
    }
    uint64_t v8 = (void *)a3[8];
    if (v8)
    {
      sub_100023010(v8);
      a3[8] = 0;
    }
  }
}

void sub_10022E984(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = &qword_100A0F640;
  do
  {
    unint64_t v5 = (void *)*v4;
    uint64_t v4 = (uint64_t *)(*v4 + 96);
  }
  while (v5 != a3 && v5 != 0);
  if (v5)
  {
    int v7 = (void (*)(uint64_t, void))a3[2];
    a3[2] = 0;
    if (v7) {
      v7(a2, a3[3]);
    }
    uint64_t v8 = (void *)a3[8];
    if (v8)
    {
      sub_100023010(v8);
    }
  }
}

const char *sub_10022EA04(char a1)
{
  if ((a1 + 1) > 0xBu) {
    return "UNKNOWN";
  }
  else {
    return off_10099F220[(char)(a1 + 1)];
  }
}

void sub_10022EA34(uint64_t a1, uint64_t a2)
{
  __int16 v12 = 0;
  int v11 = 0;
  if (sub_10017E37C(a2, (uint64_t)&v11))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not get address", v2, v3, v4, v5, v6, v7, v8, v10);
      size_t v9 = sub_100050B4C(0x55u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    sub_10022EAB8((uint64_t)&v11);
  }
}

uint64_t sub_10022EAB8(uint64_t result)
{
  uint64_t v1 = result;
  for (uint64_t i = 0; i != 294; i += 42)
  {
    uint64_t v3 = &qword_100A0F668[i];
    if (LOBYTE(qword_100A0F668[i + 2]))
    {
      int v4 = *(_DWORD *)((char *)v3 + 17);
      int v5 = *(unsigned __int16 *)((char *)v3 + 21);
      if (*(_DWORD *)v1 == v4 && *(unsigned __int16 *)(v1 + 4) == v5)
      {
        __n128 result = LODWORD(qword_100A0F668[i + 3]);
        if (result) {
          __n128 result = sub_100026DB4(result);
        }
        *(_OWORD *)&qword_100A0F668[i + 40] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 42] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 36] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 38] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 32] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 34] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 28] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 30] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 24] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 26] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 20] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 22] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 16] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 18] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 12] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 14] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 8] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 10] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 4] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 6] = 0u;
        *(_OWORD *)&qword_100A0F668[i + 2] = 0u;
      }
    }
  }
  return result;
}

uint64_t sub_10022EB64(uint64_t a1)
{
  qword_100A0F668 = a1;
  return 0;
}

uint64_t sub_10022EB74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10022EBE8(a1);
  uint64_t v4 = 0;
  if (v3 && byte_100A0FFA8)
  {
    if (*((unsigned __int8 *)v3 + 7) == 240)
    {
      int v5 = *(_DWORD *)((char *)v3 + 1);
      *(_WORD *)(a2 + 4) = *(_WORD *)((char *)v3 + 5);
      *(_DWORD *)a2 = v5;
      *(_DWORD *)(a2 + 24) = 5;
      *(_OWORD *)(a2 + 6) = *(_OWORD *)((char *)v3 + 12);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t *sub_10022EBE8(uint64_t a1)
{
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = &qword_100A0F668[v1];
    if (LOBYTE(qword_100A0F668[v1 + 2]))
    {
      int v3 = *(_DWORD *)((char *)v2 + 17);
      int v4 = *(unsigned __int16 *)((char *)v2 + 21);
      if (*(_DWORD *)a1 == v3 && *(unsigned __int16 *)(a1 + 4) == v4) {
        break;
      }
    }
    v1 += 42;
    if (v1 == 294) {
      return 0;
    }
  }
  return &qword_100A0F668[v1 + 2];
}

BOOL sub_10022EC3C(uint64_t a1)
{
  if (!byte_100A0FFA8) {
    goto LABEL_19;
  }
  if (*(_DWORD *)a1 != *(_DWORD *)qword_100A0FFB0
    || *(unsigned __int16 *)(a1 + 4) != *(unsigned __int16 *)(qword_100A0FFB0 + 4))
  {
    uint64_t v2 = 0;
    uint64_t v3 = qword_100A0FFB0 + 44;
    while (byte_100A0FFA8 - 1 != v2)
    {
      BOOL v4 = *(_DWORD *)a1 == *(_DWORD *)v3 && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(v3 + 4);
      v3 += 44;
      ++v2;
      if (v4) {
        goto LABEL_15;
      }
    }
    goto LABEL_19;
  }
LABEL_15:
  int v5 = sub_10022EE08(a1);
  if (!v5)
  {
LABEL_19:
    BOOL v7 = 0;
    unsigned __int8 v8 = 0;
    goto LABEL_20;
  }
  unsigned int v6 = (*((unsigned char *)v5 + 7) - 1);
  BOOL v7 = v6 < 0xEF;
  if (v6 >= 0xEF) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = *((unsigned char *)v5 + 7);
  }
LABEL_20:
  if (sub_100058654())
  {
    if (v7) {
      size_t v9 = "";
    }
    else {
      size_t v9 = "Not";
    }
    sub_10022EEC0(v8);
    sub_100056E24((uint64_t)"%s delaying security enforcement for Address=%: keys available ? %s pairing state :(%s)%d", v10, v11, v12, v13, v14, v15, v16, (uint64_t)v9);
    uint64_t v17 = sub_100050B4C(0x55u);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      uint64_t v20 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  return v7;
}

uint64_t *sub_10022EE08(uint64_t a1)
{
  __n128 result = sub_10022EBE8(a1);
  if (!result)
  {
    for (uint64_t i = 0; i != 294; i += 42)
    {
      BOOL v4 = &qword_100A0F668[i];
      if (!LOBYTE(qword_100A0F668[i + 2]))
      {
        int v13 = *(_DWORD *)a1;
        __int16 v14 = *(_WORD *)(a1 + 4);
        *((unsigned char *)v4 + 16) = 1;
        __n128 result = v4 + 2;
        *(_WORD *)((char *)result + 5) = v14;
        *(_DWORD *)((char *)result + 1) = v13;
        return result;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"No magic pairing slot available to allocate for address %:", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x55u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 0;
  }
  return result;
}

const char *sub_10022EEC0(int a1)
{
  __n128 result = "STATE_IDLE";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      __n128 result = "STATE_CHANNEL_FOUND";
      break;
    case 2:
      __n128 result = "STATE_SENT_HINT";
      break;
    case 3:
      __n128 result = "STATE_SENT_AES_SIV";
      break;
    default:
      BOOL v4 = "STATE_ERROR";
      if (a1 != 255) {
        BOOL v4 = "UNKNOWN";
      }
      if (a1 == 240) {
        __n128 result = "STATE_SUCCESS";
      }
      else {
        __n128 result = v4;
      }
      break;
  }
  return result;
}

void sub_10022EF58(uint64_t a1)
{
  uint64_t v2 = sub_100197A30(a1);
  sub_1001F667C(v2);
  uint64_t v3 = sub_10022EE08(a1);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3;
    if (!*((unsigned char *)v3 + 7))
    {
      sub_10022EFC4(a1, 1);
      sub_10022F044(v4);
    }
  }
}

void sub_10022EFC4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10022EBE8(a1);
  if (v4)
  {
    *((unsigned char *)v4 + 7) = a2;
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)" %: does not have a magic pairing device entry", v5, v6, v7, v8, v9, v10, v11, a1);
    uint64_t v12 = sub_100050B4C(0x55u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_10022F044(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 7) - 2 > 0xEE)
  {
    uint64_t v10 = byte_100A0FFA8;
    if (byte_100A0FFA8)
    {
      uint64_t v11 = 0;
      *(unsigned char *)(a1 + 269) = 0;
      uint64_t v12 = (_DWORD *)(a1 + 1);
      uint64_t v13 = qword_100A0FFB0;
      while (*v12 != *(_DWORD *)v13 || *(unsigned __int16 *)(a1 + 5) != *(unsigned __int16 *)(v13 + 4))
      {
        ++v11;
        v13 += 44;
        if (v10 == v11)
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"No hint for device %:. Aborting", v15, v16, v17, v18, v19, v20, v21, a1 + 1);
            uint64_t v22 = sub_100050B4C(0x55u);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          goto LABEL_19;
        }
      }
      *(unsigned char *)(a1 + 269) = v11;
      uint64_t v31 = (long long *)(a1 + 28);
      arc4random_buf((void *)(a1 + 28), 0x10uLL);
      arc4random_buf((void *)(a1 + 270), 0x10uLL);
      *(void *)uint64_t v52 = 6;
      *(void *)&v52[8] = a1 + 1;
      uint64_t v32 = sub_1000268E4((uint64_t)sub_100230434, (const void **)v52, 25, (int *)(a1 + 8));
      if (v32)
      {
        uint64_t v33 = v32;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not register timeout for magic pairing operation ret=%!", v34, v35, v36, v37, v38, v39, v40, v33);
          uint64_t v41 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      if (*(unsigned __int8 *)(a1 + 7) >= 2u)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid state %d trying to send address: %:", v42, v43, v44, v45, v46, v47, v48, *(unsigned __int8 *)(a1 + 7));
          uint64_t v49 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      __int16 v57 = 0;
      *(_DWORD *)uint64_t v52 = 268439555;
      v52[4] = 0;
      uint64_t v50 = qword_100A0FFB0 + 44 * *(unsigned __int8 *)(a1 + 269);
      *(_OWORD *)&v52[5] = *(_OWORD *)(v50 + 6);
      int v53 = 1048608;
      long long v54 = *v31;
      int v55 = 262400;
      int v56 = *(_DWORD *)(v50 + 40);
      if (!sub_1002300B8(a1 + 1, 1u, v52, 0x33uLL)) {
        sub_10022EFC4(a1 + 1, 2);
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"No MagicPairing table found", v23, v24, v25, v26, v27, v28, v29, v51);
        uint64_t v30 = sub_100050B4C(0x55u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_1007456E8();
        }
      }
      uint64_t v12 = (_DWORD *)(a1 + 1);
LABEL_19:
      sub_10022EFC4((uint64_t)v12, 255);
      if (*(unsigned char *)(a1 + 334)) {
        sub_10022FFB4((uint64_t)v12, 8);
      }
      *(unsigned char *)(a1 + 334) = 0;
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"MagicPairing is currently in progress (%x) with device %:", v2, v3, v4, v5, v6, v7, v8, *(unsigned __int8 *)(a1 + 7));
    uint64_t v9 = sub_100050B4C(0x55u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1007456E8();
    }
  }
}

uint64_t sub_10022F360(uint64_t a1, char a2)
{
  qword_100A0FFB0 = a1;
  byte_100A0FFA8 = a2;
  return 0;
}

uint64_t sub_10022F378()
{
  if (ccecb_one_shot()) {
    return 154;
  }
  else {
    return 0;
  }
}

uint64_t sub_10022F400()
{
  uint64_t v0 = sub_1001DEA28(0x30u, 1, 8, 7u, &qword_100A0F670, (uint64_t)sub_10022F5FC);
  if (v0)
  {
    uint64_t v1 = v0;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_ChanMan_AllocateFixedChannel returned %!", v2, v3, v4, v5, v6, v7, v8, v1);
      uint64_t v9 = sub_100050B4C(0x55u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
LABEL_16:
      }
        sub_100744F6C();
    }
  }
  else
  {
    **(_WORD **)(qword_100A0F670 + 120) = 100;
    uint64_t v10 = sub_100253C54(nullsub_109);
    if (v10)
    {
      uint64_t v1 = v10;
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"OI_SECMGR_RegisterAuditCb returned %!", v11, v12, v13, v14, v15, v16, v17, v1);
        uint64_t v18 = sub_100050B4C(0x55u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      uint64_t v19 = sub_1001E50D4((uint64_t)sub_10022EF58, 48);
      if (v19)
      {
        uint64_t v1 = v19;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_ConnectMan_Register_FixedChannelInfo_callback returned %!", v20, v21, v22, v23, v24, v25, v26, v1);
          uint64_t v27 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        uint64_t v1 = sub_10017DFC4((uint64_t)&unk_1009FAEE0);
        if (!v1)
        {
          bzero(qword_100A0F668, 0x940uLL);
          byte_100A0FFA8 = 0;
          qword_100A0FFB0 = 0;
          return v1;
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"OI_DEVMGR_EXTRA_Register_Connect_CB returned %!", v28, v29, v30, v31, v32, v33, v34, v1);
          uint64_t v35 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
            goto LABEL_16;
          }
        }
      }
    }
  }
  return v1;
}

void sub_10022F5FC(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  unsigned __int16 v3 = a3 - 2;
  if (a3 < 2) {
    return;
  }
  __int16 v137 = 0;
  int v136 = 0;
  if (sub_10017E37C(a1, (uint64_t)&v136)) {
    return;
  }
  int v6 = *a2;
  switch(*a2)
  {
    case 1u:
      uint64_t v7 = sub_100197A30((uint64_t)&v136);
      sub_1001F667C(v7);
      uint64_t v8 = sub_10022EBE8((uint64_t)&v136);
      if (!v8) {
        sub_10025B8C0();
      }
      *(_WORD *)long long buf = 384;
      buf[2] = 104;
      memset(&buf[3], 0, 105);
      sub_1002300B8((uint64_t)v8 + 1, 2u, (char *)buf, 0x6CuLL);
      return;
    case 2u:
      uint64_t v11 = sub_10022EBE8((uint64_t)&v136);
      if (!v11)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)" %: does not have a magic pairing device entry", v55, v56, v57, v58, v59, v60, v61, (uint64_t)&v136);
          uint64_t v62 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t v63 = 8;
        goto LABEL_71;
      }
      if (!v3) {
        sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/magicPairing/BT_MagicPairing.c", 823, "(length) > 0");
      }
      uint64_t v12 = a2 + 2;
      uint64_t v13 = a2[2];
      if (v13 != 2)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Invalid number of paramerter = %d", v64, v65, v66, v67, v68, v69, v70, v13);
          uint64_t v71 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t v63 = 3;
        goto LABEL_71;
      }
      uint64_t v14 = (uint64_t)v11;
      unsigned __int16 v15 = a3 - 3;
      int v16 = v3 - 53;
      int v17 = v3 - 3;
      uint64_t v18 = v11 + 21;
      int v19 = 2;
      int v20 = 1;
      do
      {
        if (v15 <= (unsigned __int16)v20) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/magicPairing/BT_MagicPairing.c", 837, "ByteStream_NumReadBytesAvail(bs) >= 2");
        }
        if (v15 <= (unsigned __int16)(v20 + 2)) {
          sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/magicPairing/BT_MagicPairing.c", 838, "ByteStream_NumReadBytesAvail(bs) >= 2");
        }
        int v21 = *(unsigned __int16 *)&v12[(unsigned __int16)v20];
        uint64_t v22 = &v12[(unsigned __int16)(v20 + 2)];
        int v23 = *v22;
        int v24 = v23 | (v22[1] << 8);
        int v25 = v20 + 4;
        if (v21 == 128)
        {
          if (v24 != 54)
          {
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"ERROR AES_SIV key length mismatch, please file a sysdiagnose from all cloud paired devices", v83, v84, v85, v86, v87, v88, v89, v134);
              uint64_t v90 = sub_100050B4C(0x55u);
              if (os_log_type_enabled(v90, OS_LOG_TYPE_FAULT)) {
                sub_10074A928(v90);
              }
            }
            goto LABEL_70;
          }
          if (v16 <= (unsigned __int16)v25) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/magicPairing/BT_MagicPairing.c", 852, "ByteStream_NumReadBytesAvail(bs) >= (keySize)");
          }
          memmove(v18, &v12[(unsigned __int16)v25], 0x36uLL);
          v20 += 58;
          *(unsigned char *)(v14 + 268) = v23;
        }
        else if (v21 == 256)
        {
          if (v24 != 4) {
            sub_10025B8C0();
          }
          if (v17 <= (unsigned __int16)v25) {
            sub_10014327C("/Library/Caches/com.apple.xbs/Sources/MobileBluetooth_base/Stack/corestack/magicPairing/BT_MagicPairing.c", 843, "ByteStream_NumReadBytesAvail(bs) >= 4");
          }
          *(_DWORD *)(v14 + 164) = *(_DWORD *)&v12[(unsigned __int16)(v20 + 4)];
          v20 += 8;
        }
        else
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Invalid opcode %x", v26, v27, v28, v29, v30, v31, v32, v134);
            uint64_t v33 = sub_100050B4C(0x55u);
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
            {
              uint64_t v34 = sub_100050714();
              *(_DWORD *)long long buf = 136446466;
              *(void *)&uint8_t buf[4] = v34;
              *(_WORD *)&unsigned char buf[12] = 1024;
              *(_DWORD *)&buf[14] = 0xFFFF;
              _os_log_error_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "%{public}s (status=%{bluetooth:OI_STATUS}u)", buf, 0x12u);
            }
          }
          sub_10022FFB4((uint64_t)&v136, 3);
          int v20 = v25;
        }
        --v19;
      }
      while ((_BYTE)v19);
      uint64_t v72 = (long long *)(qword_100A0FFB0 + 44 * *(unsigned __int8 *)(v14 + 269));
      long long v74 = *v72;
      long long v73 = v72[1];
      *(_OWORD *)&v141[12] = *(long long *)((char *)v72 + 28);
      long long v140 = v74;
      *(_OWORD *)uint64_t v141 = v73;
      if (*(_DWORD *)&v141[24] < *(_DWORD *)(v14 + 164))
      {
        while (1)
        {
          long long v139 = 0uLL;
          *(void *)long long buf = 0;
          *(void *)&buf[8] = 0;
          ccaes_ecb_encrypt_mode();
          if (ccecb_one_shot()) {
            break;
          }
          *(_OWORD *)&v141[6] = v139;
          if (++*(_DWORD *)&v141[24] >= *(_DWORD *)(v14 + 164)) {
            goto LABEL_56;
          }
        }
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error generating RatchetAccKey: %!", v103, v104, v105, v106, v107, v108, v109, 154);
          uint64_t v110 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
LABEL_69:
          }
            sub_100744F6C();
        }
        goto LABEL_70;
      }
LABEL_56:
      ccaes_ecb_encrypt_mode();
      memset(&buf[32], 0, 68);
      qmemcpy(buf, "bt_aessivauthentbt_aessivencrypt", 32);
      if (ccecb_one_shot())
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error generating AES_SIV", v75, v76, v77, v78, v79, v80, v81, v134);
          uint64_t v82 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR)) {
            goto LABEL_69;
          }
        }
LABEL_70:
        uint64_t v63 = 1;
LABEL_71:
        sub_10022FFB4((uint64_t)&v136, v63);
        return;
      }
      ccaes_siv_decrypt_mode();
      size_t v91 = (unsigned __int16)ccsiv_plaintext_size();
      uint64_t v92 = sub_100022FE8(v91);
      bzero(v92, v91);
      uint64_t v135 = (uint64_t)v18;
      uint64_t v93 = ccsiv_one_shot();
      if (v93)
      {
        uint64_t v94 = v93;
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"ccsiv_one_shot returned %d", v95, v96, v97, v98, v99, v100, v101, v94);
          __int16 v102 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        goto LABEL_77;
      }
      *(_OWORD *)(v14 + 286) = *v92;
      if (*((void *)v92 + 2) != *(void *)(v14 + 28) || *((void *)v92 + 3) != *(void *)(v14 + 36))
      {
LABEL_77:
        sub_100023010(v92);
LABEL_78:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Remote keys verification failed, sending error", v112, v113, v114, v115, v116, v117, v118, v135);
          uint64_t v119 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t v63 = 7;
        goto LABEL_71;
      }
      BOOL v121 = *((_DWORD *)v92 + 8) != *(_DWORD *)(v14 + 1)
          || *((unsigned __int16 *)v92 + 18) != *(unsigned __int16 *)(v14 + 5);
      sub_100023010(v92);
      if (v121) {
        goto LABEL_78;
      }
      if (!sub_1002304BC(v14))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Error generating AES_SIV", v126, v127, v128, v129, v130, v131, v132, v135);
          unsigned __int16 v133 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR)) {
            goto LABEL_69;
          }
        }
        goto LABEL_70;
      }
      uint64_t v123 = (_OWORD *)(qword_100A0FFB0 + 44 * *(unsigned __int8 *)(v14 + 269));
      long long v124 = *(_OWORD *)&v141[12];
      long long v125 = *(_OWORD *)v141;
      _OWORD *v123 = v140;
      v123[1] = v125;
      *(_OWORD *)((char *)v123 + 28) = v124;
      sub_100230658(v14, v122);
      return;
    case 3u:
      uint64_t v35 = 0;
      goto LABEL_44;
    case 4u:
      return;
    default:
      if (v6 == 255)
      {
        if (a3 < 3) {
          uint64_t v36 = 1;
        }
        else {
          uint64_t v36 = a2[2];
        }
        if (sub_100058654())
        {
          uint64_t v45 = sub_10022EA04(v36);
          sub_100056E24((uint64_t)"Received status %s(%d) from device %:", v46, v47, v48, v49, v50, v51, v52, (uint64_t)v45);
          int v53 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
          {
            long long v54 = sub_100050714();
            *(_DWORD *)long long buf = 136446210;
            *(void *)&uint8_t buf[4] = v54;
            _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
          }
        }
        uint64_t v35 = v36;
        goto LABEL_44;
      }
      if (v6 != 240)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Received unknown opcode %x", v37, v38, v39, v40, v41, v42, v43, *a2);
          uint64_t v44 = sub_100050B4C(0x55u);
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        uint64_t v35 = 3;
LABEL_44:
        sub_100230218((uint64_t)&v136, v35);
        return;
      }
      uint64_t v9 = sub_100197A30((uint64_t)&v136);
      sub_1001F667C(v9);
      uint64_t v10 = sub_10022EE08((uint64_t)&v136);
      if (v10)
      {
        *((unsigned char *)v10 + 334) = 1;
        sub_10022F044((uint64_t)v10);
      }
      return;
  }
}

uint64_t sub_10022FE78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 < 0x10) {
    return 101;
  }
  ccaes_ecb_decrypt_mode();
  if (ccecb_one_shot()) {
    return 154;
  }
  else {
    return 0;
  }
}

uint64_t sub_10022FEE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 < 0x10) {
    return 101;
  }
  ccaes_ecb_encrypt_mode();
  if (ccecb_one_shot()) {
    return 154;
  }
  else {
    return 0;
  }
}

uint64_t sub_10022FF50()
{
  qword_100A0F668[0] = 0;
  sub_1001E5134((uint64_t)sub_10022EF58);
  if (qword_100A0F670) {
    sub_1001DEC18(qword_100A0F670);
  }
  uint64_t v0 = &dword_100000010 + 1;
  do
  {
    sub_10022EAB8((uint64_t)qword_100A0F668 + v0);
    v0 += 336;
  }
  while (v0 != 2369);
  return 0;
}

uint64_t *sub_10022FFB4(uint64_t a1, uint64_t a2)
{
  char v14 = a2;
  if (sub_100058654())
  {
    uint64_t v4 = sub_10022EA04(a2);
    sub_100056E24((uint64_t)"Sending status %s(%d) to device %:", v5, v6, v7, v8, v9, v10, v11, (uint64_t)v4);
    uint64_t v12 = sub_100050B4C(0x55u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      int v16 = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
    }
  }
  sub_1002300B8(a1, 0xFFu, &v14, 1uLL);
  return sub_100230218(a1, a2);
}

uint64_t sub_1002300B8(uint64_t a1, unsigned int a2, char *a3, size_t a4)
{
  uint64_t v23 = 0;
  v22[0] = a2;
  v22[1] = 1;
  int v7 = sub_10017E2D4(a1, &v23);
  uint64_t result = 101;
  if (v7 || !v23) {
    return result;
  }
  memset(&v21[1], 0, 96);
  if (a3) {
    unsigned int v9 = 2;
  }
  else {
    unsigned int v9 = 1;
  }
  v21[0] = 0uLL;
  uint64_t v10 = sub_1000226D0((uint64_t)v21, v9);
  if (v10)
  {
    uint64_t v11 = v10;
LABEL_10:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send PDU %u: %!", v13, v14, v15, v16, v17, v18, v19, a2);
      int v20 = sub_100050B4C(0x55u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return v11;
  }
  uint64_t v12 = sub_100022798((unsigned __int8 *)v21, v22, 2uLL, 0);
  if (v12)
  {
    uint64_t v11 = v12;
    sub_10025C480((uint64_t)v21);
    goto LABEL_10;
  }
  if (!a3 || (uint64_t v11 = sub_100022798((unsigned __int8 *)v21, a3, a4, 2u), !v11)) {
    uint64_t v11 = ((uint64_t (*)(void, uint64_t, uint64_t, _OWORD *, uint64_t))loc_1001DE1A4)(0, 48, v23, v21, 1);
  }
  sub_10025C480((uint64_t)v21);
  uint64_t result = 0;
  if (v11 && v11 != 412) {
    goto LABEL_10;
  }
  return result;
}

uint64_t *sub_100230218(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10022EBE8(a1);
  if (result)
  {
    uint64_t v5 = result;
    if (sub_100058654())
    {
      uint64_t v6 = sub_10022EA04(a2);
      sub_10022EEC0(*((unsigned __int8 *)v5 + 7));
      sub_100056E24((uint64_t)"MP Complete Pairing with status:%s(%d) state:(%s)%d", v7, v8, v9, v10, v11, v12, v13, (uint64_t)v6);
      uint64_t v14 = sub_100050B4C(0x55u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        *(void *)&uint8_t buf[4] = sub_100050714();
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, " %{public}s", buf, 0xCu);
      }
    }
    uint64_t v15 = *((unsigned int *)v5 + 2);
    if (v15)
    {
      sub_100026DB4(v15);
      *((_DWORD *)v5 + 2) = 0;
    }
    if (a2) {
      char v16 = -1;
    }
    else {
      char v16 = -16;
    }
    *((unsigned char *)v5 + 7) = v16;
    if (a2)
    {
      if (!qword_100A0F668[0]) {
        return (uint64_t *)sub_10022EAB8(a1);
      }
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, void))qword_100A0F668[0];
      if (!*(void *)qword_100A0F668[0]) {
        return (uint64_t *)sub_10022EAB8(a1);
      }
      uint64_t v18 = a1;
      uint64_t v19 = a2;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
    }
    else
    {
      *(_OWORD *)long long buf = 0uLL;
      v27[0] = 0;
      v27[1] = 0;
      v26[0] = 0;
      v26[1] = 0;
      sub_10010BDC0((char *)v5 + 270, 0x10uLL, (char *)v5 + 286, 0x10u, buf, 0x10u);
      sub_10010BDC0((char *)v5 + 286, 0x10uLL, v26, 0x10u, v27, 0x10u);
      for (uint64_t i = 0; i != 16; ++i)
        *((unsigned char *)v5 + i + 12) = *((unsigned char *)v27 + i) ^ buf[i];
      if (!qword_100A0F668[0]) {
        return (uint64_t *)sub_10022EAB8(a1);
      }
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, void))qword_100A0F668[0];
      if (!*(void *)qword_100A0F668[0]) {
        return (uint64_t *)sub_10022EAB8(a1);
      }
      uint64_t v25 = qword_100A0FFB0 + 44 * *((unsigned __int8 *)v5 + 269);
      uint64_t v20 = v25 + 6;
      uint64_t v21 = v25 + 22;
      uint64_t v22 = *(unsigned int *)(v25 + 40);
      uint64_t v23 = (char *)v5 + 12;
      uint64_t v18 = a1;
      uint64_t v19 = 0;
    }
    v17(v18, v19, v20, v21, v22, v23, 0);
    return (uint64_t *)sub_10022EAB8(a1);
  }
  return result;
}

uint64_t *sub_100230434(uint64_t a1)
{
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"BT MagicPairing timeout.", v2, v3, v4, v5, v6, v7, v8, v13);
    uint64_t v9 = sub_100050B4C(0x55u);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  uint64_t v10 = *(int **)(a1 + 8);
  __int16 v11 = *((_WORD *)v10 + 2);
  int v14 = *v10;
  __int16 v15 = v11;
  return sub_10022FFB4((uint64_t)&v14, 6);
}

BOOL sub_1002304BC(uint64_t a1)
{
  ccaes_siv_encrypt_mode();
  uint64_t v2 = qword_100A0FFB0 + 44 * *(unsigned __int8 *)(a1 + 269);
  long long v3 = *(_OWORD *)(a1 + 270);
  v19[0] = *(_OWORD *)(a1 + 28);
  v19[1] = v3;
  memset(&v19[4], 0, 32);
  int v20 = 0;
  v19[2] = *(_OWORD *)(a1 + 286);
  _WORD v19[3] = *(_OWORD *)(v2 + 6);
  size_t v4 = ccsiv_ciphertext_size();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v19 - v6;
  bzero((char *)v19 - v6, v4);
  uint64_t v8 = ccsiv_one_shot();
  if (v8)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"ccsiv_one_shot returned %d", v9, v10, v11, v12, v13, v14, v15, v8);
      char v16 = sub_100050B4C(0x55u);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else
  {
    *(unsigned char *)(a1 + 144) = v4;
    if (v4 >= 0x64) {
      size_t v17 = 100;
    }
    else {
      size_t v17 = v4;
    }
    memmove((void *)(a1 + 44), v7, v17);
  }
  return v8 == 0;
}

uint64_t *sub_100230658(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(unsigned __int8 *)(a1 + 144);
  __chkstk_darwin(a1, a2);
  uint64_t v5 = (char *)&v8 - v4;
  bzero((char *)&v8 - v4, v3 + 5);
  *(_WORD *)uint64_t v5 = -32767;
  v5[2] = 0;
  *(_WORD *)(v5 + 3) = v3;
  memmove(v5 + 5, (const void *)(a1 + 44), v3);
  uint64_t v6 = a1 + 1;
  uint64_t result = (uint64_t *)sub_1002300B8(v6, 3u, v5, (v3 + 5));
  if (result) {
    return sub_100230218(v6, 1);
  }
  return result;
}

uint64_t sub_100230760()
{
  uint64_t v0 = sub_10021242C();
  if (v0)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to create init ATT database with result %!", v1, v2, v3, v4, v5, v6, v7, v0);
      uint64_t v8 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return v0;
}

uint64_t sub_1002307DC(uint64_t a1, int a2, unsigned __int8 *a3, uint64_t a4)
{
  if (!a1) {
    sub_10025B8C0();
  }
  int v8 = *a3;
  if (v8 != 16 && v8 != 2) {
    return 146;
  }
  if (a2) {
    uint64_t v10 = &xmmword_1007BA4D8;
  }
  else {
    uint64_t v10 = &xmmword_1007BA4EC;
  }
  *(_OWORD *)(a1 + 4) = *v10;
  *(_DWORD *)(a1 + 20) = *((_DWORD *)v10 + 4);
  *(void *)(a1 + 32) = sub_1002308AC;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 26) = 1;
  long long v12 = *(_OWORD *)a3;
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a3 + 4);
  *(_OWORD *)(a1 + 48) = v12;

  return sub_100212638(0, a1, a4);
}

uint64_t sub_1002308AC(uint64_t a1, unsigned int a2, void *a3, int a4, _WORD *a5)
{
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  BOOL v7 = v6 >= a2;
  int v8 = v6 - a2;
  if (!v7) {
    return 7;
  }
  v12[0] = 0;
  v12[1] = 0;
  if (v8 >= a4) {
    LOWORD(v8) = a4;
  }
  *a5 = v8;
  sub_10022A6F4(v12, (unsigned __int8 *)(a1 + 48), 1);
  memmove(a3, (char *)v12 + a2, (unsigned __int16)*a5);
  return 0;
}

void sub_10023095C(unsigned __int16 *a1)
{
  if (a1) {
    sub_100212940(*a1, 0);
  }
  else {
    sub_10025B8C0();
  }
}

uint64_t sub_100230970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 + 48);
  if (v3 != 16 && v3 != 2) {
    return 146;
  }
  *(_DWORD *)(a1 + 20) = 0;
  *(_OWORD *)(a1 + 4) = xmmword_1007BA500;
  *(void *)(a1 + 32) = sub_1002309F0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 26) = 1;
  *(_WORD *)(a1 + 48) = *(_WORD *)a3;
  *(_WORD *)(a1 + 50) = *(_WORD *)(a3 + 24);
  int v5 = *(_DWORD *)(a3 + 64);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a3 + 48);
  *(_DWORD *)(a1 + 68) = v5;
  return sub_100212638(a2, a1, 0);
}

uint64_t sub_1002309F0(uint64_t a1, unsigned int a2, void *__dst, int a4, unsigned __int16 *a5)
{
  int v6 = *(unsigned __int8 *)(a1 + 52);
  if (v6 == 2) {
    unsigned int v7 = 6;
  }
  else {
    unsigned int v7 = 4;
  }
  int v8 = v7 - a2;
  if (v7 < a2) {
    return 7;
  }
  __int16 v15 = 0;
  int v14 = *(_DWORD *)(a1 + 48);
  if (v6 == 2) {
    sub_10022A6F4(&v15, (unsigned __int8 *)(a1 + 52), 1);
  }
  if (v8 >= a4) {
    unsigned __int16 v13 = a4;
  }
  else {
    unsigned __int16 v13 = v8;
  }
  *a5 = v13;
  memmove(__dst, (char *)&v14 + a2, v13);
  return 0;
}

uint64_t sub_100230AA0(uint64_t a1, unsigned __int16 *a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  int v8 = *a6;
  if (v8 != 16 && v8 != 2) {
    return 146;
  }
  if ((a3 & 2) == 0 || a7)
  {
    if ((a3 & 0x4C) == 0 || a8)
    {
      *(_OWORD *)(a2 + 2) = xmmword_1007BA514;
      *((_DWORD *)a2 + 5) = 0;
      *((void *)a2 + 4) = sub_100230C40;
      *((void *)a2 + 5) = 0;
      *((unsigned char *)a2 + 26) = 1;
      *((unsigned char *)a2 + 48) = a3;
      long long v32 = *(_OWORD *)a6;
      *((_DWORD *)a2 + 17) = *((_DWORD *)a6 + 4);
      *(_OWORD *)(a2 + 26) = v32;
      if (sub_100212638(a1, (uint64_t)a2, a4))
      {
        return 4105;
      }
      else
      {
        long long v33 = *(_OWORD *)a6;
        *(_DWORD *)(a5 + 20) = *((_DWORD *)a6 + 4);
        *(_OWORD *)(a5 + 4) = v33;
        *(void *)(a5 + 32) = a7;
        *(void *)(a5 + 40) = a8;
        uint64_t result = sub_100212638(*a2, a5, 0);
        if (result)
        {
          sub_100212940(*a2, 0);
          return 4106;
        }
        else
        {
          a2[25] = *(_WORD *)a5;
        }
      }
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Set callback required since characteristic is writable.", v24, v25, v26, v27, v28, v29, v30, v34);
        uint64_t v31 = sub_100050B4C(0x45u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 4104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Get callback required since characteristic is readable", v15, v16, v17, v18, v19, v20, v21, v34);
      uint64_t v22 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4103;
  }
  return result;
}

uint64_t sub_100230C40(uint64_t a1, unsigned int a2, void *a3, int a4, _WORD *a5)
{
  unsigned int v6 = *(unsigned __int8 *)(a1 + 52) + 3;
  int v7 = v6 - a2;
  if (v6 < a2) {
    return 7;
  }
  v13[0] = 0;
  v13[1] = 0;
  char v11 = *(unsigned char *)(a1 + 48);
  __int16 v12 = *(_WORD *)(a1 + 50);
  if (v7 >= a4) {
    LOWORD(v7) = a4;
  }
  *a5 = v7;
  sub_10022A6F4(v13, (unsigned __int8 *)(a1 + 52), 1);
  memmove(a3, &v11 + a2, (unsigned __int16)*a5);
  return 0;
}

uint64_t sub_100230D08(uint64_t a1, uint64_t a2, char a3, unsigned __int8 *a4, uint64_t (*a5)(uint64_t a1, unsigned int a2, void *a3, signed int a4, _WORD *a5), uint64_t a6)
{
  int v6 = *a4;
  if (v6 != 16 && v6 != 2) {
    return 146;
  }
  long long v14 = *(_OWORD *)a4;
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a4 + 4);
  *(_OWORD *)(a1 + 4) = v14;
  if (sub_10022A44C(a4, (unsigned __int8 *)&xmmword_1007BA528)
    || sub_10022A44C(a4, (unsigned __int8 *)&xmmword_1007BA578))
  {
    a6 = 0;
  }
  else
  {
    if (sub_10022A44C(a4, (unsigned __int8 *)&xmmword_1007BA53C)) {
      goto LABEL_10;
    }
    if (sub_10022A44C(a4, (unsigned __int8 *)&xmmword_1007BA550)
      || sub_10022A44C(a4, (unsigned __int8 *)&xmmword_1007BA564))
    {
      a3 |= 3u;
      goto LABEL_11;
    }
  }
  a3 = 1;
LABEL_10:
  a5 = sub_100230E50;
LABEL_11:
  *(unsigned char *)(a1 + 26) = a3;
  *(void *)(a1 + 32) = a5;
  *(void *)(a1 + 40) = a6;

  return sub_100212638(a2, a1, 0);
}

uint64_t sub_100230E50(uint64_t a1, unsigned int a2, void *a3, signed int a4, _WORD *a5)
{
  uint64_t v10 = (unsigned __int8 *)(a1 + 4);
  if (!sub_10022A44C((unsigned __int8 *)(a1 + 4), (unsigned __int8 *)&xmmword_1007BA528))
  {
    if (sub_10022A44C(v10, (unsigned __int8 *)&xmmword_1007BA578))
    {
      v18[0] = *(_WORD *)(a1 + 48);
      char v19 = *(unsigned char *)(a1 + 52);
      if (a2 <= 7)
      {
        v18[1] = *(_WORD *)(a1 + 50);
        __int16 v20 = *(_WORD *)(a1 + 54);
        if ((int)(7 - a2) >= a4) {
          size_t v11 = a4;
        }
        else {
          size_t v11 = 7 - a2;
        }
        *a5 = v11;
        __int16 v12 = v18;
        goto LABEL_13;
      }
    }
    else
    {
      sub_10022A44C(v10, (unsigned __int8 *)&xmmword_1007BA53C);
      unsigned int v14 = *(unsigned __int16 *)(a1 + 56);
      BOOL v15 = v14 >= a2;
      signed int v16 = v14 - a2;
      if (v15)
      {
        if (v16 >= a4) {
          LOWORD(v16) = a4;
        }
        *a5 = v16;
        unsigned __int16 v13 = (char *)(*(void *)(a1 + 48) + a2);
        size_t v11 = (unsigned __int16)v16;
        goto LABEL_19;
      }
    }
    return 7;
  }
  if (a2 > 2) {
    return 7;
  }
  __int16 v21 = *(_WORD *)(a1 + 48);
  if ((int)(2 - a2) >= a4) {
    size_t v11 = a4;
  }
  else {
    size_t v11 = 2 - a2;
  }
  *a5 = v11;
  __int16 v12 = &v21;
LABEL_13:
  unsigned __int16 v13 = (char *)v12 + a2;
LABEL_19:
  memmove(a3, v13, v11);
  return 0;
}

uint64_t sub_100230F80(uint64_t a1, unsigned __int8 *a2, int a3, const void *a4, int a5)
{
  if (sub_10022A44C(a2 + 4, (unsigned __int8 *)&xmmword_1007BA514))
  {
    if (a3)
    {
      if ((a2[48] & 0x10) == 0)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Can't send notification to characteristic without notify property!", v10, v11, v12, v13, v14, v15, v16, v36);
          uint64_t v17 = sub_100050B4C(0x45u);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 4108;
      }
      goto LABEL_17;
    }
    if ((a2[48] & 0x20) != 0)
    {
LABEL_17:
      __int16 v35 = *((_WORD *)a2 + 25);
      return sub_100212C60(a1, v35, a3, a4, a5);
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Can't send indication to characteristic without indicate property!", v27, v28, v29, v30, v31, v32, v33, v36);
      uint64_t v34 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4109;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Attribute handle 0x%x is not a characteristic!", v19, v20, v21, v22, v23, v24, v25, *(unsigned __int16 *)a2);
      uint64_t v26 = sub_100050B4C(0x45u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4107;
  }
}

double sub_100231104@<D0>(unsigned int a1@<W0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  if (a1 <= 3)
  {
    int v3 = (int *)&xmmword_100A0FFB8 + a2;
    if (a1 == 1)
    {
      int v4 = *v3;
    }
    else
    {
      int v5 = v3[12];
      v3 += 12;
      int v4 = v5;
    }
    if (v4 != -1) {
      *int v3 = v4 + 1;
    }
  }
  long long v6 = unk_100A0FFE8;
  a3[2] = xmmword_100A0FFD8;
  a3[3] = v6;
  long long v7 = unk_100A10008;
  a3[4] = xmmword_100A0FFF8;
  a3[5] = v7;
  double result = *(double *)&xmmword_100A0FFB8;
  long long v9 = unk_100A0FFC8;
  *a3 = xmmword_100A0FFB8;
  a3[1] = v9;
  return result;
}

uint64_t sub_10023115C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, char a10, char a11, char a12, __int16 a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)&v163[3] = 0;
  *(_DWORD *)uint64_t v163 = 0;
  if (memcmp(&unk_100A10018, "", 0x40uLL))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE scan already in progress.", v28, v29, v30, v31, v32, v33, v34, v157);
      __int16 v35 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 118;
  }
  if (byte_100A10060 == 1) {
    sub_10025B8C0();
  }
  if (!a18 || !a17 || !a19)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid callback functions", v45, v46, v47, v48, v49, v50, v51, v157);
    uint64_t v52 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_64:
    sub_100744F6C();
    return 101;
  }
  if (!(a4 | a3 | a5 | a6))
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Cannot start scan when both main and LP cores window is set to 0", v53, v54, v55, v56, v57, v58, v59, v157);
    uint64_t v60 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a1 >= 2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan type parameters : %d", v37, v38, v39, v40, v41, v42, v43, a1);
    uint64_t v44 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a2 && (a2 - 16385) <= 0xFFFFC002)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan interval parameters : %d", v61, v62, v63, v64, v65, v66, v67, a2);
    uint64_t v68 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a3 && (a3 - 16385) <= 0xFFFFC002)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan interval parameters : %d", v69, v70, v71, v72, v73, v74, v75, a3);
    uint64_t v76 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a4 && (a4 - 4) >= 0x3FFD)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan window parameters for leScanWindowLPCore : %d", v77, v78, v79, v80, v81, v82, v83, a4);
    uint64_t v84 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a5 && (a5 - 16385) <= 0xFFFFC002)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan window parameters for leScanWindowScanCoreELNAOn : %d", v85, v86, v87, v88, v89, v90, v91, a5);
    uint64_t v92 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v92, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a6 && (a6 - 16385) <= 0xFFFFC002)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan window parameters for leScanWindowScanCoreELNABypass : %d", v93, v94, v95, v96, v97, v98, v99, a6);
    uint64_t v100 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v100, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a5 && a6)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan window parameters for leScanWindowScanCoreELNAOn : %d and leScanWindowScanCoreELNABypass : %d. Both cannot be used at the same time.", v101, v102, v103, v104, v105, v106, v107, a5);
    uint64_t v108 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v108, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a7 >= 2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan filter : %d", v109, v110, v111, v112, v113, v114, v115, a7);
    uint64_t v116 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v116, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a8 >= 2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan filter duplicate setting : %d", v117, v118, v119, v120, v121, v122, v123, a8);
    long long v124 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v124, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  if (a9 >= 2u && !byte_100A10061)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid scan phy setting : %d", v125, v126, v127, v128, v129, v130, v131, a9);
    uint64_t v132 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v132, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_64;
  }
  sub_100229724((uint64_t)v163);
  uint64_t v141 = 0;
  byte_100A10062 = 1;
  unk_100A10018 = a17;
  off_100A10020 = a18;
  qword_100A10028 = a19;
  qword_100A10030 = a20;
  LOBYTE(xmmword_100A10038) = a1;
  WORD1(xmmword_100A10038) = a2;
  WORD2(xmmword_100A10038) = a3;
  WORD3(xmmword_100A10038) = a4;
  WORD4(xmmword_100A10038) = a5;
  WORD5(xmmword_100A10038) = a6;
  BYTE12(xmmword_100A10038) = a9;
  BYTE13(xmmword_100A10038) = a7;
  BYTE14(xmmword_100A10038) = a8;
  *(_WORD *)((char *)&xmmword_100A10038 + 15) = 258;
  byte_100A10049 = 1;
  byte_100A1004E = a10;
  int v142 = byte_100A10063;
  if (!byte_100A10063) {
    a11 = 0;
  }
  byte_100A1004F = a11;
  byte_100A10052 = a12;
  word_100A10054 = a13;
  word_100A10056 = a14;
  byte_100A10050 = a15;
  byte_100A10051 = a16;
  v162[0] = a1;
  v162[1] = a1;
  v162[2] = a1;
  v161[0] = a2;
  v161[1] = a2;
  v161[2] = a2;
  v160[0] = a3;
  v160[1] = a3;
  v160[2] = a3;
  __int16 v159 = 0;
  if (a12) {
    __int16 v144 = a13;
  }
  else {
    __int16 v144 = 30;
  }
  int v158 = 0;
  do
  {
    *(_WORD *)((char *)&v158 + v141) = v144;
    v141 += 2;
  }
  while (v141 != 6);
  if (byte_100A10064) {
    BOOL v145 = byte_100A10065 == 0;
  }
  else {
    BOOL v145 = 1;
  }
  char v146 = v145;
  if (v142 || (v146 & 1) == 0)
  {
    if (byte_100A10066) {
      unsigned __int8 v148 = 2;
    }
    else {
      unsigned __int8 v148 = 1;
    }
    byte_100A10048 = v148;
    if (!a2 || !a3)
    {
      sub_1002318F0(0, v134, v135, v136, v137, v138, v139, v140);
      return 0;
    }
    uint64_t v147 = sub_1001FA954(v163[0], a7, a9, (uint64_t)v162, (uint64_t)v161, (uint64_t)v160, v148, 1u);
  }
  else if (byte_100A10066)
  {
    uint64_t v147 = sub_10001BDE0(215, (uint64_t)sub_1002318F0, v135, v136, v137, v138, v139, v140, v163[0]);
  }
  else
  {
    uint64_t v147 = sub_10001BDE0(171, (uint64_t)sub_1002318F0, v135, v136, v137, v138, v139, v140, a1);
  }
  uint64_t v36 = v147;
  if (v147)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not start a LE scan %!", v149, v150, v151, v152, v153, v154, v155, v36);
      int v156 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v156, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    xmmword_100A10038 = 0u;
    *(_OWORD *)&byte_100A10048 = 0u;
    unk_100A10018 = 0u;
    *(_OWORD *)&qword_100A10028 = 0u;
    byte_100A10062 = 0;
  }
  return v36;
}

void sub_1002318F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  uint64_t v10 = (void (*)(uint64_t, uint64_t))qword_100A10028;
  uint64_t v9 = qword_100A10030;
  *(_DWORD *)&v34[3] = 0;
  *(_DWORD *)uint64_t v34 = 0;
  char v33 = xmmword_100A10038;
  int v11 = WORD1(xmmword_100A10038);
  __int16 v32 = WORD1(xmmword_100A10038);
  int v12 = WORD3(xmmword_100A10038);
  __int16 v31 = WORD3(xmmword_100A10038);
  if (a1)
  {
LABEL_2:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not start LE scan (leScanParamsLPCoreCb): %!", v13, v14, v15, v16, v17, v18, v19, v8);
      uint64_t v20 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    xmmword_100A10038 = 0u;
    *(_OWORD *)&byte_100A10048 = 0u;
    unk_100A10018 = 0u;
    *(_OWORD *)&qword_100A10028 = 0u;
    byte_100A10062 = 0;
    if (v10) {
      v10(v8, v9);
    }
    else {
      sub_10025B8C0();
    }
    return;
  }
  if (byte_100A10064 && byte_100A10065)
  {
    sub_100229724((uint64_t)v34);
    if (byte_100A10066) {
      unsigned __int8 v28 = 2;
    }
    else {
      unsigned __int8 v28 = 1;
    }
    byte_100A10048 = v28;
    if (byte_100A10068)
    {
      if (WORD3(xmmword_100A10038))
      {
        uint64_t v29 = v34[0];
        uint64_t v30 = BYTE13(xmmword_100A10038);
        goto LABEL_22;
      }
      if (WORD4(xmmword_100A10038) | WORD5(xmmword_100A10038))
      {
        sub_10023271C(0, v21, v22, v23, v24, v25, v26, v27);
        return;
      }
    }
    else if (v11 && v12)
    {
      uint64_t v29 = v34[0];
      uint64_t v30 = BYTE13(xmmword_100A10038);
LABEL_22:
      uint64_t v8 = sub_1001FA954(v29, v30, 1, (uint64_t)&v33, (uint64_t)&v32, (uint64_t)&v31, v28, 2u);
      if (!v8) {
        return;
      }
      goto LABEL_2;
    }
    sub_100232404(0, v21, v22, v23, v24, v25, v26, v27);
    return;
  }

  sub_100232404(0, a2, a3, a4, a5, a6, a7, a8);
}

BOOL sub_100231B30()
{
  return memcmp(&unk_100A10018, "", 0x40uLL) != 0;
}

uint64_t sub_100231B64()
{
  if (byte_100A10060 == 1)
  {
    uint64_t v0 = 0;
    byte_100A10067 = 0;
  }
  else if (byte_100A10062 == 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Scan is starting, can't stop it.", v1, v2, v3, v4, v5, v6, v7, v27);
      uint64_t v8 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 118;
  }
  else if (!memcmp(&unk_100A10018, "", 0x40uLL))
  {
    return 0;
  }
  else
  {
    if (byte_100A10065)
    {
      if (byte_100A10066) {
        unsigned __int8 v15 = 2;
      }
      else {
        unsigned __int8 v15 = 1;
      }
      byte_100A10048 = v15;
      if (!byte_100A10064 || byte_100A10068)
      {
        unsigned int v16 = byte_100A10049;
      }
      else
      {
        unsigned int v16 = 3;
        byte_100A10049 = 3;
      }
      uint64_t v17 = sub_1001FA79C(0, v15, BYTE14(xmmword_100A10038), HIBYTE(xmmword_100A10038), v16);
    }
    else if (byte_100A10066)
    {
      uint64_t v17 = sub_10001BDE0(216, (uint64_t)sub_100231D5C, v9, v10, v11, v12, v13, v14, 0);
    }
    else
    {
      uint64_t v17 = sub_10001BDE0(172, (uint64_t)sub_100231D5C, v9, v10, v11, v12, v13, v14, 0);
    }
    uint64_t v0 = v17;
    if (v17)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not stop the LE scan : %!", v18, v19, v20, v21, v22, v23, v24, v0);
        uint64_t v25 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      byte_100A10067 = 0;
      byte_100A10060 = 1;
    }
  }
  return v0;
}

void sub_100231D5C(uint64_t a1)
{
  uint64_t v2 = qword_100A10030;
  uint64_t v25 = (void (*)(uint64_t, uint64_t))qword_100A10028;
  uint64_t v3 = qword_100A10058;
  if (qword_100A10058)
  {
    while (sub_100059E10(v3))
    {
      uint64_t v4 = (void **)sub_10025989C(qword_100A10058);
      sub_1002598B4(qword_100A10058, 0);
      sub_100023010(v4[2]);
      sub_100023010(v4);
      uint64_t v3 = qword_100A10058;
    }
  }
  if (byte_100A10067 == 1)
  {
    *(_DWORD *)&v29[3] = 0;
    *(_DWORD *)uint64_t v29 = 0;
    sub_100229724((uint64_t)v29);
    char v28 = xmmword_100A10038;
    __int16 v26 = WORD2(xmmword_100A10038);
    __int16 v27 = WORD1(xmmword_100A10038);
    if (byte_100A10064) {
      BOOL v12 = byte_100A10065 == 0;
    }
    else {
      BOOL v12 = 1;
    }
    char v13 = v12;
    if (!byte_100A10063 && (v13 & 1) != 0)
    {
      if (byte_100A10066) {
        uint64_t v14 = sub_10001BDE0(215, (uint64_t)sub_100232404, v6, v7, v8, v9, v10, v11, v29[0]);
      }
      else {
        uint64_t v14 = sub_10001BDE0(171, (uint64_t)sub_100232404, v6, v7, v8, v9, v10, v11, xmmword_100A10038);
      }
LABEL_31:
      uint64_t v16 = v14;
      if (v14)
      {
LABEL_32:
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not restart a LE scan %!", v17, v18, v19, v20, v21, v22, v23, v16);
          uint64_t v24 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        xmmword_100A10038 = 0u;
        *(_OWORD *)&byte_100A10048 = 0u;
        unk_100A10018 = 0u;
        *(_OWORD *)&qword_100A10028 = 0u;
        goto LABEL_37;
      }
      goto LABEL_37;
    }
    if (byte_100A10066) {
      unsigned __int8 v15 = 2;
    }
    else {
      unsigned __int8 v15 = 1;
    }
    byte_100A10048 = v15;
    if (byte_100A10068)
    {
      if (!WORD2(xmmword_100A10038))
      {
        if (!WORD3(xmmword_100A10038))
        {
          if (!(WORD4(xmmword_100A10038) | WORD5(xmmword_100A10038)))
          {
            uint64_t v16 = 101;
            goto LABEL_32;
          }
          sub_10023271C(0, v5, v6, v7, v8, v9, v10, v11);
LABEL_37:
          byte_100A10067 = 0;
          byte_100A10060 = 0;
          return;
        }
LABEL_36:
        sub_1002318F0(0, v5, v6, v7, v8, v9, v10, v11);
        goto LABEL_37;
      }
    }
    else if (!WORD1(xmmword_100A10038) || !WORD2(xmmword_100A10038))
    {
      goto LABEL_36;
    }
    uint64_t v14 = sub_1001FA954(v29[0], BYTE13(xmmword_100A10038), 1, (uint64_t)&v28, (uint64_t)&v27, (uint64_t)&v26, v15, 1u);
    goto LABEL_31;
  }
  xmmword_100A10038 = 0u;
  *(_OWORD *)&byte_100A10048 = 0u;
  unk_100A10018 = 0u;
  *(_OWORD *)&qword_100A10028 = 0u;
  byte_100A10060 = 0;
  if (v25)
  {
    v25(a1, v2);
  }
}

uint64_t sub_100232068(int a1)
{
  uint64_t result = memcmp(&unk_100A10018, "", 0x40uLL);
  if (result)
  {
    if (byte_100A10067 & 1) != 0 || a1 && BYTE13(xmmword_100A10038) != 1 || (byte_100A10060)
    {
      return 0;
    }
    else
    {
      uint64_t result = sub_100231B64();
      if (!result) {
        byte_100A10067 = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1002320E8(uint64_t result)
{
  byte_100A10066 = result;
  return result;
}

void sub_1002320F4()
{
  xmmword_100A10038 = 0u;
  *(_OWORD *)&byte_100A10048 = 0u;
  unk_100A10018 = 0u;
  *(_OWORD *)&qword_100A10028 = 0u;
  if (!qword_100A10058) {
    qword_100A10058 = (uint64_t)sub_10025959C(0, 0);
  }
}

uint64_t sub_100232140(uint64_t result)
{
  byte_100A10065 = result;
  return result;
}

uint64_t sub_10023214C(uint64_t result)
{
  byte_100A10069 = result;
  return result;
}

uint64_t sub_100232158(uint64_t result)
{
  byte_100A10064 = result;
  byte_100A1006A = 0;
  return result;
}

uint64_t sub_10023216C(uint64_t result)
{
  byte_100A10063 = result;
  return result;
}

uint64_t sub_100232178(uint64_t result)
{
  byte_100A10068 = result;
  return result;
}

uint64_t sub_100232184(uint64_t result)
{
  byte_100A1006B = result;
  return result;
}

void sub_100232190()
{
  xmmword_100A10038 = 0u;
  *(_OWORD *)&byte_100A10048 = 0u;
  unk_100A10018 = 0u;
  *(_OWORD *)&qword_100A10028 = 0u;
  byte_100A10067 = 0;
  byte_100A10060 = 0;
  byte_100A10062 = 0;
  uint64_t v0 = qword_100A10058;
  if (qword_100A10058)
  {
    while (sub_100059E10(v0))
    {
      uint64_t v1 = (void **)sub_10025989C(qword_100A10058);
      sub_1002598B4(qword_100A10058, 0);
      sub_100023010(v1[2]);
      sub_100023010(v1);
      uint64_t v0 = qword_100A10058;
    }
  }
  sub_1002595D8((void *)qword_100A10058);
  qword_100A10058 = 0;
}

uint64_t sub_100232228(uint64_t result)
{
  byte_100A10061 = result;
  return result;
}

uint64_t sub_100232234()
{
  sub_10025B778("LE_Scanning:\n");
  sub_10025B778("lRestartScanInProgress=%d lStopInProgress=%d lStartInProgress=%d", byte_100A10067, byte_100A10060, byte_100A10062);
  if (!memcmp(&unk_100A10018, "", 0x40uLL))
  {
    uint64_t result = sub_10025B778("No scan in progress\n");
  }
  else
  {
    sub_10025B778("Current Scan Parameters: leScanType:%d leScanInterval:0x%x leScanWindow:0x%x scanningFilterPolicy:%d filterDuplicates:%d\n", xmmword_100A10038, WORD1(xmmword_100A10038), WORD2(xmmword_100A10038), BYTE13(xmmword_100A10038), BYTE14(xmmword_100A10038));
    uint64_t result = sub_10025B778("scanStartedCb:%sset deviceFoundCb:%sset scanFinishedCb:%sset\n");
  }
  if (byte_100A10066)
  {
    sub_10025B778("Incomplete advertising packets:\n");
    uint64_t result = qword_100A10058;
    if (qword_100A10058)
    {
      uint64_t result = sub_100059E10(qword_100A10058);
      if (result)
      {
        uint64_t result = sub_1002599CC(qword_100A10058);
        for (i = result; i; uint64_t result = i)
        {
          uint64_t v2 = (unsigned __int8 *)sub_1002599F0(result);
          if (v2[1]) {
            uint64_t v3 = "Public";
          }
          else {
            uint64_t v3 = "Random";
          }
          unint64_t v0 = v0 & 0xFFFF000000000000 | *(unsigned int *)(v2 + 2) | ((unint64_t)*((unsigned __int16 *)v2 + 3) << 32);
          sub_10025B778(" %s %: responseType:%d dataLen:%d rssi:%d eventType:%d dataStatus:%d primaryPHY:%d secPHY:%d SID:%d txPower:%d periodicInterval:%d\n", v3, v0, *v2, *((unsigned __int16 *)v2 + 4), (char)v2[24], *((unsigned __int16 *)v2 + 13), v2[28], v2[29], v2[30], v2[31], v2[32], *((unsigned __int16 *)v2 + 17));
          sub_1002599D4((uint64_t)&i);
        }
      }
    }
  }
  return result;
}

void sub_100232404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  uint64_t v10 = (void (*)(uint64_t, uint64_t))qword_100A10028;
  uint64_t v9 = qword_100A10030;
  if (a1) {
    goto LABEL_48;
  }
  if (!byte_100A10065)
  {
    if (byte_100A10066) {
      uint64_t v13 = sub_10001BDE0(216, (uint64_t)sub_100232974, a3, a4, a5, a6, a7, a8, 1);
    }
    else {
      uint64_t v13 = sub_10001BDE0(172, (uint64_t)sub_100232974, a3, a4, a5, a6, a7, a8, 1);
    }
LABEL_45:
    uint64_t v8 = v13;
    if (!v13) {
      return;
    }
    goto LABEL_48;
  }
  if (byte_100A10066) {
    char v11 = 2;
  }
  else {
    char v11 = 1;
  }
  byte_100A10048 = v11;
  if (byte_100A10064)
  {
    byte_100A10049 = WORD2(xmmword_100A10038) != 0;
    if (WORD3(xmmword_100A10038)) {
      byte_100A10049 = (WORD2(xmmword_100A10038) != 0) | 2;
    }
  }
  if (byte_100A10068)
  {
    if (WORD5(xmmword_100A10038))
    {
      char v12 = 8;
      goto LABEL_16;
    }
    if (WORD4(xmmword_100A10038))
    {
      char v12 = 4;
LABEL_16:
      byte_100A10049 |= v12;
      if (byte_100A1004E) {
        BOOL v14 = WORD2(xmmword_100A10038) == 0;
      }
      else {
        BOOL v14 = 1;
      }
      if (v14) {
        char v15 = 1;
      }
      else {
        char v15 = 5;
      }
      if (byte_100A10052)
      {
        unsigned __int8 v16 = v15 | 8;
        switch(word_100A10056)
        {
          case 0:
            goto LABEL_33;
          case 1:
            unsigned __int8 v16 = v15 | 0x18;
            break;
          case 2:
            unsigned __int8 v16 = v15 | 0x28;
            break;
          case 4:
            unsigned __int8 v16 = v15 | 0x38;
            break;
          default:
            if (sub_100058654())
            {
              sub_100056E24((uint64_t)"Unexpected scancore coex query interval %d", v17, v18, v19, v20, v21, v22, v23, (unsigned __int16)word_100A10056);
              uint64_t v24 = sub_100050B4C(0x42u);
              if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
                sub_100744F6C();
              }
            }
            break;
        }
      }
      else
      {
        unsigned __int8 v16 = v15;
      }
      goto LABEL_33;
    }
  }
  unsigned __int8 v16 = 1;
LABEL_33:
  if (byte_100A1006B)
  {
    if (byte_100A10050 && byte_100A10051)
    {
      v16 |= 0x80u;
    }
    else
    {
      if (byte_100A10051) {
        unsigned __int8 v25 = v16 | 0xC0;
      }
      else {
        unsigned __int8 v25 = v16;
      }
      if (byte_100A10050) {
        v16 |= 0x40u;
      }
      else {
        unsigned __int8 v16 = v25;
      }
    }
  }
  if (byte_100A10049)
  {
    uint64_t v13 = sub_1001FA79C(v16, byte_100A10048, BYTE14(xmmword_100A10038), HIBYTE(xmmword_100A10038), byte_100A10049);
    goto LABEL_45;
  }
  uint64_t v8 = 408;
LABEL_48:
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"Could not start LE scan (leScanParamsCb): %!", v26, v27, v28, v29, v30, v31, v32, v8);
    char v33 = sub_100050B4C(0x42u);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  xmmword_100A10038 = 0u;
  *(_OWORD *)&byte_100A10048 = 0u;
  unk_100A10018 = 0u;
  *(_OWORD *)&qword_100A10028 = 0u;
  byte_100A10062 = 0;
  if (v10) {
    v10(v8, v9);
  }
  else {
    sub_10025B8C0();
  }
}

void sub_10023271C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  uint64_t v10 = (void (*)(uint64_t, uint64_t))qword_100A10028;
  uint64_t v9 = qword_100A10030;
  char v34 = xmmword_100A10038;
  __int16 v33 = WORD1(xmmword_100A10038);
  __int16 v11 = WORD5(xmmword_100A10038);
  if (WORD5(xmmword_100A10038) | WORD4(xmmword_100A10038)) {
    BOOL v12 = WORD1(xmmword_100A10038) == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12 && byte_100A10068 != 0)
  {
    *(_DWORD *)&v35[3] = 0;
    *(_DWORD *)__int16 v35 = 0;
    if (WORD5(xmmword_100A10038) && WORD4(xmmword_100A10038))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"ELNAOn and ELNAByass cannot be used with ScanCore together leScanWindowScanCoreELNAOn=%d leScanWindowScanCoreELNABypass=%d", v14, v15, v16, v17, v18, v19, v20, WORD3(xmmword_100A10038));
        uint64_t v21 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      sub_100232404(v8, v14, v15, v16, v17, v18, v19, v20);
      return;
    }
    if (WORD4(xmmword_100A10038))
    {
      __int16 v11 = WORD4(xmmword_100A10038);
      unsigned int v22 = 4;
    }
    else
    {
      unsigned int v22 = 8;
    }
    __int16 v32 = v11;
    if (a1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not start LE scan (leScanParamsScanCoreCb): %!", v23, v24, v25, v26, v27, v28, v29, v8);
        uint64_t v30 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      xmmword_100A10038 = 0u;
      *(_OWORD *)&byte_100A10048 = 0u;
      unk_100A10018 = 0u;
      *(_OWORD *)&qword_100A10028 = 0u;
      byte_100A10062 = 0;
      if (v10) {
        v10(v8, v9);
      }
      else {
        sub_10025B8C0();
      }
      return;
    }
    if (byte_100A10065)
    {
      sub_100229724((uint64_t)v35);
      if (byte_100A10066) {
        uint64_t v31 = 2;
      }
      else {
        uint64_t v31 = 1;
      }
      byte_100A10048 = v31;
      sub_1001FA954(v35[0], BYTE13(xmmword_100A10038), 1, (uint64_t)&v34, (uint64_t)&v33, (uint64_t)&v32, v31, v22);
      return;
    }
    a1 = 0;
  }

  sub_100232404(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_100232974(uint64_t a1)
{
  if (a1)
  {
LABEL_4:
    sub_1002329F0(a1);
    return;
  }
  if (byte_100A10069)
  {
    a1 = sub_1001FAC78();
    goto LABEL_4;
  }

  sub_100232AB4(0);
}

void sub_1002329F0(uint64_t a1)
{
  if (a1)
  {
    uint64_t v3 = (void (*)(uint64_t, uint64_t))qword_100A10028;
    uint64_t v2 = qword_100A10030;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Reset scan in LE_Scan: %! for location %d", v4, v5, v6, v7, v8, v9, v10, a1);
      __int16 v11 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    xmmword_100A10038 = 0u;
    *(_OWORD *)&byte_100A10048 = 0u;
    unk_100A10018 = 0u;
    *(_OWORD *)&qword_100A10028 = 0u;
    byte_100A10062 = 0;
    if (v3) {
      v3(a1, v2);
    }
    else {
      sub_10025B8C0();
    }
  }
}

void sub_100232AB4(uint64_t a1)
{
  if (a1)
  {
LABEL_2:
    sub_1002329F0(a1);
    return;
  }
  if (byte_100A10064 && (byte_100A1006A & 1) == 0)
  {
    a1 = sub_1001FAE40();
    byte_100A1006A = 1;
    goto LABEL_2;
  }
  uint64_t v1 = (void (*)(void, uint64_t))unk_100A10018;
  uint64_t v2 = qword_100A10030;
  byte_100A10062 = 0;
  if (unk_100A10018)
  {
    v1(0, v2);
  }
}

void sub_100232B74(uint64_t a1)
{
  uint64_t v1 = (void (*)(void, uint64_t))unk_100A10018;
  uint64_t v3 = (void (*)(uint64_t, uint64_t))qword_100A10028;
  uint64_t v2 = qword_100A10030;
  byte_100A10062 = 0;
  if (a1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Could not start LE scan callback: %!", v5, v6, v7, v8, v9, v10, v11, a1);
      BOOL v12 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    xmmword_100A10038 = 0u;
    *(_OWORD *)&byte_100A10048 = 0u;
    unk_100A10018 = 0u;
    *(_OWORD *)&qword_100A10028 = 0u;
    if (v3) {
      v3(a1, v2);
    }
    else {
      sub_10025B8C0();
    }
  }
  else if (unk_100A10018)
  {
    uint64_t v13 = qword_100A10030;
    v1(0, v13);
  }
}

uint64_t sub_100232C64(uint64_t result)
{
  qword_100A10070 = result;
  return result;
}

uint64_t sub_100232C70()
{
  return qword_100A10070;
}

uint64_t sub_100232C7C(uint64_t a1, char a2)
{
  if (!sub_100197770(a1)) {
    return 414;
  }
  uint64_t result = 0;
  *(unsigned char *)(a1 + 233) = a2 ^ 1;
  return result;
}

void sub_100232CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_100197770(a2))
  {
    if (a1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to encrypt connection %!.", v6, v7, v8, v9, v10, v11, v12, a1);
        uint64_t v13 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      *(unsigned char *)(a2 + 167) = 0;
      if (a1 == 708)
      {
        *(_DWORD *)(a2 + 132) = 6;
        *(_DWORD *)(a2 + 140) = 4834;
      }
      *(unsigned char *)(a2 + 166) = a3 != 0;
    }
    else
    {
      *(unsigned char *)(a2 + 166) = a3 != 0;
      *(unsigned char *)(a2 + 168) = *(unsigned char *)(a2 + 169);
      *(unsigned char *)(a2 + 208) = 1;
    }
    sub_10023D934(a2, a1, a3 != 0);
    __int16 v22 = xmmword_100A100C0;
    if ((__int16)xmmword_100A100C0 >= 1)
    {
      uint64_t v23 = 0;
      uint64_t v24 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))&xmmword_100A100C0 + 1;
      do
      {
        if (*v24)
        {
          (*v24)(a2, a1, a3, qword_100A10098);
          __int16 v22 = xmmword_100A100C0;
        }
        ++v23;
        v24 += 3;
      }
      while (v23 < v22);
    }
    sub_10023D990(a2, a1, a3 != 0);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This handle is not a LE connection.", v14, v15, v16, v17, v18, v19, v20, v25);
    uint64_t v21 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_100232E54(uint64_t a1, unsigned char *a2)
{
  if (sub_100197770((uint64_t)a2))
  {
    if (a1)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to refresh connection %!.", v4, v5, v6, v7, v8, v9, v10, a1);
        uint64_t v11 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      a2[166] = 0;
    }
    else
    {
      a2[166] = 1;
      a2[168] = a2[169];
      sub_10023D934((uint64_t)a2, 0, 1);
      __int16 v20 = xmmword_100A100C0;
      if ((__int16)xmmword_100A100C0 >= 1)
      {
        uint64_t v21 = 0;
        __int16 v22 = (char *)&xmmword_100A100C0 + 8;
        do
        {
          if (*(void *)v22)
          {
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))v22)(a2, 0, 1, qword_100A10098);
            __int16 v20 = xmmword_100A100C0;
          }
          ++v21;
          v22 += 24;
        }
        while (v21 < v20);
      }
      sub_10023D990((uint64_t)a2, 0, 1);
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This handle is not a LE connection.", v12, v13, v14, v15, v16, v17, v18, v23);
    uint64_t v19 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

void sub_100232FC8(int a1, void *a2, uint64_t a3)
{
  uint64_t v51 = 0;
  long long v50 = 0uLL;
  char v48 = 0;
  uint64_t v5 = sub_100197864(a1);
  uint64_t v49 = v5;
  if (v5)
  {
    uint64_t v6 = (uint64_t)v5;
    if (sub_100197770((uint64_t)v5))
    {
      if (!a3 && *a2 == v51 && sub_100237AD0((_DWORD *)(v6 + 48)))
      {
        if (sub_10023E644(v6, &v50, &v48))
        {
          if (!sub_10001BDE0(186, (uint64_t)sub_100233234, v7, v8, v9, v10, v11, v12, v6))
          {
            *(unsigned char *)(v6 + 169) = v48;
            *(unsigned char *)(v6 + 166) = 2;
          }
        }
        else
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Rejecting key request", v38, v39, v40, v41, v42, v43, v44, v46);
            uint64_t v45 = sub_100050B4C(0x43u);
            if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
          sub_10001BDE0(187, 0, v39, v40, v41, v42, v43, v44, v6);
        }
      }
      else if (unk_100A10080)
      {
        if (*(unsigned char *)(v6 + 55)) {
          uint64_t v21 = v6 + 56;
        }
        else {
          uint64_t v21 = v6 + 48;
        }
        unk_100A10080(v21, a2, a3, qword_100A10098);
        v47[1] = &v49;
        v47[0] = (const void *)8;
        if (sub_1000268E4((uint64_t)sub_100233274, v47, 5000, (int *)(v6 + 184)))
        {
          if (sub_100058654())
          {
            sub_100056E24((uint64_t)"Failed to set key request timeout CB", v22, v23, v24, v25, v26, v27, v28, v46);
            uint64_t v29 = sub_100050B4C(0x43u);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
              sub_100744F6C();
            }
          }
        }
      }
      else if (sub_100058654())
      {
        sub_100056E24((uint64_t)"No callbacks, ignoring request", v30, v31, v32, v33, v34, v35, v36, v46);
        uint64_t v37 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection, ignoring", v13, v14, v15, v16, v17, v18, v19, v46);
      __int16 v20 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
}

BOOL sub_100233234(BOOL result, uint64_t a2)
{
  if (result && a2)
  {
    uint64_t result = sub_100197770(a2);
    if (result)
    {
      *(unsigned char *)(a2 + 166) = 0;
      *(unsigned char *)(a2 + 169) = 0;
    }
  }
  return result;
}

void sub_100233274(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = *v1;
  if (*v1 && sub_100197770(*v1))
  {
    *(_DWORD *)(v2 + 184) = 0;
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Timeout waiting for the response - we rejected the request for Key length", v3, v4, v5, v6, v7, v8, v9, v19);
      uint64_t v10 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_10001BDE0(187, 0, v4, v5, v6, v7, v8, v9, v2);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This handle is not a LE connection.", v11, v12, v13, v14, v15, v16, v17, v19);
    uint64_t v18 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_100233348(_DWORD *a1, uint64_t *a2, __int16 a3, uint64_t a4, char a5)
{
  v60[0] = 0;
  v60[1] = 0;
  if (!a1)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid address", v21, v22, v23, v24, v25, v26, v27, v57);
    uint64_t v28 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_20:
    sub_100744F6C();
    return 101;
  }
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"randomNumber cannot be NULL", v29, v30, v31, v32, v33, v34, v35, v57);
    uint64_t v36 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_20;
  }
  uint64_t v9 = sub_100197B34(a1);
  uint64_t v59 = v9;
  if (!v9) {
    return 122;
  }
  uint64_t v10 = v9;
  if (!sub_100197770(v9))
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection, ignoring", v37, v38, v39, v40, v41, v42, v43, v57);
      uint64_t v44 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 122;
  }
  uint64_t v11 = *(unsigned int *)(v10 + 184);
  if (v11)
  {
    sub_100026DB4(v11);
    *(_DWORD *)(v10 + 184) = 0;
  }
  if (!a4)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Keysize=0 - no key present", v45, v14, v15, v16, v17, v18, v19, v57);
      uint64_t v46 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v12 = 0;
    goto LABEL_30;
  }
  if ((a5 & 0xFE) != 2)
  {
    uint64_t v12 = sub_10023E778(a2, a3, v60);
    if (v12) {
      return v12;
    }
    uint64_t v47 = (_DWORD *)(*(unsigned char *)(v10 + 55) ? v10 + 56 : v10 + 48);
    if (!sub_100233780(v47, (uint64_t)v60, a4, a5)) {
      return v12;
    }
LABEL_30:
    sub_10001BDE0(187, 0, v14, v15, v16, v17, v18, v19, v10);
    return v12;
  }
  if (off_100A10088)
  {
    v58[1] = &v59;
    v58[0] = (const void *)8;
    uint64_t v12 = sub_1000268E4((uint64_t)sub_100233650, v58, 0, 0);
    if (!v12)
    {
      *(unsigned char *)(v59 + 166) = 3;
      return v12;
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"OI_Dispatch_RegisterTimedFunc failed to set key len request timeout %!", v13, v14, v15, v16, v17, v18, v19, v12);
      __int16 v20 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v10 = v59;
    goto LABEL_30;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"No callbacks, ignoring request", v48, v49, v50, v51, v52, v53, v54, v57);
    uint64_t v55 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 0;
}

void sub_100233650(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 8);
  uint64_t v21 = v1;
  if (off_100A10088)
  {
    v20[0] = 0;
    if (v1 && sub_100197770(v1))
    {
      v20[1] = &v21;
      LOWORD(v20[0]) = 8;
      if (sub_1000268E4((uint64_t)sub_100235660, v20, 5000, (int *)(v1 + 180)))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to set key request timeout CB", v2, v3, v4, v5, v6, v7, v8, v19);
          uint64_t v9 = sub_100050B4C(0x43u);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      else
      {
        if (*(unsigned char *)(v21 + 55)) {
          uint64_t v18 = v21 + 56;
        }
        else {
          uint64_t v18 = v21 + 48;
        }
        off_100A10088(v18, qword_100A10098);
      }
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v10, v11, v12, v13, v14, v15, v16, v19);
      uint64_t v17 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
}

uint64_t sub_100233780(_DWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a1)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid address", v16, v17, v18, v19, v20, v21, v22, v56);
    uint64_t v23 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_18:
    sub_100744F6C();
    return 101;
  }
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid *key specified", v33, v34, v35, v36, v37, v38, v39, v56);
    uint64_t v40 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_18;
  }
  uint64_t v6 = sub_100197B34(a1);
  if (v6 && (uint64_t v7 = (unsigned char *)v6, sub_100197770(v6)))
  {
    if ((a3 - 17) <= 0xFFFFFFEF)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"LTK length is too big : %d.", v8, v9, v10, v11, v12, v13, v14, a3);
      uint64_t v15 = sub_100050B4C(0x43u);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_18;
    }
    __memmove_chk();
    uint64_t v32 = sub_10001BDE0(186, (uint64_t)sub_100233234, v42, v43, v44, v45, v46, v47, (uint64_t)v7);
    if (v32)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not send long term key response %!.", v48, v49, v50, v51, v52, v53, v54, v32);
        uint64_t v55 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      v7[167] = 0;
    }
    else
    {
      v7[167] = a3;
      v7[169] = a4;
      v7[166] = 2;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v24, v25, v26, v27, v28, v29, v30, v56);
      uint64_t v31 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return v32;
}

uint64_t sub_1002339C8()
{
  byte_100A10188 = 0;
  xmmword_100A10189 = 0u;
  unk_100A10199 = 0u;
  xmmword_100A101A9 = 0u;
  unk_100A101B9 = 0u;
  xmmword_100A101C9 = 0u;
  unk_100A101D9 = 0u;
  xmmword_100A101E9 = 0u;
  unk_100A101F9 = 0u;
  xmmword_100A10209 = 0u;
  unk_100A10219 = 0u;
  xmmword_100A10229 = 0u;
  dword_100A10239 = 0;
  return 0;
}

uint64_t sub_100233A00(int *a1, char a2)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v2 = 0;
      unsigned __int8 v3 = 20;
      uint64_t v4 = &xmmword_100A10189;
      do
      {
        int v5 = *((unsigned __int8 *)v4 + 7);
        if (*((unsigned char *)v4 + 7))
        {
          if (*(_DWORD *)v4 == *a1 && *(_DWORD *)((char *)v4 + 3) == *(int *)((char *)a1 + 3))
          {
            if (*((unsigned char *)v4 + 8)) {
              return 0;
            }
            *((unsigned char *)v4 + 8) = 1;
          }
        }
        if (v3 == 20 && v5 == 0) {
          unsigned __int8 v3 = v2;
        }
        ++v2;
        uint64_t v4 = (long long *)((char *)v4 + 9);
      }
      while (v2 != 20);
      if (v3 > 0x13u)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not find a free slot for this device (DB FULL). Aborting.", v16, v17, v18, v19, v20, v21, v22, v25);
          uint64_t v23 = sub_100050B4C(0x43u);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 104;
      }
      else
      {
        uint64_t v8 = 0;
        uint64_t v9 = (char *)&xmmword_100A10189 + 9 * v3;
        v9[7] = 1;
        int v10 = *a1;
        *(_DWORD *)(v9 + 3) = *(int *)((char *)a1 + 3);
        *(_DWORD *)uint64_t v9 = v10;
        v9[8] = 1;
      }
    }
    else
    {
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = (int *)((char *)&xmmword_100A10189 + v11);
        if (*((unsigned char *)&xmmword_100A10189 + v11 + 7))
        {
          int v13 = *v12;
          int v14 = *(int *)((char *)v12 + 3);
          if (v13 == *a1 && v14 == *(int *)((char *)a1 + 3)) {
            break;
          }
        }
        v11 += 9;
        if (v11 == 180) {
          return 120;
        }
      }
      uint64_t v8 = 0;
      *((unsigned char *)&xmmword_100A10189 + v11 + 7) = 0;
    }
  }
  else
  {
    uint64_t v8 = 0;
    byte_100A10188 = a2;
  }
  return v8;
}

BOOL sub_100233B84(_DWORD *a1, _DWORD *a2)
{
  if (a1)
  {
    if (byte_100A10188) {
      return 1;
    }
    uint64_t v12 = 0;
    while (1)
    {
      int v13 = (int *)((char *)&xmmword_100A10189 + v12);
      if (*((unsigned char *)&xmmword_100A10189 + v12 + 7))
      {
        if (*v13 == *a1 && *(int *)((char *)v13 + 3) == *(_DWORD *)((char *)a1 + 3)) {
          break;
        }
        if (a2)
        {
          int v15 = *v13;
          int v16 = *(int *)((char *)v13 + 3);
          if (v15 == *a2 && v16 == *(_DWORD *)((char *)a2 + 3)) {
            break;
          }
        }
      }
      v12 += 9;
      if (v12 == 180) {
        return 0;
      }
    }
    uint64_t v11 = (char *)&xmmword_100A10189 + v12 + 8;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid address, checking global OOB flag", v3, v4, v5, v6, v7, v8, v9, v18);
      int v10 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    uint64_t v11 = &byte_100A10188;
  }
  return *v11 != 0;
}

uint64_t sub_100233C80(_OWORD *a1, int a2, int a3, char a4, char a5)
{
  v25[0] = *(_OWORD *)off_10099F280;
  v25[1] = *(_OWORD *)&off_10099F290;
  LODWORD(xmmword_100A198BC) = 1;
  if (BYTE9(xmmword_100A19600))
  {
    if (unk_100A10080) {
      BOOL v5 = 0;
    }
    else {
      BOOL v5 = off_100A10088 == 0;
    }
    if (v5 && off_100A10090 == 0)
    {
      long long v24 = a1[1];
      *(_OWORD *)&unk_100A10080 = *a1;
      *(_OWORD *)&off_100A10090 = v24;
      return sub_10023F254((uint64_t (*)(void, void, void, void, void))sub_100233E18, (uint64_t)v25, (uint64_t (*)(void, void, void, void))sub_100233E34, a2, a3, a4, a5);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Someone is already listening for LE security events.", v7, v8, v9, v10, v11, v12, v13, *(uint64_t *)&v25[0]);
        int v14 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 119;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"LE not supported, can't register SMP.", v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v25[0]);
      uint64_t v23 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 147;
  }
}

uint64_t sub_100233DC4(uint64_t result, uint64_t a2)
{
  if (unk_100A100A0) {
    return unk_100A100A0(result, a2, qword_100A100B8);
  }
  return result;
}

uint64_t sub_100233DE0(uint64_t result)
{
  if (off_100A100A8) {
    return off_100A100A8(result, qword_100A100B8);
  }
  return result;
}

uint64_t sub_100233DFC(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  if (off_100A100B0) {
    return off_100A100B0(a1, a2, a3, qword_100A100B8);
  }
  else {
    return sub_1002378AC(a1);
  }
}

uint64_t sub_100233E18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (off_100A10090) {
    return off_100A10090(result, a2, a3, a4, qword_100A10098);
  }
  return result;
}

uint64_t sub_100233E34(uint64_t result, uint64_t a2, uint64_t a3)
{
  __int16 v3 = xmmword_100A100C0;
  if ((__int16)xmmword_100A100C0 >= 1)
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    uint64_t v8 = &qword_100A100D8;
    do
    {
      uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(v8 - 1);
      if (v9)
      {
        uint64_t result = v9(v6, a2, a3, *v8);
        __int16 v3 = xmmword_100A100C0;
      }
      ++v7;
      v8 += 3;
    }
    while (v7 < v3);
  }
  return result;
}

uint64_t sub_100233EB8(uint64_t a1)
{
  if (!BYTE9(xmmword_100A19600)) {
    return 0;
  }
  if (unk_100A10080 == *(uint64_t (**)(void, void, void, void))a1
    && off_100A10088 == *(uint64_t (**)(void, void))(a1 + 8)
    && off_100A10090 == *(uint64_t (**)(void, void, void, void, void))(a1 + 16))
  {
    uint64_t result = sub_10023F434();
    if (!result)
    {
      qword_100A10180 = 0;
      xmmword_100A10160 = 0u;
      unk_100A10170 = 0u;
      xmmword_100A10140 = 0u;
      unk_100A10150 = 0u;
      xmmword_100A10120 = 0u;
      unk_100A10130 = 0u;
      xmmword_100A10100 = 0u;
      unk_100A10110 = 0u;
      xmmword_100A100E0 = 0u;
      unk_100A100F0 = 0u;
      xmmword_100A100C0 = 0u;
      *(_OWORD *)&qword_100A100D0 = 0u;
      *(_OWORD *)&unk_100A100A0 = 0u;
      *(_OWORD *)&off_100A100B0 = 0u;
      *(_OWORD *)&unk_100A10080 = 0u;
      *(_OWORD *)&off_100A10090 = 0u;
    }
    qword_100A10240 = 0;
    word_100A10248 = 0;
    LODWORD(xmmword_100A198BC) = 0;
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"You need to unregister the correct callbacks", v1, v2, v3, v4, v5, v6, v7, v10);
      uint64_t v8 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 101;
  }
  return result;
}

__n128 sub_100233FC4(uint64_t a1)
{
  if (BYTE9(xmmword_100A19600))
  {
    if (unk_100A100A0) {
      BOOL v1 = 0;
    }
    else {
      BOOL v1 = off_100A100A8 == 0;
    }
    if (v1 && off_100A100B0 == 0)
    {
      __n128 result = *(__n128 *)a1;
      long long v12 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)&unk_100A100A0 = *(_OWORD *)a1;
      *(_OWORD *)&off_100A100B0 = v12;
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Someone is already listening for LE pairing events.", v3, v4, v5, v6, v7, v8, v9, v13);
      uint64_t v11 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return result;
}

double sub_100234070(uint64_t a1)
{
  if (BYTE9(xmmword_100A19600))
  {
    if (unk_100A100A0 == *(uint64_t (**)(void, void, void))a1
      && off_100A100A8 == *(uint64_t (**)(void, void))(a1 + 8)
      && off_100A100B0 == *(uint64_t (**)(void, void, void, void))(a1 + 16))
    {
      double result = 0.0;
      *(_OWORD *)&unk_100A100A0 = 0u;
      *(_OWORD *)&off_100A100B0 = 0u;
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"You need to unregister the correct callbacks", v1, v2, v3, v4, v5, v6, v7, v10);
      uint64_t v9 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return result;
}

__n128 sub_10023413C(__n128 *a1)
{
  if (BYTE9(xmmword_100A19600))
  {
    __int16 v1 = xmmword_100A100C0;
    if ((__int16)xmmword_100A100C0 < 8)
    {
      uint64_t v11 = (char *)&unk_100A10080 + 24 * (__int16)xmmword_100A100C0;
      __n128 result = *a1;
      *(__n128 *)(v11 + 72) = *a1;
      *((void *)v11 + 11) = a1[1].n128_u64[0];
      LOWORD(xmmword_100A100C0) = v1 + 1;
    }
    else if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Too many callbacks registered.", v2, v3, v4, v5, v6, v7, v8, v12);
      uint64_t v10 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  return result;
}

uint64_t sub_1002341F8(void *a1)
{
  if (!BYTE9(xmmword_100A19600)) {
    return 0;
  }
  __int16 v1 = xmmword_100A100C0;
  if (!(_WORD)xmmword_100A100C0)
  {
    uint64_t result = sub_100058654();
    if (!result) {
      return result;
    }
    sub_100056E24((uint64_t)"No callbacks registered.", v13, v14, v15, v16, v17, v18, v19, v24);
    uint64_t v20 = sub_100050B4C(0x43u);
    uint64_t result = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_100744F6C();
    return 0;
  }
  if ((__int16)xmmword_100A100C0 < 1)
  {
LABEL_8:
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"You need to unregister the correct callbacks", v4, v5, v6, v7, v8, v9, v10, v24);
      uint64_t v11 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 101;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v3 = &qword_100A100D0;
    while (*(v3 - 1) == *a1 && *v3 == a1[1])
    {
      ++v2;
      v3 += 3;
      if ((char *)(unsigned __int16)xmmword_100A100C0 == v2) {
        goto LABEL_8;
      }
    }
    if ((__int16)xmmword_100A100C0 - 1 > (int)v2)
    {
      int v21 = (int)v2;
      do
      {
        uint64_t v22 = (char *)&xmmword_100A100C0 + 24 * (__int16)v21 + 8;
        uint64_t v2 = (char *)&xmmword_100A100C0 + 24 * (int)v2 + 8;
        long long v23 = *(_OWORD *)(v2 + 24);
        *((void *)v22 + 2) = *((void *)v2 + 5);
        *(_OWORD *)uint64_t v22 = v23;
        LODWORD(v2) = (__int16)++v21;
      }
      while ((__int16)xmmword_100A100C0 - 1 > (__int16)v21);
      __int16 v1 = xmmword_100A100C0;
    }
    uint64_t result = 0;
    LOWORD(xmmword_100A100C0) = v1 - 1;
  }
  return result;
}

uint64_t sub_10023436C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*randomNumber cannot be NULL", v10, v11, v12, v13, v14, v15, v16, v58);
    uint64_t v17 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_16:
    sub_100744F6C();
    return 101;
  }
  if (!a4)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*key cannot be NULL", v26, v27, v28, v29, v30, v31, v32, v58);
    uint64_t v33 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_16;
  }
  if (a1 && sub_100197770((uint64_t)a1))
  {
    if (a1[166] == 2) {
      return 118;
    }
    if (a5 >= 0x11)
    {
      if (!sub_100058654()) {
        return 101;
      }
      sub_100056E24((uint64_t)"LTK length is too big : %d.", v35, v36, v37, v38, v39, v40, v41, a5);
      uint64_t v42 = sub_100050B4C(0x43u);
      if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        return 101;
      }
      goto LABEL_16;
    }
    __memmove_chk();
    a1[167] = a5;
    uint64_t v9 = sub_10019304C(0xB9u, v43, v44, v45, v46, v47, v48, v49, (uint64_t)a1);
    if (v9)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not start the encryption on the LE link %!.", v50, v51, v52, v53, v54, v55, v56, v9);
        uint64_t v57 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    else
    {
      a1[166] = 2;
      a1[169] = a6;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v18, v19, v20, v21, v22, v23, v24, v58);
      uint64_t v25 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return v9;
}

uint64_t sub_1002345C4(unsigned char *a1, uint64_t a2)
{
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*keys cannot be NULL", v13, v14, v15, v16, v17, v18, v19, v32);
    uint64_t v20 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_12;
  }
  if (a1 && sub_100197770((uint64_t)a1))
  {
    if (a1[166] == 2) {
      return 118;
    }
    if ((~*(unsigned __int16 *)(a2 + 80) & 7) == 0)
    {
      uint64_t v21 = *(unsigned __int16 *)(a2 + 18);
      uint64_t v22 = *(unsigned __int8 *)(a2 + 16);
      char v23 = *(unsigned char *)(a2 + 17);
      return sub_10023436C(a1, a2 + 20, v21, a2, v22, v23);
    }
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Missing keys", v24, v25, v26, v27, v28, v29, v30, v32);
    uint64_t v31 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_12:
    sub_100744F6C();
    return 101;
  }
  if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This handle is not a LE connection.", v5, v6, v7, v8, v9, v10, v11, v32);
    uint64_t v12 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
  return 1310;
}

uint64_t sub_100234720(uint64_t a1)
{
  uint64_t v29 = a1;
  if (a1 && sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 166) == 2) {
      return 118;
    }
    if (!off_100A10088)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"No callbacks defined", v19, v20, v21, v22, v23, v24, v25, v27);
        uint64_t v26 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 101;
    }
    v28[1] = &v29;
    v28[0] = (const void *)8;
    uint64_t result = sub_1000268E4((uint64_t)sub_100233650, v28, 0, 0);
    if (result)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to send key request callback", v11, v12, v13, v14, v15, v16, v17, v27);
        uint64_t v18 = sub_100050B4C(0x43u);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 101;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This handle is not a LE connection.", v3, v4, v5, v6, v7, v8, v9, v27);
      uint64_t v10 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return result;
}

uint64_t sub_100234878(uint64_t a1)
{
  if (sub_100197770(a1)) {
    return *(unsigned __int8 *)(a1 + 166) == 1;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Invalid LE connection handle 0x%x", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = sub_100050B4C(0x43u);
    uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100234900(uint64_t a1)
{
  if (sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 166) != 1) {
      return 0;
    }
    if (off_100A10088) {
      return (*(unsigned char *)(a1 + 168) & 0xFD) == 1;
    }
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"No callbacks defined", v11, v12, v13, v14, v15, v16, v17, v19);
      uint64_t v18 = sub_100050B4C(0x43u);
      uint64_t result = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);
      if (result)
      {
LABEL_7:
        sub_100744F6C();
        return 0;
      }
    }
  }
  else
  {
    uint64_t result = sub_100058654();
    if (result)
    {
      sub_100056E24((uint64_t)"Invalid LE connection handle 0x%x", v3, v4, v5, v6, v7, v8, v9, a1);
      uint64_t v10 = sub_100050B4C(0x43u);
      uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
      if (result) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

uint64_t sub_1002349E0(uint64_t a1)
{
  if (sub_100197770(a1)) {
    return *(unsigned char *)(a1 + 208) != 0;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"Invalid LE connection handle 0x%x", v3, v4, v5, v6, v7, v8, v9, a1);
    uint64_t v10 = sub_100050B4C(0x43u);
    uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
    if (result)
    {
      sub_100744F6C();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100234A68(uint64_t a1, unsigned char *a2)
{
  if (sub_100197770(a1))
  {
    if (*(unsigned char *)(a1 + 166) == 1)
    {
      if (a2)
      {
        uint64_t result = 0;
        *a2 = *(unsigned char *)(a1 + 167);
      }
      else
      {
        sub_10025B8C0();
        return 101;
      }
    }
    else
    {
      return 4802;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid LE connection handle 0x%x", v5, v6, v7, v8, v9, v10, v11, a1);
      uint64_t v12 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 1310;
  }
  return result;
}

uint64_t sub_100234B18(void *a1, unsigned char *a2, uint64_t a3)
{
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*ltkType cannot be NULL", v7, v8, v9, v10, v11, v12, v13, v23);
    uint64_t v14 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_14:
    sub_100744F6C();
    return 101;
  }
  if (!a3)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*keys cannot be NULL", v15, v16, v17, v18, v19, v20, v21, v23);
    uint64_t v22 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_14;
  }
  if ((*(_WORD *)(a3 + 80) & 8) == 0) {
    return 102;
  }
  char v3 = *(unsigned char *)(a3 + 45);
  if ((v3 & 0xFE) != 2) {
    return 102;
  }
  *a2 = v3;
  unsigned int v4 = *(unsigned __int8 *)(a3 + 44);
  BOOL v5 = *(unsigned __int8 *)(a3 + 79) == 2;

  return sub_1001F03D4((const void *)(a3 + 28), v4, a1, v5);
}

BOOL sub_100234C1C(uint64_t a1, long long *a2)
{
  BOOL result = 0;
  char v6 = 0;
  __int16 v5 = 0;
  if (a1 && a2) {
    return *(unsigned char *)a1 == 1
  }
        && (*(unsigned char *)(a1 + 1) & 0x40) != 0
        && !sub_100180780(a2, (__int16 *)(a1 + 1), (uint64_t)&v5)
        && v5 == *(_WORD *)(a1 + 4)
        && v6 == *(unsigned char *)(a1 + 6);
  return result;
}

uint64_t sub_100234CA8(_DWORD *a1)
{
  uint64_t v1 = (unsigned __int16)word_100A10248;
  if (!word_100A10248) {
    return 0;
  }
  for (uint64_t i = qword_100A10240; ; i += 24)
  {
    BOOL v3 = *a1 == *(_DWORD *)i && *(_DWORD *)((char *)a1 + 3) == *(_DWORD *)(i + 3);
    if (v3 && !*(unsigned char *)(i + 23)) {
      break;
    }
    if (!--v1) {
      return 0;
    }
  }
  return i + 7;
}

uint64_t sub_100234CFC(unsigned char *a1, uint64_t a2, unsigned char *a3)
{
  if (!a1 || !a2 || !a3)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid parameter pointer specified", v10, v11, v12, v13, v14, v15, v16, *(uint64_t *)v35);
    uint64_t v17 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_19:
    sub_100744F6C();
    return 101;
  }
  if (*a1 != 1 || (a1[1] & 0xC0) != 0x40)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Cannot resolve a non-resolvable address.", v18, v19, v20, v21, v22, v23, v24, *(uint64_t *)v35);
    uint64_t v25 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_19;
  }
  if (qword_100A10240 && word_100A10248)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    *a3 = 0;
    do
    {
      if (sub_100234C1C((uint64_t)a1, (long long *)(qword_100A10240 + v6 + 7)) && !*a3)
      {
        int v8 = *(_DWORD *)(qword_100A10240 + v6);
        __int16 v9 = *(_WORD *)(qword_100A10240 + v6 + 4);
        *(unsigned char *)(a2 + 6) = *(unsigned char *)(qword_100A10240 + v6 + 6);
        *(_WORD *)(a2 + 4) = v9;
        *(_DWORD *)a2 = v8;
        *a3 = 1;
      }
      ++v7;
      v6 += 24;
    }
    while (v7 < (unsigned __int16)word_100A10248);
    return 0;
  }
  uint64_t result = sub_100058654();
  if (result)
  {
    sub_100056E24((uint64_t)"No resolving cache defined.", v27, v28, v29, v30, v31, v32, v33, *(uint64_t *)v35);
    uint64_t v34 = sub_100050B4C(0x43u);
    uint64_t result = os_log_type_enabled(v34, OS_LOG_TYPE_INFO);
    if (result)
    {
      *(_DWORD *)uint64_t v35 = 136446210;
      *(void *)&v35[4] = sub_100050714();
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, " %{public}s", v35, 0xCu);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100234F14(_DWORD *a1, uint64_t a2)
{
  if (!a1)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid address", v17, v18, v19, v20, v21, v22, v23, v42);
    uint64_t v24 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_16:
    sub_100744F6C();
    return 101;
  }
  if (!a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*keys cannot be NULL", v25, v26, v27, v28, v29, v30, v31, v42);
    uint64_t v32 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_16;
  }
  uint64_t v4 = sub_100197B34(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(unsigned int *)(v4 + 180);
    if (v6)
    {
      sub_100026DB4(v6);
      *(_DWORD *)(v5 + 180) = 0;
    }
    uint64_t v7 = sub_1002398DC((unsigned char *)v5, a2);
    if (v7)
    {
      v44[0] = 0;
      int v8 = sub_100022FE8(0x10uLL);
      uint64_t v43 = v8;
      *(void *)int v8 = v5;
      v8[2] = 4803;
      v44[1] = &v43;
      LOWORD(v44[0]) = 8;
      if (sub_1000268E4((uint64_t)sub_1002350E8, v44, 0, 0))
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Failed to send the encryption failed callback", v9, v10, v11, v12, v13, v14, v15, v42);
          uint64_t v16 = sub_100050B4C(0x43u);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
        return 101;
      }
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection to %: is no longer valid. Ignoring.", v34, v35, v36, v37, v38, v39, v40, (uint64_t)a1 + 1);
      uint64_t v41 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 122;
  }
  return v7;
}

void sub_1002350E8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = **v1;
  if (v3 && sub_100197770(v3))
  {
    uint64_t v4 = *(unsigned int *)(*v2 + 180);
    if (v4)
    {
      sub_100026DB4(v4);
      *(_DWORD *)(*v2 + 180) = 0;
    }
    __int16 v5 = xmmword_100A100C0;
    if ((_WORD)xmmword_100A100C0)
    {
      unint64_t v6 = 0;
      uint64_t v7 = (void (**)(void))&xmmword_100A100C0 + 1;
      do
      {
        if (*v7)
        {
          (*v7)();
          __int16 v5 = xmmword_100A100C0;
        }
        ++v6;
        v7 += 3;
      }
      while (v6 < v5);
    }
    sub_100023010(v2);
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This handle is not a LE connection.", v8, v9, v10, v11, v12, v13, v14, v16);
    uint64_t v15 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_1002351FC(_DWORD *a1, int a2, uint64_t a3)
{
  if (!a1)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid address", v7, v8, v9, v10, v11, v12, v13, v23);
    uint64_t v14 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_11:
    sub_100744F6C();
    return 101;
  }
  if (!a3)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"*keys cannot be NULL", v15, v16, v17, v18, v19, v20, v21, v23);
    uint64_t v22 = sub_100050B4C(0x43u);
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_11;
  }
  uint64_t v5 = sub_100197B34(a1);

  return sub_100239B08(v5, a2, a3);
}

uint64_t sub_1002352D4(_DWORD *a1, int a2, unsigned __int8 a3)
{
  if (a1)
  {
    uint64_t v5 = sub_100197B34(a1);
    return sub_100238D74(v5, a2, a3);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Invalid address", v7, v8, v9, v10, v11, v12, v13, v15);
      uint64_t v14 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 101;
  }
}

uint64_t sub_100235368(int *a1, _OWORD *a2, char a3)
{
  unsigned int v6 = (unsigned __int16)word_100A10248;
  if (word_100A10248)
  {
    uint64_t v7 = 0;
    uint64_t v8 = (_DWORD *)qword_100A10240;
    while (*v8 != *a1 || *(_DWORD *)((char *)v8 + 3) != *(int *)((char *)a1 + 3))
    {
      ++v7;
      v8 += 6;
      if ((unsigned __int16)word_100A10248 == v7) {
        goto LABEL_13;
      }
    }
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Found a dup instance of  %: at index %d, trying to remove it.", v10, v11, v12, v13, v14, v15, v16, (uint64_t)a1 + 1);
      uint64_t v17 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    sub_1002354D8(a1);
    unsigned int v6 = (unsigned __int16)word_100A10248;
  }
LABEL_13:
  uint64_t v18 = (char *)sub_100022FE8(24 * v6 + 24);
  uint64_t v19 = (uint64_t)v18;
  int v20 = (unsigned __int16)word_100A10248;
  if (word_100A10248)
  {
    uint64_t v21 = qword_100A10240;
    uint64_t v22 = (unsigned __int16)word_100A10248;
    uint64_t v23 = v18;
    do
    {
      long long v24 = *(_OWORD *)v21;
      *((void *)v23 + 2) = *(void *)(v21 + 16);
      *(_OWORD *)uint64_t v23 = v24;
      v23 += 24;
      v21 += 24;
      --v22;
    }
    while (v22);
  }
  uint64_t v25 = &v18[24 * v20];
  *(_OWORD *)(v25 + 7) = *a2;
  int v26 = *a1;
  __int16 v27 = *((_WORD *)a1 + 2);
  v25[6] = *((unsigned char *)a1 + 6);
  *((_WORD *)v25 + 2) = v27;
  *(_DWORD *)uint64_t v25 = v26;
  v25[23] = a3;
  if (qword_100A10240) {
    sub_100023010((void *)qword_100A10240);
  }
  qword_100A10240 = v19;
  word_100A10248 = v20 + 1;
  return 0;
}

uint64_t sub_1002354D8(_DWORD *a1)
{
  if (!word_100A10248) {
    return 120;
  }
  uint64_t v2 = 0;
  for (uint64_t i = (_DWORD *)qword_100A10240; *i != *a1 || *(_DWORD *)((char *)i + 3) != *(_DWORD *)((char *)a1 + 3); i += 6)
  {
    if ((unsigned __int16)word_100A10248 == ++v2) {
      return 120;
    }
  }
  if ((unsigned __int16)word_100A10248 == (unsigned __int16)v2) {
    return 120;
  }
  if ((unsigned __int16)word_100A10248 <= 1u)
  {
    unsigned __int16 v9 = 0;
    unsigned int v6 = 0;
    uint64_t v8 = (void *)qword_100A10240;
  }
  else
  {
    unsigned int v6 = (char *)sub_100022FE8(24 * ((unsigned __int16)word_100A10248 - 1));
    unint64_t v7 = (unsigned __int16)word_100A10248;
    uint64_t v8 = (void *)qword_100A10240;
    if ((unsigned __int16)word_100A10248 < 2u)
    {
      unsigned __int16 v9 = 0;
      if (!qword_100A10240) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
    unsigned __int16 v9 = 0;
    unint64_t v10 = 1;
    uint64_t v11 = qword_100A10240;
    do
    {
      if (*(_DWORD *)v11 != *a1 || *(_DWORD *)(v11 + 3) != *(_DWORD *)((char *)a1 + 3))
      {
        long long v13 = *(_OWORD *)v11;
        uint64_t v14 = &v6[24 * v9];
        *((void *)v14 + 2) = *(void *)(v11 + 16);
        *(_OWORD *)uint64_t v14 = v13;
        ++v9;
      }
      if (v10 >= v7) {
        break;
      }
      v11 += 24;
      ++v10;
    }
    while ((int)v7 - 1 > v9);
  }
  if (v8) {
LABEL_24:
  }
    sub_100023010(v8);
LABEL_25:
  uint64_t result = 0;
  qword_100A10240 = (uint64_t)v6;
  word_100A10248 = v9;
  return result;
}

void sub_100235628()
{
  if (qword_100A10240) {
    sub_100023010((void *)qword_100A10240);
  }
  qword_100A10240 = 0;
  word_100A10248 = 0;
}

void sub_100235660(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = *v1;
  if (*v1 && sub_100197770(*v1))
  {
    v22[0] = 0;
    uint64_t v3 = sub_100022FE8(0x10uLL);
    uint64_t v21 = v3;
    *(void *)uint64_t v3 = v2;
    v3[2] = 4807;
    v22[1] = &v21;
    LOWORD(v22[0]) = 8;
    if (sub_1000268E4((uint64_t)sub_1002350E8, v22, 0, 0) && sub_100058654())
    {
      sub_100056E24((uint64_t)"Failed to send the encryption failed callback", v4, v5, v6, v7, v8, v9, v10, v20);
      uint64_t v11 = sub_100050B4C(0x43u);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
  }
  else if (sub_100058654())
  {
    sub_100056E24((uint64_t)"This handle is not a LE connection.", v12, v13, v14, v15, v16, v17, v18, v20);
    uint64_t v19 = sub_100050B4C(0x43u);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_100744F6C();
    }
  }
}

uint64_t sub_10023576C(uint64_t a1, char a2, char a3)
{
  v33[0] = 1;
  v33[1] = a2;
  __int16 v34 = 2;
  char v35 = a3;
  char v36 = 0;
  if (sub_100197770(a1))
  {
    uint64_t v4 = sub_10025C6D8(v33, 6uLL, 0);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v4, 0);
      if (v6)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to SMP channel for handle 0x%x", v7, v8, v9, v10, v11, v12, v13, a1);
          uint64_t v14 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v5);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v23, v24, v25, v26, v27, v28, v29, v32);
        uint64_t v30 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v15, v16, v17, v18, v19, v20, v21, v32);
      uint64_t v22 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4120;
  }
  return v6;
}

uint64_t sub_1002358D8(uint64_t a1, char a2, int a3, unsigned int a4, unsigned int a5, int a6, int a7, int a8, unsigned __int16 a9)
{
  v53[0] = 19;
  v53[1] = a2;
  __int16 v54 = 2;
  __int16 v55 = a3;
  if (sub_100197770(a1))
  {
    if (!a3 && sub_10021A718(a1, a4, a5, a6, a7, a8, a9))
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Failed to update connection parameters.", v16, v17, v18, v19, v20, v21, v22, v52);
        uint64_t v23 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      __int16 v55 = 1;
    }
    uint64_t v24 = sub_10025C6D8(v53, 6uLL, 0);
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v24, 0);
      if (v26)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v27, v28, v29, v30, v31, v32, v33, a1);
          __int16 v34 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v25);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v43, v44, v45, v46, v47, v48, v49, v52);
        uint64_t v50 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v35, v36, v37, v38, v39, v40, v41, v52);
      uint64_t v42 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4121;
  }
  return v26;
}

uint64_t sub_100235AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v132[0] = 18;
  char v5 = byte_1009FAEF8++;
  v132[1] = v5;
  __int16 v133 = 8;
  __int16 v134 = a2;
  __int16 v135 = a3;
  __int16 v136 = a4;
  __int16 v137 = a5;
  if (*(unsigned char *)(a1 + 70) != 1)
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Connection is not peripheral.", v15, v16, v17, v18, v19, v20, v21, v131);
      uint64_t v22 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 132;
  }
  if ((unsigned __int16)(a2 - 3201) <= 0xF384u)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid min interval 0x%x.", v7, v8, v9, v10, v11, v12, v13, a2);
    uint64_t v14 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if ((unsigned __int16)(a3 - 3201) <= 0xF384u)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid max interval : 0x%x.", v25, v26, v27, v28, v29, v30, v31, a3);
    uint64_t v32 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if (a4 >= 0x1F5)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid peripheral latency %d.", v34, v35, v36, v37, v38, v39, v40, a4);
    uint64_t v41 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if ((a5 - 3201) <= 0xFFFFF388)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid supervision timeout : 0x%x.", v43, v44, v45, v46, v47, v48, v49, a5);
    uint64_t v50 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if (a3 <= a2)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Invalid interval range : 0x%x - 0x%x.", v61, v62, v63, v64, v65, v66, v67, a2);
    uint64_t v68 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
LABEL_50:
    sub_100744F6C();
    return 101;
  }
  double v51 = (double)a3 * 1.25;
  int v52 = a4 + 1;
  if (v51 * (double)((int)a4 + 1) > 6000.0)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Requesting an interval / latency combination that would provide a poor user experience (more than 6seconds syncups.)", v53, v54, v55, v56, v57, v58, v59, v131);
    uint64_t v60 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  double v69 = (double)a2 * 1.25;
  if (v69 < 10.0)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Requesting a min interval smaller than 10 ms. Let's refuse and not drain the battery...", v70, v71, v72, v73, v74, v75, v76, v131);
    uint64_t v77 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if (-(v69 - (double)a3 * 1.25) < 10.0)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Intervals should be %d ms apart - refusing.", v78, v79, v80, v81, v82, v83, v84, 10);
    uint64_t v85 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v85, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if (a4 >= 5 && (sub_1000EB238(a1) & 1) == 0)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Requesting a peripheral latency more than 4 so we drain our battery and they don't - refusing.", v104, v105, v106, v107, v108, v109, v110, v131);
    uint64_t v111 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  if (a5 >= 0x709)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Requesting for a timeout of more than 18 seconds, this is not very user friendly - refusing.", v87, v88, v89, v90, v91, v92, v93, v131);
    uint64_t v94 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v94, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  uint64_t v95 = (10 * a5);
  if (v51 * (double)(3 * v52) > (double)(int)v95)
  {
    if (!sub_100058654()) {
      return 101;
    }
    sub_100056E24((uint64_t)"Requesting for a timeout(%dms) / latency(%d) / maxInterval(%dms) that would cause link timeouts under bad conditions. - refusing.", v96, v97, v98, v99, v100, v101, v102, v95);
    uint64_t v103 = sub_100050B4C(0x42u);
    if (!os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
      return 101;
    }
    goto LABEL_50;
  }
  uint64_t v113 = sub_10025C6D8(v132, 0xCuLL, 0);
  if (v113)
  {
    uint64_t v114 = v113;
    uint64_t v23 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v113, 0);
    if (v23)
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v115, v116, v117, v118, v119, v120, v121, a1);
        uint64_t v122 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v122, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
    }
    sub_10025C53C(v114);
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v123, v124, v125, v126, v127, v128, v129, v131);
      uint64_t v130 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 104;
  }
  return v23;
}

uint64_t sub_100236084(uint64_t a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, __int16 a7)
{
  v37[0] = 21;
  v37[1] = a2;
  __int16 v38 = 10;
  __int16 v39 = a3;
  __int16 v40 = a4;
  __int16 v41 = a5;
  __int16 v42 = a6;
  __int16 v43 = a7;
  if (sub_100197770(a1))
  {
    uint64_t v8 = sub_10025C6D8(v37, 0xEuLL, 0);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v8, 0);
      if (v10)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v11, v12, v13, v14, v15, v16, v17, a1);
          uint64_t v18 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v9);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v27, v28, v29, v30, v31, v32, v33, v36);
        uint64_t v34 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v19, v20, v21, v22, v23, v24, v25, v36);
      uint64_t v26 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4122;
  }
  return v10;
}

uint64_t sub_100236250(uint64_t a1, char a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, __int16 a7)
{
  v37[0] = 20;
  v37[1] = a2;
  __int16 v38 = 10;
  __int16 v39 = a3;
  __int16 v40 = a4;
  __int16 v41 = a5;
  __int16 v42 = a6;
  __int16 v43 = a7;
  if (sub_100197770(a1))
  {
    uint64_t v8 = sub_10025C6D8(v37, 0xEuLL, 0);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v8, 0);
      if (v10)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v11, v12, v13, v14, v15, v16, v17, a1);
          uint64_t v18 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v9);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v27, v28, v29, v30, v31, v32, v33, v36);
        uint64_t v34 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v19, v20, v21, v22, v23, v24, v25, v36);
      uint64_t v26 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4123;
  }
  return v10;
}

uint64_t sub_10023641C(uint64_t a1, char a2, __int16 a3, __int16 a4)
{
  int v34 = 262166;
  BYTE1(v34) = a2;
  __int16 v35 = a3;
  __int16 v36 = a4;
  if (sub_100197770(a1))
  {
    char v5 = sub_10025C6D8((char *)&v34, 8uLL, 0);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v5, 0);
      if (v7)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v8, v9, v10, v11, v12, v13, v14, a1);
          uint64_t v15 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v6);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v24, v25, v26, v27, v28, v29, v30, v33);
        uint64_t v31 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v16, v17, v18, v19, v20, v21, v22, v33);
      uint64_t v23 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4124;
  }
  return v7;
}

uint64_t sub_1002365C0(uint64_t a1, int a2, unsigned int a3, __int16 a4, unsigned int a5, char a6)
{
  v40[0] = 1;
  v40[1] = a6;
  v40[3] = 0;
  __int16 v41 = a2;
  int v42 = 0;
  if (a2 == 1)
  {
    uint64_t v9 = &v42;
    uint64_t v8 = (char *)&v42 + 1;
    unsigned int v10 = a3 >> 8;
    int v7 = 2;
  }
  else
  {
    int v7 = 0;
    if (a2 != 2) {
      goto LABEL_6;
    }
    uint64_t v8 = (char *)&v42 + 3;
    uint64_t v9 = (int *)((char *)&v42 + 2);
    LOWORD(v42) = a4;
    unsigned int v10 = a5 >> 8;
    int v7 = 4;
    LOBYTE(a3) = a5;
  }
  *(unsigned char *)uint64_t v9 = a3;
  *uint64_t v8 = v10;
LABEL_6:
  v40[2] = v7 + 2;
  if (sub_100197770(a1))
  {
    uint64_t v11 = sub_10025C6D8(v40, (v7 + 6), 0);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v11, 0);
      if (v13)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v14, v15, v16, v17, v18, v19, v20, a1);
          uint64_t v21 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v12);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v30, v31, v32, v33, v34, v35, v36, v39);
        uint64_t v37 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v22, v23, v24, v25, v26, v27, v28, v39);
      uint64_t v29 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4125;
  }
  return v13;
}

uint64_t sub_1002367B8(uint64_t a1, char a2, __int16 a3, __int16 a4)
{
  int v34 = 262150;
  BYTE1(v34) = a2;
  __int16 v35 = a4;
  __int16 v36 = a3;
  if (sub_100197770(a1))
  {
    char v5 = sub_10025C6D8((char *)&v34, 8uLL, 0);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v5, 0);
      if (v7)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v8, v9, v10, v11, v12, v13, v14, a1);
          uint64_t v15 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v6);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v24, v25, v26, v27, v28, v29, v30, v33);
        uint64_t v31 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v16, v17, v18, v19, v20, v21, v22, v33);
      uint64_t v23 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4126;
  }
  return v7;
}

uint64_t sub_10023695C(uint64_t a1, char a2, __int16 a3, __int16 a4)
{
  int v34 = 262151;
  BYTE1(v34) = a2;
  __int16 v35 = a3;
  __int16 v36 = a4;
  if (sub_100197770(a1))
  {
    char v5 = sub_10025C6D8((char *)&v34, 8uLL, 0);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = ((uint64_t (*)(void, uint64_t, uint64_t, void *, void))loc_1001DE1A4)(0, 5, a1, v5, 0);
      if (v7)
      {
        if (sub_100058654())
        {
          sub_100056E24((uint64_t)"Could not write the to LE signal channel for handle 0x%x", v8, v9, v10, v11, v12, v13, v14, a1);
          uint64_t v15 = sub_100050B4C(0x42u);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            sub_100744F6C();
          }
        }
      }
      sub_10025C53C(v6);
    }
    else
    {
      if (sub_100058654())
      {
        sub_100056E24((uint64_t)"Unable to allocate buffer for LE Signal transmit.", v24, v25, v26, v27, v28, v29, v30, v33);
        uint64_t v31 = sub_100050B4C(0x42u);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100744F6C();
        }
      }
      return 104;
    }
  }
  else
  {
    if (sub_100058654())
    {
      sub_100056E24((uint64_t)"This command is only available to LE devices.", v16, v17, v18, v19, v20, v21, v22, v33);
      uint64_t v23 = sub_100050B4C(0x42u);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_100744F6C();
      }
    }
    return 4127;
  }
  return v7;
}