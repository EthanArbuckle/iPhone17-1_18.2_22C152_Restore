uint64_t sub_1B0C77698(char *a1, uint64_t *a2, unsigned int a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v13;
  void *v14;
  uint64_t v15;
  _DWORD *v16;
  void *v17;
  void (**v18)(uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  BOOL v34;
  const char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_signpost_id_t v45;
  os_signpost_id_t v46;
  const char *v47;
  char *i;
  void (**v49)(char *);
  int v50;
  char *v51;
  const char *v52;
  void (**v53)(char *);
  unsigned int v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  const char *v73;
  int v74;
  int v75;
  const char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void *v80;
  int v81;
  int v82;
  BOOL v83;
  void *v84;
  char *v85;
  char *__s;
  unsigned int v87;
  uint8_t buf[4];
  unsigned char v89[24];
  uint64_t v90;
  uint64_t vars8;

  v90 = *MEMORY[0x1E4F143B8];
  v85 = 0;
  __s = 0;
  v8 = mach_continuous_time();
  if (a2)
  {
    v9 = v8;
    *a2 = 0;
    v10 = sqlite3_initialize();
    if (v10) {
      return v10;
    }
    if ((a3 & 0x8000) == 0 && (_BYTE)word_1EB21C9C4)
    {
      if ((a3 & 0x10000) != 0)
      {
        LODWORD(v10) = 1;
        if ((a3 & 0x40000) == 0)
        {
LABEL_8:
          if (dword_1EB21CB0C) {
            v11 = a3 | 0x20000;
          }
          else {
            v11 = a3;
          }
LABEL_16:
          v13 = v11 & 0xFFF600E7;
          v87 = v11 & 0xFFF600E7;
          if ((a3 & 0xFFFE7FFF) != (v11 & 0xFFF600E7)) {
            sqlite3_log(21, "open flag(s) 0x%08x are reserved for VFS use and do not affect behaviour when passed to sqlite3_open_v2", v13 ^ a3 & 0xFFFE7FFF);
          }
          v14 = (void *)sub_1B0C7FC94(824);
          v15 = (uint64_t)v14;
          if (!v14) {
            goto LABEL_58;
          }
          bzero(v14, 0x338uLL);
          if (v10)
          {
            if (!(_BYTE)word_1EB21C9C4)
            {
              *(void *)(v15 + 24) = 0;
LABEL_28:
              v18 = (void (**)(uint64_t))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v15);
                --qword_1EB220150;
                off_1EB21C9E8(v15);
                v15 = xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0) {
                  goto LABEL_58;
                }
                v18 = (void (**)(uint64_t))&xmmword_1EB21CA50;
              }
              (*v18)(v15);
              v15 = 0;
LABEL_58:
              v10 = 7;
LABEL_59:
              sub_1B0CF369C(v15, 0);
              v15 = 0;
              v33 = 7;
LABEL_60:
              v34 = v15 == 0;
LABEL_61:
              *a2 = v15;
              if (off_1EB21CB48) {
                off_1EB21CB48(qword_1EB21CB50, v15, a1, 0);
              }
              if (!v10) {
                sub_1B0D5F78C(v15, 0, __s);
              }
              if (v9)
              {
                if (v34)
                {
                  switch(v10)
                  {
                    case 0x204:
                      v35 = "abort due to ROLLBACK";
                      break;
                    case 0x65:
                      v35 = "no more rows available";
                      break;
                    case 0x64:
                      v35 = "another row available";
                      break;
                    default:
                      if (v33 > 0x1C || ((0x1410004uLL >> v33) & 1) != 0) {
                        v35 = "unknown error";
                      }
                      else {
                        v35 = off_1E5FF0368[v33];
                      }
                      break;
                  }
                }
                else
                {
                  v35 = sqlite3_errmsg((sqlite3 *)v15);
                }
                if (qword_1EB2202F8 != -1) {
                  dispatch_once(&qword_1EB2202F8, &unk_1F09A5008);
                }
                v44 = qword_1EB2202F0;
                if (v34) {
                  v45 = os_signpost_id_generate((os_log_t)qword_1EB2202F0);
                }
                else {
                  v45 = os_signpost_id_make_with_pointer((os_log_t)qword_1EB2202F0, (const void *)v15);
                }
                v46 = v45;
                if (v45 - 1 <= 0xFFFFFFFFFFFFFFFDLL)
                {
                  if (os_signpost_enabled(v44))
                  {
                    v47 = "(null)";
                    if (a1) {
                      v47 = a1;
                    }
                    *(_DWORD *)buf = 134218242;
                    *(void *)v89 = v9;
                    *(_WORD *)&v89[8] = 2080;
                    *(void *)&v89[10] = v47;
                    _os_signpost_emit_with_name_impl(&dword_1B0C76000, v44, OS_SIGNPOST_INTERVAL_BEGIN, v46, "open", "startTime=%{signpost.description:begin_time}llu path=%s", buf, 0x16u);
                  }
                  if (os_signpost_enabled(v44))
                  {
                    *(_DWORD *)buf = 67240706;
                    *(_DWORD *)v89 = v10;
                    *(_WORD *)&v89[4] = 2050;
                    *(void *)&v89[6] = v15;
                    *(_WORD *)&v89[14] = 2082;
                    *(void *)&v89[16] = v35;
                    _os_signpost_emit_with_name_impl(&dword_1B0C76000, v44, OS_SIGNPOST_INTERVAL_END, v46, "open", "rc=%{public}d db=%{public}p errMsg=%{public}s", buf, 0x1Cu);
                  }
                }
              }
              if (!__s) {
                return v10;
              }
              for (i = __s - 4; i[3] || i[2] || i[1] || *i; --i)
                ;
              v49 = (void (**)(char *))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(i);
                --qword_1EB220150;
                off_1EB21C9E8(i);
                i = (char *)xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0) {
                  return v10;
                }
                v49 = (void (**)(char *))&xmmword_1EB21CA50;
              }
              (*v49)(i);
              return v10;
            }
          }
          else if ((dword_1EB21CB84 & 8) == 0 || !(_BYTE)word_1EB21C9C4)
          {
            v17 = (void *)(v15 + 24);
            v16 = *(_DWORD **)(v15 + 24);
            if (!v16) {
              goto LABEL_36;
            }
            goto LABEL_35;
          }
          v16 = (_DWORD *)qword_1EB21CA30(1);
          *(void *)(v15 + 24) = v16;
          v17 = (void *)(v15 + 24);
          if (!v16) {
            goto LABEL_28;
          }
          if (!v10 && (char *)qword_1EB21CA30 == (char *)sub_1B0D05658) {
            *v16 = -1;
          }
LABEL_35:
          xmmword_1EB21CA40(v16);
LABEL_36:
          *(_OWORD *)(v15 + 168) = xmmword_1B0DE2018;
          *(_OWORD *)(v15 + 152) = unk_1B0DE2008;
          if ((v11 & 0x2000000) != 0) {
            v19 = -1;
          }
          else {
            v19 = 255;
          }
          *(_DWORD *)(v15 + 88) = v19;
          *(_DWORD *)(v15 + 40) = 2;
          *(unsigned char *)(v15 + 113) = 109;
          *(void *)(v15 + 32) = v15 + 696;
          *(_DWORD *)(v15 + 432) = 1;
          *(_WORD *)(v15 + 436) = 0;
          *(_OWORD *)(v15 + 136) = xmmword_1B0DE1FF8;
          *(_DWORD *)(v15 + 180) = 0;
          *(unsigned char *)(v15 + 101) = 1;
          *(unsigned char *)(v15 + 106) = -1;
          *(void *)(v15 + 64) = qword_1EB21CAE8;
          *(_DWORD *)(v15 + 116) = 0;
          *(void *)(v15 + 200) = off_1E9B51F20;
          v20 = *(void *)(v15 + 48) | 0xE44484F0;
          *(void *)(v15 + 48) = v20;
          if ((dword_1EB21CB84 & 0x180) != 0)
          {
            if ((dword_1EB21CB84 & 0x80) != 0) {
              v20 &= ~0x400000uLL;
            }
            *(void *)(v15 + 48) = v20 | (dword_1EB21CB84 << 20) & 0x10000000;
          }
          v23 = getprogname();
          if (a1
            && (strstr(a1, "/Library/AddressBook/AddressBook.sqlitedb")
             || strstr(a1, "/Library/AddressBook/AddressBookImages.sqlitedb"))
            || v23
            && (!strncmp(v23, "ContactsCoreSpotlightExtension", 0x1EuLL)
             || !strncmp(v23, "routined", 8uLL)
             || !strncmp(v23, "FavoritesTodayWidget", 0x14uLL)))
          {
            *(void *)(v15 + 48) |= 0x800uLL;
          }
          *(void *)(v15 + 656) = 0;
          *(_OWORD *)(v15 + 640) = 0u;
          *(void *)(v15 + 568) = 0;
          *(_OWORD *)(v15 + 576) = 0u;
          sub_1B0C792E4(v15, "BINARY", 1u, 0, (uint64_t)sub_1B0CB63A4, 0, v21, v22);
          sub_1B0C792E4(v15, "BINARY", 3u, 0, (uint64_t)sub_1B0CB63A4, 0, v24, v25);
          sub_1B0C792E4(v15, "BINARY", 2u, 0, (uint64_t)sub_1B0CB63A4, 0, v26, v27);
          sub_1B0C792E4(v15, "NOCASE", 1u, 0, (uint64_t)sub_1B0CC9C74, 0, v28, v29);
          sub_1B0C792E4(v15, "RTRIM", 1u, 0, (uint64_t)sub_1B0D78F00, 0, v30, v31);
          if (*(unsigned char *)(v15 + 103)) {
            goto LABEL_52;
          }
          *(_DWORD *)(v15 + 76) = v13;
          if (((1 << (v11 & 7)) & 0x46) != 0)
          {
            v36 = sub_1B0D5EED4(a4, a1, &v87, (uint64_t *)v15, (const char **)&__s, &v85);
          }
          else
          {
            v85 = sqlite3_mprintf("flags must include SQLITE_OPEN_READONLY or SQLITE_OPEN_READWRITE");
            v36 = sub_1B0CE1978(188911);
          }
          v50 = v36;
          if (v36)
          {
            if (v36 == 7) {
              sub_1B0CEB0A4(v15, v37, v38, v39, v40, v41, v42, v43);
            }
            v51 = v85;
            if (v85) {
              v52 = "%s";
            }
            else {
              v52 = 0;
            }
            sub_1B0CE79F4(v15, v50, v52, v39, v40, v41, v42, v43, (char)v85);
            if (v51)
            {
              v53 = (void (**)(char *))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v51);
                --qword_1EB220150;
                off_1EB21C9E8(v51);
                v51 = (char *)xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0) {
                  goto LABEL_52;
                }
                v53 = (void (**)(char *))&xmmword_1EB21CA50;
              }
              (*v53)(v51);
            }
LABEL_52:
            if (*v17) {
              xmmword_1EB21CA50(*v17);
            }
            v32 = *(unsigned __int8 *)(v15 + 113);
            if (v32 == 109 || v32 == 118 || v32 == 186)
            {
              if (*(unsigned char *)(v15 + 103)) {
                goto LABEL_58;
              }
              v10 = (*(_DWORD *)(v15 + 88) & *(_DWORD *)(v15 + 80));
            }
            else
            {
              sqlite3_log(21, "API call with %s database connection pointer", "invalid");
              v10 = sub_1B0CE1978(188008);
            }
            v33 = v10;
            if (v10 == 7) {
              goto LABEL_59;
            }
            if (v10)
            {
              *(unsigned char *)(v15 + 113) = -70;
              goto LABEL_60;
            }
            if (qword_1EB220348 != -1) {
              dispatch_once(&qword_1EB220348, &unk_1F09A5EE0);
            }
            if (dword_1E9B52274 == 2)
            {
              v72 = *(unsigned __int8 *)(v15 + 113);
              if (v72 == 186) {
                goto LABEL_153;
              }
              if (v72 != 118)
              {
                if (v72 != 109)
                {
LABEL_154:
                  v73 = "invalid";
                  goto LABEL_155;
                }
LABEL_153:
                v73 = "unopened";
LABEL_155:
                sqlite3_log(21, "API call with %s database connection pointer", v73);
                sub_1B0CE1978(187543);
                goto LABEL_156;
              }
              v77 = *v17;
              if (*v17)
              {
                xmmword_1EB21CA40(v77);
                v77 = *v17;
              }
              v78 = sub_1B0DD471C;
            }
            else
            {
              if (dword_1E9B52274 != 1) {
                goto LABEL_156;
              }
              v65 = *(unsigned __int8 *)(v15 + 113);
              if (v65 == 186) {
                goto LABEL_153;
              }
              if (v65 != 118)
              {
                if (v65 != 109) {
                  goto LABEL_154;
                }
                goto LABEL_153;
              }
              v77 = *v17;
              if (*v17)
              {
                xmmword_1EB21CA40(v77);
                v77 = *v17;
              }
              v78 = _sqlite_auto_profile;
            }
            *(void *)(v15 + 256) = v78;
            *(void *)(v15 + 264) = v15;
            *(unsigned char *)(v15 + 110) = *(unsigned char *)(v15 + 110) & 0xF | 0x80;
            if (v77) {
              xmmword_1EB21CA50(v77);
            }
LABEL_156:
            if (dword_1E9B52278 == 2)
            {
              v75 = *(unsigned __int8 *)(v15 + 113);
              if (v75 == 186) {
                goto LABEL_165;
              }
              if (v75 != 118)
              {
                if (v75 != 109)
                {
LABEL_166:
                  v76 = "invalid";
                  goto LABEL_167;
                }
LABEL_165:
                v76 = "unopened";
LABEL_167:
                sqlite3_log(21, "API call with %s database connection pointer", v76);
                sub_1B0CE1978(187488);
                goto LABEL_168;
              }
              if (*v17)
              {
                xmmword_1EB21CA40(*v17);
                v79 = *(void *)(v15 + 24);
                *(unsigned char *)(v15 + 110) = 64;
                v80 = sub_1B0DD4824;
LABEL_181:
                *(void *)(v15 + 240) = v80;
                *(void *)(v15 + 248) = v15;
                if (v79) {
                  xmmword_1EB21CA50(v79);
                }
                goto LABEL_168;
              }
              v34 = 0;
              v10 = 0;
              v33 = 0;
              *(unsigned char *)(v15 + 110) = 64;
              v84 = sub_1B0DD4824;
            }
            else
            {
              if (dword_1E9B52278 != 1)
              {
LABEL_168:
                v34 = 0;
                v10 = 0;
                v33 = 0;
                goto LABEL_61;
              }
              v74 = *(unsigned __int8 *)(v15 + 113);
              if (v74 == 186) {
                goto LABEL_165;
              }
              if (v74 != 118)
              {
                if (v74 != 109) {
                  goto LABEL_166;
                }
                goto LABEL_165;
              }
              if (*v17)
              {
                xmmword_1EB21CA40(*v17);
                v79 = *(void *)(v15 + 24);
                *(unsigned char *)(v15 + 110) = 64;
                v80 = _sqlite_auto_trace;
                goto LABEL_181;
              }
              v34 = 0;
              v10 = 0;
              v33 = 0;
              *(unsigned char *)(v15 + 110) = 64;
              v84 = _sqlite_auto_trace;
            }
            *(void *)(v15 + 240) = v84;
            *(void *)(v15 + 248) = v15;
            goto LABEL_61;
          }
          v54 = v87;
          if ((v87 & 2) != 0 && geteuid() == 248)
          {
            sqlite3_log(1, "user 'setup'(248) opening database '%s' with SQLITE_OPEN_READWRITE", a1);
            v55 = os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT);
            if (v55) {
              sub_1B0DE01EC(v55, v56, v57, v58, v59, v60, v61, v62);
            }
          }
          v63 = sub_1B0C79F48(*(void *)v15, __s, v15, (uint64_t *)(*(void *)(v15 + 32) + 8), 0, v54 | 0x100);
          if (v63)
          {
            if (v63 == 3082) {
              v64 = 7;
            }
            else {
              v64 = v63;
            }
            *(_DWORD *)(v15 + 80) = v64;
            sub_1B0D0E714(v15, v64);
            goto LABEL_52;
          }
          sub_1B0C7D3A8(*(void *)(*(void *)(v15 + 32) + 8));
          v66 = sub_1B0C7D3CC(v15, *(void *)(*(void *)(v15 + 32) + 8));
          v67 = *(void *)(v15 + 32);
          *(void *)(v67 + 24) = v66;
          if (!*(unsigned char *)(v15 + 103))
          {
            sub_1B0D223C0(v15, *(unsigned __int8 *)(v66 + 113));
            v67 = *(void *)(v15 + 32);
          }
          v68 = *(void *)(v67 + 8);
          if (*(unsigned char *)(v68 + 17))
          {
            v69 = *(_DWORD *)(v68 + 20) - 1;
            *(_DWORD *)(v68 + 20) = v69;
            if (!v69) {
              sub_1B0D12558(v68);
            }
          }
          v70 = sub_1B0C7D3CC(v15, 0);
          v71 = *(void *)(v15 + 32);
          *(void *)(v71 + 56) = v70;
          *(void *)v71 = "main";
          *(unsigned char *)(v71 + 16) = 3;
          *(void *)(v71 + 32) = "temp";
          *(unsigned char *)(v71 + 48) = 1;
          *(unsigned char *)(v15 + 113) = 118;
          if (*(unsigned char *)(v15 + 103)) {
            goto LABEL_52;
          }
          *(_DWORD *)(v15 + 80) = 0;
          if (*(void *)(v15 + 416)) {
            sub_1B0D0E714(v15, 0);
          }
          else {
            *(_DWORD *)(v15 + 84) = -1;
          }
          sub_1B0D78F94(v15);
          v81 = sqlite3_errcode((sqlite3 *)v15);
          if (v81) {
            goto LABEL_195;
          }
          v82 = sub_1B0D7903C((unsigned __int8 *)v15);
          v83 = v82 == 0;
          if (v82) {
            goto LABEL_191;
          }
          v82 = sub_1B0D7940C(v15);
          v83 = v82 == 0;
          if (v82) {
            goto LABEL_191;
          }
          v82 = sub_1B0D79808(v15);
          v83 = v82 == 0;
          if (v82
            || (v82 = sub_1B0D799E4(v15), v83 = v82 == 0, v82)
            || (v82 = sub_1B0D79AA0(), v83 = v82 == 0, v82)
            || (v82 = sub_1B0D79ABC(v15), v83 = v82 == 0, v82))
          {
LABEL_191:
            v81 = v82;
            if (!v83) {
              goto LABEL_194;
            }
          }
          else
          {
            v81 = sub_1B0D79BE4(v15);
            if (v81) {
              goto LABEL_194;
            }
          }
          if (!*(unsigned char *)(v15 + 103))
          {
            sub_1B0CE1108((sqlite3 *)v15);
            v81 = sub_1B0DDF210((sqlite3 *)v15);
          }
LABEL_194:
          if (!v81)
          {
LABEL_196:
            sub_1B0CF2EFC(v15, 0, dword_1EB21C9D4, dword_1EB21C9D8);
            sqlite3_wal_autocheckpoint((sqlite3 *)v15, 1000);
            goto LABEL_52;
          }
LABEL_195:
          *(_DWORD *)(v15 + 80) = v81;
          sub_1B0D0E714(v15, v81);
          goto LABEL_196;
        }
LABEL_15:
        v11 = a3 & 0xFFFDFFFF;
        goto LABEL_16;
      }
      LODWORD(v10) = HIBYTE(word_1EB21C9C4);
    }
    if ((a3 & 0x40000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }

  return sub_1B0CE1978(188651);
}

int sqlite3_initialize(void)
{
  if (!qword_1EB21CB14)
  {
    uint64_t v1 = os_unfair_recursive_lock_lock_with_options();
    int v0 = 0;
    if (qword_1EB21CB14) {
      goto LABEL_69;
    }
    if (!qword_1EB21CA30)
    {
      v2 = sub_1B0D05648;
      BOOL v3 = word_1EB21C9C4 == 0;
      if (!(_BYTE)word_1EB21C9C4) {
        v2 = sub_1B0D05BE4;
      }
      xmmword_1EB21CA20 = (uint64_t (*)(void))v2;
      v4 = sub_1B0D05650;
      if (!(_BYTE)word_1EB21C9C4) {
        v4 = sub_1B0D05BEC;
      }
      *(&xmmword_1EB21CA20 + 1) = (uint64_t (*)(void))v4;
      v5 = (uint64_t (*)(void))sub_1B0D05784;
      if (!(_BYTE)word_1EB21C9C4) {
        v5 = nullsub_4;
      }
      off_1EB21CA38 = v5;
      v6 = sub_1B0D05928;
      if (!(_BYTE)word_1EB21C9C4) {
        v6 = (uint64_t (*)(uint64_t))nullsub_5;
      }
      xmmword_1EB21CA40 = v6;
      v7 = sub_1B0D059C8;
      if (!(_BYTE)word_1EB21C9C4) {
        v7 = (uint64_t (*)(void))sub_1B0D05C04;
      }
      *(&xmmword_1EB21CA40 + 1) = v7;
      v8 = sub_1B0D05A04;
      if (!(_BYTE)word_1EB21C9C4) {
        v8 = (void (*)(uint64_t))nullsub_6;
      }
      qword_1EB21CA60 = 0;
      *(_OWORD *)&xmmword_1EB21CA50 = (unint64_t)v8;
      __dmb(0xBu);
      v9 = (uint64_t (*)(void))sub_1B0D05658;
      if (v3) {
        v9 = (uint64_t (*)(void))sub_1B0D05BF4;
      }
      qword_1EB21CA30 = v9;
    }
    int v0 = xmmword_1EB21CA20(v1);
    __dmb(0xBu);
    if (v0) {
      goto LABEL_69;
    }
    if ((_BYTE)word_1EB21C9C4)
    {
      uint64_t v10 = qword_1EB21CA30(2);
      uint64_t v11 = v10;
      if (v10)
      {
        xmmword_1EB21CA40(v10);
        char v12 = 0;
LABEL_26:
        dword_1EB21CB1C = 1;
        if (!dword_1EB21CB20)
        {
          if (!qword_1EB21C9E0) {
            sqlite3_config(4, &off_1F09A5808);
          }
          if ((_BYTE)word_1EB21C9C4) {
            uint64_t v14 = qword_1EB21CA30(3);
          }
          else {
            uint64_t v14 = 0;
          }
          *(void *)&xmmword_1EB2201B0 = v14;
          if (!qword_1EB21CAF8 || dword_1EB21CB00 < 512 || dword_1EB21CB04 <= 0)
          {
            qword_1EB21CAF8 = 0;
            dword_1EB21CB00 = 0;
          }
          int v16 = off_1EB21CA08(qword_1EB21CA18);
          if (v16)
          {
            int v0 = v16;
            int v13 = 0;
            xmmword_1EB2201B0 = 0u;
            *(_OWORD *)&qword_1EB2201C0 = 0u;
            goto LABEL_44;
          }
        }
        dword_1EB21CB20 = 1;
        if (!qword_1EB21CB30)
        {
          if ((_BYTE)word_1EB21C9C4)
          {
            uint64_t v15 = qword_1EB21CA30(1);
            qword_1EB21CB30 = v15;
            if ((_BYTE)word_1EB21C9C4 && !v15)
            {
              int v13 = 0;
              int v0 = 7;
              goto LABEL_44;
            }
          }
          else
          {
            qword_1EB21CB30 = 0;
          }
        }
        int v0 = 0;
        ++dword_1EB21CB28;
        int v13 = 1;
LABEL_44:
        if ((v12 & 1) == 0) {
          xmmword_1EB21CA50(v11);
        }
        if (v13)
        {
          if (qword_1EB21CB30) {
            xmmword_1EB21CA40(qword_1EB21CB30);
          }
          if (qword_1EB21CB14)
          {
            int v0 = 0;
          }
          else
          {
            HIDWORD(qword_1EB21CB14) = 1;
            sub_1B0D62188();
            sub_1B0DDF658();
            qword_1EB2202C0 = 0;
            xmmword_1EB2202A0 = 0u;
            unk_1EB2202B0 = 0u;
            xmmword_1EB220280 = 0u;
            unk_1EB220290 = 0u;
            xmmword_1EB220260 = 0u;
            unk_1EB220270 = 0u;
            xmmword_1EB220240 = 0u;
            unk_1EB220250 = 0u;
            xmmword_1EB220220 = 0u;
            unk_1EB220230 = 0u;
            xmmword_1EB220210 = 0u;
            sub_1B0CF1D60();
            if (dword_1EB21CB24 || (int v0 = sub_1B0CF2248()) == 0)
            {
              dword_1EB21CB24 = 1;
              int v0 = sub_1B0CF22D0();
              if (!v0)
              {
                int v0 = sub_1B0CF239C();
                if (!v0)
                {
                  sub_1B0CF2524((void *)qword_1EB21CAF8, dword_1EB21CB00, dword_1EB21CB04);
                  __dmb(0xBu);
                  LODWORD(qword_1EB21CB14) = 1;
                }
              }
            }
            HIDWORD(qword_1EB21CB14) = 0;
          }
          if (qword_1EB21CB30) {
            xmmword_1EB21CA50(qword_1EB21CB30);
          }
          if ((v12 & 1) == 0) {
            xmmword_1EB21CA40(v11);
          }
          BOOL v17 = __OFSUB__(dword_1EB21CB28--, 1);
          if ((dword_1EB21CB28 < 0) ^ v17 | (dword_1EB21CB28 == 0))
          {
            if (qword_1EB21CB30) {
              off_1EB21CA38();
            }
            qword_1EB21CB30 = 0;
          }
          if ((v12 & 1) == 0) {
            xmmword_1EB21CA50(v11);
          }
        }
LABEL_69:
        os_unfair_recursive_lock_unlock();
        return v0;
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
    char v12 = 1;
    goto LABEL_26;
  }
  return 0;
}

int sqlite3_config(int a1, ...)
{
  va_start(va, a1);
  uint64_t v27 = va_arg(va, void);
  unint64_t v28 = va_arg(va, void);
  uint64_t v29 = va_arg(va, void);
  if (qword_1EB21CB14 && (a1 > 0x3F || ((1 << a1) & 0x1010000) == 0))
  {
    return sub_1B0CE1978(185595);
  }
  else
  {
    int v1 = a1 - 1;
    int result = 0;
    switch(v1)
    {
      case 0:
        sub_1B0CE1978(185610);
        goto LABEL_6;
      case 1:
        int result = 0;
        word_1EB21C9C4 = 1;
        return result;
      case 2:
        int result = 0;
        word_1EB21C9C4 = 257;
        return result;
      case 3:
        int result = 0;
        long long v3 = *(_OWORD *)v27;
        long long v4 = *(_OWORD *)(v27 + 16);
        long long v5 = *(_OWORD *)(v27 + 32);
        long long v6 = *(_OWORD *)(v27 + 48);
        v7 = &qword_1EB21C9E0;
        goto LABEL_16;
      case 4:
        if (!qword_1EB21C9E0) {
          sqlite3_config(4, &off_1F09A5808);
        }
        int result = 0;
        v7 = (_OWORD *)v27;
        long long v3 = *(_OWORD *)&qword_1EB21C9E0;
        long long v4 = *(_OWORD *)&off_1EB21C9F0;
        long long v5 = *(_OWORD *)&unk_1EB21CA00;
        long long v6 = *(_OWORD *)&off_1EB21CA10;
LABEL_16:
        v7[2] = v5;
        v7[3] = v6;
        _OWORD *v7 = v3;
        v7[1] = v4;
        break;
      case 6:
        int result = 0;
        qword_1EB21CAF8 = v27;
        dword_1EB21CB00 = v28;
        dword_1EB21CB04 = v29;
        break;
      case 8:
        int result = 0;
        dword_1EB21C9C0 = v27;
        break;
      case 9:
        int result = 0;
        xmmword_1EB21CA20 = *(_OWORD *)v27;
        long long v8 = *(_OWORD *)(v27 + 16);
        long long v9 = *(_OWORD *)(v27 + 32);
        long long v10 = *(_OWORD *)(v27 + 48);
        qword_1EB21CA60 = *(void *)(v27 + 64);
        *(_OWORD *)&xmmword_1EB21CA40 = v9;
        *(_OWORD *)&xmmword_1EB21CA50 = v10;
        *(_OWORD *)&qword_1EB21CA30 = v8;
        break;
      case 10:
        int result = 0;
        *(_OWORD *)uint64_t v27 = xmmword_1EB21CA20;
        long long v11 = *(_OWORD *)&qword_1EB21CA30;
        long long v12 = *(_OWORD *)&xmmword_1EB21CA40;
        long long v13 = *(_OWORD *)&xmmword_1EB21CA50;
        *(void *)(v27 + 64) = qword_1EB21CA60;
        *(_OWORD *)(v27 + 32) = v12;
        *(_OWORD *)(v27 + 48) = v13;
        *(_OWORD *)(v27 + 16) = v11;
        break;
      case 12:
        int result = 0;
        dword_1EB21C9D4 = v27;
        dword_1EB21C9D8 = v28;
        break;
      case 13:
        return result;
      case 15:
        int result = 0;
        off_1EB21CB38 = (_UNKNOWN *)v27;
        qword_1EB21CB40 = v28;
        break;
      case 16:
        int result = 0;
        byte_1EB21C9C6 = v27;
        break;
      case 17:
        int result = 0;
        long long v14 = *(_OWORD *)v27;
        long long v15 = *(_OWORD *)(v27 + 32);
        xmmword_1EB21CA78 = *(_OWORD *)(v27 + 16);
        xmmword_1EB21CA88 = v15;
        xmmword_1EB21CA68 = v14;
        long long v16 = *(_OWORD *)(v27 + 48);
        long long v17 = *(_OWORD *)(v27 + 64);
        long long v18 = *(_OWORD *)(v27 + 80);
        off_1EB21CAC8 = *(_UNKNOWN **)(v27 + 96);
        *(_OWORD *)&xmmword_1EB21CAA8 = v17;
        xmmword_1EB21CAB8 = v18;
        xmmword_1EB21CA98 = v16;
        break;
      case 18:
        if (!(void)xmmword_1EB21CA78) {
          sub_1B0CF27C0();
        }
        int result = 0;
        long long v19 = xmmword_1EB21CA68;
        long long v20 = xmmword_1EB21CA88;
        *(_OWORD *)(v27 + 16) = xmmword_1EB21CA78;
        *(_OWORD *)(v27 + 32) = v20;
        *(_OWORD *)uint64_t v27 = v19;
        long long v21 = xmmword_1EB21CA98;
        long long v22 = *(_OWORD *)&xmmword_1EB21CAA8;
        long long v23 = xmmword_1EB21CAB8;
        *(void *)(v27 + 96) = off_1EB21CAC8;
        *(_OWORD *)(v27 + 64) = v22;
        *(_OWORD *)(v27 + 80) = v23;
        *(_OWORD *)(v27 + 48) = v21;
        break;
      case 19:
        int result = 0;
        byte_1EB21C9C7 = v27;
        break;
      case 20:
        int result = 0;
        off_1EB21CB48 = (_UNKNOWN *)v27;
        qword_1EB21CB50 = v28;
        break;
      case 21:
        int result = 0;
        unint64_t v24 = v28;
        if (v28 >= 0x1400000) {
          unint64_t v24 = 20971520;
        }
        unint64_t v25 = v27 & ~(v27 >> 63);
        if (v25 >= v24) {
          unint64_t v25 = v24;
        }
        qword_1EB21CAE8 = v25;
        qword_1EB21CAF0 = v24;
        break;
      case 23:
        int result = 0;
        *(_DWORD *)uint64_t v27 = 272;
        break;
      case 24:
        int result = 0;
        dword_1EB21CB10 = v27;
        break;
      case 25:
        int result = 0;
        dword_1EB21C9DC = v27;
        break;
      case 26:
        int result = 0;
        byte_1EB21C9C8 = v27;
        break;
      case 28:
        int result = 0;
        qword_1EB21CB58 = v27;
        break;
      default:
LABEL_6:
        int result = 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1B0C78DE0()
{
  if ((byte_1EB220340 & 1) == 0)
  {
    int v0 = getenv("SQLITE_MALLOC_ZONE");
    if (!v0) {
      goto LABEL_7;
    }
    int v1 = v0;
    if (!strcmp(v0, "none")) {
      goto LABEL_14;
    }
    if (!strcmp(v1, "default"))
    {
      qword_1E9B52268 = (uint64_t)malloc_default_zone();
      goto LABEL_14;
    }
    if (!strcmp(v1, "custom")) {
      goto LABEL_10;
    }
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "Invalid parameter to environment variable SQLITE_MALLOC_ZONE: \"%s\". Supported values are \"default\" and \"custom\"\n", v1);
    if ((byte_1EB220340 & 1) == 0)
    {
LABEL_7:
      v2 = getprogname();
      if (v2 && !strncmp("homed", v2, 5uLL))
      {
        zone = malloc_create_zone(0x1000uLL, 0);
        qword_1E9B52268 = (uint64_t)zone;
        long long v4 = "Sqlite_Heap_homed";
        goto LABEL_13;
      }
      int v7 = 0;
      size_t v6 = 4;
      sysctlbyname("hw.ncpu", &v7, &v6, 0, 0);
      if (v7 <= 1)
      {
LABEL_10:
        zone = malloc_create_zone(0x1000uLL, 0);
        qword_1E9B52268 = (uint64_t)zone;
        long long v4 = "Sqlite_Heap";
LABEL_13:
        malloc_set_zone_name(zone, v4);
      }
LABEL_14:
      byte_1EB220340 = 1;
    }
  }
  return 0;
}

void *sub_1B0C78F30(int a1)
{
  v2 = (malloc_zone_t *)qword_1E9B52268;
  if (!qword_1E9B52268) {
    v2 = malloc_default_zone();
  }
  long long v3 = malloc_type_zone_malloc(v2, a1, 0xC10BE86uLL);
  if (!v3) {
    sqlite3_log(7, "failed to allocate %u bytes of memory", a1);
  }
  return v3;
}

uint64_t sub_1B0C78F98()
{
  return 0;
}

void *__cdecl sqlite3_malloc(int a1)
{
  int v2 = sqlite3_initialize();
  if (a1 < 1 || v2) {
    return 0;
  }

  return (void *)sub_1B0C7FC94(a1);
}

void sqlite3_free(void *a1)
{
  if (!a1) {
    return;
  }
  int v1 = a1;
  int v2 = (long long *)&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40();
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  int v1 = (void *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v2 = &xmmword_1EB21CA50;
LABEL_7:
    long long v3 = *(void (**)(void *))v2;
    v3(v1);
  }
}

void sub_1B0C790BC(void *ptr)
{
  int v2 = (malloc_zone_t *)qword_1E9B52268;
  if (!qword_1E9B52268) {
    int v2 = malloc_default_zone();
  }

  malloc_zone_free(v2, ptr);
}

int sqlite3_vfs_register(sqlite3_vfs *a1, int makeDflt)
{
  int result = sqlite3_initialize();
  if (result) {
    return result;
  }
  if (a1)
  {
    if ((_BYTE)word_1EB21C9C4)
    {
      uint64_t v5 = qword_1EB21CA30(2);
      uint64_t v6 = v5;
      if (v5)
      {
        xmmword_1EB21CA40(v5);
        char v7 = 0;
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    char v7 = 1;
LABEL_11:
    p_pNext = &qword_1EB2201A8;
    long long v9 = (sqlite3_vfs *)qword_1EB2201A8;
    if ((sqlite3_vfs *)qword_1EB2201A8 != a1)
    {
      if (!qword_1EB2201A8)
      {
LABEL_25:
        a1->pNext = v9;
        uint64_t *p_pNext = (uint64_t)a1;
        if ((v7 & 1) == 0) {
          xmmword_1EB21CA50(v6);
        }
        return 0;
      }
      long long v10 = (sqlite3_vfs *)qword_1EB2201A8;
      do
      {
        long long v11 = v10;
        long long v10 = v10->pNext;
        if (v10) {
          BOOL v12 = v10 == a1;
        }
        else {
          BOOL v12 = 1;
        }
      }
      while (!v12);
      if (v10 != a1)
      {
LABEL_22:
        p_pNext = &qword_1EB2201A8;
        if (!makeDflt && v9)
        {
          p_pNext = (uint64_t *)&v9->pNext;
          long long v9 = v9->pNext;
        }
        goto LABEL_25;
      }
      p_pNext = (uint64_t *)&v11->pNext;
    }
    uint64_t *p_pNext = (uint64_t)a1->pNext;
    long long v9 = (sqlite3_vfs *)qword_1EB2201A8;
    goto LABEL_22;
  }

  return sub_1B0CE1978(26694);
}

sqlite3_vfs *__cdecl sqlite3_vfs_find(const char *zVfsName)
{
  if (sqlite3_initialize()) {
    return 0;
  }
  if ((_BYTE)word_1EB21C9C4)
  {
    uint64_t v3 = qword_1EB21CA30(2);
    uint64_t v4 = v3;
    if (v3)
    {
      xmmword_1EB21CA40(v3);
      char v5 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  char v5 = 1;
LABEL_8:
  int v2 = (sqlite3_vfs *)qword_1EB2201A8;
  if (zVfsName && qword_1EB2201A8)
  {
    do
    {
      if (!strcmp(zVfsName, v2->zName)) {
        break;
      }
      int v2 = v2->pNext;
    }
    while (v2);
  }
  if ((v5 & 1) == 0) {
    xmmword_1EB21CA50(v4);
  }
  return v2;
}

uint64_t sub_1B0C792E4(uint64_t a1, char *a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 == 8 || a3 == 4) {
    unsigned int v9 = 2;
  }
  else {
    unsigned int v9 = a3;
  }
  if (v9 - 4 > 0xFFFFFFFC)
  {
    char v14 = a3;
    if (a2)
    {
      uint64_t v17 = *(void *)(a1 + 656);
      if (v17)
      {
        int v18 = *a2;
        if (*a2)
        {
          unsigned int v19 = 0;
          long long v20 = (unsigned __int8 *)(a2 + 1);
          do
          {
            unsigned int v19 = -1640531535 * (v19 + byte_1B0DE1758[v18]);
            int v21 = *v20++;
            int v18 = v21;
          }
          while (v21);
        }
        else
        {
          unsigned int v19 = 0;
        }
        unint64_t v28 = (_DWORD *)(v17 + 16 * (v19 % *(_DWORD *)(a1 + 640)));
        long long v23 = (uint64_t *)(v28 + 2);
        int v24 = *v28;
        if (v24)
        {
          while (1)
          {
LABEL_28:
            long long v23 = (uint64_t *)*v23;
            uint64_t v29 = (unsigned char *)v23[3];
            for (i = a2; ; ++i)
            {
              uint64_t v31 = *v29;
              uint64_t v32 = *i;
              if (v31 != v32) {
                break;
              }
              if (!*v29) {
                goto LABEL_21;
              }
LABEL_30:
              ++v29;
            }
            if (byte_1B0DE1758[v31] == byte_1B0DE1758[v32]) {
              goto LABEL_30;
            }
            if (!--v24)
            {
              long long v23 = &qword_1E9B52220;
              goto LABEL_21;
            }
          }
        }
      }
      else
      {
        long long v23 = (uint64_t *)(a1 + 648);
        int v24 = *(_DWORD *)(a1 + 644);
        if (v24) {
          goto LABEL_28;
        }
      }
      long long v23 = &qword_1E9B52220;
LABEL_21:
      uint64_t v25 = v23[2];
      if (!v25) {
        goto LABEL_69;
      }
      uint64_t v26 = v25 + 40 * v9;
      uint64_t v22 = v26 - 40;
      if (v26 == 40) {
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v22 = *(void *)(a1 + 16);
      if (!v22) {
        goto LABEL_69;
      }
    }
    if (*(void *)(v22 + 24))
    {
      if (*(_DWORD *)(a1 + 208))
      {
        uint64_t v27 = 5;
        sub_1B0CE79F4(a1, 5, "unable to delete/modify collation sequence due to active statements", a4, a5, a6, a7, a8, v52);
        return v27;
      }
      for (uint64_t j = *(void *)(a1 + 8); j; uint64_t j = *(void *)(j + 16))
        *(_WORD *)(j + 268) = *(_WORD *)(j + 268) & 0xFFFC | 1;
      int v34 = *(unsigned __int8 *)(v22 + 8);
      if (v9 == (v34 & 0xFFFFFFF7))
      {
        uint64_t v35 = *(void *)(a1 + 656);
        if (v35)
        {
          int v36 = *a2;
          if (*a2)
          {
            unsigned int v37 = 0;
            v38 = (unsigned __int8 *)(a2 + 1);
            do
            {
              unsigned int v37 = -1640531535 * (v37 + byte_1B0DE1758[v36]);
              int v39 = *v38++;
              int v36 = v39;
            }
            while (v39);
          }
          else
          {
            unsigned int v37 = 0;
          }
          v41 = (_DWORD *)(v35 + 16 * (v37 % *(_DWORD *)(a1 + 640)));
          v40 = (uint64_t *)(v41 + 2);
        }
        else
        {
          v40 = (uint64_t *)(a1 + 648);
          v41 = (_DWORD *)(a1 + 644);
        }
        int v42 = *v41;
        if (v42)
        {
          while (1)
          {
            v40 = (uint64_t *)*v40;
            v43 = (unsigned char *)v40[3];
            for (k = a2; ; ++k)
            {
              uint64_t v45 = *v43;
              uint64_t v46 = *k;
              if (v45 != v46) {
                break;
              }
              if (!*v43) {
                goto LABEL_57;
              }
LABEL_50:
              ++v43;
            }
            if (byte_1B0DE1758[v45] == byte_1B0DE1758[v46]) {
              goto LABEL_50;
            }
            if (!--v42)
            {
              v40 = &qword_1E9B52220;
              goto LABEL_57;
            }
          }
        }
        v40 = &qword_1E9B52220;
LABEL_57:
        uint64_t v47 = v40[2];
        if (*(unsigned __int8 *)(v47 + 8) == v34)
        {
          v48 = *(void (**)(void))(v47 + 32);
          if (v48)
          {
            v48(*(void *)(v47 + 16));
            int v34 = *(unsigned __int8 *)(v22 + 8);
          }
          *(void *)(v47 + 24) = 0;
        }
        if (*(unsigned __int8 *)(v47 + 48) == v34)
        {
          v49 = *(void (**)(void))(v47 + 72);
          if (v49)
          {
            v49(*(void *)(v47 + 56));
            int v34 = *(unsigned __int8 *)(v22 + 8);
          }
          *(void *)(v47 + 64) = 0;
        }
        if (*(unsigned __int8 *)(v47 + 88) == v34)
        {
          v50 = *(void (**)(void))(v47 + 112);
          if (v50) {
            v50(*(void *)(v47 + 96));
          }
          *(void *)(v47 + 104) = 0;
        }
      }
    }
LABEL_69:
    v51 = sub_1B0D224B0(a1, v9, a2, 1);
    if (!v51) {
      return 7;
    }
    v51[2] = a4;
    v51[3] = a5;
    v51[4] = a6;
    *((unsigned char *)v51 + 8) = v9 | v14 & 8;
    *(_DWORD *)(a1 + 80) = 0;
    if (*(void *)(a1 + 416))
    {
      sub_1B0D0E714(a1, 0);
      return 0;
    }
    else
    {
      uint64_t v27 = 0;
      *(_DWORD *)(a1 + 84) = -1;
    }
    return v27;
  }

  return sub_1B0CE1978(188065);
}

void *sub_1B0C79680(uint64_t a1, unint64_t a2)
{
  if (!a1)
  {
    uint64_t v3 = (void *)sub_1B0C7FC94(a2);
    if (!v3) {
      return v3;
    }
    goto LABEL_3;
  }
  uint64_t v3 = (void *)sub_1B0D05DC0(a1, a2);
  if (v3) {
LABEL_3:
  }
    bzero(v3, a2);
  return v3;
}

uint64_t sub_1B0C796D8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    unsigned int v11 = 0;
    BOOL v12 = (uint64_t *)(a1 + 8);
    int v13 = *(_DWORD *)(a1 + 4);
    if (v13) {
      goto LABEL_35;
    }
LABEL_7:
    BOOL v12 = &qword_1E9B52220;
    goto LABEL_8;
  }
  int v7 = *a2;
  if (*a2)
  {
    unsigned int v8 = 0;
    unsigned int v9 = a2 + 1;
    do
    {
      unsigned int v8 = -1640531535 * (v8 + byte_1B0DE1758[v7]);
      int v10 = *v9++;
      int v7 = v10;
    }
    while (v10);
  }
  else
  {
    unsigned int v8 = 0;
  }
  unsigned int v11 = v8 % *(_DWORD *)a1;
  uint64_t v27 = (_DWORD *)(v6 + 16 * v11);
  BOOL v12 = (uint64_t *)(v27 + 2);
  int v13 = *v27;
  if (!v13) {
    goto LABEL_7;
  }
  do
  {
LABEL_35:
    BOOL v12 = (uint64_t *)*v12;
    unint64_t v28 = (unsigned char *)v12[3];
    for (i = a2; ; ++i)
    {
      uint64_t v30 = *v28;
      uint64_t v31 = *i;
      if (v30 != v31) {
        break;
      }
      if (!*v28) {
        goto LABEL_8;
      }
LABEL_37:
      ++v28;
    }
    if (byte_1B0DE1758[v30] == byte_1B0DE1758[v31]) {
      goto LABEL_37;
    }
    --v13;
  }
  while (v13);
  BOOL v12 = &qword_1E9B52220;
LABEL_8:
  uint64_t v14 = v12[2];
  if (!v14)
  {
    if (!a3) {
      return 0;
    }
    uint64_t v15 = sub_1B0C7FC94(32);
    if (!v15) {
      return a3;
    }
    long long v16 = (void *)v15;
    *(void *)(v15 + 16) = a3;
    *(void *)(v15 + 24) = a2;
    unsigned int v17 = *(_DWORD *)(a1 + 4) + 1;
    *(_DWORD *)(a1 + 4) = v17;
    if (v17 < 0xA || v17 <= 2 * *(_DWORD *)a1) {
      goto LABEL_84;
    }
    unsigned int v18 = 2 * v17;
    int v19 = v18 >= 0x40 ? 64 : v18;
    if (v19 == *(_DWORD *)a1) {
      goto LABEL_84;
    }
    if (off_1E9B52208) {
      off_1E9B52208(v15);
    }
    uint64_t v20 = sub_1B0C7FC94((16 * v19));
    int v21 = (char *)v20;
    if (off_1E9B52210) {
      off_1E9B52210(v20);
    }
    if (!v21) {
      goto LABEL_84;
    }
    uint64_t v22 = *(void *)(a1 + 16);
    if (v22)
    {
      long long v23 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v22);
        --qword_1EB220150;
        off_1EB21C9E8(v22);
        uint64_t v22 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_31;
        }
        long long v23 = &xmmword_1EB21CA50;
      }
      (*v23)(v22);
    }
LABEL_31:
    *(void *)(a1 + 16) = v21;
    unsigned int v24 = (int)off_1EB21C9F8(v21) >> 4;
    *(_DWORD *)a1 = v24;
    bzero(v21, 16 * v24);
    uint64_t v25 = (uint64_t *)(a1 + 8);
    uint64_t v26 = *(uint64_t **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
    if (v26)
    {
      do
      {
        v40 = (unsigned char *)v26[3];
        int v41 = *v40;
        if (*v40)
        {
          unsigned int v42 = 0;
          v43 = v40 + 1;
          do
          {
            unsigned int v42 = -1640531535 * (v42 + byte_1B0DE1758[v41]);
            int v44 = *v43++;
            int v41 = v44;
          }
          while (v44);
        }
        else
        {
          unsigned int v42 = 0;
        }
        uint64_t v45 = v42 % v24;
        uint64_t v46 = (uint64_t *)*v26;
        uint64_t v47 = &v21[16 * v45];
        if (*(_DWORD *)v47)
        {
          v48 = &v21[16 * v45];
          uint64_t v49 = *((void *)v48 + 1);
          ++*(_DWORD *)v47;
          *((void *)v48 + 1) = v26;
          if (v49)
          {
            *uint64_t v26 = v49;
            uint64_t v38 = *(void *)(v49 + 8);
            unsigned int v37 = (uint64_t **)(v49 + 8);
            v26[1] = v38;
            int v39 = (uint64_t **)*v37;
            if (!*v37) {
              int v39 = (uint64_t **)(a1 + 8);
            }
            *int v39 = v26;
            goto LABEL_62;
          }
        }
        else
        {
          *(_DWORD *)uint64_t v47 = 1;
          *(void *)&v21[16 * v45 + 8] = v26;
        }
        uint64_t v50 = *v25;
        *uint64_t v26 = *v25;
        if (v50) {
          *(void *)(v50 + 8) = v26;
        }
        v26[1] = 0;
        unsigned int v37 = (uint64_t **)(a1 + 8);
LABEL_62:
        *unsigned int v37 = v26;
        uint64_t v26 = v46;
      }
      while (v46);
    }
    int v51 = *a2;
    if (*a2)
    {
      unsigned int v52 = 0;
      v53 = a2 + 1;
      do
      {
        unsigned int v52 = -1640531535 * (v52 + byte_1B0DE1758[v51]);
        int v54 = *v53++;
        int v51 = v54;
      }
      while (v54);
    }
    else
    {
      unsigned int v52 = 0;
    }
    unsigned int v11 = v52 % *(_DWORD *)a1;
LABEL_84:
    uint64_t v55 = *(void *)(a1 + 16);
    if (v55)
    {
      v56 = (_DWORD *)(v55 + 16 * v11);
      if (*v56)
      {
        uint64_t v57 = v55 + 16 * v11;
        uint64_t v58 = *(void *)(v57 + 8);
        ++*v56;
        *(void *)(v57 + 8) = v16;
        if (v58)
        {
          *long long v16 = v58;
          uint64_t v60 = *(void *)(v58 + 8);
          v59 = (void **)(v58 + 8);
          v16[1] = v60;
          v61 = *v59;
          if (!*v59) {
            v61 = (void *)(a1 + 8);
          }
          void *v61 = v16;
          v62 = v59;
LABEL_94:
          uint64_t v14 = 0;
          void *v62 = v16;
          return v14;
        }
      }
      else
      {
        _DWORD *v56 = 1;
        *(void *)(v55 + 16 * v11 + 8) = v16;
      }
    }
    uint64_t v64 = *(void *)(a1 + 8);
    v62 = (void *)(a1 + 8);
    uint64_t v63 = v64;
    *long long v16 = v64;
    if (v64) {
      *(void *)(v63 + 8) = v16;
    }
    v16[1] = 0;
    goto LABEL_94;
  }
  if (a3)
  {
    v12[2] = a3;
    v12[3] = (uint64_t)a2;
    return v14;
  }
  uint64_t v32 = *v12;
  v33 = (uint64_t *)v12[1];
  if (v33)
  {
    uint64_t *v33 = v32;
    uint64_t v32 = *v12;
    if (*v12) {
      goto LABEL_45;
    }
  }
  else
  {
    *(void *)(a1 + 8) = v32;
    if (v32) {
LABEL_45:
    }
      *(void *)(v32 + 8) = v33;
  }
  if (v6)
  {
    uint64_t v34 = v6 + 16 * v11;
    if (*(uint64_t **)(v34 + 8) == v12) {
      *(void *)(v34 + 8) = v32;
    }
    --*(_DWORD *)v34;
  }
  uint64_t v35 = (void (**)(uint64_t *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v12);
    --qword_1EB220150;
    off_1EB21C9E8(v12);
    BOOL v12 = (uint64_t *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v35 = (void (**)(uint64_t *))&xmmword_1EB21CA50;
      goto LABEL_55;
    }
  }
  else
  {
LABEL_55:
    (*v35)(v12);
  }
  int v36 = *(_DWORD *)(a1 + 4) - 1;
  *(_DWORD *)(a1 + 4) = v36;
  if (!v36) {
    sub_1B0D2226C(a1);
  }
  return v14;
}

uint64_t sub_1B0C79BBC(uint64_t a1, char *__s, uint64_t a3, unsigned int a4, uint64_t (*a5)(uint64_t result))
{
  if (!__s)
  {
    if ((*(_WORD *)(a1 + 20) & 0x9000) != 0)
    {
      sub_1B0D18138((int *)a1);
      return 0;
    }
    else
    {
      uint64_t result = 0;
      *(_WORD *)(a1 + 20) = 1;
    }
    return result;
  }
  unsigned int v7 = a4;
  uint64_t v10 = *(void *)(a1 + 24);
  if (v10)
  {
    uint64_t v11 = *(int *)(v10 + 136);
    BOOL v12 = a4 == 1;
    BOOL v13 = a4 > 1;
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v11 = 2147483645;
    BOOL v12 = a4 == 1;
    BOOL v13 = a4 > 1;
    if ((a3 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (v13) {
        int v14 = a4;
      }
      else {
        int v14 = 1;
      }
      if (a4) {
        __int16 v15 = 2;
      }
      else {
        __int16 v15 = 16;
      }
      unsigned int v7 = v14;
      int64_t v16 = a3;
      if (a3 > v11) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  if (v12)
  {
    int64_t v16 = strlen(__s);
  }
  else
  {
    int64_t v16 = 0;
    if ((v11 & 0x8000000000000000) == 0)
    {
      do
      {
        if (!(__s[v16 + 1] | __s[v16])) {
          break;
        }
        v16 += 2;
      }
      while (v16 <= v11);
    }
  }
  __int16 v15 = 514;
  if (v16 > v11)
  {
LABEL_11:
    if ((unint64_t)a5 + 1 >= 2)
    {
      if (a5 == sub_1B0CF5398) {
        sub_1B0D05C10((void *)v10, __s);
      }
      else {
        a5((uint64_t)__s);
      }
    }
    if ((*(_WORD *)(a1 + 20) & 0x9000) != 0)
    {
      sub_1B0D18138((int *)a1);
      uint64_t v28 = *(void *)(a1 + 24);
      if (v28) {
        goto LABEL_64;
      }
    }
    else
    {
      *(_WORD *)(a1 + 20) = 1;
      uint64_t v28 = *(void *)(a1 + 24);
      if (v28)
      {
LABEL_64:
        uint64_t v29 = *(void *)(v28 + 344);
        uint64_t result = 18;
        if (v29)
        {
          *(_DWORD *)(v29 + 24) = 18;
          ++*(_DWORD *)(v29 + 48);
        }
        return result;
      }
    }
    return 18;
  }
LABEL_25:
  if (a5 == (uint64_t (*)(uint64_t))-1)
  {
    uint64_t v19 = 1;
    if (v7 != 1) {
      uint64_t v19 = 2;
    }
    if (a3 >= 0) {
      uint64_t v19 = 0;
    }
    size_t v20 = v19 + v16;
    if (v19 + v16 <= 32) {
      signed int v21 = 32;
    }
    else {
      signed int v21 = v19 + v16;
    }
    if (*(_DWORD *)(a1 + 32) >= v21)
    {
      uint64_t v22 = *(void **)(a1 + 40);
      *(void *)(a1 + 8) = v22;
      *(_WORD *)(a1 + 20) &= 0x2Du;
    }
    else
    {
      if (sub_1B0CA0CF0(a1, v21, 0)) {
        return 7;
      }
      uint64_t v22 = *(void **)(a1 + 8);
    }
    memcpy(v22, __s, v20);
  }
  else
  {
    if ((*(_WORD *)(a1 + 20) & 0x9000) != 0 || *(_DWORD *)(a1 + 32)) {
      sub_1B0D180E4(a1);
    }
    *(void *)(a1 + 8) = __s;
    if (a5 == sub_1B0CF5398)
    {
      *(void *)(a1 + 40) = __s;
      uint64_t v23 = *(void *)(a1 + 24);
      if (v23 && *(void *)(v23 + 520) > (unint64_t)__s)
      {
        if (*(void *)(v23 + 496) <= (unint64_t)__s)
        {
          *(_DWORD *)(a1 + 32) = 128;
          goto LABEL_51;
        }
        if (*(void *)(v23 + 504) <= (unint64_t)__s)
        {
          *(_DWORD *)(a1 + 32) = *(unsigned __int16 *)(v23 + 438);
          goto LABEL_51;
        }
      }
      *(_DWORD *)(a1 + 32) = off_1EB21C9F8(__s);
    }
    else
    {
      *(void *)(a1 + 48) = a5;
      *(unsigned char *)(a1 + 56) = 0;
      if (a5) {
        __int16 v18 = 4096;
      }
      else {
        __int16 v18 = 0x2000;
      }
      v15 |= v18;
    }
  }
LABEL_51:
  uint64_t result = 0;
  *(_DWORD *)(a1 + 16) = v16 & 0x7FFFFFFF;
  *(_WORD *)(a1 + 20) = v15;
  *(unsigned char *)(a1 + 22) = v7;
  if (v7 >= 2 && (v16 & 0x7FFFFFFF) >= 2)
  {
    unsigned int v24 = *(unsigned __int8 **)(a1 + 8);
    int v25 = *v24;
    int v26 = v24[1];
    if (v25 == 255 && v26 == 254)
    {
      char v27 = 2;
      goto LABEL_59;
    }
    uint64_t result = 0;
    if (v25 == 254 && v26 == 255)
    {
      char v27 = 3;
LABEL_59:
      if (!sub_1B0CEA388((int *)a1))
      {
        uint64_t v30 = *(int *)(a1 + 16);
        *(_DWORD *)(a1 + 16) = v30 - 2;
        memmove(*(void **)(a1 + 8), (const void *)(*(void *)(a1 + 8) + 2), v30 - 2);
        uint64_t result = 0;
        *(unsigned char *)(*(void *)(a1 + 8) + *(int *)(a1 + 16)) = 0;
        *(unsigned char *)(*(int *)(a1 + 16) + *(void *)(a1 + 8) + 1) = 0;
        *(_WORD *)(a1 + 20) |= 0x200u;
        *(unsigned char *)(a1 + 22) = v27;
        return result;
      }
      return 7;
    }
  }
  return result;
}

uint64_t sub_1B0C79F48(uint64_t a1, char *__s1, uint64_t a3, uint64_t *a4, char a5, unsigned int a6)
{
  uint64_t v172 = *MEMORY[0x1E4F143B8];
  if (!__s1) {
    goto LABEL_5;
  }
  int v12 = *__s1;
  BOOL v13 = *__s1 == 0;
  if (!strcmp(__s1, ":memory:")) {
    goto LABEL_8;
  }
  if (v12)
  {
    BOOL v13 = 0;
  }
  else
  {
LABEL_5:
    BOOL v13 = 1;
    if (*(unsigned char *)(a3 + 102) == 2) {
      goto LABEL_8;
    }
  }
  if ((a6 & 0x80) == 0)
  {
    int v14 = 0;
    goto LABEL_9;
  }
LABEL_8:
  a5 |= 2u;
  int v14 = 1;
LABEL_9:
  if (((v14 | v13) & (a6 >> 8)) != 0) {
    unsigned int v15 = a6 & 0xFFFFFCFF | 0x200;
  }
  else {
    unsigned int v15 = a6;
  }
  uint64_t v16 = sub_1B0C7FC94(72);
  if (!v16) {
    return 7;
  }
  uint64_t v17 = v16;
  unsigned int v161 = v15;
  uint64_t v18 = 0;
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(void *)(v16 + 64) = 0;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = 0u;
  *(unsigned char *)(v16 + 16) = 0;
  *(void *)uint64_t v16 = a3;
  *(void *)(v16 + 48) = v16;
  *(_DWORD *)(v16 + 56) = 1;
  if (v13) {
    goto LABEL_14;
  }
  uint64_t v18 = 0;
  char v27 = (v15 & 0x40) != 0 ? 0 : v14;
  if ((v27 & 1) != 0 || (v15 & 0x20000) == 0) {
    goto LABEL_14;
  }
  int v155 = v14;
  char v158 = a5;
  if (__s1) {
    int v28 = strlen(__s1) & 0x3FFFFFFF;
  }
  else {
    int v28 = 0;
  }
  size_t v39 = (v28 + 1);
  uint64_t v40 = (*(_DWORD *)(a1 + 8) + 1);
  if ((int)v40 <= (int)v39) {
    uint64_t v41 = (v28 + 1);
  }
  else {
    uint64_t v41 = v40;
  }
  unsigned int v42 = (unsigned char *)sub_1B0C7FC94(v41);
  *(unsigned char *)(v17 + 17) = 1;
  if (!v42)
  {
    int v44 = (void (**)(uint64_t))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_60:
      (*v44)(v17);
      return 7;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v17);
    --qword_1EB220150;
    off_1EB21C9E8(v17);
    uint64_t v17 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v44 = (void (**)(uint64_t))&xmmword_1EB21CA50;
      goto LABEL_60;
    }
    return 7;
  }
  v43 = v42;
  if (v155)
  {
    memcpy(v42, __s1, v39);
  }
  else
  {
    *unsigned int v42 = 0;
    uint64_t v45 = (*(uint64_t (**)(uint64_t, char *, uint64_t, unsigned char *))(a1 + 64))(a1, __s1, v40, v42);
    if ((v45 | 0x200) != 0x200)
    {
      uint64_t v29 = v45;
      sqlite3_free(v43);
      sqlite3_free((void *)v17);
      return v29;
    }
  }
  uint64_t v152 = a3;
  if ((_BYTE)word_1EB21C9C4)
  {
    uint64_t v46 = qword_1EB21CA30(4);
    uint64_t v18 = v46;
    BOOL v157 = v46 == 0;
    if (v46) {
      xmmword_1EB21CA40(v46);
    }
    if ((_BYTE)word_1EB21C9C4)
    {
      uint64_t v47 = qword_1EB21CA30(2);
      uint64_t v48 = v47;
      if (v47)
      {
        uint64_t v49 = a4;
        xmmword_1EB21CA40(v47);
        char v50 = 0;
        goto LABEL_171;
      }
      uint64_t v49 = a4;
    }
    else
    {
      uint64_t v49 = a4;
      uint64_t v48 = 0;
    }
    char v50 = 1;
  }
  else
  {
    uint64_t v49 = a4;
    uint64_t v48 = 0;
    uint64_t v18 = 0;
    char v50 = 1;
    BOOL v157 = 1;
  }
LABEL_171:
  size_t v20 = (void *)qword_1E9B52200;
  if (!qword_1E9B52200)
  {
LABEL_172:
    a4 = v49;
    if (v50) {
      goto LABEL_174;
    }
    goto LABEL_173;
  }
  while (1)
  {
    v111 = (void *)*v20;
    if (!strcmp((const char *)v43, *(const char **)(*v20 + 216)) && *v111 == a1) {
      break;
    }
    size_t v20 = (void *)v20[14];
    if (!v20) {
      goto LABEL_172;
    }
  }
  uint64_t v112 = *(unsigned int *)(v152 + 40);
  a4 = v49;
  if ((int)v112 < 1)
  {
LABEL_211:
    *(void *)(v17 + 8) = v20;
    ++*((_DWORD *)v20 + 26);
    if (v50)
    {
LABEL_174:
      v110 = (void (**)(void *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        a3 = v152;
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v43);
        --qword_1EB220150;
        off_1EB21C9E8(v43);
        v43 = (void *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0)
        {
LABEL_194:
          LOBYTE(v14) = v155;
          a5 = v158;
          if (v20) {
            goto LABEL_195;
          }
LABEL_14:
          *(void *)&long long v166 = 0;
          uint64_t v19 = sub_1B0C7FC94(152);
          if (!v19)
          {
            uint64_t v29 = 7;
            goto LABEL_244;
          }
          size_t v20 = (void *)v19;
          uint64_t v151 = a3;
          *(void *)(v19 + 144) = 0;
          *(_OWORD *)(v19 + 112) = 0u;
          *(_OWORD *)(v19 + 128) = 0u;
          *(_OWORD *)(v19 + 80) = 0u;
          *(_OWORD *)(v19 + 96) = 0u;
          *(_OWORD *)(v19 + 48) = 0u;
          *(_OWORD *)(v19 + 64) = 0u;
          *(_OWORD *)(v19 + 16) = 0u;
          *(_OWORD *)(v19 + 32) = 0u;
          *(_OWORD *)uint64_t v19 = 0u;
          LODWORD(v164) = 4096;
          if (*(int *)(a1 + 4) <= 80) {
            int v21 = 80;
          }
          else {
            int v21 = *(_DWORD *)(a1 + 4);
          }
          *(void *)uint64_t v19 = 0;
          uint64_t v156 = v18;
          if ((a5 & 2) != 0)
          {
            if (__s1)
            {
              unsigned int v22 = *__s1;
              if (*__s1)
              {
                size_t v23 = strlen(__s1) + 1;
                unsigned int v24 = (char *)sub_1B0C7FC94(v23);
                if (!v24) {
                  goto LABEL_84;
                }
                int v25 = v24;
                char v154 = v14;
                v153 = a4;
                memcpy(v24, __s1, v23);
                v147 = 0;
                __src = 0;
                unsigned int v22 = strlen(v25) & 0x3FFFFFFF;
                int v26 = 1;
                char v149 = 1;
                char v145 = 1;
              }
              else
              {
                char v154 = v14;
                v153 = a4;
                __src = 0;
                char v149 = 0;
                int v25 = 0;
                char v145 = 1;
                v147 = __s1;
                int v26 = 1;
              }
            }
            else
            {
              char v154 = v14;
              v153 = a4;
              v147 = 0;
              __src = 0;
              int v25 = 0;
              unsigned int v22 = 0;
              char v149 = 1;
              char v145 = 1;
              int v26 = 1;
            }
          }
          else if (__s1)
          {
            unsigned int v22 = *__s1;
            if (*__s1)
            {
              uint64_t v30 = *(int *)(a1 + 8) + 1;
              uint64_t v31 = (char *)sub_1B0C7FC94(2 * v30);
              if (!v31) {
                goto LABEL_84;
              }
              int v25 = v31;
              char v159 = a5;
              char v154 = v14;
              v153 = a4;
              *uint64_t v31 = 0;
              unsigned int v32 = (*(uint64_t (**)(uint64_t, char *, uint64_t, char *))(a1 + 64))(a1, __s1, v30, v31);
              if (v32 == 512) {
                uint64_t v29 = ((int)(v161 << 7) >> 31) & 0x60E;
              }
              else {
                uint64_t v29 = v32;
              }
              int v150 = strlen(v25);
              v33 = &__s1[strlen(__s1) & 0x3FFFFFFF];
              int v35 = v33[1];
              uint64_t v34 = v33 + 1;
              LODWORD(v36) = v34;
              if (v35)
              {
                int v36 = v34;
                do
                {
                  unsigned int v37 = &v36[strlen(v36) + 1];
                  int v36 = &v37[strlen(v37) + 1];
                }
                while (*v36);
              }
              if (!v29)
              {
                unsigned int v22 = v150 & 0x3FFFFFFF;
                if ((v150 & 0x3FFFFFFF) + 8 <= *(_DWORD *)(a1 + 8))
                {
                  __src = v34;
                  char v149 = 0;
                  char v145 = 0;
                  int v26 = v36 - v34 + 1;
                  v147 = __s1;
                  a5 = v159;
                  goto LABEL_73;
                }
                uint64_t v29 = sub_1B0D06D2C(68697);
              }
              uint64_t v38 = (void (**)(const char *))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                a4 = v153;
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v25);
                --qword_1EB220150;
                off_1EB21C9E8(v25);
                int v25 = (const char *)xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0)
                {
LABEL_85:
                  uint64_t v18 = v156;
                  uint64_t v62 = *v20;
                  if (!*v20) {
                    goto LABEL_238;
                  }
                  goto LABEL_237;
                }
                uint64_t v38 = (void (**)(const char *))&xmmword_1EB21CA50;
              }
              else
              {
                a4 = v153;
              }
              (*v38)(v25);
              uint64_t v18 = v156;
              uint64_t v62 = *v20;
              if (*v20) {
                goto LABEL_237;
              }
              goto LABEL_238;
            }
            char v154 = v14;
            v153 = a4;
            __src = 0;
            char v149 = 0;
            char v145 = 0;
            int v25 = 0;
            int v26 = 1;
            v147 = __s1;
          }
          else
          {
            char v154 = v14;
            v153 = a4;
            char v145 = 0;
            v147 = 0;
            __src = 0;
            int v25 = 0;
            unsigned int v22 = 0;
            int v26 = 1;
            char v149 = 1;
          }
LABEL_73:
          uint64_t v51 = (v21 + 7) & 0x7FFFFFF8;
          char v160 = a5;
          BOOL v146 = (a5 & 2) == 0;
          size_t v52 = v22;
          size_t v53 = v26;
          unint64_t v54 = 3 * v22 + (2 * v51 + 470) + ((*(int *)(a1 + 4) + 7) & 0xFFFFFFFFFFFFFFF8) + v26;
          uint64_t v55 = (void *)sub_1B0C7FC94(v54);
          if (v55)
          {
            uint64_t v56 = (uint64_t)v55;
            bzero(v55, v54);
            *(void *)(v56 + 336) = v56 + 360;
            *(void *)(v56 + 72) = v56 + 440;
            unint64_t v57 = v56 + 440 + ((*(int *)(a1 + 4) + 7) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(v56 + 80) = v57 + v51;
            *(void *)(v56 + 88) = v57;
            uint64_t v58 = (uint64_t *)(v57 + v51 + v51);
            *uint64_t v58 = v56;
            v59 = (char *)v58 + 12;
            *(void *)(v56 + 216) = v59;
            if (v52)
            {
              memcpy(v59, v25, v52);
              uint64_t v60 = &v59[(v52 + 1)];
              if (__src) {
                memcpy(v60, __src, v53);
              }
              else {
                size_t v53 = 1;
              }
              *(void *)(v56 + 224) = &v60[v53];
              memcpy(&v60[v53], v25, v52);
              uint64_t v64 = &v60[v53 + v52];
              *(void *)uint64_t v64 = 0x6C616E72756F6A2DLL;
              v64 += 9;
              *(void *)(v56 + 352) = v64;
              memcpy(v64, v25, v52);
              *(_DWORD *)&v64[v52] = 1818326829;
              char v63 = v149;
              if (v25)
              {
                v65 = (void (**)(const char *))&off_1EB21C9E8;
                if (!dword_1EB21C9C0)
                {
LABEL_95:
                  (*v65)(v25);
                  goto LABEL_96;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v25);
                --qword_1EB220150;
                off_1EB21C9E8(v25);
                int v25 = (const char *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  v65 = (void (**)(const char *))&xmmword_1EB21CA50;
                  goto LABEL_95;
                }
              }
            }
            else
            {
              *(void *)(v56 + 224) = 0;
              *(void *)(v56 + 352) = 0;
              char v63 = v149;
            }
LABEL_96:
            *(void *)uint64_t v56 = a1;
            *(_DWORD *)(v56 + 180) = v161;
            if ((v63 & 1) != 0 || !*v147)
            {
              int v68 = 0;
              goto LABEL_101;
            }
            unsigned int v163 = 0;
            uint64_t v66 = (*(uint64_t (**)(uint64_t, void, void, void, unsigned int *))(a1 + 40))(a1, *(void *)(v56 + 216), *(void *)(v56 + 72), v161 & 0x1787F7F, &v163);
            unsigned int v67 = v163;
            *(_DWORD *)(v56 + 180) |= v163 & 0x700000;
            int v68 = (v67 >> 7) & 1;
            *(unsigned char *)(v56 + 20) = (v67 & 0x80) != 0;
            if (v66)
            {
              uint64_t v29 = v66;
LABEL_103:
              uint64_t v72 = *(void *)(v56 + 72);
              if (*(void *)v72)
              {
                (*(void (**)(void))(*(void *)v72 + 8))(*(void *)(v56 + 72));
                *(void *)uint64_t v72 = 0;
              }
              sub_1B0D10ED8(*(void *)(v56 + 328));
              v73 = (void (**)(uint64_t))&off_1EB21C9E8;
              uint64_t v18 = v156;
              a4 = v153;
              if (!dword_1EB21C9C0)
              {
LABEL_110:
                (*v73)(v56);
                uint64_t v62 = *v20;
                if (!*v20) {
                  goto LABEL_238;
                }
LABEL_237:
                sub_1B0CC76A0(v62, 0);
                goto LABEL_238;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108 -= (int)off_1EB21C9F8(v56);
              --qword_1EB220150;
              off_1EB21C9E8(v56);
              uint64_t v56 = xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                v73 = (void (**)(uint64_t))&xmmword_1EB21CA50;
                goto LABEL_110;
              }
LABEL_236:
              uint64_t v62 = *v20;
              if (!*v20) {
                goto LABEL_238;
              }
              goto LABEL_237;
            }
            int v71 = v67 & 1;
            uint64_t v86 = **(void **)(v56 + 72);
            if (v86) {
              __int16 v87 = (*(uint64_t (**)(void))(v86 + 96))();
            }
            else {
              __int16 v87 = 0;
            }
            if (v71)
            {
LABEL_225:
              v127 = *(const char **)(v56 + 216);
              v128 = (char *)sqlite3_uri_parameter(v127, "nolock");
              if (v128) {
                BOOL v129 = sub_1B0D5D5D8(v128, 1, 0) != 0;
              }
              else {
                BOOL v129 = 0;
              }
              *(unsigned char *)(v56 + 17) = v129;
              if ((v87 & 0x2000) == 0)
              {
                v130 = (char *)sqlite3_uri_parameter(v127, "immutable");
                if (!v130 || !sub_1B0D5D5D8(v130, 1, 0))
                {
                  char v70 = 0;
                  int v69 = 1;
LABEL_102:
                  uint64_t v29 = sub_1B0C7CE4C(v56, &v164, -1);
                  if (v29) {
                    goto LABEL_103;
                  }
                  int v162 = v68;
                  uint64_t v74 = v164;
                  if ((v160 & 2) != 0) {
                    v75 = 0;
                  }
                  else {
                    v75 = sub_1B0D0F298;
                  }
                  uint64_t v76 = *(void *)(v56 + 336);
                  *(_OWORD *)(v76 + 48) = 0u;
                  *(_OWORD *)(v76 + 64) = 0u;
                  *(_OWORD *)(v76 + 16) = 0u;
                  *(_OWORD *)(v76 + 32) = 0u;
                  *(_OWORD *)uint64_t v76 = 0u;
                  *(unsigned char *)(v76 + 48) = v146;
                  *(unsigned char *)(v76 + 49) = 2;
                  *(void *)(v76 + 56) = v75;
                  *(void *)(v76 + 64) = v56;
                  *(_OWORD *)(v76 + 32) = xmmword_1B0DE14F0;
                  uint64_t v77 = xmmword_1EB21CA88(v74, 216, v146);
                  if (!v77)
                  {
                    uint64_t v29 = 7;
                    goto LABEL_103;
                  }
                  uint64_t v78 = v77;
                  uint64_t v79 = *(unsigned int *)(v76 + 32);
                  if ((v79 & 0x80000000) != 0)
                  {
                    uint64_t v80 = *(int *)(v76 + 44);
                    if (-1024 * (int)v79 / (v80 + *(int *)(v76 + 40)) >= 1000000000) {
                      uint64_t v79 = 1000000000;
                    }
                    else {
                      uint64_t v79 = -1024 * (int)v79 / (v80 + *(int *)(v76 + 40));
                    }
                  }
                  ((void (*)(uint64_t, uint64_t))*(&xmmword_1EB21CA88 + 1))(v77, v79);
                  uint64_t v81 = *(void *)(v76 + 72);
                  if (v81) {
                    (*((void (**)(uint64_t))&xmmword_1EB21CAB8 + 1))(v81);
                  }
                  *(void *)(v76 + 72) = v78;
                  *(_DWORD *)(v76 + 40) = v74;
                  *(unsigned char *)(v56 + 10) = (v160 & 1) == 0;
                  *(_DWORD *)(v56 + 188) = 0x3FFFFFFF;
                  *(unsigned char *)(v56 + 16) = v70;
                  *(unsigned char *)(v56 + 8) = v70;
                  *(unsigned char *)(v56 + 23) = v70;
                  *(unsigned char *)(v56 + 19) = v145;
                  *(unsigned char *)(v56 + 18) = v71;
                  if (v69)
                  {
                    char v82 = 0;
                    char v83 = 10;
                    char v84 = 2;
                    char v85 = 1;
                  }
                  else
                  {
                    char v85 = 0;
                    char v84 = 0;
                    char v83 = 0;
                    char v82 = 1;
                  }
                  uint64_t v18 = v156;
                  a3 = v151;
                  a4 = v153;
                  *(unsigned char *)(v56 + 11) = v82;
                  *(unsigned char *)(v56 + 12) = v85;
                  *(unsigned char *)(v56 + 13) = 0;
                  *(unsigned char *)(v56 + 14) = v84;
                  *(unsigned char *)(v56 + 15) = v83;
                  *(unsigned char *)(v56 + 25) &= ~1u;
                  *(_WORD *)(v56 + 176) = 136;
                  *(void *)(v56 + 208) = 0x8000;
                  if (!v69
                    || ((*(uint64_t (**)(void))(**(void **)(v56 + 72) + 96))(*(void *)(v56 + 72)) & 0x1000) != 0)
                  {
                    int v90 = 512;
                  }
                  else
                  {
                    v88 = *(uint64_t (**)(void))(**(void **)(v56 + 72) + 88);
                    if (v88)
                    {
                      int v89 = v88();
                      if (v89 >= 0x10000) {
                        int v90 = 0x10000;
                      }
                      else {
                        int v90 = v89;
                      }
                      if (v89 < 32) {
                        int v90 = 512;
                      }
                    }
                    else
                    {
                      int v90 = 4096;
                    }
                  }
                  *(_DWORD *)(v56 + 184) = v90;
                  if (v160)
                  {
                    char v91 = 2;
                  }
                  else
                  {
                    if (!(v160 & 2 | v162))
                    {
LABEL_146:
                      *(void *)(v56 + 280) = sub_1B0CDB59C;
                      int v92 = *(_DWORD *)(v56 + 48);
                      v93 = sub_1B0D11088;
                      if (!v92)
                      {
                        if (!*(unsigned char *)(v56 + 27) || (v93 = sub_1B0D11094, *(void *)(v56 + 296))) {
                          v93 = sub_1B0D112F8;
                        }
                      }
                      *(void *)(v56 + 288) = v93;
                      *size_t v20 = v56;
                      uint64_t v94 = *(void *)(v151 + 64);
                      *(void *)(v56 + 160) = v94;
                      uint64_t v95 = **(void **)(v56 + 72);
                      if (v95 && *(int *)v95 >= 3)
                      {
                        uint64_t v164 = v94;
                        *(unsigned char *)(v56 + 27) = v94 > 0;
                        v96 = sub_1B0D11088;
                        if (!v92)
                        {
                          if (v94 < 1 || (v96 = sub_1B0D11094, *(void *)(v56 + 296))) {
                            v96 = sub_1B0D112F8;
                          }
                        }
                        *(void *)(v56 + 288) = v96;
                        (*(void (**)(void))(v95 + 80))();
                        uint64_t v56 = *v20;
                      }
                      int v171 = 0;
                      long long v169 = 0u;
                      long long v170 = 0u;
                      long long v167 = 0u;
                      long long v168 = 0u;
                      long long v165 = 0u;
                      long long v166 = 0u;
                      uint64_t v97 = *(void *)(v56 + 72);
                      if (*(void *)v97)
                      {
                        uint64_t v98 = (*(uint64_t (**)(uint64_t, long long *, uint64_t, void))(*(void *)v97 + 16))(v97, &v165, 100, 0);
                        if (v98 != 522)
                        {
                          uint64_t v29 = v98;
                          if (v98) {
                            goto LABEL_236;
                          }
                        }
                      }
                      *((unsigned char *)v20 + 32) = v160;
                      v20[1] = v151;
                      uint64_t v99 = *v20;
                      uint64_t v100 = *v20;
                      *(void *)(v100 + 232) = sub_1B0D0E8C8;
                      uint64_t v101 = v100 + 232;
                      *(void *)(v99 + 240) = v20;
                      uint64_t v102 = *(void *)(v99 + 72);
                      if (*(void *)v102)
                      {
                        (*(void (**)(void, uint64_t, uint64_t))(*(void *)v102 + 80))(*(void *)(v99 + 72), 15, v101);
                        uint64_t v99 = *v20;
                      }
                      *(void *)(v17 + 8) = v20;
                      v20[2] = 0;
                      v20[3] = 0;
                      __int16 v103 = *(unsigned char *)(v99 + 18) != 0;
                      int v104 = (v166 << 8) | (BYTE1(v166) << 16);
                      *((_DWORD *)v20 + 13) = v104;
                      v105 = (_DWORD *)v20 + 13;
                      __int16 v106 = *((_WORD *)v20 + 20) | v103;
                      *((_WORD *)v20 + 20) = v106 | 8;
                      if ((v104 - 65537) < 0xFFFF01FF || ((v104 - 1) & v104) != 0)
                      {
                        int v107 = 0;
                        _DWORD *v105 = 0;
                        if (__s1) {
                          char v108 = v154;
                        }
                        else {
                          char v108 = 1;
                        }
                        if (v108) {
                          goto LABEL_235;
                        }
                        BOOL v109 = 0;
                        int v107 = 0;
                        *((unsigned char *)v20 + 33) = 0;
                      }
                      else
                      {
                        int v107 = BYTE4(v166);
                        *((_WORD *)v20 + 20) = v106 | 0xA;
                        *((unsigned char *)v20 + 33) = bswap32(DWORD1(v168)) != 0;
                        BOOL v109 = bswap32(v169) != 0;
                      }
                      *((unsigned char *)v20 + 34) = v109;
LABEL_235:
                      uint64_t v29 = sub_1B0C7CE4C(v99, v105, v107);
                      if (v29) {
                        goto LABEL_236;
                      }
                      *((_DWORD *)v20 + 14) = *((_DWORD *)v20 + 13) - v107;
                      *((_DWORD *)v20 + 26) = 1;
                      if (!*(unsigned char *)(v17 + 17))
                      {
LABEL_195:
                        if (*(unsigned char *)(v17 + 17))
                        {
                          uint64_t v115 = *(unsigned int *)(a3 + 40);
                          if ((int)v115 >= 1)
                          {
                            v116 = (uint64_t *)(*(void *)(a3 + 32) + 8);
                            while (1)
                            {
                              uint64_t v117 = *v116;
                              if (*v116)
                              {
                                if (*(unsigned char *)(v117 + 17)) {
                                  break;
                                }
                              }
                              v116 += 4;
                              if (!--v115) {
                                goto LABEL_264;
                              }
                            }
                            do
                            {
                              v118 = (void *)v117;
                              uint64_t v117 = *(void *)(v117 + 40);
                            }
                            while (v117);
                            unint64_t v119 = *(void *)(v17 + 8);
                            if (v119 >= v118[1])
                            {
                              while (1)
                              {
                                v120 = v118;
                                v118 = (void *)v118[4];
                                if (!v118) {
                                  break;
                                }
                                if (v118[1] >= v119)
                                {
                                  v121 = v120 + 4;
                                  *(void *)(v17 + 32) = v118;
                                  *(void *)(v17 + 40) = v120;
                                  v120 = (void *)v17;
                                  goto LABEL_263;
                                }
                              }
                              v121 = v120 + 4;
                              *(void *)(v17 + 32) = 0;
                            }
                            else
                            {
                              v120 = 0;
                              v121 = v118 + 5;
                              *(void *)(v17 + 32) = v118;
                            }
                            v118 = (void *)v17;
LABEL_263:
                            v118[5] = v120;
                            uint64_t *v121 = v17;
                          }
LABEL_264:
                          *a4 = v17;
                          uint64_t v136 = *(void *)(v17 + 8);
                          ++*(_DWORD *)(v17 + 20);
                          if (*(unsigned char *)(v17 + 18))
                          {
                            uint64_t v138 = *(void *)(v136 + 72);
                            v122 = (uint64_t *)(v136 + 72);
                            uint64_t v137 = v138;
                          }
                          else
                          {
                            sub_1B0D12478(v17);
                            uint64_t v139 = *(void *)(v136 + 72);
                            v122 = (uint64_t *)(v136 + 72);
                            uint64_t v137 = v139;
                            if (!*(unsigned char *)(v17 + 17)) {
                              goto LABEL_270;
                            }
                          }
                          int v140 = *(_DWORD *)(v17 + 20) - 1;
                          *(_DWORD *)(v17 + 20) = v140;
                          if (v140)
                          {
LABEL_270:
                            if (v137) {
                              goto LABEL_271;
                            }
                            LODWORD(v164) = 128;
                            sub_1B0D0EA1C(v17, &v164);
                            uint64_t v142 = *(void *)(v17 + 8);
                            if (!*(unsigned char *)(v17 + 17))
                            {
                              *(_DWORD *)(*(void *)(*(void *)v142 + 336) + 36) = 2500;
                              goto LABEL_271;
                            }
                            ++*(_DWORD *)(v17 + 20);
                            if (*(unsigned char *)(v17 + 18))
                            {
                              *(_DWORD *)(*(void *)(*(void *)v142 + 336) + 36) = 2500;
                            }
                            else
                            {
                              sub_1B0D12478(v17);
                              int v143 = *(unsigned __int8 *)(v17 + 17);
                              *(_DWORD *)(*(void *)(*(void *)v142 + 336) + 36) = 2500;
                              if (!v143) {
                                goto LABEL_271;
                              }
                            }
                            int v144 = *(_DWORD *)(v17 + 20) - 1;
                            *(_DWORD *)(v17 + 20) = v144;
                            if (!v144) {
                              sub_1B0D12558(v17);
                            }
LABEL_271:
                            uint64_t v141 = *(void *)(*v20 + 72);
                            if (*(void *)v141) {
                              (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v141 + 80))(v141, 30, v20 + 1);
                            }
                            uint64_t v29 = 0;
                            if (!v18) {
                              return v29;
                            }
LABEL_251:
                            xmmword_1EB21CA50(v18);
                            return v29;
                          }
                          sub_1B0D12558(v17);
                        }
                        else
                        {
                          *a4 = v17;
                          v122 = (uint64_t *)(*(void *)(v17 + 8) + 72);
                        }
                        uint64_t v137 = *v122;
                        goto LABEL_270;
                      }
                      if (!(_BYTE)word_1EB21C9C4)
                      {
LABEL_259:
                        v20[14] = qword_1E9B52200;
                        qword_1E9B52200 = (uint64_t)v20;
                        goto LABEL_195;
                      }
                      uint64_t v134 = qword_1EB21CA30(2);
                      if (!(_BYTE)word_1EB21C9C4 || (uint64_t v135 = qword_1EB21CA30(0), (v20[11] = v135) != 0))
                      {
                        if (v134)
                        {
                          xmmword_1EB21CA40(v134);
                          v20[14] = qword_1E9B52200;
                          qword_1E9B52200 = (uint64_t)v20;
                          xmmword_1EB21CA50(v134);
                          goto LABEL_195;
                        }
                        goto LABEL_259;
                      }
                      uint64_t v29 = 7;
                      uint64_t v62 = *v20;
                      if (*v20) {
                        goto LABEL_237;
                      }
LABEL_238:
                      v131 = &off_1EB21C9E8;
                      if (dword_1EB21C9C0)
                      {
                        if ((void)xmmword_1EB2201B0) {
                          xmmword_1EB21CA40(xmmword_1EB2201B0);
                        }
                        qword_1EB220108 -= (int)off_1EB21C9F8(v20);
                        --qword_1EB220150;
                        off_1EB21C9E8(v20);
                        size_t v20 = (void *)xmmword_1EB2201B0;
                        if (!(void)xmmword_1EB2201B0)
                        {
LABEL_244:
                          v132 = (void (**)(uint64_t))&off_1EB21C9E8;
                          if (dword_1EB21C9C0)
                          {
                            if ((void)xmmword_1EB2201B0) {
                              xmmword_1EB21CA40(xmmword_1EB2201B0);
                            }
                            qword_1EB220108 -= (int)off_1EB21C9F8(v17);
                            --qword_1EB220150;
                            off_1EB21C9E8(v17);
                            uint64_t v17 = xmmword_1EB2201B0;
                            if (!(void)xmmword_1EB2201B0)
                            {
LABEL_250:
                              *a4 = 0;
                              if (!v18) {
                                return v29;
                              }
                              goto LABEL_251;
                            }
                            v132 = (void (**)(uint64_t))&xmmword_1EB21CA50;
                          }
                          (*v132)(v17);
                          goto LABEL_250;
                        }
                        v131 = &xmmword_1EB21CA50;
                      }
                      (*v131)(v20);
                      goto LABEL_244;
                    }
                    char v91 = 4;
                  }
                  *(unsigned char *)(v56 + 9) = v91;
                  goto LABEL_146;
                }
              }
              LOBYTE(v161) = 1;
LABEL_101:
              int v69 = 0;
              *(_WORD *)(v56 + 21) = 1025;
              char v70 = 1;
              *(unsigned char *)(v56 + 17) = 1;
              LOBYTE(v71) = v161 & 1;
              goto LABEL_102;
            }
            if (!*(unsigned char *)(v56 + 16)
              && ((*(uint64_t (**)(void))(**(void **)(v56 + 72) + 96))(*(void *)(v56 + 72)) & 0x1000) == 0)
            {
              v123 = *(uint64_t (**)(void))(**(void **)(v56 + 72) + 88);
              if (!v123)
              {
                int v126 = 4096;
                goto LABEL_224;
              }
              int v124 = v123();
              if (v124 >= 0x10000) {
                unsigned int v125 = 0x10000;
              }
              else {
                unsigned int v125 = v124;
              }
              if (v124 > 31)
              {
                *(_DWORD *)(v56 + 184) = v125;
                if (v125 > 0x1000)
                {
                  if (v125 > 0x2000) {
                    unsigned int v125 = 0x2000;
                  }
                  LODWORD(v164) = v125;
                }
                goto LABEL_225;
              }
            }
            int v126 = 512;
LABEL_224:
            *(_DWORD *)(v56 + 184) = v126;
            goto LABEL_225;
          }
          a4 = v153;
          if (!v25) {
            goto LABEL_84;
          }
          v61 = (void (**)(const char *))&off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108 -= (int)off_1EB21C9F8(v25);
            --qword_1EB220150;
            off_1EB21C9E8(v25);
            int v25 = (const char *)xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              goto LABEL_84;
            }
            v61 = (void (**)(const char *))&xmmword_1EB21CA50;
          }
          (*v61)(v25);
LABEL_84:
          uint64_t v29 = 7;
          goto LABEL_85;
        }
        v110 = (void (**)(void *))&xmmword_1EB21CA50;
      }
      else
      {
        a3 = v152;
      }
      (*v110)(v43);
      goto LABEL_194;
    }
LABEL_173:
    xmmword_1EB21CA50(v48);
    goto LABEL_174;
  }
  uint64_t v113 = v112 + 1;
  while (1)
  {
    uint64_t v114 = *(void *)(*(void *)(v152 + 32) + 32 * (v113 - 2) + 8);
    if (v114)
    {
      if (*(void **)(v114 + 8) == v20) {
        break;
      }
    }
    if ((unint64_t)--v113 <= 1) {
      goto LABEL_211;
    }
  }
  if ((v50 & 1) == 0) {
    xmmword_1EB21CA50(v48);
  }
  if (!v157) {
    xmmword_1EB21CA50(v18);
  }
  sqlite3_free(v43);
  sqlite3_free((void *)v17);
  return 19;
}

uint64_t sub_1B0C7B368(uint64_t a1, const char *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  v12[1] = a4;
  uint64_t v13 = a3;
  v12[0] = 0;
  if (*a2 != 47)
  {
    if (!off_1EC5263D0(v14, 1024))
    {
      uint64_t v9 = sub_1B0D06D2C(49936);
      int v10 = *__error();
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v10, __strerrbuf, 0x4FuLL);
      sqlite3_log(v9, "os_unix.c:%d: (%d) %s(%s) - %s", 49936, v10, "getcwd", a2, __strerrbuf);
      return v9;
    }
    sub_1B0D0D3E0((uint64_t)v12, (uint64_t)v14);
  }
  sub_1B0D0D3E0((uint64_t)v12, (uint64_t)a2);
  int v6 = HIDWORD(v13);
  int v7 = v12[0];
  *(unsigned char *)(a4 + SHIDWORD(v13)) = 0;
  if (v6 >= 2 && v7 == 0) {
    return (HIDWORD(v12[0]) != 0) << 9;
  }
  else {
    return sub_1B0D06D2C(49942);
  }
}

char *sqlite3_snprintf(int a1, char *a2, const char *a3, ...)
{
  va_start(va, a3);
  if (a1 >= 1)
  {
    if (a2 && a3)
    {
      v6[0] = 0;
      v6[1] = a2;
      int v7 = a1;
      uint64_t v8 = 0;
      int v9 = 0;
      sqlite3_str_vappendf((sqlite3_str *)v6, a3, va);
      uint64_t v4 = &a2[HIDWORD(v8)];
LABEL_6:
      *uint64_t v4 = 0;
      return a2;
    }
    sub_1B0CE1978(33008);
    uint64_t v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  return a2;
}

void *sub_1B0C7B544(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1 && (*(unsigned char *)(v1 + *(unsigned int *)(a1 + 24)) = 0, *(_DWORD *)(a1 + 20)) && (*(unsigned char *)(a1 + 29) & 4) == 0) {
    return sub_1B0D06044((uint64_t *)a1);
  }
  else {
    return *(void **)(a1 + 8);
  }
}

uint64_t sub_1B0C7B570()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = v0;
  uint64_t v130 = *MEMORY[0x1E4F143B8];
  int v10 = v3 & 0xFE0FFF00;
  if ((v3 & 4) == 0 || (int v11 = 1, v10 != 2048) && v10 != 0x4000 && v10 != 0x80000) {
    int v11 = 0;
  }
  int v12 = dword_1EB220310;
  if (v12 != getpid())
  {
    dword_1EB220310 = getpid();
    sqlite3_initialize();
  }
  memset(&v120, 0, 512);
  long long v108 = 0u;
  long long v109 = 0u;
  long long v107 = 0u;
  memset(v106, 0, sizeof(v106));
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(void *)(v6 + 176) = 0;
  if (v10 == 256)
  {
    uint64_t v13 = (unsigned int *)sub_1B0D0A1A0((uint64_t)v8, v4);
    if (v13)
    {
      __int16 v103 = v2;
      uint64_t v14 = *v13;
    }
    else
    {
      if (sqlite3_initialize()) {
        return 7;
      }
      uint64_t v13 = (unsigned int *)sub_1B0C7FC94(16);
      if (!v13) {
        return 7;
      }
      __int16 v103 = v2;
      uint64_t v14 = 0xFFFFFFFFLL;
    }
    int v104 = v11;
    *(void *)(v6 + 48) = v13;
    goto LABEL_15;
  }
  __int16 v103 = v2;
  int v104 = v11;
  if (v8)
  {
    uint64_t v14 = 0xFFFFFFFFLL;
LABEL_15:
    unsigned int v15 = (char *)v8;
    goto LABEL_16;
  }
  unsigned int v15 = v119;
  uint64_t v18 = sub_1B0D07DA4(*(_DWORD *)(v9 + 8), v119);
  if (v18) {
    return v18;
  }
  uint64_t v14 = 0xFFFFFFFFLL;
LABEL_16:
  int v16 = strlen(v15);
  int v17 = sqlite3_initialize();
  uint64_t v18 = 7;
  if (v16 < 1) {
    goto LABEL_171;
  }
  if (v17) {
    goto LABEL_171;
  }
  long long v19 = (char *)sub_1B0C7FC94(v16);
  if (!v19) {
    goto LABEL_171;
  }
  uint64_t v20 = v19;
  int v21 = dirname_r(v15, v19);
  if (statfs(v21, &v120) != -1)
  {
    int v100 = v4 & 4;
    int v102 = v4 & 1;
    unsigned int v22 = (uint64_t (**)(char *))&off_1EB21C9E8;
    uint64_t v99 = v9;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v20);
      --qword_1EB220150;
      off_1EB21C9E8(v20);
      uint64_t v20 = (char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0)
      {
LABEL_26:
        char f_flags = v120.f_flags;
        int v24 = v4 & 2;
        unint64_t v25 = v4;
        if (v4 & 2) != 0 && (v120.f_flags)
        {
          int v24 = 0;
          unint64_t v25 = v4 & 0xFFFFFFF9;
          int v100 = 0;
          int v102 = 1;
        }
        if ((v120.f_flags & 0x80) == 0 && (v25 & 0x700000) != 0)
        {
          char v26 = v120.f_flags;
          int v27 = v24;
          sqlite3_log(1, "volume does not support data protection, stripping SQLITE_OPEN_FILEPROTECTION_* flags");
          int v24 = v27;
          char f_flags = v26;
          unint64_t v25 = v25 & 0xFF8FFFFF;
        }
        int v28 = v4 & 8;
        if (v100) {
          int v29 = (2 * (v24 != 0)) | 0x200;
        }
        else {
          int v29 = 2 * (v24 != 0);
        }
        unsigned int v30 = v29 & 0xFFFFF7FF | (((v4 >> 4) & 1) << 11);
        if ((v25 & 0x1000000) != 0) {
          int v31 = 0x20000000;
        }
        else {
          int v31 = 256;
        }
        int v101 = v30 | v31;
        if ((v14 & 0x80000000) == 0)
        {
          if ((f_flags & 0x80) == 0) {
            goto LABEL_73;
          }
          goto LABEL_40;
        }
        uint64_t v36 = ((v25 >> 20) & 7) - 1;
        if (v36 > 6) {
          int v37 = 0;
        }
        else {
          int v37 = dword_1B0DE8C98[v36];
        }
        if (((v28 != 0) & ((f_flags & 0x80) >> 7)) != 0) {
          int v37 = 2;
        }
        int v97 = v37;
        if ((v25 & 0x80800) != 0)
        {
          if (v15)
          {
            char v40 = f_flags;
            int v41 = v24;
            int v42 = strlen(v15);
            int v24 = v41;
            uint64_t v43 = v42 & 0x3FFFFFFF;
            char f_flags = v40;
          }
          else
          {
            uint64_t v43 = 0;
          }
          do
          {
            if (v43 >= 2)
            {
              uint64_t v65 = --v43;
              int v66 = v15[v43];
              if (v66 != 46) {
                continue;
              }
            }
            uint64_t v61 = 0;
            unsigned int v60 = 0;
            unsigned int v59 = 0;
            uint64_t v18 = 0;
            goto LABEL_191;
          }
          while (v66 != 45);
          int v92 = v24;
          char v95 = f_flags;
          __memcpy_chk();
          __strerrbuf[v65] = 0;
          long long v117 = 0u;
          long long v118 = 0u;
          long long v115 = 0u;
          long long v116 = 0u;
          long long v113 = 0u;
          long long v114 = 0u;
          long long v111 = 0u;
          long long v112 = 0u;
          long long v110 = 0u;
          if (off_1EC5263E8(__strerrbuf, &v110))
          {
            uint64_t v61 = 0;
            unsigned int v60 = 0;
            unsigned int v59 = 0;
            uint64_t v18 = 1802;
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v61 = WORD2(v110) & 0x1FF;
            unsigned int v60 = v111;
            unsigned int v59 = DWORD1(v111);
          }
          int v24 = v92;
        }
        else
        {
          if ((v25 & 8) != 0)
          {
            unsigned int v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 384;
            goto LABEL_192;
          }
          if ((v25 & 0x40) == 0)
          {
            unsigned int v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            goto LABEL_192;
          }
          int v80 = v24;
          char v95 = f_flags;
          uint64_t v81 = sqlite3_uri_parameter(v15, "modeof");
          if (!v81)
          {
            unsigned int v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            char f_flags = v95;
            int v24 = v80;
            goto LABEL_192;
          }
          long long v129 = 0u;
          long long v128 = 0u;
          long long v127 = 0u;
          long long v126 = 0u;
          long long v125 = 0u;
          long long v124 = 0u;
          long long v123 = 0u;
          long long v122 = 0u;
          *(_OWORD *)__strerrbuf = 0u;
          if (off_1EC5263E8(v81, __strerrbuf))
          {
            uint64_t v61 = 0;
            unsigned int v60 = 0;
            unsigned int v59 = 0;
            uint64_t v18 = 1802;
          }
          else
          {
            uint64_t v18 = 0;
            uint64_t v61 = *(_WORD *)&__strerrbuf[4] & 0x1FF;
            unsigned int v60 = v122;
            unsigned int v59 = DWORD1(v122);
          }
          int v24 = v80;
        }
        char f_flags = v95;
LABEL_191:
        if (v18) {
          return v18;
        }
LABEL_192:
        unsigned int v89 = v59;
        unsigned int v90 = v60;
        int v82 = v24;
        char v96 = f_flags;
        unsigned int v93 = v61;
        uint64_t v83 = sub_1B0D06D40(v15, v101, v61, v97);
        uint64_t v14 = v83;
        if (v8 || (v83 & 0x80000000) == 0)
        {
          if ((v83 & 0x80000000) == 0) {
            goto LABEL_205;
          }
        }
        else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
        {
          sub_1B0DE010C((uint64_t)v15);
        }
        int v84 = *__error();
        if (v104 && *__error() == 13 && off_1EC5263B8(v15, 0))
        {
          char v85 = 0;
          uint64_t v76 = 1544;
          goto LABEL_221;
        }
        uint64_t v86 = __error();
        uint64_t v76 = 0;
        if (v82 && *v86 != 21)
        {
          v101 &= 0x20000900u;
          uint64_t v87 = sub_1B0D06D40(v15, v101, v93, v97);
          if ((v87 & 0x80000000) == 0)
          {
            uint64_t v14 = v87;
            LODWORD(v25) = v25 & 0xFFFFFFF8 | 1;
            int v102 = 1;
LABEL_205:
            int v28 = v4 & 8;
            if (!off_1EC526400(v14, v106))
            {
              int v88 = WORD2(v106[0]) & 0xF000;
              if (v88 != 0x2000 && v88 != 24576 && v88 != 0x8000)
              {
                uint64_t v18 = sub_1B0D06D2C(49455);
                sub_1B0D072C0(v18, "open", v15, 49455);
                off_1EC5263A0(v14);
                goto LABEL_171;
              }
              *(void *)(v6 + 144) = v107;
            }
            if (v93 && (v25 & 0x80800) != 0) {
              sub_1B0D0B7C8(v14, v90, v89);
            }
            if ((v96 & 0x80) == 0)
            {
LABEL_73:
              int v44 = v28;
              int v98 = v102 | v28;
              if (!(v102 | v28))
              {
                unsigned int v45 = v25 & 0x700000;
                if (*(_DWORD *)(v6 + 124) != (v25 & 0x700000))
                {
                  if (v45)
                  {
                    char v46 = 0;
                    uint64_t v47 = 0;
                    switch(v45 >> 20)
                    {
                      case 1u:
                      case 2u:
                      case 3u:
                      case 6u:
                      case 7u:
                        char v46 = 0;
                        goto LABEL_78;
                      case 4u:
                        char v46 = 1;
LABEL_78:
                        uint64_t v47 = v45 >> 20;
                        break;
                      default:
                        break;
                    }
                    char v91 = v46;
                    uint64_t v94 = v47;
                    int v48 = fcntl(v14, 63);
                    char v49 = v48 < 1 ? v91 : 0;
                    if (v94 != v48 && (v49 & 1) == 0 && fcntl(v14, 64, v94) && *__error() != 1)
                    {
                      *(_DWORD *)(v6 + 124) = v45;
                      sub_1B0D06D2C(49495);
                      char v50 = v103;
                      if (!v103)
                      {
LABEL_89:
                        uint64_t v51 = *(_DWORD **)(v6 + 48);
                        if (v51)
                        {
                          _DWORD *v51 = v14;
                          v51[1] = v25 & 3;
                        }
                        if (v44) {
                          off_1EC526508(v15);
                        }
                        else {
                          *(_DWORD *)(v6 + 120) = v101;
                        }
                        if (*(_DWORD *)v120.f_fstypename == 1936091500)
                        {
                          *(_DWORD *)(v6 + 128) |= 2u;
                          LODWORD(v112) = 0;
                          long long v110 = 0u;
                          long long v111 = 0u;
                          v105[2] = 0;
                          v105[0] = 5;
                          v105[1] = 0x20000;
                          if (fgetattrlist(v14, v105, &v110, 0x24uLL, 0) == -1)
                          {
                            *(_DWORD *)(v6 + 32) = *__error();
                            if (off_1EC5263A0(v14))
                            {
                              uint64_t v62 = *(const char **)(v6 + 56);
                              int v63 = *__error();
                              long long v125 = 0u;
                              long long v124 = 0u;
                              long long v123 = 0u;
                              long long v122 = 0u;
                              *(_OWORD *)__strerrbuf = 0u;
                              strerror_r(v63, __strerrbuf, 0x4FuLL);
                              uint64_t v64 = &byte_1B0DE9952;
                              if (v62) {
                                uint64_t v64 = v62;
                              }
                              sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 49547, v63, "close", v64, __strerrbuf);
                            }
                            return 3338;
                          }
                          if (BYTE4(v111) & 1) == 0 || (BYTE4(v110))
                          {
LABEL_109:
                            if ((v120.f_flags_ext & 2) != 0) {
                              *(_DWORD *)(v6 + 128) |= 2u;
                            }
                            int v54 = 4 * v44;
                            if (v102) {
                              int v54 = (4 * (v44 & 0xF)) | 2;
                            }
                            if (v10 != 256) {
                              v54 |= 0x80u;
                            }
                            if (v104) {
                              v54 |= 8u;
                            }
                            int v55 = v25 & 0x40 | v54;
                            if (v10 == 256) {
                              int v56 = v55 | 4;
                            }
                            else {
                              int v56 = v55;
                            }
                            if (v8 && (v4 & 0xFE0FFF20) == 0x120 && *(void *)(v99 + 40))
                            {
                              unint64_t v57 = getenv("SQLITE_FORCE_PROXY_LOCKING");
                              if (v57)
                              {
                                if (atoi(v57) > 0) {
                                  goto LABEL_125;
                                }
                              }
                              else if ((v120.f_flags & 0x1001) == 0)
                              {
LABEL_125:
                                uint64_t v18 = sub_1B0C7C488(v99, v14, v6, v8, v56);
                                if (!v18)
                                {
                                  uint64_t v58 = *(void *)v6;
                                  uint64_t v18 = sub_1B0D08B00(v6, ":auto:");
                                  if (v18)
                                  {
                                    if (v58) {
                                      (*(void (**)(uint64_t))(v58 + 8))(v6);
                                    }
                                    else {
                                      sub_1B0CD1B0C(v6);
                                    }
                                  }
                                  return v18;
                                }
                                goto LABEL_171;
                              }
                            }
                            if (v15 && !v98 && (~dword_1EB21CB84 & 0x60) == 0) {
                              v56 |= 0x100u;
                            }
                            if (qword_1EB220308 == -1)
                            {
                              if ((v56 & 0x100) != 0) {
                                goto LABEL_153;
                              }
                            }
                            else
                            {
                              dispatch_once(&qword_1EB220308, &unk_1F09A53B8);
                              if ((v56 & 0x100) != 0)
                              {
LABEL_153:
                                uint64_t v67 = v14;
                                for (uint64_t i = 0; i != 26; ++i)
                                {
                                  int v69 = (const char *)qword_1E9B52090[i];
                                  if (!v69) {
                                    break;
                                  }
                                  size_t v70 = strlen((const char *)qword_1E9B52090[i]);
                                  if (v70)
                                  {
                                    size_t v71 = v70;
                                    if (strlen(v8) > v70 && !strncmp(v69, v8, v71))
                                    {
                                      sqlite3_log(28, "Skipping vnode guard based on exemption path %s for file: %s", v69, v8);
                                      v56 &= ~0x100u;
                                      uint64_t v14 = v67;
                                      goto LABEL_162;
                                    }
                                  }
                                }
                                uint64_t v14 = v67;
                                if (!fcntl(v67, 96)) {
                                  v56 &= ~0x100u;
                                }
                              }
                            }
LABEL_162:
                            __int16 v72 = v56 & 0xFEFF;
                            if ((~v56 & 0x102) == 0) {
                              LOWORD(v56) = v56 & 0xFEFF;
                            }
                            if ((v56 & 0x100) != 0)
                            {
                              *(_DWORD *)__strerrbuf = v14;
                              *(_DWORD *)&__strerrbuf[4] = 103;
                              *(void *)&__strerrbuf[8] = qword_1E9B51EF8;
                              if (__mac_syscall() == -1)
                              {
                                if (*__error() != 103)
                                {
                                  int v73 = *__error();
                                  uint64_t v74 = __error();
                                  v75 = strerror(*v74);
                                  sqlite3_log(1, "Failed to set vnode guard on %s (%d): %s", v8, v73, v75);
                                }
                                LOWORD(v56) = v72;
                              }
                            }
                            uint64_t v76 = sub_1B0C7C488(v99, v14, v6, v8, v56);
LABEL_170:
                            uint64_t v18 = v76;
                            if (!v76) {
                              return v18;
                            }
                            goto LABEL_171;
                          }
                        }
                        else if ((*(_DWORD *)v120.f_fstypename != 1868854125 || v120.f_fstypename[4] != 115) {
                               && (*(_DWORD *)v120.f_fstypename != 1634105445 || v120.f_fstypename[4] != 116))
                        }
                        {
                          goto LABEL_109;
                        }
                        *(_DWORD *)(v6 + 128) |= 1u;
                        goto LABEL_109;
                      }
LABEL_88:
                      *char v50 = v25;
                      goto LABEL_89;
                    }
                  }
                  *(_DWORD *)(v6 + 124) = v45;
                }
              }
              char v50 = v103;
              if (!v103) {
                goto LABEL_89;
              }
              goto LABEL_88;
            }
LABEL_40:
            int v32 = fcntl(v14, 63) - 1;
            if (v32 > 6) {
              int v33 = 0;
            }
            else {
              int v33 = dword_1B0DE8C7C[v32];
            }
            *(_DWORD *)(v6 + 124) = v33;
            if ((v25 & 0x700000) != 0) {
              int v33 = 0;
            }
            LODWORD(v25) = v33 | v25;
            goto LABEL_73;
          }
          if (*__error() && *__error() != 2)
          {
            uint64_t v76 = 0;
            int v84 = *__error();
          }
          else
          {
            uint64_t v76 = 0;
          }
        }
        char v85 = 1;
LABEL_221:
        if (*__error() == 1)
        {
          uint64_t v18 = 23;
          sub_1B0D072C0(23, "open", v15, 49438);
        }
        else
        {
          uint64_t v18 = sub_1B0D06D2C(49441);
          sub_1B0D06C64(v18, "open", v15, v84, 49441);
          if ((v85 & 1) == 0) {
            goto LABEL_170;
          }
        }
        goto LABEL_171;
      }
      unsigned int v22 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
    }
    (*v22)(v20);
    goto LABEL_26;
  }
  int v34 = *__error();
  int v35 = "statfs";
  if (v34 == 2)
  {
    uint64_t v18 = sub_1B0D06D2C(49348);
    if (v18 == 14) {
      int v35 = "open";
    }
  }
  else
  {
    uint64_t v18 = 3338;
  }
  long long v125 = 0u;
  long long v124 = 0u;
  long long v123 = 0u;
  long long v122 = 0u;
  *(_OWORD *)__strerrbuf = 0u;
  strerror_r(v34, __strerrbuf, 0x4FuLL);
  uint64_t v38 = &byte_1B0DE9952;
  if (v15) {
    uint64_t v38 = v15;
  }
  sqlite3_log(v18, "os_unix.c:%d: (%d) %s(%s) - %s", 49349, v34, v35, v38, __strerrbuf);
  size_t v39 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v20);
    --qword_1EB220150;
    off_1EB21C9E8(v20);
    uint64_t v20 = (char *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_171;
    }
    size_t v39 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
  }
  (*v39)(v20);
LABEL_171:
  uint64_t v77 = *(void *)(v6 + 48);
  if (!v77) {
    return v18;
  }
  uint64_t v78 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_177:
    (*v78)(v77);
    return v18;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v77);
  --qword_1EB220150;
  off_1EB21C9E8(v77);
  uint64_t v77 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v78 = &xmmword_1EB21CA50;
    goto LABEL_177;
  }
  return v18;
}

uint64_t sub_1B0C7C488(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, __int16 a5)
{
  uint64_t v8 = a2;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  *(_DWORD *)(a3 + 24) = a2;
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 56) = a4;
  *(_WORD *)(a3 + 30) = a5;
  *(void *)(a3 + 96) = qword_1EB21CAE8;
  if ((a5 & 0x40) != 0) {
    int v10 = a4;
  }
  else {
    int v10 = 0;
  }
  int v11 = (char *)sqlite3_uri_parameter(v10, "psow");
  if (v11 && !sub_1B0D5D5D8(v11, 1, 1u))
  {
    __int16 v12 = a5;
  }
  else
  {
    __int16 v12 = a5 | 0x10;
    *(_WORD *)(a3 + 30) = a5 | 0x10;
  }
  if (!strcmp(*(const char **)(a1 + 24), "unix-excl")) {
    *(_WORD *)(a3 + 30) = v12 | 1;
  }
  uint64_t v13 = &unk_1F09A51F0;
  if ((a5 & 0x80) == 0)
  {
    uint64_t v13 = (void *)(**(uint64_t (***)(const char *, uint64_t))(a1 + 32))(a4, a3);
    *(void *)(a3 + 40) = a4;
  }
  if (v13 == &unk_1F09A5028 || v13 == &unk_1F09A5158 || a4 && v13 == &unk_1F09A51F0)
  {
    if (qword_1EB2201D0) {
      xmmword_1EB21CA40(qword_1EB2201D0);
    }
    uint64_t v14 = sub_1B0C7CB94(a3, (uint64_t *)(a3 + 16));
    if (v14)
    {
      if ((v8 & 0x80000000) == 0 && off_1EC5263A0(v8))
      {
        unsigned int v15 = *(const char **)(a3 + 56);
        int v16 = *__error();
        long long v35 = 0u;
        long long v36 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        *(_OWORD *)__strerrbuf = 0u;
        strerror_r(v16, __strerrbuf, 0x4FuLL);
        int v17 = &byte_1B0DE9952;
        if (v15) {
          int v17 = v15;
        }
        sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 48763, v16, "close", v17, __strerrbuf);
      }
      uint64_t v8 = 0xFFFFFFFFLL;
    }
    uint64_t v18 = qword_1EB2201D0;
    if (qword_1EB2201D0) {
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  if (v13 != &unk_1F09A50C0)
  {
    if (v13 != &unk_1F09A5288)
    {
      uint64_t v14 = 0;
      goto LABEL_27;
    }
    int v23 = strlen(a4);
    if (sqlite3_initialize())
    {
      int v24 = 0;
    }
    else
    {
      int v31 = v23 + 6;
      int v24 = (char *)sub_1B0C7FC94(v31);
      if (v24)
      {
        sqlite3_snprintf(v31, v24, "%s.lock", a4);
        uint64_t v14 = 0;
        goto LABEL_66;
      }
    }
    uint64_t v14 = 7;
LABEL_66:
    *(void *)(a3 + 40) = v24;
    goto LABEL_27;
  }
  if (sqlite3_initialize())
  {
    *(void *)(a3 + 40) = 0;
    uint64_t v14 = 7;
    goto LABEL_27;
  }
  uint64_t v25 = sub_1B0C7FC94(16);
  *(void *)(a3 + 40) = v25;
  if (!v25)
  {
    uint64_t v14 = 7;
    goto LABEL_27;
  }
  *(void *)(v25 + 8) = a4;
  *(_DWORD *)uint64_t v25 = 0;
  srandomdev();
  if (qword_1EB2201D0) {
    xmmword_1EB21CA40(qword_1EB2201D0);
  }
  uint64_t v14 = sub_1B0C7CB94(a3, (uint64_t *)(a3 + 16));
  if (v14)
  {
    uint64_t v26 = *(void *)(a3 + 40);
    if (v26)
    {
      int v27 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v26);
        --qword_1EB220150;
        off_1EB21C9E8(v26);
        uint64_t v26 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_56;
        }
        int v27 = &xmmword_1EB21CA50;
      }
      (*v27)(v26);
    }
LABEL_56:
    if ((v8 & 0x80000000) == 0 && off_1EC5263A0(v8))
    {
      int v28 = *(const char **)(a3 + 56);
      int v29 = *__error();
      long long v35 = 0u;
      long long v36 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v29, __strerrbuf, 0x4FuLL);
      unsigned int v30 = &byte_1B0DE9952;
      if (v28) {
        unsigned int v30 = v28;
      }
      sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 48789, v29, "close", v30, __strerrbuf);
    }
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  uint64_t v18 = qword_1EB2201D0;
  if (qword_1EB2201D0) {
LABEL_26:
  }
    xmmword_1EB21CA50(v18);
LABEL_27:
  *(_DWORD *)(a3 + 32) = 0;
  if (a4) {
    sub_1B0D0A2FC(v8, (NSObject **)(a3 + 152), 0);
  }
  if (v14)
  {
    if ((v8 & 0x80000000) == 0 && off_1EC5263A0(v8))
    {
      long long v19 = *(const char **)(a3 + 56);
      int v20 = *__error();
      long long v35 = 0u;
      long long v36 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v20, __strerrbuf, 0x4FuLL);
      int v21 = &byte_1B0DE9952;
      if (v19) {
        int v21 = v19;
      }
      sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 48856, v20, "close", v21, __strerrbuf);
    }
  }
  else
  {
    *(void *)a3 = v13;
    sub_1B0D06914(a3);
  }
  return v14;
}

char *sub_1B0C7C944(const char *a1, uint64_t a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return (char *)&unk_1F09A51F0;
  }
  memset(&v9, 0, 512);
  if (statfs(a1, &v9) == -1) {
    goto LABEL_27;
  }
  if (v9.f_flags) {
    return (char *)&unk_1F09A51F0;
  }
  if (!(*(_DWORD *)v9.f_fstypename ^ 0x73667061 | v9.f_fstypename[4]))
  {
    uint64_t v3 = 0;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
  if (*(_DWORD *)v9.f_fstypename == 7562856)
  {
    uint64_t v3 = 1;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
  if (*(_DWORD *)v9.f_fstypename == 7562869)
  {
    uint64_t v3 = 2;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
  if (*(_DWORD *)v9.f_fstypename == 1718642273 && *(unsigned __int16 *)&v9.f_fstypename[4] == 115)
  {
    uint64_t v3 = 3;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
  if (*(_DWORD *)v9.f_fstypename == 1717726579 && *(unsigned __int16 *)&v9.f_fstypename[4] == 115)
  {
    uint64_t v3 = 4;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
  if (*(_DWORD *)v9.f_fstypename == 7562862)
  {
    uint64_t v3 = 5;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
  if (*(_DWORD *)v9.f_fstypename == 1684170103 && *(_DWORD *)&v9.f_fstypename[3] == 7758180)
  {
    uint64_t v3 = 6;
    return (&off_1E5FEEED0)[2 * v3 + 1];
  }
LABEL_27:
  uint64_t v8 = *(unsigned int *)(a2 + 24);
  if (off_1EC526430(v8, 92) == -1
    && (*__error() != 45 && *__error() != 25 || off_1EC526430(v8, 7) == -1))
  {
    return (char *)&unk_1F09A5288;
  }
  else
  {
    return (char *)&unk_1F09A5028;
  }
}

uint64_t sub_1B0C7CB94(uint64_t a1, uint64_t *a2)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v15 = 0u;
  memset(v14, 0, sizeof(v14));
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (off_1EC526400(v4, v14)) {
    goto LABEL_2;
  }
  if (!(void)v15 && (*(unsigned char *)(a1 + 128) & 1) != 0)
  {
    while (1)
    {
      int v11 = off_1EC526490(v4, "S", 1uLL);
      if ((v11 & 0x80000000) == 0) {
        break;
      }
      if (*__error() != 4) {
        goto LABEL_31;
      }
    }
    if (v11 != 1)
    {
LABEL_31:
      *(_DWORD *)(a1 + 32) = *__error();
      return 778;
    }
    if ((*(unsigned char *)(a1 + 128) & 2) != 0 && fsync(v4))
    {
      *(_DWORD *)(a1 + 32) = *__error();
      return 1034;
    }
    if (off_1EC526400(v4, v14))
    {
LABEL_2:
      *(_DWORD *)(a1 + 32) = *__error();
      return 10;
    }
  }
  *((void *)&v18 + 1) = *((void *)&v14[0] + 1);
  *(void *)&long long v18 = LODWORD(v14[0]);
  uint64_t v6 = qword_1EB220300;
  if (qword_1EB220300)
  {
    while ((void)v18 != *(void *)v6 || *((void *)&v18 + 1) != *(void *)(v6 + 8))
    {
      uint64_t v6 = *(void *)(v6 + 64);
      if (!v6) {
        goto LABEL_11;
      }
    }
    ++*(_DWORD *)(v6 + 48);
    goto LABEL_38;
  }
LABEL_11:
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v8 = (_OWORD *)sub_1B0C7FC94(96);
  if (!v8) {
    return 7;
  }
  uint64_t v6 = (uint64_t)v8;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  *uint64_t v8 = v18;
  v8[1] = 0u;
  if ((_BYTE)word_1EB21C9C4)
  {
    uint64_t v9 = sqlite3_initialize();
    if (v9)
    {
      *(void *)(v6 + 16) = 0;
LABEL_18:
      uint64_t v10 = (void (**)(uint64_t))&off_1EB21C9E8;
      if (!dword_1EB21C9C0)
      {
LABEL_23:
        (*v10)(v6);
        return 7;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v6);
      --qword_1EB220150;
      off_1EB21C9E8(v6);
      uint64_t v6 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v10 = (void (**)(uint64_t))&xmmword_1EB21CA50;
        goto LABEL_23;
      }
      return 7;
    }
    uint64_t v12 = qword_1EB21CA30(v9);
    *(void *)(v6 + 16) = v12;
    if (!v12) {
      goto LABEL_18;
    }
  }
  *(_DWORD *)(v6 + 88) = -1;
  *(_DWORD *)(v6 + 48) = 1;
  uint64_t v13 = qword_1EB220300;
  *(void *)(v6 + 64) = qword_1EB220300;
  *(void *)(v6 + 72) = 0;
  if (v13) {
    *(void *)(v13 + 72) = v6;
  }
  qword_1EB220300 = v6;
LABEL_38:
  uint64_t result = 0;
  *a2 = v6;
  return result;
}

uint64_t sub_1B0C7CE18(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112)) {
    return *(unsigned int *)(a1 + 112);
  }
  if ((*(_WORD *)(a1 + 30) & 0x10) != 0) {
    *(_DWORD *)(a1 + 116) |= 0x1000u;
  }
  *(_DWORD *)(a1 + 112) = 4096;
  return 4096;
}

uint64_t sub_1B0C7CE4C(uint64_t a1, _DWORD *a2, int a3)
{
  uint64_t v6 = *a2;
  if (*(unsigned char *)(a1 + 19) && *(_DWORD *)(a1 + 32)) {
    goto LABEL_25;
  }
  BOOL v7 = *(void *)(*(void *)(a1 + 336) + 24) || v6 == 0;
  if (v7 || v6 == *(_DWORD *)(a1 + 200)) {
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 21))
  {
    uint64_t v8 = **(void **)(a1 + 72);
    if (v8)
    {
      uint64_t v9 = (*(uint64_t (**)(void))(v8 + 48))();
      if (v9)
      {
        uint64_t v10 = v9;
        unint64_t v11 = 0;
LABEL_39:
        sub_1B0D10ED8(v11);
        *a2 = *(void *)(a1 + 200);
        return v10;
      }
    }
  }
  uint64_t v12 = sub_1B0D121F0((int)v6 + 8);
  unint64_t v11 = v12;
  if (!v12) {
    goto LABEL_38;
  }
  *(void *)(v12 + v6) = 0;
  ++*(_DWORD *)(a1 + 132);
  for (uint64_t i = *(void *)(a1 + 112); i; uint64_t i = *(void *)(i + 64))
    *(_DWORD *)(i + 24) = 1;
  sub_1B0C7D108(*(void **)(a1 + 336), 0);
  uint64_t v14 = *(void *)(a1 + 336);
  if (!*(_DWORD *)(v14 + 40)) {
    goto LABEL_24;
  }
  uint64_t v15 = xmmword_1EB21CA88(v6, (*(_DWORD *)(v14 + 44) + 80), *(unsigned __int8 *)(v14 + 48));
  if (!v15)
  {
LABEL_38:
    uint64_t v10 = 7;
    goto LABEL_39;
  }
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned int *)(v14 + 32);
  if ((v17 & 0x80000000) != 0)
  {
    uint64_t v18 = *(int *)(v14 + 44);
    if (-1024 * (int)v17 / (v18 + *(int *)(v14 + 40)) >= 1000000000) {
      uint64_t v17 = 1000000000;
    }
    else {
      uint64_t v17 = -1024 * (int)v17 / (v18 + *(int *)(v14 + 40));
    }
  }
  ((void (*)(uint64_t, uint64_t))*(&xmmword_1EB21CA88 + 1))(v15, v17);
  if (*(void *)(v14 + 72)) {
    (*((void (**)(void))&xmmword_1EB21CAB8 + 1))();
  }
  *(void *)(v14 + 72) = v16;
  *(_DWORD *)(v14 + 40) = v6;
LABEL_24:
  sub_1B0D10ED8(*(void *)(a1 + 328));
  *(void *)(a1 + 328) = v11;
  *(_DWORD *)(a1 + 32) = (v6 - 1) / v6;
  *(void *)(a1 + 200) = v6;
  *(_DWORD *)(a1 + 192) = dword_1E9B51ED0 / v6 + 1;
LABEL_25:
  *a2 = *(_DWORD *)(a1 + 200);
  if (a3 < 0) {
    LOWORD(a3) = *(_WORD *)(a1 + 178);
  }
  *(_WORD *)(a1 + 178) = a3;
  long long v19 = *(void (**)(void))(a1 + 304);
  if (v19) {
    v19(*(void *)(a1 + 320));
  }
  uint64_t v20 = **(void **)(a1 + 72);
  if (v20 && *(int *)v20 >= 3)
  {
    uint64_t v21 = *(void *)(a1 + 160);
    *(unsigned char *)(a1 + 27) = v21 > 0;
    unsigned int v22 = sub_1B0D11088;
    if (!*(_DWORD *)(a1 + 48))
    {
      if (v21 < 1 || (unsigned int v22 = sub_1B0D11094, *(void *)(a1 + 296))) {
        unsigned int v22 = sub_1B0D112F8;
      }
    }
    *(void *)(a1 + 288) = v22;
    (*(void (**)(void))(v20 + 80))();
  }
  return 0;
}

const void *sub_1B0C7D0C4(const void *ptr)
{
  if (ptr)
  {
    if (qword_1E9B52268) {
      return (const void *)(*(uint64_t (**)(void))(qword_1E9B52268 + 16))();
    }
    else {
      return (const void *)malloc_size(ptr);
    }
  }
  return ptr;
}

void *sub_1B0C7D108(void *result, unsigned int a2)
{
  if (result[9])
  {
    uint64_t v3 = result;
    uint64_t v4 = *result;
    if (*result)
    {
      while (1)
      {
        uint64_t v5 = v4;
        uint64_t v4 = *(void *)(v4 + 64);
        if (*(_DWORD *)(v5 + 48) > a2) {
          break;
        }
LABEL_4:
        if (!v4) {
          goto LABEL_17;
        }
      }
      uint64_t v6 = *(void *)(v5 + 24);
      uint64_t v7 = *(void *)(v5 + 72);
      if (*(void *)(v6 + 16) == v5)
      {
        *(void *)(v6 + 16) = v7;
        if (v4)
        {
LABEL_8:
          *(void *)(v4 + 72) = v7;
          uint64_t v7 = *(void *)(v5 + 72);
          if (!v7)
          {
            *(void *)uint64_t v6 = v4;
LABEL_13:
            *(_WORD *)(v5 + 52) = *(_WORD *)(v5 + 52) & 0xFFF0 | 1;
            if (!*(void *)(v5 + 56) && *(unsigned char *)(v6 + 48)) {
              xmmword_1EB21CAA8(*(void *)(v6 + 72), *(void *)v5, 0);
            }
            goto LABEL_4;
          }
LABEL_12:
          *(void *)(v7 + 64) = v4;
          goto LABEL_13;
        }
      }
      else if (v4)
      {
        goto LABEL_8;
      }
      *(void *)(v6 + 8) = v7;
      if (!v7)
      {
        *(void *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 49) = 2;
        goto LABEL_13;
      }
      goto LABEL_12;
    }
LABEL_17:
    if (!a2)
    {
      if (v3[3]
        && (uint64_t v8 = (void **)(*((uint64_t (**)(void, uint64_t, void))&xmmword_1EB21CA98 + 1))(v3[9], 1, 0)) != 0)
      {
        bzero(*v8, *((int *)v3 + 10));
        a2 = 1;
      }
      else
      {
        a2 = 0;
      }
    }
    uint64_t v9 = (uint64_t (*)(uint64_t, void))xmmword_1EB21CAB8;
    uint64_t v10 = v3[9];
    return (void *)v9(v10, a2 + 1);
  }
  return result;
}

uint64_t sub_1B0C7D268(uint64_t a1, char *__dst, signed int a3, uint64_t a4)
{
  if (*(_DWORD *)(a1 + 160)
    || (uint64_t v6 = a4, v7 = a3, v8 = __dst, (v9 = *(void *)(a1 + 64)) != 0) && *(_DWORD *)(*(void *)v9 + 168))
  {
    sqlite3_log(27, "denying read from invalidated fd %d", *(_DWORD *)(a1 + 24));
    return 6922;
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 80);
    int v11 = v10 - a4;
    if (v10 > a4)
    {
      if (a3 + a4 <= v10)
      {
        memcpy(__dst, (const void *)(*(void *)(a1 + 104) + a4), a3);
        return 0;
      }
      memcpy(__dst, (const void *)(*(void *)(a1 + 104) + a4), v11);
      v8 += v11;
      v7 -= v11;
      v6 += v11;
    }
    int v12 = sub_1B0D0738C(a1, v6, (uint64_t)v8, v7);
    if (v7 == v12)
    {
      return 0;
    }
    else if (v12 < 0)
    {
      int v13 = *(_DWORD *)(a1 + 32);
      uint64_t result = 8458;
      if ((v13 - 5) >= 2 && v13 != 34 && v13 != 83) {
        return 266;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 32) = 0;
      bzero(&v8[v12], (int)(v7 - v12));
      return 522;
    }
  }
  return result;
}

uint64_t sub_1B0C7D3A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 17))
  {
    ++*(_DWORD *)(a1 + 20);
    if (!*(unsigned char *)(a1 + 18)) {
      return sub_1B0D12478(a1);
    }
  }
  return a1;
}

uint64_t sub_1B0C7D3CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t result = (uint64_t)sub_1B0D0E964(a2, 0x78u, (uint64_t)sub_1B0D1BE68);
    if (result)
    {
      if (!*(unsigned char *)(result + 112)) {
        goto LABEL_7;
      }
      return result;
    }
LABEL_8:
    if (!*(unsigned char *)(a1 + 103) && !*(unsigned char *)(a1 + 104))
    {
      *(unsigned char *)(a1 + 103) = 1;
      if (*(int *)(a1 + 220) >= 1) {
        *(_DWORD *)(a1 + 424) = 1;
      }
      ++*(_DWORD *)(a1 + 432);
      *(_WORD *)(a1 + 436) = 0;
      uint64_t result = *(void *)(a1 + 344);
      if (!result) {
        return result;
      }
      sub_1B0CEF2BC(result, "out of memory", v4, v5, v6, v7, v8, v9, v12);
      uint64_t v10 = *(void *)(a1 + 344);
      *(_DWORD *)(v10 + 24) = 7;
      uint64_t v11 = *(void *)(v10 + 256);
      if (v11)
      {
        uint64_t result = 0;
        do
        {
          ++*(_DWORD *)(v11 + 48);
          *(_DWORD *)(v11 + 24) = 7;
          uint64_t v11 = *(void *)(v11 + 256);
        }
        while (v11);
        return result;
      }
    }
    return 0;
  }
  uint64_t result = sub_1B0C7FC94(120);
  if (!result) {
    goto LABEL_8;
  }
  *(void *)(result + 112) = 0;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)uint64_t result = 0u;
  if (!*(unsigned char *)(result + 112))
  {
LABEL_7:
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 113) = 1;
  }
  return result;
}

int sqlite3_overload_function(sqlite3 *a1, const char *zFuncName, int nArg)
{
  if (!a1)
  {
    uint64_t v5 = "NULL";
    goto LABEL_16;
  }
  int v4 = *((unsigned __int8 *)a1 + 113);
  if (v4 == 186)
  {
LABEL_5:
    uint64_t v5 = "unopened";
LABEL_16:
    sqlite3_log(21, "API call with %s database connection pointer", v5);
    goto LABEL_17;
  }
  if (v4 != 118)
  {
    if (v4 != 109)
    {
      uint64_t v5 = "invalid";
      goto LABEL_16;
    }
    goto LABEL_5;
  }
  if (!zFuncName || (uint64_t v7 = *(void *)&nArg, nArg <= -3))
  {
LABEL_17:
    return sub_1B0CE1978(187460);
  }
  uint64_t v8 = *((void *)a1 + 3);
  if (v8) {
    xmmword_1EB21CA40(v8);
  }
  uint64_t v9 = sub_1B0C7D668((uint64_t)a1, (char *)zFuncName, v7, 1u, 0);
  uint64_t v10 = *((void *)a1 + 3);
  if (v10) {
    xmmword_1EB21CA50(v10);
  }
  if (v9) {
    return 0;
  }
  char v12 = sqlite3_mprintf("%s", zFuncName);
  if (v12) {
    return sub_1B0CF3DF8((uint64_t)a1, (char *)zFuncName, v7, 1, (uint64_t)v12, (uint64_t)sub_1B0CF4354, 0, 0, 0, 0, (void (*)(uint64_t))sqlite3_free);
  }
  else {
    return 7;
  }
}

unsigned char *sub_1B0C7D668(uint64_t a1, char *__s, int a3, unsigned int a4, int a5)
{
  if (__s) {
    int v10 = strlen(__s) & 0x3FFFFFFF;
  }
  else {
    int v10 = 0;
  }
  uint64_t v11 = *(void *)(a1 + 632);
  if (!v11)
  {
    uint64_t v16 = (uint64_t *)(a1 + 624);
    int v17 = *(_DWORD *)(a1 + 620);
    if (v17) {
      goto LABEL_40;
    }
LABEL_10:
    uint64_t v16 = &qword_1E9B52220;
    goto LABEL_11;
  }
  int v12 = *__s;
  if (*__s)
  {
    unsigned int v13 = 0;
    uint64_t v14 = __s + 1;
    do
    {
      unsigned int v13 = -1640531535 * (v13 + byte_1B0DE1758[v12]);
      int v15 = *v14++;
      int v12 = v15;
    }
    while (v15);
  }
  else
  {
    unsigned int v13 = 0;
  }
  uint64_t v26 = (_DWORD *)(v11 + 16 * (v13 % *(_DWORD *)(a1 + 616)));
  uint64_t v16 = (uint64_t *)(v26 + 2);
  int v17 = *v26;
  if (!v17) {
    goto LABEL_10;
  }
  do
  {
LABEL_40:
    uint64_t v16 = (uint64_t *)*v16;
    int v27 = (unsigned char *)v16[3];
    for (uint64_t i = __s; ; ++i)
    {
      uint64_t v29 = *v27;
      uint64_t v30 = *i;
      if (v29 != v30) {
        break;
      }
      if (!*v27) {
        goto LABEL_11;
      }
LABEL_42:
      ++v27;
    }
    if (byte_1B0DE1758[v29] == byte_1B0DE1758[v30]) {
      goto LABEL_42;
    }
    --v17;
  }
  while (v17);
  uint64_t v16 = &qword_1E9B52220;
LABEL_11:
  uint64_t v18 = (char *)v16[2];
  if (!v18)
  {
    if (a5) {
      goto LABEL_35;
    }
    uint64_t v20 = 0;
    goto LABEL_59;
  }
  unsigned int v19 = 0;
  uint64_t v20 = 0;
  do
  {
    int v22 = *v18;
    if (v22 == a3)
    {
      int v23 = 4;
    }
    else
    {
      if (a3 == -2)
      {
        if (*((void *)v18 + 3)) {
          int v21 = 6;
        }
        else {
          int v21 = 0;
        }
        goto LABEL_16;
      }
      if ((v22 & 0x80000000) == 0)
      {
        int v21 = 0;
        goto LABEL_16;
      }
      int v23 = 1;
    }
    int v24 = (((*((_DWORD *)v18 + 1) & a4) >> 1) & 1) + v23;
    int v21 = v23 | 2;
    if ((*((_DWORD *)v18 + 1) & 3) != a4) {
      int v21 = v24;
    }
LABEL_16:
    if (v21 > v19) {
      uint64_t v20 = v18;
    }
    if (v21 > (int)v19) {
      unsigned int v19 = v21;
    }
    uint64_t v18 = (char *)*((void *)v18 + 2);
  }
  while (v18);
  if (!a5)
  {
    if (v20 && (*(unsigned char *)(a1 + 44) & 2) == 0)
    {
      LOBYTE(v25) = 0;
LABEL_69:
      if ((v25 & 1) == 0 && !*((void *)v20 + 3)) {
        return 0;
      }
      return v20;
    }
LABEL_59:
    uint64_t v25 = (char *)*((void *)&xmmword_1EB220210 + (v10 + byte_1B0DE1758[*__s]) % 0x17);
    if (!v25) {
      goto LABEL_68;
    }
LABEL_60:
    long long v36 = (unsigned char *)*((void *)v25 + 7);
    for (uint64_t j = __s; ; ++j)
    {
      uint64_t v38 = *v36;
      uint64_t v39 = *j;
      if (v38 == v39)
      {
        if (!*v36)
        {
          unsigned int v19 = 0;
          while (1)
          {
            int v41 = *v25;
            if (v41 == a3) {
              break;
            }
            if (a3 == -2)
            {
              if (*((void *)v25 + 3)) {
                int v40 = 6;
              }
              else {
                int v40 = 0;
              }
            }
            else
            {
              if (v41 < 0)
              {
                int v42 = 1;
LABEL_82:
                int v43 = (((*((_DWORD *)v25 + 1) & a4) >> 1) & 1) + v42;
                int v40 = v42 | 2;
                if ((*((_DWORD *)v25 + 1) & 3) != a4) {
                  int v40 = v43;
                }
                goto LABEL_75;
              }
              int v40 = 0;
            }
LABEL_75:
            if (v40 > v19) {
              uint64_t v20 = v25;
            }
            if (v40 > (int)v19) {
              unsigned int v19 = v40;
            }
            uint64_t v25 = (char *)*((void *)v25 + 2);
            if (!v25) {
              goto LABEL_31;
            }
          }
          int v42 = 4;
          goto LABEL_82;
        }
      }
      else if (byte_1B0DE1758[v38] != byte_1B0DE1758[v39])
      {
        uint64_t v25 = (char *)*((void *)v25 + 8);
        if (!v25)
        {
          unsigned int v19 = 0;
          break;
        }
        goto LABEL_60;
      }
      ++v36;
    }
  }
LABEL_31:
  LOBYTE(v25) = a5 != 0;
  if (!a5 || v19 > 5)
  {
LABEL_68:
    if (v20) {
      goto LABEL_69;
    }
    return 0;
  }
LABEL_35:
  if (a1)
  {
    uint64_t v20 = (unsigned char *)sub_1B0D05DC0(a1, (v10 + 73));
    if (!v20) {
      return 0;
    }
  }
  else
  {
    uint64_t v20 = (unsigned char *)sub_1B0C7FC94((v10 + 73));
    if (!v20) {
      return 0;
    }
  }
  bzero(v20, (v10 + 73));
  int v31 = v20 + 72;
  *((void *)v20 + 7) = v20 + 72;
  *uint64_t v20 = a3;
  *((_DWORD *)v20 + 1) = a4;
  memcpy(v20 + 72, __s, (v10 + 1));
  int v32 = v20[72];
  if (v20[72])
  {
    long long v33 = v20 + 73;
    do
    {
      *(v33 - 1) = byte_1B0DE1758[v32];
      int v34 = *v33++;
      int v32 = v34;
    }
    while (v34);
    int v31 = (unsigned __int8 *)*((void *)v20 + 7);
  }
  uint64_t v35 = sub_1B0C796D8(a1 + 616, v31, (uint64_t)v20);
  if ((unsigned char *)v35 == v20)
  {
    sub_1B0D05C10((void *)a1, v20);
    if (*(unsigned char *)(a1 + 103) || *(unsigned char *)(a1 + 104)) {
      return 0;
    }
    *(unsigned char *)(a1 + 103) = 1;
    if (*(int *)(a1 + 220) >= 1) {
      *(_DWORD *)(a1 + 424) = 1;
    }
    ++*(_DWORD *)(a1 + 432);
    *(_WORD *)(a1 + 436) = 0;
    uint64_t v51 = *(void *)(a1 + 344);
    if (!v51) {
      return 0;
    }
    sub_1B0CEF2BC(v51, "out of memory", v44, v45, v46, v47, v48, v49, v54);
    uint64_t v52 = *(void *)(a1 + 344);
    *(_DWORD *)(v52 + 24) = 7;
    uint64_t v53 = *(void *)(v52 + 256);
    if (!v53) {
      return 0;
    }
    uint64_t v20 = 0;
    do
    {
      ++*(_DWORD *)(v53 + 48);
      *(_DWORD *)(v53 + 24) = 7;
      uint64_t v53 = *(void *)(v53 + 256);
    }
    while (v53);
  }
  else
  {
    *((void *)v20 + 2) = v35;
  }
  return v20;
}

uint64_t sub_1B0C7DAA8(uint64_t a1, char *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11)
{
  if (a2
    && (!a6 || !a8)
    && (a7 != 0) != (a8 == 0)
    && (a3 - 128) >= 0xFFFFFF7F
    && (a9 == 0) == (a10 == 0)
    && (strlen(a2) & 0x3FFFFF00) == 0)
  {
    int v20 = a4 & 0x380800;
    unsigned int v21 = a4 & 7;
    int v34 = v20;
    if (v21 - 1 >= 3)
    {
      if (v21 == 5)
      {
        uint64_t v22 = sub_1B0C7DAA8(a1, a2, a3, v20 | 1u, a5, a6, a7, a8, a9, a10, a11);
        if (v22) {
          return v22;
        }
        uint64_t v22 = sub_1B0C7DAA8(a1, a2, a3, v34 | 2u, a5, a6, a7, a8, a9, a10, a11);
        if (v22) {
          return v22;
        }
        unsigned int v21 = 3;
      }
      else if (v21 == 4)
      {
        unsigned int v21 = 2;
      }
      else
      {
        unsigned int v21 = 1;
      }
    }
    int v23 = sub_1B0C7D668(a1, a2, a3, v21, 0);
    if (v23 && (*((_DWORD *)v23 + 1) & 3) == v21 && (char)*v23 == a3)
    {
      if (*(_DWORD *)(a1 + 208))
      {
        uint64_t v22 = 5;
        sub_1B0CE79F4(a1, 5, "unable to delete/modify user-function due to active statements", v24, v25, v26, v27, v28, v33);
        return v22;
      }
      for (uint64_t i = *(void *)(a1 + 8); i; uint64_t i = *(void *)(i + 16))
        *(_WORD *)(i + 268) = *(_WORD *)(i + 268) & 0xFFFC | 1;
    }
    else if (!(a6 | a8))
    {
      return 0;
    }
    uint64_t v30 = sub_1B0C7D668(a1, a2, a3, v21, 1);
    if (!v30) {
      return 7;
    }
    int v31 = v30;
    sub_1B0D78D5C((void *)a1, (uint64_t)v30);
    if (a11) {
      ++*a11;
    }
    uint64_t v22 = 0;
    *((void *)v31 + 8) = a11;
    *((_DWORD *)v31 + 1) = (*((_DWORD *)v31 + 1) & 3 | v34) ^ 0x200000;
    if (a6) {
      uint64_t v32 = a6;
    }
    else {
      uint64_t v32 = a7;
    }
    *((void *)v31 + 3) = v32;
    *((void *)v31 + 4) = a8;
    *((void *)v31 + 5) = a9;
    *((void *)v31 + 6) = a10;
    *((void *)v31 + 1) = a5;
    *int v31 = a3;
    return v22;
  }

  return sub_1B0CE1978(187184);
}

uint64_t sub_1B0C7DD6C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1B0D7D35C;
  if (*(unsigned char *)a1 == 1) {
    uint64_t v8 = sub_1B0C7E150;
  }
  int v9 = v8(a2, a3);
  int v10 = v9;
  uint64_t v11 = *(void *)(a1 + 24);
  if (v11)
  {
    uint64_t v12 = (*(_DWORD *)(a1 + 16) - 1) & v9;
    unsigned int v13 = (int *)(v11 + 16 * v12);
    int v16 = *v13;
    uint64_t v14 = v13 + 2;
    int v15 = v16;
    if (*(unsigned char *)a1 == 1) {
      int v17 = sub_1B0C7E1B8;
    }
    else {
      int v17 = sub_1B0D7D394;
    }
    do
    {
      if (!v15) {
        goto LABEL_12;
      }
      uint64_t v14 = *(_DWORD **)v14;
      if (!v14) {
        goto LABEL_12;
      }
      --v15;
    }
    while (((unsigned int (*)(void, void, char *, uint64_t))v17)(*((void *)v14 + 3), v14[8], a2, a3));
    uint64_t v18 = *((void *)v14 + 2);
    if (a4)
    {
      *((void *)v14 + 2) = a4;
      return v18;
    }
    uint64_t v22 = *(void *)v14;
    int v23 = (void *)*((void *)v14 + 1);
    if (v23)
    {
      *int v23 = v22;
      uint64_t v22 = *(void *)v14;
      if (!*(void *)v14) {
        goto LABEL_27;
      }
    }
    else
    {
      *(void *)(a1 + 8) = v22;
      if (!v22)
      {
LABEL_27:
        uint64_t v24 = *(void *)(a1 + 24) + 16 * v12;
        uint64_t v25 = (void *)(v24 + 8);
        if (*(_DWORD **)(v24 + 8) == v14) {
          *uint64_t v25 = v22;
        }
        if ((*(_DWORD *)v24)-- <= 1) {
          *uint64_t v25 = 0;
        }
        if (*(unsigned char *)(a1 + 1))
        {
          uint64_t v27 = *((void *)v14 + 3);
          if (v27)
          {
            uint64_t v28 = &off_1EB21C9E8;
            if (!dword_1EB21C9C0)
            {
LABEL_39:
              (*v28)(v27);
              goto LABEL_40;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108 -= (int)off_1EB21C9F8(v27);
            --qword_1EB220150;
            off_1EB21C9E8(v27);
            uint64_t v27 = xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              uint64_t v28 = &xmmword_1EB21CA50;
              goto LABEL_39;
            }
          }
        }
LABEL_40:
        uint64_t v29 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v14);
          --qword_1EB220150;
          off_1EB21C9E8(v14);
          uint64_t v14 = (_DWORD *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_46;
          }
          uint64_t v29 = &xmmword_1EB21CA50;
        }
        (*v29)(v14);
LABEL_46:
        int v30 = *(_DWORD *)(a1 + 4);
        BOOL v31 = __OFSUB__(v30--, 1);
        *(_DWORD *)(a1 + 4) = v30;
        if ((v30 < 0) ^ v31 | (v30 == 0)) {
          sub_1B0D79DB0(a1);
        }
        return v18;
      }
    }
    *(void *)(v22 + 8) = v23;
    goto LABEL_27;
  }
LABEL_12:
  if (!a4) {
    return a4;
  }
  int v19 = *(_DWORD *)(a1 + 16);
  if (!v19)
  {
    if (sub_1B0D81A7C(a1, 8))
    {
LABEL_23:
      *(_DWORD *)(a1 + 4) = 0;
      return a4;
    }
    int v19 = *(_DWORD *)(a1 + 16);
  }
  if (*(_DWORD *)(a1 + 4) >= v19 && sub_1B0D81A7C(a1, 2 * v19)) {
    goto LABEL_23;
  }
  if (!sqlite3_initialize())
  {
    uint64_t v20 = sub_1B0C7FC94(40);
    if (v20)
    {
      uint64_t v21 = v20;
      *(void *)(v20 + 32) = 0;
      *(_OWORD *)uint64_t v20 = 0u;
      *(_OWORD *)(v20 + 16) = 0u;
      if (a2 && *(unsigned char *)(a1 + 1))
      {
        if (sqlite3_initialize() || (uint64_t v32 = (void *)sub_1B0C7FC94((int)a3)) == 0)
        {
          *(void *)(v21 + 24) = 0;
          sub_1B0D81C24(v21);
          return a4;
        }
        char v33 = v32;
        bzero(v32, (int)a3);
        *(void *)(v21 + 24) = v33;
        memcpy(v33, a2, (int)a3);
      }
      else
      {
        *(void *)(v20 + 24) = a2;
      }
      *(_DWORD *)(v21 + 32) = a3;
      ++*(_DWORD *)(a1 + 4);
      uint64_t v34 = *(void *)(a1 + 24) + 16 * ((*(_DWORD *)(a1 + 16) - 1) & v10);
      uint64_t v35 = *(void *)(v34 + 8);
      if (v35)
      {
        *(void *)uint64_t v21 = v35;
        uint64_t v37 = *(void *)(v35 + 8);
        long long v36 = (uint64_t **)(v35 + 8);
        *(void *)(v21 + 8) = v37;
        uint64_t v38 = *v36;
        if (!*v36) {
          uint64_t v38 = (uint64_t *)(a1 + 8);
        }
        uint64_t *v38 = v21;
        uint64_t v39 = (uint64_t *)v36;
      }
      else
      {
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v39 = (uint64_t *)(a1 + 8);
        uint64_t v40 = v41;
        *(void *)uint64_t v21 = v41;
        if (v41) {
          *(void *)(v40 + 8) = v21;
        }
        *(void *)(v21 + 8) = 0;
      }
      *uint64_t v39 = v21;
      ++*(_DWORD *)v34;
      *(void *)(v34 + 8) = v21;
      *(void *)(v21 + 16) = a4;
      return 0;
    }
  }
  return a4;
}

uint64_t sub_1B0C7E150(char *__s, int a2)
{
  int v2 = __s;
  if (a2 <= 0)
  {
    a2 = strlen(__s);
    if (a2 < 1) {
      return 0;
    }
  }
  int v3 = 0;
  unsigned int v4 = a2 + 1;
  do
  {
    int v5 = *v2++;
    v3 ^= v5 ^ (8 * v3);
    --v4;
  }
  while (v4 > 1);
  return v3 & 0x7FFFFFFF;
}

uint64_t sub_1B0C7E1B8(const char *a1, int a2, char *__s2, int a4)
{
  if (a2 == a4) {
    return strncmp(a1, __s2, a2);
  }
  else {
    return 1;
  }
}

int sqlite3_create_function_v2(sqlite3 *db, const char *zFunctionName, int nArg, int eTextRep, void *pApp, void (__cdecl *xFunc)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xStep)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xFinal)(sqlite3_context *), void (__cdecl *xDestroy)(void *))
{
  return sub_1B0CF3DF8((uint64_t)db, (char *)zFunctionName, *(uint64_t *)&nArg, eTextRep, (uint64_t)pApp, (uint64_t)xFunc, (uint64_t)xStep, (uint64_t)xFinal, 0, 0, (void (*)(uint64_t))xDestroy);
}

uint64_t sub_1B0C7E204(uint64_t a1, char *__s2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10 = *(void *)(a1 + 584);
  if (v10)
  {
    int v11 = *__s2;
    if (*__s2)
    {
      unsigned int v12 = 0;
      unsigned int v13 = __s2 + 1;
      do
      {
        unsigned int v12 = -1640531535 * (v12 + byte_1B0DE1758[v11]);
        int v14 = *v13++;
        int v11 = v14;
      }
      while (v14);
    }
    else
    {
      unsigned int v12 = 0;
    }
    uint64_t v22 = (_DWORD *)(v10 + 16 * (v12 % *(_DWORD *)(a1 + 568)));
    int v15 = (uint64_t *)(v22 + 2);
    int v16 = *v22;
    if (v16)
    {
      while (1)
      {
LABEL_24:
        int v15 = (uint64_t *)*v15;
        int v23 = (unsigned char *)v15[3];
        for (uint64_t i = __s2; ; ++i)
        {
          uint64_t v25 = *v23;
          uint64_t v26 = *i;
          if (v25 != v26) {
            break;
          }
          if (!*v23) {
            goto LABEL_8;
          }
LABEL_26:
          ++v23;
        }
        if (byte_1B0DE1758[v25] == byte_1B0DE1758[v26]) {
          goto LABEL_26;
        }
        if (!--v16)
        {
          int v15 = &qword_1E9B52220;
          goto LABEL_8;
        }
      }
    }
  }
  else
  {
    int v15 = (uint64_t *)(a1 + 576);
    int v16 = *(_DWORD *)(a1 + 572);
    if (v16) {
      goto LABEL_24;
    }
  }
  int v15 = &qword_1E9B52220;
LABEL_8:
  if (v15[2] && !strncmp("fts", __s2, 3uLL)) {
    a5 = 0;
  }
  uint64_t v17 = *(void *)(a1 + 24);
  if (v17) {
    xmmword_1EB21CA40(v17);
  }
  sub_1B0D25C7C(a1, __s2, a3, a4, (uint64_t)a5);
  if (!*(unsigned char *)(a1 + 103))
  {
    uint64_t v19 = 0;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20) {
      return v19;
    }
    goto LABEL_18;
  }
  uint64_t v18 = sub_1B0D1806C(a1, 0);
  uint64_t v19 = v18;
  if (a5 && v18) {
    a5(a4);
  }
  uint64_t v20 = *(void *)(a1 + 24);
  if (v20) {
LABEL_18:
  }
    xmmword_1EB21CA50(v20);
  return v19;
}

int sqlite3_busy_handler(sqlite3 *a1, int (__cdecl *a2)(void *, int), void *a3)
{
  if (!a1)
  {
    int v5 = "NULL";
    goto LABEL_11;
  }
  int v4 = *((unsigned __int8 *)a1 + 113);
  if (v4 == 186)
  {
LABEL_5:
    int v5 = "unopened";
LABEL_11:
    sqlite3_log(21, "API call with %s database connection pointer", v5);
    return sub_1B0CE1978(187045);
  }
  if (v4 != 118)
  {
    if (v4 != 109)
    {
      int v5 = "invalid";
      goto LABEL_11;
    }
    goto LABEL_5;
  }
  uint64_t v8 = *((void *)a1 + 3);
  if (v8)
  {
    xmmword_1EB21CA40(v8);
    uint64_t v9 = *((void *)a1 + 3);
    *((void *)a1 + 83) = a2;
    *((void *)a1 + 84) = a3;
    *((void *)a1 + 85) = a1;
    *((_DWORD *)a1 + 172) = 0;
    if (v9) {
      xmmword_1EB21CA50(v9);
    }
  }
  else
  {
    *((void *)a1 + 83) = a2;
    *((void *)a1 + 84) = a3;
    *((void *)a1 + 85) = a1;
    *((_DWORD *)a1 + 172) = 0;
  }
  return 0;
}

int sqlite3_create_function(sqlite3 *db, const char *zFunctionName, int nArg, int eTextRep, void *pApp, void (__cdecl *xFunc)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xStep)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xFinal)(sqlite3_context *))
{
  return sub_1B0CF3DF8((uint64_t)db, (char *)zFunctionName, *(uint64_t *)&nArg, eTextRep, (uint64_t)pApp, (uint64_t)xFunc, (uint64_t)xStep, (uint64_t)xFinal, 0, 0, 0);
}

char *__cdecl sqlite3_vmprintf(const char *a1, va_list a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (sqlite3_initialize())
    {
      return 0;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = &v9;
      uint64_t v7 = 0x7FFFFFFD00000200;
      sqlite3_str_vappendf((sqlite3_str *)&v5, a1, a2);
      if (v6 && (v6[v8] = 0, HIDWORD(v7)) && (v8 & 0x40000000000) == 0) {
        return (char *)sub_1B0D06044(&v5);
      }
      else {
        return v6;
      }
    }
  }
  else
  {
    sub_1B0CE1978(32945);
    return 0;
  }
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  uint64_t v52 = 0;
  if (errmsg) {
    *errmsg = 0;
  }
  if (!a1)
  {
    int v11 = "NULL";
    goto LABEL_17;
  }
  int v10 = *((unsigned __int8 *)a1 + 113);
  if (v10 == 186)
  {
LABEL_7:
    int v11 = "unopened";
LABEL_17:
    sqlite3_log(21, "API call with %s database connection pointer", v11);
    return sub_1B0CE1978(142299);
  }
  if (v10 != 118)
  {
    if (v10 != 109)
    {
      int v11 = "invalid";
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (sql) {
    unsigned int v12 = (char *)sql;
  }
  else {
    unsigned int v12 = &byte_1B0DE9952;
  }
  uint64_t v13 = *((void *)a1 + 3);
  if (v13) {
    xmmword_1EB21CA40(v13);
  }
  *((_DWORD *)a1 + 20) = 0;
  if (*((void *)a1 + 52)) {
    sub_1B0D0E714((uint64_t)a1, 0);
  }
  else {
    *((_DWORD *)a1 + 21) = -1;
  }
  uint64_t v53 = 0;
  while (1)
  {
    if (!*v12)
    {
      unsigned int v21 = 0;
LABEL_83:
      int v16 = 0;
      goto LABEL_84;
    }
    uint64_t v52 = 0;
    unsigned int v15 = sub_1B0C7EAC0((uint64_t)a1, (unsigned __int8 *)v12, 0xFFFFFFFFLL, 128, 0, &v52, &v53, v5);
    if (v15)
    {
      unsigned int v21 = v15;
      goto LABEL_83;
    }
    if (v52) {
      break;
    }
    unsigned int v21 = 0;
    unsigned int v12 = v53;
LABEL_67:
    if (v21) {
      goto LABEL_83;
    }
  }
  int v16 = 0;
  int v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  while (2)
  {
    int v20 = sqlite3_step(v52);
    unsigned int v21 = v20;
    if (!callback) {
      goto LABEL_26;
    }
    if (v20 == 100)
    {
      if (!v17) {
        goto LABEL_37;
      }
      break;
    }
    BOOL v22 = v20 == 101 && v17 == 0;
    if (!v22 || (*((unsigned char *)a1 + 49) & 1) == 0)
    {
LABEL_60:
      long long v36 = v52;
      if (*((unsigned char *)v52 + 267)) {
        unsigned int v21 = sub_1B0C8B140((void **)v52);
      }
      else {
        unsigned int v21 = 0;
      }
      sub_1B0CE20DC((uint64_t)v36);
      uint64_t v52 = 0;
      unsigned int v12 = v53 - 1;
      do
        int v37 = *++v12;
      while ((byte_1B0DE196D[v37] & 1) != 0);
      if (v16) {
        sub_1B0D05C10(a1, v16);
      }
      goto LABEL_67;
    }
LABEL_37:
    int v23 = (unsigned __int16 *)v52;
    if (v52)
    {
      uint64_t v24 = *(void *)(*(void *)v52 + 24);
      if (v24)
      {
        xmmword_1EB21CA40(v24);
        uint64_t v25 = *(void *)(*(void *)v23 + 24);
        uint64_t v18 = v23[130];
        if (v25) {
          xmmword_1EB21CA50(v25);
        }
      }
      else
      {
        uint64_t v18 = *((unsigned __int16 *)v52 + 130);
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
    int v16 = (void *)sub_1B0D05DC0((uint64_t)a1, (16 * v18) | 8u);
    if (!v16) {
      goto LABEL_84;
    }
    if (v18)
    {
      uint64_t v26 = 0;
      do
      {
        v16[v26] = sub_1B0CEBAA4((uint64_t *)v52, v26, 0, 0);
        ++v26;
      }
      while (v18 != v26);
    }
    if (v21 != 100)
    {
LABEL_57:
      if (((unsigned int (*)(void *, uint64_t, void *, void *))callback)(a4, v18, v19, v16))
      {
        uint64_t v38 = v52;
        if (*((unsigned char *)v52 + 267)) {
          sub_1B0C8B140((void **)v52);
        }
        sub_1B0CE20DC((uint64_t)v38);
        uint64_t v52 = 0;
        unsigned int v21 = 4;
        *((_DWORD *)a1 + 20) = 4;
        sub_1B0D0E714((uint64_t)a1, 4);
        goto LABEL_84;
      }
      int v17 = 1;
LABEL_26:
      if (v21 != 100) {
        goto LABEL_60;
      }
      continue;
    }
    break;
  }
  uint64_t v19 = &v16[v18];
  if ((int)v18 < 1)
  {
    int v35 = 0;
LABEL_56:
    v19[v35] = 0;
    goto LABEL_57;
  }
  uint64_t v27 = 0;
  while (1)
  {
    uint64_t v28 = sqlite3_column_text(v52, v27);
    v19[v27] = v28;
    if (!v28 && sqlite3_column_type(v52, v27) != 5) {
      break;
    }
    if (v18 == ++v27)
    {
      int v35 = v18;
      goto LABEL_56;
    }
  }
  if (!*((unsigned char *)a1 + 103) && !*((unsigned char *)a1 + 104))
  {
    *((unsigned char *)a1 + 103) = 1;
    if (*((int *)a1 + 55) >= 1) {
      *((_DWORD *)a1 + 106) = 1;
    }
    ++*((_DWORD *)a1 + 108);
    *((_WORD *)a1 + 218) = 0;
    uint64_t v39 = *((void *)a1 + 43);
    if (v39)
    {
      sub_1B0CEF2BC(v39, "out of memory", v29, v30, v31, v32, v33, v34, v51);
      uint64_t v40 = *((void *)a1 + 43);
      *(_DWORD *)(v40 + 24) = 7;
      for (uint64_t i = *(void *)(v40 + 256); i; uint64_t i = *(void *)(i + 256))
      {
        ++*(_DWORD *)(i + 48);
        *(_DWORD *)(i + 24) = 7;
      }
    }
  }
  unsigned int v21 = 100;
LABEL_84:
  int v42 = v52;
  if (v52)
  {
    if (*((unsigned char *)v52 + 267)) {
      sub_1B0C8B140((void **)v52);
    }
    sub_1B0CE20DC((uint64_t)v42);
  }
  if (v16) {
    sub_1B0D05C10(a1, v16);
  }
  if (!v21 && !*((unsigned char *)a1 + 103))
  {
    int v43 = 0;
    goto LABEL_99;
  }
  int v44 = sub_1B0D1806C((uint64_t)a1, v21);
  int v43 = v44;
  if (errmsg && v44)
  {
    uint64_t v45 = sqlite3_errmsg(a1);
    if (v45)
    {
      uint64_t v46 = v45;
      size_t v47 = strlen(v45) + 1;
      uint64_t v48 = (char *)sub_1B0C7FC94(v47);
      if (v48)
      {
        uint64_t v49 = v48;
        memcpy(v48, v46, v47);
        *errmsg = v49;
        uint64_t v50 = *((void *)a1 + 3);
        if (!v50) {
          return v43;
        }
LABEL_102:
        xmmword_1EB21CA50(v50);
        return v43;
      }
    }
    *errmsg = 0;
    int v43 = 7;
    *((_DWORD *)a1 + 20) = 7;
    sub_1B0D0E714((uint64_t)a1, 7);
    uint64_t v50 = *((void *)a1 + 3);
    if (v50) {
      goto LABEL_102;
    }
  }
  else
  {
LABEL_99:
    if (errmsg) {
      *errmsg = 0;
    }
    uint64_t v50 = *((void *)a1 + 3);
    if (v50) {
      goto LABEL_102;
    }
  }
  return v43;
}

uint64_t sub_1B0C7EAC0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, void *a6, void *a7, uint64_t a8)
{
  if (a6) {
    *a6 = 0;
  }
  if (a7) {
    *a7 = 0;
  }
  if (!a6)
  {
    int v17 = 148668;
LABEL_37:
    return sub_1B0CE1978(v17);
  }
  if (!a1)
  {
    int v16 = "NULL";
    goto LABEL_35;
  }
  int v15 = *(unsigned __int8 *)(a1 + 113);
  if (v15 == 186)
  {
LABEL_10:
    int v16 = "unopened";
LABEL_35:
    sqlite3_log(21, "API call with %s database connection pointer", v16);
    goto LABEL_36;
  }
  if (v15 != 118)
  {
    if (v15 != 109)
    {
      int v16 = "invalid";
      goto LABEL_35;
    }
    goto LABEL_10;
  }
  if (!a2)
  {
LABEL_36:
    int v17 = 148673;
    goto LABEL_37;
  }
  uint64_t v18 = *(void *)(a1 + 24);
  if (v18) {
    xmmword_1EB21CA40(v18);
  }
  if (!*(unsigned char *)(a1 + 111)) {
    sub_1B0D0E4C4(a1);
  }
  unsigned int v20 = sub_1B0C7ED2C(a1, a2, a3, a4, a5, a6, a7, a8);
  if (v20)
  {
    int v21 = 0;
    while (!*(unsigned char *)(a1 + 103))
    {
      if (v20 == 17)
      {
        if (!*(_DWORD *)(a1 + 72))
        {
          int v22 = *(_DWORD *)(a1 + 40);
          if (v22 >= 1)
          {
            uint64_t v23 = 0;
            uint64_t v24 = 24;
            do
            {
              uint64_t v25 = *(void *)(*(void *)(a1 + 32) + v24);
              if ((*(_WORD *)(v25 + 114) & 8) != 0)
              {
                sub_1B0D1BE68(v25);
                int v22 = *(_DWORD *)(a1 + 40);
              }
              ++v23;
              v24 += 32;
            }
            while (v23 < v22);
          }
        }
        if (v21)
        {
          unsigned int v20 = 17;
          break;
        }
        int v21 = 1;
      }
      else
      {
        if (v20 != 513) {
          break;
        }
        if (v21 >= 25)
        {
          unsigned int v20 = 513;
          break;
        }
        ++v21;
      }
      unsigned int v20 = sub_1B0C7ED2C(a1, a2, a3, a4, a5, a6, a7, v19);
      if (!v20) {
        break;
      }
    }
  }
  if (!*(unsigned char *)(a1 + 111)) {
    sub_1B0D0E55C(a1);
  }
  if (v20 || *(unsigned char *)(a1 + 103)) {
    uint64_t v27 = sub_1B0D1806C(a1, v20);
  }
  else {
    uint64_t v27 = 0;
  }
  *(_DWORD *)(a1 + 688) = 0;
  uint64_t v28 = *(void *)(a1 + 24);
  if (v28) {
    xmmword_1EB21CA50(v28);
  }
  return v27;
}

uint64_t sub_1B0C7ED2C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, void *a6, void *a7, uint64_t a8)
{
  char v10 = a4;
  unsigned int v11 = a3;
  double v14 = 0.0;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v80 = 0u;
  long long v79 = 0u;
  long long v78 = 0u;
  long long v77 = 0u;
  long long v76 = 0u;
  long long v75 = 0u;
  long long v74 = 0u;
  long long v73 = 0u;
  long long v72 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  uint64_t v15 = *(void *)(a1 + 344);
  uint64_t v89 = 0;
  *((void *)&v79 + 1) = v15;
  *(void *)(a1 + 344) = &v63;
  uint64_t v63 = a1;
  if (a5)
  {
    *(void *)&long long v84 = a5;
    uint64_t v17 = *(void *)(*(void *)a5 + 24);
    if (v17)
    {
      xmmword_1EB21CA40(v17);
      uint64_t v18 = *(void *)(*(void *)a5 + 24);
      unsigned int v19 = a5[134];
      if (v18) {
        xmmword_1EB21CA50(v18);
      }
    }
    else
    {
      unsigned int v19 = *((unsigned __int8 *)a5 + 268);
    }
    BYTE5(v82) = (v19 >> 2) & 3;
  }
  if (*(unsigned char *)(a1 + 103))
  {
    sub_1B0CEF2BC((uint64_t)&v63, "out of memory", a3, a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v62);
    uint64_t v20 = 7;
    *(_DWORD *)(a1 + 80) = 7;
    goto LABEL_125;
  }
  if (v10)
  {
    ++BYTE12(v65);
    ++*(_DWORD *)(a1 + 432);
    *(_WORD *)(a1 + 436) = 0;
  }
  BYTE13(v65) = v10;
  if (!*(unsigned char *)(a1 + 111) && *(int *)(a1 + 40) >= 1)
  {
    for (uint64_t i = 0; i < *(int *)(a1 + 40); ++i)
    {
      uint64_t v22 = *(void *)(*(void *)(a1 + 32) + 32 * i + 8);
      if (!v22) {
        continue;
      }
      if (!*(unsigned char *)(v22 + 17)) {
        continue;
      }
      ++*(_DWORD *)(v22 + 20);
      if (!*(unsigned char *)(v22 + 18))
      {
        sub_1B0D12478(v22);
        if (!*(unsigned char *)(v22 + 17)) {
          continue;
        }
      }
      uint64_t v23 = *(void *)(v22 + 8);
      if (*(void *)(v23 + 128) == v22 || (*(_WORD *)(v23 + 40) & 0x40) == 0)
      {
        uint64_t v24 = *(void *)(v23 + 120);
        if (!v24)
        {
LABEL_31:
          uint64_t v20 = 0;
          char v25 = 1;
          goto LABEL_37;
        }
        while (*(void *)v24 == v22 || *(_DWORD *)(v24 + 8) != 1 || *(unsigned char *)(v24 + 12) == 1)
        {
          uint64_t v24 = *(void *)(v24 + 16);
          if (!v24) {
            goto LABEL_31;
          }
        }
      }
      char v25 = 0;
      uint64_t v20 = 262;
LABEL_37:
      int v26 = *(_DWORD *)(v22 + 20) - 1;
      *(_DWORD *)(v22 + 20) = v26;
      if (!v26) {
        sub_1B0D12558(v22);
      }
      if ((v25 & 1) == 0)
      {
        sub_1B0CE79F4(a1, v20, "database schema is locked: %s", a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, *(void *)(*(void *)(a1 + 32) + 32 * i));
        goto LABEL_125;
      }
    }
  }
  if (*(void *)(a1 + 608)) {
    sub_1B0D22AA4((void *)a1);
  }
  if ((v11 & 0x80000000) != 0 || v11 && !a2[v11 - 1])
  {
    sub_1B0C7F440((uint64_t)&v63, a2);
  }
  else
  {
    if (*(_DWORD *)(a1 + 140) < (signed int)v11)
    {
      sub_1B0CE79F4(a1, 18, "statement too long", a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v62);
      uint64_t v20 = sub_1B0D1806C(a1, 0x12u);
      goto LABEL_125;
    }
    size_t v27 = v11;
    if (a2 && (uint64_t v28 = (unsigned __int8 *)sub_1B0D05DC0(a1, v11 + 1)) != 0)
    {
      uint64_t v29 = v28;
      memcpy(v28, a2, v27);
      v29[v27] = 0;
      sub_1B0C7F440((uint64_t)&v63, v29);
      *((void *)&v84 + 1) = &a2[*((void *)&v84 + 1) - (void)v29];
      sub_1B0D05C10((void *)a1, v29);
    }
    else
    {
      *((void *)&v84 + 1) = &a2[v11];
    }
  }
  if (a7) {
    *a7 = *((void *)&v84 + 1);
  }
  if (!*(unsigned char *)(a1 + 197))
  {
    uint64_t v30 = *((void *)&v64 + 1);
    if (*((void *)&v64 + 1))
    {
      int v31 = DWORD2(v84);
      *(unsigned char *)(*((void *)&v64 + 1) + 266) = v10;
      if ((v10 & 0x80) == 0) {
        *(_DWORD *)(v30 + 372) = 0;
      }
      if (a2)
      {
        size_t v32 = v31 - (int)a2;
        uint64_t v33 = (unsigned char *)sub_1B0D05DC0(*(void *)v30, v32 + 1);
        uint64_t v34 = v33;
        if (v33)
        {
          memcpy(v33, a2, v32);
          v34[v32] = 0;
        }
      }
      else
      {
        uint64_t v34 = 0;
      }
      *(void *)(v30 + 320) = v34;
    }
  }
  if (*(unsigned char *)(a1 + 103))
  {
    LODWORD(v65) = 7;
    BYTE5(v65) = 0;
LABEL_56:
    if (BYTE5(v65))
    {
      if (!*(unsigned char *)(a1 + 197))
      {
        uint64_t v38 = v63;
        if (*(int *)(v63 + 40) >= 1)
        {
          for (uint64_t j = 0; j < *(int *)(v38 + 40); ++j)
          {
            uint64_t v40 = *(void *)(v38 + 32) + 32 * j;
            uint64_t v41 = *(void *)(v40 + 8);
            if (v41)
            {
              int v42 = *(unsigned __int8 *)(v41 + 16);
              if (!*(unsigned char *)(v41 + 16))
              {
                int v43 = sub_1B0D12594(*(void *)(v40 + 8), 0, 0);
                if (v43)
                {
                  if (v43 == 3082 || v43 == 7)
                  {
                    if (*(unsigned char *)(v38 + 103) || *(unsigned char *)(v38 + 104)) {
                      goto LABEL_121;
                    }
                    *(unsigned char *)(v38 + 103) = 1;
                    if (*(int *)(v38 + 220) >= 1) {
                      *(_DWORD *)(v38 + 424) = 1;
                    }
                    ++*(_DWORD *)(v38 + 432);
                    *(_WORD *)(v38 + 436) = 0;
                    uint64_t v46 = *(void *)(v38 + 344);
                    if (!v46
                      || (sub_1B0CEF2BC(v46, "out of memory", v44, a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v62),
                          uint64_t v47 = *(void *)(v38 + 344),
                          *(_DWORD *)(v47 + 24) = 7,
                          (uint64_t v48 = *(void *)(v47 + 256)) == 0))
                    {
LABEL_121:
                      LODWORD(v65) = 7;
                    }
                    else
                    {
                      do
                      {
                        ++*(_DWORD *)(v48 + 48);
                        *(_DWORD *)(v48 + 24) = 7;
                        uint64_t v48 = *(void *)(v48 + 256);
                      }
                      while (v48);
                      LODWORD(v65) = 7;
                    }
                  }
                  break;
                }
              }
              uint64_t v49 = *(void *)(v41 + 8);
              int v50 = *(unsigned __int8 *)(v41 + 17);
              if (*(unsigned char *)(v41 + 17))
              {
                ++*(_DWORD *)(v41 + 20);
                if (*(unsigned char *)(v41 + 18))
                {
                  int v50 = 1;
                }
                else
                {
                  sub_1B0D12478(v41);
                  int v50 = *(unsigned __int8 *)(v41 + 17);
                }
              }
              unsigned int v52 = *(_DWORD *)(*(void *)(*(void *)(v49 + 24) + 80) + 40);
              if (v50)
              {
                int v53 = *(_DWORD *)(v41 + 20) - 1;
                *(_DWORD *)(v41 + 20) = v53;
                if (!v53) {
                  sub_1B0D12558(v41);
                }
              }
              uint64_t v54 = *(void *)(v38 + 32);
              uint64_t v55 = *(void *)(v54 + 32 * j + 24);
              if (bswap32(v52) != *(_DWORD *)v55)
              {
                __int16 v56 = *(_WORD *)(v55 + 114);
                if (v56) {
                  LODWORD(v65) = 17;
                }
                *(_WORD *)(v55 + 114) = v56 | 8;
                *(_WORD *)(*(void *)(v54 + 56) + 114) |= 8u;
                *(_DWORD *)(v38 + 44) &= ~0x10u;
                if (!*(_DWORD *)(v38 + 72))
                {
                  int v57 = *(_DWORD *)(v38 + 40);
                  if (v57 >= 1)
                  {
                    uint64_t v58 = 0;
                    uint64_t v59 = 24;
                    do
                    {
                      uint64_t v60 = *(void *)(*(void *)(v38 + 32) + v59);
                      if ((*(_WORD *)(v60 + 114) & 8) != 0)
                      {
                        sub_1B0D1BE68(v60);
                        int v57 = *(_DWORD *)(v38 + 40);
                      }
                      ++v58;
                      v59 += 32;
                    }
                    while (v58 < v57);
                  }
                }
              }
              if (!v42)
              {
                if (*(unsigned char *)(v41 + 17))
                {
                  ++*(_DWORD *)(v41 + 20);
                  if (!*(unsigned char *)(v41 + 18)) {
                    sub_1B0D12478(v41);
                  }
                }
                if (!sub_1B0CB23E8(v41, 0, v14)) {
                  sub_1B0CB283C(v41, 0);
                }
                if (*(unsigned char *)(v41 + 17))
                {
                  int v51 = *(_DWORD *)(v41 + 20) - 1;
                  *(_DWORD *)(v41 + 20) = v51;
                  if (!v51) {
                    sub_1B0D12558(v41);
                  }
                }
              }
            }
          }
        }
      }
    }
    uint64_t v35 = *((void *)&v64 + 1);
    if (*((void *)&v64 + 1))
    {
      if (*(unsigned char *)(*((void *)&v64 + 1) + 267)) {
        sub_1B0C8B140(*((void ***)&v64 + 1));
      }
      sub_1B0CE20DC(v35);
    }
    uint64_t v20 = v65;
    if ((void)v64)
    {
      sub_1B0CE79F4(a1, v65, "%s", a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v64);
      long long v36 = (void *)v64;
      if ((void)v64) {
        goto LABEL_123;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 80) = v65;
      if (v20 || *(void *)(a1 + 416))
      {
        sub_1B0D0E714(a1, v20);
      }
      else
      {
        uint64_t v20 = 0;
        *(_DWORD *)(a1 + 84) = -1;
      }
    }
    goto LABEL_124;
  }
  if (v65 && v65 != 101) {
    goto LABEL_56;
  }
  *a6 = *((void *)&v64 + 1);
  *(void *)(a1 + 80) = 0xFFFFFFFF00000000;
  uint64_t v37 = *(void *)(a1 + 416);
  if (v37)
  {
    if ((*(_WORD *)(v37 + 20) & 0x9000) != 0)
    {
      sub_1B0D18138((int *)v37);
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = 0;
      *(_WORD *)(v37 + 20) = 1;
    }
  }
  else
  {
    uint64_t v20 = 0;
  }
LABEL_124:
  while (1)
  {
    long long v36 = (void *)v75;
    if (!(void)v75) {
      break;
    }
    *(void *)&long long v75 = *(void *)(v75 + 8);
LABEL_123:
    sub_1B0D05C10((void *)a1, v36);
  }
LABEL_125:
  sub_1B0CEF890(&v63);
  return v20;
}

uint64_t sub_1B0C7F440(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = a2;
  uint64_t v3 = a1;
  int v62 = 0;
  uint64_t v4 = *(void *)a1;
  memset(v59, 0, 496);
  int v5 = *(_DWORD *)(v4 + 140);
  if (!*(_DWORD *)(v4 + 208)) {
    *(_DWORD *)(v4 + 424) = 0;
  }
  *(_DWORD *)(a1 + 24) = 0;
  int v6 = -1;
  *(void *)(a1 + 336) = a2;
  int v57 = (unsigned __int16 *)v59;
  uint64_t v58 = (void **)a1;
  v59[0] = 0;
  uint64_t v61 = (unsigned __int16 *)&v60;
  uint64_t v7 = *(void *)(v4 + 344);
  *(void *)(v4 + 344) = a1;
  uint64_t v56 = v7;
  while (1)
  {
    unsigned int v8 = sub_1B0C7FE7C(v2, &v62);
    v5 -= v8;
    if (v5 < 0) {
      break;
    }
    unsigned int v15 = v8;
    while (1)
    {
      if (v62 < 164)
      {
        int v6 = v62;
        goto LABEL_67;
      }
      if (*(_DWORD *)(v4 + 424))
      {
        int v41 = 9;
        goto LABEL_109;
      }
      if (v62 != 183) {
        break;
      }
      v2 += (int)v15;
      unsigned int v15 = sub_1B0C7FE7C(v2, &v62);
      v5 -= v15;
      if (v5 < 0) {
        goto LABEL_107;
      }
    }
    if (*v2)
    {
      switch(v62)
      {
        case 166:
          if (v6 == 23)
          {
            unsigned int v19 = v2 + 6;
            LODWORD(v65) = 0;
            do
              v19 += (int)sub_1B0C7FE7C(v19, (int *)&v65);
            while (v65 == 183);
            BOOL v20 = (v65 - 117) > 0x30
               || ((1 << (v65 - 117)) & 0x1800000000003) == 0;
            if (v20 && v65 != 59 && word_1B0DE2592[(int)v65] != 59 && v65 == 22)
            {
              int v6 = 166;
              break;
            }
          }
LABEL_63:
          int v6 = 59;
          break;
        case 165:
          if (v6 != 23) {
            goto LABEL_63;
          }
          int v21 = v2 + 4;
          LODWORD(v65) = 0;
          do
            v21 += (int)sub_1B0C7FE7C(v21, (int *)&v65);
          while (v65 == 183);
          BOOL v22 = (v65 - 117) > 0x30
             || ((1 << (v65 - 117)) & 0x1800000000003) == 0;
          if (!v22 || v65 == 59 || word_1B0DE2592[(int)v65] == 59)
          {
            int v6 = 165;
          }
          else if (v65 == 22 || v65 == 59)
          {
            int v6 = 165;
          }
          else
          {
            int v6 = 59;
          }
          break;
        case 164:
          int v16 = v2 + 6;
          LODWORD(v65) = 0;
          do
            v16 += (int)sub_1B0C7FE7C(v16, (int *)&v65);
          while (v65 == 183);
          BOOL v17 = (v65 - 117) > 0x30
             || ((1 << (v65 - 117)) & 0x1800000000003) == 0;
          if (v17 && v65 != 59 && word_1B0DE2592[(int)v65] != 59) {
            goto LABEL_63;
          }
          LODWORD(v65) = 0;
          do
            v16 += (int)sub_1B0C7FE7C(v16, (int *)&v65);
          while (v65 == 183);
          BOOL v18 = (v65 - 117) > 0x30
             || ((1 << (v65 - 117)) & 0x1800000000003) == 0;
          if (!v18 || v65 == 59 || word_1B0DE2592[(int)v65] == 59) {
            goto LABEL_63;
          }
          if (v65 == 24) {
            int v6 = 164;
          }
          else {
            int v6 = 59;
          }
          break;
        default:
          long long v65 = v2;
          uint64_t v66 = v15;
          sub_1B0CEF2BC(v3, "unrecognized token: \"%T\"", v9, v10, v11, v12, v13, v14, (char)&v65);
          goto LABEL_112;
      }
    }
    else
    {
      if (v6 == 1)
      {
        int v6 = 0;
      }
      else
      {
        if (!v6) {
          goto LABEL_112;
        }
        int v6 = 1;
      }
      unsigned int v15 = 0;
    }
    int v62 = v6;
LABEL_67:
    *(void *)(v3 + 280) = v2;
    *(_DWORD *)(v3 + 288) = v15;
    uint64_t v55 = v3;
    uint64_t v23 = *(void *)(v3 + 288);
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v24 = v58;
    for (unsigned int i = *v57; ; unsigned int i = sub_1B0C80580((uint64_t *)&v57, v33, (uint64_t)v2, v23, v24, v12, v13, v14))
    {
      if (i <= 0x242)
      {
        uint64_t v26 = word_1B0DE2898[i];
        unsigned __int16 v27 = v6;
        do
        {
          unsigned __int16 v28 = v27;
          int v29 = v27;
          uint64_t v30 = v27 + v26;
          if (word_1B0DE2D1E[v30] == v29)
          {
            size_t v32 = &word_1B0DE3EF0[v30];
            goto LABEL_78;
          }
          unsigned __int16 v27 = word_1B0DE2592[v28];
        }
        while (v27);
        if (v28 && (uint64_t v31 = v26 + 101, word_1B0DE2D1E[v31] == 101)) {
          size_t v32 = &word_1B0DE3EF0[v31];
        }
        else {
          size_t v32 = (unsigned __int16 *)((char *)&unk_1B0DE4F50 + 2 * i);
        }
LABEL_78:
        unsigned int i = *v32;
      }
      uint64_t v33 = i - 1243;
      if (i < 0x4DB) {
        break;
      }
      if (!byte_1B0DE2704[v33])
      {
        uint64_t v34 = (uint64_t)v57;
        if (v57 >= v61)
        {
          for (uint64_t j = (uint64_t)v58; v57 > (unsigned __int16 *)v59; v34 = (uint64_t)v57)
          {
            int v57 = (unsigned __int16 *)(v34 - 24);
            sub_1B0C8ACE8(&v57, *(unsigned __int16 *)(v34 + 2), (uint64_t *)(v34 + 8));
          }
          sub_1B0CEF2BC(j, "parser stack overflow", v9, v10, v11, v12, v13, v14, v54);
          uint64_t v58 = (void **)j;
          uint64_t v3 = v55;
          goto LABEL_99;
        }
      }
    }
    uint64_t v3 = v55;
    if (i > 0x4D7)
    {
      if (i == 1241)
      {
        v57 -= 12;
      }
      else
      {
        uint64_t v63 = v2;
        uint64_t v64 = v23;
        long long v65 = v2;
        uint64_t v66 = v23;
        uint64_t v39 = (uint64_t)v58;
        if (*v2) {
          sub_1B0CEF2BC((uint64_t)v58, "near \"%T\": syntax error", v9, v10, v11, v12, v13, v14, (char)&v65);
        }
        else {
          sub_1B0CEF2BC((uint64_t)v58, "incomplete input", v9, v10, v11, v12, v13, v14, v54);
        }
        uint64_t v58 = (void **)v39;
        sub_1B0C8ACE8(&v57, (unsigned __int16)v6, (uint64_t *)&v63);
      }
    }
    else
    {
      uint64_t v36 = (uint64_t)v57;
      v57 += 12;
      if (v57 <= v61)
      {
        __int16 v38 = i + 406;
        if (i <= 0x242) {
          __int16 v38 = i;
        }
        *(_WORD *)(v36 + 24) = v38;
        *(_WORD *)(v36 + 26) = v6;
        *(void *)(v36 + 32) = v2;
        *(void *)(v36 + 40) = v23;
      }
      else
      {
        int v57 = (unsigned __int16 *)v36;
        for (k = (uint64_t)v58; v57 > (unsigned __int16 *)v59; uint64_t v36 = (uint64_t)v57)
        {
          int v57 = (unsigned __int16 *)(v36 - 24);
          sub_1B0C8ACE8(&v57, *(unsigned __int16 *)(v36 + 2), (uint64_t *)(v36 + 8));
        }
        sub_1B0CEF2BC(k, "parser stack overflow", v9, v10, v11, v12, v13, v14, v54);
        uint64_t v58 = (void **)k;
      }
    }
LABEL_99:
    uint64_t v7 = v56;
    v2 += (int)v15;
    if (*(_DWORD *)(v3 + 24)) {
      goto LABEL_112;
    }
  }
LABEL_107:
  int v41 = 18;
LABEL_109:
  *(_DWORD *)(v3 + 24) = v41;
  ++*(_DWORD *)(v3 + 48);
LABEL_112:
  while (1)
  {
    uint64_t v42 = (uint64_t)v57;
    if (v57 <= (unsigned __int16 *)v59) {
      break;
    }
    v57 -= 12;
    sub_1B0C8ACE8(&v57, *(unsigned __int16 *)(v42 + 2), (uint64_t *)(v42 + 8));
  }
  if (!*(unsigned char *)(v4 + 103))
  {
    int v43 = *(_DWORD *)(v3 + 24);
    uint64_t v44 = *(const char **)(v3 + 8);
    if (!v44) {
      goto LABEL_117;
    }
    goto LABEL_129;
  }
  int v43 = 7;
  *(_DWORD *)(v3 + 24) = 7;
  uint64_t v44 = *(const char **)(v3 + 8);
  if (v44)
  {
LABEL_129:
    sqlite3_log(v43, "%s in \"%s\"", v44, *(const char **)(v3 + 336));
    uint64_t v45 = 1;
    goto LABEL_130;
  }
LABEL_117:
  uint64_t v45 = 0;
  if (v43 > 100)
  {
    if (v43 == 101) {
      goto LABEL_130;
    }
    if (v43 != 516) {
      goto LABEL_124;
    }
    uint64_t v46 = "abort due to ROLLBACK";
LABEL_128:
    uint64_t v44 = (const char *)sub_1B0C904AC(v4, "%s", v9, v10, v11, v12, v13, v14, (char)v46);
    *(void *)(v3 + 8) = v44;
    int v43 = *(_DWORD *)(v3 + 24);
    goto LABEL_129;
  }
  if (v43)
  {
    if (v43 == 100)
    {
      uint64_t v46 = "another row available";
      goto LABEL_128;
    }
LABEL_124:
    if v43 > 0x1Cu || ((0x1410004uLL >> v43)) {
      uint64_t v46 = "unknown error";
    }
    else {
      uint64_t v46 = off_1E5FF0368[v43];
    }
    goto LABEL_128;
  }
LABEL_130:
  *(void *)(v3 + 336) = v2;
  uint64_t v47 = *(void *)(v3 + 392);
  if (v47)
  {
    uint64_t v48 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_136;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v47);
    --qword_1EB220150;
    off_1EB21C9E8(v47);
    uint64_t v47 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v48 = &xmmword_1EB21CA50;
LABEL_136:
      (*v48)(v47);
    }
  }
  uint64_t v49 = *(void *)(v3 + 344);
  if (v49)
  {
    if (!*(unsigned char *)(v3 + 302))
    {
      if (*(void *)(v4 + 816) || (int v50 = *(_DWORD *)(v49 + 44) - 1, (*(_DWORD *)(v49 + 44) = v50) == 0)) {
        sub_1B0D26BF8((void *)v4, (void *)v49);
      }
    }
  }
  uint64_t v51 = *(void *)(v3 + 360);
  if (v51 && *(unsigned __int8 *)(v3 + 302) <= 1u) {
    sub_1B0C8AF78((void *)v4, v51);
  }
  unsigned int v52 = *(void **)(v3 + 320);
  if (v52) {
    sub_1B0D15C20((void *)v4, v52);
  }
  *(void *)(v4 + 344) = v7;
  return v45;
}

uint64_t sub_1B0C7FC94(uint64_t a1)
{
  if ((unint64_t)(a1 - 2147483392) < 0xFFFFFFFF80000101) {
    return 0;
  }
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40();
    }
    uint64_t v3 = unk_1EB21CA00(a1);
    uint64_t v4 = v3;
    if (qword_1EB220180 < a1) {
      qword_1EB220180 = a1;
    }
    if (*((uint64_t *)&xmmword_1EB2201B0 + 1) >= 1)
    {
      if (qword_1EB220108 >= *((void *)&xmmword_1EB2201B0 + 1) - (int)v3)
      {
        dword_1EB2201C8 = 1;
        if ((void)xmmword_1EB2201B0)
        {
          xmmword_1EB21CA50();
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40();
          }
        }
        if (qword_1EB2201C0 && qword_1EB220108 >= qword_1EB2201C0 - (int)v4)
        {
          uint64_t v1 = 0;
          if (!(void)xmmword_1EB2201B0) {
            return v1;
          }
          goto LABEL_25;
        }
      }
      else
      {
        dword_1EB2201C8 = 0;
      }
    }
    uint64_t v7 = qword_1EB21C9E0(v4);
    uint64_t v1 = v7;
    if (v7)
    {
      uint64_t v8 = qword_1EB220108 + (int)off_1EB21C9F8(v7);
      qword_1EB220108 = v8;
      if (v8 > qword_1EB220158) {
        qword_1EB220158 = v8;
      }
      uint64_t v9 = qword_1EB220150;
      uint64_t v10 = ++qword_1EB220150;
      if (v9 >= qword_1EB2201A0) {
        qword_1EB2201A0 = v10;
      }
    }
    if (!(void)xmmword_1EB2201B0) {
      return v1;
    }
LABEL_25:
    xmmword_1EB21CA50();
    return v1;
  }
  int v5 = (uint64_t (*)(void))qword_1EB21C9E0;

  return v5();
}

uint64_t sub_1B0C7FE7C(unsigned __int8 *a1, int *a2)
{
  int v2 = *a1;
  uint64_t v3 = 1;
  switch(*a1)
  {
    case 0u:
      uint64_t i = 0;
      int v22 = 184;
      goto LABEL_107;
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
    case 0x20u:
      uint64_t i = 0;
      do
        char v18 = byte_1B0DE196D[a1[++i]];
      while ((v18 & 1) != 0);
      goto LABEL_36;
    case 0x21u:
      if (a1[1] == 61) {
        goto LABEL_67;
      }
      goto LABEL_68;
    case 0x22u:
    case 0x27u:
    case 0x60u:
      int v20 = a1[1];
      if (!a1[1])
      {
        uint64_t v21 = 1;
LABEL_126:
        *a2 = 184;
        return v21;
      }
      LODWORD(i) = 1;
      while (1)
      {
        if (v20 == v2)
        {
          uint64_t i = (int)i + 1;
          if (a1[i] != v2) {
            break;
          }
        }
        uint64_t v21 = (int)i + 1;
        int v20 = a1[v21];
        LODWORD(i) = i + 1;
        if (!a1[v21]) {
          goto LABEL_126;
        }
      }
      if (v2 != 39) {
        goto LABEL_106;
      }
      int v22 = 117;
      goto LABEL_107;
    case 0x23u:
    case 0x24u:
    case 0x3Au:
    case 0x40u:
      *a2 = 156;
      int v4 = a1[1];
      if (!a1[1])
      {
        uint64_t v6 = 1;
LABEL_109:
        *a2 = 184;
        return v6;
      }
      int v5 = 0;
      uint64_t v6 = 1;
      while (2)
      {
        if ((byte_1B0DE196D[v4] & 0x46) != 0)
        {
          ++v5;
          LODWORD(v7) = v6;
LABEL_5:
          uint64_t v6 = (int)v7 + 1;
          int v4 = a1[v6];
          if (!a1[v6]) {
            goto LABEL_11;
          }
          continue;
        }
        break;
      }
      if (v4 != 40 || v5 < 1)
      {
        if (v4 != 58 || (uint64_t v7 = (int)v6 + 1, a1[v7] != 58))
        {
LABEL_11:
          uint64_t i = v6;
          if (v5) {
            return i;
          }
          goto LABEL_109;
        }
        goto LABEL_5;
      }
      uint64_t i = (v6 + 1);
      uint64_t v48 = &a1[(int)v6 + 1];
      while (1)
      {
        uint64_t v49 = i;
        unsigned int v51 = *v48++;
        uint64_t v50 = v51;
        if (!v51) {
          break;
        }
        uint64_t i = (i + 1);
        if v50 == 41 || (byte_1B0DE196D[v50])
        {
          if (v50 == 41) {
            return i;
          }
          break;
        }
      }
      *a2 = 184;
      return v49;
    case 0x25u:
      int v28 = 110;
      goto LABEL_136;
    case 0x26u:
      int v28 = 102;
      goto LABEL_136;
    case 0x28u:
      int v28 = 22;
      goto LABEL_136;
    case 0x29u:
      int v28 = 23;
      goto LABEL_136;
    case 0x2Au:
      int v28 = 108;
      goto LABEL_136;
    case 0x2Bu:
      int v28 = 106;
      goto LABEL_136;
    case 0x2Cu:
      int v28 = 25;
      goto LABEL_136;
    case 0x2Du:
      int v24 = a1[1];
      if (v24 == 62)
      {
        *a2 = 112;
        if (a1[2] == 62) {
          return 3;
        }
        else {
          return 2;
        }
      }
      if (v24 != 45)
      {
        int v28 = 107;
        goto LABEL_136;
      }
      for (uint64_t i = 2; a1[i] && a1[i] != 10; ++i)
        ;
LABEL_36:
      int v19 = 183;
      goto LABEL_142;
    case 0x2Eu:
      if ((unint64_t)a1[1] - 58 > 0xFFFFFFFFFFFFFFF5) {
        goto LABEL_85;
      }
      int v28 = 141;
      goto LABEL_136;
    case 0x2Fu:
      if (a1[1] != 42 || !a1[2])
      {
        int v28 = 109;
        goto LABEL_136;
      }
      int v29 = a1[3];
      if (a1[2] == 42 && v29 == 47)
      {
        uint64_t i = 4;
        int v22 = 183;
        goto LABEL_107;
      }
      uint64_t v53 = 0;
      while (v29)
      {
        int v54 = a1[v53++ + 4];
        BOOL v12 = v29 == 42;
        int v29 = v54;
        if (v12)
        {
          int v29 = v54;
          if (v54 == 47)
          {
            uint64_t i = (v53 + 4);
            int v22 = 183;
LABEL_107:
            *a2 = v22;
            return i;
          }
        }
      }
      uint64_t i = (v53 + 3);
      int v22 = 183;
      goto LABEL_107;
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
LABEL_85:
      *a2 = 155;
      if (*a1 == 48 && (a1[1] | 0x20) == 0x78 && (byte_1B0DE196D[a1[2]] & 8) != 0)
      {
        uint64_t v46 = 3;
        do
          char v47 = byte_1B0DE196D[a1[v46++]];
        while ((v47 & 8) != 0);
        return (v46 - 1);
      }
      uint64_t v30 = 0;
      do
        uint64_t v31 = a1[v30++];
      while ((unint64_t)(v31 - 58) > 0xFFFFFFFFFFFFFFF5);
      if (v31 == 46)
      {
        do
          unint64_t v32 = a1[v30++] - 58;
        while (v32 > 0xFFFFFFFFFFFFFFF5);
        *a2 = 153;
      }
      uint64_t v33 = v30 - 1;
      uint64_t i = (int)v33;
      int v34 = a1[(int)v33];
      if ((v34 | 0x20) != 0x65) {
        goto LABEL_120;
      }
      uint64_t v35 = v33 << 32;
      uint64_t v36 = a1[((v33 << 32) + 0x100000000) >> 32];
      if ((unint64_t)(v36 - 58) >= 0xFFFFFFFFFFFFFFF6)
      {
        uint64_t v37 = (v35 + 0x200000000) >> 32;
      }
      else
      {
        if (v36 != 45 && v36 != 43) {
          goto LABEL_120;
        }
        uint64_t v37 = (v35 + 0x200000000) >> 32;
        if ((unint64_t)a1[v37] - 58 < 0xFFFFFFFFFFFFFFF6) {
          goto LABEL_120;
        }
      }
      uint64_t v41 = (v37 << 32) - 0x100000000;
      do
      {
        unint64_t v42 = a1[v37++] - 58;
        v41 += 0x100000000;
      }
      while (v42 > 0xFFFFFFFFFFFFFFF5);
      *a2 = 153;
      uint64_t i = v41 >> 32;
      int v34 = a1[v41 >> 32];
      uint64_t v33 = v37 - 1;
LABEL_120:
      if ((byte_1B0DE196D[v34] & 0x46) == 0) {
        return v33;
      }
      int v43 = &a1[i + 1];
      do
      {
        *a2 = 184;
        int v44 = *v43++;
        uint64_t i = (i + 1);
      }
      while ((byte_1B0DE196D[v44] & 0x46) != 0);
      return i;
    case 0x3Bu:
      uint64_t i = 1;
      *a2 = 1;
      return i;
    case 0x3Cu:
      int v26 = a1[1];
      switch(v26)
      {
        case '<':
          int v23 = 104;
          goto LABEL_134;
        case '>':
LABEL_67:
          int v23 = 52;
          goto LABEL_134;
        case '=':
          int v23 = 55;
          goto LABEL_134;
      }
      int v28 = 56;
      goto LABEL_136;
    case 0x3Du:
      *a2 = 53;
      if (a1[1] == 61) {
        return 2;
      }
      else {
        return 1;
      }
    case 0x3Eu:
      int v27 = a1[1];
      if (v27 == 62)
      {
        int v23 = 105;
        goto LABEL_134;
      }
      if (v27 == 61)
      {
        int v23 = 57;
        goto LABEL_134;
      }
      int v28 = 54;
      goto LABEL_136;
    case 0x3Fu:
      uint64_t i = 0;
      *a2 = 156;
      do
        unint64_t v17 = a1[++i] - 58;
      while (v17 >= 0xFFFFFFFFFFFFFFF6);
      return i;
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x61u:
    case 0x62u:
    case 0x63u:
    case 0x64u:
    case 0x65u:
    case 0x66u:
    case 0x67u:
    case 0x68u:
    case 0x69u:
    case 0x6Au:
    case 0x6Bu:
    case 0x6Cu:
    case 0x6Du:
    case 0x6Eu:
    case 0x6Fu:
    case 0x70u:
    case 0x71u:
    case 0x72u:
    case 0x73u:
    case 0x74u:
    case 0x75u:
    case 0x76u:
    case 0x77u:
      if (byte_1B0DE22E8[a1[1]] > 2u) {
        goto LABEL_103;
      }
      uint64_t v14 = 0x200000000;
      uint64_t v15 = 2;
      do
      {
        uint64_t v16 = a1[v15++];
        v14 += 0x100000000;
      }
      while (byte_1B0DE22E8[v16] < 3u);
      if ((byte_1B0DE196D[v16] & 0x46) != 0)
      {
        uint64_t v3 = v14 >> 32;
        goto LABEL_104;
      }
      uint64_t i = (v15 - 1);
      *a2 = 59;
      sub_1B0D2539C(a1, i, a2);
      return i;
    case 0x58u:
    case 0x78u:
      if (a1[1] != 39) {
        goto LABEL_103;
      }
      *a2 = 154;
      uint64_t v9 = 2;
      do
        uint64_t v10 = a1[v9++];
      while ((byte_1B0DE196D[v10] & 8) != 0);
      uint64_t v11 = v9 - 1;
      BOOL v12 = v10 == 39 && (v11 & 1) == 0;
      if (!v12)
      {
        *a2 = 184;
        for (int j = a1[v11]; a1[v11]; int j = a1[v11])
        {
          if (j == 39) {
            break;
          }
          ++v11;
        }
      }
      if (a1[(int)v11]) {
        return (v11 + 1);
      }
      else {
        return v11;
      }
    case 0x59u:
    case 0x5Au:
    case 0x5Fu:
    case 0x79u:
    case 0x7Au:
    case 0x80u:
    case 0x81u:
    case 0x82u:
    case 0x83u:
    case 0x84u:
    case 0x85u:
    case 0x86u:
    case 0x87u:
    case 0x88u:
    case 0x89u:
    case 0x8Au:
    case 0x8Bu:
    case 0x8Cu:
    case 0x8Du:
    case 0x8Eu:
    case 0x8Fu:
    case 0x90u:
    case 0x91u:
    case 0x92u:
    case 0x93u:
    case 0x94u:
    case 0x95u:
    case 0x96u:
    case 0x97u:
    case 0x98u:
    case 0x99u:
    case 0x9Au:
    case 0x9Bu:
    case 0x9Cu:
    case 0x9Du:
    case 0x9Eu:
    case 0x9Fu:
    case 0xA0u:
    case 0xA1u:
    case 0xA2u:
    case 0xA3u:
    case 0xA4u:
    case 0xA5u:
    case 0xA6u:
    case 0xA7u:
    case 0xA8u:
    case 0xA9u:
    case 0xAAu:
    case 0xABu:
    case 0xACu:
    case 0xADu:
    case 0xAEu:
    case 0xAFu:
    case 0xB0u:
    case 0xB1u:
    case 0xB2u:
    case 0xB3u:
    case 0xB4u:
    case 0xB5u:
    case 0xB6u:
    case 0xB7u:
    case 0xB8u:
    case 0xB9u:
    case 0xBAu:
    case 0xBBu:
    case 0xBCu:
    case 0xBDu:
    case 0xBEu:
    case 0xBFu:
    case 0xC0u:
    case 0xC1u:
    case 0xC2u:
    case 0xC3u:
    case 0xC4u:
    case 0xC5u:
    case 0xC6u:
    case 0xC7u:
    case 0xC8u:
    case 0xC9u:
    case 0xCAu:
    case 0xCBu:
    case 0xCCu:
    case 0xCDu:
    case 0xCEu:
    case 0xCFu:
    case 0xD0u:
    case 0xD1u:
    case 0xD2u:
    case 0xD3u:
    case 0xD4u:
    case 0xD5u:
    case 0xD6u:
    case 0xD7u:
    case 0xD8u:
    case 0xD9u:
    case 0xDAu:
    case 0xDBu:
    case 0xDCu:
    case 0xDDu:
    case 0xDEu:
    case 0xDFu:
    case 0xE0u:
    case 0xE1u:
    case 0xE2u:
    case 0xE3u:
    case 0xE4u:
    case 0xE5u:
    case 0xE6u:
    case 0xE7u:
    case 0xE8u:
    case 0xE9u:
    case 0xEAu:
    case 0xEBu:
    case 0xECu:
    case 0xEDu:
    case 0xEEu:
    case 0xF0u:
    case 0xF1u:
    case 0xF2u:
    case 0xF3u:
    case 0xF4u:
    case 0xF5u:
    case 0xF6u:
    case 0xF7u:
    case 0xF8u:
    case 0xF9u:
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
    case 0xFFu:
      goto LABEL_104;
    case 0x5Bu:
      if (v2 == 93)
      {
        int v19 = 59;
        uint64_t i = 1;
        goto LABEL_142;
      }
      uint64_t i = 1;
      while (1)
      {
        int v40 = a1[i];
        if (!a1[i]) {
          break;
        }
        ++i;
        if (v40 == 93)
        {
          int v19 = 59;
LABEL_142:
          *a2 = v19;
          return i;
        }
      }
      int v19 = 184;
      goto LABEL_142;
    case 0x7Cu:
      if (a1[1] == 124)
      {
        int v23 = 111;
LABEL_134:
        *a2 = v23;
        return 2;
      }
      else
      {
        int v28 = 103;
LABEL_136:
        *a2 = v28;
        return 1;
      }
    case 0x7Eu:
      int v28 = 114;
      goto LABEL_136;
    case 0xEFu:
      if (a1[1] == 187 && a1[2] == 191)
      {
        *a2 = 183;
        return 3;
      }
LABEL_103:
      uint64_t v3 = 1;
LABEL_104:
      LODWORD(i) = v3 - 1;
      __int16 v38 = &a1[v3];
      do
      {
        int v39 = *v38++;
        uint64_t i = (i + 1);
      }
      while ((byte_1B0DE196D[v39] & 0x46) != 0);
LABEL_106:
      int v22 = 59;
      goto LABEL_107;
    default:
LABEL_68:
      int v28 = 184;
      goto LABEL_136;
  }
}

uint64_t sub_1B0C80580(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a2;
  uint64_t v10 = *a1;
  switch((int)a2)
  {
    case 0:
      if (!a5[41]) {
        *((unsigned char *)a5 + 301) = 1;
      }
      goto LABEL_445;
    case 1:
      if (!a5[41]) {
        *((unsigned char *)a5 + 301) = 2;
      }
      goto LABEL_445;
    case 2:
      sub_1B0C8A15C((uint64_t)a5, a2, a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 3:
      sub_1B0CB6B0C((uint64_t *)a5, *(unsigned int *)(v10 - 16), a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 4:
      *(_DWORD *)(v10 + 32) = 7;
      goto LABEL_445;
    case 5:
    case 6:
    case 7:
    case 89:
    case 91:
    case 319:
      *(_DWORD *)(v10 + 8) = *(unsigned __int16 *)(v10 + 2);
      goto LABEL_445;
    case 8:
    case 9:
      sub_1B0D28988((uint64_t *)a5, *(unsigned __int16 *)(v10 - 22), a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 10:
      sub_1B0D28AD8((uint64_t *)a5, 0, v10 + 8);
      goto LABEL_445;
    case 11:
      sub_1B0D28AD8((uint64_t *)a5, 1, v10 + 8);
      goto LABEL_445;
    case 12:
      sub_1B0D28AD8((uint64_t *)a5, 2, v10 + 8);
      goto LABEL_445;
    case 13:
      sub_1B0C88550((uint64_t)a5, (_OWORD *)(v10 - 16), v10 + 8, *(unsigned int *)(v10 - 88), 0, 0, *(unsigned int *)(v10 - 40), a8, v257);
      goto LABEL_445;
    case 14:
      uint64_t v24 = (uint64_t)*a5;
      ++*((unsigned char *)a5 + 36);
      ++*(_DWORD *)(v24 + 432);
      *(_WORD *)(v24 + 436) = 0;
      goto LABEL_445;
    case 15:
    case 18:
    case 21:
    case 47:
    case 49:
    case 62:
    case 72:
    case 81:
    case 98:
    case 242:
      *(_DWORD *)(v10 + 32) = 0;
      goto LABEL_445;
    case 16:
      *(_DWORD *)(v10 - 40) = 1;
      goto LABEL_445;
    case 17:
      *(_DWORD *)(v10 + 8) = *((unsigned char *)*a5 + 197) == 0;
      goto LABEL_445;
    case 19:
      sub_1B0C8958C((uint64_t)a5, (void *)(v10 - 40), v10 - 16, *(unsigned int *)(v10 + 8), 0, a6, a7, a8, v257);
      goto LABEL_445;
    case 20:
      sub_1B0C8958C((uint64_t)a5, 0, 0, 0, *(void *)(v10 + 8), a6, a7, a8, v257);
      uint64_t v25 = *(void *)(v10 + 8);
      if (v25) {
        goto LABEL_111;
      }
      goto LABEL_445;
    case 22:
      *(_DWORD *)(v10 - 40) |= *(_DWORD *)(v10 + 8);
      goto LABEL_445;
    case 23:
      int v26 = *(_DWORD *)(v10 + 16);
      if (v26 != 5) {
        goto LABEL_54;
      }
      if (sqlite3_strnicmp(*(const char **)(v10 + 8), "rowid", 5))
      {
        int v26 = *(_DWORD *)(v10 + 16);
LABEL_54:
        *(_DWORD *)(v10 - 16) = 0;
        sub_1B0CEF2BC((uint64_t)a5, "unknown table option: %.*s", a3, a4, (uint64_t)a5, a6, a7, a8, v26);
      }
      else
      {
        *(_DWORD *)(v10 - 16) = 640;
      }
      goto LABEL_445;
    case 24:
      int v27 = *(_DWORD *)(v10 + 16);
      if (v27 != 6) {
        goto LABEL_58;
      }
      if (sqlite3_strnicmp(*(const char **)(v10 + 8), "strict", 6))
      {
        int v27 = *(_DWORD *)(v10 + 16);
LABEL_58:
        sub_1B0CEF2BC((uint64_t)a5, "unknown table option: %.*s", a3, a4, (uint64_t)a5, a6, a7, a8, v27);
        *(_DWORD *)(v10 + 8) = 0;
      }
      else
      {
        *(_DWORD *)(v10 + 8) = 0x10000;
      }
      goto LABEL_445;
    case 25:
      sub_1B0C88C98((uint64_t)a5, *(unsigned __int8 **)(v10 - 16), *(void *)(v10 - 8), *(unsigned __int8 **)(v10 + 8), *(void *)(v10 + 16), a6, a7, a8);
      goto LABEL_445;
    case 26:
    case 65:
    case 104:
      *(_DWORD *)(v10 + 40) = 0;
      *(void *)(v10 + 32) = 0;
      goto LABEL_445;
    case 27:
      *(_DWORD *)(v10 - 56) = *(_DWORD *)(v10 + 8) + *(_DWORD *)(v10 + 16) - *(_DWORD *)(v10 - 64);
      goto LABEL_445;
    case 28:
      *(_DWORD *)(v10 - 104) = *(_DWORD *)(v10 + 8) + *(_DWORD *)(v10 + 16) - *(_DWORD *)(v10 - 112);
      goto LABEL_445;
    case 29:
      *(_DWORD *)(v10 - 8) = *(_DWORD *)(v10 + 16) + *(_DWORD *)(v10 + 8) - *(_DWORD *)(v10 - 16);
      goto LABEL_445;
    case 30:
      *(void *)(v10 + 32) = a3;
      goto LABEL_445;
    case 31:
      *(void *)(v10 + 32) = a3;
      *(void *)(v10 + 40) = a4;
      goto LABEL_445;
    case 32:
    case 67:
      *(_OWORD *)(a5 + 13) = *(_OWORD *)(v10 + 8);
      goto LABEL_445;
    case 33:
      int v28 = *(unsigned __int8 **)(v10 + 8);
      uint64_t v29 = *(void *)(v10 - 16);
      uint64_t v30 = v29 + *(unsigned int *)(v10 - 8);
      goto LABEL_70;
    case 34:
      int v28 = *(unsigned __int8 **)(v10 - 16);
      uint64_t v29 = *(void *)(v10 - 40) + 1;
      uint64_t v30 = *(void *)(v10 + 8);
      goto LABEL_70;
    case 35:
      int v28 = *(unsigned __int8 **)(v10 + 8);
      goto LABEL_69;
    case 36:
      int v28 = (unsigned __int8 *)sub_1B0D28CCC((uint64_t *)a5, 173, *(void *)(v10 + 8), 0);
LABEL_69:
      uint64_t v29 = *(void *)(v10 - 40);
      uint64_t v30 = *(void *)(v10 - 16) + *(unsigned int *)(v10 - 8);
LABEL_70:
      sub_1B0CADC68((uint64_t)a5, v28, v29, v30, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 37:
      uint64_t v31 = sub_1B0D28DFC((uint64_t)a5, 117, *(const void **)(v10 + 8), *(void *)(v10 + 16));
      uint64_t v36 = (unsigned __int8 *)v31;
      if (v31) {
        sub_1B0D28F70(v31);
      }
      sub_1B0CADC68((uint64_t)a5, v36, *(void *)(v10 + 8), *(void *)(v10 + 8) + *(unsigned int *)(v10 + 16), v32, v33, v34, v35);
      goto LABEL_445;
    case 38:
      sub_1B0D29028((uint64_t)a5, *(_DWORD *)(v10 + 8));
      goto LABEL_445;
    case 39:
      sub_1B0CAD844((uint64_t)a5, 0, *(unsigned int *)(v10 - 16), *(unsigned int *)(v10 + 8), *(unsigned int *)(v10 - 40), a6, a7, a8);
      goto LABEL_445;
    case 40:
      sub_1B0CAE7F0(a5, 0, 0, 0, 0, *(unsigned int *)(v10 + 8), 0, 0, 0, 0, 1u);
      goto LABEL_445;
    case 41:
      uint64_t v37 = *(unsigned __int8 **)(v10 - 16);
      uint64_t v38 = *(void *)(v10 - 40);
      uint64_t v39 = *(void *)(v10 + 8);
      goto LABEL_100;
    case 42:
      sub_1B0CC32EC(a5, 0, v10 - 40, *(void **)(v10 - 16), *(unsigned int *)(v10 + 8), a6, a7, a8);
      goto LABEL_445;
    case 43:
      int v40 = a5[43];
      if (!v40) {
        goto LABEL_445;
      }
      goto LABEL_102;
    case 44:
      sub_1B0D29218((uint64_t *)a5, v10 + 8);
      goto LABEL_445;
    case 45:
      sub_1B0D293F8((uint64_t)a5, *(unsigned __int8 **)(v10 - 16), 0, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 46:
      sub_1B0D293F8((uint64_t)a5, *(unsigned __int8 **)(v10 - 40), v10 + 8, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 48:
    case 96:
    case 122:
    case 137:
      *(_DWORD *)(v10 + 8) = 1;
      goto LABEL_445;
    case 50:
      *(_DWORD *)(v10 - 16) = *(_DWORD *)(v10 - 16) & ~*(_DWORD *)(v10 + 12) | *(_DWORD *)(v10 + 8);
      goto LABEL_445;
    case 51:
      *(void *)(v10 - 16) = 0;
      goto LABEL_445;
    case 52:
      *(void *)(v10 - 40) = 0;
      goto LABEL_445;
    case 53:
      int v41 = *(_DWORD *)(v10 + 8);
      int v42 = 255;
      goto LABEL_89;
    case 54:
      int v41 = *(_DWORD *)(v10 + 8) << 8;
      int v42 = 65280;
LABEL_89:
      *(_DWORD *)(v10 - 40) = v41;
      *(_DWORD *)(v10 - 36) = v42;
      goto LABEL_445;
    case 55:
      *(_DWORD *)(v10 - 16) = 8;
      goto LABEL_445;
    case 56:
      *(_DWORD *)(v10 - 16) = 9;
      goto LABEL_445;
    case 57:
      *(_DWORD *)(v10 + 8) = 10;
      goto LABEL_445;
    case 58:
      *(_DWORD *)(v10 + 8) = 7;
      goto LABEL_445;
    case 59:
    case 64:
      *(_DWORD *)(v10 - 16) = 0;
      goto LABEL_445;
    case 60:
      *(_DWORD *)(v10 - 40) = 0;
      goto LABEL_445;
    case 61:
    case 76:
    case 171:
      *(_DWORD *)(v10 - 16) = *(_DWORD *)(v10 + 8);
      goto LABEL_445;
    case 63:
    case 80:
    case 140:
    case 215:
    case 218:
    case 243:
      *(_DWORD *)(v10 - 16) = 1;
      goto LABEL_445;
    case 66:
      *((_DWORD *)a5 + 28) = 0;
      goto LABEL_445;
    case 68:
      sub_1B0CAD844((uint64_t)a5, *(unsigned int **)(v10 - 64), *(unsigned int *)(v10 + 8), *(unsigned int *)(v10 - 40), 0, a6, a7, a8);
      goto LABEL_445;
    case 69:
      sub_1B0CAE7F0(a5, 0, 0, 0, *(void *)(v10 - 40), *(unsigned int *)(v10 + 8), 0, 0, 0, 0, 1u);
      goto LABEL_445;
    case 70:
      uint64_t v37 = *(unsigned __int8 **)(v10 - 40);
      uint64_t v38 = *(void *)(v10 - 64);
      uint64_t v39 = *(void *)(v10 - 16);
LABEL_100:
      sub_1B0D290A8((uint64_t)a5, v37, v38, v39);
      goto LABEL_445;
    case 71:
      sub_1B0CC32EC(a5, *(void **)(v10 - 136), v10 - 64, *(void **)(v10 - 40), *(unsigned int *)(v10 - 16), a6, a7, a8);
      int v40 = a5[43];
      if (v40)
      {
LABEL_102:
        if (!*((unsigned char *)v40 + 63))
        {
          uint64_t v43 = v40[9];
          if (v43) {
            *(unsigned char *)(v43 + 44) = *(_DWORD *)(v10 + 8);
          }
        }
      }
      goto LABEL_445;
    case 73:
    case 75:
      *(_DWORD *)(v10 + 32) = 11;
      goto LABEL_445;
    case 74:
      *(_DWORD *)(v10 - 40) = *(_DWORD *)(v10 + 8);
      goto LABEL_445;
    case 77:
      *(_DWORD *)(v10 + 8) = 4;
      goto LABEL_445;
    case 78:
    case 172:
      *(_DWORD *)(v10 + 8) = 5;
      goto LABEL_445;
    case 79:
      sub_1B0CDB5C4(a5, *(void *)(v10 + 8), 0, *(_DWORD *)(v10 - 16), (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 82:
      sub_1B0D29740((uint64_t)a5, (void *)(v10 - 184), (_OWORD *)(v10 - 88), v10 - 64, *(void **)(v10 - 40), *(void *)(v10 + 8), *(unsigned int *)(v10 - 160), *(unsigned int *)(v10 - 112));
      goto LABEL_445;
    case 83:
      sub_1B0CDB5C4(a5, *(void *)(v10 + 8), 1, *(_DWORD *)(v10 - 16), (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 84:
      uint64_t v259 = 0;
      memset(v258, 0, sizeof(v258));
      LOBYTE(v258[0]) = 9;
      sub_1B0C9110C(a5, *(void *)(v10 + 8), (uint64_t)v258, a4, (uint64_t)a5, a6, a7, a8);
      uint64_t v25 = *(void *)(v10 + 8);
      if (v25) {
LABEL_111:
      }
        sub_1B0CA0FA8(*a5, v25, 1);
      goto LABEL_445;
    case 85:
      uint64_t v44 = *(void *)(v10 + 8);
      sub_1B0D29AC8(a5, v44, *(void **)(v10 - 16), a4, (uint64_t)a5, a6, a7, a8);
      *(void *)(v10 - 40) = v44;
      goto LABEL_445;
    case 86:
      uint64_t v45 = *(void *)(v10 + 8);
      sub_1B0D29AC8(a5, v45, *(void **)(v10 - 16), a4, (uint64_t)a5, a6, a7, a8);
      *(void *)(v10 - 64) = v45;
      goto LABEL_445;
    case 87:
      uint64_t v46 = *(void *)(v10 + 8);
      if (v46) {
        sub_1B0D29B0C((uint64_t)a5, v46, a3, a4, (uint64_t)a5, a6, a7, a8, v257);
      }
      goto LABEL_445;
    case 88:
      char v47 = *(_OWORD **)(v10 + 8);
      uint64_t v48 = *(void *)(v10 - 40);
      if (v47
        && (!*((void *)v47 + 10)
         || (v258[0] = 0uLL,
             sub_1B0D29B0C((uint64_t)a5, (uint64_t)v47, a3, a4, (uint64_t)a5, a6, a7, a8, v257),
             uint64_t v50 = sub_1B0C90794((uint64_t)a5, 0, 0, 0, (uint64_t)v258, (uint64_t)v47, 0, v49),
             (char v47 = sub_1B0C90F4C(a5, 0, v50, 0, 0, 0, 0, 0, 0)) != 0)))
      {
        *(unsigned char *)char v47 = *(_DWORD *)(v10 - 16);
        *((void *)v47 + 10) = v48;
        if (v48) {
          *(_DWORD *)(v48 + 4) &= ~0x400u;
        }
        *((_DWORD *)v47 + 1) &= ~0x400u;
        if (*(_DWORD *)(v10 - 16) != 135)
        {
          *((unsigned char *)a5 + 34) = 1;
          *(void *)(v10 - 40) = v47;
          goto LABEL_445;
        }
      }
      else
      {
        if (v48) {
          sub_1B0CA0FA8(*a5, v48, 1);
        }
        char v47 = 0;
      }
      *(void *)(v10 - 40) = v47;
      goto LABEL_445;
    case 90:
      *(_DWORD *)(v10 - 16) = 135;
      goto LABEL_445;
    case 92:
      *(void *)(v10 - 184) = sub_1B0C90F4C(a5, *(void **)(v10 - 136), *(_OWORD **)(v10 - 112), *(void *)(v10 - 88), *(void *)(v10 - 64), *(void *)(v10 - 40), *(void *)(v10 - 16), *(_DWORD *)(v10 - 160), *(void *)(v10 + 8));
      goto LABEL_445;
    case 93:
      unsigned int v51 = sub_1B0C90F4C(a5, *(void **)(v10 - 160), *(_OWORD **)(v10 - 136), *(void *)(v10 - 112), *(void *)(v10 - 88), *(void *)(v10 - 64), *(void *)(v10 - 16), *(_DWORD *)(v10 - 184), *(void *)(v10 + 8));
      *(void *)(v10 - 208) = v51;
      if (v51)
      {
        *((void *)v51 + 15) = *(void *)(v10 - 40);
      }
      else
      {
        v214 = *(void **)(v10 - 40);
        if (v214)
        {
          v215 = *a5;
          do
          {
            v216 = (void *)v214[8];
            sub_1B0D1E054(v215, v214);
            v214 = v216;
          }
          while (v216);
        }
      }
      goto LABEL_445;
    case 94:
      *(void *)(v10 - 64) = sub_1B0C90F4C(a5, *(void **)(v10 - 16), 0, 0, 0, 0, 0, 512, 0);
      goto LABEL_445;
    case 95:
      uint64_t v52 = *(void *)(v10 - 88);
      uint64_t v53 = (uint64_t)sub_1B0C90F4C(a5, *(void **)(v10 - 16), 0, 0, 0, 0, 0, 1536, 0);
      if (v52) {
        *(_DWORD *)(v52 + 4) &= ~0x400u;
      }
      if (v53)
      {
        *(unsigned char *)uint64_t v53 = -121;
        *(void *)(v53 + 80) = v52;
        goto LABEL_444;
      }
      *(void *)(v10 - 88) = v52;
      goto LABEL_445;
    case 97:
      *(_DWORD *)(v10 + 8) = 2;
      goto LABEL_445;
    case 99:
    case 105:
    case 108:
    case 132:
    case 142:
    case 230:
    case 233:
    case 238:
      *(void *)(v10 + 32) = 0;
      goto LABEL_445;
    case 100:
      int v54 = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 88), *(unsigned __int8 **)(v10 - 40));
      *(void *)(v10 - 88) = v54;
      if (*(_DWORD *)(v10 + 16))
      {
        sub_1B0D29C34((uint64_t)a5, v54, v10 + 8, 1);
        int v54 = *(int **)(v10 - 88);
      }
      sub_1B0D29D94((uint64_t *)a5, v54, *(unsigned __int8 **)(v10 - 64), *(void *)(v10 - 16));
      goto LABEL_445;
    case 101:
      uint64_t v55 = (uint64_t)*a5;
      v258[0] = 0uLL;
      uint64_t v56 = sub_1B0C904D8(v55, 180, (uint64_t)v258, 0);
      if (v56 && (*(unsigned char *)(v56 + 4) & 3) == 0) {
        *(_DWORD *)(v56 + 56) = *(_DWORD *)(v10 + 8) - *((_DWORD *)a5 + 84);
      }
      *(void *)(v10 - 40) = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 40), (unsigned __int8 *)v56);
      goto LABEL_445;
    case 102:
      uint64_t v57 = sub_1B0D28CCC((uint64_t *)a5, 180, 0, 0);
      uint64_t v58 = v57;
      if (v57 && (*(unsigned char *)(v57 + 4) & 3) == 0) {
        *(_DWORD *)(v57 + 56) = *(_DWORD *)(v10 + 8) - *((_DWORD *)a5 + 84);
      }
      uint64_t v59 = sub_1B0D28DFC((uint64_t)a5, 59, *(const void **)(v10 - 40), *(void *)(v10 - 32));
      uint64_t v60 = (unsigned __int8 *)sub_1B0D28CCC((uint64_t *)a5, 141, v59, v58);
      uint64_t v53 = (uint64_t)sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 88), v60);
      goto LABEL_444;
    case 103:
    case 115:
    case 254:
    case 255:
      *(_OWORD *)(v10 - 16) = *(_OWORD *)(v10 + 8);
      goto LABEL_445;
    case 106:
      uint64_t v61 = *(unsigned int **)(v10 + 8);
      *(void *)(v10 - 16) = v61;
      sub_1B0D29EDC(v61);
      goto LABEL_445;
    case 107:
      int v62 = *(int **)(v10 - 16);
      if (v62 && *v62 >= 1) {
        LOBYTE(v62[26 * (*v62 - 1) + 17]) = *(_DWORD *)(v10 + 8);
      }
      goto LABEL_445;
    case 109:
      uint64_t v53 = (uint64_t)sub_1B0C90794((uint64_t)a5, *(int **)(v10 - 88), v10 - 64, v10 - 40, v10 - 16, 0, v10 + 8, a8);
      goto LABEL_444;
    case 110:
      uint64_t v63 = sub_1B0C90794((uint64_t)a5, *(int **)(v10 - 112), v10 - 88, v10 - 64, v10 - 40, 0, v10 + 8, a8);
      *(void *)(v10 - 112) = v63;
      sub_1B0D29FE8((uint64_t *)a5, v63, v10 - 16);
      goto LABEL_445;
    case 111:
      uint64_t v64 = sub_1B0C90794((uint64_t)a5, *(int **)(v10 - 160), v10 - 136, v10 - 112, v10 - 16, 0, v10 + 8, a8);
      *(void *)(v10 - 160) = v64;
      sub_1B0D2A100(a5, v64, *(void **)(v10 - 64));
      goto LABEL_445;
    case 112:
      long long v65 = *(int **)(v10 - 112);
      uint64_t v66 = v10 - 16;
      long long v67 = *(_OWORD **)(v10 - 64);
      goto LABEL_390;
    case 113:
      long long v68 = *(int **)(v10 - 112);
      if (v68 || *(_DWORD *)(v10 - 8) || *(void *)(v10 + 8) || *(void *)(v10 + 16))
      {
        long long v69 = *(unsigned int **)(v10 - 64);
        if (v69 && *v69 == 1)
        {
          long long v70 = sub_1B0C90794((uint64_t)a5, v68, 0, 0, v10 - 16, 0, v10 + 8, a8);
          *(void *)(v10 - 112) = v70;
          if (v70)
          {
            uint64_t v71 = *(void *)(v10 - 64);
            uint64_t v72 = *v70 - 1;
            long long v73 = &v70[26 * v72];
            *((_OWORD *)v73 + 1) = *(_OWORD *)(v71 + 16);
            uint64_t v74 = *(void *)(v71 + 48);
            *((void *)v73 + 6) = v74;
            if (v74 && (*(unsigned char *)(v74 + 5) & 8) != 0) {
              *(_WORD *)((char *)&v70[26 * v72 + 17] + 1) |= 0x2000u;
            }
            if ((*(_WORD *)(v71 + 69) & 4) != 0)
            {
              long long v75 = &v70[26 * v72];
              *((void *)v75 + 12) = *(void *)(v71 + 96);
              *(void *)(v71 + 96) = 0;
              *(_WORD *)(v71 + 69) &= ~4u;
              *(_WORD *)((char *)v75 + 69) |= 4u;
            }
            *(void *)(v71 + 48) = 0;
            *(void *)(v71 + 16) = 0;
            *(void *)(v71 + 24) = 0;
          }
          sub_1B0CA115C(*a5, *(void **)(v10 - 64));
        }
        else
        {
          sub_1B0D29EDC(v69);
          long long v67 = sub_1B0C90F4C(a5, 0, *(_OWORD **)(v10 - 64), 0, 0, 0, 0, 2048, 0);
          long long v65 = *(int **)(v10 - 112);
          uint64_t v66 = v10 - 16;
LABEL_390:
          *(void *)(v10 - 112) = sub_1B0C90794((uint64_t)a5, v65, 0, 0, v66, (uint64_t)v67, v10 + 8, a8);
        }
      }
      else
      {
        *(void *)(v10 - 112) = *(void *)(v10 - 64);
      }
      goto LABEL_445;
    case 114:
    case 129:
      *(void *)(v10 + 32) = 0;
      *(_DWORD *)(v10 + 40) = 0;
      goto LABEL_445;
    case 116:
      uint64_t v76 = sub_1B0C90A80((uint64_t *)a5, 0, v10 + 8, 0, (uint64_t)a5, a6, a7, a8);
      uint64_t v77 = v76;
      if (*((unsigned __int8 *)a5 + 302) >= 2u && v76 != 0) {
        sub_1B0D2A138((uint64_t)a5, *(void *)(v76 + 24), (_OWORD *)(v10 + 8));
      }
      *(void *)(v10 + 8) = v77;
      goto LABEL_445;
    case 117:
      uint64_t v79 = sub_1B0C90A80((uint64_t *)a5, 0, v10 - 40, v10 + 8, (uint64_t)a5, a6, a7, a8);
      uint64_t v80 = v79;
      if (*((unsigned __int8 *)a5 + 302) >= 2u && v79 != 0) {
        sub_1B0D2A138((uint64_t)a5, *(void *)(v79 + 24), (_OWORD *)(v10 + 8));
      }
      *(void *)(v10 - 40) = v80;
      goto LABEL_445;
    case 118:
      *(void *)(v10 + 8) = sub_1B0C90A80((uint64_t *)a5, 0, v10 + 8, 0, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 119:
      *(void *)(v10 - 40) = sub_1B0C90A80((uint64_t *)a5, 0, v10 - 40, v10 + 8, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 120:
      uint64_t v82 = sub_1B0C90A80((uint64_t *)a5, 0, v10 - 88, v10 - 40, (uint64_t)a5, a6, a7, a8);
      *(void *)(v10 - 88) = v82;
      if (v82) {
        *(void *)(*(void *)(v10 - 88) + 32) = sub_1B0D2A1BC((uint64_t)*a5, v10 + 8);
      }
      goto LABEL_445;
    case 121:
      uint64_t v83 = sub_1B0C90A80((uint64_t *)a5, 0, v10 - 40, 0, (uint64_t)a5, a6, a7, a8);
      *(void *)(v10 - 40) = v83;
      if (v83) {
        *(void *)(*(void *)(v10 - 40) + 32) = sub_1B0D2A1BC((uint64_t)*a5, v10 + 8);
      }
      goto LABEL_445;
    case 123:
      *(_DWORD *)(v10 - 16) = sub_1B0D2A280((uint64_t)a5, v10 - 16, 0, 0, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 124:
      *(_DWORD *)(v10 - 40) = sub_1B0D2A280((uint64_t)a5, v10 - 40, v10 - 16, 0, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 125:
      *(_DWORD *)(v10 - 64) = sub_1B0D2A280((uint64_t)a5, v10 - 64, v10 - 40, v10 - 16, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 126:
      *(void *)(v10 - 16) = *(void *)(v10 + 8);
      *(void *)(v10 - 8) = 0;
      goto LABEL_445;
    case 127:
      uint64_t v84 = *(void *)(v10 - 16);
      *(void *)(v10 - 64) = 0;
      *(void *)(v10 - 56) = v84;
      goto LABEL_445;
    case 128:
      *(void *)(v10 + 32) = 0;
      *(void *)(v10 + 40) = 0;
      goto LABEL_445;
    case 130:
      *(_OWORD *)(v10 - 40) = *(_OWORD *)(v10 + 8);
      goto LABEL_445;
    case 131:
      *(void *)(v10 - 16) = 0;
      *(_DWORD *)(v10 - 8) = 1;
      goto LABEL_445;
    case 133:
    case 143:
      goto LABEL_363;
    case 134:
      long long v85 = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 88), *(unsigned __int8 **)(v10 - 40));
      *(void *)(v10 - 88) = v85;
      goto LABEL_194;
    case 135:
      long long v85 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 - 40));
      *(void *)(v10 - 40) = v85;
LABEL_194:
      sub_1B0D2A45C(v85, *(_DWORD *)(v10 - 16), *(_DWORD *)(v10 + 8));
      goto LABEL_445;
    case 136:
    case 214:
    case 217:
      *(_DWORD *)(v10 + 8) = 0;
      goto LABEL_445;
    case 138:
    case 141:
      *(_DWORD *)(v10 + 32) = -1;
      goto LABEL_445;
    case 139:
      *(_DWORD *)(v10 - 16) = 0;
      goto LABEL_445;
    case 144:
    case 146:
    case 151:
    case 153:
    case 164:
    case 173:
    case 228:
    case 229:
    case 248:
    case 264:
    case 283:
      *(void *)(v10 + 32) = 0;
      goto LABEL_445;
    case 145:
    case 152:
    case 154:
    case 227:
    case 247:
    case 265:
    case 284:
    case 331:
      goto LABEL_419;
    case 147:
      *(void *)(v10 - 16) = sub_1B0D28CCC((uint64_t *)a5, 148, *(void *)(v10 + 8), 0);
      goto LABEL_445;
    case 148:
      uint64_t v86 = *(void *)(v10 - 40);
      uint64_t v87 = *(void *)(v10 + 8);
      goto LABEL_199;
    case 149:
      uint64_t v86 = *(void *)(v10 + 8);
      uint64_t v87 = *(void *)(v10 - 40);
LABEL_199:
      *(void *)(v10 - 64) = sub_1B0D28CCC((uint64_t *)a5, 148, v86, v87);
      goto LABEL_445;
    case 150:
      sub_1B0D29FE8((uint64_t *)a5, *(int **)(v10 - 88), v10 - 64);
      sub_1B0CCDA04(a5, *(void *)(v10 - 88), *(unsigned __int8 **)(v10 - 40), *(void **)(v10 - 16), *(void *)(v10 + 8), v88, v89, v90);
      goto LABEL_445;
    case 155:
      sub_1B0D2A4AC((uint64_t)a5, *(void **)(v10 + 8), a3, a4, (uint64_t)a5, a6, a7, a8);
      *(void *)(v10 - 16) = 0;
      goto LABEL_445;
    case 156:
      sub_1B0D2A4AC((uint64_t)a5, *(void **)(v10 + 8), a3, a4, (uint64_t)a5, a6, a7, a8);
      *(void *)(v10 - 64) = *(void *)(v10 - 40);
      goto LABEL_445;
    case 157:
      sub_1B0D29FE8((uint64_t *)a5, *(int **)(v10 - 160), v10 - 136);
      char v96 = *(int **)(v10 - 64);
      if (v96)
      {
        if (*v96 >= 2)
        {
          int v97 = sub_1B0C90F4C(a5, 0, v96, 0, 0, 0, 0, 2048, 0);
          v258[0] = 0uLL;
          char v96 = sub_1B0C90794((uint64_t)a5, 0, 0, 0, (uint64_t)v258, (uint64_t)v97, 0, v98);
        }
        *(void *)(v10 - 160) = sub_1B0D2A73C((uint64_t *)a5, *(int **)(v10 - 160), v96, v91, v92, v93, v94, v95);
      }
      uint64_t v99 = *(unsigned int **)(v10 - 88);
      if (v99 && (signed int)*v99 > *((_DWORD *)*a5 + 36))
      {
        sub_1B0CEF2BC((uint64_t)a5, "too many columns in %s", (uint64_t)v99, v91, v92, v93, v94, v95, (char)"set list");
        uint64_t v99 = *(unsigned int **)(v10 - 88);
      }
      sub_1B0CCBA4C((uint64_t)a5, *(void *)(v10 - 160), v99, *(void *)(v10 - 40), *(unsigned int *)(v10 - 184), *(void *)(v10 - 16), *(void *)(v10 + 8), 0);
      goto LABEL_445;
    case 158:
      int v100 = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 88), *(unsigned __int8 **)(v10 + 8));
      *(void *)(v10 - 88) = v100;
      sub_1B0D29C34((uint64_t)a5, v100, v10 - 40, 1);
      goto LABEL_445;
    case 159:
      *(void *)(v10 - 136) = sub_1B0D2A7D8((uint64_t *)a5, *(int **)(v10 - 136), *(void **)(v10 - 64), *(unsigned __int8 **)(v10 + 8), (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 160:
      int v101 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 + 8));
      sub_1B0D29C34((uint64_t)a5, v101, v10 - 40, 1);
      *(void *)(v10 - 40) = v101;
      goto LABEL_445;
    case 161:
      *(void *)(v10 - 88) = sub_1B0D2A7D8((uint64_t *)a5, 0, *(void **)(v10 - 64), *(unsigned __int8 **)(v10 + 8), (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 162:
      sub_1B0CB6EBC((uint64_t)a5, *(void *)(v10 - 64), *(void *)(v10 - 16), *(unsigned int **)(v10 - 40), *(unsigned int *)(v10 - 112), *(void *)(v10 + 8), a7, a8);
      goto LABEL_445;
    case 163:
      sub_1B0CB6EBC((uint64_t)a5, *(void *)(v10 - 88), 0, *(unsigned int **)(v10 - 64), *(unsigned int *)(v10 - 136), 0, a7, a8);
      goto LABEL_445;
    case 165:
      *(void *)(v10 - 16) = 0;
      goto LABEL_218;
    case 166:
      *(void *)(v10 - 256) = sub_1B0D2AA4C(*a5, *(void **)(v10 - 184), *(unsigned __int8 **)(v10 - 136), *(void **)(v10 - 40), *(unsigned __int8 **)(v10 - 16), *(void **)(v10 + 8));
      goto LABEL_445;
    case 167:
      *(void *)(v10 - 184) = sub_1B0D2AA4C(*a5, *(void **)(v10 - 112), *(unsigned __int8 **)(v10 - 64), 0, 0, *(void **)(v10 + 8));
      goto LABEL_445;
    case 168:
      *(void *)(v10 - 88) = sub_1B0D2AA4C(*a5, 0, 0, 0, 0, 0);
      goto LABEL_445;
    case 169:
      *(void *)(v10 - 160) = sub_1B0D2AA4C(*a5, 0, 0, *(void **)(v10 - 40), *(unsigned __int8 **)(v10 - 16), 0);
      goto LABEL_445;
    case 170:
LABEL_218:
      sub_1B0D2A4AC((uint64_t)a5, *(void **)(v10 + 8), a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 174:
    case 177:
    case 234:
    case 239:
      *(void *)(v10 - 40) = *(void *)(v10 - 16);
      goto LABEL_445;
    case 175:
      *(void *)(v10 - 40) = sub_1B0D2AB44((uint64_t)a5, *(void **)(v10 - 40), v10 + 8);
      goto LABEL_445;
    case 176:
      *(void *)(v10 + 8) = sub_1B0D2AB44((uint64_t)a5, 0, v10 + 8);
      goto LABEL_445;
    case 178:
      int v20 = *(const void **)(v10 + 8);
      uint64_t v21 = *(void *)(v10 + 16);
      uint64_t v22 = (uint64_t)a5;
      LOBYTE(v19) = 59;
      goto LABEL_226;
    case 179:
      uint64_t v102 = sub_1B0D28DFC((uint64_t)a5, 59, *(const void **)(v10 - 40), *(void *)(v10 - 32));
      uint64_t v14 = sub_1B0D28DFC((uint64_t)a5, 59, *(const void **)(v10 + 8), *(void *)(v10 + 16));
      uint64_t v15 = (uint64_t *)a5;
      LOBYTE(v12) = -115;
      uint64_t v13 = v102;
      goto LABEL_6;
    case 180:
      uint64_t v103 = sub_1B0D28DFC((uint64_t)a5, 59, *(const void **)(v10 - 88), *(void *)(v10 - 80));
      uint64_t v104 = sub_1B0D28DFC((uint64_t)a5, 59, *(const void **)(v10 - 40), *(void *)(v10 - 32));
      uint64_t v105 = sub_1B0D28DFC((uint64_t)a5, 59, *(const void **)(v10 + 8), *(void *)(v10 + 16));
      uint64_t v106 = sub_1B0D28CCC((uint64_t *)a5, 141, v104, v105);
      if (*((unsigned __int8 *)a5 + 302) < 2u) {
        goto LABEL_429;
      }
      long long v107 = a5[51];
      if (!v107) {
        goto LABEL_429;
      }
      while (*v107 != v103)
      {
        long long v107 = (void *)v107[3];
        if (!v107) {
          goto LABEL_429;
        }
      }
      *long long v107 = 0;
LABEL_429:
      v223 = (uint64_t *)a5;
      char v224 = -115;
      uint64_t v225 = v103;
      goto LABEL_443;
    case 181:
    case 182:
      __int16 v19 = *(_WORD *)(v10 + 2);
      int v20 = *(const void **)(v10 + 8);
      uint64_t v21 = *(void *)(v10 + 16);
      uint64_t v22 = (uint64_t)a5;
LABEL_226:
      *(void *)(v10 + 8) = sub_1B0D28DFC(v22, v19, v20, v21);
      goto LABEL_445;
    case 183:
      long long v108 = (_DWORD *)(v10 + 8);
      uint64_t v109 = sub_1B0C904D8((uint64_t)*a5, 155, v10 + 8, 1);
      if (v109) {
        *(_DWORD *)(v109 + 56) = *v108 - *((_DWORD *)a5 + 84);
      }
      *(void *)long long v108 = v109;
      goto LABEL_445;
    case 184:
      long long v111 = (_OWORD *)(v10 + 8);
      long long v110 = *(unsigned __int8 **)(v10 + 8);
      if (*v110 == 35 && (unint64_t)v110[1] - 58 > 0xFFFFFFFFFFFFFFF5)
      {
        v258[0] = *v111;
        if (*((unsigned char *)a5 + 30))
        {
          uint64_t v222 = sub_1B0D28CCC((uint64_t *)a5, 176, 0, 0);
          *(void *)long long v111 = v222;
          if (v222) {
            sub_1B0D22EF0((unsigned __int8 *)(*(void *)&v258[0] + 1), (_DWORD *)(v222 + 44));
          }
        }
        else
        {
          sub_1B0CEF2BC((uint64_t)a5, "near \"%T\": syntax error", (uint64_t)v110, a4, (uint64_t)a5, a6, a7, a8, (char)v258);
          *(void *)long long v111 = 0;
        }
      }
      else
      {
        uint64_t v112 = *(unsigned int *)(v10 + 16);
        uint64_t v113 = sub_1B0D28DFC((uint64_t)a5, 156, v110, *(void *)(v10 + 16));
        *(void *)(v10 + 8) = v113;
        sub_1B0CC3A9C((uint64_t)a5, v113, v112, v114, v115, v116, v117, v118);
      }
      goto LABEL_445;
    case 185:
      *(void *)(v10 - 40) = sub_1B0D2AD7C((uint64_t *)a5, *(void *)(v10 - 40), v10 + 8, 1);
      goto LABEL_445;
    case 186:
      uint64_t v119 = sub_1B0C904D8((uint64_t)*a5, 36, v10 - 16, 1);
      *(void *)(v10 - 112) = v119;
      sub_1B0C9067C(*a5, v119, *(void *)(v10 - 64), 0);
      goto LABEL_445;
    case 187:
      *(void *)(v10 - 88) = sub_1B0CB0BA8((uint64_t)a5, *(void **)(v10 - 16), (_DWORD *)(v10 - 88), *(_DWORD *)(v10 - 40));
      goto LABEL_445;
    case 188:
      *(void *)(v10 - 64) = sub_1B0CB0BA8((uint64_t)a5, 0, (_DWORD *)(v10 - 64), 0);
      goto LABEL_445;
    case 189:
      uint64_t v120 = sub_1B0CB0BA8((uint64_t)a5, *(void **)(v10 - 40), (_DWORD *)(v10 - 112), *(_DWORD *)(v10 - 64));
      sub_1B0D2ADD0(a5, v120, *(void *)(v10 + 8), v121, v122, v123, v124, v125, v257);
      *(void *)(v10 - 112) = v120;
      goto LABEL_445;
    case 190:
      uint64_t v126 = sub_1B0CB0BA8((uint64_t)a5, 0, (_DWORD *)(v10 - 88), 0);
      sub_1B0D2ADD0(a5, v126, *(void *)(v10 + 8), v127, v128, v129, v130, v131, v257);
      *(void *)(v10 - 88) = v126;
      goto LABEL_445;
    case 191:
      *(void *)(v10 + 8) = sub_1B0CB0BA8((uint64_t)a5, 0, (_DWORD *)(v10 + 8), 0);
      goto LABEL_445;
    case 192:
      v132 = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 64), *(unsigned __int8 **)(v10 - 16));
      uint64_t v133 = sub_1B0D28CCC((uint64_t *)a5, 177, 0, 0);
      *(void *)(v10 - 88) = v133;
      if (v133)
      {
        *(void *)(v133 + 32) = v132;
        if (*v132) {
          *(_DWORD *)(*(void *)(v10 - 88) + 4) |= *(_DWORD *)(*((void *)v132 + 1) + 4) & 0x400208;
        }
      }
      else if (v132)
      {
        sub_1B0D270DC(*a5, v132);
      }
      goto LABEL_445;
    case 193:
      *(void *)(v10 - 40) = sub_1B0D2AE14((uint64_t *)a5, *(void *)(v10 - 40), *(void *)(v10 + 8));
      goto LABEL_445;
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
      __int16 v12 = *(_WORD *)(v10 - 22);
      uint64_t v13 = *(void *)(v10 - 40);
      uint64_t v14 = *(void *)(v10 + 8);
      uint64_t v15 = (uint64_t *)a5;
      goto LABEL_6;
    case 201:
      *(_OWORD *)(v10 - 16) = *(_OWORD *)(v10 + 8);
      *(_DWORD *)(v10 - 8) |= 0x80000000;
      goto LABEL_445;
    case 202:
      int v134 = *(_DWORD *)(v10 - 8);
      *(_DWORD *)(v10 - 8) = v134 & 0x7FFFFFFF;
      uint64_t v135 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 + 8));
      uint64_t v136 = sub_1B0C9074C((uint64_t *)a5, v135, *(unsigned __int8 **)(v10 - 40));
      uint64_t v137 = sub_1B0CB0BA8((uint64_t)a5, v136, (_DWORD *)(v10 - 16), 0);
      *(void *)(v10 - 40) = v137;
      if (v134 < 0)
      {
        uint64_t v137 = sub_1B0D28CCC((uint64_t *)a5, 19, v137, 0);
        *(void *)(v10 - 40) = v137;
      }
      goto LABEL_255;
    case 203:
      int v138 = *(_DWORD *)(v10 - 56);
      *(_DWORD *)(v10 - 56) = v138 & 0x7FFFFFFF;
      uint64_t v139 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 - 40));
      int v140 = sub_1B0C9074C((uint64_t *)a5, v139, *(unsigned __int8 **)(v10 - 88));
      uint64_t v141 = sub_1B0C9074C((uint64_t *)a5, v140, *(unsigned __int8 **)(v10 + 8));
      uint64_t v137 = sub_1B0CB0BA8((uint64_t)a5, v141, (_DWORD *)(v10 - 64), 0);
      *(void *)(v10 - 88) = v137;
      if (v138 < 0)
      {
        uint64_t v137 = sub_1B0D28CCC((uint64_t *)a5, 19, v137, 0);
        *(void *)(v10 - 88) = v137;
      }
LABEL_255:
      if (v137) {
        *(_DWORD *)(v137 + 4) |= 0x100u;
      }
      goto LABEL_445;
    case 204:
      __int16 v23 = *(_WORD *)(v10 + 2);
      uint64_t v142 = *(void *)(v10 - 16);
      goto LABEL_269;
    case 205:
      uint64_t v13 = *(void *)(v10 - 40);
      uint64_t v15 = (uint64_t *)a5;
      LOBYTE(v12) = 51;
      uint64_t v14 = 0;
LABEL_6:
      *(void *)(v10 - 40) = sub_1B0D28CCC(v15, v12, v13, v14);
      goto LABEL_445;
    case 206:
      uint64_t v143 = sub_1B0D28CCC((uint64_t *)a5, 45, *(void *)(v10 - 40), *(void *)(v10 + 8));
      *(void *)(v10 - 40) = v143;
      goto LABEL_262;
    case 207:
      uint64_t v144 = sub_1B0D28CCC((uint64_t *)a5, 171, *(void *)(v10 - 64), *(void *)(v10 + 8));
      *(void *)(v10 - 64) = v144;
      goto LABEL_264;
    case 208:
      uint64_t v143 = sub_1B0D28CCC((uint64_t *)a5, 45, *(void *)(v10 - 112), *(void *)(v10 + 8));
      *(void *)(v10 - 112) = v143;
LABEL_262:
      sub_1B0D2AF88(a5, *(unsigned char **)(v10 + 8), v143, 50);
      goto LABEL_445;
    case 209:
      uint64_t v144 = sub_1B0D28CCC((uint64_t *)a5, 171, *(void *)(v10 - 88), *(void *)(v10 + 8));
      *(void *)(v10 - 88) = v144;
LABEL_264:
      sub_1B0D2AF88(a5, *(unsigned char **)(v10 + 8), v144, 51);
      goto LABEL_445;
    case 210:
    case 211:
      __int16 v23 = *(_WORD *)(v10 - 22);
      goto LABEL_268;
    case 212:
      if (*(_WORD *)(v10 - 22) == 106) {
        LOBYTE(v23) = -82;
      }
      else {
        LOBYTE(v23) = -83;
      }
LABEL_268:
      uint64_t v142 = *(void *)(v10 + 8);
LABEL_269:
      *(void *)(v10 - 16) = sub_1B0D28CCC((uint64_t *)a5, v23, v142, 0);
      goto LABEL_445;
    case 213:
      char v145 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 - 40));
      BOOL v146 = sub_1B0C9074C((uint64_t *)a5, v145, *(unsigned __int8 **)(v10 + 8));
      *(void *)(v10 - 40) = sub_1B0CB0BA8((uint64_t)a5, v146, (_DWORD *)(v10 - 16), 0);
      goto LABEL_445;
    case 216:
      v147 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 - 40));
      v148 = sub_1B0C9074C((uint64_t *)a5, v147, *(unsigned __int8 **)(v10 + 8));
      uint64_t v149 = sub_1B0D28CCC((uint64_t *)a5, 48, *(void *)(v10 - 88), 0);
      *(void *)(v10 - 88) = v149;
      if (v149)
      {
        *(void *)(v149 + 32) = v148;
      }
      else if (v148)
      {
        sub_1B0D270DC(*a5, v148);
      }
      goto LABEL_441;
    case 219:
      uint64_t v150 = *(void *)(v10 - 16);
      if (!v150)
      {
        sub_1B0D2AFE4(a5, *(unsigned __int8 **)(v10 - 88));
        if (*(_DWORD *)(v10 - 64)) {
          v217 = "true";
        }
        else {
          v217 = "false";
        }
        uint64_t v218 = sub_1B0D29E78((uint64_t)*a5, 117, v217);
        *(void *)(v10 - 88) = v218;
        if (v218) {
          sub_1B0D28F70(v218);
        }
        goto LABEL_445;
      }
      if (*(_DWORD *)v150 != 1) {
        goto LABEL_434;
      }
      uint64_t v151 = *(unsigned __int8 **)(v150 + 8);
      if (sub_1B0D2B074((uint64_t)v151))
      {
        uint64_t v152 = *(void *)(v10 - 16);
        if (**(unsigned __int8 **)(v10 - 88) != 177)
        {
          *(void *)(v152 + 8) = 0;
          v153 = *(void **)(v10 - 16);
          if (v153) {
            sub_1B0D270DC(*a5, v153);
          }
          uint64_t v154 = sub_1B0D28CCC((uint64_t *)a5, 174, (uint64_t)v151, 0);
          *(void *)(v10 - 88) = sub_1B0D28CCC((uint64_t *)a5, 53, *(void *)(v10 - 88), v154);
          goto LABEL_441;
        }
      }
      else
      {
        uint64_t v152 = *(void *)(v10 - 16);
      }
      if (*(_DWORD *)v152 == 1 && *v151 == 138)
      {
        uint64_t v226 = sub_1B0D28CCC((uint64_t *)a5, 49, *(void *)(v10 - 88), 0);
        *(void *)(v10 - 88) = v226;
        sub_1B0D2B0D8(a5, v226, *((void *)v151 + 4), v227, v228, v229, v230, v231);
        *((void *)v151 + 4) = 0;
        goto LABEL_438;
      }
LABEL_434:
      uint64_t v232 = sub_1B0D28CCC((uint64_t *)a5, 49, *(void *)(v10 - 88), 0);
      *(void *)(v10 - 88) = v232;
      if (!v232)
      {
LABEL_438:
        v253 = *(void **)(v10 - 16);
        if (v253) {
          sub_1B0D270DC(*a5, v253);
        }
        goto LABEL_441;
      }
      v239 = *(unsigned __int8 **)(v232 + 16);
      if (*v239 == 177)
      {
        v240 = sub_1B0D2B110(a5, **((_DWORD **)v239 + 4), *(int **)(v10 - 16), v234, v235, v236, v237, v238);
        if (v240)
        {
          uint64_t v247 = (uint64_t)v240;
          sub_1B0D29B0C((uint64_t)a5, (uint64_t)v240, v241, v242, v243, v244, v245, v246, v257);
          sub_1B0D2B0D8(a5, *(void *)(v10 - 88), v247, v248, v249, v250, v251, v252);
        }
      }
      else
      {
        *(void *)(v232 + 32) = *(void *)(v10 - 16);
        sub_1B0D2B274(a5, *(void *)(v10 - 88), v233, v234, v235, v236, v237, v238);
      }
LABEL_441:
      if (!*(_DWORD *)(v10 - 64)) {
        goto LABEL_445;
      }
LABEL_442:
      uint64_t v225 = *(void *)(v10 - 88);
      v223 = (uint64_t *)a5;
      char v224 = 19;
      uint64_t v106 = 0;
LABEL_443:
      uint64_t v53 = sub_1B0D28CCC(v223, v224, v225, v106);
LABEL_444:
      *(void *)(v10 - 88) = v53;
LABEL_445:
      uint64_t v254 = word_1B0DE53D6[v8];
      v255 = (unsigned __int16 *)(v10 + 24 * byte_1B0DE2704[v8]);
      uint64_t result = word_1B0DE3EF0[word_1B0DE5886[*v255] + v254];
      v255[12] = result;
      v255 += 12;
      *a1 = (uint64_t)v255;
      v255[1] = v254;
      return result;
    case 220:
      uint64_t v155 = sub_1B0D28CCC((uint64_t *)a5, 138, 0, 0);
      *(void *)(v10 - 40) = v155;
      goto LABEL_291;
    case 221:
      uint64_t v161 = sub_1B0D28CCC((uint64_t *)a5, 49, *(void *)(v10 - 88), 0);
      *(void *)(v10 - 88) = v161;
      uint64_t v167 = *(void *)(v10 - 16);
      long long v168 = a5;
      goto LABEL_288;
    case 222:
      long long v169 = (int *)sub_1B0C90A80((uint64_t *)a5, 0, v10 - 40, v10 - 16, (uint64_t)a5, a6, a7, a8);
      long long v170 = sub_1B0C90F4C(a5, 0, v169, 0, 0, 0, 0, 0, 0);
      int v171 = v170;
      uint64_t v172 = *(void **)(v10 + 8);
      if (v172)
      {
        if (v170) {
          v173 = v169;
        }
        else {
          v173 = 0;
        }
        sub_1B0D2A100(a5, v173, v172);
      }
      uint64_t v161 = sub_1B0D28CCC((uint64_t *)a5, 49, *(void *)(v10 - 88), 0);
      *(void *)(v10 - 88) = v161;
      long long v168 = a5;
      uint64_t v167 = (uint64_t)v171;
LABEL_288:
      sub_1B0D2B0D8(v168, v161, v167, v162, v163, v164, v165, v166);
      if (!*(_DWORD *)(v10 - 64)) {
        goto LABEL_445;
      }
      goto LABEL_442;
    case 223:
      uint64_t v155 = sub_1B0D28CCC((uint64_t *)a5, 20, 0, 0);
      *(void *)(v10 - 64) = v155;
LABEL_291:
      sub_1B0D2B0D8(a5, v155, *(void *)(v10 - 16), v156, v157, v158, v159, v160);
      goto LABEL_445;
    case 224:
      uint64_t v174 = sub_1B0D28CCC((uint64_t *)a5, 157, *(void *)(v10 - 64), 0);
      *(void *)(v10 - 88) = v174;
      if (v174)
      {
        v180 = *(unsigned __int8 **)(v10 - 16);
        v181 = *(int **)(v10 - 40);
        if (v180)
        {
          v181 = sub_1B0C9074C((uint64_t *)a5, v181, v180);
          uint64_t v174 = *(void *)(v10 - 88);
        }
        *(void *)(v174 + 32) = v181;
        sub_1B0D2B274(a5, *(void *)(v10 - 88), (uint64_t)v180, v175, v176, v177, v178, v179);
      }
      else
      {
        v219 = *(void **)(v10 - 40);
        if (v219) {
          sub_1B0D270DC(*a5, v219);
        }
        v220 = *(unsigned __int8 **)(v10 - 16);
        if (v220) {
          sub_1B0D1DF88(*a5, v220);
        }
      }
      goto LABEL_445;
    case 225:
      v182 = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 88), *(unsigned __int8 **)(v10 - 40));
      *(void *)(v10 - 88) = v182;
      *(void *)(v10 - 88) = sub_1B0C9074C((uint64_t *)a5, v182, *(unsigned __int8 **)(v10 + 8));
      goto LABEL_445;
    case 226:
      v183 = (int *)sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 - 40));
      *(void *)(v10 - 64) = v183;
      *(void *)(v10 - 64) = sub_1B0C9074C((uint64_t *)a5, v183, *(unsigned __int8 **)(v10 + 8));
      goto LABEL_445;
    case 231:
      *(void *)(v10 - 40) = sub_1B0C9074C((uint64_t *)a5, *(int **)(v10 - 40), *(unsigned __int8 **)(v10 + 8));
      goto LABEL_445;
    case 232:
      *(void *)(v10 + 8) = sub_1B0D55ACC(*a5, *(unsigned __int8 **)(v10 + 8));
      goto LABEL_445;
    case 235:
      v184 = (void *)sub_1B0C90A80((uint64_t *)a5, 0, v10 - 88, 0, (uint64_t)a5, a6, a7, a8);
      sub_1B0CAE7F0(a5, v10 - 160, v10 - 136, v184, *(void *)(v10 - 40), *(unsigned int *)(v10 - 232), v10 - 256, *(void *)(v10 + 8), 0, *(_DWORD *)(v10 - 184), 0);
      if (*((unsigned __int8 *)a5 + 302) >= 2u)
      {
        v185 = a5[44];
        if (v185) {
          sub_1B0D2A138((uint64_t)a5, *v185, (_OWORD *)(v10 - 88));
        }
      }
      goto LABEL_445;
    case 236:
    case 278:
      *(_DWORD *)(v10 + 8) = 2;
      goto LABEL_445;
    case 237:
      *(_DWORD *)(v10 + 32) = 0;
      goto LABEL_445;
    case 240:
      *(void *)(v10 - 88) = sub_1B0D2B3FC((uint64_t *)a5, *(int **)(v10 - 88), v10 - 40, *(unsigned int *)(v10 - 16), *(unsigned int *)(v10 + 8), a6, a7, a8);
      goto LABEL_445;
    case 241:
      *(void *)(v10 - 40) = sub_1B0D2B3FC((uint64_t *)a5, 0, v10 - 40, *(unsigned int *)(v10 - 16), *(unsigned int *)(v10 + 8), a6, a7, a8);
      goto LABEL_445;
    case 244:
      sub_1B0D2B4EC((uint64_t)a5, *(void *)(v10 + 8), *(_DWORD *)(v10 - 16), a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 245:
      sub_1B0D2B944((uint64_t)a5, 0, *(unsigned __int8 **)(v10 + 8), a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 246:
      sub_1B0D2B944((uint64_t)a5, v10 - 16, *(unsigned __int8 **)(v10 + 8), a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 249:
      uint64_t v186 = v10 - 16;
      uint64_t v187 = v10 + 8;
      uint64_t v188 = (uint64_t)a5;
      uint64_t v189 = 0;
      goto LABEL_313;
    case 250:
      uint64_t v186 = v10 - 64;
      uint64_t v187 = v10 - 40;
      uint64_t v189 = v10 + 8;
      goto LABEL_312;
    case 251:
      uint64_t v186 = v10 - 88;
      uint64_t v187 = v10 - 64;
      uint64_t v189 = v10 - 16;
LABEL_312:
      uint64_t v188 = (uint64_t)a5;
LABEL_313:
      sub_1B0C82984(v188, v186, v187, v189, 0, a6, a7, a8, v257);
      goto LABEL_445;
    case 252:
      uint64_t v190 = v10 - 64;
      uint64_t v191 = v10 - 40;
      uint64_t v192 = v10 + 8;
      goto LABEL_316;
    case 253:
      uint64_t v190 = v10 - 88;
      uint64_t v191 = v10 - 64;
      uint64_t v192 = v10 - 16;
LABEL_316:
      sub_1B0C82984((uint64_t)a5, v190, v191, v192, 1, a6, a7, a8, v257);
      goto LABEL_445;
    case 256:
      *((void *)&v258[0] + 1) = 0;
      *(void *)&v258[0] = *(void *)(v10 - 64);
      DWORD2(v258[0]) = *(_DWORD *)(v10 + 16) + *(_DWORD *)(v10 + 8) - LODWORD(v258[0]);
      sub_1B0CB1468((uint64_t)a5, *(void *)(v10 - 16), (uint64_t)v258, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 257:
      v193 = (_OWORD *)(v10 - 232);
      sub_1B0CAFBC8(a5, v10 - 160, v10 - 136, *(unsigned int *)(v10 - 112), *(unsigned int *)(v10 - 88), *(void **)(v10 - 80), *(void *)(v10 - 40), *(void *)(v10 + 8), *(_DWORD *)(v10 - 232), *(_DWORD *)(v10 - 184));
      if (*(_DWORD *)(v10 - 128)) {
        _OWORD *v193 = *(_OWORD *)(v10 - 136);
      }
      else {
        _OWORD *v193 = *(_OWORD *)(v10 - 160);
      }
      goto LABEL_445;
    case 258:
      *(_DWORD *)(v10 + 8) = *(unsigned __int16 *)(v10 + 2);
      goto LABEL_445;
    case 259:
      *(_DWORD *)(v10 - 16) = 65;
      goto LABEL_445;
    case 260:
      *(_DWORD *)(v10 + 32) = 33;
      goto LABEL_445;
    case 261:
    case 262:
      *(_DWORD *)(v10 + 8) = *(unsigned __int16 *)(v10 + 2);
      *(void *)(v10 + 16) = 0;
      goto LABEL_445;
    case 263:
      *(_DWORD *)(v10 - 40) = 129;
      *(void *)(v10 - 32) = *(void *)(v10 + 8);
      goto LABEL_445;
    case 266:
      *(void *)(*(void *)(*(void *)(v10 - 40) + 88) + 80) = *(void *)(v10 - 16);
      *(void *)(*(void *)(v10 - 40) + 88) = *(void *)(v10 - 16);
      goto LABEL_445;
    case 267:
      *(void *)(*(void *)(v10 - 16) + 88) = *(void *)(v10 - 16);
      goto LABEL_445;
    case 268:
      *(_OWORD *)(v10 - 40) = *(_OWORD *)(v10 + 8);
      v194 = "qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers";
      goto LABEL_329;
    case 269:
      v194 = "the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers";
      goto LABEL_329;
    case 270:
      v194 = "the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers";
LABEL_329:
      sub_1B0CEF2BC((uint64_t)a5, v194, a3, a4, (uint64_t)a5, a6, a7, a8, v257);
      goto LABEL_445;
    case 271:
      *(void *)(v10 - 184) = sub_1B0CB135C((uint64_t)a5, v10 - 136, *(int **)(v10 - 40), *(void **)(v10 - 64), *(unsigned __int8 **)(v10 - 16), *(unsigned char *)(v10 - 160), *(unsigned __int8 **)(v10 - 184), *(void *)(v10 + 8));
      goto LABEL_445;
    case 272:
      *(void *)(v10 - 160) = sub_1B0D2BC28((uint64_t)a5, v10 - 88, *(void **)(v10 - 64), *(void *)(v10 - 40), *(unsigned char *)(v10 - 136), *(unsigned int ***)(v10 - 16), *(unsigned __int8 **)(v10 - 160), *(void *)(v10 + 8));
      goto LABEL_445;
    case 273:
      *(void *)(v10 - 112) = sub_1B0D2BDB4((uint64_t)a5, v10 - 64, *(unsigned __int8 **)(v10 - 16), *(unsigned __int8 **)(v10 - 112), *(void *)(v10 + 8));
      goto LABEL_445;
    case 274:
      *(void *)(v10 - 40) = sub_1B0D2BE50(*a5, *(void *)(v10 - 16), *(unsigned __int8 **)(v10 - 40), *(void *)(v10 + 8));
      goto LABEL_445;
    case 275:
      uint64_t v195 = sub_1B0D28CCC((uint64_t *)a5, 71, 0, 0);
      *(void *)(v10 - 64) = v195;
      if (v195) {
        *(unsigned char *)(v195 + 1) = 4;
      }
      goto LABEL_445;
    case 276:
      uint64_t v196 = sub_1B0C904D8((uint64_t)*a5, 71, v10 - 16, 1);
      *(void *)(v10 - 112) = v196;
      if (v196) {
        *(unsigned char *)(v196 + 1) = *(_DWORD *)(v10 - 64);
      }
      goto LABEL_445;
    case 277:
      *(_DWORD *)(v10 + 8) = 1;
      goto LABEL_445;
    case 279:
      *(_DWORD *)(v10 + 8) = 3;
      goto LABEL_445;
    case 280:
      sub_1B0D2BF94((uint64_t *)a5, *(void **)(v10 + 8), *(unsigned int *)(v10 - 16), a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 281:
      sub_1B0D5E8B4((uint64_t)a5, 24, (uint64_t)&unk_1F09A56A0, *(void *)(v10 - 64), *(void *)(v10 - 64), *(void *)(v10 - 16), *(void *)(v10 + 8), a8);
      goto LABEL_445;
    case 282:
      sub_1B0D5E8B4((uint64_t)a5, 25, (uint64_t)&unk_1F09A56E8, *(void *)(v10 + 8), 0, 0, *(void *)(v10 + 8), a8);
      goto LABEL_445;
    case 285:
      sub_1B0D2C354((uint64_t *)a5, 0, 0, a4, (uint64_t)a5, a6, a7, a8, v257);
      goto LABEL_445;
    case 286:
      sub_1B0D2C354((uint64_t *)a5, v10 - 16, v10 + 8, a4, (uint64_t)a5, a6, a7, a8, v257);
      goto LABEL_445;
    case 287:
      sub_1B0D2CAF4((uint64_t)a5, 0, 0, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 288:
      sub_1B0D2CAF4((uint64_t)a5, v10 - 16, v10 + 8, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 289:
      sub_1B0D2CFB8((uint64_t)a5, *(void *)(v10 - 64), v10 + 8, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 290:
      *(_DWORD *)(v10 - 8) = *((_DWORD *)a5 + 72) + *((_DWORD *)a5 + 70) - *(_DWORD *)(v10 - 16);
      sub_1B0D2D40C((uint64_t)a5, v10 - 16, a3, a4, (uint64_t)a5, a6, a7, a8, v257);
      goto LABEL_445;
    case 291:
      sub_1B0D2DA04((uint64_t)a5, *(void *)(v10 - 64), v10 + 8, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 292:
      uint64_t v197 = (uint64_t)*a5;
      ++*((unsigned char *)a5 + 36);
      ++*(_DWORD *)(v197 + 432);
      *(_WORD *)(v197 + 436) = 0;
      sub_1B0D2E114(a5, *(void *)(v10 + 8), a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 293:
      sub_1B0D2E420((uint64_t *)a5, *(void *)(v10 - 112), v10 - 40, v10 + 8, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 294:
      sub_1B0D2E880((uint64_t)a5, 0, a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 295:
      sub_1B0D2E880((uint64_t)a5, (_DWORD *)(v10 + 8), a3, a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 296:
      sub_1B0D2EE48((uint64_t)a5, (_OWORD *)(v10 - 64), v10 - 40, v10 + 8, *(unsigned int *)(v10 - 88), a6, a7, a8);
      goto LABEL_445;
    case 297:
      sub_1B0D2F0A0((uint64_t)a5);
      goto LABEL_445;
    case 298:
    case 299:
    case 300:
      uint64_t v16 = a5[47];
      unint64_t v17 = *(void **)(v10 + 8);
      if (v16)
      {
        int v18 = v17 + *(_DWORD *)(v10 + 16) - v16;
      }
      else
      {
        a5[47] = v17;
        int v18 = *(_DWORD *)(v10 + 16);
      }
      *((_DWORD *)a5 + 96) = v18;
      goto LABEL_445;
    case 301:
    case 302:
      sub_1B0D2F124((uint64_t)a5, *(void **)(v10 + 8), 1);
      goto LABEL_445;
    case 303:
      *(unsigned char *)(v10 + 8) = 1;
      goto LABEL_445;
    case 304:
      *(unsigned char *)(v10 - 16) = 0;
      goto LABEL_445;
    case 305:
      *(unsigned char *)(v10 - 40) = 2;
      goto LABEL_445;
    case 306:
      *(void *)(v10 - 112) = sub_1B0D2F228((uint64_t *)a5, v10 - 112, *(void **)(v10 - 88), *(void *)(v10 - 16), *(unsigned char *)(v10 - 64));
      goto LABEL_445;
    case 307:
      *(void *)(v10 + 8) = sub_1B0D2F38C((uint64_t *)a5, 0, *(void **)(v10 + 8), a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 308:
      *(void *)(v10 - 40) = sub_1B0D2F38C((uint64_t *)a5, *(_DWORD **)(v10 - 40), *(void **)(v10 + 8), a4, (uint64_t)a5, a6, a7, a8);
      goto LABEL_445;
    case 309:
      sub_1B0D2F584((uint64_t *)a5, *(void **)(v10 + 8), *(void *)(v10 - 40), a4, (uint64_t)a5, a6, a7, a8);
      *(void *)(*(void *)(v10 + 8) + 64) = *(void *)(v10 - 40);
LABEL_363:
      *(void *)(v10 - 40) = *(void *)(v10 + 8);
      goto LABEL_445;
    case 310:
      uint64_t v198 = *(void *)(v10 - 16);
      if (!v198) {
        goto LABEL_367;
      }
      **(void **)(v10 - 16) = sub_1B0C87878((uint64_t)*a5, *(const void **)(v10 - 88), *(unsigned int *)(v10 - 80));
      goto LABEL_366;
    case 311:
      v199 = *(void **)(v10 + 8);
      v200 = *(void **)(v10 - 40);
      v201 = *(void **)(v10 - 16);
      v202 = (uint64_t *)a5;
      v203 = v199;
      uint64_t v204 = 0;
      goto LABEL_373;
    case 312:
      v205 = *(void **)(v10 + 8);
      sub_1B0D2F6B4((uint64_t *)a5, v205, *(void **)(v10 - 40), *(void **)(v10 - 16), v10 - 112);
      *(void *)(v10 - 112) = v205;
      goto LABEL_445;
    case 313:
      uint64_t v206 = *(void *)(v10 + 8);
      v207 = *(void **)(v10 - 16);
      if (v206)
      {
        *(void *)(v206 + 16) = 0;
        *(void *)(v206 + 24) = v207;
        *(void *)(v10 - 64) = v206;
      }
      else
      {
        if (v207) {
          sub_1B0D270DC(*a5, v207);
        }
        *(void *)(v10 - 64) = 0;
      }
      goto LABEL_445;
    case 314:
      v199 = *(void **)(v10 + 8);
      v201 = *(void **)(v10 - 16);
      uint64_t v204 = v10 - 88;
      v202 = (uint64_t *)a5;
      v203 = v199;
      v200 = 0;
LABEL_373:
      sub_1B0D2F6B4(v202, v203, v200, v201, v204);
      *(void *)(v10 - 88) = v199;
      goto LABEL_445;
    case 315:
      v208 = *(void **)(v10 + 8);
      sub_1B0D2F6B4((uint64_t *)a5, v208, 0, 0, v10 - 16);
      *(void *)(v10 - 16) = v208;
      goto LABEL_445;
    case 316:
      *(void *)(v10 + 32) = sub_1B0D2F75C((uint64_t *)a5, 0, 90, 0, 85, 0, 0, a8);
      goto LABEL_445;
    case 317:
      *(void *)(v10 - 40) = sub_1B0D2F75C((uint64_t *)a5, *(_DWORD *)(v10 - 40), *(unsigned int *)(v10 - 16), *(unsigned __int8 **)(v10 - 8), 85, 0, *(unsigned __int8 *)(v10 + 8), a8);
      goto LABEL_445;
    case 318:
      *(void *)(v10 - 112) = sub_1B0D2F75C((uint64_t *)a5, *(_DWORD *)(v10 - 112), *(unsigned int *)(v10 - 64), *(unsigned __int8 **)(v10 - 56), *(unsigned int *)(v10 - 16), *(unsigned __int8 **)(v10 - 8), *(unsigned __int8 *)(v10 + 8), a8);
      goto LABEL_445;
    case 321:
    case 323:
    case 325:
      *(void *)(v10 - 16) = *(unsigned __int16 *)(v10 - 22);
      *(void *)(v10 - 8) = 0;
      goto LABEL_445;
    case 324:
      uint64_t v209 = *(void *)(v10 - 16);
      *(void *)(v10 - 16) = *(unsigned __int16 *)(v10 + 2);
      *(void *)(v10 - 8) = v209;
      goto LABEL_445;
    case 326:
      *(unsigned char *)(v10 + 32) = 0;
      goto LABEL_445;
    case 327:
      *(unsigned char *)(v10 - 16) = *(unsigned char *)(v10 + 8);
      goto LABEL_445;
    case 328:
    case 329:
      *(unsigned char *)(v10 - 16) = *(unsigned char *)(v10 - 22);
      goto LABEL_445;
    case 330:
      *(unsigned char *)(v10 + 8) = *(unsigned char *)(v10 + 2);
      goto LABEL_445;
    case 332:
      uint64_t v210 = *(void *)(v10 + 8);
      v211 = *(unsigned __int8 **)(v10 - 16);
      if (v210)
      {
        *(void *)(v210 + 72) = v211;
      }
      else if (v211)
      {
        sub_1B0D1DF88(*a5, v211);
      }
LABEL_419:
      *(void *)(v10 - 16) = *(void *)(v10 + 8);
      goto LABEL_445;
    case 334:
      v212 = sub_1B0C79680((uint64_t)*a5, 0x90uLL);
      if (v212)
      {
        v212[32] = -90;
        *((void *)v212 + 9) = *(void *)(v10 + 8);
        *(void *)(v10 + 8) = v212;
      }
      else
      {
        v221 = *(unsigned __int8 **)(v10 + 8);
        if (v221) {
          sub_1B0D1DF88(*a5, v221);
        }
        *(void *)(v10 + 8) = 0;
      }
      goto LABEL_445;
    case 335:
      *(void *)(v10 - 64) = *(void *)(v10 - 16);
      goto LABEL_445;
    case 336:
      v213 = sub_1B0C79680((uint64_t)*a5, 0x90uLL);
      *(void *)(v10 - 16) = v213;
      if (v213) {
        **(void **)(v10 - 16) = sub_1B0C87878((uint64_t)*a5, *(const void **)(v10 + 8), *(unsigned int *)(v10 + 16));
      }
      goto LABEL_445;
    case 337:
LABEL_366:
      uint64_t v198 = *(void *)(v10 - 16);
LABEL_367:
      *(void *)(v10 - 88) = v198;
      goto LABEL_445;
    default:
      goto LABEL_445;
  }
}

void sub_1B0C82984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  int v9 = a5;
  uint64_t v10 = (char *)a4;
  uint64_t v968 = *MEMORY[0x1E4F143B8];
  uint64_t v14 = *(void *)a1;
  uint64_t v962 = *(void *)(a1 + 16);
  if (!v962)
  {
    if (!*(void *)(a1 + 168) && (*(unsigned char *)(v14 + 96) & 8) == 0) {
      *(unsigned char *)(a1 + 35) = 1;
    }
    uint64_t v962 = sub_1B0CEF480((uint64_t *)a1, a2, a3, a4, a5, a6, a7, a8);
    if (!v962) {
      return;
    }
  }
  long long v966 = 0u;
  long long v967 = 0u;
  int v15 = *(_DWORD *)(v962 + 144);
  if (*(_DWORD *)(v962 + 148) <= v15)
  {
    sub_1B0D25510(v962, 166, 1, 1, 0, a6, a7, a8);
  }
  else
  {
    *(_DWORD *)(v962 + 144) = v15 + 1;
    uint64_t v16 = *(void *)(v962 + 136) + 40 * v15;
    *(_DWORD *)uint64_t v16 = 166;
    *(void *)(v16 + 4) = 0x100000001;
    *(void *)(v16 + 12) = 0;
    *(void *)(v16 + 28) = 0;
    *(void *)(v16 + 20) = 0;
    *(_DWORD *)(v16 + 36) = 0;
  }
  *(_DWORD *)(a1 + 56) = 2;
  uint64_t v17 = *(void *)a1;
  if (*(_DWORD *)(a3 + 8))
  {
    if (*(unsigned char *)(v17 + 197))
    {
      sub_1B0CEF2BC(a1, "corrupt database", a3, a4, a5, a6, a7, a8, a9);
      return;
    }
    uint64_t v18 = sub_1B0D35B18(v17, a2);
    uint64_t v19 = a3;
    if ((v18 & 0x80000000) != 0)
    {
      sub_1B0CEF2BC(a1, "unknown database %T", v20, v21, v22, v23, v24, v25, a2);
      return;
    }
  }
  else
  {
    uint64_t v18 = *(unsigned __int8 *)(v17 + 196);
    uint64_t v19 = a2;
  }
  uint64_t v26 = *(void *)(v14 + 32);
  if (v18 == 1)
  {
    int v27 = sub_1B0D0E7A4(a1);
    if (!v19 || v27) {
      return;
    }
  }
  else if (!v19)
  {
    return;
  }
  int v28 = *(const void **)v19;
  if (!*(void *)v19) {
    return;
  }
  size_t v29 = *(unsigned int *)(v19 + 8);
  uint64_t v30 = (char *)sub_1B0D05DC0(v14, v29 + 1);
  if (!v30) {
    return;
  }
  uint64_t v31 = v30;
  memcpy(v30, v28, v29);
  v31[v29] = 0;
  int v38 = *v31;
  if ((char)byte_1B0DE196D[*v31] < 0)
  {
    uint64_t v39 = 0;
    if (v38 == 91) {
      int v38 = 93;
    }
    for (int i = 1; ; ++i)
    {
      uint64_t v41 = i;
      int v42 = v31[i];
      if (v42 == v38)
      {
        ++i;
        LOBYTE(v42) = v38;
        if (v31[v41 + 1] != v38) {
          break;
        }
      }
      v31[v39++] = v42;
    }
    v31[v39] = 0;
  }
  if (v9)
  {
    uint64_t v10 = (char *)sub_1B0C904AC(v14, "-%T", v32, v33, v34, v35, v36, v37, (char)v10);
  }
  else if (v10)
  {
    uint64_t v44 = *(const void **)v10;
    if (*(void *)v10)
    {
      size_t v45 = *((unsigned int *)v10 + 2);
      uint64_t v46 = (char *)sub_1B0D05DC0(v14, v45 + 1);
      uint64_t v10 = v46;
      if (v46)
      {
        memcpy(v46, v44, v45);
        v10[v45] = 0;
        int v47 = *v10;
        if ((char)byte_1B0DE196D[*v10] < 0)
        {
          uint64_t v48 = 0;
          if (v47 == 91) {
            int v47 = 93;
          }
          for (int j = 1; ; ++j)
          {
            uint64_t v50 = j;
            int v51 = v10[j];
            if (v51 == v47)
            {
              ++j;
              LOBYTE(v51) = v47;
              if (v10[v50 + 1] != v47) {
                break;
              }
            }
            v10[v48++] = v51;
          }
          v10[v48] = 0;
        }
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  v955 = (sqlite3 *)v14;
  __s = v10;
  v951 = v31;
  if (*(_DWORD *)(a3 + 8)) {
    uint64_t v43 = *(const char **)(v26 + 32 * v18);
  }
  else {
    uint64_t v43 = 0;
  }
  uint64_t v52 = *(void *)a1;
  uint64_t v53 = *(uint64_t (**)(void, uint64_t, char *, char *, const char *, void))(*(void *)a1 + 528);
  if (v53 && !*(unsigned char *)(v52 + 197) && !*(unsigned char *)(a1 + 302))
  {
    int v87 = v53(*(void *)(v52 + 536), 19, v31, v10, v43, *(void *)(a1 + 368));
    if (v87 == 1)
    {
      int v94 = 23;
      uint64_t v95 = "not authorized";
    }
    else
    {
      if ((v87 & 0xFFFFFFFD) == 0)
      {
        if (v87) {
          goto LABEL_1083;
        }
        goto LABEL_51;
      }
      int v94 = 1;
      uint64_t v95 = "authorizer malfunction";
    }
    sub_1B0CEF2BC(a1, v95, v88, v89, v90, v91, v92, v93, v925);
    *(_DWORD *)(a1 + 24) = v94;
    goto LABEL_1083;
  }
LABEL_51:
  *(void *)&long long v966 = 0;
  *((void *)&v966 + 1) = v31;
  long long v967 = (unint64_t)v10;
  *((_DWORD *)v955 + 172) = 0;
  int v54 = sqlite3_file_control(v955, v43, 14, &v966);
  if (v54)
  {
    int v62 = v54;
    if (v54 != 12)
    {
      if ((void)v966)
      {
        sub_1B0CEF2BC(a1, "%s", v55, v56, v57, v58, v59, v60, v966);
        sqlite3_free((void *)v966);
      }
      ++*(_DWORD *)(a1 + 48);
      *(_DWORD *)(a1 + 24) = v62;
      goto LABEL_1083;
    }
    int v63 = 0;
    int v64 = 73;
    long long v65 = &off_1E5FEF698;
    while (1)
    {
      unsigned int v66 = v64 + v63;
      int v67 = v64 + v63 < 0 != __OFADD__(v64, v63) ? v66 + 1 : v64 + v63;
      uint64_t v68 = (uint64_t)v67 >> 1;
      long long v69 = &(&off_1E5FEF698)[3 * (v67 >> 1)];
      if (*v69) {
        break;
      }
      int v71 = 1;
LABEL_65:
      if (v71 >= 0) {
        int v63 = v68 + 1;
      }
      else {
        int v64 = v68 - 1;
      }
      if (v63 > v64) {
        goto LABEL_1083;
      }
    }
    for (uint64_t k = 0; ; ++k)
    {
      uint64_t v72 = v31[k];
      uint64_t v73 = (*v69)[k];
      if (v72 == v73)
      {
        if (!v31[k])
        {
          char v81 = *((unsigned char *)&off_1E5FEF698 + 24 * (int)v68 + 9);
          if (v81)
          {
            int v82 = sub_1B0D25B50((uint64_t *)a1, (uint64_t)&off_1E5FEF698, v55, v56, v57, v58, v59, v60);
            long long v65 = &off_1E5FEF698;
            if (v82) {
              goto LABEL_1083;
            }
          }
          zDbName = (char *)v43;
          if ((v81 & 2) == 0 && ((v81 & 4) == 0 || !__s))
          {
            sub_1B0D5CED8((void *)v962, (uint64_t)v69);
            long long v65 = &off_1E5FEF698;
          }
          uint64_t v83 = (uint64_t)v955;
          switch(LOBYTE((&off_1E5FEF698)[3 * (int)v68 + 1]))
          {
            case 0:
              v965[0] = 0;
              if (__s
                && !sub_1B0CF8344(__s, (unint64_t *)v965)
                && ((unint64_t)v965[0] & 0x8000000000000000) == 0)
              {
                *((_DWORD *)v955 + 192) = (uint64_t)v965[0] & 0x7FFFFFFF;
              }
              uint64_t v84 = *((int *)v955 + 192);
              goto LABEL_478;
            case 1:
              int v96 = (int)(&off_1E5FEF698)[3 * (int)v68 + 2];
              sub_1B0CEF64C((_DWORD *)v962, v18);
              if (__s && (v66 > 0x2F || ((1 << v66) & 0xC00030000000) == 0))
              {
                uint64_t v531 = sub_1B0CC301C(v962, 2, (uint64_t)&unk_1B0DE5853, v97, v98, v99, v100, v101);
                *(_DWORD *)(v531 + 4) = v18;
                *(_DWORD *)(v531 + 44) = v18;
                *(_DWORD *)(v531 + 48) = v96;
                LODWORD(v965[0]) = 0;
                sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                *(_DWORD *)(v531 + 52) = v965[0];
                *(_WORD *)(v531 + 42) = 1;
                BOOL v589 = v96 == 1;
                uint64_t v83 = (uint64_t)v955;
                uint64_t v115 = v951;
                if (v589 && (*((unsigned char *)v955 + 51) & 0x10) != 0) {
                  *(unsigned char *)(v531 + 40) = -72;
                }
                goto LABEL_636;
              }
              uint64_t v102 = (_DWORD *)sub_1B0CC301C(v962, 3, (uint64_t)&unk_1B0DE585B, v97, v98, v99, v100, v101);
              v102[1] = v18;
              v102[11] = v18;
              v102[13] = v96;
              uint64_t v103 = *(unsigned int *)(v962 + 144);
              if ((int)v103 < 2) {
                goto LABEL_1083;
              }
              uint64_t v104 = *(void *)(v962 + 136);
              uint64_t v105 = v103 - 1;
              uint64_t v106 = (unsigned __int8 *)(v104 + 40);
              do
              {
                int v107 = *v106;
                v106 += 40;
                if (v107 == 166) {
                  goto LABEL_536;
                }
                --v105;
              }
              while (v105);
              goto LABEL_1083;
            case 2:
              uint64_t v108 = *(void *)(v26 + 32 * v18 + 8);
              if (!__s)
              {
                uint64_t v459 = sub_1B0D247B8(v108);
                goto LABEL_561;
              }
              int v109 = sub_1B0D5D1A8((unsigned __int8 *)__s);
              *((unsigned char *)v955 + 106) = v109;
              uint64_t v115 = v951;
              if (!sub_1B0D246F4(v108, v109) && (v109 - 1) <= 1)
              {
                int v116 = *(_DWORD *)(v962 + 144);
                uint64_t v117 = (_DWORD *)sub_1B0CC301C(v962, 5, (uint64_t)&unk_1B0DE581D, v110, v111, v112, v113, v114);
                v117[1] = v18;
                v117[11] = v18;
                int v118 = v116 + 4;
                uint64_t v115 = v951;
                v117[22] = v118;
                v117[41] = v18;
                v117[43] = v109 - 1;
                sub_1B0CEF64C((_DWORD *)v962, v18);
              }
              goto LABEL_636;
            case 3:
              if (!__s)
              {
                sub_1B0D5CED8((void *)v962, (uint64_t)v69);
                uint64_t v459 = ((unint64_t)(&off_1E5FEF698)[3 * (int)v68 + 2] & *((void *)v955 + 6)) != 0;
                uint64_t v460 = v962;
                goto LABEL_562;
              }
              if (*((unsigned char *)v955 + 101)) {
                unint64_t v119 = (unint64_t)(&off_1E5FEF698)[3 * (int)v68 + 2];
              }
              else {
                unint64_t v119 = (unint64_t)(&off_1E5FEF698)[3 * (int)v68 + 2] & 0xFFFFFFFFFFFFBFFFLL;
              }
              if (sub_1B0D5D5D8(__s, 1, 0))
              {
                *((void *)v955 + 6) |= v119;
                goto LABEL_701;
              }
              *((void *)v955 + 6) &= ~v119;
              if (v119 == 0x80000)
              {
                *((void *)v955 + 101) = 0;
                goto LABEL_701;
              }
              if ((v119 & 1) == 0) {
                goto LABEL_701;
              }
              v532 = "reset";
              v533 = __s;
              while (2)
              {
                uint64_t v534 = *v533;
                uint64_t v535 = *(unsigned __int8 *)v532;
                if (v534 == v535)
                {
                  if (!*v533)
                  {
                    sub_1B0CE89B4((uint64_t)v955);
                    goto LABEL_701;
                  }
                }
                else if (byte_1B0DE1758[v534] != byte_1B0DE1758[v535])
                {
LABEL_701:
                  sub_1B0D2F924(v962, 166, v120, v121, v122, v123, v124, v125);
                  sub_1B0D5D2A8((uint64_t)v955);
                  goto LABEL_1083;
                }
                ++v533;
                ++v532;
                continue;
              }
            case 5:
              if (__s)
              {
                LODWORD(v965[0]) = 0;
                sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                uint64_t v126 = v26 + 32 * v18;
                uint64_t v127 = *(void *)(v126 + 24);
                *(_DWORD *)(v127 + 116) = v965[0];
                sub_1B0D0EA1C(*(void *)(v126 + 8), (_DWORD *)(v127 + 116));
                goto LABEL_635;
              }
              uint64_t v459 = *(int *)(*(void *)(v26 + 32 * v18 + 24) + 116);
              goto LABEL_561;
            case 6:
              if (__s)
              {
                LODWORD(v965[0]) = 1;
                int v128 = sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                int v129 = (int)v965[0];
                if (!LODWORD(v965[0]))
                {
                  LODWORD(v965[0]) = 1;
                  int v129 = 1;
                }
                sub_1B0D0EE10(*(void *)(v26 + 32 * v18 + 8), v129);
                if (v128 || sub_1B0D5D5D8(__s, 1, 1u)) {
                  unint64_t v130 = *((void *)v955 + 6) | 0x20;
                }
                else {
                  unint64_t v130 = *((void *)v955 + 6) & 0xFFFFFFFFFFFFFFDFLL;
                }
                *((void *)v955 + 6) = v130;
                uint64_t v115 = v951;
                goto LABEL_363;
              }
              if ((*((unsigned char *)v955 + 48) & 0x20) == 0) {
                goto LABEL_586;
              }
              uint64_t v461 = (int)sub_1B0D0EE10(*(void *)(v26 + 32 * v18 + 8), 0);
              goto LABEL_587;
            case 7:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              BOOL v131 = sub_1B0D5D5D8(__s, 1, 0) != 0;
              sub_1B0D5D998((uint64_t)v955, v131);
              goto LABEL_636;
            case 8:
              *(_DWORD *)(a1 + 56) = 2;
              v132 = (void *)*((void *)v955 + 81);
              if (v132)
              {
                uint64_t v133 = 0;
                do
                {
                  uint64_t v134 = (v133 + 1);
                  sub_1B0D5D70C(v962, 1, (uint64_t)"is", v56, v57, v58, v59, v60, v133);
                  v132 = (void *)*v132;
                  uint64_t v133 = v134;
                }
                while (v132);
              }
              goto LABEL_1083;
            case 9:
              uint64_t v135 = 0;
              *(_DWORD *)(a1 + 56) = 1;
              do
              {
                uint64_t v136 = off_1E5FF0790[v135];
                if (!v136) {
                  break;
                }
                sub_1B0CCB908((uint64_t *)v962, 117, 0, 1, 0, (uint64_t)v136, 0, v60);
                sub_1B0D254B8(v962, 84, 1, 1, v137, v138, v139, v140);
                ++v135;
              }
              while (v135 != 69);
              uint64_t v141 = *(unsigned int *)(v962 + 144);
              if ((int)v141 < 2) {
                goto LABEL_1083;
              }
              uint64_t v104 = *(void *)(v962 + 136);
              uint64_t v142 = v141 - 1;
              uint64_t v143 = (unsigned __int8 *)(v104 + 40);
              while (1)
              {
                int v144 = *v143;
                v143 += 40;
                if (v144 == 166) {
                  break;
                }
                if (!--v142) {
                  goto LABEL_1083;
                }
              }
LABEL_536:
              *(unsigned char *)(v104 + 40) = -72;
              goto LABEL_1083;
            case 0xB:
              *(_DWORD *)(a1 + 56) = 3;
              int v145 = *((_DWORD *)v955 + 10);
              if (v145 >= 1)
              {
                uint64_t v146 = 0;
                for (uint64_t m = 0; m < v145; ++m)
                {
                  if (*(void *)(*((void *)v955 + 4) + v146 + 8))
                  {
                    sub_1B0D5D70C(v962, 1, (uint64_t)"iss", v56, v57, v58, v59, v60, m);
                    int v145 = *((_DWORD *)v955 + 10);
                  }
                  v146 += 32;
                }
              }
              goto LABEL_1083;
            case 0xC:
              sub_1B0CEF64C((_DWORD *)v962, v18);
              if (!__s)
              {
                *(_DWORD *)(a1 + 56) += 2;
                v462 = (_DWORD *)sub_1B0CC301C(v962, 9, (uint64_t)&unk_1B0DE57F9, v149, v150, v151, v152, v153);
                v462[1] = v18;
                v462[11] = v18;
                v462[61] = 128;
                uint64_t v115 = v951;
                goto LABEL_686;
              }
              LODWORD(v965[0]) = 0;
              sub_1B0D22EF0((unsigned __int8 *)__s, v965);
              if (LODWORD(v965[0]) == 0x80000000) {
                unsigned int v154 = 0x7FFFFFFF;
              }
              else {
                unsigned int v154 = -LODWORD(v965[0]);
              }
              if (SLODWORD(v965[0]) >= 0) {
                uint64_t v155 = LODWORD(v965[0]);
              }
              else {
                uint64_t v155 = v154;
              }
              sub_1B0D3597C(a1, 0, v18);
              sub_1B0C8A924(v962, 100, v18, 3, v155, v156, v157, v158);
              uint64_t v159 = v26 + 32 * v18;
              uint64_t v160 = *(void *)(v159 + 24);
              *(_DWORD *)(v160 + 116) = v155;
              sub_1B0D0EA1C(*(void *)(v159 + 8), (_DWORD *)(v160 + 116));
              goto LABEL_635;
            case 0xD:
              if (__s)
              {
                uint64_t v115 = v951;
                if ((*((unsigned char *)v955 + 44) & 0x40) != 0) {
                  goto LABEL_636;
                }
                uint64_t v161 = 0;
                uint64_t v162 = &off_1E5FF0118;
                while (1)
                {
                  uint64_t v163 = __s[v161];
                  uint64_t v164 = aUtf8_0[v161];
                  if (v163 == v164)
                  {
                    if (!__s[v161])
                    {
LABEL_1059:
                      unsigned int v892 = *((unsigned __int8 *)v162 + 8);
                      if (v892) {
                        unsigned int v893 = v892;
                      }
                      else {
                        unsigned int v893 = 2;
                      }
                      *(unsigned char *)(*(void *)(*(void *)(v83 + 32) + 24) + 113) = v893;
                      sub_1B0D223C0(v83, v893);
                      goto LABEL_1083;
                    }
                  }
                  else if (byte_1B0DE1758[v163] != byte_1B0DE1758[v164])
                  {
                    uint64_t v165 = 0;
                    uint64_t v162 = &off_1E5FF0128;
                    while (1)
                    {
                      uint64_t v166 = __s[v165];
                      uint64_t v167 = aUtf8[v165];
                      if (v166 == v167)
                      {
                        if (!__s[v165])
                        {
LABEL_1058:
                          uint64_t v83 = (uint64_t)v955;
                          goto LABEL_1059;
                        }
                      }
                      else if (byte_1B0DE1758[v166] != byte_1B0DE1758[v167])
                      {
                        uint64_t v168 = 0;
                        uint64_t v162 = &off_1E5FF0138;
                        while (1)
                        {
                          uint64_t v169 = __s[v168];
                          uint64_t v170 = aUtf16le[v168];
                          if (v169 == v170)
                          {
                            if (!__s[v168]) {
                              goto LABEL_1058;
                            }
                          }
                          else if (byte_1B0DE1758[v169] != byte_1B0DE1758[v170])
                          {
                            uint64_t v171 = 0;
                            uint64_t v162 = &off_1E5FF0148;
                            while (1)
                            {
                              uint64_t v448 = __s[v171];
                              uint64_t v449 = aUtf16be[v171];
                              if (v448 == v449)
                              {
                                if (!__s[v171]) {
                                  goto LABEL_1058;
                                }
                              }
                              else if (byte_1B0DE1758[v448] != byte_1B0DE1758[v449])
                              {
                                uint64_t v450 = 0;
                                uint64_t v162 = &off_1E5FF0158;
                                while (1)
                                {
                                  uint64_t v494 = __s[v450];
                                  uint64_t v495 = aUtf16le_0[v450];
                                  if (v494 == v495)
                                  {
                                    if (!__s[v450]) {
                                      goto LABEL_1058;
                                    }
                                  }
                                  else if (byte_1B0DE1758[v494] != byte_1B0DE1758[v495])
                                  {
                                    uint64_t v496 = 0;
                                    uint64_t v162 = &off_1E5FF0168;
                                    while (1)
                                    {
                                      uint64_t v520 = __s[v496];
                                      uint64_t v521 = aUtf16be_0[v496];
                                      if (v520 == v521)
                                      {
                                        if (!__s[v496]) {
                                          goto LABEL_1058;
                                        }
                                      }
                                      else if (byte_1B0DE1758[v520] != byte_1B0DE1758[v521])
                                      {
                                        uint64_t v522 = 0;
                                        uint64_t v162 = &off_1E5FF0178;
                                        while (1)
                                        {
                                          uint64_t v887 = __s[v522];
                                          uint64_t v888 = aUtf16[v522];
                                          if (v887 == v888)
                                          {
                                            if (!__s[v522]) {
                                              goto LABEL_1058;
                                            }
                                          }
                                          else if (byte_1B0DE1758[v887] != byte_1B0DE1758[v888])
                                          {
                                            uint64_t v889 = 0;
                                            uint64_t v162 = &off_1E5FF0188;
                                            while (1)
                                            {
                                              uint64_t v890 = __s[v889];
                                              uint64_t v891 = aUtf16_0[v889];
                                              if (v890 == v891)
                                              {
                                                if (!__s[v889]) {
                                                  goto LABEL_1058;
                                                }
                                              }
                                              else if (byte_1B0DE1758[v890] != byte_1B0DE1758[v891])
                                              {
                                                sub_1B0CEF2BC(a1, "unsupported encoding: %s", v55, v56, v57, v58, v59, v60, (char)__s);
                                                goto LABEL_1083;
                                              }
                                              ++v889;
                                            }
                                          }
                                          ++v522;
                                        }
                                      }
                                      ++v496;
                                    }
                                  }
                                  ++v450;
                                }
                              }
                              ++v171;
                            }
                          }
                          ++v168;
                        }
                      }
                      ++v165;
                    }
                  }
                  ++v161;
                }
              }
              uint64_t v115 = v951;
              if (sub_1B0D25B50((uint64_t *)a1, (uint64_t)&off_1E5FEF698, v55, v56, v57, v58, v59, v60)) {
                goto LABEL_686;
              }
              v463 = (&off_1E5FF0118)[2 * *(unsigned __int8 *)(*(void *)a1 + 100)];
              goto LABEL_685;
            case 0xE:
              v964 = 0;
              v965[0] = 0;
              int v172 = *(_DWORD *)(a1 + 56);
              uint64_t v173 = (v172 + 5);
              *(_DWORD *)(a1 + 56) = v173;
              uint64_t v174 = __s;
              uint64_t v175 = *(void **)(*(void *)(*((void *)v955 + 4) + 32 * v18 + 24) + 16);
              if (!v175) {
                goto LABEL_1083;
              }
              unsigned int v943 = v172 + 2;
              unsigned int v945 = v172 + 1;
              unsigned int v941 = v172 + 3;
              do
              {
                while (1)
                {
                  if (v174)
                  {
                    uint64_t v176 = sub_1B0CB02B4(a1, 0, v174, zDbName, v57, v58, v59, v60);
                    uint64_t v175 = 0;
                  }
                  else
                  {
                    uint64_t v176 = v175[2];
                    uint64_t v175 = (void *)*v175;
                  }
                  if (v176 && !*(unsigned char *)(v176 + 63) && *(void *)(v176 + 72)) {
                    break;
                  }
                  if (!v175) {
                    goto LABEL_1083;
                  }
                }
                v935 = v175;
                uint64_t v177 = *(void *)(v176 + 96);
                uint64_t v178 = *(void *)(v83 + 32);
                if (v177)
                {
                  uint64_t v179 = (uint64_t *)(v178 + 24);
                  LODWORD(v180) = -1;
                  do
                  {
                    uint64_t v181 = *v179;
                    v179 += 4;
                    uint64_t v180 = (v180 + 1);
                  }
                  while (v181 != v177);
                }
                else
                {
                  uint64_t v180 = 4294934528;
                }
                zDbName = *(char **)(v178 + 32 * (int)v180);
                sub_1B0C9CCDC(a1, v180);
                sub_1B0D2FB04(a1, v180, *(_DWORD *)(v176 + 40), 0, *(void *)v176);
                int v185 = v173 + *(__int16 *)(v176 + 54);
                if (*(_DWORD *)(a1 + 56) < v185) {
                  *(_DWORD *)(a1 + 56) = v185;
                }
                sub_1B0C9CD14((void *)a1, 0, v180, v176, 112, v182, v183, v184);
                sub_1B0CCB908((uint64_t *)v962, 117, 0, v945, 0, *(void *)v176, 0, v186);
                uint64_t v192 = *(void *)(v176 + 72);
                if (v192)
                {
                  uint64_t v193 = 1;
                  v194 = zDbName;
                  while (1)
                  {
                    uint64_t v195 = sub_1B0CF60C8((uint64_t)v955, *(char **)(v192 + 16), v194);
                    if (v195)
                    {
                      uint64_t v196 = v195;
                      v965[0] = 0;
                      sub_1B0D2FB04(a1, v180, *(_DWORD *)(v195 + 40), 0, *(void *)v195);
                      if (sub_1B0D57960((void **)a1, v196, v192, v965, 0, v197, v198, v199)) {
                        goto LABEL_1083;
                      }
                      v203 = v965[0];
                      if (v965[0])
                      {
                        sub_1B0C8A924(v962, 112, v193, *((unsigned int *)v965[0] + 22), v180, v200, v201, v202);
                        sub_1B0D2FB30(a1, (uint64_t)v203);
                      }
                      else
                      {
                        sub_1B0C9CD14((void *)a1, v193, v180, v196, 112, v200, v201, v202);
                      }
                      v194 = zDbName;
                    }
                    uint64_t v193 = (v193 + 1);
                    uint64_t v192 = *(void *)(v192 + 8);
                    if (!v192) {
                      goto LABEL_207;
                    }
                  }
                }
                LODWORD(v193) = 1;
LABEL_207:
                if (*(_DWORD *)(a1 + 52) < (int)v193) {
                  *(_DWORD *)(a1 + 52) = v193;
                }
                int v937 = sub_1B0D2F978(v962, 36, 0, v187, v188, v189, v190, v191);
                uint64_t v208 = *(void *)(v176 + 72);
                uint64_t v209 = zDbName;
                uint64_t v210 = v955;
                if (v208)
                {
                  int v211 = 1;
                  do
                  {
                    unsigned int v957 = v211;
                    uint64_t v216 = sub_1B0CF60C8((uint64_t)v210, *(char **)(v208 + 16), v209);
                    v964 = 0;
                    v965[0] = 0;
                    if (v216) {
                      sub_1B0D57960((void **)a1, v216, v208, v965, (uint64_t *)&v964, v213, v214, v215);
                    }
                    int v218 = *(_DWORD *)(a1 + 68);
                    uint64_t v219 = (v218 - 1);
                    *(_DWORD *)(a1 + 68) = v219;
                    uint64_t v220 = *(unsigned int *)(v208 + 40);
                    if (*(_DWORD *)(a1 + 56) < (int)v220 + (int)v173) {
                      *(_DWORD *)(a1 + 56) = v220 + v173;
                    }
                    int v948 = v218;
                    if ((int)v220 >= 1)
                    {
                      uint64_t v939 = v216;
                      uint64_t v221 = 0;
                      uint64_t v222 = 0;
                      v223 = (unsigned int *)(v208 + 64);
                      do
                      {
                        if (v964) {
                          uint64_t v225 = (unsigned int *)((char *)v964 + v221);
                        }
                        else {
                          uint64_t v225 = v223;
                        }
                        *(double *)v217.i64 = sub_1B0D32578(v962, v176, 0, *v225, v173 + v222, v213, v214, v215, v217);
                        int v226 = *(_DWORD *)(v962 + 144);
                        if (*(_DWORD *)(v962 + 148) > v226)
                        {
                          *(_DWORD *)(v962 + 144) = v226 + 1;
                          uint64_t v224 = *(void *)(v962 + 136) + 40 * v226;
                          *(_DWORD *)uint64_t v224 = 50;
                          *(_DWORD *)(v224 + 4) = v173 + v222;
                          *(_DWORD *)(v224 + 8) = v219;
                          *(void *)(v224 + 12) = 0;
                          *(void *)(v224 + 28) = 0;
                          *(void *)(v224 + 20) = 0;
                          *(_DWORD *)(v224 + 36) = 0;
                        }
                        else
                        {
                          sub_1B0D25510(v962, 50, v173 + v222, v219, 0, v213, v214, v215);
                        }
                        ++v222;
                        uint64_t v220 = *(int *)(v208 + 40);
                        v221 += 4;
                        v223 += 4;
                      }
                      while (v222 < v220);
                      uint64_t v209 = zDbName;
                      uint64_t v210 = v955;
                      uint64_t v216 = v939;
                    }
                    if (v965[0])
                    {
                      uint64_t v227 = v965[0][4];
                      uint64_t v228 = v220;
                      if (!v227)
                      {
                        uint64_t v227 = sub_1B0D4FCF8((uint64_t)v210, (uint64_t)v965[0]);
                        uint64_t v228 = *(unsigned int *)(v208 + 40);
                      }
                      uint64_t v229 = v962;
                      sub_1B0CCB908((uint64_t *)v962, 96, v173, v220, 0, v227, v228, v215);
                      unsigned int v230 = v957;
                      sub_1B0CEF5FC(v962, 29, v957, v219, v173, *(unsigned int *)(v208 + 40), v231, v232);
                    }
                    else
                    {
                      uint64_t v229 = v962;
                      unsigned int v230 = v957;
                      if (v216)
                      {
                        sub_1B0C8A924(v962, 30, v957, (*(_DWORD *)(v962 + 144) + 2), v173, v213, v214, v215);
                        sub_1B0D2FAAC(v962, v219, v233, v234, v235, v236, v237, v238);
                      }
                    }
                    if ((*(_DWORD *)(v176 + 48) & 0x80) != 0) {
                      uint64_t v239 = 75;
                    }
                    else {
                      uint64_t v239 = 135;
                    }
                    sub_1B0D254B8(v229, v239, 0, v943, v212, v213, v214, v215);
                    sub_1B0D5D70C(v229, v941, (uint64_t)"siX", v240, v241, v242, v243, v244, *(void *)(v208 + 16));
                    int v245 = *(_DWORD *)(v229 + 144);
                    if (*(_DWORD *)(v229 + 148) <= v245)
                    {
                      sub_1B0D25510(v229, 84, v945, 4, 0, v205, v206, v207);
                    }
                    else
                    {
                      *(_DWORD *)(v229 + 144) = v245 + 1;
                      uint64_t v246 = *(void *)(v229 + 136) + 40 * v245;
                      *(_DWORD *)uint64_t v246 = 84;
                      *(_DWORD *)(v246 + 4) = v945;
                      *(_DWORD *)(v246 + 8) = 4;
                      *(void *)(v246 + 12) = 0;
                      *(void *)(v246 + 28) = 0;
                      *(void *)(v246 + 20) = 0;
                      *(_DWORD *)(v246 + 36) = 0;
                    }
                    uint64_t v247 = *(void *)(v229 + 24);
                    int v248 = -v948;
                    if (*(_DWORD *)(v247 + 68) + *(_DWORD *)(v247 + 72) < 0) {
                      sub_1B0D34EC8(v247, v229, v248);
                    }
                    else {
                      *(_DWORD *)(*(void *)(v247 + 80) + 4 * v248) = *(_DWORD *)(v229 + 144);
                    }
                    if (v964) {
                      sub_1B0D05C10(v210, v964);
                    }
                    int v211 = v230 + 1;
                    uint64_t v208 = *(void *)(v208 + 8);
                  }
                  while (v208);
                }
                sub_1B0D254B8(v962, 39, 0, (v937 + 1), v204, v205, v206, v207);
                uint64_t v249 = &byte_1E9B52240;
                if (!*(unsigned char *)(*(void *)v962 + 103)) {
                  uint64_t v249 = (char *)(*(void *)(v962 + 136) + 40 * v937);
                }
                *((_DWORD *)v249 + 2) = *(_DWORD *)(v962 + 144);
                uint64_t v83 = (uint64_t)v955;
                uint64_t v174 = __s;
                uint64_t v175 = v935;
              }
              while (v935);
              goto LABEL_1083;
            case 0xF:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              uint64_t v250 = sub_1B0CF60C8((uint64_t)v955, __s, zDbName);
              if (!v250) {
                goto LABEL_636;
              }
              if (*(unsigned char *)(v250 + 63)) {
                goto LABEL_636;
              }
              uint64_t v251 = *(void *)(v250 + 72);
              if (!v251) {
                goto LABEL_636;
              }
              uint64_t v252 = *(void *)(v250 + 96);
              if (v252)
              {
                v253 = (uint64_t *)(*((void *)v955 + 4) + 24);
                int v254 = -1;
                do
                {
                  uint64_t v255 = *v253;
                  v253 += 4;
                  ++v254;
                }
                while (v255 != v252);
              }
              else
              {
                int v254 = -32768;
              }
              *(_DWORD *)(a1 + 56) = 8;
              sub_1B0C9CCDC(a1, v254);
              uint64_t v907 = 0;
              do
              {
                if (*(int *)(v251 + 40) >= 1)
                {
                  uint64_t v908 = 0;
                  uint64_t v909 = v251 + 72;
                  do
                  {
                    v909 += 16;
                    sub_1B0D5D70C(v962, 1, (uint64_t)"iissssss", v902, v903, v904, v905, v906, v907);
                    ++v908;
                  }
                  while (v908 < *(int *)(v251 + 40));
                }
                uint64_t v907 = (v907 + 1);
                uint64_t v251 = *(void *)(v251 + 8);
              }
              while (v251);
              goto LABEL_1083;
            case 0x10:
              uint64_t v256 = 0;
              uint64_t v257 = (*((_DWORD *)v955 + 11) >> 5) & 1;
              *(_DWORD *)(a1 + 56) = 6;
              do
              {
                uint64_t v958 = v256;
                for (uint64_t n = *((void *)&xmmword_1EB220210 + v256); n; uint64_t n = *(void *)(n + 64))
                {
                  uint64_t v259 = n;
                  do
                  {
                    if (*(void *)(v259 + 24) && (v257 || (*(_DWORD *)(v259 + 4) & 0x40000) == 0)) {
                      sub_1B0D5D70C(v962, 1, (uint64_t)"sissii", v56, v57, v58, v59, v60, *(void *)(v259 + 56));
                    }
                    uint64_t v259 = *(void *)(v259 + 16);
                  }
                  while (v259);
                }
                uint64_t v256 = v958 + 1;
              }
              while (v958 != 22);
              for (iint i = (void *)*((void *)v955 + 78); ii; iint i = (void *)*ii)
                sub_1B0D5D894(v962, ii[2], 0, v257, v57, v58, v59, v60);
              goto LABEL_1083;
            case 0x11:
              v965[0] = 0;
              if (__s)
              {
                if (!sub_1B0CF8344(__s, (unint64_t *)v965))
                {
                  uint64_t v498 = sqlite3_hard_heap_limit64(-1);
                  if ((uint64_t)v965[0] >= 1 && (!v498 || v498 > (uint64_t)v965[0])) {
                    sqlite3_hard_heap_limit64((uint64_t)v965[0]);
                  }
                }
              }
              uint64_t v260 = sqlite3_hard_heap_limit64(-1);
              goto LABEL_355;
            case 0x12:
              LODWORD(v965[0]) = 0;
              if (!__s || !sub_1B0D22EF0((unsigned __int8 *)__s, v965) || SLODWORD(v965[0]) <= 0) {
                LODWORD(v965[0]) = 0x7FFFFFFF;
              }
              sub_1B0D3597C(a1, 0, v18);
              sub_1B0D254B8(v962, 71, LODWORD(v965[0]), 1, v261, v262, v263, v264);
              uint64_t v270 = sub_1B0D2F978(v962, 62, v18, v265, v266, v267, v268, v269);
              sub_1B0D2F978(v962, 84, 1, v271, v272, v273, v274, v275);
              sub_1B0D254B8(v962, 86, 1, 0xFFFFFFFFLL, v276, v277, v278, v279);
              sub_1B0D254B8(v962, 59, 1, v270, v280, v281, v282, v283);
              if (*(unsigned char *)(*(void *)v962 + 103)) {
                dword_1E9B52248 = *(_DWORD *)(v962 + 144);
              }
              else {
                *(_DWORD *)(*(void *)(v962 + 136) + 40 * (int)v270 + 8) = *(_DWORD *)(v962 + 144);
              }
              goto LABEL_1083;
            case 0x13:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              uint64_t v284 = sub_1B0D22904((uint64_t)v955, (unsigned __int8 *)__s, (unsigned __int8 *)zDbName);
              uint64_t v289 = v284;
              if (v284)
              {
                uint64_t v290 = *(void *)(v284 + 48);
                if (v290) {
                  goto LABEL_279;
                }
              }
              else
              {
                uint64_t v499 = sub_1B0CB02B4(a1, 2, __s, zDbName, v285, v286, v287, v288);
                if (!v499) {
                  goto LABEL_636;
                }
                if ((*(unsigned char *)(v499 + 48) & 0x80) == 0) {
                  goto LABEL_636;
                }
                uint64_t v289 = *(void *)(v499 + 16);
                if (!v289) {
                  goto LABEL_636;
                }
                while ((*(_WORD *)(v289 + 99) & 3) != 2)
                {
                  uint64_t v289 = *(void *)(v289 + 40);
                  if (!v289) {
                    goto LABEL_1083;
                  }
                }
                uint64_t v83 = (uint64_t)v955;
                uint64_t v290 = *(void *)(v289 + 48);
                if (v290)
                {
LABEL_279:
                  v291 = (uint64_t *)(*(void *)(v83 + 32) + 24);
                  int v292 = -1;
                  do
                  {
                    uint64_t v293 = *v291;
                    v291 += 4;
                    ++v292;
                  }
                  while (v293 != v290);
LABEL_1096:
                  v910 = (&off_1E5FEF698)[3 * (int)v68 + 2];
                  if (v910) {
                    int v911 = 6;
                  }
                  else {
                    int v911 = 3;
                  }
                  uint64_t v912 = 96;
                  if (!v910) {
                    uint64_t v912 = 94;
                  }
                  uint64_t v913 = *(unsigned __int16 *)(v289 + v912);
                  *(_DWORD *)(a1 + 56) = v911;
                  sub_1B0C9CCDC(a1, v292);
                  if (v913)
                  {
                    for (jint j = 0; jj != v913; ++jj)
                    {
                      sub_1B0D5D70C(v962, 1, (uint64_t)"iisX", v914, v915, v916, v917, v918, jj);
                      if (v910) {
                        sub_1B0D5D70C(v962, 4, (uint64_t)"isiX", v920, v921, v922, v923, v924, *(unsigned __int8 *)(*(void *)(v289 + 56) + jj));
                      }
                      sub_1B0D254B8(v962, 84, 1, *(unsigned int *)(a1 + 56), v921, v922, v923, v924);
                    }
                  }
                  goto LABEL_1083;
                }
              }
              int v292 = -32768;
              goto LABEL_1096;
            case 0x14:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              uint64_t v294 = sub_1B0CF60C8((uint64_t)v955, __s, zDbName);
              if (!v294) {
                goto LABEL_636;
              }
              uint64_t v295 = v294;
              uint64_t v296 = *(void *)(v294 + 96);
              if (v296)
              {
                v297 = (uint64_t *)(*((void *)v955 + 4) + 24);
                int v298 = -1;
                do
                {
                  uint64_t v299 = *v297;
                  v297 += 4;
                  ++v298;
                }
                while (v299 != v296);
              }
              else
              {
                int v298 = -32768;
              }
              *(_DWORD *)(a1 + 56) = 5;
              sub_1B0C9CCDC(a1, v298);
              uint64_t v528 = *(void *)(v295 + 16);
              if (v528)
              {
                uint64_t v529 = 0;
                do
                {
                  sub_1B0D5D70C(v962, 1, (uint64_t)"isisi", v523, v524, v525, v526, v527, v529);
                  uint64_t v529 = (v529 + 1);
                  uint64_t v528 = *(void *)(v528 + 40);
                }
                while (v528);
              }
              goto LABEL_1083;
            case 0x15:
              int v300 = *v951;
              if (*(void *)a3) {
                uint64_t v301 = v18;
              }
              else {
                uint64_t v301 = 0xFFFFFFFFLL;
              }
              uint64_t v928 = v301;
              *(_DWORD *)(a1 + 56) = 6;
              int v302 = 100;
              LODWORD(v964) = 100;
              if (__s)
              {
                if (sub_1B0D22EF0((unsigned __int8 *)__s, &v964))
                {
                  int v302 = (int)v964;
                  uint64_t v303 = v962;
                  uint64_t v304 = 0;
                  if ((int)v964 <= 0)
                  {
                    int v302 = 100;
                    LODWORD(v964) = 100;
                  }
LABEL_711:
                  sub_1B0D254B8(v303, 71, (v302 - 1), 1, v57, v58, v59, v60);
                  if (v304) {
                    int v542 = 2;
                  }
                  else {
                    int v542 = 1;
                  }
                  int v927 = v542;
                  if (*((int *)v955 + 10) < 1)
                  {
LABEL_1040:
                    uint64_t v886 = sub_1B0CC301C(v303, 7, (uint64_t)&unk_1B0DE5837, v537, v538, v539, v540, v541);
                    if (v886)
                    {
                      *(_DWORD *)(v886 + 8) = 1 - v964;
                      *(unsigned char *)(v886 + 81) = -1;
                      *(void *)(v886 + 96) = "ok";
                      *(unsigned char *)(v886 + 201) = -1;
                      *(void *)(v886 + 216) = "database disk image is malformed";
                    }
                    if (*(unsigned char *)(*(void *)v303 + 103)) {
                      dword_1E9B5224C = *(_DWORD *)(v303 + 144) - 2;
                    }
                    else {
                      *(_DWORD *)(*(void *)(v303 + 136) + 12) = *(_DWORD *)(v303 + 144) - 2;
                    }
                    goto LABEL_1083;
                  }
                  uint64_t v543 = 0;
                  unsigned int v544 = v300 & 0xFFFFFFDF;
                  uint64_t v931 = v304;
                  unsigned int v930 = v300 & 0xFFFFFFDF;
                  while (1)
                  {
                    if ((v928 & 0x80000000) != 0 || v543 == v928)
                    {
                      sub_1B0C9CCDC(a1, v543);
                      *(unsigned char *)(a1 + 35) = 0;
                      uint64_t v545 = *(void *)(*((void *)v955 + 4) + 32 * v543 + 24);
                      v546 = *(void **)(v545 + 16);
                      if (v546)
                      {
                        int v547 = 0;
                        int v548 = 0;
                        do
                        {
                          uint64_t v550 = v546[2];
                          if (!v304 || v304 == v550)
                          {
                            v548 += ((*(_DWORD *)(v550 + 48) >> 7) & 1) == 0;
                            uint64_t v551 = *(void *)(v550 + 16);
                            if (v551)
                            {
                              int v549 = 0;
                              do
                              {
                                ++v549;
                                uint64_t v551 = *(void *)(v551 + 40);
                              }
                              while (v551);
                              v548 += v549;
                            }
                            else
                            {
                              int v549 = 0;
                            }
                            if (v549 > v547) {
                              int v547 = v549;
                            }
                          }
                          v546 = (void *)*v546;
                        }
                        while (v546);
                        if (v548)
                        {
                          v552 = (_DWORD *)sub_1B0D05DC0((uint64_t)v955, 4 * (v548 + v927));
                          if (!v552) {
                            goto LABEL_1040;
                          }
                          if (v304)
                          {
                            v552[1] = 0;
                            uint64_t v553 = 1;
                          }
                          else
                          {
                            uint64_t v553 = 0;
                          }
                          for (kuint64_t k = *(void **)(v545 + 16); kk; kuint64_t k = (void *)*kk)
                          {
                            uint64_t v555 = kk[2];
                            if (!v304 || v304 == v555)
                            {
                              if ((*(unsigned char *)(v555 + 48) & 0x80) == 0)
                              {
                                uint64_t v553 = (v553 + 1);
                                v552[(int)v553] = *(_DWORD *)(v555 + 40);
                              }
                              uint64_t v556 = *(void *)(v555 + 16);
                              if (v556)
                              {
                                v557 = &v552[(int)v553 + 1];
                                do
                                {
                                  *v557++ = *(_DWORD *)(v556 + 88);
                                  uint64_t v556 = *(void *)(v556 + 40);
                                  uint64_t v553 = (v553 + 1);
                                }
                                while (v556);
                              }
                            }
                          }
                          _DWORD *v552 = v553;
                          if (*(_DWORD *)(a1 + 56) < v547 + 8) {
                            *(_DWORD *)(a1 + 56) = v547 + 8;
                          }
                          *(unsigned char *)(a1 + 31) = 0;
                          *(_DWORD *)(a1 + 40) = 0;
                          sub_1B0CCB908((uint64_t *)v303, 155, 2, v553, 1, (uint64_t)v552, 4294967282, v541);
                          int v563 = *(_DWORD *)(v303 + 144);
                          BOOL v564 = __OFSUB__(v563, 1);
                          int v565 = v563 - 1;
                          if (v565 < 0 == v564) {
                            *(_WORD *)(*(void *)(v303 + 136) + 40 * v565 + 2) = v543;
                          }
                          int v566 = sub_1B0D2F978(v303, 50, 2, v558, v559, v560, v561, v562);
                          v573 = sub_1B0C904AC((uint64_t)v955, "*** in database %s ***\n", v567, v568, v569, v570, v571, v572, *(void *)(*((void *)v955 + 4) + 32 * v543));
                          sub_1B0CCB908((uint64_t *)v303, 117, 0, 3, 0, (uint64_t)v573, 4294967290, v574);
                          sub_1B0C8A924(v303, 111, 2, 3, 3, v575, v576, v577);
                          sub_1B0D5DAB0(v303, v578, v579, v580, v581, v582, v583, v584);
                          v585 = &byte_1E9B52240;
                          if (!*(unsigned char *)(*(void *)v303 + 103)) {
                            v585 = (char *)(*(void *)(v303 + 136) + 40 * v566);
                          }
                          *((_DWORD *)v585 + 2) = *(_DWORD *)(v303 + 144);
                          v586 = *(void **)(v545 + 16);
                          if (v586) {
                            break;
                          }
                        }
                      }
                    }
LABEL_716:
                    if (++v543 >= *((int *)v955 + 10)) {
                      goto LABEL_1040;
                    }
                  }
                  uint64_t v929 = v543;
                  while (1)
                  {
                    uint64_t v588 = v586[2];
                    uint64_t v963 = 0;
                    if (v304) {
                      BOOL v589 = v304 == v588;
                    }
                    else {
                      BOOL v589 = 1;
                    }
                    int v590 = v589;
                    if (*(unsigned char *)(v588 + 63)) {
                      BOOL v591 = 1;
                    }
                    else {
                      BOOL v591 = v590 == 0;
                    }
                    if (v591) {
                      goto LABEL_758;
                    }
                    v933 = v586;
                    if (v544 == 81)
                    {
                      zDbNameb = 0;
                      unsigned int v934 = 0;
                      uint64_t v592 = (uint64_t)v955;
                    }
                    else
                    {
                      uint64_t v592 = (uint64_t)v955;
                      if ((*(unsigned char *)(v588 + 48) & 0x80) != 0)
                      {
                        uint64_t v593 = v588 + 16;
                        do
                        {
                          uint64_t v594 = *(void *)v593;
                          int v595 = *(_WORD *)(*(void *)v593 + 99) & 3;
                          uint64_t v593 = *(void *)v593 + 40;
                        }
                        while (v595 != 2);
                        uint64_t v596 = v594;
                        uint64_t v597 = sub_1B0D31118(a1, *(unsigned __int16 *)(v594 + 94));
                        zDbNameb = (char *)v596;
                        unsigned int v934 = v597;
                        sub_1B0C8A924(v303, 75, 1, v597, v597 + *(unsigned __int16 *)(v596 + 94) - 1, v598, v599, v600);
                      }
                      else
                      {
                        zDbNameb = 0;
                        unsigned int v934 = 0;
                      }
                    }
                    sub_1B0CB85EC(a1, v588, 112, 0, 1, 0, (_DWORD *)&v963 + 1, &v963);
                    sub_1B0D254B8(v303, 71, 0, 7, v601, v602, v603, v604);
                    uint64_t v609 = *(void *)(v588 + 16);
                    v936 = (uint64_t *)(v588 + 16);
                    if (v609)
                    {
                      uint64_t v610 = 8;
                      do
                      {
                        int v612 = *(_DWORD *)(v962 + 144);
                        if (*(_DWORD *)(v962 + 148) > v612)
                        {
                          *(_DWORD *)(v962 + 144) = v612 + 1;
                          uint64_t v611 = *(void *)(v962 + 136) + 40 * v612;
                          *(void *)uint64_t v611 = 71;
                          *(_DWORD *)(v611 + 8) = v610;
                          *(void *)(v611 + 12) = 0;
                          *(void *)(v611 + 28) = 0;
                          *(void *)(v611 + 20) = 0;
                          *(_DWORD *)(v611 + 36) = 0;
                        }
                        else
                        {
                          sub_1B0D25510(v962, 71, 0, v610, 0, v606, v607, v608);
                        }
                        uint64_t v609 = *(void *)(v609 + 40);
                        uint64_t v610 = (v610 + 1);
                      }
                      while (v609);
                    }
                    uint64_t v303 = v962;
                    unsigned int v946 = HIDWORD(v963);
                    sub_1B0D254B8(v962, 36, HIDWORD(v963), 0, v605, v606, v607, v608);
                    unsigned int v932 = sub_1B0D254B8(v962, 86, 7, 1, v613, v614, v615, v616);
                    uint64_t v624 = v588 + 16;
                    if ((*(unsigned char *)(v588 + 48) & 0x80) != 0)
                    {
                      do
                      {
                        uint64_t v630 = *(void *)v624;
                        int v631 = *(_WORD *)(*(void *)v624 + 99) & 3;
                        uint64_t v624 = *(void *)v624 + 40;
                      }
                      while (v631 != 2);
                      uint64_t v632 = *(unsigned __int16 *)(v630 + 96) - 1;
                      v625 = zDbNameb;
                    }
                    else
                    {
                      v625 = zDbNameb;
                      if (*(__int16 *)(v588 + 54) < 1)
                      {
                        int v629 = -1;
                      }
                      else
                      {
                        uint64_t v626 = *(unsigned __int16 *)(v588 + 54);
                        uint64_t v627 = *(void *)(v588 + 8);
                        if (v626 >= 9)
                        {
                          uint64_t v633 = v626 & 7;
                          if ((v626 & 7) == 0) {
                            uint64_t v633 = 8;
                          }
                          uint64_t v628 = v626 - v633;
                          uint64_t v634 = v627 + 78;
                          int32x4_t v635 = 0uLL;
                          uint64_t v636 = v628;
                          int32x4_t v637 = (int32x4_t)xmmword_1B0DE1630;
                          v638.i64[0] = 0x100000001;
                          v638.i64[1] = 0x100000001;
                          do
                          {
                            v639.i32[0] = vzip1_s16(*(int16x4_t *)(v634 - 64), *(int16x4_t *)(v634 - 48)).u32[0];
                            v639.i32[1] = vext_s8(*(int8x8_t *)(v634 - 32), (int8x8_t)vzip1_s16(*(int16x4_t *)(v634 - 32), *(int16x4_t *)(v634 - 16)), 4uLL).i32[1];
                            int8x8_t v640 = vext_s8(*(int8x8_t *)(v634 + 32), (int8x8_t)vzip1_s16(*(int16x4_t *)(v634 + 32), *(int16x4_t *)(v634 + 48)), 4uLL);
                            int16x4_t v641 = *(int16x4_t *)(v634 + 16);
                            int16x4_t v642 = *(int16x4_t *)v634;
                            v634 += 128;
                            v641.i32[0] = vzip1_s16(v642, v641).u32[0];
                            v641.i32[1] = v640.i32[1];
                            int32x4_t v637 = vaddq_s32(v637, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)vand_s8(v639, (int8x8_t)0x20002000200020))), v638));
                            int32x4_t v635 = vaddq_s32(v635, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)vand_s8((int8x8_t)v641, (int8x8_t)0x20002000200020))), v638));
                            v636 -= 8;
                          }
                          while (v636);
                          int16x8_t v623 = (int16x8_t)vaddq_s32(v635, v637);
                          v623.i32[0] = vaddvq_s32((int32x4_t)v623);
                          int v629 = v623.i32[0];
                        }
                        else
                        {
                          uint64_t v628 = 0;
                          int v629 = -1;
                        }
                        v643 = (__int16 *)(v627 + 16 * v628 + 14);
                        uint64_t v644 = v626 - v628;
                        do
                        {
                          __int16 v645 = *v643;
                          v643 += 8;
                          if ((v645 & 0x20) == 0) {
                            ++v629;
                          }
                          --v644;
                        }
                        while (v644);
                      }
                      uint64_t v632 = v629 - (v629 == *(__int16 *)(v588 + 52));
                    }
                    if ((v632 & 0x80000000) == 0)
                    {
                      sub_1B0C8A924(v962, 94, v946, v632, 3, v620, v621, v622);
                      sub_1B0D3547C(v962, 3);
                      v625 = zDbNameb;
                    }
                    v961 = (void *)v588;
                    if (v544 != 81 && v625)
                    {
                      int v646 = sub_1B0CEF5FC(v962, 41, v946, 0, v934, *((unsigned __int16 *)v625 + 47), v621, v622);
                      sub_1B0D2F978(v962, 50, v934, v647, v648, v649, v650, v651);
                      v658 = sub_1B0C904AC(v592, "row not in PRIMARY KEY order for %s", v652, v653, v654, v655, v656, v657, *(void *)v588);
                      sub_1B0CCB908((uint64_t *)v962, 117, 0, 3, 0, (uint64_t)v658, 4294967290, v659);
                      sub_1B0D5DAB0(v962, v660, v661, v662, v663, v664, v665, v666);
                      int v667 = *(_DWORD *)(v962 + 144);
                      if (*(unsigned char *)(*(void *)v962 + 103))
                      {
                        v668 = &byte_1E9B52240;
                        dword_1E9B52248 = *(_DWORD *)(v962 + 144);
                      }
                      else
                      {
                        uint64_t v669 = *(void *)(v962 + 136) + 40 * v646;
                        *(_DWORD *)(v669 + 8) = v667;
                        v668 = (char *)(v669 + 40);
                      }
                      *((_DWORD *)v668 + 2) = v667;
                      v625 = zDbNameb;
                      if (*((_WORD *)zDbNameb + 47))
                      {
                        unint64_t v670 = 0;
                        uint64_t v671 = 8;
                        while (1)
                        {
                          uint64_t v632 = *(__int16 *)(*((void *)v625 + 1) + 2 * v670);
                          if (v632 == -2) {
                            break;
                          }
                          v672 = v625;
                          *(double *)v623.i64 = sub_1B0D32578(*(void *)(a1 + 16), *((void *)v625 + 3), v946, v632, v934 + v670, v620, v621, v622, v623);
LABEL_809:
                          ++v670;
                          v671 += 24;
                          v625 = v672;
                          if (v670 >= *((unsigned __int16 *)v672 + 47)) {
                            goto LABEL_819;
                          }
                        }
                        *(_DWORD *)(a1 + 64) = v946 + 1;
                        v617 = *(unsigned __int8 **)(*((void *)v625 + 10) + v671);
                        uint64_t v673 = *(void *)a1;
                        if (v617)
                        {
                          v674 = (unsigned __int8 *)sub_1B0CAE048(*(void *)a1, v617, 0, 0);
                          if (!*(unsigned char *)(v673 + 103)) {
                            goto LABEL_813;
                          }
                        }
                        else
                        {
                          v674 = 0;
                          if (!*(unsigned char *)(v673 + 103)) {
LABEL_813:
                          }
                            sub_1B0D2F9D0(a1, v674, v934 + v670);
                        }
                        if (v674) {
                          sub_1B0D1DF88((void *)v673, v674);
                        }
                        *(_DWORD *)(a1 + 64) = 0;
                        v672 = zDbNameb;
                        uint64_t v588 = (uint64_t)v961;
                        goto LABEL_809;
                      }
                    }
LABEL_819:
                    if (*(__int16 *)(v588 + 54) >= 1)
                    {
                      uint64_t v675 = 0;
                      int v676 = *(_DWORD *)(v588 + 48);
                      int v938 = v676;
                      while (2)
                      {
                        if (v675 == *(__int16 *)(v588 + 52)) {
                          goto LABEL_823;
                        }
                        uint64_t v677 = *(void *)(v588 + 8);
                        if ((v676 & 0x10000) != 0)
                        {
                          LODWORD(v680) = *(unsigned __int8 *)(v677 + 16 * v675 + 8);
                          BOOL v678 = v680 > 0x1F;
                          BOOL v679 = v678;
                        }
                        else
                        {
                          BOOL v678 = 0;
                          uint64_t v680 = v677 + 16 * v675;
                          BOOL v679 = *(char *)(v680 + 9) > 65;
                          LOBYTE(v680) = *(unsigned char *)(v680 + 8);
                        }
                        if ((v680 & 0xF) == 0 && !v679) {
                          goto LABEL_823;
                        }
                        uint64_t v682 = v677 + 16 * v675;
                        BOOL v942 = v678;
                        if ((*(_WORD *)(v682 + 14) & 0x20) != 0)
                        {
                          unsigned int v949 = 3;
                          sub_1B0D32578(v962, v588, v946, v675, 3, v620, v621, v622, v623);
                          uint64_t v684 = 5;
                          uint64_t v687 = 0xFFFFFFFFLL;
                          goto LABEL_853;
                        }
                        int v683 = *(unsigned __int16 *)(v677 + 16 * v675 + 12);
                        if (*(_WORD *)(v677 + 16 * v675 + 12)
                          && (v965[0] = 0, !*(unsigned char *)(v588 + 63))
                          && (v688 = *(_DWORD **)(v588 + 80)) != 0
                          && *v688 >= v683
                          && (v617 = *(unsigned __int8 **)&v688[6 * (v683 - 1) + 2]) != 0
                          && (sub_1B0D27644((uint64_t)v955, v617, *((unsigned __int8 *)v955 + 100), *(unsigned __int8 *)(v677 + 16 * v675 + 9), (uint64_t *)v965), v965[0]))
                        {
                          uint64_t v689 = byte_1B0DE186A[*((_WORD *)v965[0] + 10) & 0x3F];
                          sub_1B0CEA450(v965[0]);
                          uint64_t v684 = v689;
                          if ((*(unsigned char *)(v588 + 48) & 0x80) != 0)
                          {
LABEL_843:
                            for (muint64_t m = *v936; mm; muint64_t m = *(void *)(mm + 40))
                            {
                              if ((*(_WORD *)(mm + 99) & 3) == 2) {
                                break;
                              }
                            }
                            uint64_t v691 = *(unsigned __int16 *)(mm + 96);
                            if (*(_WORD *)(mm + 96))
                            {
                              uint64_t v692 = 0;
                              uint64_t v693 = *(void *)(mm + 8);
                              while (*(unsigned __int16 *)(v693 + 2 * v692) != (unsigned __int16)v675)
                              {
                                if (v691 == ++v692) {
                                  goto LABEL_850;
                                }
                              }
                            }
                            else
                            {
LABEL_850:
                              LOWORD(v692) = -1;
                            }
                            unsigned int v949 = (__int16)v692;
LABEL_852:
                            uint64_t v687 = v946;
LABEL_853:
                            int v944 = *(_DWORD *)(a1 + 68);
                            uint64_t v694 = (v944 - 2);
                            *(_DWORD *)(a1 + 68) = v694;
                            v940 = (unsigned __int8 *)(v682 + 8);
                            if ((*(unsigned char *)(v682 + 8) & 0xF) != 0)
                            {
                              int v695 = *(_DWORD *)(v962 + 144);
                              if (*(_DWORD *)(v962 + 148) <= v695)
                              {
                                uint64_t v697 = v684;
                                int v695 = sub_1B0D2575C(v962, 18, v687, v694, v949, v684, v621, v622);
                              }
                              else
                              {
                                *(_DWORD *)(v962 + 144) = v695 + 1;
                                uint64_t v696 = *(void *)(v962 + 136) + 40 * v695;
                                *(_DWORD *)uint64_t v696 = 64786;
                                *(_DWORD *)(v696 + 4) = v687;
                                *(_DWORD *)(v696 + 8) = v694;
                                *(_DWORD *)(v696 + 12) = v949;
                                uint64_t v697 = v684;
                                *(_DWORD *)(v696 + 16) = v684;
                                *(void *)(v696 + 24) = 0;
                                *(void *)(v696 + 32) = 0;
                              }
                              int v698 = *(_DWORD *)(v962 + 144);
                              if ((v687 & 0x80000000) != 0)
                              {
                                int v700 = v695;
                                if (v698 >= 1)
                                {
                                  *(_WORD *)(*(void *)(v962 + 136) + 40 * (v698 - 1) + 2) = 15;
                                  int v700 = v695;
                                }
                              }
                              else
                              {
                                if (v698 >= 1) {
                                  *(_WORD *)(*(void *)(v962 + 136) + 40 * (v698 - 1) + 2) = 13;
                                }
                                if (*(_DWORD *)(v962 + 148) <= v698)
                                {
                                  sub_1B0D25510(v962, 94, v687, v949, 3, v684, v621, v622);
                                }
                                else
                                {
                                  *(_DWORD *)(v962 + 144) = v698 + 1;
                                  uint64_t v699 = *(void *)(v962 + 136) + 40 * v698;
                                  *(_DWORD *)uint64_t v699 = 94;
                                  *(_DWORD *)(v699 + 4) = v687;
                                  *(_DWORD *)(v699 + 8) = v949;
                                  *(_DWORD *)(v699 + 12) = 3;
                                  *(void *)(v699 + 24) = 0;
                                  *(void *)(v699 + 32) = 0;
                                  *(void *)(v699 + 16) = 0;
                                }
                                int v700 = *(_DWORD *)(v962 + 144);
                                if (*(_DWORD *)(v962 + 148) <= v700)
                                {
                                  int v700 = sub_1B0D25510(v962, 51, 3, v694, 0, v684, v621, v622);
                                }
                                else
                                {
                                  *(_DWORD *)(v962 + 144) = v700 + 1;
                                  uint64_t v701 = *(void *)(v962 + 136) + 40 * v700;
                                  *(void *)uint64_t v701 = 0x300000033;
                                  *(_DWORD *)(v701 + 8) = v694;
                                  *(void *)(v701 + 12) = 0;
                                  *(void *)(v701 + 28) = 0;
                                  *(void *)(v701 + 20) = 0;
                                  *(_DWORD *)(v701 + 36) = 0;
                                }
                              }
                              v702 = sub_1B0C904AC((uint64_t)v955, "NULL value in %s.%s", v618, v632, v619, v684, v621, v622, *v961);
                              sub_1B0CCB908((uint64_t *)v962, 117, 0, 3, 0, (uint64_t)v702, 4294967290, v703);
                              uint64_t v684 = v697;
                              if (v679)
                              {
                                uint64_t v632 = (v944 - 1);
                                int v704 = *(_DWORD *)(v962 + 144);
                                if (*(_DWORD *)(v962 + 148) <= v704)
                                {
                                  sub_1B0D25510(v962, 9, 0, v632, 0, v697, v621, v622);
                                  uint64_t v684 = v697;
                                }
                                else
                                {
                                  *(_DWORD *)(v962 + 144) = v704 + 1;
                                  uint64_t v705 = *(void *)(v962 + 136) + 40 * v704;
                                  *(void *)uint64_t v705 = 9;
                                  *(_DWORD *)(v705 + 8) = v632;
                                  *(void *)(v705 + 12) = 0;
                                  *(void *)(v705 + 28) = 0;
                                  *(void *)(v705 + 20) = 0;
                                  *(_DWORD *)(v705 + 36) = 0;
                                }
                                int v706 = *(_DWORD *)(v962 + 144);
                                if (*(unsigned char *)(*(void *)v962 + 103))
                                {
                                  v707 = &byte_1E9B52240;
                                  dword_1E9B52248 = *(_DWORD *)(v962 + 144);
                                }
                                else
                                {
                                  uint64_t v708 = *(void *)(v962 + 136);
                                  *(_DWORD *)(v708 + 40 * v695 + 8) = v706;
                                  v707 = (char *)(v708 + 40 * v700);
                                }
                                *((_DWORD *)v707 + 2) = v706;
                              }
                            }
                            if (v942)
                            {
                              int v709 = *(_DWORD *)(v962 + 144);
                              uint64_t v588 = (uint64_t)v961;
                              int v676 = v938;
                              int v710 = v944;
                              if (*(_DWORD *)(v962 + 148) <= v709)
                              {
                                sub_1B0D2575C(v962, 18, v687, v694, v949, v684, v621, v622);
                              }
                              else
                              {
                                *(_DWORD *)(v962 + 144) = v709 + 1;
                                uint64_t v711 = *(void *)(v962 + 136) + 40 * v709;
                                *(_DWORD *)uint64_t v711 = 64786;
                                *(_DWORD *)(v711 + 4) = v687;
                                *(_DWORD *)(v711 + 8) = v694;
                                *(_DWORD *)(v711 + 12) = v949;
                                *(_DWORD *)(v711 + 16) = v684;
                                *(void *)(v711 + 24) = 0;
                                *(void *)(v711 + 32) = 0;
                              }
                              int v723 = *(_DWORD *)(v962 + 144);
                              BOOL v564 = __OFSUB__(v723, 1);
                              int v724 = v723 - 1;
                              if (v724 < 0 == v564) {
                                *(_WORD *)(*(void *)(v962 + 136) + 40 * v724 + 2) = byte_1B0DE5831[((unint64_t)*v940 >> 4) - 1];
                              }
                              v721 = sub_1B0C904AC((uint64_t)v955, "non-%s value in %s.%s", v618, v632, v619, v684, v621, v622, (char)*(char **)((char *)&off_1E9B51F20[-1]+ (((unint64_t)*v940 >> 1) & 0x78)));
                              goto LABEL_888;
                            }
                            uint64_t v588 = (uint64_t)v961;
                            int v676 = v938;
                            int v710 = v944;
                            if ((v938 & 0x10000) == 0)
                            {
                              int v712 = *(char *)(v677 + 16 * v675 + 9);
                              if (v712 == 66)
                              {
                                sub_1B0CEF5FC(v962, 18, v687, v694, v949, v684, v621, v622);
                                int v719 = *(_DWORD *)(v962 + 144);
                                BOOL v564 = __OFSUB__(v719, 1);
                                int v720 = v719 - 1;
                                if (v720 < 0 == v564) {
                                  *(_WORD *)(*(void *)(v962 + 136) + 40 * v720 + 2) = 28;
                                }
                                v721 = sub_1B0C904AC((uint64_t)v955, "NUMERIC value in %s.%s", v713, v714, v715, v716, v717, v718, *v961);
                                goto LABEL_888;
                              }
                              if (v712 >= 67)
                              {
                                uint64_t v728 = v684;
                                sub_1B0CEF5FC(v962, 18, v687, v694, v949, v684, v621, v622);
                                int v733 = *(_DWORD *)(v962 + 144);
                                BOOL v564 = __OFSUB__(v733, 1);
                                int v734 = v733 - 1;
                                if (v734 < 0 == v564) {
                                  *(_WORD *)(*(void *)(v962 + 136) + 40 * v734 + 2) = 27;
                                }
                                if ((v687 & 0x80000000) == 0) {
                                  sub_1B0D32578(v962, (uint64_t)v961, v946, v675, 3, v729, v730, v731, v732);
                                }
                                sub_1B0CCB908((uint64_t *)v962, 96, 3, 1, 0, (uint64_t)"C", 0xFFFFFFFFLL, v731);
                                sub_1B0CEF5FC(v962, 18, 0xFFFFFFFFLL, v694, 3, v728, v735, v736);
                                int v743 = *(_DWORD *)(v962 + 144);
                                BOOL v564 = __OFSUB__(v743, 1);
                                int v744 = v743 - 1;
                                if (v744 < 0 == v564) {
                                  *(_WORD *)(*(void *)(v962 + 136) + 40 * v744 + 2) = 28;
                                }
                                v721 = sub_1B0C904AC((uint64_t)v955, "TEXT value in %s.%s", v737, v738, v739, v740, v741, v742, *v961);
LABEL_888:
                                sub_1B0CCB908((uint64_t *)v962, 117, 0, 3, 0, (uint64_t)v721, 4294967290, v722);
                              }
                            }
                            uint64_t v725 = *(void *)(v962 + 24);
                            uint64_t v726 = -v710;
                            if (*(_DWORD *)(v725 + 68) + *(_DWORD *)(v725 + 72) < 0) {
                              sub_1B0D34EC8(v725, v962, v726);
                            }
                            else {
                              *(_DWORD *)(*(void *)(v725 + 80) + 4 * (int)v726) = *(_DWORD *)(v962 + 144);
                            }
                            sub_1B0D5DAB0(v962, (uint64_t)v617, v726, v632, v619, v684, v621, v622);
                            uint64_t v727 = *(void *)(v962 + 24);
                            uint64_t v618 = (1 - v710);
                            if (*(_DWORD *)(v727 + 68) + *(_DWORD *)(v727 + 72) < 0) {
                              sub_1B0D34EC8(v727, v962, v618);
                            }
                            else {
                              *(_DWORD *)(*(void *)(v727 + 80) + 4 * (int)v618) = *(_DWORD *)(v962 + 144);
                            }
                            v625 = zDbNameb;
LABEL_823:
                            if (++v675 >= *(__int16 *)(v588 + 54)) {
                              goto LABEL_902;
                            }
                            continue;
                          }
                        }
                        else
                        {
                          uint64_t v684 = 5;
                          if ((*(unsigned char *)(v588 + 48) & 0x80) != 0) {
                            goto LABEL_843;
                          }
                        }
                        break;
                      }
                      uint64_t v685 = v684;
                      unsigned int v686 = sub_1B0D30554(v588, (__int16)v675);
                      uint64_t v684 = v685;
                      unsigned int v949 = v686;
                      goto LABEL_852;
                    }
LABEL_902:
                    v745 = *(void **)(v588 + 32);
                    uint64_t v304 = v931;
                    unsigned int v544 = v930;
                    if (v745 && (*((unsigned char *)v955 + 49) & 2) == 0)
                    {
                      v746 = sub_1B0CAE478((uint64_t)v955, v745, 0);
                      v747 = v746;
                      if (!*((unsigned char *)v955 + 103))
                      {
                        int v748 = *(_DWORD *)(a1 + 68);
                        uint64_t v749 = (v748 - 1);
                        uint64_t v750 = (v748 - 2);
                        *(_DWORD *)(a1 + 64) = v946 + 1;
                        *(_DWORD *)(a1 + 68) = v750;
                        uint64_t v751 = *(unsigned int *)v746;
                        if ((int)v751 >= 2)
                        {
                          unint64_t v752 = v751 + 1;
                          do
                            sub_1B0CC2204(a1, (unsigned __int8 **)v747[3 * (v752-- - 2) + 1], v749, 0, v619, v620, v621, v622);
                          while (v752 > 2);
                        }
                        sub_1B0CCFCD4(a1, (unsigned __int8 *)v747[1], v750, 16, v619, v620, v621, v622);
                        uint64_t v303 = v962;
                        sub_1B0D31504(v962, v749);
                        *(_DWORD *)(a1 + 64) = 0;
                        uint64_t v588 = (uint64_t)v961;
                        v759 = sub_1B0C904AC((uint64_t)v955, "CHECK constraint failed in %s", v753, v754, v755, v756, v757, v758, *v961);
                        sub_1B0CCB908((uint64_t *)v962, 117, 0, 3, 0, (uint64_t)v759, 4294967290, v760);
                        sub_1B0D5DAB0(v962, v761, v762, v763, v764, v765, v766, v767);
                        sub_1B0D31504(v962, v750);
LABEL_911:
                        sub_1B0D270DC(v955, v747);
                        v625 = zDbNameb;
                        goto LABEL_912;
                      }
                      v625 = zDbNameb;
                      if (v746) {
                        goto LABEL_911;
                      }
                    }
LABEL_912:
                    if (v930 == 81)
                    {
                      sub_1B0D254B8(v303, 39, v946, v932, v619, v620, v621, v622);
                      v587 = &byte_1E9B52240;
                      uint64_t v543 = v929;
                      if (!*(unsigned char *)(*(void *)v303 + 103)) {
                        v587 = (char *)(*(void *)(v303 + 136) + 40 * (int)v932 - 40);
                      }
                      *((_DWORD *)v587 + 2) = *(_DWORD *)(v303 + 144);
                      v586 = v933;
                      goto LABEL_758;
                    }
                    uint64_t v768 = *v936;
                    if (*v936)
                    {
                      uint64_t v621 = 0;
                      int v769 = 0;
                      uint64_t v770 = 0xFFFFFFFFLL;
                      do
                      {
                        LODWORD(v965[0]) = 0;
                        uint64_t v771 = (*(_DWORD *)(a1 + 68) - 1);
                        *(_DWORD *)(a1 + 68) = v771;
                        if (v625 != (char *)v768)
                        {
                          uint64_t v770 = sub_1B0CBBF4C(a1, v768, HIDWORD(v963), 0, 0, (int *)v965, v621, v770, v623);
                          uint64_t v775 = (v769 + 8);
                          int v776 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v776)
                          {
                            sub_1B0D25510(v303, 86, v775, 1, 0, v772, v773, v774);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v776 + 1;
                            uint64_t v777 = *(void *)(v303 + 136) + 40 * v776;
                            *(_DWORD *)uint64_t v777 = 86;
                            *(_DWORD *)(v777 + 4) = v775;
                            *(_DWORD *)(v777 + 8) = 1;
                            *(void *)(v777 + 12) = 0;
                            *(void *)(v777 + 28) = 0;
                            *(void *)(v777 + 20) = 0;
                            *(_DWORD *)(v777 + 36) = 0;
                          }
                          uint64_t v778 = (v963 + v769);
                          uint64_t v779 = *(unsigned __int16 *)(v768 + 96);
                          int v780 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v780)
                          {
                            int v780 = sub_1B0D2575C(v303, 29, (v963 + v769), v771, v770, v779, v773, v774);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v780 + 1;
                            uint64_t v781 = *(void *)(v303 + 136) + 40 * v780;
                            *(_DWORD *)uint64_t v781 = 64797;
                            *(_DWORD *)(v781 + 4) = v778;
                            *(_DWORD *)(v781 + 8) = v771;
                            *(_DWORD *)(v781 + 12) = v770;
                            *(_DWORD *)(v781 + 16) = v779;
                            *(void *)(v781 + 24) = 0;
                            *(void *)(v781 + 32) = 0;
                          }
                          sub_1B0CCB908((uint64_t *)v303, 117, 0, 3, 0, (uint64_t)"row ", 0, v774);
                          int v785 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v785)
                          {
                            sub_1B0D25510(v303, 111, 7, 3, 3, v782, v783, v784);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v785 + 1;
                            uint64_t v786 = *(void *)(v303 + 136) + 40 * v785;
                            *(_DWORD *)uint64_t v786 = 111;
                            *(void *)(v786 + 4) = 0x300000007;
                            *(_DWORD *)(v786 + 12) = 3;
                            *(void *)(v786 + 24) = 0;
                            *(void *)(v786 + 32) = 0;
                            *(void *)(v786 + 16) = 0;
                          }
                          sub_1B0CCB908((uint64_t *)v303, 117, 0, 4, 0, (uint64_t)" missing from index ", 0, v784);
                          int v790 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v790)
                          {
                            sub_1B0D25510(v303, 111, 4, 3, 3, v787, v788, v789);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v790 + 1;
                            uint64_t v791 = *(void *)(v303 + 136) + 40 * v790;
                            *(_DWORD *)uint64_t v791 = 111;
                            *(void *)(v791 + 4) = 0x300000004;
                            *(_DWORD *)(v791 + 12) = 3;
                            *(void *)(v791 + 24) = 0;
                            *(void *)(v791 + 32) = 0;
                            *(void *)(v791 + 16) = 0;
                          }
                          unsigned int v950 = sub_1B0CCB908((uint64_t *)v303, 117, 0, 4, 0, *(void *)v768, 0, v789);
                          int v799 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v799)
                          {
                            sub_1B0D25510(v303, 111, 4, 3, 3, v796, v797, v798);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v799 + 1;
                            uint64_t v800 = *(void *)(v303 + 136) + 40 * v799;
                            *(_DWORD *)uint64_t v800 = 111;
                            *(void *)(v800 + 4) = 0x300000004;
                            *(_DWORD *)(v800 + 12) = 3;
                            *(void *)(v800 + 24) = 0;
                            *(void *)(v800 + 32) = 0;
                            *(void *)(v800 + 16) = 0;
                          }
                          int v947 = sub_1B0D5DAB0(v303, v792, v793, v794, v795, v796, v797, v798);
                          int v802 = *(_DWORD *)(v303 + 144);
                          v803 = &byte_1E9B52240;
                          if (!*(unsigned char *)(*(void *)v303 + 103)) {
                            v803 = (char *)(*(void *)(v303 + 136) + 40 * v780);
                          }
                          *((_DWORD *)v803 + 2) = v802;
                          if ((*(unsigned char *)(v588 + 48) & 0x80) == 0)
                          {
                            if (*(_DWORD *)(v303 + 148) <= v802)
                            {
                              sub_1B0D25510(v303, 142, v778, 3, 0, v620, v801, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v303 + 144) = v802 + 1;
                              uint64_t v804 = *(void *)(v303 + 136) + 40 * v802;
                              *(_DWORD *)uint64_t v804 = 142;
                              *(_DWORD *)(v804 + 4) = v778;
                              *(_DWORD *)(v804 + 8) = 3;
                              *(void *)(v804 + 12) = 0;
                              *(void *)(v804 + 28) = 0;
                              *(void *)(v804 + 20) = 0;
                              *(_DWORD *)(v804 + 36) = 0;
                            }
                            uint64_t v805 = v770 + *(unsigned __int16 *)(v768 + 96) - 1;
                            int v806 = *(_DWORD *)(v303 + 144);
                            if (*(_DWORD *)(v303 + 148) <= v806)
                            {
                              int v806 = sub_1B0D25510(v303, 53, 3, 0, v805, v620, v801, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v303 + 144) = v806 + 1;
                              uint64_t v807 = *(void *)(v303 + 136) + 40 * v806;
                              *(_DWORD *)uint64_t v807 = 53;
                              *(void *)(v807 + 4) = 3;
                              *(_DWORD *)(v807 + 12) = v805;
                              *(void *)(v807 + 24) = 0;
                              *(void *)(v807 + 32) = 0;
                              *(void *)(v807 + 16) = 0;
                            }
                            sub_1B0CCB908((uint64_t *)v303, 117, 0, 3, 0, (uint64_t)"rowid not at end-of-record for row ", 0, v622);
                            int v811 = *(_DWORD *)(v303 + 144);
                            if (*(_DWORD *)(v303 + 148) <= v811)
                            {
                              sub_1B0D25510(v303, 111, 7, 3, 3, v808, v809, v810);
                            }
                            else
                            {
                              *(_DWORD *)(v303 + 144) = v811 + 1;
                              uint64_t v812 = *(void *)(v303 + 136) + 40 * v811;
                              *(_DWORD *)uint64_t v812 = 111;
                              *(void *)(v812 + 4) = 0x300000007;
                              *(_DWORD *)(v812 + 12) = 3;
                              *(void *)(v812 + 24) = 0;
                              *(void *)(v812 + 32) = 0;
                              *(void *)(v812 + 16) = 0;
                            }
                            sub_1B0CCB908((uint64_t *)v303, 117, 0, 4, 0, (uint64_t)" of index ", 0, v810);
                            uint64_t v813 = v950 - 1;
                            int v814 = *(_DWORD *)(v303 + 144);
                            if (*(_DWORD *)(v303 + 148) <= v814)
                            {
                              sub_1B0D25510(v303, 9, 0, v813, 0, v620, v801, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v303 + 144) = v814 + 1;
                              uint64_t v815 = *(void *)(v303 + 136) + 40 * v814;
                              *(void *)uint64_t v815 = 9;
                              *(_DWORD *)(v815 + 8) = v813;
                              *(void *)(v815 + 12) = 0;
                              *(void *)(v815 + 28) = 0;
                              *(void *)(v815 + 20) = 0;
                              *(_DWORD *)(v815 + 36) = 0;
                            }
                            v816 = &byte_1E9B52240;
                            if (!*(unsigned char *)(*(void *)v303 + 103)) {
                              v816 = (char *)(*(void *)(v303 + 136) + 40 * v806);
                            }
                            *((_DWORD *)v816 + 2) = *(_DWORD *)(v303 + 144);
                          }
                          if (*(_WORD *)(v768 + 94))
                          {
                            unint64_t v817 = 0;
                            uint64_t v818 = 0;
                            do
                            {
                              if (*(char **)(*(void *)(v768 + 64) + 8 * v817) != "BINARY")
                              {
                                if (!v818)
                                {
                                  uint64_t v818 = (*(_DWORD *)(a1 + 68) - 1);
                                  *(_DWORD *)(a1 + 68) = v818;
                                }
                                int v820 = *(_DWORD *)(v303 + 144);
                                if (*(_DWORD *)(v303 + 148) <= v820)
                                {
                                  sub_1B0D25510(v303, 94, v778, v817, 3, v620, v801, v622);
                                }
                                else
                                {
                                  *(_DWORD *)(v303 + 144) = v820 + 1;
                                  uint64_t v821 = *(void *)(v303 + 136) + 40 * v820;
                                  *(_DWORD *)uint64_t v821 = 94;
                                  *(_DWORD *)(v821 + 4) = v778;
                                  *(_DWORD *)(v821 + 8) = v817;
                                  *(_DWORD *)(v821 + 12) = 3;
                                  *(void *)(v821 + 24) = 0;
                                  *(void *)(v821 + 32) = 0;
                                  *(void *)(v821 + 16) = 0;
                                }
                                uint64_t v619 = (v817 + v770);
                                int v822 = *(_DWORD *)(v303 + 144);
                                if (*(_DWORD *)(v303 + 148) > v822)
                                {
                                  *(_DWORD *)(v303 + 144) = v822 + 1;
                                  uint64_t v819 = *(void *)(v303 + 136) + 40 * v822;
                                  *(void *)uint64_t v819 = 0x300000034;
                                  *(_DWORD *)(v819 + 8) = v818;
                                  *(_DWORD *)(v819 + 12) = v619;
                                  *(void *)(v819 + 24) = 0;
                                  *(void *)(v819 + 32) = 0;
                                  *(void *)(v819 + 16) = 0;
                                }
                                else
                                {
                                  sub_1B0D25510(v303, 52, 3, v818, v619, v620, v801, v622);
                                }
                              }
                              ++v817;
                            }
                            while (v817 < *(unsigned __int16 *)(v768 + 94));
                            if (v818)
                            {
                              int v823 = *(_DWORD *)(v303 + 144);
                              if (*(_DWORD *)(v303 + 148) <= v823)
                              {
                                int v823 = sub_1B0D25510(v303, 9, 0, 0, 0, v620, v801, v622);
                              }
                              else
                              {
                                *(_DWORD *)(v303 + 144) = v823 + 1;
                                uint64_t v824 = *(void *)(v303 + 136) + 40 * v823;
                                *(unsigned char *)uint64_t v824 = 9;
                                *(_OWORD *)(v824 + 1) = 0u;
                                *(_OWORD *)(v824 + 17) = 0u;
                                *(void *)(v824 + 32) = 0;
                              }
                              uint64_t v825 = *(void *)(v303 + 24);
                              int v826 = ~v818;
                              if (*(_DWORD *)(v825 + 68) + *(_DWORD *)(v825 + 72) < 0) {
                                sub_1B0D34EC8(v825, v303, v826);
                              }
                              else {
                                *(_DWORD *)(*(void *)(v825 + 80) + 4 * v826) = *(_DWORD *)(v303 + 144);
                              }
                              sub_1B0CCB908((uint64_t *)v303, 117, 0, 3, 0, (uint64_t)"row ", 0, v622);
                              int v830 = *(_DWORD *)(v303 + 144);
                              if (*(_DWORD *)(v303 + 148) <= v830)
                              {
                                sub_1B0D25510(v303, 111, 7, 3, 3, v827, v828, v829);
                              }
                              else
                              {
                                *(_DWORD *)(v303 + 144) = v830 + 1;
                                uint64_t v831 = *(void *)(v303 + 136) + 40 * v830;
                                *(_DWORD *)uint64_t v831 = 111;
                                *(void *)(v831 + 4) = 0x300000007;
                                *(_DWORD *)(v831 + 12) = 3;
                                *(void *)(v831 + 24) = 0;
                                *(void *)(v831 + 32) = 0;
                                *(void *)(v831 + 16) = 0;
                              }
                              sub_1B0CCB908((uint64_t *)v303, 117, 0, 4, 0, (uint64_t)" values differ from index ", 0, v829);
                              uint64_t v832 = v950 - 1;
                              int v833 = *(_DWORD *)(v303 + 144);
                              if (*(_DWORD *)(v303 + 148) <= v833)
                              {
                                sub_1B0D25510(v303, 9, 0, v832, 0, v620, v801, v622);
                              }
                              else
                              {
                                *(_DWORD *)(v303 + 144) = v833 + 1;
                                uint64_t v834 = *(void *)(v303 + 136) + 40 * v833;
                                *(void *)uint64_t v834 = 9;
                                *(_DWORD *)(v834 + 8) = v832;
                                *(void *)(v834 + 12) = 0;
                                *(void *)(v834 + 28) = 0;
                                *(void *)(v834 + 20) = 0;
                                *(_DWORD *)(v834 + 36) = 0;
                              }
                              v835 = &byte_1E9B52240;
                              if (!*(unsigned char *)(*(void *)v303 + 103)) {
                                v835 = (char *)(*(void *)(v303 + 136) + 40 * v823);
                              }
                              *((_DWORD *)v835 + 2) = *(_DWORD *)(v303 + 144);
                            }
                          }
                          if (*(unsigned char *)(v768 + 98))
                          {
                            int v836 = *(_DWORD *)(a1 + 68);
                            int v837 = v836 - 1;
                            *(_DWORD *)(a1 + 68) = v836 - 1;
                            if (*(_WORD *)(v768 + 94))
                            {
                              unint64_t v838 = 0;
                              do
                              {
                                if (*(__int16 *)(*(void *)(v768 + 8) + 2 * v838) < 0
                                  || (*(unsigned char *)(v961[1]
                                               + 16 * *(unsigned __int16 *)(*(void *)(v768 + 8) + 2 * v838)
                                               + 8) & 0xF) == 0)
                                {
                                  uint64_t v840 = v770 + v838;
                                  int v841 = *(_DWORD *)(v962 + 144);
                                  if (*(_DWORD *)(v962 + 148) > v841)
                                  {
                                    *(_DWORD *)(v962 + 144) = v841 + 1;
                                    uint64_t v839 = *(void *)(v962 + 136) + 40 * v841;
                                    *(_DWORD *)uint64_t v839 = 50;
                                    *(_DWORD *)(v839 + 4) = v840;
                                    *(_DWORD *)(v839 + 8) = v837;
                                    *(void *)(v839 + 12) = 0;
                                    *(void *)(v839 + 28) = 0;
                                    *(void *)(v839 + 20) = 0;
                                    *(_DWORD *)(v839 + 36) = 0;
                                  }
                                  else
                                  {
                                    sub_1B0D25510(v962, 50, v840, (v836 - 1), 0, v620, v801, v622);
                                  }
                                }
                                ++v838;
                              }
                              while (v838 < *(unsigned __int16 *)(v768 + 94));
                            }
                            uint64_t v303 = v962;
                            int v842 = *(_DWORD *)(v962 + 144);
                            if (*(_DWORD *)(v962 + 148) <= v842)
                            {
                              int v842 = sub_1B0D25510(v962, 39, v778, 0, 0, v620, v801, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v962 + 144) = v842 + 1;
                              uint64_t v843 = *(void *)(v962 + 136) + 40 * v842;
                              *(_DWORD *)uint64_t v843 = 39;
                              *(_DWORD *)(v843 + 4) = v778;
                              *(_OWORD *)(v843 + 8) = 0u;
                              *(_OWORD *)(v843 + 24) = 0u;
                            }
                            int v844 = *(_DWORD *)(v962 + 144);
                            if (*(_DWORD *)(v962 + 148) <= v844)
                            {
                              sub_1B0D25510(v962, 9, 0, (v836 - 1), 0, v620, v801, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v962 + 144) = v844 + 1;
                              uint64_t v845 = *(void *)(v962 + 136) + 40 * v844;
                              *(void *)uint64_t v845 = 9;
                              *(_DWORD *)(v845 + 8) = v837;
                              *(void *)(v845 + 12) = 0;
                              *(void *)(v845 + 28) = 0;
                              *(void *)(v845 + 20) = 0;
                              *(_DWORD *)(v845 + 36) = 0;
                            }
                            int v846 = *(_DWORD *)(v962 + 144);
                            v847 = &byte_1E9B52240;
                            if (!*(unsigned char *)(*(void *)v962 + 103)) {
                              v847 = (char *)(*(void *)(v962 + 136) + 40 * v842);
                            }
                            *((_DWORD *)v847 + 2) = v846;
                            uint64_t v848 = *(unsigned __int16 *)(v768 + 94);
                            if (*(_DWORD *)(v962 + 148) <= v846)
                            {
                              sub_1B0D2575C(v962, 41, v778, (v836 - 1), v770, v848, v801, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v962 + 144) = v846 + 1;
                              uint64_t v849 = *(void *)(v962 + 136) + 40 * v846;
                              *(_DWORD *)uint64_t v849 = 64809;
                              *(_DWORD *)(v849 + 4) = v778;
                              *(_DWORD *)(v849 + 8) = v837;
                              *(_DWORD *)(v849 + 12) = v770;
                              *(_DWORD *)(v849 + 16) = v848;
                              *(void *)(v849 + 24) = 0;
                              *(void *)(v849 + 32) = 0;
                            }
                            sub_1B0CCB908((uint64_t *)v962, 117, 0, 3, 0, (uint64_t)"non-unique entry in index ", 0, v622);
                            int v851 = *(_DWORD *)(v962 + 144);
                            if (*(_DWORD *)(v962 + 148) <= v851)
                            {
                              sub_1B0D25510(v962, 9, 0, v950, 0, v620, v850, v622);
                            }
                            else
                            {
                              *(_DWORD *)(v962 + 144) = v851 + 1;
                              uint64_t v852 = *(void *)(v962 + 136) + 40 * v851;
                              *(void *)uint64_t v852 = 9;
                              *(_DWORD *)(v852 + 8) = v950;
                              *(void *)(v852 + 12) = 0;
                              *(void *)(v852 + 28) = 0;
                              *(void *)(v852 + 20) = 0;
                              *(_DWORD *)(v852 + 36) = 0;
                            }
                            uint64_t v853 = *(void *)(v962 + 24);
                            int v854 = -v836;
                            if (*(_DWORD *)(v853 + 68) + *(_DWORD *)(v853 + 72) < 0) {
                              sub_1B0D34EC8(v853, v962, v854);
                            }
                            else {
                              *(_DWORD *)(*(void *)(v853 + 80) + 4 * v854) = *(_DWORD *)(v962 + 144);
                            }
                          }
                          v855 = &byte_1E9B52240;
                          if (!*(unsigned char *)(*(void *)v303 + 103)) {
                            v855 = (char *)(*(void *)(v303 + 136) + 40 * v947);
                          }
                          *((_DWORD *)v855 + 2) = *(_DWORD *)(v303 + 144);
                          if (LODWORD(v965[0]))
                          {
                            uint64_t v856 = *(void *)(a1 + 16);
                            uint64_t v857 = *(void *)(v856 + 24);
                            int v858 = ~LODWORD(v965[0]);
                            uint64_t v588 = (uint64_t)v961;
                            if (*(_DWORD *)(v857 + 68) + *(_DWORD *)(v857 + 72) < 0) {
                              sub_1B0D34EC8(v857, v856, v858);
                            }
                            else {
                              *(_DWORD *)(*(void *)(v857 + 80) + 4 * v858) = *(_DWORD *)(v856 + 144);
                            }
                            uint64_t v621 = v768;
                            v625 = zDbNameb;
                          }
                          else
                          {
                            uint64_t v621 = v768;
                            v625 = zDbNameb;
                            uint64_t v588 = (uint64_t)v961;
                          }
                        }
                        ++v769;
                        uint64_t v768 = *(void *)(v768 + 40);
                      }
                      while (v768);
                    }
                    sub_1B0D254B8(v303, 39, HIDWORD(v963), v932, v619, v620, v621, v622);
                    v860 = &byte_1E9B52240;
                    uint64_t v543 = v929;
                    if (!*(unsigned char *)(*(void *)v303 + 103)) {
                      v860 = (char *)(*(void *)(v303 + 136) + 40 * (int)v932 - 40);
                    }
                    *((_DWORD *)v860 + 2) = *(_DWORD *)(v303 + 144);
                    sub_1B0CCB908((uint64_t *)v303, 117, 0, 2, 0, (uint64_t)"wrong # of entries in index ", 0, v859);
                    v861 = (uint64_t *)*v936;
                    uint64_t v304 = v931;
                    unsigned int v544 = v930;
                    v862 = zDbNameb;
                    if (*v936)
                    {
                      int v863 = 0;
                      int v864 = v963;
                      do
                      {
                        if (v862 != (char *)v861)
                        {
                          uint64_t v865 = (v864 + v863);
                          int v866 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v866)
                          {
                            sub_1B0D25510(v303, 98, v865, 3, 0, v539, v540, v541);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v866 + 1;
                            uint64_t v867 = *(void *)(v303 + 136) + 40 * v866;
                            *(_DWORD *)uint64_t v867 = 98;
                            *(_DWORD *)(v867 + 4) = v865;
                            *(_DWORD *)(v867 + 8) = 3;
                            *(void *)(v867 + 12) = 0;
                            *(void *)(v867 + 28) = 0;
                            *(void *)(v867 + 20) = 0;
                            *(_DWORD *)(v867 + 36) = 0;
                          }
                          uint64_t v868 = (v863 + 8);
                          int v869 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v869)
                          {
                            int v869 = sub_1B0D25510(v303, 53, v868, 0, 3, v539, v540, v541);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v869 + 1;
                            uint64_t v870 = *(void *)(v303 + 136) + 40 * v869;
                            *(_DWORD *)uint64_t v870 = 53;
                            *(_DWORD *)(v870 + 4) = v868;
                            *(void *)(v870 + 8) = 0x300000000;
                            *(void *)(v870 + 24) = 0;
                            *(void *)(v870 + 32) = 0;
                            *(void *)(v870 + 16) = 0;
                          }
                          int v871 = *(_DWORD *)(v303 + 144);
                          BOOL v564 = __OFSUB__(v871, 1);
                          int v872 = v871 - 1;
                          if (v872 < 0 == v564) {
                            *(_WORD *)(*(void *)(v303 + 136) + 40 * v872 + 2) = 144;
                          }
                          sub_1B0CCB908((uint64_t *)v303, 117, 0, 4, 0, *v861, 0, v541);
                          int v880 = *(_DWORD *)(v303 + 144);
                          if (*(_DWORD *)(v303 + 148) <= v880)
                          {
                            sub_1B0D25510(v303, 111, 4, 2, 3, v877, v878, v879);
                          }
                          else
                          {
                            *(_DWORD *)(v303 + 144) = v880 + 1;
                            uint64_t v881 = *(void *)(v303 + 136) + 40 * v880;
                            *(_DWORD *)uint64_t v881 = 111;
                            *(void *)(v881 + 4) = 0x200000004;
                            *(_DWORD *)(v881 + 12) = 3;
                            *(void *)(v881 + 24) = 0;
                            *(void *)(v881 + 32) = 0;
                            *(void *)(v881 + 16) = 0;
                          }
                          sub_1B0D5DAB0(v303, v873, v874, v875, v876, v877, v878, v879);
                          v882 = &byte_1E9B52240;
                          if (!*(unsigned char *)(*(void *)v303 + 103)) {
                            v882 = (char *)(*(void *)(v303 + 136) + 40 * v869);
                          }
                          *((_DWORD *)v882 + 2) = *(_DWORD *)(v303 + 144);
                          v862 = zDbNameb;
                        }
                        ++v863;
                        v861 = (uint64_t *)v861[5];
                      }
                      while (v861);
                    }
                    v586 = v933;
                    if (v862)
                    {
                      int v883 = *((unsigned __int16 *)v862 + 47);
                      if (v883 == 1)
                      {
                        if (!v934) {
                          goto LABEL_758;
                        }
                        uint64_t v884 = *(unsigned __int8 *)(a1 + 31);
                        if (v884 > 7) {
                          goto LABEL_758;
                        }
                        *(unsigned char *)(a1 + 31) = v884 + 1;
                        v885 = (unsigned int *)(a1 + 4 * v884 + 224);
                        goto LABEL_1039;
                      }
                      if (*(_DWORD *)(a1 + 40) < v883)
                      {
                        *(_DWORD *)(a1 + 40) = v883;
                        v885 = (unsigned int *)(a1 + 44);
LABEL_1039:
                        unsigned int *v885 = v934;
                      }
                    }
LABEL_758:
                    v586 = (void *)*v586;
                    if (!v586) {
                      goto LABEL_716;
                    }
                  }
                }
                if ((v928 & 0x80000000) != 0) {
                  v497 = 0;
                }
                else {
                  v497 = *(unsigned char **)(*((void *)v955 + 4) + 32 * v928);
                }
                uint64_t v304 = sub_1B0CB02B4(a1, 0, __s, v497, v57, v58, v59, v60);
                int v302 = (int)v964;
              }
              else
              {
                uint64_t v304 = 0;
              }
              uint64_t v303 = v962;
              goto LABEL_711;
            case 0x16:
              if (!__s) {
                goto LABEL_704;
              }
              int v305 = strlen(__s) & 0x3FFFFFFF;
              if (sqlite3_strnicmp(__s, "delete", v305))
              {
                if (!sqlite3_strnicmp(__s, "persist", v305))
                {
                  char v500 = 1;
                  char v307 = 3;
                  uint64_t v306 = 1;
                  goto LABEL_1065;
                }
                if (sqlite3_strnicmp(__s, "off", v305))
                {
                  if (sqlite3_strnicmp(__s, "truncate", v305))
                  {
                    if (sqlite3_strnicmp(__s, "memory", v305))
                    {
                      uint64_t v83 = (uint64_t)v955;
                      if (!sqlite3_strnicmp(__s, "wal", v305))
                      {
                        uint64_t v306 = 5;
                        char v307 = 2;
LABEL_630:
                        char v500 = 1;
LABEL_1065:
                        uint64_t v536 = v18;
                        goto LABEL_1066;
                      }
LABEL_704:
                      uint64_t v536 = v18;
                      if (!*(_DWORD *)(a3 + 8))
                      {
                        LODWORD(v18) = 0;
                        *(_DWORD *)(a3 + 8) = 1;
                        uint64_t v306 = 0xFFFFFFFFLL;
                        goto LABEL_1072;
                      }
                      char v500 = 0;
                      uint64_t v306 = 0xFFFFFFFFLL;
                      char v307 = 3;
LABEL_1066:
                      if (v18 == 1)
                      {
                        LODWORD(v18) = 1;
                      }
                      else
                      {
                        uint64_t v894 = v26 + 32 * v536;
                        char v895 = v500 ^ 1;
                        if (*(unsigned char *)(v894 + 17)) {
                          char v895 = 1;
                        }
                        if ((v895 & 1) == 0)
                        {
                          uint64_t v896 = **(void **)(*(void *)(v894 + 8) + 8);
                          *(unsigned char *)(v894 + 16) = v307;
                          sub_1B0D0F420(v896, *(unsigned char *)(v83 + 48) & 0x38 | v307);
                        }
                      }
LABEL_1072:
                      uint64_t v897 = *(unsigned int *)(v83 + 40);
                      if ((int)v897 >= 1)
                      {
                        do
                        {
                          uint64_t v901 = v897 - 1;
                          if (*(void *)(*(void *)(v83 + 32) + 32 * (v897 - 1) + 8)
                            && (v18 + 1 == v897 || !*(_DWORD *)(a3 + 8)))
                          {
                            sub_1B0CEF64C((_DWORD *)v962, v901);
                            sub_1B0C8A924(v962, 4, v901, 1, v306, v898, v899, v900);
                          }
                          uint64_t v897 = v901;
                        }
                        while ((unint64_t)(v901 + 1) > 1);
                      }
                      uint64_t v455 = v962;
                      uint64_t v456 = 1;
LABEL_1081:
                      uint64_t v512 = 1;
                      goto LABEL_1082;
                    }
                    uint64_t v306 = 4;
                    char v307 = 3;
                    char v500 = 1;
                  }
                  else
                  {
                    char v307 = 3;
                    char v500 = 1;
                    uint64_t v306 = 3;
                  }
                  uint64_t v83 = (uint64_t)v955;
                  goto LABEL_1065;
                }
                if ((*((unsigned char *)v955 + 51) & 0x10) != 0) {
                  goto LABEL_704;
                }
                uint64_t v306 = 2;
              }
              else
              {
                uint64_t v306 = 0;
              }
              char v307 = 3;
              goto LABEL_630;
            case 0x17:
              uint64_t v308 = **(void **)(*(void *)(v26 + 32 * v18 + 8) + 8);
              v965[0] = (void *)-2;
              if (__s)
              {
                sub_1B0CF8344(__s, (unint64_t *)v965);
                if ((uint64_t)v965[0] < 0) {
                  uint64_t v309 = -1;
                }
                else {
                  uint64_t v309 = (uint64_t)v965[0];
                }
                *(void *)(v308 + 208) = v309;
                uint64_t v310 = *(void *)(v308 + 344);
                uint64_t v311 = v962;
                if (v310) {
                  *(void *)(v310 + 32) = v309;
                }
              }
              else
              {
                uint64_t v309 = *(void *)(v308 + 208);
                uint64_t v311 = v962;
              }
              v965[0] = (void *)v309;
              sub_1B0D5CFB0(v311, v309);
              goto LABEL_1083;
            case 0x18:
              uint64_t v312 = **(void **)(*(void *)(v26 + 32 * v18 + 8) + 8);
              if (__s)
              {
                uint64_t v313 = **(void **)(v312 + 72);
                if (*__s)
                {
                  uint64_t v115 = v951;
                  if (v313)
                  {
                    v314 = *(unsigned int (**)(void))(v313 + 80);
                    goto LABEL_613;
                  }
                }
                else
                {
                  uint64_t v115 = v951;
                  if (v313)
                  {
                    v314 = *(unsigned int (**)(void))(v313 + 80);
LABEL_613:
                    if (!v314()) {
                      goto LABEL_636;
                    }
                  }
                }
                sub_1B0CEF2BC(a1, "failed to set lock proxy file", v55, v56, v57, v58, v59, v60, v925);
                goto LABEL_636;
              }
              v965[0] = 0;
              uint64_t v464 = **(void **)(v312 + 72);
              if (v464)
              {
                (*(void (**)(void))(v464 + 80))();
                v463 = (char *)v965[0];
              }
              else
              {
                v463 = 0;
              }
              uint64_t v115 = v951;
LABEL_685:
              sub_1B0D5CE24((uint64_t *)v962, (uint64_t)v463, v55, v56, v57, v58, v59, v60);
LABEL_686:
              v530 = v955;
              v503 = v115;
              goto LABEL_1085;
            case 0x19:
              int v315 = sub_1B0D5D110(__s);
              int v322 = *(_DWORD *)(a3 + 8);
              if (v322 || v315 != -1)
              {
                if (!v322)
                {
                  uint64_t v451 = *((unsigned int *)v955 + 10);
                  if ((int)v451 > 2)
                  {
                    uint64_t v452 = *((void *)v955 + 4) + 72;
                    uint64_t v453 = v451 - 2;
                    do
                    {
                      if ((v315 & 0x80000000) == 0)
                      {
                        uint64_t v457 = **(void **)(*(void *)v452 + 8);
                        if (!*(unsigned char *)(v457 + 16))
                        {
                          uint64_t v458 = *(void *)(v457 + 344);
                          if (!v458 || *(unsigned char *)(v458 + 63) != 2) {
                            *(unsigned char *)(v457 + 8) = v315;
                          }
                        }
                      }
                      v452 += 32;
                      --v453;
                    }
                    while (v453);
                  }
                  *((unsigned char *)v955 + 105) = v315;
                }
                v324 = (uint64_t *)v962;
                uint64_t v504 = **(void **)(*(void *)(v26 + 32 * v18 + 8) + 8);
                if ((v315 & 0x80000000) == 0 && !*(unsigned char *)(v504 + 16))
                {
                  uint64_t v505 = *(void *)(v504 + 344);
                  if (!v505 || *(unsigned char *)(v505 + 63) != 2) {
                    *(unsigned char *)(v504 + 8) = v315;
                  }
                }
                v323 = (unsigned char *)(v504 + 8);
              }
              else
              {
                v323 = (char *)v955 + 105;
                v324 = (uint64_t *)v962;
              }
              if (*v323 == 1) {
                v506 = "exclusive";
              }
              else {
                v506 = "normal";
              }
              sub_1B0D5CE24(v324, (uint64_t)v506, v316, v317, v318, v319, v320, v321);
              goto LABEL_1083;
            case 0x1A:
              v965[0] = 0;
              sub_1B0C9CCDC(a1, v18);
              uint64_t v329 = (*(_DWORD *)(a1 + 56) + 1);
              *(_DWORD *)(a1 + 56) = v329;
              if ((*v951 & 0xDF) == 0x50)
              {
                uint64_t v330 = v962;
                sub_1B0D254B8(v962, 177, v18, v329, v325, v326, v327, v328);
              }
              else
              {
                uint64_t v330 = v962;
                if (__s && !sub_1B0CF8344(__s, (unint64_t *)v965))
                {
                  uint64_t v454 = (uint64_t)v965[0];
                  if (((unint64_t)v965[0] & 0x8000000000000000) != 0)
                  {
                    uint64_t v454 = 0;
                    v965[0] = 0;
                    uint64_t v330 = v962;
                  }
                  else
                  {
                    uint64_t v330 = v962;
                    if (v965[0] >= (void *)0xFFFFFFFFLL)
                    {
                      uint64_t v454 = 4294967294;
                      v965[0] = (void *)4294967294;
                    }
                  }
                }
                else
                {
                  uint64_t v454 = 0;
                  v965[0] = 0;
                }
                sub_1B0C8A924(v330, 178, v18, v329, v454, v326, v327, v328);
              }
              uint64_t v455 = v330;
              uint64_t v456 = v329;
              goto LABEL_1081;
            case 0x1B:
              v965[0] = 0;
              if (__s)
              {
                sub_1B0CF8344(__s, (unint64_t *)v965);
                v331 = v965[0];
                if (((unint64_t)v965[0] & 0x8000000000000000) != 0)
                {
                  v331 = (void *)qword_1EB21CAE8;
                  v965[0] = (void *)qword_1EB21CAE8;
                }
                if (!*(_DWORD *)(a3 + 8)) {
                  *((void *)v955 + 8) = v331;
                }
                uint64_t v332 = *((unsigned int *)v955 + 10);
                if ((int)v332 >= 1)
                {
                  do
                  {
                    uint64_t v333 = v332 - 1;
                    uint64_t v334 = *(void *)(*((void *)v955 + 4) + 32 * (v332 - 1) + 8);
                    if (v334 && (v18 + 1 == v332 || !*(_DWORD *)(a3 + 8))) {
                      sub_1B0D5D324(v334, (uint64_t)v965[0]);
                    }
                    uint64_t v332 = v333;
                  }
                  while ((unint64_t)(v333 + 1) > 1);
                }
              }
              v965[0] = (void *)-1;
              int v447 = sqlite3_file_control(v955, zDbName, 18, v965);
              if (v447 != 12)
              {
                if (v447)
                {
                  ++*(_DWORD *)(a1 + 48);
                  *(_DWORD *)(a1 + 24) = v447;
                }
                else
                {
                  sub_1B0D5CFB0(v962, (uint64_t)v965[0]);
                }
              }
              goto LABEL_1083;
            case 0x1C:
              *(_DWORD *)(a1 + 56) = 1;
              for (nuint64_t n = (void *)*((void *)v955 + 72); nn; nuint64_t n = (void *)*nn)
                sub_1B0D5D70C(v962, 1, (uint64_t)"s", v56, v57, v58, v59, v60, *(void *)(nn[2] + 8));
              goto LABEL_1083;
            case 0x1D:
              if (__s)
              {
                LODWORD(v965[0]) = 0;
                sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                char v336 = (char)v965[0];
                uint64_t v115 = v951;
                if (((uint64_t)v965[0] & 2) == 0) {
                  goto LABEL_636;
                }
              }
              else
              {
                char v336 = -2;
              }
              uint64_t v465 = *(unsigned int *)(a1 + 52);
              *(_DWORD *)(a1 + 52) = v465 + 1;
              int v466 = v18;
              if (!zDbName) {
                int v466 = *((_DWORD *)v955 + 10) - 1;
              }
              uint64_t v467 = v962;
              if ((int)v18 > v466) {
                goto LABEL_555;
              }
              int v468 = v336 & 1;
              uint64_t v469 = (int)v18;
              int v960 = v466 + 1;
              do
              {
                if (v469 != 1)
                {
                  sub_1B0C9CCDC(a1, v469);
                  for (i1 = *(void **)(*(void *)(*((void *)v955 + 4) + 32 * v469 + 24) + 16);
                        i1;
                        i1 = (void *)*i1)
                  {
                    uint64_t v471 = i1[2];
                    if (*(unsigned char *)(v471 + 49))
                    {
                      __int16 v472 = *(_WORD *)(v471 + 58);
                      uint64_t v473 = *(void *)(v471 + 16);
                      if (v473)
                      {
                        while ((*(_WORD *)(v473 + 99) & 0x80) != 0)
                        {
                          uint64_t v473 = *(void *)(v473 + 40);
                          if (!v473) {
                            goto LABEL_576;
                          }
                        }
                      }
                      else
                      {
LABEL_576:
                        __int16 v474 = v472 + 46;
                        if (v472 != -46)
                        {
                          sub_1B0C9CD14((void *)a1, v465, v469, i1[2], 112, v58, v59, v60);
                          int v475 = *(_DWORD *)(v962 + 144);
                          uint64_t v56 = v475 + (v468 | 2u);
                          uint64_t v57 = v474;
                          if (*(_DWORD *)(v962 + 148) <= v475)
                          {
                            sub_1B0D25510(v962, 33, v465, v56, v57, v58, v59, v60);
                          }
                          else
                          {
                            *(_DWORD *)(v962 + 144) = v475 + 1;
                            uint64_t v476 = *(void *)(v962 + 136) + 40 * v475;
                            *(_DWORD *)uint64_t v476 = 33;
                            *(_DWORD *)(v476 + 4) = v465;
                            *(_DWORD *)(v476 + 8) = v56;
                            *(_DWORD *)(v476 + 12) = v57;
                            *(void *)(v476 + 24) = 0;
                            *(void *)(v476 + 32) = 0;
                            *(void *)(v476 + 16) = 0;
                          }
                        }
                      }
                      v477 = sub_1B0C904AC((uint64_t)v955, "ANALYZE \"%w\".\"%w\"", v55, v56, v57, v58, v59, v60, *(void *)(*((void *)v955 + 4) + 32 * v469));
                      if (v468)
                      {
                        uint64_t v467 = v962;
                        if (*(unsigned char *)(a1 + 31))
                        {
                          unsigned __int8 v479 = *(unsigned char *)(a1 + 31) - 1;
                          *(unsigned char *)(a1 + 31) = v479;
                          uint64_t v480 = *(unsigned int *)(a1 + 4 * v479 + 224);
                        }
                        else
                        {
                          uint64_t v480 = (*(_DWORD *)(a1 + 56) + 1);
                          *(_DWORD *)(a1 + 56) = v480;
                        }
                        sub_1B0CCB908((uint64_t *)v962, 117, 0, v480, 0, (uint64_t)v477, 4294967290, v478);
                        sub_1B0D254B8(v962, 84, v480, 1, v481, v482, v483, v484);
                      }
                      else
                      {
                        uint64_t v467 = v962;
                        sub_1B0CCB908((uint64_t *)v962, 148, 0, 0, 0, (uint64_t)v477, 4294967290, v478);
                      }
                    }
                  }
                }
                ++v469;
              }
              while (v960 != v469);
LABEL_555:
              sub_1B0D2F924(v467, 166, v55, v56, v57, v58, v59, v60);
              goto LABEL_1083;
            case 0x1E:
              uint64_t v337 = *(void *)(v26 + 32 * v18 + 8);
              if (__s)
              {
                LODWORD(v965[0]) = 0;
                sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                int v338 = (int)v965[0];
                *((_DWORD *)v955 + 29) = v965[0];
                uint64_t v115 = v951;
                if (sub_1B0CD9448(v337, v338, 0, 0, v339) == 7) {
                  sub_1B0CEB0A4((uint64_t)v955, v340, v341, v342, v343, v344, v345, v346);
                }
                goto LABEL_636;
              }
              if (v337) {
                uint64_t v461 = *(int *)(*(void *)(v337 + 8) + 52);
              }
              else {
LABEL_586:
              }
                uint64_t v461 = 0;
LABEL_587:
              uint64_t v115 = v951;
              sub_1B0D5CFB0(v962, v461);
              goto LABEL_686;
            case 0x1F:
              for (uint64_t i2 = 0; i2 != 222; i2 += 3)
              {
                v348 = v65;
                sub_1B0D5D70C(v962, 1, (uint64_t)"s", v56, v57, v58, v59, v60, (uint64_t)v65[i2]);
                long long v65 = v348;
              }
              goto LABEL_1083;
            case 0x20:
              uint64_t v349 = *(void *)(v26 + 32 * v18 + 8);
              if (!__s)
              {
                int v354 = -1;
                goto LABEL_599;
              }
              uint64_t v350 = 0;
              uint64_t v351 = v962;
              while (2)
              {
                uint64_t v352 = __s[v350];
                uint64_t v353 = aFast[v350];
                if (v352 == v353)
                {
                  if (!__s[v350])
                  {
                    int v354 = 2;
                    goto LABEL_595;
                  }
                }
                else if (byte_1B0DE1758[v352] != byte_1B0DE1758[v353])
                {
                  int v354 = sub_1B0D5D5D8(__s, 1, 0) != 0;
LABEL_595:
                  if (*(_DWORD *)(a3 + 8)) {
                    goto LABEL_600;
                  }
                  if (*((int *)v955 + 10) >= 1)
                  {
                    uint64_t v489 = 0;
                    uint64_t v490 = 8;
                    do
                    {
                      sub_1B0D5D07C(*(void *)(*((void *)v955 + 4) + v490), v354);
                      ++v489;
                      v490 += 32;
                    }
                    while (v489 < *((int *)v955 + 10));
                  }
LABEL_599:
                  uint64_t v351 = v962;
LABEL_600:
                  unsigned int v491 = sub_1B0D5D07C(v349, v354);
                  sub_1B0D5CFB0(v351, v491);
                  goto LABEL_1083;
                }
                ++v350;
                continue;
              }
            case 0x21:
              sqlite3_db_release_memory(v955);
              goto LABEL_1083;
            case 0x22:
              v965[0] = 0;
              if (__s && !sub_1B0CF8344(__s, (unint64_t *)v965)) {
                sqlite3_soft_heap_limit64((sqlite3_int64)v965[0]);
              }
              uint64_t v260 = sqlite3_soft_heap_limit64(-1);
LABEL_355:
              uint64_t v84 = v260;
              goto LABEL_478;
            case 0x23:
              if (!__s)
              {
                uint64_t v459 = *(unsigned __int8 *)(v26 + 32 * v18 + 16) - 1;
                goto LABEL_561;
              }
              if (!*((unsigned char *)v955 + 101))
              {
                sub_1B0CEF2BC(a1, "Safety level may not be changed inside a transaction", v55, v56, v57, v58, v59, v60, v925);
                goto LABEL_635;
              }
              uint64_t v115 = v951;
              if (v18 != 1)
              {
                char v355 = sub_1B0D5D5D8(__s, 0, 1u);
                if (((v355 + 1) & 6) != 0) {
                  char v356 = (v355 + 1) & 7;
                }
                else {
                  char v356 = 1;
                }
                uint64_t v357 = v26 + 32 * v18;
                *(unsigned char *)(v357 + 16) = v356;
                *(unsigned char *)(v357 + 17) = 1;
LABEL_363:
                sub_1B0D5D2A8((uint64_t)v955);
              }
              goto LABEL_636;
            case 0x24:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              sub_1B0D3BFF8((_DWORD *)a1, zDbName);
              uint64_t v362 = sub_1B0CB02B4(a1, 2, __s, zDbName, v358, v359, v360, v361);
              if (!v362) {
                goto LABEL_636;
              }
              uint64_t v369 = v362;
              for (uint64_t i3 = *(void *)(v362 + 16); i3; uint64_t i3 = *(void *)(i3 + 40))
              {
                if ((*(_WORD *)(i3 + 99) & 3) == 2) {
                  break;
                }
              }
              *(_DWORD *)(a1 + 56) = 7;
              if (*(unsigned char *)(v362 + 63) != 1 && (int v371 = *(__int16 *)(v362 + 54), v371 > 0)
                || (sub_1B0D393F0(a1, v362, v363, v364, v365, v366, v367, v368),
                    int v371 = *(__int16 *)(v369 + 54),
                    v371 >= 1))
              {
                int v959 = 0;
                int v372 = 0;
                int v373 = (unsigned __int16)v371;
                uint64_t v374 = *(void *)(v369 + 8);
                v375 = &(&off_1E5FEF698)[3 * (int)v68 + 2];
                zDbNamea = (char *)v369;
                do
                {
                  __int16 v381 = *(_WORD *)(v374 + 14);
                  if ((v381 & 0x62) != 0 && !*v375)
                  {
                    ++v959;
                  }
                  else
                  {
                    if (i3 && (v381 & 1) != 0 && v373 >= 1)
                    {
                      uint64_t v382 = 0;
                      do
                      {
                        if (v372 == *(__int16 *)(*(void *)(i3 + 8) + 2 * v382)) {
                          break;
                        }
                        ++v382;
                      }
                      while ((v373 + 1) - 1 != v382);
                    }
                    if (*v375) {
                      v383 = "issisii";
                    }
                    else {
                      v383 = "issisi";
                    }
                    sub_1B0CF6A2C(v374, (uint64_t)&byte_1B0DE9952);
                    sub_1B0D5D70C(v962, 1, (uint64_t)v383, v376, v377, v378, v379, v380, (v372 - v959));
                    LOWORD(v371) = *((_WORD *)zDbNamea + 27);
                  }
                  ++v372;
                  v374 += 16;
                  int v373 = (__int16)v371;
                }
                while (v372 < (__int16)v371);
              }
              goto LABEL_1083;
            case 0x25:
              *(_DWORD *)(a1 + 56) = 6;
              sub_1B0D3BFF8((_DWORD *)a1, zDbName);
              if (*((int *)v955 + 10) < 1) {
                goto LABEL_1083;
              }
              v390 = zDbName;
              uint64_t v391 = 0;
              while (1)
              {
                v392 = v955;
                uint64_t v393 = *((void *)v955 + 4);
                if (v390)
                {
                  v394 = *(unsigned __int8 **)(v393 + 32 * v391);
                  if (v394)
                  {
                    for (i4 = v390; ; ++i4)
                    {
                      uint64_t v396 = *i4;
                      uint64_t v397 = *v394;
                      if (v396 == v397)
                      {
                        if (!*i4) {
                          goto LABEL_398;
                        }
                      }
                      else if (byte_1B0DE1758[v396] != byte_1B0DE1758[v397])
                      {
                        goto LABEL_390;
                      }
                      ++v394;
                    }
                  }
                  goto LABEL_390;
                }
LABEL_398:
                uint64_t v398 = *(void *)(v393 + 32 * v391 + 24);
                uint64_t v399 = v398 + 8;
                int v400 = *(_DWORD *)(v398 + 12);
                if (v400)
                {
LABEL_399:
                  --v400;
                  v401 = (void *)(v399 + 8);
                  while (1)
                  {
                    v401 = (void *)*v401;
                    if (!v401) {
                      break;
                    }
                    uint64_t v402 = v401[2];
                    if (!*(_WORD *)(v402 + 54))
                    {
                      v403 = sub_1B0C904AC((uint64_t)v955, "SELECT*FROM\"%w\"", v384, v385, v386, v387, v388, v389, *(void *)v402);
                      if (v403)
                      {
                        v404 = v403;
                        v965[0] = 0;
                        sub_1B0C7EAC0(v955, v403, 0xFFFFFFFFLL, 0, 0, v965, 0);
                        sqlite3_finalize((sqlite3_stmt *)v965[0]);
                        sub_1B0D05C10(v955, v404);
                      }
                      if (*((unsigned char *)v955 + 103))
                      {
                        sub_1B0CEF2BC(*((void *)v955 + 43), "out of memory", v384, v385, v386, v387, v388, v389, v926);
                        *(_DWORD *)(*((void *)v955 + 43) + 24) = 7;
                      }
                      uint64_t v399 = *(void *)(*((void *)v955 + 4) + 32 * v391 + 24) + 8;
                      if (v400) {
                        goto LABEL_399;
                      }
                      break;
                    }
                  }
                }
                v405 = *(void **)(v399 + 8);
                if (v405) {
                  break;
                }
LABEL_390:
                if (++v391 >= *((int *)v392 + 10)) {
                  goto LABEL_1083;
                }
              }
              while (1)
              {
                v406 = (unsigned __int8 **)v405[2];
                if (__s)
                {
                  v407 = *v406;
                  if (*v406)
                  {
                    for (i5 = __s; ; ++i5)
                    {
                      uint64_t v409 = *i5;
                      uint64_t v410 = *v407;
                      if (v409 == v410)
                      {
                        if (!*i5) {
                          goto LABEL_418;
                        }
                      }
                      else if (byte_1B0DE1758[v409] != byte_1B0DE1758[v410])
                      {
                        goto LABEL_410;
                      }
                      ++v407;
                    }
                  }
                  goto LABEL_410;
                }
LABEL_418:
                uint64_t v411 = *(void *)(*((void *)v392 + 4) + 32 * v391);
                v412 = *v406;
                if (*v406) {
                  break;
                }
LABEL_409:
                sub_1B0D5D70C(v962, 1, (uint64_t)"sssiii", v385, v386, v387, v388, v389, v411);
LABEL_410:
                v405 = (void *)*v405;
                if (!v405) {
                  goto LABEL_390;
                }
              }
              unint64_t v413 = *v412;
              if (!*v412)
              {
                v414 = "sqlite_";
                goto LABEL_447;
              }
              if ((v413 & 0xFFFFFFDF) == 0x53)
              {
                unint64_t v413 = v412[1];
                if (!v412[1])
                {
                  v414 = "qlite_";
                  goto LABEL_447;
                }
                if ((v413 & 0xFFFFFFDF) == 0x51)
                {
                  unint64_t v413 = v412[2];
                  if (!v412[2])
                  {
                    v414 = "lite_";
                    goto LABEL_447;
                  }
                  if ((v413 & 0xFFFFFFDF) == 0x4C)
                  {
                    unint64_t v413 = v412[3];
                    if (!v412[3])
                    {
                      v414 = "ite_";
                      goto LABEL_447;
                    }
                    if ((v413 & 0xFFFFFFDF) == 0x49)
                    {
                      unint64_t v413 = v412[4];
                      if (!v412[4])
                      {
                        v414 = "te_";
                        goto LABEL_447;
                      }
                      if ((v413 & 0xFFFFFFDF) == 0x54)
                      {
                        unint64_t v413 = v412[5];
                        if (!v412[5])
                        {
                          v414 = "e_";
                          goto LABEL_447;
                        }
                        if ((v413 & 0xFFFFFFDF) == 0x45)
                        {
                          unint64_t v413 = v412[6];
                          if (!v412[6])
                          {
                            v414 = "_";
                            v390 = zDbName;
                            v392 = v955;
LABEL_447:
                            if (v413 == byte_1B0DE1758[*v414])
                            {
LABEL_448:
                              for (uint64_t i6 = 7u; ; ++i6)
                              {
                                uint64_t v416 = v412[i6];
                                uint64_t v417 = aSqliteMaster[i6];
                                if (v416 == v417)
                                {
                                  if (!v412[i6]) {
                                    goto LABEL_409;
                                  }
                                }
                                else if (byte_1B0DE1758[v416] != byte_1B0DE1758[v417])
                                {
                                  for (uint64_t i7 = 7u; ; ++i7)
                                  {
                                    uint64_t v419 = v412[i7];
                                    uint64_t v420 = aSqliteTempMast[i7];
                                    if (v419 == v420)
                                    {
                                      if (!v412[i7]) {
                                        goto LABEL_409;
                                      }
                                    }
                                    else if (byte_1B0DE1758[v419] != byte_1B0DE1758[v420])
                                    {
                                      goto LABEL_409;
                                    }
                                  }
                                }
                              }
                            }
                            goto LABEL_409;
                          }
                          v390 = zDbName;
                          v392 = v955;
                          if (v413 == 95) {
                            goto LABEL_448;
                          }
                          v413 += (unint64_t)byte_1B0DE1758;
                          v414 = "_";
                        }
                        else
                        {
                          v413 += (unint64_t)byte_1B0DE1758;
                          v414 = "e_";
                          v390 = zDbName;
                          v392 = v955;
                        }
                      }
                      else
                      {
                        v413 += (unint64_t)byte_1B0DE1758;
                        v414 = "te_";
                      }
                    }
                    else
                    {
                      v413 += (unint64_t)byte_1B0DE1758;
                      v414 = "ite_";
                    }
                  }
                  else
                  {
                    v413 += (unint64_t)byte_1B0DE1758;
                    v414 = "lite_";
                  }
                }
                else
                {
                  v413 += (unint64_t)byte_1B0DE1758;
                  v414 = "qlite_";
                }
              }
              else
              {
                v413 += (unint64_t)byte_1B0DE1758;
                v414 = "sqlite_";
              }
              LODWORD(v413) = *(unsigned __int8 *)v413;
              goto LABEL_447;
            case 0x26:
              if (__s)
              {
                sub_1B0D5D420(a1, (unsigned __int8 *)__s, v55, v56, v57, v58, v59, v60, v61, v925);
                goto LABEL_635;
              }
              uint64_t v459 = *((unsigned __int8 *)v955 + 102);
LABEL_561:
              uint64_t v460 = v962;
LABEL_562:
              sub_1B0D5CFB0(v460, v459);
              uint64_t v115 = v951;
              goto LABEL_686;
            case 0x27:
              if ((_BYTE)word_1EB21C9C4)
              {
                uint64_t v421 = qword_1EB21CA30(11);
                if (v421) {
                  xmmword_1EB21CA40(v421);
                }
              }
              if (__s)
              {
                if (*__s)
                {
                  LODWORD(v965[0]) = 0;
                  (*(uint64_t (**)(void))(*(void *)v955 + 56))();
                  sub_1B0CEF2BC(a1, "not a writable directory", v422, v423, v424, v425, v426, v427, v925);
                  if ((_BYTE)word_1EB21C9C4)
                  {
                    uint64_t v502 = qword_1EB21CA30(11);
                    if (v502) {
                      xmmword_1EB21CA50(v502);
                    }
                  }
LABEL_635:
                  uint64_t v115 = v951;
LABEL_636:
                  sub_1B0D05C10((void *)v83, v115);
                  v503 = __s;
LABEL_1084:
                  v530 = (void *)v83;
LABEL_1085:
                  sub_1B0D05C10(v530, v503);
                  return;
                }
                if (*((unsigned __int8 *)v955 + 102) <= 1u) {
                  sub_1B0D5D548(a1, v61, (uint64_t)v65, v55, v56, v57, v58, v59, v60, v925);
                }
                sqlite3_free(sqlite3_temp_directory);
                if (*__s) {
                  sqlite3_temp_directory = sqlite3_mprintf("%s", __s);
                }
                else {
                  sqlite3_temp_directory = 0;
                }
              }
              else
              {
                sub_1B0D5CE24((uint64_t *)v962, (uint64_t)sqlite3_temp_directory, v55, v56, v57, v58, v59, v60);
              }
              if ((_BYTE)word_1EB21C9C4)
              {
                uint64_t v507 = qword_1EB21CA30(11);
                if (v507) {
                  xmmword_1EB21CA50(v507);
                }
              }
              goto LABEL_1083;
            case 0x28:
              v965[0] = 0;
              if (__s
                && !sub_1B0CF8344(__s, (unint64_t *)v965)
                && ((unint64_t)v965[0] & 0x8000000000000000) == 0)
              {
                sqlite3_limit(v955, 11, (uint64_t)v965[0] & 0x7FFFFFFF);
              }
              uint64_t v84 = sqlite3_limit(v955, 11, -1);
              goto LABEL_478;
            case 0x29:
              if (__s)
              {
                LODWORD(v965[0]) = 0;
                sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                sqlite3_wal_autocheckpoint(v955, (int)v965[0]);
              }
              if (*((uint64_t (**)(uint64_t, sqlite3 *, char *, int))v955 + 47) == sub_1B0CC2198) {
                sub_1B0D5CFB0(v962, *((int *)v955 + 96));
              }
              else {
                sub_1B0D5CFB0(v962, 0);
              }
              goto LABEL_1083;
            case 0x2A:
              if (*(void *)a3) {
                uint64_t v428 = v18;
              }
              else {
                uint64_t v428 = 12;
              }
              if (!__s) {
                goto LABEL_659;
              }
              v429 = "full";
              v430 = __s;
              uint64_t v431 = v962;
              while (2)
              {
                uint64_t v432 = *v430;
                uint64_t v433 = *(unsigned __int8 *)v429;
                if (v432 == v433)
                {
                  if (!*v430)
                  {
                    uint64_t v434 = 1;
                    goto LABEL_661;
                  }
                }
                else if (byte_1B0DE1758[v432] != byte_1B0DE1758[v433])
                {
                  v485 = "restart";
                  for (i8 = __s; ; ++i8)
                  {
                    uint64_t v487 = *i8;
                    uint64_t v488 = *(unsigned __int8 *)v485;
                    if (v487 == v488)
                    {
                      if (!*i8)
                      {
                        uint64_t v434 = 2;
                        goto LABEL_661;
                      }
                    }
                    else if (byte_1B0DE1758[v487] != byte_1B0DE1758[v488])
                    {
                      v508 = "truncate";
                      for (i9 = __s; ; ++i9)
                      {
                        uint64_t v510 = *i9;
                        uint64_t v511 = *(unsigned __int8 *)v508;
                        if (v510 == v511)
                        {
                          if (!*i9)
                          {
                            uint64_t v434 = 3;
                            goto LABEL_660;
                          }
                        }
                        else if (byte_1B0DE1758[v510] != byte_1B0DE1758[v511])
                        {
LABEL_659:
                          uint64_t v434 = 0;
LABEL_660:
                          uint64_t v431 = v962;
LABEL_661:
                          *(_DWORD *)(a1 + 56) = 3;
                          sub_1B0C8A924(v431, 3, v428, v434, 1, v58, v59, v60);
                          uint64_t v455 = v431;
                          uint64_t v456 = 1;
                          uint64_t v512 = 3;
LABEL_1082:
                          sub_1B0D254B8(v455, 84, v456, v512, v57, v58, v59, v60);
                          goto LABEL_1083;
                        }
                        ++v508;
                      }
                    }
                    ++v485;
                  }
                }
                ++v430;
                ++v429;
                continue;
              }
            case 0x2B:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              uint64_t v435 = *__s;
              if (!*__s)
              {
                int v501 = 0;
                v440 = "see-";
                goto LABEL_1112;
              }
              if ((v435 & 0xFFFFFFDF) == 0x53)
              {
                uint64_t v436 = __s[1];
                if (!__s[1])
                {
                  int v501 = 0;
                  v440 = "ee-";
                  goto LABEL_1111;
                }
                if ((v436 & 0xFFFFFFDF) == 0x45)
                {
                  uint64_t v437 = __s[2];
                  if (!__s[2])
                  {
                    int v501 = 0;
                    v440 = "e-";
                    goto LABEL_1111;
                  }
                  if ((v437 & 0xFFFFFFDF) == 0x45)
                  {
                    uint64_t v438 = __s[3];
                    if (__s[3])
                    {
                      uint64_t v83 = (uint64_t)v955;
                      uint64_t v115 = v951;
                      if (v438 == 45) {
                        goto LABEL_1113;
                      }
                      v439 = &byte_1B0DE1758[v438];
                      v440 = "-";
                      goto LABEL_1109;
                    }
                    int v501 = 0;
                    v440 = "-";
LABEL_1111:
                    uint64_t v83 = (uint64_t)v955;
                    uint64_t v115 = v951;
LABEL_1112:
                    if (v501 != byte_1B0DE1758[*v440]) {
                      goto LABEL_636;
                    }
LABEL_1113:
                    sqlite3_activate_see((uint64_t)(__s + 4));
                    goto LABEL_636;
                  }
                  v439 = &byte_1B0DE1758[v437];
                  v440 = "e-";
                }
                else
                {
                  v439 = &byte_1B0DE1758[v436];
                  v440 = "ee-";
                }
                uint64_t v83 = (uint64_t)v955;
                uint64_t v115 = v951;
              }
              else
              {
                v439 = &byte_1B0DE1758[v435];
                v440 = "see-";
              }
LABEL_1109:
              int v501 = *v439;
              goto LABEL_1112;
            case 0x2C:
              uint64_t v115 = v951;
              if (!__s) {
                goto LABEL_686;
              }
              v441 = (&off_1E5FEF698)[3 * (int)v68 + 2];
              if ((v66 & 0xFFFFFFFC) == 0x38)
              {
                uint64_t v442 = 0;
                char v443 = 0;
                do
                {
                  uint64_t v444 = __s[v442];
                  if ((byte_1B0DE196D[v444] & 8) == 0) {
                    break;
                  }
                  char v445 = ((((char)(2 * v444) >> 7) & 0xF9) + v444) & 0xF | (16 * v443);
                  if (v442) {
                    *((unsigned char *)v965 + (v442 >> 1)) = v445;
                  }
                  ++v442;
                  char v443 = v445;
                }
                while (v442 != 80);
                int v492 = v442 >> 1;
                v493 = (char *)v965;
              }
              else
              {
                if ((unint64_t)v441 > 3) {
                  int v492 = -1;
                }
                else {
                  int v492 = strlen(__s) & 0x3FFFFFFF;
                }
                v493 = __s;
              }
              if (v441) {
                int v513 = sqlite3_rekey_v2(v955, zDbName, v493, v492);
              }
              else {
                int v513 = sqlite3_key_v2((uint64_t)v955, zDbName, v493, v492);
              }
              if (!v513 && v492)
              {
                sub_1B0CA0B6C(v962, 1);
                if (!*(unsigned char *)(*(void *)v962 + 103)) {
                  sub_1B0C79BBC(*(void *)(v962 + 152), "ok", -1, 1u, 0);
                }
                sub_1B0D5CE24((uint64_t *)v962, (uint64_t)"ok", v514, v515, v516, v517, v518, v519);
              }
              goto LABEL_636;
            default:
              if (__s)
              {
                LODWORD(v965[0]) = 0;
                sub_1B0D22EF0((unsigned __int8 *)__s, v965);
                sqlite3_busy_timeout(v955, (int)v965[0]);
              }
              uint64_t v84 = *((int *)v955 + 193);
LABEL_478:
              sub_1B0D5CFB0(v962, v84);
              goto LABEL_1083;
          }
        }
      }
      else
      {
        int v71 = byte_1B0DE1758[v72] - byte_1B0DE1758[v73];
        if (v71) {
          goto LABEL_65;
        }
      }
    }
  }
  sub_1B0CA0B6C(v962, 1);
  uint64_t v75 = v966;
  if (!*(unsigned char *)(*(void *)v962 + 103))
  {
    sub_1B0C79BBC(*(void *)(v962 + 152), (char *)v966, -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
    uint64_t v75 = v966;
  }
  if (v75)
  {
    sub_1B0CCB908((uint64_t *)v962, 117, 0, 1, 0, v75, 0, v74);
    int v79 = *(_DWORD *)(v962 + 144);
    if (*(_DWORD *)(v962 + 148) <= v79)
    {
      sub_1B0D25510(v962, 84, 1, 1, 0, v76, v77, v78);
    }
    else
    {
      *(_DWORD *)(v962 + 144) = v79 + 1;
      uint64_t v80 = *(void *)(v962 + 136) + 40 * v79;
      *(_DWORD *)uint64_t v80 = 84;
      *(void *)(v80 + 4) = 0x100000001;
      *(void *)(v80 + 12) = 0;
      *(void *)(v80 + 28) = 0;
      *(void *)(v80 + 20) = 0;
      *(_DWORD *)(v80 + 36) = 0;
    }
  }
  uint64_t v85 = v966;
  if ((void)v966)
  {
    uint64_t v86 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v85);
      --qword_1EB220150;
      off_1EB21C9E8(v85);
      uint64_t v85 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_1083;
      }
      uint64_t v86 = &xmmword_1EB21CA50;
    }
    (*v86)(v85);
  }
LABEL_1083:
  uint64_t v83 = (uint64_t)v955;
  sub_1B0D05C10(v955, v951);
  v503 = __s;
  if (__s) {
    goto LABEL_1084;
  }
}

unsigned char *sub_1B0C87878(uint64_t a1, const void *a2, size_t a3)
{
  if (!a2) {
    return 0;
  }
  int v5 = (unsigned char *)sub_1B0D05DC0(a1, a3 + 1);
  uint64_t v6 = v5;
  if (v5)
  {
    memcpy(v5, a2, a3);
    v6[a3] = 0;
  }
  return v6;
}

uint64_t sub_1B0C878D8(uint64_t a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = *(_DWORD *)(a1 + 44);
  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 24);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(v11 + 113);
  if ((*(unsigned char *)(v11 + 114) & 1) != 0 || (uint64_t result = sub_1B0C879A0(a1, 0, a2, 0, a5, a6, a7, a8), !result))
  {
    uint64_t v13 = *(unsigned int *)(a1 + 40);
    if ((int)v13 >= 2)
    {
      while (1)
      {
        uint64_t v14 = v13 - 1;
        if ((*(_WORD *)(*(void *)(*(void *)(a1 + 32) + 32 * (v13 - 1) + 24) + 114) & 1) == 0)
        {
          uint64_t result = sub_1B0C879A0(a1, (v13 - 1), a2, 0, a5, a6, a7, a8);
          if (result) {
            break;
          }
        }
        uint64_t v13 = v14;
        if ((unint64_t)(v14 + 1) <= 2) {
          goto LABEL_4;
        }
      }
    }
    else
    {
LABEL_4:
      uint64_t result = 0;
      if ((v10 & 1) == 0) {
        *(_DWORD *)(a1 + 44) &= ~1u;
      }
    }
  }
  return result;
}

uint64_t sub_1B0C879A0(uint64_t a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a2;
  v102[6] = *MEMORY[0x1E4F143B8];
  *(unsigned char *)(a1 + 197) = 1;
  if (a2 == 1) {
    uint64_t v11 = "sqlite_temp_master";
  }
  else {
    uint64_t v11 = "sqlite_master";
  }
  int v12 = *(_DWORD *)(a1 + 44);
  uint64_t v101 = 0;
  v102[0] = "table";
  v102[1] = v11;
  v102[2] = v11;
  unsigned int v13 = v12 | 0xFFFFFFBF;
  v102[3] = "1";
  v102[4] = "CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)";
  v102[5] = 0;
  int v97 = a2;
  unsigned int v98 = 0;
  v96[0] = a1;
  v96[1] = a3;
  int v99 = a4;
  int v100 = 0;
  sub_1B0C8824C((int *)v96, a2, v102, a4, a5, a6, a7, a8);
  *(_DWORD *)(a1 + 44) &= v13;
  uint64_t v21 = v98;
  if (!v98)
  {
    uint64_t v28 = *(void *)(a1 + 32);
    uint64_t v29 = v9;
    uint64_t v30 = v28 + 32 * v9;
    uint64_t v32 = *(void *)(v30 + 8);
    uint64_t v31 = (uint64_t *)(v30 + 8);
    uint64_t v21 = v32;
    if (!v32)
    {
      *(_WORD *)(*(void *)(v28 + 56) + 114) |= 1u;
      goto LABEL_28;
    }
    if (!*(unsigned char *)(v21 + 17)
      || (++*(_DWORD *)(v21 + 20), *(unsigned char *)(v21 + 18))
      || (sub_1B0D12478(v21), (uint64_t v21 = *v31) != 0))
    {
      if (*(unsigned char *)(v21 + 16))
      {
        char v33 = 1;
        goto LABEL_24;
      }
    }
    if (!*(unsigned char *)(v21 + 17) && *(unsigned char *)(v21 + 16))
    {
      char v33 = 0;
      goto LABEL_24;
    }
    uint64_t v37 = sub_1B0D12594(v21, 0, 0);
    uint64_t v21 = v37;
    if ((int)v37 > 100)
    {
      if (v37 == 101)
      {
        int v38 = "no more rows available";
        goto LABEL_141;
      }
      if (v37 == 516)
      {
        int v38 = "abort due to ROLLBACK";
        goto LABEL_141;
      }
    }
    else
    {
      if (!v37)
      {
        char v33 = 0;
        uint64_t v21 = *v31;
LABEL_24:
        uint64_t v34 = *(void *)(v21 + 8);
        int v35 = *(unsigned __int8 *)(v21 + 17);
        if (*(unsigned char *)(v21 + 17))
        {
          ++*(_DWORD *)(v21 + 20);
          if (*(unsigned char *)(v21 + 18))
          {
            int v35 = 1;
          }
          else
          {
            sub_1B0D12478(v21);
            int v35 = *(unsigned __int8 *)(v21 + 17);
          }
        }
        unsigned int v93 = *(_DWORD *)(*(void *)(*(void *)(v34 + 24) + 80) + 40);
        if (v35)
        {
          int v41 = *(_DWORD *)(v21 + 20) - 1;
          *(_DWORD *)(v21 + 20) = v41;
          if (!v41) {
            sub_1B0D12558(v21);
          }
        }
        uint64_t v42 = *v31;
        uint64_t v43 = *(void *)(*v31 + 8);
        int v44 = *(unsigned __int8 *)(*v31 + 17);
        if (*(unsigned char *)(*v31 + 17))
        {
          ++*(_DWORD *)(v42 + 20);
          if (*(unsigned char *)(v42 + 18))
          {
            int v44 = 1;
          }
          else
          {
            sub_1B0D12478(v42);
            int v44 = *(unsigned __int8 *)(v42 + 17);
          }
        }
        unsigned int v92 = *(_DWORD *)(*(void *)(*(void *)(v43 + 24) + 80) + 44);
        if (v44)
        {
          int v45 = *(_DWORD *)(v42 + 20) - 1;
          *(_DWORD *)(v42 + 20) = v45;
          if (!v45) {
            sub_1B0D12558(v42);
          }
        }
        uint64_t v46 = *v31;
        uint64_t v47 = *(void *)(*v31 + 8);
        int v48 = *(unsigned __int8 *)(*v31 + 17);
        if (*(unsigned char *)(*v31 + 17))
        {
          ++*(_DWORD *)(v46 + 20);
          if (*(unsigned char *)(v46 + 18))
          {
            int v48 = 1;
          }
          else
          {
            sub_1B0D12478(v46);
            int v48 = *(unsigned __int8 *)(v46 + 17);
          }
        }
        unsigned int v91 = *(_DWORD *)(*(void *)(*(void *)(v47 + 24) + 80) + 48);
        if (v48)
        {
          int v49 = *(_DWORD *)(v46 + 20) - 1;
          *(_DWORD *)(v46 + 20) = v49;
          if (!v49) {
            sub_1B0D12558(v46);
          }
        }
        uint64_t v50 = *v31;
        if (*(unsigned char *)(*v31 + 17))
        {
          ++*(_DWORD *)(v50 + 20);
          if (*(unsigned char *)(v50 + 18) || (sub_1B0D12478(v50), *(unsigned char *)(v50 + 17)))
          {
            int v51 = *(_DWORD *)(v50 + 20) - 1;
            *(_DWORD *)(v50 + 20) = v51;
            if (!v51) {
              sub_1B0D12558(v50);
            }
          }
        }
        uint64_t v52 = *v31;
        uint64_t v53 = *(void *)(*v31 + 8);
        int v54 = *(unsigned __int8 *)(*v31 + 17);
        uint64_t v90 = a3;
        char v95 = v33;
        int v94 = v31;
        if (*(unsigned char *)(*v31 + 17))
        {
          ++*(_DWORD *)(v52 + 20);
          if (*(unsigned char *)(v52 + 18))
          {
            int v54 = 1;
          }
          else
          {
            sub_1B0D12478(v52);
            int v54 = *(unsigned __int8 *)(v52 + 17);
          }
        }
        uint64_t v55 = *(unsigned __int8 **)(*(void *)(v53 + 24) + 80);
        int v56 = v55[56];
        int v57 = v55[57];
        int v58 = v55[58];
        int v59 = v55[59];
        if (v54)
        {
          int v60 = *(_DWORD *)(v52 + 20) - 1;
          *(_DWORD *)(v52 + 20) = v60;
          if (!v60) {
            sub_1B0D12558(v52);
          }
        }
        uint64_t v61 = v28 + 32 * v9;
        uint64_t v64 = *(void *)(v61 + 24);
        int v63 = (uint64_t *)(v61 + 24);
        uint64_t v62 = v64;
        if ((*(unsigned char *)(a1 + 51) & 2) != 0)
        {
          int v66 = 0;
          int v67 = 0;
          *(_DWORD *)uint64_t v62 = 0;
        }
        else
        {
          int v65 = (v56 << 24) | (v57 << 16);
          int v66 = bswap32(v92);
          int v67 = bswap32(v91);
          *(_DWORD *)uint64_t v62 = bswap32(v93);
          if (v65 | (v58 << 8) | v59)
          {
            char v68 = v95;
            if (v9 || (int v69 = *(_DWORD *)(a1 + 44), (v69 & 0x40) != 0))
            {
              int v79 = v59 & 3;
              uint64_t v29 = v9;
              if (v79 != *(unsigned __int8 *)(a1 + 100))
              {
                uint64_t v80 = (char *)sub_1B0D05DC0(a1, 0x44uLL);
                uint64_t v75 = v80;
                if (v80)
                {
                  strcpy(v80, "attached databases must use the same text encoding as main database");
                  double v20 = *(double *)"same text encoding as main database";
                }
LABEL_113:
                if (*v90) {
                  sub_1B0D05C10((void *)a1, *v90);
                }
                *uint64_t v90 = v75;
                uint64_t v21 = 1;
                if (v68) {
                  goto LABEL_146;
                }
                goto LABEL_123;
              }
            }
            else
            {
              unsigned __int8 v70 = v59 & 3;
              if ((v59 & 3) == 0) {
                unsigned __int8 v70 = 1;
              }
              if (*(int *)(a1 + 208) >= 1 && (v69 & 4) == 0 && *(unsigned __int8 *)(a1 + 100) != v70)
              {
                uint64_t v21 = 6;
                uint64_t v29 = v9;
                if (v95) {
                  goto LABEL_146;
                }
                goto LABEL_123;
              }
              sub_1B0D223C0(a1, v70);
              uint64_t v62 = *v63;
              uint64_t v29 = v9;
            }
LABEL_83:
            int v71 = (int *)(v62 + 116);
            int v72 = *(_DWORD *)(v62 + 116);
            *(unsigned char *)(v62 + 113) = *(unsigned char *)(a1 + 100);
            if (!v72)
            {
              if (v67 == 0x80000000) {
                int v73 = 0x7FFFFFFF;
              }
              else {
                int v73 = -v67;
              }
              if (v67 >= 0) {
                int v73 = v67;
              }
              if (!v73) {
                int v73 = 128;
              }
              *int v71 = v73;
              sub_1B0D0EA1C(*v94, v71);
              uint64_t v62 = *v63;
            }
            *(unsigned char *)(v62 + 112) = v66;
            if ((_BYTE)v66)
            {
              if (v66 >= 5u)
              {
                uint64_t v74 = (char *)sub_1B0D05DC0(a1, 0x18uLL);
                uint64_t v75 = v74;
                if (v74)
                {
                  double v20 = *(double *)"unsupported file format";
                  strcpy(v74, "unsupported file format");
                }
                goto LABEL_113;
              }
            }
            else
            {
              *(unsigned char *)(v62 + 112) = 1;
            }
            if (!v9 && v66 >= 4) {
              *(void *)(a1 + 48) &= ~2uLL;
            }
            LODWORD(v101) = *(_DWORD *)(*(void *)(*v94 + 8) + 64);
            uint64_t v76 = (char *)sub_1B0C904AC(a1, "SELECT*FROM\"%w\".%s ORDER BY rowid", v14, v15, v16, v17, v18, v19, *(void *)(*(void *)(a1 + 32) + 32 * v29));
            uint64_t v77 = *(void *)(a1 + 528);
            *(void *)(a1 + 528) = 0;
            unsigned int v78 = sqlite3_exec((sqlite3 *)a1, v76, (int (__cdecl *)(void *, int, char **, char **))sub_1B0C8824C, v96, 0);
            *(void *)(a1 + 528) = v77;
            if (v78) {
              uint64_t v21 = v78;
            }
            else {
              uint64_t v21 = v98;
            }
            if (v76) {
              sub_1B0D05C10((void *)a1, v76);
            }
            if (v21)
            {
              if (!*(unsigned char *)(a1 + 103))
              {
                if ((*(unsigned char *)(a1 + 51) & 8) == 0 || v21 == 7)
                {
LABEL_122:
                  if (v68)
                  {
LABEL_146:
                    uint64_t v87 = *(void *)(v28 + 32 * v29 + 8);
                    if (*(unsigned char *)(v87 + 17))
                    {
                      int v88 = *(_DWORD *)(v87 + 20) - 1;
                      *(_DWORD *)(v87 + 20) = v88;
                      if (!v88) {
                        sub_1B0D12558(v87);
                      }
                    }
                    goto LABEL_5;
                  }
LABEL_123:
                  uint64_t v81 = *(void *)(v28 + 32 * v29 + 8);
                  if (*(unsigned char *)(v81 + 17))
                  {
                    ++*(_DWORD *)(v81 + 20);
                    if (!*(unsigned char *)(v81 + 18)) {
                      sub_1B0D12478(v81);
                    }
                  }
                  if (!sub_1B0CB23E8(v81, 0, v20)) {
                    sub_1B0CB283C(v81, 0);
                  }
                  if (*(unsigned char *)(v81 + 17))
                  {
                    int v82 = *(_DWORD *)(v81 + 20) - 1;
                    *(_DWORD *)(v81 + 20) = v82;
                    if (!v82) {
                      sub_1B0D12558(v81);
                    }
                  }
                  goto LABEL_146;
                }
LABEL_133:
                uint64_t v21 = 0;
                uint64_t v83 = *(void *)(*(void *)(a1 + 32) + 32 * v29 + 24);
                *(_WORD *)(v83 + 114) |= 1u;
                if (v68) {
                  goto LABEL_146;
                }
                goto LABEL_123;
              }
            }
            else
            {
              sub_1B0CB34D0(a1, v9);
              if (!*(unsigned char *)(a1 + 103)) {
                goto LABEL_133;
              }
            }
            sub_1B0CE89B4(a1);
            uint64_t v28 = *(void *)(a1 + 32);
            uint64_t v21 = 7;
            goto LABEL_122;
          }
        }
        uint64_t v29 = v9;
        char v68 = v95;
        goto LABEL_83;
      }
      if (v37 == 100)
      {
        int v38 = "another row available";
LABEL_141:
        unint64_t v84 = strlen(v38) + 1;
        uint64_t v85 = (char *)sub_1B0D05DC0(a1, v84);
        uint64_t v86 = v85;
        if (v85) {
          memcpy(v85, v38, v84);
        }
        if (*a3) {
          sub_1B0D05C10((void *)a1, *a3);
        }
        *a3 = v86;
        goto LABEL_146;
      }
    }
    if v37 > 0x1Cu || ((0x1410004uLL >> v37)) {
      int v38 = "unknown error";
    }
    else {
      int v38 = off_1E5FF0368[v37];
    }
    goto LABEL_141;
  }
LABEL_5:
  if (v21)
  {
    if ((v21 == 3082 || v21 == 7) && !*(unsigned char *)(a1 + 103) && !*(unsigned char *)(a1 + 104))
    {
      *(unsigned char *)(a1 + 103) = 1;
      if (*(int *)(a1 + 220) >= 1) {
        *(_DWORD *)(a1 + 424) = 1;
      }
      ++*(_DWORD *)(a1 + 432);
      *(_WORD *)(a1 + 436) = 0;
      uint64_t v39 = *(void *)(a1 + 344);
      if (v39)
      {
        sub_1B0CEF2BC(v39, "out of memory", v14, v15, v16, v17, v18, v19, v89);
        for (uint64_t i = *(void *)(a1 + 344); ; ++*(_DWORD *)(i + 48))
        {
          *(_DWORD *)(i + 24) = 7;
          uint64_t i = *(void *)(i + 256);
          if (!i) {
            break;
          }
        }
      }
    }
    if ((v9 & 0x80000000) == 0)
    {
      uint64_t v22 = *(void *)(a1 + 32);
      uint64_t v23 = *(void *)(v22 + 32 * v9 + 24);
      *(_WORD *)(v23 + 114) |= 8u;
      *(_WORD *)(*(void *)(v22 + 56) + 114) |= 8u;
      *(_DWORD *)(a1 + 44) &= ~0x10u;
    }
    if (!*(_DWORD *)(a1 + 72))
    {
      int v24 = *(_DWORD *)(a1 + 40);
      if (v24 >= 1)
      {
        uint64_t v25 = 0;
        uint64_t v26 = 24;
        do
        {
          uint64_t v27 = *(void *)(*(void *)(a1 + 32) + v26);
          if ((*(_WORD *)(v27 + 114) & 8) != 0)
          {
            sub_1B0D1BE68(v27);
            int v24 = *(_DWORD *)(a1 + 40);
          }
          ++v25;
          v26 += 32;
        }
        while (v25 < v24);
      }
    }
  }
LABEL_28:
  *(unsigned char *)(a1 + 197) = 0;
  return v21;
}

uint64_t sub_1B0C8824C(int *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = a1[4];
  *(_DWORD *)(*(void *)a1 + 44) |= 0x40u;
  if (!a3) {
    return 0;
  }
  uint64_t v11 = (uint64_t)a1;
  ++a1[7];
  if (*(unsigned char *)(v8 + 103))
  {
    sub_1B0D227EC((uint64_t)a1, a3, 0, a4, a5, a6, a7, a8);
    return 1;
  }
  unsigned int v13 = (unsigned __int8 *)a3[3];
  if (!v13) {
    goto LABEL_27;
  }
  uint64_t v14 = (unsigned char *)a3[4];
  if (!v14)
  {
    uint64_t v25 = (unsigned __int8 *)a3[1];
    if (v25) {
      goto LABEL_21;
    }
LABEL_27:
    uint64_t v29 = a3;
    uint64_t v28 = 0;
LABEL_30:
    sub_1B0D227EC((uint64_t)a1, v29, v28, a4, a5, a6, a7, a8);
    return 0;
  }
  if ((*v14 & 0xDF) == 0x43 && (v14[1] & 0xDF) == 0x52)
  {
    char v15 = *(unsigned char *)(v8 + 196);
    *(unsigned char *)(v8 + 196) = v9;
    uint64_t v16 = *v13;
    if ((unint64_t)(v16 - 58) >= 0xFFFFFFFFFFFFFFF6)
    {
      unint64_t v36 = 0;
      uint64_t v37 = v13 + 1;
      while (1)
      {
        unint64_t v36 = 10 * v36 + (char)v16 - 48;
        if (v36 > 0x100000000) {
          break;
        }
        unsigned int v38 = *v37++;
        LODWORD(v16) = v38;
        if ((unint64_t)v38 - 58 < 0xFFFFFFFFFFFFFFF6)
        {
          if (v16) {
            int v39 = 0;
          }
          else {
            int v39 = v36;
          }
          *(_DWORD *)(v8 + 192) = v39;
          if (v16) {
            goto LABEL_10;
          }
          unsigned int v40 = a1[8];
          if (v40 < v36)
          {
            if (v40) {
              goto LABEL_10;
            }
          }
          goto LABEL_12;
        }
      }
    }
    *(_DWORD *)(v8 + 192) = 0;
LABEL_10:
    if (byte_1EB21C9C9) {
      sub_1B0D227EC((uint64_t)a1, a3, "invalid rootpage", a4, a5, a6, a7, a8);
    }
LABEL_12:
    *(unsigned char *)(v8 + 198) &= ~1u;
    *(void *)(v8 + 200) = a3;
    pStmt = 0;
    sub_1B0C7ED2C(v8, a3[4], 0xFFFFFFFFLL, 0, 0, &pStmt, 0);
    int v24 = *(_DWORD *)(v8 + 80);
    *(unsigned char *)(v8 + 196) = v15;
    if (v24 && (*(unsigned char *)(v8 + 198) & 1) == 0)
    {
      if (v24 > *(_DWORD *)(v11 + 20)) {
        *(_DWORD *)(v11 + 20) = v24;
      }
      if (v24 != 9)
      {
        if (v24 == 7)
        {
          sub_1B0CEB0A4(v8, v17, v18, v19, v20, v21, v22, v23);
        }
        else if (v24 != 6)
        {
          int v41 = (char *)sqlite3_errmsg((sqlite3 *)v8);
          sub_1B0D227EC(v11, a3, v41, v42, v43, v44, v45, v46);
        }
      }
    }
    *(void *)(v8 + 200) = off_1E9B51F20;
    sqlite3_finalize(pStmt);
    return 0;
  }
  uint64_t v25 = (unsigned __int8 *)a3[1];
  if (!v25 || *v14) {
    goto LABEL_27;
  }
LABEL_21:
  uint64_t v26 = sub_1B0D22904(v8, v25, *(unsigned __int8 **)(*(void *)(v8 + 32) + 32 * v9));
  if (!v26)
  {
    uint64_t v28 = "orphan index";
    goto LABEL_29;
  }
  uint64_t v27 = *v13;
  if ((unint64_t)(v27 - 58) >= 0xFFFFFFFFFFFFFFF6)
  {
    unint64_t v31 = 0;
    uint64_t v32 = v13 + 1;
    while (1)
    {
      unint64_t v31 = 10 * v31 + (char)v27 - 48;
      if (v31 > 0x100000000) {
        break;
      }
      unsigned int v33 = *v32++;
      LODWORD(v27) = v33;
      if ((unint64_t)v33 - 58 < 0xFFFFFFFFFFFFFFF6)
      {
        if (v27) {
          unsigned int v34 = 0;
        }
        else {
          unsigned int v34 = v31;
        }
        *(_DWORD *)(v26 + 88) = v34;
        if (!v27 && v34 >= 2 && v34 <= *(_DWORD *)(v11 + 32))
        {
          uint64_t v35 = *(void *)(*(void *)(v26 + 24) + 16);
          if (!v35) {
            return 0;
          }
          while (v35 == v26 || *(_DWORD *)(v35 + 88) != v34)
          {
            uint64_t v12 = 0;
            uint64_t v35 = *(void *)(v35 + 40);
            if (!v35) {
              return v12;
            }
          }
        }
        goto LABEL_24;
      }
    }
  }
  *(_DWORD *)(v26 + 88) = 0;
LABEL_24:
  uint64_t v12 = byte_1EB21C9C9;
  if (byte_1EB21C9C9)
  {
    uint64_t v28 = "invalid rootpage";
LABEL_29:
    a1 = (int *)v11;
    uint64_t v29 = a3;
    goto LABEL_30;
  }
  return v12;
}

void sub_1B0C88550(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  int v9 = a7;
  int v10 = a6;
  int v11 = a5;
  int v12 = a4;
  unsigned int v13 = (_OWORD *)a3;
  uint64_t v16 = *(void *)a1;
  if (*(unsigned char *)(*(void *)a1 + 197))
  {
    if (*(_DWORD *)(v16 + 192) == 1)
    {
      int v141 = a6;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 196);
      if (v17 == 1) {
        unint64_t v18 = 19;
      }
      else {
        unint64_t v18 = 14;
      }
      uint64_t v19 = (char *)sub_1B0D05DC0(v16, v18);
      if (!v19)
      {
        *(_OWORD *)(a1 + 264) = *a2;
        return;
      }
      uint64_t v20 = v19;
      if (v17 == 1) {
        uint64_t v21 = "sqlite_temp_master";
      }
      else {
        uint64_t v21 = "sqlite_master";
      }
      memcpy(v19, v21, v18);
      *(_OWORD *)(a1 + 264) = *a2;
      goto LABEL_43;
    }
    if (*(_DWORD *)(a3 + 8))
    {
      int v24 = "corrupt database";
      goto LABEL_19;
    }
    uint64_t v22 = (_DWORD *)(a3 + 8);
  }
  else
  {
    uint64_t v22 = (_DWORD *)(a3 + 8);
    if (*(_DWORD *)(a3 + 8))
    {
      uint64_t v23 = sub_1B0D35B18(*(void *)a1, (uint64_t)a2);
      if ((v23 & 0x80000000) != 0)
      {
        sub_1B0CEF2BC(a1, "unknown database %T", a3, a4, a5, a6, a7, a8, (char)a2);
        return;
      }
      if (!v12) {
        goto LABEL_25;
      }
      goto LABEL_14;
    }
  }
  uint64_t v23 = *(unsigned __int8 *)(v16 + 196);
  unsigned int v13 = a2;
  if (!a4)
  {
LABEL_25:
    uint64_t v17 = v23;
    goto LABEL_26;
  }
LABEL_14:
  uint64_t v17 = 1;
  if (v23 == 1 || !*v22)
  {
LABEL_26:
    int v141 = v10;
    if (v13 && (uint64_t v25 = *(const void **)v13) != 0)
    {
      size_t v26 = *((unsigned int *)v13 + 2);
      uint64_t v27 = (char *)sub_1B0D05DC0(v16, v26 + 1);
      uint64_t v20 = v27;
      if (v27)
      {
        memcpy(v27, v25, v26);
        v20[v26] = 0;
        int v28 = *v20;
        if ((char)byte_1B0DE196D[*v20] < 0)
        {
          uint64_t v29 = 0;
          if (v28 == 91) {
            int v28 = 93;
          }
          for (int i = 1; ; ++i)
          {
            uint64_t v31 = i;
            int v32 = v20[i];
            if (v32 == v28)
            {
              ++i;
              LOBYTE(v32) = v28;
              if (v20[v31 + 1] != v28) {
                break;
              }
            }
            v20[v29++] = v32;
          }
          v20[v29] = 0;
        }
      }
    }
    else
    {
      uint64_t v20 = 0;
    }
    unsigned int v33 = *(unsigned __int8 *)(a1 + 302);
    if (v33 <= 3 && v33 != 2)
    {
LABEL_42:
      *(_OWORD *)(a1 + 264) = *v13;
      if (!v20) {
        return;
      }
LABEL_43:
      if (v11) {
        uint64_t v35 = "view";
      }
      else {
        uint64_t v35 = "table";
      }
      if (sub_1B0D3555C((unsigned char *)a1, v20, v35, v20, a5, a6, a7, a8)) {
        goto LABEL_47;
      }
      if (*(unsigned char *)(v16 + 196) == 1) {
        int v41 = 1;
      }
      else {
        int v41 = v12;
      }
      uint64_t v42 = *(void *)(*(void *)(v16 + 32) + 32 * v17);
      if (v41 == 1) {
        uint64_t v43 = "sqlite_temp_master";
      }
      else {
        uint64_t v43 = "sqlite_master";
      }
      uint64_t v44 = *(void *)a1;
      uint64_t v45 = *(uint64_t (**)(void, uint64_t, const char *, void, void, void))(*(void *)a1 + 528);
      if (v45 && !*(unsigned char *)(v44 + 197) && !*(unsigned char *)(a1 + 302))
      {
        int v112 = v45(*(void *)(v44 + 536), 18, v43, 0, *(void *)(*(void *)(v16 + 32) + 32 * v17), *(void *)(a1 + 368));
        if (v112 == 1) {
          goto LABEL_96;
        }
        if ((v112 & 0xFFFFFFFD) != 0)
        {
LABEL_103:
          int v113 = 1;
          uint64_t v114 = "authorizer malfunction";
          goto LABEL_104;
        }
        if (v112) {
          goto LABEL_47;
        }
      }
      if (v141) {
        goto LABEL_60;
      }
      uint64_t v85 = *(void *)a1;
      uint64_t v86 = *(uint64_t (**)(void, void, char *, void, uint64_t, void))(*(void *)a1 + 528);
      if (!v86 || *(unsigned char *)(v85 + 197) || *(unsigned char *)(a1 + 302)) {
        goto LABEL_60;
      }
      int v87 = v86(*(void *)(v85 + 536), byte_1B0DE5736[2 * v11 + v41], v20, 0, v42, *(void *)(a1 + 368));
      if (v87 != 1)
      {
        if ((v87 & 0xFFFFFFFD) == 0)
        {
          if (v87)
          {
LABEL_47:
            *(unsigned char *)(a1 + 29) = 1;
            sub_1B0D05C10((void *)v16, v20);
            return;
          }
LABEL_60:
          if (!*(unsigned char *)(a1 + 302))
          {
            int v88 = *(unsigned __int8 **)(*(void *)(v16 + 32) + 32 * v17);
            uint64_t v89 = *(void *)a1;
            if (!*(unsigned char *)(*(void *)a1 + 197))
            {
              uint64_t v140 = *(unsigned __int8 **)(*(void *)(v16 + 32) + 32 * v17);
              int v105 = sub_1B0C878D8(v89, (char **)(a1 + 8), (uint64_t)v43, v36, v37, v38, v39, v40);
              if (v105)
              {
                *(_DWORD *)(a1 + 24) = v105;
LABEL_92:
                ++*(_DWORD *)(a1 + 48);
                goto LABEL_47;
              }
              int v88 = v140;
              if (*(unsigned char *)(v89 + 111)) {
                *(_DWORD *)(v89 + 44) |= 0x10u;
              }
            }
            uint64_t v90 = v88;
            uint64_t v91 = sub_1B0CF60C8(v16, v20, v88);
            if (v91)
            {
              if (v9)
              {
                sub_1B0C9CCDC(a1, v17);
                sub_1B0D358A0((uint64_t *)a1, v98, v99, v100, v101, v102, v103, v104);
              }
              else
              {
                uint64_t v115 = "view";
                if (*(unsigned char *)(v91 + 63) != 2) {
                  uint64_t v115 = "table";
                }
                sub_1B0CEF2BC(a1, "%s %T already exists", v92, v93, v94, v95, v96, v97, (char)v115);
              }
              goto LABEL_47;
            }
            if (sub_1B0D22904(v16, (unsigned __int8 *)v20, v90))
            {
              sub_1B0CEF2BC(a1, "there is already an index named %s", v106, v107, v108, v109, v110, v111, (char)v20);
              goto LABEL_47;
            }
          }
          uint64_t v46 = sub_1B0D05DC0(v16, 0x68uLL);
          if (v46)
          {
            *(void *)(v46 + 96) = 0;
            *(_OWORD *)(v46 + 64) = 0u;
            *(_OWORD *)(v46 + 80) = 0u;
            *(_OWORD *)(v46 + 32) = 0u;
            *(_OWORD *)(v46 + 48) = 0u;
            *(_OWORD *)uint64_t v46 = 0u;
            *(_OWORD *)(v46 + 16) = 0u;
            *(void *)uint64_t v46 = v20;
            *(_WORD *)(v46 + 52) = -1;
            *(void *)(v46 + 96) = *(void *)(*(void *)(v16 + 32) + 32 * v17 + 24);
            *(_DWORD *)(v46 + 44) = 1;
            *(_WORD *)(v46 + 58) = 200;
            *(void *)(a1 + 344) = v46;
            if (!*(unsigned char *)(v16 + 197))
            {
              uint64_t v54 = sub_1B0CCB8D4((uint64_t *)a1, v47, v48, v49, v50, v51, v52, v53);
              if (v54)
              {
                uint64_t v55 = v54;
                sub_1B0D3597C(a1, 1, v17);
                if (v141) {
                  sub_1B0D2F924(v55, 170, v56, v57, v58, v59, v60, v61);
                }
                int v62 = *(_DWORD *)(a1 + 56);
                uint64_t v63 = (v62 + 1);
                uint64_t v64 = (v62 + 2);
                *(_DWORD *)(a1 + 128) = v63;
                *(_DWORD *)(a1 + 132) = v64;
                uint64_t v65 = (v62 + 3);
                *(_DWORD *)(a1 + 56) = v65;
                sub_1B0C8A924(v55, 99, v17, v65, 2, v59, v60, v61);
                sub_1B0CEF64C((_DWORD *)v55, v17);
                int v74 = sub_1B0D2F978(v55, 16, v65, v66, v67, v68, v69, v70);
                if ((*(void *)(v16 + 48) & 2) != 0) {
                  uint64_t v75 = 1;
                }
                else {
                  uint64_t v75 = 4;
                }
                sub_1B0C8A924(v55, 100, v17, 2, v75, v71, v72, v73);
                sub_1B0C8A924(v55, 100, v17, 5, *(unsigned __int8 *)(v16 + 100), v76, v77, v78);
                if (*(unsigned char *)(*(void *)v55 + 103)) {
                  uint64_t v83 = &byte_1E9B52240;
                }
                else {
                  uint64_t v83 = (char *)(*(void *)(v55 + 136) + 40 * v74);
                }
                *((_DWORD *)v83 + 2) = *(_DWORD *)(v55 + 144);
                if (v141 | v11) {
                  sub_1B0D254B8(v55, 71, 0, v64, v79, v80, v81, v82);
                }
                else {
                  *(_DWORD *)(a1 + 200) = sub_1B0C8A924(v55, 147, v17, v64, 1, v80, v81, v82);
                }
                sub_1B0D359F4(a1, v17, v116, v117, v118, v119, v120, v121);
                sub_1B0D254B8(v55, 127, 0, v63, v122, v123, v124, v125);
                sub_1B0CCB908((uint64_t *)v55, 77, 6, v65, 0, (uint64_t)&unk_1B0DE573A, 0xFFFFFFFFLL, v126);
                sub_1B0C8A924(v55, 128, 0, v65, v63, v127, v128, v129);
                int v136 = *(_DWORD *)(v55 + 144);
                BOOL v137 = __OFSUB__(v136, 1);
                int v138 = v136 - 1;
                if (v138 < 0 == v137) {
                  *(_WORD *)(*(void *)(v55 + 136) + 40 * v138 + 2) = 8;
                }
                sub_1B0D2F924(v55, 122, v130, v131, v132, v133, v134, v135);
              }
            }
            return;
          }
          *(_DWORD *)(a1 + 24) = 7;
          goto LABEL_92;
        }
        goto LABEL_103;
      }
LABEL_96:
      int v113 = 23;
      uint64_t v114 = "not authorized";
LABEL_104:
      sub_1B0CEF2BC(a1, v114, (uint64_t)v43, v36, v37, v38, v39, v40, v139);
      *(_DWORD *)(a1 + 24) = v113;
      goto LABEL_47;
    }
    if (*(void *)a1)
    {
      uint64_t v84 = sub_1B0D05DC0(*(void *)a1, 0x20uLL);
      if (!v84) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v84 = sub_1B0C7FC94(32);
      if (!v84) {
        goto LABEL_42;
      }
    }
    *(_OWORD *)uint64_t v84 = 0u;
    *(_OWORD *)(v84 + 16) = 0u;
    *(void *)uint64_t v84 = v20;
    *(_OWORD *)(v84 + 8) = *v13;
    *(void *)(v84 + 24) = *(void *)(a1 + 408);
    *(void *)(a1 + 408) = v84;
    goto LABEL_42;
  }
  int v24 = "temporary table name must be unqualified";
LABEL_19:

  sub_1B0CEF2BC(a1, v24, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1B0C88C98(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 344);
  if (!v8) {
    return;
  }
  uint64_t v10 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 + 144) <= *(__int16 *)(v8 + 54))
  {
    sub_1B0CEF2BC(a1, "too many columns on %s", a3, (uint64_t)a4, a5, a6, a7, a8, *(void *)v8);
    return;
  }
  int v11 = a4;
  unint64_t v12 = a3;
  unsigned int v13 = a2;
  if (*(unsigned __int8 *)(a1 + 302) <= 1u && a3 >= 2 && (char)byte_1B0DE196D[*a2] < 0)
  {
    uint64_t v14 = (a3 - 1);
    if (v14 < 2)
    {
LABEL_10:
      unint64_t v12 = (a3 - 2) | a3 & 0xFFFFFFFF00000000;
      unsigned int v13 = a2 + 1;
    }
    else
    {
      uint64_t v15 = 1;
      while (((char)byte_1B0DE196D[a2[v15]] & 0x80000000) == 0)
      {
        if (v14 == ++v15) {
          goto LABEL_10;
        }
      }
    }
  }
  if (a5 < 0x10)
  {
LABEL_63:
    if (a5 < 3) {
      goto LABEL_109;
    }
    goto LABEL_64;
  }
  if (!a4) {
    goto LABEL_64;
  }
  uint64_t v16 = (a5 - 6);
  uint64_t v17 = &a4[v16];
  unint64_t v18 = a4[v16];
  if (!a4[v16])
  {
    uint64_t v20 = "always";
    goto LABEL_38;
  }
  if ((v18 & 0xFFFFFFDF) != 0x41)
  {
    v18 += (unint64_t)byte_1B0DE1758;
    uint64_t v20 = "always";
LABEL_37:
    LODWORD(v18) = *(unsigned __int8 *)v18;
    goto LABEL_38;
  }
  unint64_t v18 = v17[1];
  if (!v17[1])
  {
    uint64_t v20 = "lways";
    goto LABEL_38;
  }
  if ((v18 & 0xFFFFFFDF) != 0x4C)
  {
    v18 += (unint64_t)byte_1B0DE1758;
    uint64_t v20 = "lways";
    goto LABEL_37;
  }
  unint64_t v18 = v17[2];
  if (!v17[2])
  {
    uint64_t v20 = "ways";
    goto LABEL_38;
  }
  if ((v18 & 0xFFFFFFDF) != 0x57)
  {
    v18 += (unint64_t)byte_1B0DE1758;
    uint64_t v20 = "ways";
    goto LABEL_37;
  }
  unint64_t v18 = v17[3];
  if (!v17[3])
  {
    uint64_t v20 = "ays";
    goto LABEL_38;
  }
  if ((v18 & 0xFFFFFFDF) != 0x41)
  {
    v18 += (unint64_t)byte_1B0DE1758;
    uint64_t v20 = "ays";
    goto LABEL_37;
  }
  unint64_t v18 = v17[4];
  if (!v17[4])
  {
    uint64_t v20 = "ys";
    goto LABEL_38;
  }
  if ((v18 & 0xFFFFFFDF) != 0x59)
  {
    v18 += (unint64_t)byte_1B0DE1758;
    uint64_t v20 = "ys";
    goto LABEL_37;
  }
  uint64_t v19 = v17[5];
  if (v19)
  {
    if ((v19 & 0xFFFFFFDF) == 0x53) {
      goto LABEL_39;
    }
    unint64_t v18 = (unint64_t)&byte_1B0DE1758[v19];
    uint64_t v20 = "s";
    goto LABEL_37;
  }
  LODWORD(v18) = 0;
  uint64_t v20 = "s";
LABEL_38:
  if (v18 == byte_1B0DE1758[*v20])
  {
LABEL_39:
    uint64_t v21 = 0;
    int v22 = a5 - 14;
    uint64_t v23 = a4 - 1;
    do
    {
      if (v16 == v21) {
        goto LABEL_108;
      }
      char v24 = byte_1B0DE196D[v23[v16]];
      ++v21;
      --v23;
    }
    while ((v24 & 1) != 0);
    if ((a5 - 5 - v21) > 8)
    {
      uint64_t v25 = &a4[(v16 - v21 - 8)];
      unint64_t v26 = *v25;
      if (*v25)
      {
        if ((v26 & 0xFFFFFFDF) == 0x47)
        {
          unint64_t v26 = v25[1];
          if (!v25[1])
          {
            int v28 = "enerated";
            goto LABEL_103;
          }
          if ((v26 & 0xFFFFFFDF) == 0x45)
          {
            unint64_t v26 = v25[2];
            if (!v25[2])
            {
              int v28 = "nerated";
              goto LABEL_103;
            }
            if ((v26 & 0xFFFFFFDF) == 0x4E)
            {
              unint64_t v26 = v25[3];
              if (!v25[3])
              {
                int v28 = "erated";
                goto LABEL_103;
              }
              if ((v26 & 0xFFFFFFDF) == 0x45)
              {
                unint64_t v26 = v25[4];
                if (!v25[4])
                {
                  int v28 = "rated";
                  goto LABEL_103;
                }
                if ((v26 & 0xFFFFFFDF) == 0x52)
                {
                  unint64_t v26 = v25[5];
                  if (!v25[5])
                  {
                    int v28 = "ated";
                    goto LABEL_103;
                  }
                  if ((v26 & 0xFFFFFFDF) == 0x41)
                  {
                    unint64_t v26 = v25[6];
                    if (!v25[6])
                    {
                      int v28 = "ted";
                      goto LABEL_103;
                    }
                    if ((v26 & 0xFFFFFFDF) == 0x54)
                    {
                      unint64_t v26 = v25[7];
                      if (v25[7])
                      {
                        if ((v26 & 0xFFFFFFDF) == 0x45)
                        {
                          uint64_t v27 = v25[8];
                          if (!v27)
                          {
                            LODWORD(v26) = 0;
                            int v28 = "d";
                            goto LABEL_103;
                          }
                          if ((v27 & 0xFFFFFFDF) == 0x44)
                          {
LABEL_104:
                            LODWORD(a5) = a5 - 13 - v21;
                            uint64_t v37 = (v22 - v21);
                            while (v37)
                            {
                              uint64_t v38 = &a4[v37--];
                              LODWORD(a5) = a5 - 1;
                              if ((byte_1B0DE196D[*(v38 - 1)] & 1) == 0) {
                                goto LABEL_63;
                              }
                            }
LABEL_108:
                            LODWORD(a5) = 0;
LABEL_109:
                            char v80 = 65;
                            char v81 = 0;
                            char v36 = 1;
                            goto LABEL_110;
                          }
                          unint64_t v26 = (unint64_t)&byte_1B0DE1758[v27];
                          int v28 = "d";
                        }
                        else
                        {
                          v26 += (unint64_t)byte_1B0DE1758;
                          int v28 = "ed";
                        }
                        goto LABEL_102;
                      }
                      int v28 = "ed";
LABEL_103:
                      if (v26 == byte_1B0DE1758[*v28]) {
                        goto LABEL_104;
                      }
                      LODWORD(a5) = a5 - 5 - v21;
                      goto LABEL_64;
                    }
                    v26 += (unint64_t)byte_1B0DE1758;
                    int v28 = "ted";
                  }
                  else
                  {
                    v26 += (unint64_t)byte_1B0DE1758;
                    int v28 = "ated";
                  }
                }
                else
                {
                  v26 += (unint64_t)byte_1B0DE1758;
                  int v28 = "rated";
                }
              }
              else
              {
                v26 += (unint64_t)byte_1B0DE1758;
                int v28 = "erated";
              }
            }
            else
            {
              v26 += (unint64_t)byte_1B0DE1758;
              int v28 = "nerated";
            }
          }
          else
          {
            v26 += (unint64_t)byte_1B0DE1758;
            int v28 = "enerated";
          }
        }
        else
        {
          v26 += (unint64_t)byte_1B0DE1758;
          int v28 = "generated";
        }
LABEL_102:
        LODWORD(v26) = *(unsigned __int8 *)v26;
        goto LABEL_103;
      }
      int v28 = "generated";
      goto LABEL_103;
    }
    LODWORD(a5) = a5 - 5 - v21;
    goto LABEL_63;
  }
LABEL_64:
  if ((char)byte_1B0DE196D[*a4] < 0)
  {
    uint64_t v29 = 1;
    while (((char)byte_1B0DE196D[a4[v29]] & 0x80000000) == 0)
    {
      if (a5 - 1 == ++v29)
      {
        LODWORD(a5) = a5 - 2;
        int v11 = a4 + 1;
        break;
      }
    }
  }
  uint64_t v30 = 0;
  while (1)
  {
    if (a5 != byte_1B0DE5782[v30]) {
      goto LABEL_72;
    }
    if ((a5 & 0x80000000) != 0) {
      break;
    }
    int v32 = off_1E9B51F20[v30];
    if (v32)
    {
      if (!a5) {
        goto LABEL_81;
      }
      int v33 = a5 + 1;
      unsigned int v34 = v11;
      while (1)
      {
        uint64_t v35 = *v34;
        if (!*v34) {
          break;
        }
        LODWORD(v35) = byte_1B0DE1758[v35];
        int v31 = byte_1B0DE1758[*v32];
        if (v35 != v31) {
          goto LABEL_71;
        }
        ++v34;
        ++v32;
        if (--v33 <= 1) {
          goto LABEL_81;
        }
      }
      int v31 = byte_1B0DE1758[*v32];
LABEL_71:
      if (v35 == v31) {
        goto LABEL_81;
      }
    }
LABEL_72:
    if (++v30 == 6) {
      goto LABEL_109;
    }
  }
  sub_1B0CE1978(35844);
LABEL_81:
  LODWORD(a5) = 0;
  char v80 = byte_1B0DE577C[v30];
  char v81 = v30 + 1;
  if ((v30 & 0x7FFFFFFB) == 1) {
    char v36 = 5;
  }
  else {
    char v36 = 1;
  }
LABEL_110:
  char v79 = v36;
  size_t v39 = a5;
  unint64_t v40 = v12 + (unint64_t)a5;
  if (a5) {
    ++v40;
  }
  if (v10)
  {
    int v41 = (unsigned __int8 *)sub_1B0D05DC0(v10, v40 + 1);
    if (!v41) {
      return;
    }
LABEL_116:
    unsigned int v42 = *(unsigned __int8 *)(a1 + 302);
    if (v42 > 3 || v42 == 2)
    {
      uint64_t v67 = *(void *)a1 ? sub_1B0D05DC0(*(void *)a1, 0x20uLL) : sub_1B0C7FC94(32);
      if (v67)
      {
        *(_OWORD *)uint64_t v67 = 0u;
        *(_OWORD *)(v67 + 16) = 0u;
        *(void *)uint64_t v67 = v41;
        *(void *)(v67 + 8) = v13;
        *(void *)(v67 + 16) = v12;
        *(void *)(v67 + 24) = *(void *)(a1 + 408);
        *(void *)(a1 + 408) = v67;
      }
    }
    memcpy(v41, v13, v12);
    v41[v12] = 0;
    int v49 = *v41;
    if ((char)byte_1B0DE196D[*v41] < 0)
    {
      uint64_t v50 = 0;
      if (v49 == 91) {
        int v51 = 93;
      }
      else {
        int v51 = *v41;
      }
      for (int i = 1; ; ++i)
      {
        uint64_t v53 = i;
        int v54 = v41[i];
        if (v54 == v51)
        {
          ++i;
          LOBYTE(v54) = v51;
          if (v41[v53 + 1] != v51) {
            break;
          }
        }
        v41[v50++] = v54;
      }
      v41[v50] = 0;
      int v49 = *v41;
    }
    unsigned __int8 v55 = 0;
    if (v49)
    {
      uint64_t v56 = v41 + 1;
      do
      {
        v55 += byte_1B0DE1758[v49];
        int v57 = *v56++;
        int v49 = v57;
      }
      while (v57);
    }
    uint64_t v58 = *(unsigned __int16 *)(v8 + 54);
    if (*(__int16 *)(v8 + 54) <= 0)
    {
      uint64_t v60 = *(void **)(v8 + 8);
    }
    else
    {
      uint64_t v59 = 0;
      uint64_t v60 = *(void **)(v8 + 8);
      do
      {
        if (BYTE3(v60[2 * v59 + 1]) == v55)
        {
          for (uint64_t j = 0; ; ++j)
          {
            uint64_t v62 = v41[j];
            uint64_t v63 = *(unsigned __int8 *)(v60[2 * v59] + j);
            if (v62 == v63)
            {
              if (!v41[j])
              {
                sub_1B0CEF2BC(a1, "duplicate column name: %s", v43, v44, v45, v46, v47, v48, (char)v41);
                goto LABEL_140;
              }
            }
            else if (byte_1B0DE1758[v62] != byte_1B0DE1758[v63])
            {
              break;
            }
          }
        }
        ++v59;
      }
      while (v59 != v58);
    }
    uint64_t v64 = 16 * (__int16)v58;
    unint64_t v65 = v64 + 16;
    if (v60)
    {
      if (*(void *)(v10 + 512) > (unint64_t)v60)
      {
        uint64_t v66 = (__int16)v58;
        if (*(void *)(v10 + 496) <= (unint64_t)v60)
        {
          if (v65 < 0x81) {
            goto LABEL_160;
          }
        }
        else if (*(void *)(v10 + 504) <= (unint64_t)v60 && v65 <= *(unsigned __int16 *)(v10 + 438))
        {
LABEL_160:
          *(void *)(v8 + 8) = v60;
          uint64_t v69 = (unsigned __int8 **)&v60[2 * v66];
          *uint64_t v69 = v41;
          v69[1] = 0;
          *((unsigned char *)v69 + 11) = v55;
          if (v39)
          {
            uint64_t v70 = &v41[strlen((const char *)v41) & 0x3FFFFFFF];
            uint64_t v71 = v70 + 1;
            memcpy(v70 + 1, v11, v39);
            v70[v39 + 1] = 0;
            if ((char)byte_1B0DE196D[v70[1]] < 0)
            {
              uint64_t v72 = 0;
              if (v70[1] == 91) {
                int v73 = 93;
              }
              else {
                int v73 = v70[1];
              }
              for (int k = 1; ; ++k)
              {
                uint64_t v75 = k;
                int v76 = v71[k];
                if (v76 == v73)
                {
                  ++k;
                  LOBYTE(v76) = v73;
                  if (v71[v75 + 1] != v73) {
                    break;
                  }
                }
                v71[v72++] = v76;
              }
              v71[v72] = 0;
            }
            char v77 = sub_1B0D27EF0(v70 + 1, (uint64_t)&v60[2 * v66]);
            uint64_t v78 = &v60[2 * v66];
            *((unsigned char *)v78 + 9) = v77;
            *((_WORD *)v78 + 7) |= 4u;
          }
          else
          {
            *((unsigned char *)v69 + 9) = v80;
            *((unsigned char *)v69 + 8) = (_BYTE)v69[1] & 0xF | (16 * v81);
            *((unsigned char *)v69 + 10) = v79;
          }
          ++*(_WORD *)(v8 + 54);
          ++*(_WORD *)(v8 + 56);
          *(_DWORD *)(a1 + 112) = 0;
          return;
        }
      }
      uint64_t v68 = sub_1B0D05E6C(v10, v60, v65);
    }
    else
    {
      uint64_t v68 = sub_1B0D05DC0(v10, v64 + 16);
    }
    uint64_t v60 = (void *)v68;
    if (v68)
    {
      uint64_t v66 = *(__int16 *)(v8 + 54);
      goto LABEL_160;
    }
LABEL_140:
    sub_1B0D05C10((void *)v10, v41);
  }
  else
  {
    int v41 = (unsigned __int8 *)sub_1B0C7FC94(v40 + 1);
    if (v41) {
      goto LABEL_116;
    }
  }
}

void sub_1B0C8958C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (!(a3 | a5)) {
    return;
  }
  uint64_t v10 = *(void *)(a1 + 344);
  if (!v10) {
    return;
  }
  uint64_t v11 = a5;
  int v12 = a4;
  unsigned int v13 = (_DWORD *)a3;
  uint64_t v15 = *(void *)a1;
  if (a5)
  {
    uint64_t v16 = (unsigned char *)(v15 + 197);
    if (*(unsigned char *)(v15 + 197))
    {
LABEL_5:
      uint64_t v17 = &byte_1B0DE9952;
LABEL_6:
      sub_1B0CEF2BC(a1, v17, a3, a4, a5, a6, a7, a8, a9);
      return;
    }
  }
  else
  {
    unint64_t v18 = *(char **)v10;
    uint64_t v19 = strrchr(*(char **)v10, 95);
    if (v19)
    {
      uint64_t v20 = v19;
      *uint64_t v19 = 0;
      uint64_t v21 = sub_1B0CF60C8(v15, v18, 0);
      *uint64_t v20 = 95;
      if (v21)
      {
        if (*(unsigned char *)(v21 + 63) == 1 && sub_1B0D35CAC(v15, v21, v18)) {
          *(_DWORD *)(v10 + 48) |= 0x1000u;
        }
      }
    }
    uint64_t v16 = (unsigned char *)(v15 + 197);
    if (*(unsigned char *)(v15 + 197))
    {
      int v22 = *(_DWORD *)(v15 + 192);
      if (*(unsigned char *)(v10 + 63))
      {
        if (v22) {
          goto LABEL_5;
        }
        *(_DWORD *)(v10 + 40) = 0;
      }
      else
      {
        *(_DWORD *)(v10 + 40) = v22;
        if (v22 == 1) {
          *(_DWORD *)(v10 + 48) |= 1u;
        }
      }
    }
  }
  if ((v12 & 0x10000) != 0)
  {
    *(_DWORD *)(v10 + 48) |= 0x10000u;
    int v23 = *(__int16 *)(v10 + 54);
    if (v23 >= 1)
    {
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      while (1)
      {
        uint64_t v26 = *(void *)(v10 + 8);
        uint64_t v27 = v26 + v24;
        unsigned int v28 = *(unsigned __int8 *)(v26 + v24 + 8);
        if (v28 <= 0xF) {
          break;
        }
        if ((v28 & 0xF0) == 0x10) {
          *(unsigned char *)(v26 + v24 + 9) = 65;
        }
        if ((*(_WORD *)(v26 + v24 + 14) & 1) != 0 && (v28 & 0xF) == 0 && v25 != *(__int16 *)(v10 + 52))
        {
          *(unsigned char *)(v27 + 8) = v28 & 0xF0 | 2;
          *(_DWORD *)(v10 + 48) |= 0x800u;
          LOWORD(v23) = *(_WORD *)(v10 + 54);
        }
        ++v25;
        v24 += 16;
        if (v25 >= (__int16)v23) {
          goto LABEL_33;
        }
      }
      if ((*(_WORD *)(v27 + 14) & 4) == 0)
      {
        sub_1B0CEF2BC(a1, "missing datatype for %s.%s", a3, a4, a5, a6, a7, a8, *(void *)v10);
        return;
      }
      strlen(*(const char **)v27);
      char v186 = *(void *)v10;
      uint64_t v58 = "unknown datatype for %s.%s: \"%s\"";
      goto LABEL_138;
    }
  }
LABEL_33:
  if ((v12 & 0x80) != 0)
  {
    int v30 = *(_DWORD *)(v10 + 48);
    if ((v30 & 8) != 0)
    {
      uint64_t v17 = "AUTOINCREMENT not allowed on WITHOUT ROWID tables";
      goto LABEL_6;
    }
    if ((v30 & 4) == 0)
    {
      sub_1B0CEF2BC(a1, "PRIMARY KEY missing on table %s", a3, a4, a5, a6, a7, a8, *(void *)v10);
      return;
    }
    *(_DWORD *)(v10 + 48) = v30 | 0x280;
    sub_1B0D35EA8((uint64_t *)a1, v10);
  }
  uint64_t v31 = *(void *)(v10 + 96);
  if (v31)
  {
    int v32 = (void *)v15;
    int v33 = (uint64_t *)(*(void *)(v15 + 32) + 24);
    LODWORD(v34) = -1;
    do
    {
      uint64_t v35 = *v33;
      v33 += 4;
      uint64_t v34 = (v34 + 1);
    }
    while (v35 != v31);
  }
  else
  {
    int v32 = (void *)v15;
    uint64_t v34 = 4294934528;
  }
  char v36 = *(int **)(v10 + 32);
  if (v36)
  {
    uint64_t v198 = 0;
    long long v197 = 0u;
    long long v196 = 0u;
    long long v204 = 0u;
    long long v205 = 0u;
    long long v202 = 0u;
    long long v203 = 0u;
    long long v200 = 0u;
    long long v201 = 0u;
    long long v199 = 0u;
    LODWORD(v199) = 1;
    *((void *)&v200 + 1) = *(void *)v10;
    *((void *)&v201 + 1) = v10;
    DWORD2(v203) = -1;
    uint64_t v37 = *(void *)(v10 + 96);
    uint64_t v38 = *(void *)(*(void *)(*(void *)a1 + 32) + 56);
    uint64_t v194 = a1;
    uint64_t v195 = &v199;
    int v39 = v37 == v38 ? 65540 : 327684;
    DWORD2(v197) = v39;
    sub_1B0D374CC((uint64_t)&v194, v36, a3, a4, a5, a6, a7, a8);
    if (*(_DWORD *)(a1 + 48))
    {
      char v36 = *(int **)(v10 + 32);
      if (v36) {
        sub_1B0D270DC(v32, v36);
      }
      *(void *)(v10 + 32) = 0;
    }
  }
  int v40 = *(__int16 *)(v10 + 54);
  if ((*(unsigned char *)(v10 + 48) & 0x60) != 0)
  {
    uint64_t v188 = a2;
    if (v40 < 1) {
      goto LABEL_78;
    }
    uint64_t v187 = v13;
    uint64_t v189 = v11;
    uint64_t v192 = (uint64_t)v32;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    int v43 = 0;
    do
    {
      uint64_t v44 = *(void *)(v10 + 8) + v41;
      if ((*(_WORD *)(v44 + 14) & 0x60) != 0)
      {
        int v45 = *(unsigned __int16 *)(v44 + 12);
        if (v45 && !*(unsigned char *)(v10 + 63) && (uint64_t v52 = *(_DWORD **)(v10 + 80)) != 0 && *v52 >= v45) {
          uint64_t v46 = *(void *)&v52[6 * (v45 - 1) + 2];
        }
        else {
          uint64_t v46 = 0;
        }
        uint64_t v198 = 0;
        long long v196 = 0u;
        long long v197 = 0u;
        long long v204 = 0u;
        long long v205 = 0u;
        long long v202 = 0u;
        long long v203 = 0u;
        long long v200 = 0u;
        long long v201 = 0u;
        long long v199 = 0u;
        LODWORD(v199) = 1;
        *((void *)&v200 + 1) = *(void *)v10;
        *((void *)&v201 + 1) = v10;
        DWORD2(v203) = -1;
        uint64_t v47 = *(void *)(v10 + 96);
        uint64_t v48 = *(void *)(*(void *)(*(void *)a1 + 32) + 56);
        uint64_t v194 = a1;
        uint64_t v195 = &v199;
        if (v47 == v48) {
          int v49 = 65544;
        }
        else {
          int v49 = 327688;
        }
        DWORD2(v197) = v49;
        if (sub_1B0D373A0((uint64_t)&v194, v46, a3, a4, a5, a6, a7, a8))
        {
          uint64_t v50 = *(void *)(v10 + 8);
          uint64_t v51 = sub_1B0D05DC0(v192, 0x50uLL);
          if (v51)
          {
            *(_OWORD *)(v51 + 32) = 0u;
            *(_OWORD *)(v51 + 48) = 0u;
            *(_OWORD *)(v51 + 64) = 0u;
            *(_OWORD *)uint64_t v51 = 0u;
            *(_OWORD *)(v51 + 16) = 0u;
            *(unsigned char *)uint64_t v51 = 121;
            *(_WORD *)(v51 + 52) = -1;
            *(_DWORD *)(v51 + 40) = 1;
          }
          sub_1B0D36624((uint64_t *)a1, v10, v50 + v41, (unsigned __int8 *)v51);
        }
      }
      else
      {
        ++v43;
      }
      ++v42;
      v41 += 16;
    }
    while (v42 < *(__int16 *)(v10 + 54));
    unsigned int v13 = v187;
    int v32 = (void *)v192;
    uint64_t v11 = v189;
    if (!v43)
    {
LABEL_78:
      uint64_t v58 = "must have at least one non-generated column";
LABEL_138:
      sub_1B0CEF2BC(a1, v58, a3, a4, a5, a6, a7, a8, v186);
      return;
    }
    LOWORD(v40) = *(_WORD *)(v10 + 54);
    a2 = v188;
  }
  uint64_t v53 = (uint64_t)v32;
  if ((__int16)v40 < 1)
  {
    int v56 = 0;
    goto LABEL_85;
  }
  uint64_t v54 = *(void *)(v10 + 8);
  int v55 = (unsigned __int16)v40;
  if ((unsigned __int16)v40 == 1)
  {
    int v56 = 0;
    uint64_t v57 = *(void *)(v10 + 8);
LABEL_83:
    unsigned int v67 = v55 + 1;
    uint64_t v68 = (unsigned __int8 *)(v57 + 10);
    do
    {
      int v69 = *v68;
      v68 += 16;
      v56 += v69;
      --v67;
    }
    while (v67 > 1);
    goto LABEL_85;
  }
  int v59 = 0;
  int v60 = 0;
  uint64_t v61 = (unsigned __int16)v40;
  uint64_t v62 = (unsigned __int16)v40 & 0xFFFE;
  int v55 = (unsigned __int16)v40 - (v40 & 0xFFFE);
  uint64_t v57 = v54 + 16 * v62;
  uint64_t v63 = (unsigned __int8 *)(v54 + 26);
  uint64_t v64 = v62;
  do
  {
    int v65 = *(v63 - 16);
    int v66 = *v63;
    v63 += 32;
    v59 += v65;
    v60 += v66;
    v64 -= 2;
  }
  while (v64);
  int v56 = v60 + v59;
  if (v62 != v61) {
    goto LABEL_83;
  }
LABEL_85:
  unint64_t v70 = 4 * (v56 + (*(unsigned __int16 *)(v10 + 52) >> 15));
  if (v70 >= 8)
  {
    __int16 v72 = 40;
    if (v70 >= 0x100)
    {
      unint64_t v73 = v70;
      do
      {
        v72 += 40;
        unint64_t v70 = v73 >> 4;
        BOOL v74 = v73 > 0xFFF;
        v73 >>= 4;
      }
      while (v74);
    }
    if (v70 < 0x10)
    {
      LOBYTE(v71) = v70;
    }
    else
    {
      do
      {
        v72 += 10;
        unint64_t v71 = v70 >> 1;
        BOOL v74 = v70 > 0x1F;
        v70 >>= 1;
      }
      while (v74);
    }
    goto LABEL_95;
  }
  if (v70)
  {
    LOBYTE(v71) = 8 * (v56 + (*(unsigned __int16 *)(v10 + 52) >> 15));
    __int16 v72 = 30;
LABEL_95:
    __int16 v75 = v72 + word_1B0DE8C5A[v71 & 7] - 10;
    goto LABEL_96;
  }
  __int16 v75 = 0;
LABEL_96:
  *(_WORD *)(v10 + 60) = v75;
  for (uint64_t i = *(void *)(v10 + 16); i; uint64_t i = *(void *)(i + 40))
  {
    uint64_t v87 = *(unsigned __int16 *)(i + 96);
    if (*(_WORD *)(i + 96))
    {
      int v88 = 0;
      uint64_t v89 = *(__int16 **)(i + 8);
      do
      {
        int v92 = *v89++;
        unsigned __int16 v91 = v92;
        if (v92 < 0) {
          int v90 = 1;
        }
        else {
          int v90 = *(unsigned __int8 *)(*(void *)(*(void *)(i + 24) + 8) + 16 * v91 + 10);
        }
        v88 += v90;
        --v87;
      }
      while (v87);
      unint64_t v93 = (4 * v88);
      if (v93 < 8)
      {
        if (!v93)
        {
          LOWORD(v87) = 0;
          goto LABEL_110;
        }
        LOBYTE(v85) = 2 * v93;
        __int16 v86 = 30;
      }
      else
      {
        __int16 v86 = 40;
        if (v93 >= 0x100)
        {
          unint64_t v94 = v93;
          do
          {
            v86 += 40;
            unint64_t v93 = v94 >> 4;
            BOOL v74 = v94 > 0xFFF;
            v94 >>= 4;
          }
          while (v74);
        }
        LOBYTE(v85) = v93;
        if (v93 >= 0x10)
        {
          do
          {
            v86 += 10;
            unint64_t v85 = v93 >> 1;
            BOOL v74 = v93 > 0x1F;
            v93 >>= 1;
          }
          while (v74);
        }
      }
      LOWORD(v87) = v86 + word_1B0DE8C5A[v85 & 7] - 10;
    }
LABEL_110:
    *(_WORD *)(i + 92) = v87;
  }
  if (*v16) {
    goto LABEL_98;
  }
  uint64_t v95 = *(void *)(a1 + 16);
  if (v95) {
    goto LABEL_130;
  }
  if (!*(void *)(a1 + 168) && (*(unsigned char *)(*(void *)a1 + 96) & 8) == 0) {
    *(unsigned char *)(a1 + 35) = 1;
  }
  uint64_t v95 = sub_1B0CEF480((uint64_t *)a1, (uint64_t)v36, a3, a4, a5, a6, a7, a8);
  if (v95)
  {
LABEL_130:
    sub_1B0D2F978(v95, 122, 0, a4, a5, a6, a7, a8);
    uint64_t v102 = "VIEW";
    if (!*(unsigned char *)(v10 + 63)) {
      uint64_t v102 = "TABLE";
    }
    if (!v11)
    {
      uint64_t v190 = 0;
      uint64_t v103 = sub_1B0C904AC(v53, "CREATE %s %.*s", v96, v97, v98, v99, v100, v101, (char)v102);
      goto LABEL_142;
    }
    *(void *)&long long v201 = 0;
    long long v199 = 0u;
    long long v200 = 0u;
    if (*(unsigned char *)(a1 + 302))
    {
      *(_DWORD *)(a1 + 24) = 1;
      ++*(_DWORD *)(a1 + 48);
      return;
    }
    uint64_t v190 = v11;
    uint64_t v193 = (void *)v53;
    int v130 = *(_DWORD *)(a1 + 56);
    uint64_t v131 = (v130 + 1);
    *(_DWORD *)(a1 + 56) = v130 + 3;
    uint64_t v132 = *(void *)(a1 + 168);
    if (!v132) {
      uint64_t v132 = a1;
    }
    *(unsigned char *)(v132 + 33) = 1;
    sub_1B0C8A924(v95, 113, 1, *(unsigned int *)(a1 + 132), v34, v99, v100, v101);
    int v136 = *(_DWORD *)(v95 + 144);
    if (v136 >= 1) {
      *(_WORD *)(*(void *)(v95 + 136) + 40 * (v136 - 1) + 2) = 16;
    }
    *(_DWORD *)(a1 + 52) = 2;
    sub_1B0C8A924(v95, 11, (v130 + 1), 0, (v136 + 1), v133, v134, v135);
    if (!*(_DWORD *)(a1 + 48))
    {
      uint64_t v137 = sub_1B0D367D8(a1, v190, 65);
      if (v137)
      {
        __int16 v143 = *(_WORD *)(v137 + 54);
        *(_WORD *)(v10 + 56) = v143;
        *(_WORD *)(v10 + 54) = v143;
        *(void *)(v10 + 8) = *(void *)(v137 + 8);
        *(_WORD *)(v137 + 54) = 0;
        *(void *)(v137 + 8) = 0;
        if (v193[102] || (int v144 = *(_DWORD *)(v137 + 44) - 1, (*(_DWORD *)(v137 + 44) = v144) == 0)) {
          sub_1B0D26BF8(v193, (void *)v137);
        }
        LOBYTE(v199) = 13;
        *((void *)&v200 + 1) = 0;
        DWORD1(v199) = v130 + 1;
        *((void *)&v199 + 1) = 0;
        LODWORD(v200) = 0;
        sub_1B0C9110C((void **)a1, v190, (uint64_t)&v199, v138, v139, v140, v141, v142);
        if (!*(_DWORD *)(a1 + 48))
        {
          unsigned int v191 = v130 + 3;
          uint64_t v151 = (v130 + 2);
          sub_1B0D36904(v95, v131, v145, v146, v147, v148, v149, v150);
          if (*(unsigned char *)(*(void *)v95 + 103)) {
            uint64_t v157 = &byte_1E9B52240;
          }
          else {
            uint64_t v157 = (char *)(*(void *)(v95 + 136) + 40 * v136);
          }
          *((_DWORD *)v157 + 2) = *(_DWORD *)(v95 + 144);
          uint64_t v158 = sub_1B0D2F978(v95, 12, DWORD1(v199), v152, v153, v154, v155, v156);
          sub_1B0C8A924(v95, 97, HIDWORD(v199), v200, v151, v159, v160, v161);
          sub_1B0D36984(v95, v10, 0, v162, v163, v164, v165, v166);
          sub_1B0D254B8(v95, 127, 1, v191, v167, v168, v169, v170);
          sub_1B0C8A924(v95, 128, 1, v151, v191, v171, v172, v173);
          sub_1B0D2FAAC(v95, v158, v174, v175, v176, v177, v178, v179);
          if (*(unsigned char *)(*(void *)v95 + 103)) {
            int v185 = &byte_1E9B52240;
          }
          else {
            int v185 = (char *)(*(void *)(v95 + 136) + 40 * (int)v158);
          }
          *((_DWORD *)v185 + 2) = *(_DWORD *)(v95 + 144);
          sub_1B0D2F978(v95, 122, 1, v180, v181, v182, v183, v184);
          uint64_t v53 = (uint64_t)v193;
          uint64_t v103 = sub_1B0D36CCC((uint64_t)v193, v10);
LABEL_142:
          uint64_t v110 = v103;
          sub_1B0CD9598((uint64_t *)a1, "UPDATE %Q.sqlite_master SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d", v104, v105, v106, v107, v108, v109, *(void *)(*(void *)(v53 + 32) + 32 * (int)v34));
          if (v110) {
            sub_1B0D05C10((void *)v53, v110);
          }
          sub_1B0D37018((uint64_t *)a1, v34, v111, v112, v113, v114, v115, v116);
          if ((*(unsigned char *)(v10 + 48) & 8) != 0 && !*(unsigned char *)(a1 + 302))
          {
            uint64_t v123 = *(void *)(v53 + 32);
            if (!*(void *)(*(void *)(v123 + 32 * (int)v34 + 24) + 104)) {
              sub_1B0CD9598((uint64_t *)a1, "CREATE TABLE %Q.sqlite_sequence(name,seq)", v117, v118, v119, v120, v121, v122, *(void *)(v123 + 32 * (int)v34));
            }
          }
          uint64_t v124 = sub_1B0C904AC(v53, "tbl_name='%q' AND type!='trigger'", v117, v118, v119, v120, v121, v122, *(void *)v10);
          sub_1B0D37088(v95, v34, (uint64_t)v124, 0, v125, v126, v127, v128);
          uint64_t v11 = v190;
          if (!*(unsigned char *)(v53 + 197))
          {
LABEL_149:
            if (!v11 && !*(unsigned char *)(v10 + 63))
            {
              if (*a2) {
                uint64_t v129 = a2;
              }
              else {
                uint64_t v129 = v13;
              }
              *(_DWORD *)(v10 + 64) = *v129 - *(_DWORD *)(a1 + 264) + 13;
            }
            return;
          }
LABEL_98:
          if (sub_1B0C796D8(*(void *)(v10 + 96) + 8, *(unsigned __int8 **)v10, v10))
          {
            if (!*(unsigned char *)(v53 + 103) && !*(unsigned char *)(v53 + 104))
            {
              *(unsigned char *)(v53 + 103) = 1;
              if (*(int *)(v53 + 220) >= 1) {
                *(_DWORD *)(v53 + 424) = 1;
              }
              ++*(_DWORD *)(v53 + 432);
              *(_WORD *)(v53 + 436) = 0;
              uint64_t v83 = *(void *)(v53 + 344);
              if (v83)
              {
                sub_1B0CEF2BC(v83, "out of memory", v77, v78, v79, v80, v81, v82, v186);
                for (uint64_t j = *(void *)(v53 + 344); ; ++*(_DWORD *)(j + 48))
                {
                  *(_DWORD *)(j + 24) = 7;
                  uint64_t j = *(void *)(j + 256);
                  if (!j) {
                    break;
                  }
                }
              }
            }
            return;
          }
          *(void *)(a1 + 344) = 0;
          *(_DWORD *)(v53 + 44) |= 1u;
          if (!strcmp(*(const char **)v10, "sqlite_sequence")) {
            *(void *)(*(void *)(v10 + 96) + 104) = v10;
          }
          goto LABEL_149;
        }
      }
    }
  }
}

void sub_1B0C8A15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a1 + 30)) {
    return;
  }
  uint64_t v9 = *(void *)a1;
  if (*(_DWORD *)(a1 + 48))
  {
    if (*(unsigned char *)(v9 + 103))
    {
      int v10 = 7;
      goto LABEL_95;
    }
    return;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
    if (*(unsigned char *)(v9 + 197)) {
      goto LABEL_94;
    }
    if (!*(void *)(a1 + 168) && (*(unsigned char *)(v9 + 96) & 8) == 0) {
      *(unsigned char *)(a1 + 35) = 1;
    }
    uint64_t v11 = sub_1B0CEF480((uint64_t *)a1, a2, a3, a4, a5, a6, a7, a8);
    if (!v11)
    {
      *(_DWORD *)(a1 + 24) = 1;
      if (*(_DWORD *)(a1 + 48)) {
        goto LABEL_91;
      }
      goto LABEL_93;
    }
  }
  if (*(unsigned char *)(a1 + 219))
  {
    int v12 = *(unsigned int **)(a1 + 200);
    if (v12[47])
    {
      int v13 = *(_DWORD *)(v11 + 144);
      if (*(_DWORD *)(v11 + 148) <= v13)
      {
        sub_1B0D25510(v11, 83, 0, 0, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v11 + 144) = v13 + 1;
        uint64_t v14 = *(void *)(v11 + 136) + 40 * v13;
        *(unsigned char *)uint64_t v14 = 83;
        *(_OWORD *)(v14 + 1) = 0u;
        *(_OWORD *)(v14 + 17) = 0u;
        *(void *)(v14 + 32) = 0;
      }
      uint64_t v15 = v12[46];
      int v16 = *(_DWORD *)(v11 + 144);
      if (*(_DWORD *)(v11 + 148) <= v16)
      {
        int v16 = sub_1B0D25510(v11, 36, v15, 0, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v11 + 144) = v16 + 1;
        uint64_t v17 = *(void *)(v11 + 136) + 40 * v16;
        *(_DWORD *)uint64_t v17 = 36;
        *(_DWORD *)(v17 + 4) = v15;
        *(_OWORD *)(v17 + 8) = 0u;
        *(_OWORD *)(v17 + 24) = 0u;
      }
      uint64_t v18 = v12[48];
      if ((int)v12[47] < 1)
      {
        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 0;
        do
        {
          uint64_t v21 = v12[46];
          uint64_t v22 = (v18 + v19);
          int v23 = *(_DWORD *)(v11 + 144);
          if (*(_DWORD *)(v11 + 148) > v23)
          {
            *(_DWORD *)(v11 + 144) = v23 + 1;
            uint64_t v20 = *(void *)(v11 + 136) + 40 * v23;
            *(_DWORD *)uint64_t v20 = 94;
            *(_DWORD *)(v20 + 4) = v21;
            *(_DWORD *)(v20 + 8) = v19;
            *(_DWORD *)(v20 + 12) = v22;
            *(void *)(v20 + 24) = 0;
            *(void *)(v20 + 32) = 0;
            *(void *)(v20 + 16) = 0;
          }
          else
          {
            sub_1B0D25510(v11, 94, v21, v19, v22, a6, a7, a8);
          }
          uint64_t v19 = (v19 + 1);
        }
        while ((int)v19 < (int)v12[47]);
      }
      int v24 = *(_DWORD *)(v11 + 144);
      if (*(_DWORD *)(v11 + 148) <= v24)
      {
        sub_1B0D25510(v11, 84, v18, v19, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v11 + 144) = v24 + 1;
        uint64_t v25 = *(void *)(v11 + 136) + 40 * v24;
        *(_DWORD *)uint64_t v25 = 84;
        *(_DWORD *)(v25 + 4) = v18;
        *(_DWORD *)(v25 + 8) = v19;
        *(void *)(v25 + 12) = 0;
        *(void *)(v25 + 28) = 0;
        *(void *)(v25 + 20) = 0;
        *(_DWORD *)(v25 + 36) = 0;
      }
      uint64_t v26 = v12[46];
      uint64_t v27 = (v16 + 1);
      int v28 = *(_DWORD *)(v11 + 144);
      if (*(_DWORD *)(v11 + 148) <= v28)
      {
        sub_1B0D25510(v11, 39, v26, v27, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v11 + 144) = v28 + 1;
        uint64_t v29 = *(void *)(v11 + 136) + 40 * v28;
        *(_DWORD *)uint64_t v29 = 39;
        *(_DWORD *)(v29 + 4) = v26;
        *(_DWORD *)(v29 + 8) = v27;
        *(void *)(v29 + 12) = 0;
        *(void *)(v29 + 28) = 0;
        *(void *)(v29 + 20) = 0;
        *(_DWORD *)(v29 + 36) = 0;
      }
      if (*(unsigned char *)(*(void *)v11 + 103)) {
        int v30 = &byte_1E9B52240;
      }
      else {
        int v30 = (char *)(*(void *)(v11 + 136) + 40 * v16);
      }
      *((_DWORD *)v30 + 2) = *(_DWORD *)(v11 + 144);
    }
  }
  int v31 = *(_DWORD *)(v11 + 144);
  if (*(_DWORD *)(v11 + 148) <= v31)
  {
    sub_1B0D25510(v11, 70, 0, 0, 0, a6, a7, a8);
  }
  else
  {
    *(_DWORD *)(v11 + 144) = v31 + 1;
    uint64_t v32 = *(void *)(v11 + 136) + 40 * v31;
    *(unsigned char *)uint64_t v32 = 70;
    *(_OWORD *)(v32 + 1) = 0u;
    *(_OWORD *)(v32 + 17) = 0u;
    *(void *)(v32 + 32) = 0;
  }
  if (*(unsigned char *)(*(void *)v11 + 103)) {
    int v33 = &byte_1E9B52240;
  }
  else {
    int v33 = *(char **)(v11 + 136);
  }
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  *((_DWORD *)v33 + 2) = *(_DWORD *)(v11 + 144);
  do
  {
    int v36 = 1 << v35;
    if ((*(_DWORD *)(a1 + 124) & (1 << v35)) == 0) {
      goto LABEL_45;
    }
    *(_DWORD *)(v11 + 272) |= v36;
    if (v34 != 32 && *(unsigned char *)(*(void *)(*(void *)(*(void *)v11 + 32) + v34 + 8) + 17)) {
      *(_DWORD *)(v11 + 276) |= v36;
    }
    uint64_t v37 = *(unsigned int **)(*(void *)(v9 + 32) + v34 + 24);
    uint64_t v38 = (*(_DWORD *)(a1 + 120) >> v35) & 1;
    uint64_t v39 = *v37;
    a6 = v37[1];
    int v40 = *(_DWORD *)(v11 + 144);
    if (*(_DWORD *)(v11 + 148) <= v40)
    {
      sub_1B0D2575C(v11, 2, v35, v38, v39, a6, a7, a8);
      if (*(unsigned char *)(v9 + 197)) {
        goto LABEL_45;
      }
    }
    else
    {
      *(_DWORD *)(v11 + 144) = v40 + 1;
      uint64_t v41 = *(void *)(v11 + 136) + 40 * v40;
      *(_DWORD *)uint64_t v41 = 64770;
      *(_DWORD *)(v41 + 4) = v35;
      *(_DWORD *)(v41 + 8) = v38;
      *(_DWORD *)(v41 + 12) = v39;
      *(_DWORD *)(v41 + 16) = a6;
      *(void *)(v41 + 24) = 0;
      *(void *)(v41 + 32) = 0;
      if (*(unsigned char *)(v9 + 197)) {
        goto LABEL_45;
      }
    }
    int v42 = *(_DWORD *)(v11 + 144);
    BOOL v43 = __OFSUB__(v42, 1);
    int v44 = v42 - 1;
    if (v44 < 0 == v43) {
      *(_WORD *)(*(void *)(v11 + 136) + 40 * v44 + 2) = 1;
    }
LABEL_45:
    ++v35;
    v34 += 32;
  }
  while (v35 < *(int *)(v9 + 40));
  if (*(int *)(a1 + 304) >= 1)
  {
    uint64_t v45 = 0;
    do
    {
      for (uint64_t i = *(void **)(*(void *)(*(void *)(a1 + 392) + 8 * v45) + 80); i; uint64_t i = (void *)i[5])
      {
        if (*i == v9) {
          break;
        }
      }
      sub_1B0CCB908((uint64_t *)v11, 170, 0, 0, 0, (uint64_t)i, 4294967285, a8);
      ++v45;
    }
    while (v45 < *(int *)(a1 + 304));
  }
  *(_DWORD *)(a1 + 304) = 0;
  if (*(int *)(a1 + 148) > 0)
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    int v49 = *(uint64_t **)(a1 + 16);
    do
    {
      sub_1B0CCB908(v49, 169, *(unsigned int *)(*(void *)(a1 + 152) + v47), *(unsigned int *)(*(void *)(a1 + 152) + v47 + 4), *(unsigned __int8 *)(*(void *)(a1 + 152) + v47 + 8), *(void *)(*(void *)(a1 + 152) + v47 + 16), 0xFFFFFFFFLL, a8);
      ++v48;
      v47 += 24;
    }
    while (v48 < *(int *)(a1 + 148));
  }
  uint64_t v50 = *(uint64_t **)(a1 + 160);
  if (v50)
  {
    uint64_t v51 = *(void *)(a1 + 16);
    uint64_t v52 = *(void *)a1;
    do
    {
      int v53 = *((_DWORD *)v50 + 5);
      sub_1B0C9CD14((void *)a1, 0, *((int *)v50 + 4), *(void *)(*(void *)(*(void *)(v52 + 32) + 32 * *((int *)v50 + 4) + 24) + 104), 112, a6, a7, a8);
      sub_1B0CCB908((uint64_t *)v51, 117, 0, (v53 - 1), 0, *(void *)v50[1], 0, v54);
      int v59 = *(_DWORD *)(v51 + 144);
      if (v59 + 12 > *(_DWORD *)(v51 + 148))
      {
        if (sub_1B0D255A4(v51, v55, v56, v57, v58, a6, a7, a8)) {
          break;
        }
        int v59 = *(_DWORD *)(v51 + 144);
      }
      uint64_t v60 = 0;
      uint64_t v61 = *(void *)(v51 + 136);
      int v62 = v59;
      uint64_t v63 = 40 * v59;
      uint64_t v64 = v61 + v63;
      do
      {
        uint64_t v65 = v61 + v63;
        uint64_t v66 = byte_1B0DE56FC[v60];
        *(unsigned char *)uint64_t v65 = v66;
        int v67 = (char)byte_1B0DE56FC[v60 + 2];
        *(_DWORD *)(v65 + 4) = (char)byte_1B0DE56FC[v60 + 1];
        *(_DWORD *)(v65 + 8) = v67;
        if ((byte_1B0DE18AA[v66] & 1) != 0 && v67 >= 1) {
          *(_DWORD *)(v65 + 8) = *(_DWORD *)(v51 + 144) + v67;
        }
        *(_DWORD *)(v65 + 12) = (char)byte_1B0DE56FC[v60 + 3];
        *(unsigned char *)(v65 + 1) = 0;
        *(void *)(v65 + 16) = 0;
        *(_WORD *)(v65 + 2) = 0;
        v63 += 40;
        v60 += 4;
      }
      while (v60 != 48);
      *(_DWORD *)(v51 + 144) += 12;
      if (!v61) {
        break;
      }
      uint64_t v68 = v61 + 40 * v62;
      *(_DWORD *)(v68 + 8) = v53;
      *(_DWORD *)(v68 + 12) = v53 + 2;
      *(_DWORD *)(v64 + 92) = v53;
      *(_DWORD *)(v64 + 124) = v53 - 1;
      *(_DWORD *)(v64 + 132) = v53;
      *(_WORD *)(v64 + 122) = 16;
      *(_DWORD *)(v64 + 168) = v53 + 1;
      *(_DWORD *)(v64 + 212) = v53;
      *(_DWORD *)(v64 + 244) = v53;
      *(_DWORD *)(v64 + 288) = v53 + 2;
      *(_DWORD *)(v64 + 284) = v53;
      *(_DWORD *)(v64 + 408) = v53;
      if (!*(_DWORD *)(a1 + 52)) {
        *(_DWORD *)(a1 + 52) = 1;
      }
      uint64_t v50 = (uint64_t *)*v50;
    }
    while (v50);
  }
  int v69 = *(int **)(a1 + 88);
  if (v69)
  {
    *(unsigned char *)(a1 + 35) = 0;
    if (*v69 >= 1)
    {
      uint64_t v70 = 0;
      unint64_t v71 = (unsigned int *)(v69 + 7);
      do
      {
        sub_1B0D2F9D0(a1, *(unsigned __int8 **)(v71 - 5), *v71);
        ++v70;
        v71 += 6;
      }
      while (v70 < *v69);
    }
  }
  if (*(unsigned char *)(a1 + 219))
  {
    uint64_t v72 = *(void *)(a1 + 200);
    uint64_t v73 = *(unsigned int *)(v72 + 188);
    if (v73)
    {
      uint64_t v74 = *(unsigned int *)(v72 + 184);
      int v75 = *(_DWORD *)(v11 + 144);
      if (*(_DWORD *)(v11 + 148) <= v75)
      {
        sub_1B0D25510(v11, 118, v74, v73, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v11 + 144) = v75 + 1;
        uint64_t v76 = *(void *)(v11 + 136) + 40 * v75;
        *(_DWORD *)uint64_t v76 = 118;
        *(_DWORD *)(v76 + 4) = v74;
        *(_DWORD *)(v76 + 8) = v73;
        *(void *)(v76 + 12) = 0;
        *(void *)(v76 + 28) = 0;
        *(void *)(v76 + 20) = 0;
        *(_DWORD *)(v76 + 36) = 0;
      }
    }
  }
  int v77 = *(_DWORD *)(v11 + 144);
  if (*(_DWORD *)(v11 + 148) <= v77)
  {
    sub_1B0D25510(v11, 9, 0, 1, 0, a6, a7, a8);
    if (!*(_DWORD *)(a1 + 48)) {
      goto LABEL_93;
    }
LABEL_91:
    int v10 = 1;
  }
  else
  {
    *(_DWORD *)(v11 + 144) = v77 + 1;
    uint64_t v78 = *(void *)(v11 + 136) + 40 * v77;
    *(_DWORD *)uint64_t v78 = 9;
    *(void *)(v78 + 4) = 0x100000000;
    *(void *)(v78 + 12) = 0;
    *(void *)(v78 + 28) = 0;
    *(void *)(v78 + 20) = 0;
    *(_DWORD *)(v78 + 36) = 0;
    if (*(_DWORD *)(a1 + 48)) {
      goto LABEL_91;
    }
LABEL_93:
    sub_1B0C8A974(v11, a1);
LABEL_94:
    int v10 = 101;
  }
LABEL_95:
  *(_DWORD *)(a1 + 24) = v10;
}

uint64_t sub_1B0C8A924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = *(int *)(a1 + 144);
  if (*(_DWORD *)(a1 + 148) <= (int)result) {
    return sub_1B0D25510(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  *(_DWORD *)(a1 + 144) = result + 1;
  uint64_t v10 = *(void *)(a1 + 136) + 40 * (int)result;
  *(unsigned char *)uint64_t v10 = a2;
  *(_WORD *)(v10 + 2) = 0;
  *(_DWORD *)(v10 + 4) = a3;
  *(_DWORD *)(v10 + 8) = a4;
  *(_DWORD *)(v10 + 12) = a5;
  *(unsigned char *)(v10 + 1) = 0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = 0;
  return result;
}

double sub_1B0C8A974(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 176) = *(void *)(a2 + 320);
  *(void *)(a2 + 320) = 0;
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(unsigned int *)(a2 + 296);
  int v6 = *(_DWORD *)(a2 + 56);
  uint64_t v7 = *(int *)(a2 + 52);
  int v69 = *(_DWORD *)(a2 + 136);
  int v8 = v7 + v6;
  if (v7) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = v8 <= 0;
  }
  if (v9) {
    int v10 = v8;
  }
  else {
    int v10 = v8 + 1;
  }
  uint64_t v11 = *(void *)(a1 + 136);
  uint64_t v12 = 40 * *(_DWORD *)(a1 + 144);
  uint64_t v13 = *(int *)(a2 + 60) - v12;
  sub_1B0D25990((void *)a1, &v69);
  if (*(unsigned char *)(a2 + 32)) {
    __int16 v14 = 32 * (*(unsigned char *)(a2 + 33) != 0);
  }
  else {
    __int16 v14 = 0;
  }
  uint64_t v15 = v11 + v12;
  int64_t v16 = v13 & 0xFFFFFFFFFFFFFFF8;
  __int16 v17 = *(_WORD *)(a1 + 268) & 0xFFDF | v14;
  *(_WORD *)(a1 + 268) = v17;
  char v18 = *(unsigned char *)(a2 + 301);
  if (v18)
  {
    if (v10 <= 10) {
      int v10 = 10;
    }
    __int16 v17 = v17 & 0xFFF3 | (4 * (v18 & 3));
    *(_WORD *)(a1 + 260) = (4 * (v18 & 3)) ^ 0xC;
  }
  *(_WORD *)(a1 + 268) = v17 & 0xFFFC;
  uint64_t v19 = (uint64_t)v10 << 6;
  BOOL v20 = v16 < v19;
  uint64_t v21 = v15 + v16 - v19;
  if (v16 < v19)
  {
    uint64_t v22 = (uint64_t)v10 << 6;
  }
  else
  {
    v16 -= v19;
    uint64_t v22 = 0;
  }
  if (v20) {
    uint64_t v21 = 0;
  }
  uint64_t v23 = (uint64_t)(int)v5 << 6;
  uint64_t v25 = v16 - v23;
  BOOL v24 = v16 < v23;
  uint64_t v26 = v15 + v16 - v23;
  if (v16 >= v23)
  {
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v25 = v16;
    uint64_t v27 = (uint64_t)(int)v5 << 6;
  }
  uint64_t v28 = v27 + v22;
  if (v24) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = v26;
  }
  uint64_t v30 = 8 * v69;
  uint64_t v32 = v25 - v30;
  BOOL v31 = v25 < v30;
  if (v25 >= v30) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = 8 * v69;
  }
  uint64_t v34 = v28 + v33;
  if (v25 >= v30) {
    v25 -= v30;
  }
  uint64_t v35 = v15 + v32;
  if (v31) {
    uint64_t v35 = 0;
  }
  *(void *)(a1 + 104) = v21;
  *(void *)(a1 + 112) = v35;
  uint64_t v36 = 8 * v7;
  BOOL v37 = v25 < 8 * v7;
  uint64_t v38 = v15 + v25 - 8 * v7;
  if (v25 >= 8 * v7) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = 8 * v7;
  }
  if (v37) {
    uint64_t v38 = 0;
  }
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v29;
  uint64_t v40 = v34 + v39;
  if (v34 + v39)
  {
    uint64_t v41 = sub_1B0D05DC0(v4, v34 + v39);
    *(void *)(a1 + 344) = v41;
    if (!*(unsigned char *)(v4 + 103))
    {
      uint64_t v42 = v40 - v19;
      uint64_t v43 = v41 + v40 - v19;
      if (v40 < v19)
      {
        uint64_t v42 = v40;
        uint64_t v43 = 0;
      }
      uint64_t v44 = *(void *)(a1 + 104);
      uint64_t v45 = *(void *)(a1 + 112);
      if (v44) {
        uint64_t v46 = v40;
      }
      else {
        uint64_t v46 = v42;
      }
      if (!v44) {
        uint64_t v44 = v43;
      }
      uint64_t v47 = v41 + v46 - v23;
      if (v46 >= v23) {
        uint64_t v48 = v46 - v23;
      }
      else {
        uint64_t v48 = v46;
      }
      if (v46 < v23) {
        uint64_t v47 = 0;
      }
      uint64_t v49 = *(void *)(a1 + 120);
      if (*(void *)(a1 + 128)) {
        uint64_t v47 = *(void *)(a1 + 128);
      }
      else {
        uint64_t v46 = v48;
      }
      *(void *)(a1 + 128) = v47;
      uint64_t v50 = v46 - v30;
      uint64_t v51 = v41 + v46 - v30;
      if (v46 < v30)
      {
        uint64_t v50 = v46;
        uint64_t v51 = 0;
      }
      if (v45) {
        uint64_t v50 = v46;
      }
      else {
        uint64_t v45 = v51;
      }
      *(void *)(a1 + 104) = v44;
      *(void *)(a1 + 112) = v45;
      if (!v49)
      {
        if (v50 >= v36) {
          uint64_t v49 = v41 + v50 - v36;
        }
        else {
          uint64_t v49 = 0;
        }
      }
      *(void *)(a1 + 120) = v49;
LABEL_66:
      *(_DWORD *)(a1 + 40) = v7;
      *(_DWORD *)(a1 + 32) = v5;
      if ((int)v5 >= 1)
      {
        uint64_t v52 = *(void *)(a1 + 128);
        uint64_t v53 = v52;
        if (v5 == 1) {
          goto LABEL_71;
        }
        uint64_t v54 = v5;
        uint64_t v55 = v5 & 0xFFFFFFFE;
        LODWORD(v5) = v5 - (v5 & 0xFFFFFFFE);
        uint64_t v53 = v52 + (v55 << 6);
        uint64_t v56 = v52 + 84;
        uint64_t v57 = v55;
        do
        {
          *(_WORD *)(v56 - 64) = 1;
          *(_WORD *)uint64_t v56 = 1;
          *(void *)(v56 - 60) = v4;
          *(void *)(v56 + 4) = v4;
          *(_DWORD *)(v56 - 52) = 0;
          *(_DWORD *)(v56 + 12) = 0;
          v56 += 128;
          v57 -= 2;
        }
        while (v57);
        if (v55 != v54)
        {
LABEL_71:
          unsigned int v58 = v5 + 1;
          int v59 = (_DWORD *)(v53 + 32);
          do
          {
            *((_WORD *)v59 - 6) = 1;
            *((void *)v59 - 1) = v4;
            _DWORD *v59 = 0;
            v59 += 16;
            --v58;
          }
          while (v58 > 1);
        }
      }
      *(_DWORD *)(a1 + 36) = v10;
      if (v10 < 1) {
        goto LABEL_81;
      }
      uint64_t v60 = *(void *)(a1 + 104);
      if (v10 == 1)
      {
        uint64_t v61 = *(void *)(a1 + 104);
      }
      else
      {
        uint64_t v62 = v10;
        uint64_t v63 = v10 & 0xFFFFFFFE;
        v10 -= v63;
        uint64_t v61 = v60 + (v63 << 6);
        uint64_t v64 = v60 + 84;
        uint64_t v65 = v63;
        do
        {
          *(_WORD *)(v64 - 64) = 0;
          *(_WORD *)uint64_t v64 = 0;
          *(void *)(v64 - 60) = v4;
          *(void *)(v64 + 4) = v4;
          *(_DWORD *)(v64 - 52) = 0;
          *(_DWORD *)(v64 + 12) = 0;
          v64 += 128;
          v65 -= 2;
        }
        while (v65);
        if (v63 == v62) {
          goto LABEL_81;
        }
      }
      unsigned int v66 = v10 + 1;
      int v67 = (_DWORD *)(v61 + 32);
      do
      {
        *((_WORD *)v67 - 6) = 0;
        *((void *)v67 - 1) = v4;
        *int v67 = 0;
        v67 += 16;
        --v66;
      }
      while (v66 > 1);
LABEL_81:
      bzero(*(void **)(a1 + 120), 8 * v7);
      goto LABEL_82;
    }
  }
  else if (!*(unsigned char *)(v4 + 103))
  {
    goto LABEL_66;
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
LABEL_82:
  *(unsigned char *)(a1 + 267) = 1;
  *(_DWORD *)(a1 + 52) = 0;
  *(_WORD *)(a1 + 264) = -254;
  *(void *)(a1 + 56) = 0;
  double result = NAN;
  *(void *)(a1 + 44) = 0xFFFFFFFF00000001;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 80) = 0;
  return result;
}

void *sub_1B0C8ACE8(void *result, int a2, uint64_t *a3)
{
  uint64_t v3 = (void **)result[1];
  switch(a2)
  {
    case 204:
    case 239:
    case 240:
    case 252:
      uint64_t v11 = *a3;
      if (*a3)
      {
        uint64_t v12 = *v3;
        double result = sub_1B0CA0FA8(v12, v11, 1);
      }
      break;
    case 216:
    case 217:
    case 246:
    case 248:
    case 267:
    case 278:
    case 280:
    case 283:
    case 290:
    case 295:
    case 311:
      int v6 = (unsigned __int8 *)*a3;
      if (*a3) {
        goto LABEL_19;
      }
      break;
    case 221:
    case 231:
    case 232:
    case 244:
    case 247:
    case 249:
    case 253:
    case 254:
    case 261:
    case 268:
    case 277:
    case 279:
    case 310:
      uint64_t v4 = (void *)*a3;
      if (*a3)
      {
        uint64_t v5 = *v3;
        double result = sub_1B0D270DC(v5, v4);
      }
      break;
    case 238:
    case 245:
    case 256:
    case 257:
    case 262:
      uint64_t v7 = *v3;
      int v8 = (void *)*a3;
      double result = sub_1B0CA115C(v7, v8);
      break;
    case 241:
      uint64_t v25 = *v3;
      uint64_t v26 = (void *)*a3;
      double result = sub_1B0D1E12C(v25, v26);
      break;
    case 251:
    case 306:
      __int16 v14 = (void *)*a3;
      if (*a3)
      {
        uint64_t v15 = *v3;
        do
        {
          int64_t v16 = (void *)v14[8];
          double result = sub_1B0D1E054(v15, v14);
          __int16 v14 = v16;
        }
        while (v16);
      }
      break;
    case 263:
    case 270:
      __int16 v17 = (void *)*a3;
      if (*a3)
      {
        char v18 = *v3;
        int v19 = *(_DWORD *)v17;
        if (*(int *)v17 >= 1)
        {
          uint64_t v20 = 0;
          uint64_t v21 = 1;
          do
          {
            uint64_t v22 = (void *)v17[v21];
            if (v22)
            {
              sub_1B0D05C10(v18, v22);
              int v19 = *(_DWORD *)v17;
            }
            ++v20;
            v21 += 2;
          }
          while (v20 < v19);
        }
        goto LABEL_45;
      }
      break;
    case 273:
    case 307:
    case 308:
    case 309:
    case 312:
      BOOL v9 = *v3;
      int v10 = (void *)*a3;
      double result = sub_1B0D1E054(v9, v10);
      break;
    case 286:
    case 291:
      uint64_t v23 = *v3;
      uint64_t v24 = *a3;
      double result = sub_1B0CB19F8(v23, v24);
      break;
    case 288:
      __int16 v17 = (void *)a3[1];
      if (v17)
      {
        char v18 = *v3;
        int v27 = *(_DWORD *)v17;
        if (*(int *)v17 >= 1)
        {
          uint64_t v28 = 0;
          uint64_t v29 = 1;
          do
          {
            uint64_t v30 = (void *)v17[v29];
            if (v30)
            {
              sub_1B0D05C10(v18, v30);
              int v27 = *(_DWORD *)v17;
            }
            ++v28;
            v29 += 2;
          }
          while (v28 < v27);
        }
LABEL_45:
        double result = sub_1B0D15C20(v18, v17);
      }
      break;
    case 314:
    case 315:
    case 316:
      int v6 = (unsigned __int8 *)a3[1];
      if (v6)
      {
LABEL_19:
        uint64_t v13 = *v3;
        double result = sub_1B0D1DF88(v13, v6);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1B0C8AF54(void *a1, void *a2)
{
  if (a2)
  {
    if (a1[102]) {
      return sub_1B0D26BF8(a1, a2);
    }
    int v2 = *((_DWORD *)a2 + 11) - 1;
    *((_DWORD *)a2 + 11) = v2;
    if (!v2) {
      return sub_1B0D26BF8(a1, a2);
    }
  }
  return a1;
}

void *sub_1B0C8AF78(void *result, uint64_t a2)
{
  if (a2 && !*(unsigned char *)(a2 + 18))
  {
    uint64_t v3 = result;
    sub_1B0CB19F8(result, *(void *)(a2 + 56));
    if (*(void *)a2) {
      sub_1B0D05C10(v3, *(void **)a2);
    }
    uint64_t v4 = *(void **)(a2 + 8);
    if (v4) {
      sub_1B0D05C10(v3, v4);
    }
    uint64_t v5 = *(unsigned __int8 **)(a2 + 24);
    if (v5) {
      sub_1B0D1DF88(v3, v5);
    }
    int v6 = *(void **)(a2 + 32);
    if (v6)
    {
      int v7 = *(_DWORD *)v6;
      if (*(int *)v6 >= 1)
      {
        uint64_t v8 = 0;
        uint64_t v9 = 1;
        do
        {
          int v10 = (void *)v6[v9];
          if (v10)
          {
            sub_1B0D05C10(v3, v10);
            int v7 = *(_DWORD *)v6;
          }
          ++v8;
          v9 += 2;
        }
        while (v8 < v7);
      }
      sub_1B0D15C20(v3, v6);
    }
    return sub_1B0D05C10(v3, (void *)a2);
  }
  return result;
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  uint64_t v1 = pStmt;
  if (!pStmt) {
    return (int)v1;
  }
  uint64_t v2 = *(void *)pStmt;
  if (*(void *)pStmt)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    if (v3) {
      xmmword_1EB21CA40(v3);
    }
    sub_1B0CE93FC(v2, (uint64_t)v1);
    unsigned int v4 = sub_1B0C8B140((void **)v1);
    sub_1B0CE20DC((uint64_t)v1);
    if (v4 || *(unsigned char *)(v2 + 103)) {
      LODWORD(v1) = sub_1B0D1806C(v2, v4);
    }
    else {
      LODWORD(v1) = 0;
    }
    sub_1B0CE8ED8(v2, v5);
    return (int)v1;
  }
  sqlite3_log(21, "API called with finalized prepared statement");

  return sub_1B0CE1978(96994);
}

uint64_t sub_1B0C8B140(void **a1)
{
  uint64_t v2 = (uint64_t)*a1;
  if (*((unsigned char *)a1 + 267) == 2) {
    sub_1B0C8B23C((uint64_t)a1);
  }
  if ((a1[6] & 0x80000000) == 0)
  {
    if (off_1EB21CB48)
    {
      if (!*((_DWORD *)a1 + 13))
      {
        uint64_t v3 = (char *)a1[40];
        if (v3)
        {
          unsigned int v4 = sub_1B0CEC95C(a1, v3);
          if (v4)
          {
            double v5 = v4;
            off_1EB21CB48(qword_1EB21CB50, *a1, v4, 1);
            sub_1B0D05C10(*a1, v5);
          }
        }
      }
    }
    if (*(void *)(v2 + 416) || a1[21]) {
      sub_1B0D16004((uint64_t)a1);
    }
    else {
      *(_DWORD *)(v2 + 80) = *((_DWORD *)a1 + 13);
    }
  }
  sqlite3_db_release_memory((sqlite3 *)v2);
  int v6 = a1[21];
  if (v6)
  {
    sub_1B0D05C10((void *)v2, v6);
    a1[21] = 0;
  }
  a1[20] = 0;
  a1[29] = 0;
  *((_DWORD *)a1 + 57) = 0;
  a1[26] = 0;
  a1[27] = 0;
  a1[25] = 0;
  return (*(_DWORD *)(v2 + 88) & *((_DWORD *)a1 + 13));
}

uint64_t sub_1B0C8B23C(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  if (*(unsigned char *)(*(void *)a1 + 103)) {
    *(_DWORD *)(a1 + 52) = 7;
  }
  uint64_t v3 = *(uint64_t **)(a1 + 352);
  if (v3)
  {
    do
    {
      unsigned int v4 = v3;
      uint64_t v3 = (uint64_t *)v3[1];
    }
    while (v3);
    sub_1B0D1628C(v4);
    *(void *)(a1 + 352) = 0;
    *(_DWORD *)(a1 + 368) = 0;
  }
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i < v5; ++i)
    {
      int v7 = *(unsigned __int8 **)(*(void *)(a1 + 120) + 8 * i);
      if (v7)
      {
        sub_1B0D1637C((void **)a1, v7);
        *(void *)(*(void *)(a1 + 120) + 8 * i) = 0;
        int v5 = *(_DWORD *)(a1 + 40);
      }
    }
  }
  unint64_t v8 = *(void *)(a1 + 104);
  int v9 = *(_DWORD *)(a1 + 36);
  if (v8) {
    BOOL v10 = v9 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    unint64_t v41 = v8 + ((uint64_t)v9 << 6);
    uint64_t v42 = *(void **)(v8 + 24);
    if (!v42[102])
    {
      while (1)
      {
        if ((*(_WORD *)(v8 + 20) & 0x9000) != 0)
        {
          sub_1B0D180E4(v8);
        }
        else
        {
          if (!*(_DWORD *)(v8 + 32)) {
            goto LABEL_65;
          }
          sub_1B0D15C20(v42, *(void **)(v8 + 40));
          *(_DWORD *)(v8 + 32) = 0;
        }
        *(_WORD *)(v8 + 20) = 0;
LABEL_65:
        v8 += 64;
        if (v8 >= v41) {
          goto LABEL_16;
        }
      }
    }
    do
    {
      if (*(_DWORD *)(v8 + 32))
      {
        uint64_t v43 = *(void **)(v8 + 40);
        if (v43) {
          sub_1B0D05C10(v42, v43);
        }
      }
      v8 += 64;
    }
    while (v8 < v41);
  }
LABEL_16:
  for (uint64_t j = *(void **)(a1 + 360); j; uint64_t j = *(void **)(a1 + 360))
  {
    *(void *)(a1 + 360) = j[1];
    unint64_t v13 = (unint64_t)(j + 14);
    int v14 = *((_DWORD *)j + 23);
    uint64_t v15 = *((int *)j + 22);
    if (v14 < 1)
    {
      int v19 = *((_DWORD *)j + 22);
      if (!v15) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v17 = v13 + (v15 << 6);
      do
      {
        char v18 = *(unsigned __int8 **)(v17 + 8 * v16);
        if (v18)
        {
          sub_1B0D1637C((void **)*j, v18);
          int v14 = *((_DWORD *)j + 23);
        }
        ++v16;
      }
      while (v16 < v14);
      int v19 = *((_DWORD *)j + 22);
      if (!v19) {
        goto LABEL_40;
      }
    }
    unint64_t v20 = v13 + ((uint64_t)v19 << 6);
    uint64_t v21 = (void *)j[17];
    if (!v21[102])
    {
      while (1)
      {
        if ((*(_WORD *)(v13 + 20) & 0x9000) != 0)
        {
          sub_1B0D180E4(v13);
        }
        else
        {
          if (!*(_DWORD *)(v13 + 32)) {
            goto LABEL_36;
          }
          sub_1B0D15C20(v21, *(void **)(v13 + 40));
          *(_DWORD *)(v13 + 32) = 0;
        }
        *(_WORD *)(v13 + 20) = 0;
LABEL_36:
        v13 += 64;
        if (v13 >= v20) {
          goto LABEL_40;
        }
      }
    }
    do
    {
      if (*(_DWORD *)(v13 + 32))
      {
        uint64_t v22 = *(void **)(v13 + 40);
        if (v22) {
          sub_1B0D05C10(v21, v22);
        }
      }
      v13 += 64;
    }
    while (v13 < v20);
LABEL_40:
    uint64_t v12 = *(void **)*j;
    uint64_t v23 = (void *)j[8];
    if (v23)
    {
      do
      {
        uint64_t v24 = (void (*)(void))v23[2];
        if (v24) {
          v24(v23[1]);
        }
        j[8] = v23[3];
        sub_1B0D05C10(v12, v23);
        uint64_t v23 = (void *)j[8];
      }
      while (v23);
      uint64_t v12 = *(void **)*j;
    }
    sub_1B0D05C10(v12, j);
  }
  uint64_t v25 = *(void **)(a1 + 384);
  if (v25)
  {
    uint64_t v26 = *(void **)a1;
    do
    {
      int v27 = (void (*)(void))v25[2];
      if (v27) {
        v27(v25[1]);
      }
      *(void *)(a1 + 384) = v25[3];
      sub_1B0D05C10(v26, v25);
      uint64_t v25 = *(void **)(a1 + 384);
    }
    while (v25);
  }
  if ((*(_WORD *)(a1 + 268) & 0x80) == 0) {
    goto LABEL_143;
  }
  sub_1B0D160FC((_DWORD *)a1);
  int v35 = *(_DWORD *)(a1 + 52);
  if (!v35)
  {
LABEL_77:
    char v40 = 0;
LABEL_78:
    if (*(uint64_t *)(a1 + 80) >= 1)
    {
      *(_DWORD *)(a1 + 52) = 787;
      *(unsigned char *)(a1 + 264) = 2;
      sub_1B0D17334((uint64_t *)a1, "FOREIGN KEY constraint failed", v28, v29, v30, v31, v32, v33, v62);
    }
    int v38 = 0;
    goto LABEL_81;
  }
  if (*(_DWORD *)(a1 + 52) > 0xDu || ((1 << v35) & 0x2680) == 0)
  {
    if (*(unsigned char *)(a1 + 264) != 3)
    {
      int v38 = 0;
      char v40 = 0;
LABEL_81:
      int v39 = 1;
      goto LABEL_82;
    }
    goto LABEL_77;
  }
  int v36 = *(_DWORD *)(a1 + 52);
  __int16 v37 = *(_WORD *)(a1 + 268);
  if (v36 == 9 && (v37 & 0x40) != 0)
  {
    int v38 = 0;
    int v39 = 1;
    char v40 = 1;
    goto LABEL_82;
  }
  if ((v36 == 13 || v36 == 7) && (v37 & 0x20) != 0)
  {
    int v39 = 0;
    char v40 = 1;
    int v38 = 2;
  }
  else
  {
    sub_1B0CDA30C(v2, 516, v34);
    for (int k = *(void **)(v2 + 760); k; int k = *(void **)(v2 + 760))
    {
      *(void *)(v2 + 760) = k[3];
      sub_1B0D05C10((void *)v2, k);
    }
    int v38 = 0;
    *(void *)(v2 + 788) = 0;
    *(unsigned char *)(v2 + 109) = 0;
    char v40 = 1;
    *(unsigned char *)(v2 + 101) = 1;
    *(void *)(a1 + 56) = 0;
    int v39 = 1;
    if (!*(_DWORD *)(a1 + 52)) {
      goto LABEL_78;
    }
  }
LABEL_82:
  if (*(int *)(v2 + 564) >= 1 && !*(void *)(v2 + 600)
    || !*(unsigned char *)(v2 + 101)
    || *(_DWORD *)(v2 + 216) != ((*(_WORD *)(a1 + 268) & 0x40) == 0))
  {
    if (v39)
    {
      if (!*(_DWORD *)(a1 + 52) || (int v47 = *(unsigned __int8 *)(a1 + 264), v47 == 3))
      {
        int v38 = 1;
      }
      else
      {
        if (v47 != 2)
        {
          sub_1B0CDA30C(v2, 516, v34);
          for (uint64_t m = *(void **)(v2 + 760); m; uint64_t m = *(void **)(v2 + 760))
          {
            *(void *)(v2 + 760) = m[3];
            sub_1B0D05C10((void *)v2, m);
          }
          uint64_t v51 = 0;
          *(void *)(v2 + 788) = 0;
          *(unsigned char *)(v2 + 109) = 0;
          *(unsigned char *)(v2 + 101) = 1;
          *(void *)(a1 + 56) = 0;
          if ((*(unsigned char *)(a1 + 268) & 0x10) == 0) {
            goto LABEL_141;
          }
          goto LABEL_139;
        }
        int v38 = 2;
      }
    }
    goto LABEL_124;
  }
  int v45 = *(_DWORD *)(a1 + 52);
  if (v45)
  {
    char v46 = *(unsigned char *)(a1 + 264) == 3 ? v40 : 1;
    if (v46)
    {
      if (v45 == 17 && *(int *)(v2 + 208) >= 2)
      {
LABEL_119:
        *(void *)(a1 + 56) = 0;
        *(_DWORD *)(v2 + 792) = 0;
        if (v39) {
          goto LABEL_120;
        }
        goto LABEL_124;
      }
LABEL_118:
      sub_1B0CDA30C(v2, 0, v34);
      goto LABEL_119;
    }
  }
  if ((uint64_t)(*(void *)(*(void *)a1 + 808) + *(void *)(*(void *)a1 + 800)) >= 1)
  {
    int v48 = 787;
    *(_DWORD *)(a1 + 52) = 787;
    *(unsigned char *)(a1 + 264) = 2;
    sub_1B0D17334((uint64_t *)a1, "FOREIGN KEY constraint failed", v28, v29, v30, v31, v32, v33, v62);
    if ((*(_WORD *)(a1 + 268) & 0x40) != 0)
    {
      if (*(_DWORD *)(a1 + 276)) {
        sub_1B0D1738C(a1);
      }
      return 1;
    }
LABEL_117:
    *(_DWORD *)(a1 + 52) = v48;
    goto LABEL_118;
  }
  uint64_t v52 = *(void *)(v2 + 48);
  if ((v52 & 0x200000000) != 0)
  {
    *(void *)(v2 + 48) = v52 & 0xFFFFFFFDFFFFFFFFLL;
    int v48 = 11;
    goto LABEL_117;
  }
  int v53 = sub_1B0CB1BEC(v2, a1, v34);
  if (!v53)
  {
    double v34 = 0.0;
    *(_OWORD *)(v2 + 800) = 0u;
    *(void *)(v2 + 48) &= ~0x80000uLL;
    *(_DWORD *)(v2 + 44) &= ~1u;
    *(_DWORD *)(v2 + 792) = 0;
    if (v39)
    {
LABEL_120:
      if ((*(_WORD *)(a1 + 268) & 0x10) == 0) {
        goto LABEL_141;
      }
LABEL_138:
      uint64_t v51 = *(void *)(a1 + 56);
LABEL_139:
      uint64_t v58 = *(void *)(v2 + 128) + v51;
      *(void *)(v2 + 120) = v51;
      *(void *)(v2 + 128) = v58;
      goto LABEL_140;
    }
LABEL_124:
    if (*(_DWORD *)(*(void *)a1 + 792))
    {
      if (*(_DWORD *)(a1 + 64))
      {
        int v54 = sub_1B0D176AC(a1, v38, v34);
        if (v54)
        {
          if (!*(_DWORD *)(a1 + 52) || *(_DWORD *)(a1 + 52) == 19)
          {
            *(_DWORD *)(a1 + 52) = v54;
            uint64_t v56 = *(void **)(a1 + 168);
            if (v56) {
              sub_1B0D05C10((void *)v2, v56);
            }
            *(void *)(a1 + 168) = 0;
          }
          sub_1B0CDA30C(v2, 516, v55);
          for (uint64_t n = *(void **)(v2 + 760); n; uint64_t n = *(void **)(v2 + 760))
          {
            *(void *)(v2 + 760) = n[3];
            sub_1B0D05C10((void *)v2, n);
          }
          *(void *)(v2 + 788) = 0;
          *(unsigned char *)(v2 + 109) = 0;
          *(unsigned char *)(v2 + 101) = 1;
          *(void *)(a1 + 56) = 0;
        }
      }
    }
    if ((*(_WORD *)(a1 + 268) & 0x10) == 0) {
      goto LABEL_141;
    }
    if (v38 == 2)
    {
      *(void *)(v2 + 120) = 0;
LABEL_140:
      *(void *)(a1 + 56) = 0;
LABEL_141:
      if (*(_DWORD *)(a1 + 276)) {
        sub_1B0D1738C(a1);
      }
LABEL_143:
      --*(_DWORD *)(v2 + 208);
      __int16 v59 = *(_WORD *)(a1 + 268);
      if ((v59 & 0x40) == 0)
      {
        --*(_DWORD *)(v2 + 216);
        __int16 v59 = *(_WORD *)(a1 + 268);
      }
      if ((v59 & 0x80) != 0) {
        --*(_DWORD *)(v2 + 212);
      }
      *(unsigned char *)(a1 + 267) = 3;
      if (*(unsigned char *)(v2 + 103))
      {
        uint64_t result = 0;
        *(_DWORD *)(a1 + 52) = 7;
      }
      else if (*(_DWORD *)(a1 + 52) == 5)
      {
        return 5;
      }
      else
      {
        return 0;
      }
      return result;
    }
    goto LABEL_138;
  }
  int v48 = v53;
  if (v53 != 5)
  {
    if (v53 != 3082 && (v53 & 0xFB) == 0xA)
    {
      uint64_t v60 = *(uint64_t (**)(void))(*(void *)v2 + 128);
      if (v60) {
        int v61 = v60();
      }
      else {
        int v61 = 0;
      }
      *(_DWORD *)(v2 + 92) = v61;
    }
    goto LABEL_117;
  }
  if ((*(_WORD *)(a1 + 268) & 0x40) == 0)
  {
    int v48 = 5;
    goto LABEL_117;
  }
  if (*(_DWORD *)(a1 + 276)) {
    sub_1B0D1738C(a1);
  }
  return 5;
}

void *sub_1B0C8B9A4(void *result, int a2, uint64_t a3)
{
  switch(a2)
  {
    case -15:
      uint64_t result = sub_1B0D15D7C(result, (void *)a3);
      break;
    case -14:
    case -13:
    case -12:
    case -6:
      if (a3) {
        goto LABEL_3;
      }
      break;
    case -11:
      if (!result[102])
      {
        unsigned int v4 = *(void **)a3;
        int v5 = *(_DWORD *)(a3 + 24) - 1;
        *(_DWORD *)(a3 + 24) = v5;
        if (!v5)
        {
          uint64_t v6 = *(void *)(a3 + 16);
          int v7 = v4;
          if (v6)
          {
            (*(void (**)(uint64_t))(*(void *)v6 + 32))(v6);
            int v7 = *(void **)a3;
          }
          uint64_t v8 = *(void *)(a3 + 8);
          int v9 = *(_DWORD *)(v8 + 16) - 1;
          *(_DWORD *)(v8 + 16) = v9;
          if (!v9)
          {
            BOOL v10 = *(void (**)(void))(v8 + 32);
            if (v10) {
              v10(*(void *)(v8 + 24));
            }
            sub_1B0D05C10(v7, (void *)v8);
          }
          uint64_t v11 = v4;
          goto LABEL_34;
        }
      }
      break;
    case -10:
      if (result[102])
      {
        uint64_t result = sub_1B0D15DCC(result, a3);
      }
      else if (a3)
      {
        if ((*(_WORD *)(a3 + 20) & 0x9000) != 0 || *(_DWORD *)(a3 + 32)) {
          sub_1B0D180E4(a3);
        }
        uint64_t v11 = *(void **)(a3 + 24);
LABEL_34:
        uint64_t result = sub_1B0D05C10(v11, (void *)a3);
      }
      break;
    case -8:
      if (a3)
      {
        if (!result[102] && (*(_DWORD *)a3)-- == 1)
        {
          uint64_t result = *(void **)(a3 + 16);
          goto LABEL_3;
        }
      }
      break;
    case -7:
      if ((*(unsigned char *)(a3 + 4) & 0x10) != 0)
      {
LABEL_3:
        uint64_t result = sub_1B0D15C20(result, (void *)a3);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B0C8BB5C(uint64_t a1, int a2, _DWORD *a3)
{
  if (*(unsigned char *)(a1 + 17) || !*(unsigned char *)(a1 + 16) || a2 && *(unsigned char *)(a1 + 16) == 1) {
    return sub_1B0D12594(a1, a2, a3);
  }
  unsigned int v4 = *(uint64_t **)(a1 + 8);
  if (a3) {
    *a3 = bswap32(*(_DWORD *)(*(void *)(v4[3] + 80) + 40));
  }
  if (a2 && (uint64_t v5 = *v4, v6 = *(_DWORD *)(*(void *)a1 + 788), *(_DWORD *)(v5 + 128) < v6) && *(unsigned char *)(v5 + 10)) {
    return sub_1B0D13268(v5, v6);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B0C8BBCC(uint64_t a1)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 344);
  if (v2)
  {
LABEL_2:
    int v54 = 0;
    if (*(unsigned char *)(v2 + 64))
    {
      if (!*(unsigned char *)(v2 + 63)) {
        (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(v2 + 8) + 112))(*(void *)(v2 + 8), 0, 1, 9);
      }
      *(unsigned char *)(v2 + 64) = 0;
      *(_DWORD *)(v2 + 124) = 0;
      *(unsigned char *)(v2 + 67) = 0;
    }
    if ((*(__int16 *)(v2 + 60) & 0x80000000) == 0)
    {
      if (!*(unsigned char *)(v2 + 63)) {
        (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(v2 + 8) + 112))(*(void *)(v2 + 8), *(unsigned __int16 *)(v2 + 60) + 3, 1, 5);
      }
      *(_WORD *)(v2 + 60) = -1;
    }
    uint64_t v3 = *(void *)(a1 + 344);
    unsigned int v4 = *(void **)(v3 + 144);
    if (v4)
    {
      BOOL v10 = *v4 != *(void *)(v3 + 72)
         || v4[1] != *(void *)(v3 + 80)
         || v4[2] != *(void *)(v3 + 88)
         || v4[3] != *(void *)(v3 + 96)
         || v4[4] != *(void *)(v3 + 104)
         || v4[5] != *(void *)(v3 + 112);
      uint64_t v11 = *(void *)(v3 + 160);
      if (v11)
      {
        LODWORD(v55) = *(_DWORD *)(v11 + 772);
        if (v55)
        {
          uint64_t v12 = *(void *)(v3 + 8);
          if (*(void *)v12) {
            (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v12 + 80))(v12, 34, &v55);
          }
        }
      }
      if (*(unsigned char *)(v3 + 63)) {
        uint64_t v13 = 0;
      }
      else {
        uint64_t v13 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(v3 + 8) + 112))(*(void *)(v3 + 8), 1, 1, 6);
      }
      LODWORD(v55) = 0;
      uint64_t v17 = **(void **)(v3 + 8);
      if (v17) {
        (*(void (**)(void))(v17 + 80))();
      }
      if (v13) {
        goto LABEL_90;
      }
    }
    else
    {
      BOOL v10 = 0;
    }
    int v18 = 1;
    do
      uint64_t v19 = sub_1B0C8CD54(v3, &v54, 0, v18++);
    while (v19 == -1);
    uint64_t v13 = v19;
    if (!v4 || v19)
    {
      if (!v4 || *(unsigned char *)(v3 + 63)) {
        goto LABEL_89;
      }
    }
    else if (*v4 == *(void *)(v3 + 72) {
           && v4[1] == *(void *)(v3 + 80)
    }
           && v4[2] == *(void *)(v3 + 88)
           && v4[3] == *(void *)(v3 + 96)
           && v4[4] == *(void *)(v3 + 104)
           && v4[5] == *(void *)(v3 + 112))
    {
      uint64_t v13 = 0;
      if (*(unsigned char *)(v3 + 63)) {
        goto LABEL_89;
      }
    }
    else if (v4[4] == *(void *)(v3 + 104) && *((_DWORD *)v4 + 4) >= *(_DWORD *)(**(void **)(v3 + 48) + 128))
    {
      uint64_t v13 = 0;
      long long v26 = *(_OWORD *)v4;
      long long v27 = *((_OWORD *)v4 + 2);
      *(_OWORD *)(v3 + 88) = *((_OWORD *)v4 + 1);
      *(_OWORD *)(v3 + 104) = v27;
      *(_OWORD *)(v3 + 72) = v26;
      int v54 = v10;
      *(_DWORD *)(v3 + 120) = 1;
      if (*(unsigned char *)(v3 + 63)) {
        goto LABEL_89;
      }
    }
    else
    {
      *(_DWORD *)(v3 + 120) = 1;
      if (*(unsigned char *)(v3 + 64))
      {
        if (!*(unsigned char *)(v3 + 63)) {
          (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(v3 + 8) + 112))(*(void *)(v3 + 8), 0, 1, 9);
        }
        *(unsigned char *)(v3 + 64) = 0;
        *(_DWORD *)(v3 + 124) = 0;
        *(unsigned char *)(v3 + 67) = 0;
      }
      if ((*(__int16 *)(v3 + 60) & 0x80000000) == 0)
      {
        if (!*(unsigned char *)(v3 + 63)) {
          (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(v3 + 8) + 112))(*(void *)(v3 + 8), *(unsigned __int16 *)(v3 + 60) + 3, 1, 5);
        }
        *(_WORD *)(v3 + 60) = -1;
        uint64_t v13 = 769;
        if (!*(unsigned char *)(v3 + 63)) {
          goto LABEL_88;
        }
LABEL_89:
        if (!(v13 | v54))
        {
          uint64_t v13 = 0;
LABEL_96:
          if (!*(unsigned char *)(a1 + 16)) {
            goto LABEL_190;
          }
LABEL_97:
          if (v13) {
            goto LABEL_98;
          }
          goto LABEL_202;
        }
LABEL_90:
        ++*(_DWORD *)(a1 + 132);
        for (uint64_t i = *(void *)(a1 + 112); i; uint64_t i = *(void *)(i + 64))
          *(_DWORD *)(i + 24) = 1;
        sub_1B0C7D108(*(void **)(a1 + 336), 0);
        if (*(unsigned char *)(a1 + 27))
        {
          (*(void (**)(void, void, void))(**(void **)(a1 + 72) + 144))(*(void *)(a1 + 72), 0, 0);
          if (!*(unsigned char *)(a1 + 16)) {
            goto LABEL_190;
          }
          goto LABEL_97;
        }
        goto LABEL_96;
      }
      uint64_t v13 = 769;
      if (*(unsigned char *)(v3 + 63)) {
        goto LABEL_89;
      }
    }
LABEL_88:
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(v3 + 8) + 112))(*(void *)(v3 + 8), 1, 1, 5);
    goto LABEL_89;
  }
  if (*(unsigned char *)(a1 + 21))
  {
    uint64_t v13 = 0;
    if (!*(unsigned char *)(a1 + 16)) {
      goto LABEL_190;
    }
    goto LABEL_97;
  }
  while (1)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + 22);
    if (v14 != 5 && v14 != 0)
    {
      if (v14 <= 1) {
        goto LABEL_107;
      }
LABEL_158:
      if (*(unsigned char *)(a1 + 18))
      {
        uint64_t v13 = 776;
        goto LABEL_98;
      }
      uint64_t v13 = sub_1B0D10E58(a1, 4);
      if (!v13)
      {
        if (**(void **)(a1 + 80))
        {
LABEL_162:
          uint64_t v13 = sub_1B0D123DC(a1);
          if (v13) {
            goto LABEL_184;
          }
          uint64_t v13 = sub_1B0CDA4A0(a1, *(unsigned char *)(a1 + 16) == 0);
          *(unsigned char *)(a1 + 21) = 0;
LABEL_183:
          if (!v13) {
            goto LABEL_187;
          }
LABEL_184:
          if (v13 == 13 || v13 == 10)
          {
            *(_DWORD *)(a1 + 48) = v13;
            *(unsigned char *)(a1 + 21) = 6;
            *(void *)(a1 + 288) = sub_1B0D11088;
          }
          goto LABEL_98;
        }
        if (*(unsigned char *)(a1 + 9) == 2)
        {
          uint64_t v13 = 0;
        }
        else
        {
          uint64_t v42 = *(void *)a1;
          LODWORD(v55) = 0;
          uint64_t v43 = (*(uint64_t (**)(uint64_t, void, void, uint64_t *))(v42 + 56))(v42, *(void *)(a1 + 224), 0, &v55);
          uint64_t v44 = *(void **)(a1 + 80);
          if (v43) {
            BOOL v45 = 1;
          }
          else {
            BOOL v45 = v55 == 0;
          }
          if (v45)
          {
            uint64_t v13 = v43;
          }
          else
          {
            int v54 = 0;
            uint64_t v46 = (*(uint64_t (**)(uint64_t, void, void *, void, int *))(v42 + 40))(v42, *(void *)(a1 + 224), v44, *(_DWORD *)(a1 + 180) & 0x1700000 | 0x802u, &v54);
            uint64_t v13 = v46;
            if (!v46)
            {
              if (v54)
              {
                uint64_t v13 = sub_1B0D06D2C(69231);
                uint64_t v47 = *(void *)(a1 + 80);
                if (*(void *)v47)
                {
                  (*(void (**)(void))(*(void *)v47 + 8))(*(void *)(a1 + 80));
                  *(void *)uint64_t v47 = 0;
                }
              }
              else
              {
                uint64_t v13 = 0;
              }
            }
            uint64_t v44 = *(void **)(a1 + 80);
          }
          if (*v44) {
            goto LABEL_162;
          }
        }
        if (!*(unsigned char *)(a1 + 8)) {
          sub_1B0D11974(a1, 1);
        }
        goto LABEL_183;
      }
LABEL_98:
      sub_1B0CB3198(a1);
      return v13;
    }
    if (*(unsigned char *)(a1 + 17)) {
      goto LABEL_48;
    }
    uint64_t v16 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 72) + 56))(*(void *)(a1 + 72), 1);
    if (v16 != 5) {
      break;
    }
    if (!(*(unsigned int (**)(void))(a1 + 232))(*(void *)(a1 + 240)))
    {
      uint64_t v13 = 5;
      goto LABEL_98;
    }
  }
  uint64_t v13 = v16;
  if (v16) {
    goto LABEL_97;
  }
  unsigned int v14 = *(unsigned __int8 *)(a1 + 22);
LABEL_48:
  if (v14 == 5) {
    goto LABEL_158;
  }
  *(unsigned char *)(a1 + 22) = 1;
LABEL_107:
  uint64_t v28 = *(void *)a1;
  int v54 = 1;
  uint64_t v29 = **(void **)(a1 + 80);
  if (!v29)
  {
    uint64_t v30 = (*(uint64_t (**)(uint64_t, void, void, int *))(v28 + 56))(v28, *(void *)(a1 + 224), 0, &v54);
    if (v30 || v54 == 0)
    {
      uint64_t v13 = v30;
      if (v30) {
        goto LABEL_98;
      }
      goto LABEL_187;
    }
  }
  int v53 = 0;
  uint64_t v32 = (uint64_t *)(*(uint64_t (**)(void, int *))(**(void **)(a1 + 72) + 72))(*(void *)(a1 + 72), &v53);
  if (v32 | v53)
  {
    uint64_t v13 = (uint64_t)v32;
    int v34 = 0;
    if (v32) {
      goto LABEL_98;
    }
    goto LABEL_157;
  }
  uint64_t v35 = *(void *)(a1 + 344);
  if (!v35 || *(__int16 *)(v35 + 60) < 0 || (LODWORD(v35) = *(_DWORD *)(v35 + 92), !v35))
  {
    uint64_t v32 = *(uint64_t **)(a1 + 72);
    uint64_t v35 = *v32;
    if (*v32)
    {
      uint64_t v55 = 0;
      uint64_t v32 = (uint64_t *)(*(uint64_t (**)(void))(v35 + 48))();
      if (v32) {
        goto LABEL_197;
      }
      uint64_t v35 = (v55 + *(void *)(a1 + 200) - 1) / *(void *)(a1 + 200);
      goto LABEL_124;
    }
LABEL_126:
    if (v29) {
      BOOL v36 = 0;
    }
    else {
      BOOL v36 = v35 == 0;
    }
    if (!v36) {
      goto LABEL_130;
    }
    if (off_1E9B52208) {
      v33.n128_f64[0] = off_1E9B52208(v32);
    }
    unsigned int v39 = *(unsigned __int8 *)(a1 + 22);
    if (v39 > 5 || ((1 << v39) & 0x23) == 0) {
      goto LABEL_146;
    }
    if (*(unsigned char *)(a1 + 17))
    {
      if (v39 != 5) {
        goto LABEL_145;
      }
      goto LABEL_146;
    }
    uint64_t v32 = (uint64_t *)(*(uint64_t (**)(void, uint64_t, __n128))(**(void **)(a1 + 72) + 56))(*(void *)(a1 + 72), 2, v33);
    if (!v32)
    {
      if (*(unsigned char *)(a1 + 22) != 5) {
LABEL_145:
      }
        *(unsigned char *)(a1 + 22) = 2;
LABEL_146:
      char v40 = *(uint64_t (**)(uint64_t, void, void, __n128))(v28 + 48);
      if (v40) {
        uint64_t v32 = (uint64_t *)v40(v28, *(void *)(a1 + 224), 0, v33);
      }
      if (!*(unsigned char *)(a1 + 8)) {
        uint64_t v32 = (uint64_t *)sub_1B0D11974(a1, 1);
      }
    }
    int v34 = (int)off_1E9B52210;
    if (off_1E9B52210)
    {
      off_1E9B52210(v32);
      int v34 = 0;
    }
    goto LABEL_157;
  }
LABEL_124:
  if (v35 <= *(_DWORD *)(a1 + 188)) {
    goto LABEL_126;
  }
  *(_DWORD *)(a1 + 188) = v35;
LABEL_130:
  if (!v29)
  {
    LODWORD(v55) = *(_DWORD *)(a1 + 180) & 0x1700000 | 0x801;
    uint64_t v41 = (*(uint64_t (**)(uint64_t, void, void))(v28 + 40))(v28, *(void *)(a1 + 224), *(void *)(a1 + 80));
    if (v41 == 14)
    {
      int v34 = 1;
      goto LABEL_157;
    }
    uint64_t v13 = v41;
    if (v41) {
      goto LABEL_98;
    }
  }
  LOBYTE(v55) = 0;
  unsigned int v37 = (*(uint64_t (**)(void, uint64_t *, uint64_t, void))(**(void **)(a1 + 80) + 16))(*(void *)(a1 + 80), &v55, 1, 0);
  if (v37 == 522) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v37;
  }
  if (!v29)
  {
    uint64_t v38 = *(void *)(a1 + 80);
    if (*(void *)v38)
    {
      (*(void (**)(void))(*(void *)v38 + 8))(*(void *)(a1 + 80));
      *(void *)uint64_t v38 = 0;
    }
  }
  int v34 = (_BYTE)v55 != 0;
  if (v13) {
    goto LABEL_98;
  }
LABEL_157:
  if (v34) {
    goto LABEL_158;
  }
LABEL_187:
  if (!*(unsigned char *)(a1 + 16) && *(unsigned char *)(a1 + 28))
  {
    uint64_t v51 = (*(uint64_t (**)(void, uint64_t *, uint64_t, uint64_t))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72), &v55, 16, 24);
    if (v51)
    {
      uint64_t v13 = v51;
      if (v51 != 522) {
        goto LABEL_97;
      }
      uint64_t v55 = 0;
      uint64_t v56 = 0;
    }
    if (*(void *)(a1 + 136) != v55 || *(void *)(a1 + 144) != v56)
    {
      sub_1B0D119D0(a1);
      if (*(unsigned char *)(a1 + 27)) {
        (*(void (**)(void, void, void))(**(void **)(a1 + 72) + 144))(*(void *)(a1 + 72), 0, 0);
      }
    }
  }
  uint64_t v48 = sub_1B0DDE344((unsigned char *)a1);
  uint64_t v2 = *(void *)(a1 + 344);
  if (v2) {
    goto LABEL_2;
  }
  uint64_t v13 = v48;
  if (*(unsigned char *)(a1 + 16)) {
    goto LABEL_97;
  }
LABEL_190:
  if (*(unsigned char *)(a1 + 21) || v13) {
    goto LABEL_97;
  }
  uint64_t v49 = *(void *)(a1 + 344);
  if (v49)
  {
    if ((*(__int16 *)(v49 + 60) & 0x80000000) == 0)
    {
      LODWORD(v49) = *(_DWORD *)(v49 + 92);
      if (v49) {
        goto LABEL_199;
      }
    }
  }
  uint64_t v49 = **(void **)(a1 + 72);
  if (v49)
  {
    uint64_t v55 = 0;
    uint64_t v32 = (uint64_t *)(*(uint64_t (**)(void))(v49 + 48))();
    if (v32)
    {
LABEL_197:
      uint64_t v13 = (uint64_t)v32;
      goto LABEL_98;
    }
    uint64_t v49 = (v55 + *(void *)(a1 + 200) - 1) / *(void *)(a1 + 200);
LABEL_199:
    if (v49 > *(_DWORD *)(a1 + 188)) {
      *(_DWORD *)(a1 + 188) = v49;
    }
  }
  *(_DWORD *)(a1 + 32) = v49;
LABEL_202:
  uint64_t v13 = 0;
  *(unsigned char *)(a1 + 21) = 1;
  *(unsigned char *)(a1 + 28) = 1;
  return v13;
}

uint64_t sub_1B0C8C504(uint64_t a1, int a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 28);
  if (v2 >= a2) {
    return 0;
  }
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v35 = 0;
  uint64_t v5 = *(int32x2_t **)(a1 + 16);
  int32x2_t v6 = v5[2];
  if (v6)
  {
    xmmword_1EB21CA40(*(void *)&v6);
    int v2 = *(unsigned __int8 *)(a1 + 28);
  }
  unsigned int v7 = v5[4].u8[0];
  if (v2 != v7)
  {
    uint64_t v8 = 5;
    if (a2 > 1 || v7 > 2) {
      goto LABEL_79;
    }
  }
  if (a2 == 1)
  {
    if (v7 - 1 < 2)
    {
      uint64_t v8 = 0;
      *(unsigned char *)(a1 + 28) = 1;
      v5[3] = vadd_s32(v5[3], (int32x2_t)0x100000001);
      goto LABEL_79;
    }
    __int16 v9 = 1;
    uint64_t v36 = 1;
    HIWORD(v37) = 0;
LABEL_15:
    WORD2(v37) = v9;
    uint64_t v10 = dword_1E9B51ED0;
    uint64_t v35 = dword_1E9B51ED0;
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v12 = *(unsigned int *)(v11 + 88);
    if (v12 == -1)
    {
      uint64_t v12 = *(unsigned int *)(a1 + 24);
      *(_DWORD *)(v11 + 88) = v12;
    }
    if ((*(_WORD *)(a1 + 30) & 3) == 1)
    {
      if (*(unsigned char *)(v11 + 33)) {
        goto LABEL_27;
      }
      uint64_t v38 = v10 + 2;
      long long v39 = xmmword_1B0DE14A0;
      int v13 = sub_1B0D077B8(v12, (uint64_t)&v38, a1);
      if (v13 < 0) {
        goto LABEL_23;
      }
      *(unsigned char *)(v11 + 33) = 1;
      ++*(_DWORD *)(v11 + 28);
    }
    else
    {
      int v13 = sub_1B0D077B8(v12, (uint64_t)&v35, a1);
    }
    if (v13)
    {
LABEL_23:
      uint64_t v14 = *__error();
      uint64_t v8 = 5;
      if (v14 > 0x3C) {
        goto LABEL_54;
      }
      if (((1 << v14) & 0x1000000800012010) == 0)
      {
        if (v14 != 1)
        {
LABEL_54:
          if (v14 != 77)
          {
            uint64_t v8 = 3850;
            *(_DWORD *)(a1 + 32) = v14;
          }
          goto LABEL_79;
        }
        goto LABEL_53;
      }
      goto LABEL_79;
    }
LABEL_27:
    if (a2 == 4)
    {
      *(unsigned char *)(a1 + 28) = 3;
      v5[4].i8[0] = 3;
      goto LABEL_29;
    }
    uint64_t v15 = dword_1E9B51ED0 + 2;
    uint64_t v35 = v15;
    uint64_t v36 = 510;
    uint64_t v16 = *(void *)(a1 + 16);
    uint64_t v17 = *(unsigned int *)(v16 + 88);
    if (v17 == -1)
    {
      uint64_t v17 = *(unsigned int *)(a1 + 24);
      *(_DWORD *)(v16 + 88) = v17;
    }
    if ((*(_WORD *)(a1 + 30) & 3) == 1)
    {
      if (*(unsigned char *)(v16 + 33)) {
        goto LABEL_62;
      }
      uint64_t v38 = v15;
      long long v39 = xmmword_1B0DE14A0;
      int v18 = sub_1B0D077B8(v17, (uint64_t)&v38, a1);
      if (v18 < 0)
      {
LABEL_58:
        char v25 = 0;
        uint64_t v26 = *__error();
        uint64_t v8 = 5;
        if (v26 > 0x3C) {
          goto LABEL_82;
        }
        if (((1 << v26) & 0x1000000800012010) != 0) {
          goto LABEL_63;
        }
        if (v26 == 1)
        {
          char v25 = 0;
          uint64_t v8 = 3;
        }
        else
        {
LABEL_82:
          if (v26 != 77)
          {
            char v25 = 0;
            uint64_t v8 = 3850;
          }
        }
LABEL_63:
        uint64_t v27 = dword_1E9B51ED0;
        uint64_t v35 = dword_1E9B51ED0;
        uint64_t v36 = 1;
        WORD2(v37) = 2;
        uint64_t v28 = *(void *)(a1 + 16);
        uint64_t v29 = *(unsigned int *)(v28 + 88);
        if (v29 == -1)
        {
          uint64_t v29 = *(unsigned int *)(a1 + 24);
          *(_DWORD *)(v28 + 88) = v29;
        }
        if ((*(_WORD *)(a1 + 30) & 3) == 1)
        {
          if (*(unsigned char *)(v28 + 33))
          {
LABEL_74:
            if (v8)
            {
              if (v8 != 5) {
                *(_DWORD *)(a1 + 32) = v26;
              }
              goto LABEL_79;
            }
            int v32 = v5[3].i32[1] + 1;
            v5[3].i32[0] = 1;
            v5[3].i32[1] = v32;
            goto LABEL_78;
          }
          uint64_t v38 = v27 + 2;
          long long v39 = xmmword_1B0DE14A0;
          int v30 = sub_1B0D077B8(v29, (uint64_t)&v38, a1);
          if (v30 < 0)
          {
            int v30 = 1;
          }
          else
          {
            *(unsigned char *)(v28 + 33) = 1;
            ++*(_DWORD *)(v28 + 28);
          }
        }
        else
        {
          int v30 = sub_1B0D077B8(v29, (uint64_t)&v35, a1);
        }
        char v31 = v25 ^ 1;
        if (!v30) {
          char v31 = 1;
        }
        if ((v31 & 1) == 0)
        {
          uint64_t v8 = 2058;
          *(_DWORD *)(a1 + 32) = *__error();
          goto LABEL_79;
        }
        goto LABEL_74;
      }
      *(unsigned char *)(v16 + 33) = 1;
      ++*(_DWORD *)(v16 + 28);
    }
    else
    {
      int v18 = sub_1B0D077B8(v17, (uint64_t)&v35, a1);
    }
    if (v18) {
      goto LABEL_58;
    }
LABEL_62:
    uint64_t v8 = 0;
    LODWORD(v26) = 0;
    char v25 = 1;
    goto LABEL_63;
  }
  uint64_t v36 = 1;
  HIWORD(v37) = 0;
  if (a2 != 4) {
    goto LABEL_37;
  }
  if (v2 == 2)
  {
    __int16 v9 = 3;
    goto LABEL_15;
  }
LABEL_29:
  if (v5[3].i32[0] > 1)
  {
    uint64_t v8 = 5;
    goto LABEL_79;
  }
LABEL_37:
  WORD2(v37) = 3;
  uint64_t v19 = dword_1E9B51ED0 + 2;
  if (a2 == 2) {
    int v20 = dword_1E9B51ED0 + 1;
  }
  else {
    int v20 = dword_1E9B51ED0 + 2;
  }
  uint64_t v21 = 510;
  if (a2 == 2) {
    uint64_t v21 = 1;
  }
  uint64_t v35 = v20;
  uint64_t v36 = v21;
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = *(unsigned int *)(v22 + 88);
  if (v23 == -1)
  {
    uint64_t v23 = *(unsigned int *)(a1 + 24);
    *(_DWORD *)(v22 + 88) = v23;
  }
  if ((*(_WORD *)(a1 + 30) & 3) == 1)
  {
    if (*(unsigned char *)(v22 + 33))
    {
LABEL_78:
      uint64_t v8 = 0;
      *(unsigned char *)(a1 + 28) = a2;
      v5[4].i8[0] = a2;
      goto LABEL_79;
    }
    uint64_t v38 = v19;
    long long v39 = xmmword_1B0DE14A0;
    int v24 = sub_1B0D077B8(v23, (uint64_t)&v38, a1);
    if (v24 < 0) {
      goto LABEL_50;
    }
    *(unsigned char *)(v22 + 33) = 1;
    ++*(_DWORD *)(v22 + 28);
  }
  else
  {
    int v24 = sub_1B0D077B8(v23, (uint64_t)&v35, a1);
  }
  if (!v24) {
    goto LABEL_78;
  }
LABEL_50:
  uint64_t v14 = *__error();
  uint64_t v8 = 5;
  if (v14 > 0x3C) {
    goto LABEL_54;
  }
  if (((1 << v14) & 0x1000000800012010) == 0)
  {
    if (v14 != 1) {
      goto LABEL_54;
    }
LABEL_53:
    uint64_t v8 = 3;
    *(_DWORD *)(a1 + 32) = v14;
  }
LABEL_79:
  int32x2_t v33 = v5[2];
  if (v33) {
    xmmword_1EB21CA50(*(void *)&v33);
  }
  return v8;
}

uint64_t sub_1B0C8C9F4(uint64_t a1, uint64_t a2, int a3, BOOL *a4)
{
  if (a3)
  {
    BOOL v5 = off_1EC5263B8(a2, 6) == 0;
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
    long long v9 = 0u;
    memset(v8, 0, sizeof(v8));
    if (off_1EC5263E8(a2, v8)) {
      BOOL v5 = 0;
    }
    else {
      BOOL v5 = (WORD2(v8[0]) & 0xF000) != 0x8000 || (uint64_t)v9 > 0;
    }
  }
  *a4 = v5;
  return 0;
}

uint64_t sub_1B0C8CA94(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 160)
    || (v9 = 0u, long long v10 = 0u, v8 = 0u, memset(v7, 0, sizeof(v7)), (v5 = *(void *)(a1 + 64)) != 0)
    && *(_DWORD *)(*(void *)v5 + 168))
  {
    sqlite3_log(27, "denying fileSize on invalidated fd %d", *(_DWORD *)(a1 + 24));
    return 6922;
  }
  else
  {
    uint64_t result = off_1EC526400(*(unsigned int *)(a1 + 24), v7);
    if (result)
    {
      *(_DWORD *)(a1 + 32) = *__error();
      return 1802;
    }
    else
    {
      uint64_t v6 = v8;
      *(void *)(a1 + 144) = v8;
      if (v6 == 1) {
        uint64_t v6 = 0;
      }
      *a2 = v6;
    }
  }
  return result;
}

uint64_t sub_1B0C8CB54(uint64_t a1, _DWORD *a2)
{
  if (*(unsigned char *)(a1 + 16) || *(void *)(a1 + 344))
  {
    uint64_t result = 0;
    *a2 = 1;
  }
  else if (!*(unsigned char *)(a1 + 17) {
         && (*(unsigned char *)(a1 + 8) || (uint64_t v5 = **(void **)(a1 + 72), *(int *)v5 >= 2) && *(void *)(v5 + 104)))
  }
  {
    uint64_t v4 = *(void *)(a1 + 80);
    if (*(void *)v4)
    {
      (*(void (**)(void))(*(void *)v4 + 8))(*(void *)(a1 + 80));
      *(void *)uint64_t v4 = 0;
    }
    uint64_t result = sub_1B0D12F74((uint64_t *)a1);
    if (!result)
    {
      *(unsigned char *)(a1 + 9) = 5;
      *(unsigned char *)(a1 + 21) = 0;
    }
  }
  else
  {
    return 14;
  }
  return result;
}

uint64_t sub_1B0C8CC00(const char *a1, _DWORD *a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  sqlite3_snprintf(1024, __s, "%s", a1);
  int v3 = strlen(__s);
  if (v3 < 1)
  {
LABEL_4:
    if (__s[0] != 47) {
      __s[0] = 46;
    }
    uint64_t v4 = 1;
  }
  else
  {
    while (1)
    {
      uint64_t v4 = v3;
      if (__s[v3] == 47) {
        break;
      }
      --v3;
      if ((int)v4 < 2) {
        goto LABEL_4;
      }
    }
  }
  __s[v4] = 0;
  int v5 = sub_1B0D06D40(__s, 0, 0, 0);
  uint64_t v6 = 0;
  *a2 = v5;
  if (v5 < 0)
  {
    uint64_t v6 = sub_1B0D06D2C(44571);
    int v7 = *__error();
    memset(__strerrbuf, 0, sizeof(__strerrbuf));
    strerror_r(v7, (char *)__strerrbuf, 0x4FuLL);
    sqlite3_log(v6, "os_unix.c:%d: (%d) %s(%s) - %s", 44571, v7, "openDirectory", __s, (const char *)__strerrbuf);
  }
  return v6;
}

uint64_t sub_1B0C8CD54(uint64_t a1, _DWORD *a2, int a3, int a4)
{
  v97[4] = *MEMORY[0x1E4F143B8];
  if (a4 >= 6)
  {
    if (a4 < 0x65)
    {
      (*(void (**)(void))(*(void *)a1 + 112))();
      goto LABEL_4;
    }
    v97[0] = -1;
    sqlite3_file_control(*(sqlite3 **)(a1 + 160), 0, 103, v97);
    int v32 = HIDWORD(v97[0]);
    if (qword_1EB2202F8 != -1) {
      dispatch_once(&qword_1EB2202F8, &unk_1F09A5008);
    }
    int32x2_t v33 = qword_1EB2202C8;
    if (os_log_type_enabled((os_log_t)qword_1EB2202C8, OS_LOG_TYPE_ERROR))
    {
      sub_1B0DE0410(a1, v32, v33);
      int v34 = getprogname();
      if (!v34) {
        goto LABEL_69;
      }
    }
    else
    {
      int v34 = getprogname();
      if (!v34) {
        goto LABEL_69;
      }
    }
    uint64_t v35 = v34;
    if (!strcmp(v34, "testfixture") || !strcmp(v35, "sqlite3") || !strcmp(v35, "xctest")) {
      return 15;
    }
LABEL_69:
    BOOL v36 = os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT);
    if (v36) {
      sub_1B0DE03D4(v36, v37, v38, v39, v40, v41, v42, v43);
    }
    return 15;
  }
LABEL_4:
  if (a3)
  {
    LODWORD(v7) = 0;
    long long v8 = (int *)(**(void **)(a1 + 48) + 96);
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 70))
  {
LABEL_52:
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    if (!*(unsigned char *)(a1 + 63))
    {
      unsigned int v46 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 3, 1, 6);
      if (v46)
      {
        if (v46 == 5) {
          uint64_t v7 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v7 = v46;
        }
        goto LABEL_99;
      }
    }
    *(_WORD *)(a1 + 60) = 0;
    uint64_t v28 = (*(uint64_t (**)(void, void, uint64_t, void, uint64_t *))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), 0, 0x8000, 0, &v95);
    if (v28 == 8) {
      goto LABEL_98;
    }
    uint64_t v7 = v28;
    if (v28 != 1288) {
      goto LABEL_60;
    }
    uint64_t v29 = **(_OWORD ***)(a1 + 48);
    long long v31 = v29[1];
    long long v30 = v29[2];
    *(_OWORD *)(a1 + 72) = *v29;
    *(_OWORD *)(a1 + 88) = v31;
    *(_OWORD *)(a1 + 104) = v30;
    uint64_t v7 = (*(uint64_t (**)(void, uint64_t *))(**(void **)(a1 + 16) + 48))(*(void *)(a1 + 16), &v96);
    if (!v7)
    {
      if (v96 <= 31)
      {
        *a2 = 1;
        if (*(_DWORD *)(a1 + 88)) {
          uint64_t v7 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v7 = 0;
        }
        goto LABEL_60;
      }
      uint64_t v7 = (*(uint64_t (**)(void, void *, uint64_t, void))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), v97, 32, 0);
      if (!v7)
      {
        if (*(void *)(a1 + 104) != v97[2])
        {
LABEL_98:
          uint64_t v7 = 0xFFFFFFFFLL;
          goto LABEL_99;
        }
        int v56 = *(_DWORD *)(a1 + 56);
        if (!sqlite3_initialize())
        {
          uint64_t v70 = v56 + 24;
          uint64_t v71 = sub_1B0C7FC94(v70);
          if (v71)
          {
            uint64_t v72 = v71;
            uint64_t v73 = *(void *)(a1 + 96);
            unint64_t v74 = *(unsigned int *)(a1 + 88) * (unint64_t)(*(_DWORD *)(a1 + 56) + 24) + 32;
            if ((uint64_t)(v74 + v70) <= v96)
            {
              while (1)
              {
                int v93 = 0;
                uint64_t v76 = (*(uint64_t (**)(void, uint64_t, uint64_t, unint64_t))(**(void **)(a1 + 16)
                                                                                            + 16))(*(void *)(a1 + 16), v72, v70, v74);
                if (v76)
                {
                  uint64_t v7 = v76;
                  goto LABEL_164;
                }
                if (!sub_1B0D10B8C(a1, &v94, &v93, (unsigned int *)(v72 + 24), v72)) {
                  goto LABEL_163;
                }
                if (v93) {
                  break;
                }
                v74 += v70;
                if ((uint64_t)(v70 + v74) > v96) {
                  goto LABEL_163;
                }
              }
              uint64_t v7 = 0xFFFFFFFFLL;
            }
            else
            {
LABEL_163:
              uint64_t v7 = 0;
            }
LABEL_164:
            *(void *)(a1 + 96) = v73;
            int v75 = (void (**)(uint64_t))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108 -= (int)off_1EB21C9F8(v72);
              --qword_1EB220150;
              off_1EB21C9E8(v72);
              uint64_t v72 = xmmword_1EB2201B0;
              if (!(void)xmmword_1EB2201B0)
              {
LABEL_60:
                if (!v7) {
                  return v7;
                }
                goto LABEL_99;
              }
              int v75 = (void (**)(uint64_t))&xmmword_1EB21CA50;
            }
            (*v75)(v72);
            goto LABEL_60;
          }
        }
        uint64_t v7 = 7;
      }
    }
LABEL_99:
    if (*(int *)(a1 + 40) < 1)
    {
LABEL_109:
      *(unsigned char *)(a1 + 70) = 0;
      if (*(unsigned char *)(a1 + 64))
      {
        if (!*(unsigned char *)(a1 + 63)) {
          (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 0, 1, 9);
        }
        *(unsigned char *)(a1 + 64) = 0;
        *(_DWORD *)(a1 + 124) = 0;
        *(unsigned char *)(a1 + 67) = 0;
      }
      if ((*(__int16 *)(a1 + 60) & 0x80000000) == 0)
      {
        if (!*(unsigned char *)(a1 + 63)) {
          (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), *(unsigned __int16 *)(a1 + 60) + 3, 1, 5);
        }
        *(_WORD *)(a1 + 60) = -1;
      }
      *a2 = 1;
      return v7;
    }
    uint64_t v49 = 0;
    while (1)
    {
      uint64_t v50 = *(void *)(*(void *)(a1 + 48) + 8 * v49);
      if (v50)
      {
        uint64_t v51 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v50);
          --qword_1EB220150;
          off_1EB21C9E8(v50);
          uint64_t v50 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_102;
          }
          uint64_t v51 = &xmmword_1EB21CA50;
        }
        (*v51)(v50);
      }
LABEL_102:
      *(void *)(*(void *)(a1 + 48) + 8 * v49++) = 0;
      if (v49 >= *(int *)(a1 + 40)) {
        goto LABEL_109;
      }
    }
  }
  uint64_t v44 = sub_1B0C8D71C(a1, a2);
  if (v44)
  {
    uint64_t v7 = v44;
    if (v44 != 5) {
      return v7;
    }
    if (**(void **)(a1 + 48) && !*(unsigned char *)(a1 + 63))
    {
      unsigned int v45 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 2, 1, 6);
      if (v45)
      {
        if (v45 == 5) {
          return 261;
        }
        else {
          return v45;
        }
      }
      if (!*(unsigned char *)(a1 + 63))
      {
        int v53 = *(void (**)(void))(**(void **)(a1 + 8) + 112);
        goto LABEL_210;
      }
    }
    return 0xFFFFFFFFLL;
  }
  if (*(unsigned char *)(a1 + 70)) {
    goto LABEL_52;
  }
  long long v8 = (int *)(**(void **)(a1 + 48) + 96);
  int v48 = *v8;
  if (*v8 != *(_DWORD *)(a1 + 88))
  {
LABEL_91:
    LODWORD(v7) = 0;
    goto LABEL_6;
  }
  if (*(_DWORD *)(a1 + 152))
  {
    if (v48) {
      goto LABEL_91;
    }
  }
  else
  {
    if (v48) {
      BOOL v54 = *(void *)(a1 + 144) == 0;
    }
    else {
      BOOL v54 = 1;
    }
    if (!v54) {
      goto LABEL_91;
    }
  }
  int v55 = *(unsigned __int8 *)(a1 + 63);
  if (*(unsigned char *)(a1 + 63))
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 3, 1, 6);
    int v55 = *(unsigned __int8 *)(a1 + 63);
  }
  if (v55 != 2) {
    (*(void (**)(void))(**(void **)(a1 + 8) + 120))(*(void *)(a1 + 8));
  }
  if (v7 != 5)
  {
    if (v7) {
      return v7;
    }
    uint64_t v57 = **(uint64_t ***)(a1 + 48);
    uint64_t v58 = *v57;
    uint64_t v59 = v57[1];
    uint64_t v60 = v57[2];
    uint64_t v61 = v57[3];
    uint64_t v63 = v57[4];
    uint64_t v62 = v57[5];
    if (v58 == *(void *)(a1 + 72)
      && v59 == *(void *)(a1 + 80)
      && v60 == *(void *)(a1 + 88)
      && v61 == *(void *)(a1 + 96)
      && v63 == *(void *)(a1 + 104)
      && v62 == *(void *)(a1 + 112))
    {
      uint64_t v7 = 0;
      *(_WORD *)(a1 + 60) = 0;
      return v7;
    }
    if (!*(unsigned char *)(a1 + 63))
    {
      int v53 = *(void (**)(void))(**(void **)(a1 + 8) + 112);
      goto LABEL_210;
    }
    return 0xFFFFFFFFLL;
  }
LABEL_6:
  unsigned int v9 = *(_DWORD *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 144);
  if (v10)
  {
    unsigned int v11 = *(_DWORD *)(v10 + 16);
    if (v11 < v9) {
      unsigned int v9 = v11;
    }
  }
  uint64_t v12 = v8 + 1;
  unsigned int v13 = v8[2];
  int v14 = v13 <= v9;
  if (v13 > v9) {
    unsigned int v13 = 0;
  }
  unsigned int v15 = v8[3];
  if (v13 <= v15 && v15 <= v9)
  {
    int v14 = 2;
    unsigned int v13 = v8[3];
  }
  unsigned int v18 = v8[4];
  if (v13 <= v18 && v18 <= v9)
  {
    int v14 = 3;
    unsigned int v13 = v8[4];
  }
  unsigned int v21 = v8[5];
  BOOL v23 = v13 > v21 || v21 > v9;
  if (v23) {
    unsigned int v24 = v14;
  }
  else {
    unsigned int v24 = 4;
  }
  if (v23) {
    unsigned int v25 = v13;
  }
  else {
    unsigned int v25 = v8[5];
  }
  if ((*(unsigned char *)(a1 + 66) & 2) != 0) {
    goto LABEL_179;
  }
  if (v25 < v9 || v24 == 0)
  {
    if (*(unsigned char *)(a1 + 63))
    {
      uint64_t v27 = 4;
LABEL_47:
      unsigned int v24 = 1;
LABEL_48:
      v12[v24] = v9;
      if (!*(unsigned char *)(a1 + 63)) {
        (*(void (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), v27, 1, 9);
      }
      unsigned int v25 = v9;
      goto LABEL_180;
    }
    uint64_t v27 = 4;
    uint64_t v47 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 4, 1, 10);
    if (v47 != 5)
    {
      uint64_t v7 = v47;
      if (v47) {
        return v7;
      }
      goto LABEL_47;
    }
    if (*(unsigned char *)(a1 + 63))
    {
      uint64_t v27 = 5;
      unsigned int v24 = 2;
      goto LABEL_48;
    }
    uint64_t v27 = 5;
    uint64_t v52 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 5, 1, 10);
    if (!v52)
    {
      unsigned int v24 = 2;
      goto LABEL_48;
    }
    uint64_t v7 = v52;
    if (v52 != 5) {
      return v7;
    }
    if (*(unsigned char *)(a1 + 63))
    {
      uint64_t v27 = 6;
      unsigned int v24 = 3;
      goto LABEL_48;
    }
    uint64_t v27 = 6;
    uint64_t v69 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 6, 1, 10);
    if (!v69)
    {
      unsigned int v24 = 3;
      goto LABEL_48;
    }
    uint64_t v7 = v69;
    if (v69 != 5) {
      return v7;
    }
    if (*(unsigned char *)(a1 + 63))
    {
      uint64_t v27 = 7;
      unsigned int v24 = 4;
      goto LABEL_48;
    }
    uint64_t v27 = 7;
    uint64_t v77 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 7, 1, 10);
    if (!v77)
    {
      unsigned int v24 = 4;
      goto LABEL_48;
    }
    uint64_t v7 = v77;
    if (v77 != 5) {
      return v7;
    }
LABEL_179:
    if (!v24)
    {
      if (v7 == 5) {
        return 0xFFFFFFFFLL;
      }
      else {
        return 1288;
      }
    }
  }
LABEL_180:
  int v78 = *(unsigned __int8 *)(a1 + 63);
  if (*(unsigned char *)(a1 + 63))
  {
LABEL_181:
    *(_DWORD *)(a1 + 120) = *v8 + 1;
    if (v78 != 2) {
      (*(void (**)(void))(**(void **)(a1 + 8) + 120))(*(void *)(a1 + 8));
    }
    if (v12[v24] == v25)
    {
      uint64_t v79 = **(uint64_t ***)(a1 + 48);
      uint64_t v80 = *v79;
      uint64_t v81 = v79[1];
      uint64_t v82 = v79[2];
      uint64_t v83 = v79[3];
      uint64_t v85 = v79[4];
      uint64_t v84 = v79[5];
      BOOL v86 = v80 == *(void *)(a1 + 72) && v81 == *(void *)(a1 + 80);
      BOOL v87 = v86 && v82 == *(void *)(a1 + 88);
      BOOL v88 = v87 && v83 == *(void *)(a1 + 96);
      BOOL v89 = v88 && v85 == *(void *)(a1 + 104);
      if (v89 && v84 == *(void *)(a1 + 112))
      {
        uint64_t v7 = 0;
        *(_WORD *)(a1 + 60) = v24;
        return v7;
      }
    }
    if (*(unsigned char *)(a1 + 63)) {
      return 0xFFFFFFFFLL;
    }
    int v53 = *(void (**)(void))(**(void **)(a1 + 8) + 112);
LABEL_210:
    v53();
    return 0xFFFFFFFFLL;
  }
  unsigned int v91 = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), v24 + 3, 1, 6);
  if (!v91)
  {
    int v78 = *(unsigned __int8 *)(a1 + 63);
    goto LABEL_181;
  }
  if (v91 == 5) {
    return 0xFFFFFFFFLL;
  }
  else {
    return v91;
  }
}

uint64_t sub_1B0C8D71C(uint64_t a1, _DWORD *a2)
{
  uint64_t v93 = *MEMORY[0x1E4F143B8];
  uint64_t v78 = 0;
  if (*(int *)(a1 + 40) >= 1 && (uint64_t v78 = **(void **)(a1 + 48)) != 0)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = sub_1B0D10A2C(a1, 0, &v78);
    uint64_t v4 = v5;
    if (v5)
    {
      if (v5 != 1288) {
        return v4;
      }
      *(unsigned char *)(a1 + 70) = 1;
      *(unsigned char *)(a1 + 63) = 2;
      *a2 = 1;
    }
    if (!v78)
    {
      int v7 = 1;
      if (*(unsigned char *)(a1 + 70)) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  uint64_t v6 = sub_1B0C8F1F4(a1, a2);
  if (!v6) {
    goto LABEL_45;
  }
  int v7 = v6;
  uint64_t v4 = v6;
  if (v6 != 6922)
  {
    if (*(unsigned char *)(a1 + 70)) {
      goto LABEL_14;
    }
LABEL_13:
    if ((*(unsigned char *)(a1 + 66) & 2) == 0)
    {
LABEL_14:
      int v8 = *(unsigned __int8 *)(a1 + 64);
      if (!*(unsigned char *)(a1 + 64))
      {
        uint64_t v13 = *(void *)(a1 + 160);
        if (v13)
        {
          v84[0] = *(_DWORD *)(v13 + 772);
          if (v84[0])
          {
            uint64_t v14 = *(void *)(a1 + 8);
            if (*(void *)v14) {
              (*(void (**)(uint64_t, uint64_t, unsigned int *))(*(void *)v14 + 80))(v14, 34, v84);
            }
          }
        }
        if (*(unsigned char *)(a1 + 63)) {
          uint64_t v4 = 0;
        }
        else {
          uint64_t v4 = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 0, 1, 10);
        }
        v84[0] = 0;
        uint64_t v15 = *(void *)(a1 + 8);
        if (*(void *)v15) {
          (*(void (**)(uint64_t, uint64_t, unsigned int *))(*(void *)v15 + 80))(v15, 34, v84);
        }
        if (v4) {
          goto LABEL_47;
        }
      }
      *(unsigned char *)(a1 + 64) = 1;
      if (*(int *)(a1 + 40) < 1 || (uint64_t v78 = **(void **)(a1 + 48)) == 0)
      {
        uint64_t v4 = sub_1B0D10A2C(a1, 0, &v78);
        if (v4) {
          goto LABEL_41;
        }
      }
      if (!sub_1B0C8F1F4(a1, a2))
      {
        uint64_t v4 = 0;
        int v7 = 0;
        goto LABEL_41;
      }
      uint64_t v83 = 0;
      int v82 = 0;
      uint64_t v9 = *(void *)(a1 + 8);
      if (*(void *)v9) {
        (*(void (**)(uint64_t, uint64_t, int *))(*(void *)v9 + 80))(v9, 34, &v82);
      }
      int v10 = *(unsigned __int8 *)(a1 + 65);
      uint64_t v11 = (v10 + 1);
      uint64_t v12 = (2 - v10);
      if (!*(unsigned char *)(a1 + 63))
      {
        uint64_t v4 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), v11, v12, 10);
        if (v4) {
          goto LABEL_40;
        }
      }
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      uint64_t v4 = (*(uint64_t (**)(void, uint64_t *))(**(void **)(a1 + 16) + 48))(*(void *)(a1 + 16), &v83);
      if (v4) {
        goto LABEL_23;
      }
      if (v83 < 33) {
        goto LABEL_67;
      }
      uint64_t v4 = (*(uint64_t (**)(void, unsigned int *, uint64_t, void))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), v84, 32, 0);
      if (v4) {
        goto LABEL_23;
      }
      if (((LOBYTE(v84[0]) << 24) | (BYTE1(v84[0]) << 16) | (BYTE2(v84[0]) << 8) | HIBYTE(v84[0]) & 0xFE) != 0x377F0682) {
        goto LABEL_67;
      }
      unsigned int v17 = (v85 << 24) | (v86 << 16);
      int v18 = v87;
      uint64_t v19 = v17 | v88 | (v87 << 8);
      if ((v19 & (v19 - 1)) != 0
        || (v19 - 65537) < 0xFFFF01FF
        || (int v20 = HIBYTE(v84[0]) & 1,
            *(unsigned char *)(a1 + 85) = v20,
            *(_DWORD *)(a1 + 56) = v19,
            *(_DWORD *)(a1 + 136) = bswap32(v89),
            *(void *)(a1 + 104) = v90,
            sub_1B0D10334(v20 == 0, v84, 24, 0, (_DWORD *)(a1 + 96)),
            *(_DWORD *)(a1 + 96) != bswap32(v91))
        || *(_DWORD *)(a1 + 100) != bswap32(v92))
      {
LABEL_67:
        uint64_t v21 = 0;
        goto LABEL_68;
      }
      if (bswap32(v84[1]) != 3007000)
      {
        uint64_t v4 = sub_1B0D06D2C(73301);
        goto LABEL_23;
      }
      if (sqlite3_initialize()
        || (uint64_t v71 = (v19 + 24), (v73 = (unsigned int *)sub_1B0C7FC94(v71 + 0x8000)) == 0))
      {
        uint64_t v4 = 7;
        goto LABEL_23;
      }
      unsigned int v29 = 0;
      uint64_t v30 = 0;
      int v31 = v18 << 8;
      uint64_t v32 = (v19 + 24);
      uint64_t v69 = v73 + 6;
      int32x2_t v33 = (char *)v73 + v19 + 24;
      int v63 = v31 | HIWORD(v17);
      uint64_t v67 = (uint64_t)v73 + v19 + 24;
      unint64_t v68 = ((v83 - 32) / v71);
      unint64_t v65 = ((unint64_t)(((v83 - 32) / v71) + 4096) + 0xFFFFFFFF021) >> 12;
      unint64_t v66 = (unint64_t)v73 + v19 + 32792;
      uint64_t v62 = (uint64_t)v73 + v19 + 32;
      long long v76 = 0u;
      uint64_t v72 = v33;
      while (1)
      {
        unint64_t v34 = v29 + 4062;
        if (v34 >= v68) {
          unint64_t v34 = v68;
        }
        unint64_t v74 = v34;
        uint64_t v81 = 0;
        unint64_t v35 = (v30 << 12) | 0xFDEu;
        if (v68 < v35) {
          unint64_t v35 = v68;
        }
        unint64_t v77 = v35;
        unsigned int v75 = v29;
        if (*(_DWORD *)(a1 + 40) > (int)v30
          && (uint64_t v36 = *(void *)(a1 + 48), v37 = *(void *)(v36 + 8 * (int)v30), (v81 = v37) != 0))
        {
          uint64_t v4 = 0;
        }
        else
        {
          int v38 = v30;
          uint64_t v4 = sub_1B0D10A2C(a1, v30, &v81);
          uint64_t v37 = v81;
          if (!v81) {
            goto LABEL_156;
          }
          uint64_t v36 = *(void *)(a1 + 48);
          LODWORD(v30) = v38;
          int32x2_t v33 = v72;
        }
        if (v30) {
          unint64_t v39 = ((v30 << 12) - 33);
        }
        else {
          unint64_t v39 = 1;
        }
        *(void *)(v36 + 8 * v30) = v33;
        if (v39 > v77)
        {
          BOOL v40 = 1;
          goto LABEL_117;
        }
        int v64 = v30;
        int v80 = 0;
        int v79 = 0;
        uint64_t v41 = (*(uint64_t (**)(void, unsigned int *, uint64_t, unint64_t))(**(void **)(a1 + 16)
                                                                                           + 16))(*(void *)(a1 + 16), v73, v32, (v39 - 1) * v32 + 32);
        if (v41) {
          break;
        }
        if (!sub_1B0D10B8C(a1, (unsigned int *)&v80, &v79, v69, (uint64_t)v73))
        {
          BOOL v40 = 0;
          uint64_t v4 = 0;
          goto LABEL_116;
        }
        BOOL v70 = 0;
        unint64_t v57 = v32 * (unint64_t)v39 + 32;
        while (1)
        {
          uint64_t v58 = sub_1B0C8F47C(a1, v39, v80);
          if (v58)
          {
            uint64_t v4 = v58;
            goto LABEL_153;
          }
          int v59 = v79;
          long long v60 = v76;
          if (v79)
          {
            *(_DWORD *)(a1 + 88) = v39;
            *(_DWORD *)(a1 + 92) = v59;
            *(_WORD *)(a1 + 86) = v63;
            *(void *)&long long v60 = *(void *)(a1 + 96);
          }
          long long v76 = v60;
          BOOL v70 = v39 >= v77;
          if (v74 == v39) {
            break;
          }
          int v80 = 0;
          int v79 = 0;
          uint64_t v32 = v71;
          uint64_t v61 = (*(uint64_t (**)(void, unsigned int *, uint64_t, unint64_t))(**(void **)(a1 + 16)
                                                                                             + 16))(*(void *)(a1 + 16), v73, v71, v57);
          if (v61)
          {
            uint64_t v4 = v61;
            BOOL v40 = v39 >= v77;
            goto LABEL_116;
          }
          v57 += v71;
          ++v39;
          if (!sub_1B0D10B8C(a1, (unsigned int *)&v80, &v79, v69, (uint64_t)v73))
          {
            uint64_t v4 = 0;
LABEL_153:
            uint64_t v32 = v71;
            BOOL v40 = v70;
            goto LABEL_116;
          }
        }
        uint64_t v4 = 0;
        uint64_t v32 = v71;
        int32x2_t v33 = v72;
        unsigned int v29 = v75;
        LODWORD(v30) = v64;
        BOOL v40 = v39 >= v77;
LABEL_117:
        *(void *)(*(void *)(a1 + 48) + 8 * v30) = v37;
        uint64_t v42 = 34;
        if (v30) {
          uint64_t v42 = 0;
        }
        uint64_t v43 = 4 * v42;
        uint64_t v44 = (int32x2_t *)(v37 + 4 * v42);
        if ((unint64_t)v44 < v66 && v67 + 4 * v42 < (unint64_t)(v37 + 0x8000)) {
          goto LABEL_138;
        }
        uint64_t v46 = 0x2000 - v42;
        uint64_t v47 = (0x2000 - v42) & 0x3FFC;
        v42 += v47;
        int v48 = v44 + 1;
        uint64_t v49 = (int32x2_t *)(v62 + v43);
        uint64_t v50 = v47;
        do
        {
          int32x2_t v52 = v49[-1];
          int32x2_t v51 = *v49;
          int8x8_t v53 = vmvn_s8((int8x8_t)vceq_s32(v48[-1], v52));
          if (v53.i8[0]) {
            v48[-1].i32[0] = v52.i32[0];
          }
          if (v53.i8[4]) {
            v48[-1].i32[1] = v52.i32[1];
          }
          int8x8_t v54 = vmvn_s8((int8x8_t)vceq_s32(*v48, v51));
          if (v54.i8[0]) {
            v48->i32[0] = v51.i32[0];
          }
          if (v54.i8[4]) {
            v48->i32[1] = v51.i32[1];
          }
          v48 += 2;
          v49 += 2;
          v50 -= 4;
        }
        while (v50);
        if (v46 != v47)
        {
LABEL_138:
          uint64_t v55 = 4 * v42;
          do
          {
            int v56 = *(_DWORD *)&v33[v55];
            if (*(_DWORD *)(v37 + v55) != v56) {
              *(_DWORD *)(v37 + v55) = v56;
            }
            v55 += 4;
          }
          while (v55 != 0x8000);
        }
        if (v40)
        {
          uint64_t v30 = (v30 + 1);
          v29 += 4096;
          if (v30 <= v65) {
            continue;
          }
        }
LABEL_156:
        sqlite3_free(v73);
        uint64_t v21 = v76;
        if (!v4)
        {
LABEL_68:
          *(void *)(a1 + 96) = v21;
          __n128 v22 = sub_1B0C8F600(a1);
          BOOL v23 = **(_DWORD ***)(a1 + 48);
          v23[24] = 0;
          v23[32] = *(_DWORD *)(a1 + 88);
          v23[25] = 0;
          if (*(unsigned char *)(a1 + 63)) {
            goto LABEL_69;
          }
          uint64_t v25 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, __n128))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 4, 1, 10, v22);
          if (v25 != 5)
          {
            uint64_t v4 = v25;
            if (v25) {
              goto LABEL_23;
            }
LABEL_69:
            int v24 = *(_DWORD *)(a1 + 88);
            if (!v24) {
              int v24 = -1;
            }
            v23[26] = v24;
            if (!*(unsigned char *)(a1 + 63))
            {
              (*(void (**)(void, uint64_t, uint64_t, uint64_t, __n128))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 4, 1, 9, v22);
              goto LABEL_76;
            }
LABEL_77:
            v23[27] = -1;
            if (!*(unsigned char *)(a1 + 63))
            {
              (*(void (**)(void, uint64_t, uint64_t, uint64_t, __n128))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 5, 1, 9, v22);
              goto LABEL_79;
            }
            goto LABEL_80;
          }
LABEL_76:
          if (*(unsigned char *)(a1 + 63)) {
            goto LABEL_77;
          }
          uint64_t v26 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 5, 1, 10);
          if (v26 != 5)
          {
            uint64_t v4 = v26;
            if (v26) {
              goto LABEL_23;
            }
            goto LABEL_77;
          }
LABEL_79:
          if (*(unsigned char *)(a1 + 63))
          {
LABEL_80:
            v23[28] = -1;
            if (!*(unsigned char *)(a1 + 63))
            {
              (*(void (**)(void, uint64_t, uint64_t, uint64_t, __n128))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 6, 1, 9, v22);
              goto LABEL_82;
            }
            goto LABEL_83;
          }
          uint64_t v27 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 6, 1, 10);
          if (v27 != 5)
          {
            uint64_t v4 = v27;
            if (v27) {
              goto LABEL_23;
            }
            goto LABEL_80;
          }
LABEL_82:
          if (*(unsigned char *)(a1 + 63))
          {
LABEL_83:
            v23[29] = -1;
            if (!*(unsigned char *)(a1 + 63)) {
              (*(void (**)(void, uint64_t, uint64_t, uint64_t, __n128))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 7, 1, 9, v22);
            }
            uint64_t v4 = 0;
          }
          else
          {
            uint64_t v28 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 7, 1, 10);
            uint64_t v4 = v28;
            if (v28 != 5)
            {
              if (v28) {
                goto LABEL_23;
              }
              goto LABEL_83;
            }
          }
          if (*(_DWORD *)(a1 + 92)) {
            sqlite3_log(283, "recovered %d frames from WAL file %s", *(_DWORD *)(a1 + 88), *(const char **)(a1 + 128));
          }
        }
LABEL_23:
        if (!*(unsigned char *)(a1 + 63)) {
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), v11, v12, 9);
        }
LABEL_40:
        int v7 = 1;
        *a2 = 1;
LABEL_41:
        if (!v8)
        {
          *(unsigned char *)(a1 + 64) = 0;
          if (!*(unsigned char *)(a1 + 63)) {
            (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 0, 1, 9);
          }
        }
        if (!v7)
        {
LABEL_45:
          if (*(_DWORD *)(a1 + 72) != 3007000) {
            uint64_t v4 = sub_1B0D06D2C(74586);
          }
        }
        goto LABEL_47;
      }
      uint64_t v4 = v41;
      BOOL v40 = 0;
LABEL_116:
      unsigned int v29 = v75;
      LODWORD(v30) = v64;
      int32x2_t v33 = v72;
      goto LABEL_117;
    }
    if (!*(unsigned char *)(a1 + 63))
    {
      uint64_t v4 = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 0, 1, 6);
      if (v4) {
        goto LABEL_47;
      }
      if (!*(unsigned char *)(a1 + 63))
      {
        (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), 0, 1, 5);
        uint64_t v4 = 264;
        goto LABEL_47;
      }
    }
    uint64_t v4 = 264;
  }
LABEL_47:
  if (*(unsigned char *)(a1 + 70))
  {
    if (v4)
    {
      sub_1B0D108CC(a1);
      *(unsigned char *)(a1 + 70) = 0;
      if (v4 == 522) {
        uint64_t v4 = 0xFFFFFFFFLL;
      }
      else {
        uint64_t v4 = v4;
      }
    }
    *(unsigned char *)(a1 + 63) = 0;
  }
  return v4;
}

uint64_t sub_1B0C8E1B8(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = a1;
    if (!a2)
    {
      uint64_t v5 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v3);
        --qword_1EB220150;
        off_1EB21C9E8(v3);
        uint64_t v3 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          return v3;
        }
        uint64_t v5 = &xmmword_1EB21CA50;
      }
      (*v5)(v3);
      return 0;
    }
    if ((unint64_t)a2 > 0x7FFFFEFF) {
      return 0;
    }
    int v6 = off_1EB21C9F8(a1);
    uint64_t v7 = unk_1EB21CA00(a2);
    uint64_t v8 = (v7 - v6);
    if (v7 == v6) {
      return v3;
    }
    uint64_t v9 = v7;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      if (qword_1EB220180 < a2) {
        qword_1EB220180 = a2;
      }
      if ((int)v8 < 1) {
        goto LABEL_23;
      }
      uint64_t v10 = qword_1EB220108;
      if (qword_1EB220108 < *((void *)&xmmword_1EB2201B0 + 1) - v8) {
        goto LABEL_23;
      }
      if (*((uint64_t *)&xmmword_1EB2201B0 + 1) >= 1)
      {
        if ((void)xmmword_1EB2201B0)
        {
          xmmword_1EB21CA50(xmmword_1EB2201B0);
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
        }
      }
      if (qword_1EB2201C0 < 1 || v10 < qword_1EB2201C0 - v8)
      {
LABEL_23:
        uint64_t v11 = off_1EB21C9F0(v3, v9);
        uint64_t v3 = v11;
        if (v11)
        {
          uint64_t v12 = qword_1EB220108 + (int)(off_1EB21C9F8(v11) - v6);
          qword_1EB220108 = v12;
          if (v12 > qword_1EB220158) {
            qword_1EB220158 = v12;
          }
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA50(xmmword_1EB2201B0);
        }
        return v3;
      }
      if (!(void)xmmword_1EB2201B0) {
        return 0;
      }
      xmmword_1EB21CA50(xmmword_1EB2201B0);
      return 0;
    }
    uint64_t v13 = off_1EB21C9F0;
    return v13(v3, v7);
  }
  else
  {
    return sub_1B0C7FC94(a2);
  }
}

uint64_t sub_1B0C8E44C(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  uint64_t v110 = *MEMORY[0x1E4F143B8];
  int v10 = off_1EC5265E0();
  if (v10 < 0x8000) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = v10 >> 15;
  }
  if (*(_DWORD *)(a1 + 160)) {
    goto LABEL_5;
  }
  uint64_t v14 = *(uint64_t **)(a1 + 64);
  if (v14)
  {
    if (*(_DWORD *)(*v14 + 168))
    {
LABEL_5:
      sqlite3_log(27, "denying shm read from invalidated fd %d", *(_DWORD *)(a1 + 24));
      return 6922;
    }
    goto LABEL_9;
  }
  if (sqlite3_initialize()) {
    return 7;
  }
  BOOL v23 = (uint64_t *)sub_1B0C7FC94(24);
  if (!v23) {
    return 7;
  }
  int v24 = v23;
  *BOOL v23 = 0;
  v23[1] = 0;
  v23[2] = 0;
  uint64_t v25 = &qword_1EB21FB68[147];
  if (qword_1EB2201D0)
  {
    xmmword_1EB21CA40(qword_1EB2201D0);
    uint64_t v25 = &qword_1EB21FB68[147];
  }
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v27 = *(void *)(v26 + 56);
  if (v27)
  {
    uint64_t v12 = 0;
LABEL_27:
    *int v24 = v27;
    ++*(_DWORD *)(v27 + 48);
    *(void *)(a1 + 64) = v24;
    uint64_t v28 = v25[58];
    if (v28) {
      xmmword_1EB21CA50(v28);
    }
    uint64_t v29 = *(void *)(v27 + 8);
    if (v29)
    {
      xmmword_1EB21CA40(v29);
      uint64_t v30 = *(void *)(v27 + 8);
      v24[1] = *(void *)(v27 + 56);
      *(void *)(v27 + 56) = v24;
      if (!v30) {
        goto LABEL_94;
      }
      goto LABEL_93;
    }
    v24[1] = *(void *)(v27 + 56);
    *(void *)(v27 + 56) = v24;
    goto LABEL_94;
  }
  long long v103 = 0u;
  long long v104 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v96 = 0u;
  int v31 = *(const char **)(a1 + 56);
  if (off_1EC526400(*(unsigned int *)(a1 + 24), &v96))
  {
    *(_DWORD *)(a1 + 32) = *__error();
    uint64_t v12 = 1802;
    goto LABEL_86;
  }
  if (*(_UNKNOWN **)a1 == &unk_1F09A5320)
  {
    uint64_t v54 = *(void *)(a1 + 40);
    uint64_t v55 = *(uint64_t **)(v54 + 16);
    if (!v55 || (v56 = *v55, *(int *)v56 < 2) || !*(void *)(v56 + 104) || (int v31 = *(const char **)(v54 + 24)) == 0)
    {
      uint64_t v12 = sub_1B0D06D2C(46640);
      goto LABEL_86;
    }
  }
  int v53 = strlen(v31);
  if (sqlite3_initialize() || (v92 = v53 + 182, v94 = v53, (uint64_t v58 = (void *)sub_1B0C7FC94(v92)) == 0))
  {
LABEL_80:
    uint64_t v12 = 7;
    goto LABEL_86;
  }
  uint64_t v27 = (uint64_t)v58;
  bzero(v58, v92);
  *(void *)(v27 + 16) = v27 + 176;
  int v59 = v94 + 6;
  uint64_t v95 = (char *)(v27 + 176);
  sqlite3_snprintf(v59, (char *)(v27 + 176), "%s-shm", v31);
  *(_DWORD *)(v27 + 24) = -1;
  uint64_t v60 = *(void *)(a1 + 16);
  *(void *)(v60 + 56) = v27;
  *(void *)uint64_t v27 = v60;
  if ((_BYTE)word_1EB21C9C4)
  {
    uint64_t v61 = sqlite3_initialize();
    if (v61)
    {
      *(void *)(v27 + 8) = 0;
      goto LABEL_80;
    }
    uint64_t v67 = qword_1EB21CA30(v61);
    *(void *)(v27 + 8) = v67;
    if (!v67) {
      goto LABEL_80;
    }
    uint64_t v68 = sqlite3_initialize();
    if (v68)
    {
      uint64_t v69 = 0;
LABEL_113:
      *(void *)(v27 + 8 * v69 + 64) = 0;
      goto LABEL_80;
    }
    uint64_t v70 = qword_1EB21CA30(v68);
    *(void *)(v27 + 64) = v70;
    if (!v70) {
      goto LABEL_80;
    }
    uint64_t v71 = sqlite3_initialize();
    if (v71)
    {
      uint64_t v69 = 1;
      goto LABEL_113;
    }
    uint64_t v72 = qword_1EB21CA30(v71);
    *(void *)(v27 + 72) = v72;
    if (!v72) {
      goto LABEL_80;
    }
    uint64_t v73 = sqlite3_initialize();
    if (v73)
    {
      uint64_t v69 = 2;
      goto LABEL_113;
    }
    uint64_t v74 = qword_1EB21CA30(v73);
    *(void *)(v27 + 80) = v74;
    if (!v74) {
      goto LABEL_80;
    }
    uint64_t v75 = sqlite3_initialize();
    if (v75)
    {
      uint64_t v69 = 3;
      goto LABEL_113;
    }
    uint64_t v76 = qword_1EB21CA30(v75);
    *(void *)(v27 + 88) = v76;
    if (!v76) {
      goto LABEL_80;
    }
    uint64_t v77 = sqlite3_initialize();
    if (v77)
    {
      uint64_t v69 = 4;
      goto LABEL_113;
    }
    uint64_t v78 = qword_1EB21CA30(v77);
    *(void *)(v27 + 96) = v78;
    if (!v78) {
      goto LABEL_80;
    }
    uint64_t v79 = sqlite3_initialize();
    if (v79)
    {
      uint64_t v69 = 5;
      goto LABEL_113;
    }
    uint64_t v80 = qword_1EB21CA30(v79);
    *(void *)(v27 + 104) = v80;
    if (!v80) {
      goto LABEL_80;
    }
    uint64_t v81 = sqlite3_initialize();
    if (v81)
    {
      uint64_t v69 = 6;
      goto LABEL_113;
    }
    uint64_t v82 = qword_1EB21CA30(v81);
    *(void *)(v27 + 112) = v82;
    if (!v82) {
      goto LABEL_80;
    }
    uint64_t v83 = sqlite3_initialize();
    if (v83)
    {
      uint64_t v69 = 7;
      goto LABEL_113;
    }
    uint64_t v84 = qword_1EB21CA30(v83);
    *(void *)(v27 + 120) = v84;
    if (!v84) {
      goto LABEL_80;
    }
  }
  if (*(unsigned char *)(v26 + 33))
  {
    uint64_t v12 = 0;
LABEL_139:
    uint64_t v25 = qword_1EB21FB68 + 1176;
    goto LABEL_27;
  }
  int v85 = *(_DWORD *)(a1 + 120) & 0x20000100;
  int v86 = dword_1B0DE8CB4[((unint64_t)*(unsigned int *)(a1 + 124) >> 20) & 7];
  if (off_1EC5263B8(v95, 6) && (*__error() == 1 || *__error() == 13))
  {
    *(_DWORD *)(v27 + 24) = -1;
  }
  else
  {
    if (sqlite3_uri_BOOLean(*(const char **)(a1 + 56), "readonly_shm", 0))
    {
      uint64_t v87 = *(unsigned int *)(v27 + 24);
    }
    else
    {
      uint64_t v87 = sub_1B0D06D40(v95, v85 | 0x202u, WORD2(v96) & 0x1FF, v86);
      *(_DWORD *)(v27 + 24) = v87;
    }
    if ((v87 & 0x80000000) == 0) {
      goto LABEL_150;
    }
  }
  uint64_t v87 = sub_1B0D06D40(v95, v85, WORD2(v96) & 0x1FF, v86);
  *(_DWORD *)(v27 + 24) = v87;
  if ((v87 & 0x80000000) != 0)
  {
    if (*__error() == 1)
    {
      uint64_t v12 = 23;
      sub_1B0D072C0(23, "open", v95, 46711);
    }
    else
    {
      uint64_t v12 = sub_1B0D06D2C(46713);
      uint64_t v90 = __error();
      sub_1B0D06C64(v12, "open", v95, *v90, 46713);
    }
    goto LABEL_86;
  }
  *(unsigned char *)(v27 + 34) = 1;
LABEL_150:
  if ((*(_WORD *)(a1 + 30) & 2) == 0)
  {
    uint64_t v88 = sub_1B0D0B87C(v87, *(_DWORD *)(a1 + 124) & 0x700000, 1);
    uint64_t v12 = v88;
    if (v88 == 10)
    {
      *(_DWORD *)(a1 + 32) = *__error();
    }
    else if (!v88)
    {
      uint64_t v87 = *(unsigned int *)(v27 + 24);
      goto LABEL_154;
    }
    off_1EC5263A0(*(unsigned int *)(v27 + 24));
    goto LABEL_86;
  }
LABEL_154:
  sub_1B0D0B7C8(v87, v97, DWORD1(v97));
  uint64_t v89 = sub_1B0D0BB7C(a1, v27);
  uint64_t v12 = v89;
  if (v89 == 1288 || !v89)
  {
    sub_1B0D0A2FC(*(_DWORD *)(v27 + 24), (NSObject **)(v27 + 160), 8);
    goto LABEL_139;
  }
LABEL_86:
  sub_1B0D0BD4C(a1);
  unint64_t v57 = (uint64_t (**)(uint64_t *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_91:
    (*v57)(v24);
    goto LABEL_92;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v24);
  --qword_1EB220150;
  off_1EB21C9E8(v24);
  int v24 = (uint64_t *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unint64_t v57 = (uint64_t (**)(uint64_t *))&xmmword_1EB21CA50;
    goto LABEL_91;
  }
LABEL_92:
  uint64_t v30 = qword_1EB2201D0;
  if (qword_1EB2201D0) {
LABEL_93:
  }
    xmmword_1EB21CA50(v30);
LABEL_94:
  if (v12) {
    return v12;
  }
  uint64_t v14 = *(uint64_t **)(a1 + 64);
LABEL_9:
  uint64_t v15 = *v14;
  uint64_t v16 = *(void *)(*v14 + 8);
  if (v16) {
    xmmword_1EB21CA40(v16);
  }
  if (*(unsigned char *)(v15 + 35))
  {
    unsigned int v17 = sub_1B0D0BB7C(a1, v15);
    if (v17) {
      goto LABEL_53;
    }
    *(unsigned char *)(v15 + 35) = 0;
  }
  int v18 = ((int)v11 + a2) / (int)v11 * v11;
  if (v18 <= *(unsigned __int16 *)(v15 + 32)) {
    goto LABEL_52;
  }
  uint64_t v19 = *(const char **)(v15 + 16);
  long long v103 = 0u;
  long long v104 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v96 = 0u;
  *(_DWORD *)(v15 + 28) = a3;
  uint64_t v20 = *(unsigned int *)(v15 + 24);
  if ((v20 & 0x80000000) != 0) {
    goto LABEL_47;
  }
  if (off_1EC526400(v20, &v96))
  {
    int v21 = *__error();
    long long v108 = 0u;
    long long v109 = 0u;
    long long v106 = 0u;
    long long v107 = 0u;
    *(_OWORD *)__strerrbuf = 0u;
    strerror_r(v21, __strerrbuf, 0x4FuLL);
    __n128 v22 = &byte_1B0DE9952;
    if (v19) {
      __n128 v22 = v19;
    }
    unsigned int v17 = 4874;
    sqlite3_log(4874, "os_unix.c:%d: (%d) %s(%s) - %s", 46858, v21, "unixShmMap-stat", v22, __strerrbuf);
    goto LABEL_53;
  }
  uint64_t v32 = v18 * a3;
  uint64_t v33 = v102;
  if ((uint64_t)v102 >= v32) {
    goto LABEL_47;
  }
  if (!a4)
  {
LABEL_52:
    unsigned int v17 = 0;
    goto LABEL_53;
  }
  if ((uint64_t)v102 < 0) {
    uint64_t v33 = v102 + 4095;
  }
  uint64_t v34 = (uint64_t)(int)(v32 + ((int)v32 < 0 ? 0xFFF : 0)) >> 12;
  unint64_t v35 = (char *)(int)(v33 >> 12);
  if ((uint64_t)v35 < v34)
  {
    uint64_t v91 = v34;
    do
    {
      uint64_t v36 = *(unsigned int *)(v15 + 24);
      uint64_t v93 = v35;
      off_t v37 = (v35 << 12) | 0xFFF;
      while (1)
      {
        int v38 = off_1EC5264A8(v36, &byte_1B0DE9952, 1uLL, v37);
        if ((v38 & 0x80000000) == 0) {
          break;
        }
        if (*__error() != 4)
        {
          if (*__error() == 28) {
            unsigned int v17 = 13;
          }
          else {
            unsigned int v17 = 4874;
          }
          goto LABEL_103;
        }
      }
      if (v38 != 1)
      {
        unsigned int v17 = 4874;
LABEL_103:
        int v62 = *__error();
        long long v108 = 0u;
        long long v109 = 0u;
        long long v106 = 0u;
        long long v107 = 0u;
        *(_OWORD *)__strerrbuf = 0u;
        strerror_r(v62, __strerrbuf, 0x4FuLL);
        int v63 = &byte_1B0DE9952;
        if (v19) {
          int v63 = v19;
        }
        sqlite3_log(v17, "os_unix.c:%d: (%d) %s(%s) - %s", 46886, v62, "unixShmMap-write", v63, __strerrbuf);
        goto LABEL_53;
      }
      unint64_t v35 = v93 + 1;
    }
    while ((uint64_t)(v93 + 1) < v91);
  }
LABEL_47:
  uint64_t v39 = *(void *)(v15 + 40);
  if (sqlite3_initialize() || (uint64_t v40 = sub_1B0C8E1B8(v39, (8 * v18) & ~((8 * v18) >> 31))) == 0)
  {
    unsigned int v17 = 3082;
    goto LABEL_53;
  }
  *(void *)(v15 + 40) = v40;
  if (v18 <= *(unsigned __int16 *)(v15 + 32)) {
    goto LABEL_52;
  }
  size_t v41 = (int)v11 * a3;
  uint64_t v42 = a3;
  while ((*(_DWORD *)(v15 + 24) & 0x80000000) != 0)
  {
    if (sqlite3_initialize() || (uint64_t v49 = (void *)sub_1B0C7FC94(v41)) == 0)
    {
      unsigned int v17 = 7;
      goto LABEL_53;
    }
    uint64_t v48 = (uint64_t)v49;
    bzero(v49, v41);
LABEL_74:
    uint64_t v50 = *(unsigned __int16 *)(v15 + 32);
    if ((int)v11 >= 1)
    {
      uint64_t v51 = 8 * v50;
      uint64_t v52 = v11;
      do
      {
        *(void *)(*(void *)(v15 + 40) + v51) = v48;
        v51 += 8;
        v48 += v42;
        --v52;
      }
      while (v52);
    }
    unsigned int v17 = 0;
    unsigned __int16 v46 = v50 + v11;
    *(_WORD *)(v15 + 32) = v46;
    if (v18 <= v46) {
      goto LABEL_53;
    }
  }
  if (*(unsigned char *)(v15 + 34)) {
    uint64_t v47 = 1;
  }
  else {
    uint64_t v47 = 3;
  }
  uint64_t v48 = off_1EC526598(0, v41, v47, 1);
  if (v48 != -1) {
    goto LABEL_74;
  }
  int v64 = *(const char **)(v15 + 16);
  int v65 = *__error();
  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  *(_OWORD *)__strerrbuf = 0u;
  strerror_r(v65, __strerrbuf, 0x4FuLL);
  unint64_t v66 = &byte_1B0DE9952;
  if (v64) {
    unint64_t v66 = v64;
  }
  unsigned int v17 = 5386;
  sqlite3_log(5386, "os_unix.c:%d: (%d) %s(%s) - %s", 46913, v65, "mmap", v66, __strerrbuf);
LABEL_53:
  if (*(unsigned __int16 *)(v15 + 32) <= a2) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = *(void *)(*(void *)(v15 + 40) + 8 * a2);
  }
  *a5 = v43;
  if (v17) {
    BOOL v44 = 1;
  }
  else {
    BOOL v44 = *(unsigned char *)(v15 + 34) == 0;
  }
  if (v44) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = 8;
  }
  uint64_t v45 = *(void *)(v15 + 8);
  if (v45) {
    xmmword_1EB21CA50(v45);
  }
  return v12;
}

uint64_t sub_1B0C8EE84(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v4 = *(uint64_t **)(a1 + 64);
  if (!v4) {
    return 5130;
  }
  uint64_t v5 = *v4;
  if (!*v4) {
    return 5130;
  }
  int v8 = a2;
  int v10 = a3 + a2;
  int v11 = (1 << (a3 + a2)) + (-1 << a2);
  if (((a4 & 1) == 0 || ((unsigned __int16)v11 & (unsigned __int16)(*((_WORD *)v4 + 10) | *((_WORD *)v4 + 9))) == 0)
    && a4 != 10
    && (a4 != 6 || ((unsigned __int16)v11 & *((_WORD *)v4 + 9)) != 0))
  {
    return 0;
  }
  __int16 v29 = (1 << (a3 + a2)) + (-1 << a2);
  LODWORD(v14) = a2;
  if (a3 >= 1)
  {
    uint64_t v14 = a2;
    int v27 = a3 + a2;
    while (1)
    {
      uint64_t v15 = *(void *)(v5 + 64 + 8 * v14);
      if (a4 == 10)
      {
        if (v15)
        {
          uint64_t v16 = ((uint64_t (*)(void))*(&xmmword_1EB21CA40 + 1))();
          if (v16)
          {
            uint64_t v12 = v16;
            int v8 = a2;
            if ((int)v14 > a2) {
              goto LABEL_59;
            }
            return v12;
          }
        }
      }
      else if (v15)
      {
        xmmword_1EB21CA40(v15);
      }
      if (++v14 >= v10)
      {
        int v8 = a2;
        int v10 = v27;
        break;
      }
    }
  }
  uint64_t v17 = v5 + 128;
  if ((a4 & 1) == 0)
  {
    if ((a4 & 4) == 0)
    {
      if (a3 >= 1)
      {
        uint64_t v18 = v8;
        while (!*(_DWORD *)(v17 + 4 * v18))
        {
          if (++v18 >= v10) {
            goto LABEL_27;
          }
        }
LABEL_52:
        uint64_t v12 = 5;
        if ((int)v14 > v8) {
          goto LABEL_59;
        }
        return v12;
      }
LABEL_27:
      uint64_t v19 = sub_1B0D0C0F0(a1, 3, v8 + 120, a3);
      if (!v19)
      {
        *((_WORD *)v4 + 10) |= v29;
        if (a3 >= 1)
        {
          if (v10 <= v8 + 1) {
            int v20 = v8 + 1;
          }
          else {
            int v20 = v10;
          }
          memset((void *)(v5 + 4 * v8 + 128), 255, 4 * (v20 + ~v8) + 4);
        }
        uint64_t v12 = 0;
        if ((int)v14 <= v8) {
          return v12;
        }
LABEL_59:
        uint64_t v25 = (int)v14;
        do
        {
          uint64_t v26 = *(void *)(v5 + 56 + 8 * v25);
          if (v26) {
            xmmword_1EB21CA50(v26);
          }
          --v25;
        }
        while (v25 > v8);
        return v12;
      }
LABEL_58:
      uint64_t v12 = v19;
      if ((int)v14 <= v8) {
        return v12;
      }
      goto LABEL_59;
    }
    int v24 = *(_DWORD *)(v17 + 4 * v8);
    if (v24 < 0) {
      goto LABEL_52;
    }
    if (!v24)
    {
      uint64_t v19 = sub_1B0D0C0F0(a1, 1, v8 + 120, a3);
      if (v19) {
        goto LABEL_58;
      }
      int v24 = *(_DWORD *)(v17 + 4 * v8);
    }
    uint64_t v12 = 0;
    *((_WORD *)v4 + 9) |= v29;
    *(_DWORD *)(v17 + 4 * v8) = v24 + 1;
    if ((int)v14 <= v8) {
      return v12;
    }
    goto LABEL_59;
  }
  if ((a4 & 4) != 0)
  {
    int v21 = *(_DWORD *)(v17 + 4 * v8);
    if (v21 >= 2)
    {
      uint64_t v12 = 0;
      *(_DWORD *)(v17 + 4 * v8) = v21 - 1;
      *((_WORD *)v4 + 9) &= ~v29;
      if ((int)v14 <= v8) {
        return v12;
      }
      goto LABEL_59;
    }
  }
  uint64_t v22 = *(unsigned int *)(*(void *)(*(void *)(a1 + 16) + 56) + 24);
  if ((v22 & 0x80000000) != 0)
  {
    uint64_t v23 = a3;
  }
  else
  {
    uint64_t v23 = a3;
    v30[0] = v8 + 120;
    v30[1] = a3;
    v30[2] = 0x200000000;
    if (sub_1B0D077B8(v22, (uint64_t)v30, a1) == -1)
    {
      if (*(_DWORD *)(a1 + 132)) {
        uint64_t v12 = 773;
      }
      else {
        uint64_t v12 = 5;
      }
      if ((int)v14 > v8) {
        goto LABEL_59;
      }
      return v12;
    }
  }
  bzero((void *)(v17 + 4 * v8), 4 * v23);
  uint64_t v12 = 0;
  *((_WORD *)v4 + 9) &= ~v29;
  *((_WORD *)v4 + 10) &= ~v29;
  if ((int)v14 > v8) {
    goto LABEL_59;
  }
  return v12;
}

uint64_t sub_1B0C8F1F4(uint64_t a1, _DWORD *a2)
{
  int v2 = **(long long ***)(a1 + 48);
  if (!v2) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    if (*(void *)v5)
    {
      if (*(uint64_t (**)(uint64_t, char *, signed int, uint64_t))(*(void *)v5 + 16) == sub_1B0C7D268
        && *(_DWORD *)(v5 + 128) <= 3u)
      {
        if (*(_DWORD *)(v5 + 160)) {
          goto LABEL_40;
        }
        uint64_t v16 = *(void *)(v5 + 64);
        if (v16)
        {
          if (*(_DWORD *)(*(void *)v16 + 168)) {
            goto LABEL_40;
          }
        }
      }
    }
  }
  long long v18 = *v2;
  long long v19 = v2[1];
  long long v20 = v2[2];
  if (*(unsigned char *)(a1 + 63) != 2)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 120))(v5);
    uint64_t v5 = *(void *)(a1 + 8);
  }
  if (v5
    && *(void *)v5
    && *(uint64_t (**)(uint64_t, char *, signed int, uint64_t))(*(void *)v5 + 16) == sub_1B0C7D268
    && *(_DWORD *)(v5 + 128) <= 3u
    && (*(_DWORD *)(v5 + 160) || (uint64_t v17 = *(void *)(v5 + 64)) != 0 && *(_DWORD *)(*(void *)v17 + 168)))
  {
LABEL_40:
    sqlite3_log(27, "denying shm read from invalidated fd %d", *(_DWORD *)(v5 + 24));
    return 6922;
  }
  else
  {
    uint64_t result = 1;
    if (!((unint64_t)v18 ^ *((void *)v2 + 6) | *((void *)&v18 + 1) ^ *((void *)v2 + 7) | (unint64_t)v19 ^ *((void *)v2 + 8) | *((void *)&v19 + 1) ^ *((void *)v2 + 9) | (unint64_t)v20 ^ *((void *)v2 + 10) | *((void *)&v20 + 1) ^ *((void *)v2 + 11)))
    {
      if (BYTE12(v18))
      {
        int v7 = DWORD1(v18) + v18 + v18 + DWORD2(v18);
        int v8 = HIDWORD(v18) + DWORD1(v18) + v18 + v7;
        int v9 = v8 + v7 + v19;
        int v10 = DWORD1(v19) + v8 + v9;
        if (__PAIR64__(DWORD1(v20)+ HIDWORD(v19)+ v10+ v10+ v9+ DWORD2(v19)+ HIDWORD(v19)+ v10+ v10+ v9+ DWORD2(v19)+ v10+ v9+ DWORD2(v19)+ (int)v20, HIDWORD(v19) + v10 + v10 + v9 + DWORD2(v19) + v10 + v9 + DWORD2(v19) + (int)v20) == *((void *)&v20 + 1))
        {
          BOOL v15 = *(void *)(a1 + 72) == (void)v18
             && *(void *)(a1 + 80) == *((void *)&v18 + 1)
             && *(void *)(a1 + 88) == (void)v19
             && *(void *)(a1 + 96) == *((void *)&v19 + 1)
             && *(void *)(a1 + 104) == (void)v20
             && *(void *)(a1 + 112) == *((void *)&v20 + 1);
          uint64_t result = 0;
          if (!v15)
          {
            *a2 = 1;
            *(_OWORD *)(a1 + 72) = v18;
            *(_OWORD *)(a1 + 88) = v19;
            *(_OWORD *)(a1 + 104) = v20;
            *(_DWORD *)(a1 + 56) = (*(unsigned __int16 *)(a1 + 86) | (*(unsigned __int16 *)(a1 + 86) << 16)) & 0x1FE00;
          }
        }
      }
    }
  }
  return result;
}

void sub_1B0C8F474()
{
}

uint64_t sub_1B0C8F47C(uint64_t a1, int a2, int a3)
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  unint64_t v6 = ((unint64_t)(a2 + 4096) + 0xFFFFFFFF021) >> 12;
  if (*(_DWORD *)(a1 + 40) > (int)v6 && (v7 = *(void *)(*(void *)(a1 + 48) + 8 * (int)v6), (uint64_t v17 = v7) != 0))
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = sub_1B0D10A2C(a1, ((unint64_t)(a2 + 4096) + 0xFFFFFFFF021) >> 12, &v17);
    uint64_t v7 = v17;
    if (!v17)
    {
      if (result <= 1) {
        return 1;
      }
      else {
        return result;
      }
    }
  }
  uint64_t v9 = 34;
  if (v6)
  {
    uint64_t v9 = 0;
    int v10 = (v6 << 12) - 34;
  }
  else
  {
    int v10 = 0;
  }
  LODWORD(v18) = v10;
  if (!result)
  {
    int v11 = (void *)(v7 + 4 * v9);
    int v12 = a2 - v10 - 1;
    if (a2 - v10 == 1) {
      bzero(v11, (unint64_t)(0x800000000000 - (v9 << 34)) >> 32);
    }
    uint64_t v13 = v7 + 0x4000;
    if (*((_DWORD *)v11 + v12)) {
      sub_1B0D10C78(a1);
    }
    uint64_t v14 = (383 * (_WORD)a3) & 0x1FFF;
    if (*(_WORD *)(v13 + 2 * v14))
    {
      int v15 = ~a2 + v10;
      while (!__CFADD__(v15++, 1))
      {
        uint64_t v14 = ((_WORD)v14 + 1) & 0x1FFF;
        if (!*(_WORD *)(v13 + 2 * v14)) {
          goto LABEL_17;
        }
      }
      return sub_1B0D1045C(73164);
    }
    else
    {
LABEL_17:
      uint64_t result = 0;
      *((_DWORD *)v11 + v12) = a3;
      *(_WORD *)(v13 + 2 * v14) = a2 - v10;
    }
  }
  return result;
}

__n128 sub_1B0C8F600(uint64_t a1)
{
  *(_DWORD *)(a1 + 72) = 3007000;
  uint64_t v1 = a1 + 72;
  *(unsigned char *)(a1 + 84) = 1;
  int v2 = *(_DWORD *)(a1 + 76);
  int v3 = v2 + *(_DWORD *)(a1 + 84);
  uint64_t v4 = **(void **)(a1 + 48);
  int v5 = v2 + *(_DWORD *)(a1 + 80) + 6014000;
  int v6 = v3 + 3007000 + v5;
  int v7 = v6 + v5 + *(_DWORD *)(a1 + 88);
  int v8 = *(_DWORD *)(a1 + 92) + v6 + v7;
  int v9 = v8 + v7 + *(_DWORD *)(a1 + 96);
  int v10 = *(_DWORD *)(a1 + 100) + v8 + v9;
  int v11 = v10 + v9 + *(_DWORD *)(a1 + 104);
  int v12 = *(_DWORD *)(a1 + 108);
  *(_DWORD *)(a1 + 112) = v11;
  *(_DWORD *)(a1 + 116) = v12 + v10 + v11;
  long long v13 = *(_OWORD *)(a1 + 72);
  long long v14 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v4 + 80) = v14;
  *(_OWORD *)(v4 + 48) = v13;
  if (*(unsigned char *)(a1 + 63) != 2) {
    (*(void (**)(void))(**(void **)(a1 + 8) + 120))(*(void *)(a1 + 8));
  }
  __n128 result = *(__n128 *)v1;
  long long v16 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v4 + 32) = v16;
  *(__n128 *)uint64_t v4 = result;
  return result;
}

void sqlite3_log(int iErrCode, const char *zFormat, ...)
{
  va_start(va, zFormat);
  uint64_t v2 = *(void *)&iErrCode;
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (off_1EB21CB38 || (dword_1EB21CB84 & 1) != 0)
  {
    uint64_t v9 = 0;
    __int16 v14 = 0;
    int v10 = &v15;
    int v11 = 1536;
    uint64_t v12 = 0;
    __int16 v13 = 0;
    sqlite3_str_vappendf((sqlite3_str *)&v9, zFormat, va);
    if (v10)
    {
      *((unsigned char *)v10 + HIDWORD(v12)) = 0;
      if (v12)
      {
        if ((v13 & 0x400) == 0) {
          sub_1B0D06044(&v9);
        }
      }
    }
    if (off_1EB21CB38) {
      ((void (*)(uint64_t, uint64_t, long long *))off_1EB21CB38)(qword_1EB21CB40, v2, &v15);
    }
    if (dword_1EB21CB84)
    {
      if (qword_1EB2202F8 != -1) {
        dispatch_once(&qword_1EB2202F8, &unk_1F09A5008);
      }
      if ((void)v15 != 0x2068637573206F6ELL || *(void *)((char *)&v15 + 7) != 0x203A656C62617420)
      {
        BOOL v4 = (void)v15 == 0x6E656D6574617473 && *((void *)&v15 + 1) == 0x7374726F62612074;
        if (!v4 || v16 != 544497952)
        {
          int v6 = qword_1EB2202C8;
          os_log_type_t v7 = OS_LOG_TYPE_ERROR;
          switch((char)v2)
          {
            case 0:
            case 17:
            case 19:
            case 27:
            case 100:
            case 101:
              return;
            case 1:
            case 2:
            case 7:
            case 10:
            case 11:
            case 13:
            case 15:
            case 21:
            case 26:
              goto LABEL_24;
            case 14:
              int v6 = qword_1EB2202D0;
              goto LABEL_24;
            default:
              os_log_type_t v7 = OS_LOG_TYPE_DEFAULT;
LABEL_24:
              if (os_log_type_enabled(v6, v7))
              {
                if ((dword_1EB21CB84 & 0x20) != 0)
                {
                  int v8 = qword_1EB2202C8;
                  if (os_log_type_enabled((os_log_t)qword_1EB2202C8, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)buf = 136315138;
                    uint64_t v18 = &v15;
                    _os_log_impl(&dword_1B0C76000, v8, OS_LOG_TYPE_INFO, "%s", buf, 0xCu);
                  }
                }
                if (os_log_type_enabled(v6, v7))
                {
                  *(_DWORD *)buf = 136315138;
                  uint64_t v18 = &v15;
                  _os_log_impl(&dword_1B0C76000, v6, v7, "%s", buf, 0xCu);
                }
              }
              break;
          }
        }
      }
    }
  }
}

uint64_t sub_1B0C8F974(int a1, int a2)
{
  uint64_t result = sub_1B0C7FC94(192);
  if (result)
  {
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    if (a2 <= 16) {
      int v5 = 16;
    }
    else {
      int v5 = a2;
    }
    unsigned int v6 = (v5 + 7) & 0xFFFFFFF8;
    *(_DWORD *)uint64_t result = a1;
    *(_DWORD *)(result + 4) = v6;
    int v7 = v6 + a1;
    if (v7 <= 0x20000) {
      uint64_t v8 = 0x20000;
    }
    else {
      uint64_t v8 = v7;
    }
    unint64_t v9 = (*MEMORY[0x1E4F14AE0] + v8) & ~*MEMORY[0x1E4F14AE0];
    *(void *)(result + 8) = v9;
    unint64_t v10 = v9 / v7;
    *(_DWORD *)(result + 124) = v10;
    if ((int)v10 <= 10) {
      LODWORD(v10) = 10;
    }
    *(_DWORD *)(result + 16) = v10;
  }
  return result;
}

uint64_t sub_1B0C8FA1C(uint64_t result, int a2)
{
  if (a2 >= 0x3FFFFFFF) {
    unsigned int v2 = 0x3FFFFFFF;
  }
  else {
    unsigned int v2 = a2;
  }
  if (v2 <= *(_DWORD *)(result + 16)) {
    unsigned int v2 = *(_DWORD *)(result + 16);
  }
  int v3 = *(_DWORD *)(result + 124);
  int v4 = (int)(v2 - 1) / v3 + 1;
  uint64_t v5 = v3 * (uint64_t)v4;
  uint64_t v6 = v5 << 31 >> 31;
  if (v6 != v5 || v6 < 0)
  {
    do
    {
      do
      {
        v4 /= 2;
        uint64_t v7 = v3 * (uint64_t)v4;
        uint64_t v5 = v7 << 31 >> 31;
      }
      while (v5 != v7);
    }
    while (v5 < 0);
  }
  *(_DWORD *)(result + 128) = v4;
  *(_DWORD *)(result + 20) = v5;
  return sub_1B0D77C10(result);
}

unint64_t sub_1B0C8FA84(int *a1, unsigned int a2, int a3)
{
  v50[4] = *MEMORY[0x1E4F143B8];
  unsigned int v49 = 0;
  if (a3 == 1 && off_1E9B52208) {
    off_1E9B52208(a1);
  }
  uint64_t v6 = sub_1B0D78338((uint64_t)a1, a2, &v49);
  unint64_t v7 = v6;
  if (!a3 || v6) {
    goto LABEL_74;
  }
  if ((*((void *)a1 + 8) || *((void *)a1 + 10) || *((void *)a1 + 12) || *((void *)a1 + 14))
    && a1[7] >= a1[5])
  {
    int v8 = a1[12];
    uint64_t v9 = *(void *)&a1[4 * (((_BYTE)v8 - 1) & 3) + 16];
    if (!v9)
    {
      do
      {
        unsigned int v10 = v8++ & 3;
        uint64_t v9 = *(void *)&a1[4 * v10 + 16];
      }
      while (!v9);
      a1[12] = v8;
    }
    uint64_t v6 = sub_1B0D78338((uint64_t)a1, *(_DWORD *)(v9 - 24), 0);
    if (v6)
    {
      unint64_t v7 = v6;
      int v11 = (uint64_t *)(*((void *)a1 + 5) + 8 * (*(_DWORD *)(v6 + 16) % a1[8]));
      uint64_t v12 = *v11;
      if (*v11 != v6)
      {
        do
        {
          uint64_t v13 = v12;
          uint64_t v12 = *(void *)(v12 + 24);
        }
        while (v12 != v6);
        int v11 = (uint64_t *)(v13 + 24);
      }
      *int v11 = *(void *)(v6 + 24);
      *(void *)(v6 + 24) = 0;
      --a1[7];
      goto LABEL_53;
    }
  }
  if (a3 != 2 && a1[7] >= a1[5])
  {
LABEL_21:
    unint64_t v7 = 0;
    goto LABEL_53;
  }
  uint64_t v6 = sub_1B0D121F0(64);
  unint64_t v7 = v6;
  if (!v6) {
    goto LABEL_53;
  }
  uint64_t v14 = 0;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  v50[0] = a1 + 42;
  v50[1] = a1 + 34;
  uint64_t v48 = (uint64_t *)(a1 + 34);
  v50[2] = a1 + 38;
  v50[3] = 0;
  do
  {
    int v16 = (uint64_t *)v50[v14];
    if (v16)
    {
      uint64_t v15 = *v16;
      if (*v16 && *(unsigned __int8 *)(v15 + 34) + *(unsigned __int8 *)(v15 + 33) < a1[31]) {
        goto LABEL_51;
      }
      goto LABEL_25;
    }
    uint64_t v6 = sub_1B0C7FC94(40);
    uint64_t v15 = v6;
    if (!v6) {
      goto LABEL_25;
    }
    *(void *)(v6 + 32) = 0;
    *(_OWORD *)uint64_t v6 = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
    uint64_t v17 = 8 * a1[31];
    uint64_t v18 = (void *)sub_1B0C7FC94(v17);
    if (v18)
    {
      uint64_t v19 = v18;
      bzero(v18, v17);
      *(void *)(v15 + 16) = v19;
      uint64_t v6 = vm_allocate(*MEMORY[0x1E4F14960], (vm_address_t *)(v15 + 24), *((void *)a1 + 1), 1040187395);
      if (!v6)
      {
        *(unsigned char *)(v15 + 32) = 2;
        uint64_t v23 = *v48;
        if (*v48)
        {
          *(void *)(v23 + 8) = v15;
          *(void *)uint64_t v15 = v23;
        }
        else
        {
          *((void *)a1 + 18) = v15;
        }
        *((void *)a1 + 17) = v15;
        ++a1[33];
        goto LABEL_25;
      }
      uint64_t v20 = *(void *)(v15 + 16);
      if (!v20) {
        goto LABEL_41;
      }
      int v21 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_39;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v20);
      --qword_1EB220150;
      off_1EB21C9E8(v20);
      uint64_t v20 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        int v21 = &xmmword_1EB21CA50;
LABEL_39:
        (*v21)(v20);
      }
    }
    else
    {
      *(void *)(v15 + 16) = 0;
    }
LABEL_41:
    uint64_t v22 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_24;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v15);
    --qword_1EB220150;
    uint64_t v6 = off_1EB21C9E8(v15);
    uint64_t v15 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v22 = &xmmword_1EB21CA50;
LABEL_24:
      uint64_t v6 = (*v22)(v15);
      uint64_t v15 = 0;
    }
LABEL_25:
    ++v14;
  }
  while (v14 != 4);
  if (!v15) {
    goto LABEL_52;
  }
LABEL_51:
  uint64_t v6 = sub_1B0C90100((uint64_t)a1, v15, 0, 0);
  if (!v6)
  {
    uint64_t v39 = 0;
    uint64_t v40 = *(void *)(v15 + 16);
    while (*(void *)(v40 + 8 * v39++))
      ;
    *(void *)(v40 + 8 * v39 - 8) = v7;
    uint64_t v42 = *a1;
    uint64_t v43 = a1[1];
    uint64_t v44 = v43 + v42;
    uint64_t v45 = *(void *)(v15 + 24) + ((int)v43 + (int)v42) * ((int)v39 - 1);
    *(void *)unint64_t v7 = v45;
    *(void *)(v7 + 8) = v45 + v42;
    *(void *)(v7 + 56) = v15;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 += v44;
      if (qword_1EB220108 > qword_1EB220158) {
        qword_1EB220158 = qword_1EB220108;
      }
      uint64_t v46 = qword_1EB220150;
      uint64_t v47 = ++qword_1EB220150;
      if (v46 >= qword_1EB2201A0) {
        qword_1EB2201A0 = v47;
      }
      uint64_t v6 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0) {
        uint64_t v6 = xmmword_1EB21CA50(xmmword_1EB2201B0);
      }
    }
  }
LABEL_52:
  if (!*(void *)v7)
  {
    uint64_t v6 = sub_1B0D10ED8(v7);
    goto LABEL_21;
  }
LABEL_53:
  unsigned int v24 = a1[8];
  if (a1[7] >= v24)
  {
    unsigned int v25 = 2 * v24;
    unsigned int v26 = v25 <= 0x100 ? 256 : v25;
    uint64_t v6 = sub_1B0C7FC94(8 * v26);
    if (v6)
    {
      uint64_t v27 = v6;
      bzero((void *)v6, 8 * v26);
      uint64_t v28 = a1[8];
      if (v28)
      {
        for (uint64_t i = 0; i != v28; ++i)
        {
          uint64_t v30 = *(void *)(*((void *)a1 + 5) + 8 * i);
          if (v30)
          {
            do
            {
              uint64_t v31 = *(void *)(v30 + 24);
              uint64_t v32 = 8 * (*(_DWORD *)(v30 + 16) % v26);
              *(void *)(v30 + 24) = *(void *)(v27 + v32);
              *(void *)(v27 + v32) = v30;
              uint64_t v30 = v31;
            }
            while (v31);
          }
        }
      }
      uint64_t v33 = *((void *)a1 + 5);
      if (v33)
      {
        uint64_t v34 = &off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_70;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v33);
        --qword_1EB220150;
        uint64_t v6 = off_1EB21C9E8(v33);
        uint64_t v33 = xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          uint64_t v34 = &xmmword_1EB21CA50;
LABEL_70:
          uint64_t v6 = (*v34)(v33);
        }
      }
      *((void *)a1 + 5) = v27;
      a1[8] = v26;
    }
  }
  if (v7)
  {
    unsigned int v35 = a2 % a1[8];
    ++a1[7];
    *(_DWORD *)(v7 + 16) = a2;
    *(unsigned char *)(v7 + 33) = 4;
    *(void *)(v7 + 40) = 0;
    *(void *)(v7 + 48) = 0;
    bzero(*(void **)v7, *a1);
    bzero(*(void **)(v7 + 8), a1[1]);
    uint64_t v36 = *((void *)a1 + 5);
    uint64_t v37 = 8 * v35;
    *(void *)(v7 + 24) = *(void *)(v36 + v37);
    *(void *)(v36 + v37) = v7;
  }
LABEL_74:
  if (a3 == 1 && off_1E9B52210) {
    off_1E9B52210(v6);
  }
  if (a1[30] < a2) {
    a1[30] = a2;
  }
  if (v7) {
    *(unsigned char *)(v7 + 32) = *(unsigned char *)(v7 + 32) & 0xFE | v49 & 1;
  }
  return v7;
}

uint64_t sub_1B0C90100(uint64_t a1, uint64_t a2, int a3, _DWORD *a4)
{
  if (a4) {
    *a4 = 0;
  }
  char v8 = *(unsigned char *)(a2 + 33);
  if (!v8)
  {
    if (*(unsigned char *)(a2 + 32) == 1)
    {
      int v23 = 0;
      uint64_t result = MEMORY[0x1B3EA0450](*MEMORY[0x1E4F14960], *(void *)(a2 + 24), 0, &v23);
      if (result) {
        return result;
      }
      if (*(unsigned char *)(a1 + 184))
      {
        *(unsigned char *)(a1 + 184) = 0;
        goto LABEL_37;
      }
      if (v23 == 2)
      {
LABEL_37:
        bzero(*(void **)(a2 + 24), *(void *)(a1 + 8));
        if (*(unsigned char *)(a2 + 34))
        {
          int v21 = *(_DWORD *)(a1 + 124);
          if (v21 >= 1)
          {
            for (uint64_t i = 0; i < v21; ++i)
            {
              unint64_t v24 = *(void *)(*(void *)(a2 + 16) + 8 * i);
              if (v24)
              {
                sub_1B0D78000((int *)a1, &v24);
                int v21 = *(_DWORD *)(a1 + 124);
              }
            }
          }
        }
        if (a4) {
          *a4 = 14;
        }
        unsigned __int8 v10 = *(unsigned char *)(a2 + 33);
        if (a3 != 1) {
          *(unsigned char *)(a2 + 33) = ++v10;
        }
        goto LABEL_11;
      }
      char v8 = *(unsigned char *)(a2 + 33);
    }
    else
    {
      char v8 = 0;
    }
  }
  unsigned __int8 v10 = v8 + 1;
  *(unsigned char *)(a2 + 33) = v10;
  if (a3 == 1) {
    --*(unsigned char *)(a2 + 34);
  }
LABEL_11:
  if (v10 == 1)
  {
    sub_1B0D77EE0((void *)a1, (uint64_t *)a2);
    uint64_t v13 = (uint64_t *)(a1 + 168);
    if (*(unsigned __int8 *)(a2 + 33) + *(unsigned __int8 *)(a2 + 34) < *(_DWORD *)(a1 + 124))
    {
      uint64_t v14 = *v13;
      if (!*v13)
      {
LABEL_22:
        *(void *)(a1 + 176) = a2;
        goto LABEL_30;
      }
LABEL_18:
      *(void *)(v14 + 8) = a2;
      *(void *)a2 = v14;
LABEL_30:
      uint64_t result = 0;
      *uint64_t v13 = a2;
      *(unsigned char *)(a2 + 32) = 0;
      return result;
    }
LABEL_23:
    uint64_t v17 = *(void **)(a1 + 176);
    int v16 = (uint64_t *)(a1 + 176);
    uint64_t v15 = v17;
    if (v17)
    {
      *uint64_t v15 = a2;
      *(void *)(a2 + 8) = v15;
    }
    else
    {
      *uint64_t v13 = a2;
    }
    uint64_t v13 = v16;
    goto LABEL_30;
  }
  if (v10)
  {
    if (*(unsigned __int8 *)(a2 + 34) + v10 != *(_DWORD *)(a1 + 124)) {
      return 0;
    }
    sub_1B0D77EE0((void *)a1, (uint64_t *)a2);
    uint64_t v13 = (uint64_t *)(a1 + 168);
    if (*(unsigned __int8 *)(a2 + 33) + *(unsigned __int8 *)(a2 + 34) < *(_DWORD *)(a1 + 124))
    {
      uint64_t v14 = *v13;
      if (!*v13) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  sub_1B0D77EE0((void *)a1, (uint64_t *)a2);
  int v11 = (uint64_t *)(a1 + 136);
  if (*(unsigned __int8 *)(a2 + 33) + *(unsigned __int8 *)(a2 + 34) >= *(_DWORD *)(a1 + 124))
  {
    uint64_t v20 = *(void **)(a1 + 144);
    uint64_t v19 = (uint64_t *)(a1 + 144);
    uint64_t v18 = v20;
    if (v20)
    {
      *uint64_t v18 = a2;
      *(void *)(a2 + 8) = v18;
    }
    else
    {
      *int v11 = a2;
    }
    int v11 = v19;
  }
  else
  {
    uint64_t v12 = *v11;
    if (*v11)
    {
      *(void *)(v12 + 8) = a2;
      *(void *)a2 = v12;
    }
    else
    {
      *(void *)(a1 + 144) = a2;
    }
  }
  uint64_t result = 0;
  *int v11 = a2;
  *(unsigned char *)(a2 + 32) = 2;
  return result;
}

uint64_t sub_1B0C90380(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  int v12 = 0;
  uint64_t v3 = *(void *)(v2 + 344);
  if (!v3) {
    goto LABEL_8;
  }
  uint64_t v4 = sub_1B0D10470(v3, *(_DWORD *)(a1 + 48), &v12);
  if (v4) {
    return v4;
  }
  if (v12)
  {
    uint64_t v5 = *(void *)(v2 + 344);
    int v6 = *(_DWORD *)(v2 + 200);
    int v7 = (*(unsigned __int16 *)(v5 + 86) | (*(unsigned __int16 *)(v5 + 86) << 16)) & 0x1FE00;
    if (v7 >= v6) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    uint64_t v4 = (*(uint64_t (**)(void, void, uint64_t, unint64_t))(**(void **)(v5 + 16) + 16))(*(void *)(v5 + 16), *(void *)(a1 + 8), v8, (v7 | 0x18u) * (unint64_t)(v12 - 1) + 56);
  }
  else
  {
LABEL_8:
    unsigned int v9 = (*(uint64_t (**)(void, void, void, void))(**(void **)(v2 + 72) + 16))(*(void *)(v2 + 72), *(void *)(a1 + 8), *(void *)(v2 + 200), *(void *)(v2 + 200) * (*(_DWORD *)(a1 + 48) - 1));
    if (v9 == 522) {
      uint64_t v4 = 0;
    }
    else {
      uint64_t v4 = v9;
    }
  }
  if (*(_DWORD *)(a1 + 48) != 1) {
    goto LABEL_14;
  }
  if (v4)
  {
    *(void *)(v2 + 136) = -1;
    *(void *)(v2 + 144) = -1;
LABEL_14:
    unsigned __int8 v10 = *(uint64_t (**)(void, void, void, uint64_t))(v2 + 296);
    if (!v10) {
      return v4;
    }
    goto LABEL_15;
  }
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(*(void *)(a1 + 8) + 24);
  unsigned __int8 v10 = *(uint64_t (**)(void, void, void, uint64_t))(v2 + 296);
  if (!v10) {
    return v4;
  }
LABEL_15:
  if (v10(*(void *)(v2 + 320), *(void *)(a1 + 8), *(unsigned int *)(a1 + 48), 3)) {
    return v4;
  }
  else {
    return 7;
  }
}

void *sub_1B0C904AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return sub_1B0D0E5DC(a1, a2, &a9);
}

uint64_t sub_1B0C904D8(uint64_t a1, int a2, uint64_t a3, int a4)
{
  char v6 = a2;
  int v22 = 0;
  if (!a3 || a2 == 155 && *(void *)a3 && sub_1B0D22EF0(*(unsigned __int8 **)a3, &v22)) {
    int v8 = 0;
  }
  else {
    int v8 = *(_DWORD *)(a3 + 8) + 1;
  }
  uint64_t v9 = sub_1B0D05DC0(a1, v8 + 80);
  uint64_t v10 = v9;
  if (v9)
  {
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_OWORD *)uint64_t v9 = 0u;
    *(unsigned char *)uint64_t v9 = v6;
    *(_WORD *)(v9 + 52) = -1;
    if (a3)
    {
      if (!v8)
      {
        int v13 = v22;
        if (v22) {
          int v14 = 276826112;
        }
        else {
          int v14 = 545261568;
        }
        *(_DWORD *)(v9 + 4) |= v14;
        *(_DWORD *)(v9 + 8) = v13;
        goto LABEL_29;
      }
      int v11 = (unsigned char *)(v9 + 80);
      *(void *)(v9 + 8) = v9 + 80;
      size_t v12 = *(unsigned int *)(a3 + 8);
      if (v12)
      {
        memcpy((void *)(v9 + 80), *(const void **)a3, v12);
        v11[*(unsigned int *)(a3 + 8)] = 0;
        if (!a4) {
          goto LABEL_29;
        }
LABEL_18:
        int v15 = *v11;
        if ((char)byte_1B0DE196D[*v11] < 0)
        {
          uint64_t v16 = 0;
          if (v15 == 34) {
            int v17 = 67108992;
          }
          else {
            int v17 = 0x4000000;
          }
          *(_DWORD *)(v10 + 4) |= v17;
          if (v15 == 91) {
            int v15 = 93;
          }
          for (int i = 1; ; ++i)
          {
            uint64_t v19 = i;
            int v20 = v11[i];
            if (v20 == v15)
            {
              ++i;
              LOBYTE(v20) = v15;
              if (v11[v19 + 1] != v15) {
                break;
              }
            }
            v11[v16++] = v20;
          }
          v11[v16] = 0;
        }
        goto LABEL_29;
      }
      *int v11 = 0;
      if (a4) {
        goto LABEL_18;
      }
    }
LABEL_29:
    *(_DWORD *)(v10 + 40) = 1;
  }
  return v10;
}

void *sub_1B0C9067C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a4)
    {
      *(void *)(a2 + 24) = a4;
      *(_DWORD *)(a2 + 4) |= *(_DWORD *)(a4 + 4) & 0x400208;
      int v5 = *(_DWORD *)(a4 + 40) + 1;
      *(_DWORD *)(a2 + 40) = v5;
      if (!a3) {
        return result;
      }
    }
    else
    {
      int v5 = 1;
      *(_DWORD *)(a2 + 40) = 1;
      if (!a3) {
        return result;
      }
    }
    *(void *)(a2 + 16) = a3;
    *(_DWORD *)(a2 + 4) |= *(_DWORD *)(a3 + 4) & 0x400208;
    int v7 = *(_DWORD *)(a3 + 40);
    if (v7 >= v5) {
      *(_DWORD *)(a2 + 40) = v7 + 1;
    }
  }
  else
  {
    char v6 = result;
    if (a3) {
      uint64_t result = sub_1B0D1DF88(result, (unsigned __int8 *)a3);
    }
    if (a4)
    {
      return sub_1B0D1DF88(v6, (unsigned __int8 *)a4);
    }
  }
  return result;
}

int *sub_1B0C9074C(uint64_t *a1, int *a2, unsigned __int8 *a3)
{
  if (!a2) {
    return (int *)sub_1B0D55ACC((void *)*a1, a3);
  }
  int v3 = *a2;
  if (a2[1] <= *a2) {
    return sub_1B0D55B34(*a1, a2, a3);
  }
  *a2 = v3 + 1;
  uint64_t v4 = &a2[6 * v3];
  *((void *)v4 + 2) = 0;
  *((void *)v4 + 3) = 0;
  *((void *)v4 + 1) = a3;
  return a2;
}

int *sub_1B0C90794(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = (void *)a4;
  int v14 = *(void **)a1;
  if (!a2 && a7)
  {
    if (*(void *)a7)
    {
      int v15 = "ON";
LABEL_7:
      sub_1B0CEF2BC(a1, "a JOIN clause is required before %s", a3, a4, a5, a6, a7, a8, (char)v15);
      goto LABEL_31;
    }
    if (*(void *)(a7 + 8))
    {
      int v15 = "USING";
      goto LABEL_7;
    }
  }
  uint64_t v16 = (int *)sub_1B0C90A80((uint64_t *)a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v16)
  {
    if (!a7)
    {
LABEL_40:
      if (a6) {
        sub_1B0CA0FA8(v14, a6, 1);
      }
      return 0;
    }
LABEL_31:
    if (*(void *)a7)
    {
      sub_1B0D1DF88(v14, *(unsigned __int8 **)a7);
    }
    else
    {
      uint64_t v31 = *(void **)(a7 + 8);
      if (v31)
      {
        int v32 = *(_DWORD *)v31;
        if (*(int *)v31 >= 1)
        {
          uint64_t v33 = 0;
          uint64_t v34 = 1;
          do
          {
            unsigned int v35 = (void *)v31[v34];
            if (v35)
            {
              sub_1B0D05C10(v14, v35);
              int v32 = *(_DWORD *)v31;
            }
            ++v33;
            v34 += 2;
          }
          while (v33 < v32);
        }
        sub_1B0D15C20(v14, v31);
      }
    }
    goto LABEL_40;
  }
  int v17 = v16;
  uint64_t v18 = *v16 - 1;
  unsigned int v19 = *(unsigned __int8 *)(a1 + 302);
  if (v19 >= 2)
  {
    uint64_t v20 = *(void *)&v16[26 * v18 + 6];
    if (v20)
    {
      if (!v11 || !*v11) {
        int v11 = (void *)a3;
      }
      if (v19 != 3)
      {
        if (!*(void *)a1)
        {
          uint64_t v21 = sub_1B0C7FC94(32);
          if (!v21) {
            goto LABEL_18;
          }
          goto LABEL_17;
        }
        uint64_t v21 = sub_1B0D05DC0(*(void *)a1, 0x20uLL);
        if (v21)
        {
LABEL_17:
          *(_OWORD *)uint64_t v21 = 0u;
          *(_OWORD *)(v21 + 16) = 0u;
          *(void *)uint64_t v21 = v20;
          *(_OWORD *)(v21 + 8) = *(_OWORD *)v11;
          *(void *)(v21 + 24) = *(void *)(a1 + 408);
          *(void *)(a1 + 408) = v21;
        }
      }
    }
  }
LABEL_18:
  size_t v22 = *(unsigned int *)(a5 + 8);
  if (v22)
  {
    int v23 = *(const void **)a5;
    if (v23)
    {
      unint64_t v24 = (unsigned char *)sub_1B0D05DC0((uint64_t)v14, v22 + 1);
      unsigned int v25 = v24;
      if (v24)
      {
        memcpy(v24, v23, v22);
        v25[v22] = 0;
        if ((char)byte_1B0DE196D[*v25] < 0)
        {
          uint64_t v26 = 0;
          if (*v25 == 91) {
            int v27 = 93;
          }
          else {
            int v27 = *v25;
          }
          for (int i = 1; ; ++i)
          {
            uint64_t v29 = i;
            int v30 = v25[i];
            if (v30 == v27)
            {
              ++i;
              LOBYTE(v30) = v27;
              if (v25[v29 + 1] != v27) {
                break;
              }
            }
            v25[v26++] = v30;
          }
          v25[v26] = 0;
        }
      }
    }
    else
    {
      unsigned int v25 = 0;
    }
    *(void *)&v17[26 * v18 + 8] = v25;
  }
  if (a6)
  {
    *(void *)&v17[26 * v18 + 12] = a6;
    if ((*(unsigned char *)(a6 + 5) & 8) != 0) {
      *(_WORD *)((char *)&v17[26 * v18 + 17] + 1) |= 0x2000u;
    }
  }
  if (a7)
  {
    if (*(void *)(a7 + 8))
    {
      uint64_t v37 = &v17[26 * v18];
      *(_WORD *)((char *)v37 + 69) |= 0x400u;
      *((void *)v37 + 10) = *(void *)(a7 + 8);
    }
    else
    {
      *(void *)&v17[26 * v18 + 20] = *(void *)a7;
    }
  }
  else
  {
    *(void *)&v17[26 * v18 + 20] = 0;
  }
  return v17;
}

uint64_t sub_1B0C90A80(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (void *)*a1;
  if (a2)
  {
    size_t v12 = sub_1B0C90D48(a1, a2, 1, *a2, a5, a6, a7, a8);
    uint64_t v13 = (uint64_t)v12;
    if (!v12)
    {
      sub_1B0CA115C(v10, a2);
      return v13;
    }
    uint64_t v14 = *v12 - 1;
    if (!a4) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v15 = sub_1B0D05DC0(*a1, 0x70uLL);
    uint64_t v13 = v15;
    if (!v15) {
      return v13;
    }
    uint64_t v14 = 0;
    *(void *)uint64_t v15 = 0x100000001;
    *(_OWORD *)(v15 + 72) = 0u;
    *(_OWORD *)(v15 + 8) = 0u;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    *(_OWORD *)(v15 + 88) = 0u;
    *(void *)(v15 + 104) = 0;
    *(_DWORD *)(v15 + 72) = -1;
    if (!a4) {
      goto LABEL_30;
    }
  }
  uint64_t v16 = *(const void **)a4;
  if (!*(void *)a4)
  {
LABEL_30:
    if (a3 && (uint64_t v34 = *(const void **)a3) != 0)
    {
      size_t v35 = *(unsigned int *)(a3 + 8);
      uint64_t v36 = (unsigned char *)sub_1B0D05DC0((uint64_t)v10, v35 + 1);
      uint64_t v37 = v36;
      if (v36)
      {
        memcpy(v36, v34, v35);
        v37[v35] = 0;
        if ((char)byte_1B0DE196D[*v37] < 0)
        {
          uint64_t v38 = 0;
          if (*v37 == 91) {
            int v39 = 93;
          }
          else {
            int v39 = *v37;
          }
          for (int i = 1; ; ++i)
          {
            uint64_t v41 = i;
            int v42 = v37[i];
            if (v42 == v39)
            {
              ++i;
              LOBYTE(v42) = v39;
              if (v37[v41 + 1] != v39) {
                break;
              }
            }
            v37[v38++] = v42;
          }
          v37[v38] = 0;
        }
      }
    }
    else
    {
      uint64_t v37 = 0;
    }
    uint64_t v43 = v13 + 104 * v14;
    *(void *)(v43 + 16) = 0;
    *(void *)(v43 + 24) = v37;
    return v13;
  }
  size_t v17 = *(unsigned int *)(a4 + 8);
  uint64_t v18 = (unsigned char *)sub_1B0D05DC0((uint64_t)v10, v17 + 1);
  unsigned int v19 = v18;
  if (v18)
  {
    memcpy(v18, v16, v17);
    v19[v17] = 0;
    if ((char)byte_1B0DE196D[*v19] < 0)
    {
      uint64_t v20 = 0;
      if (*v19 == 91) {
        int v21 = 93;
      }
      else {
        int v21 = *v19;
      }
      for (int j = 1; ; ++j)
      {
        uint64_t v23 = j;
        int v24 = v19[j];
        if (v24 == v21)
        {
          ++j;
          LOBYTE(v24) = v21;
          if (v19[v23 + 1] != v21) {
            break;
          }
        }
        v19[v20++] = v24;
      }
      v19[v20] = 0;
    }
  }
  *(void *)(v13 + 104 * v14 + 24) = v19;
  if (a3 && (unsigned int v25 = *(const void **)a3) != 0)
  {
    size_t v26 = *(unsigned int *)(a3 + 8);
    int v27 = (unsigned char *)sub_1B0D05DC0((uint64_t)v10, v26 + 1);
    uint64_t v28 = v27;
    if (v27)
    {
      memcpy(v27, v25, v26);
      v28[v26] = 0;
      if ((char)byte_1B0DE196D[*v28] < 0)
      {
        uint64_t v29 = 0;
        if (*v28 == 91) {
          int v30 = 93;
        }
        else {
          int v30 = *v28;
        }
        for (int k = 1; ; ++k)
        {
          uint64_t v32 = k;
          int v33 = v28[k];
          if (v33 == v30)
          {
            ++k;
            LOBYTE(v33) = v30;
            if (v28[v32 + 1] != v30) {
              break;
            }
          }
          v28[v29++] = v33;
        }
        v28[v29] = 0;
      }
    }
  }
  else
  {
    uint64_t v28 = 0;
  }
  *(void *)(v13 + 104 * v14 + 16) = v28;
  return v13;
}

int *sub_1B0C90D48(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  int v9 = a3;
  uint64_t v10 = a2;
  int v11 = *a2;
  int v12 = *a2 + a3;
  if (v12 <= a2[1]) {
    goto LABEL_16;
  }
  if (v12 >= 200)
  {
    sub_1B0CEF2BC((uint64_t)a1, "too many FROM clause terms, max: %d", a3, a4, a5, a6, a7, a8, 200);
    return 0;
  }
  uint64_t v13 = *a1;
  if (2 * v11 + (int)a3 >= 200) {
    uint64_t v14 = 200;
  }
  else {
    uint64_t v14 = 2 * v11 + (int)a3;
  }
  unint64_t v15 = 104 * v14 + 8;
  if (*(void *)(v13 + 512) <= (unint64_t)a2) {
    goto LABEL_13;
  }
  if (*(void *)(v13 + 496) > (unint64_t)a2)
  {
    if (*(void *)(v13 + 504) <= (unint64_t)a2 && v15 <= *(unsigned __int16 *)(v13 + 438)) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v16 = (int *)sub_1B0D05E6C(v13, a2, v15);
    uint64_t v10 = v16;
    if (!v16) {
      return v10;
    }
    int v11 = *v16;
    goto LABEL_15;
  }
  if (v15 >= 0x81) {
    goto LABEL_13;
  }
LABEL_15:
  v10[1] = v14;
LABEL_16:
  if (v11 <= v8)
  {
    uint64_t v18 = v8;
  }
  else
  {
    uint64_t v17 = v11;
    uint64_t v18 = v8;
    uint64_t v19 = 26 * v11;
    do
    {
      --v17;
      uint64_t v20 = &v10[26 * v9 + v19];
      long long v21 = *(_OWORD *)&v10[v19 - 24];
      long long v22 = *(_OWORD *)&v10[v19 - 16];
      *((_OWORD *)v20 - 5) = *(_OWORD *)&v10[v19 - 20];
      *((_OWORD *)v20 - 4) = v22;
      *((_OWORD *)v20 - 6) = v21;
      long long v23 = *(_OWORD *)&v10[v19 - 12];
      long long v24 = *(_OWORD *)&v10[v19 - 8];
      long long v25 = *(_OWORD *)&v10[v19 - 4];
      *(void *)uint64_t v20 = *(void *)&v10[v19];
      *((_OWORD *)v20 - 2) = v24;
      *((_OWORD *)v20 - 1) = v25;
      *((_OWORD *)v20 - 3) = v23;
      v19 -= 26;
    }
    while (v17 > v8);
    int v11 = *v10;
  }
  *uint64_t v10 = v11 + v9;
  bzero(&v10[26 * (int)v18 + 2], 104 * v9);
  if (v9 >= 1)
  {
    uint64_t v26 = v8 + v9;
    if (v18 + 1 > v26) {
      uint64_t v27 = v18 + 1;
    }
    else {
      uint64_t v27 = v8 + v9;
    }
    uint64_t v28 = v27 - v18;
    if ((unint64_t)(v27 - v18) < 2)
    {
      uint64_t v29 = v18;
LABEL_30:
      uint64_t v32 = 104 * v29 + 72;
      do
      {
        *(int *)((char *)v10 + v32) = -1;
        ++v29;
        v32 += 104;
      }
      while (v29 < v26);
      return v10;
    }
    uint64_t v29 = v18 + (v28 & 0xFFFFFFFFFFFFFFFELL);
    int v30 = &v10[26 * (int)v18 + 44];
    unint64_t v31 = v28 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      *(v30 - 26) = -1;
      *int v30 = -1;
      v30 += 52;
      v31 -= 2;
    }
    while (v31);
    if (v28 != (v28 & 0xFFFFFFFFFFFFFFFELL)) {
      goto LABEL_30;
    }
  }
  return v10;
}

_OWORD *sub_1B0C90F4C(void **a1, void *a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  memset(v25, 0, sizeof(v25));
  uint64_t v15 = sub_1B0D05DC0((uint64_t)*a1, 0x80uLL);
  uint64_t v16 = (_OWORD *)v15;
  if (v15) {
    uint64_t v17 = (unsigned char *)v15;
  }
  else {
    uint64_t v17 = v25;
  }
  if (!a2)
  {
    uint64_t v18 = sub_1B0D05DC0((uint64_t)*a1, 0x51uLL);
    if (v18)
    {
      *(_OWORD *)(v18 + 32) = 0u;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)uint64_t v18 = 0u;
      *(_OWORD *)(v18 + 16) = 0u;
      *(unsigned char *)uint64_t v18 = -76;
      *(_WORD *)(v18 + 52) = -1;
      *(unsigned char *)(v18 + 80) = 0;
      *(void *)(v18 + 8) = v18 + 80;
      *(_DWORD *)(v18 + 40) = 1;
    }
    a2 = sub_1B0D55ACC(*a1, (unsigned __int8 *)v18);
  }
  if (v16) {
    uint64_t v19 = v16;
  }
  else {
    uint64_t v19 = v25;
  }
  *((void *)v19 + 4) = a2;
  *uint64_t v17 = -118;
  *((_DWORD *)v19 + 1) = a8;
  *((void *)v19 + 1) = 0;
  int v20 = *((_DWORD *)a1 + 35) + 1;
  *((_DWORD *)a1 + 35) = v20;
  *((_DWORD *)v19 + 4) = v20;
  *(void *)((char *)v19 + 20) = -1;
  *((_WORD *)v19 + 1) = 0;
  if (!a3)
  {
    if (*a1)
    {
      a3 = (_OWORD *)sub_1B0D05DC0((uint64_t)*a1, 0x70uLL);
      if (!a3) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    a3 = (_OWORD *)sub_1B0C7FC94(112);
    if (a3)
    {
LABEL_14:
      a3[5] = 0u;
      a3[6] = 0u;
      a3[3] = 0u;
      a3[4] = 0u;
      a3[1] = 0u;
      a3[2] = 0u;
      *a3 = 0u;
    }
  }
LABEL_15:
  if (v16) {
    long long v21 = v16;
  }
  else {
    long long v21 = v25;
  }
  *((void *)v21 + 5) = a3;
  *((void *)v21 + 6) = a4;
  *((void *)v21 + 7) = a5;
  *((void *)v21 + 8) = a6;
  *((void *)v21 + 9) = a7;
  v21[5] = 0u;
  *((void *)v21 + 12) = a9;
  *(_OWORD *)((char *)v21 + 104) = 0u;
  *((void *)v21 + 15) = 0;
  if (*((unsigned char *)*a1 + 103))
  {
    sub_1B0CA0FA8(*a1, (uint64_t)v17, v17 != (unsigned char *)v25);
    return 0;
  }
  return v16;
}

uint64_t sub_1B0C9110C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = (unsigned __int8 *)a3;
  int v9 = (unsigned __int8 *)a2;
  int v1161 = 0;
  uint64_t v1160 = 0;
  v1158 = 0;
  uint64_t v11 = (uint64_t)*a1;
  uint64_t v12 = (uint64_t)a1[2];
  if (v12)
  {
    if (!a2) {
      return 1;
    }
  }
  else
  {
    if (!a1[21] && (*(unsigned char *)(v11 + 96) & 8) == 0) {
      *((unsigned char *)a1 + 35) = 1;
    }
    uint64_t v12 = sub_1B0CEF480((uint64_t *)a1, a2, a3, a4, a5, a6, a7, a8);
    if (!v9) {
      return 1;
    }
  }
  if (*((_DWORD *)a1 + 12)) {
    return 1;
  }
  uint64_t v15 = (uint64_t)*a1;
  uint64_t v16 = (uint64_t (*)(void, uint64_t, void, void, void, void *))(*a1)[66];
  if (v16 && !*(unsigned char *)(v15 + 197) && !*((unsigned char *)a1 + 302))
  {
    int v32 = v16(*(void *)(v15 + 536), 21, 0, 0, 0, a1[46]);
    if (v32 == 1)
    {
      int v39 = 23;
      uint64_t v40 = "not authorized";
    }
    else
    {
      if ((v32 & 0xFFFFFFFD) == 0)
      {
        if (v32) {
          return 1;
        }
        goto LABEL_14;
      }
      int v39 = 1;
      uint64_t v40 = "authorizer malfunction";
    }
    sub_1B0CEF2BC((uint64_t)a1, v40, v33, v34, v35, v36, v37, v38, v1050);
    *((_DWORD *)a1 + 6) = v39;
    return 1;
  }
LABEL_14:
  memset(v1159, 0, 56);
  if (*v8 <= 6u)
  {
    uint64_t v17 = (void *)*((void *)v9 + 9);
    if (!v17)
    {
LABEL_22:
      *((_DWORD *)v9 + 1) = *((_DWORD *)v9 + 1) & 0xFFBFFFFE | 0x400000;
      goto LABEL_23;
    }
    if (*a1)
    {
      uint64_t v18 = (void *)sub_1B0D05DC0((uint64_t)*a1, 0x18uLL);
      if (v18)
      {
LABEL_18:
        *uint64_t v18 = a1[24];
        a1[24] = v18;
        v18[1] = v17;
        v18[2] = sub_1B0CA1150;
LABEL_21:
        *((void *)v9 + 9) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v18 = (void *)sub_1B0C7FC94(24);
      if (v18) {
        goto LABEL_18;
      }
    }
    sub_1B0D270DC(*a1, v17);
    goto LABEL_21;
  }
LABEL_23:
  sub_1B0D384B4(a1, (uint64_t)v9, 0);
  if (*((_DWORD *)a1 + 12))
  {
LABEL_24:
    uint64_t v13 = 1;
    goto LABEL_25;
  }
  int v29 = *((_DWORD *)v9 + 1);
  if ((v29 & 0x800000) != 0)
  {
    uint64_t v30 = *((void *)v9 + 5);
    if (sub_1B0D3CECC(v30 + 8, (unsigned int *)v30))
    {
      uint64_t v31 = *(void *)(v30 + 32);
      if (!v31) {
        uint64_t v31 = **(void **)(v30 + 40);
      }
      sub_1B0CEF2BC((uint64_t)a1, "target object/alias may not appear in FROM clause: %s", v20, v21, v22, v23, v24, v25, v31);
      goto LABEL_24;
    }
    *((_DWORD *)v9 + 1) = v29 & 0xFF7FFFFF;
  }
  uint64_t v1153 = v11;
  if (*v8 == 9) {
    sub_1B0D3CFD0(a1, (uint64_t)v9);
  }
  uint64_t v41 = *((void *)v9 + 14);
  uint64_t v1143 = v12;
  if (!v41) {
    goto LABEL_149;
  }
  if (*((void *)v9 + 10)) {
    goto LABEL_149;
  }
  int v42 = *((_DWORD *)v9 + 1);
  if ((v42 & 0x100000) != 0 || *((unsigned __int8 *)a1 + 302) > 1u) {
    goto LABEL_149;
  }
  v1138 = v8;
  uint64_t v43 = (uint64_t)a1[2];
  if (!v43)
  {
    if (!a1[21] && ((*a1)[12] & 8) == 0) {
      *((unsigned char *)a1 + 35) = 1;
    }
    uint64_t v43 = sub_1B0CEF480((uint64_t *)a1, (uint64_t)v19, v20, v21, v22, v23, v24, v25);
    uint64_t v41 = *((void *)v9 + 14);
    int v42 = *((_DWORD *)v9 + 1);
  }
  uint64_t v44 = (uint64_t)*a1;
  v1147 = (_OWORD *)*((void *)v9 + 5);
  uint64_t v1125 = *((void *)v9 + 7);
  uint64_t v1133 = *((void *)v9 + 6);
  uint64_t v1118 = *((void *)v9 + 8);
  if (*a1)
  {
    uint64_t v45 = sub_1B0D05DC0(v44, 0x68uLL);
    if (!v45)
    {
      uint64_t v46 = *(void *)(v44 + 344);
      if (v46)
      {
        *(_DWORD *)(v46 + 24) = 7;
        ++*(_DWORD *)(v46 + 48);
      }
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v45 = sub_1B0C7FC94(104);
    if (!v45) {
      goto LABEL_24;
    }
  }
  char v1097 = v42;
  *(_OWORD *)uint64_t v45 = 0u;
  *(_OWORD *)(v45 + 16) = 0u;
  *(_OWORD *)(v45 + 32) = 0u;
  *(_OWORD *)(v45 + 48) = 0u;
  *(void *)(v45 + 96) = 0;
  *(_OWORD *)(v45 + 64) = 0u;
  *(_OWORD *)(v45 + 80) = 0u;
  long long v1164 = 0uLL;
  *(void *)&long long v1162 = a1;
  *((void *)&v1162 + 1) = sub_1B0D408D4;
  *(void *)&long long v1163 = sub_1B0D3A5D4;
  *((void *)&v1163 + 1) = 0;
  sub_1B0C962CC(&v1162, v9);
  int v47 = *((_DWORD *)v9 + 1);
  if ((v47 & 8) == 0)
  {
    *((void *)&v1162 + 1) = sub_1B0D40664;
    *(void *)&long long v1163 = 0;
    sub_1B0D32BB0((uint64_t)&v1162, *((_DWORD **)v9 + 9));
    int v47 = *((_DWORD *)v9 + 1);
  }
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *((_DWORD *)v9 + 1) = v47 & 0xFFEFFFF7 | 0x100000;
  uint64_t v48 = sub_1B0D406B0((uint64_t *)a1, 0, *(int **)(v41 + 16), 1);
  unsigned int v49 = sub_1B0D406B0((uint64_t *)a1, v48, *(int **)(v41 + 24), 1);
  uint64_t v50 = v49;
  if (v49)
  {
    uint64_t v51 = (int *)*((void *)v9 + 9);
    if (v51)
    {
      int v52 = *v49;
      if (*v51 <= *v49)
      {
        *unsigned int v49 = *v51;
        if (!sub_1B0D323D8((unint64_t)v49, (unint64_t)v51, 0xFFFFFFFFLL))
        {
          int v53 = (void *)*((void *)v9 + 9);
          if (v53) {
            sub_1B0D270DC((void *)v44, v53);
          }
          *((void *)v9 + 9) = 0;
        }
        *uint64_t v50 = v52;
      }
    }
  }
  int v54 = *((_DWORD *)a1 + 13);
  *(_DWORD *)(v41 + 88) = v54;
  *((_DWORD *)a1 + 13) = v54 + 4;
  uint64_t v55 = (_DWORD *)*((void *)v9 + 4);
  *(void *)&v1157[8] = 0;
  *(void *)&v1157[16] = 0;
  *(void *)&v1165[24] = v45;
  uint64_t v1166 = 0;
  *(void *)v1165 = v41;
  *(void *)&v1165[8] = v1147;
  *(void *)&v1165[16] = 0;
  *(void *)&long long v1156 = a1;
  *((void *)&v1156 + 1) = sub_1B0D409D8;
  *(void *)v1157 = sub_1B0D40C18;
  *(void *)&v1157[24] = v1165;
  v1110 = (int **)(v9 + 40);
  if (!v55 || (int v56 = *v55, (int)*v55 < 1))
  {
    int v59 = 0;
    goto LABEL_85;
  }
  for (int i = (uint64_t *)(v55 + 2); !*i; i += 3)
  {
    if (v56 < 2) {
      goto LABEL_83;
    }
LABEL_76:
    --v56;
  }
  if (sub_1B0D32AB4((uint64_t)&v1156, *i)) {
    BOOL v58 = 1;
  }
  else {
    BOOL v58 = v56 <= 1;
  }
  if (!v58) {
    goto LABEL_76;
  }
LABEL_83:
  int v59 = *(int **)&v1165[16];
LABEL_85:
  uint64_t v60 = (_DWORD *)*((void *)v9 + 9);
  *(void *)&v1157[8] = 0;
  *(void *)&v1157[16] = 0;
  *(void *)&v1165[24] = v45;
  uint64_t v1166 = 0;
  *(void *)v1165 = v41;
  *(void *)&v1165[8] = v1147;
  *(void *)&v1165[16] = v59;
  *(void *)&long long v1156 = a1;
  *((void *)&v1156 + 1) = sub_1B0D409D8;
  *(void *)v1157 = sub_1B0D40C18;
  *(void *)&v1157[24] = v1165;
  if (!v60) {
    goto LABEL_97;
  }
  int v61 = *v60;
  if ((int)*v60 < 1) {
    goto LABEL_97;
  }
  int v62 = (uint64_t *)(v60 + 2);
  while (2)
  {
    if (!*v62)
    {
      if (v61 < 2) {
        break;
      }
      goto LABEL_89;
    }
    if (sub_1B0D32AB4((uint64_t)&v1156, *v62)) {
      BOOL v63 = 1;
    }
    else {
      BOOL v63 = v61 <= 1;
    }
    if (!v63)
    {
LABEL_89:
      --v61;
      v62 += 3;
      continue;
    }
    break;
  }
  int v59 = *(int **)&v1165[16];
LABEL_97:
  uint64_t v1102 = (uint64_t)v50;
  if (v59) {
    int v64 = *v59;
  }
  else {
    int v64 = 0;
  }
  *(_DWORD *)(v41 + 120) = v64;
  int v65 = sub_1B0D406B0((uint64_t *)a1, v59, *(int **)(v41 + 16), 0);
  uint64_t v69 = sub_1B0D406B0((uint64_t *)a1, v65, *(int **)(v41 + 24), 0);
  uint64_t v70 = v41;
  while (2)
  {
    while (2)
    {
      uint64_t v72 = *(int **)(*(void *)(v70 + 112) + 32);
      if ((*(unsigned char *)(*(void *)(v70 + 80) + 6) & 0x10) == 0)
      {
        if (v69) {
          int v73 = *v69;
        }
        else {
          int v73 = 0;
        }
        *(_DWORD *)(v70 + 124) = v73;
        uint64_t v69 = sub_1B0D406B0((uint64_t *)a1, v69, v72, 0);
        goto LABEL_123;
      }
      *(void *)&v1157[8] = 0;
      *(void *)&v1157[16] = 0;
      *(void *)&v1165[24] = v45;
      uint64_t v1166 = 0;
      *(void *)v1165 = v41;
      *(void *)&v1165[8] = v1147;
      *(void *)&v1165[16] = v69;
      *(void *)&long long v1156 = a1;
      *((void *)&v1156 + 1) = sub_1B0D409D8;
      *(void *)v1157 = sub_1B0D40C18;
      *(void *)&v1157[24] = v1165;
      if (!v72) {
        goto LABEL_117;
      }
      int v74 = *v72;
      if (*v72 < 1) {
        goto LABEL_117;
      }
      uint64_t v75 = (uint64_t *)(v72 + 2);
      while (2)
      {
        if (!*v75)
        {
          if (v74 < 2) {
            break;
          }
          goto LABEL_109;
        }
        if (sub_1B0D32AB4((uint64_t)&v1156, *v75)) {
          BOOL v76 = 1;
        }
        else {
          BOOL v76 = v74 <= 1;
        }
        if (!v76)
        {
LABEL_109:
          --v74;
          v75 += 3;
          continue;
        }
        break;
      }
      uint64_t v69 = *(int **)&v1165[16];
LABEL_117:
      if (v69) {
        int v77 = *v69;
      }
      else {
        int v77 = 0;
      }
      *(_DWORD *)(v70 + 124) = v77;
      *(unsigned char *)(v70 + 140) = 1;
LABEL_123:
      uint64_t v78 = *(unsigned __int8 **)(v70 + 72);
      if (v78)
      {
        uint64_t v79 = (unsigned __int8 *)sub_1B0CAE048(v44, v78, 0, 0);
        if (v69)
        {
          int v80 = *v69;
          if (v69[1] > *v69)
          {
            *uint64_t v69 = v80 + 1;
            uint64_t v81 = &v69[6 * v80];
            *((void *)v81 + 2) = 0;
            *((void *)v81 + 3) = 0;
            *((void *)v81 + 1) = v79;
            goto LABEL_130;
          }
          uint64_t v82 = sub_1B0D55B34((uint64_t)*a1, v69, v79);
        }
        else
        {
          uint64_t v82 = (int *)sub_1B0D55ACC(*a1, v79);
        }
        uint64_t v69 = v82;
      }
LABEL_130:
      int v83 = *((_DWORD *)a1 + 14);
      uint64_t v84 = (v83 + 1);
      *(_DWORD *)(v70 + 92) = v84;
      v83 += 2;
      *((_DWORD *)a1 + 14) = v83;
      *(_DWORD *)(v70 + 96) = v83;
      int v85 = *(_DWORD *)(v43 + 144);
      if (*(_DWORD *)(v43 + 148) <= v85)
      {
        sub_1B0D25510(v43, 75, 0, v84, 0, v66, v67, v68);
        uint64_t v70 = *(void *)(v70 + 64);
        if (!v70) {
          goto LABEL_132;
        }
        continue;
      }
      break;
    }
    *(_DWORD *)(v43 + 144) = v85 + 1;
    uint64_t v71 = *(void *)(v43 + 136) + 40 * v85;
    *(void *)uint64_t v71 = 75;
    *(_DWORD *)(v71 + 8) = v84;
    *(void *)(v71 + 12) = 0;
    *(void *)(v71 + 28) = 0;
    *(void *)(v71 + 20) = 0;
    *(_DWORD *)(v71 + 36) = 0;
    uint64_t v70 = *(void *)(v70 + 64);
    if (v70) {
      continue;
    }
    break;
  }
LABEL_132:
  if (!v69)
  {
    int v86 = (unsigned __int8 *)sub_1B0D29E78(v44, 155, "0");
    uint64_t v69 = (int *)sub_1B0D55ACC(*a1, v86);
  }
  uint64_t v87 = sub_1B0C90F4C(a1, v69, v1147, v1133, v1125, v1118, v1102, 0, 0);
  uint64_t v88 = sub_1B0D05DC0((uint64_t)*a1, 0x70uLL);
  int v8 = v1138;
  if (v88)
  {
    *(void *)uint64_t v88 = 0x100000001;
    *(_OWORD *)(v88 + 72) = 0u;
    *(_OWORD *)(v88 + 8) = 0u;
    *(_OWORD *)(v88 + 24) = 0u;
    *(_OWORD *)(v88 + 56) = 0u;
    *(_OWORD *)(v88 + 88) = 0u;
    *(void *)(v88 + 104) = 0;
    *(_OWORD *)(v88 + 40) = 0u;
    *(_DWORD *)(v88 + 72) = -1;
    *(void *)(v88 + 16) = 0;
    *(void *)(v88 + 24) = 0;
    *v1110 = (int *)v88;
    *(void *)(v88 + 48) = v87;
    *(_WORD *)(v88 + 69) |= 8u;
    sub_1B0CCF4CC((uint64_t)a1, *v1110);
    *((_DWORD *)v87 + 1) |= 0x8000040u;
    uint64_t v89 = sub_1B0D367D8((uint64_t)a1, (uint64_t)v87, 64);
    *((_DWORD *)v87 + 1) |= v1097 & 8;
    if (v89)
    {
      uint64_t v90 = v89;
      long long v92 = *(_OWORD *)(v89 + 64);
      long long v91 = *(_OWORD *)(v89 + 80);
      uint64_t v93 = *(void *)(v89 + 96);
      *(_OWORD *)(v45 + 48) = *(_OWORD *)(v89 + 48);
      long long v94 = *(_OWORD *)v89;
      long long v95 = *(_OWORD *)(v89 + 32);
      *(_OWORD *)(v45 + 16) = *(_OWORD *)(v89 + 16);
      *(_OWORD *)(v45 + 32) = v95;
      *(_OWORD *)uint64_t v45 = v94;
      *(void *)(v45 + 96) = v93;
      *(_OWORD *)(v45 + 64) = v92;
      *(_OWORD *)(v45 + 80) = v91;
      *(_DWORD *)(v45 + 48) |= 0x4000u;
      *((void *)*v1110 + 5) = v45;
      *(void *)&long long v1162 = 0;
      long long v1164 = 0u;
      *((void *)&v1162 + 1) = sub_1B0D40884;
      *(void *)&long long v1163 = sub_1B0D408B0;
      *((void *)&v1163 + 1) = sub_1B0D408C4;
      sub_1B0C962CC(&v1162, v87);
      char v96 = 1;
      uint64_t v45 = v90;
    }
    else
    {
      char v96 = 0;
    }
  }
  else
  {
    *v1110 = 0;
    char v96 = 1;
    if (v87) {
      sub_1B0CA0FA8((void *)v44, (uint64_t)v87, 1);
    }
  }
  int v97 = *(unsigned __int8 *)(v44 + 103);
  if (*a1) {
    long long v98 = (void *)sub_1B0D05DC0((uint64_t)*a1, 0x18uLL);
  }
  else {
    long long v98 = (void *)sub_1B0C7FC94(24);
  }
  if (v98)
  {
    *long long v98 = a1[24];
    a1[24] = v98;
    v98[1] = v45;
    v98[2] = sub_1B0CA12F4;
  }
  else
  {
    sub_1B0D05C10(*a1, (void *)v45);
  }
  char v99 = v96 ^ 1;
  if (v97) {
    char v99 = 1;
  }
  if (v99) {
    goto LABEL_864;
  }
LABEL_149:
  uint64_t v100 = *((void *)v9 + 9);
  long long v101 = (int *)*((void *)v9 + 5);
  int v102 = *((_DWORD *)v9 + 1);
  long long v103 = 0uLL;
  memset((char *)v1159 + 8, 0, 48);
  *(void *)&v1159[0] = v100;
  v1148 = v9 + 72;
  uint64_t v104 = *((void *)v9 + 10);
  if (v104)
  {
LABEL_150:
    uint64_t v1154 = (uint64_t)*a1;
    long long v105 = *((_OWORD *)v8 + 1);
    *(_OWORD *)v1165 = *(_OWORD *)v8;
    *(_OWORD *)&v1165[16] = v105;
    uint64_t v1166 = *((void *)v8 + 4);
    uint64_t v106 = (uint64_t)a1[2];
    if (!v106)
    {
      if (!a1[21] && (*(unsigned char *)(v1154 + 96) & 8) == 0) {
        *((unsigned char *)a1 + 35) = 1;
      }
      uint64_t v106 = sub_1B0CEF480((uint64_t *)a1, (uint64_t)v19, v20, v21, v22, v23, v24, v25);
    }
    int v107 = v1165[0];
    if (v1165[0] == 12)
    {
      uint64_t v20 = *(unsigned int *)&v1165[4];
      uint64_t v21 = **((unsigned int **)v9 + 4);
      int v108 = *(_DWORD *)(v106 + 144);
      if (*(_DWORD *)(v106 + 148) <= v108)
      {
        sub_1B0D25510(v106, 118, *(unsigned int *)&v1165[4], v21, 0, v23, v24, v25);
      }
      else
      {
        *(_DWORD *)(v106 + 144) = v108 + 1;
        uint64_t v109 = *(void *)(v106 + 136) + 40 * v108;
        *(_DWORD *)uint64_t v109 = 118;
        *(_DWORD *)(v109 + 4) = v20;
        *(_DWORD *)(v109 + 8) = v21;
        *(void *)(v109 + 12) = 0;
        *(void *)(v109 + 28) = 0;
        *(void *)(v109 + 20) = 0;
        *(_DWORD *)(v109 + 36) = 0;
      }
      int v107 = 14;
      v1165[0] = 14;
    }
    int v111 = *((_DWORD *)v9 + 1);
    if ((v111 & 0x400) != 0)
    {
      uint64_t v112 = *((void *)v9 + 12);
      if (!*((void *)v9 + 14))
      {
        __int16 v113 = 1;
        uint64_t v114 = (uint64_t)v9;
        while (1)
        {
          uint64_t v115 = *(void *)(v114 + 80);
          if (!v115) {
            break;
          }
          v113 += v112 == 0;
          uint64_t v114 = *(void *)(v114 + 80);
          if (*(void *)(v115 + 112)) {
            goto LABEL_166;
          }
        }
        sub_1B0D33724((uint64_t *)a1, 0, "SCAN %d CONSTANT ROW%s", v21, v22, v23, v24, v25, v113);
        do
        {
          sub_1B0C9CF74((uint64_t)a1, v114, 0xFFFFFFFFLL, 0, 0, v1165, 1, 1);
          if (v112) {
            break;
          }
          *(_WORD *)(v114 + 2) = v113;
          uint64_t v114 = *(void *)(v114 + 88);
        }
        while (v114);
        uint64_t v13 = 0;
LABEL_648:
        *(void *)(v8 + 12) = *(void *)&v1165[12];
LABEL_946:
        if (!*((void *)v9 + 11)) {
          goto LABEL_27;
        }
        return v13;
      }
    }
LABEL_166:
    if ((v111 & 0x2000) != 0)
    {
      uint64_t v116 = v9;
      while ((v116[5] & 0x20) != 0)
      {
        uint64_t v116 = (unsigned __int8 *)*((void *)v116 + 10);
        if (!v116) {
          goto LABEL_170;
        }
      }
      uint64_t v148 = (unsigned int *)*((void *)v9 + 5);
      uint64_t v149 = **((unsigned int **)v9 + 4);
      uint64_t v150 = (uint64_t)a1[2];
      long long v1156 = 0u;
      memset(v1157, 0, 24);
      if (*((void *)v9 + 14))
      {
        sub_1B0CEF2BC((uint64_t)a1, "cannot use window functions in recursive queries", v20, v21, v22, v23, v24, v25, v1050);
        goto LABEL_883;
      }
      uint64_t v377 = (uint64_t)*a1;
      uint64_t v378 = (uint64_t (*)(void, uint64_t, void, void, void, void *))(*a1)[66];
      if (!v378 || *(unsigned char *)(v377 + 197) || *((unsigned char *)a1 + 302))
      {
LABEL_520:
        uint64_t v379 = (*((_DWORD *)a1 + 17) - 1);
        *((_DWORD *)a1 + 17) = v379;
        *((_WORD *)v9 + 1) = 320;
        sub_1B0C9B128((uint64_t)a1, (uint64_t)v9, v379, v21, v22, v23, v24, v25);
        uint64_t v384 = *((void *)v9 + 12);
        unsigned int v385 = *((_DWORD *)v9 + 2);
        unsigned int v386 = *((_DWORD *)v9 + 3);
        *((void *)v9 + 12) = 0;
        *((void *)v9 + 1) = 0;
        uint64_t v387 = *v148;
        v1141 = v8;
        uint64_t v1144 = v384;
        unsigned int v1122 = v386;
        if ((int)v387 < 1)
        {
LABEL_524:
          uint64_t v389 = 0;
        }
        else
        {
          uint64_t v388 = v148 + 18;
          while ((*(_WORD *)((unsigned char *)v388 - 3) & 0x40) == 0)
          {
            v388 += 26;
            if (!--v387) {
              goto LABEL_524;
            }
          }
          uint64_t v389 = *v388;
        }
        v552 = (_DWORD *)*((void *)v9 + 9);
        uint64_t v553 = *((unsigned int *)a1 + 13);
        uint64_t v554 = (v553 + 1);
        *((_DWORD *)a1 + 13) = v554;
        unsigned int v1136 = v379;
        if (*v9 == 134)
        {
          if (v552) {
            char v555 = 6;
          }
          else {
            char v555 = 5;
          }
          *((_DWORD *)a1 + 13) = v553 + 2;
        }
        else
        {
          uint64_t v554 = 0;
          if (v552) {
            char v555 = 7;
          }
          else {
            char v555 = 8;
          }
        }
        LOBYTE(v1156) = v555;
        *(void *)&v1157[8] = 0;
        DWORD1(v1156) = v553;
        *((void *)&v1156 + 1) = 0;
        *(_DWORD *)v1157 = 0;
        uint64_t v556 = (*((_DWORD *)a1 + 14) + 1);
        *((_DWORD *)a1 + 14) = v556;
        int v557 = *(_DWORD *)(v150 + 144);
        unsigned int v1128 = v385;
        if (*(_DWORD *)(v150 + 148) <= v557)
        {
          sub_1B0D25510(v150, 121, v389, v556, v149, v381, v382, v383);
        }
        else
        {
          *(_DWORD *)(v150 + 144) = v557 + 1;
          uint64_t v558 = *(void *)(v150 + 136) + 40 * v557;
          *(_DWORD *)uint64_t v558 = 121;
          *(_DWORD *)(v558 + 4) = v389;
          *(_DWORD *)(v558 + 8) = v556;
          *(_DWORD *)(v558 + 12) = v149;
          *(void *)(v558 + 24) = 0;
          *(void *)(v558 + 32) = 0;
          *(void *)(v558 + 16) = 0;
        }
        if (v552)
        {
          uint64_t v559 = sub_1B0D411F0((uint64_t *)a1, (uint64_t)v9);
          sub_1B0CCB908((uint64_t *)v150, 118, v553, (*v552 + 2), 0, v559, 4294967288, v560);
          *(void *)&v1157[16] = v552;
        }
        else
        {
          sub_1B0D254B8(v150, 118, v553, v149, v380, v381, v382, v383);
        }
        if (v554)
        {
          *((_DWORD *)v9 + 5) = sub_1B0D254B8(v150, 118, v554, 0, v563, v564, v565, v566);
          int v567 = *((_DWORD *)v9 + 1) | 0x20;
          *((_DWORD *)v9 + 1) = v567;
        }
        else
        {
          int v567 = *((_DWORD *)v9 + 1);
        }
        *(void *)v1148 = 0;
        uint64_t v568 = v9;
        do
        {
          if ((v567 & 8) != 0)
          {
            sub_1B0CEF2BC((uint64_t)a1, "recursive aggregate queries not supported", v561, v562, v563, v564, v565, v566, v1050);
            goto LABEL_880;
          }
          uint64_t v569 = v568;
          *uint64_t v568 = -121;
          uint64_t v568 = (unsigned __int8 *)*((void *)v568 + 10);
          int v567 = *((_DWORD *)v568 + 1);
        }
        while ((v567 & 0x2000) != 0);
        *((void *)v568 + 11) = 0;
        sub_1B0D33724((uint64_t *)a1, 1, "SETUP", v562, v563, v564, v565, v566, v1050);
        int v570 = sub_1B0C9110C(a1, v568, &v1156);
        *((void *)v568 + 11) = v9;
        if (!v570)
        {
          unsigned int v1108 = sub_1B0D254B8(v150, 36, v553, v1136, v571, v572, v573, v574);
          sub_1B0D2F978(v150, 136, v389, v575, v576, v577, v578, v579);
          unsigned int v1116 = v389;
          if (v552) {
            sub_1B0C8A924(v150, 94, v553, (*v552 + 1), v556, v581, v582, v583);
          }
          else {
            sub_1B0D254B8(v150, 134, v553, v556, v580, v581, v582, v583);
          }
          sub_1B0D2F978(v150, 130, v553, v584, v585, v586, v587, v588);
          uint64_t v730 = (*((_DWORD *)a1 + 17) - 1);
          *((_DWORD *)a1 + 17) = v730;
          sub_1B0D413A8(v150, v1122, v730, v731, v732, v733, v734, v735);
          sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, v1116, 0, 0, v1165, v730, v1136);
          if (v1128) {
            sub_1B0D254B8(v150, 61, v1128, v1136, v736, v737, v738, v739);
          }
          sub_1B0D31504(v150, v730);
          *((void *)v569 + 10) = 0;
          sub_1B0D33724((uint64_t *)a1, 1, "RECURSIVE STEP", v740, v741, v742, v743, v744, v1054);
          sub_1B0C9110C(a1, v9, &v1156);
          *((void *)v569 + 10) = v568;
          sub_1B0D2FAAC(v150, v1108, v745, v746, v747, v748, v749, v750);
          sub_1B0D31504(v150, v1136);
        }
LABEL_880:
        if (*(void *)v1148) {
          sub_1B0D270DC(*a1, *(void **)v1148);
        }
        *((void *)v9 + 9) = v552;
        int v8 = v1141;
        *((void *)v9 + 12) = v1144;
        goto LABEL_883;
      }
      int v726 = v378(*(void *)(v377 + 536), 33, 0, 0, 0, a1[46]);
      if (v726 == 1)
      {
        int v728 = 23;
        uint64_t v729 = "not authorized";
LABEL_895:
        sub_1B0CEF2BC((uint64_t)a1, v729, v727, v21, v22, v23, v24, v25, v1050);
        *((_DWORD *)a1 + 6) = v728;
        goto LABEL_883;
      }
      if ((v726 & 0xFFFFFFFD) != 0)
      {
        int v728 = 1;
        uint64_t v729 = "authorizer malfunction";
        goto LABEL_895;
      }
      if (!v726) {
        goto LABEL_520;
      }
LABEL_883:
      uint64_t v603 = 0;
      uint64_t v13 = 0;
LABEL_908:
      if (!*((_DWORD *)a1 + 12) && (v9[4] & 0x20) != 0)
      {
        uint64_t v798 = v8;
        int v799 = **((_DWORD **)v9 + 4);
        uint64_t v800 = sub_1B0D2FF40(v1154, v799, 1);
        if (v800)
        {
          uint64_t v806 = v800;
          uint64_t v807 = v9;
          if (v799 >= 1)
          {
            uint64_t v808 = 0;
            uint64_t v809 = v800 + 32;
            do
            {
              uint64_t v810 = sub_1B0CC8044((uint64_t)a1, (uint64_t)v9, v808, v801, v802, v803, v804, v805);
              *(void *)(v809 + 8 * v808) = v810;
              if (!v810) {
                *(void *)(v809 + 8 * v808) = *(void *)(v1154 + 16);
              }
              ++v808;
            }
            while (v799 != v808);
            uint64_t v807 = v9;
          }
          do
          {
            unsigned int v811 = *((_DWORD *)v807 + 5);
            if ((v811 & 0x80000000) == 0)
            {
              uint64_t v812 = *(void *)v106;
              if (*(unsigned char *)(*(void *)v106 + 103))
              {
                dword_1E9B52248 = v799;
                int v813 = (*(_DWORD *)v806)++;
                if (!*(void *)(v812 + 816))
                {
                  *(_DWORD *)uint64_t v806 = v813;
                  if (!v813) {
                    sub_1B0D15C20(*(void **)(v806 + 16), (void *)v806);
                  }
                }
              }
              else
              {
                uint64_t v814 = *(void *)(v106 + 136);
                uint64_t v815 = v814 + 40 * v811;
                int v817 = *(unsigned __int8 *)(v815 + 1);
                uint64_t v816 = v815 + 1;
                *(_DWORD *)(v816 + 7) = v799;
                ++*(_DWORD *)v806;
                if (v817)
                {
                  sub_1B0D257F4((uint64_t *)v106, v814 + 40 * v811, (char *)v806, 0xFFFFFFF8);
                }
                else
                {
                  *(void *)(v814 + 40 * v811 + 16) = v806;
                  *(unsigned char *)uint64_t v816 = -8;
                }
              }
              *((_DWORD *)v807 + 5) = -1;
              unsigned int v818 = *((_DWORD *)v807 + 6);
              if ((v818 & 0x80000000) == 0)
              {
                uint64_t v819 = *(void *)v106;
                if (*(unsigned char *)(*(void *)v106 + 103))
                {
                  dword_1E9B52248 = v799;
                  int v820 = (*(_DWORD *)v806)++;
                  if (!*(void *)(v819 + 816))
                  {
                    *(_DWORD *)uint64_t v806 = v820;
                    if (!v820) {
                      sub_1B0D15C20(*(void **)(v806 + 16), (void *)v806);
                    }
                  }
                }
                else
                {
                  uint64_t v821 = *(void *)(v106 + 136);
                  uint64_t v822 = v821 + 40 * v818;
                  int v824 = *(unsigned __int8 *)(v822 + 1);
                  uint64_t v823 = v822 + 1;
                  *(_DWORD *)(v823 + 7) = v799;
                  ++*(_DWORD *)v806;
                  if (v824)
                  {
                    sub_1B0D257F4((uint64_t *)v106, v821 + 40 * v818, (char *)v806, 0xFFFFFFF8);
                  }
                  else
                  {
                    *(void *)(v821 + 40 * v818 + 16) = v806;
                    *(unsigned char *)uint64_t v823 = -8;
                  }
                }
                *((_DWORD *)v807 + 6) = -1;
              }
            }
            uint64_t v807 = (unsigned __int8 *)*((void *)v807 + 10);
          }
          while (v807);
          BOOL v197 = (*(_DWORD *)v806)-- == 1;
          int v8 = v798;
          if (v197) {
            sub_1B0D15C20(*(void **)(v806 + 16), (void *)v806);
          }
        }
        else
        {
          uint64_t v13 = 7;
          int v8 = v798;
        }
      }
      *(void *)(v8 + 12) = *(void *)&v1165[12];
      if (v603)
      {
        if (*a1) {
          uint64_t v825 = (void *)sub_1B0D05DC0((uint64_t)*a1, 0x18uLL);
        }
        else {
          uint64_t v825 = (void *)sub_1B0C7FC94(24);
        }
        if (v825)
        {
          *uint64_t v825 = a1[24];
          a1[24] = v825;
          v825[1] = v603;
          v825[2] = sub_1B0D1DF78;
        }
        else
        {
          sub_1B0CA0FA8(*a1, v603, 1);
        }
      }
      goto LABEL_946;
    }
LABEL_170:
    uint64_t v117 = *(unsigned int **)v1148;
    if (!*(void *)v1148)
    {
      if (!*(void *)(v104 + 80))
      {
        sub_1B0D33724((uint64_t *)a1, 1, "COMPOUND QUERY", v21, v22, v23, v24, v25, v1050);
        sub_1B0D33724((uint64_t *)a1, 1, "LEFT-MOST SUBQUERY", v136, v137, v138, v139, v140, v1051);
      }
      int v141 = *v9;
      if (v141 == 134 || v141 == 136)
      {
        long long v1156 = 0u;
        memset(v1157, 0, 24);
        if (v107 == 1)
        {
          uint64_t v151 = *(unsigned int *)&v1165[4];
        }
        else
        {
          uint64_t v151 = *((unsigned int *)a1 + 13);
          *((_DWORD *)a1 + 13) = v151 + 1;
          int v402 = *(_DWORD *)(v106 + 144);
          if (*(_DWORD *)(v106 + 148) <= v402)
          {
            int v402 = sub_1B0D25510(v106, 118, v151, 0, 0, v23, v24, v25);
          }
          else
          {
            *(_DWORD *)(v106 + 144) = v402 + 1;
            uint64_t v403 = *(void *)(v106 + 136) + 40 * v402;
            *(_DWORD *)uint64_t v403 = 118;
            *(_DWORD *)(v403 + 4) = v151;
            *(_OWORD *)(v403 + 8) = 0uLL;
            *(_OWORD *)(v403 + 24) = 0uLL;
          }
          *((_DWORD *)v9 + 5) = v402;
          uint64_t v494 = v9;
          do
          {
            uint64_t v495 = v494;
            uint64_t v494 = (unsigned __int8 *)*((void *)v494 + 11);
          }
          while (v494);
          *((_DWORD *)v495 + 1) |= 0x20u;
        }
        LOBYTE(v1156) = 1;
        *(void *)&v1157[8] = 0;
        DWORD1(v1156) = v151;
        *((void *)&v1156 + 1) = 0;
        *(_DWORD *)v1157 = 0;
        uint64_t v496 = sub_1B0C9110C(a1, v104, &v1156);
        if (v496)
        {
          uint64_t v13 = v496;
          goto LABEL_648;
        }
        int v502 = *v9;
        if (v502 == 136) {
          char v503 = 2;
        }
        else {
          char v503 = 1;
        }
        *((void *)v9 + 10) = 0;
        uint64_t v504 = *((void *)v9 + 12);
        *((void *)v9 + 12) = 0;
        LOBYTE(v1156) = v503;
        unsigned __int8 v505 = v502 + 121;
        if (v505 > 2u) {
          v506 = "UNION";
        }
        else {
          v506 = off_1E5FF0A00[(char)v505];
        }
        sub_1B0D33724((uint64_t *)a1, 1, "%s USING TEMP B-TREE", v497, v498, v499, v500, v501, (char)v506);
        uint64_t v13 = sub_1B0C9110C(a1, v9, &v1156);
        uint64_t v603 = *((void *)v9 + 10);
        *((void *)v9 + 9) = 0;
        *((void *)v9 + 10) = v104;
        if (*v9 == 134) {
          *((_WORD *)v9 + 1) = sub_1B0D41160(*((__int16 *)v9 + 1), *(__int16 *)(v104 + 2));
        }
        uint64_t v604 = (unsigned __int8 *)*((void *)v9 + 12);
        if (v604) {
          sub_1B0D1DF88((void *)v1154, v604);
        }
        *((void *)v9 + 12) = v504;
        *((void *)v9 + 1) = 0;
        if (v107 != 1 && !*(unsigned char *)(v1154 + 103))
        {
          int v605 = *((_DWORD *)a1 + 17);
          uint64_t v606 = (v605 - 1);
          uint64_t v607 = v8;
          uint64_t v608 = (v605 - 2);
          *((_DWORD *)a1 + 17) = v608;
          sub_1B0C9B128((uint64_t)a1, (uint64_t)v9, v606, v598, v599, v600, v601, v602);
          sub_1B0D254B8(v106, 36, v151, v606, v609, v610, v611, v612);
          uint64_t v613 = *(unsigned int *)(v106 + 144);
          sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, v151, 0, 0, v1165, v608, v606);
          int v614 = v608;
          int v8 = v607;
          sub_1B0D31504(v106, v614);
          sub_1B0D254B8(v106, 39, v151, v613, v615, v616, v617, v618);
          sub_1B0D31504(v106, v606);
          sub_1B0D254B8(v106, 122, v151, 0, v619, v620, v621, v622);
        }
      }
      else if (v141 == 135)
      {
        LODWORD(v1156) = 0;
        *(void *)(v104 + 8) = *((void *)v9 + 1);
        *(void *)(v104 + 96) = *((void *)v9 + 12);
        uint64_t v142 = sub_1B0C9110C(a1, v104, v1165);
        *(void *)(v104 + 96) = 0;
        if (v142)
        {
          uint64_t v13 = v142;
          goto LABEL_648;
        }
        *((void *)v9 + 10) = 0;
        uint64_t v589 = *(void *)(v104 + 8);
        *((void *)v9 + 1) = v589;
        if (v589)
        {
          int v590 = sub_1B0D2F978(v106, 17, v589, v143, v144, v145, v146, v147);
          uint64_t v144 = *((unsigned int *)v9 + 3);
          if (v144) {
            sub_1B0C8A924(v106, 160, *((unsigned int *)v9 + 2), (v144 + 1), v144, v145, v146, v147);
          }
        }
        else
        {
          int v590 = 0;
        }
        sub_1B0D33724((uint64_t *)a1, 1, "UNION ALL", v143, v144, v145, v146, v147, v1050);
        uint64_t v13 = sub_1B0C9110C(a1, v9, v1165);
        uint64_t v603 = *((void *)v9 + 10);
        *((void *)v9 + 10) = v104;
        int v716 = sub_1B0D41160(*((__int16 *)v9 + 1), *(__int16 *)(v104 + 2));
        *((_WORD *)v9 + 1) = v716;
        uint64_t v717 = *((void *)v9 + 12);
        if (v717)
        {
          int v718 = v716;
          if (sub_1B0D3A5DC(*(void *)(v717 + 16), (int *)&v1156))
          {
            if ((int)v1156 >= 1)
            {
              int v719 = sub_1B0CF7DF4(v1156);
              if (v718 > v719) {
                *((_WORD *)v9 + 1) = v719;
              }
            }
          }
        }
        if (v590)
        {
          if (*(unsigned char *)(*(void *)v106 + 103)) {
            dword_1E9B52248 = *(_DWORD *)(v106 + 144);
          }
          else {
            *(_DWORD *)(*(void *)(v106 + 136) + 40 * v590 + 8) = *(_DWORD *)(v106 + 144);
          }
        }
      }
      else
      {
        long long v1156 = 0u;
        memset(v1157, 0, 24);
        uint64_t v399 = *((unsigned int *)a1 + 13);
        *((_DWORD *)a1 + 13) = v399 + 2;
        int v400 = *(_DWORD *)(v106 + 144);
        if (*(_DWORD *)(v106 + 148) <= v400)
        {
          int v400 = sub_1B0D25510(v106, 118, v399, 0, 0, v23, v24, v25);
        }
        else
        {
          *(_DWORD *)(v106 + 144) = v400 + 1;
          uint64_t v401 = *(void *)(v106 + 136) + 40 * v400;
          *(_DWORD *)uint64_t v401 = 118;
          *(_DWORD *)(v401 + 4) = v399;
          *(_OWORD *)(v401 + 8) = 0uLL;
          *(_OWORD *)(v401 + 24) = 0uLL;
        }
        *((_DWORD *)v9 + 5) = v400;
        uint64_t v487 = v9;
        do
        {
          uint64_t v488 = v487;
          uint64_t v487 = (unsigned __int8 *)*((void *)v487 + 11);
        }
        while (v487);
        *((_DWORD *)v488 + 1) |= 0x20u;
        LOBYTE(v1156) = 1;
        *(void *)&v1157[8] = 0;
        DWORD1(v1156) = v399;
        *((void *)&v1156 + 1) = 0;
        *(_DWORD *)v1157 = 0;
        uint64_t v489 = sub_1B0C9110C(a1, v104, &v1156);
        if (v489)
        {
          uint64_t v13 = v489;
          goto LABEL_648;
        }
        *((_DWORD *)v9 + 6) = sub_1B0D254B8(v106, 118, (v399 + 1), 0, v490, v491, v492, v493);
        *((void *)v9 + 10) = 0;
        uint64_t v596 = *((void *)v9 + 12);
        *((void *)v9 + 12) = 0;
        DWORD1(v1156) = v399 + 1;
        if ((*v9 + 121) > 2u) {
          uint64_t v597 = "UNION";
        }
        else {
          uint64_t v597 = off_1E5FF0A00[(char)(*v9 + 121)];
        }
        sub_1B0D33724((uint64_t *)a1, 1, "%s USING TEMP B-TREE", v591, v592, v593, v594, v595, (char)v597);
        uint64_t v13 = sub_1B0C9110C(a1, v9, &v1156);
        uint64_t v603 = *((void *)v9 + 10);
        *((void *)v9 + 10) = v104;
        int v649 = *(__int16 *)(v104 + 2);
        if (*((__int16 *)v9 + 1) > v649) {
          *((_WORD *)v9 + 1) = v649;
        }
        uint64_t v650 = (unsigned __int8 *)*((void *)v9 + 12);
        if (v650) {
          sub_1B0D1DF88((void *)v1154, v650);
        }
        *((void *)v9 + 12) = v596;
        if (!v13)
        {
          int v651 = *((_DWORD *)a1 + 17);
          uint64_t v652 = (v651 - 1);
          uint64_t v653 = (v651 - 2);
          *((_DWORD *)a1 + 17) = v653;
          sub_1B0C9B128((uint64_t)a1, (uint64_t)v9, v652, v644, v645, v646, v647, v648);
          unsigned int v1152 = v652;
          sub_1B0D254B8(v106, 36, v399, v652, v654, v655, v656, v657);
          if (*((unsigned char *)a1 + 31))
          {
            unsigned __int8 v662 = *((unsigned char *)a1 + 31) - 1;
            *((unsigned char *)a1 + 31) = v662;
            uint64_t v663 = *((unsigned int *)a1 + v662 + 56);
          }
          else
          {
            uint64_t v663 = (*((_DWORD *)a1 + 14) + 1);
            *((_DWORD *)a1 + 14) = v663;
          }
          unsigned int v1146 = sub_1B0D254B8(v106, 134, v399, v663, v658, v659, v660, v661);
          sub_1B0CEF5FC(v106, 28, (v399 + 1), v653, v663, 0, v780, v781);
          if (v663)
          {
            uint64_t v782 = *((unsigned __int8 *)a1 + 31);
            if (v782 <= 7)
            {
              *((unsigned char *)a1 + 31) = v782 + 1;
              *((_DWORD *)a1 + v782 + 56) = v663;
            }
          }
          sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, v399, 0, 0, v1165, v653, v1152);
          sub_1B0D31504(v106, v653);
          sub_1B0D254B8(v106, 39, v399, v1146, v783, v784, v785, v786);
          sub_1B0D31504(v106, v1152);
          sub_1B0D254B8(v106, 122, (v399 + 1), 0, v787, v788, v789, v790);
          sub_1B0D254B8(v106, 122, v399, 0, v791, v792, v793, v794);
        }
      }
      if (!*((void *)v9 + 11))
      {
        int v795 = *((_DWORD *)a1 + 78);
        if (v795)
        {
          uint64_t v796 = a1[2];
          if (*(unsigned char *)(*v796 + 103)) {
            uint64_t v797 = &byte_1E9B52240;
          }
          else {
            uint64_t v797 = (char *)(v796[17] + 40 * v795);
          }
          int v795 = *((_DWORD *)v797 + 2);
        }
        *((_DWORD *)a1 + 78) = v795;
      }
      goto LABEL_908;
    }
    long long v1156 = 0u;
    memset(v1157, 0, 24);
    *(void *)&long long v1164 = 0;
    long long v1162 = 0u;
    long long v1163 = 0u;
    uint64_t v118 = (uint64_t)*a1;
    uint64_t v119 = (uint64_t)a1[2];
    int v1134 = *((_DWORD *)a1 + 17);
    unsigned int v1119 = v1134 - 2;
    *((_DWORD *)a1 + 17) = v1134 - 2;
    int v120 = *v9;
    uint64_t v121 = *v117;
    if (v120 == 135 || *(unsigned char *)(v118 + 103))
    {
LABEL_173:
      uint64_t v122 = (v121 + 1);
      uint64_t v123 = (_DWORD *)sub_1B0D05DC0(v118, 4 * (int)v122);
      uint64_t v1078 = (uint64_t)v123;
      if (v123)
      {
        *uint64_t v123 = v121;
        if ((int)v121 >= 1)
        {
          uint64_t v127 = v117 + 2;
          uint64_t v128 = v122 - 1;
          if ((unint64_t)(v122 - 1) < 0xC
            || ((uint64_t v129 = (uint32x4_t *)(v123 + 1),
                 v123 + 1 < (unsigned int *)((char *)&v117[6 * v122 - 4] - 2))
              ? (BOOL v130 = v117 + 7 >= &v123[v122])
              : (BOOL v130 = 1),
                !v130))
          {
            unint64_t v131 = 1;
            goto LABEL_198;
          }
          unint64_t v131 = v128 & 0xFFFFFFFFFFFFFFFCLL | 1;
          v127 += 6 * (v128 & 0xFFFFFFFFFFFFFFFCLL);
          uint64_t v132 = (__int16 *)(v117 + 13);
          v133.i64[0] = -1;
          v133.i64[1] = -1;
          unint64_t v134 = v128 & 0xFFFFFFFFFFFFFFFCLL;
          do
          {
            v135.i16[0] = *(v132 - 12);
            v135.i16[1] = *v132;
            v135.i16[2] = v132[12];
            v135.i16[3] = v132[24];
            *v129++ = vaddw_u16(v133, v135);
            v132 += 48;
            v134 -= 4;
          }
          while (v134);
          if (v128 != (v128 & 0xFFFFFFFFFFFFFFFCLL))
          {
LABEL_198:
            uint64_t v152 = v122 - v131;
            uint64_t v153 = &v123[v131];
            uint64_t v154 = (unsigned __int16 *)(v127 + 5);
            do
            {
              int v155 = *v154;
              v154 += 12;
              *v153++ = v155 - 1;
              --v152;
            }
            while (v152);
          }
        }
        uint64_t v1075 = sub_1B0D411F0((uint64_t *)a1, (uint64_t)v9);
      }
      else
      {
        uint64_t v1075 = 0;
      }
      unsigned int v1149 = v1134 - 1;
      int v1127 = v120;
      uint64_t v1140 = (uint64_t)v8;
      v1081 = (void *)v118;
      if (v120 == 135)
      {
        uint64_t v156 = 0;
        unsigned int v1071 = 0;
        goto LABEL_505;
      }
      uint64_t v157 = **((unsigned int **)v9 + 4);
      uint64_t v158 = (*((_DWORD *)a1 + 14) + 1);
      *((_DWORD *)a1 + 14) = v158 + v157;
      int v159 = *(_DWORD *)(v119 + 144);
      unsigned int v1071 = v158;
      if (*(_DWORD *)(v119 + 148) <= v159)
      {
        sub_1B0D25510(v119, 71, 0, v158, 0, v124, v125, v126);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v159 + 1;
        uint64_t v160 = *(void *)(v119 + 136) + 40 * v159;
        *(void *)uint64_t v160 = 71;
        *(_DWORD *)(v160 + 8) = v158;
        *(void *)(v160 + 12) = 0;
        *(void *)(v160 + 28) = 0;
        *(void *)(v160 + 20) = 0;
        *(_DWORD *)(v160 + 36) = 0;
      }
      uint64_t v156 = sub_1B0D2FF40(v118, v157, 1);
      if (v156) {
        BOOL v371 = (int)v157 < 1;
      }
      else {
        BOOL v371 = 1;
      }
      if (!v371)
      {
        uint64_t v372 = 0;
        do
        {
          *(void *)(v156 + 32 + 8 * v372) = sub_1B0CC8044((uint64_t)a1, (uint64_t)v9, v372, v366, v367, v368, v369, v370);
          *(unsigned char *)(*(void *)(v156 + 24) + v372++) = 0;
        }
        while (v157 != v372);
      }
      if ((v120 & 0xFE) == 0x86)
      {
        if ((*(unsigned char *)(v118 + 98) & 0x20) != 0) {
          goto LABEL_511;
        }
        int v373 = (unsigned __int8 *)*((void *)v9 + 10);
        if (!v373) {
          goto LABEL_511;
        }
LABEL_505:
        unsigned int v374 = 1;
        v375 = v9;
        do
        {
          if (*v375 != v120) {
            break;
          }
          v375 = v373;
          ++v374;
          int v373 = (unsigned __int8 *)*((void *)v373 + 10);
        }
        while (v373);
        if (v374 >= 4)
        {
          unsigned int v408 = 2;
          uint64_t v376 = v9;
          do
          {
            uint64_t v376 = (unsigned __int8 *)*((void *)v376 + 10);
            v408 += 2;
          }
          while (v408 < v374);
          int v1107 = 1;
          int v1069 = 134;
        }
        else
        {
LABEL_511:
          int v1107 = 1;
          int v1069 = 134;
          uint64_t v376 = v9;
        }
      }
      else
      {
        int v1069 = v120 & 0xFE;
        int v1107 = 0;
        uint64_t v376 = v9;
      }
      uint64_t v427 = *((void *)v376 + 10);
      *((void *)v376 + 10) = 0;
      *(void *)(v427 + 88) = 0;
      *(void *)(v427 + 72) = sub_1B0CAE478((uint64_t)*a1, v117, 0);
      sub_1B0D3A668((unsigned __int8 *)a1, (uint64_t)v9, *((int **)v9 + 9), (uint64_t)"ORDER", v409, v410, v411, v412);
      uint64_t v1145 = v427;
      sub_1B0D3A668((unsigned __int8 *)a1, v427, *(int **)(v427 + 72), (uint64_t)"ORDER", v413, v414, v415, v416);
      sub_1B0C9B128((uint64_t)a1, (uint64_t)v9, v1149, v417, v418, v419, v420, v421);
      LODWORD(v427) = 0;
      if (v120 == 135)
      {
        unsigned int v428 = *((_DWORD *)v9 + 2);
        LODWORD(v429) = 0;
        if (v428)
        {
          int v430 = *((_DWORD *)a1 + 14);
          uint64_t v427 = (v430 + 1);
          uint64_t v429 = (v430 + 2);
          *((_DWORD *)a1 + 14) = v429;
          int v431 = *((_DWORD *)v9 + 3);
          if (v431) {
            uint64_t v432 = (v431 + 1);
          }
          else {
            uint64_t v432 = v428;
          }
          int v433 = *(_DWORD *)(v119 + 144);
          if (*(_DWORD *)(v119 + 148) <= v433)
          {
            sub_1B0D25510(v119, 80, v432, v427, 0, v424, v425, v426);
          }
          else
          {
            *(_DWORD *)(v119 + 144) = v433 + 1;
            uint64_t v434 = *(void *)(v119 + 136) + 40 * v433;
            *(_DWORD *)uint64_t v434 = 80;
            *(_DWORD *)(v434 + 4) = v432;
            *(_DWORD *)(v434 + 8) = v427;
            *(void *)(v434 + 12) = 0;
            *(void *)(v434 + 28) = 0;
            *(void *)(v434 + 20) = 0;
            *(_DWORD *)(v434 + 36) = 0;
          }
          int v435 = *(_DWORD *)(v119 + 144);
          if (*(_DWORD *)(v119 + 148) <= v435)
          {
            sub_1B0D25510(v119, 80, v427, v429, 0, v424, v425, v426);
          }
          else
          {
            *(_DWORD *)(v119 + 144) = v435 + 1;
            uint64_t v436 = *(void *)(v119 + 136) + 40 * v435;
            *(_DWORD *)uint64_t v436 = 80;
            *(_DWORD *)(v436 + 4) = v427;
            *(_DWORD *)(v436 + 8) = v429;
            *(void *)(v436 + 12) = 0;
            *(void *)(v436 + 28) = 0;
            *(void *)(v436 + 20) = 0;
            *(_DWORD *)(v436 + 36) = 0;
          }
        }
      }
      else
      {
        LODWORD(v429) = 0;
      }
      unsigned int v1093 = v429;
      uint64_t v437 = (unsigned __int8 *)*((void *)v9 + 12);
      if (v437) {
        sub_1B0D1DF88(v1081, v437);
      }
      *((void *)v9 + 12) = 0;
      int v438 = *((_DWORD *)a1 + 14);
      LODWORD(v439) = v438 + 1;
      unsigned int v1100 = v438 + 4;
      *((_DWORD *)a1 + 14) = v438 + 4;
      LOBYTE(v1156) = 13;
      DWORD1(v1156) = v438 + 1;
      *(void *)&v1157[8] = 0;
      *((void *)&v1156 + 1) = 0;
      *(_DWORD *)v1157 = 0;
      LOBYTE(v1162) = 13;
      unsigned int v1155 = v438 + 2;
      DWORD1(v1162) = v438 + 2;
      *((void *)&v1163 + 1) = 0;
      *((void *)&v1162 + 1) = 0;
      LODWORD(v1163) = 0;
      if ((*v9 + 121) > 2u) {
        v440 = "UNION";
      }
      else {
        v440 = off_1E5FF0A00[(char)(*v9 + 121)];
      }
      sub_1B0D33724((uint64_t *)a1, 1, "MERGE (%s)", v422, v423, v424, v425, v426, (char)v440);
      int v445 = *(_DWORD *)(v119 + 144);
      uint64_t v446 = (v445 + 1);
      unsigned int v1115 = v438 + 1;
      if (*(_DWORD *)(v119 + 148) <= v445)
      {
        int v445 = sub_1B0D25510(v119, 11, (v438 + 1), 0, v446, v442, v443, v444);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v446;
        uint64_t v447 = *(void *)(v119 + 136) + 40 * v445;
        *(_DWORD *)uint64_t v447 = 11;
        *(_DWORD *)(v447 + 4) = v439;
        *(_DWORD *)(v447 + 8) = 0;
        *(_DWORD *)(v447 + 12) = v446;
        *(void *)(v447 + 24) = 0;
        *(void *)(v447 + 32) = 0;
        *(void *)(v447 + 16) = 0;
      }
      *(_DWORD *)(v1145 + 8) = v427;
      sub_1B0D33724((uint64_t *)a1, 1, "LEFT", v441, v446, v442, v443, v444, v1052);
      sub_1B0C9110C(a1, v1145, &v1156);
      int v452 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v452)
      {
        uint64_t v439 = v439;
        sub_1B0D25510(v119, 68, v439, 0, 0, v449, v450, v451);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v452 + 1;
        uint64_t v453 = *(void *)(v119 + 136) + 40 * v452;
        uint64_t v439 = v439;
        *(_DWORD *)uint64_t v453 = 68;
        *(_DWORD *)(v453 + 4) = v439;
        *(_OWORD *)(v453 + 8) = 0u;
        *(_OWORD *)(v453 + 24) = 0u;
      }
      uint64_t v454 = *(void *)(v119 + 24);
      *(unsigned char *)(v454 + 31) = 0;
      *(_DWORD *)(v454 + 40) = 0;
      int v455 = *(_DWORD *)(v119 + 144);
      if (*(unsigned char *)(*(void *)v119 + 103)) {
        uint64_t v456 = &byte_1E9B52240;
      }
      else {
        uint64_t v456 = (char *)(*(void *)(v119 + 136) + 40 * v445);
      }
      uint64_t v457 = (v438 + 3);
      *((_DWORD *)v456 + 2) = v455;
      uint64_t v458 = (v455 + 1);
      if (*(_DWORD *)(v119 + 148) <= v455)
      {
        int v1065 = sub_1B0D25510(v119, 11, v1155, 0, v458, v449, v450, v451);
      }
      else
      {
        int v1065 = v455;
        *(_DWORD *)(v119 + 144) = v458;
        uint64_t v459 = *(void *)(v119 + 136) + 40 * v455;
        *(_DWORD *)uint64_t v459 = 11;
        *(void *)(v459 + 4) = v1155;
        *(_DWORD *)(v459 + 12) = v458;
        *(void *)(v459 + 24) = 0;
        *(void *)(v459 + 32) = 0;
        *(void *)(v459 + 16) = 0;
      }
      uint64_t v460 = *((void *)v9 + 1);
      *((void *)v9 + 1) = v1093;
      sub_1B0D33724((uint64_t *)a1, 1, "RIGHT", v448, v458, v449, v450, v451, v1053);
      sub_1B0C9110C(a1, v9, &v1162);
      *((void *)v9 + 1) = v460;
      int v464 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v464)
      {
        sub_1B0D25510(v119, 68, v1155, 0, 0, v461, v462, v463);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v464 + 1;
        uint64_t v465 = *(void *)(v119 + 136) + 40 * v464;
        *(_DWORD *)uint64_t v465 = 68;
        *(_DWORD *)(v465 + 4) = v1155;
        *(_OWORD *)(v465 + 8) = 0u;
        *(_OWORD *)(v465 + 24) = 0u;
      }
      uint64_t v466 = *(void *)(v119 + 24);
      *(unsigned char *)(v466 + 31) = 0;
      *(_DWORD *)(v466 + 40) = 0;
      unsigned int v1088 = sub_1B0D41404((uint64_t)a1, (uint64_t)v9, (uint64_t)&v1156, v1140, v457, v1071, (_DWORD *)v156, v1149);
      unsigned int v1094 = 0;
      if (v1107) {
        unsigned int v1094 = sub_1B0D41404((uint64_t)a1, (uint64_t)v9, (uint64_t)&v1162, v1140, v1100, v1071, (_DWORD *)v156, v1149);
      }
      if (v156)
      {
        BOOL v197 = (*(_DWORD *)v156)-- == 1;
        if (v197) {
          sub_1B0D15C20(*(void **)(v156 + 16), (void *)v156);
        }
      }
      uint64_t v470 = v1149;
      uint64_t v471 = v1149;
      if (v1069 != 136)
      {
        uint64_t v470 = *(unsigned int *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= (int)v470)
        {
          uint64_t v470 = sub_1B0D25510(v119, 10, v1100, v1094, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v470 + 1;
          uint64_t v472 = *(void *)(v119 + 136) + 40 * (int)v470;
          *(_DWORD *)uint64_t v472 = 10;
          *(_DWORD *)(v472 + 4) = v1100;
          *(_DWORD *)(v472 + 8) = v1094;
          *(void *)(v472 + 12) = 0;
          *(void *)(v472 + 28) = 0;
          *(void *)(v472 + 20) = 0;
          *(_DWORD *)(v472 + 36) = 0;
        }
        uint64_t v471 = *(unsigned int *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= (int)v471)
        {
          uint64_t v471 = sub_1B0D25510(v119, 12, v1155, v1149, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v471 + 1;
          uint64_t v473 = *(void *)(v119 + 136) + 40 * (int)v471;
          *(_DWORD *)uint64_t v473 = 12;
          *(_DWORD *)(v473 + 4) = v1155;
          *(_DWORD *)(v473 + 8) = v1149;
          *(void *)(v473 + 12) = 0;
          *(void *)(v473 + 28) = 0;
          *(void *)(v473 + 20) = 0;
          *(_DWORD *)(v473 + 36) = 0;
        }
        int v474 = *(_DWORD *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= v474)
        {
          sub_1B0D25510(v119, 9, 0, v470, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v474 + 1;
          uint64_t v475 = *(void *)(v119 + 136) + 40 * v474;
          *(void *)uint64_t v475 = 9;
          *(_DWORD *)(v475 + 8) = v470;
          *(void *)(v475 + 12) = 0;
          *(void *)(v475 + 28) = 0;
          *(void *)(v475 + 20) = 0;
          *(_DWORD *)(v475 + 36) = 0;
        }
        int v476 = *((__int16 *)v9 + 1);
        int v477 = *(__int16 *)(v1145 + 2);
        if (v476 >= v477)
        {
          __int16 v478 = *((_WORD *)v9 + 1);
          if (v477 + 49 >= v476)
          {
            if (v477 + 31 >= v476) {
              __int16 v478 = v476 + byte_1B0DE5788[v476 - v477];
            }
            else {
              __int16 v478 = v476 + 1;
            }
          }
        }
        else
        {
          __int16 v478 = *(_WORD *)(v1145 + 2);
          if (v476 + 49 >= v477)
          {
            if (v476 + 31 >= v477) {
              __int16 v478 = v477 + byte_1B0DE5788[v477 - v476];
            }
            else {
              __int16 v478 = v477 + 1;
            }
          }
        }
        *((_WORD *)v9 + 1) = v478;
      }
      uint64_t v1142 = v471;
      if (v1127 == 137)
      {
        int v507 = *(__int16 *)(v1145 + 2);
        uint64_t v508 = v470;
        if (*((__int16 *)v9 + 1) > v507)
        {
          *((_WORD *)v9 + 1) = v507;
          uint64_t v508 = v470;
        }
      }
      else
      {
        uint64_t v508 = *(unsigned int *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= (int)v508)
        {
          uint64_t v508 = sub_1B0D25510(v119, 10, v457, v1088, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v508 + 1;
          uint64_t v509 = *(void *)(v119 + 136) + 40 * (int)v508;
          *(_DWORD *)uint64_t v509 = 10;
          *(_DWORD *)(v509 + 4) = v457;
          *(_DWORD *)(v509 + 8) = v1088;
          *(void *)(v509 + 12) = 0;
          *(void *)(v509 + 28) = 0;
          *(void *)(v509 + 20) = 0;
          *(_DWORD *)(v509 + 36) = 0;
        }
        int v510 = *(_DWORD *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= v510)
        {
          sub_1B0D25510(v119, 12, v439, v1149, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v510 + 1;
          uint64_t v511 = *(void *)(v119 + 136) + 40 * v510;
          *(_DWORD *)uint64_t v511 = 12;
          *(_DWORD *)(v511 + 4) = v439;
          *(_DWORD *)(v511 + 8) = v1149;
          *(void *)(v511 + 12) = 0;
          *(void *)(v511 + 28) = 0;
          *(void *)(v511 + 20) = 0;
          *(_DWORD *)(v511 + 36) = 0;
        }
        int v512 = *(_DWORD *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= v512)
        {
          sub_1B0D25510(v119, 9, 0, v508, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v512 + 1;
          uint64_t v513 = *(void *)(v119 + 136) + 40 * v512;
          *(void *)uint64_t v513 = 9;
          *(_DWORD *)(v513 + 8) = v508;
          *(void *)(v513 + 12) = 0;
          *(void *)(v513 + 28) = 0;
          *(void *)(v513 + 20) = 0;
          *(_DWORD *)(v513 + 36) = 0;
        }
      }
      uint64_t v514 = *(unsigned int *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= (int)v514)
      {
        uint64_t v514 = sub_1B0D25510(v119, 10, v457, v1088, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v514 + 1;
        uint64_t v515 = *(void *)(v119 + 136) + 40 * (int)v514;
        *(_DWORD *)uint64_t v515 = 10;
        *(_DWORD *)(v515 + 4) = v457;
        *(_DWORD *)(v515 + 8) = v1088;
        *(void *)(v515 + 12) = 0;
        *(void *)(v515 + 28) = 0;
        *(void *)(v515 + 20) = 0;
        *(_DWORD *)(v515 + 36) = 0;
      }
      int v516 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v516)
      {
        sub_1B0D25510(v119, 12, v439, v470, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v516 + 1;
        uint64_t v517 = *(void *)(v119 + 136) + 40 * v516;
        *(_DWORD *)uint64_t v517 = 12;
        *(_DWORD *)(v517 + 4) = v439;
        *(_DWORD *)(v517 + 8) = v470;
        *(void *)(v517 + 12) = 0;
        *(void *)(v517 + 28) = 0;
        *(void *)(v517 + 20) = 0;
        *(_DWORD *)(v517 + 36) = 0;
      }
      int v518 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v518)
      {
        sub_1B0D25510(v119, 9, 0, v1119, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v518 + 1;
        uint64_t v519 = *(void *)(v119 + 136) + 40 * v518;
        *(void *)uint64_t v519 = 9;
        *(_DWORD *)(v519 + 8) = v1119;
        *(void *)(v519 + 12) = 0;
        *(void *)(v519 + 28) = 0;
        *(void *)(v519 + 20) = 0;
        *(_DWORD *)(v519 + 36) = 0;
      }
      if (v1127 == 135)
      {
        uint64_t v520 = v514;
      }
      else if (v1127 == 137)
      {
        uint64_t v520 = (v514 + 1);
      }
      else
      {
        uint64_t v521 = *(unsigned int *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= (int)v521)
        {
          uint64_t v521 = sub_1B0D25510(v119, 12, v1115, v470, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v521 + 1;
          uint64_t v522 = *(void *)(v119 + 136) + 40 * (int)v521;
          *(_DWORD *)uint64_t v522 = 12;
          *(_DWORD *)(v522 + 4) = v1115;
          *(_DWORD *)(v522 + 8) = v470;
          *(void *)(v522 + 12) = 0;
          *(void *)(v522 + 28) = 0;
          *(void *)(v522 + 20) = 0;
          *(_DWORD *)(v522 + 36) = 0;
        }
        int v523 = *(_DWORD *)(v119 + 144);
        if (*(_DWORD *)(v119 + 148) <= v523)
        {
          sub_1B0D25510(v119, 9, 0, v1119, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v523 + 1;
          uint64_t v524 = *(void *)(v119 + 136) + 40 * v523;
          *(void *)uint64_t v524 = 9;
          *(_DWORD *)(v524 + 8) = v1119;
          *(void *)(v524 + 12) = 0;
          *(void *)(v524 + 28) = 0;
          *(void *)(v524 + 20) = 0;
          *(_DWORD *)(v524 + 36) = 0;
        }
        uint64_t v520 = v514;
        uint64_t v514 = v521;
      }
      uint64_t v525 = *(unsigned int *)(v119 + 144);
      if (v1107)
      {
        if (*(_DWORD *)(v119 + 148) <= (int)v525)
        {
          sub_1B0D25510(v119, 10, v1100, v1094, 0, v467, v468, v469);
        }
        else
        {
          *(_DWORD *)(v119 + 144) = v525 + 1;
          uint64_t v526 = *(void *)(v119 + 136) + 40 * (int)v525;
          *(_DWORD *)uint64_t v526 = 10;
          *(_DWORD *)(v526 + 4) = v1100;
          *(_DWORD *)(v526 + 8) = v1094;
          *(void *)(v526 + 12) = 0;
          *(void *)(v526 + 28) = 0;
          *(void *)(v526 + 20) = 0;
          *(_DWORD *)(v526 + 36) = 0;
        }
      }
      int v527 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v527)
      {
        sub_1B0D25510(v119, 12, v1155, v508, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v527 + 1;
        uint64_t v528 = *(void *)(v119 + 136) + 40 * v527;
        *(_DWORD *)uint64_t v528 = 12;
        *(_DWORD *)(v528 + 4) = v1155;
        *(_DWORD *)(v528 + 8) = v508;
        *(void *)(v528 + 12) = 0;
        *(void *)(v528 + 28) = 0;
        *(void *)(v528 + 20) = 0;
        *(_DWORD *)(v528 + 36) = 0;
      }
      int v529 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v529)
      {
        sub_1B0D25510(v119, 9, 0, v1119, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v529 + 1;
        uint64_t v530 = *(void *)(v119 + 136) + 40 * v529;
        *(void *)uint64_t v530 = 9;
        *(_DWORD *)(v530 + 8) = v1119;
        *(void *)(v530 + 12) = 0;
        *(void *)(v530 + 28) = 0;
        *(void *)(v530 + 20) = 0;
        *(_DWORD *)(v530 + 36) = 0;
      }
      int v531 = *(_DWORD *)(v119 + 144);
      if (*(unsigned char *)(*(void *)v119 + 103)) {
        v532 = &byte_1E9B52240;
      }
      else {
        v532 = (char *)(*(void *)(v119 + 136) + 40 * v1065);
      }
      *((_DWORD *)v532 + 2) = v531;
      if (*(_DWORD *)(v119 + 148) <= v531)
      {
        sub_1B0D25510(v119, 12, v1115, v1142, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v531 + 1;
        uint64_t v533 = *(void *)(v119 + 136) + 40 * v531;
        *(_DWORD *)uint64_t v533 = 12;
        *(_DWORD *)(v533 + 4) = v1115;
        *(_DWORD *)(v533 + 8) = v1142;
        *(void *)(v533 + 12) = 0;
        *(void *)(v533 + 28) = 0;
        *(void *)(v533 + 20) = 0;
        *(_DWORD *)(v533 + 36) = 0;
      }
      int v534 = *(_DWORD *)(v119 + 144);
      if (*(_DWORD *)(v119 + 148) <= v534)
      {
        sub_1B0D25510(v119, 12, v1155, v508, 0, v467, v468, v469);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v534 + 1;
        uint64_t v535 = *(void *)(v119 + 136) + 40 * v534;
        *(_DWORD *)uint64_t v535 = 12;
        *(_DWORD *)(v535 + 4) = v1155;
        *(_DWORD *)(v535 + 8) = v508;
        *(void *)(v535 + 12) = 0;
        *(void *)(v535 + 28) = 0;
        *(void *)(v535 + 20) = 0;
        *(_DWORD *)(v535 + 36) = 0;
      }
      uint64_t v536 = *(void *)(v119 + 24);
      int v537 = 1 - v1134;
      if (*(_DWORD *)(v536 + 68) + *(_DWORD *)(v536 + 72) < 0) {
        sub_1B0D34EC8(v536, v119, v537);
      }
      else {
        *(_DWORD *)(*(void *)(v536 + 80) + 4 * v537) = *(_DWORD *)(v119 + 144);
      }
      sub_1B0CCB908((uint64_t *)v119, 89, 0, 0, 0, v1078, 4294967282, v469);
      sub_1B0CCB908((uint64_t *)v119, 90, HIDWORD(v1156), HIDWORD(v1162), v121, v1075, 4294967288, v538);
      int v542 = *(_DWORD *)(v119 + 144);
      if (v542 >= 1) {
        *(_WORD *)(*(void *)(v119 + 136) + 40 * (v542 - 1) + 2) = 1;
      }
      if (*(_DWORD *)(v119 + 148) <= v542)
      {
        sub_1B0D25510(v119, 14, v520, v514, v525, v539, v540, v541);
      }
      else
      {
        *(_DWORD *)(v119 + 144) = v542 + 1;
        uint64_t v543 = *(void *)(v119 + 136) + 40 * v542;
        *(_DWORD *)uint64_t v543 = 14;
        *(_DWORD *)(v543 + 4) = v520;
        *(_DWORD *)(v543 + 8) = v514;
        *(_DWORD *)(v543 + 12) = v525;
        *(void *)(v543 + 24) = 0;
        *(void *)(v543 + 32) = 0;
        *(void *)(v543 + 16) = 0;
      }
      uint64_t v544 = *(void *)(v119 + 24);
      int v545 = -v1134;
      if (*(_DWORD *)(v544 + 68) + *(_DWORD *)(v544 + 72) < 0) {
        sub_1B0D34EC8(v544, v119, v545);
      }
      else {
        *(_DWORD *)(*(void *)(v544 + 80) + 4 * v545) = *(_DWORD *)(v119 + 144);
      }
      uint64_t v546 = *((void *)v376 + 10);
      if (v546)
      {
        if (*a1) {
          int v547 = (void *)sub_1B0D05DC0((uint64_t)*a1, 0x18uLL);
        }
        else {
          int v547 = (void *)sub_1B0C7FC94(24);
        }
        if (v547)
        {
          *int v547 = a1[24];
          a1[24] = v547;
          v547[1] = v546;
          v547[2] = sub_1B0D1DF78;
        }
        else
        {
          sub_1B0CA0FA8(*a1, v546, 1);
        }
      }
      *((void *)v376 + 10) = v1145;
      *(void *)(v1145 + 88) = v376;
      int v548 = *(void **)(v1145 + 72);
      if (v548) {
        sub_1B0D270DC(v1081, v548);
      }
      *(void *)(v1145 + 72) = 0;
      int v549 = *((_DWORD *)a1 + 78);
      if (v549)
      {
        uint64_t v550 = a1[2];
        if (*(unsigned char *)(*v550 + 103)) {
          uint64_t v551 = &byte_1E9B52240;
        }
        else {
          uint64_t v551 = (char *)(v550[17] + 40 * v549);
        }
        int v549 = *((_DWORD *)v551 + 2);
      }
      *((_DWORD *)a1 + 78) = v549;
      uint64_t v13 = *((_DWORD *)a1 + 12) != 0;
      goto LABEL_946;
    }
    int v390 = 1;
    while (2)
    {
      if (v390 > **((_DWORD **)v9 + 4)) {
        goto LABEL_173;
      }
      if ((int)v121 < 1)
      {
        int v393 = 0;
      }
      else
      {
        int v393 = 0;
        v394 = (unsigned __int16 *)(v117 + 7);
        while (1)
        {
          int v395 = *v394;
          v394 += 12;
          if (v390 == v395) {
            break;
          }
          if (v121 == ++v393) {
            goto LABEL_537;
          }
        }
      }
      if (v393 == v121)
      {
LABEL_537:
        v1167[0] = 0;
        v1167[1] = 0;
        uint64_t v396 = sub_1B0C904D8(v118, 155, (uint64_t)v1167, 0);
        if (!v396)
        {
          uint64_t v13 = 7;
          goto LABEL_946;
        }
        *(_DWORD *)(v396 + 4) |= 0x800u;
        *(_DWORD *)(v396 + 8) = v390;
        if (v117)
        {
          int v397 = *v117;
          if ((int)v117[1] <= (int)*v117)
          {
            uint64_t v398 = sub_1B0D55B34((uint64_t)*a1, v117, (unsigned __int8 *)v396);
            goto LABEL_542;
          }
          *uint64_t v117 = v397 + 1;
          uint64_t v391 = &v117[6 * v397];
          *((void *)v391 + 2) = 0;
          *((void *)v391 + 3) = 0;
          *((void *)v391 + 1) = v396;
          *(void *)v1148 = v117;
LABEL_527:
          v392 = &v117[6 * (int)v121];
          uint64_t v121 = (v121 + 1);
          *((_WORD *)v392 + 14) = v390;
        }
        else
        {
          uint64_t v398 = (unsigned int *)sub_1B0D55ACC(*a1, (unsigned __int8 *)v396);
LABEL_542:
          uint64_t v117 = v398;
          *(void *)v1148 = v398;
          if (v398) {
            goto LABEL_527;
          }
        }
      }
      ++v390;
      if (*(unsigned char *)(v118 + 103)) {
        goto LABEL_173;
      }
      continue;
    }
  }
  char v1126 = v102;
  v1139 = v8;
  int v110 = 0;
  while (2)
  {
    if (v110 >= *v101)
    {
      uint64_t v251 = (unsigned char *)*((void *)v9 + 6);
      uint64_t v11 = v1153;
      if (v251 && *v251 == 44 && (*(unsigned char *)(v1153 + 97) & 0x80) == 0) {
        sub_1B0D3D438(a1, (uint64_t)v9);
      }
      if ((*(_WORD *)(v1153 + 96) & 0x201) == 0 && sub_1B0D3D540((uint64_t *)a1, (uint64_t)v9))
      {
        if (*(unsigned char *)(v1153 + 103)) {
          goto LABEL_24;
        }
        long long v101 = (int *)*((void *)v9 + 5);
      }
      if (*v101 >= 1)
      {
        uint64_t v252 = 0;
        v253 = v101 - 14;
        int v254 = -1;
        v1063 = v9;
        do
        {
          uint64_t v255 = &v101[26 * v252];
          long long v1156 = 0u;
          memset(v1157, 0, 24);
          uint64_t v257 = *((void *)v255 + 11);
          uint64_t v256 = (uint64_t *)(v255 + 22);
          if (!v257)
          {
            uint64_t v20 = *(void *)&v101[26 * v252 + 6];
            if (v20) {
              sub_1B0D354D0((uint64_t)a1, 20, v20, (uint64_t)&byte_1B0DE9952, *(void *)&v101[26 * v252 + 4]);
            }
          }
          v258 = &v101[26 * v252];
          uint64_t v261 = *((void *)v258 + 6);
          uint64_t v260 = (unsigned __int8 **)(v258 + 12);
          uint64_t v259 = v261;
          if (!v261) {
            goto LABEL_393;
          }
          uint64_t v1150 = v259;
          LODWORD(v1162) = 0;
          sub_1B0CB0C94(v9, &v1162);
          *((_DWORD *)a1 + 77) += v1162;
          int v266 = *(_DWORD *)(v11 + 96);
          if ((v266 & 0x1000) == 0)
          {
            if ((*(_WORD *)((unsigned char *)&v101[26 * v252 + 17] + 1) & 0x100) == 0
              || (uint64_t v267 = *(void *)&v101[26 * v252 + 26], *(unsigned char *)(v267 + 18)) && *(int *)v267 <= 1)
            {
              sub_1B0D3D790((uint64_t *)a1, (unsigned __int8 *)v1150, *((void *)v9 + 6), (uint64_t)v101, v252, v263, v264, v265);
              int v266 = *(_DWORD *)(v11 + 96);
            }
          }
          if ((v266 & 0x4000000) == 0 && (*(_WORD *)((unsigned char *)&v101[26 * v252 + 17] + 1) & 0x108) == 0)
          {
            uint64_t v316 = *v260;
            uint64_t v317 = *v260;
            while (v317)
            {
              if ((v317[4] & 9) == 0 && (!*((void *)v317 + 10) || *v317 == 135))
              {
                uint64_t v318 = *((void *)v317 + 14);
                uint64_t v317 = (unsigned __int8 *)*((void *)v317 + 10);
                if (!v318) {
                  continue;
                }
              }
              goto LABEL_405;
            }
            uint64_t v332 = *v256;
            uint64_t v333 = (unsigned int *)*((void *)v316 + 9);
            if (v333)
            {
              uint64_t v334 = *v333;
              if ((int)v334 >= 1)
              {
                v335 = (unsigned __int16 *)(v333 + 7);
                do
                {
                  int v337 = *v335;
                  v335 += 12;
                  int v336 = v337;
                  if (v337)
                  {
                    unsigned int v338 = v336 - 1;
                    if (v338 >= 0x3F) {
                      LOBYTE(v338) = 63;
                    }
                    v332 |= 1 << v338;
                  }
                  --v334;
                }
                while (v334);
              }
            }
            if (*(__int16 *)(*(void *)&v101[26 * v252 + 10] + 54) >= 1)
            {
              unint64_t v339 = 0;
              uint64_t v340 = *(unsigned __int16 *)(*(void *)&v101[26 * v252 + 10] + 54);
              do
              {
                uint64_t v341 = 1 << v339;
                if (v339 >= 0x3F) {
                  uint64_t v341 = 0x8000000000000000;
                }
                if ((v341 & v332) == 0 && v316 != 0)
                {
                  uint64_t v343 = v316;
                  do
                  {
                    uint64_t v344 = *(void *)(*((void *)v343 + 4) + 24 * v339 + 8);
                    if (*(unsigned char *)v344 != 121)
                    {
                      *(unsigned char *)uint64_t v344 = 121;
                      *(_DWORD *)(v344 + 4) &= 0xFFF7DFFF;
                      *((_DWORD *)v343 + 1) |= 0x1000000u;
                    }
                    uint64_t v343 = (unsigned __int8 *)*((void *)v343 + 10);
                  }
                  while (v343);
                }
                ++v339;
              }
              while (v339 != v340);
            }
          }
LABEL_405:
          uint64_t v268 = v256 - 10;
          uint64_t v269 = a1[46];
          a1[46] = *(void **)&v101[26 * v252 + 6];
          int v270 = *((_DWORD *)v9 + 1);
          uint64_t v271 = (uint64_t)&v101[26 * (int)v252 + 2];
          v1135 = v269;
          if ((*(unsigned char *)(v271 + 62) & 1) == 0
            || (uint64_t v272 = *(void *)&v101[26 * (int)v252 + 26],
                int v273 = *(unsigned __int8 *)(v272 + 18),
                *(unsigned char *)(v272 + 18))
            && ((int v274 = *(_DWORD *)v272, v273 != 2) ? (v275 = v274 <= 1) : (v275 = 1), v275))
          {
            if ((v101[17] & 0x40) == 0 && (*((unsigned char *)*a1 + 99) & 2) == 0)
            {
              int v276 = *v101;
              v1120 = v268;
              uint64_t v277 = sub_1B0D3DA6C((uint64_t)v101, (void *)v271, (v252 + 1), *v101);
              uint64_t v268 = v1120;
              if (!v277)
              {
                if (v252)
                {
                  if ((v270 & 0x10000000) == 0)
                  {
                    uint64_t v329 = v253;
                    int v330 = v254;
                    do
                    {
                      if ((v329[31] & 0x22) != 0) {
                        break;
                      }
                      BOOL v130 = __CFADD__(v330++, 1);
                      if (v130) {
                        goto LABEL_478;
                      }
                      uint64_t v331 = *(void *)v329;
                      v329 -= 26;
                    }
                    while (!v331);
                  }
                }
                else if (v276 == 1 || (v101[43] & 2) != 0 || (v270 & 0x10000000) == 0)
                {
LABEL_478:
                  int v345 = *(_DWORD *)(v1143 + 144);
                  int v346 = v345 + 1;
                  uint64_t v347 = (*((_DWORD *)a1 + 14) + 1);
                  *((_DWORD *)a1 + 14) = v347;
                  v348 = &v101[26 * v252];
                  v348[15] = v347;
                  int v1106 = v345;
                  v1114 = (unsigned int *)(v348 + 15);
                  if (*(_DWORD *)(v1143 + 148) <= v345)
                  {
                    int v350 = v345 + 1;
                    sub_1B0D25510(v1143, 11, v347, 0, (v345 + 1), v263, v264, v265);
                    int v346 = v350;
                    LOBYTE(v268) = (_BYTE)v1120;
                  }
                  else
                  {
                    *(_DWORD *)(v1143 + 144) = v346;
                    uint64_t v349 = *(void *)(v1143 + 136) + 40 * v345;
                    *(_DWORD *)uint64_t v349 = 11;
                    *(_DWORD *)(v349 + 4) = v347;
                    *(_DWORD *)(v349 + 8) = 0;
                    *(_DWORD *)(v349 + 12) = v346;
                    *(void *)(v349 + 24) = 0;
                    *(void *)(v349 + 32) = 0;
                    *(void *)(v349 + 16) = 0;
                  }
                  uint64_t v351 = &v101[26 * v252];
                  v351[14] = v346;
                  int v352 = *v1114;
                  LOBYTE(v1156) = 13;
                  *(void *)&v1157[8] = 0;
                  DWORD1(v1156) = v352;
                  *((void *)&v1156 + 1) = 0;
                  *(_DWORD *)v1157 = 0;
                  sub_1B0D33724((uint64_t *)a1, 1, "CO-ROUTINE %!S", v278, v262, v263, v264, v265, (char)v268);
                  sub_1B0C9110C(a1, v1150, &v1156);
                  *(_WORD *)(*((void *)v351 + 5) + 58) = *(_WORD *)(v1150 + 2);
                  *(_WORD *)((char *)v351 + 69) |= 0x20u;
                  v351[16] = HIDWORD(v1156);
                  uint64_t v356 = *v1114;
                  int v357 = *(_DWORD *)(v1143 + 144);
                  if (*(_DWORD *)(v1143 + 148) <= v357)
                  {
                    sub_1B0D25510(v1143, 68, v356, 0, 0, v353, v354, v355);
                  }
                  else
                  {
                    *(_DWORD *)(v1143 + 144) = v357 + 1;
                    uint64_t v358 = *(void *)(v1143 + 136) + 40 * v357;
                    *(_DWORD *)uint64_t v358 = 68;
                    *(_DWORD *)(v358 + 4) = v356;
                    *(_OWORD *)(v358 + 8) = 0u;
                    *(_OWORD *)(v358 + 24) = 0u;
                  }
                  uint64_t v11 = v1153;
                  uint64_t v359 = *(void *)(v1143 + 24);
                  *(unsigned char *)(v359 + 31) = 0;
                  *(_DWORD *)(v359 + 40) = 0;
                  uint64_t v360 = &byte_1E9B52240;
                  if (!*(unsigned char *)(*(void *)v1143 + 103)) {
                    uint64_t v360 = (char *)(*(void *)(v1143 + 136) + 40 * v1106);
                  }
                  *((_DWORD *)v360 + 2) = *(_DWORD *)(v1143 + 144);
                  *((unsigned char *)a1 + 31) = 0;
                  *((_DWORD *)a1 + 10) = 0;
                  if (*(unsigned char *)(v1153 + 103)) {
                    goto LABEL_24;
                  }
                  goto LABEL_448;
                }
              }
            }
          }
          uint64_t v279 = &v101[26 * v252];
          __int16 v281 = *(_WORD *)((char *)v279 + 69);
          uint64_t v280 = (__int16 *)((char *)v279 + 69);
          if ((v281 & 0x100) != 0
            && (uint64_t v282 = *(void *)&v101[26 * v252 + 26], v283 = *(unsigned int *)(v282 + 4), (int)v283 >= 1))
          {
            sub_1B0D254B8(v1143, 10, *(unsigned int *)(v282 + 8), v283, v262, v263, v264, v265);
            uint64_t v288 = v101[26 * v252 + 18];
            uint64_t v289 = *(unsigned int *)(v282 + 12);
            if (v288 != v289) {
              sub_1B0D254B8(v1143, 115, v288, v289, v284, v285, v286, v287);
            }
            __int16 v290 = *(_WORD *)(v282 + 16);
            uint64_t v291 = v1150;
            uint64_t v11 = v1153;
          }
          else
          {
            char v292 = (char)v268;
            uint64_t v293 = sub_1B0D3DA6C((uint64_t)v101, v268, 0, v252);
            if (!v293)
            {
              int v306 = *((_DWORD *)a1 + 14) + 1;
              *((_DWORD *)a1 + 14) = v306;
              char v307 = &v101[26 * v252];
              v307[15] = v306;
              v1121 = (unsigned int *)(v307 + 15);
              int v308 = sub_1B0D2F924(v1143, 9, v294, v295, v296, v297, v298, v299);
              v307[14] = v308 + 1;
              v1099 = v307 + 14;
              __int16 v315 = *v280;
              *v280 |= 0x10u;
              int v1087 = v308;
              unsigned int v1113 = v308 + 1;
              if ((v315 & 8) != 0) {
                int v1105 = 0;
              }
              else {
                int v1105 = sub_1B0D2F924(v1143, 15, v309, v310, v311, v312, v313, v314);
              }
              uint64_t v319 = &v101[26 * v252];
              int v320 = v319[18];
              LOBYTE(v1156) = 12;
              *(void *)&v1157[8] = 0;
              DWORD1(v1156) = v320;
              *((void *)&v1156 + 1) = 0;
              *(_DWORD *)v1157 = 0;
              int v321 = sub_1B0D33724((uint64_t *)a1, 1, "MATERIALIZE %!S", v310, v311, v312, v313, v314, v292);
              sub_1B0C9110C(a1, v1150, &v1156);
              v1092 = v319 + 18;
              *(_WORD *)(*((void *)v319 + 5) + 58) = *(_WORD *)(v1150 + 2);
              int v9 = v1063;
              if (v1105)
              {
                uint64_t v326 = &byte_1E9B52240;
                if (!*(unsigned char *)(*(void *)v1143 + 103)) {
                  uint64_t v326 = (char *)(*(void *)(v1143 + 136) + 40 * v1105);
                }
                *((_DWORD *)v326 + 2) = *(_DWORD *)(v1143 + 144);
              }
              sub_1B0D254B8(v1143, 67, *v1121, v1113, v322, v323, v324, v325);
              sub_1B0D33878(v1143, v321, v321, -1);
              uint64_t v327 = &byte_1E9B52240;
              if (!*(unsigned char *)(*(void *)v1143 + 103)) {
                uint64_t v327 = (char *)(*(void *)(v1143 + 136) + 40 * v1087);
              }
              *((_DWORD *)v327 + 2) = *(_DWORD *)(v1143 + 144);
              *((unsigned char *)a1 + 31) = 0;
              *((_DWORD *)a1 + 10) = 0;
              uint64_t v11 = v1153;
              if ((*v280 & 0x108) == 0x100)
              {
                uint64_t v328 = *(void *)&v101[26 * v252 + 26];
                *(void *)(v328 + 4) = *v1099;
                *(_DWORD *)(v328 + 12) = *v1092;
                *(_WORD *)(v328 + 16) = *(_WORD *)(v1150 + 2);
              }
              if (*(unsigned char *)(v1153 + 103)) {
                goto LABEL_24;
              }
              goto LABEL_448;
            }
            uint64_t v300 = v293;
            uint64_t v301 = *(unsigned int *)(v293 + 48);
            if (v301) {
              sub_1B0D254B8(v1143, 10, *(unsigned int *)(v293 + 52), v301, v296, v297, v298, v299);
            }
            uint64_t v302 = v101[26 * v252 + 18];
            uint64_t v303 = *(unsigned int *)(v300 + 64);
            int v304 = *(_DWORD *)(v1143 + 144);
            uint64_t v11 = v1153;
            if (*(_DWORD *)(v1143 + 148) <= v304)
            {
              sub_1B0D25510(v1143, 115, v302, v303, 0, v297, v298, v299);
            }
            else
            {
              *(_DWORD *)(v1143 + 144) = v304 + 1;
              uint64_t v305 = *(void *)(v1143 + 136) + 40 * v304;
              *(_DWORD *)uint64_t v305 = 115;
              *(_DWORD *)(v305 + 4) = v302;
              *(_DWORD *)(v305 + 8) = v303;
              *(void *)(v305 + 12) = 0;
              *(void *)(v305 + 28) = 0;
              *(void *)(v305 + 20) = 0;
              *(_DWORD *)(v305 + 36) = 0;
            }
            __int16 v290 = *(_WORD *)(*(void *)(v300 + 40) + 2);
            uint64_t v291 = v1150;
          }
          *(_WORD *)(v291 + 2) = v290;
          if (*(unsigned char *)(v11 + 103)) {
            goto LABEL_24;
          }
LABEL_448:
          LODWORD(v1162) = 0;
          sub_1B0CB0C94(v9, &v1162);
          *((_DWORD *)a1 + 77) -= v1162;
          a1[46] = v1135;
LABEL_393:
          ++v252;
          --v254;
          v253 += 26;
        }
        while (v252 < *v101);
      }
      uint64_t v361 = (void *)*((void *)v9 + 4);
      uint64_t v362 = *((void *)v9 + 6);
      uint64_t v363 = (void *)*((void *)v9 + 7);
      uint64_t v1151 = *((void *)v9 + 8);
      int v364 = *((_DWORD *)v9 + 1);
      LOBYTE(v1160) = v364 & 1;
      if ((v364 & 9) == 1)
      {
        uint64_t v365 = v1139;
        if (!sub_1B0D323D8(*(unint64_t *)&v1159[0], (unint64_t)v361, 0xFFFFFFFFLL)
          && !*((void *)v9 + 14))
        {
          *((_DWORD *)v9 + 1) &= ~1u;
          uint64_t v363 = sub_1B0CAE478(v1153, v361, 0);
          *((void *)v9 + 7) = v363;
          *((_DWORD *)v9 + 1) |= 8u;
          LOBYTE(v1160) = 2;
        }
      }
      else
      {
        uint64_t v365 = v1139;
      }
      if (*(void *)&v1159[0])
      {
        uint64_t v404 = sub_1B0D3DB50((uint64_t *)a1, *(int **)&v1159[0], 0, *(_DWORD *)v361);
        uint64_t v405 = *((unsigned int *)a1 + 13);
        *((_DWORD *)a1 + 13) = v405 + 1;
        HIDWORD(v1159[0]) = v405;
        int v407 = sub_1B0CCB908((uint64_t *)v1143, 118, v405, (**(_DWORD **)&v1159[0] + *(_DWORD *)v361 + 1), 0, v404, 4294967288, v406);
      }
      else
      {
        int v407 = -1;
      }
      DWORD2(v1159[1]) = v407;
      if (*v365 != 12
        || (sub_1B0D254B8(v1143, 118, *((unsigned int *)v365 + 1), *(unsigned int *)v361, v22, v23, v24, v25),
            (v9[5] & 8) == 0))
      {
LABEL_629:
        uint64_t v485 = (*((_DWORD *)a1 + 17) - 1);
        *((_DWORD *)a1 + 17) = v485;
        if ((v9[5] & 0x40) == 0) {
          *((_WORD *)v9 + 1) = 320;
        }
        if (*((void *)v9 + 12)) {
          sub_1B0C9B128((uint64_t)a1, (uint64_t)v9, v485, v21, v22, v23, v24, v25);
        }
        if (!*((_DWORD *)v9 + 2) && (DWORD2(v1159[1]) & 0x80000000) == 0)
        {
          if (*(unsigned char *)(*(void *)v1143 + 103)) {
            v486 = &byte_1E9B52240;
          }
          else {
            v486 = (char *)(*(void *)(v1143 + 136) + 40 * DWORD2(v1159[1]));
          }
          char *v486 = 119;
          BYTE4(v1159[2]) |= 1u;
        }
        if (v9[4])
        {
          uint64_t v624 = *((unsigned int *)a1 + 13);
          *((_DWORD *)a1 + 13) = v624 + 1;
          HIDWORD(v1160) = v624;
          uint64_t v625 = sub_1B0D3DB50((uint64_t *)a1, *((int **)v9 + 4), 0, 0);
          int v1161 = sub_1B0CCB908((uint64_t *)v1143, 118, v624, 0, 0, v625, 4294967288, v626);
          int v627 = *(_DWORD *)(v1143 + 144);
          BOOL v628 = __OFSUB__(v627, 1);
          int v629 = v627 - 1;
          if (v629 < 0 == v628) {
            *(_WORD *)(*(void *)(v1143 + 136) + 40 * v629 + 2) = 8;
          }
          char v623 = 3;
        }
        else
        {
          char v623 = 0;
        }
        BYTE1(v1160) = v623;
        if ((v1126 & 8) == 0 && !v363)
        {
          uint64_t v630 = *((_DWORD *)v9 + 1) & 0x4000 | (((_BYTE)v1160 != 0) << 8);
          uint64_t v631 = *((void *)v9 + 14);
          if (v631) {
            sub_1B0D3DC08((uint64_t *)a1, (uint64_t)v9, v20, v21, v22, v23, v24, v25);
          }
          uint64_t v632 = sub_1B0C9B61C((uint64_t)a1, v101, v362, *(int **)&v1159[0], *((int **)v9 + 4), (uint64_t)v9, v630, *((__int16 *)v9 + 1));
          uint64_t v11 = v1153;
          if (!v632) {
            goto LABEL_24;
          }
          uint64_t v636 = v632;
          int v637 = *(__int16 *)(v632 + 70);
          if (v637 < *((__int16 *)v9 + 1)) {
            *((_WORD *)v9 + 1) = v637;
          }
          if ((_BYTE)v1160 && *(unsigned char *)(v632 + 67)) {
            BYTE1(v1160) = *(unsigned char *)(v632 + 67);
          }
          if (*(void *)&v1159[0])
          {
            int v638 = *(char *)(v632 + 65) & ~(*(char *)(v632 + 65) >> 31);
            DWORD2(v1159[0]) = v638;
            if ((*(unsigned char *)(v632 + 68) & 4) != 0)
            {
              uint64_t v664 = v632 + 120 * *(unsigned __int8 *)(v632 + 64);
              uint64_t v665 = *(void *)(v664 + 792);
              int8x8_t v639 = (_DWORD *)(v664 + 752);
              if (v665) {
                int8x8_t v639 = (_DWORD *)(v632 + 48);
              }
            }
            else
            {
              int8x8_t v639 = (_DWORD *)(v632 + 48);
            }
            LODWORD(v1159[2]) = *v639;
            if (**(_DWORD **)&v1159[0] != v638) {
              goto LABEL_813;
            }
            *(void *)&v1159[0] = 0;
          }
          if ((DWORD2(v1159[1]) & 0x80000000) == 0) {
            sub_1B0C9CF24(v1143, SDWORD2(v1159[1]));
          }
LABEL_813:
          int v1137 = v485;
          if (!v631)
          {
            sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, 0xFFFFFFFFLL, (int **)v1159, (uint64_t)&v1160, v365, *(unsigned int *)(v636 + 48), *(unsigned int *)(v636 + 52));
            sub_1B0C9FAF0((uint64_t **)v636, v684, v685, v686, v687, v688, v689, v690);
            uint64_t v672 = v1143;
LABEL_1085:
            if (BYTE1(v1160) == 3) {
              sub_1B0D33724((uint64_t *)a1, 0, "USE TEMP B-TREE FOR %s", v691, v692, v693, v694, v695, (char)"DISTINCT");
            }
            uint64_t v11 = v1153;
            if (*(void *)&v1159[0]) {
              sub_1B0CC8AD0((uint64_t)a1, (uint64_t)v9, (uint64_t)v1159, *(unsigned int *)v361, v1139, v693, v694, v695);
            }
            sub_1B0D31504(v672, v1137);
            uint64_t v13 = *((_DWORD *)a1 + 12) > 0;
            goto LABEL_25;
          }
          int v666 = *((_DWORD *)a1 + 17);
          int v667 = v666 - 1;
          uint64_t v668 = (v666 - 2);
          uint64_t v669 = v365;
          uint64_t v670 = (v666 - 3);
          *((_DWORD *)a1 + 17) = v670;
          uint64_t v671 = (*((_DWORD *)a1 + 14) + 1);
          *((_DWORD *)a1 + 14) = v671;
          sub_1B0D3E2EC((uint64_t *)a1, (uint64_t)v9, (uint64_t **)v636, v671, (v666 - 1), v633, v634, v635);
          uint64_t v672 = v1143;
          sub_1B0D254B8(v1143, 9, 0, v670, v673, v674, v675, v676);
          sub_1B0D31504(v1143, v667);
          LODWORD(v1159[2]) = 0;
          sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, 0xFFFFFFFFLL, (int **)v1159, (uint64_t)&v1160, v669, v668, v670);
          sub_1B0D31504(v1143, v668);
          sub_1B0D2F978(v1143, 67, v671, v677, v678, v679, v680, v681);
          uint64_t v682 = v1143;
          int v683 = v670;
LABEL_1084:
          sub_1B0D31504(v682, v683);
          goto LABEL_1085;
        }
        memset(v1157, 0, sizeof(v1157));
        long long v1156 = 0u;
        if (!v363)
        {
          BOOL v643 = 0;
          *((_WORD *)v9 + 1) = 0;
          goto LABEL_837;
        }
        int8x8_t v640 = (unsigned int *)*((void *)v9 + 4);
        uint64_t v641 = *v640;
        if ((int)v641 >= 1)
        {
          int16x4_t v642 = v640 + 2;
          if (v641 == 1)
          {
            int v696 = *v640;
LABEL_818:
            uint64_t v699 = (_WORD *)v642 + 11;
            unsigned int v700 = v696 + 1;
            do
            {
              *uint64_t v699 = 0;
              v699 += 12;
              --v700;
            }
            while (v700 > 1);
            goto LABEL_820;
          }
          v642 += 6 * (v641 & 0xFFFFFFFE);
          int v696 = v641 - (v641 & 0xFFFFFFFE);
          uint64_t v697 = (_WORD *)v640 + 27;
          uint64_t v698 = v641 & 0xFFFFFFFE;
          do
          {
            *(v697 - 12) = 0;
            *uint64_t v697 = 0;
            v697 += 24;
            v698 -= 2;
          }
          while (v698);
          if ((v641 & 0xFFFFFFFE) != v641) {
            goto LABEL_818;
          }
        }
LABEL_820:
        uint64_t v701 = *(unsigned int *)v363;
        if ((int)v701 >= 1)
        {
          v702 = v363 + 1;
          if (v701 == 1)
          {
            int v703 = *(_DWORD *)v363;
          }
          else
          {
            v702 += 3 * (v701 & 0xFFFFFFFE);
            int v703 = v701 - (v701 & 0xFFFFFFFE);
            int v704 = (_WORD *)v363 + 27;
            uint64_t v705 = v701 & 0xFFFFFFFE;
            do
            {
              *(v704 - 12) = 0;
              *int v704 = 0;
              v704 += 24;
              v705 -= 2;
            }
            while (v705);
            if ((v701 & 0xFFFFFFFE) == v701) {
              goto LABEL_828;
            }
          }
          int v706 = (_WORD *)v702 + 11;
          unsigned int v707 = v703 + 1;
          do
          {
            *int v706 = 0;
            v706 += 12;
            --v707;
          }
          while (v707 > 1);
        }
LABEL_828:
        if (*((__int16 *)v9 + 1) >= 67) {
          *((_WORD *)v9 + 1) = 66;
        }
        unint64_t v708 = *(void *)&v1159[0];
        if (*(void *)&v1159[0] && (uint64_t v709 = *(unsigned int *)v363, v709 == **(_DWORD **)&v1159[0]))
        {
          if ((int)v709 >= 1)
          {
            int v710 = (char *)(*(void *)&v1159[0] + 24);
            uint64_t v711 = v363 + 3;
            do
            {
              char v712 = *v710;
              v710 += 24;
              *uint64_t v711 = v712 & 1;
              v711 += 24;
              --v709;
            }
            while (v709);
          }
          BOOL v643 = sub_1B0D323D8((unint64_t)v363, v708, 0xFFFFFFFFLL) == 0;
        }
        else
        {
          BOOL v643 = 0;
        }
LABEL_837:
        int v713 = *((_DWORD *)a1 + 17) - 1;
        *((_DWORD *)a1 + 17) = v713;
        uint64_t v714 = (unsigned int *)sub_1B0C79680(v1153, 0x38uLL);
        if (v714) {
          sub_1B0D33A90((uint64_t *)a1, (void (*)(uint64_t, uint64_t))sub_1B0D3FC88, (uint64_t)v714);
        }
        if (*(unsigned char *)(v1153 + 103)) {
          goto LABEL_864;
        }
        v714[13] = *((_DWORD *)v9 + 4);
        memset(&v1157[8], 0, 32);
        *(void *)&long long v1156 = a1;
        *((void *)&v1156 + 1) = v101;
        *(void *)v1157 = v714;
        if (v363) {
          int v715 = *(_DWORD *)v363;
        }
        else {
          LOWORD(v715) = 0;
        }
        *((_WORD *)v714 + 1) = v715;
        *((void *)v714 + 2) = v363;
        sub_1B0D3FCE4((uint64_t)&v1156, (int *)v361);
        sub_1B0D3FCE4((uint64_t)&v1156, *(int **)&v1159[0]);
        if (v1151)
        {
          if (v363)
          {
            *(void *)&long long v1164 = 0;
            *(void *)&long long v1162 = a1;
            *((void *)&v1162 + 1) = sub_1B0D55758;
            long long v1163 = 0uLL;
            *((void *)&v1164 + 1) = v9;
            uint64_t v720 = *((void *)v9 + 8);
            if (v720) {
              sub_1B0D32AB4((uint64_t)&v1162, v720);
            }
            uint64_t v362 = *((void *)v9 + 6);
          }
          *(void *)&long long v1162 = 0;
          *((void *)&v1162 + 1) = sub_1B0CCE8A0;
          *(void *)&long long v1163 = sub_1B0D408B0;
          *((void *)&v1163 + 1) = sub_1B0D408C4;
          *(void *)&long long v1164 = 0;
          *((void *)&v1164 + 1) = &v1156;
          sub_1B0D32AB4((uint64_t)&v1162, v1151);
        }
        v714[9] = v714[8];
        if (*((void *)v9 + 7) || *((void *)v9 + 8) || v714[12] != 1) {
          unsigned int v1129 = 0;
        }
        else {
          unsigned int v1129 = sub_1B0D3FD98(v1153, **((void **)v714 + 5), &v1158);
        }
        sub_1B0D3FF1C((uint64_t)v714, (uint64_t)&v1156);
        if (*(unsigned char *)(v1153 + 103)) {
          goto LABEL_864;
        }
        unsigned int v1117 = v713;
        int v1137 = v485;
        if (v363)
        {
          int v1095 = v643;
          uint64_t v1123 = v362;
          if (v714[12] == 1
            && (v721 = (uint64_t *)*((void *)v714 + 5), (v721[2] & 0x80000000) == 0)
            && (uint64_t v722 = *v721) != 0
            && (*(unsigned char *)(v722 + 5) & 0x10) == 0
            && (uint64_t v723 = *(void *)(v722 + 32)) != 0)
          {
            int v724 = *(unsigned __int8 **)(v723 + 8);
            if (v724) {
              uint64_t v725 = (unsigned __int8 *)sub_1B0CAE048(v1153, v724, 0, 0);
            }
            else {
              uint64_t v725 = 0;
            }
            v1026 = (int *)sub_1B0CAE478(v1153, v363, 0);
            v1109 = sub_1B0C9074C((uint64_t *)a1, v1026, v725);
            if (v1109) {
              int v1027 = 1280;
            }
            else {
              int v1027 = 0;
            }
            int v1101 = v1027;
          }
          else
          {
            v1109 = 0;
            int v1101 = 0;
          }
          unsigned int v751 = *((_DWORD *)a1 + 13);
          *((_DWORD *)a1 + 13) = v751 + 1;
          v714[1] = v751;
          v1070 = (_DWORD *)sub_1B0D3DB50((uint64_t *)a1, (int *)v363, 0, v714[8]);
          int v1057 = sub_1B0CCB908((uint64_t *)v1143, 119, v714[1], *((unsigned __int16 *)v714 + 1), 0, (uint64_t)v1070, 4294967288, v752);
          int v753 = *((_DWORD *)a1 + 14);
          uint64_t v754 = (v753 + 4);
          int v1073 = *((_DWORD *)a1 + 17);
          uint64_t v755 = (v1073 - 2);
          *((_DWORD *)a1 + 17) = v755;
          int v1080 = v753;
          uint64_t v756 = (v753 + 5);
          int v1059 = *(_DWORD *)v363 + v754;
          *((_DWORD *)a1 + 14) = v1059 + *(_DWORD *)v363;
          unsigned int v1066 = v753 + 2;
          sub_1B0D254B8(v1143, 71, 0, (v753 + 2), v757, v758, v759, v760);
          unsigned int v1061 = v756;
          sub_1B0C8A924(v1143, 75, 0, v756, (*(_DWORD *)v363 + v754), v761, v762, v763);
          unsigned int v1089 = v754;
          unsigned int v1084 = v1073 - 2;
          sub_1B0D254B8(v1143, 10, v754, v755, v764, v765, v766, v767);
          if (v1160 == 2) {
            int v768 = 128;
          }
          else {
            int v768 = 64;
          }
          int v769 = v1095;
          uint64_t v770 = sub_1B0C9B61C((uint64_t)a1, v101, v1123, (int *)v363, v1109, (uint64_t)v9, v768 | (v1095 << 9) | v1101, 0);
          if (!v770)
          {
            if (v1109) {
              sub_1B0D270DC((void *)v1153, v1109);
            }
            goto LABEL_864;
          }
          uint64_t v776 = v770;
          if (a1[12]) {
            sub_1B0D40084((uint64_t)v9, (uint64_t)v714, (uint64_t)&v1156);
          }
          int v777 = *((_DWORD *)a1 + 14);
          v714[3] = v777 + 1;
          *((_DWORD *)a1 + 14) = v714[8] + v777 + v714[12];
          int v1077 = *(unsigned __int8 *)(v776 + 67);
          int v1130 = *(char *)(v776 + 65) & ~(*(char *)(v776 + 65) >> 31);
          int v1124 = *(_DWORD *)v363;
          uint64_t v1058 = v776;
          if (*(_DWORD *)v363 == v1130)
          {
            uint64_t v778 = 0;
            uint64_t v779 = 0;
            goto LABEL_1028;
          }
          unint64_t v838 = "GROUP BY";
          if ((_BYTE)v1160 && (*((_DWORD *)v9 + 1) & 1) == 0) {
            unint64_t v838 = "DISTINCT";
          }
          int v1055 = sub_1B0D33724((uint64_t *)a1, 0, "USE TEMP B-TREE FOR %s", v771, v772, v773, v774, v775, (char)v838);
          int v839 = *(_DWORD *)v363;
          uint64_t v840 = v714[8];
          uint64_t v841 = *(unsigned int *)v363;
          if ((int)v840 >= 1)
          {
            int v842 = (__int16 *)(*((void *)v714 + 3) + 22);
            LODWORD(v841) = *(_DWORD *)v363;
            int v843 = *(_DWORD *)v363;
            do
            {
              int v844 = *v842;
              v842 += 12;
              if (v843 > v844)
              {
                uint64_t v841 = v841;
              }
              else
              {
                ++v843;
                uint64_t v841 = (v841 + 1);
              }
              --v840;
            }
            while (v840);
          }
          uint64_t v845 = sub_1B0D31118((uint64_t)a1, v841);
          sub_1B0D31188((uint64_t)a1, v363, v845, 0, 0, v846, v847, v848);
          *(unsigned char *)uint64_t v714 = 1;
          int v852 = v714[8];
          if (v852 >= 1)
          {
            uint64_t v853 = 0;
            for (uint64_t j = 0; j < v852; ++j)
            {
              uint64_t v855 = *((void *)v714 + 3) + v853;
              if (v839 <= *(__int16 *)(v855 + 22))
              {
                sub_1B0D2F9D0((uint64_t)a1, *(unsigned __int8 **)(v855 + 8), (v839 + v845));
                ++v839;
                int v852 = v714[8];
              }
              v853 += 24;
            }
          }
          *(unsigned char *)uint64_t v714 = 0;
          if (*((unsigned char *)a1 + 31))
          {
            unsigned __int8 v856 = *((unsigned char *)a1 + 31) - 1;
            *((unsigned char *)a1 + 31) = v856;
            uint64_t v857 = *((unsigned int *)a1 + v856 + 56);
          }
          else
          {
            uint64_t v857 = (*((_DWORD *)a1 + 14) + 1);
            *((_DWORD *)a1 + 14) = v857;
          }
          if ((*(unsigned char *)(*(void *)v1143 + 49) & 4) != 0)
          {
            int v888 = *(_DWORD *)(v1143 + 144);
            uint64_t v889 = *(unsigned int *)(v1143 + 392);
            uint64_t v890 = 56 * v889;
            int v891 = v889 + 1;
            do
            {
              if (--v891 < 1) {
                goto LABEL_1008;
              }
              uint64_t v892 = v890 - 56;
              uint64_t v893 = *(void *)(v1143 + 400);
              int v894 = *(_DWORD *)(v893 + v890 - 56);
              v890 -= 56;
            }
            while (v894 != v1055);
            if (v888 >= 1) {
              *(_DWORD *)(v893 + v892 + 32) = v888;
            }
          }
LABEL_1008:
          sub_1B0C8A924(v1143, 97, v845, v841, v857, v849, v850, v851);
          sub_1B0D254B8(v1143, 139, v714[1], v857, v895, v896, v897, v898);
          sub_1B0D33878(v1143, v1055, *(_DWORD *)(v1143 + 144) - 2, -1);
          if (v857)
          {
            uint64_t v906 = *((unsigned __int8 *)a1 + 31);
            if (v906 <= 7)
            {
              *((unsigned char *)a1 + 31) = v906 + 1;
              *((_DWORD *)a1 + v906 + 56) = v857;
            }
          }
          if (v841 == 1)
          {
            if (v845)
            {
              uint64_t v907 = *((unsigned __int8 *)a1 + 31);
              if (v907 <= 7)
              {
                *((unsigned char *)a1 + 31) = v907 + 1;
                uint64_t v908 = (_DWORD *)a1 + v907 + 56;
LABEL_1017:
                *uint64_t v908 = v845;
              }
            }
          }
          else if (*((_DWORD *)a1 + 10) < (int)v841)
          {
            *((_DWORD *)a1 + 10) = v841;
            uint64_t v908 = (_DWORD *)a1 + 11;
            goto LABEL_1017;
          }
          sub_1B0C9FAF0((uint64_t **)v1058, v899, v900, v901, v902, v903, v904, v905);
          uint64_t v778 = *((unsigned int *)a1 + 13);
          *((_DWORD *)a1 + 13) = v778 + 1;
          v714[2] = v778;
          if (*((unsigned char *)a1 + 31))
          {
            unsigned __int8 v912 = *((unsigned char *)a1 + 31) - 1;
            *((unsigned char *)a1 + 31) = v912;
            uint64_t v779 = *((unsigned int *)a1 + v912 + 56);
          }
          else
          {
            uint64_t v779 = (*((_DWORD *)a1 + 14) + 1);
            *((_DWORD *)a1 + 14) = v779;
          }
          if ((*(unsigned char *)(*(void *)v1143 + 49) & 4) != 0)
          {
            int v913 = *(_DWORD *)(v1143 + 144);
            uint64_t v914 = *(unsigned int *)(v1143 + 392);
            uint64_t v915 = 56 * v914;
            int v916 = v914 + 1;
            do
            {
              if (--v916 < 1) {
                goto LABEL_1027;
              }
              uint64_t v917 = v915 - 56;
              uint64_t v918 = *(void *)(v1143 + 400);
              int v919 = *(_DWORD *)(v918 + v915 - 56);
              v915 -= 56;
            }
            while (v919 != v1055);
            if (v913 >= 1) {
              *(_DWORD *)(v918 + v917 + 28) = v913;
            }
          }
LABEL_1027:
          sub_1B0C8A924(v1143, 121, v778, v779, v841, v909, v910, v911);
          sub_1B0D254B8(v1143, 34, v714[1], v1117, v920, v921, v922, v923);
          *((unsigned char *)v714 + 1) = 1;
          sub_1B0D33878(v1143, v1055, -1, v778);
          sub_1B0D33878(v1143, v1055, -1, v714[1]);
          int v769 = v1095;
LABEL_1028:
          if (a1[12]) {
            sub_1B0D40174((uint64_t)v714);
          }
          if (v769 && (*(unsigned char *)(v1153 + 96) & 4) == 0)
          {
            if (v1124 == v1130 && (*(unsigned char *)(v1058 + 68) & 8) == 0)
            {
              unsigned int v1056 = *(_DWORD *)(v1143 + 144);
LABEL_1038:
              unsigned int v1096 = v1080 + 3;
              unsigned int v1074 = v1073 - 1;
              uint64_t v924 = (v1059 + 1);
              uint64_t v925 = *(unsigned int *)v363;
              if ((int)v925 >= 1)
              {
                uint64_t v926 = 0;
                uint64_t v927 = 1;
                do
                {
                  if (v1124 == v1130)
                  {
                    *(unsigned char *)uint64_t v714 = 1;
                    sub_1B0D2F9D0((uint64_t)a1, (unsigned __int8 *)v363[v927], (v924 + v926));
                  }
                  else
                  {
                    sub_1B0C8A924(v1143, 94, v778, v926, (v924 + v926), v773, v774, v775);
                  }
                  ++v926;
                  uint64_t v925 = *(int *)v363;
                  v927 += 3;
                }
                while (v926 < v925);
              }
              uint64_t v928 = (v1080 + 1);
              if (v1070) {
                ++*v1070;
              }
              sub_1B0CCB908((uint64_t *)v1143, 90, v1061, v924, v925, (uint64_t)v1070, 4294967288, v775);
              int v929 = *(_DWORD *)(v1143 + 144);
              sub_1B0C8A924(v1143, 14, (v929 + 1), 0, (v929 + 1), v930, v931, v932);
              sub_1B0D40204((uint64_t)a1, v924, v1061, *(unsigned int *)v363, v933, v934, v935, v936);
              sub_1B0D254B8(v1143, 10, v1096, v1074, v937, v938, v939, v940);
              sub_1B0D254B8(v1143, 59, v1066, v1117, v941, v942, v943, v944);
              sub_1B0D254B8(v1143, 10, v1089, v1084, v945, v946, v947, v948);
              if (*(unsigned char *)(*(void *)v1143 + 103)) {
                v953 = &byte_1E9B52240;
              }
              else {
                v953 = (char *)(*(void *)(v1143 + 136) + 40 * v929);
              }
              *((_DWORD *)v953 + 2) = *(_DWORD *)(v1143 + 144);
              sub_1B0CCED0C((uint64_t)a1, v928, (uint64_t)v714, v1077, v949, v950, v951, v952);
              sub_1B0D254B8(v1143, 71, 1, v928, v954, v955, v956, v957);
              if (v1124 == v1130)
              {
                sub_1B0C9FAF0((uint64_t **)v1058, v958, v959, v960, v961, v962, v963, v964);
                sub_1B0C9CF24(v1143, v1057);
              }
              else
              {
                sub_1B0D254B8(v1143, 37, v714[1], v1056, v961, v962, v963, v964);
              }
              if (v1109) {
                sub_1B0D270DC((void *)v1153, v1109);
              }
              uint64_t v672 = v1143;
              sub_1B0D254B8(v1143, 10, v1096, v1074, v965, v966, v967, v968);
              sub_1B0D2FAAC(v1143, v1117, v969, v970, v971, v972, v973, v974);
              unsigned int v1132 = *(_DWORD *)(v1143 + 144);
              sub_1B0D254B8(v1143, 71, 1, v1066, v975, v976, v977, v978);
              sub_1B0D2F978(v1143, 67, v1096, v979, v980, v981, v982, v983);
              sub_1B0D31504(v1143, v1074);
              int v984 = *(_DWORD *)(v1143 + 144);
              sub_1B0D254B8(v1143, 59, v928, (v984 + 2), v985, v986, v987, v988);
              sub_1B0D2F978(v1143, 67, v1096, v989, v990, v991, v992, v993);
              sub_1B0D40258(a1, (uint64_t)v714, v994, v995, v996, v997, v998, v999);
              uint64_t v1000 = (v984 + 1);
              LODWORD(v1001) = v1117;
              sub_1B0CC2204(a1, v1151);
              sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, 0xFFFFFFFFLL, (int **)v1159, (uint64_t)&v1160, v1139, v1000, v1132);
              sub_1B0D2F978(v1143, 67, v1096, v1002, v1003, v1004, v1005, v1006);
              sub_1B0D31504(v1143, v1084);
              sub_1B0CCEB54((uint64_t)a1, (uint64_t)v714, v1007, v1008, v1009, v1010, v1011, v1012);
              sub_1B0D254B8(v1143, 71, 0, v928, v1013, v1014, v1015, v1016);
              sub_1B0D2F978(v1143, 67, v1089, v1017, v1018, v1019, v1020, v1021);
              if (v1101 && v1077) {
                sub_1B0D40374(a1, v1077, *(_DWORD *)(*((void *)v714 + 5) + 16), *(_DWORD *)(*((void *)v714 + 5) + 20));
              }
              goto LABEL_1083;
            }
            *(void *)&v1159[0] = 0;
            sub_1B0C9CF24(v1143, SDWORD2(v1159[1]));
          }
          unsigned int v1056 = *(_DWORD *)(v1143 + 144);
          if (v1124 != v1130) {
            sub_1B0C8A924(v1143, 133, v714[1], v779, v778, v773, v774, v775);
          }
          goto LABEL_1038;
        }
        uint64_t v826 = sub_1B0D40480(v9, (uint64_t)v714);
        if (v826)
        {
          uint64_t v833 = v826;
          uint64_t v834 = *(void *)(v826 + 96);
          if (v834)
          {
            v835 = (uint64_t *)((*a1)[4] + 24);
            LODWORD(v836) = -1;
            do
            {
              uint64_t v837 = *v835;
              v835 += 4;
              uint64_t v836 = (v836 + 1);
            }
            while (v837 != v834);
          }
          else
          {
            uint64_t v836 = 4294934528;
          }
          uint64_t v861 = *((unsigned int *)a1 + 13);
          *((_DWORD *)a1 + 13) = v861 + 1;
          uint64_t v862 = *(unsigned int *)(v826 + 40);
          sub_1B0C9CCDC((uint64_t)a1, v836);
          sub_1B0D2FB04((uint64_t)a1, v836, *(_DWORD *)(v833 + 40), 0, *(void *)v833);
          if ((*(unsigned char *)(v833 + 48) & 0x80) != 0)
          {
            for (uint64_t k = *(void *)(v833 + 16); k; uint64_t k = *(void *)(k + 40))
            {
              if ((*(_WORD *)(k + 99) & 3) == 2) {
                break;
              }
            }
          }
          else
          {
            uint64_t k = 0;
          }
          if ((*(_WORD *)(*((void *)v9 + 5) + 69) & 1) == 0)
          {
            for (uint64_t m = *(void *)(v833 + 16); m; uint64_t m = *(void *)(m + 40))
            {
              if ((*(_WORD *)(m + 99) & 4) == 0)
              {
                int v875 = *(__int16 *)(m + 92);
                if (v875 < *(__int16 *)(v833 + 60) && !*(void *)(m + 72) && (!k || v875 < *(__int16 *)(k + 92))) {
                  uint64_t k = m;
                }
              }
            }
          }
          if (k)
          {
            unsigned int v1131 = *(_DWORD *)(k + 88);
            uint64_t v867 = sub_1B0D2FDAC(a1, k);
            uint64_t v868 = v1143;
            sub_1B0CEF5FC(v1143, 112, v861, v1131, v836, 1, v869, v870);
            if (v867) {
              sub_1B0C9B078((uint64_t *)v1143, -1, v867, 0xFFFFFFF8);
            }
          }
          else
          {
            uint64_t v868 = v1143;
            sub_1B0CEF5FC(v1143, 112, v861, v862, v836, 1, v863, v864);
          }
          int v876 = *((_DWORD *)a1 + 14);
          v714[3] = v876 + 1;
          unsigned int v877 = v714[8];
          *((_DWORD *)a1 + 14) = v877 + v876 + v714[12];
          sub_1B0D254B8(v868, 98, v861, v877 + v876 + 1, v871, v872, v873, v874);
          sub_1B0D2F978(v868, 122, v861, v878, v879, v880, v881, v882);
          sub_1B0D4051C((uint64_t)a1, (void *)v833, k, v883, v884, v885, v886, v887);
LABEL_1082:
          *(void *)&v1159[0] = 0;
          uint64_t v1001 = v1117;
          sub_1B0CC2204(a1, v1151);
          sub_1B0C9CF74((uint64_t)a1, (uint64_t)v9, 0xFFFFFFFFLL, 0, 0, v1139, v1001, v1001);
          uint64_t v672 = v1143;
LABEL_1083:
          uint64_t v682 = v672;
          int v683 = v1001;
          goto LABEL_1084;
        }
        uint64_t v858 = v714[12];
        if (v714[9])
        {
          if ((int)v858 < 1)
          {
            LODWORD(v859) = 0;
          }
          else
          {
            uint64_t v859 = 0;
            uint64_t v860 = *((void *)v714 + 5) + 8;
            while ((*(unsigned char *)(*(void *)(v860 - 8) + 7) & 1) != 0
                 || (*(unsigned char *)(*(void *)v860 + 4) & 0x20) == 0)
            {
              ++v859;
              v860 += 24;
              if (v858 == v859) {
                goto LABEL_1064;
              }
            }
          }
          if (v859 == v858)
          {
LABEL_1064:
            uint64_t v1023 = (*((_DWORD *)a1 + 14) + 1);
            *((_DWORD *)a1 + 14) = v1023;
            sub_1B0D254B8(v1143, 71, 0, v1023, v829, v830, v831, v832);
            v1024 = 0;
            int v1025 = 0;
            LODWORD(v858) = v714[12];
LABEL_1073:
            int v1028 = *((_DWORD *)a1 + 14);
            v714[3] = v1028 + 1;
            *((_DWORD *)a1 + 14) = v1028 + v858 + v714[8];
            sub_1B0CCEB54((uint64_t)a1, (uint64_t)v714, v827, v828, v829, v830, v831, v832);
            uint64_t v1029 = sub_1B0C9B61C((uint64_t)a1, v101, v362, v1158, v1024, (uint64_t)v9, v1025 | v1129, 0);
            if (!v1029) {
              goto LABEL_864;
            }
            v1034 = (uint64_t **)v1029;
            int v1035 = *(unsigned __int8 *)(v1029 + 67);
            sub_1B0CCED0C((uint64_t)a1, v1023, (uint64_t)v714, v1035, v1030, v1031, v1032, v1033);
            if (v1035)
            {
              uint64_t v1043 = *((void *)v714 + 5);
              if (v1043) {
                sub_1B0D40374(a1, v1035, *(_DWORD *)(v1043 + 16), *(_DWORD *)(v1043 + 20));
              }
            }
            if (v1023) {
              sub_1B0D254B8(v1143, 71, 1, v1023, v1039, v1040, v1041, v1042);
            }
            if (v1129) {
              sub_1B0D405A8(v1143, (uint64_t)v1034, v1037, v1038, v1039, v1040, v1041, v1042);
            }
            sub_1B0C9FAF0(v1034, v1036, v1037, v1038, v1039, v1040, v1041, v1042);
            sub_1B0D40258(a1, (uint64_t)v714, v1044, v1045, v1046, v1047, v1048, v1049);
            goto LABEL_1082;
          }
        }
        else if (v858 == 1)
        {
          v1022 = (_DWORD *)*((void *)v714 + 5);
          if ((v1022[4] & 0x80000000) != 0)
          {
            uint64_t v1023 = 0;
            v1024 = 0;
            int v1025 = 0;
          }
          else
          {
            uint64_t v1023 = 0;
            v1024 = *(int **)(*(void *)v1022 + 32);
            if (v1024) {
              int v1025 = 1280;
            }
            else {
              int v1025 = 0;
            }
          }
          LODWORD(v858) = 1;
          goto LABEL_1073;
        }
        uint64_t v1023 = 0;
        v1024 = 0;
        int v1025 = 0;
        goto LABEL_1073;
      }
      unint64_t v479 = *(unsigned int *)v361;
      int v480 = v479;
      if ((int)v479 > 1)
      {
        unint64_t v481 = v479 - 1;
        if ((*(_WORD *)((unsigned char *)&v361[3 * v479] + 1) & 0x40) != 0)
        {
LABEL_625:
          uint64_t v484 = (_WORD *)((char *)v361 + 25);
          do
          {
            if ((*v484 & 0x40) == 0) {
              **(unsigned char **)((char *)v484 - 17) = 121;
            }
            v484 += 12;
            --v479;
          }
          while (v479);
          goto LABEL_629;
        }
        do
        {
          uint64_t v482 = (unsigned __int8 *)v361[3 * v481 + 1];
          if (v482) {
            sub_1B0D1DF88((void *)v1153, v482);
          }
          uint64_t v483 = (void *)v361[3 * v481 + 2];
          if (v483) {
            sub_1B0D05C10((void *)v1153, v483);
          }
          int v480 = *(_DWORD *)v361 - 1;
          *(_DWORD *)uint64_t v361 = v480;
          if (v479 <= 2) {
            break;
          }
          unint64_t v481 = (v479-- - 2);
        }
        while ((*(_WORD *)((unsigned char *)&v361[3 * v481 + 3] + 1) & 0x40) == 0);
      }
      if (v480 < 1) {
        goto LABEL_629;
      }
      unint64_t v479 = v480;
      goto LABEL_625;
    }
    int v161 = v110;
    uint64_t v162 = &v101[26 * v110];
    char v165 = *((unsigned char *)v162 + 68);
    uint64_t v164 = (char *)(v162 + 17);
    char v163 = v165;
    uint64_t v166 = *(void *)(v164 - 20);
    uint64_t v167 = *(void *)(v164 - 28);
    if ((v165 & 0x48) != 0)
    {
      uint64_t v168 = &v101[26 * v110];
      unsigned int v170 = v168[18];
      uint64_t v169 = (unsigned int *)(v168 + 18);
      int v171 = sub_1B0D32E4C(*((void *)v9 + 6), v170, v163 & 0x40);
      long long v103 = 0uLL;
      if (v171)
      {
        if ((*(unsigned char *)(v1153 + 97) & 0x20) == 0)
        {
          char v172 = *v164;
          if ((*v164 & 8) != 0)
          {
            if ((*v164 & 0x10) != 0) {
              char v173 = -9;
            }
            else {
              char v173 = -41;
            }
            v172 &= v173;
            *uint64_t v164 = v172;
          }
          if ((v172 & 0x40) != 0)
          {
            uint64_t v174 = *v101;
            if (v110 + 1 < (int)v174)
            {
              uint64_t v175 = &v101[26 * v110 + 43];
              int v176 = ~v110 + v174;
              do
              {
                if ((*(unsigned char *)v175 & 0x10) != 0)
                {
                  if ((*(unsigned char *)v175 & 8) != 0) {
                    char v177 = -17;
                  }
                  else {
                    char v177 = -49;
                  }
                  *(unsigned char *)v175 &= v177;
                }
                v175 += 26;
                --v176;
              }
              while (v176);
            }
            uint64_t v178 = v174 + 1;
            uint64_t v179 = &v101[26 * (int)v174 - 9];
            do
            {
              if (--v178 <= v110) {
                break;
              }
              char v180 = *(unsigned char *)v179;
              *(unsigned char *)v179 &= ~0x40u;
              v179 -= 26;
            }
            while ((v180 & 0x10) == 0);
          }
          sub_1B0D3D338(*((void *)v9 + 6), *v169, v101[17] & 0x40);
          long long v103 = 0uLL;
        }
      }
    }
    if (!v166) {
      goto LABEL_206;
    }
    int v181 = *(__int16 *)(v167 + 54);
    if (**(_DWORD **)(v166 + 32) != v181)
    {
      sub_1B0CEF2BC((uint64_t)a1, "expected %d columns for '%s' but got %d", v20, v21, v22, v23, v24, v25, v181);
      goto LABEL_864;
    }
    if ((*(_WORD *)((unsigned char *)&v101[26 * v110 + 17] + 1) & 0x100) != 0
      && !*(unsigned char *)(*(void *)&v101[26 * v110 + 26] + 18))
    {
      goto LABEL_206;
    }
    int v182 = *(_DWORD *)(v166 + 4);
    if ((v182 & 8) != 0) {
      goto LABEL_206;
    }
    uint64_t v20 = *(void *)(v166 + 72);
    if (v20)
    {
      if ((*(void *)v1148 || *v101 >= 2)
        && (v182 & 0x8000000) == 0
        && !*(void *)(v166 + 96)
        && (v9[7] & 8) == 0
        && (*(unsigned char *)(v1153 + 98) & 4) == 0)
      {
        sub_1B0D33A90((uint64_t *)a1, (void (*)(uint64_t, uint64_t))sub_1B0CA1150, v20);
        long long v103 = 0uLL;
        *(void *)(v166 + 72) = 0;
        goto LABEL_244;
      }
      if (!v110 && (v9[6] & 4) != 0 && (*v101 == 1 || (v101[43] & 0x22) != 0))
      {
        int v110 = 0;
        goto LABEL_206;
      }
    }
LABEL_244:
    uint64_t v183 = (uint64_t)*a1;
    int v184 = *((_DWORD *)*a1 + 24);
    if (v184) {
      goto LABEL_247;
    }
    int v185 = a1[46];
    *(_OWORD *)v1157 = v103;
    *(_OWORD *)&v1157[16] = v103;
    long long v1156 = v103;
    if (*((void *)v9 + 14)) {
      goto LABEL_247;
    }
    char v186 = (int *)*((void *)v9 + 5);
    uint64_t v187 = &v186[26 * v110];
    uint64_t v190 = *((void *)v187 + 6);
    uint64_t v188 = v187 + 12;
    uint64_t v189 = v190;
    if (*(void *)(v190 + 112)) {
      goto LABEL_247;
    }
    uint64_t v191 = *(void *)(v189 + 40);
    uint64_t v192 = *(void *)(v189 + 96);
    if (v192)
    {
      if (*((void *)v9 + 12)) {
        goto LABEL_247;
      }
      if (*(void *)(v192 + 24)) {
        goto LABEL_247;
      }
      int v193 = *((_DWORD *)v9 + 1);
      if ((v193 & 0x100) != 0) {
        goto LABEL_247;
      }
    }
    else
    {
      int v193 = *((_DWORD *)v9 + 1);
    }
    if (!*(_DWORD *)v191) {
      goto LABEL_247;
    }
    int v194 = *(_DWORD *)(v189 + 4);
    if ((v194 & 1) != 0 || v192 && ((v1126 & 8) != 0 || *v186 > 1)) {
      goto LABEL_247;
    }
    uint64_t v195 = *(unsigned int **)v1148;
    if (*(void *)v1148)
    {
      if (*(void *)(v189 + 72)) {
        goto LABEL_247;
      }
    }
    if ((v1126 & 8) != 0 && *(void *)(v189 + 72)) {
      goto LABEL_247;
    }
    if (v192)
    {
      if (*((void *)v9 + 6) || *(_DWORD *)(v189 + 4) & 0x2000 | v193 & 1) {
        goto LABEL_247;
      }
    }
    else if ((v194 & 0x2000) != 0)
    {
      goto LABEL_247;
    }
    v1062 = v9;
    v1067 = v188;
    unsigned int v1072 = v188[6];
    v1098 = (int *)*((void *)v9 + 5);
    long long v196 = &v186[26 * v110];
    v1076 = (char *)(v196 + 17);
    int v1079 = v196[17] & 0x60;
    if ((v196[17] & 0x60) != 0)
    {
      long long v103 = 0uLL;
      if (*(int *)v191 > 1) {
        goto LABEL_247;
      }
      BOOL v197 = *(unsigned char *)(*(void *)(v191 + 40) + 63) != 1 && (v196[17] & 0x10 | v193 & 1) == 0;
      if (!v197) {
        goto LABEL_247;
      }
      unsigned int v1064 = 1;
    }
    else
    {
      unsigned int v1064 = 0;
    }
    long long v103 = 0uLL;
    if (v110 >= 1 && (*(unsigned char *)(v191 + 68) & 0x40) != 0) {
      goto LABEL_247;
    }
    if (!*(void *)(v189 + 80)) {
      goto LABEL_310;
    }
    if ((v1126 & 8) != 0 || *(void *)(v189 + 72) || v1079 | v193 & 1) {
      goto LABEL_247;
    }
    uint64_t v198 = (unsigned __int8 *)v189;
    do
    {
      long long v103 = 0uLL;
      int v9 = v1062;
      if ((v198[4] & 9) != 0) {
        goto LABEL_247;
      }
      uint64_t v199 = *((void *)v198 + 10);
      if (v199)
      {
        if (*v198 != 135) {
          goto LABEL_247;
        }
      }
      uint64_t v200 = *((void *)v198 + 5);
      if (*(int *)v200 < 1 || *((void *)v198 + 14) || v110 >= 1 && (*(unsigned char *)(v200 + 68) & 0x40) != 0) {
        goto LABEL_247;
      }
      uint64_t v198 = (unsigned __int8 *)*((void *)v198 + 10);
    }
    while (v199);
    if (v195)
    {
      uint64_t v201 = *v195;
      if ((int)v201 >= 1)
      {
        long long v202 = (unsigned __int16 *)(v195 + 7);
        do
        {
          int v203 = *v202;
          v202 += 12;
          long long v103 = 0uLL;
          int v9 = v1062;
          if (!v203) {
            goto LABEL_247;
          }
          --v201;
        }
        while (v201);
      }
    }
    int v9 = v1062;
    if ((v193 & 0x2000) != 0) {
      goto LABEL_247;
    }
    int v204 = sub_1B0D40C5C(v189);
    long long v103 = 0uLL;
    if (v204) {
      goto LABEL_247;
    }
    if (*v1098 < 2) {
      goto LABEL_310;
    }
    int v9 = v1062;
    if ((v184 & 0x800000) != 0 || *((int *)a1 + 35) > 500)
    {
LABEL_247:
      uint64_t v11 = v1153;
      if (*(unsigned char *)(v1153 + 103)) {
        goto LABEL_24;
      }
      long long v101 = (int *)*((void *)v9 + 5);
      if (*v1139 >= 9u) {
        *(void *)&v1159[0] = *(void *)v1148;
      }
LABEL_206:
      ++v110;
      uint64_t v104 = *((void *)v9 + 10);
      if (v104)
      {
        int v8 = v1139;
        goto LABEL_150;
      }
      continue;
    }
    break;
  }
  v1082 = sub_1B0C79680(v183, 4 * *((int *)a1 + 13) + 4);
  if (v1082) {
    *(_DWORD *)v1082 = *((_DWORD *)a1 + 13);
  }
  else {
LABEL_310:
  }
    v1082 = 0;
  long long v205 = &v1098[26 * v110];
  uint64_t v206 = (void **)(v205 + 6);
  a1[46] = (void *)*((void *)v205 + 3);
  sub_1B0D354D0((uint64_t)a1, 21, 0, 0, 0);
  a1[46] = v185;
  v1060 = *(void **)v1067;
  uint64_t v209 = (void *)*((void *)v205 + 2);
  uint64_t v208 = v205 + 4;
  uint64_t v207 = v209;
  if (v209) {
    sub_1B0D05C10((void *)v183, v207);
  }
  if (*v206) {
    sub_1B0D05C10((void *)v183, *v206);
  }
  uint64_t v19 = *(void **)&v1098[26 * v110 + 8];
  if (v19) {
    sub_1B0D05C10((void *)v183, v19);
  }
  *(void *)v1067 = 0;
  v208[1] = 0;
  v208[2] = 0;
  void *v208 = 0;
  uint64_t v210 = *(void *)(v189 + 80);
  uint64_t v211 = (uint64_t)v1062;
  if (v210)
  {
    v1085 = &v1098[26 * v110 + 10];
    uint64_t v1090 = *((void *)v1062 + 10);
    do
    {
      uint64_t v213 = *(void *)(v211 + 96);
      uint64_t v1103 = *(void *)v1085;
      uint64_t v1111 = *(void *)(v211 + 72);
      *(void *)v1085 = 0;
      *(void *)(v211 + 96) = 0;
      *(void *)v1148 = 0;
      *((void *)v1148 + 1) = 0;
      uint64_t v214 = sub_1B0CB0DF4(v183, v211, 0);
      *(void *)(v211 + 96) = v213;
      *(void *)(v211 + 72) = v1111;
      *(unsigned char *)uint64_t v211 = -121;
      *(void *)v1085 = v1103;
      if (v214)
      {
        uint64_t v212 = v214;
        int v215 = *((_DWORD *)a1 + 35) + 1;
        *((_DWORD *)a1 + 35) = v215;
        *(_DWORD *)(v214 + 16) = v215;
        if (v1082 && !*(unsigned char *)(v183 + 103)) {
          sub_1B0D40CFC((uint64_t)a1, v214, v110, (uint64_t)v1082);
        }
        *(void *)(v212 + 80) = v1090;
        if (v1090) {
          *(void *)(v1090 + 88) = v212;
        }
        uint64_t v211 = (uint64_t)v1062;
        *(void *)(v212 + 88) = v1062;
        uint64_t v1090 = v212;
      }
      else
      {
        uint64_t v212 = v1090;
      }
      *(void *)(v211 + 80) = v212;
      uint64_t v210 = *(void *)(v210 + 80);
    }
    while (v210);
  }
  if (v1082) {
    sub_1B0D05C10((void *)v183, v1082);
  }
  if (*(unsigned char *)(v183 + 103))
  {
    *(void *)v1067 = v1060;
    goto LABEL_384;
  }
  uint64_t v216 = &v1098[26 * v110];
  uint64_t v219 = *((void *)v216 + 5);
  int v218 = v216 + 10;
  uint64_t v217 = v219;
  if (v219)
  {
    if (*(_DWORD *)(v217 + 44) == 1)
    {
      if (a1[21]) {
        uint64_t v220 = a1[21];
      }
      else {
        uint64_t v220 = (uint64_t *)a1;
      }
      sub_1B0D33A90(v220, (void (*)(uint64_t, uint64_t))sub_1B0C8AF54, v217);
    }
    else
    {
      --*(_DWORD *)(v217 + 44);
    }
    *int v218 = 0;
  }
  unsigned int v1068 = v110 + 1;
  uint64_t v1083 = 26 * v110;
  uint64_t v221 = 0xFFFFFFFFLL;
  uint64_t v222 = v1062;
  v1104 = v1060;
  while (2)
  {
    char v223 = v1098[26 * v161 + 17];
    uint64_t v224 = (unsigned int *)v1104[5];
    uint64_t v225 = *v224;
    v1091 = v222;
    v1098 = (int *)*((void *)v222 + 5);
    if (v222 == v1062) {
      char v1086 = *v1076;
    }
    else {
      char v1086 = 0;
    }
    char v1112 = v223 & 0x40;
    if ((int)v225 < 2)
    {
      if (v225 == 1) {
        goto LABEL_349;
      }
      int v237 = 0;
    }
    else
    {
      v1098 = sub_1B0C90D48((uint64_t *)a1, v1098, (v225 - 1), v1068, v22, v23, v24, v25);
      if (!v1098) {
        break;
      }
      *((void *)v222 + 5) = v1098;
LABEL_349:
      uint64_t v226 = 0;
      uint64_t v227 = &v1098[v1083];
      uint64_t v228 = v225;
      long long v229 = 0uLL;
      do
      {
        uint64_t v236 = &v227[v226];
        if ((*(_WORD *)((unsigned char *)&v227[v226 + 17] + 1) & 0x400) != 0)
        {
          sub_1B0D1E1DC((void *)v183, *((void **)v236 + 10));
          long long v229 = 0uLL;
        }
        unsigned int v230 = &v224[v226];
        long long v231 = *(_OWORD *)&v224[v226 + 14];
        long long v232 = *(_OWORD *)&v224[v226 + 18];
        long long v233 = *(_OWORD *)&v224[v226 + 22];
        *((void *)v236 + 13) = *(void *)&v224[v226 + 26];
        *(_OWORD *)(v236 + 18) = v232;
        *(_OWORD *)(v236 + 22) = v233;
        *(_OWORD *)(v236 + 14) = v231;
        long long v234 = *(_OWORD *)&v224[v226 + 2];
        long long v235 = *(_OWORD *)&v224[v226 + 10];
        *(_OWORD *)(v236 + 6) = *(_OWORD *)&v224[v226 + 6];
        *(_OWORD *)(v236 + 10) = v235;
        *(_OWORD *)(v236 + 2) = v234;
        *((unsigned char *)v236 + 68) |= v1112;
        uint64_t v221 = v224[v226 + 18];
        *(_OWORD *)(v230 + 18) = v229;
        *(_OWORD *)(v230 + 2) = v229;
        *(_OWORD *)(v230 + 6) = v229;
        *(_OWORD *)(v230 + 10) = v229;
        *(_OWORD *)(v230 + 14) = v229;
        *(_OWORD *)(v230 + 22) = v229;
        *((void *)v230 + 13) = 0;
        v226 += 26;
        --v228;
      }
      while (v228);
      int v237 = 1;
    }
    LOBYTE(v1098[26 * v161 + 17]) = v1086 | v1112 | v1098[26 * v161 + 17] & 0x40;
    uint64_t v238 = (unsigned int *)v1104[9];
    if (v238 && (v1091[6] & 0x40) == 0)
    {
      uint64_t v239 = *v238;
      if ((int)v239 >= 1)
      {
        if (v239 == 1)
        {
          uint64_t v240 = 0;
          goto LABEL_363;
        }
        uint64_t v240 = v239 & 0xFFFFFFFE;
        uint64_t v241 = v238 + 13;
        uint64_t v242 = v240;
        do
        {
          *(v241 - 12) = 0;
          *uint64_t v241 = 0;
          v241 += 24;
          v242 -= 2;
        }
        while (v242);
        if (v240 != v239)
        {
LABEL_363:
          uint64_t v243 = v239 - v240;
          uint64_t v244 = &v238[6 * v240 + 7];
          do
          {
            *(_WORD *)uint64_t v244 = 0;
            v244 += 6;
            --v243;
          }
          while (v243);
        }
      }
      *((void *)v1091 + 9) = v238;
      v1104[9] = 0;
    }
    uint64_t v245 = v1104[6];
    v1104[6] = 0;
    if (v1079) {
      sub_1B0D3A514(v245, v221, 1);
    }
    if (v245)
    {
      uint64_t v246 = *((void *)v1091 + 6);
      if (v246) {
        uint64_t v245 = sub_1B0D28CCC((uint64_t *)a1, 44, v245, v246);
      }
      *((void *)v1091 + 6) = v245;
    }
    if (!*(unsigned char *)(v183 + 103))
    {
      *(void *)&long long v1164 = 0;
      *(void *)&long long v1162 = a1;
      *((void *)&v1162 + 1) = __PAIR64__(v221, v1072);
      long long v1163 = v1064;
      uint64_t v247 = v1104;
      *((void *)&v1163 + 1) = v1104[4];
      do
      {
        int v248 = v247;
        uint64_t v247 = (void *)v247[10];
      }
      while (v247);
      *(void *)&long long v1164 = v248[4];
      sub_1B0D40D70((uint64_t)&v1162, v1091, 0);
    }
    *((_DWORD *)v1091 + 1) |= *((_DWORD *)v1104 + 1) & 0x100;
    uint64_t v249 = v1104[12];
    if (v249)
    {
      *((void *)v1091 + 12) = v249;
      v1104[12] = 0;
    }
    if (v237)
    {
      uint64_t v250 = (uint64_t)&v1098[v1083 + 2];
      do
      {
        sub_1B0D40F24(v1091, v250);
        v250 += 104;
        --v225;
      }
      while (v225);
    }
    uint64_t v222 = (unsigned __int8 *)*((void *)v1091 + 10);
    v1104 = (void *)v1104[10];
    if (v222) {
      continue;
    }
    break;
  }
  memset(&v1157[8], 0, 24);
  *(void *)&long long v1156 = a1;
  *((void *)&v1156 + 1) = sub_1B0D408D4;
  *(void *)v1157 = sub_1B0D3A5D4;
  sub_1B0C962CC(&v1156, v1060);
  if (v1060) {
    sub_1B0CA0FA8((void *)v183, (uint64_t)v1060, 1);
  }
LABEL_384:
  if (!*((_DWORD *)a1 + 12))
  {
    int v110 = -1;
    long long v103 = 0uLL;
    int v9 = v1062;
    goto LABEL_247;
  }
LABEL_864:
  uint64_t v13 = 1;
  uint64_t v11 = v1153;
LABEL_25:
  if (v1158) {
    sub_1B0D270DC((void *)v11, v1158);
  }
LABEL_27:
  int v26 = *((_DWORD *)a1 + 78);
  if (v26)
  {
    uint64_t v27 = a1[2];
    if (*(unsigned char *)(*v27 + 103)) {
      uint64_t v28 = &byte_1E9B52240;
    }
    else {
      uint64_t v28 = (char *)(v27[17] + 40 * v26);
    }
    int v26 = *((_DWORD *)v28 + 2);
  }
  *((_DWORD *)a1 + 78) = v26;
  return v13;
}

uint64_t sub_1B0C962CC(void *a1, void *a2)
{
  if (!a2) {
    return 0;
  }
  if (!a1[2]) {
    return 0;
  }
  int v3 = a2;
  while (1)
  {
    int v4 = ((uint64_t (*)(void *, void *))a1[2])(a1, v3);
    if (v4) {
      return v4 & 2;
    }
    int v5 = (_DWORD *)v3[4];
    if (v5 && (int)*v5 >= 1)
    {
      char v6 = (uint64_t *)(v5 + 2);
      int v7 = *v5 + 1;
      while (!*v6 || !sub_1B0D32AB4((uint64_t)a1, *v6))
      {
        v6 += 3;
        if (--v7 <= 1) {
          goto LABEL_12;
        }
      }
      return 2;
    }
LABEL_12:
    uint64_t v8 = v3[6];
    if (v8 && sub_1B0D32AB4((uint64_t)a1, v8)) {
      return 2;
    }
    int v9 = (_DWORD *)v3[7];
    if (v9 && (int)*v9 >= 1)
    {
      uint64_t v10 = (uint64_t *)(v9 + 2);
      int v11 = *v9 + 1;
      while (!*v10 || !sub_1B0D32AB4((uint64_t)a1, *v10))
      {
        v10 += 3;
        if (--v11 <= 1) {
          goto LABEL_21;
        }
      }
      return 2;
    }
LABEL_21:
    uint64_t v12 = v3[8];
    if (v12 && sub_1B0D32AB4((uint64_t)a1, v12)) {
      return 2;
    }
    uint64_t v13 = (_DWORD *)v3[9];
    if (v13 && (int)*v13 >= 1)
    {
      uint64_t v14 = (uint64_t *)(v13 + 2);
      int v15 = *v13 + 1;
      while (!*v14 || !sub_1B0D32AB4((uint64_t)a1, *v14))
      {
        v14 += 3;
        if (--v15 <= 1) {
          goto LABEL_30;
        }
      }
      return 2;
    }
LABEL_30:
    uint64_t v16 = v3[12];
    if (v16 && sub_1B0D32AB4((uint64_t)a1, v16)) {
      return 2;
    }
    uint64_t v17 = (void *)v3[15];
    if (v17)
    {
      uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))a1[3];
      if ((char *)v18 != (char *)nullsub_8)
      {
        if (*a1)
        {
          if (v18 != sub_1B0D32D68 && *(unsigned __int8 *)(*a1 + 302) <= 1u) {
            goto LABEL_40;
          }
        }
        else if (v18 != sub_1B0D32D68)
        {
          goto LABEL_40;
        }
      }
      if (sub_1B0D32C20((uint64_t)a1, v17, 0)) {
        return 2;
      }
    }
LABEL_40:
    uint64_t v19 = (int *)v3[5];
    if (v19)
    {
      int v20 = *v19;
      if (*v19 >= 1)
      {
        uint64_t v21 = v19 + 2;
        do
        {
          uint64_t v23 = *((void *)v21 + 5);
          if (v23)
          {
            if (sub_1B0C962CC(a1, v23)) {
              return 2;
            }
          }
          if ((*(_WORD *)((unsigned char *)v21 + 61) & 4) != 0)
          {
            uint64_t v24 = (_DWORD *)*((void *)v21 + 11);
            if (v24)
            {
              if ((int)*v24 >= 1)
              {
                uint64_t v25 = (uint64_t *)(v24 + 2);
                int v26 = *v24 + 1;
                while (!*v25 || !sub_1B0D32AB4((uint64_t)a1, *v25))
                {
                  v25 += 3;
                  if (--v26 <= 1) {
                    goto LABEL_43;
                  }
                }
                return 2;
              }
            }
          }
LABEL_43:
          v21 += 26;
          BOOL v22 = __OFSUB__(v20--, 1);
        }
        while (!((v20 < 0) ^ v22 | (v20 == 0)));
      }
    }
    uint64_t v27 = (void (*)(void *, void *))a1[3];
    if (v27) {
      v27(a1, v3);
    }
    uint64_t result = 0;
    int v3 = (void *)v3[10];
    if (!v3) {
      return result;
    }
  }
}

uint64_t sub_1B0C96574(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t **)a1;
  uint64_t v3 = **(void **)a1;
  int v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v4 | 0x40;
  if (*(unsigned char *)(v3 + 103)) {
    return 2;
  }
  if ((v4 & 0x40) != 0) {
    return 1;
  }
  if (*(_WORD *)(a1 + 36))
  {
    int v7 = *((_DWORD *)v2 + 35) + 1;
    *((_DWORD *)v2 + 35) = v7;
    *(_DWORD *)(a2 + 16) = v7;
  }
  uint64_t v342 = *(int **)(a2 + 40);
  __int16 v315 = *(unsigned int **)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 104);
  if (v2[50]) {
    BOOL v9 = (v4 & 0x200000) == 0;
  }
  else {
    BOOL v9 = 1;
  }
  uint64_t v352 = v3;
  __int16 v350 = v4;
  if (v9)
  {
    if (v8 && !*((_DWORD *)v2 + 12))
    {
LABEL_244:
      *(void *)(v8 + 8) = v2[50];
      v2[50] = v8;
    }
  }
  else
  {
    if (!v8)
    {
      uint64_t v8 = sub_1B0D05DC0(v3, 0x40uLL);
      if (!v8)
      {
        *(void *)(a2 + 104) = 0;
        return 2;
      }
      *(_OWORD *)(v8 + 32) = 0u;
      *(_OWORD *)(v8 + 48) = 0u;
      *(_OWORD *)uint64_t v8 = 0u;
      *(_OWORD *)(v8 + 16) = 0u;
      *(void *)(a2 + 104) = v8;
    }
    *(_DWORD *)(v8 + 4) = 1;
    if (!*((_DWORD *)v2 + 12)) {
      goto LABEL_244;
    }
  }
  sub_1B0CCF4CC((uint64_t)v2, v342);
  uint64_t v351 = v2;
  if (*v342 >= 1)
  {
    int v16 = 0;
    uint64_t v17 = v342 + 2;
    do
    {
      if (*((void *)v17 + 4)) {
        goto LABEL_15;
      }
      uint64_t v10 = (char *)*((void *)v17 + 2);
      if (!v10)
      {
        if (sub_1B0C962CC((void *)a1, *((void **)v17 + 5))) {
          return 2;
        }
        uint64_t v34 = *((void *)v17 + 5);
        if (*v2)
        {
          uint64_t v41 = sub_1B0D05DC0(*v2, 0x68uLL);
          if (!v41) {
            goto LABEL_256;
          }
        }
        else
        {
          uint64_t v41 = sub_1B0C7FC94(104);
          if (!v41) {
            goto LABEL_256;
          }
        }
        *(void *)(v41 + 96) = 0;
        *(_OWORD *)(v41 + 64) = 0u;
        *(_OWORD *)(v41 + 80) = 0u;
        *(_OWORD *)(v41 + 32) = 0u;
        *(_OWORD *)(v41 + 48) = 0u;
        *(_OWORD *)uint64_t v41 = 0u;
        *(_OWORD *)(v41 + 16) = 0u;
        *((void *)v17 + 4) = v41;
        *(_DWORD *)(v41 + 44) = 1;
        unsigned int v49 = v2;
        uint64_t v50 = (const void *)*((void *)v17 + 3);
        uint64_t v51 = *v49;
        if (v50)
        {
          size_t v52 = strlen(*((const char **)v17 + 3));
          unint64_t v53 = v52 + 1;
          if (v51)
          {
            int v54 = (void *)sub_1B0D05DC0(v51, v53);
            if (!v54) {
              goto LABEL_71;
            }
LABEL_70:
            memcpy(v54, v50, v53);
          }
          else
          {
            int v54 = (void *)sub_1B0C7FC94(v52 + 1);
            if (v54) {
              goto LABEL_70;
            }
          }
        }
        else
        {
          int v54 = sub_1B0C904AC(v51, "%!S", v35, v36, v37, v38, v39, v40, (char)v17);
        }
LABEL_71:
        uint64_t v2 = v351;
        *(void *)uint64_t v41 = v54;
        do
        {
          uint64_t v55 = v34;
          uint64_t v34 = *(void *)(v34 + 80);
        }
        while (v34);
        sub_1B0D38DBC(v351, *(int **)(v55 + 32), (_WORD *)(v41 + 54), (void *)(v41 + 8));
        *(_WORD *)(v41 + 52) = -1;
        *(_WORD *)(v41 + 58) = 200;
        *(_DWORD *)(v41 + 48) |= 0x4200u;
        if (*((_DWORD *)v351 + 12)) {
          return 2;
        }
LABEL_74:
        if ((*(_WORD *)((unsigned char *)v17 + 61) & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_75;
      }
      uint64_t v18 = (unsigned int *)v2[50];
      if (!v18
        || *((_DWORD *)v2 + 12)
        || *((void *)v17 + 1)
        || (__int16 v19 = *(_WORD *)((char *)v17 + 61), (v19 & 0x200) != 0))
      {
LABEL_33:
        if (*(void *)v17)
        {
          uint64_t v29 = *(void *)(*v2 + 32);
          uint64_t v30 = (uint64_t *)(v29 + 24);
          uint64_t v31 = 0xFFFFFFFF00000000;
          do
          {
            uint64_t v32 = *v30;
            v30 += 4;
            v31 += 0x100000000;
          }
          while (v32 != *(void *)v17);
          uint64_t v33 = (unsigned char **)(v29 + (v31 >> 27));
        }
        else
        {
          uint64_t v33 = (unsigned char **)(v17 + 2);
        }
        uint64_t v42 = sub_1B0CB02B4((uint64_t)v2, 0, v10, *v33, v12, v13, v14, v15);
        *((void *)v17 + 4) = v42;
        if (!v42) {
          return 2;
        }
        uint64_t v43 = v42;
        unsigned int v44 = *(_DWORD *)(v42 + 44);
        if (v44 < 0xFFFF)
        {
          *(_DWORD *)(v42 + 44) = v44 + 1;
          int v45 = *(unsigned __int8 *)(v42 + 63);
          if (v45 == 1)
          {
            __int16 v46 = *(unsigned __int8 *)(a1 + 36);
            goto LABEL_46;
          }
          if ((*(_WORD *)((unsigned char *)v17 + 61) & 4) == 0)
          {
            if (!*(unsigned char *)(v42 + 63)) {
              goto LABEL_74;
            }
            __int16 v46 = *(unsigned __int8 *)(a1 + 36);
            if (*(__int16 *)(v42 + 54) <= 0)
            {
LABEL_46:
              if (sub_1B0D393F0((uint64_t)v2, v42, (uint64_t)v10, v11, v12, v13, v14, v15)) {
                return 2;
              }
              int v45 = *(unsigned __int8 *)(v43 + 63);
            }
            if (v45 == 1)
            {
              if ((*(_WORD *)((unsigned char *)v17 + 61) & 0x80) != 0)
              {
                uint64_t v47 = *(void *)(v43 + 80);
                if (v47)
                {
                  if (((*(_DWORD *)(v352 + 48) >> 7) & 1u) < *(unsigned __int8 *)(v47 + 30)) {
                    sub_1B0CEF2BC((uint64_t)v2, "unsafe use of virtual table \"%s\"", (uint64_t)v10, v11, v12, v13, v14, v15, *(void *)v43);
                  }
                }
              }
            }
            else if (v45 == 2)
            {
              if ((*(unsigned char *)(v352 + 51) & 0x80) == 0
                && *(void *)(v43 + 96) != *(void *)(*(void *)(v352 + 32) + 56))
              {
                sub_1B0CEF2BC((uint64_t)v2, "access to view \"%s\" prohibited", (uint64_t)v10, v11, v12, v13, v14, v15, *(void *)v43);
              }
              *((void *)v17 + 5) = sub_1B0CB0DF4(v352, *(void *)(v43 + 64), 0);
            }
            __int16 v48 = *(_WORD *)(v43 + 54);
            *(_WORD *)(v43 + 54) = -1;
            *(_WORD *)(a1 + 36) = 1;
            sub_1B0C962CC((void *)a1, *((void **)v17 + 5));
            *(_WORD *)(a1 + 36) = v46;
            *(_WORD *)(v43 + 54) = v48;
            uint64_t v2 = v351;
            if ((*(_WORD *)((unsigned char *)v17 + 61) & 2) != 0) {
              goto LABEL_75;
            }
            goto LABEL_15;
          }
          uint64_t v313 = *((void *)v17 + 2);
LABEL_488:
          int v62 = "'%s' is not a function";
LABEL_491:
          uint64_t v312 = (uint64_t)v2;
LABEL_492:
          sub_1B0CEF2BC(v312, v62, (uint64_t)v10, v11, v12, v13, v14, v15, v313);
          return 2;
        }
        sub_1B0CEF2BC((uint64_t)v2, "too many references to \"%s\": max 65535", (uint64_t)v10, v11, v12, v13, v14, v15, *(void *)v42);
LABEL_256:
        *((void *)v17 + 4) = 0;
        return 2;
      }
      while (1)
      {
        uint64_t v20 = *v18;
        if ((int)v20 >= 1) {
          break;
        }
LABEL_31:
        if (!v18[1])
        {
          uint64_t v18 = (unsigned int *)*((void *)v18 + 1);
          if (v18) {
            continue;
          }
        }
        goto LABEL_33;
      }
      uint64_t v21 = 0;
LABEL_24:
      uint64_t v22 = 0;
      uint64_t v23 = &v18[12 * v21];
      uint64_t v26 = *((void *)v23 + 2);
      uint64_t v25 = (char **)(v23 + 4);
      uint64_t v24 = v26;
      while (1)
      {
        uint64_t v27 = v10[v22];
        uint64_t v28 = *(unsigned __int8 *)(v24 + v22);
        if (v27 == v28) {
          break;
        }
        if (byte_1B0DE1758[v27] != byte_1B0DE1758[v28])
        {
          if (++v21 == v20) {
            goto LABEL_31;
          }
          goto LABEL_24;
        }
LABEL_26:
        ++v22;
      }
      if (v10[v22]) {
        goto LABEL_26;
      }
      int v61 = &v18[12 * v21];
      int v62 = (const char *)*((void *)v61 + 5);
      uint64_t v343 = (const char **)(v61 + 10);
      if (v62)
      {
        LOBYTE(v313) = v24;
        goto LABEL_491;
      }
      if ((v19 & 4) != 0)
      {
        LOBYTE(v313) = *((void *)v17 + 2);
        goto LABEL_488;
      }
      uint64_t v346 = v21;
      uint64_t v63 = *v2;
      int v64 = sub_1B0C79680(*v2, 0x68uLL);
      if (!v64) {
        return 2;
      }
      int v65 = v64;
      unint64_t v339 = v25;
      uint64_t v66 = &v18[12 * v346];
      uint64_t v69 = (unsigned char *)*((void *)v66 + 6);
      uint64_t v67 = v66 + 12;
      uint64_t v68 = v69;
      if (!v69)
      {
        uint64_t v70 = sub_1B0C79680(v63, 0x14uLL);
        *uint64_t v67 = v70;
        if (!v70
          || (uint64_t v68 = v70, !sub_1B0D33A90(v351, (void (*)(uint64_t, uint64_t))sub_1B0CA12F4, (uint64_t)v70)))
        {
          sub_1B0D05C10((void *)v63, v65);
          return 2;
        }
        v68[18] = v18[12 * v346 + 14];
      }
      *((void *)v17 + 4) = v65;
      v65[11] = 1;
      *(void *)int v65 = sub_1B0CAF97C(v63, *v339);
      *((_WORD *)v65 + 26) = -1;
      *((_WORD *)v65 + 29) = 200;
      v65[12] |= 0x4200u;
      uint64_t v71 = (unsigned __int8 *)sub_1B0CB0DF4(v63, *(void *)&v18[12 * v346 + 8], 0);
      *((void *)v17 + 5) = v71;
      if (*(unsigned char *)(v63 + 103)) {
        return 2;
      }
      *((_DWORD *)v71 + 1) |= 0x4000000u;
      __int16 v78 = *(_WORD *)((char *)v17 + 61);
      if ((v78 & 2) != 0)
      {
        sub_1B0CEF2BC((uint64_t)v351, "no such index: \"%s\"", v72, v73, v74, v75, v76, v77, *((void *)v17 + 11));
        return 2;
      }
      *(_WORD *)((char *)v17 + 61) = v78 | 0x100;
      *((void *)v17 + 12) = v68;
      ++*(_DWORD *)v68;
      int v79 = *v71 & 0xFE;
      int v80 = v71;
      if (v79 != 134) {
        goto LABEL_111;
      }
      int v81 = -1;
      int v80 = v71;
      while (2)
      {
        uint64_t v82 = (unsigned int *)*((void *)v80 + 5);
        uint64_t v83 = *v82;
        if ((int)v83 < 1) {
          goto LABEL_109;
        }
        uint64_t v84 = 0;
        while (2)
        {
          if (*(void *)&v82[26 * v84 + 4]) {
            goto LABEL_98;
          }
          int v85 = *(unsigned char **)&v82[26 * v84 + 6];
          if (!v85) {
            goto LABEL_98;
          }
          int v86 = *v339;
          while (2)
          {
            uint64_t v87 = *v85;
            uint64_t v88 = *v86;
            if (v87 != v88)
            {
              if (byte_1B0DE1758[v87] != byte_1B0DE1758[v88]) {
                goto LABEL_98;
              }
LABEL_103:
              ++v85;
              ++v86;
              continue;
            }
            break;
          }
          if (*v85) {
            goto LABEL_103;
          }
          uint64_t v89 = &v82[26 * v84];
          *((void *)v89 + 5) = v65;
          ++v65[11];
          *(_WORD *)((char *)v89 + 69) |= 0x40u;
          int v90 = *((_DWORD *)v80 + 1);
          if ((v90 & 0x2000) != 0)
          {
            sub_1B0CEF2BC((uint64_t)v351, "multiple references to recursive table: %s", v72, v73, v74, v75, v76, v77, (char)*v339);
            return 2;
          }
          *((_DWORD *)v80 + 1) = v90 | 0x2000;
          if (v81 < 0)
          {
            int v81 = *((_DWORD *)v351 + 13);
            *((_DWORD *)v351 + 13) = v81 + 1;
          }
          v82[26 * v84 + 18] = v81;
LABEL_98:
          if (++v84 != v83) {
            continue;
          }
          break;
        }
LABEL_109:
        if ((v80[5] & 0x20) != 0)
        {
          int v80 = (unsigned __int8 *)*((void *)v80 + 10);
          if (*v80 == *v71) {
            continue;
          }
        }
        break;
      }
LABEL_111:
      int __s = v79;
      *uint64_t v343 = "circular reference: %s";
      v335 = (void *)v351[50];
      v351[50] = (uint64_t)v18;
      if ((v71[5] & 0x20) != 0)
      {
        *((void *)v80 + 13) = *((void *)v71 + 13);
        long long v91 = v71;
        int v92 = sub_1B0C962CC((void *)a1, v80);
        *((void *)v80 + 13) = 0;
      }
      else
      {
        long long v91 = v71;
        int v92 = sub_1B0C962CC((void *)a1, v71);
      }
      if (v92)
      {
        v351[50] = (uint64_t)v335;
        return 2;
      }
      v351[50] = (uint64_t)v18;
      char v99 = v91;
      do
      {
        uint64_t v100 = v99;
        char v99 = (unsigned __int8 *)*((void *)v99 + 10);
      }
      while (v99);
      long long v101 = (int *)*((void *)v100 + 4);
      int v102 = *(int **)&v18[12 * v346 + 6];
      if (v102)
      {
        if (v101 && *v101 != *v102)
        {
          sub_1B0CEF2BC((uint64_t)v351, "table %s has %d values for %d columns", v93, v94, v95, v96, v97, v98, (char)*v339);
          v351[50] = (uint64_t)v335;
          return 2;
        }
      }
      else
      {
        int v102 = v101;
      }
      sub_1B0D38DBC(v351, v102, (_WORD *)v65 + 27, (void *)v65 + 1);
      if (__s == 134)
      {
        long long v103 = "multiple recursive references: %s";
        if ((*((_DWORD *)v91 + 1) & 0x2000) == 0) {
          long long v103 = "recursive reference in a subquery: %s";
        }
        *uint64_t v343 = v103;
        sub_1B0C962CC((void *)a1, v91);
      }
      *uint64_t v343 = 0;
      uint64_t v2 = v351;
      v351[50] = (uint64_t)v335;
      if ((*(_WORD *)((unsigned char *)v17 + 61) & 2) != 0)
      {
LABEL_75:
        uint64_t v56 = *(void *)(*((void *)v17 + 4) + 16);
        if (!v56) {
          goto LABEL_253;
        }
        while (1)
        {
          unint64_t v57 = *(unsigned char **)v56;
          for (int i = (unsigned __int8 *)*((void *)v17 + 11); ; ++i)
          {
            uint64_t v59 = *v57;
            uint64_t v60 = *i;
            if (v59 != v60) {
              break;
            }
            if (!*v57)
            {
              *((void *)v17 + 12) = v56;
              goto LABEL_15;
            }
LABEL_78:
            ++v57;
          }
          if (byte_1B0DE1758[v59] == byte_1B0DE1758[v60]) {
            goto LABEL_78;
          }
          uint64_t v56 = *(void *)(v56 + 40);
          if (!v56)
          {
LABEL_253:
            sub_1B0CEF2BC((uint64_t)v2, "no such index: %s", (uint64_t)v10, v11, v12, v13, v14, v15, *((void *)v17 + 11));
            *((unsigned char *)v2 + 29) = 1;
            return 2;
          }
        }
      }
LABEL_15:
      ++v16;
      v17 += 26;
    }
    while (v16 < *v342);
  }
  if (*((_DWORD *)v2 + 12)) {
    return 2;
  }
  uint64_t v104 = *(int **)(a2 + 40);
  if (*v104 <= 1) {
    goto LABEL_245;
  }
  uint64_t v105 = 0;
  uint64_t v106 = v104 + 28;
  int v107 = v104 + 2;
  while (2)
  {
    uint64_t v108 = *((void *)v106 + 4);
    if (*((void *)v107 + 4)) {
      BOOL v109 = v108 == 0;
    }
    else {
      BOOL v109 = 1;
    }
    if (v109) {
      goto LABEL_132;
    }
    if ((v106[15] & 0x20) != 0) {
      int v110 = 1;
    }
    else {
      int v110 = 2;
    }
    unsigned int __sa = v110;
    uint64_t v340 = v107;
    if ((v106[15] & 4) == 0) {
      goto LABEL_181;
    }
    if ((*(_WORD *)((unsigned char *)v106 + 61) & 0x400) != 0 || *((void *)v106 + 9))
    {
      LOBYTE(v313) = 0;
      int v62 = "a NATURAL join may not have an ON or USING clause";
      goto LABEL_491;
    }
    int v111 = *(__int16 *)(v108 + 54);
    if (v111 < 1) {
      goto LABEL_180;
    }
    uint64_t v112 = 0;
    __int16 v113 = 0;
    uint64_t v336 = *((void *)v106 + 4);
    while (2)
    {
      while (2)
      {
        uint64_t v115 = *(void *)(v108 + 8);
        if ((*(_WORD *)(v115 + 16 * v112 + 14) & 2) != 0) {
          goto LABEL_148;
        }
        uint64_t v116 = 0;
        uint64_t v117 = *(const char **)(v115 + 16 * v112);
        while (2)
        {
          if (v117 && (int v118 = *(unsigned __int8 *)v117, *v117))
          {
            unsigned __int8 v119 = 0;
            int v120 = (unsigned __int8 *)(v117 + 1);
            do
            {
              v119 += byte_1B0DE1758[v118];
              int v121 = *v120++;
              int v118 = v121;
            }
            while (v121);
          }
          else
          {
            unsigned __int8 v119 = 0;
          }
          uint64_t v122 = *(void *)&v104[26 * v116 + 10];
          int v123 = *(__int16 *)(v122 + 54);
          if (v123 < 1) {
            goto LABEL_151;
          }
          unsigned int v124 = 0;
          uint64_t v125 = *(void *)(v122 + 8);
          uint64_t v126 = v125;
          while (*(unsigned __int8 *)(v126 + 11) != v119)
          {
LABEL_160:
            v126 += 16;
            if (++v124 == v123) {
              goto LABEL_151;
            }
          }
          for (uint64_t j = 0; ; ++j)
          {
            uint64_t v128 = *(unsigned __int8 *)(*(void *)v126 + j);
            uint64_t v129 = v117[j];
            if (v128 == v129) {
              break;
            }
            if (byte_1B0DE1758[v128] != byte_1B0DE1758[v129]) {
              goto LABEL_160;
            }
LABEL_164:
            ;
          }
          if (*(unsigned char *)(*(void *)v126 + j)) {
            goto LABEL_164;
          }
          if ((*(_WORD *)(v125 + 16 * v124 + 14) & 2) != 0)
          {
LABEL_151:
            BOOL v9 = v116++ == v105;
            if (v9) {
              goto LABEL_147;
            }
            continue;
          }
          break;
        }
        __int16 v113 = sub_1B0D2AB44((uint64_t)v351, v113, 0);
        if (!v113)
        {
          ++v112;
          LOWORD(v111) = *(_WORD *)(v108 + 54);
          uint64_t v2 = v351;
          if (v112 >= (__int16)v111) {
            goto LABEL_180;
          }
          continue;
        }
        break;
      }
      if (v117)
      {
        size_t v130 = strlen(v117);
        unint64_t v131 = v130 + 1;
        if (*v351) {
          uint64_t v132 = (void *)sub_1B0D05DC0(*v351, v131);
        }
        else {
          uint64_t v132 = (void *)sub_1B0C7FC94(v130 + 1);
        }
        uint64_t v114 = v132;
        if (v132) {
          memcpy(v132, v117, v131);
        }
        uint64_t v108 = v336;
      }
      else
      {
        uint64_t v114 = 0;
      }
      v113[2 * *(int *)v113 - 1] = v114;
      LOWORD(v111) = *(_WORD *)(v108 + 54);
LABEL_147:
      uint64_t v2 = v351;
LABEL_148:
      if (++v112 < (__int16)v111) {
        continue;
      }
      break;
    }
    if (v113)
    {
      *(_WORD *)((char *)v106 + 61) |= 0x1400u;
      *((void *)v106 + 9) = v113;
    }
LABEL_180:
    int v107 = v340;
    if (*((_DWORD *)v2 + 12)) {
      return 2;
    }
LABEL_181:
    uint32x4_t v133 = (int *)*((void *)v106 + 9);
    if ((*(_WORD *)((unsigned char *)v106 + 61) & 0x400) != 0)
    {
      if (*v133 < 1) {
        goto LABEL_132;
      }
      uint64_t v134 = 0;
      uint64_t v347 = *v2;
      uint64_t v337 = v108;
      uint64_t v328 = (int *)*((void *)v106 + 9);
LABEL_187:
      *(void *)uint64_t v353 = 0;
      uint16x4_t v135 = *(unsigned __int8 **)&v133[4 * v134 + 2];
      uint64_t v344 = v134;
      if (v135 && (int v136 = *v135) != 0)
      {
        unsigned __int8 v137 = 0;
        uint64_t v138 = v135 + 1;
        do
        {
          v137 += byte_1B0DE1758[v136];
          int v139 = *v138++;
          int v136 = v139;
        }
        while (v139);
      }
      else
      {
        unsigned __int8 v137 = 0;
      }
      int v140 = *(__int16 *)(v108 + 54);
      if (v140 < 1)
      {
LABEL_252:
        LOBYTE(v313) = (_BYTE)v135;
        int v62 = "cannot join using column %s - column not present in both tables";
        goto LABEL_491;
      }
      unsigned int v141 = 0;
      uint64_t v142 = *(void *)(v108 + 8);
      while (*(unsigned __int8 *)(v142 + 11) != v137)
      {
LABEL_195:
        v142 += 16;
        if (++v141 == v140) {
          goto LABEL_252;
        }
      }
      for (uint64_t k = 0; ; ++k)
      {
        uint64_t v144 = *(unsigned __int8 *)(*(void *)v142 + k);
        uint64_t v145 = v135[k];
        if (v144 == v145)
        {
          if (!*(unsigned char *)(*(void *)v142 + k))
          {
            if (!sub_1B0D3A2CC((uint64_t)v104, 0, v105, v135, &v353[1], v353, (*(unsigned __int16 *)((char *)v106 + 61) >> 12) & 1))goto LABEL_252; {
            unsigned int v146 = v353[0];
            }
            uint64_t v147 = (unsigned __int8 *)sub_1B0D3A414(v347, (uint64_t)v104, v353[1], v353[0]);
            if ((*(_WORD *)((unsigned char *)&v104[26 * v353[1] + 17] + 1) & 0x2000) != 0)
            {
              uint64_t v148 = *(void *)(*(void *)&v104[26 * v353[1] + 12] + 32) + 24 * (int)v146;
              *(_WORD *)(v148 + 25) |= 0x40u;
            }
            if ((v104[17] & 0x40) == 0
              || !sub_1B0D3A2CC((uint64_t)v104, v353[1] + 1, v105, v135, &v353[1], v353, (*(unsigned __int16 *)((char *)v106 + 61) >> 12) & 1))
            {
              goto LABEL_236;
            }
            int v155 = 0;
LABEL_209:
            if ((*(_WORD *)((unsigned char *)&v104[26 * v353[1] + 17] + 1) & 0x400) != 0)
            {
              uint64_t v156 = *(unsigned int **)&v104[26 * v353[1] + 20];
              uint64_t v157 = *v156;
              if ((int)v157 >= 1)
              {
                uint64_t v158 = 0;
LABEL_212:
                for (uint64_t m = 0; ; ++m)
                {
                  uint64_t v160 = *(unsigned __int8 *)(*(void *)&v156[4 * v158 + 2] + m);
                  uint64_t v161 = v135[m];
                  if (v160 == v161)
                  {
                    if (!*(unsigned char *)(*(void *)&v156[4 * v158 + 2] + m))
                    {
                      if ((v158 & 0x80000000) != 0) {
                        break;
                      }
                      if (!v155)
                      {
                        uint64_t v164 = (int *)sub_1B0D55ACC((void *)*v351, v147);
LABEL_226:
                        int v155 = v164;
                        goto LABEL_227;
                      }
                      int v162 = *v155;
                      if (v155[1] <= *v155)
                      {
                        uint64_t v164 = sub_1B0D55B34(*v351, v155, v147);
                        goto LABEL_226;
                      }
                      *int v155 = v162 + 1;
                      char v163 = &v155[6 * v162];
                      *((void *)v163 + 2) = 0;
                      *((void *)v163 + 3) = 0;
                      *((void *)v163 + 1) = v147;
LABEL_227:
                      unsigned int v165 = v353[0];
                      uint64_t v147 = (unsigned __int8 *)sub_1B0D3A414(v347, (uint64_t)v104, v353[1], v353[0]);
                      unsigned int v166 = v353[1];
                      if ((*(_WORD *)((unsigned char *)&v104[26 * v353[1] + 17] + 1) & 0x2000) != 0)
                      {
                        uint64_t v167 = *(void *)(*(void *)&v104[26 * v353[1] + 12] + 32) + 24 * (int)v165;
                        *(_WORD *)(v167 + 25) |= 0x40u;
                        unsigned int v166 = v353[1];
                      }
                      if (!sub_1B0D3A2CC((uint64_t)v104, v166 + 1, v105, v135, &v353[1], v353, (*(unsigned __int16 *)((char *)v106 + 61) >> 12) & 1))goto LABEL_230; {
                      goto LABEL_209;
                      }
                    }
                  }
                  else if (byte_1B0DE1758[v160] != byte_1B0DE1758[v161])
                  {
                    if (++v158 != v157) {
                      goto LABEL_212;
                    }
                    break;
                  }
                }
              }
            }
            sub_1B0CEF2BC((uint64_t)v351, "ambiguous reference to %s in USING()", v149, v150, v151, v152, v153, v154, (char)v135);
LABEL_230:
            if (v155)
            {
              int v168 = *v155;
              if (v155[1] <= *v155)
              {
                uint64_t v170 = (uint64_t)v351;
                int v155 = sub_1B0D55B34(*v351, v155, v147);
              }
              else
              {
                *int v155 = v168 + 1;
                uint64_t v169 = &v155[6 * v168];
                *((void *)v169 + 2) = 0;
                *((void *)v169 + 3) = 0;
                *((void *)v169 + 1) = v147;
                uint64_t v170 = (uint64_t)v351;
              }
              uint64_t v147 = (unsigned __int8 *)sub_1B0CB0BA8(v170, v155, &off_1E5FF0058, 0);
              uint64_t v2 = (uint64_t *)v170;
            }
            else
            {
              uint64_t v2 = v351;
            }
LABEL_236:
            uint64_t v171 = sub_1B0D3A414(v347, (uint64_t)v104, (int)v105 + 1, v141);
            if ((*(_WORD *)((unsigned char *)v106 + 61) & 0x2000) != 0)
            {
              uint64_t v172 = *(void *)(*((void *)v106 + 5) + 32) + 24 * v141;
              *(_WORD *)(v172 + 25) |= 0x40u;
            }
            uint64_t v173 = sub_1B0D28CCC(v2, 53, (uint64_t)v147, v171);
            if (v173)
            {
              *(_DWORD *)(v173 + 4) |= __sa;
              *(_DWORD *)(v173 + 56) = *(_DWORD *)(v171 + 44);
            }
            *(void *)(a2 + 48) = sub_1B0D2AE14(v2, *(void *)(a2 + 48), v173);
            uint64_t v134 = v344 + 1;
            uint32x4_t v133 = v328;
            uint64_t v108 = v337;
            int v107 = v340;
            if (v344 + 1 >= *v328) {
              goto LABEL_132;
            }
            goto LABEL_187;
          }
        }
        else if (byte_1B0DE1758[v144] != byte_1B0DE1758[v145])
        {
          goto LABEL_195;
        }
      }
    }
    if (v133)
    {
      sub_1B0D3A514(*((void *)v106 + 9), v106[16], __sa);
      *(void *)(a2 + 48) = sub_1B0D2AE14(v2, *(void *)(a2 + 48), *((void *)v106 + 9));
      *((void *)v106 + 9) = 0;
      *(_WORD *)((char *)v106 + 61) |= 0x800u;
    }
LABEL_132:
    ++v105;
    v106 += 26;
    v107 += 26;
    if (v105 < *v104 - 1) {
      continue;
    }
    break;
  }
LABEL_245:
  uint64_t v174 = v315;
  uint64_t v175 = *v315;
  if ((int)v175 < 1)
  {
    int v177 = 0;
    uint64_t v179 = a2;
    uint64_t v180 = v352;
    uint64_t v183 = *(int **)(a2 + 32);
    goto LABEL_481;
  }
  unint64_t v176 = 0;
  int v177 = 0;
  uint64_t v178 = 24 * v175;
  uint64_t v179 = a2;
  uint64_t v180 = v352;
  while (1)
  {
    int v181 = *(unsigned __int8 **)&v315[v176 / 4 + 2];
    int v182 = *v181;
    if (v182 == 141) {
      int v182 = **((unsigned __int8 **)v181 + 3);
    }
    if (v182 == 180) {
      break;
    }
    v177 |= *((_DWORD *)v181 + 1);
    v176 += 24;
    if (v178 == v176)
    {
      uint64_t v183 = *(int **)(a2 + 32);
      goto LABEL_481;
    }
  }
  int v184 = v2;
  uint64_t v183 = 0;
  uint64_t v316 = v315 + 2;
  uint64_t v324 = *(void *)(*v184 + 48) & 0x44;
  uint64_t v185 = 0;
  while (2)
  {
    int v317 = v177;
    uint64_t v319 = v185;
    uint64_t v191 = &v316[6 * v185];
    int v318 = *(_DWORD *)(*(void *)v191 + 4);
    int v320 = *(_DWORD **)v191;
    int v192 = **(unsigned __int8 **)v191;
    if (v192 == 180)
    {
      unsigned int v338 = 0;
      int v193 = *(unsigned __int8 **)v191;
LABEL_272:
      int v196 = *v342;
      if (*v342 < 1)
      {
        int v190 = v317;
        char v311 = (char)v338;
        if (v338) {
          goto LABEL_474;
        }
        goto LABEL_479;
      }
      int v197 = 0;
      int v198 = 0;
      int v325 = *((_DWORD *)v193 + 14);
      uint64_t v199 = v342 + 2;
LABEL_277:
      uint64_t v201 = *((void *)v199 + 4);
      int v345 = (const char *)*((void *)v199 + 3);
      if (!v345) {
        int v345 = *(const char **)v201;
      }
      if (*(unsigned char *)(v180 + 103))
      {
LABEL_472:
        uint64_t v179 = a2;
        uint64_t v174 = v315;
        int v190 = v317;
        uint64_t v189 = v319;
        if (v197) {
          goto LABEL_262;
        }
        char v311 = (char)v338;
        if (v338)
        {
LABEL_474:
          sub_1B0CEF2BC((uint64_t)v351, "no such table: %s", (uint64_t)v10, v11, v12, v13, v14, v15, v311);
LABEL_480:
          uint64_t v189 = v319;
          goto LABEL_262;
        }
LABEL_479:
        sub_1B0CEF2BC((uint64_t)v351, "no tables specified", (uint64_t)v10, v11, v12, v13, v14, v15, v313);
        goto LABEL_480;
      }
      if ((*(_WORD *)((unsigned char *)v199 + 61) & 0x2000) != 0)
      {
        __sb = 0;
        uint64_t v341 = *(void *)(*((void *)v199 + 5) + 32);
      }
      else
      {
        if (v338)
        {
          long long v202 = v338;
          for (uint64_t n = v345; ; ++n)
          {
            uint64_t v204 = *v202;
            uint64_t v205 = *(unsigned __int8 *)n;
            if (v204 == v205)
            {
              if (!*v202) {
                break;
              }
            }
            else if (byte_1B0DE1758[v204] != byte_1B0DE1758[v205])
            {
              int v200 = v198 + 1;
              goto LABEL_276;
            }
            ++v202;
          }
        }
        uint64_t v206 = *(void *)(v201 + 96);
        if (!v206) {
          goto LABEL_293;
        }
        uint64_t v207 = *(void *)(v180 + 32);
        uint64_t v208 = (uint64_t *)(v207 + 24);
        unsigned int v209 = -1;
        do
        {
          uint64_t v210 = *v208;
          v208 += 4;
          ++v209;
        }
        while (v210 != v206);
        if ((v209 & 0x80000000) != 0)
        {
LABEL_293:
          uint64_t v341 = 0;
          uint64_t v211 = "*";
        }
        else
        {
          uint64_t v341 = 0;
          uint64_t v211 = *(const char **)(v207 + 32 * v209);
        }
        __sb = (char *)v211;
      }
      int v200 = v198 + 1;
      if (v198 + 1 >= v196)
      {
        uint64_t v212 = 0;
        goto LABEL_320;
      }
      uint64_t v212 = 0;
      if ((*(_WORD *)((unsigned char *)v199 + 165) & 0x400) != 0 && (v350 & 0x800) != 0)
      {
        uint64_t v212 = (int *)*((void *)v199 + 22);
        if (*v212 >= 1)
        {
          int v326 = v198;
          int v329 = v197;
          int v322 = v198 + 1;
          v348 = v199;
          uint64_t v213 = 0;
          uint64_t v214 = 2;
          while (1)
          {
            uint64_t v219 = v212;
            uint64_t v220 = *(const void **)&v212[v214];
            if (v220) {
              size_t v221 = strlen(*(const char **)&v212[v214]) & 0x3FFFFFFF;
            }
            else {
              size_t v221 = 0;
            }
            uint64_t v222 = sub_1B0D05DC0(v352, v221 + 81);
            uint64_t v223 = v222;
            if (!v222) {
              goto LABEL_310;
            }
            *(_OWORD *)(v222 + 48) = 0u;
            *(_OWORD *)(v222 + 64) = 0u;
            *(_OWORD *)(v222 + 16) = 0u;
            *(_OWORD *)(v222 + 32) = 0u;
            *(_OWORD *)uint64_t v222 = 0u;
            *(unsigned char *)uint64_t v222 = 59;
            *(_WORD *)(v222 + 52) = -1;
            uint64_t v224 = v222 + 80;
            *(void *)(v222 + 8) = v222 + 80;
            if (v221) {
              memcpy((void *)(v222 + 80), v220, v221);
            }
            *(unsigned char *)(v224 + v221) = 0;
            *(_DWORD *)(v223 + 40) = 1;
            if ((*(unsigned char *)(v223 + 4) & 3) == 0)
            {
              *(_DWORD *)(v223 + 56) = v325;
              if (v183)
              {
LABEL_311:
                int v225 = *v183;
                if (v183[1] > *v183)
                {
                  int *v183 = v225 + 1;
                  int v215 = &v183[6 * v225];
                  *((void *)v215 + 2) = 0;
                  *((void *)v215 + 3) = 0;
                  *((void *)v215 + 1) = v223;
                }
                else
                {
                  uint64_t v183 = sub_1B0D55B34(*v351, v183, (unsigned __int8 *)v223);
                  if (!v183) {
                    goto LABEL_316;
                  }
                }
                goto LABEL_301;
              }
            }
            else
            {
LABEL_310:
              if (v183) {
                goto LABEL_311;
              }
            }
            uint64_t v183 = (int *)sub_1B0D55ACC((void *)*v351, (unsigned __int8 *)v223);
            if (!v183)
            {
LABEL_316:
              uint64_t v180 = v352;
              goto LABEL_302;
            }
LABEL_301:
            int v216 = *v183;
            char v314 = (char)v220;
            uint64_t v180 = v352;
            uint64_t v217 = sub_1B0C904AC(v352, "..%s", (uint64_t)v10, v11, v12, v13, v14, v15, v314);
            int v218 = &v183[6 * v216];
            *((void *)v218 - 1) = v217;
            *(_WORD *)((char *)v218 + 1) = *(_WORD *)((unsigned char *)v218 + 1) & 0xFF7C | 0x82;
LABEL_302:
            ++v213;
            uint64_t v212 = v219;
            v214 += 4;
            if (v213 >= *v219)
            {
              uint64_t v199 = v348;
              int v200 = v322;
              int v197 = v329;
              int v198 = v326;
              break;
            }
          }
        }
      }
LABEL_320:
      if (*(__int16 *)(v201 + 54) < 1) {
        goto LABEL_276;
      }
      uint64_t v327 = v212;
      int v323 = v200;
      uint64_t v349 = v199;
      uint64_t v226 = 0;
      BOOL v227 = v198 != 0;
      uint64_t v228 = v338;
      uint64_t v229 = v341;
      if (v338) {
        BOOL v227 = 0;
      }
      if (v341) {
        BOOL v230 = v338 != 0;
      }
      else {
        BOOL v230 = 0;
      }
      if ((v350 & 0x800) != 0) {
        BOOL v227 = 0;
      }
      BOOL v330 = v227;
      int v321 = ~v198;
      uint64_t v231 = a2;
LABEL_331:
      uint64_t v232 = *(void *)(v201 + 8);
      long long v233 = *(const char **)(v232 + 16 * v226);
      if (v230)
      {
        if ((*(_WORD *)(v229 + 24 * v226 + 25) & 3) != 2) {
          goto LABEL_330;
        }
        uint64_t v234 = 0;
        long long v235 = *(unsigned char **)(v229 + 24 * v226 + 16);
        unsigned int v236 = 1;
        int v237 = *v235;
        if (*v235)
        {
          do
          {
            if (v237 == 46) {
              break;
            }
            ++v234;
            ++v236;
            int v237 = v235[v234];
          }
          while (v235[v234]);
        }
        uint64_t v238 = 0;
        uint64_t v239 = &v235[(v234 + 1)];
        uint64_t v240 = &v235[v236];
        int v241 = 1;
        int v242 = *v240;
        if (*v240)
        {
          do
          {
            if (v242 == 46) {
              break;
            }
            ++v238;
            ++v241;
            int v242 = v240[v238];
          }
          while (v240[v238]);
        }
        if (v238)
        {
          uint64_t v243 = v228;
          while (1)
          {
            uint64_t v244 = *v239;
            if (!*v239) {
              break;
            }
            LODWORD(v244) = byte_1B0DE1758[v244];
            int v245 = byte_1B0DE1758[*v243];
            if (v244 != v245) {
              goto LABEL_363;
            }
            ++v239;
            ++v243;
            if (--v241 <= 1) {
              goto LABEL_329;
            }
          }
          int v245 = byte_1B0DE1758[*v243];
LABEL_363:
          if (v244 != v245) {
            goto LABEL_330;
          }
        }
LABEL_329:
        if (v228[v238]) {
          goto LABEL_330;
        }
      }
      __int16 v246 = *(_WORD *)(v232 + 16 * v226 + 14);
      if ((*(unsigned char *)(v231 + 6) & 2) == 0 && (v246 & 2) != 0 || (v246 & 0x400) != 0 && !v228 && (v350 & 0x800) == 0) {
        goto LABEL_330;
      }
      if (!v330) {
        goto LABEL_366;
      }
      if ((*(_WORD *)((unsigned char *)v349 + 61) & 0x400) == 0) {
        goto LABEL_366;
      }
      uint64_t v247 = (unsigned int *)*((void *)v349 + 9);
      uint64_t v248 = *v247;
      if ((int)v248 < 1) {
        goto LABEL_366;
      }
      uint64_t v249 = 0;
LABEL_354:
      uint64_t v250 = *(unsigned char **)&v247[4 * v249 + 2];
      for (iint i = v233; ; ++ii)
      {
        uint64_t v252 = *v250;
        uint64_t v253 = *(unsigned __int8 *)ii;
        if (v252 == v253)
        {
          if (!*v250)
          {
            if ((v249 & 0x80000000) == 0) {
              goto LABEL_468;
            }
            goto LABEL_366;
          }
        }
        else if (byte_1B0DE1758[v252] != byte_1B0DE1758[v253])
        {
          if (++v249 != v248) {
            goto LABEL_354;
          }
LABEL_366:
          if (v233) {
            size_t v254 = strlen(v233) & 0x3FFFFFFF;
          }
          else {
            size_t v254 = 0;
          }
          uint64_t v255 = sub_1B0D05DC0(v180, v254 + 81);
          uint64_t v256 = v255;
          if (v255)
          {
            *(_OWORD *)(v255 + 48) = 0u;
            *(_OWORD *)(v255 + 64) = 0u;
            *(_OWORD *)(v255 + 16) = 0u;
            *(_OWORD *)(v255 + 32) = 0u;
            *(_OWORD *)uint64_t v255 = 0u;
            *(unsigned char *)uint64_t v255 = 59;
            *(_WORD *)(v255 + 52) = -1;
            uint64_t v257 = v255 + 80;
            *(void *)(v255 + 8) = v255 + 80;
            if (v254) {
              memcpy((void *)(v255 + 80), v233, v254);
            }
            *(unsigned char *)(v257 + v254) = 0;
            *(_DWORD *)(v256 + 40) = 1;
          }
          if (*v342 >= 2)
          {
            if ((v349[15] & 0x40) == 0) {
              goto LABEL_393;
            }
            if ((v350 & 0x800) != 0) {
              goto LABEL_393;
            }
            int v258 = *v342 + v321;
            if (v258 < 1) {
              goto LABEL_393;
            }
            uint64_t v259 = v349;
LABEL_380:
            if ((*(_WORD *)((unsigned char *)v259 + 165) & 0x400) == 0) {
              goto LABEL_379;
            }
            uint64_t v261 = (unsigned int *)*((void *)v259 + 22);
            if (!v261) {
              goto LABEL_379;
            }
            uint64_t v262 = *v261;
            if ((int)v262 < 1) {
              goto LABEL_379;
            }
            uint64_t v263 = 0;
LABEL_384:
            uint64_t v264 = *(unsigned char **)&v261[4 * v263 + 2];
            for (juint64_t j = v233; ; ++jj)
            {
              uint64_t v266 = *v264;
              uint64_t v267 = *(unsigned __int8 *)jj;
              if (v266 == v267)
              {
                if (!*v264)
                {
                  if ((v263 & 0x80000000) == 0) {
                    break;
                  }
                  goto LABEL_379;
                }
              }
              else if (byte_1B0DE1758[v266] != byte_1B0DE1758[v267])
              {
                if (++v263 != v262) {
                  goto LABEL_384;
                }
LABEL_379:
                v259 += 26;
                if (v258-- > 1) {
                  goto LABEL_380;
                }
LABEL_393:
                if (v345) {
                  size_t v268 = strlen(v345) & 0x3FFFFFFF;
                }
                else {
                  size_t v268 = 0;
                }
                uint64_t v269 = sub_1B0D05DC0(v352, v268 + 81);
                uint64_t v270 = v269;
                if (v269)
                {
                  *(_OWORD *)(v269 + 48) = 0u;
                  *(_OWORD *)(v269 + 64) = 0u;
                  *(_OWORD *)(v269 + 16) = 0u;
                  *(_OWORD *)(v269 + 32) = 0u;
                  *(_OWORD *)uint64_t v269 = 0u;
                  *(unsigned char *)uint64_t v269 = 59;
                  *(_WORD *)(v269 + 52) = -1;
                  uint64_t v271 = v269 + 80;
                  *(void *)(v269 + 8) = v269 + 80;
                  if (v268) {
                    memcpy((void *)(v269 + 80), v345, v268);
                  }
                  *(unsigned char *)(v271 + v268) = 0;
                  *(_DWORD *)(v270 + 40) = 1;
                }
                uint64_t v256 = sub_1B0D28CCC(v351, 141, v270, v256);
                if (*((unsigned __int8 *)v351 + 302) >= 2u
                  && (uint64_t v272 = *((void *)v320 + 2)) != 0
                  && (int v273 = (uint64_t *)v351[51]) != 0)
                {
                  while (*v273 != v272)
                  {
                    int v273 = (uint64_t *)v273[3];
                    if (!v273) {
                      goto LABEL_405;
                    }
                  }
                  *int v273 = v270;
                  int v274 = __sb;
                  if (!__sb) {
                    goto LABEL_411;
                  }
                }
                else
                {
LABEL_405:
                  int v274 = __sb;
                  if (!__sb) {
                    goto LABEL_411;
                  }
                }
                size_t v275 = strlen(v274) & 0x3FFFFFFF;
                uint64_t v276 = sub_1B0D05DC0(v352, v275 + 81);
                uint64_t v277 = v276;
                if (v276)
                {
                  *(_OWORD *)(v276 + 48) = 0u;
                  *(_OWORD *)(v276 + 64) = 0u;
                  *(_OWORD *)(v276 + 16) = 0u;
                  *(_OWORD *)(v276 + 32) = 0u;
                  *(_OWORD *)uint64_t v276 = 0u;
                  *(unsigned char *)uint64_t v276 = 59;
                  *(_WORD *)(v276 + 52) = -1;
                  uint64_t v278 = v276 + 80;
                  *(void *)(v276 + 8) = v276 + 80;
                  if (v275) {
                    memcpy((void *)(v276 + 80), __sb, v275);
                  }
                  *(unsigned char *)(v278 + v275) = 0;
                  *(_DWORD *)(v277 + 40) = 1;
                }
                uint64_t v256 = sub_1B0D28CCC(v351, 141, v277, v256);
                goto LABEL_411;
              }
              ++v264;
            }
          }
          if (*((unsigned __int8 *)v351 + 302) >= 2u) {
            goto LABEL_393;
          }
LABEL_411:
          if (v256 && (*(unsigned char *)(v256 + 4) & 3) == 0)
          {
            *(_DWORD *)(v256 + 56) = v325;
            if (!v183) {
              goto LABEL_418;
            }
LABEL_414:
            int v279 = *v183;
            if (v183[1] <= *v183)
            {
              __int16 v281 = sub_1B0D55B34(*v351, v183, (unsigned __int8 *)v256);
              goto LABEL_419;
            }
            int *v183 = v279 + 1;
            uint64_t v280 = &v183[6 * v279];
            *((void *)v280 + 2) = 0;
            *((void *)v280 + 3) = 0;
            *((void *)v280 + 1) = v256;
            uint64_t v180 = v352;
LABEL_420:
            uint64_t v282 = *v183 - 1;
            if ((v350 & 0x800) == 0 || *((unsigned __int8 *)v351 + 302) > 1u)
            {
              if (v324 == 4)
              {
                uint64_t v283 = sub_1B0C904AC(v180, "%s.%s", (uint64_t)v10, v11, v12, v13, v14, v15, (char)v345);
                uint64_t v284 = &v183[6 * v282];
                *((void *)v284 + 2) = v283;
                *(_WORD *)((char *)v284 + 25) &= 0xFFFCu;
                int v197 = 1;
                uint64_t v231 = a2;
LABEL_439:
                uint64_t v228 = v338;
                uint64_t v229 = v341;
                goto LABEL_330;
              }
              if (v233)
              {
                size_t v285 = strlen(v233);
                unint64_t v286 = v285 + 1;
                if (v180)
                {
                  uint64_t v287 = (void *)sub_1B0D05DC0(v180, v286);
                  if (!v287) {
                    goto LABEL_438;
                  }
LABEL_437:
                  memcpy(v287, v233, v286);
                }
                else
                {
                  uint64_t v287 = (void *)sub_1B0C7FC94(v285 + 1);
                  if (v287) {
                    goto LABEL_437;
                  }
                }
              }
              else
              {
                uint64_t v287 = 0;
              }
LABEL_438:
              uint64_t v293 = &v183[6 * v282];
              *((void *)v293 + 2) = v287;
              *(_WORD *)((char *)v293 + 25) &= 0xFFFCu;
              int v197 = 1;
              uint64_t v231 = a2;
              uint64_t v180 = v352;
              goto LABEL_439;
            }
            if (v341)
            {
              uint64_t v288 = v341 + 24 * v226;
              uint64_t v289 = *(const void **)(v288 + 16);
              if (v289)
              {
                size_t v290 = strlen(*(const char **)(v288 + 16));
                unint64_t v291 = v290 + 1;
                if (v180)
                {
                  char v292 = (void *)sub_1B0D05DC0(v180, v291);
                  if (v292) {
                    goto LABEL_432;
                  }
                }
                else
                {
                  char v292 = (void *)sub_1B0C7FC94(v290 + 1);
                  if (v292) {
LABEL_432:
                  }
                    memcpy(v292, v289, v291);
                }
              }
              else
              {
                char v292 = 0;
              }
            }
            else
            {
              char v292 = sub_1B0C904AC(v180, "%s.%s.%s", (uint64_t)v10, v11, v12, v13, v14, v15, (char)__sb);
            }
            uint64_t v294 = &v183[6 * v282];
            __int16 v296 = *(_WORD *)((char *)v294 + 25);
            uint64_t v295 = (_WORD *)((char *)v294 + 25);
            *(void *)((char *)v295 - 9) = v292;
            __int16 v297 = v296 & 0xFFFC;
            *uint64_t v295 = v296 & 0xFFFC | 2;
            uint64_t v231 = a2;
            uint64_t v228 = v338;
            uint64_t v180 = v352;
            uint64_t v229 = v341;
            if ((*(_WORD *)((unsigned char *)v349 + 61) & 0x400) == 0) {
              goto LABEL_455;
            }
            uint64_t v298 = (unsigned int *)*((void *)v349 + 9);
            uint64_t v299 = *v298;
            if ((int)v299 < 1) {
              goto LABEL_455;
            }
            uint64_t v300 = 0;
LABEL_446:
            uint64_t v301 = *(unsigned char **)&v298[4 * v300 + 2];
            for (kuint64_t k = v233; ; ++kk)
            {
              uint64_t v303 = *v301;
              uint64_t v304 = *(unsigned __int8 *)kk;
              if (v303 == v304)
              {
                if (!*v301)
                {
                  if ((v300 & 0x80000000) == 0) {
                    goto LABEL_469;
                  }
                  goto LABEL_455;
                }
              }
              else if (byte_1B0DE1758[v303] != byte_1B0DE1758[v304])
              {
                if (++v300 != v299) {
                  goto LABEL_446;
                }
LABEL_455:
                if (!v327) {
                  goto LABEL_467;
                }
                uint64_t v305 = *v327;
                if ((int)v305 < 1) {
                  goto LABEL_467;
                }
                uint64_t v306 = 0;
                while (2)
                {
                  char v307 = *(unsigned char **)&v327[4 * v306 + 2];
                  int v308 = v233;
LABEL_461:
                  uint64_t v309 = *v307;
                  uint64_t v310 = *(unsigned __int8 *)v308;
                  if (v309 == v310)
                  {
                    if (!*v307)
                    {
                      if ((v306 & 0x80000000) == 0) {
                        goto LABEL_469;
                      }
LABEL_467:
                      if ((*(_WORD *)(*(void *)(v201 + 8) + 16 * v226 + 14) & 0x400) == 0)
                      {
LABEL_468:
                        int v197 = 1;
                        goto LABEL_330;
                      }
LABEL_469:
                      *uint64_t v295 = v297 | 0x102;
                      int v197 = 1;
LABEL_330:
                      if (++v226 >= *(__int16 *)(v201 + 54)) {
                        goto LABEL_275;
                      }
                      goto LABEL_331;
                    }
                  }
                  else if (byte_1B0DE1758[v309] != byte_1B0DE1758[v310])
                  {
                    if (++v306 != v305) {
                      continue;
                    }
                    goto LABEL_467;
                  }
                  break;
                }
                ++v307;
                ++v308;
                goto LABEL_461;
              }
              ++v301;
            }
          }
          if (v183) {
            goto LABEL_414;
          }
LABEL_418:
          __int16 v281 = (int *)sub_1B0D55ACC((void *)*v351, (unsigned __int8 *)v256);
LABEL_419:
          uint64_t v183 = v281;
          uint64_t v180 = v352;
          if (v281) {
            goto LABEL_420;
          }
          int v197 = 1;
LABEL_275:
          uint64_t v199 = v349;
          int v200 = v323;
LABEL_276:
          v199 += 26;
          int v196 = *v342;
          int v198 = v200;
          if (v200 >= *v342) {
            goto LABEL_472;
          }
          goto LABEL_277;
        }
        ++v250;
      }
    }
    if (v192 == 141)
    {
      int v193 = (unsigned __int8 *)*((void *)v320 + 3);
      if (*v193 == 180)
      {
        unsigned int v338 = *(unsigned char **)(*((void *)v320 + 2) + 8);
        goto LABEL_272;
      }
    }
    if (v183)
    {
      int v194 = *v183;
      if (v183[1] <= *v183)
      {
        uint64_t v195 = sub_1B0D55B34(*v351, v183, (unsigned __int8 *)v320);
        goto LABEL_476;
      }
      int *v183 = v194 + 1;
      char v186 = &v183[6 * v194];
      *((void *)v186 + 2) = 0;
      *((void *)v186 + 3) = 0;
      *((void *)v186 + 1) = v320;
LABEL_260:
      uint64_t v187 = &v316[6 * v319];
      uint64_t v188 = &v183[6 * *v183];
      *((void *)v188 - 1) = *((void *)v187 + 1);
      *(_WORD *)((char *)v188 + 1) = *(_WORD *)((unsigned char *)v188 + 1) & 0xFFFC | *(_WORD *)((unsigned char *)v187 + 17) & 3;
      *((void *)v187 + 1) = 0;
      uint64_t v189 = v319;
    }
    else
    {
      uint64_t v195 = (int *)sub_1B0D55ACC((void *)*v351, (unsigned __int8 *)v320);
LABEL_476:
      uint64_t v183 = v195;
      uint64_t v189 = v319;
      if (v195) {
        goto LABEL_260;
      }
    }
    *(void *)uint64_t v191 = 0;
    int v190 = v317;
LABEL_262:
    int v177 = v318 | v190;
    uint64_t v185 = v189 + 1;
    if (v185 < *(int *)v174) {
      continue;
    }
    break;
  }
  sub_1B0D270DC((void *)v180, v174);
  *(void *)(v179 + 32) = v183;
  if (!v183) {
    return 0;
  }
LABEL_481:
  if (*v183 > *(_DWORD *)(v180 + 144))
  {
    int v62 = "too many columns in result set";
    uint64_t v312 = (uint64_t)v351;
    goto LABEL_492;
  }
  if ((v177 & 0x400008) == 0) {
    return 0;
  }
  uint64_t result = 0;
  *(_DWORD *)(v179 + 4) |= 0x40000u;
  return result;
}

uint64_t sub_1B0C982AC(uint64_t *a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = *(_DWORD *)(a2 + 4);
  if ((v8 & 4) != 0) {
    return 1;
  }
  uint64_t v62 = 0;
  long long v10 = 0uLL;
  memset(v61, 0, sizeof(v61));
  uint64_t v11 = a1[5];
  uint64_t v12 = *a1;
  if ((v8 & 0x40) != 0)
  {
    int v14 = 0;
    uint64_t v58 = *(void *)(a2 + 80);
    uint64_t v59 = *(void *)v12;
    uint64_t v15 = a2;
    while (1)
    {
      *(_DWORD *)(v15 + 4) |= 4u;
      *((void *)&v61[2] + 1) = 0;
      *(_OWORD *)((char *)v61 + 8) = v10;
      *(_OWORD *)((char *)&v61[1] + 8) = v10;
      *(void *)&v61[0] = v12;
      uint64_t v62 = v15;
      if (sub_1B0D373A0((uint64_t)v61, *(void *)(v15 + 96), (uint64_t)a3, a4, a5, a6, a7, a8)) {
        return 2;
      }
      uint64_t v22 = *(int **)(v15 + 40);
      if (*(unsigned char *)(v15 + 6))
      {
        *(void *)(*((void *)v22 + 6) + 72) = *(void *)(v15 + 72);
        *(void *)(v15 + 72) = 0;
      }
      int v60 = v14;
      if (*v22 >= 1)
      {
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        do
        {
          uint64_t v25 = *(void *)&v22[v23 + 12];
          if (v25 && (*(unsigned char *)(v25 + 4) & 4) == 0)
          {
            if (v11) {
              int v26 = *(_DWORD *)(v11 + 32);
            }
            else {
              int v26 = 0;
            }
            uint64_t v27 = *(void *)(v12 + 368);
            uint64_t v28 = *(void *)&v22[v23 + 6];
            if (v28) {
              *(void *)(v12 + 368) = v28;
            }
            uint64_t v63 = v12;
            int v64 = sub_1B0C987C0;
            uint64_t v66 = 0;
            uint64_t v67 = 0;
            int v65 = sub_1B0C982AC;
            uint64_t v68 = (_OWORD *)v11;
            sub_1B0C962CC(&v63, (void *)v25);
            *(void *)(v12 + 368) = v27;
            if (*(_DWORD *)(v12 + 48)) {
              return 2;
            }
            if (v11) {
              *(_WORD *)((char *)&v22[v23 + 17] + 1) = *(_WORD *)((unsigned char *)&v22[v23 + 17] + 1) & 0xFFF7 | (8 * (*(_DWORD *)(v11 + 32) > v26));
            }
          }
          ++v24;
          uint64_t v22 = *(int **)(v15 + 40);
          v23 += 26;
        }
        while (v24 < *v22);
      }
      DWORD2(v61[2]) = 16385;
      *((void *)&v61[0] + 1) = v22;
      *((void *)&v61[1] + 1) = v11;
      if (sub_1B0D374CC((uint64_t)v61, *(int **)(v15 + 32), v16, v17, v18, v19, v20, v21)) {
        return 2;
      }
      uint64_t v29 = *(int **)(v15 + 56);
      if (v29 || (BYTE8(v61[2]) & 0x10) != 0)
      {
        unsigned int v30 = DWORD2(v61[2]) & 0xFFFFBFFF;
        *(_DWORD *)(v15 + 4) |= DWORD2(v61[2]) & 0x8001000 | 8;
      }
      else
      {
        unsigned int v30 = DWORD2(v61[2]) & 0xFFFFBFFE;
      }
      *(void *)&v61[1] = *(void *)(v15 + 32);
      DWORD2(v61[2]) = v30 | 0x80;
      uint64_t v31 = *(void *)(v15 + 64);
      if (v31)
      {
        if ((*(unsigned char *)(v15 + 4) & 8) == 0)
        {
          uint64_t v56 = "HAVING clause on a non-aggregate query";
          goto LABEL_75;
        }
        DWORD2(v61[2]) = v30 & 0xF7FF2F6F | 0x80;
        uint64_t v32 = *(void *)&v61[0];
        uint64_t v63 = *(void *)&v61[0];
        int v64 = sub_1B0C987C0;
        if ((v30 & 0x80000) != 0) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = sub_1B0C982AC;
        }
        int v65 = v33;
        uint64_t v66 = 0;
        uint64_t v67 = 0;
        uint64_t v68 = v61;
        int v34 = *(_DWORD *)(*(void *)&v61[0] + 308) + *(_DWORD *)(v31 + 40);
        *(_DWORD *)(*(void *)&v61[0] + 308) = v34;
        if (*(_DWORD *)(*(void *)v32 + 148) < v34)
        {
          sub_1B0CEF2BC(v32, "Expression tree is too large (maximum depth %d)", (uint64_t)a3, a4, a5, a6, a7, a8, *(_DWORD *)(*(void *)v32 + 148));
          return 2;
        }
        int v35 = v30 & 0x8009010;
        sub_1B0D32AB4((uint64_t)&v63, v31);
        uint64_t v36 = v63;
        *(_DWORD *)(v63 + 308) -= *(_DWORD *)(v31 + 40);
        int v37 = DWORD2(v61[2]);
        *(_DWORD *)(v31 + 4) |= WORD4(v61[2]) & 0x8010;
        DWORD2(v61[2]) = v37 | v35;
        if (SDWORD1(v61[2]) >= 1 || *(int *)(v36 + 48) > 0) {
          return 2;
        }
      }
      if (sub_1B0D373A0((uint64_t)v61, *(void *)(v15 + 48), (uint64_t)a3, a4, a5, a6, a7, a8)) {
        return 2;
      }
      uint64_t v39 = *(int **)(v15 + 40);
      int v40 = *v39;
      if (*v39 >= 1)
      {
        uint64_t v41 = 0;
        for (uint64_t i = 0; i < v40; ++i)
        {
          if ((*(_WORD *)((unsigned char *)&v39[v41 + 17] + 1) & 4) != 0)
          {
            if (sub_1B0D374CC((uint64_t)v61, *(int **)&v39[v41 + 24], v38, a4, a5, a6, a7, a8)) {
              return 2;
            }
            uint64_t v39 = *(int **)(v15 + 40);
            int v40 = *v39;
          }
          v41 += 26;
        }
      }
      if (*(unsigned __int8 *)(v12 + 302) >= 2u)
      {
        uint64_t v43 = *(void *)(v15 + 120);
        if (v43)
        {
          while (!sub_1B0D374CC((uint64_t)v61, *(int **)(v43 + 24), v38, a4, a5, a6, a7, a8)
               && !sub_1B0D374CC((uint64_t)v61, *(int **)(v43 + 16), v44, v45, v46, v47, v48, v49))
          {
            uint64_t v43 = *(void *)(v43 + 64);
            if (!v43) {
              goto LABEL_48;
            }
          }
          return 2;
        }
      }
LABEL_48:
      *((void *)&v61[1] + 1) = 0;
      DWORD2(v61[2]) |= 0x4001u;
      if (*(unsigned char *)(v15 + 6))
      {
        uint64_t v50 = *(void *)(*(void *)(v15 + 40) + 48);
        *(void *)(v15 + 72) = *(void *)(v50 + 72);
        *(void *)(v50 + 72) = 0;
      }
      a3 = *(int **)(v15 + 72);
      if (v58) {
        BOOL v51 = v60 == 0;
      }
      else {
        BOOL v51 = 0;
      }
      char v52 = v51;
      if (a3
        && (v52 & 1) == 0
        && sub_1B0C9AA94((unsigned __int8 **)v61, v15, a3, "ORDER", a5, a6, a7, a8)
        || *(unsigned char *)(v59 + 103))
      {
        return 2;
      }
      DWORD2(v61[2]) &= ~0x4000u;
      long long v10 = 0uLL;
      if (v29)
      {
        if (sub_1B0C9AA94((unsigned __int8 **)v61, v15, v29, "GROUP", a5, a6, a7, a8)
          || *(unsigned char *)(v59 + 103))
        {
          return 2;
        }
        int v53 = *v29;
        long long v10 = 0uLL;
        if (*v29 >= 1) {
          break;
        }
      }
LABEL_67:
      uint64_t v55 = *(void *)(v15 + 88);
      if (v55 && **(_DWORD **)(v15 + 32) != **(_DWORD **)(v55 + 32))
      {
        sub_1B0D385F0(v12, (unsigned char *)v55, (uint64_t)a3, a4, a5, a6, a7, a8, v57);
        return 2;
      }
      uint64_t v15 = *(void *)(v15 + 80);
      int v14 = v60 + 1;
      if (!v15)
      {
        if (v58 && sub_1B0D38678((unsigned __int8 *)v12, (void *)a2, (uint64_t)a3, a4, a5, a6, a7, a8)) {
          return 2;
        }
        return 1;
      }
    }
    int v54 = v29 + 2;
    while ((*(unsigned char *)(*(void *)v54 + 4) & 0x10) == 0)
    {
      v54 += 6;
      if (!--v53) {
        goto LABEL_67;
      }
    }
    uint64_t v56 = "aggregate functions are not allowed in the GROUP BY clause";
LABEL_75:
    sub_1B0CEF2BC(v12, v56, (uint64_t)a3, a4, a5, a6, a7, a8, v57);
    return 2;
  }
  else
  {
    sub_1B0D384B4(*a1, a2, v11);
    if (*(_DWORD *)(v12 + 48)) {
      return 2;
    }
    else {
      return 1;
    }
  }
}

uint64_t sub_1B0C987C0(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = a1[5];
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = a2;
  switch(*a2)
  {
    case 0x14u:
    case 0x31u:
    case 0x8Au:
      if ((a2[5] & 0x10) == 0) {
        return 2 * (*(_DWORD *)(v14 + 48) != 0);
      }
      int v20 = *(_DWORD *)(v13 + 32);
      if ((*(_DWORD *)(v13 + 40) & 0x2E) != 0)
      {
        sub_1B0CEF2BC(v14, "%s prohibited in %s", a3, a4, a5, a6, a7, a8, (char)"subqueries");
        *uint64_t v15 = 121;
        uint64_t v21 = v15;
        while (1)
        {
          if ((v21[4] & 3) == 0)
          {
            int v22 = *((_DWORD *)v21 + 14);
            if (v22 > 0) {
              break;
            }
          }
          uint64_t v21 = (unsigned __int8 *)*((void *)v21 + 2);
          if (!v21) {
            goto LABEL_68;
          }
        }
        *(_DWORD *)(*(void *)v14 + 84) = v22;
      }
      else
      {
        sub_1B0C962CC(a1, *((void **)a2 + 4));
      }
LABEL_68:
      if (v20 != *(_DWORD *)(v13 + 32)) {
        *((_DWORD *)v15 + 1) |= 0x40u;
      }
      *(_DWORD *)(v13 + 40) |= 0x40u;
      return 2 * (*(_DWORD *)(v14 + 48) != 0);
    case 0x2Du:
    case 0xABu:
      uint64_t v23 = (unsigned __int8 *)*((void *)a2 + 3);
      if (!v23) {
        goto LABEL_2;
      }
      while (1)
      {
        int v24 = *((_DWORD *)v23 + 1);
        if ((v24 & 0x82000) == 0) {
          break;
        }
        if ((v24 & 0x80000) == 0)
        {
          uint64_t v23 = (unsigned __int8 *)*((void *)v23 + 2);
          if (!v23) {
            goto LABEL_2;
          }
          continue;
        }
        uint64_t v23 = *(unsigned __int8 **)(*((void *)v23 + 4) + 8);
        if (!v23) {
          goto LABEL_2;
        }
      }
      int v53 = *v23;
      if (v53 == 170 || v53 == 59)
      {
        uint64_t result = sub_1B0C987C0(a1, v23);
        if (result == 2) {
          return result;
        }
        if (*v23 == 170)
        {
          uint64_t result = 0;
          v15[2] = *v15;
          *uint64_t v15 = -81;
          return result;
        }
      }
LABEL_2:
      if (*(unsigned char *)(*(void *)v14 + 103)) {
        return 2 * (*(_DWORD *)(v14 + 48) != 0);
      }
      uint64_t v17 = (unsigned __int8 *)*((void *)v15 + 2);
      int v18 = *v17;
      if (v18 == 176) {
        int v18 = v17[2];
      }
      if (v18 == 138)
      {
        uint64_t v17 = (unsigned __int8 *)*((void *)v17 + 4);
      }
      else if (v18 != 177)
      {
        int v19 = 1;
        goto LABEL_32;
      }
      int v19 = **((_DWORD **)v17 + 4);
LABEL_32:
      if (*v15 != 48)
      {
        int v37 = (unsigned __int8 *)*((void *)v15 + 3);
        int v38 = *v37;
        if (v38 == 176) {
          int v38 = v37[2];
        }
        if (v38 == 138)
        {
LABEL_77:
          int v37 = (unsigned __int8 *)*((void *)v37 + 4);
          goto LABEL_78;
        }
        goto LABEL_41;
      }
      uint64_t v33 = *((void *)v15 + 4);
      int v34 = *(unsigned __int8 **)(v33 + 8);
      int v35 = *v34;
      if (v35 == 176) {
        int v35 = v34[2];
      }
      if (v35 == 138)
      {
        int v34 = (unsigned __int8 *)*((void *)v34 + 4);
      }
      else if (v35 != 177)
      {
        int v36 = 1;
        goto LABEL_73;
      }
      int v36 = **((_DWORD **)v34 + 4);
LABEL_73:
      if (v36 != v19) {
        goto LABEL_79;
      }
      int v37 = *(unsigned __int8 **)(v33 + 32);
      int v38 = *v37;
      if (v38 == 176) {
        int v38 = v37[2];
      }
      if (v38 == 138) {
        goto LABEL_77;
      }
LABEL_41:
      if (v38 != 177)
      {
        int v36 = 1;
        goto LABEL_79;
      }
LABEL_78:
      int v36 = **((_DWORD **)v37 + 4);
LABEL_79:
      if (v19 != v36)
      {
        sub_1B0CEF2BC(v14, "row value misused", a3, a4, a5, a6, a7, a8, v359);
        uint64_t v49 = *(void *)v14;
        while (1)
        {
          if ((v15[4] & 3) == 0)
          {
            int v50 = *((_DWORD *)v15 + 14);
            if (v50 > 0) {
              break;
            }
          }
          uint64_t v15 = (unsigned __int8 *)*((void *)v15 + 2);
          if (!v15) {
            return 2 * (*(_DWORD *)(v14 + 48) != 0);
          }
        }
LABEL_84:
        *(_DWORD *)(v49 + 84) = v50;
      }
      return 2 * (*(_DWORD *)(v14 + 48) != 0);
    case 0x30u:
    case 0x34u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
      goto LABEL_2;
    case 0x32u:
    case 0x33u:
      uint64_t v25 = *(void *)(v13 + 24);
      if (v25)
      {
        int v8 = *(_DWORD *)(v25 + 32);
        uint64_t v26 = *(void *)(v25 + 24);
        if (v26)
        {
          int v9 = *(_DWORD *)(v26 + 32);
          uint64_t v27 = *(void *)(v26 + 24);
          if (v27)
          {
            int v11 = *(_DWORD *)(v27 + 32);
            uint64_t v28 = *(void *)(v27 + 24);
            if (v28)
            {
              int v12 = *(_DWORD *)(v28 + 32);
              uint64_t v29 = *(void *)(v28 + 24);
              if (v29)
              {
                uint64_t v30 = *(void *)v13;
                int v10 = *(_DWORD *)(v29 + 32);
                uint64_t v31 = *(void *)(v29 + 24);
                if (v31)
                {
                  int __src = *(_DWORD *)(v31 + 32);
                  uint64_t v32 = *(void *)(v31 + 24);
                  if (v32) {
                    int v377 = *(_DWORD *)(v32 + 32);
                  }
                }
              }
              else
              {
                uint64_t v30 = *(void *)v13;
              }
            }
            else
            {
              uint64_t v30 = *(void *)v13;
            }
          }
          else
          {
            uint64_t v30 = *(void *)v13;
          }
        }
        else
        {
          uint64_t v30 = *(void *)v13;
        }
      }
      else
      {
        uint64_t v30 = *(void *)v13;
      }
      int v237 = *(_DWORD *)(v13 + 32);
      uint64_t v238 = (unsigned __int8 *)*((void *)a2 + 2);
      if (v238)
      {
        sub_1B0D32AB4((uint64_t)a1, (uint64_t)v238);
        uint64_t v238 = (unsigned __int8 *)*((void *)v15 + 2);
      }
      for (uint64_t i = v238; ; uint64_t i = (unsigned __int8 *)*((void *)i + 2))
      {
        int v240 = *i;
        if ((v240 - 173) >= 2) {
          break;
        }
      }
      if (v240 == 176) {
        int v240 = i[2];
      }
      if ((v240 - 153) < 3
        || v240 == 117
        || v240 == 167
        && (i[6] & 0x20) == 0
        && (uint64_t v241 = *((void *)i + 9)) != 0
        && ((uint64_t v242 = *((unsigned int *)i + 12), (v242 & 0x80000000) != 0)
         || (uint64_t v243 = *(void *)(v241 + 8)) == 0
         || (*(unsigned char *)(v243 + 16 * v242 + 8) & 0xF) != 0))
      {
        if (*(unsigned __int8 *)(v30 + 302) <= 1u)
        {
          BOOL v244 = *v15 == 51;
          *((_DWORD *)v15 + 1) |= 0x800u;
          *((_DWORD *)v15 + 2) = v244;
          *uint64_t v15 = -101;
          *(_DWORD *)(v13 + 32) = v237;
          uint64_t v245 = *(void *)(v13 + 24);
          if (v245)
          {
            *(_DWORD *)(v245 + 32) = v8;
            uint64_t v246 = *(void *)(v245 + 24);
            if (v246)
            {
              *(_DWORD *)(v246 + 32) = v9;
              uint64_t v247 = *(void *)(v246 + 24);
              if (v247)
              {
                *(_DWORD *)(v247 + 32) = v11;
                uint64_t v248 = *(void *)(v247 + 24);
                if (v248)
                {
                  *(_DWORD *)(v248 + 32) = v12;
                  uint64_t v249 = *(void *)(v248 + 24);
                  if (v249)
                  {
                    *(_DWORD *)(v249 + 32) = v10;
                    uint64_t v250 = *(void *)(v249 + 24);
                    if (v250)
                    {
                      *(_DWORD *)(v250 + 32) = __src;
                      uint64_t v251 = *(void *)(v250 + 24);
                      if (v251) {
                        *(_DWORD *)(v251 + 32) = v377;
                      }
                    }
                  }
                }
              }
            }
          }
          if (v238) {
            sub_1B0D1DF88(*(void **)v30, v238);
          }
          *((void *)v15 + 2) = 0;
        }
      }
      return 1;
    case 0x3Bu:
      uint64_t v364 = a1[5];
      uint64_t v39 = 0;
      int v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = (unsigned __int8 *)*((void *)a2 + 1);
      uint64_t v374 = *(void *)v14;
      v384[0] = 0;
      *((_DWORD *)a2 + 11) = -1;
      uint64_t v362 = (int *)(a2 + 44);
      goto LABEL_166;
    case 0x4Bu:
      uint64_t v43 = *(void *)(v13 + 8);
      *(_WORD *)a2 = 17575;
      *((void *)a2 + 9) = *(void *)(v43 + 40);
      int v44 = *((_DWORD *)a2 + 12) - 1;
      *((_DWORD *)a2 + 11) = *(_DWORD *)(v43 + 72);
      *((_DWORD *)a2 + 12) = v44;
      return 2 * (*(_DWORD *)(v14 + 48) != 0);
    case 0x8Du:
      uint64_t v45 = *((void *)a2 + 2);
      if ((*(_DWORD *)(v13 + 40) & 0x28) == 0) {
        goto LABEL_51;
      }
      sub_1B0CEF2BC(v14, "%s prohibited in %s", a3, a4, a5, a6, a7, a8, (char)"the \".\" operator");
      uint64_t v46 = v15;
      while (1)
      {
        if ((v46[4] & 3) == 0)
        {
          int v47 = *((_DWORD *)v46 + 14);
          if (v47 > 0) {
            break;
          }
        }
        uint64_t v46 = (unsigned __int8 *)*((void *)v46 + 2);
        if (!v46) {
          goto LABEL_51;
        }
      }
      *(_DWORD *)(*(void *)v14 + 84) = v47;
LABEL_51:
      uint64_t v48 = *((void *)v15 + 3);
      uint64_t v364 = v13;
      if (*(unsigned char *)v48 == 59)
      {
        int v40 = 0;
      }
      else
      {
        int v40 = *(char **)(v45 + 8);
        uint64_t v45 = *(void *)(v48 + 16);
        uint64_t v48 = *(void *)(v48 + 24);
      }
      uint64_t v39 = *(unsigned __int8 **)(v45 + 8);
      uint64_t v42 = *(unsigned __int8 **)(v48 + 8);
      if (*(unsigned __int8 *)(v14 + 302) >= 2u)
      {
        uint64_t v55 = *(void **)(v14 + 408);
        if (v55)
        {
          uint64_t v56 = *(unsigned __int8 ***)(v14 + 408);
          while (*v56 != (unsigned __int8 *)v48)
          {
            uint64_t v56 = (unsigned __int8 **)v56[3];
            if (!v56) {
              goto LABEL_110;
            }
          }
          const char *v56 = v15;
          uint64_t v55 = *(void **)(v14 + 408);
LABEL_110:
          if (v55)
          {
            while (*v55 != v45)
            {
              uint64_t v55 = (void *)v55[3];
              if (!v55) {
                goto LABEL_162;
              }
            }
            *uint64_t v55 = v15 + 72;
          }
        }
      }
LABEL_162:
      uint64_t v90 = *(void *)v14;
      v384[0] = 0;
      *((_DWORD *)v15 + 11) = -1;
      uint64_t v362 = (int *)(v15 + 44);
      uint64_t v374 = v90;
      if (!v40) {
        goto LABEL_165;
      }
      if ((*(unsigned char *)(v13 + 40) & 6) != 0)
      {
        int v40 = 0;
LABEL_165:
        uint64_t v41 = 0;
        goto LABEL_166;
      }
      uint64_t v220 = *(unsigned int *)(v90 + 40);
      if ((int)v220 >= 1)
      {
        uint64_t v221 = 0;
        uint64_t v222 = *(void *)(v90 + 32);
        while (1)
        {
          uint64_t v223 = *(unsigned char **)(v222 + 32 * v221);
          for (uint64_t j = v40; ; ++j)
          {
            uint64_t v225 = *v223;
            uint64_t v226 = *j;
            if (v225 != v226) {
              break;
            }
            if (!*v223)
            {
              uint64_t v41 = *(void *)(v222 + 32 * v221 + 24);
              goto LABEL_452;
            }
LABEL_429:
            ++v223;
          }
          if (byte_1B0DE1758[v225] == byte_1B0DE1758[v226]) {
            goto LABEL_429;
          }
          if (++v221 == v220)
          {
            uint64_t v41 = 0;
            goto LABEL_453;
          }
        }
      }
      LODWORD(v221) = 0;
      uint64_t v41 = 0;
LABEL_452:
      if (v221 != v220) {
        goto LABEL_166;
      }
LABEL_453:
      uint64_t v232 = 0;
      while (2)
      {
        uint64_t v233 = aMain[v232];
        uint64_t v234 = v40[v232];
        if (v233 != v234)
        {
          if (byte_1B0DE1758[v233] != byte_1B0DE1758[v234]) {
            goto LABEL_166;
          }
          goto LABEL_455;
        }
        if (aMain[v232])
        {
LABEL_455:
          ++v232;
          continue;
        }
        break;
      }
      uint64_t v235 = *(void *)(v90 + 32);
      uint64_t v41 = *(void *)(v235 + 24);
      int v40 = *(char **)v235;
LABEL_166:
      int v91 = 0;
      uint64_t v92 = 0;
      uint64_t v93 = 0;
      BOOL v361 = v39 == 0;
      v375 = v15;
      uint64_t v376 = v39;
      int v373 = v15 + 72;
      uint64_t v363 = (unsigned int *)(v14 + 176);
      uint64_t v368 = v42 + 1;
      uint64_t v369 = v14;
      uint64_t v94 = v364;
      uint64_t v378 = v40;
      __srcb = v42;
      while (2)
      {
        uint64_t v95 = *(int **)(v94 + 8);
        if (v95)
        {
          unsigned int v366 = v92;
          uint64_t v367 = v94;
          uint64_t v370 = v41;
          if (*v95 >= 1)
          {
            int v96 = 0;
            int v97 = 0;
            uint64_t v98 = v95 + 2;
            BOOL v371 = *(int **)(v94 + 8);
            while (1)
            {
              uint64_t v99 = *((void *)v98 + 4);
              if ((*(_WORD *)((unsigned char *)v98 + 61) & 0x2000) != 0) {
                break;
              }
              if (!v39) {
                goto LABEL_176;
              }
LABEL_241:
              if (v40)
              {
                if (*(void *)(v99 + 96) != v370) {
                  goto LABEL_173;
                }
                if (!v370)
                {
                  int v143 = strcmp(v40, "*");
                  int v40 = v378;
                  uint64_t v42 = __srcb;
                  uint64_t v39 = v376;
                  if (v143) {
                    goto LABEL_173;
                  }
                }
              }
              uint64_t v131 = *((void *)v98 + 3);
              if (v131)
              {
                uint64_t v132 = v39;
                for (uint64_t k = (unsigned __int8 *)*((void *)v98 + 3); ; ++k)
                {
                  uint64_t v134 = *v132;
                  uint64_t v135 = *k;
                  if (v134 == v135)
                  {
                    if (!*v132) {
                      goto LABEL_275;
                    }
                  }
                  else if (byte_1B0DE1758[v134] != byte_1B0DE1758[v135])
                  {
                    goto LABEL_173;
                  }
                  ++v132;
                }
              }
              for (uint64_t m = 0; ; ++m)
              {
                uint64_t v137 = v39[m];
                uint64_t v138 = *(unsigned __int8 *)(*(void *)v99 + m);
                if (v137 != v138) {
                  break;
                }
                if (!v39[m]) {
                  goto LABEL_275;
                }
LABEL_253:
                ;
              }
              if (byte_1B0DE1758[v137] == byte_1B0DE1758[v138]) {
                goto LABEL_253;
              }
              if (*(_DWORD *)(v99 + 40) != 1) {
                goto LABEL_173;
              }
              int v141 = sub_1B0D37F5C((uint64_t)v39, v99, v370);
              int v40 = v378;
              uint64_t v42 = __srcb;
              uint64_t v39 = v376;
              if (!v141) {
                goto LABEL_173;
              }
LABEL_275:
              if (v131)
              {
                if (*(unsigned __int8 *)(v369 + 302) >= 2u)
                {
                  uint64_t v142 = *(unsigned __int8 ***)(v369 + 408);
                  if (v142)
                  {
                    while (*v142 != v373)
                    {
                      uint64_t v142 = (unsigned __int8 **)v142[3];
                      if (!v142) {
                        goto LABEL_176;
                      }
                    }
                    *uint64_t v142 = 0;
                  }
                }
              }
LABEL_176:
              if (v42 && (int v100 = *v42) != 0)
              {
                int v101 = 0;
                int v102 = v368;
                do
                {
                  v101 += byte_1B0DE1758[v100];
                  int v103 = *v102++;
                  int v100 = v103;
                }
                while (v103);
              }
              else
              {
                LOBYTE(v101) = 0;
              }
              int v117 = *(__int16 *)(v99 + 54);
              if (v117 < 1)
              {
LABEL_267:
                if (!v96) {
                  goto LABEL_268;
                }
                goto LABEL_173;
              }
              unsigned int v118 = 0;
              uint64_t v119 = *(void *)(v99 + 8);
              while (2)
              {
                if (*(unsigned __int8 *)(v119 + 11) != v101)
                {
LABEL_213:
                  ++v118;
                  v119 += 16;
                  if (v118 == v117)
                  {
                    uint64_t v39 = v376;
                    int v40 = v378;
                    if (!v96) {
                      goto LABEL_268;
                    }
                    goto LABEL_173;
                  }
                  continue;
                }
                break;
              }
              int v120 = *(unsigned char **)v119;
              int v121 = v42;
              while (2)
              {
                uint64_t v122 = *v120;
                uint64_t v123 = *v121;
                if (v122 != v123)
                {
                  if (byte_1B0DE1758[v122] != byte_1B0DE1758[v123]) {
                    goto LABEL_213;
                  }
LABEL_217:
                  ++v120;
                  ++v121;
                  continue;
                }
                break;
              }
              if (*v120) {
                goto LABEL_217;
              }
              if (v96 < 1) {
                goto LABEL_262;
              }
              if ((*(_WORD *)((unsigned char *)v98 + 61) & 0x400) == 0
                || (unsigned int v124 = (unsigned int *)*((void *)v98 + 9), v125 = *v124, (int)v125 < 1))
              {
LABEL_259:
                if (v384[0])
                {
                  sub_1B0D270DC((void *)v374, (void *)v384[0]);
                  uint64_t v42 = __srcb;
                }
                goto LABEL_261;
              }
              uint64_t v126 = 0;
              while (2)
              {
                uint64_t v127 = *(unsigned char **)&v124[4 * v126 + 2];
                uint64_t v128 = v42;
LABEL_227:
                uint64_t v129 = *v127;
                uint64_t v130 = *v128;
                if (v129 != v130)
                {
                  if (byte_1B0DE1758[v129] != byte_1B0DE1758[v130])
                  {
                    if (++v126 != v125) {
                      continue;
                    }
                    goto LABEL_259;
                  }
LABEL_226:
                  ++v127;
                  ++v128;
                  goto LABEL_227;
                }
                break;
              }
              if (*v127) {
                goto LABEL_226;
              }
              if ((v126 & 0x80000000) != 0) {
                goto LABEL_259;
              }
              if ((v98[15] & 0x10) == 0) {
                goto LABEL_213;
              }
              if ((v98[15] & 8) != 0)
              {
                sub_1B0D37E7C((uint64_t *)v369, v384, v93, *((__int16 *)v15 + 24));
                uint64_t v42 = __srcb;
                goto LABEL_262;
              }
              if (v384[0])
              {
                sub_1B0D270DC((void *)v374, (void *)v384[0]);
                uint64_t v42 = __srcb;
              }
              int v96 = 0;
LABEL_261:
              v384[0] = 0;
LABEL_262:
              ++v96;
              if (v118 == *(__int16 *)(v99 + 52)) {
                int v139 = -1;
              }
              else {
                int v139 = (__int16)v118;
              }
              uint64_t v39 = v376;
              *((_DWORD *)v15 + 12) = v139;
              int v40 = v378;
              if ((*(_WORD *)((unsigned char *)v98 + 61) & 0x2000) == 0)
              {
                uint64_t v93 = (uint64_t)v98;
                goto LABEL_267;
              }
              uint64_t v140 = *(void *)(*((void *)v98 + 5) + 32) + 24 * v118;
              *(_WORD *)(v140 + 25) |= 0x40u;
              uint64_t v93 = (uint64_t)v98;
              if (!v96)
              {
LABEL_268:
                v91 += ((*(_DWORD *)(v99 + 48) & 0x200u) >> 9) ^ 1;
                if ((*(_DWORD *)(v99 + 48) & 0x200) == 0) {
                  uint64_t v93 = (uint64_t)v98;
                }
              }
LABEL_173:
              ++v97;
              v98 += 26;
              if (v97 >= *v95) {
                goto LABEL_287;
              }
            }
            uint64_t v372 = *((void *)v98 + 4);
            uint64_t v104 = *(int **)(*((void *)v98 + 5) + 32);
            int v105 = *v104;
            if (*v104 < 1)
            {
              int v107 = 0;
LABEL_239:
              if (!v39)
              {
LABEL_172:
                uint64_t v95 = v371;
                goto LABEL_173;
              }
              uint64_t v95 = v371;
              uint64_t v99 = v372;
              if (v107) {
                goto LABEL_173;
              }
              goto LABEL_241;
            }
            uint64_t v106 = 0;
            int v107 = 0;
LABEL_185:
            if (!sub_1B0D37CF4((uint64_t)&v104[6 * v106 + 2], v42, v39, (unsigned __int8 *)v40))
            {
LABEL_183:
              uint64_t v39 = v376;
              int v40 = v378;
              uint64_t v42 = __srcb;
              goto LABEL_184;
            }
            if (v96 < 1) {
              goto LABEL_207;
            }
            if ((*(_WORD *)((unsigned char *)v98 + 61) & 0x400) == 0
              || (uint64_t v108 = (unsigned int *)*((void *)v98 + 9), v109 = *v108, (int)v109 < 1))
            {
LABEL_204:
              if (v384[0]) {
                sub_1B0D270DC((void *)v374, (void *)v384[0]);
              }
LABEL_206:
              v384[0] = 0;
              goto LABEL_207;
            }
            uint64_t v110 = 0;
LABEL_190:
            int v111 = *(unsigned char **)&v108[4 * v110 + 2];
            for (uint64_t n = __srcb; ; ++n)
            {
              uint64_t v113 = *v111;
              uint64_t v114 = *n;
              if (v113 == v114)
              {
                if (!*v111)
                {
                  if ((v110 & 0x80000000) != 0) {
                    goto LABEL_204;
                  }
                  if ((v98[15] & 0x10) == 0) {
                    goto LABEL_183;
                  }
                  if ((v98[15] & 8) == 0)
                  {
                    if (v384[0]) {
                      sub_1B0D270DC((void *)v374, (void *)v384[0]);
                    }
                    int v96 = 0;
                    goto LABEL_206;
                  }
                  sub_1B0D37E7C((uint64_t *)v369, v384, v93, *((__int16 *)v15 + 24));
LABEL_207:
                  ++v96;
                  uint64_t v39 = v376;
                  *((_DWORD *)v15 + 12) = v106;
                  uint64_t v115 = &v104[6 * v106];
                  __int16 v116 = *(_WORD *)((char *)v115 + 25);
                  *(_WORD *)((char *)v115 + 25) = v116 | 0x40;
                  int v40 = v378;
                  uint64_t v42 = __srcb;
                  if ((v116 & 0x80) != 0)
                  {
                    int v91 = 2;
                    uint64_t v93 = (uint64_t)v98;
                    goto LABEL_172;
                  }
                  int v105 = *v104;
                  int v107 = 1;
                  int v91 = 2;
                  uint64_t v93 = (uint64_t)v98;
LABEL_184:
                  if (++v106 >= v105) {
                    goto LABEL_239;
                  }
                  goto LABEL_185;
                }
              }
              else if (byte_1B0DE1758[v113] != byte_1B0DE1758[v114])
              {
                if (++v110 == v109) {
                  goto LABEL_204;
                }
                goto LABEL_190;
              }
              ++v111;
            }
          }
          int v96 = 0;
LABEL_287:
          uint64_t v41 = v370;
          if (v93)
          {
            *uint64_t v362 = *(_DWORD *)(v93 + 64);
            uint64_t v144 = *(void *)(v93 + 32);
            *(void *)int v373 = v144;
            uint64_t v14 = v369;
            uint64_t v94 = v367;
            uint64_t v92 = v366;
            if ((*(unsigned char *)(v93 + 60) & 0x48) != 0) {
              *((_DWORD *)v15 + 1) |= 0x200000u;
            }
            uint64_t v41 = *(void *)(v144 + 96);
            if (v96) {
              goto LABEL_376;
            }
          }
          else
          {
            uint64_t v14 = v369;
            uint64_t v94 = v367;
            uint64_t v92 = v366;
            if (v96) {
              goto LABEL_376;
            }
          }
        }
        else
        {
          int v96 = 0;
        }
        if (v40) {
          goto LABEL_376;
        }
        uint64_t v145 = *(unsigned __int8 ***)v363;
        if (*(void *)v363)
        {
          int v146 = *(unsigned __int8 *)(v14 + 218);
          if (!*(unsigned char *)(v14 + 219))
          {
            if (v39 && v146 != 128)
            {
              uint64_t v152 = "new";
              for (iuint64_t i = v39; ; ++ii)
              {
                uint64_t v154 = *(unsigned __int8 *)v152;
                uint64_t v155 = *ii;
                if (v154 == v155)
                {
                  if (!*v152)
                  {
                    BOOL v156 = 1;
                    goto LABEL_322;
                  }
                }
                else if (byte_1B0DE1758[v154] != byte_1B0DE1758[v155])
                {
                  break;
                }
                ++v152;
              }
            }
            uint64_t v151 = 0;
            if (v39 && v146 != 127)
            {
              uint64_t v157 = "old";
              for (juint64_t j = v39; ; ++jj)
              {
                uint64_t v159 = *(unsigned __int8 *)v157;
                uint64_t v160 = *jj;
                if (v159 == v160)
                {
                  if (!*v157)
                  {
                    BOOL v156 = 0;
                    goto LABEL_322;
                  }
                }
                else if (byte_1B0DE1758[v159] != byte_1B0DE1758[v160])
                {
                  goto LABEL_303;
                }
                ++v157;
              }
            }
            goto LABEL_323;
          }
          if ((*(unsigned char *)(v94 + 41) & 4) != 0)
          {
            if (v39)
            {
              uint64_t v147 = *v145;
              for (kuint64_t k = v39; ; ++kk)
              {
                uint64_t v149 = *kk;
                uint64_t v150 = *v147;
                if (v149 == v150)
                {
                  if (!*kk) {
                    break;
                  }
                }
                else if (byte_1B0DE1758[v149] != byte_1B0DE1758[v150])
                {
                  goto LABEL_303;
                }
                ++v147;
              }
            }
            BOOL v156 = v146 != 128;
LABEL_322:
            *uint64_t v362 = v156;
            uint64_t v151 = v145;
LABEL_323:
            if (!v39) {
              goto LABEL_332;
            }
LABEL_324:
            if ((*(_DWORD *)(v94 + 40) & 0x200) != 0)
            {
              uint64_t v161 = *(void *)(v94 + 16);
              if (v161)
              {
                int v162 = "excluded";
                for (muint64_t m = v39; ; ++mm)
                {
                  uint64_t v164 = *(unsigned __int8 *)v162;
                  uint64_t v165 = *mm;
                  if (v164 == v165)
                  {
                    if (!*v162)
                    {
                      uint64_t v151 = *(unsigned __int8 ***)(*(void *)(v161 + 64) + 40);
                      *uint64_t v362 = 2;
                      goto LABEL_332;
                    }
                  }
                  else if (byte_1B0DE1758[v164] != byte_1B0DE1758[v165])
                  {
                    goto LABEL_332;
                  }
                  ++v162;
                }
              }
            }
            goto LABEL_332;
          }
        }
LABEL_303:
        uint64_t v151 = 0;
        if (v39) {
          goto LABEL_324;
        }
LABEL_332:
        if (v151)
        {
          if (v42 && (int v166 = *v42) != 0)
          {
            int v167 = 0;
            int v168 = v368;
            do
            {
              v167 += byte_1B0DE1758[v166];
              int v169 = *v168++;
              int v166 = v169;
            }
            while (v169);
          }
          else
          {
            LOBYTE(v167) = 0;
          }
          uint64_t v41 = (uint64_t)v151[12];
          uint64_t v170 = v151[1];
          int v171 = *((__int16 *)v151 + 27);
          if (v171 < 1)
          {
            signed int v178 = 0;
          }
          else
          {
            signed int v172 = 0;
            uint64_t v173 = v151[1];
            do
            {
              if (v173[11] == v167)
              {
                uint64_t v174 = *(unsigned char **)v173;
                for (nuint64_t n = v42; ; ++nn)
                {
                  uint64_t v176 = *v174;
                  uint64_t v177 = *nn;
                  if (v176 == v177)
                  {
                    if (!*v174)
                    {
                      if (v172 == *((__int16 *)v151 + 26)) {
                        signed int v178 = -1;
                      }
                      else {
                        signed int v178 = v172;
                      }
                      uint64_t v39 = v376;
                      int v40 = v378;
                      if (v178 < v171) {
                        goto LABEL_374;
                      }
                      goto LABEL_356;
                    }
                  }
                  else if (byte_1B0DE1758[v176] != byte_1B0DE1758[v177])
                  {
                    break;
                  }
                  ++v174;
                }
              }
              ++v172;
              v173 += 16;
            }
            while (v172 != v171);
            signed int v178 = *((__int16 *)v151 + 27);
          }
LABEL_356:
          uint64_t v179 = v42;
          for (i1 = "_ROWID_"; ; ++i1)
          {
            uint64_t v181 = *v179;
            uint64_t v182 = *(unsigned __int8 *)i1;
            if (v181 == v182)
            {
              if (!*v179)
              {
LABEL_371:
                if ((*((unsigned char *)v151 + 49) & 2) == 0) {
                  signed int v178 = -1;
                }
LABEL_373:
                uint64_t v39 = v376;
                int v40 = v378;
LABEL_374:
                if (v178 >= v171)
                {
                  int v96 = 0;
                  ++v91;
                  goto LABEL_376;
                }
                int v252 = *v362;
                if (*v362 == 2)
                {
                  uint64_t v217 = (char *)v15;
                  int v218 = v363;
                  uint64_t v215 = v364;
                  if (*(unsigned __int8 *)(v14 + 302) >= 2u)
                  {
                    uint64_t v93 = 0;
                    *((_DWORD *)v15 + 12) = v178;
                    *((void *)v15 + 9) = v151;
                    int v96 = 1;
                    goto LABEL_542;
                  }
                  uint64_t v295 = (__int16)v178;
                  if ((v178 & 0x8000) == 0 && (v151[6] & 0x20) != 0)
                  {
                    if ((_WORD)v178)
                    {
                      if ((v178 << 16) >= 0x110000)
                      {
                        uint64_t v327 = v178 & 0xF;
                        if ((v178 & 0xF) == 0) {
                          uint64_t v327 = 16;
                        }
                        uint64_t v296 = v295 - v327;
                        uint64_t v328 = v170 + 142;
                        int16x8_t v329 = 0uLL;
                        v330.i64[0] = 0x1000100010001;
                        v330.i64[1] = 0x1000100010001;
                        uint64_t v331 = v296;
                        int16x8_t v332 = 0uLL;
                        do
                        {
                          int8x16_t v333 = vqtbl2q_s8(*((int8x16x2_t *)v328 - 2), (int8x16_t)xmmword_1B0DE1610);
                          v333.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v328 - 32), (int8x16_t)xmmword_1B0DE1600).i32[3];
                          v334.i32[0] = vzip1q_s16(*((int16x8_t *)v328 - 8), *((int16x8_t *)v328 - 7)).u32[0];
                          v334.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v328 - 96), (int8x16_t)xmmword_1B0DE1620).i32[1];
                          v334.i64[1] = v333.i64[1];
                          uint16x8_t v335 = (uint16x8_t)vqtbl2q_s8(*((int8x16x2_t *)v328 + 3), (int8x16_t)xmmword_1B0DE1600);
                          int8x16x2_t v388 = *(int8x16x2_t *)(v328 + 1);
                          int8x16_t v336 = vqtbl2q_s8(*((int8x16x2_t *)v328 + 2), (int8x16_t)xmmword_1B0DE1610);
                          int16x8_t v338 = *(int16x8_t *)v328;
                          int16x8_t v337 = *((int16x8_t *)v328 + 1);
                          v328 += 256;
                          v336.i32[3] = v335.i32[3];
                          v335.i32[0] = vzip1q_s16(v338, v337).u32[0];
                          v335.i32[1] = vqtbl2q_s8(v388, (int8x16_t)xmmword_1B0DE1620).i32[1];
                          v335.i64[1] = v336.i64[1];
                          int16x8_t v329 = vaddq_s16((int16x8_t)vbicq_s8(v330, (int8x16_t)vshrq_n_u16(v334, 5uLL)), v329);
                          int16x8_t v332 = vaddq_s16((int16x8_t)vbicq_s8(v330, (int8x16_t)vshrq_n_u16(v335, 5uLL)), v332);
                          v331 -= 16;
                        }
                        while (v331);
                        __int16 v297 = vaddvq_s16(vaddq_s16(v332, v329));
                      }
                      else
                      {
                        uint64_t v296 = 0;
                        __int16 v297 = 0;
                      }
                      uint64_t v339 = v295 - v296;
                      uint64_t v340 = &v170[16 * v296 + 14];
                      do
                      {
                        unsigned int v341 = *(unsigned __int16 *)v340;
                        v340 += 16;
                        v297 += ((v341 >> 5) & 1) == 0;
                        --v339;
                      }
                      while (v339);
                    }
                    else
                    {
                      __int16 v297 = 0;
                    }
                    if ((*(_WORD *)&v170[16 * v295 + 14] & 0x20) != 0) {
                      LOWORD(v295) = v178 - v297 + *((_WORD *)v151 + 28);
                    }
                    else {
                      LOWORD(v295) = v297;
                    }
                  }
                  uint64_t v93 = 0;
                  int v326 = *(_DWORD *)(*(void *)(v94 + 16) + 72) + (__int16)v295;
LABEL_667:
                  *uint64_t v362 = v326;
                  int v96 = 1;
                  char v231 = -80;
                }
                else
                {
                  *(void *)int v373 = v151;
                  uint64_t v262 = (__int16)v178;
                  uint64_t v217 = (char *)v15;
                  int v218 = v363;
                  uint64_t v215 = v364;
                  if (*(unsigned char *)(v14 + 219))
                  {
                    v15[2] = -89;
                    *((_DWORD *)v15 + 12) = v178;
                    int v263 = v252 + v252 * *((__int16 *)v151 + 27);
                    if ((v178 & 0x8000) == 0 && (v151[6] & 0x20) != 0)
                    {
                      uint64_t v264 = v151[1];
                      if ((_WORD)v178)
                      {
                        if ((v178 << 16) >= 0x110000)
                        {
                          uint64_t v311 = v178 & 0xF;
                          if ((v178 & 0xF) == 0) {
                            uint64_t v311 = 16;
                          }
                          uint64_t v266 = v262 - v311;
                          uint64_t v312 = v264 + 142;
                          int16x8_t v313 = 0uLL;
                          v314.i64[0] = 0x1000100010001;
                          v314.i64[1] = 0x1000100010001;
                          uint64_t v315 = v266;
                          int16x8_t v316 = 0uLL;
                          do
                          {
                            int8x16_t v317 = vqtbl2q_s8(*((int8x16x2_t *)v312 - 2), (int8x16_t)xmmword_1B0DE1610);
                            v317.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v312 - 32), (int8x16_t)xmmword_1B0DE1600).i32[3];
                            v318.i32[0] = vzip1q_s16(*((int16x8_t *)v312 - 8), *((int16x8_t *)v312 - 7)).u32[0];
                            v318.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v312 - 96), (int8x16_t)xmmword_1B0DE1620).i32[1];
                            v318.i64[1] = v317.i64[1];
                            uint16x8_t v319 = (uint16x8_t)vqtbl2q_s8(*((int8x16x2_t *)v312 + 3), (int8x16_t)xmmword_1B0DE1600);
                            int8x16x2_t v387 = *(int8x16x2_t *)(v312 + 1);
                            int8x16_t v320 = vqtbl2q_s8(*((int8x16x2_t *)v312 + 2), (int8x16_t)xmmword_1B0DE1610);
                            int16x8_t v322 = *(int16x8_t *)v312;
                            int16x8_t v321 = *((int16x8_t *)v312 + 1);
                            v312 += 256;
                            v320.i32[3] = v319.i32[3];
                            v319.i32[0] = vzip1q_s16(v322, v321).u32[0];
                            v319.i32[1] = vqtbl2q_s8(v387, (int8x16_t)xmmword_1B0DE1620).i32[1];
                            v319.i64[1] = v320.i64[1];
                            int16x8_t v313 = vaddq_s16((int16x8_t)vbicq_s8(v314, (int8x16_t)vshrq_n_u16(v318, 5uLL)), v313);
                            int16x8_t v316 = vaddq_s16((int16x8_t)vbicq_s8(v314, (int8x16_t)vshrq_n_u16(v319, 5uLL)), v316);
                            v315 -= 16;
                          }
                          while (v315);
                          uint64_t v265 = v41;
                          __int16 v267 = vaddvq_s16(vaddq_s16(v316, v313));
                        }
                        else
                        {
                          uint64_t v265 = v41;
                          uint64_t v266 = 0;
                          __int16 v267 = 0;
                        }
                        uint64_t v323 = v262 - v266;
                        uint64_t v324 = &v264[16 * v266 + 14];
                        do
                        {
                          unsigned int v325 = *(unsigned __int16 *)v324;
                          v324 += 16;
                          v267 += ((v325 >> 5) & 1) == 0;
                          --v323;
                        }
                        while (v323);
                      }
                      else
                      {
                        uint64_t v265 = v41;
                        __int16 v267 = 0;
                      }
                      if ((*(_WORD *)&v264[16 * v262 + 14] & 0x20) != 0) {
                        LOWORD(v262) = v178 - v267 + *((_WORD *)v151 + 28);
                      }
                      else {
                        LOWORD(v262) = v267;
                      }
                      uint64_t v41 = v265;
                    }
                    uint64_t v93 = 0;
                    int v326 = *(_DWORD *)(v94 + 16) + v263 + (__int16)v262 + 1;
                    goto LABEL_667;
                  }
                  *((_DWORD *)v15 + 12) = v262;
                  if (v178 < 0)
                  {
                    uint64_t v93 = 0;
                    v15[1] = 68;
                  }
                  else
                  {
                    int v304 = 1 << v178;
                    if (v178 > 0x1F) {
                      int v304 = -1;
                    }
                    uint64_t v93 = 0;
                    if (v252) {
                      *(_DWORD *)(v14 + 212) |= v304;
                    }
                    else {
                      *(_DWORD *)(v14 + 208) |= v304;
                    }
                  }
                  int v96 = 1;
                  char v231 = 77;
                }
LABEL_668:
                if ((v217[6] & 0x81) == 0)
                {
                  uint64_t v342 = (unsigned __int8 *)*((void *)v217 + 2);
                  if (v342)
                  {
                    uint64_t v343 = v41;
                    sub_1B0D1DF88((void *)v374, v342);
                    uint64_t v41 = v343;
                  }
                  *((void *)v217 + 2) = 0;
                  uint64_t v344 = (unsigned __int8 *)*((void *)v217 + 3);
                  if (v344)
                  {
                    uint64_t v345 = v41;
                    sub_1B0D1DF88((void *)v374, v344);
                    uint64_t v41 = v345;
                  }
                  *((void *)v217 + 3) = 0;
                  *((_DWORD *)v217 + 1) |= 0x800000u;
                }
                uint64_t v346 = *((unsigned int *)v217 + 12);
                if ((v346 & 0x80000000) == 0 && v93)
                {
                  uint64_t v347 = *(void *)v373;
                  if ((*(unsigned char *)(*(void *)v373 + 48) & 0x60) != 0
                    && (*(_WORD *)(*(void *)(v347 + 8) + 16 * v346 + 14) & 0x60) != 0)
                  {
                    int v348 = *(__int16 *)(v347 + 54);
                    if (v348 <= 63) {
                      uint64_t v349 = ~(-1 << v348);
                    }
                    else {
                      uint64_t v349 = -1;
                    }
                  }
                  else
                  {
                    if ((int)v346 >= 63) {
                      LOBYTE(v346) = 63;
                    }
                    uint64_t v349 = 1 << v346;
                  }
                  *(void *)(v93 + 80) |= v349;
                }
                char *v217 = v231;
                if (v96 == 1) {
                  goto LABEL_686;
                }
                return 2;
              }
            }
            else if (byte_1B0DE1758[v181] != byte_1B0DE1758[v182])
            {
              uint64_t v183 = v42;
              for (uint64_t i2 = "ROWID"; ; ++i2)
              {
                uint64_t v185 = *v183;
                uint64_t v186 = *(unsigned __int8 *)i2;
                if (v185 == v186)
                {
                  if (!*v183) {
                    goto LABEL_371;
                  }
                }
                else if (byte_1B0DE1758[v185] != byte_1B0DE1758[v186])
                {
                  uint64_t v187 = v42;
                  for (uint64_t i3 = "OID"; ; ++i3)
                  {
                    uint64_t v189 = *v187;
                    uint64_t v190 = *(unsigned __int8 *)i3;
                    if (v189 == v190)
                    {
                      if (!*v187) {
                        goto LABEL_371;
                      }
                    }
                    else if (byte_1B0DE1758[v189] != byte_1B0DE1758[v190])
                    {
                      goto LABEL_373;
                    }
                    ++v187;
                  }
                }
                ++v183;
              }
            }
            ++v179;
          }
        }
        int v96 = 0;
LABEL_376:
        if (v96 || v91 != 1 || !v93)
        {
          if (!v96)
          {
            int v191 = *(_DWORD *)(v94 + 40);
            if (!v39) {
              goto LABEL_401;
            }
            goto LABEL_167;
          }
          if (v96 != 1)
          {
            BOOL v230 = "ambiguous column name";
            uint64_t v217 = (char *)v15;
            char v229 = v361;
            goto LABEL_498;
          }
          char v231 = -89;
          uint64_t v217 = (char *)v15;
          goto LABEL_514;
        }
        int v191 = *(_DWORD *)(v94 + 40);
        if ((v191 & 0x28) != 0) {
          goto LABEL_400;
        }
        int v192 = v42;
        for (i4 = "_ROWID_"; ; ++i4)
        {
          uint64_t v194 = *v192;
          uint64_t v195 = *(unsigned __int8 *)i4;
          if (v194 == v195) {
            break;
          }
          if (byte_1B0DE1758[v194] != byte_1B0DE1758[v195])
          {
            int v196 = v42;
            for (i5 = "ROWID"; ; ++i5)
            {
              uint64_t v198 = *v196;
              uint64_t v199 = *(unsigned __int8 *)i5;
              if (v198 == v199)
              {
                if (!*v196) {
                  goto LABEL_399;
                }
              }
              else if (byte_1B0DE1758[v198] != byte_1B0DE1758[v199])
              {
                int v200 = v42;
                for (uint64_t i6 = "OID"; ; ++i6)
                {
                  uint64_t v202 = *v200;
                  uint64_t v203 = *(unsigned __int8 *)i6;
                  if (v202 == v203)
                  {
                    if (!*v200) {
                      goto LABEL_399;
                    }
                  }
                  else if (byte_1B0DE1758[v202] != byte_1B0DE1758[v203])
                  {
                    goto LABEL_400;
                  }
                  ++v200;
                }
              }
              ++v196;
            }
          }
LABEL_382:
          ++v192;
        }
        if (*v192) {
          goto LABEL_382;
        }
LABEL_399:
        if ((*(unsigned char *)(*(void *)(v93 + 32) + 49) & 2) == 0)
        {
          uint64_t v217 = (char *)v15;
          *((_DWORD *)v15 + 12) = -1;
          v15[1] = 68;
          int v96 = 1;
          char v231 = -89;
LABEL_514:
          int v218 = v363;
          uint64_t v215 = v364;
          goto LABEL_668;
        }
LABEL_400:
        int v91 = 1;
        if (!v39)
        {
LABEL_401:
          if ((v191 & 0x80) != 0)
          {
            uint64_t v204 = *(unsigned int **)(v94 + 16);
            uint64_t v205 = *v204;
            if ((int)v205 >= 1)
            {
              for (uint64_t i7 = 0; i7 != v205; ++i7)
              {
                uint64_t v207 = &v204[6 * i7];
                if ((*(_WORD *)((unsigned char *)v207 + 25) & 3) == 0)
                {
                  uint64_t v208 = (unsigned char *)*((void *)v207 + 2);
                  if (v208)
                  {
                    if (v42)
                    {
                      unsigned int v209 = v208;
                      for (i8 = v42; ; ++i8)
                      {
                        uint64_t v211 = *v209;
                        uint64_t v212 = *i8;
                        if (v211 == v212)
                        {
                          if (!*v209) {
                            goto LABEL_414;
                          }
                        }
                        else if (byte_1B0DE1758[v211] != byte_1B0DE1758[v212])
                        {
                          break;
                        }
                        ++v209;
                      }
                    }
                  }
                  else if (!v42)
                  {
LABEL_414:
                    uint64_t v213 = *(unsigned __int8 **)&v204[6 * i7 + 2];
                    int v214 = *((_DWORD *)v213 + 1);
                    if ((v191 & 1) == 0 && (v214 & 0x10) != 0)
                    {
                      sub_1B0CEF2BC(v14, "misuse of aliased aggregate %s", i7, (uint64_t)v40, v92, (uint64_t)v42, a7, a8, (char)v208);
                      return 2;
                    }
                    uint64_t v215 = v364;
                    if ((v214 & 0x8000) != 0 && (v94 != v364 || (v191 & 0x4000) == 0))
                    {
                      sub_1B0CEF2BC(v14, "misuse of aliased window function %s", i7, (uint64_t)v40, v92, (uint64_t)v42, a7, a8, (char)v208);
                      return 2;
                    }
                    int v216 = *v213;
                    if (v216 == 176) {
                      int v216 = v213[2];
                    }
                    uint64_t v217 = (char *)v15;
                    int v218 = v363;
                    if (v216 != 138)
                    {
                      if (v216 == 177)
                      {
                        uint64_t v219 = (_DWORD **)(v213 + 32);
LABEL_437:
                        if (**v219 != 1)
                        {
                          sub_1B0CEF2BC(v14, "row value misused", i7, (uint64_t)v40, v92, (uint64_t)v42, a7, a8, v359);
                          return 2;
                        }
                      }
                      uint64_t v227 = v41;
                      sub_1B0CCF55C((uint64_t *)v14, (uint64_t)v204, i7, (uint64_t)v15, v92);
                      if (*(unsigned __int8 *)(v14 + 302) < 2u) {
                        goto LABEL_526;
                      }
                      uint64_t v228 = *(unsigned __int8 ***)(v14 + 408);
                      uint64_t v41 = v227;
                      if (v228)
                      {
                        while (*v228 != v15)
                        {
                          uint64_t v228 = (unsigned __int8 **)v228[3];
                          if (!v228) {
                            goto LABEL_686;
                          }
                        }
                        *uint64_t v228 = 0;
                      }
                      goto LABEL_686;
                    }
                    uint64_t v219 = (_DWORD **)(*((void *)v213 + 4) + 32);
                    goto LABEL_437;
                  }
                }
              }
            }
          }
        }
LABEL_167:
        uint64_t v94 = *(void *)(v94 + 24);
        uint64_t v92 = (v92 + 1);
        uint64_t v39 = v376;
        int v40 = v378;
        if (v94) {
          continue;
        }
        break;
      }
      if (v376)
      {
        int v96 = 0;
        uint64_t v94 = 0;
        char v229 = 0;
LABEL_447:
        BOOL v230 = "no such column";
        goto LABEL_448;
      }
      int v253 = *((_DWORD *)v15 + 1);
      if ((v253 & 0x80) != 0)
      {
        if (*(unsigned char *)(v374 + 197)) {
          goto LABEL_631;
        }
        if (*(unsigned char *)(v364 + 42))
        {
          if ((*(void *)(v374 + 48) & 0x50000001) == 0x40000001) {
            goto LABEL_631;
          }
          char v268 = 29;
        }
        else
        {
          char v268 = 30;
        }
        if (((*(void *)(v374 + 48) >> v268) & 1) == 0) {
          goto LABEL_494;
        }
LABEL_631:
        uint64_t v308 = *(void *)(v14 + 16);
        if (v308)
        {
          int v309 = v42 ? strlen((const char *)v42) & 0x3FFFFFFF : 0;
          uint64_t v310 = (void *)sub_1B0D05DC0(v374, (v309 + 9));
          if (v310)
          {
            *uint64_t v310 = *(void *)(v308 + 336);
            *(void *)(v308 + 336) = v310;
            memcpy(v310 + 1, __srcb, (v309 + 1));
          }
        }
        *uint64_t v15 = 117;
        *((void *)v15 + 9) = 0;
        return 1;
      }
LABEL_494:
      if ((v253 & 0x4000800) != 0)
      {
        int v96 = 0;
        uint64_t v94 = 0;
        char v229 = 1;
        goto LABEL_447;
      }
      uint64_t v298 = (unsigned char *)*((void *)v15 + 1);
      uint64_t v299 = "true";
      uint64_t v300 = v298;
      while (2)
      {
        uint64_t v301 = *v300;
        uint64_t v302 = *(unsigned __int8 *)v299;
        if (v301 == v302)
        {
          if (!*v300)
          {
            int v303 = 0x10000000;
LABEL_627:
            *uint64_t v15 = -86;
            *((_DWORD *)v15 + 1) = v303 | v253;
            return 1;
          }
          goto LABEL_609;
        }
        if (byte_1B0DE1758[v301] == byte_1B0DE1758[v302])
        {
LABEL_609:
          ++v300;
          ++v299;
          continue;
        }
        break;
      }
      uint64_t v305 = "false";
      BOOL v230 = "no such column";
      while (2)
      {
        uint64_t v306 = *v298;
        uint64_t v307 = *(unsigned __int8 *)v305;
        if (v306 == v307)
        {
          if (!*v298)
          {
            int v303 = 0x20000000;
            goto LABEL_627;
          }
          goto LABEL_623;
        }
        if (byte_1B0DE1758[v306] == byte_1B0DE1758[v307])
        {
LABEL_623:
          ++v298;
          ++v305;
          continue;
        }
        break;
      }
      int v96 = 0;
      uint64_t v94 = 0;
      char v229 = 1;
LABEL_448:
      uint64_t v217 = (char *)v375;
LABEL_498:
      if (!v384[0])
      {
LABEL_507:
        uint64_t v258 = v41;
        if (v40)
        {
          sub_1B0CEF2BC(v14, "%s: %s.%s.%s", (uint64_t)v39, (uint64_t)v40, v92, (uint64_t)v42, a7, a8, (char)v230);
        }
        else if (v229)
        {
          sub_1B0CEF2BC(v14, "%s: %s", (uint64_t)v39, 0, v92, (uint64_t)v42, a7, a8, (char)v230);
        }
        else
        {
          sub_1B0CEF2BC(v14, "%s: %s.%s", (uint64_t)v39, 0, v92, (uint64_t)v42, a7, a8, (char)v230);
        }
        int v218 = v363;
        uint64_t v215 = v364;
        uint64_t v41 = v258;
        if (v217)
        {
          size_t v275 = v217;
          while (1)
          {
            if ((v275[4] & 3) == 0)
            {
              int v276 = *((_DWORD *)v275 + 14);
              if (v276 > 0) {
                break;
              }
            }
            size_t v275 = (char *)*((void *)v275 + 2);
            if (!v275) {
              goto LABEL_541;
            }
          }
          *(_DWORD *)(*(void *)v14 + 84) = v276;
        }
LABEL_541:
        *(unsigned char *)(v14 + 29) = 1;
        ++*(_DWORD *)(v364 + 36);
LABEL_542:
        char v231 = -89;
        goto LABEL_668;
      }
      if (*v384[0] != v96 - 1)
      {
        uint64_t v257 = v41;
        sub_1B0D270DC((void *)v374, (void *)v384[0]);
        int v40 = v378;
        uint64_t v42 = __srcb;
        uint64_t v39 = v376;
        uint64_t v41 = v257;
        goto LABEL_507;
      }
      uint64_t v227 = v41;
      int v254 = *((_DWORD *)v217 + 1);
      if ((v254 & 0x800000) != 0)
      {
        *((_DWORD *)v217 + 1) = v254 & 0xFF7FFFFF;
        int v218 = v363;
        uint64_t v215 = v364;
      }
      else
      {
        uint64_t v255 = (unsigned __int8 *)*((void *)v217 + 2);
        int v218 = v363;
        uint64_t v215 = v364;
        if (v255) {
          sub_1B0D1DF88((void *)v374, v255);
        }
        *((void *)v217 + 2) = 0;
        uint64_t v256 = (unsigned __int8 *)*((void *)v217 + 3);
        if (v256) {
          sub_1B0D1DF88((void *)v374, v256);
        }
        *((void *)v217 + 3) = 0;
      }
      sub_1B0D37E7C((uint64_t *)v14, v384, v93, *((__int16 *)v217 + 24));
      char *v217 = -84;
      *((void *)v217 + 1) = "coalesce";
      *((_DWORD **)v217 + 4) = v384[0];
LABEL_526:
      uint64_t v41 = v227;
LABEL_686:
      if (*(void *)(*(void *)v14 + 528))
      {
        int v350 = *v217;
        if (v350 == 167 || v350 == 77)
        {
          if (v41)
          {
            uint64_t v351 = *(unsigned int **)(v94 + 8);
            uint64_t v352 = (uint64_t *)(*(void *)(*(void *)v14 + 32) + 24);
            int v353 = -1;
            do
            {
              uint64_t v354 = *v352;
              v352 += 4;
              ++v353;
            }
            while (v354 != v41);
            if ((v353 & 0x80000000) == 0)
            {
              if (v350 == 77) {
                goto LABEL_694;
              }
              uint64_t v358 = *v351;
              if ((int)v358 >= 1)
              {
                int v218 = v351 + 10;
                while (*v362 != v218[8])
                {
                  v218 += 26;
                  if (!--v358) {
                    goto LABEL_706;
                  }
                }
LABEL_694:
                uint64_t v355 = *(void *)v218;
                if (*(void *)v218)
                {
                  uint64_t v356 = *((unsigned int *)v217 + 12);
                  if ((v356 & 0x80000000) == 0) {
                    goto LABEL_698;
                  }
                  if (*(__int16 *)(v355 + 52) < 0)
                  {
                    int v357 = "ROWID";
                  }
                  else
                  {
                    uint64_t v356 = *(unsigned __int16 *)(v355 + 52);
LABEL_698:
                    int v357 = *(const char **)(*(void *)(v355 + 8) + 16 * v356);
                  }
                  if (sub_1B0CC386C(v14, *(const char **)v355, v357, v353) == 2) {
                    char *v217 = 121;
                  }
                }
              }
            }
          }
        }
      }
LABEL_706:
      ++*(_DWORD *)(v215 + 32);
      for (; v215 != v94; ++*(_DWORD *)(v215 + 32))
        uint64_t v215 = *(void *)(v215 + 24);
      return 1;
    case 0x9Cu:
      if ((*(_DWORD *)(v13 + 40) & 0x2E) == 0) {
        return 2 * (*(_DWORD *)(v14 + 48) != 0);
      }
      sub_1B0CEF2BC(v14, "%s prohibited in %s", a3, a4, a5, a6, a7, a8, (char)"parameters");
      *uint64_t v15 = 121;
      uint64_t v49 = *(void *)v14;
      while (1)
      {
        if ((v15[4] & 3) == 0)
        {
          int v50 = *((_DWORD *)v15 + 14);
          if (v50 > 0) {
            break;
          }
        }
        uint64_t v15 = (unsigned __int8 *)*((void *)v15 + 2);
        if (!v15) {
          return 2 * (*(_DWORD *)(v14 + 48) != 0);
        }
      }
      goto LABEL_84;
    case 0xACu:
      uint64_t v51 = *((void *)a2 + 4);
      if (v51) {
        int v52 = *(_DWORD *)v51;
      }
      else {
        int v52 = 0;
      }
      uint64_t v365 = a1[5];
      uint64_t v57 = *(void *)v14;
      unsigned int v58 = *(unsigned __int8 *)(*(void *)v14 + 100);
      if (a2[7])
      {
        uint64_t v59 = *(void *)v13;
        if (*(unsigned __int8 *)(*((void *)a2 + 9) + 32) == 166) {
          uint64_t v60 = 0;
        }
        else {
          uint64_t v60 = *((void *)a2 + 9);
        }
      }
      else
      {
        uint64_t v59 = *(void *)v13;
        uint64_t v60 = 0;
      }
      int v61 = (int *)(v365 + 40);
      int __srca = *(_DWORD *)(v365 + 40);
      uint64_t v62 = (char *)*((void *)a2 + 1);
      uint64_t v63 = sub_1B0C7D668(v57, v62, v52, v58, 0);
      if (!v63)
      {
        uint64_t v74 = v62;
        uint64_t v75 = (unsigned char *)v59;
        uint64_t v70 = sub_1B0C7D668(*(void *)v59, v74, -2, v58, 0);
        BOOL v72 = 0;
        BOOL v76 = v70 == 0;
        BOOL v77 = v70 != 0;
        goto LABEL_139;
      }
      uint64_t v70 = v63;
      uint64_t v71 = *((void *)v63 + 4);
      BOOL v72 = v71 != 0;
      if ((v63[5] & 4) != 0)
      {
        *((_DWORD *)v15 + 1) |= 0x80000u;
        if (v52 == 2)
        {
          unsigned int v73 = sub_1B0D3796C(*(unsigned __int8 **)(v51 + 32));
          *((_DWORD *)v15 + 11) = v73;
          if ((v73 & 0x80000000) != 0)
          {
            sub_1B0CEF2BC(v59, "second argument to %#T() must be a constant between 0.0 and 1.0", v64, v65, v66, v67, v68, v69, (char)v15);
            ++*(_DWORD *)(v365 + 36);
          }
        }
        else
        {
          if (**((unsigned char **)v63 + 7) == 117) {
            int v78 = 0x800000;
          }
          else {
            int v78 = 125829120;
          }
          *((_DWORD *)v15 + 11) = v78;
        }
      }
      uint64_t v79 = *(void *)v59;
      int v80 = *(uint64_t (**)(void, uint64_t, void, void, void, void))(*(void *)v59 + 528);
      if (!v80 || *(unsigned char *)(v79 + 197) || *(unsigned char *)(v59 + 302)) {
        goto LABEL_121;
      }
      int v259 = v80(*(void *)(v79 + 536), 31, 0, *((void *)v70 + 7), 0, *(void *)(v59 + 368));
      if (v259 == 1)
      {
        int v260 = 23;
        uint64_t v261 = "not authorized";
      }
      else
      {
        if ((v259 & 0xFFFFFFFD) == 0)
        {
          if (!v259)
          {
LABEL_121:
            int v81 = *((_DWORD *)v70 + 1);
            if ((v81 & 0x2800) != 0) {
              *((_DWORD *)v15 + 1) |= 0x100000u;
            }
            int v82 = *v61;
            if ((v81 & 0x800) != 0)
            {
              v15[2] = v82 & 0x2E;
              if ((v82 & 0x40000) != 0) {
                *((_DWORD *)v15 + 1) |= 0x40000000u;
              }
            }
            else if ((v82 & 0x2A) != 0)
            {
              sub_1B0D378AC(v59, v365, (uint64_t)"non-deterministic functions", 0, (uint64_t)v15, v67, v68, v69);
              int v81 = *((_DWORD *)v70 + 1);
            }
            if ((v81 & 0x40000) != 0 && !*(unsigned char *)(v59 + 30) && (*(unsigned char *)(*(void *)v59 + 44) & 0x20) == 0)
            {
              BOOL v72 = v71 != 0;
              uint64_t v83 = (unsigned __int8 *)(v59 + 302);
              if (*(unsigned __int8 *)(v59 + 302) <= 1u)
              {
                uint64_t v70 = 0;
                BOOL v76 = 1;
                if (!v71)
                {
                  BOOL v72 = 0;
                  char v236 = 0;
                  uint64_t v75 = (unsigned char *)v59;
                  goto LABEL_460;
                }
                BOOL v77 = 0;
                uint64_t v75 = (unsigned char *)v59;
LABEL_145:
                unsigned int v85 = *((_DWORD *)v70 + 1);
                if ((*v61 & 1) == 0 || !v60 && (v85 & 0x10000) != 0 || v60 && (*v61 & 0x4000) == 0)
                {
                  int v86 = HIWORD(v85) & 1;
                  if (v60) {
                    int v86 = 1;
                  }
                  if (v86) {
                    uint64_t v87 = "window";
                  }
                  else {
                    uint64_t v87 = "aggregate";
                  }
                  char v360 = (char)v87;
                  uint64_t v88 = "misuse of %s function %#T()";
LABEL_156:
                  uint64_t v89 = (uint64_t *)v75;
                  sub_1B0CEF2BC((uint64_t)v75, v88, v64, v65, v66, v67, v68, v69, v360);
                  BOOL v72 = 0;
                  ++*(_DWORD *)(v365 + 36);
                  goto LABEL_552;
                }
                BOOL v72 = 1;
                char v236 = 1;
                if (v77)
                {
LABEL_544:
                  if (v76)
                  {
                    if ((v236 & 1) == 0) {
                      goto LABEL_546;
                    }
LABEL_550:
                    uint64_t v89 = (uint64_t *)v75;
                    *v61 &= (v60 == 0) ^ 0xFFFFBFFF;
                    BOOL v72 = 1;
                    goto LABEL_552;
                  }
                  goto LABEL_548;
                }
LABEL_460:
                if (!*(unsigned char *)(*(void *)v75 + 197) && !v75[301])
                {
                  uint64_t v84 = "no such function: %#T";
                  goto LABEL_549;
                }
                goto LABEL_544;
              }
              uint64_t v70 = 0;
              uint64_t v75 = (unsigned char *)v59;
              goto LABEL_532;
            }
            if ((v81 & 0x280000) != 0)
            {
              uint64_t v75 = (unsigned char *)v59;
              if (*(unsigned __int8 *)(v59 + 302) <= 1u) {
                sub_1B0D310D0(v59, (uint64_t)v15, (uint64_t)v70, v65, v66, v67, v68, v69);
              }
              BOOL v77 = 1;
              BOOL v76 = 1;
            }
            else
            {
              BOOL v77 = 1;
              BOOL v76 = 1;
              uint64_t v75 = (unsigned char *)v59;
            }
LABEL_139:
            uint64_t v83 = v75 + 302;
            if (v75[302] < 2u)
            {
              if (v70 && v60 && !*((void *)v70 + 5))
              {
                uint64_t v84 = "%#T() may not be used as a window function";
                goto LABEL_549;
              }
              if (!v72)
              {
                if (v77)
                {
                  if (v76)
                  {
LABEL_546:
                    if ((v15[7] & 1) == 0)
                    {
                      uint64_t v89 = (uint64_t *)v75;
                      BOOL v72 = 0;
                      goto LABEL_552;
                    }
                    char v360 = (char)v15;
                    uint64_t v88 = "FILTER may not be used with non-aggregate %#T()";
                    goto LABEL_156;
                  }
                  BOOL v72 = 0;
LABEL_548:
                  uint64_t v84 = "wrong number of arguments to function %#T()";
LABEL_549:
                  sub_1B0CEF2BC((uint64_t)v75, v84, v64, v65, v66, v67, v68, v69, (char)v15);
                  ++*(_DWORD *)(v365 + 36);
                  if (!v72)
                  {
                    uint64_t v89 = (uint64_t *)v75;
                    goto LABEL_552;
                  }
                  goto LABEL_550;
                }
                BOOL v72 = 0;
                char v236 = 0;
                goto LABEL_460;
              }
              goto LABEL_145;
            }
LABEL_532:
            uint64_t v89 = (uint64_t *)v75;
            if (v15[7]) {
              BOOL v72 = 1;
            }
LABEL_552:
            if (v51)
            {
              int v277 = *(_DWORD *)v51;
              if (*(int *)v51 >= 1)
              {
                for (i9 = (uint64_t *)(v51 + 8); ; i9 += 3)
                {
                  if (*i9)
                  {
                    if (sub_1B0D32AB4((uint64_t)a1, *i9)) {
                      BOOL v279 = 1;
                    }
                    else {
                      BOOL v279 = v277 <= 1;
                    }
                    if (v279) {
                      break;
                    }
                  }
                  else if (v277 < 2)
                  {
                    break;
                  }
                  --v277;
                }
              }
            }
            if (!v72) {
              return 1;
            }
            if (v60)
            {
              uint64_t v280 = *(void *)(v365 + 48);
              if (*v83 <= 1u)
              {
                uint64_t v14 = (uint64_t)v89;
                uint64_t v281 = v280 ? *(void *)(v280 + 120) : 0;
                sub_1B0D379EC(v89, v281, v60, (uint64_t)v70, v66, v67, v68, v69);
                if (*(unsigned char *)(*v89 + 103)) {
                  return 2 * (*(_DWORD *)(v14 + 48) != 0);
                }
              }
              sub_1B0D32BB0((uint64_t)a1, *(_DWORD **)(v60 + 16));
              sub_1B0D32BB0((uint64_t)a1, *(_DWORD **)(v60 + 24));
              uint64_t v294 = *(void *)(v60 + 72);
              if (v294) {
                sub_1B0D32AB4((uint64_t)a1, v294);
              }
              sub_1B0D34DB4(v280, (void *)v60);
              int v291 = *v61;
              int v292 = 0x8000;
              uint64_t v293 = (int *)(v365 + 40);
            }
            else
            {
              *uint64_t v15 = -88;
              v15[2] = 0;
              if (v15[7])
              {
                uint64_t v282 = *(void *)(*((void *)v15 + 9) + 72);
                if (v282) {
                  sub_1B0D32AB4((uint64_t)a1, v282);
                }
              }
              uint64_t v283 = v365;
              while (1)
              {
                uint64_t v284 = v283;
                uint64_t v285 = *(void *)(v283 + 8);
                v384[0] = 0;
                v382[2] = 0;
                uint64_t v383 = 0;
                v384[1] = sub_1B0D38314;
                v384[2] = sub_1B0D383A4;
                v384[3] = sub_1B0D38494;
                uint64_t v385 = 0;
                unsigned int v386 = v382;
                v382[0] = *v89;
                v382[1] = v285;
                unint64_t v286 = (_DWORD *)*((void *)v15 + 4);
                if (v286)
                {
                  int v287 = *v286;
                  if ((int)*v286 >= 1)
                  {
                    for (i10 = (uint64_t *)(v286 + 2); ; i10 += 3)
                    {
                      if (*i10)
                      {
                        if (sub_1B0D32AB4((uint64_t)v384, *i10)) {
                          BOOL v289 = 1;
                        }
                        else {
                          BOOL v289 = v287 <= 1;
                        }
                        if (v289) {
                          break;
                        }
                      }
                      else if (v287 < 2)
                      {
                        break;
                      }
                      --v287;
                    }
                  }
                }
                if (v15[7])
                {
                  uint64_t v290 = *(void *)(*((void *)v15 + 9) + 72);
                  if (v290) {
                    sub_1B0D32AB4((uint64_t)v384, v290);
                  }
                }
                if (v383) {
                  sub_1B0D15C20((void *)*v89, v383);
                }
                if (!WORD2(v385) || (v385 & 0x100000000) != 0) {
                  break;
                }
                ++v15[2];
                uint64_t v283 = *(void *)(v284 + 24);
                if (!v283) {
                  goto LABEL_600;
                }
              }
              if (!v70)
              {
LABEL_600:
                *v61 |= __srca & 0x4001;
                return 1;
              }
              int v291 = *((_DWORD *)v70 + 1) & 0x8001000 ^ 0x8000010;
              uint64_t v293 = (int *)(v284 + 40);
              int v292 = *(_DWORD *)(v284 + 40);
            }
            *uint64_t v293 = v291 | v292;
            goto LABEL_600;
          }
LABEL_530:
          *uint64_t v15 = 121;
          return 1;
        }
        int v260 = 1;
        uint64_t v261 = "authorizer malfunction";
      }
      sub_1B0CEF2BC(v59, v261, v64, v65, v66, v67, v68, v69, v359);
      *(_DWORD *)(v59 + 24) = v260;
      sub_1B0CEF2BC(v59, "not authorized to use function: %#T", v269, v270, v271, v272, v273, v274, (char)v15);
      ++*(_DWORD *)(v365 + 36);
      goto LABEL_530;
    default:
      return 2 * (*(_DWORD *)(v14 + 48) != 0);
  }
}

void *sub_1B0C9AA88(void *result, unsigned __int8 *a2)
{
  if (a2) {
    return sub_1B0D1DF88(result, a2);
  }
  return result;
}

uint64_t sub_1B0C9AA94(unsigned __int8 **a1, uint64_t a2, int *a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v34 = 0;
  uint64_t v32 = *a1;
  if (*a3 < 1) {
    return sub_1B0D3A668(v32, a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  }
  int v11 = 0;
  for (uint64_t i = a3 + 2; ; i += 6)
  {
    uint64_t v16 = *(unsigned __int8 **)i;
    if (*(void *)i) {
      break;
    }
LABEL_7:
    if (++v11 >= *a3) {
      return sub_1B0D3A668(v32, a2, a3, (uint64_t)a4, a5, a6, a7, a8);
    }
  }
  uint64_t v17 = *(void *)i;
  while (1)
  {
    int v18 = *(_DWORD *)(v17 + 4);
    if ((v18 & 0x82000) == 0) {
      break;
    }
    if ((v18 & 0x80000) != 0)
    {
      uint64_t v17 = *(void *)(*(void *)(v17 + 32) + 8);
      if (!v17) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v17 + 16);
      if (!v17) {
        goto LABEL_7;
      }
    }
  }
  if (*a4 == 71) {
    goto LABEL_4;
  }
  if (*(unsigned char *)v17 != 59 || (int v19 = *(unsigned int **)(a2 + 32), v20 = *v19, (int)v20 < 1))
  {
LABEL_3:
    int v34 = 0;
    goto LABEL_4;
  }
  uint64_t v21 = 0;
  uint64_t v22 = *(void *)(v17 + 8);
  while (1)
  {
    if ((*(_WORD *)((unsigned char *)&v19[6 * v21 + 6] + 1) & 3) == 0)
    {
      uint64_t v26 = *(unsigned char **)&v19[6 * v21 + 4];
      if (v26)
      {
        if (v22)
        {
          for (uint64_t j = *(unsigned __int8 **)(v17 + 8); ; ++j)
          {
            uint64_t v28 = *v26;
            uint64_t v29 = *j;
            if (v28 == v29)
            {
              if (!*v26) {
                goto LABEL_37;
              }
            }
            else if (byte_1B0DE1758[v28] != byte_1B0DE1758[v29])
            {
              goto LABEL_28;
            }
            ++v26;
          }
        }
        goto LABEL_28;
      }
      if (!v22) {
        break;
      }
    }
LABEL_28:
    if (++v21 == v20) {
      goto LABEL_3;
    }
  }
LABEL_37:
  __int16 v15 = v21 + 1;
  int v34 = v21 + 1;
  if ((v21 & 0x80000000) == 0)
  {
LABEL_6:
    *((_WORD *)i + 10) = v15;
    goto LABEL_7;
  }
LABEL_4:
  if (!sub_1B0D3A5DC(v17, &v34))
  {
    *((_WORD *)i + 10) = 0;
    if (sub_1B0D373A0((uint64_t)a1, (uint64_t)v16, v13, v14, a5, a6, a7, a8)) {
      return 1;
    }
    uint64_t v23 = *(int **)(a2 + 32);
    if (*v23 >= 1)
    {
      uint64_t v24 = 0;
      uint64_t v25 = 2;
      do
      {
        if (!sub_1B0D31DE4(0, v16, *(unsigned __int8 **)&v23[v25], 0xFFFFFFFFLL))
        {
          if (*(void *)(a2 + 112))
          {
            uint64_t v37 = 0;
            uint64_t v38 = a2;
            v35[0] = 0;
            long long v36 = 0u;
            v35[1] = sub_1B0D3A77C;
            sub_1B0D32AB4((uint64_t)v35, (uint64_t)v16);
          }
          *((_WORD *)i + 10) = v24 + 1;
        }
        ++v24;
        uint64_t v23 = *(int **)(a2 + 32);
        v25 += 6;
      }
      while (v24 < *v23);
    }
    goto LABEL_7;
  }
  __int16 v15 = v34;
  if ((v34 - 0x10000) > 0xFFFF0000) {
    goto LABEL_6;
  }
  sub_1B0CEF2BC((uint64_t)v32, "%r %s BY term out of range - should be between 1 and %d", v13, v14, a5, a6, a7, a8, v11 + 1);
  while (1)
  {
    if ((*(unsigned char *)(v17 + 4) & 3) == 0)
    {
      int v31 = *(_DWORD *)(v17 + 56);
      if (v31 > 0) {
        break;
      }
    }
    uint64_t v17 = *(void *)(v17 + 16);
    if (!v17) {
      return 1;
    }
  }
  *(_DWORD *)(*(void *)v32 + 84) = v31;
  return 1;
}

uint64_t *sub_1B0C9AD54(uint64_t *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 4);
  if ((v2 & 0x80) == 0)
  {
    *(_DWORD *)(a2 + 4) = v2 | 0x80;
    uint64_t v3 = *(_DWORD **)(a2 + 40);
    int v4 = *v3;
    if ((int)*v3 >= 1)
    {
      int v5 = 0;
      uint64_t v6 = *result;
      int v7 = (void **)(v3 + 12);
      do
      {
        uint64_t v8 = (uint64_t)*(v7 - 1);
        if ((*(unsigned char *)(v8 + 49) & 0x40) != 0)
        {
          if (*v7)
          {
            uint64_t result = (uint64_t *)sub_1B0D397A4(v6, v8, *v7, 64);
            int v4 = *v3;
          }
        }
        ++v5;
        v7 += 13;
      }
      while (v5 < v4);
    }
  }
  return result;
}

uint64_t sub_1B0C9ADE0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2) {
    return 0;
  }
  uint64_t v9 = *(void *)a1;
  while (1)
  {
    int v12 = *a2;
    if (v12 == 176) {
      int v12 = a2[2];
    }
    if (v12 > 166)
    {
      switch(v12)
      {
        case 167:
          goto LABEL_28;
        case 169:
          if (*((void *)a2 + 9)) {
            goto LABEL_28;
          }
          goto LABEL_16;
        case 174:
          goto LABEL_4;
        case 177:
          int v10 = (unsigned __int8 **)(*((void *)a2 + 4) + 8);
          goto LABEL_5;
        default:
          goto LABEL_16;
      }
    }
    if (v12 == 36)
    {
LABEL_4:
      int v10 = (unsigned __int8 **)(a2 + 16);
LABEL_5:
      int v11 = *v10;
      goto LABEL_6;
    }
    if (v12 == 77) {
      break;
    }
    if (v12 == 113)
    {
      uint64_t v20 = sub_1B0D2719C(a1, *(unsigned __int8 *)(v9 + 100), 0, *((char **)a2 + 1), a5, a6, a7, a8);
      if (!v20) {
        return v20;
      }
LABEL_58:
      if (!*(void *)(v20 + 24)
        && !sub_1B0D2719C(a1, *(unsigned __int8 *)(*(void *)a1 + 100), v20, *(char **)v20, a5, a6, a7, a8))
      {
        return 0;
      }
      return v20;
    }
LABEL_16:
    int v13 = *((_DWORD *)a2 + 1);
    if ((v13 & 0x200) == 0) {
      return 0;
    }
    int v11 = (unsigned __int8 *)*((void *)a2 + 2);
    if (!v11 || (v11[5] & 2) == 0)
    {
      int v11 = (unsigned __int8 *)*((void *)a2 + 3);
      if ((v13 & 0x1000) == 0)
      {
        uint64_t v14 = (unsigned int *)*((void *)a2 + 4);
        if (v14)
        {
          if (!*(unsigned char *)(v9 + 103))
          {
            uint64_t v15 = *v14;
            if ((int)v15 >= 1)
            {
              uint64_t v16 = v14 + 2;
              while ((*(unsigned char *)(*(void *)v16 + 5) & 2) == 0)
              {
                v16 += 6;
                if (!--v15) {
                  goto LABEL_6;
                }
              }
              int v11 = *(unsigned __int8 **)v16;
            }
          }
        }
      }
    }
LABEL_6:
    a2 = v11;
    if (!v11) {
      return 0;
    }
  }
LABEL_28:
  uint64_t v17 = *((unsigned int *)a2 + 12);
  if ((v17 & 0x80000000) != 0) {
    return 0;
  }
  uint64_t v18 = *(void *)(*((void *)a2 + 9) + 8);
  __int16 v19 = *(_WORD *)(v18 + 16 * v17 + 14);
  if ((v19 & 0x200) == 0)
  {
    uint64_t v20 = *(void *)(v9 + 16);
    if (v20) {
      goto LABEL_58;
    }
    return v20;
  }
  uint64_t v21 = *(void *)(v18 + 16 * v17) - 1;
  while (*(unsigned __int8 *)++v21)
    ;
  if ((v19 & 4) != 0)
  {
    while (*(unsigned __int8 *)++v21)
      ;
  }
  uint64_t v24 = (unsigned __int8 *)(v21 + 1);
  uint64_t v25 = *(void *)(v9 + 656);
  if (v25)
  {
    int v26 = *v24;
    if (*v24)
    {
      unsigned int v27 = 0;
      uint64_t v28 = (unsigned __int8 *)(v21 + 2);
      do
      {
        unsigned int v27 = -1640531535 * (v27 + byte_1B0DE1758[v26]);
        int v29 = *v28++;
        int v26 = v29;
      }
      while (v29);
    }
    else
    {
      unsigned int v27 = 0;
    }
    int v31 = (_DWORD *)(v25 + 16 * (v27 % *(_DWORD *)(v9 + 640)));
    uint64_t v30 = (uint64_t *)(v31 + 2);
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v9 + 648);
    int v31 = (_DWORD *)(v9 + 644);
  }
  int v32 = *v31;
  if (v32)
  {
LABEL_47:
    uint64_t v30 = (uint64_t *)*v30;
    uint64_t v33 = (unsigned char *)v30[3];
    for (uint64_t i = v24; ; ++i)
    {
      uint64_t v35 = *v33;
      uint64_t v36 = *i;
      if (v35 == v36)
      {
        if (!*v33) {
          goto LABEL_56;
        }
      }
      else if (byte_1B0DE1758[v35] != byte_1B0DE1758[v36])
      {
        if (!--v32)
        {
          uint64_t v30 = &qword_1E9B52220;
          goto LABEL_56;
        }
        goto LABEL_47;
      }
      ++v33;
    }
  }
  uint64_t v30 = &qword_1E9B52220;
LABEL_56:
  uint64_t v37 = v30[2];
  if (!v37) {
    return 0;
  }
  uint64_t v38 = v37 + 40 * *(unsigned __int8 *)(v9 + 100);
  uint64_t v20 = v38 - 40;
  if (v38 != 40) {
    goto LABEL_58;
  }
  return v20;
}

uint64_t *sub_1B0C9B078(uint64_t *result, int a2, uint64_t a3, unsigned int a4)
{
  if (*(unsigned char *)(*result + 103))
  {
    if (a4 != -11) {
      return sub_1B0C8B9A4((void *)*result, a4, a3);
    }
    return result;
  }
  if (a2 < 0)
  {
    a2 = *((_DWORD *)result + 36) - 1;
    uint64_t v4 = result[17];
    if ((a4 & 0x80000000) != 0) {
      goto LABEL_9;
    }
    return sub_1B0D257F4(result, v4 + 40 * a2, (char *)a3, a4);
  }
  uint64_t v4 = result[17];
  if ((a4 & 0x80000000) == 0) {
    return sub_1B0D257F4(result, v4 + 40 * a2, (char *)a3, a4);
  }
LABEL_9:
  uint64_t v5 = v4 + 40 * a2;
  int v7 = *(unsigned __int8 *)(v5 + 1);
  uint64_t v6 = (unsigned char *)(v5 + 1);
  if (v7) {
    return sub_1B0D257F4(result, v4 + 40 * a2, (char *)a3, a4);
  }
  if (a4 == -3)
  {
    *(_DWORD *)(v4 + 40 * a2 + 16) = a3;
    *uint64_t v6 = -3;
  }
  else if (a3)
  {
    *(void *)(v4 + 40 * a2 + 16) = a3;
    *uint64_t v6 = a4;
    if (a4 == -11) {
      ++*(_DWORD *)(a3 + 24);
    }
  }
  return result;
}

uint64_t sub_1B0C9B128(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a2 + 96);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = v8 == 0;
  }
  if (v9) {
    return result;
  }
  uint64_t v12 = result;
  uint64_t v13 = (*(_DWORD *)(result + 56) + 1);
  *(_DWORD *)(result + 56) = v13;
  *(_DWORD *)(a2 + 8) = v13;
  uint64_t v14 = *(void *)(result + 16);
  if (!v14)
  {
    if (!*(void *)(result + 168) && (*(unsigned char *)(*(void *)result + 96) & 8) == 0) {
      *(unsigned char *)(result + 35) = 1;
    }
    uint64_t v14 = sub_1B0CEF480((uint64_t *)result, a2, a3, a4, a5, a6, a7, a8);
  }
  unsigned int v57 = 0;
  uint64_t v15 = *(unsigned __int8 **)(v8 + 16);
  uint64_t result = sub_1B0D3A5DC((uint64_t)v15, (int *)&v57);
  if (!result)
  {
    uint64_t result = sub_1B0D2F9D0(v12, v15, v13);
    int v25 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v25)
    {
      uint64_t result = sub_1B0D25510(v14, 13, v13, 0, 0, v18, v19, v20);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v25 + 1;
      uint64_t v26 = *(void *)(v14 + 136) + 40 * v25;
      *(_DWORD *)uint64_t v26 = 13;
      *(_DWORD *)(v26 + 4) = v13;
      *(_OWORD *)(v26 + 8) = 0u;
      *(_OWORD *)(v26 + 24) = 0u;
    }
    int v29 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) > v29)
    {
      *(_DWORD *)(v14 + 144) = v29 + 1;
      uint64_t v28 = *(void *)(v14 + 136) + 40 * v29;
      *(_DWORD *)uint64_t v28 = 17;
      *(_DWORD *)(v28 + 4) = v13;
      goto LABEL_26;
    }
    uint64_t v30 = v14;
    uint64_t v31 = 17;
    uint64_t v32 = v13;
LABEL_34:
    uint64_t result = sub_1B0D25510(v30, v31, v32, a3, 0, v18, v19, v20);
    goto LABEL_60;
  }
  unint64_t v21 = v57;
  int v22 = *(_DWORD *)(v14 + 144);
  if (*(_DWORD *)(v14 + 148) > v22)
  {
    *(_DWORD *)(v14 + 144) = v22 + 1;
    uint64_t v23 = *(void *)(v14 + 136) + 40 * v22;
    *(_DWORD *)uint64_t v23 = 71;
    *(_DWORD *)(v23 + 4) = v21;
    *(_DWORD *)(v23 + 8) = v13;
    *(void *)(v23 + 12) = 0;
    *(void *)(v23 + 28) = 0;
    *(void *)(v23 + 20) = 0;
    *(_DWORD *)(v23 + 36) = 0;
    if (v21) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
  uint64_t result = sub_1B0D25510(v14, 71, v57, v13, 0, v18, v19, v20);
  if (!v21)
  {
LABEL_21:
    int v27 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) > v27)
    {
      *(_DWORD *)(v14 + 144) = v27 + 1;
      uint64_t v28 = *(void *)(v14 + 136) + 40 * v27;
      *(void *)uint64_t v28 = 9;
LABEL_26:
      *(_DWORD *)(v28 + 8) = a3;
      *(void *)(v28 + 12) = 0;
      *(void *)(v28 + 28) = 0;
      *(void *)(v28 + 20) = 0;
      *(_DWORD *)(v28 + 36) = 0;
      goto LABEL_60;
    }
    uint64_t v30 = v14;
    uint64_t v31 = 9;
    uint64_t v32 = 0;
    goto LABEL_34;
  }
LABEL_13:
  if ((v21 & 0x80000000) != 0) {
    goto LABEL_60;
  }
  int v24 = *(__int16 *)(a2 + 2);
  if (v21 >= 8)
  {
    __int16 v33 = 40;
    if (v21 < 0x100)
    {
      unint64_t v35 = v21;
      if (v21 < 0x10)
      {
LABEL_42:
        LOBYTE(v38) = v35;
LABEL_43:
        if (v24 <= (__int16)(v33 + word_1B0DE8C5A[v38 & 7] - 10)) {
          goto LABEL_60;
        }
        unint64_t v40 = (int)v21;
        if (v21 >= 8)
        {
          __int16 v42 = 40;
          if (v21 >= 0x100)
          {
            unint64_t v43 = (int)v21;
            do
            {
              v42 += 40;
              unint64_t v40 = v43 >> 4;
              BOOL v36 = v43 > 0xFFF;
              v43 >>= 4;
            }
            while (v36);
          }
          if (v40 < 0x10)
          {
            LOBYTE(v44) = v40;
          }
          else
          {
            do
            {
              v42 += 10;
              unint64_t v44 = v40 >> 1;
              BOOL v36 = v40 > 0x1F;
              v40 >>= 1;
            }
            while (v36);
          }
        }
        else
        {
          __int16 v42 = 40;
          do
          {
            v42 -= 10;
            LOBYTE(v44) = 2 * v40;
            BOOL v39 = v40 >= 4;
            v40 *= 2;
          }
          while (!v39);
        }
        __int16 v41 = v42 + word_1B0DE8C5A[v44 & 7] - 10;
        goto LABEL_59;
      }
    }
    else
    {
      unint64_t v34 = v21;
      do
      {
        v33 += 40;
        unint64_t v35 = v34 >> 4;
        BOOL v36 = v34 > 0xFFF;
        v34 >>= 4;
      }
      while (v36);
      if (v35 < 0x10) {
        goto LABEL_42;
      }
    }
    do
    {
      v33 += 10;
      unint64_t v38 = v35 >> 1;
      BOOL v36 = v35 > 0x1F;
      v35 >>= 1;
    }
    while (v36);
    goto LABEL_43;
  }
  if (v21 >= 2)
  {
    __int16 v33 = 40;
    unint64_t v37 = v21;
    do
    {
      v33 -= 10;
      LOBYTE(v38) = 2 * v37;
      BOOL v39 = v37 >= 4;
      v37 *= 2;
    }
    while (!v39);
    goto LABEL_43;
  }
  if (v24 > 0)
  {
    __int16 v41 = 0;
LABEL_59:
    *(_WORD *)(a2 + 2) = v41;
    *(_DWORD *)(a2 + 4) |= 0x4000u;
  }
LABEL_60:
  uint64_t v45 = *(unsigned __int8 **)(v8 + 24);
  if (v45)
  {
    int v46 = *(_DWORD *)(v12 + 56);
    uint64_t v47 = (v46 + 1);
    *(_DWORD *)(a2 + 12) = v47;
    uint64_t v48 = (v46 + 2);
    *(_DWORD *)(v12 + 56) = v48;
    if (*(void *)(v12 + 16))
    {
      uint64_t result = sub_1B0C9E080((void *)v12, v45, v47, v16, v17, v18, v19, v20);
      if (result != v47)
      {
        uint64_t v49 = result;
        uint64_t v50 = 80;
        if ((v45[6] & 0x40) == 0)
        {
          if (*v45 == 176) {
            uint64_t v50 = 80;
          }
          else {
            uint64_t v50 = 81;
          }
        }
        uint64_t result = *(void *)(v12 + 16);
        int v51 = *(_DWORD *)(result + 144);
        if (*(_DWORD *)(result + 148) <= v51)
        {
          uint64_t result = sub_1B0D25510(result, v50, v49, v47, 0, v18, v19, v20);
        }
        else
        {
          *(_DWORD *)(result + 144) = v51 + 1;
          uint64_t v52 = *(void *)(result + 136) + 40 * v51;
          *(unsigned char *)uint64_t v52 = v50;
          *(_WORD *)(v52 + 2) = 0;
          *(_DWORD *)(v52 + 4) = v49;
          *(_DWORD *)(v52 + 8) = v47;
          *(unsigned char *)(v52 + 1) = 0;
          *(void *)(v52 + 12) = 0;
          *(void *)(v52 + 28) = 0;
          *(void *)(v52 + 20) = 0;
          *(_DWORD *)(v52 + 36) = 0;
        }
      }
    }
    int v53 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v53)
    {
      uint64_t result = sub_1B0D25510(v14, 13, v47, 0, 0, v18, v19, v20);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v53 + 1;
      uint64_t v54 = *(void *)(v14 + 136) + 40 * v53;
      *(_DWORD *)uint64_t v54 = 13;
      *(_DWORD *)(v54 + 4) = v47;
      *(_OWORD *)(v54 + 8) = 0u;
      *(_OWORD *)(v54 + 24) = 0u;
    }
    int v55 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v55)
    {
      return sub_1B0D25510(v14, 160, v13, v48, v47, v18, v19, v20);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v55 + 1;
      uint64_t v56 = *(void *)(v14 + 136) + 40 * v55;
      *(_DWORD *)uint64_t v56 = 160;
      *(_DWORD *)(v56 + 4) = v13;
      *(_DWORD *)(v56 + 8) = v48;
      *(_DWORD *)(v56 + 12) = v47;
      *(void *)(v56 + 24) = 0;
      *(void *)(v56 + 32) = 0;
      *(void *)(v56 + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_1B0C9B61C(uint64_t a1, int *a2, uint64_t a3, int *a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a8;
  __int16 v9 = a7;
  uint64_t v11 = (uint64_t)a2;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)a1;
  uint64_t v250 = 0;
  uint64_t v251 = 0;
  if (a4)
  {
    if (*a4 <= 63) {
      uint64_t v15 = a4;
    }
    else {
      uint64_t v15 = 0;
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  if (*a2 >= 65)
  {
    sub_1B0CEF2BC(a1, "at most %d tables in a join", a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, 64);
    return 0;
  }
  uint64_t v234 = v15;
  if ((a7 & 0x20) != 0) {
    int v16 = 1;
  }
  else {
    int v16 = *a2;
  }
  uint64_t v17 = 120 * v16 + 856;
  uint64_t v18 = sub_1B0D05DC0(v14, v17 + 104);
  if (*(unsigned char *)(v14 + 103))
  {
    if (v18) {
      sub_1B0D05C10((void *)v14, (void *)v18);
    }
    return 0;
  }
  uint64_t v227 = v13;
  *(void *)uint64_t v18 = a1;
  *(void *)(v18 + 8) = v11;
  *(void *)(v18 + 16) = v234;
  *(void *)(v18 + 24) = a5;
  *(void *)(v18 + 40) = -1;
  *(unsigned char *)(v18 + 64) = v16;
  int v19 = *(_DWORD *)(a1 + 68) - 1;
  *(_DWORD *)(a1 + 68) = v19;
  *(_DWORD *)(v18 + 48) = v19;
  *(_DWORD *)(v18 + 52) = v19;
  *(_WORD *)(v18 + 60) = v9;
  *(_WORD *)(v18 + 62) = v8;
  *(_DWORD *)(v18 + 56) = *(__int16 *)(a1 + 216);
  *(_OWORD *)(v18 + 65) = 0u;
  uint64_t v20 = (unsigned char *)(v18 + 65);
  *(void *)(v18 + 32) = a6;
  *(_OWORD *)(v18 + 81) = 0u;
  *(void *)(v18 + 96) = 0;
  uint64_t v224 = v18 + 856;
  uint64_t v21 = v18;
  bzero((void *)(v18 + 856), 120 * v16 + 104);
  *(void *)(v21 + 596) = 0xFFFFFF9D00000000;
  uint64_t v247 = v21;
  uint64_t v248 = v21 + 104;
  uint64_t v22 = v21 + v17;
  uint64_t v249 = v22;
  *(void *)(v22 + 64) = v21 + v17 + 80;
  *(_WORD *)(v22 + 52) = 0;
  *(_WORD *)(v22 + 56) = 3;
  *(_DWORD *)(v22 + 48) = 0;
  *(unsigned char *)(v21 + 121) = 0;
  *(void *)(v21 + 104) = v21;
  *(void *)(v21 + 112) = 0;
  *(_DWORD *)(v21 + 132) = 0;
  *(void *)(v21 + 124) = 0x800000000;
  uint64_t v246 = v21;
  *(void *)(v21 + 136) = v21 + 144;
  uint64_t v239 = (uint64_t *)(v21 + 104);
  sub_1B0D422F0(v21 + 104, a3, 44);
  uint64_t v245 = a1;
  int v231 = v16;
  uint64_t v230 = v14;
  __int16 v228 = v9;
  unsigned int v226 = v8;
  if (v16)
  {
    uint64_t v29 = 0;
    uint64_t v30 = v21;
    do
    {
      uint64_t v31 = (int *)v11;
      uint64_t v32 = v11 + 104 * v29;
      int v34 = *(_DWORD *)(v32 + 72);
      __int16 v33 = (_DWORD *)(v32 + 72);
      uint64_t v35 = *(int *)(v30 + 596);
      *(_DWORD *)(v30 + 596) = v35 + 1;
      *(_DWORD *)(v30 + 4 * v35 + 600) = v34;
      if ((*(_WORD *)((unsigned char *)v33 - 3) & 4) != 0)
      {
        uint64_t v36 = v11 + 104 * v29;
        unint64_t v37 = *(int **)(v36 + 96);
        if (v37)
        {
          if (*v37 >= 1)
          {
            uint64_t v38 = 0;
            uint64_t v39 = 0;
            uint64_t v40 = *(void *)(v36 + 40);
            while ((int)v39 < *(__int16 *)(v40 + 54))
            {
              uint64_t v41 = v39 << 32;
              uint64_t v42 = *(__int16 *)(v40 + 54) - (uint64_t)(int)v39;
              unint64_t v43 = (__int16 *)(*(void *)(v40 + 8) + 16 * (int)v39 + 14);
              while (1)
              {
                __int16 v44 = *v43;
                v43 += 8;
                if ((v44 & 2) != 0) {
                  break;
                }
                v41 += 0x100000000;
                LODWORD(v39) = v39 + 1;
                if (!--v42) {
                  goto LABEL_16;
                }
              }
              uint64_t v45 = sub_1B0D05DC0(*(void *)v245, 0x50uLL);
              uint64_t v30 = v246;
              if (v45)
              {
                uint64_t v46 = v45;
                *(_OWORD *)(v45 + 32) = 0u;
                *(_OWORD *)(v45 + 48) = 0u;
                *(_OWORD *)(v45 + 64) = 0u;
                *(_OWORD *)uint64_t v45 = 0u;
                *(_OWORD *)(v45 + 16) = 0u;
                *(unsigned char *)uint64_t v45 = -89;
                *(_WORD *)(v45 + 52) = -1;
                *(_DWORD *)(v45 + 40) = 1;
                *(_DWORD *)(v45 + 44) = *v33;
                *(_DWORD *)(v45 + 48) = v39;
                *(void *)(v45 + 72) = v40;
                if ((*(unsigned char *)(v40 + 48) & 0x60) == 0) {
                  goto LABEL_33;
                }
                if ((*(_WORD *)(*(void *)(v40 + 8) + (v41 >> 28) + 14) & 0x60) != 0)
                {
                  int v47 = *(__int16 *)(v40 + 54);
                  uint64_t v48 = v47 <= 63 ? ~(-1 << v47) : -1;
                }
                else
                {
LABEL_33:
                  char v49 = (int)v39 >= 63 ? 63 : v39;
                  uint64_t v48 = 1 << v49;
                }
                *(void *)&v31[26 * v29 + 22] |= v48;
                uint64_t v50 = *(unsigned __int8 **)&v37[6 * v38 + 2];
                if (v50)
                {
                  int v51 = (uint64_t *)v245;
                  uint64_t v52 = sub_1B0CAE048(*(void *)v245, v50, 0, 0);
                }
                else
                {
                  uint64_t v52 = 0;
                  int v51 = (uint64_t *)v245;
                }
                uint64_t v39 = (v39 + 1);
                uint64_t v53 = sub_1B0D28CCC(v51, 174, (uint64_t)v52, 0);
                uint64_t v54 = sub_1B0D28CCC(v51, 53, v46, v53);
                uint64_t v55 = v54;
                uint64_t v56 = (*(unsigned char *)(v33 - 1) & 0x18) != 0 ? 1 : 2;
                sub_1B0D3A514(v54, *v33, v56);
                sub_1B0CB3AF4((uint64_t)v239, v55, 1);
                ++v38;
                uint64_t v30 = v246;
                if (v38 < *v37) {
                  continue;
                }
              }
              goto LABEL_17;
            }
LABEL_16:
            sub_1B0CEF2BC(v245, "too many arguments on %s() - max %d", v23, v24, v25, v26, v27, v28, *(void *)v40);
            uint64_t v30 = v246;
          }
        }
      }
LABEL_17:
      ++v29;
      uint64_t v11 = (uint64_t)v31;
    }
    while (v29 < *v31);
  }
  else
  {
    if (v234) {
      *uint64_t v20 = *v234;
    }
    if ((v9 & 0x100) != 0 && (*(unsigned char *)(v14 + 96) & 0x10) == 0) {
      *(unsigned char *)(v21 + 67) = 1;
    }
    sub_1B0D33724((uint64_t *)a1, 0, "SCAN CONSTANT ROW", v24, v25, v26, v27, v28, v223);
    uint64_t v30 = v21;
  }
  int v57 = *(_DWORD *)(v30 + 124);
  if (v57 >= 1)
  {
    unsigned int v58 = v57 + 1;
    do
    {
      sub_1B0CB3D04((int *)v11, v239, v58 - 2, v24, v25, v26, v27, v28, v223);
      --v58;
    }
    while (v58 > 1);
  }
  uint64_t v59 = v245;
  if (a6 && *(void *)(a6 + 96)) {
    sub_1B0D423B4((unsigned __int8 *)v239, a6);
  }
  uint64_t v60 = v246;
  if (*(_DWORD *)(v245 + 48)) {
    goto LABEL_141;
  }
  if (*(int *)(v246 + 132) >= 1)
  {
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = v239;
    do
    {
      uint64_t v64 = v63[4] + v61;
      if ((*(_WORD *)(v64 + 18) & 2) == 0 && !*(void *)(v64 + 48))
      {
        uint64_t v65 = *(void *)v64;
        if (!v231) {
          goto LABEL_68;
        }
        *((void *)&v254 + 1) = 0;
        *(_OWORD *)uint64_t v255 = 0u;
        uint64_t v252 = 0;
        *(_WORD *)&v255[4] = 1;
        int v253 = sub_1B0D4ADD8;
        *(void *)&long long v254 = sub_1B0D32AA8;
        if (!v65 || (sub_1B0D32AB4((uint64_t)&v252, v65), uint64_t v60 = v246, *(_WORD *)&v255[4]))
        {
LABEL_68:
          if ((*(unsigned char *)(v65 + 4) & 2) == 0 || (*(unsigned char *)(v11 + 68) & 0x40) == 0)
          {
            sub_1B0CC2204(v245, v65);
            uint64_t v60 = v246;
            *(_WORD *)(v64 + 18) |= 4u;
          }
        }
      }
      ++v62;
      uint64_t v63 = (uint64_t *)v248;
      v61 += 56;
    }
    while (v62 < *(int *)(v248 + 28));
  }
  if ((v228 & 0x100) == 0) {
    goto LABEL_77;
  }
  if ((*(unsigned char *)(v230 + 96) & 0x10) == 0)
  {
    if (sub_1B0D42508(v245, v11, (uint64_t)v239, a5))
    {
      *(unsigned char *)(v246 + 67) = 1;
    }
    else if (!v234)
    {
      *(_WORD *)(v246 + 60) |= 0x80u;
      *(void *)(v246 + 16) = a5;
    }
LABEL_77:
    __int16 v66 = v228;
    goto LABEL_78;
  }
  __int16 v66 = v228 & 0xFEFF;
  *(_WORD *)(v60 + 60) &= ~0x100u;
LABEL_78:
  __int16 v229 = v66;
  uint64_t v67 = v247;
  uint64_t v225 = v11;
  if (v231 != 1) {
    goto LABEL_82;
  }
  if ((*(_WORD *)(v247 + 60) & 0x20) != 0) {
    goto LABEL_82;
  }
  uint64_t v68 = *(void *)(v247 + 8);
  uint64_t v69 = *(void *)(v68 + 40);
  if (*(unsigned char *)(v69 + 63) == 1 || (*(_WORD *)(v68 + 69) & 3) != 0) {
    goto LABEL_82;
  }
  uint64_t v257 = 0;
  long long v256 = 0u;
  memset(&v255[8], 0, 48);
  int v110 = *(_DWORD *)(v68 + 72);
  uint64_t v241 = v247;
  uint64_t v111 = v247 + 104;
  uint64_t v112 = v249;
  *(_DWORD *)(v249 + 48) = 0;
  *(_WORD *)(v112 + 54) = 0;
  uint64_t v252 = v67 + 104;
  int v253 = (uint64_t (*)(uint64_t, unsigned __int8 *))(v67 + 104);
  long long v254 = 0uLL;
  *(void *)uint64_t v255 = 0x8200000000;
  *(_DWORD *)&v255[12] = v110;
  *(_WORD *)&v255[9] = 257;
  LOWORD(v256) = -1;
  while (1)
  {
    uint64_t v113 = sub_1B0D4AF5C(&v252);
    if (!v113) {
      break;
    }
    if (!*((void *)v113 + 5))
    {
      *(_DWORD *)(v112 + 48) = 4353;
      **(void **)(v112 + 64) = v113;
      *(_WORD *)(v112 + 52) = 1;
      *(_WORD *)(v112 + 24) = 1;
      __int16 v114 = 33;
      uint64_t v60 = v246;
      goto LABEL_152;
    }
  }
  uint64_t v115 = *(void *)(v69 + 16);
  uint64_t v60 = v246;
  while (v115)
  {
    if (*(unsigned char *)(v115 + 98) && !*(void *)(v115 + 72) && *(unsigned __int16 *)(v115 + 94) <= 3u)
    {
      if ((*(_WORD *)(v115 + 99) & 8) != 0) {
        int v116 = 130;
      }
      else {
        int v116 = 2;
      }
      if (*(_WORD *)(v115 + 94))
      {
        unint64_t v117 = 0;
        while (1)
        {
          uint64_t v252 = v111;
          int v253 = (uint64_t (*)(uint64_t, unsigned __int8 *))v111;
          v255[8] = 0;
          long long v254 = 0uLL;
          *(_DWORD *)uint64_t v255 = 0;
          *(_DWORD *)&v255[4] = v116;
          *(_DWORD *)&v255[12] = v110;
          *(_WORD *)&v255[9] = 257;
          unsigned int v118 = *(__int16 *)(*(void *)(v115 + 8) + 2 * v117);
          uint64_t v119 = *(void *)(v115 + 24);
          if (*(unsigned __int16 *)(v119 + 52) == *(unsigned __int16 *)(*(void *)(v115 + 8) + 2 * v117))
          {
            LOWORD(v118) = -1;
          }
          else if ((v118 & 0x80000000) != 0)
          {
            if (v118 == -2)
            {
              *((void *)&v254 + 1) = *(void *)(*(void *)(v115 + 80) + 24 * v117 + 8);
              *(void *)&long long v254 = *(void *)(*(void *)(v115 + 64) + 8 * v117);
              LOWORD(v256) = -2;
              int v120 = sub_1B0D4B2B8((uint64_t)&v252);
              goto LABEL_173;
            }
          }
          else
          {
            v255[8] = *(unsigned char *)(*(void *)(v119 + 8) + 16 * v118 + 9);
            *(void *)&long long v254 = *(void *)(*(void *)(v115 + 64) + 8 * v117);
          }
          LOWORD(v256) = v118;
          int v120 = sub_1B0D4AF5C(&v252);
LABEL_173:
          if (!v120)
          {
LABEL_155:
            uint64_t v60 = v246;
            goto LABEL_156;
          }
          while (*((void *)v120 + 5))
          {
            int v120 = sub_1B0D4AF5C(&v252);
            if (!v120) {
              goto LABEL_155;
            }
          }
          *(void *)(*(void *)(v112 + 64) + 8 * v117++) = v120;
          uint64_t v60 = v246;
          if (v117 >= *(unsigned __int16 *)(v115 + 94)) {
            goto LABEL_156;
          }
        }
      }
      LODWORD(v117) = 0;
LABEL_156:
      if (v117 == *(unsigned __int16 *)(v115 + 94))
      {
        *(_DWORD *)(v112 + 48) = 4609;
        if ((*(_WORD *)(v115 + 99) & 0x20) != 0 || (*(void *)(v115 + 104) & *(void *)(v68 + 88)) == 0) {
          *(_DWORD *)(v112 + 48) = 4673;
        }
        *(_WORD *)(v112 + 52) = v117;
        *(_WORD *)(v112 + 24) = v117;
        __int16 v114 = 39;
        *(void *)(v112 + 32) = v115;
LABEL_152:
        *(_WORD *)(v112 + 20) = v114;
        break;
      }
    }
    uint64_t v115 = *(void *)(v115 + 40);
  }
  int v121 = *(_DWORD *)(v112 + 48);
  if (v121)
  {
    *(_WORD *)(v112 + 22) = 1;
    *(void *)(v241 + 952) = v112;
    *(void *)(v112 + 8) = 1;
    *(_DWORD *)(v241 + 860) = v110;
    *(_WORD *)(v241 + 70) = 1;
    uint64_t v122 = *(_DWORD **)(v241 + 16);
    if (v122) {
      *(unsigned char *)(v241 + 65) = *v122;
    }
    uint64_t v59 = v245;
    int v102 = v231;
    if ((*(_WORD *)(v241 + 60) & 0x100) != 0) {
      *(unsigned char *)(v241 + 67) = 1;
    }
    if (v255[9] >= 2u) {
      *(_DWORD *)(v112 + 48) = v121 | 0x200000;
    }
    goto LABEL_187;
  }
  uint64_t v67 = v247;
LABEL_82:
  unint64_t v70 = *(void *)(v67 + 8) + 8;
  unint64_t v71 = v70 + 104 * *(unsigned __int8 *)(v67 + 64);
  uint64_t v237 = **(void **)v67;
  uint64_t v72 = v249;
  HIDWORD(v251) = 20000;
  if (v70 < v71)
  {
    BOOL v73 = 0;
    int v74 = 0;
    char v75 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = v67 + 604;
    uint64_t v240 = v67;
    uint64_t v243 = v249;
    do
    {
      *(unsigned char *)(v72 + 16) = v75;
      HIDWORD(v251) += 1000;
      int v79 = *(_DWORD *)(v70 + 64);
      int v80 = *(_DWORD *)(v67 + 600);
      if (v80 == v79)
      {
        uint64_t v81 = 1;
      }
      else
      {
        uint64_t v82 = *(unsigned int *)(v67 + 596);
        if ((int)v82 < 2)
        {
LABEL_92:
          uint64_t v81 = 0;
        }
        else
        {
          uint64_t v83 = 0;
          uint64_t v84 = v82 - 1;
          while (*(_DWORD *)(v78 + 4 * v83) != v79)
          {
            if (v84 == ++v83) {
              goto LABEL_92;
            }
          }
          uint64_t v81 = 1 << (v83 + 1);
        }
      }
      *(void *)(v72 + 8) = v81;
      unsigned int v85 = *(unsigned __int8 *)(v70 + 60);
      int v86 = v74 | v85 & 0x62;
      if (v73) {
        uint64_t v87 = v77;
      }
      else {
        uint64_t v87 = 0;
      }
      int v88 = (v85 & 0x40) != 0 || v73;
      int v89 = (v85 >> 4) & 1;
      if (v86) {
        uint64_t v90 = v77 | v76;
      }
      else {
        uint64_t v90 = v87;
      }
      if (v86) {
        int v74 = v89;
      }
      else {
        int v74 = 0;
      }
      if (v86) {
        BOOL v73 = v88;
      }
      else {
        BOOL v73 = v73;
      }
      if (*(unsigned char *)(*(void *)(v70 + 32) + 63) == 1)
      {
        unint64_t v91 = v70 + 104;
        if (v70 + 104 >= v71)
        {
          uint64_t v92 = 0;
        }
        else
        {
          uint64_t v92 = 0;
          unint64_t v93 = v70;
          do
          {
            unint64_t v95 = v91;
            if (v92 || (*(unsigned char *)(v93 + 164) & 0x22) != 0)
            {
              int v96 = *(_DWORD *)(v93 + 168);
              if (v80 == v96)
              {
                uint64_t v94 = 1;
              }
              else
              {
                uint64_t v97 = *(unsigned int *)(v67 + 596);
                if ((int)v97 < 2)
                {
LABEL_122:
                  uint64_t v94 = 0;
                }
                else
                {
                  uint64_t v98 = 0;
                  uint64_t v99 = v97 - 1;
                  while (*(_DWORD *)(v78 + 4 * v98) != v96)
                  {
                    if (v99 == ++v98) {
                      goto LABEL_122;
                    }
                  }
                  uint64_t v94 = 1 << (v98 + 1);
                }
              }
              v92 |= v94;
            }
            else
            {
              uint64_t v92 = 0;
            }
            unint64_t v91 = v95 + 104;
            unint64_t v93 = v95;
          }
          while (v95 + 104 < v71);
        }
        uint64_t v77 = v90;
        int v100 = sub_1B0D4B3E4((uint64_t)&v247, v90, v92);
        if (v100) {
          goto LABEL_131;
        }
      }
      else
      {
        uint64_t v77 = v90;
        int v100 = sub_1B0D4BDB4(&v247, v90);
        uint64_t v92 = 0;
        if (v100) {
          goto LABEL_131;
        }
      }
      if (!*(unsigned char *)(v248 + 17))
      {
        uint64_t v72 = v243;
        v76 |= *(void *)(v243 + 8);
        goto LABEL_135;
      }
      int v100 = sub_1B0D4C73C(&v247, v77, v92);
LABEL_131:
      uint64_t v72 = v243;
      v76 |= *(void *)(v243 + 8);
      if (v100 == 101)
      {
        sqlite3_log(28, "abbreviated query algorithm search");
        goto LABEL_85;
      }
      if (v100) {
        goto LABEL_137;
      }
LABEL_135:
      if (*(unsigned char *)(v237 + 103)) {
        break;
      }
LABEL_85:
      ++v75;
      v70 += 104;
      uint64_t v67 = v240;
    }
    while (v70 < v71);
  }
  int v100 = 0;
LABEL_137:
  int v101 = *(void **)(v72 + 64);
  if (v101 != (void *)(v72 + 80))
  {
    sub_1B0D05C10((void *)v237, v101);
    *(void *)(v72 + 64) = v72 + 80;
    *(_WORD *)(v72 + 56) = 3;
  }
  sub_1B0D4DCB8((void *)v237, v72);
  *(_WORD *)(v72 + 52) = 0;
  *(_DWORD *)(v72 + 48) = 0;
  uint64_t v59 = v245;
  uint64_t v60 = v246;
  uint64_t v11 = v225;
  int v102 = v231;
  if (v100 || (sub_1B0D427C0(v246, 0), uint64_t v60 = v246, *(unsigned char *)(v230 + 103)))
  {
LABEL_141:
    if (v60) {
      goto LABEL_142;
    }
    return v60;
  }
  if (*(void *)(v246 + 16))
  {
    sub_1B0D427C0(v246, (__int16)(*(_WORD *)(v246 + 70) + 1));
    uint64_t v60 = v246;
    if (*(unsigned char *)(v230 + 103)) {
      goto LABEL_142;
    }
LABEL_187:
    if (*(void *)(v60 + 16)) {
      goto LABEL_190;
    }
  }
  if ((*(unsigned char *)(v230 + 49) & 0x10) != 0)
  {
    sub_1B0D43354(v60);
    uint64_t v60 = v246;
  }
LABEL_190:
  if (*(_DWORD *)(v59 + 48)) {
    goto LABEL_142;
  }
  unsigned int v123 = *(unsigned __int8 *)(v60 + 64);
  uint64_t v124 = -1;
  if ((v229 & 0x400) != 0)
  {
    uint64_t v125 = v227;
  }
  else
  {
    uint64_t v125 = v227;
    if (a5 && v123 >= 2)
    {
      int v126 = *(_DWORD *)(v230 + 96);
      if ((v126 & 0x100) != 0) {
        goto LABEL_200;
      }
      uint64_t v127 = sub_1B0D433C4(v60);
      uint64_t v60 = v246;
      uint64_t v124 = v127;
      unsigned int v123 = *(unsigned __int8 *)(v246 + 64);
      int v102 = v123;
    }
  }
  if (v123 < 2) {
    goto LABEL_202;
  }
  int v126 = *(_DWORD *)(v230 + 96);
LABEL_200:
  if ((v126 & 0x80000) == 0)
  {
    sub_1B0D43734(v60);
    uint64_t v60 = v246;
  }
LABEL_202:
  *(_WORD *)(*(void *)v60 + 216) += *(_WORD *)(v60 + 70);
  if ((v229 & 4) != 0)
  {
    uint64_t v218 = *(void *)(v60 + 952);
    int v219 = *(_DWORD *)(v218 + 48);
    if ((v219 & 0x1000) != 0)
    {
      uint64_t v220 = *(void *)(v11 + 40);
      char v221 = 1;
    }
    else
    {
      if ((v229 & 8) == 0) {
        goto LABEL_203;
      }
      uint64_t v220 = *(void *)(v11 + 40);
      if (*(unsigned char *)(v220 + 63) == 1 || (v229 & 0x10) == 0 && (v219 & 0x2000) != 0) {
        goto LABEL_203;
      }
      if ((*(unsigned char *)(v230 + 99) & 8) != 0) {
        goto LABEL_203;
      }
      char v221 = 2;
    }
    __int16 v238 = 0;
    *(unsigned char *)(v60 + 66) = v221;
    if ((v219 & 0x40) != 0 && (*(_DWORD *)(v220 + 48) & 0x80) == 0)
    {
      __int16 v238 = v229 & 8;
      *(_DWORD *)(v218 + 48) = v219 & 0xFFFFFFBF;
    }
    goto LABEL_204;
  }
LABEL_203:
  __int16 v238 = 0;
LABEL_204:
  if (v102 < 1)
  {
    int v222 = *(_DWORD *)(v125 + 144);
    *(_DWORD *)(v60 + 72) = v222;
    if (*(unsigned char *)(v230 + 103)) {
      goto LABEL_142;
    }
LABEL_349:
    *(_DWORD *)(v60 + 76) = v222;
    return v60;
  }
  uint64_t v235 = v124;
  unsigned int v232 = v102;
  int v128 = 0;
  int v244 = v229 & 0x20;
  BOOL v129 = (v229 & 0x20) == 0 || v226 == 0;
  BOOL v242 = v129;
  uint64_t v130 = v224;
  do
  {
    unsigned int v134 = *(unsigned __int8 *)(v130 + 64);
    uint64_t v135 = v11 + 104 * *(unsigned __int8 *)(v130 + 64);
    uint64_t v138 = *(void *)(v135 + 40);
    uint64_t v136 = v135 + 40;
    uint64_t v137 = v138;
    uint64_t v139 = *(void *)(v138 + 96);
    if (v139)
    {
      uint64_t v140 = (uint64_t *)(*(void *)(v230 + 32) + 24);
      LODWORD(v141) = -1;
      do
      {
        uint64_t v142 = *v140;
        v140 += 4;
        uint64_t v141 = (v141 + 1);
      }
      while (v142 != v139);
    }
    else
    {
      uint64_t v141 = 4294934528;
    }
    uint64_t v143 = *(void *)(v130 + 96);
    uint64_t v144 = v130;
    uint64_t v145 = v143;
    if ((*(unsigned char *)(v137 + 49) & 0x40) == 0)
    {
      int v146 = *(unsigned __int8 *)(v137 + 63);
      if (v146 != 2)
      {
        if ((*(_DWORD *)(v143 + 48) & 0x400) != 0)
        {
          for (uint64_t i = *(void **)(v137 + 80); i; uint64_t i = (void *)i[5])
          {
            if (*i == v230) {
              break;
            }
          }
          sub_1B0CCB908((uint64_t *)v227, 173, *(unsigned int *)(v225 + 104 * *(unsigned __int8 *)(v130 + 64) + 72), 0, 0, (uint64_t)i, 4294967285, v108);
          uint64_t v60 = v246;
          uint64_t v130 = v144;
        }
        else if (v146 != 1)
        {
          if (*(_DWORD *)(v143 + 48) & 0x40 | v244
            && (*(unsigned char *)(v225 + 104 * *(unsigned __int8 *)(v130 + 64) + 68) & 0x50) == 0)
          {
            sub_1B0D2FB04(v59, v141, *(_DWORD *)(v137 + 40), 0, *(void *)v137);
            uint64_t v130 = v144;
            uint64_t v60 = v246;
          }
          else
          {
            if (*(unsigned char *)(v60 + 66))
            {
              uint64_t v147 = v225;
              *(_DWORD *)(v60 + 40) = *(_DWORD *)(v225 + 104 * *(unsigned __int8 *)(v130 + 64) + 72);
              uint64_t v148 = 113;
              uint64_t v149 = v60;
            }
            else
            {
              uint64_t v148 = 112;
              uint64_t v149 = v60;
              uint64_t v147 = v225;
            }
            sub_1B0C9CD14((void *)v59, *(unsigned int *)(v147 + 104 * v134 + 72), v141, v137, v148, v106, v107, v108);
            int v193 = *(unsigned __int8 *)(v149 + 66);
            uint64_t v60 = v149;
            uint64_t v143 = v145;
            if (!v193
              && *(__int16 *)(v137 + 54) <= 63
              && (*(unsigned char *)(v137 + 48) & 0xE0) == 0
              && (*(_DWORD *)(v145 + 48) & 0x404000) == 0)
            {
              unint64_t v194 = *(void *)(v225 + 104 * v134 + 88);
              if (v194)
              {
                uint64_t v195 = 0;
                do
                {
                  ++v195;
                  BOOL v196 = v194 > 1;
                  v194 >>= 1;
                }
                while (v196);
              }
              else
              {
                uint64_t v195 = 0;
              }
              sub_1B0C9B078((uint64_t *)v227, -1, v195, 0xFFFFFFFD);
              uint64_t v59 = v245;
              uint64_t v60 = v246;
              uint64_t v143 = v145;
            }
            int v197 = *(_DWORD *)(v227 + 144);
            BOOL v165 = __OFSUB__(v197, 1);
            int v198 = v197 - 1;
            uint64_t v130 = v144;
            if (v198 < 0 == v165) {
              *(_WORD *)(*(void *)(v227 + 136) + 40 * v198 + 2) = v238;
            }
          }
        }
      }
    }
    if ((*(unsigned char *)(v143 + 49) & 2) != 0)
    {
      uint64_t v151 = *(void *)(v143 + 32);
      if ((*(unsigned char *)(v137 + 48) & 0x80) != 0 && (v229 & 0x20) != 0 && (*(_WORD *)(v151 + 99) & 3) == 2)
      {
        *(_DWORD *)(v130 + 8) = *(_DWORD *)(v130 + 4);
      }
      else
      {
        if (*(unsigned char *)(v60 + 66))
        {
          uint64_t v152 = *(void *)(*(void *)v136 + 16);
          if (v152) {
            BOOL v153 = v152 == v151;
          }
          else {
            BOOL v153 = 1;
          }
          uint64_t v154 = v226;
          if (!v153)
          {
            LODWORD(v154) = v226;
            do
            {
              uint64_t v154 = (v154 + 1);
              uint64_t v152 = *(void *)(v152 + 40);
              if (v152) {
                BOOL v155 = v152 == v151;
              }
              else {
                BOOL v155 = 1;
              }
            }
            while (!v155);
          }
          *(_DWORD *)(v60 + 44) = v154;
          uint64_t v156 = 113;
        }
        else if (v242)
        {
          uint64_t v154 = *(unsigned int *)(v59 + 52);
          *(_DWORD *)(v59 + 52) = v154 + 1;
          if ((*(_WORD *)(v151 + 99) & 0x800) != 0 && (*(unsigned char *)(v230 + 99) & 1) == 0)
          {
            sub_1B0D437F4((uint64_t *)v59, v151, v154, v136 - 32);
            uint64_t v130 = v144;
          }
          uint64_t v156 = 112;
        }
        else
        {
          uint64_t v156 = 101;
          uint64_t v154 = v226;
        }
        *(_DWORD *)(v130 + 8) = v154;
        uint64_t v157 = *(unsigned int *)(v151 + 88);
        int v158 = *(_DWORD *)(v227 + 144);
        if (*(_DWORD *)(v227 + 148) <= v158)
        {
          sub_1B0D25510(v227, v156, v154, v157, v141, v106, v107, v108);
        }
        else
        {
          *(_DWORD *)(v227 + 144) = v158 + 1;
          uint64_t v159 = *(void *)(v227 + 136) + 40 * v158;
          *(unsigned char *)uint64_t v159 = v156;
          *(_WORD *)(v159 + 2) = 0;
          *(_DWORD *)(v159 + 4) = v154;
          *(_DWORD *)(v159 + 8) = v157;
          *(_DWORD *)(v159 + 12) = v141;
          *(unsigned char *)(v159 + 1) = 0;
          *(void *)(v159 + 24) = 0;
          *(void *)(v159 + 32) = 0;
          *(void *)(v159 + 16) = 0;
        }
        uint64_t v160 = *(void *)(v59 + 16);
        uint64_t v161 = sub_1B0D2FDAC((_DWORD *)v59, v151);
        uint64_t v60 = v246;
        uint64_t v130 = v144;
        if (v161)
        {
          if (*(unsigned char *)(*(void *)v160 + 103))
          {
            if (!*(void *)(*(void *)v160 + 816))
            {
              BOOL v153 = (*(_DWORD *)v161)-- == 1;
              if (v153)
              {
                sub_1B0D15C20(*(void **)(v161 + 16), (void *)v161);
                uint64_t v130 = v144;
                uint64_t v60 = v246;
              }
            }
          }
          else
          {
            uint64_t v162 = *(void *)(v160 + 136) + 40 * *(int *)(v160 + 144);
            *(unsigned char *)(v162 - 39) = -8;
            *(void *)(v162 - 24) = v161;
          }
        }
        int v163 = *(_DWORD *)(v145 + 48);
        if ((v163 & 0xF) != 0 && (v163 & 0x188002) == 0 && (*(_WORD *)(v60 + 60) & 1) == 0 && *(unsigned char *)(v60 + 67) != 2)
        {
          int v164 = *(_DWORD *)(v227 + 144);
          BOOL v165 = __OFSUB__(v164, 1);
          int v166 = v164 - 1;
          if (v166 < 0 == v165) {
            *(_WORD *)(*(void *)(v227 + 136) + 40 * v166 + 2) = 2;
          }
        }
      }
    }
    if ((v141 & 0x80000000) == 0)
    {
      uint64_t v167 = *(void *)(v59 + 168) ? *(void *)(v59 + 168) : v59;
      int v168 = *(_DWORD *)(v167 + 124);
      if ((v168 & (1 << v141)) == 0)
      {
        *(_DWORD *)(v167 + 124) = v168 | (1 << v141);
        if (v141 == 1)
        {
          sub_1B0D0E7A4(v167);
          uint64_t v130 = v144;
          uint64_t v60 = v246;
        }
      }
    }
    uint64_t v11 = v225;
    if ((*(unsigned char *)(v225 + 104 * v134 + 68) & 0x10) != 0)
    {
      uint64_t v169 = v60;
      uint64_t v170 = sub_1B0D05DC0(**(void **)v60, 0x24uLL);
      if (v170)
      {
        uint64_t v171 = v170;
        *(void *)uint64_t v170 = *(void *)(v169 + 88);
        *(void *)(v170 + 8) = 20;
        *(void *)(v169 + 88) = v170;
        int v172 = *(_DWORD *)(v59 + 52);
        *(_DWORD *)(v170 + 16) = v172;
        uint64_t v173 = (unsigned int *)(v170 + 16);
        *(void *)(v144 + 56) = v170 + 16;
        uint64_t v174 = (*(_DWORD *)(v59 + 56) + 1);
        *(_DWORD *)(v59 + 52) = v172 + 1;
        *(_DWORD *)(v59 + 56) = v174;
        *(_DWORD *)(v170 + 20) = v174;
        int v175 = *(_DWORD *)(v227 + 144);
        if (*(_DWORD *)(v227 + 148) <= v175)
        {
          sub_1B0D25510(v227, 77, 0x10000, v174, 0, v106, v107, v108);
        }
        else
        {
          *(_DWORD *)(v227 + 144) = v175 + 1;
          uint64_t v176 = *(void *)(v227 + 136) + 40 * v175;
          *(void *)uint64_t v176 = 0x100000000004DLL;
          *(_DWORD *)(v176 + 8) = v174;
          *(void *)(v176 + 12) = 0;
          *(void *)(v176 + 28) = 0;
          *(void *)(v176 + 20) = 0;
          *(_DWORD *)(v176 + 36) = 0;
        }
        uint64_t v177 = (*(_DWORD *)(v59 + 56) + 1);
        *(_DWORD *)(v59 + 56) = v177;
        *(_DWORD *)(v171 + 24) = v177;
        int v178 = *(_DWORD *)(v227 + 144);
        if (*(_DWORD *)(v227 + 148) <= v178)
        {
          sub_1B0D25510(v227, 75, 0, v177, 0, v106, v107, v108);
        }
        else
        {
          *(_DWORD *)(v227 + 144) = v178 + 1;
          uint64_t v179 = *(void *)(v227 + 136) + 40 * v178;
          *(void *)uint64_t v179 = 75;
          *(_DWORD *)(v179 + 8) = v177;
          *(void *)(v179 + 12) = 0;
          *(void *)(v179 + 28) = 0;
          *(void *)(v179 + 20) = 0;
          *(_DWORD *)(v179 + 36) = 0;
        }
        uint64_t v180 = v145;
        if ((*(unsigned char *)(v137 + 48) & 0x80) != 0)
        {
          for (uint64_t j = *(void *)(v137 + 16); j; uint64_t j = *(void *)(j + 40))
          {
            if ((*(_WORD *)(j + 99) & 3) == 2) {
              break;
            }
          }
          uint64_t v185 = *v173;
          uint64_t v186 = *(unsigned __int16 *)(j + 94);
          int v187 = *(_DWORD *)(v227 + 144);
          if (*(_DWORD *)(v227 + 148) <= v187)
          {
            sub_1B0D25510(v227, 118, v185, v186, 0, v106, v107, v108);
          }
          else
          {
            *(_DWORD *)(v227 + 144) = v187 + 1;
            uint64_t v188 = *(void *)(v227 + 136) + 40 * v187;
            *(_DWORD *)uint64_t v188 = 118;
            *(_DWORD *)(v188 + 4) = v185;
            *(_DWORD *)(v188 + 8) = v186;
            *(void *)(v188 + 12) = 0;
            *(void *)(v188 + 28) = 0;
            *(void *)(v188 + 20) = 0;
            *(_DWORD *)(v188 + 36) = 0;
          }
          uint64_t v192 = *(void *)(v59 + 16);
          uint64_t v190 = sub_1B0D2FDAC((_DWORD *)v59, j);
          uint64_t v60 = v246;
          uint64_t v130 = v144;
          uint64_t v180 = v145;
          if (!v190) {
            goto LABEL_211;
          }
          uint64_t v191 = *(void *)v192;
          if (!*(unsigned char *)(*(void *)v192 + 103))
          {
            uint64_t v131 = *(void *)(v192 + 136);
            int v132 = *(_DWORD *)(v192 + 144);
            goto LABEL_210;
          }
        }
        else
        {
          uint64_t v181 = *v173;
          int v182 = *(_DWORD *)(v227 + 144);
          if (*(_DWORD *)(v227 + 148) <= v182)
          {
            sub_1B0D25510(v227, 118, v181, 1, 0, v106, v107, v108);
          }
          else
          {
            *(_DWORD *)(v227 + 144) = v182 + 1;
            uint64_t v183 = *(void *)(v227 + 136) + 40 * v182;
            *(_DWORD *)uint64_t v183 = 118;
            *(_DWORD *)(v183 + 4) = v181;
            *(_DWORD *)(v183 + 8) = 1;
            *(void *)(v183 + 12) = 0;
            *(void *)(v183 + 28) = 0;
            *(void *)(v183 + 20) = 0;
            *(_DWORD *)(v183 + 36) = 0;
          }
          uint64_t v189 = sub_1B0D2FF40(*(void *)v59, 1, 0);
          uint64_t v60 = v246;
          uint64_t v130 = v144;
          if (!v189) {
            goto LABEL_211;
          }
          uint64_t v190 = v189;
          *(void *)(v189 + 32) = 0;
          **(unsigned char **)(v189 + 24) = 0;
          uint64_t v191 = *(void *)v227;
          if (!*(unsigned char *)(*(void *)v227 + 103))
          {
            uint64_t v131 = *(void *)(v227 + 136);
            int v132 = *(_DWORD *)(v227 + 144);
LABEL_210:
            uint64_t v133 = v131 + 40 * v132;
            *(unsigned char *)(v133 - 39) = -8;
            *(void *)(v133 - 24) = v190;
LABEL_211:
            *(_DWORD *)(v180 + 48) &= ~0x40u;
            *(unsigned char *)(v60 + 65) = 0;
            *(unsigned char *)(v60 + 67) = 3;
            goto LABEL_212;
          }
        }
        if (!*(void *)(v191 + 816))
        {
          BOOL v153 = (*(_DWORD *)v190)-- == 1;
          if (v153)
          {
            sub_1B0D15C20(*(void **)(v190 + 16), (void *)v190);
            uint64_t v130 = v144;
            uint64_t v60 = v246;
          }
        }
        goto LABEL_211;
      }
      uint64_t v130 = v144;
      *(void *)(v144 + 56) = 0;
      uint64_t v60 = v169;
    }
LABEL_212:
    ++v128;
    v130 += 120;
  }
  while (v128 != v232);
  *(_DWORD *)(v60 + 72) = *(_DWORD *)(v227 + 144);
  uint64_t v199 = v235;
  if (!*(unsigned char *)(v230 + 103))
  {
    uint64_t v200 = 0;
    int v201 = 0;
    while (!*(_DWORD *)(v59 + 48))
    {
      uint64_t v202 = v60 + v200;
      int v203 = *(_DWORD *)(*(void *)(v60 + v200 + 952) + 48);
      unsigned int v204 = *(unsigned __int8 *)(v60 + v200 + 920);
      __int16 v205 = *(_WORD *)(v11 + 104 * *(unsigned __int8 *)(v60 + v200 + 920) + 69);
      if ((v205 & 0x10) != 0)
      {
        if ((v205 & 8) != 0)
        {
          sub_1B0D254B8(v227, 10, *(unsigned int *)(v11 + 104 * *(unsigned __int8 *)(v60 + v200 + 920) + 60), *(unsigned int *)(v11 + 104 * *(unsigned __int8 *)(v60 + v200 + 920) + 56), v105, v106, v107, v108);
          uint64_t v60 = v246;
        }
        else
        {
          int v206 = sub_1B0D2F924(v227, 15, v103, v104, v105, v106, v107, v108);
          sub_1B0D254B8(v227, 10, *(unsigned int *)(v11 + 104 * v204 + 60), *(unsigned int *)(v11 + 104 * v204 + 56), v207, v208, v209, v210);
          uint64_t v211 = &byte_1E9B52240;
          if (!*(unsigned char *)(*(void *)v227 + 103)) {
            uint64_t v211 = (char *)(*(void *)(v227 + 136) + 40 * v206);
          }
          *((_DWORD *)v211 + 2) = *(_DWORD *)(v227 + 144);
          uint64_t v60 = v246;
          uint64_t v11 = v225;
        }
      }
      uint64_t v212 = (unsigned int *)(v202 + 856);
      uint64_t v59 = v245;
      if ((v203 & 0x404000) != 0)
      {
        if ((v203 & 0x4000) != 0) {
          sub_1B0D43A50((uint64_t *)v245, v239, v199, v202 + 856, v105, v106, v107, v108);
        }
        else {
          sub_1B0D44D78((uint64_t *)v60, v201, v202 + 856, v199, v105, v106, v107, v108);
        }
        uint64_t v60 = v246;
        if (*(unsigned char *)(v230 + 103)) {
          break;
        }
      }
      int v213 = sub_1B0D454F4((uint64_t *)v245, v11, v202 + 856, v229);
      *(_DWORD *)(v246 + v200 + 888) = *(_DWORD *)(v227 + 144);
      uint64_t v217 = sub_1B0D45A6C(v245, v227, v246, v201, v212, v199, v214, v215, v216);
      uint64_t v60 = v246;
      uint64_t v199 = v217;
      *(_DWORD *)(v246 + 48) = *(_DWORD *)(v246 + v200 + 880);
      if (!(v203 & 0x2000 | v244))
      {
        sub_1B0D48808(v227, v11, (uint64_t)v212, v213);
        uint64_t v60 = v246;
      }
      ++v201;
      v200 += 120;
      uint64_t v59 = v245;
      if (120 * v232 == v200)
      {
        int v222 = *(_DWORD *)(v227 + 144);
        goto LABEL_349;
      }
    }
  }
LABEL_142:
  *(_WORD *)(v59 + 216) = *(_DWORD *)(v60 + 56);
  sub_1B0CA0A98((void *)v230, (void *)v60);
  return 0;
}

uint64_t sub_1B0C9CCDC(uint64_t result, int a2)
{
  if (*(void *)(result + 168)) {
    uint64_t result = *(void *)(result + 168);
  }
  int v2 = *(_DWORD *)(result + 124);
  if ((v2 & (1 << a2)) == 0)
  {
    *(_DWORD *)(result + 124) = v2 | (1 << a2);
    if (a2 == 1) {
      return sub_1B0D0E7A4(result);
    }
  }
  return result;
}

void sub_1B0C9CD14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = a1[2];
  if (!*(unsigned char *)(*a1 + 111)
    && a3 != 1
    && *(unsigned char *)(*(void *)(*(void *)(*a1 + 32) + 32 * (int)a3 + 8) + 17))
  {
    sub_1B0D2FBBC((uint64_t)a1, a3, *(_DWORD *)(a4 + 40), a5 == 113, *(void *)a4);
  }
  if ((*(unsigned char *)(a4 + 48) & 0x80) != 0)
  {
    for (uint64_t i = *(void *)(a4 + 16); i; uint64_t i = *(void *)(i + 40))
    {
      if ((*(_WORD *)(i + 99) & 3) == 2) {
        break;
      }
    }
    uint64_t v19 = *(unsigned int *)(i + 88);
    int v20 = *(_DWORD *)(v13 + 144);
    if (*(_DWORD *)(v13 + 148) <= v20)
    {
      sub_1B0D25510(v13, a5, a2, v19, a3, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v13 + 144) = v20 + 1;
      uint64_t v21 = *(void *)(v13 + 136) + 40 * v20;
      *(unsigned char *)uint64_t v21 = a5;
      *(_WORD *)(v21 + 2) = 0;
      *(_DWORD *)(v21 + 4) = a2;
      *(_DWORD *)(v21 + 8) = v19;
      *(_DWORD *)(v21 + 12) = a3;
      *(unsigned char *)(v21 + 1) = 0;
      *(void *)(v21 + 24) = 0;
      *(void *)(v21 + 32) = 0;
      *(void *)(v21 + 16) = 0;
    }
    uint64_t v22 = a1[2];
    uint64_t v23 = sub_1B0D2FDAC(a1, i);
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      if (*(unsigned char *)(*(void *)v22 + 103))
      {
        if (!*(void *)(*(void *)v22 + 816) && (*(_DWORD *)v23)-- == 1)
        {
          uint64_t v26 = *(void **)(v23 + 16);
          sub_1B0D15C20(v26, v24);
        }
      }
      else
      {
        uint64_t v27 = *(void *)(v22 + 136) + 40 * *(int *)(v22 + 144);
        *(unsigned char *)(v27 - 39) = -8;
        *(void *)(v27 - 24) = v23;
      }
    }
  }
  else
  {
    uint64_t v14 = *(unsigned int *)(a4 + 40);
    uint64_t v15 = *(__int16 *)(a4 + 56);
    int v16 = *(_DWORD *)(v13 + 144);
    if (*(_DWORD *)(v13 + 148) <= v16)
    {
      sub_1B0D2575C(v13, a5, a2, v14, a3, v15, a7, a8);
    }
    else
    {
      *(_DWORD *)(v13 + 144) = v16 + 1;
      uint64_t v17 = *(void *)(v13 + 136) + 40 * v16;
      *(unsigned char *)uint64_t v17 = a5;
      *(_WORD *)(v17 + 2) = 0;
      *(_DWORD *)(v17 + 4) = a2;
      *(_DWORD *)(v17 + 8) = v14;
      *(_DWORD *)(v17 + 12) = a3;
      *(_DWORD *)(v17 + 16) = v15;
      *(unsigned char *)(v17 + 1) = -3;
      *(void *)(v17 + 24) = 0;
      *(void *)(v17 + 32) = 0;
    }
  }
}

void *sub_1B0C9CF24(uint64_t a1, int a2)
{
  uint64_t result = *(void **)a1;
  if (!*((unsigned char *)result + 103))
  {
    uint64_t v4 = *(void *)(a1 + 136) + 40 * a2;
    uint64_t result = sub_1B0C8B9A4(result, *(char *)(v4 + 1), *(void *)(v4 + 16));
    *(void *)(v4 + 16) = 0;
    *(_WORD *)uint64_t v4 = 184;
  }
  return result;
}

uint64_t sub_1B0C9CF74(uint64_t result, uint64_t a2, uint64_t a3, int **a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  unsigned int v156 = a8;
  unsigned int v161 = a7;
  unsigned int v8 = a6;
  uint64_t v11 = result;
  uint64_t v12 = *(void *)(result + 16);
  int v13 = *a6;
  uint64_t v14 = *((unsigned int *)a6 + 1);
  uint64_t v166 = 0;
  if (a5)
  {
    int v15 = *(unsigned __int8 *)(a5 + 1);
    uint64_t v157 = a5;
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    int v15 = 0;
    uint64_t v157 = 0;
    if (a4)
    {
LABEL_3:
      if (*a4) {
        int v16 = a4;
      }
      else {
        int v16 = 0;
      }
      if (v16) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
  }
  int v16 = 0;
LABEL_10:
  if (!v15)
  {
    uint64_t v17 = *(unsigned int *)(a2 + 12);
    if ((int)v17 >= 1)
    {
      int v18 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v18)
      {
        uint64_t result = sub_1B0D25510(v12, 59, v17, a7, 1, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v18 + 1;
        uint64_t v19 = *(void *)(v12 + 136) + 40 * v18;
        *(_DWORD *)uint64_t v19 = 59;
        *(_DWORD *)(v19 + 4) = v17;
        *(_DWORD *)(v19 + 8) = a7;
        *(_DWORD *)(v19 + 12) = 1;
        *(void *)(v19 + 24) = 0;
        *(void *)(v19 + 32) = 0;
        *(void *)(v19 + 16) = 0;
      }
    }
  }
LABEL_15:
  int v163 = v15;
  int v20 = *(int **)(a2 + 32);
  uint64_t v21 = *v20;
  unsigned int v22 = *((_DWORD *)v8 + 3);
  if (!v22)
  {
    if (v16)
    {
      if (*((unsigned char *)v16 + 36)) {
        int v23 = **v16;
      }
      else {
        int v23 = **v16 + 1;
      }
      int v24 = v23 + *(_DWORD *)(v11 + 56);
    }
    else
    {
      int v23 = 0;
      int v24 = *(_DWORD *)(v11 + 56);
    }
    uint64_t v25 = (_DWORD *)(v11 + 56);
    unsigned int v22 = v24 + 1;
    *((_DWORD *)v8 + 3) = v24 + 1;
    goto LABEL_25;
  }
  int v23 = 0;
  uint64_t v25 = (_DWORD *)(v11 + 56);
  int v24 = *(_DWORD *)(v11 + 56);
  if ((int)(v22 + v21) > v24) {
LABEL_25:
  }
    *uint64_t v25 = v24 + v21;
  unsigned int v159 = v23;
  *((_DWORD *)v8 + 4) = v21;
  unsigned int v165 = v14;
  if ((a3 & 0x80000000) != 0)
  {
    char v31 = 1;
    if ((v13 - 9) >= 2 && v13 != 13)
    {
      if (v13 == 3) {
        goto LABEL_37;
      }
      char v31 = 0;
    }
    if (!v16 || v163 || v13 == 12 || v13 == 14) {
      goto LABEL_55;
    }
    v31 |= 0xCu;
    uint64_t v32 = *((int *)v16 + 2);
    __int16 v33 = *v16;
    int v34 = **v16;
    int v35 = v21;
    if ((int)v32 < v34)
    {
      do
      {
        while (1)
        {
          int v36 = LOWORD(v33[6 * v32 + 7]);
          if (LOWORD(v33[6 * v32 + 7])) {
            break;
          }
          if (++v32 >= v34) {
            goto LABEL_48;
          }
        }
        *(_WORD *)(*(void *)(a2 + 32) + 24 * (v36 - 1) + 28) = ++v32 - *((_DWORD *)v16 + 2);
        __int16 v33 = *v16;
        int v34 = **v16;
      }
      while (v32 < v34);
LABEL_48:
      int v20 = *(int **)(a2 + 32);
      int v35 = *v20;
    }
    if (v35 < 1)
    {
LABEL_55:
      int v30 = v22;
    }
    else
    {
      unint64_t v37 = 0;
      uint64_t v38 = 24 * v35;
      int v30 = v22;
      do
      {
        if (LOWORD(v20[v37 / 4 + 7])) {
          int v30 = 0;
        }
        uint64_t v21 = v21 - (LOWORD(v20[v37 / 4 + 7]) != 0);
        v37 += 24;
      }
      while (v38 != v37);
    }
    LODWORD(v166) = v22;
    BYTE4(v166) = v31;
    if (*(_DWORD *)(a2 + 8) && (v31 & 8) != 0 && (int)v159 >= 1)
    {
      int v30 = 0;
      v16[5] = (int *)&v166;
    }
    else
    {
      uint64_t result = sub_1B0D31188(v11, v20, v22, 0, v31, (uint64_t)a6, a7, a8);
    }
    goto LABEL_61;
  }
  if ((int)v21 < 1)
  {
LABEL_37:
    int v30 = v22;
    goto LABEL_61;
  }
  BOOL v153 = v8;
  uint64_t v26 = 0;
  do
  {
    uint64_t v28 = v22 + v26;
    int v29 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) > v29)
    {
      *(_DWORD *)(v12 + 144) = v29 + 1;
      uint64_t v27 = *(void *)(v12 + 136) + 40 * v29;
      *(_DWORD *)uint64_t v27 = 94;
      *(_DWORD *)(v27 + 4) = a3;
      *(_DWORD *)(v27 + 8) = v26;
      *(_DWORD *)(v27 + 12) = v28;
      *(void *)(v27 + 24) = 0;
      *(void *)(v27 + 32) = 0;
      *(void *)(v27 + 16) = 0;
    }
    else
    {
      uint64_t result = sub_1B0D25510(v12, 94, a3, v26, v28, (uint64_t)a6, a7, a8);
    }
    uint64_t v26 = (v26 + 1);
  }
  while (v21 != v26);
  int v30 = v22;
  uint64_t v14 = v14;
  unsigned int v8 = v153;
LABEL_61:
  if (v163)
  {
    uint64_t v39 = v8;
    int v40 = *(unsigned __int8 *)(v157 + 1);
    int v41 = sub_1B0D54E8C(v11, v40, *(unsigned int *)(v157 + 4), v161, *(unsigned int **)(a2 + 32), v22, a7, a8);
    int v42 = v40;
    unsigned int v8 = v39;
    uint64_t v14 = v165;
    uint64_t result = (uint64_t)sub_1B0D40374((void *)v11, v42, v41, *(_DWORD *)(v157 + 8));
    if (!v16)
    {
      uint64_t v46 = *(unsigned int *)(a2 + 12);
      if ((int)v46 >= 1)
      {
        int v47 = *(_DWORD *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) <= v47)
        {
          uint64_t result = sub_1B0D25510(v12, 59, v46, v161, 1, (uint64_t)a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v12 + 144) = v47 + 1;
          uint64_t v48 = *(void *)(v12 + 136) + 40 * v47;
          *(_DWORD *)uint64_t v48 = 59;
          *(_DWORD *)(v48 + 4) = v46;
          *(_DWORD *)(v48 + 8) = v161;
          *(_DWORD *)(v48 + 12) = 1;
          *(void *)(v48 + 24) = 0;
          *(void *)(v48 + 32) = 0;
          *(void *)(v48 + 16) = 0;
        }
      }
    }
  }
  switch(v13)
  {
    case 1:
      if (*(unsigned char *)(v11 + 31))
      {
        unsigned __int8 v63 = *(unsigned char *)(v11 + 31) - 1;
        *(unsigned char *)(v11 + 31) = v63;
        uint64_t v64 = *(unsigned int *)(v11 + 4 * v63 + 224);
      }
      else
      {
        uint64_t v64 = (*(_DWORD *)(v11 + 56) + 1);
        *(_DWORD *)(v11 + 56) = v64;
      }
      int v128 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v128)
      {
        uint64_t result = sub_1B0D25510(v12, 97, v22, v21, v64, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v128 + 1;
        uint64_t v129 = *(void *)(v12 + 136) + 40 * v128;
        *(_DWORD *)uint64_t v129 = 97;
        *(_DWORD *)(v129 + 4) = v22;
        *(_DWORD *)(v129 + 8) = v21;
        *(_DWORD *)(v129 + 12) = v64;
        *(void *)(v129 + 24) = 0;
        *(void *)(v129 + 32) = 0;
        *(void *)(v129 + 16) = 0;
      }
      int v130 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v130)
      {
        uint64_t result = sub_1B0D2575C(v12, 138, v14, v64, v22, v21, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v130 + 1;
        uint64_t v131 = *(void *)(v12 + 136) + 40 * v130;
        *(_DWORD *)uint64_t v131 = 64906;
        *(_DWORD *)(v131 + 4) = v14;
        *(_DWORD *)(v131 + 8) = v64;
        *(_DWORD *)(v131 + 12) = v22;
        *(_DWORD *)(v131 + 16) = v21;
        *(void *)(v131 + 24) = 0;
        *(void *)(v131 + 32) = 0;
      }
      if (v64)
      {
        uint64_t v132 = *(unsigned __int8 *)(v11 + 31);
        if (v132 <= 7)
        {
          *(unsigned char *)(v11 + 31) = v132 + 1;
          *(_DWORD *)(v11 + 4 * v132 + 224) = v64;
        }
      }
      goto LABEL_192;
    case 2:
      int v65 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v65)
      {
        uint64_t result = sub_1B0D25510(v12, 140, v14, v22, v21, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v65 + 1;
        uint64_t v66 = *(void *)(v12 + 136) + 40 * v65;
        *(_DWORD *)uint64_t v66 = 140;
        *(_DWORD *)(v66 + 4) = v14;
        *(_DWORD *)(v66 + 8) = v22;
        *(_DWORD *)(v66 + 12) = v21;
        *(void *)(v66 + 24) = 0;
        *(void *)(v66 + 32) = 0;
        *(void *)(v66 + 16) = 0;
      }
      goto LABEL_192;
    case 3:
      int v67 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v67)
      {
        uint64_t result = sub_1B0D25510(v12, 71, 1, v14, 0, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v67 + 1;
        uint64_t v68 = *(void *)(v12 + 136) + 40 * v67;
        *(void *)uint64_t v68 = 0x100000047;
        *(_DWORD *)(v68 + 8) = v14;
        *(void *)(v68 + 12) = 0;
        *(void *)(v68 + 28) = 0;
        *(void *)(v68 + 20) = 0;
        *(_DWORD *)(v68 + 36) = 0;
      }
      goto LABEL_192;
    case 5:
    case 8:
    case 12:
    case 14:
      unsigned int v43 = v159 + 1;
      uint64_t v152 = v16;
      if (v159)
      {
        signed int v44 = *(_DWORD *)(v11 + 40);
        if (v44 <= (int)v159)
        {
          int v62 = *(_DWORD *)(v11 + 56);
          uint64_t v45 = (v62 + 1);
          *(_DWORD *)(v11 + 56) = v62 + v43;
        }
        else
        {
          uint64_t v45 = *(unsigned int *)(v11 + 44);
          *(_DWORD *)(v11 + 40) = v44 - v43;
          *(_DWORD *)(v11 + 44) = v45 + v43;
        }
      }
      else if (*(unsigned char *)(v11 + 31))
      {
        unsigned __int8 v61 = *(unsigned char *)(v11 + 31) - 1;
        *(unsigned char *)(v11 + 31) = v61;
        uint64_t v45 = *(unsigned int *)(v11 + 4 * v61 + 224);
      }
      else
      {
        uint64_t v45 = (*(_DWORD *)(v11 + 56) + 1);
        *(_DWORD *)(v11 + 56) = v45;
      }
      uint64_t v75 = v45 + v159;
      int v76 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v76)
      {
        uint64_t result = sub_1B0D25510(v12, 97, v22, v21, v45 + v159, (uint64_t)a6, a7, a8);
        if (v13 != 5) {
          goto LABEL_104;
        }
LABEL_110:
        int v81 = *(_DWORD *)(v12 + 144);
        uint64_t v82 = (v81 + 4);
        uint64_t v83 = (v14 + 1);
        if (*(_DWORD *)(v12 + 148) <= v81)
        {
          uint64_t result = sub_1B0D2575C(v12, 29, v83, v82, v45, 0, a7, a8);
        }
        else
        {
          *(_DWORD *)(v12 + 144) = v81 + 1;
          uint64_t v84 = *(void *)(v12 + 136) + 40 * v81;
          *(_DWORD *)uint64_t v84 = 64797;
          *(_DWORD *)(v84 + 4) = v83;
          *(_DWORD *)(v84 + 8) = v82;
          *(_DWORD *)(v84 + 12) = v45;
          *(_DWORD *)(v84 + 16) = 0;
          *(void *)(v84 + 24) = 0;
          *(void *)(v84 + 32) = 0;
        }
        int v86 = *(_DWORD *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) <= v86)
        {
          uint64_t result = sub_1B0D2575C(v12, 138, v83, v45, v22, v21, a7, a8);
        }
        else
        {
          *(_DWORD *)(v12 + 144) = v86 + 1;
          uint64_t v87 = *(void *)(v12 + 136) + 40 * v86;
          *(_DWORD *)uint64_t v87 = 64906;
          *(_DWORD *)(v87 + 4) = v83;
          *(_DWORD *)(v87 + 8) = v45;
          *(_DWORD *)(v87 + 12) = v22;
          *(_DWORD *)(v87 + 16) = v21;
          *(void *)(v87 + 24) = 0;
          *(void *)(v87 + 32) = 0;
        }
        uint64_t v14 = v165;
        uint64_t v78 = v152;
        if (v152) {
          goto LABEL_105;
        }
        goto LABEL_120;
      }
      *(_DWORD *)(v12 + 144) = v76 + 1;
      uint64_t v77 = *(void *)(v12 + 136) + 40 * v76;
      *(_DWORD *)uint64_t v77 = 97;
      *(_DWORD *)(v77 + 4) = v22;
      *(_DWORD *)(v77 + 8) = v21;
      *(_DWORD *)(v77 + 12) = v75;
      *(void *)(v77 + 24) = 0;
      *(void *)(v77 + 32) = 0;
      *(void *)(v77 + 16) = 0;
      if (v13 == 5) {
        goto LABEL_110;
      }
LABEL_104:
      uint64_t v78 = v152;
      if (v152)
      {
LABEL_105:
        int v79 = v78;
        uint64_t result = sub_1B0CC80D0(v11, v78, a2, v75, v30, 1, v159, a8);
        signed int v80 = v159;
        goto LABEL_106;
      }
LABEL_120:
      int v79 = v78;
      if (*(unsigned char *)(v11 + 31))
      {
        unsigned __int8 v88 = *(unsigned char *)(v11 + 31) - 1;
        *(unsigned char *)(v11 + 31) = v88;
        uint64_t v89 = *(unsigned int *)(v11 + 4 * v88 + 224);
      }
      else
      {
        uint64_t v89 = (*(_DWORD *)(v11 + 56) + 1);
        *(_DWORD *)(v11 + 56) = v89;
      }
      int v90 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v90)
      {
        uint64_t result = sub_1B0D25510(v12, 127, v14, v89, 0, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v90 + 1;
        uint64_t v91 = *(void *)(v12 + 136) + 40 * v90;
        *(_DWORD *)uint64_t v91 = 127;
        *(_DWORD *)(v91 + 4) = v14;
        *(_DWORD *)(v91 + 8) = v89;
        *(void *)(v91 + 12) = 0;
        *(void *)(v91 + 28) = 0;
        *(void *)(v91 + 20) = 0;
        *(_DWORD *)(v91 + 36) = 0;
      }
      int v92 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v92)
      {
        uint64_t result = sub_1B0D25510(v12, 128, v14, v45, v89, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v92 + 1;
        uint64_t v93 = *(void *)(v12 + 136) + 40 * v92;
        *(_DWORD *)uint64_t v93 = 128;
        *(_DWORD *)(v93 + 4) = v14;
        *(_DWORD *)(v93 + 8) = v45;
        *(_DWORD *)(v93 + 12) = v89;
        *(void *)(v93 + 24) = 0;
        *(void *)(v93 + 32) = 0;
        *(void *)(v93 + 16) = 0;
      }
      signed int v80 = v159;
      int v94 = *(_DWORD *)(v12 + 144);
      BOOL v72 = __OFSUB__(v94, 1);
      int v95 = v94 - 1;
      if (v95 < 0 == v72) {
        *(_WORD *)(*(void *)(v12 + 136) + 40 * v95 + 2) = 8;
      }
      if (v89)
      {
        uint64_t v96 = *(unsigned __int8 *)(v11 + 31);
        if (v96 <= 7)
        {
          *(unsigned char *)(v11 + 31) = v96 + 1;
          *(_DWORD *)(v11 + 4 * v96 + 224) = v89;
        }
      }
LABEL_106:
      if (v80)
      {
        int v16 = v79;
        if (*(_DWORD *)(v11 + 40) <= v80)
        {
          *(_DWORD *)(v11 + 40) = v159 + 1;
          *(_DWORD *)(v11 + 44) = v45;
        }
      }
      else
      {
        int v16 = v79;
        if (v45)
        {
          uint64_t v85 = *(unsigned __int8 *)(v11 + 31);
          if (v85 <= 7)
          {
            *(unsigned char *)(v11 + 31) = v85 + 1;
            *(_DWORD *)(v11 + 4 * v85 + 224) = v45;
          }
        }
      }
LABEL_192:
      if (!v16)
      {
LABEL_193:
        uint64_t v133 = *(unsigned int *)(a2 + 8);
        if (v133)
        {
          int v134 = *(_DWORD *)(v12 + 144);
          if (*(_DWORD *)(v12 + 148) <= v134)
          {
            return sub_1B0D25510(v12, 61, v133, v156, 0, (uint64_t)a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v12 + 144) = v134 + 1;
            uint64_t v135 = *(void *)(v12 + 136) + 40 * v134;
            *(_DWORD *)uint64_t v135 = 61;
            *(_DWORD *)(v135 + 4) = v133;
            *(_DWORD *)(v135 + 8) = v156;
            *(void *)(v135 + 12) = 0;
            *(void *)(v135 + 28) = 0;
            *(void *)(v135 + 20) = 0;
            *(_DWORD *)(v135 + 36) = 0;
          }
        }
      }
      return result;
    case 6:
    case 7:
      char v49 = v8;
      int v50 = v13;
      int v51 = (unsigned int *)*((void *)v49 + 4);
      uint64_t v52 = *v51;
      char v53 = *(unsigned char *)(v11 + 31);
      if (v53)
      {
        *(unsigned char *)(v11 + 31) = v53 - 1;
        int v54 = *(_DWORD *)(v11 + 4 * (v53 - 1) + 224);
        unsigned int v55 = v52 + 2;
        if (v52 == -1)
        {
          if (v53 != 1)
          {
            unsigned int v158 = *(_DWORD *)(v11 + 4 * (v53 - 1) + 224);
            unsigned __int8 v56 = v53 - 2;
            *(unsigned char *)(v11 + 31) = v56;
            int v57 = *(_DWORD *)(v11 + 4 * v56 + 224);
LABEL_97:
            int v154 = 1;
            unsigned int v155 = 1;
            goto LABEL_136;
          }
LABEL_96:
          unsigned int v158 = v54;
          int v57 = *(_DWORD *)(v11 + 56) + 1;
          *(_DWORD *)(v11 + 56) = v57;
          goto LABEL_97;
        }
      }
      else
      {
        int v54 = *(_DWORD *)(v11 + 56) + 1;
        *(_DWORD *)(v11 + 56) = v54;
        unsigned int v55 = v52 + 2;
        if (v52 == -1) {
          goto LABEL_96;
        }
      }
      unsigned int v158 = v54;
      int v71 = *(_DWORD *)(v11 + 40);
      BOOL v72 = __OFSUB__(v71, v55);
      int v73 = v71 - v55;
      unsigned int v155 = v55;
      int v154 = 0;
      if (v73 < 0 != v72)
      {
        int v74 = *(_DWORD *)(v11 + 56);
        int v57 = v74 + 1;
        *(_DWORD *)(v11 + 56) = v74 + v55;
      }
      else
      {
        int v57 = *(_DWORD *)(v11 + 44);
        *(_DWORD *)(v11 + 40) = v73;
        *(_DWORD *)(v11 + 44) = v57 + v55;
      }
LABEL_136:
      unsigned int v164 = v57;
      unsigned int v160 = v57 + v52;
      uint64_t v97 = (v57 + v52 + 1);
      if (v50 == 6)
      {
        uint64_t v98 = v165 + 1;
        uint64_t result = *(unsigned int *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) <= (int)result)
        {
          uint64_t result = sub_1B0D2575C(v12, 29, v98, 0, v22, v21, a7, a8);
        }
        else
        {
          *(_DWORD *)(v12 + 144) = result + 1;
          uint64_t v99 = *(void *)(v12 + 136) + 40 * (int)result;
          *(_DWORD *)uint64_t v99 = 64797;
          *(void *)(v99 + 4) = v98;
          *(_DWORD *)(v99 + 12) = v22;
          *(_DWORD *)(v99 + 16) = v21;
          *(void *)(v99 + 24) = 0;
          *(void *)(v99 + 32) = 0;
        }
      }
      else
      {
        uint64_t result = 0;
      }
      int v100 = *(_DWORD *)(v12 + 144);
      int v162 = result;
      if (*(_DWORD *)(v12 + 148) <= v100)
      {
        uint64_t result = sub_1B0D25510(v12, 97, v22, v21, v97, (uint64_t)a6, a7, a8);
        if (v50 != 6) {
          goto LABEL_150;
        }
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v100 + 1;
        uint64_t v101 = *(void *)(v12 + 136) + 40 * v100;
        *(_DWORD *)uint64_t v101 = 97;
        *(_DWORD *)(v101 + 4) = v22;
        *(_DWORD *)(v101 + 8) = v21;
        *(_DWORD *)(v101 + 12) = v97;
        *(void *)(v101 + 24) = 0;
        *(void *)(v101 + 32) = 0;
        *(void *)(v101 + 16) = 0;
        if (v50 != 6) {
          goto LABEL_150;
        }
      }
      uint64_t v102 = v165 + 1;
      int v103 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v103)
      {
        uint64_t result = sub_1B0D25510(v12, 138, v102, v97, 0, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v103 + 1;
        uint64_t v104 = *(void *)(v12 + 136) + 40 * v103;
        *(_DWORD *)uint64_t v104 = 138;
        *(_DWORD *)(v104 + 4) = v102;
        *(_DWORD *)(v104 + 8) = v97;
        *(void *)(v104 + 12) = 0;
        *(void *)(v104 + 28) = 0;
        *(void *)(v104 + 20) = 0;
        *(_DWORD *)(v104 + 36) = 0;
      }
      int v105 = *(_DWORD *)(v12 + 144);
      BOOL v72 = __OFSUB__(v105, 1);
      int v106 = v105 - 1;
      if (v106 < 0 == v72) {
        *(_WORD *)(*(void *)(v12 + 136) + 40 * v106 + 2) = 16;
      }
LABEL_150:
      if ((int)v52 >= 1)
      {
        unsigned int v107 = v22 - 1;
        uint64_t v108 = (unsigned __int16 *)(v51 + 7);
        uint64_t v109 = v164;
        do
        {
          int v111 = *v108;
          v108 += 12;
          uint64_t v112 = v107 + v111;
          int v113 = *(_DWORD *)(v12 + 144);
          if (*(_DWORD *)(v12 + 148) > v113)
          {
            *(_DWORD *)(v12 + 144) = v113 + 1;
            uint64_t v110 = *(void *)(v12 + 136) + 40 * v113;
            *(_DWORD *)uint64_t v110 = 81;
            *(_DWORD *)(v110 + 4) = v112;
            *(_DWORD *)(v110 + 8) = v109;
            *(void *)(v110 + 12) = 0;
            *(void *)(v110 + 28) = 0;
            *(void *)(v110 + 20) = 0;
            *(_DWORD *)(v110 + 36) = 0;
          }
          else
          {
            uint64_t result = sub_1B0D25510(v12, 81, v112, v109, 0, (uint64_t)a6, a7, a8);
          }
          uint64_t v109 = (v109 + 1);
          --v52;
        }
        while (v52);
      }
      int v114 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v114)
      {
        uint64_t v116 = v165;
        uint64_t result = sub_1B0D25510(v12, 126, v165, v160, 0, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v114 + 1;
        uint64_t v115 = *(void *)(v12 + 136) + 40 * v114;
        uint64_t v116 = v165;
        *(_DWORD *)uint64_t v115 = 126;
        *(_DWORD *)(v115 + 4) = v165;
        *(_DWORD *)(v115 + 8) = v160;
        *(void *)(v115 + 12) = 0;
        *(void *)(v115 + 28) = 0;
        *(void *)(v115 + 20) = 0;
        *(_DWORD *)(v115 + 36) = 0;
      }
      int v117 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v117)
      {
        uint64_t result = sub_1B0D25510(v12, 97, v164, v155, v158, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v117 + 1;
        uint64_t v118 = *(void *)(v12 + 136) + 40 * v117;
        *(_DWORD *)uint64_t v118 = 97;
        *(_DWORD *)(v118 + 4) = v164;
        *(_DWORD *)(v118 + 8) = v155;
        *(_DWORD *)(v118 + 12) = v158;
        *(void *)(v118 + 24) = 0;
        *(void *)(v118 + 32) = 0;
        *(void *)(v118 + 16) = 0;
      }
      int v119 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v119)
      {
        uint64_t result = sub_1B0D2575C(v12, 138, v116, v158, v164, v155, a7, a8);
        int v121 = v162;
        if (!v162) {
          goto LABEL_170;
        }
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v119 + 1;
        uint64_t v120 = *(void *)(v12 + 136) + 40 * v119;
        *(_DWORD *)uint64_t v120 = 64906;
        *(_DWORD *)(v120 + 4) = v116;
        *(_DWORD *)(v120 + 8) = v158;
        *(_DWORD *)(v120 + 12) = v164;
        *(_DWORD *)(v120 + 16) = v155;
        *(void *)(v120 + 24) = 0;
        *(void *)(v120 + 32) = 0;
        int v121 = v162;
        if (!v162) {
          goto LABEL_170;
        }
      }
      if (*(unsigned char *)(*(void *)v12 + 103)) {
        uint64_t v122 = &byte_1E9B52240;
      }
      else {
        uint64_t v122 = (char *)(*(void *)(v12 + 136) + 40 * v121);
      }
      *((_DWORD *)v122 + 2) = *(_DWORD *)(v12 + 144);
LABEL_170:
      if (v158)
      {
        uint64_t v123 = *(unsigned __int8 *)(v11 + 31);
        if (v123 <= 7)
        {
          *(unsigned char *)(v11 + 31) = v123 + 1;
          *(_DWORD *)(v11 + 4 * v123 + 224) = v158;
        }
      }
      if (v154)
      {
        if (!v164) {
          goto LABEL_192;
        }
        uint64_t v124 = *(unsigned __int8 *)(v11 + 31);
        if (v124 > 7) {
          goto LABEL_192;
        }
        *(unsigned char *)(v11 + 31) = v124 + 1;
        uint64_t v125 = (unsigned int *)(v11 + 4 * v124 + 224);
      }
      else
      {
        if (*(_DWORD *)(v11 + 40) >= (signed int)v155) {
          goto LABEL_192;
        }
        *(_DWORD *)(v11 + 40) = v155;
        uint64_t v125 = (unsigned int *)(v11 + 44);
      }
      *uint64_t v125 = v164;
      goto LABEL_192;
    case 9:
    case 13:
      if (v16) {
        return sub_1B0CC80D0(v11, v16, a2, v22, v30, v21, v159, a8);
      }
      uint64_t v58 = v22;
      if (v13 == 13)
      {
        uint64_t v58 = *((unsigned int *)v8 + 1);
        int v59 = *(_DWORD *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) > v59)
        {
          *(_DWORD *)(v12 + 144) = v59 + 1;
          uint64_t v60 = *(void *)(v12 + 136) + 40 * v59;
          *(_DWORD *)uint64_t v60 = 12;
          *(_DWORD *)(v60 + 4) = v58;
          *(_OWORD *)(v60 + 8) = 0u;
          *(_OWORD *)(v60 + 24) = 0u;
          goto LABEL_193;
        }
        uint64_t v139 = v12;
        uint64_t v140 = 12;
        uint64_t v141 = 0;
      }
      else
      {
        int v126 = *(_DWORD *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) > v126)
        {
          *(_DWORD *)(v12 + 144) = v126 + 1;
          uint64_t v127 = *(void *)(v12 + 136) + 40 * v126;
          *(_DWORD *)uint64_t v127 = 84;
          *(_DWORD *)(v127 + 4) = v22;
          *(_DWORD *)(v127 + 8) = v21;
          *(void *)(v127 + 12) = 0;
          *(void *)(v127 + 28) = 0;
          *(void *)(v127 + 20) = 0;
          *(_DWORD *)(v127 + 36) = 0;
          goto LABEL_193;
        }
        uint64_t v139 = v12;
        uint64_t v140 = 84;
        uint64_t v141 = v21;
      }
      uint64_t result = sub_1B0D25510(v139, v140, v58, v141, 0, (uint64_t)a6, a7, a8);
      goto LABEL_193;
    case 10:
      if (!v16) {
        goto LABEL_193;
      }
      return sub_1B0CC80D0(v11, v16, a2, v22, v30, v21, v159, a8);
    case 11:
      if (v16) {
        return sub_1B0CC80D0(v11, v16, a2, v22, v30, v21, v159, a8);
      }
      if (*(unsigned char *)(v11 + 31))
      {
        unsigned __int8 v69 = *(unsigned char *)(v11 + 31) - 1;
        *(unsigned char *)(v11 + 31) = v69;
        uint64_t v70 = *(unsigned int *)(v11 + 4 * v69 + 224);
      }
      else
      {
        uint64_t v70 = (*(_DWORD *)(v11 + 56) + 1);
        *(_DWORD *)(v11 + 56) = v70;
      }
      uint64_t result = sub_1B0CCB908((uint64_t *)v12, 97, v22, v21, v70, *((void *)v8 + 3), v21, a8);
      int v142 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v142)
      {
        uint64_t result = sub_1B0D2575C(v12, 138, v14, v70, v22, v21, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v142 + 1;
        uint64_t v143 = *(void *)(v12 + 136) + 40 * v142;
        *(_DWORD *)uint64_t v143 = 64906;
        *(_DWORD *)(v143 + 4) = v14;
        *(_DWORD *)(v143 + 8) = v70;
        *(_DWORD *)(v143 + 12) = v22;
        *(_DWORD *)(v143 + 16) = v21;
        *(void *)(v143 + 24) = 0;
        *(void *)(v143 + 32) = 0;
      }
      if (v70)
      {
        uint64_t v144 = *(unsigned __int8 *)(v11 + 31);
        if (v144 <= 7)
        {
          *(unsigned char *)(v11 + 31) = v144 + 1;
          *(_DWORD *)(v11 + 4 * v144 + 224) = v70;
        }
      }
      goto LABEL_193;
    case 15:
      if (v16) {
        return sub_1B0CC80D0(v11, v16, a2, v22, v30, v21, v159, a8);
      }
      uint64_t v136 = *((unsigned int *)v8 + 2);
      if (*(unsigned char *)(v11 + 31))
      {
        unsigned __int8 v137 = *(unsigned char *)(v11 + 31) - 1;
        *(unsigned char *)(v11 + 31) = v137;
        uint64_t v138 = *(unsigned int *)(v11 + 4 * v137 + 224);
      }
      else
      {
        uint64_t v145 = v11;
        uint64_t v138 = (*(_DWORD *)(v11 + 56) + 1);
        *(_DWORD *)(v145 + 56) = v138;
      }
      int v146 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v146)
      {
        sub_1B0D25510(v12, 50, v22, v156, 0, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v146 + 1;
        uint64_t v147 = *(void *)(v12 + 136) + 40 * v146;
        *(_DWORD *)uint64_t v147 = 50;
        *(_DWORD *)(v147 + 4) = v22;
        *(_DWORD *)(v147 + 8) = v156;
        *(void *)(v147 + 12) = 0;
        *(void *)(v147 + 28) = 0;
        *(void *)(v147 + 20) = 0;
        *(_DWORD *)(v147 + 36) = 0;
      }
      uint64_t v148 = (v136 >> 31) + v22;
      uint64_t v149 = v21 - (v136 >> 31);
      int v150 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v150)
      {
        sub_1B0D25510(v12, 97, v148, v149, v138, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v150 + 1;
        uint64_t v151 = *(void *)(v12 + 136) + 40 * v150;
        *(_DWORD *)uint64_t v151 = 97;
        *(_DWORD *)(v151 + 4) = v148;
        *(_DWORD *)(v151 + 8) = v149;
        *(_DWORD *)(v151 + 12) = v138;
        *(void *)(v151 + 24) = 0;
        *(void *)(v151 + 32) = 0;
        *(void *)(v151 + 16) = 0;
      }
      if ((v136 & 0x80000000) != 0) {
        uint64_t result = sub_1B0C8A924(v12, 128, v14, v138, v22, (uint64_t)a6, a7, a8);
      }
      else {
        uint64_t result = sub_1B0CEF5FC(v12, 138, v14, v138, v22, v136, a7, a8);
      }
      goto LABEL_193;
    default:
      goto LABEL_192;
  }
}

uint64_t sub_1B0C9E080(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a3;
  uint64_t v9 = a1[2];
  uint64_t v294 = 0;
  int16x8_t v10 = 0uLL;
  memset(v293, 0, sizeof(v293));
  if (!a2)
  {
LABEL_11:
    int v22 = *(_DWORD *)(v9 + 144);
    if (*(_DWORD *)(v9 + 148) <= v22)
    {
      sub_1B0D25510(v9, 75, 0, v8, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v9 + 144) = v22 + 1;
      uint64_t v23 = *(void *)(v9 + 136) + 40 * v22;
      *(void *)uint64_t v23 = 75;
      *(_DWORD *)(v23 + 8) = v8;
      *(void *)(v23 + 12) = 0;
      *(void *)(v23 + 28) = 0;
      *(void *)(v23 + 20) = 0;
      *(_DWORD *)(v23 + 36) = 0;
    }
    return v8;
  }
  uint64_t v11 = a2;
  while (2)
  {
    if (a1[12])
    {
      if ((v11[6] & 0x80) == 0)
      {
        uint64_t v13 = sub_1B0D302D8((uint64_t)a1, v11, v8);
        if ((v13 & 0x80000000) == 0) {
          return v13;
        }
      }
    }
    uint64_t v14 = *v11;
    switch(*v11)
    {
      case 0x13u:
      case 0x72u:
        uint64_t v32 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 2), (_DWORD *)&v294 + 1);
        uint64_t v36 = v32;
        int v37 = *(_DWORD *)(v9 + 144);
        if (*(_DWORD *)(v9 + 148) > v37)
        {
          *(_DWORD *)(v9 + 144) = v37 + 1;
          uint64_t v38 = *(void *)(v9 + 136) + 40 * v37;
          *(unsigned char *)uint64_t v38 = v14;
          *(_WORD *)(v38 + 2) = 0;
          *(_DWORD *)(v38 + 4) = v32;
          *(_DWORD *)(v38 + 8) = v8;
          *(unsigned char *)(v38 + 1) = 0;
          goto LABEL_45;
        }
        uint64_t v56 = v9;
        uint64_t v57 = v14;
        goto LABEL_124;
      case 0x14u:
      case 0x8Au:
        if (*(unsigned char *)(*a1 + 103)) {
          return 0;
        }
        if (v14 != 138 || (v11[5] & 0x10) == 0 || **(_DWORD **)(*((void *)v11 + 4) + 32) == 1)
        {
          return sub_1B0CC5A70((void **)a1, v11, a3, a4, a5, a6, a7, a8);
        }
        if (!*((_DWORD *)a1 + 12)) {
          sub_1B0CEF2BC((uint64_t)a1, "sub-select returns %d columns - expected %d", a3, a4, a5, a6, a7, a8, **(_DWORD **)(*((void *)v11 + 4) + 32));
        }
        goto LABEL_280;
      case 0x24u:
        sub_1B0D2F9D0((uint64_t)a1, *((unsigned __int8 **)v11 + 2), v8);
        uint64_t v58 = sub_1B0D27EF0(*((unsigned char **)v11 + 1), 0);
        sub_1B0D254B8(v9, 88, v8, v58, v59, v60, v61, v62);
        return v8;
      case 0x2Bu:
      case 0x2Cu:
      case 0x66u:
      case 0x67u:
      case 0x68u:
      case 0x69u:
      case 0x6Au:
      case 0x6Bu:
      case 0x6Cu:
      case 0x6Du:
      case 0x6Eu:
      case 0x6Fu:
        uint64_t v24 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 2), (_DWORD *)&v294 + 1);
        uint64_t v25 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 3), &v294);
        int v29 = *(_DWORD *)(v9 + 144);
        if (*(_DWORD *)(v9 + 148) > v29)
        {
          *(_DWORD *)(v9 + 144) = v29 + 1;
          uint64_t v30 = *(void *)(v9 + 136) + 40 * v29;
          *(unsigned char *)uint64_t v30 = v14;
          *(_WORD *)(v30 + 2) = 0;
          *(_DWORD *)(v30 + 4) = v25;
          *(_DWORD *)(v30 + 8) = v24;
          *(_DWORD *)(v30 + 12) = v8;
          *(unsigned char *)(v30 + 1) = 0;
          goto LABEL_16;
        }
        sub_1B0D25510(v9, v14, v25, v24, v8, v26, v27, v28);
        goto LABEL_280;
      case 0x2Du:
      case 0xABu:
        char v281 = 0;
        if (v14 == 45) {
          uint64_t v14 = 53;
        }
        else {
          uint64_t v14 = 52;
        }
        unsigned int v283 = 128;
        int v31 = 1;
        goto LABEL_27;
      case 0x30u:
        sub_1B0D31534((unsigned int *)a1, (uint64_t)v11, v8, 0, 0, a6, a7, a8);
        return v8;
      case 0x31u:
        int v63 = *((_DWORD *)a1 + 17);
        uint64_t v64 = (v63 - 1);
        uint64_t v65 = (v63 - 2);
        *((_DWORD *)a1 + 17) = v65;
        sub_1B0D254B8(v9, 75, 0, v8, a5, a6, a7, a8);
        sub_1B0CC427C(a1, v11, v64, v65);
        sub_1B0D254B8(v9, 71, 1, v8, v66, v67, v68, v69);
        sub_1B0D31504(v9, v64);
        sub_1B0D254B8(v9, 86, v8, 0, v70, v71, v72, v73);
        sub_1B0D31504(v9, v65);
        return v8;
      case 0x32u:
      case 0x33u:
        int v54 = *(_DWORD *)(v9 + 144);
        if (*(_DWORD *)(v9 + 148) <= v54)
        {
          sub_1B0D25510(v9, 71, 1, v8, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v9 + 144) = v54 + 1;
          uint64_t v55 = *(void *)(v9 + 136) + 40 * v54;
          *(void *)uint64_t v55 = 0x100000047;
          *(_DWORD *)(v55 + 8) = v8;
          *(void *)(v55 + 12) = 0;
          *(void *)(v55 + 28) = 0;
          *(void *)(v55 + 20) = 0;
          *(_DWORD *)(v55 + 36) = 0;
        }
        uint64_t v147 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 2), (_DWORD *)&v294 + 1);
        int v151 = *(_DWORD *)(v9 + 144);
        if (*(_DWORD *)(v9 + 148) <= v151)
        {
          int v151 = sub_1B0D25510(v9, v14, v147, 0, 0, v148, v149, v150);
        }
        else
        {
          *(_DWORD *)(v9 + 144) = v151 + 1;
          uint64_t v152 = *(void *)(v9 + 136) + 40 * v151;
          *(unsigned char *)uint64_t v152 = v14;
          *(_WORD *)(v152 + 2) = 0;
          *(_DWORD *)(v152 + 4) = v147;
          *(unsigned char *)(v152 + 1) = 0;
          *(_OWORD *)(v152 + 8) = 0u;
          *(_OWORD *)(v152 + 24) = 0u;
        }
        int v153 = *(_DWORD *)(v9 + 144);
        if (*(_DWORD *)(v9 + 148) <= v153)
        {
          sub_1B0D25510(v9, 71, 0, v8, 0, v148, v149, v150);
        }
        else
        {
          *(_DWORD *)(v9 + 144) = v153 + 1;
          uint64_t v154 = *(void *)(v9 + 136) + 40 * v153;
          *(void *)uint64_t v154 = 71;
          *(_DWORD *)(v154 + 8) = v8;
          *(void *)(v154 + 12) = 0;
          *(void *)(v154 + 28) = 0;
          *(void *)(v154 + 20) = 0;
          *(_DWORD *)(v154 + 36) = 0;
        }
        int v155 = *(_DWORD *)(v9 + 144);
        if (*(unsigned char *)(*(void *)v9 + 103)) {
          goto LABEL_151;
        }
        *(_DWORD *)(*(void *)(v9 + 136) + 40 * v151 + 8) = v155;
        goto LABEL_280;
      case 0x34u:
      case 0x35u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
        int v31 = 0;
        unsigned int v283 = 0;
        char v281 = 1;
LABEL_27:
        uint64_t v39 = (unsigned __int8 *)*((void *)v11 + 2);
        int v40 = *v39;
        int v41 = v40;
        if (v40 == 176) {
          int v41 = v39[2];
        }
        if (v41 == 138)
        {
          int v42 = (int **)(*((void *)v39 + 4) + 32);
        }
        else
        {
          if (v41 != 177) {
            goto LABEL_34;
          }
          int v42 = (int **)(v39 + 32);
        }
        if (**v42 < 2)
        {
LABEL_34:
          uint64_t v43 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 2), (_DWORD *)&v294 + 1);
          uint64_t v47 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 3), &v294);
          int v48 = *(_DWORD *)(v9 + 144);
          if (*(_DWORD *)(v9 + 148) <= v48)
          {
            sub_1B0D25510(v9, 71, 1, v8, 0, v44, v45, v46);
          }
          else
          {
            *(_DWORD *)(v9 + 144) = v48 + 1;
            uint64_t v49 = *(void *)(v9 + 136) + 40 * v48;
            *(void *)uint64_t v49 = 0x100000047;
            *(_DWORD *)(v49 + 8) = v8;
            *(void *)(v49 + 12) = 0;
            *(void *)(v49 + 28) = 0;
            *(void *)(v49 + 20) = 0;
            *(_DWORD *)(v49 + 36) = 0;
          }
          sub_1B0CC26B4((uint64_t)a1, v39, *((unsigned __int8 **)v11 + 3), v14, v43, v47, (*(_DWORD *)(v9 + 144) + 2), v283, (*((_DWORD *)v11 + 1) >> 10) & 1);
          int v52 = *(_DWORD *)(v9 + 148);
          int v53 = *(_DWORD *)(v9 + 144);
          if (v31)
          {
            if (v52 <= v53)
            {
              uint64_t v56 = v9;
              uint64_t v57 = 71;
              uint64_t v36 = 0;
LABEL_124:
              sub_1B0D25510(v56, v57, v36, v8, 0, v33, v34, v35);
            }
            else
            {
              *(_DWORD *)(v9 + 144) = v53 + 1;
              uint64_t v38 = *(void *)(v9 + 136) + 40 * v53;
              *(void *)uint64_t v38 = 71;
              *(_DWORD *)(v38 + 8) = v8;
LABEL_45:
              *(void *)(v38 + 12) = 0;
              *(void *)(v38 + 28) = 0;
              *(void *)(v38 + 20) = 0;
              *(_DWORD *)(v38 + 36) = 0;
            }
          }
          else if (v52 <= v53)
          {
            sub_1B0D25510(v9, 92, v43, v8, v47, v33, v34, v35);
          }
          else
          {
            *(_DWORD *)(v9 + 144) = v53 + 1;
            uint64_t v30 = *(void *)(v9 + 136) + 40 * v53;
            *(_DWORD *)uint64_t v30 = 92;
            *(_DWORD *)(v30 + 4) = v43;
            *(_DWORD *)(v30 + 8) = v8;
            *(_DWORD *)(v30 + 12) = v47;
LABEL_16:
            *(void *)(v30 + 24) = 0;
            *(void *)(v30 + 32) = 0;
            *(void *)(v30 + 16) = 0;
          }
          goto LABEL_280;
        }
        int v50 = *v39;
        if (v40 == 176) {
          int v50 = v39[2];
        }
        if (v50 == 138)
        {
          int v51 = (int **)(*((void *)v39 + 4) + 32);
        }
        else
        {
          if (v50 != 177)
          {
            int v156 = 1;
LABEL_137:
            uint64_t v157 = a1[2];
            unsigned int v158 = (unsigned __int8 *)*((void *)v11 + 3);
            int v159 = *((_DWORD *)a1 + 17) - 1;
            *((_DWORD *)a1 + 17) = v159;
            if (*((_DWORD *)a1 + 12)) {
              goto LABEL_280;
            }
            BOOL v279 = v158;
            int v160 = *v158;
            int v161 = v160;
            if (v160 == 176) {
              int v161 = v279[2];
            }
            if (v161 == 138)
            {
              int v162 = (unsigned __int8 *)*((void *)v279 + 4);
            }
            else
            {
              if (v161 != 177)
              {
                int v171 = 1;
                goto LABEL_168;
              }
              int v162 = v279;
            }
            int v171 = **((_DWORD **)v162 + 4);
LABEL_168:
            if (v156 != v171)
            {
LABEL_179:
              sub_1B0CEF2BC((uint64_t)a1, "row value misused", a3, a4, a5, a6, a7, a8, v269);
              goto LABEL_280;
            }
            unsigned int v172 = *((_DWORD *)v11 + 1);
            if (v14 == 55) {
              int v173 = 56;
            }
            else {
              int v173 = v14;
            }
            if (v14 == 57) {
              int v173 = 54;
            }
            if (v14 == 52) {
              int v174 = 53;
            }
            else {
              int v174 = v173;
            }
            int v286 = v174;
            if (v40 == 138)
            {
              int v271 = sub_1B0CC5A70((void **)a1, v39, a3, a4, a5, a6, a7, a8);
              int v175 = v279;
              int v160 = *v279;
            }
            else
            {
              int v271 = 0;
              int v175 = v279;
            }
            if (v160 == 138) {
              int v270 = sub_1B0CC5A70((void **)a1, v175, a3, a4, a5, a6, a7, a8);
            }
            else {
              int v270 = 0;
            }
            int v274 = (v172 >> 10) & 1;
            sub_1B0D254B8(v157, 71, 1, v8, a5, a6, a7, a8);
            uint64_t v178 = 0;
            int v179 = 0;
            uint64_t v273 = (v156 - 1);
            uint64_t v272 = (v156 - 2);
            uint64_t v180 = 8;
            int v276 = v39;
            unsigned int v275 = v159;
            unsigned int v277 = v8;
            while (1)
            {
              LODWORD(v288) = 0;
              v295[0] = 0;
              if (v179)
              {
                uint64_t v183 = &byte_1E9B52240;
                if (!*(unsigned char *)(*(void *)v157 + 103)) {
                  uint64_t v183 = (char *)(*(void *)(v157 + 136) + 40 * v179);
                }
                *((_DWORD *)v183 + 2) = *(_DWORD *)(v157 + 144);
              }
              int v184 = *v39;
              if (v184 == 138)
              {
                int v187 = *(unsigned __int8 **)(*(void *)(*((void *)v39 + 4) + 32) + v180);
                uint64_t v189 = (v271 + v178);
                uint64_t v185 = v279;
                goto LABEL_209;
              }
              uint64_t v185 = v279;
              if (v184 == 177)
              {
                int v187 = *(unsigned __int8 **)(*((void *)v39 + 4) + v180);
                uint64_t v189 = sub_1B0D30948((uint64_t)a1, v187, &v288);
                goto LABEL_209;
              }
              if (v184 != 176)
              {
                int v187 = 0;
                uint64_t v189 = 0;
                goto LABEL_209;
              }
              int v186 = v39[2];
              if (v186 == 177) {
                break;
              }
              int v187 = v39;
              if (v186 == 138)
              {
                uint64_t v188 = *(int **)(*((void *)v39 + 4) + 32);
                goto LABEL_206;
              }
LABEL_208:
              uint64_t v189 = (v178 + *((_DWORD *)v39 + 11));
LABEL_209:
              int v190 = *v185;
              switch(v190)
              {
                case 138:
                  uint64_t v194 = v180;
                  uint64_t v192 = *(unsigned __int8 **)(*(void *)(*((void *)v185 + 4) + 32) + v180);
                  uint64_t v195 = (v270 + v178);
                  break;
                case 177:
                  uint64_t v194 = v180;
                  uint64_t v192 = *(unsigned __int8 **)(*((void *)v185 + 4) + v180);
                  uint64_t v195 = sub_1B0D30948((uint64_t)a1, v192, v295);
                  break;
                case 176:
                  int v191 = v185[2];
                  if (v191 != 177)
                  {
                    uint64_t v192 = v185;
                    if (v191 == 138)
                    {
                      int v193 = *(int **)(*((void *)v185 + 4) + 32);
LABEL_219:
                      uint64_t v192 = v185;
                      if (*v193 >= 2) {
                        uint64_t v192 = *(unsigned __int8 **)((char *)v193 + v180);
                      }
                    }
                    uint64_t v194 = v180;
                    uint64_t v195 = (v178 + *((_DWORD *)v185 + 11));
                    break;
                  }
                  int v193 = (int *)*((void *)v185 + 4);
                  goto LABEL_219;
                default:
                  uint64_t v194 = v180;
                  uint64_t v192 = 0;
                  uint64_t v195 = 0;
                  break;
              }
              int v179 = *(_DWORD *)(v157 + 144);
              sub_1B0CC26B4((uint64_t)a1, v187, v192, v286, v189, v195, v275, v283, v274);
              int v199 = v288;
              if (v288)
              {
                uint64_t v200 = *((unsigned __int8 *)a1 + 31);
                if (v200 <= 7)
                {
                  *((unsigned char *)a1 + 31) = v200 + 1;
                  *((_DWORD *)a1 + v200 + 56) = v199;
                }
              }
              int v201 = v295[0];
              uint64_t v39 = v276;
              if (v295[0])
              {
                uint64_t v202 = *((unsigned __int8 *)a1 + 31);
                if (v202 <= 7)
                {
                  *((unsigned char *)a1 + 31) = v202 + 1;
                  *((_DWORD *)a1 + v202 + 56) = v201;
                }
              }
              if ((v286 == 56 || v286 == 54) && v178 < (int)v273)
              {
                int v179 = *(_DWORD *)(v157 + 144);
                if (*(_DWORD *)(v157 + 148) <= v179)
                {
                  int v179 = sub_1B0D25510(v157, 58, 0, 0, 0, v196, v197, v198);
                }
                else
                {
                  *(_DWORD *)(v157 + 144) = v179 + 1;
                  uint64_t v203 = *(void *)(v157 + 136) + 40 * v179;
                  *(unsigned char *)uint64_t v203 = 58;
                  *(_OWORD *)(v203 + 1) = 0u;
                  *(_OWORD *)(v203 + 17) = 0u;
                  *(void *)(v203 + 32) = 0;
                }
              }
              int v204 = *(_DWORD *)(v157 + 148);
              int v205 = *(_DWORD *)(v157 + 144);
              if (v281)
              {
                if (v204 > v205)
                {
                  *(_DWORD *)(v157 + 144) = v205 + 1;
                  uint64_t v206 = *(void *)(v157 + 136) + 40 * v205;
                  *(_DWORD *)uint64_t v206 = 92;
                  *(_DWORD *)(v206 + 4) = v189;
                  uint64_t v8 = v277;
                  *(_DWORD *)(v206 + 8) = v277;
                  *(_DWORD *)(v206 + 12) = v195;
                  *(void *)(v206 + 24) = 0;
                  *(void *)(v206 + 32) = 0;
                  *(void *)(v206 + 16) = 0;
                  goto LABEL_242;
                }
                uint64_t v208 = v157;
                uint64_t v209 = 92;
                uint64_t v210 = v189;
                uint64_t v8 = v277;
                uint64_t v211 = v277;
                uint64_t v212 = v195;
              }
              else
              {
                if (v204 > v205)
                {
                  *(_DWORD *)(v157 + 144) = v205 + 1;
                  uint64_t v207 = *(void *)(v157 + 136) + 40 * v205;
                  *(void *)uint64_t v207 = 71;
                  uint64_t v8 = v277;
                  *(_DWORD *)(v207 + 8) = v277;
                  *(void *)(v207 + 12) = 0;
                  *(void *)(v207 + 28) = 0;
                  *(void *)(v207 + 20) = 0;
                  *(_DWORD *)(v207 + 36) = 0;
                  goto LABEL_242;
                }
                uint64_t v208 = v157;
                uint64_t v209 = 71;
                uint64_t v210 = 0;
                uint64_t v8 = v277;
                uint64_t v211 = v277;
                uint64_t v212 = 0;
              }
              sub_1B0D25510(v208, v209, v210, v211, v212, v196, v197, v198);
LABEL_242:
              if (v273 == v178)
              {
                if (*(unsigned char *)(*(void *)v157 + 103)) {
                  int16x8_t v216 = &byte_1E9B52240;
                }
                else {
                  int16x8_t v216 = (char *)(*(void *)(v157 + 136) + 40 * v179);
                }
                *((_DWORD *)v216 + 2) = *(_DWORD *)(v157 + 144);
                sub_1B0D31504(v157, v275);
                if (v14 == 52)
                {
                  uint64_t v164 = v157;
                  uint64_t v165 = 19;
                  uint64_t v166 = v8;
                  goto LABEL_279;
                }
                goto LABEL_280;
              }
              int v213 = *(_DWORD *)(v157 + 148);
              int v214 = *(_DWORD *)(v157 + 144);
              if (v286 == 53)
              {
                if (v213 <= v214)
                {
                  sub_1B0D25510(v157, 51, v8, v275, 0, v196, v197, v198);
                }
                else
                {
                  *(_DWORD *)(v157 + 144) = v214 + 1;
                  uint64_t v215 = *(void *)(v157 + 136) + 40 * v214;
                  *(_DWORD *)uint64_t v215 = 51;
                  *(_DWORD *)(v215 + 4) = v8;
                  *(_DWORD *)(v215 + 8) = v275;
                  *(void *)(v215 + 12) = 0;
                  *(void *)(v215 + 28) = 0;
                  *(void *)(v215 + 20) = 0;
                  *(_DWORD *)(v215 + 36) = 0;
                }
                int v182 = 53;
              }
              else
              {
                if (v213 > v214)
                {
                  *(_DWORD *)(v157 + 144) = v214 + 1;
                  uint64_t v181 = *(void *)(v157 + 136) + 40 * v214;
                  *(void *)uint64_t v181 = 9;
                  *(_DWORD *)(v181 + 8) = v275;
                  *(void *)(v181 + 12) = 0;
                  *(void *)(v181 + 28) = 0;
                  *(void *)(v181 + 20) = 0;
                  *(_DWORD *)(v181 + 36) = 0;
                }
                else
                {
                  sub_1B0D25510(v157, 9, 0, v275, 0, v196, v197, v198);
                }
                int v182 = v286;
                if (v272 == v178) {
                  int v182 = v14;
                }
              }
              int v286 = v182;
              ++v178;
              uint64_t v180 = v194 + 24;
            }
            uint64_t v188 = (int *)*((void *)v39 + 4);
LABEL_206:
            int v187 = v39;
            if (*v188 >= 2) {
              int v187 = *(unsigned __int8 **)((char *)v188 + v180);
            }
            goto LABEL_208;
          }
          int v51 = (int **)(v39 + 32);
        }
        int v156 = **v51;
        goto LABEL_137;
      case 0x47u:
        uint64_t v74 = a1[22];
        if (!v74 && !*((unsigned char *)a1 + 30))
        {
          sub_1B0CEF2BC((uint64_t)a1, "RAISE() may only be used within a trigger-program", a3, a4, a5, a6, a7, a8, v269);
          return 0;
        }
        int v75 = v11[1];
        if (v75 == 4)
        {
          sub_1B0CCB908((uint64_t *)v9, 70, 0, 4, 0, *((void *)v11 + 1), 0, a8);
        }
        else
        {
          uint64_t v76 = (char)v75;
          if (v75 == 2)
          {
            uint64_t v77 = (void *)a1[21];
            if (!v77) {
              uint64_t v77 = a1;
            }
            *((unsigned char *)v77 + 33) = 1;
          }
          if (v74) {
            uint64_t v78 = 1811;
          }
          else {
            uint64_t v78 = 1;
          }
          sub_1B0D31D04(a1, v78, v76, *((void *)v11 + 1), 0, 0, a7, a8);
        }
        goto LABEL_280;
      case 0x4Du:
        uint64_t v79 = *((void *)v11 + 9);
        uint64_t v80 = *((unsigned int *)v11 + 12);
        int v81 = *((_DWORD *)v11 + 11) + *((_DWORD *)v11 + 11) * *(__int16 *)(v79 + 54);
        int v82 = sub_1B0D30554(v79, (__int16)v80);
        sub_1B0D254B8(v9, 157, (v82 + v81 + 1), v8, v83, v84, v85, v86);
        if ((v80 & 0x80000000) == 0 && *(unsigned char *)(*(void *)(v79 + 8) + 16 * v80 + 9) == 69) {
          sub_1B0D2F978(v9, 87, v8, v87, v88, v89, v90, v91);
        }
        goto LABEL_280;
      case 0x71u:
        if ((v11[5] & 2) != 0) {
          goto LABEL_3;
        }
        sub_1B0D2F9D0((uint64_t)a1, *((unsigned __int8 **)v11 + 2), v8);
        uint64_t v20 = v9;
        uint64_t v21 = 179;
        goto LABEL_10;
      case 0x75u:
        sub_1B0CCB908((uint64_t *)v9, 117, 0, v8, 0, *((void *)v11 + 1), 0, a8);
        return v8;
      case 0x99u:
        int v92 = (char *)*((void *)v11 + 1);
        uint64_t v93 = (uint64_t *)v9;
        int v94 = 0;
        goto LABEL_156;
      case 0x9Au:
        int v95 = strlen((const char *)(*((void *)v11 + 1) + 2)) & 0x3FFFFFFF;
        unint64_t v96 = sub_1B0D280E0(*(void *)v9, *((void *)v11 + 1) + 2, v95 - 1);
        if (v95 - 1 >= 0) {
          int v98 = v95 - 1;
        }
        else {
          int v98 = v95;
        }
        sub_1B0CCB908((uint64_t *)v9, 77, (v98 >> 1), v8, 0, v96, 4294967290, v97);
        return v8;
      case 0x9Bu:
        uint64_t v99 = (uint64_t)a1;
        int v100 = v11;
        int v101 = 0;
        goto LABEL_108;
      case 0x9Cu:
        sub_1B0D254B8(v9, 78, *((unsigned int *)v11 + 12), v8, a5, a6, a7, a8);
        if (!*(unsigned char *)(*((void *)v11 + 1) + 1)) {
          return v8;
        }
        uint64_t v102 = (_DWORD *)a1[40];
        if (!v102) {
          goto LABEL_82;
        }
        int v103 = 2;
        while (v102[v103] != *((_DWORD *)v11 + 12))
        {
          v103 += v102[v103 + 1];
          if (v103 >= v102[1])
          {
LABEL_82:
            uint64_t v104 = 0;
            goto LABEL_273;
          }
        }
        uint64_t v104 = (uint64_t)&v102[v103 + 2];
LABEL_273:
        *uint64_t v102 = 0;
        sub_1B0D2FF04((void *)v9, v104, -1);
        return v8;
      case 0x9Du:
        long long v291 = 0u;
        long long v292 = 0u;
        long long v289 = 0u;
        long long v290 = 0u;
        long long v288 = 0u;
        int v105 = (void *)*a1;
        int v106 = (int *)*((void *)v11 + 4);
        int v107 = *v106;
        uint64_t v108 = (*((_DWORD *)a1 + 17) - 1);
        *((_DWORD *)a1 + 17) = v108;
        uint64_t v109 = *((void *)v11 + 2);
        if (v109)
        {
          uint64_t v110 = (unsigned __int8 *)sub_1B0CAE048((uint64_t)v105, *((unsigned __int8 **)v11 + 2), 0, 0);
          uint64_t v116 = (uint64_t)v110;
          if (*((unsigned char *)v105 + 103))
          {
            if (v110) {
              sub_1B0D1DF88(v105, v110);
            }
            goto LABEL_280;
          }
          uint64_t v280 = v106;
          uint64_t v284 = v105;
          uint64_t v167 = v8;
          int v217 = sub_1B0D3181C((uint64_t)a1, v110, (_DWORD *)&v294 + 1, v111, v112, v113, v114, v115);
          sub_1B0D317C4(v116, v217);
          long long v288 = 0u;
          long long v291 = 0u;
          long long v292 = 0u;
          long long v290 = 0u;
          LOBYTE(v288) = 53;
          uint64_t v282 = (unsigned __int8 *)v116;
          long long v289 = (unint64_t)v116;
          int v168 = &v288;
          HIDWORD(v294) = 0;
        }
        else
        {
          uint64_t v280 = v106;
          uint64_t v282 = 0;
          uint64_t v284 = v105;
          uint64_t v167 = v8;
          int v168 = 0;
        }
        int v218 = v107 - 1;
        char v287 = v107;
        if (v107 >= 2)
        {
          int v219 = 0;
          uint64_t v220 = (unsigned __int8 **)(v280 + 8);
          do
          {
            if (v109) {
              *((void *)&v289 + 1) = *(v220 - 3);
            }
            else {
              int v168 = (long long *)*(v220 - 3);
            }
            int v221 = *((_DWORD *)a1 + 17);
            *((_DWORD *)a1 + 17) = v221 - 1;
            sub_1B0CC2204(a1, v168);
            sub_1B0D2F9D0((uint64_t)a1, *v220, v167);
            int v222 = *(_DWORD *)(v9 + 144);
            if (*(_DWORD *)(v9 + 148) <= v222)
            {
              sub_1B0D25510(v9, 9, 0, v108, 0, a6, a7, a8);
            }
            else
            {
              *(_DWORD *)(v9 + 144) = v222 + 1;
              uint64_t v223 = *(void *)(v9 + 136) + 40 * v222;
              *(void *)uint64_t v223 = 9;
              *(_DWORD *)(v223 + 8) = v108;
              *(void *)(v223 + 12) = 0;
              *(void *)(v223 + 28) = 0;
              *(void *)(v223 + 20) = 0;
              *(_DWORD *)(v223 + 36) = 0;
            }
            uint64_t v224 = *(void *)(v9 + 24);
            int v225 = -v221;
            if (*(_DWORD *)(v224 + 68) + *(_DWORD *)(v224 + 72) >= 0) {
              *(_DWORD *)(*(void *)(v224 + 80) + 4 * v225) = *(_DWORD *)(v9 + 144);
            }
            else {
              sub_1B0D34EC8(v224, v9, v225);
            }
            v220 += 6;
            v219 += 2;
          }
          while (v218 > v219);
        }
        if (v287)
        {
          unsigned int v226 = *(unsigned __int8 **)&v280[6 * v218 + 2];
          uint64_t v8 = v167;
          sub_1B0D2F9D0((uint64_t)a1, v226, v167);
        }
        else
        {
          uint64_t v8 = v167;
          sub_1B0D254B8(v9, 75, 0, v167, a5, a6, a7, a8);
        }
        if (v282) {
          sub_1B0D1DF88(v284, v282);
        }
        sub_1B0D31CA8(v9);
        sub_1B0D31504(v9, v108);
        goto LABEL_280;
      case 0xA7u:
        goto LABEL_290;
      case 0xA8u:
        int v117 = (_DWORD *)*((void *)v11 + 8);
        if (v117)
        {
          int v118 = *((__int16 *)v11 + 26);
          if ((v118 & 0x80000000) == 0 && v117[12] > v118) {
            return (v117[3] + v118 + v117[8]);
          }
        }
        sub_1B0CEF2BC((uint64_t)a1, "misuse of aggregate: %#T()", a3, a4, a5, a6, a7, a8, (char)v11);
        goto LABEL_280;
      case 0xA9u:
        uint64_t v119 = *((void *)v11 + 8);
        int v120 = *((__int16 *)v11 + 26);
        if (*(_DWORD *)(v119 + 32) <= v120)
        {
          uint64_t v164 = v9;
          uint64_t v165 = 75;
          uint64_t v166 = 0;
LABEL_279:
          sub_1B0D254B8(v164, v165, v166, v8, a5, a6, a7, a8);
LABEL_280:
          int v227 = HIDWORD(v294);
          if (HIDWORD(v294))
          {
            uint64_t v228 = *((unsigned __int8 *)a1 + 31);
            if (v228 <= 7)
            {
              *((unsigned char *)a1 + 31) = v228 + 1;
              *((_DWORD *)a1 + v228 + 56) = v227;
            }
          }
          int v229 = v294;
          if (v294)
          {
            uint64_t v230 = *((unsigned __int8 *)a1 + 31);
            if (v230 <= 7)
            {
              *((unsigned char *)a1 + 31) = v230 + 1;
              *((_DWORD *)a1 + v230 + 56) = v229;
            }
          }
          return v8;
        }
        if (!*(unsigned char *)v119) {
          return (*(_DWORD *)(v119 + 12) + v120);
        }
        if (*(unsigned char *)(v119 + 1))
        {
          uint64_t v121 = *(void *)(v119 + 24);
          int v122 = *((__int16 *)v11 + 26);
          uint64_t v123 = *(void *)(v121 + 24 * v120);
          sub_1B0C8A924(v9, 94, *(unsigned int *)(v119 + 8), *(__int16 *)(v121 + 24 * v120 + 22), v8, a6, a7, a8);
          if (v123
            && (*(__int16 *)(v121 + 24 * v122 + 20) & 0x80000000) == 0
            && *(unsigned char *)(*(void *)(v123 + 8) + 16 * *(unsigned __int16 *)(v121 + 24 * v122 + 20) + 9) == 69)
          {
LABEL_97:
            uint64_t v20 = v9;
            uint64_t v21 = 87;
LABEL_10:
            sub_1B0D2F978(v20, v21, v8, v15, v16, v17, v18, v19);
            return v8;
          }
          return v8;
        }
        if (!*((void *)v11 + 9))
        {
          sub_1B0C8A924(v9, 94, *((unsigned int *)v11 + 11), *((unsigned int *)v11 + 12), v8, a6, a7, a8);
          return v8;
        }
LABEL_290:
        if ((v11[4] & 0x20) != 0)
        {
          uint64_t v8 = sub_1B0C9E080(a1, *((void *)v11 + 2), v8);
          uint64_t v234 = *((unsigned int *)v11 + 12);
          if ((v234 & 0x80000000) != 0 || (uint64_t v235 = *((void *)v11 + 9), (int)v234 >= *(__int16 *)(v235 + 54)))
          {
            LOBYTE(v236) = 68;
          }
          else
          {
            int v236 = *(char *)(*(void *)(v235 + 8) + 16 * v234 + 9);
            if (v236 < 66) {
              return v8;
            }
          }
          sub_1B0CCB908((uint64_t *)v9, 96, v8, 1, 0, (uint64_t)&aBcdef[v236 - 66], 0xFFFFFFFFLL, v233);
          return v8;
        }
        uint64_t v231 = *((unsigned int *)v11 + 11);
        if ((v231 & 0x80000000) == 0) {
          goto LABEL_294;
        }
        int v232 = *((_DWORD *)a1 + 16);
        if ((v232 & 0x80000000) == 0)
        {
          uint64_t v231 = (v232 - 1);
LABEL_294:
          sub_1B0C9FA58((uint64_t)a1, *((void *)v11 + 9), *((unsigned int *)v11 + 12), v231, v8, v11[2], a7, a8, v10);
          return v8;
        }
        uint64_t v246 = *((unsigned int *)v11 + 12);
        if ((v246 & 0x80000000) != 0) {
          return ~v232;
        }
        uint64_t v247 = *((void *)v11 + 9);
        uint64_t v248 = *(void *)(v247 + 8) + 16 * v246;
        uint64_t v255 = sub_1B0D30554(v247, (__int16)v246) - v232;
        uint64_t v257 = (__int16 *)(v248 + 14);
        __int16 v256 = *(_WORD *)(v248 + 14);
        if ((v256 & 0x60) != 0)
        {
          if ((*(_WORD *)(v248 + 14) & 0x100) != 0)
          {
            sub_1B0CEF2BC((uint64_t)a1, "generated column loop on \"%s\"", v249, v250, v251, v252, v253, v254, *(void *)v248);
            return 0;
          }
          else
          {
            __int16 v258 = v256 | 0x100;
            *uint64_t v257 = v256 | 0x100;
            if ((v256 & 0x80) != 0)
            {
              sub_1B0D30694((uint64_t)a1, v247, v248, v255, v251, v252, v253, v254);
              __int16 v258 = *v257;
            }
            *uint64_t v257 = v258 & 0xFE7F;
            return v255;
          }
        }
        if (*(unsigned char *)(v248 + 9) == 69)
        {
          sub_1B0D254B8(v9, 81, v255, v8, v251, v252, v253, v254);
          goto LABEL_97;
        }
        return v255;
      case 0xAAu:
        BOOL v124 = sub_1B0D30858((uint64_t)v11);
        sub_1B0D254B8(v9, 71, v124, v8, v125, v126, v127, v128);
        return v8;
      case 0xACu:
        if (v11[7]) {
          return *(unsigned int *)(*((void *)v11 + 9) + 96);
        }
        uint64_t v129 = (void *)*a1;
        unsigned int v130 = *(unsigned __int8 *)(*a1 + 100);
        if (*((unsigned char *)a1 + 35))
        {
          *((void *)&v289 + 1) = 0;
          long long v290 = 0u;
          *(void *)&long long v288 = 0;
          WORD2(v290) = 2;
          *((void *)&v288 + 1) = sub_1B0CADEA4;
          *(void *)&long long v289 = sub_1B0D32AA8;
          sub_1B0D32AB4((uint64_t)&v288, (uint64_t)v11);
          if (WORD2(v290))
          {
            return sub_1B0D30A9C((void **)a1, v11, 0xFFFFFFFFLL);
          }
        }
        uint64_t v176 = (unsigned int *)*((void *)v11 + 4);
        if (v176) {
          uint64_t v177 = *v176;
        }
        else {
          uint64_t v177 = 0;
        }
        uint64_t v243 = sub_1B0C7D668((uint64_t)v129, *((char **)v11 + 1), v177, v130, 0);
        if (!v243 && (!*((unsigned char *)a1 + 301) || (uint64_t v243 = sub_1B0C7D668((uint64_t)v129, "unknown", v177, v130, 0)) == 0)
          || *((void *)v243 + 4))
        {
          sub_1B0CEF2BC((uint64_t)a1, "unknown function: %#T()", v237, v238, v239, v240, v241, v242, (char)v11);
          goto LABEL_280;
        }
        int v244 = *((_DWORD *)v243 + 1);
        if (v176 && (v244 & 0x400000) != 0)
        {
          int v245 = *((_DWORD *)v243 + 2);
          return sub_1B0D30D58((uint64_t)a1, (unsigned __int8 **)v176, v245, v8, v239, v240, v241, v242);
        }
        if ((v244 & 0x280000) != 0) {
          sub_1B0D310D0((uint64_t)a1, (uint64_t)v11, (uint64_t)v243, v238, v239, v240, v241, v242);
        }
        unsigned int v278 = v8;
        if ((int)v177 < 1)
        {
          if (!v176)
          {
            uint64_t v264 = 0;
            uint64_t v261 = 0;
            if ((*((unsigned char *)v243 + 4) & 0x20) == 0) {
              goto LABEL_362;
            }
            goto LABEL_360;
          }
          uint64_t v260 = 0;
        }
        else
        {
          unint64_t v259 = 0;
          uint64_t v260 = 0;
          uint64_t v261 = 0;
          uint64_t v285 = v176;
          uint64_t v262 = (uint64_t *)(v176 + 2);
          do
          {
            if (v259 <= 0x1F)
            {
              if (sub_1B0D2B074(*v262)) {
                uint64_t v261 = (1 << v259) | v261;
              }
              else {
                uint64_t v261 = v261;
              }
            }
            if ((*((unsigned char *)v243 + 4) & 0x20) != 0 && !v260) {
              uint64_t v260 = sub_1B0C9ADE0((uint64_t)a1, (unsigned __int8 *)*v262, v237, v238, v239, v240, v241, v242);
            }
            ++v259;
            v262 += 3;
          }
          while (v177 != v259);
          uint64_t v176 = v285;
          if (!v285)
          {
            uint64_t v264 = 0;
            uint64_t v177 = v177;
            goto LABEL_349;
          }
          uint64_t v177 = v177;
          if (v261)
          {
            int v263 = *((_DWORD *)a1 + 14);
            uint64_t v264 = (v263 + 1);
            *((_DWORD *)a1 + 14) = v263 + v177;
            goto LABEL_342;
          }
        }
        uint64_t v264 = sub_1B0D31118((uint64_t)a1, v177);
        uint64_t v261 = 0;
LABEL_342:
        if ((*((_DWORD *)v243 + 1) & 0xC0) != 0)
        {
          uint64_t v265 = (unsigned __int8 *)*((void *)v176 + 1);
          int v266 = *v265;
          if (v266 == 169 || v266 == 167) {
            v265[2] = *((_DWORD *)v243 + 1) & 0xC0;
          }
        }
        sub_1B0D31188((uint64_t)a1, v176, v264, 0, 2, v240, v241, v242);
LABEL_349:
        if ((int)v177 < 2)
        {
          if (v177 != 1) {
            goto LABEL_355;
          }
        }
        else if (v11[5])
        {
          __int16 v267 = (unsigned __int8 **)(v176 + 8);
LABEL_354:
          uint64_t v243 = sub_1B0CCFB6C((uint64_t)v129, (long long *)v243, v177, *v267);
LABEL_355:
          if ((*((unsigned char *)v243 + 4) & 0x20) == 0) {
            goto LABEL_362;
          }
          if (v260)
          {
LABEL_361:
            sub_1B0CCB908((uint64_t *)v9, 85, 0, 0, 0, v260, 4294967294, v242);
LABEL_362:
            uint64_t v8 = v278;
            sub_1B0D313E8(a1, v261, v264, v278, v177, (uint64_t)v243, v11[2]);
            if (v177 && !v261)
            {
              if (v177 == 1)
              {
                if (v264)
                {
                  uint64_t v268 = *((unsigned __int8 *)a1 + 31);
                  if (v268 <= 7)
                  {
                    *((unsigned char *)a1 + 31) = v268 + 1;
                    *((_DWORD *)a1 + v268 + 56) = v264;
                  }
                }
              }
              else if (*((_DWORD *)a1 + 10) < (int)v177)
              {
                *((_DWORD *)a1 + 10) = v177;
                *((_DWORD *)a1 + 11) = v264;
              }
            }
            return v8;
          }
LABEL_360:
          uint64_t v260 = v129[2];
          goto LABEL_361;
        }
        __int16 v267 = (unsigned __int8 **)(v176 + 2);
        goto LABEL_354;
      case 0xADu:
        int v100 = (unsigned __int8 *)*((void *)v11 + 2);
        int v132 = *v100;
        if (v132 == 153)
        {
          int v92 = (char *)*((void *)v100 + 1);
          uint64_t v93 = (uint64_t *)v9;
          int v94 = 1;
LABEL_156:
          sub_1B0D3089C(v93, v92, v94, v8);
        }
        else
        {
          if (v132 != 155)
          {
            LOBYTE(v293[0]) = -101;
            *(void *)((char *)v293 + 4) = 67584;
            uint64_t v169 = sub_1B0D30948((uint64_t)a1, (unsigned __int8 *)v293, (_DWORD *)&v294 + 1);
            uint64_t v143 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 2), &v294);
            uint64_t v145 = v9;
            uint64_t v146 = 107;
            uint64_t v144 = v169;
            goto LABEL_158;
          }
          uint64_t v99 = (uint64_t)a1;
          int v101 = 1;
LABEL_108:
          sub_1B0CC6050(v99, (uint64_t)v100, v101, v8, a5, a6, a7, a8);
        }
        return v8;
      case 0xAEu:
      case 0xB5u:
LABEL_3:
        uint64_t v11 = (unsigned __int8 *)*((void *)v11 + 2);
        if (v11) {
          continue;
        }
        goto LABEL_11;
      case 0xAFu:
        uint64_t v133 = sub_1B0D30948((uint64_t)a1, *((unsigned __int8 **)v11 + 2), (_DWORD *)&v294 + 1);
        BOOL v134 = sub_1B0D30858(*((void *)v11 + 3));
        sub_1B0CEF5FC(v9, 91, v133, v8, !v134, v134 ^ (v11[2] == 45), v135, v136);
        goto LABEL_280;
      case 0xB0u:
        return *((unsigned int *)v11 + 11);
      case 0xB1u:
        goto LABEL_179;
      case 0xB2u:
        unsigned __int8 v137 = (unsigned __int8 *)*((void *)v11 + 2);
        int v138 = *((_DWORD *)v137 + 11);
        if (!v138 || (unsigned int v139 = v137[2], *((unsigned __int8 *)a1 + 38) > v139))
        {
          int v138 = sub_1B0CC5A70((void **)a1, *((unsigned __int8 **)v11 + 2), a3, a4, a5, a6, a7, a8);
          *((_DWORD *)v137 + 11) = v138;
          unsigned int v139 = *((unsigned __int8 *)a1 + 38);
          v137[2] = v139;
        }
        if (*v137 != 176) {
          unsigned int v139 = *v137;
        }
        if (v139 == 138)
        {
          uint64_t v140 = (int **)(*((void *)v137 + 4) + 32);
        }
        else
        {
          if (v139 != 177)
          {
            int v170 = 1;
LABEL_162:
            if (*((_DWORD *)v11 + 11) != v170)
            {
              sub_1B0CEF2BC((uint64_t)a1, "%d columns assigned %d values", a3, a4, a5, a6, a7, a8, *((_DWORD *)v11 + 11));
              int v138 = *((_DWORD *)v137 + 11);
            }
            return (*((_DWORD *)v11 + 12) + v138);
          }
          uint64_t v140 = (int **)(v137 + 32);
        }
        int v170 = **v140;
        goto LABEL_162;
      case 0xB3u:
        char v141 = *((unsigned char *)a1 + 35);
        uint64_t v142 = *((void *)v11 + 8);
        if (!v142) {
          goto LABEL_150;
        }
        if (*(unsigned char *)v142)
        {
          if (*(unsigned char *)(v142 + 1))
          {
            uint64_t v143 = *(unsigned int *)(v142 + 8);
            uint64_t v144 = *(__int16 *)(*(void *)(v142 + 24) + 24 * *((__int16 *)v11 + 26) + 22);
            uint64_t v145 = v9;
            uint64_t v146 = 94;
LABEL_158:
            sub_1B0C8A924(v145, v146, v143, v144, v8, a6, a7, a8);
          }
          else
          {
LABEL_150:
            int v163 = sub_1B0C8A924(v9, 20, *((unsigned int *)v11 + 11), 0, v8, a6, a7, a8);
            *((unsigned char *)a1 + 35) = 0;
            sub_1B0D2F9D0((uint64_t)a1, *((unsigned __int8 **)v11 + 2), v8);
            *((unsigned char *)a1 + 35) = v141;
            int v155 = *(_DWORD *)(v9 + 144);
            if (*(unsigned char *)(*(void *)v9 + 103)) {
LABEL_151:
            }
              dword_1E9B52248 = v155;
            else {
              *(_DWORD *)(*(void *)(v9 + 136) + 40 * v163 + 8) = v155;
            }
          }
        }
        else
        {
          uint64_t v8 = (*(_DWORD *)(v142 + 12) + *((__int16 *)v11 + 26));
        }
        goto LABEL_280;
      default:
        goto LABEL_11;
    }
  }
}

uint64_t sub_1B0C9FA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int16x8_t a9)
{
  int v9 = a6;
  sub_1B0D32578(*(void *)(a1 + 16), a2, a4, a3, a5, a6, a7, a8, a9);
  if (v9)
  {
    uint64_t v12 = *(void *)(a1 + 16);
    if (*(unsigned char *)(*(void *)v12 + 103)) {
      uint64_t v13 = &byte_1E9B52240;
    }
    else {
      uint64_t v13 = (char *)(*(void *)(v12 + 136) + 40 * *(int *)(v12 + 144) - 40);
    }
    int v14 = *v13;
    if (v14 == 94) {
      goto LABEL_8;
    }
    if (v14 == 175)
    {
      LOWORD(v9) = v9 & 1;
LABEL_8:
      *((_WORD *)v13 + 1) = v9;
    }
  }
  return a5;
}

void *sub_1B0C9FAF0(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a1;
  int v9 = *a1;
  uint64_t v10 = (*a1)[2];
  uint64_t v182 = **a1;
  uint64_t v11 = *((unsigned __int8 *)a1 + 64);
  if (!*((unsigned char *)a1 + 64))
  {
    char v176 = 0;
    goto LABEL_216;
  }
  char v185 = 0;
  uint64_t v183 = a1[1];
  int v184 = *a1;
  int v180 = *(_DWORD *)(v10 + 144);
  uint64_t v12 = &byte_1E9B52240;
  do
  {
    uint64_t v13 = v11 - 1;
    int v187 = &v8[15 * v11 - 15];
    int v14 = (unsigned int *)v187[114];
    if (v14)
    {
      uint64_t v15 = &v8[15 * v13];
      uint64_t v16 = *(void *)(v10 + 24);
      int v17 = ~*((_DWORD *)v15 + 220);
      if (*(_DWORD *)(v16 + 68) + *(_DWORD *)(v16 + 72) < 0) {
        sub_1B0D34EC8(v16, v10, v17);
      }
      else {
        *(_DWORD *)(*(void *)(v16 + 80) + 4 * v17) = *(_DWORD *)(v10 + 144);
      }
      *((_DWORD *)v15 + 220) = 0;
      signed int v18 = *(_DWORD *)(v10 + 148);
      signed int v19 = *(_DWORD *)(v10 + 144);
      v14[4] = v19;
      uint64_t v20 = v14[2];
      uint64_t v21 = v14[3];
      if (v18 <= v19)
      {
        sub_1B0D25510(v10, 67, v20, v21, 1, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v10 + 144) = v19 + 1;
        uint64_t v22 = *(void *)(v10 + 136) + 40 * v19;
        *(_DWORD *)uint64_t v22 = 67;
        *(_DWORD *)(v22 + 4) = v20;
        *(_DWORD *)(v22 + 8) = v21;
        *(_DWORD *)(v22 + 12) = 1;
        *(void *)(v22 + 24) = 0;
        *(void *)(v22 + 32) = 0;
        *(void *)(v22 + 16) = 0;
      }
      ++v185;
    }
    uint64_t v23 = &v8[15 * v13];
    uint64_t v24 = v23[119];
    int v186 = (char *)v23 + 921;
    if (*((unsigned __int8 *)v23 + 921) == 184)
    {
      int v25 = (int)v8[15 * v13 + 110];
      if (v25)
      {
        uint64_t v26 = *(void *)(v10 + 24);
        int v27 = ~v25;
        if (*(_DWORD *)(v26 + 68) + *(_DWORD *)(v26 + 72) < 0) {
          sub_1B0D34EC8(v26, v10, v27);
        }
        else {
          *(_DWORD *)(*(void *)(v26 + 80) + 4 * v27) = *(_DWORD *)(v10 + 144);
        }
      }
      goto LABEL_51;
    }
    if (*((unsigned char *)v8 + 67) == 2
      && v11 == *((unsigned __int8 *)v8 + 64)
      && (*((unsigned char *)v24 + 49) & 2) != 0
      && (uint64_t v28 = v24[4], (*(_WORD *)(v28 + 99) & 0x80) != 0)
      && (uint64_t v29 = *((unsigned __int16 *)v24 + 15), *((_WORD *)v24 + 15))
      && *(__int16 *)(*(void *)(v28 + 16) + 2 * *((unsigned __int16 *)v24 + 15)) >= 36)
    {
      uint64_t v30 = 0;
      uint64_t v31 = (*((_DWORD *)v184 + 14) + 1);
      uint64_t v32 = (unsigned int *)&v8[15 * v13 + 108];
      uint64_t v181 = v11;
      do
      {
        uint64_t v38 = *v32;
        uint64_t v39 = (v31 + v30);
        int v40 = *(_DWORD *)(v10 + 144);
        if (*(_DWORD *)(v10 + 148) > v40)
        {
          *(_DWORD *)(v10 + 144) = v40 + 1;
          uint64_t v37 = *(void *)(v10 + 136) + 40 * v40;
          *(_DWORD *)uint64_t v37 = 94;
          *(_DWORD *)(v37 + 4) = v38;
          *(_DWORD *)(v37 + 8) = v30;
          *(_DWORD *)(v37 + 12) = v39;
          *(void *)(v37 + 24) = 0;
          *(void *)(v37 + 32) = 0;
          *(void *)(v37 + 16) = 0;
        }
        else
        {
          int v41 = v8;
          int v42 = v12;
          uint64_t v43 = v24;
          uint64_t v44 = v32;
          sub_1B0D25510(v10, 94, v38, v30, v39, a6, a7, a8);
          uint64_t v32 = v44;
          uint64_t v24 = v43;
          uint64_t v12 = v42;
          uint64_t v8 = v41;
          uint64_t v11 = v181;
        }
        uint64_t v30 = (v30 + 1);
      }
      while (v29 != v30);
      *((_DWORD *)v184 + 14) += v29 + 1;
      if (*v186 == 38) {
        uint64_t v134 = 21;
      }
      else {
        uint64_t v134 = 24;
      }
      uint64_t v135 = *v32;
      int v33 = *(_DWORD *)(v10 + 144);
      if (*(_DWORD *)(v10 + 148) <= v33)
      {
        int v33 = sub_1B0D2575C(v10, v134, v135, 0, v31, v29, a7, a8);
      }
      else
      {
        *(_DWORD *)(v10 + 144) = v33 + 1;
        uint64_t v136 = *(void *)(v10 + 136) + 40 * v33;
        *(unsigned char *)uint64_t v136 = v134;
        *(_WORD *)(v136 + 2) = 0;
        *(_DWORD *)(v136 + 4) = v135;
        *(_DWORD *)(v136 + 8) = 0;
        *(_DWORD *)(v136 + 12) = v31;
        *(_DWORD *)(v136 + 16) = v29;
        *(unsigned char *)(v136 + 1) = -3;
        *(void *)(v136 + 24) = 0;
        *(void *)(v136 + 32) = 0;
      }
      uint64_t v137 = LODWORD(v8[15 * v13 + 116]);
      int v138 = *(_DWORD *)(v10 + 144);
      if (*(_DWORD *)(v10 + 148) <= v138)
      {
        sub_1B0D25510(v10, 9, 1, v137, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v10 + 144) = v138 + 1;
        uint64_t v139 = *(void *)(v10 + 136) + 40 * v138;
        *(void *)uint64_t v139 = 0x100000009;
        *(_DWORD *)(v139 + 8) = v137;
        *(void *)(v139 + 12) = 0;
        *(void *)(v139 + 28) = 0;
        *(void *)(v139 + 20) = 0;
        *(_DWORD *)(v139 + 36) = 0;
      }
    }
    else
    {
      int v33 = 0;
    }
    int v34 = (int)v8[15 * v13 + 110];
    if (v34)
    {
      uint64_t v35 = *(void *)(v10 + 24);
      int v36 = ~v34;
      if (*(_DWORD *)(v35 + 68) + *(_DWORD *)(v35 + 72) < 0) {
        sub_1B0D34EC8(v35, v10, v36);
      }
      else {
        *(_DWORD *)(*(void *)(v35 + 80) + 4 * v36) = *(_DWORD *)(v10 + 144);
      }
    }
    uint64_t v45 = *v186;
    uint64_t v46 = &v8[15 * v13];
    uint64_t v47 = *((unsigned int *)v46 + 231);
    uint64_t v48 = *((unsigned int *)v46 + 232);
    a5 = *((unsigned __int8 *)v46 + 922);
    int v49 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) <= v49)
    {
      sub_1B0D25510(v10, v45, v47, v48, a5, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v10 + 144) = v49 + 1;
      uint64_t v50 = *(void *)(v10 + 136) + 40 * v49;
      *(unsigned char *)uint64_t v50 = v45;
      *(_WORD *)(v50 + 2) = 0;
      *(_DWORD *)(v50 + 4) = v47;
      *(_DWORD *)(v50 + 8) = v48;
      *(_DWORD *)(v50 + 12) = a5;
      *(unsigned char *)(v50 + 1) = 0;
      *(void *)(v50 + 24) = 0;
      *(void *)(v50 + 32) = 0;
      *(void *)(v50 + 16) = 0;
    }
    int v51 = *(_DWORD *)(v10 + 144);
    if (v51 >= 1) {
      *(_WORD *)(*(void *)(v10 + 136) + 40 * (v51 - 1) + 2) = BYTE3(v8[15 * v13 + 115]);
    }
    int v52 = &v8[15 * v13];
    if (!*((_DWORD *)v52 + 223)) {
      goto LABEL_45;
    }
    uint64_t v53 = *(void *)(v10 + 24);
    int v54 = ~LODWORD(v8[15 * v13 + 112]);
    if (*(_DWORD *)(v53 + 68) + *(_DWORD *)(v53 + 72) < 0) {
      sub_1B0D34EC8(v53, v10, v54);
    }
    else {
      *(_DWORD *)(*(void *)(v53 + 80) + 4 * v54) = v51;
    }
    uint64_t v55 = *((unsigned int *)v52 + 223);
    uint64_t v56 = (*((_DWORD *)v46 + 232) - 1);
    int v57 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) > v57)
    {
      *(_DWORD *)(v10 + 144) = v57 + 1;
      uint64_t v58 = *(void *)(v10 + 136) + 40 * v57;
      *(_DWORD *)uint64_t v58 = 61;
      *(_DWORD *)(v58 + 4) = v55;
      *(_DWORD *)(v58 + 8) = v56;
      *(void *)(v58 + 12) = 0;
      *(void *)(v58 + 28) = 0;
      *(void *)(v58 + 20) = 0;
      *(_DWORD *)(v58 + 36) = 0;
LABEL_45:
      if (!v33) {
        goto LABEL_51;
      }
      goto LABEL_48;
    }
    sub_1B0D25510(v10, 61, v55, v56, 0, a6, a7, a8);
    if (!v33) {
      goto LABEL_51;
    }
LABEL_48:
    uint64_t v59 = (uint64_t)v12;
    if (!*(unsigned char *)(*(void *)v10 + 103)) {
      uint64_t v59 = *(void *)(v10 + 136) + 40 * v33;
    }
    *(_DWORD *)(v59 + 8) = *(_DWORD *)(v10 + 144);
LABEL_51:
    uint64_t v60 = v11;
    uint64_t v61 = v187 + 107;
    if ((*((unsigned char *)v24 + 49) & 8) != 0)
    {
      uint64_t v62 = &v8[15 * v13];
      if (*((int *)v62 + 234) >= 1)
      {
        uint64_t v63 = *(void *)(v10 + 24);
        int v64 = ~LODWORD(v8[15 * v13 + 109]);
        if (*(_DWORD *)(v63 + 68) + *(_DWORD *)(v63 + 72) < 0) {
          sub_1B0D34EC8(v63, v10, v64);
        }
        else {
          *(_DWORD *)(*(void *)(v63 + 80) + 4 * v64) = *(_DWORD *)(v10 + 144);
        }
        int v65 = *((_DWORD *)v62 + 234);
        if (v65 >= 1)
        {
          int v66 = *(_DWORD *)(v10 + 144);
          int v67 = *(unsigned __int8 *)(*(void *)v10 + 103);
          int v68 = v65 + 1;
          uint64_t v69 = (unsigned int *)v62[118] + 5 * (v65 - 1) + 2;
          do
          {
            uint64_t v72 = (uint64_t)v12;
            if (!v67) {
              uint64_t v72 = *(void *)(v10 + 136) + 40 * (int)*(v69 - 1) + 40;
            }
            *(_DWORD *)(v72 + 8) = v66;
            if (*((unsigned __int8 *)v69 + 8) != 184)
            {
              if (v69[1])
              {
                int v73 = v24[6] & 0x40400;
                if (*v61)
                {
                  uint64_t v74 = *(v69 - 2);
                  if (v73 == 0x40000) {
                    int v75 = v66 + 1;
                  }
                  else {
                    int v75 = v66;
                  }
                  uint64_t v76 = (v75 + 2);
                  if (*(_DWORD *)(v10 + 148) <= v66)
                  {
                    sub_1B0D25510(v10, 25, v74, v76, 0, a6, a7, a8);
                  }
                  else
                  {
                    *(_DWORD *)(v10 + 144) = v66 + 1;
                    uint64_t v77 = *(void *)(v10 + 136) + 40 * v66;
                    *(_DWORD *)uint64_t v77 = 25;
                    *(_DWORD *)(v77 + 4) = v74;
                    *(_DWORD *)(v77 + 8) = v76;
                    *(void *)(v77 + 12) = 0;
                    *(void *)(v77 + 28) = 0;
                    *(void *)(v77 + 20) = 0;
                    *(_DWORD *)(v77 + 36) = 0;
                  }
                }
                int v66 = *(_DWORD *)(v10 + 144);
                if (v73 == 0x40000)
                {
                  uint64_t v78 = LODWORD(v8[15 * v13 + 108]);
                  uint64_t v79 = (v66 + 2);
                  a5 = *v69;
                  a6 = v69[1];
                  if (*(_DWORD *)(v10 + 148) <= v66)
                  {
                    sub_1B0D2575C(v10, 26, v78, v79, a5, a6, a7, a8);
                  }
                  else
                  {
                    *(_DWORD *)(v10 + 144) = v66 + 1;
                    uint64_t v80 = *(void *)(v10 + 136) + 40 * v66;
                    *(_DWORD *)uint64_t v80 = 64794;
                    *(_DWORD *)(v80 + 4) = v78;
                    *(_DWORD *)(v80 + 8) = v79;
                    *(_DWORD *)(v80 + 12) = a5;
                    *(_DWORD *)(v80 + 16) = a6;
                    *(void *)(v80 + 24) = 0;
                    *(void *)(v80 + 32) = 0;
                  }
                  int v66 = *(_DWORD *)(v10 + 144);
                  uint64_t v81 = (uint64_t)v12;
                  if (!*(unsigned char *)(*(void *)v10 + 103)) {
                    uint64_t v81 = *(void *)(v10 + 136) + 40 * (int)*(v69 - 1) + 40;
                  }
                  *(_DWORD *)(v81 + 8) = v66;
                }
              }
              uint64_t v82 = *((unsigned __int8 *)v69 + 8);
              uint64_t v83 = *(v69 - 2);
              uint64_t v84 = *(v69 - 1);
              if (*(_DWORD *)(v10 + 148) > v66)
              {
                *(_DWORD *)(v10 + 144) = v66 + 1;
                uint64_t v70 = *(void *)(v10 + 136) + 40 * v66;
                *(unsigned char *)uint64_t v70 = v82;
                *(_WORD *)(v70 + 2) = 0;
                *(_DWORD *)(v70 + 4) = v83;
                *(_DWORD *)(v70 + 8) = v84;
                *(unsigned char *)(v70 + 1) = 0;
                *(void *)(v70 + 12) = 0;
                *(void *)(v70 + 28) = 0;
                *(void *)(v70 + 20) = 0;
                *(_DWORD *)(v70 + 36) = 0;
              }
              else
              {
                sub_1B0D25510(v10, v82, v83, v84, 0, a6, a7, a8);
              }
            }
            int v66 = *(_DWORD *)(v10 + 144);
            int v67 = *(unsigned __int8 *)(*(void *)v10 + 103);
            uint64_t v71 = (uint64_t)v12;
            if (!*(unsigned char *)(*(void *)v10 + 103)) {
              uint64_t v71 = *(void *)(v10 + 136) + 40 * (int)*(v69 - 1) - 40;
            }
            *(_DWORD *)(v71 + 8) = v66;
            --v68;
            v69 -= 5;
          }
          while (v68 > 1);
        }
      }
    }
    uint64_t v85 = *(void *)(v10 + 24);
    int v86 = ~HIDWORD(v8[15 * v13 + 108]);
    if (*(_DWORD *)(v85 + 68) + *(_DWORD *)(v85 + 72) < 0) {
      sub_1B0D34EC8(v85, v10, v86);
    }
    else {
      *(_DWORD *)(*(void *)(v85 + 80) + 4 * v86) = *(_DWORD *)(v10 + 144);
    }
    uint64_t v87 = v60;
    uint64_t v88 = v187[114];
    if (v88)
    {
      uint64_t v89 = *((unsigned int *)v88 + 2);
      int v90 = *(_DWORD *)(v10 + 144);
      if (*(_DWORD *)(v10 + 148) <= v90)
      {
        sub_1B0D25510(v10, 67, v89, 0, 1, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v10 + 144) = v90 + 1;
        uint64_t v91 = *(void *)(v10 + 136) + 40 * v90;
        *(_DWORD *)uint64_t v91 = 67;
        *(_DWORD *)(v91 + 4) = v89;
        *(void *)(v91 + 8) = 0x100000000;
        *(void *)(v91 + 24) = 0;
        *(void *)(v91 + 32) = 0;
        *(void *)(v91 + 16) = 0;
      }
    }
    int v92 = &v8[15 * v13];
    uint64_t v93 = *((unsigned int *)v92 + 219);
    if (v93)
    {
      int v94 = *(_DWORD *)(v10 + 144);
      if (*(_DWORD *)(v10 + 148) <= v94)
      {
        sub_1B0D25510(v10, 9, 0, v93, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v10 + 144) = v94 + 1;
        uint64_t v95 = *(void *)(v10 + 136) + 40 * v94;
        *(void *)uint64_t v95 = 9;
        *(_DWORD *)(v95 + 8) = v93;
        *(void *)(v95 + 12) = 0;
        *(void *)(v95 + 28) = 0;
        *(void *)(v95 + 20) = 0;
        *(_DWORD *)(v95 + 36) = 0;
      }
      int v96 = *(_DWORD *)(v10 + 144);
      if (*(unsigned char *)(*(void *)v10 + 103))
      {
        *((_DWORD *)v12 + 2) = v96;
        uint64_t v97 = v12;
      }
      else
      {
        uint64_t v98 = *(void *)(v10 + 136) + 40 * *((int *)v92 + 219);
        *(_DWORD *)(v98 + 8) = v96;
        uint64_t v97 = (char *)(v98 - 80);
      }
      *((_DWORD *)v97 + 2) = v96;
    }
    uint64_t v99 = LODWORD(v8[15 * v13 + 113]);
    if (v99)
    {
      uint64_t v100 = HIDWORD(v8[15 * v13 + 112]) >> 1;
      int v101 = *(_DWORD *)(v10 + 144);
      if (*(_DWORD *)(v10 + 148) <= v101)
      {
        sub_1B0D25510(v10, 61, v100, v99, 0, a6, a7, a8);
        uint64_t v103 = *v61;
        if (!v103) {
          goto LABEL_4;
        }
        goto LABEL_103;
      }
      *(_DWORD *)(v10 + 144) = v101 + 1;
      uint64_t v102 = *(void *)(v10 + 136) + 40 * v101;
      *(_DWORD *)uint64_t v102 = 61;
      *(_DWORD *)(v102 + 4) = v100;
      *(_DWORD *)(v102 + 8) = v99;
      *(void *)(v102 + 12) = 0;
      *(void *)(v102 + 28) = 0;
      *(void *)(v102 + 20) = 0;
      *(_DWORD *)(v102 + 36) = 0;
    }
    uint64_t v103 = *v61;
    if (!v103) {
      goto LABEL_4;
    }
LABEL_103:
    int v104 = *((_DWORD *)v24 + 12);
    int v105 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) <= v105)
    {
      int v105 = sub_1B0D25510(v10, 59, v103, 0, 0, a6, a7, a8);
      if ((v104 & 0x40) != 0)
      {
LABEL_105:
        if ((v104 & 0x200) != 0) {
          goto LABEL_114;
        }
        goto LABEL_106;
      }
    }
    else
    {
      *(_DWORD *)(v10 + 144) = v105 + 1;
      uint64_t v106 = *(void *)(v10 + 136) + 40 * v105;
      *(_DWORD *)uint64_t v106 = 59;
      *(_DWORD *)(v106 + 4) = v103;
      *(_OWORD *)(v106 + 8) = 0u;
      *(_OWORD *)(v106 + 24) = 0u;
      if ((v104 & 0x40) != 0) {
        goto LABEL_105;
      }
    }
    uint64_t v107 = HIDWORD(v8[15 * v13 + 107]);
    int v108 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) <= v108)
    {
      sub_1B0D25510(v10, 136, v107, 0, 0, a6, a7, a8);
      if ((v104 & 0x200) != 0)
      {
LABEL_114:
        if ((v104 & 0x2000) != 0)
        {
LABEL_115:
          uint64_t v110 = (uint64_t)v8[15 * v13 + 117];
          uint64_t v111 = *(void *)(v110 + 48);
          if (v111)
          {
            uint64_t v112 = (uint64_t *)(*(void *)(v182 + 32) + 24);
            LODWORD(v113) = -1;
            do
            {
              uint64_t v114 = *v112;
              v112 += 4;
              uint64_t v113 = (v113 + 1);
            }
            while (v114 != v111);
          }
          else
          {
            uint64_t v113 = 4294934528;
          }
          uint64_t v115 = LODWORD(v8[15 * v13 + 108]);
          uint64_t v116 = *(unsigned int *)(v110 + 88);
          int v117 = *(_DWORD *)(v10 + 144);
          if (*(_DWORD *)(v10 + 148) <= v117)
          {
            sub_1B0D25510(v10, 101, v115, v116, v113, a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v10 + 144) = v117 + 1;
            uint64_t v118 = *(void *)(v10 + 136) + 40 * v117;
            *(_DWORD *)uint64_t v118 = 101;
            *(_DWORD *)(v118 + 4) = v115;
            *(_DWORD *)(v118 + 8) = v116;
            *(_DWORD *)(v118 + 12) = v113;
            *(void *)(v118 + 24) = 0;
            *(void *)(v118 + 32) = 0;
            *(void *)(v118 + 16) = 0;
          }
          uint64_t v119 = v184[2];
          uint64_t v120 = sub_1B0D2FDAC(v184, v110);
          if (v120)
          {
            if (*(unsigned char *)(*(void *)v119 + 103))
            {
              if (!*(void *)(*(void *)v119 + 816) && (*(_DWORD *)v120)-- == 1) {
                sub_1B0D15C20(*(void **)(v120 + 16), (void *)v120);
              }
            }
            else
            {
              uint64_t v122 = *(void *)(v119 + 136) + 40 * *(int *)(v119 + 144);
              *(unsigned char *)(v122 - 39) = -8;
              *(void *)(v122 - 24) = v120;
            }
          }
        }
        uint64_t v123 = LODWORD(v8[15 * v13 + 108]);
        int v124 = *(_DWORD *)(v10 + 144);
        if (*(_DWORD *)(v10 + 148) <= v124)
        {
          sub_1B0D25510(v10, 136, v123, 0, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v10 + 144) = v124 + 1;
          uint64_t v125 = *(void *)(v10 + 136) + 40 * v124;
          *(_DWORD *)uint64_t v125 = 136;
          *(_DWORD *)(v125 + 4) = v123;
          *(_OWORD *)(v125 + 8) = 0u;
          *(_OWORD *)(v125 + 24) = 0u;
        }
        goto LABEL_133;
      }
    }
    else
    {
      *(_DWORD *)(v10 + 144) = v108 + 1;
      uint64_t v109 = *(void *)(v10 + 136) + 40 * v108;
      *(_DWORD *)uint64_t v109 = 136;
      *(_DWORD *)(v109 + 4) = v107;
      *(_OWORD *)(v109 + 8) = 0u;
      *(_OWORD *)(v109 + 24) = 0u;
      if ((v104 & 0x200) != 0) {
        goto LABEL_114;
      }
    }
LABEL_106:
    if ((v104 & 0x2000) != 0 && v8[15 * v13 + 117]) {
      goto LABEL_115;
    }
LABEL_133:
    if (*v186 != 67)
    {
      uint64_t v99 = HIDWORD(v8[15 * v13 + 110]);
      int v130 = *(_DWORD *)(v10 + 144);
      if (*(_DWORD *)(v10 + 148) > v130)
      {
        *(_DWORD *)(v10 + 144) = v130 + 1;
        uint64_t v129 = *(void *)(v10 + 136) + 40 * v130;
        *(void *)uint64_t v129 = 9;
        goto LABEL_138;
      }
      uint64_t v131 = v10;
      uint64_t v132 = 9;
      uint64_t v127 = 0;
LABEL_141:
      sub_1B0D25510(v131, v132, v127, v99, 0, a6, a7, a8);
      goto LABEL_142;
    }
    uint64_t v126 = &v8[15 * v13];
    uint64_t v127 = *((unsigned int *)v126 + 231);
    uint64_t v99 = *((unsigned int *)v126 + 221);
    int v128 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) <= v128)
    {
      uint64_t v131 = v10;
      uint64_t v132 = 10;
      goto LABEL_141;
    }
    *(_DWORD *)(v10 + 144) = v128 + 1;
    uint64_t v129 = *(void *)(v10 + 136) + 40 * v128;
    *(_DWORD *)uint64_t v129 = 10;
    *(_DWORD *)(v129 + 4) = v127;
LABEL_138:
    *(_DWORD *)(v129 + 8) = v99;
    *(void *)(v129 + 12) = 0;
    *(void *)(v129 + 28) = 0;
    *(void *)(v129 + 20) = 0;
    *(_DWORD *)(v129 + 36) = 0;
LABEL_142:
    uint64_t v133 = (uint64_t)v12;
    if (!*(unsigned char *)(*(void *)v10 + 103)) {
      uint64_t v133 = *(void *)(v10 + 136) + 40 * v105;
    }
    *(_DWORD *)(v133 + 8) = *(_DWORD *)(v10 + 144);
LABEL_4:
    uint64_t v11 = v13;
  }
  while (v87 > 1);
  unsigned int v140 = *((unsigned __int8 *)v8 + 64);
  if (*((unsigned char *)v8 + 64))
  {
    unsigned int v141 = 0;
    uint64_t v142 = (uint64_t)(v8 + 107);
    do
    {
      if (*(void *)(v142 + 56))
      {
        sub_1B0D55228(v8, v141, v142, v99, a5, a6, a7, a8);
        unsigned int v140 = *((unsigned __int8 *)v8 + 64);
      }
      else
      {
        if ((*(_WORD *)((unsigned char *)&v183[13 * *(unsigned __int8 *)(v142 + 64) + 8] + 5) & 0x20) != 0)
        {
          int v147 = *(_DWORD *)(v142 + 32);
          uint64_t v148 = v184[2];
          uint64_t v149 = &byte_1E9B52240;
          if (!*(unsigned char *)(*(void *)v148 + 103)) {
            uint64_t v149 = (char *)(*(void *)(v148 + 136) + 40 * v147);
          }
          int v150 = *(_DWORD *)(v148 + 144);
          if (*(unsigned char *)(*v184 + 103)) {
            BOOL v151 = 1;
          }
          else {
            BOOL v151 = v150 <= v147;
          }
          if (!v151)
          {
            int v152 = *(_DWORD *)(v142 + 4);
            int v153 = v183[13 * *(unsigned __int8 *)(v142 + 64) + 8];
            uint64_t v154 = v149 + 8;
            int v155 = v150 - v147;
            do
            {
              if (*(v154 - 1) == v152)
              {
                int v156 = *((unsigned __int8 *)v154 - 8);
                if (v156 == 135)
                {
                  *((unsigned char *)v154 - 8) = 126;
                  *(v154 - 1) = 0;
                }
                else if (v156 == 94)
                {
                  *((unsigned char *)v154 - 8) = 80;
                  unsigned int v157 = v154[1];
                  *(v154 - 1) = *v154 + v153;
                  *(void *)uint64_t v154 = v157;
                  *((_WORD *)v154 - 3) = 2;
                }
              }
              v154 += 10;
              --v155;
            }
            while (v155);
          }
          goto LABEL_156;
        }
        uint64_t v143 = v183[13 * *(unsigned __int8 *)(v142 + 64) + 5];
        uint64_t v144 = *(void *)(v142 + 96);
        int v145 = *(_DWORD *)(v144 + 48);
        if ((v145 & 0x240) != 0)
        {
          uint64_t v146 = *(void *)(v144 + 32);
          if (!v146) {
            goto LABEL_156;
          }
        }
        else
        {
          if ((v145 & 0x2000) == 0) {
            goto LABEL_156;
          }
          uint64_t v146 = *(void *)(v142 + 80);
          if (!v146) {
            goto LABEL_156;
          }
        }
        if (!*(unsigned char *)(v182 + 103))
        {
          int v158 = v180;
          if (*((unsigned char *)v8 + 66))
          {
            int v158 = v180;
            if ((*(unsigned char *)(*(void *)(v146 + 24) + 48) & 0x80) == 0) {
              int v158 = *((_DWORD *)v8 + 19);
            }
          }
          if ((*(_WORD *)(v146 + 99) & 0x800) != 0)
          {
            uint64_t v159 = v184[12];
            if (v159)
            {
              int v160 = *(_DWORD *)(v142 + 8);
              do
              {
                if (*(_DWORD *)(v159 + 12) == v160) {
                  *(void *)(v159 + 8) = -1;
                }
                uint64_t v159 = *(void *)(v159 + 24);
              }
              while (v159);
            }
          }
          uint64_t v161 = *(int *)(v142 + 32) + 1;
          int v162 = &byte_1E9B52240;
          if (!*(unsigned char *)(*(void *)v10 + 103)) {
            int v162 = (char *)(*(void *)(v10 + 136) + 40 * v161);
          }
          int v163 = &v162[40 * (v158 - (int)v161)];
          int v164 = *(_DWORD *)(v142 + 4);
          do
          {
            if (*((_DWORD *)v162 + 1) == v164)
            {
              int v165 = *v162;
              if (v165 == 20)
              {
                int v172 = *(_DWORD *)(v142 + 8);
LABEL_203:
                *((_DWORD *)v162 + 1) = v172;
                goto LABEL_191;
              }
              if (v165 != 135)
              {
                if (v165 != 94) {
                  goto LABEL_191;
                }
                uint64_t v166 = *((int *)v162 + 2);
                int v167 = *(_DWORD *)(v143 + 48);
                if ((v167 & 0x80) != 0)
                {
                  uint64_t v173 = v143 + 16;
                  do
                  {
                    uint64_t v168 = *(void *)v173;
                    int v174 = *(_WORD *)(*(void *)v173 + 99) & 3;
                    uint64_t v173 = *(void *)v173 + 40;
                  }
                  while (v174 != 2);
                  LOWORD(v168) = *(_WORD *)(*(void *)(v168 + 8) + 2 * v166);
                }
                else
                {
                  LOWORD(v168) = *((_DWORD *)v162 + 2);
                  if ((v166 & 0x8000) == 0 && (v167 & 0x20) != 0)
                  {
                    uint64_t v169 = (unsigned __int16 *)(*(void *)(v143 + 8) + 14);
                    uint64_t v170 = -1;
                    LODWORD(v168) = *((_DWORD *)v162 + 2);
                    do
                    {
                      unsigned int v171 = *v169;
                      v169 += 8;
                      LODWORD(v168) = ((v171 >> 5) & 1) + v168;
                      ++v170;
                    }
                    while (v170 < (__int16)v168);
                  }
                }
                if (!*(_WORD *)(v146 + 96)) {
                  goto LABEL_191;
                }
                uint64_t v175 = 0;
                while (*(unsigned __int16 *)(*(void *)(v146 + 8) + 2 * v175) != (unsigned __int16)v168)
                {
                  if (*(unsigned __int16 *)(v146 + 96) == ++v175) {
                    goto LABEL_191;
                  }
                }
                if ((v175 & 0x8000) != 0) {
                  goto LABEL_191;
                }
                int v172 = *(_DWORD *)(v142 + 8);
                *((_DWORD *)v162 + 2) = v175;
                goto LABEL_203;
              }
              *((_DWORD *)v162 + 1) = *(_DWORD *)(v142 + 8);
              *int v162 = -114;
            }
LABEL_191:
            v162 += 40;
          }
          while (v162 < v163);
        }
      }
LABEL_156:
      ++v141;
      v142 += 120;
    }
    while (v141 < v140);
  }
  int v9 = v184;
  char v176 = v185;
LABEL_216:
  uint64_t v177 = *(void *)(v10 + 24);
  int v178 = ~*((_DWORD *)v8 + 13);
  if (*(_DWORD *)(v177 + 68) + *(_DWORD *)(v177 + 72) < 0) {
    sub_1B0D34EC8(v177, v10, v178);
  }
  else {
    *(_DWORD *)(*(void *)(v177 + 80) + 4 * v178) = *(_DWORD *)(v10 + 144);
  }
  *((_WORD *)v9 + 108) = *((_DWORD *)v8 + 14);
  uint64_t result = sub_1B0CA0A98((void *)v182, v8);
  *((unsigned char *)v9 + 38) -= v176;
  return result;
}

void *sub_1B0CA0A98(void *a1, void *a2)
{
  sub_1B0D518BC(a2 + 13);
  for (uint64_t i = a2[10]; i; uint64_t i = a2[10])
  {
    uint64_t v5 = *(void **)(i + 64);
    a2[10] = *(void *)(i + 72);
    if (v5 != (void *)(i + 80))
    {
      sub_1B0D05C10(a1, v5);
      *(void *)(i + 64) = i + 80;
      *(_WORD *)(i + 56) = 3;
    }
    sub_1B0D4DCB8(a1, i);
    *(_WORD *)(i + 52) = 0;
    *(_DWORD *)(i + 48) = 0;
    sub_1B0D15C20(a1, (void *)i);
  }
  uint64_t v6 = (void *)a2[11];
  if (v6)
  {
    do
    {
      int v7 = (void *)*v6;
      sub_1B0D15C20(a1, v6);
      a2[11] = v7;
      uint64_t v6 = v7;
    }
    while (v7);
  }

  return sub_1B0D15C20(a1, a2);
}

uint64_t sub_1B0CA0B6C(uint64_t a1, int a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(_WORD *)(a1 + 262))
  {
    unint64_t v5 = *(void *)(a1 + 152);
    if (v5)
    {
      unint64_t v6 = v5 + 320 * *(unsigned __int16 *)(a1 + 262);
      int v7 = *(void **)(v5 + 24);
      if (!v7[102])
      {
        while (1)
        {
          if ((*(_WORD *)(v5 + 20) & 0x9000) != 0)
          {
            sub_1B0D180E4(v5);
          }
          else
          {
            if (!*(_DWORD *)(v5 + 32)) {
              goto LABEL_11;
            }
            sub_1B0D15C20(v7, *(void **)(v5 + 40));
            *(_DWORD *)(v5 + 32) = 0;
          }
          *(_WORD *)(v5 + 20) = 0;
LABEL_11:
          v5 += 64;
          if (v5 >= v6) {
            goto LABEL_15;
          }
        }
      }
      do
      {
        if (*(_DWORD *)(v5 + 32))
        {
          uint64_t v8 = *(void **)(v5 + 40);
          if (v8) {
            sub_1B0D05C10(v7, v8);
          }
        }
        v5 += 64;
      }
      while (v5 < v6);
LABEL_15:
      int v9 = *(void **)(a1 + 152);
      if (v9) {
        sub_1B0D05C10(v4, v9);
      }
    }
  }
  uint64_t v10 = (5 * a2);
  *(_WORD *)(a1 + 262) = a2;
  *(_WORD *)(a1 + 260) = a2;
  uint64_t result = sub_1B0D05DC0((uint64_t)v4, (uint64_t)(int)v10 << 6);
  *(void *)(a1 + 152) = result;
  if (a2 >= 1)
  {
    if (result)
    {
      int v12 = 5 * a2;
      if (v10 < 2) {
        goto LABEL_23;
      }
      int v12 = v10 - (v10 & 0xFFFFFFFE);
      uint64_t v13 = result + 84;
      uint64_t v14 = v10 & 0xFFFFFFFE;
      do
      {
        *(_WORD *)(v13 - 64) = 1;
        *(_WORD *)uint64_t v13 = 1;
        *(void *)(v13 - 60) = v4;
        *(void *)(v13 + 4) = v4;
        *(_DWORD *)(v13 - 52) = 0;
        *(_DWORD *)(v13 + 12) = 0;
        v13 += 128;
        v14 -= 2;
      }
      while (v14);
      result += (unint64_t)(v10 & 0xFFFFFFFE) << 6;
      if ((v10 & 0xFFFFFFFE) != v10)
      {
LABEL_23:
        unsigned int v15 = v12 + 1;
        uint64_t v16 = (_DWORD *)(result + 32);
        do
        {
          *((_WORD *)v16 - 6) = 1;
          *((void *)v16 - 1) = v4;
          *uint64_t v16 = 0;
          v16 += 16;
          --v15;
        }
        while (v15 > 1);
      }
    }
  }
  return result;
}

uint64_t sub_1B0CA0CF0(uint64_t a1, signed int a2, int a3)
{
  int v3 = a3;
  int v6 = *(_DWORD *)(a1 + 32);
  if (!a3 || v6 < 1)
  {
    if (v6 < 1) {
      goto LABEL_14;
    }
    uint64_t v8 = *(void **)(a1 + 40);
LABEL_13:
    sub_1B0D05C10(*(void **)(a1 + 24), v8);
LABEL_14:
    uint64_t v11 = *(void *)(a1 + 24);
    if (v11)
    {
      unint64_t v10 = sub_1B0D05DC0(v11, a2);
      *(void *)(a1 + 40) = v10;
      if (v10) {
        goto LABEL_16;
      }
    }
    else
    {
      unint64_t v10 = sub_1B0C7FC94(a2);
      *(void *)(a1 + 40) = v10;
      if (v10) {
        goto LABEL_16;
      }
    }
LABEL_28:
    if ((*(_WORD *)(a1 + 20) & 0x9000) != 0) {
      sub_1B0D18138((int *)a1);
    }
    else {
      *(_WORD *)(a1 + 20) = 1;
    }
    *(void *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    return 7;
  }
  int v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a1 + 40);
  if (v7 != v8) {
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9)
  {
    uint64_t v17 = sub_1B0C8E1B8(*(void *)(a1 + 8), a2);
    *(void *)(a1 + 40) = v17;
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      if (v18)
      {
        signed int v19 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v18);
          --qword_1EB220150;
          off_1EB21C9E8(v18);
          uint64_t v18 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_43;
          }
          signed int v19 = &xmmword_1EB21CA50;
        }
        (*v19)(v18);
      }
    }
LABEL_43:
    unint64_t v10 = *(void *)(a1 + 40);
    goto LABEL_50;
  }
  if (v7)
  {
    if (*(void *)(v9 + 512) > (unint64_t)v7)
    {
      if (*(void *)(v9 + 496) <= (unint64_t)v7)
      {
        if (a2 < 0x81)
        {
LABEL_10:
          unint64_t v10 = *(void *)(a1 + 8);
          *(void *)(a1 + 40) = v7;
          goto LABEL_50;
        }
      }
      else if (*(void *)(v9 + 504) <= (unint64_t)v7 && *(unsigned __int16 *)(v9 + 438) >= (unint64_t)a2)
      {
        goto LABEL_10;
      }
    }
    unint64_t v10 = sub_1B0D05E6C(*(void *)(a1 + 24), *(void **)(a1 + 8), a2);
    if (!v10)
    {
      sub_1B0D05C10((void *)v9, v7);
      unint64_t v10 = 0;
    }
  }
  else
  {
    unint64_t v10 = sub_1B0D05DC0(*(void *)(a1 + 24), a2);
  }
  *(void *)(a1 + 40) = v10;
LABEL_50:
  int v3 = 0;
  *(void *)(a1 + 8) = v10;
  if (!v10) {
    goto LABEL_28;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 24);
  if (!v12 || *(void *)(v12 + 520) <= v10) {
    goto LABEL_20;
  }
  if (*(void *)(v12 + 496) <= v10)
  {
    int v13 = 128;
  }
  else
  {
    if (*(void *)(v12 + 504) > v10)
    {
LABEL_20:
      int v13 = off_1EB21C9F8(v10);
      goto LABEL_21;
    }
    int v13 = *(unsigned __int16 *)(v12 + 438);
  }
LABEL_21:
  *(_DWORD *)(a1 + 32) = v13;
  if (v3)
  {
    uint64_t v14 = *(const void **)(a1 + 8);
    if (v14) {
      memcpy(*(void **)(a1 + 40), v14, *(int *)(a1 + 16));
    }
  }
  if ((*(_WORD *)(a1 + 20) & 0x1000) != 0)
  {
    uint64_t v15 = *(void *)(a1 + 48);
    if (*(unsigned char *)(a1 + 56))
    {
      (*(void (**)(void, void))(v15 + 16))(*(void *)(a1 + 48), *(void *)(a1 + 8));
      _Block_release(*(const void **)(a1 + 48));
    }
    else
    {
      ((void (*)(void))v15)(*(void *)(a1 + 8));
    }
  }
  uint64_t result = 0;
  *(void *)(a1 + 8) = *(void *)(a1 + 40);
  *(_WORD *)(a1 + 20) &= 0x8FFFu;
  return result;
}

void *sub_1B0CA0FA8(void *result, uint64_t a2, int a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    unint64_t v5 = result;
    do
    {
      uint64_t v6 = *(void *)(v4 + 80);
      int v7 = *(void **)(v4 + 32);
      if (v7) {
        sub_1B0D270DC(v5, v7);
      }
      uint64_t result = sub_1B0CA115C(v5, *(void **)(v4 + 40));
      uint64_t v8 = *(unsigned __int8 **)(v4 + 48);
      if (v8) {
        uint64_t result = sub_1B0D1DF88(v5, v8);
      }
      uint64_t v9 = *(void **)(v4 + 56);
      if (v9) {
        uint64_t result = sub_1B0D270DC(v5, v9);
      }
      unint64_t v10 = *(unsigned __int8 **)(v4 + 64);
      if (v10) {
        uint64_t result = sub_1B0D1DF88(v5, v10);
      }
      uint64_t v11 = *(void **)(v4 + 72);
      if (v11) {
        uint64_t result = sub_1B0D270DC(v5, v11);
      }
      uint64_t v12 = *(unsigned __int8 **)(v4 + 96);
      if (v12) {
        uint64_t result = sub_1B0D1DF88(v5, v12);
      }
      int v13 = *(void **)(v4 + 104);
      if (v13)
      {
        if (*(int *)v13 >= 1)
        {
          uint64_t v14 = 0;
          uint64_t v15 = v13 + 4;
          do
          {
            uint64_t v16 = (void *)*(v15 - 1);
            if (v16) {
              sub_1B0D270DC(v5, v16);
            }
            if (*v15) {
              sub_1B0CA0FA8(v5, *v15, 1);
            }
            uint64_t v17 = (void *)*(v15 - 2);
            if (v17) {
              sub_1B0D05C10(v5, v17);
            }
            ++v14;
            v15 += 6;
          }
          while (v14 < *(int *)v13);
        }
        uint64_t result = sub_1B0D05C10(v5, v13);
      }
      uint64_t v18 = *(void **)(v4 + 120);
      if (v18)
      {
        do
        {
          signed int v19 = (void *)v18[8];
          uint64_t result = sub_1B0D1E054(v5, v18);
          uint64_t v18 = v19;
        }
        while (v19);
      }
      uint64_t v20 = *(void *)(v4 + 112);
      while (v20)
      {
        uint64_t v21 = *(void **)(v20 + 56);
        if (v21)
        {
          *uint64_t v21 = *(void *)(v20 + 64);
          uint64_t v22 = *(void *)(v20 + 64);
          if (v22) {
            *(void *)(v22 + 56) = *(void *)(v20 + 56);
          }
          *(void *)(v20 + 56) = 0;
          uint64_t v20 = *(void *)(v4 + 112);
        }
      }
      if (a3) {
        uint64_t result = sub_1B0D15C20(v5, (void *)v4);
      }
      a3 = 1;
      uint64_t v4 = v6;
    }
    while (v6);
  }
  return result;
}

void *sub_1B0CA1150(void *a1, void *a2)
{
  if (a2) {
    return sub_1B0D270DC(a1, a2);
  }
  return a1;
}

void *sub_1B0CA115C(void *result, void *a2)
{
  if (a2)
  {
    int v3 = result;
    if (*(int *)a2 >= 1)
    {
      int v4 = 0;
      unint64_t v5 = a2 + 1;
      do
      {
        uint64_t v6 = (void *)v5[1];
        if (v6) {
          sub_1B0D15C20(v3, v6);
        }
        int v7 = (void *)v5[2];
        if (v7) {
          sub_1B0D15C20(v3, v7);
        }
        uint64_t v8 = (void *)v5[3];
        if (v8) {
          sub_1B0D15C20(v3, v8);
        }
        __int16 v9 = *(_WORD *)((char *)v5 + 61);
        if ((v9 & 2) != 0)
        {
          unint64_t v10 = (void *)v5[11];
          if (v10)
          {
            sub_1B0D05C10(v3, v10);
            __int16 v9 = *(_WORD *)((char *)v5 + 61);
          }
        }
        if ((v9 & 4) != 0)
        {
          uint64_t v11 = (void *)v5[11];
          if (v11) {
            sub_1B0D270DC(v3, v11);
          }
        }
        uint64_t v12 = v5[4];
        if (v12)
        {
          if (v3[102] || (int v13 = *(_DWORD *)(v12 + 44) - 1, (*(_DWORD *)(v12 + 44) = v13) == 0)) {
            sub_1B0D26BF8(v3, (void *)v12);
          }
        }
        uint64_t v14 = v5[5];
        if (v14) {
          sub_1B0CA0FA8(v3, v14, 1);
        }
        uint64_t v15 = (void *)v5[9];
        if ((*(_WORD *)((unsigned char *)v5 + 61) & 0x400) != 0)
        {
          if (v15)
          {
            int v16 = *(_DWORD *)v15;
            if (*(int *)v15 >= 1)
            {
              uint64_t v17 = 0;
              uint64_t v18 = 1;
              do
              {
                signed int v19 = (void *)v15[v18];
                if (v19)
                {
                  sub_1B0D05C10(v3, v19);
                  int v16 = *(_DWORD *)v15;
                }
                ++v17;
                v18 += 2;
              }
              while (v17 < v16);
            }
            sub_1B0D15C20(v3, v15);
          }
        }
        else if (v15)
        {
          sub_1B0D1DF88(v3, (unsigned __int8 *)v5[9]);
        }
        ++v4;
        v5 += 13;
      }
      while (v4 < *(_DWORD *)a2);
    }
    return sub_1B0D15C20(v3, a2);
  }
  return result;
}

void *sub_1B0CA12F4(void *result, void *a2)
{
  if (a2) {
    return sub_1B0D05C10(result, a2);
  }
  return result;
}

int sqlite3_step(sqlite3_stmt *a1)
{
  if (!a1)
  {
    sqlite3_log(21, "API called with NULL prepared statement");
LABEL_205:
    return sub_1B0CE1978(97882);
  }
  if (!*(void *)a1)
  {
    sqlite3_log(21, "API called with finalized prepared statement");
    goto LABEL_205;
  }
  uint64_t v99 = *(void *)a1;
  uint64_t v12 = *(void *)(*(void *)a1 + 24);
  unint64_t v13 = 0x1EB21C000uLL;
  if (v12) {
    xmmword_1EB21CA40(v12);
  }
  int v100 = 0;
  unint64_t v14 = 0x1EB21C000uLL;
  while (1)
  {
    uint64_t v15 = *(void *)a1;
    int v16 = *((unsigned __int8 *)a1 + 267);
    if (v16 == 2) {
      goto LABEL_67;
    }
    while (v16 == 3)
    {
      if (*((unsigned __int8 *)a1 + 52) - 5 > 1)
      {
        int v19 = sub_1B0CE1978(97797);
        goto LABEL_191;
      }
      uint64_t v17 = *(void *)a1;
      if (*(void *)(*(void *)a1 + 24)) {
        (*(void (**)(void))(v13 + 2624))();
      }
      sub_1B0CE93FC(v17, (uint64_t)a1);
      uint64_t v1 = sub_1B0C8B140((void **)a1);
      *((unsigned char *)a1 + 267) = 1;
      *((_DWORD *)a1 + 13) = 0;
      *((_WORD *)a1 + 132) = -254;
      *((void *)a1 + 7) = 0;
      *(void *)((char *)a1 + 44) = 0xFFFFFFFF00000001;
      *((_DWORD *)a1 + 16) = 0;
      *((void *)a1 + 10) = 0;
      if (v1 || *(unsigned char *)(v17 + 103)) {
        sub_1B0D1806C(v17, v1);
      }
      uint64_t v18 = *(void *)(v17 + 24);
      if (v18) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 2640))(v18, v1);
      }
      int v16 = *((unsigned __int8 *)a1 + 267);
    }
    if (v16 != 1) {
      goto LABEL_67;
    }
    if ((*((_WORD *)a1 + 134) & 3) == 0)
    {
      if (*(_DWORD *)(v15 + 208))
      {
        if (*(unsigned char *)(v15 + 197)) {
          goto LABEL_55;
        }
      }
      else
      {
        *(_DWORD *)(v15 + 424) = 0;
        if (*(unsigned char *)(v15 + 197)) {
          goto LABEL_55;
        }
      }
      if (*((void *)a1 + 40) && (dword_1EB21CB84 & 1) != 0)
      {
        *((void *)a1 + 24) = mach_continuous_time();
        *((_DWORD *)a1 + 64) = 0;
        uint64_t v20 = *(unsigned int *)(v15 + 40);
        if ((int)v20 < 1)
        {
          int v21 = 0;
        }
        else
        {
          int v21 = 0;
          uint64_t v22 = *(void *)(v15 + 32) + 8;
          do
          {
            if (*(void *)v22) {
              v21 += *(_DWORD *)(**(void **)(*(void *)v22 + 8) + 248);
            }
            v22 += 32;
            --v20;
          }
          while (v20);
        }
        *((_DWORD *)a1 + 60) = v21;
        uint64_t v23 = *(unsigned int *)(v15 + 40);
        if ((int)v23 < 1)
        {
          int v24 = 0;
        }
        else
        {
          int v24 = 0;
          uint64_t v25 = *(void *)(v15 + 32) + 8;
          do
          {
            if (*(void *)v25) {
              v24 += *(_DWORD *)(**(void **)(*(void *)v25 + 8) + 252);
            }
            v25 += 32;
            --v23;
          }
          while (v23);
        }
        *((_DWORD *)a1 + 61) = v24;
        uint64_t v26 = *(unsigned int *)(v15 + 40);
        if ((int)v26 < 1)
        {
          int v27 = 0;
        }
        else
        {
          int v27 = 0;
          uint64_t v28 = *(void *)(v15 + 32) + 8;
          do
          {
            if (*(void *)v28) {
              v27 += *(_DWORD *)(**(void **)(*(void *)v28 + 8) + 256);
            }
            v28 += 32;
            --v26;
          }
          while (v26);
        }
        *((_DWORD *)a1 + 62) = v27;
        uint64_t v29 = *(unsigned int *)(v15 + 40);
        if ((int)v29 < 1)
        {
          int v30 = 0;
        }
        else
        {
          int v30 = 0;
          uint64_t v31 = *(void *)(v15 + 32) + 8;
          do
          {
            if (*(void *)v31) {
              v30 += *(_DWORD *)(**(void **)(*(void *)v31 + 8) + 260);
            }
            v31 += 32;
            --v29;
          }
          while (v29);
        }
        *((_DWORD *)a1 + 63) = v30;
      }
LABEL_55:
      if ((*(unsigned char *)(v15 + 110) & 0x82) != 0 && !*(unsigned char *)(v15 + 197) && *((void *)a1 + 40))
      {
        uint64_t v32 = *(int **)v15;
        if (**(int **)v15 >= 2 && (int v33 = (void (*)(void))*((void *)v32 + 17)) != 0)
        {
          v33();
        }
        else
        {
          double v102 = 0.0;
          (*((void (**)(int *, double *))v32 + 15))(v32, &v102);
          double v9 = 86400000.0;
          *(double *)v8.i64 = v102 * 86400000.0;
          *((void *)a1 + 23) = (uint64_t)(v102 * 86400000.0);
        }
      }
      ++*(_DWORD *)(v15 + 208);
      __int16 v34 = *((_WORD *)a1 + 134);
      if ((v34 & 0x40) == 0)
      {
        ++*(_DWORD *)(v15 + 216);
        __int16 v34 = *((_WORD *)a1 + 134);
      }
      if ((v34 & 0x80) != 0) {
        ++*(_DWORD *)(v15 + 212);
      }
      *((_DWORD *)a1 + 12) = 0;
      *((unsigned char *)a1 + 267) = 2;
LABEL_67:
      if ((*((_WORD *)a1 + 134) & 0xC) == 0)
      {
        ++*(_DWORD *)(v15 + 220);
        int v19 = sub_1B0CA1F80((uint64_t *)a1, v8, v9, v10, v1, v2, v3, v4, v5, v6, v7);
        --*(_DWORD *)(v15 + 220);
LABEL_158:
        ++*((_DWORD *)a1 + 59);
        if (v19 == 100)
        {
          *(_DWORD *)(v15 + 80) = 100;
          goto LABEL_228;
        }
        sub_1B0CE93FC(v15, (uint64_t)a1);
        *((void *)a1 + 20) = 0;
        if (v19 != 101)
        {
          if (*((char *)a1 + 266) < 0) {
            int v19 = sub_1B0D16004((uint64_t)a1);
          }
LABEL_185:
          *(_DWORD *)(v15 + 80) = v19;
          uint64_t v82 = *(void *)a1;
          uint64_t v1 = *((unsigned int *)a1 + 13);
          if ((v1 || *(unsigned char *)(v82 + 103)) && sub_1B0D1806C(v82, v1) == 7)
          {
            *((_DWORD *)a1 + 13) = 7;
            if (*((char *)a1 + 266) < 0) {
              int v19 = 7;
            }
          }
          goto LABEL_190;
        }
        if (!*(unsigned char *)(v15 + 101)) {
          goto LABEL_184;
        }
        if (*(int *)(v15 + 40) <= 0)
        {
          *((_DWORD *)a1 + 13) = 0;
          goto LABEL_184;
        }
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        int v76 = 0;
        while (1)
        {
          uint64_t v77 = *(void *)(*(void *)(v15 + 32) + v74 + 8);
          if (!v77) {
            goto LABEL_163;
          }
          if (*(unsigned char *)(v77 + 17))
          {
            ++*(_DWORD *)(v77 + 20);
            if (!*(unsigned char *)(v77 + 18)) {
              sub_1B0D12478(v77);
            }
          }
          uint64_t v78 = *(void *)(**(void **)(v77 + 8) + 344);
          if (v78)
          {
            uint64_t v79 = *(unsigned int *)(v78 + 24);
            *(_DWORD *)(v78 + 24) = 0;
            if (!*(unsigned char *)(v77 + 17)) {
              goto LABEL_173;
            }
          }
          else
          {
            uint64_t v79 = 0;
            if (!*(unsigned char *)(v77 + 17)) {
              goto LABEL_173;
            }
          }
          int v80 = *(_DWORD *)(v77 + 20) - 1;
          *(_DWORD *)(v77 + 20) = v80;
          if (v80)
          {
LABEL_173:
            if ((int)v79 >= 1) {
              goto LABEL_174;
            }
            goto LABEL_163;
          }
          sub_1B0D12558(v77);
          if ((int)v79 >= 1)
          {
LABEL_174:
            if (!v76)
            {
              uint64_t v81 = *(uint64_t (**)(void, uint64_t, void, uint64_t))(v15 + 376);
              if (v81) {
                int v76 = v81(*(void *)(v15 + 384), v15, *(void *)(*(void *)(v15 + 32) + v74), v79);
              }
            }
          }
LABEL_163:
          ++v75;
          v74 += 32;
          if (v75 >= *(int *)(v15 + 40))
          {
            *((_DWORD *)a1 + 13) = v76;
            unint64_t v13 = 0x1EB21C000;
            if (v76)
            {
              int v19 = 1;
              goto LABEL_185;
            }
LABEL_184:
            int v19 = 101;
            goto LABEL_185;
          }
        }
      }
      uint64_t v35 = *(void *)a1;
      if ((*((_WORD *)a1 + 134) & 0xC) == 4) {
        int v36 = 1;
      }
      else {
        int v36 = *(unsigned char *)(v35 + 51) & 1;
      }
      uint64_t v37 = *((void *)a1 + 13);
      double v102 = 0.0;
      uint64_t v38 = *(void **)(v37 + 88);
      if (v38[102])
      {
        if (*(_DWORD *)(v37 + 96))
        {
          uint64_t v39 = *(void **)(v37 + 104);
          if (v39) {
            sub_1B0D05C10(*(void **)(v37 + 88), v39);
          }
        }
        if (*(_DWORD *)(v37 + 160))
        {
          int v40 = *(void **)(v37 + 168);
          if (v40) {
            sub_1B0D05C10(v38, v40);
          }
        }
        if (*(_DWORD *)(v37 + 224))
        {
          int v41 = *(void **)(v37 + 232);
          if (v41) {
            sub_1B0D05C10(v38, v41);
          }
        }
        if (*(_DWORD *)(v37 + 288))
        {
          int v42 = *(void **)(v37 + 296);
          if (v42) {
            sub_1B0D05C10(v38, v42);
          }
        }
        if (*(_DWORD *)(v37 + 352))
        {
          uint64_t v43 = *(void **)(v37 + 360);
          if (v43) {
            sub_1B0D05C10(v38, v43);
          }
        }
        if (*(_DWORD *)(v37 + 416))
        {
          uint64_t v44 = *(void **)(v37 + 424);
          if (v44) {
            sub_1B0D05C10(v38, v44);
          }
        }
        if (*(_DWORD *)(v37 + 480))
        {
          uint64_t v45 = *(void **)(v37 + 488);
          if (v45) {
            sub_1B0D05C10(v38, v45);
          }
        }
        if (*(_DWORD *)(v37 + 544))
        {
          uint64_t v46 = *(void **)(v37 + 552);
          if (v46) {
            sub_1B0D05C10(v38, v46);
          }
        }
LABEL_97:
        int v101 = 0;
        if (*((_DWORD *)a1 + 13) == 7)
        {
          unint64_t v14 = 0x1EB21C000;
          if (*(unsigned char *)(v35 + 103) || *(unsigned char *)(v35 + 104))
          {
            int v19 = 1;
            unint64_t v13 = 0x1EB21C000;
          }
          else
          {
            *(unsigned char *)(v35 + 103) = 1;
            unint64_t v13 = 0x1EB21C000;
            if (*(int *)(v35 + 220) >= 1) {
              *(_DWORD *)(v35 + 424) = 1;
            }
            ++*(_DWORD *)(v35 + 432);
            *(_WORD *)(v35 + 436) = 0;
            uint64_t v58 = *(void *)(v35 + 344);
            if (v58
              && (sub_1B0CEF2BC(v58, "out of memory", v2, (uint64_t)v3, v4, v5, v6, v7, (char)__s),
                  uint64_t v59 = *(void *)(v35 + 344),
                  *(_DWORD *)(v59 + 24) = 7,
                  (uint64_t v60 = *(void *)(v59 + 256)) != 0))
            {
              do
              {
                ++*(_DWORD *)(v60 + 48);
                *(_DWORD *)(v60 + 24) = 7;
                uint64_t v60 = *(void *)(v60 + 256);
                int v19 = 1;
              }
              while (v60);
            }
            else
            {
              int v19 = 1;
            }
          }
        }
        else
        {
          unint64_t v14 = 0x1EB21C000uLL;
          if (v36) {
            uint64_t v47 = *((void *)a1 + 13) + 576;
          }
          else {
            uint64_t v47 = 0;
          }
          int v19 = sub_1B0D18CD8((uint64_t)a1, v47, (*((_WORD *)a1 + 134) & 0xC) == 8, (int *)a1 + 12, &v101, &v102);
          unint64_t v13 = 0x1EB21C000;
          if (!v19)
          {
            double v56 = v102;
            uint64_t v57 = v101;
            if (*(_DWORD *)(v35 + 424))
            {
              *((_DWORD *)a1 + 13) = 9;
              sub_1B0D17334((uint64_t *)a1, "interrupted", v50, v51, v52, v53, v54, v55, (char)__s);
              int v19 = 1;
            }
            else
            {
              uint64_t v97 = v37 + 64;
              uint64_t v61 = (unsigned __int8 *)(*(void *)&v102 + 40 * v101);
              double v98 = v102;
              int __s = (char *)sub_1B0D18FB4(v35, (uint64_t)v61, v50, v51, v52, v53, v54, v55);
              if ((*((_WORD *)a1 + 134) & 0xC) == 8)
              {
                uint64_t v62 = *(int *)(*(void *)&v56 + 40 * (int)v57 + 4);
                if ((*(_WORD *)(v37 + 84) & 0x9000) != 0)
                {
                  uint64_t v63 = v37 + 64;
                  sub_1B0D18980(v97, v62);
                  double v64 = v98;
                  unint64_t v13 = 0x1EB21C000;
                }
                else
                {
                  double v64 = v56;
                  *(void *)(v37 + 64) = v62;
                  *(_WORD *)(v37 + 84) = 4;
                  unint64_t v13 = 0x1EB21C000;
                  uint64_t v63 = v37 + 64;
                }
                uint64_t v65 = *(int *)(*(void *)&v64 + 40 * (int)v57 + 8);
                if ((*(_WORD *)(v37 + 148) & 0x9000) != 0)
                {
                  sub_1B0D18980(v37 + 128, v65);
                  double v64 = v98;
                }
                else
                {
                  *(void *)(v37 + 128) = v65;
                  *(_WORD *)(v37 + 148) = 4;
                }
                uint64_t v68 = *(int *)(*(void *)&v64 + 40 * (int)v57 + 12);
                if ((*(_WORD *)(v37 + 212) & 0x9000) != 0)
                {
                  sub_1B0D18980(v37 + 192, v68);
                }
                else
                {
                  *(void *)(v37 + 192) = v68;
                  *(_WORD *)(v37 + 212) = 4;
                }
                uint64_t v69 = 4;
              }
              else
              {
                if ((*(_WORD *)(v37 + 84) & 0x9000) != 0)
                {
                  sub_1B0D18980(v97, v57);
                }
                else
                {
                  *(void *)(v37 + 64) = v57;
                  *(_WORD *)(v37 + 84) = 4;
                }
                sub_1B0C79BBC(v37 + 128, off_1E5FEEFD0[*v61], -1, 1u, 0);
                double v66 = v56;
                uint64_t v67 = *(int *)(*(void *)&v56 + 40 * (int)v57 + 4);
                if ((*(_WORD *)(v37 + 212) & 0x9000) != 0)
                {
                  sub_1B0D18980(v37 + 192, v67);
                  double v66 = v56;
                }
                else
                {
                  *(void *)(v37 + 192) = v67;
                  *(_WORD *)(v37 + 212) = 4;
                }
                unint64_t v13 = 0x1EB21C000uLL;
                uint64_t v63 = v37 + 64;
                uint64_t v70 = *(int *)(*(void *)&v66 + 40 * (int)v57 + 8);
                if ((*(_WORD *)(v37 + 276) & 0x9000) != 0)
                {
                  sub_1B0D18980(v37 + 256, v70);
                  double v66 = v98;
                }
                else
                {
                  *(void *)(v37 + 256) = v70;
                  *(_WORD *)(v37 + 276) = 4;
                }
                uint64_t v71 = *(int *)(*(void *)&v66 + 40 * (int)v57 + 12);
                if ((*(_WORD *)(v37 + 340) & 0x9000) != 0)
                {
                  sub_1B0D18980(v37 + 320, v71);
                  double v66 = v98;
                }
                else
                {
                  *(void *)(v37 + 320) = v71;
                  *(_WORD *)(v37 + 340) = 4;
                }
                uint64_t v72 = *(unsigned __int16 *)(*(void *)&v66 + 40 * (int)v57 + 2);
                if ((*(_WORD *)(v37 + 468) & 0x9000) != 0)
                {
                  sub_1B0D18980(v37 + 448, v72);
                }
                else
                {
                  *(void *)(v37 + 448) = v72;
                  *(_WORD *)(v37 + 468) = 4;
                }
                if ((*(_WORD *)(v37 + 532) & 0x9000) != 0) {
                  sub_1B0D18138((int *)(v37 + 512));
                }
                else {
                  *(_WORD *)(v37 + 532) = 1;
                }
                uint64_t v69 = 6;
              }
              sub_1B0C79BBC(v37 + (v69 << 6), __s, -1, 1u, (uint64_t (*)(uint64_t))sqlite3_free);
              *((void *)a1 + 20) = v63;
              if (*(unsigned char *)(v35 + 103)) {
                int v73 = 7;
              }
              else {
                int v73 = 0;
              }
              if (*(unsigned char *)(v35 + 103)) {
                int v19 = 1;
              }
              else {
                int v19 = 100;
              }
              *((_DWORD *)a1 + 13) = v73;
            }
          }
        }
        goto LABEL_158;
      }
      uint64_t v48 = 0;
      while (1)
      {
        uint64_t v49 = v37 + v48;
        if ((*(_WORD *)(v37 + v48 + 84) & 0x9000) != 0)
        {
          sub_1B0D180E4(v49 + 64);
        }
        else
        {
          if (!*(_DWORD *)(v49 + 96)) {
            goto LABEL_106;
          }
          sub_1B0D15C20(v38, *(void **)(v37 + v48 + 104));
          *(_DWORD *)(v49 + 96) = 0;
        }
        *(_WORD *)(v49 + 84) = 0;
LABEL_106:
        v48 += 64;
        if (v48 == 512) {
          goto LABEL_97;
        }
      }
    }
    *((_DWORD *)a1 + 13) = 17;
    int v19 = *((char *)a1 + 266) < 0 ? sub_1B0D16004((uint64_t)a1) : 1;
LABEL_190:
    v19 &= *(_DWORD *)(v15 + 88);
LABEL_191:
    if (v19 != 17) {
      goto LABEL_228;
    }
    if (v100 == 50)
    {
      int v19 = 17;
      goto LABEL_228;
    }
    int v83 = *((_DWORD *)a1 + 12);
    unsigned int v84 = sub_1B0CEB134((uint64_t)a1, v1, v2, (uint64_t)v3, v4, v5, v6, v7);
    if (v84) {
      break;
    }
    uint64_t v85 = *(void *)a1;
    if (*(void *)(*(void *)a1 + 24)) {
      (*(void (**)(void))(v13 + 2624))();
    }
    sub_1B0CE93FC(v85, (uint64_t)a1);
    uint64_t v1 = sub_1B0C8B140((void **)a1);
    *((unsigned char *)a1 + 267) = 1;
    *((_DWORD *)a1 + 13) = 0;
    *((_WORD *)a1 + 132) = -254;
    *((void *)a1 + 7) = 0;
    *(void *)((char *)a1 + 44) = 0xFFFFFFFF00000001;
    *((_DWORD *)a1 + 16) = 0;
    *((void *)a1 + 10) = 0;
    if (v1 || *(unsigned char *)(v85 + 103)) {
      sub_1B0D1806C(v85, v1);
    }
    uint64_t v86 = *(void *)(v85 + 24);
    if (v86) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 2640))(v86, v1);
    }
    ++v100;
    if ((v83 & 0x80000000) == 0) {
      *((unsigned char *)a1 + 265) = -2;
    }
  }
  unsigned int v88 = v84;
  uint64_t v89 = *(void *)(v99 + 416);
  if (!v89) {
    goto LABEL_218;
  }
  int v90 = *(unsigned __int16 *)(v89 + 20);
  if ((~v90 & 0x202) == 0 && *(unsigned char *)(v89 + 22) == 1)
  {
    uint64_t v91 = *(const char **)(v89 + 8);
    int v92 = (void *)*((void *)a1 + 21);
    if (!v92) {
      goto LABEL_220;
    }
LABEL_219:
    sub_1B0D05C10((void *)v99, v92);
    goto LABEL_220;
  }
  if (v90)
  {
LABEL_218:
    uint64_t v91 = 0;
    int v92 = (void *)*((void *)a1 + 21);
    if (!v92) {
      goto LABEL_220;
    }
    goto LABEL_219;
  }
  uint64_t v91 = (const char *)sub_1B0D18254((int *)v89, 1);
  int v92 = (void *)*((void *)a1 + 21);
  if (v92) {
    goto LABEL_219;
  }
LABEL_220:
  if (*(unsigned char *)(v99 + 103))
  {
    *((void *)a1 + 21) = 0;
    int v19 = 7;
    *((_DWORD *)a1 + 13) = 7;
  }
  else
  {
    if (v91)
    {
      unint64_t v93 = strlen(v91) + 1;
      int v94 = (void *)sub_1B0D05DC0(v99, v93);
      uint64_t v95 = v94;
      if (v94) {
        memcpy(v94, v91, v93);
      }
    }
    else
    {
      uint64_t v95 = 0;
    }
    *((void *)a1 + 21) = v95;
    int v19 = sub_1B0D1806C(v99, v88);
    *((_DWORD *)a1 + 13) = v19;
  }
  unint64_t v14 = 0x1EB21C000uLL;
LABEL_228:
  if (*(void *)(v99 + 24)) {
    (*(void (**)(void))(v14 + 2640))();
  }
  return v19;
}

uint64_t sub_1B0CA1F80(uint64_t *a1, int64x2_t a2, double a3, int64x2_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11 = (uint64_t)a1;
  uint64_t v1582 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = (unsigned __int8 *)a1[17];
  uint64_t v13 = *a1;
  unsigned int v14 = *(unsigned __int8 *)(*a1 + 100);
  unint64_t v15 = a1[13];
  uint64_t v16 = *(void *)(*a1 + 48);
  if (*((_DWORD *)a1 + 69)) {
    sub_1B0D160FC(a1);
  }
  if (*(void *)(v13 + 544)) {
    unint64_t v17 = (*(_DWORD *)(v13 + 560)
  }
                       + *(_DWORD *)(v11 + 296) / *(_DWORD *)(v13 + 560) * *(_DWORD *)(v13 + 560)
                       - *(_DWORD *)(v11 + 296));
  else {
    unint64_t v17 = -1;
  }
  v1568 = v12;
  if (*(_DWORD *)(v11 + 52) == 7)
  {
    unint64_t v18 = 0;
    LOBYTE(v19) = 0;
    goto LABEL_8;
  }
  *(_DWORD *)(v11 + 52) = 0;
  *(void *)(v11 + 72) = 0;
  *(_DWORD *)(v13 + 688) = 0;
  if (*(_DWORD *)(v13 + 424))
  {
    unint64_t v18 = 0;
    LOBYTE(v19) = 0;
    LODWORD(v20) = 9;
    goto LABEL_2742;
  }
  unint64_t v1570 = v15;
  int v1483 = 0;
  unint64_t v18 = 0;
  int v1488 = 0;
  unsigned int v1557 = v14;
  int v1558 = 0;
  uint64_t v19 = 0;
  v12 += 40 * *(int *)(v11 + 48);
  v1484 = (uint64_t *)(v11 + 384);
  v1485 = (char **)(v11 + 168);
  uint64_t v1540 = v11;
  uint64_t v1498 = v13;
  uint64_t v1569 = v16;
LABEL_22:
  while (2)
  {
    if ((v16 & 0x400) != 0) {
      ++*((void *)v12 + 3);
    }
    ++v18;
    unint64_t v23 = *v12;
    switch(*v12)
    {
      case 0u:
        int v145 = *((_DWORD *)v12 + 1);
        uint64_t v146 = (const void *)*((void *)v12 + 2);
        if (!v145)
        {
          if (*(int *)(v13 + 216) < 1)
          {
            if (v146) {
              int v784 = strlen(*((const char **)v12 + 2)) & 0x3FFFFFFF;
            }
            else {
              int v784 = 0;
            }
            LOWORD(v16) = v1569;
            int v62 = sub_1B0D177E0(v13, 0, *(_DWORD *)(v13 + 788) + *(_DWORD *)(v13 + 792));
            if (v62) {
              goto LABEL_2597;
            }
            uint64_t v1152 = sub_1B0D05DC0(v13, (v784 + 33));
            if (v1152)
            {
              uint64_t v1153 = v1152;
              uint64_t v1154 = (void *)(v1152 + 32);
              *(void *)uint64_t v1153 = v1154;
              memcpy(v1154, v146, (v784 + 1));
              if (*(unsigned char *)(v13 + 101))
              {
                *(unsigned char *)(v13 + 101) = 0;
                *(unsigned char *)(v13 + 109) = 1;
              }
              else
              {
                ++*(_DWORD *)(v13 + 788);
              }
              *(void *)(v1153 + 24) = *(void *)(v13 + 760);
              *(void *)(v13 + 760) = v1153;
              a2 = *(int64x2_t *)(v13 + 800);
              *(int64x2_t *)(v1153 + 8) = a2;
            }
            goto LABEL_2188;
          }
          v1450 = "cannot open savepoint - SQL statements in progress";
          goto LABEL_2698;
        }
        uint64_t v147 = *(void *)(v13 + 760);
        if (v147)
        {
          int v148 = 0;
LABEL_165:
          uint64_t v149 = *(unsigned char **)v147;
          for (uint64_t i = (unsigned __int8 *)*((void *)v12 + 2); ; ++i)
          {
            uint64_t v151 = *v149;
            uint64_t v152 = *i;
            if (v151 == v152)
            {
              if (!*v149)
              {
                if (v145 != 1 || *(int *)(v13 + 216) < 1)
                {
                  if (*(void *)(v147 + 24))
                  {
                    BOOL v698 = 0;
                    goto LABEL_921;
                  }
                  BOOL v698 = *(unsigned char *)(v13 + 109) != 0;
                  if (v145 == 1 && *(unsigned char *)(v13 + 109))
                  {
                    BOOL v698 = 1;
                    uint64_t v1072 = sub_1B0D16214(v11, 1, a6, (uint64_t)a7, a8, a9, a10, a11);
                    if (v1072)
                    {
                      uint64_t v1448 = v1072;
                      goto LABEL_2784;
                    }
                    *(unsigned char *)(v13 + 101) = 1;
                    if (sub_1B0C8B23C(v11) != 5)
                    {
                      LODWORD(v20) = *(_DWORD *)(v11 + 52);
                      if (!v20)
                      {
                        *(unsigned char *)(v13 + 109) = 0;
                        goto LABEL_2001;
                      }
                      *(unsigned char *)(v13 + 101) = 0;
                      goto LABEL_2742;
                    }
                    *(_DWORD *)(v11 + 48) = -858993459 * ((unint64_t)(v12 - v1568) >> 3);
                    *(unsigned char *)(v13 + 101) = 0;
LABEL_2665:
                    uint64_t v1448 = 5;
                    *(_DWORD *)(v11 + 52) = 5;
                    goto LABEL_2784;
                  }
LABEL_921:
                  unsigned int v1544 = v19;
                  int v148 = *(_DWORD *)(v13 + 788) + ~v148;
                  LODWORD(v699) = *(_DWORD *)(v13 + 40);
                  if (v145 == 2)
                  {
                    int v700 = *(_DWORD *)(v13 + 44) & 1;
                    if ((int)v699 >= 1)
                    {
                      unint64_t v1508 = v18;
                      v1517 = v12;
                      uint64_t v701 = v1568;
                      uint64_t v702 = 0;
                      uint64_t v703 = 8;
                      while (1)
                      {
                        int v704 = sub_1B0D15898(*(void *)(*(void *)(v13 + 32) + v703), 516, v700 ^ 1u);
                        if (v704) {
                          break;
                        }
                        ++v702;
                        uint64_t v699 = *(int *)(v13 + 40);
                        v703 += 32;
                        if (v702 >= v699)
                        {
                          int v1558 = 0;
                          uint64_t v705 = v1540;
                          unint64_t v18 = v1508;
                          uint64_t v12 = v1517;
                          goto LABEL_1721;
                        }
                      }
                      LODWORD(v20) = v704;
                      uint64_t v11 = v1540;
LABEL_2704:
                      unint64_t v18 = v1508;
                      uint64_t v12 = v1517;
LABEL_2705:
                      LOBYTE(v19) = v1544;
                      goto LABEL_2742;
                    }
                  }
                  else
                  {
                    uint64_t v705 = v11;
                    uint64_t v701 = v1568;
                    int v700 = 0;
LABEL_1721:
                    v1568 = v701;
                    if ((int)v699 >= 1)
                    {
                      BOOL __sf = v698;
                      v1522 = v12;
                      unint64_t v1061 = v18;
                      uint64_t v1062 = 0;
                      uint64_t v1063 = 8;
                      while (1)
                      {
                        int v1064 = sub_1B0CD2748(*(void *)(*(void *)(v13 + 32) + v1063), v145, v148, *(double *)a2.i64);
                        if (v1064) {
                          break;
                        }
                        ++v1062;
                        v1063 += 32;
                        if (v1062 >= *(int *)(v13 + 40))
                        {
                          LODWORD(v20) = 0;
                          uint64_t v11 = v1540;
                          unint64_t v18 = v1061;
                          uint64_t v12 = v1522;
                          BOOL v698 = __sf;
                          goto LABEL_1994;
                        }
                      }
                      LODWORD(v20) = v1064;
                      uint64_t v11 = v1540;
                      LOBYTE(v19) = v1544;
                      unint64_t v18 = v1061;
                      uint64_t v12 = v1522;
                      goto LABEL_2742;
                    }
                    uint64_t v11 = v705;
                  }
                  LODWORD(v20) = v1558;
LABEL_1994:
                  if (v700)
                  {
                    BOOL v1167 = v698;
                    int v1168 = v20;
                    for (uint64_t j = *(void *)(v13 + 8); j; uint64_t j = *(void *)(j + 16))
                      *(_WORD *)(j + 268) = *(_WORD *)(j + 268) & 0xFFFC | 1;
                    sub_1B0CE89B4(v13);
                    *(_DWORD *)(v13 + 44) |= 1u;
                    LODWORD(v20) = v1168;
                    BOOL v698 = v1167;
                  }
                  uint64_t v19 = v1544;
                  if (v20) {
                    goto LABEL_2742;
                  }
LABEL_2001:
                  while (1)
                  {
                    v1170 = *(void **)(v13 + 760);
                    if (v1170 == (void *)v147) {
                      break;
                    }
                    *(void *)(v13 + 760) = v1170[3];
                    sub_1B0D05C10((void *)v13, v1170);
                    --*(_DWORD *)(v13 + 788);
                  }
                  if (v145 == 1)
                  {
                    *(void *)(v13 + 760) = *(void *)(v147 + 24);
                    sub_1B0D05C10((void *)v13, (void *)v147);
                    if (!v698)
                    {
                      --*(_DWORD *)(v13 + 788);
                      LOWORD(v16) = v1569;
                      goto LABEL_2010;
                    }
                  }
                  else
                  {
                    a2 = *(int64x2_t *)(v147 + 8);
                    *(int64x2_t *)(v13 + 800) = a2;
                  }
                  BOOL v1171 = v145 != 2 && v698;
                  LOWORD(v16) = v1569;
                  if (!v1171)
                  {
LABEL_2010:
                    int v62 = sub_1B0D177E0(v13, v145, v148);
                    if (v62) {
                      goto LABEL_2597;
                    }
                  }
LABEL_2188:
                  if (*(unsigned char *)(v11 + 267) == 3)
                  {
                    uint64_t v1448 = 101;
                    goto LABEL_2784;
                  }
                  int v1558 = 0;
                  v12 += 40;
                  goto LABEL_22;
                }
                v1450 = "cannot release savepoint - SQL statements in progress";
LABEL_2698:
                sub_1B0D17334((uint64_t *)v11, v1450, a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
                LODWORD(v20) = 5;
                goto LABEL_2742;
              }
            }
            else if (byte_1B0DE1758[v151] != byte_1B0DE1758[v152])
            {
              ++v148;
              uint64_t v147 = *(void *)(v147 + 24);
              if (!v147) {
                break;
              }
              goto LABEL_165;
            }
            ++v149;
          }
        }
        sub_1B0D17334((uint64_t *)v11, "no such savepoint: %s", a6, (uint64_t)a7, a8, a9, a10, a11, *((void *)v12 + 2));
        goto LABEL_2670;
      case 1u:
        int v1443 = *((_DWORD *)v12 + 1);
        int v1442 = *((_DWORD *)v12 + 2);
        if (v1443 == *(unsigned __int8 *)(v13 + 101))
        {
          if (v1442) {
            v1444 = "cannot rollback - no transaction is active";
          }
          else {
            v1444 = "cannot commit - no transaction is active";
          }
          if (v1443) {
            v1445 = v1444;
          }
          else {
            v1445 = "cannot start a transaction within a transaction";
          }
          int v1446 = 1;
          goto LABEL_2641;
        }
        if (v1442)
        {
          sub_1B0CDA30C(v13, 516, *(double *)a2.i64);
          char v1451 = 1;
        }
        else
        {
          if (v1443 && *(int *)(v13 + 216) > 0)
          {
            int v1446 = 5;
            v1445 = "cannot commit transaction - SQL statements in progress";
LABEL_2641:
            v1447 = (uint64_t *)v11;
            goto LABEL_2668;
          }
          uint64_t v1453 = sub_1B0D16214(v11, 1, a6, (uint64_t)a7, a8, a9, a10, a11);
          if (v1453)
          {
            uint64_t v1448 = v1453;
            goto LABEL_2784;
          }
          char v1451 = v1443;
        }
        *(unsigned char *)(v13 + 101) = v1451;
        if (sub_1B0C8B23C(v11) == 5)
        {
          *(_DWORD *)(v11 + 48) = -858993459 * ((unint64_t)(v12 - v1568) >> 3);
          *(unsigned char *)(v13 + 101) = 1 - v1443;
          goto LABEL_2665;
        }
        sub_1B0D161C8((void *)v13);
        goto LABEL_2713;
      case 2u:
        LODWORD(__buf[0]) = 0;
        int v153 = *((_DWORD *)v12 + 2);
        if (v153)
        {
          uint64_t v154 = *(void *)(v13 + 48);
          if ((v154 & 0x200100000) != 0)
          {
            if ((v154 & 0x100000) != 0) {
              LODWORD(v20) = 8;
            }
            else {
              LODWORD(v20) = 11;
            }
            goto LABEL_2742;
          }
        }
        uint64_t v155 = *(void *)(v13 + 32);
        uint64_t v156 = *((int *)v12 + 1);
        uint64_t v157 = v155 + 32 * v156;
        uint64_t v158 = *(void *)(v157 + 8);
        if (!v158) {
          goto LABEL_186;
        }
        uint64_t v159 = sub_1B0C8BB5C(*(void *)(v157 + 8), v153, __buf);
        if (v159)
        {
          LODWORD(v20) = v159;
          if (v159 == 5)
          {
            *(_DWORD *)(v11 + 48) = -858993459 * ((unint64_t)(v12 - v1568) >> 3);
            *(_DWORD *)(v11 + 52) = v159;
            uint64_t v1448 = v159;
            goto LABEL_2784;
          }
          goto LABEL_2742;
        }
        if ((*(_WORD *)(v11 + 268) & 0x20) != 0
          && *((_DWORD *)v12 + 2)
          && (!*(unsigned char *)(v13 + 101) || *(int *)(v13 + 212) >= 2))
        {
          int v160 = *(_DWORD *)(v11 + 64);
          if (!v160)
          {
            int v161 = *(_DWORD *)(v13 + 792) + 1;
            *(_DWORD *)(v13 + 792) = v161;
            int v160 = *(_DWORD *)(v13 + 788) + v161;
            *(_DWORD *)(v11 + 64) = v160;
          }
          int v162 = sub_1B0D177E0(v13, 0, v160 - 1);
          if (!v162) {
            int v162 = sub_1B0D19F18(v158, *(_DWORD *)(v11 + 64));
          }
          int v1558 = v162;
          a2 = *(int64x2_t *)(v13 + 800);
          *(int64x2_t *)(v11 + 88) = a2;
LABEL_186:
          LODWORD(v20) = v1558;
          if (v1558) {
            goto LABEL_2742;
          }
        }
        if (*((_WORD *)v12 + 1)
          && (LODWORD(__buf[0]) != *((_DWORD *)v12 + 3)
           || *(_DWORD *)(*(void *)(v155 + 32 * v156 + 24) + 4) != *((_DWORD *)v12 + 4)))
        {
          if (*v1485) {
            sub_1B0D05C10((void *)v13, *v1485);
          }
          *v1485 = (char *)sub_1B0CAF97C(v13, "database schema has changed");
          uint64_t v1441 = *((int *)v12 + 1);
          if (**(_DWORD **)(*(void *)(v13 + 32) + 32 * v1441 + 24) != LODWORD(__buf[0])) {
            sub_1B0D19FC4(v13, v1441);
          }
          *(_WORD *)(v11 + 268) = *(_WORD *)(v11 + 268) & 0xFFEC | 1;
          LODWORD(v20) = 17;
          goto LABEL_2742;
        }
        goto LABEL_1888;
      case 3u:
        DWORD2(__buf[0]) = -1;
        a2.i64[0] = 0xFFFFFFFF00000000;
        *(void *)&__buf[0] = 0xFFFFFFFF00000000;
        int v163 = *(_DWORD *)(v13 + 40);
        if (v163 < 1)
        {
          int v169 = 0;
          int v165 = 0;
          BOOL v171 = 1;
        }
        else
        {
          uint64_t v164 = 0;
          int v165 = 0;
          uint64_t v167 = *((unsigned int *)v12 + 1);
          int v166 = *((_DWORD *)v12 + 2);
          uint64_t v168 = 8;
          a7 = (char *)__buf + 8;
          a6 = (uint64_t)__buf + 4;
          do
          {
            if (v167 == 12 || v167 == v164)
            {
              int v170 = sub_1B0D78DC0(*(void *)(*(void *)(v13 + 32) + v168), v166, (_DWORD *)a6, a7);
              a6 = 0;
              a7 = 0;
              if (v170 == 5) {
                int v169 = 0;
              }
              else {
                int v169 = v170;
              }
              if (v170 == 5) {
                int v165 = 1;
              }
              int v163 = *(_DWORD *)(v13 + 40);
            }
            else
            {
              int v169 = 0;
            }
            ++v164;
            BOOL v171 = v169 == 0;
            if (v164 >= v163) {
              break;
            }
            v168 += 32;
          }
          while (!v169);
        }
        if (v171 && v165 != 0) {
          int v785 = 5;
        }
        else {
          int v785 = v169;
        }
        if (v785 == 5)
        {
          int v786 = 1;
          LODWORD(__buf[0]) = 1;
          LOWORD(v16) = v1569;
          uint64_t v11 = v1540;
        }
        else
        {
          LOWORD(v16) = v1569;
          uint64_t v11 = v1540;
          if (v785)
          {
            LODWORD(v20) = v169;
            goto LABEL_2742;
          }
          int v786 = __buf[0];
        }
        unint64_t v787 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        if ((*(_WORD *)(v787 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v1570 + ((uint64_t)*((int *)v12 + 3) << 6), v786);
        }
        else
        {
          *(void *)unint64_t v787 = v786;
          *(_WORD *)(v787 + 20) = 4;
        }
        if ((*(_WORD *)(v787 + 84) & 0x9000) != 0)
        {
          sub_1B0D18980(v787 + 64, SDWORD1(__buf[0]));
        }
        else
        {
          *(void *)(v787 + 64) = SDWORD1(__buf[0]);
          *(_WORD *)(v787 + 84) = 4;
        }
        if ((*(_WORD *)(v787 + 148) & 0x9000) != 0)
        {
          sub_1B0D18980(v787 + 128, SDWORD2(__buf[0]));
        }
        else
        {
          *(void *)(v787 + 128) = SDWORD2(__buf[0]);
          *(_WORD *)(v787 + 148) = 4;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 4u:
        unint64_t v172 = v18;
        unsigned int v1544 = v19;
        uint64_t v173 = *(void *)(v11 + 104);
        uint64_t v174 = *((int *)v12 + 2);
        uint64_t v175 = v173 + (v174 << 6);
        __int16 v177 = *(_WORD *)(v175 + 20);
        char v176 = (_WORD *)(v175 + 20);
        unint64_t v1508 = v172;
        if ((v177 & 0x9000) != 0) {
          sub_1B0D1D578(v173 + (v174 << 6));
        }
        else {
          *char v176 = 4;
        }
        int v788 = *((_DWORD *)v12 + 3);
        v1517 = v12;
        uint64_t v789 = *(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8);
        uint64_t v790 = *(uint64_t **)(v789 + 8);
        uint64_t v791 = *v790;
        int v792 = *(unsigned __int8 *)(*v790 + 9);
        if (v788 == -1) {
          int v793 = *(unsigned __int8 *)(*v790 + 9);
        }
        else {
          int v793 = v788;
        }
        int v794 = v1558;
        if (*(unsigned __int8 *)(v791 + 21) > 2u || **(void **)(v791 + 80) && *(uint64_t *)(v791 + 96) >= 1) {
          int v793 = v792;
        }
        if (*(unsigned char *)(v791 + 19))
        {
          int v795 = (const char *)&unk_1B0DE20F1;
        }
        else
        {
          if (*(_UNKNOWN **)v791 == &unk_1EB21D5B8) {
            int v795 = (const char *)&unk_1B0DE20F1;
          }
          else {
            int v795 = *(const char **)(v791 + 216);
          }
          int v794 = v1558;
        }
        if (v793 != 5) {
          goto LABEL_1921;
        }
        if (!v795) {
          goto LABEL_1922;
        }
        if ((strlen(v795) & 0x3FFFFFFF) == 0) {
          goto LABEL_2528;
        }
        int v794 = v1558;
        if (*(unsigned char *)(v791 + 17)) {
          goto LABEL_1922;
        }
        if (*(unsigned char *)(v791 + 8))
        {
LABEL_1921:
          if (v793 == v792)
          {
LABEL_1922:
            int v793 = v792;
            goto LABEL_1923;
          }
          BOOL v1146 = v792 == 5;
          if (v792 != 5 && v793 != 5)
          {
LABEL_1923:
            int v803 = v794;
            if (v794) {
              int v1141 = v792;
            }
            else {
              int v1141 = v793;
            }
            int v1142 = sub_1B0D1C7E0(v791, v1141);
            *char v176 = 8706;
            if (v1142 == 6)
            {
              int v1143 = 0;
              *(void *)(v173 + (v174 << 6) + 8) = 0;
            }
            else
            {
              uint64_t v1144 = off_1E5FEF608[v1142];
              *(void *)(v173 + (v174 << 6) + 8) = v1144;
              int v1143 = strlen(v1144) & 0x3FFFFFFF;
            }
            unint64_t v18 = v1508;
            uint64_t v12 = v1517;
            uint64_t v1145 = v173 + (v174 << 6);
            *(_DWORD *)(v1145 + 16) = v1143;
            *(unsigned char *)(v1145 + 22) = 1;
            if (v1557 != 1) {
              sub_1B0CD43EC((int *)(v173 + (v174 << 6)), v1557);
            }
            uint64_t v19 = v1544;
            uint64_t v11 = v1540;
            if (!v803)
            {
              int v1558 = 0;
              LOWORD(v16) = v1569;
              uint64_t v12 = v1517 + 40;
              continue;
            }
LABEL_2621:
            LODWORD(v20) = v803;
            goto LABEL_2742;
          }
          if (!*(unsigned char *)(v13 + 101)) {
            goto LABEL_2701;
          }
        }
        else
        {
          uint64_t v1395 = **(void **)(v791 + 72);
          if (*(int *)v1395 < 2)
          {
LABEL_2528:
            int v793 = v792;
            int v794 = v1558;
            goto LABEL_1923;
          }
          if (*(void *)(v1395 + 104)) {
            BOOL v1396 = v792 == 5;
          }
          else {
            BOOL v1396 = 1;
          }
          int v794 = v1558;
          if (v1396) {
            goto LABEL_1922;
          }
          BOOL v1146 = 0;
          if (!*(unsigned char *)(v13 + 101)) {
            goto LABEL_2701;
          }
        }
        if (*(int *)(v13 + 212) < 2)
        {
          if (v1146)
          {
            int v1148 = sub_1B0D1C560(v791, v13);
            if (v1148)
            {
LABEL_2261:
              int v794 = v1148;
              goto LABEL_1923;
            }
            sub_1B0D1C7E0(v791, v793);
          }
          else
          {
            if (v792 == 4) {
              sub_1B0D1C7E0(v791, 2);
            }
            int v794 = v1558;
            if (v1558) {
              goto LABEL_1923;
            }
          }
          if (v793 == 5) {
            int v1282 = 2;
          }
          else {
            int v1282 = 1;
          }
          int v1148 = sub_1B0CE8A9C(v789, v1282);
          goto LABEL_2261;
        }
LABEL_2701:
        v1452 = "out of";
        if (v793 == 5) {
          v1452 = "into";
        }
        uint64_t v11 = v1540;
        sub_1B0D17334((uint64_t *)v1540, "cannot change %s wal mode from within a transaction", a6, (uint64_t)a7, a8, a9, a10, a11, (char)v1452);
        LODWORD(v20) = 1;
        goto LABEL_2704;
      case 5u:
        *(_DWORD *)(v11 + 256) = 1;
        uint64_t v178 = *((int *)v12 + 2);
        if (v178) {
          uint64_t v179 = v1570 + (v178 << 6);
        }
        else {
          uint64_t v179 = 0;
        }
        int v62 = sub_1B0D1C9AC(v1485, v13, *((_DWORD *)v12 + 1), v179);
        if (v62) {
          goto LABEL_2597;
        }
        goto LABEL_1888;
      case 6u:
        unsigned int v1544 = v19;
        uint64_t v180 = *((int *)v12 + 3);
        unint64_t v181 = v1570 + (v180 << 6);
        uint64_t v184 = *(void *)(v181 + 64);
        unint64_t v183 = v181 + 64;
        unsigned int v182 = v184;
        char v185 = *(int64x2_t **)(v11 + 112);
        uint64_t v186 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        int v187 = *(uint64_t ***)(v186 + 40);
        uint64_t v188 = *v187;
        uint64_t v16 = **v187;
        uint64_t v189 = *(unsigned int *)(v1570 + (v180 << 6));
        if ((int)v184 < 1) {
          goto LABEL_1344;
        }
        if (v182 < 4uLL)
        {
          uint64_t v190 = 0;
LABEL_1342:
          uint64_t v889 = &v185->i64[v190];
          uint64_t v890 = v182 - v190;
          uint64_t v891 = v1570 + (v190 << 6) + (v180 << 6) + 128;
          do
          {
            *v889++ = v891;
            v891 += 64;
            --v890;
          }
          while (v890);
          goto LABEL_1344;
        }
        uint64_t v190 = v182 & 0xFFFFFFFC;
        a2 = (int64x2_t)xmmword_1B0DE1490;
        uint64_t v886 = v185 + 1;
        uint64_t v887 = v190;
        do
        {
          int64x2_t v888 = vaddq_s64(vshlq_n_s64(a2, 6uLL), vdupq_n_s64(v183));
          v886[-1] = vaddq_s64(v888, vdupq_n_s64(0x40uLL));
          *uint64_t v886 = vaddq_s64(v888, vdupq_n_s64(0xC0uLL));
          a2 = vaddq_s64(a2, vdupq_n_s64(4uLL));
          v886 += 2;
          v887 -= 4;
        }
        while (v887);
        if ((v182 & 3) != 0) {
          goto LABEL_1342;
        }
LABEL_1344:
        int v892 = (*(uint64_t (**)(uint64_t **, uint64_t, void, int64x2_t))(v16 + 64))(v187, v189, *((void *)v12 + 2), a2);
        sub_1B0D17574(v11, (uint64_t)v188);
        if (v892)
        {
          LODWORD(v20) = v892;
          goto LABEL_2705;
        }
        int v893 = (*(uint64_t (**)(uint64_t **))(v16 + 80))(v187);
        int v1558 = 0;
        *(unsigned char *)(v186 + 2) = 0;
        uint64_t v19 = v1544;
        LOWORD(v16) = v1569;
        if (!v893) {
          goto LABEL_21;
        }
        goto LABEL_2422;
      case 7u:
        *(void *)&__buf[0] = 0;
        if (*(unsigned char *)(v13 + 103)) {
          goto LABEL_8;
        }
        int v191 = *(uint64_t **)(*((void *)v12 + 2) + 16);
        if (!v191) {
          goto LABEL_2600;
        }
        uint64_t v192 = *v191;
        LOWORD(v16) = v1569;
        if (!*v191) {
          goto LABEL_2600;
        }
        int v193 = *(uint64_t (**)(uint64_t *))(v192 + 104);
        if (!v193) {
          goto LABEL_21;
        }
        uint64_t v194 = *((unsigned int *)v12 + 2);
        char v195 = *(unsigned char *)(v13 + 108);
        uint64_t v196 = *(int64x2_t **)(v11 + 112);
        if ((int)v194 < 1) {
          goto LABEL_1817;
        }
        unint64_t v197 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        if (v194 >= 4)
        {
          uint64_t v198 = v194 & 0x7FFFFFFC;
          unint64_t v199 = v197 + ((unint64_t)(v194 & 0xFFFFFFFC) << 6);
          int v1095 = v196 + 1;
          uint64_t v1096 = v194 & 0xFFFFFFFC;
          do
          {
            int64x2_t v1097 = vdupq_n_s64(v197);
            v1095[-1] = vaddq_s64(v1097, (int64x2_t)xmmword_1B0DE1530);
            *int v1095 = vaddq_s64(v1097, (int64x2_t)xmmword_1B0DE1540);
            v197 += 256;
            v1095 += 2;
            v1096 -= 4;
          }
          while (v1096);
          if (v198 == v194)
          {
LABEL_1816:
            int v193 = *(uint64_t (**)(uint64_t *))(v192 + 104);
LABEL_1817:
            *(unsigned char *)(v13 + 108) = v12[2];
            int v1100 = v193(v191);
            *(unsigned char *)(v13 + 108) = v195;
            sub_1B0D17574(v11, (uint64_t)v191);
            if (v1100)
            {
              LODWORD(v20) = v1100;
              if (v1100 != 19 || !*(unsigned char *)(*((void *)v12 + 2) + 28))
              {
                ++*(void *)(v11 + 56);
                goto LABEL_2742;
              }
              int v1101 = *((unsigned __int16 *)v12 + 1);
              if (v1101 != 4)
              {
                if (v1101 == 5) {
                  *(unsigned char *)(v11 + 264) = 2;
                }
                else {
                  *(unsigned char *)(v11 + 264) = v1101;
                }
                goto LABEL_2742;
              }
              int v1558 = 0;
              v12 += 40;
            }
            else
            {
              if (*((_DWORD *)v12 + 1)) {
                *(void *)(v13 + 56) = *(void *)&__buf[0];
              }
              int v1558 = 0;
              ++*(void *)(v11 + 56);
              v12 += 40;
            }
            continue;
          }
        }
        else
        {
          uint64_t v198 = 0;
          unint64_t v199 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        }
        v1098 = (unint64_t *)v196 + v198;
        uint64_t v1099 = v194 - v198;
        do
        {
          *v1098++ = v199;
          v199 += 64;
          --v1099;
        }
        while (v1099);
        goto LABEL_1816;
      case 8u:
      case 0xB5u:
        if ((*(unsigned char *)(v13 + 110) & 0x41) != 0 && *(unsigned __int8 *)(v11 + 265) != 254)
        {
          a7 = (char *)*((void *)v12 + 2);
          if (a7 || (a7 = *(char **)(v11 + 320)) != 0)
          {
            if ((*(unsigned char *)(v13 + 110) & 0x40) != 0)
            {
              uint64_t v1007 = sub_1B0CEC95C((void *)v11, a7);
              (*(void (**)(void, void *))(v13 + 240))(*(void *)(v13 + 248), v1007);
              sqlite3_free(v1007);
            }
            else if (*(int *)(v13 + 220) < 2)
            {
              (*(void (**)(uint64_t, void, uint64_t))(v13 + 240))(1, *(void *)(v13 + 248), v11);
            }
            else
            {
              uint64_t v75 = sub_1B0C904AC(v13, "-- %s", a6, (uint64_t)a7, a8, a9, a10, a11, (char)a7);
              (*(void (**)(uint64_t, void, uint64_t, void *))(v13 + 240))(1, *(void *)(v13 + 248), v11, v75);
              if (v75) {
                sub_1B0D05C10((void *)v13, v75);
              }
            }
          }
        }
        int v1155 = *((_DWORD *)v12 + 1);
        LOWORD(v16) = v1569;
        if (v1155 < dword_1EB21CB78) {
          goto LABEL_1966;
        }
        if (*v12 == 181) {
          goto LABEL_21;
        }
        uint64_t v1156 = *(unsigned int *)(v11 + 144);
        if ((int)v1156 >= 2)
        {
          v1157 = (_DWORD *)(*(void *)(v11 + 136) + 44);
          uint64_t v1158 = v1156 - 1;
          do
          {
            if (*((unsigned char *)v1157 - 4) == 15) {
              _DWORD *v1157 = 0;
            }
            v1157 += 10;
            --v1158;
          }
          while (v1158);
        }
        int v1155 = 0;
        *((_DWORD *)v12 + 1) = 0;
LABEL_1966:
        *((_DWORD *)v12 + 1) = v1155 + 1;
        ++*(_DWORD *)(v11 + 304);
        ++*(_DWORD *)(v11 + 224);
        goto LABEL_2422;
      case 9u:
        goto LABEL_1754;
      case 0xAu:
        unint64_t v200 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        *(_WORD *)(v200 + 20) = 4;
        *(void *)unint64_t v200 = (int)(-858993459 * ((unint64_t)(v12 - v1568) >> 3));
        goto LABEL_1754;
      case 0xBu:
        unint64_t v201 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        *(void *)unint64_t v201 = *((int *)v12 + 3) - 1;
        *(_WORD *)(v201 + 20) = 4;
        LOWORD(v16) = v1569;
        if (!*((_DWORD *)v12 + 2)) {
          goto LABEL_21;
        }
        goto LABEL_2422;
      case 0xCu:
        LOWORD(v16) = v1569;
        unint64_t v202 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        *(_WORD *)(v202 + 20) = 4;
        int v203 = *(_DWORD *)v202;
        *(void *)unint64_t v202 = (int)(-858993459 * ((unint64_t)(v12 - v1568) >> 3));
        uint64_t v12 = &v1568[40 * v203 + 40];
        continue;
      case 0xDu:
        unint64_t v204 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v207 = *(_WORD *)(v204 + 20);
        uint64_t v206 = (__int16 *)(v204 + 20);
        __int16 v205 = v207;
        if ((v207 & 4) != 0
          || (sub_1B0CBCF8C(v1570 + ((uint64_t)*((int *)v12 + 1) << 6), 67, v1557), __int16 v205 = *v206, (*v206 & 4) != 0))
        {
          *uint64_t v206 = v205 & 0xF240 | 4;
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        LOWORD(v16) = v1569;
        if (!*((_DWORD *)v12 + 2))
        {
          LODWORD(v20) = 20;
          goto LABEL_2742;
        }
        goto LABEL_2422;
      case 0xEu:
        if (v1488 < 0)
        {
          LOWORD(v16) = v1569;
          uint64_t v12 = &v1568[40 * *((int *)v12 + 1)];
          continue;
        }
        LOWORD(v16) = v1569;
        if (v1488)
        {
          int v208 = *((_DWORD *)v12 + 3);
          goto LABEL_2423;
        }
        int v1488 = 0;
        goto LABEL_2422;
      case 0xFu:
        uint64_t v209 = *(void *)(v11 + 352);
        uint64_t v210 = *(void *)(v11 + 136);
        if (v209)
        {
          unint64_t v211 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v12[-v210] >> 3);
          uint64_t v212 = *(void *)(v209 + 40);
          uint64_t v213 = v211 >> 3;
          int v214 = *(unsigned __int8 *)(v212 + v213);
          int v215 = 1 << (v211 & 7);
          if ((v215 & v214) != 0)
          {
LABEL_268:
            LOWORD(v16) = v1569;
            goto LABEL_2422;
          }
          *(unsigned char *)(v212 + v213) = v214 | v215;
          int v216 = *(_DWORD *)(*(void *)(v11 + 136) + 4);
          LOWORD(v16) = v1569;
        }
        else
        {
          int v216 = *(_DWORD *)(v210 + 4);
          LOWORD(v16) = v1569;
          if (v216 == *((_DWORD *)v12 + 1)) {
            goto LABEL_2422;
          }
        }
        *((_DWORD *)v12 + 1) = v216;
        v12 += 40;
        continue;
      case 0x10u:
        uint64_t v217 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v218 = *(_WORD *)(v217 + 20);
        if ((v218 & 0x24) != 0)
        {
          LOWORD(v16) = v1569;
          if (*(void *)v217) {
            goto LABEL_2422;
          }
          goto LABEL_21;
        }
        if (v218) {
          goto LABEL_1265;
        }
        LOWORD(v16) = v1569;
        if ((v218 & 8) != 0)
        {
          a2.i64[0] = *(void *)v217;
        }
        else if ((v218 & 0x12) != 0)
        {
          *(double *)a2.i64 = sub_1B0D18684(v217);
        }
        else
        {
          a2.i64[0] = 0;
        }
        if (*(double *)a2.i64 == 0.0) {
          goto LABEL_21;
        }
        goto LABEL_2422;
      case 0x11u:
        uint64_t v219 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v220 = *(_WORD *)(v219 + 20);
        if ((v220 & 0x24) != 0)
        {
          LOWORD(v16) = v1569;
          if (*(void *)v219) {
            goto LABEL_21;
          }
          goto LABEL_2422;
        }
        if (v220)
        {
LABEL_1265:
          LOWORD(v16) = v1569;
          if (*((_DWORD *)v12 + 3)) {
            goto LABEL_2422;
          }
          goto LABEL_21;
        }
        if ((v220 & 8) != 0)
        {
          a2.i64[0] = *(void *)v219;
          LOWORD(v16) = v1569;
        }
        else
        {
          LOWORD(v16) = v1569;
          if ((v220 & 0x12) == 0) {
            goto LABEL_2422;
          }
          *(double *)a2.i64 = sub_1B0D18684(v219);
        }
        if (*(double *)a2.i64 != 0.0) {
          goto LABEL_21;
        }
        goto LABEL_2422;
      case 0x12u:
        uint64_t v221 = *((unsigned int *)v12 + 1);
        if ((v221 & 0x80000000) != 0)
        {
          if (v1570)
          {
            LOBYTE(v796) = byte_1B0DE186A[*(_WORD *)(v1570 + ((uint64_t)*((int *)v12 + 3) << 6) + 20) & 0x3F];
          }
          else
          {
            sub_1B0CE1978(97220);
            LOBYTE(v796) = 0;
          }
        }
        else
        {
          uint64_t v222 = *(void *)(*(void *)(v11 + 120) + 8 * v221);
          uint64_t v223 = *((int *)v12 + 3);
          if ((int)v223 < *(unsigned __int16 *)(v222 + 66))
          {
            uint64_t v224 = *(unsigned int *)(v222 + 4 * v223 + 112);
            if (v224 < 0xC)
            {
              LOWORD(v224) = byte_1B0DE2173[v224];
            }
            else if (v224)
            {
              LOWORD(v224) = 4;
            }
            else
            {
              LOWORD(v224) = 8;
            }
LABEL_1912:
            LOWORD(v16) = v1569;
            if (((unsigned __int16)v224 & *((_WORD *)v12 + 1)) == 0) {
              goto LABEL_21;
            }
            goto LABEL_2422;
          }
          int v796 = *((_DWORD *)v12 + 4);
        }
        LODWORD(v224) = 1 << (v796 - 1);
        goto LABEL_1912;
      case 0x13u:
        uint64_t v225 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
        uint64_t v226 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        if ((*(_WORD *)(v226 + 20) & 1) == 0)
        {
          BOOL v227 = !sub_1B0D198B8(v226, 0);
          uint64_t v228 = (_WORD *)(v225 + 20);
          LOWORD(v16) = v1569;
          if ((*(_WORD *)(v225 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v225, v227);
            v12 += 40;
            continue;
          }
          *(void *)uint64_t v225 = v227;
          goto LABEL_2436;
        }
        uint64_t v678 = (_WORD *)(v225 + 20);
        LOWORD(v16) = v1569;
        if ((*(_WORD *)(v225 + 20) & 0x9000) == 0) {
          goto LABEL_1047;
        }
        sub_1B0D18138((int *)v225);
        v12 += 40;
        continue;
      case 0x14u:
        uint64_t v229 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        if (!v229)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        LOWORD(v16) = v1569;
        if (!*(unsigned char *)(v229 + 2)) {
          goto LABEL_21;
        }
        unint64_t v230 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        __int16 v232 = *(_WORD *)(v230 + 20);
        uint64_t v231 = (_WORD *)(v230 + 20);
        if ((v232 & 0x9000) != 0) {
          sub_1B0D18138((int *)(v1570 + ((uint64_t)*((int *)v12 + 3) << 6)));
        }
        else {
          *uint64_t v231 = 1;
        }
        goto LABEL_2422;
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
        LODWORD(v1574) = 0;
        a2 = 0uLL;
        memset(__buf, 0, 40);
        uint64_t v16 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        *(_WORD *)(v16 + 2) = 0;
        *(_DWORD *)(v16 + 24) = 0;
        if (!*(unsigned char *)(v16 + 4))
        {
          uint64_t v133 = *(void *)(v16 + 40);
          uint64_t v134 = *(void *)(v16 + 48);
          unsigned int v135 = *(unsigned __int8 *)(v133 + 3);
          WORD6(__buf[1]) = *((_DWORD *)v12 + 4);
          if (v23) {
            char v136 = 1;
          }
          else {
            char v136 = -1;
          }
          BYTE14(__buf[1]) = v136;
          unint64_t v137 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
          *(void *)&__buf[0] = v134;
          *((void *)&__buf[0] + 1) = v137;
          BYTE2(__buf[2]) = 0;
          int v62 = sub_1B0D1AC94(v133, (uint64_t *)__buf, (int *)&v1574);
          if (v62) {
            goto LABEL_2597;
          }
          int v138 = (v135 >> 1) & 1;
          if ((v135 & 2) != 0 && !BYTE2(__buf[2]))
          {
            int v138 = 1;
            LOWORD(v16) = v1569;
            BOOL v139 = v1574;
            goto LABEL_1595;
          }
LABEL_1404:
          if (v23 >= 0x17)
          {
            if ((v1574 & 0x80000000) != 0 || v23 == 24 && !v1574)
            {
              int v920 = sub_1B0CAE698(*(void *)(v16 + 40));
              goto LABEL_1414;
            }
LABEL_1429:
            LOWORD(v16) = v1569;
LABEL_1597:
            if (v138) {
              v12 += 40;
            }
            goto LABEL_1599;
          }
          if ((int)v1574 > 0 || v23 == 21 && !v1574)
          {
            uint64_t v921 = *(void *)(v16 + 40);
            *(unsigned char *)(v921 + 1) &= 0xF1u;
            *(_WORD *)(v921 + 70) = 0;
            if (*(unsigned char *)v921 || !*(_WORD *)(v921 + 86) || !*(unsigned char *)(*(void *)(v921 + 136) + 8))
            {
              int v920 = sub_1B0D1EF8C((unsigned __int8 *)v921);
LABEL_1414:
              LOWORD(v16) = v1569;
              if (v920)
              {
                LODWORD(v20) = v920;
                if (v920 != 101) {
                  goto LABEL_2742;
                }
                goto LABEL_1596;
              }
              goto LABEL_1597;
            }
            --*(_WORD *)(v921 + 86);
            goto LABEL_1429;
          }
          BOOL v139 = **(unsigned char **)(v16 + 40) != 0;
          LOWORD(v16) = v1569;
LABEL_1595:
          if (v139) {
            goto LABEL_1596;
          }
          goto LABEL_1597;
        }
        unsigned int v1543 = v19;
        uint64_t v47 = *((int *)v12 + 3);
        uint64_t v48 = v1570 + (v47 << 6);
        uint64_t v49 = (__int16 *)(v48 + 20);
        __int16 v50 = *(_WORD *)(v48 + 20);
        LOBYTE(v51) = v50;
        if ((v50 & 0x2E) == 2)
        {
          sub_1B0CEE968(v1570 + (v47 << 6), 0);
          __int16 v51 = *v49;
        }
        if ((v51 & 0x24) != 0)
        {
          int64_t v52 = *(void *)v48;
        }
        else if ((v51 & 8) != 0)
        {
          a2.i64[0] = *(void *)v48;
          uint64_t v759 = 0x7FFFFFFFFFFFFFFFLL;
          if (*(double *)v48 <= 9.22337204e18) {
            uint64_t v759 = (uint64_t)*(double *)v48;
          }
          if (*(double *)a2.i64 >= -9.22337204e18) {
            int64_t v52 = v759;
          }
          else {
            int64_t v52 = 0x8000000000000000;
          }
        }
        else if ((v51 & 0x12) != 0 && *(void *)(v1570 + (v47 << 6) + 8))
        {
          int64_t v52 = sub_1B0D186C0(v48);
          __int16 v51 = *v49;
        }
        else
        {
          int64_t v52 = 0;
        }
        *uint64_t v49 = v50;
        if ((v51 & 0x24) != 0)
        {
          uint64_t v19 = v1543;
          uint64_t v11 = v1540;
          goto LABEL_1403;
        }
        uint64_t v19 = v1543;
        uint64_t v11 = v1540;
        if ((v51 & 8) == 0)
        {
          if (v23 > 0x16 || (v51 & 1) != 0)
          {
            LOWORD(v16) = v1569;
            goto LABEL_2422;
          }
          uint64_t v922 = *(unsigned char **)(v16 + 40);
          LOWORD(v16) = v1569;
          if (!*v922 && (v922[1] & 8) != 0)
          {
LABEL_1599:
            int v1558 = 0;
            v12 += 40;
            continue;
          }
          LODWORD(v20) = sub_1B0D1E888((uint64_t)v922, &v1574);
          if (v20) {
            goto LABEL_2742;
          }
          int v138 = 0;
          BOOL v139 = v1574;
          goto LABEL_1595;
        }
        double v923 = *(double *)v48;
        if (*(double *)v48 < -9.22337204e18) {
          goto LABEL_1425;
        }
        if (v923 >= 9.22337204e18 || v52 < (uint64_t)v923) {
          goto LABEL_1718;
        }
        if (v52 > (uint64_t)v923) {
          goto LABEL_1425;
        }
        if (v923 > (double)v52)
        {
LABEL_1718:
          int v1060 = 1;
        }
        else
        {
          if (v923 < (double)v52)
          {
LABEL_1425:
            LODWORD(v23) = v23 + (v23 & 1) - 1;
            goto LABEL_1403;
          }
          int v1060 = 0;
        }
        LODWORD(v23) = (v23 & v1060) + v23;
LABEL_1403:
        int v62 = sub_1B0D1AA30(*(void *)(v16 + 40), v52, 0, (int *)&v1574);
        int v138 = 0;
        *(void *)(v16 + 72) = v52;
        if (!v62) {
          goto LABEL_1404;
        }
LABEL_2597:
        LODWORD(v20) = v62;
        goto LABEL_2742;
      case 0x19u:
        uint64_t v233 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        if (!v233 || *(unsigned char *)(v233 + 2)) {
          goto LABEL_1754;
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x1Au:
        if (*((_DWORD *)v12 + 4) > (int)*(unsigned __int16 *)(*(void *)(*(void *)(v11 + 120)
                                                                         + 8 * *((int *)v12 + 1))
                                                             + 6))
          goto LABEL_259;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
LABEL_259:
        memset(__buf, 0, 40);
        uint64_t v234 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        int v235 = *((_DWORD *)v12 + 4);
        unint64_t v236 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        *((void *)&__buf[0] + 1) = v236;
        WORD6(__buf[1]) = v235;
        if ((_WORD)v235)
        {
          uint64_t v237 = *(void *)(v234 + 40);
          *(void *)&__buf[0] = *(void *)(v234 + 48);
          BYTE14(__buf[1]) = 0;
          LODWORD(v20) = sub_1B0D1AC94(v237, (uint64_t *)__buf, (int *)(v234 + 28));
          if (v20) {
            goto LABEL_2742;
          }
        }
        else
        {
          if ((*(_WORD *)(v236 + 20) & 0x400) != 0 && sub_1B0CC9B18((int *)v236)) {
            goto LABEL_8;
          }
          uint64_t v238 = *(void *)(v234 + 48);
          unint64_t v239 = (unint64_t)*(unsigned __int16 *)(v238 + 6) << 6;
          uint64_t v240 = *(void *)(v238 + 16);
          uint64_t v241 = v240 ? sub_1B0D05DC0(v240, v239 + 104) : sub_1B0C7FC94(v239 + 104);
          uint64_t v740 = v241;
          if (!v241) {
            goto LABEL_8;
          }
          *(void *)uint64_t v241 = v238;
          *(void *)(v241 + 8) = v241 + 40;
          *(_WORD *)(v241 + 28) = *(_WORD *)(v238 + 6) + 1;
          sub_1B0CC14AC(*(void *)(v234 + 48), *(_DWORD *)(*((void *)&__buf[0] + 1) + 16), *(char **)(*((void *)&__buf[0] + 1) + 8), v241);
          *(unsigned char *)(v740 + 30) = 0;
          int v741 = sub_1B0D1AC94(*(void *)(v234 + 40), (uint64_t *)v740, (int *)(v234 + 28));
          sub_1B0D05C10((void *)v13, (void *)v740);
          LODWORD(v20) = v741;
          if (v741) {
            goto LABEL_2742;
          }
        }
        int v742 = *(_DWORD *)(v234 + 28);
        *(unsigned char *)(v234 + 2) = v742 != 0;
        *(unsigned char *)(v234 + 3) = 0;
        *(_DWORD *)(v234 + 24) = 0;
        int v743 = *v12;
        if (v743 == 29)
        {
          LOWORD(v16) = v1569;
          if (!v742) {
            goto LABEL_1596;
          }
        }
        else
        {
          LOWORD(v16) = v1569;
          if (v742) {
            goto LABEL_1596;
          }
          if (v743 == 26)
          {
            *(_WORD *)(v234 + 6) = *((_DWORD *)v12 + 4);
          }
          else if (v743 == 27)
          {
            uint64_t v744 = WORD6(__buf[1]);
            if (WORD6(__buf[1]))
            {
              uint64_t v745 = (__int16 *)(*((void *)&__buf[0] + 1) + 20);
              do
              {
                __int16 v746 = *v745;
                v745 += 32;
                if (v746) {
                  goto LABEL_1596;
                }
              }
              while (--v744);
            }
          }
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0x1Eu:
        int v1571 = 0;
        uint64_t v242 = *((int *)v12 + 3);
        unint64_t v243 = v1570 + (v242 << 6);
        if ((*(_WORD *)(v243 + 20) & 0x24) != 0) {
          goto LABEL_270;
        }
        memset(&__buf[2], 0, 32);
        memset(__buf, 0, 32);
        long long v244 = *(_OWORD *)v243;
        long long v245 = *(_OWORD *)(v243 + 16);
        long long v246 = *(_OWORD *)(v243 + 48);
        __buf[2] = *(_OWORD *)(v243 + 32);
        __buf[3] = v246;
        __buf[0] = v244;
        __buf[1] = v245;
        sub_1B0CBCF8C((uint64_t)__buf, 67, v1557);
        if ((BYTE4(__buf[1]) & 4) == 0) {
          goto LABEL_268;
        }
        int64_t v247 = *(void *)&__buf[0];
LABEL_271:
        LOWORD(v16) = v1569;
        uint64_t v248 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v249 = *(void *)(v248 + 40);
        int v1571 = 0;
        int v250 = sub_1B0D1AA30(v249, v247, 0, &v1571);
        LODWORD(v20) = v250;
        *(void *)(v248 + 72) = v247;
        *(_WORD *)(v248 + 2) = 0;
        int v251 = v1571;
        *(_DWORD *)(v248 + 24) = 0;
        *(_DWORD *)(v248 + 28) = v251;
        if (!v251)
        {
          if (v250) {
            goto LABEL_2742;
          }
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        if (!*((_DWORD *)v12 + 2))
        {
          int v1429 = 105420;
          goto LABEL_2631;
        }
        int v1558 = v250;
        goto LABEL_2422;
      case 0x1Fu:
        uint64_t v242 = *((int *)v12 + 3);
LABEL_270:
        int64_t v247 = *(void *)(v1570 + (v242 << 6));
        goto LABEL_271;
      case 0x20u:
      case 0x89u:
        uint64_t v76 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v77 = *(unsigned char **)(v76 + 40);
        LODWORD(__buf[0]) = 0;
        if (v23 == 137)
        {
          *(_DWORD *)(v76 + 28) = -1;
          LOWORD(v16) = v1569;
          if (!*v77) {
            goto LABEL_21;
          }
        }
        else
        {
          LOWORD(v16) = v1569;
          if (!*v77 && (v77[1] & 8) != 0)
          {
            int v1558 = 0;
            *(_WORD *)(v76 + 2) = 0;
            *(_DWORD *)(v76 + 24) = 0;
            v12 += 40;
            continue;
          }
        }
        int v62 = sub_1B0D1E888((uint64_t)v77, __buf);
        int v640 = __buf[0];
        *(_WORD *)(v76 + 2) = LOBYTE(__buf[0]);
        *(_DWORD *)(v76 + 24) = 0;
        if (v62) {
          goto LABEL_2597;
        }
        int v1558 = 0;
        if (*((int *)v12 + 2) >= 1 && v640) {
          goto LABEL_1596;
        }
        goto LABEL_21;
      case 0x21u:
        uint64_t v252 = *(void *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1)) + 40);
        int v253 = sub_1B0CACD5C((unsigned __int8 *)v252);
        if (v253 == 16)
        {
          int v1558 = 0;
          LOWORD(v16) = v1569;
          goto LABEL_2422;
        }
        LODWORD(v20) = v253;
        if (v253) {
          goto LABEL_2742;
        }
        LOWORD(v16) = v1569;
        while (1)
        {
          uint64_t v254 = *(void *)(v252 + 136);
          if (*(unsigned char *)(v254 + 8)) {
            break;
          }
          int v62 = sub_1B0CAD12C(v252, bswap32(*(_DWORD *)(*(void *)(v254 + 80)+ (unsigned __int16)(_byteswap_ushort(*(_WORD *)(*(void *)(v254 + 96)+ 2* *(unsigned __int16 *)(v252 + 86))) & *(_WORD *)(v254 + 26)))));
          if (v62) {
            goto LABEL_2597;
          }
        }
        unint64_t v1012 = sub_1B0D19E74(v252);
        if ((v1012 & 0x8000000000000000) != 0)
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        int v1558 = 0;
        if (*((_DWORD *)v12 + 3) > (int)sub_1B0CF7DF4(v1012)) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x22u:
      case 0x23u:
        ++*(_DWORD *)(v11 + 288);
        ++*(_DWORD *)(v11 + 208);
        goto LABEL_77;
      case 0x24u:
LABEL_77:
        uint64_t v78 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v79 = *(void *)(v78 + 40);
        if (*(unsigned char *)v78 != 1)
        {
          int v141 = sub_1B0CACD5C(*(unsigned __int8 **)(v78 + 40));
          if (v141 == 16)
          {
            LODWORD(v20) = 0;
            int v144 = 1;
            LOWORD(v16) = v1569;
          }
          else
          {
            LODWORD(v20) = v141;
            LOWORD(v16) = v1569;
            if (v141)
            {
              int v144 = 1;
            }
            else
            {
              do
              {
                uint64_t v142 = *(void *)(v79 + 136);
                if (*(unsigned char *)(v142 + 8))
                {
                  int v144 = 0;
                  LODWORD(v20) = 0;
                  goto LABEL_1593;
                }
                int v143 = sub_1B0CAD12C(v79, bswap32(*(_DWORD *)(*(void *)(v142 + 80)+ (unsigned __int16)(_byteswap_ushort(*(_WORD *)(*(void *)(v142 + 96)+ 2* *(unsigned __int16 *)(v79 + 86))) & *(_WORD *)(v142 + 26)))));
              }
              while (!v143);
              LODWORD(v20) = v143;
              int v144 = 0;
            }
          }
LABEL_1593:
          *(unsigned char *)(v78 + 3) = 0;
          *(_DWORD *)(v78 + 24) = 0;
          goto LABEL_2419;
        }
        if (*(unsigned char *)(v79 + 88))
        {
          uint64_t v1481 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
          sub_1B0D20398(v79);
          LODWORD(v20) = v80;
          uint64_t v1486 = v79;
          if (*(unsigned char *)(v79 + 91))
          {
            unint64_t v81 = *(unsigned __int8 *)(v79 + 91) + 1;
            uint64_t v82 = v79 + 104 * *(unsigned __int8 *)(v79 + 91) - 8;
            while (1)
            {
              uint64_t v84 = *(void *)v82;
              if (*(void *)v82) {
                break;
              }
              LODWORD(v83) = 0;
LABEL_82:
              if (!v20) {
                LODWORD(v20) = v83;
              }
              --v81;
              v82 -= 104;
              if (v81 <= 1) {
                goto LABEL_783;
              }
            }
            int v1559 = v20;
            if (*(void *)v84) {
              LODWORD(v83) = (*(uint64_t (**)(void))v84)(*(void *)(v84 + 8));
            }
            else {
              uint64_t v83 = *(void *)(v84 + 16);
            }
            unint64_t v85 = v18;
            uint64_t v86 = &off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              uint64_t v87 = v1568;
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108 -= (int)off_1EB21C9F8(v84);
              --qword_1EB220150;
              off_1EB21C9E8(v84);
              uint64_t v84 = xmmword_1EB2201B0;
              if (!(void)xmmword_1EB2201B0) {
                goto LABEL_96;
              }
              uint64_t v86 = &xmmword_1EB21CA50;
            }
            else
            {
              uint64_t v87 = v1568;
            }
            (*v86)(v84);
LABEL_96:
            v1568 = v87;
            *(_DWORD *)(v82 + 8) = 0;
            *(void *)uint64_t v82 = 0;
            uint64_t v13 = v1498;
            unint64_t v18 = v85;
            uint64_t v11 = v1540;
            LODWORD(v20) = v1559;
            goto LABEL_82;
          }
LABEL_783:
          if (v20) {
            goto LABEL_2742;
          }
          uint64_t v659 = v1486;
          uint64_t v1480 = *(void *)(*(void *)(v1486 + 112) + 32);
          int v660 = *(unsigned __int8 *)(v1486 + 92);
          uint64_t v661 = sub_1B0D20988;
          if (v660 == 2) {
            uint64_t v661 = sub_1B0D20794;
          }
          if (v660 == 1) {
            unsigned __int8 v662 = sub_1B0D20610;
          }
          else {
            unsigned __int8 v662 = v661;
          }
          uint64_t v663 = *(unsigned __int8 *)(v1486 + 91);
          if (!*(unsigned char *)(v1486 + 91))
          {
            v1494 = 0;
            uint64_t v16 = v1569;
LABEL_1443:
            unint64_t v934 = 0;
            uint64_t v1479 = v659 + 96;
            unint64_t v1512 = v18;
            v1520 = v12;
            unsigned int v1554 = v19;
            while (1)
            {
              while (1)
              {
                unint64_t v935 = *(unsigned __int8 *)(v659 + 91);
                if (v934 >= v935)
                {
                  if (*(unsigned char *)(v659 + 89))
                  {
                    int v986 = v935 - 1;
                    uint64_t v987 = v659 + 104 * v986;
                    uint64_t v989 = *(void *)(v987 + 120);
                    uint64_t v988 = (uint64_t *)(v987 + 120);
                    if (v989) {
                      goto LABEL_2395;
                    }
                    uint64_t v990 = v659 + 104 * v986;
                    uint64_t v992 = *(void *)(v990 + 112);
                    uint64_t v991 = v990 + 112;
                    uint64_t v993 = *(void *)(v992 + 40);
                    unint64_t v994 = (unint64_t)*(unsigned __int16 *)(v993 + 6) << 6;
                    uint64_t v995 = *(void *)(v993 + 16);
                    if (v995) {
                      uint64_t v996 = sub_1B0D05DC0(v995, v994 + 104);
                    }
                    else {
                      uint64_t v996 = sub_1B0C7FC94(v994 + 104);
                    }
                    if (v996)
                    {
                      *(void *)uint64_t v996 = v993;
                      *(void *)(v996 + 8) = v996 + 40;
                      *uint64_t v988 = v996;
                      *(_WORD *)(v996 + 28) = *(_WORD *)(*(void *)(*(void *)v991 + 40) + 6);
                      *(unsigned char *)(v996 + 31) = 0;
                      uint64_t v659 = v1486;
LABEL_2395:
                      if (v1480) {
                        uint64_t v1342 = sub_1B0D05DC0(v1480, 0x50uLL);
                      }
                      else {
                        uint64_t v1342 = sub_1B0C7FC94(80);
                      }
                      uint64_t v1343 = v1342;
                      v1344 = v1494;
                      if (v1342)
                      {
                        *(_OWORD *)(v1342 + 48) = 0u;
                        *(_OWORD *)(v1342 + 64) = 0u;
                        *(_OWORD *)(v1342 + 16) = 0u;
                        *(_OWORD *)(v1342 + 32) = 0u;
                        *(_OWORD *)uint64_t v1342 = 0u;
                        *(void *)(v659 + 16) = v1342;
                        int v62 = sub_1B0D21144((uint64_t)(v988 - 3), v1494, (uint64_t *)(v1342 + 72));
                        if (v62) {
                          goto LABEL_2597;
                        }
                        v1345 = *(int **)(v1343 + 72);
                        v1345[8] = 1;
                        *(void *)(*(void *)v1345 + 96) -= v1345[6];
                        unint64_t v1346 = *(unsigned __int8 *)(v659 + 91);
                        if (v1346 >= 2)
                        {
                          uint64_t v1347 = (v1346 - 1);
                          v1348 = (int **)(*((void *)v1494 + 3) + 72);
                          do
                          {
                            v1349 = *v1348;
                            if (*v1348)
                            {
                              v1349[8] = 1;
                              *(void *)(*(void *)v1349 + 96) -= v1349[6];
                            }
                            v1348 += 10;
                            --v1347;
                          }
                          while (v1347);
                        }
                        uint64_t v1567 = v1343;
                        uint64_t v1350 = -1;
                        uint64_t v1351 = 72;
                        while (1)
                        {
                          if (++v1350 >= (unint64_t)*(unsigned __int8 *)(v1486 + 91))
                          {
                            LODWORD(v20) = sub_1B0D212AC(v1567, 2);
                            int v144 = 0;
                            LOWORD(v16) = v1569;
                            uint64_t v11 = v1540;
                            goto LABEL_2418;
                          }
                          uint64_t v1352 = *((void *)v1494 + 3);
                          uint64_t v1353 = *(void *)(v1352 + v1351);
                          if (v1353)
                          {
                            if (*(_DWORD *)(v1353 + 32))
                            {
                              unint64_t v1354 = v18;
                              v1355 = *(void **)v1353;
                              **(void **)uint64_t v1353 = 0;
                              v1356 = (void *)sub_1B0C7FC94(24);
                              if (!v1356)
                              {
                                LODWORD(v20) = 7;
                                uint64_t v11 = v1540;
                                LOBYTE(v19) = v1554;
                                unint64_t v18 = v1354;
                                goto LABEL_2742;
                              }
                              v1357 = v1356;
                              if (((int)v1356 / 17))
                              {
                                void *v1356 = sub_1B0D22230;
                                v1356[1] = v1352 + v1351 - 72;
                              }
                              else
                              {
                                void *v1356 = 0;
                                int v1358 = sub_1B0D212AC(v1352 + v1351 - 72, 1);
                                *(_DWORD *)(**(void **)(v1352 + v1351) + 8) = 1;
                                uint64_t v13 = v1498;
                                v1357[2] = v1358;
                              }
                              void *v1355 = v1357;
                              uint64_t v19 = v1554;
                              unint64_t v18 = v1354;
                              v1351 += 80;
                              continue;
                            }
                            LODWORD(v20) = sub_1B0D212AC(v1352 + v1351 - 72, 1);
                          }
                          else
                          {
                            LODWORD(v20) = 0;
                          }
                          uint64_t v19 = v1554;
                          v1351 += 80;
                          if (v20)
                          {
                            uint64_t v11 = v1540;
                            goto LABEL_2742;
                          }
                        }
                      }
                      uint64_t v988 = (uint64_t *)(v659 + 16);
                    }
                    else
                    {
                      v1344 = v1494;
                    }
                    *uint64_t v988 = 0;
                    if (v1344)
                    {
                      if (*v1344 >= 1)
                      {
                        uint64_t v1454 = 0;
                        uint64_t v1455 = 0;
                        do
                        {
                          sub_1B0D16DCC(*((void *)v1344 + 3) + v1454);
                          v1344 = v1494;
                          ++v1455;
                          v1454 += 80;
                        }
                        while (v1455 < *v1494);
                      }
                      v1456 = (void (**)(int *))&off_1EB21C9E8;
                      if (dword_1EB21C9C0)
                      {
                        if ((void)xmmword_1EB2201B0) {
                          xmmword_1EB21CA40(xmmword_1EB2201B0);
                        }
                        qword_1EB220108 -= (int)off_1EB21C9F8(v1494);
                        --qword_1EB220150;
                        off_1EB21C9E8(v1494);
                        v1494 = (int *)xmmword_1EB2201B0;
                        if (!(void)xmmword_1EB2201B0)
                        {
                          LODWORD(v20) = 7;
                          uint64_t v11 = v1540;
                          uint64_t v13 = v1498;
                          goto LABEL_2742;
                        }
                        v1456 = (void (**)(int *))&xmmword_1EB21CA50;
                        uint64_t v11 = v1540;
                        uint64_t v13 = v1498;
                      }
                      (*v1456)(v1494);
                    }
LABEL_2733:
                    LODWORD(v20) = 7;
                    goto LABEL_2742;
                  }
                  v1110 = v1494;
                  *((void *)v1494 + 1) = v1479;
                  uint64_t v1111 = *v1494;
                  if ((int)v1111 < 1) {
                    goto LABEL_2275;
                  }
                  uint64_t v1112 = 0;
                  uint64_t v1113 = 80 * v1111;
                  uint64_t v78 = v1481;
                  uint64_t v19 = v1554;
                  do
                  {
                    uint64_t v1115 = *((void *)v1110 + 3) + v1112;
                    uint64_t v1116 = *(void *)(v1115 + 72);
                    if (v1116)
                    {
                      if (*(_DWORD *)(v1116 + 32))
                      {
                        unsigned int v1117 = *(void **)v1116;
                        **(void **)uint64_t v1116 = 0;
                        uint64_t v1118 = (void *)sub_1B0C7FC94(24);
                        if (!v1118)
                        {
                          LODWORD(v20) = 7;
                          LOWORD(v16) = v1569;
                          uint64_t v11 = v1540;
                          uint64_t v78 = v1481;
                          uint64_t v1292 = v1486;
                          goto LABEL_2276;
                        }
                        unsigned int v1119 = v1118;
                        if (((int)v1118 / 17))
                        {
                          *uint64_t v1118 = sub_1B0D22230;
                          v1118[1] = v1115;
                        }
                        else
                        {
                          *uint64_t v1118 = 0;
                          int v1120 = sub_1B0D212AC(v1115, 1);
                          *(_DWORD *)(**(void **)(v1115 + 72) + 8) = 1;
                          uint64_t v13 = v1498;
                          v1119[2] = v1120;
                        }
                        *unsigned int v1117 = v1119;
                        uint64_t v11 = v1540;
                        uint64_t v78 = v1481;
                      }
                      else
                      {
                        int v1114 = sub_1B0D212AC(v1115, 0);
                        if (v1114)
                        {
                          LODWORD(v20) = v1114;
                          LOWORD(v16) = v1569;
                          uint64_t v1292 = v1486;
                          goto LABEL_2276;
                        }
                      }
                    }
                    v1112 += 80;
                    v1110 = v1494;
                  }
                  while (v1113 != v1112);
                  uint64_t v1283 = *v1494;
                  LOWORD(v16) = v1569;
                  if ((int)v1283 < 2)
                  {
LABEL_2275:
                    uint64_t v1292 = v1486;
                    LODWORD(v20) = *(unsigned __int8 *)(*(void *)(v1486 + 120) + 31);
                    uint64_t v78 = v1481;
                    uint64_t v19 = v1554;
LABEL_2276:
                    int v144 = 0;
                    *(void *)(v1292 + 24) = v1494;
                    goto LABEL_2419;
                  }
                  unsigned int v1284 = 2 * v1283 - 2;
                  while (2)
                  {
                    int v1287 = *v1110 / 2;
                    if (v1283 <= v1287)
                    {
                      uint64_t v1289 = *((void *)v1110 + 2);
                      unsigned int v1288 = *(_DWORD *)(v1289 + 4 * v1284);
                      unsigned int v1285 = *(_DWORD *)(v1289 + 4 * (v1284 + 1));
                      v1110 = v1494;
                    }
                    else
                    {
                      unsigned int v1288 = v1284 - 2 * v1287;
                      unsigned int v1285 = v1288 + 1;
                    }
                    uint64_t v1290 = *((void *)v1110 + 3);
                    if (*(void *)(v1290 + 80 * (int)v1288 + 24))
                    {
                      if (*(void *)(v1290 + 80 * (int)v1285 + 24))
                      {
                        v1286 = v1494;
                        uint64_t v1291 = *((void *)v1494 + 1);
                        LODWORD(__buf[0]) = 0;
                        if ((*(int (**)(void))(v1291 + 64))() < 1) {
                          unsigned int v1285 = v1288;
                        }
LABEL_2266:
                        *(_DWORD *)(*((void *)v1286 + 2) + 4 * --v1283) = v1285;
                        v1284 -= 2;
                        LOWORD(v16) = v1569;
                        v1110 = v1286;
                        if ((unint64_t)(v1283 + 1) <= 2) {
                          goto LABEL_2275;
                        }
                        continue;
                      }
                      unsigned int v1285 = v1288;
                    }
                    break;
                  }
                  v1286 = v1494;
                  goto LABEL_2266;
                }
                uint64_t v936 = v659 + 104 * v934;
                uint64_t v939 = *(int *)(v936 + 152);
                uint64_t v938 = (int *)(v936 + 152);
                uint64_t v937 = v939;
                if (v939) {
                  break;
                }
                ++v934;
              }
              *(void *)&long long v1574 = 0;
              __se = (char *)(v938 - 14);
              if ((int)v937 < 17)
              {
                uint64_t v1573 = 0;
                LODWORD(v20) = sub_1B0D21590((uint64_t)(v938 - 14), v937, &v1573, (int **)&v1574);
                uint64_t v946 = (int *)v1574;
                if (v20) {
                  goto LABEL_1454;
                }
LABEL_1544:
                if (v1494)
                {
                  LODWORD(v20) = sub_1B0D21144((uint64_t)__se, v946, (uint64_t *)(*((void *)v1494 + 3) + 80 * v934 + 72));
                }
                else
                {
                  LODWORD(v20) = 0;
                  v1494 = v946;
                }
LABEL_1550:
                unint64_t v18 = v1512;
                goto LABEL_1551;
              }
              v1489 = v938;
              unint64_t v1482 = v934;
              unint64_t v940 = v18;
              int v941 = 0;
              int v942 = -1;
              uint64_t v943 = 16;
              do
              {
                int v944 = v941;
                v943 *= 16;
                ++v942;
                ++v941;
              }
              while (v943 < v937);
              uint64_t v1573 = 0;
              uint64_t v945 = (uint64_t)__se;
              if (off_1EB21CB60 && off_1EB21CB60(100))
              {
                LODWORD(v20) = 7;
                uint64_t v11 = v1540;
                unint64_t v18 = v940;
LABEL_1542:
                uint64_t v659 = v1486;
                unint64_t v934 = v1482;
                goto LABEL_1551;
              }
              uint64_t v952 = (int *)sub_1B0C7FC94(1376);
              if (!v952)
              {
                LODWORD(v20) = 7;
                uint64_t v11 = v1540;
                unint64_t v18 = v1512;
                goto LABEL_1542;
              }
              uint64_t v946 = v952;
              bzero(v952, 0x560uLL);
              *uint64_t v946 = 16;
              *((void *)v946 + 1) = 0;
              *((void *)v946 + 2) = v946 + 328;
              *((void *)v946 + 3) = v946 + 8;
              *(void *)&long long v1574 = v946;
              int v953 = *v1489;
              if (*v1489 < 1)
              {
                uint64_t v11 = v1540;
                uint64_t v659 = v1486;
                unint64_t v934 = v1482;
                goto LABEL_1544;
              }
              int v954 = 0;
              int v955 = 0;
              while (1)
              {
                v1572 = 0;
                int v956 = v953 - v955;
                if (v956 >= 16) {
                  int v957 = 16;
                }
                else {
                  int v957 = v956;
                }
                int v958 = sub_1B0D21590(v945, v957, &v1573, &v1572);
                if (v958)
                {
                  LODWORD(v20) = v958;
                  uint64_t v11 = v1540;
                  goto LABEL_1549;
                }
                int v1502 = v955;
                uint64_t v959 = v16;
                *(void *)&__buf[0] = 0;
                int v960 = sub_1B0D21144(v945, v1572, (uint64_t *)__buf);
                LODWORD(v20) = v960;
                if (!v942)
                {
                  uint64_t v964 = v946;
                  if (v960) {
                    goto LABEL_1491;
                  }
LABEL_1488:
                  int v1565 = 0;
                  *(void *)(*((void *)v964 + 3) + 80 * (v954 & 0xF) + 72) = *(void *)&__buf[0];
                  uint64_t v16 = v959;
                  goto LABEL_1538;
                }
                int v961 = 1;
                int v962 = v944;
                do
                {
                  v961 *= 16;
                  --v962;
                }
                while (v962);
                int v963 = v944;
                uint64_t v964 = v946;
                if (!v960)
                {
                  while (1)
                  {
                    if (v954 / v961 <= 0) {
                      int v965 = -(-(v954 / v961) & 0xF);
                    }
                    else {
                      int v965 = (v954 / v961) & 0xF;
                    }
                    uint64_t v966 = *((void *)v964 + 3) + 80 * v965;
                    uint64_t v969 = *(void *)(v966 + 72);
                    uint64_t v968 = (uint64_t *)(v966 + 72);
                    uint64_t v967 = v969;
                    if (!v969)
                    {
                      if (off_1EB21CB60 && off_1EB21CB60(100)
                        || (uint64_t v970 = (int *)sub_1B0C7FC94(1376)) == 0)
                      {
                        LODWORD(v20) = 7;
                        break;
                      }
                      uint64_t v971 = v970;
                      bzero(v970, 0x560uLL);
                      *uint64_t v971 = 16;
                      *((void *)v971 + 1) = 0;
                      *((void *)v971 + 2) = v971 + 328;
                      *((void *)v971 + 3) = v971 + 8;
                      int v972 = sub_1B0D21144((uint64_t)__se, v971, v968);
                      if (v972)
                      {
                        LODWORD(v20) = v972;
                        break;
                      }
                      uint64_t v967 = *v968;
                      uint64_t v959 = v1569;
                    }
                    uint64_t v964 = *(int **)(v967 + 8);
                    v961 /= 16;
                    if (!--v963) {
                      goto LABEL_1488;
                    }
                  }
                }
LABEL_1491:
                uint64_t v973 = *(void **)&__buf[0];
                if (!*(void *)&__buf[0]) {
                  break;
                }
                int v1565 = v20;
                if (!*(_DWORD *)(*(void *)&__buf[0] + 32)) {
                  goto LABEL_1521;
                }
                uint64_t v974 = **(void **)&__buf[0];
                uint64_t v975 = ***(void ***)&__buf[0];
                if (v975)
                {
                  if (*(void *)v975) {
                    (*(void (**)(void))v975)(*(void *)(v975 + 8));
                  }
                  uint64_t v976 = &off_1EB21C9E8;
                  if (dword_1EB21C9C0)
                  {
                    if ((void)xmmword_1EB2201B0) {
                      xmmword_1EB21CA40(xmmword_1EB2201B0);
                    }
                    qword_1EB220108 -= (int)off_1EB21C9F8(v975);
                    --qword_1EB220150;
                    off_1EB21C9E8(v975);
                    uint64_t v975 = xmmword_1EB2201B0;
                    if ((void)xmmword_1EB2201B0)
                    {
                      uint64_t v976 = &xmmword_1EB21CA50;
                      goto LABEL_1501;
                    }
                  }
                  else
                  {
LABEL_1501:
                    (*v976)(v975);
                  }
                  *(_DWORD *)(v974 + 8) = 0;
                  *(void *)uint64_t v974 = 0;
                }
                uint64_t v977 = v973[5];
                if (!v977) {
                  goto LABEL_1512;
                }
                if (*(void *)v977)
                {
                  (*(void (**)(void))(*(void *)v977 + 8))(v973[5]);
                  *(void *)uint64_t v977 = 0;
                }
                uint64_t v978 = &off_1EB21C9E8;
                if (!dword_1EB21C9C0) {
                  goto LABEL_1511;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v977);
                --qword_1EB220150;
                off_1EB21C9E8(v977);
                uint64_t v977 = xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v978 = &xmmword_1EB21CA50;
LABEL_1511:
                  (*v978)(v977);
                }
LABEL_1512:
                uint64_t v979 = v973[7];
                if (!v979) {
                  goto LABEL_1521;
                }
                if (*(void *)v979)
                {
                  (*(void (**)(void))(*(void *)v979 + 8))(v973[7]);
                  *(void *)uint64_t v979 = 0;
                }
                uint64_t v980 = &off_1EB21C9E8;
                if (!dword_1EB21C9C0) {
                  goto LABEL_1520;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v979);
                --qword_1EB220150;
                off_1EB21C9E8(v979);
                uint64_t v979 = xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v980 = &xmmword_1EB21CA50;
LABEL_1520:
                  (*v980)(v979);
                }
LABEL_1521:
                uint64_t v981 = (int *)v973[1];
                if (!v981) {
                  goto LABEL_1531;
                }
                if (*v981 >= 1)
                {
                  uint64_t v982 = 0;
                  uint64_t v983 = 0;
                  do
                  {
                    sub_1B0D16DCC(*((void *)v981 + 3) + v982);
                    ++v983;
                    v982 += 80;
                  }
                  while (v983 < *v981);
                }
                int v984 = (void (**)(int *))&off_1EB21C9E8;
                if (!dword_1EB21C9C0) {
                  goto LABEL_1530;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v981);
                --qword_1EB220150;
                off_1EB21C9E8(v981);
                uint64_t v981 = (int *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  int v984 = (void (**)(int *))&xmmword_1EB21CA50;
LABEL_1530:
                  (*v984)(v981);
                }
LABEL_1531:
                uint64_t v985 = &off_1EB21C9E8;
                if (dword_1EB21C9C0)
                {
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108 -= (int)off_1EB21C9F8(v973);
                  --qword_1EB220150;
                  off_1EB21C9E8(v973);
                  uint64_t v973 = (void *)xmmword_1EB2201B0;
                  if (!(void)xmmword_1EB2201B0) {
                    goto LABEL_1537;
                  }
                  uint64_t v985 = &xmmword_1EB21CA50;
                }
                (*v985)(v973);
LABEL_1537:
                uint64_t v16 = v1569;
LABEL_1538:
                uint64_t v945 = (uint64_t)__se;
                int v955 = v1502 + 16;
                int v953 = *v1489;
                if (v1502 + 16 >= *v1489)
                {
                  uint64_t v11 = v1540;
                  uint64_t v19 = v1554;
                  LODWORD(v20) = v1565;
                  goto LABEL_1554;
                }
                ++v954;
                LODWORD(v20) = v1565;
                if (v1565)
                {
                  uint64_t v11 = v1540;
                  uint64_t v19 = v1554;
LABEL_1554:
                  uint64_t v659 = v1486;
                  unint64_t v934 = v1482;
                  if (!v20) {
                    goto LABEL_1544;
                  }
LABEL_1454:
                  if (v946) {
                    goto LABEL_1455;
                  }
                  goto LABEL_1550;
                }
              }
              uint64_t v11 = v1540;
              uint64_t v16 = v1569;
LABEL_1549:
              unint64_t v934 = v1482;
LABEL_1455:
              unint64_t v947 = v934;
              int v948 = v20;
              if (*v946 >= 1)
              {
                uint64_t v949 = 0;
                uint64_t v950 = 0;
                do
                {
                  sub_1B0D16DCC(*((void *)v946 + 3) + v949);
                  ++v950;
                  v949 += 80;
                }
                while (v950 < *v946);
              }
              uint64_t v951 = (void (**)(int *))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108 -= (int)off_1EB21C9F8(v946);
                --qword_1EB220150;
                off_1EB21C9E8(v946);
                uint64_t v946 = (int *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v951 = (void (**)(int *))&xmmword_1EB21CA50;
                  goto LABEL_1463;
                }
              }
              else
              {
LABEL_1463:
                (*v951)(v946);
              }
              unint64_t v18 = v1512;
              LODWORD(v20) = v948;
              uint64_t v659 = v1486;
              unint64_t v934 = v947;
              uint64_t v19 = v1554;
LABEL_1551:
              uint64_t v12 = v1520;
              ++v934;
              if (v20)
              {
                if (!v1494) {
                  goto LABEL_2742;
                }
                int v997 = v20;
                if (*v1494 >= 1)
                {
                  uint64_t v998 = v1494;
                  uint64_t v999 = 0;
                  uint64_t v1000 = 0;
                  do
                  {
                    sub_1B0D16DCC(*((void *)v998 + 3) + v999);
                    uint64_t v998 = v1494;
                    ++v1000;
                    v999 += 80;
                  }
                  while (v1000 < *v1494);
                }
                uint64_t v1001 = (void (**)(void))&off_1EB21C9E8;
                if (dword_1EB21C9C0)
                {
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108 -= (int)off_1EB21C9F8(v1494);
                  --qword_1EB220150;
                  off_1EB21C9E8(v1494);
                  if ((void)xmmword_1EB2201B0)
                  {
                    uint64_t v1001 = (void (**)(void))&xmmword_1EB21CA50;
                    goto LABEL_1864;
                  }
                }
                else
                {
LABEL_1864:
                  (*v1001)();
                }
                int v144 = 0;
                LODWORD(v20) = v997;
LABEL_2418:
                uint64_t v78 = v1481;
LABEL_2419:
                if (v20) {
                  goto LABEL_2742;
                }
                goto LABEL_2420;
              }
            }
          }
          uint64_t v16 = v1569;
          if (v663 == 1)
          {
            uint64_t v664 = 0;
          }
          else
          {
            uint64_t v664 = v663 & 0xFE;
            uint64_t v924 = (void *)(v1486 + 264);
            uint64_t v925 = v664;
            do
            {
              *(v924 - 13) = v662;
              *uint64_t v924 = v662;
              v924 += 26;
              v925 -= 2;
            }
            while (v925);
            if (v664 == v663)
            {
LABEL_1435:
              if (v663 < 2)
              {
                v1494 = 0;
              }
              else
              {
                int v928 = 2;
                do
                {
                  int v929 = v928;
                  v928 *= 2;
                }
                while (v929 < (int)v663);
                if (off_1EB21CB60 && off_1EB21CB60(100)) {
                  goto LABEL_2733;
                }
                size_t v930 = 84 * v929 + 32;
                uint64_t v931 = (int *)sub_1B0C7FC94(v930);
                if (!v931) {
                  goto LABEL_2733;
                }
                uint64_t v932 = v19;
                uint64_t v933 = v931;
                bzero(v931, v930);
                int *v933 = v929;
                *((void *)v933 + 3) = v933 + 8;
                uint64_t v659 = v1486;
                *((void *)v933 + 1) = 0;
                *((void *)v933 + 2) = &v933[20 * v929 + 8];
                v1494 = v933;
                uint64_t v19 = v932;
              }
              goto LABEL_1443;
            }
          }
          uint64_t v926 = v663 - v664;
          uint64_t v927 = (void *)(v1486 + 104 * v664 + 160);
          do
          {
            *uint64_t v927 = v662;
            v927 += 13;
            --v926;
          }
          while (v926);
          goto LABEL_1435;
        }
        LOWORD(v16) = v1569;
        if (*(void *)(v79 + 56))
        {
          LODWORD(v20) = sub_1B0D200AC((void *)(v79 + 96), (unsigned int **)(v79 + 56));
          int v144 = 0;
          goto LABEL_2419;
        }
        int v144 = 1;
LABEL_2420:
        int v1558 = 0;
        *(unsigned char *)(v78 + 2) = v144;
        if (v144 && *((int *)v12 + 2) > 0) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x25u:
        uint64_t v255 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v256 = *(void *)(v255 + 40);
        if (*(unsigned char *)(v256 + 88))
        {
          if (*(unsigned char *)(v256 + 89))
          {
            int v257 = sub_1B0D21A4C(*(void *)(v256 + 16));
            if (v257) {
              goto LABEL_288;
            }
            if (!*(void *)(*(void *)(v256 + 16) + 24)) {
              goto LABEL_1683;
            }
            goto LABEL_1119;
          }
          LODWORD(__buf[0]) = 0;
          int v257 = sub_1B0D220A4(*(void *)(v256 + 24), __buf);
          if (v257) {
            BOOL v1045 = 1;
          }
          else {
            BOOL v1045 = LODWORD(__buf[0]) == 0;
          }
          if (v1045)
          {
LABEL_288:
            LODWORD(v20) = v257;
            *(_DWORD *)(v255 + 24) = 0;
            if (v257 == 101)
            {
              uint64_t v259 = v19;
LABEL_1684:
              LODWORD(v19) = 0;
              *(unsigned char *)(v255 + 2) = 1;
LABEL_1756:
              LOWORD(v16) = v1569;
LABEL_1757:
              if (*(_DWORD *)(v13 + 424))
              {
                LODWORD(v20) = 9;
                LOBYTE(v19) = v259;
                goto LABEL_2742;
              }
              int v1558 = v19;
              uint64_t v19 = v259;
              while (v18 >= v17)
              {
                int v1073 = *(unsigned int (**)(void))(v13 + 544);
                if (!v1073) {
                  break;
                }
                v17 += *(unsigned int *)(v13 + 560);
                if (v1073(*(void *)(v13 + 552)))
                {
LABEL_2741:
                  LODWORD(v20) = 9;
                  unint64_t v17 = -1;
                  goto LABEL_2742;
                }
              }
              goto LABEL_21;
            }
            if (v257) {
              goto LABEL_2742;
            }
LABEL_1120:
            int v1558 = 0;
            *(unsigned char *)(v255 + 2) = 0;
            uint64_t v799 = v11 + 4 * *((unsigned __int16 *)v12 + 1);
            ++*(_DWORD *)(v799 + 280);
            ++*(_DWORD *)(v799 + 200);
LABEL_1754:
            uint64_t v259 = v19;
            uint64_t v12 = &v1568[40 * *((int *)v12 + 2) - 40];
LABEL_1755:
            LODWORD(v19) = v1558;
            goto LABEL_1756;
          }
        }
        else
        {
          uint64_t v797 = *(void **)(v256 + 56);
          *(void *)(v256 + 56) = v797[1];
          v797[1] = 0;
          if (!*(void *)(v256 + 64))
          {
            do
            {
              uint64_t v798 = (void *)v797[1];
              sub_1B0D05C10((void *)v13, v797);
              uint64_t v797 = v798;
            }
            while (v798);
          }
          if (*(void *)(v256 + 56))
          {
LABEL_1119:
            *(_DWORD *)(v255 + 24) = 0;
            goto LABEL_1120;
          }
        }
LABEL_1683:
        uint64_t v259 = v19;
        *(_DWORD *)(v255 + 24) = 0;
        goto LABEL_1684;
      case 0x26u:
        uint64_t v255 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v258 = *(void *)(v255 + 40);
        *(unsigned char *)(v258 + 1) &= 0xF1u;
        *(_WORD *)(v258 + 70) = 0;
        if (*(unsigned char *)v258 || !*(_WORD *)(v258 + 86) || !*(unsigned char *)(*(void *)(v258 + 136) + 8))
        {
          int v257 = sub_1B0D1EF8C((unsigned __int8 *)v258);
          goto LABEL_288;
        }
        --*(_WORD *)(v258 + 86);
        goto LABEL_1119;
      case 0x27u:
        uint64_t v255 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        int v257 = sub_1B0CAE698(*(void *)(v255 + 40));
        goto LABEL_288;
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Du:
        uint64_t v1576 = 0;
        long long v1574 = 0u;
        long long v1575 = 0u;
        uint64_t v53 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        WORD6(v1575) = *((_DWORD *)v12 + 4);
        uint64_t v54 = *(void *)(v53 + 48);
        if (v23 >= 0x2A) {
          char v55 = 0;
        }
        else {
          char v55 = -1;
        }
        BYTE14(v1575) = v55;
        unint64_t v56 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        *(void *)&long long v1574 = v54;
        *((void *)&v1574 + 1) = v56;
        memset(__buf, 0, sizeof(__buf));
        uint64_t v57 = *(void *)(v53 + 40);
        sub_1B0D146DC(v57);
        signed int v58 = *(_DWORD *)(v57 + 64);
        if (v58 <= 0)
        {
          int v1429 = 106708;
          goto LABEL_2631;
        }
        WORD2(__buf[1]) = 0;
        *((void *)&__buf[1] + 1) = v13;
        LODWORD(__buf[2]) = 0;
        int v59 = *(unsigned __int16 *)(v57 + 68);
        uint64_t v60 = *(char **)(v57 + 56);
        int v61 = *(_DWORD *)(*(void *)(v57 + 136) + 88) - v60;
        if (v59 > v61) {
          int v59 = v61 & ~(v61 >> 31);
        }
        *((void *)&__buf[0] + 1) = *(void *)(v57 + 56);
        if (v59 >= v58)
        {
          WORD2(__buf[1]) = 16400;
          LODWORD(__buf[1]) = v58;
        }
        else
        {
          int v62 = sub_1B0CB63E0(v57, 0, v58, (uint64_t)__buf);
          if (v62) {
            goto LABEL_2597;
          }
          signed int v58 = __buf[1];
          uint64_t v60 = (char *)*((void *)&__buf[0] + 1);
        }
        int v126 = sub_1B0D1B630(v58, v60, (uint64_t *)&v1574, 0);
        LOWORD(v16) = v1569;
        if (LODWORD(__buf[2])) {
          sub_1B0D180E4((uint64_t)__buf);
        }
        int v1558 = 0;
        if (*v12) {
          int v127 = v126 + 1;
        }
        else {
          int v127 = -v126;
        }
        if (v127 <= 0) {
          goto LABEL_21;
        }
LABEL_2422:
        int v208 = *((_DWORD *)v12 + 2);
LABEL_2423:
        uint64_t v12 = &v1568[40 * v208];
        continue;
      case 0x2Bu:
      case 0x2Cu:
        uint64_t v88 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v89 = *(_WORD *)(v88 + 20);
        if ((v89 & 0x24) != 0)
        {
          uint64_t v90 = *(void *)v88 != 0;
          LOWORD(v16) = v1569;
        }
        else if (v89)
        {
          uint64_t v90 = 2;
          LOWORD(v16) = v1569;
        }
        else
        {
          LOWORD(v16) = v1569;
          if ((v89 & 8) != 0)
          {
            a2.i64[0] = *(void *)v88;
          }
          else if ((v89 & 0x12) != 0)
          {
            *(double *)a2.i64 = sub_1B0D18684(v88);
          }
          else
          {
            a2.i64[0] = 0;
          }
          uint64_t v90 = *(double *)a2.i64 != 0.0;
        }
        uint64_t v1260 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
        __int16 v1261 = *(_WORD *)(v1260 + 20);
        if ((v1261 & 0x24) != 0)
        {
          BOOL v1262 = *(void *)v1260 == 0;
        }
        else
        {
          if (v1261)
          {
            uint64_t v1263 = 2;
            goto LABEL_2238;
          }
          if ((v1261 & 8) != 0)
          {
            a2.i64[0] = *(void *)v1260;
          }
          else if ((v1261 & 0x12) != 0)
          {
            *(double *)a2.i64 = sub_1B0D18684(v1260);
          }
          else
          {
            a2.i64[0] = 0;
          }
          BOOL v1262 = *(double *)a2.i64 == 0.0;
        }
        uint64_t v1263 = !v1262;
LABEL_2238:
        uint64_t v1272 = v1263 + 3 * v90;
        if (*v12 == 44) {
          v1273 = (unsigned __int8 *)&unk_1B0DE2161;
        }
        else {
          v1273 = (unsigned __int8 *)&unk_1B0DE216A;
        }
        uint64_t v1274 = v1273[v1272];
        uint64_t v1275 = *((int *)v12 + 3);
        if (v1274 == 2)
        {
          *(_WORD *)(v1570 + (v1275 << 6) + 20) = *(_WORD *)(v1570 + (v1275 << 6) + 20) & 0xF240 | 1;
        }
        else
        {
          unint64_t v1276 = v1570 + (v1275 << 6);
          *(void *)unint64_t v1276 = v1274;
          *(_WORD *)(v1276 + 20) = *(_WORD *)(v1276 + 20) & 0xF240 | 4;
        }
        v12 += 40;
        continue;
      case 0x2Eu:
        *(void *)&__buf[0] = 0;
        unint64_t v260 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        uint64_t v262 = (__int16 *)(v260 + 20);
        __int16 v261 = *(_WORD *)(v260 + 20);
        if ((v261 & 0x10) == 0) {
          goto LABEL_1751;
        }
        if (sub_1B0D1C1AC(*(void *)(v260 + 8), __buf))
        {
          uint64_t v259 = v19;
          LOWORD(v16) = v1569;
          uint64_t v263 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
          if ((*(_WORD *)(v263 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v263, *(uint64_t *)&__buf[0]);
          }
          else
          {
            *(void *)uint64_t v263 = *(void *)&__buf[0];
            *(_WORD *)(v263 + 20) = 4;
          }
          LODWORD(v19) = v1558;
          goto LABEL_1757;
        }
        __int16 v261 = *v262;
LABEL_1751:
        if ((v261 & 0x9000) != 0) {
          sub_1B0D18138((int *)v260);
        }
        else {
          *uint64_t v262 = 1;
        }
        goto LABEL_1754;
      case 0x2Fu:
        uint64_t v264 = *((int *)v12 + 1);
        int v265 = *((_DWORD *)v12 + 4);
        uint64_t v266 = *((int *)v12 + 3);
        uint64_t v267 = v1570 + (v264 << 6);
        if ((*(_WORD *)(v267 + 20) & 0x10) == 0 && sub_1B0D1BF78(v267)) {
          goto LABEL_8;
        }
        LOWORD(v16) = v1569;
        unint64_t v268 = v1570;
        char v269 = (uint64_t *)(v1570 + (v266 << 6));
        if (!v265) {
          goto LABEL_302;
        }
        if (sub_1B0D1C25C(*(void *)(v1570 + (v264 << 6) + 8), v265, *v269)) {
          goto LABEL_2422;
        }
        unint64_t v268 = v1570;
        if (v265 < 0) {
          goto LABEL_21;
        }
LABEL_302:
        sub_1B0D1C088(*(void *)(v268 + (v264 << 6) + 8), *v269);
        v12 += 40;
        continue;
      case 0x30u:
        int v270 = (unsigned __int8 **)*((void *)v12 + 2);
        uint64_t v16 = *((int *)v12 + 3);
        if (!*((_WORD *)v12 + 1)) {
          goto LABEL_307;
        }
        uint64_t v271 = *(void *)(v11 + 352);
        if (!v271) {
          goto LABEL_307;
        }
        do
        {
          if (*(unsigned __int8 **)(v271 + 48) == v270[4])
          {
            LOWORD(v16) = v1569;
            v12 += 40;
            goto LABEL_22;
          }
          uint64_t v271 = *(void *)(v271 + 8);
        }
        while (v271);
LABEL_307:
        if (*(_DWORD *)(v11 + 368) >= *(_DWORD *)(v13 + 176))
        {
          sub_1B0D17334((uint64_t *)v11, "too many levels of trigger recursion", a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
LABEL_2670:
          LODWORD(v20) = 1;
          goto LABEL_2742;
        }
        unint64_t v272 = v1570 + (v16 << 6);
        __int16 v274 = *(_WORD *)(v272 + 20);
        uint64_t v273 = (_WORD *)(v272 + 20);
        if ((v274 & 0x10) != 0)
        {
          uint64_t v259 = v19;
          uint64_t v284 = *(char **)(v1570 + (v16 << 6) + 8);
          int v278 = *((_DWORD *)v284 + 22);
          unsigned __int16 v783 = *((_WORD *)v284 + 46);
          int v286 = *((_DWORD *)v270 + 4);
          LOWORD(v16) = v1569;
          uint64_t v11 = v1540;
        }
        else
        {
          unsigned int v1545 = v19;
          int v275 = *((_DWORD *)v270 + 4);
          int v276 = (unsigned __int8 **)*((void *)v12 + 2);
          int v277 = *((_DWORD *)v270 + 2);
          if (v275) {
            int v278 = v275 + *((_DWORD *)v270 + 3);
          }
          else {
            int v278 = *((_DWORD *)v270 + 3) + 1;
          }
          int v279 = 8 * v275;
          int v280 = v277 + 7;
          BOOL v1303 = v277 < -7;
          int v281 = v277 + 14;
          if (v1303) {
            int v280 = v281;
          }
          int v282 = v279 + (v280 >> 3) + (v278 << 6) + 112;
          unsigned int v283 = (char *)sub_1B0C79680(v13, v282);
          if (!v283) {
            goto LABEL_2696;
          }
          uint64_t v284 = v283;
          if ((*v273 & 0x9000) != 0 || *(_DWORD *)(v1570 + (v16 << 6) + 32)) {
            sub_1B0D180E4(v1570 + (v16 << 6));
          }
          *uint64_t v273 = 4112;
          unint64_t v285 = v1570 + (v16 << 6);
          *(void *)(v285 + 8) = v284;
          *(_DWORD *)(v285 + 16) = v282;
          *(unsigned char *)(v285 + 56) = 0;
          *(void *)(v285 + 48) = sub_1B0D1C54C;
          uint64_t v11 = v1540;
          *(void *)uint64_t v284 = v1540;
          *((_DWORD *)v284 + 22) = v278;
          int v270 = v276;
          int v286 = *((_DWORD *)v276 + 4);
          *((_DWORD *)v284 + 23) = v286;
          *((_DWORD *)v284 + 19) = -858993459 * ((unint64_t)(v12 - v1568) >> 3);
          *((void *)v284 + 3) = *(void *)(v1540 + 104);
          *((_DWORD *)v284 + 21) = *(_DWORD *)(v1540 + 36);
          *((void *)v284 + 4) = *(void *)(v1540 + 120);
          *((_DWORD *)v284 + 18) = *(_DWORD *)(v1540 + 40);
          *((void *)v284 + 2) = *(void *)(v1540 + 136);
          *((_DWORD *)v284 + 20) = *(_DWORD *)(v1540 + 144);
          *((void *)v284 + 6) = v276[4];
          if (v278)
          {
            char v287 = v284 + 112;
            uint64_t v288 = (v278 - 1) & 0x3FFFFFFFFFFFFFFLL;
            if (v288)
            {
              uint64_t v289 = v288 + 1;
              uint64_t v290 = (v288 + 1) & 0x7FFFFFFFFFFFFFELL;
              long long v291 = &v287[64 * v290];
              long long v292 = (uint64_t *)(v284 + 200);
              uint64_t v293 = v290;
              do
              {
                *((_WORD *)v292 - 34) = 0;
                *((_WORD *)v292 - 2) = 0;
                *(v292 - 8) = v13;
                *long long v292 = v13;
                v292 += 16;
                v293 -= 2;
              }
              while (v293);
              uint64_t v259 = v1545;
              LOWORD(v16) = v1569;
              if (v289 == v290) {
                goto LABEL_2181;
              }
            }
            else
            {
              long long v291 = v284 + 112;
              uint64_t v259 = v1545;
              LOWORD(v16) = v1569;
            }
            v1245 = &v287[64 * (uint64_t)v278];
            do
            {
              *((_WORD *)v291 + 10) = 0;
              *((void *)v291 + 3) = v13;
              v291 += 64;
            }
            while (v291 != v1245);
LABEL_2181:
            unsigned __int16 v783 = v286;
            goto LABEL_2182;
          }
          unsigned __int16 v783 = v286;
          uint64_t v259 = v1545;
          LOWORD(v16) = v1569;
        }
LABEL_2182:
        ++*(_DWORD *)(v11 + 368);
        *((void *)v284 + 1) = *(void *)(v11 + 352);
        *((void *)v284 + 7) = *(void *)(v13 + 56);
        *((void *)v284 + 12) = *(void *)(v11 + 56);
        *((void *)v284 + 13) = *(void *)(*(void *)v11 + 120);
        *((void *)v284 + 8) = *(void *)(v11 + 384);
        *(void *)(v11 + 384) = 0;
        *(void *)(v11 + 56) = 0;
        *(void *)(v11 + 352) = v284;
        *(void *)(v11 + 104) = v284 + 112;
        *(_DWORD *)(v11 + 36) = v278;
        *(_DWORD *)(v11 + 40) = v783;
        unint64_t v1570 = (unint64_t)(v284 + 112);
        uint64_t v1246 = (uint64_t)&v284[64 * (uint64_t)v278 + 112];
        *(void *)(v11 + 120) = v1246;
        v1247 = (void *)(v1246 + 8 * v286);
        *((void *)v284 + 5) = v1247;
        int v1248 = *((_DWORD *)v270 + 2);
        int v1249 = v1248 + 7;
        BOOL v1303 = v1248 < -7;
        int v1250 = v1248 + 14;
        if (!v1303) {
          int v1250 = v1249;
        }
        v1251 = v270;
        bzero(v1247, (uint64_t)v1250 >> 3);
        v1252 = *v1251;
        *(void *)(v11 + 136) = *v1251;
        *(_DWORD *)(v11 + 144) = *((_DWORD *)v1251 + 2);
        v1568 = v1252;
        uint64_t v12 = v1252 - 40;
        LODWORD(v19) = v1558;
        goto LABEL_1757;
      case 0x31u:
        if (*((_DWORD *)v12 + 1)) {
          uint64_t v294 = *(void *)(v13 + 800);
        }
        else {
          uint64_t v294 = *(void *)(v11 + 80);
        }
        LOWORD(v16) = v1569;
        if (!v294 && !*(void *)(v13 + 808)) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x32u:
        LOWORD(v16) = v1569;
        if (*(_WORD *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6) + 20)) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x33u:
        LOWORD(v16) = v1569;
        if ((*(_WORD *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6) + 20) & 1) == 0) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x34u:
      case 0x35u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
        unsigned int v1541 = v19;
        uint64_t v16 = v18;
        int v24 = v12;
        uint64_t v25 = *((int *)v12 + 1);
        uint64_t v26 = v1570 + (v25 << 6);
        uint64_t v27 = *((int *)v24 + 3);
        uint64_t v28 = v1570 + (v27 << 6);
        uint64_t v29 = (_WORD *)(v26 + 20);
        __int16 v30 = *(_WORD *)(v26 + 20);
        uint64_t v31 = (__int16 *)(v28 + 20);
        __int16 v32 = *(_WORD *)(v28 + 20);
        if ((v32 & v30 & 4) != 0)
        {
          if (*(void *)v28 <= *(void *)v26)
          {
            uint64_t v11 = v1540;
            unint64_t v18 = v16;
            uint64_t v19 = v1541;
            uint64_t v12 = v24;
            LOWORD(v16) = v1569;
            unsigned int v140 = &byte_1B0DE1758[v23];
            if (*(void *)v28 >= *(void *)v26)
            {
              if (v140[210]) {
                goto LABEL_2422;
              }
              int v1488 = 0;
              uint64_t v12 = v24 + 40;
            }
            else
            {
              if (v140[204]) {
                goto LABEL_2422;
              }
              int v1488 = -1;
              uint64_t v12 = v24 + 40;
            }
          }
          else
          {
            uint64_t v11 = v1540;
            unint64_t v18 = v16;
            uint64_t v19 = v1541;
            uint64_t v12 = v24;
            LOWORD(v16) = v1569;
            if (byte_1B0DE1758[v23 + 216]) {
              goto LABEL_2422;
            }
            int v1488 = 1;
            uint64_t v12 = v24 + 40;
          }
          continue;
        }
        v1515 = v24;
        __int16 v33 = *((_WORD *)v24 + 1);
        if ((v32 | v30))
        {
          if ((v33 & 0x80) == 0)
          {
            unint64_t v18 = v16;
            uint64_t v12 = v1515;
            LOWORD(v16) = v1569;
            if ((v33 & 0x10) == 0)
            {
              int v1488 = 1;
              goto LABEL_1780;
            }
            uint64_t v11 = v1540;
            uint64_t v19 = v1541;
            goto LABEL_2422;
          }
          unint64_t v1507 = v16;
          uint64_t v12 = v1515;
          LOWORD(v16) = v1569;
          if ((*(_WORD *)(v28 + 20) & 0x100) != 0 || (v32 & v30 & 1) == 0)
          {
            if (v32)
            {
              int v1488 = -1;
              uint64_t v1075 = (unsigned __int8 *)&unk_1B0DE1824;
              goto LABEL_2069;
            }
            int v1488 = 1;
            goto LABEL_2066;
          }
          goto LABEL_2067;
        }
        unint64_t v1507 = v16;
        if ((v33 & 0x47u) < 0x43)
        {
          if (((v32 | v30) & 2) != 0 && (v33 & 0x47) == 0x42)
          {
            __int16 v665 = *(_WORD *)(v28 + 20);
            if ((v30 & 2) == 0 && (v30 & 0x2C) != 0)
            {
              __int16 v666 = *(_WORD *)(v26 + 20);
              sub_1B0CAD780(v1570 + (v25 << 6), v1557, 1);
              __int16 v30 = *(_WORD *)(v26 + 20) & 0xF240 | v666 & 0xDBF;
              if (v25 == v27) {
                __int16 v665 = v30 | 2;
              }
              else {
                __int16 v665 = v32;
              }
              LOBYTE(v32) = v665;
            }
            __int16 v34 = v30;
            if ((v32 & 2) == 0)
            {
              uint64_t v12 = v1515;
              LOWORD(v16) = v1569;
              if ((v32 & 0x2C) != 0)
              {
                sub_1B0CAD780(v28, v1557, 1);
                __int16 v32 = *v31 & 0xF240 | v665 & 0xDBF;
              }
              else
              {
                __int16 v32 = v665;
              }
              goto LABEL_2063;
            }
            __int16 v32 = v665;
          }
          else
          {
            __int16 v34 = *(_WORD *)(v26 + 20);
          }
          uint64_t v12 = v1515;
        }
        else
        {
          uint64_t v12 = v1515;
          if (((v32 | v30) & 2) != 0)
          {
            __int16 v34 = *(_WORD *)(v26 + 20);
            LOWORD(v16) = v1569;
            if ((v30 & 0x2E) == 2)
            {
              sub_1B0CEE968(v26, 0);
              __int16 v32 = *v31;
            }
            if ((v32 & 0x2E) == 2) {
              sub_1B0CEE968(v28, 0);
            }
            goto LABEL_2063;
          }
          __int16 v34 = *(_WORD *)(v26 + 20);
        }
        LOWORD(v16) = v1569;
LABEL_2063:
        int v1200 = sub_1B0CB6238(v28, v26, *((void *)v12 + 2));
        unint64_t v23 = *v12;
        if (v1200 < 0)
        {
          int v1488 = v1200;
          uint64_t v1075 = (unsigned __int8 *)&unk_1B0DE1824;
          uint64_t v29 = (_WORD *)(v26 + 20);
          __int16 v30 = v34;
LABEL_2069:
          int v1201 = v1075[v23];
          *uint64_t v31 = v32;
          *uint64_t v29 = v30;
          uint64_t v11 = v1540;
          uint64_t v19 = v1541;
          unint64_t v18 = v1507;
          if (v1201) {
            goto LABEL_2422;
          }
          goto LABEL_21;
        }
        uint64_t v29 = (_WORD *)(v26 + 20);
        __int16 v30 = v34;
        if (v1200)
        {
          int v1488 = v1200;
LABEL_2066:
          uint64_t v1075 = (unsigned __int8 *)&unk_1B0DE1830;
          goto LABEL_2069;
        }
LABEL_2067:
        int v1488 = 0;
        uint64_t v1075 = (unsigned __int8 *)&unk_1B0DE182A;
        goto LABEL_2069;
      case 0x3Au:
        if (v1488)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        int v1488 = 0;
        LOWORD(v16) = v1569;
        goto LABEL_2422;
      case 0x3Bu:
        uint64_t v295 = (uint64_t *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6));
        if (*v295 >= 1)
        {
          *v295 -= *((int *)v12 + 3);
          LOWORD(v16) = v1569;
          goto LABEL_2422;
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x3Cu:
        uint64_t v296 = (uint64_t *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6));
        uint64_t v297 = *v296;
        if (!*v296)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        BOOL v1303 = v297 < 1;
        uint64_t v298 = v297 - 1;
        LOWORD(v16) = v1569;
        if (!v1303) {
          *uint64_t v296 = v298;
        }
        goto LABEL_2422;
      case 0x3Du:
        uint64_t v299 = (uint64_t *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6));
        if (*v299 == 0x8000000000000000)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v721 = *v299 - 1;
        *uint64_t v299 = v721;
        LOWORD(v16) = v1569;
        if (!v721) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x3Eu:
        uint64_t v300 = *(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8);
        uint64_t v301 = *(void *)(v300 + 8);
        if (*(unsigned char *)(v300 + 17))
        {
          ++*(_DWORD *)(v300 + 20);
          if (!*(unsigned char *)(v300 + 18)) {
            sub_1B0D12478(v300);
          }
        }
        if (!*(unsigned char *)(v301 + 33)) {
          goto LABEL_1380;
        }
        unsigned int v302 = *(_DWORD *)(v301 + 64);
        unsigned int v303 = *(_DWORD *)(v301 + 56) / 5u;
        if (v302 > 1)
        {
          unsigned int v305 = v303 + 1;
          unsigned int v894 = (v302 - 2) / v305 * v305;
          unsigned int v306 = dword_1E9B51ED0 / *(_DWORD *)(v301 + 52);
          if (v894 + 1 == v306) {
            int v895 = 3;
          }
          else {
            int v895 = 2;
          }
          unsigned int v304 = v895 + v894;
        }
        else
        {
          unsigned int v304 = 0;
          unsigned int v305 = v303 + 1;
          unsigned int v306 = dword_1E9B51ED0 / *(_DWORD *)(v301 + 52);
        }
        unsigned int v896 = bswap32(*(_DWORD *)(*(void *)(*(void *)(v301 + 24) + 80) + 36));
        unsigned int v897 = v302 - v896 - (v303 - v302 + v896 + v304) / v303;
        unsigned int v898 = v306 + 1;
        BOOL v900 = v306 + 1 < v302 && v897 < v898;
        unsigned int v901 = v897 - v900;
        do
        {
          unsigned int v902 = v901;
          BOOL v46 = v901 >= 2;
          unsigned int v903 = v901 - 2;
          if (v46)
          {
            int v905 = v903 / v305 * v305;
            if (v905 + 1 == v306) {
              int v906 = 3;
            }
            else {
              int v906 = 2;
            }
            int v904 = v906 + v905;
          }
          else
          {
            int v904 = 0;
          }
          unsigned int v901 = v902 - 1;
        }
        while (v902 == v904 || v902 == v898);
        if (v896 >= v302 || v302 < v902)
        {
          LODWORD(v20) = sub_1B0D1045C(80955);
        }
        else
        {
          if (!v896)
          {
LABEL_1380:
            LODWORD(v20) = 101;
            if (!*(unsigned char *)(v300 + 17)) {
              goto LABEL_1386;
            }
            goto LABEL_1384;
          }
          uint64_t v907 = *(unsigned __int8 **)(v301 + 16);
          if (v907)
          {
            LODWORD(v20) = sub_1B0D143DC(v907, 0, 0);
            if (v20) {
              goto LABEL_1383;
            }
            for (uint64_t k = *(void *)(v301 + 16); k; uint64_t k = *(void *)(k + 40))
              *(unsigned char *)(k + 1) &= ~4u;
          }
          LODWORD(v20) = sub_1B0D13FF0(v301, v902, v302, 0);
          if (!v20)
          {
            uint64_t v909 = *(void *)(*(void *)(v301 + 24) + 112);
            uint64_t v910 = *(_DWORD **)(v909 + 40);
            if ((*(_WORD *)(v909 + 52) & 4) != 0 && v910[8] >= *(_DWORD *)(v909 + 48))
            {
              if (!v910[32])
              {
                LODWORD(v20) = 0;
                goto LABEL_2578;
              }
              int v911 = sub_1B0D0F4D4(v909);
            }
            else
            {
              LODWORD(v20) = v910[12];
              if (v20)
              {
LABEL_2578:
                *(_DWORD *)(*(void *)(*(void *)(v301 + 24) + 80) + 28) = bswap32(*(_DWORD *)(v301 + 64));
                if (!*(unsigned char *)(v300 + 17)) {
                  goto LABEL_1386;
                }
LABEL_1384:
                int v912 = *(_DWORD *)(v300 + 20) - 1;
                *(_DWORD *)(v300 + 20) = v912;
                if (!v912)
                {
                  uint64_t v913 = v300;
                  int v914 = v20;
                  sub_1B0D12558(v913);
                  LODWORD(v20) = v914;
                }
LABEL_1386:
                LOWORD(v16) = v1569;
                if (v20 == 101) {
                  goto LABEL_1596;
                }
                int v1558 = v20;
                if (v20) {
                  goto LABEL_2742;
                }
LABEL_21:
                v12 += 40;
                continue;
              }
              if (v910[46] <= v910[50]) {
                int v911 = sub_1B0CBD7E0(v909);
              }
              else {
                int v911 = sub_1B0D133D0(v909);
              }
            }
            LODWORD(v20) = v911;
            goto LABEL_2578;
          }
        }
LABEL_1383:
        if (!*(unsigned char *)(v300 + 17)) {
          goto LABEL_1386;
        }
        goto LABEL_1384;
      case 0x3Fu:
        uint64_t v307 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        if (*(unsigned char *)(v307 + 2))
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v800 = *(uint64_t ***)(v307 + 40);
        uint64_t v801 = *v800;
        uint64_t v802 = **v800;
        int v803 = (*(uint64_t (**)(void))(v802 + 72))();
        sub_1B0D17574(v11, (uint64_t)v801);
        if (v803) {
          goto LABEL_2621;
        }
        int v1558 = 0;
        if (!(*(unsigned int (**)(void))(v802 + 80))(*(void *)(v307 + 40))) {
          goto LABEL_1754;
        }
        uint64_t v259 = v19;
        goto LABEL_1755;
      case 0x40u:
        uint64_t v308 = *((int *)v12 + 4);
        if ((int)v308 < 1)
        {
          unint64_t v309 = 0;
          LOWORD(v16) = v1569;
LABEL_1132:
          unint64_t v804 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
          unint64_t v805 = v309 % (8 * *(int *)(v804 + 16));
          if ((*(unsigned __int8 *)(*(void *)(v804 + 8) + (v805 >> 3)) >> (v805 & 7)))
          {
            ++*(_DWORD *)(v11 + 308);
            ++*(_DWORD *)(v11 + 228);
            v12 += 40;
            continue;
          }
          ++*(_DWORD *)(v11 + 312);
          ++*(_DWORD *)(v11 + 232);
          goto LABEL_2422;
        }
        unint64_t v309 = 0;
        uint64_t v310 = *((int *)v12 + 3);
        uint64_t v311 = v310 + v308;
        LOWORD(v16) = v1569;
        unint64_t v312 = v1570 + (v310 << 6);
        while (1)
        {
          __int16 v314 = *(_WORD *)(v312 + 20);
          if ((v314 & 0x24) != 0)
          {
            uint64_t v315 = *(void *)v312;
          }
          else
          {
            if ((v314 & 8) == 0)
            {
              uint64_t v313 = v314 & 0x12;
              if (v313) {
                v309 += v313 + 4093;
              }
              goto LABEL_351;
            }
            a2.i64[0] = *(void *)v312;
            if (*(double *)v312 >= -9.22337204e18)
            {
              if (*(double *)a2.i64 <= 9.22337204e18) {
                uint64_t v315 = (uint64_t)*(double *)a2.i64;
              }
              else {
                uint64_t v315 = 0x7FFFFFFFFFFFFFFFLL;
              }
            }
            else
            {
              uint64_t v315 = 0x8000000000000000;
            }
          }
          v309 += v315;
LABEL_351:
          v312 += 64;
          if (++v310 >= v311) {
            goto LABEL_1132;
          }
        }
      case 0x41u:
      case 0x42u:
        uint64_t v91 = *((void *)v12 + 2);
        uint64_t v92 = *((int *)v12 + 3);
        unint64_t v93 = (sqlite3_value *)(v1570 + (v92 << 6));
        if (*(sqlite3_value **)v91 == v93)
        {
          uint64_t v94 = *(unsigned __int8 *)(v91 + 42);
          LOWORD(v16) = v1569;
          goto LABEL_1054;
        }
        *(void *)(v91 + 24) = v11;
        *(void *)uint64_t v91 = v93;
        *(unsigned char *)(v91 + 40) = v1557;
        uint64_t v94 = *(unsigned __int8 *)(v91 + 42);
        if (!*(unsigned char *)(v91 + 42))
        {
          LOWORD(v16) = v1569;
          goto LABEL_1054;
        }
        unint64_t v95 = *((int *)v12 + 2);
        if (v94 < 4)
        {
          unint64_t v96 = *(unsigned __int8 *)(v91 + 42);
          LOWORD(v16) = v1569;
LABEL_1052:
          uint64_t v768 = v1570 + ((v96 + v95) << 6) - 64;
          do
          {
            *(void *)(v91 + 40 + 8 * v96) = v768;
            v768 -= 64;
            BOOL v1303 = v96-- > 1;
          }
          while (v1303);
          goto LABEL_1054;
        }
        unint64_t v96 = v94 & 3;
        a2.i64[0] = *((int *)v12 + 2);
        int64x2_t v760 = vdupq_n_s64(v95);
        unint64_t v761 = *(unsigned __int8 *)(v91 + 42);
        uint64_t v762 = v94 & 0xFC;
        LOWORD(v16) = v1569;
        do
        {
          a4.i64[0] = v761;
          int64x2_t v763 = vaddq_s64(vdupq_n_s64(v761), (int64x2_t)xmmword_1B0DE1510);
          int64x2_t v764 = vdupq_n_s64(v1570);
          int8x16_t v765 = (int8x16_t)vaddq_s64(v764, vshlq_n_s64(vaddq_s64(v763, v760), 6uLL));
          int8x16_t v766 = (int8x16_t)vaddq_s64(vdupq_lane_s64(vshlq_n_s64(vaddq_s64(a2, a4), 6uLL).i64[0], 0), vaddq_s64(v764, (int64x2_t)xmmword_1B0DE1520));
          uint64_t v767 = v91 + 8 * v763.i64[0];
          *(int8x16_t *)(v767 + 40) = vextq_s8(v765, v765, 8uLL);
          a4 = (int64x2_t)vextq_s8(v766, v766, 8uLL);
          *(int64x2_t *)(v767 + 24) = a4;
          v761 -= 4;
          v762 -= 4;
        }
        while (v762);
        if ((v94 & 0xFC) != v94) {
          goto LABEL_1052;
        }
LABEL_1054:
        *(_WORD *)(v1570 + (v92 << 6) + 20) = *(_WORD *)(v1570 + (v92 << 6) + 20) & 0xF240 | 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 + 8) + 24))(v91, v94, v91 + 48);
        int v769 = *(_DWORD *)(v91 + 36);
        if (!v769) {
          goto LABEL_21;
        }
        unsigned int v1552 = v19;
        int v612 = v1558;
        if (v769 >= 1)
        {
          char v770 = sqlite3_value_text(v93);
          sub_1B0D17334((uint64_t *)v11, "%s", v771, v772, v773, v774, v775, v776, v770);
          int v612 = *(_DWORD *)(v91 + 36);
        }
        uint64_t v777 = *v1484;
        if (*v1484)
        {
          int v778 = *(_DWORD *)(v91 + 32);
          unsigned int v779 = *((_DWORD *)v12 + 1);
          uint64_t v780 = v1484;
          do
          {
            while ((v778 & 0x80000000) == 0)
            {
              if (*(_DWORD *)v777 == v778)
              {
                unsigned int v781 = *(_DWORD *)(v777 + 4);
                if ((v781 & 0x80000000) == 0 && (v781 > 0x1F || ((v779 >> v781) & 1) == 0)) {
                  break;
                }
              }
              uint64_t v780 = (uint64_t *)(v777 + 24);
              uint64_t v777 = *(void *)(v777 + 24);
              if (!v777) {
                goto LABEL_20;
              }
            }
            uint64_t v782 = *(void (**)(void))(v777 + 16);
            if (v782) {
              v782(*(void *)(v777 + 8));
            }
            *uint64_t v780 = *(void *)(v777 + 24);
            sub_1B0D05C10((void *)v13, (void *)v777);
            uint64_t v777 = *v780;
          }
          while (*v780);
        }
LABEL_20:
        int v1558 = 0;
        *(_DWORD *)(v91 + 36) = 0;
        uint64_t v19 = v1552;
        LOWORD(v16) = v1569;
        uint64_t v11 = v1540;
        if (!v612) {
          goto LABEL_21;
        }
        goto LABEL_2602;
      case 0x43u:
        uint64_t v316 = *((int *)v12 + 1);
        LOWORD(v16) = v1569;
        if ((*(_WORD *)(v1570 + (v316 << 6) + 20) & 4) != 0) {
          uint64_t v12 = &v1568[40 * *(void *)(v1570 + (v316 << 6)) + 40];
        }
        else {
          v12 += 40;
        }
        continue;
      case 0x44u:
        LOWORD(v16) = v1569;
        unint64_t v317 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        uint16x8_t v318 = &v1568[40 * *(int *)&v1568[40 * *(void *)v317 + 8]];
        *(_WORD *)(v317 + 20) = 0;
        uint64_t v12 = v318;
        continue;
      case 0x45u:
        if (*(_WORD *)(v1570 + ((uint64_t)*((int *)v12 + 3) << 6) + 20)) {
          goto LABEL_366;
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x46u:
LABEL_366:
        uint16x8_t v319 = *(uint64_t **)(v11 + 352);
        int v320 = *((_DWORD *)v12 + 1);
        if (v319)
        {
          if (!v320)
          {
            *(void *)(v11 + 352) = v319[1];
            --*(_DWORD *)(v11 + 368);
            uint64_t v321 = *(void *)(v11 + 56);
            uint64_t v322 = *(void *)(v13 + 128) + v321;
            *(void *)(v13 + 120) = v321;
            *(void *)(v13 + 128) = v322;
            int v323 = sub_1B0D1628C(v319);
            uint64_t v324 = *(void *)(v11 + 136);
            if (*((_DWORD *)v12 + 2) == 4) {
              int v323 = *(_DWORD *)(v324 + 40 * v323 + 8) - 1;
            }
            unint64_t v1570 = *(void *)(v11 + 104);
            v1568 = *(unsigned __int8 **)(v11 + 136);
            LOWORD(v16) = v1569;
            uint64_t v12 = (unsigned __int8 *)(v324 + 40 * v323 + 40);
            continue;
          }
          *(_DWORD *)(v11 + 52) = v320;
          *(unsigned char *)(v11 + 264) = *((_DWORD *)v12 + 2);
        }
        else
        {
          *(_DWORD *)(v11 + 52) = v320;
          *(unsigned char *)(v11 + 264) = *((_DWORD *)v12 + 2);
          if (!v320) {
            goto LABEL_2664;
          }
        }
        if (*((_WORD *)v12 + 1))
        {
          sub_1B0D17334((uint64_t *)v11, "%s constraint failed", a6, (uint64_t)a7, a8, a9, a10, a11, (char)off_1E5FEF5A8[*((unsigned __int16 *)v12 + 1) - 1]);
          v1440 = *(const char **)(v11 + 168);
          if (*((void *)v12 + 2))
          {
            v1440 = (const char *)sub_1B0C904AC(v13, "%z: %s", v1434, v1435, v1436, v1437, v1438, v1439, *(void *)(v11 + 168));
            *v1485 = (char *)v1440;
          }
        }
        else
        {
          sub_1B0D17334((uint64_t *)v11, "%s", a6, (uint64_t)a7, a8, a9, a10, a11, *((void *)v12 + 2));
          v1440 = *(const char **)(v11 + 168);
        }
        sqlite3_log(*((_DWORD *)v12 + 1), "abort at %d in [%s]: %s", -858993459 * ((v12 - v1568) >> 3), *(const char **)(v11 + 320), v1440);
LABEL_2664:
        if (sub_1B0C8B23C(v11) == 5) {
          goto LABEL_2665;
        }
LABEL_2713:
        if (*(_DWORD *)(v11 + 52)) {
          uint64_t v1448 = 1;
        }
        else {
          uint64_t v1448 = 101;
        }
        goto LABEL_2784;
      case 0x47u:
        uint64_t v325 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v325 + 20) & 0x9000) != 0) {
          uint64_t v325 = sub_1B0D1D578(v325);
        }
        else {
          *(_WORD *)(v325 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        *(void *)uint64_t v325 = *((int *)v12 + 1);
        v12 += 40;
        continue;
      case 0x48u:
        uint64_t v326 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v326 + 20) & 0x9000) != 0) {
          uint64_t v326 = sub_1B0D1D578(v326);
        }
        else {
          *(_WORD *)(v326 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        *(void *)uint64_t v326 = **((void **)v12 + 2);
        v12 += 40;
        continue;
      case 0x49u:
        goto LABEL_1672;
      case 0x4Au:
      case 0x4Bu:
        uint64_t v97 = *(void *)(v11 + 104);
        int v98 = *((_DWORD *)v12 + 2);
        uint64_t v99 = v98;
        uint64_t v100 = v97 + ((uint64_t)v98 << 6);
        __int16 v102 = *(_WORD *)(v100 + 20);
        int v101 = (__int16 *)(v100 + 20);
        if ((v102 & 0x9000) != 0)
        {
          sub_1B0D1D578(v97 + ((uint64_t)v98 << 6));
          int v98 = *((_DWORD *)v12 + 2);
        }
        else
        {
          *int v101 = 4;
        }
        int v671 = *((_DWORD *)v12 + 3) - v98;
        if (*((_DWORD *)v12 + 1)) {
          __int16 v672 = 257;
        }
        else {
          __int16 v672 = 1;
        }
        *int v101 = v672;
        uint64_t v673 = v97 + (v99 << 6);
        *(_DWORD *)(v673 + 16) = 0;
        if (v671 < 1)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v674 = v673 + 64;
        int v675 = v671 + 1;
        LOWORD(v16) = v1569;
        do
        {
          if ((*(_WORD *)(v674 + 20) & 0x9000) != 0) {
            sub_1B0D18138((int *)v674);
          }
          else {
            *(_WORD *)(v674 + 20) = 1;
          }
          *(_WORD *)(v674 + 20) = v672;
          *(_DWORD *)(v674 + 16) = 0;
          v674 += 64;
          --v675;
        }
        while (v675 > 1);
        goto LABEL_21;
      case 0x4Cu:
        unint64_t v327 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v328 = *(_WORD *)(v327 + 20) & 0xFFC0 | 1;
        goto LABEL_717;
      case 0x4Du:
        uint64_t v329 = *(void *)(v11 + 104);
        uint64_t v330 = *((int *)v12 + 2);
        uint64_t v331 = v329 + (v330 << 6);
        __int16 v333 = *(_WORD *)(v331 + 20);
        int16x8_t v332 = (_WORD *)(v331 + 20);
        if ((v333 & 0x9000) != 0) {
          sub_1B0D1D578(v329 + (v330 << 6));
        }
        else {
          *int16x8_t v332 = 4;
        }
        uint64_t v806 = (char *)*((void *)v12 + 2);
        LOWORD(v16) = v1569;
        if (v806)
        {
          sub_1B0C79BBC(v329 + (v330 << 6), v806, *((int *)v12 + 1), 0, 0);
        }
        else
        {
          sub_1B0CEAEB0(v329 + (v330 << 6), *((_DWORD *)v12 + 1));
          if (sub_1B0CC9B18((int *)(v329 + (v330 << 6)))) {
            goto LABEL_8;
          }
        }
        *(unsigned char *)(v329 + (v330 << 6) + 22) = v1557;
        v12 += 40;
        continue;
      case 0x4Eu:
        uint64_t v334 = *(void *)(v11 + 128);
        uint64_t v335 = *((int *)v12 + 1) - 1;
        int8x16_t v336 = (int64x2_t *)(v334 + (v335 << 6));
        if ((v336[1].i16[2] & 0x12) != 0)
        {
          __int32 v337 = v336[1].i32[0];
          if ((v336[1].i16[2] & 0x400) != 0) {
            v337 += v336->i32[0];
          }
          if (v337 > *(_DWORD *)(*(void *)(v334 + (v335 << 6) + 24) + 136)) {
            goto LABEL_2739;
          }
        }
        int16x8_t v338 = (__n128 *)(v1570 + ((uint64_t)*((int *)v12 + 2) << 6));
        if ((v338[1].n128_u16[2] & 0x9000) != 0) {
          sub_1B0D18138((int *)(v1570 + ((uint64_t)*((int *)v12 + 2) << 6)));
        }
        a2 = *v336;
        v338[1].n128_u64[0] = v336[1].u64[0];
        *int16x8_t v338 = (__n128)a2;
        v338[1].n128_u16[2] = v338[1].n128_u16[2] & 0x8FBF | 0x2040;
        uint64_t v11 = v1540;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x4Fu:
        int v339 = *((_DWORD *)v12 + 3);
        uint64_t v340 = (uint64_t)*((int *)v12 + 2) << 6;
        uint64_t v341 = (uint64_t)*((int *)v12 + 1) << 6;
        while (1)
        {
          unint64_t v342 = v1570 + v340;
          if ((*(_WORD *)(v1570 + v340 + 20) & 0x9000) != 0 || *(_DWORD *)(v342 + 32)) {
            sub_1B0D180E4(v1570 + v340);
          }
          unint64_t v343 = v1570 + v341;
          a2 = *(int64x2_t *)(v1570 + v341);
          long long v344 = *(_OWORD *)(v1570 + v341 + 16);
          a4 = *(int64x2_t *)(v1570 + v341 + 32);
          long long v345 = *(_OWORD *)(v1570 + v341 + 48);
          *(int64x2_t *)(v342 + 32) = a4;
          *(_OWORD *)(v342 + 48) = v345;
          *(int64x2_t *)unint64_t v342 = a2;
          *(_OWORD *)(v342 + 16) = v344;
          *(_WORD *)(v343 + 20) = 1;
          *(_DWORD *)(v343 + 32) = 0;
          if ((*(_WORD *)(v342 + 20) & 0x4000) != 0)
          {
            if (sub_1B0CEA388((int *)v342)) {
              goto LABEL_8;
            }
          }
          v340 += 64;
          v341 += 64;
          if (!--v339)
          {
            LOWORD(v16) = v1569;
            v12 += 40;
            goto LABEL_22;
          }
        }
      case 0x50u:
        int v346 = *((_DWORD *)v12 + 3);
        uint64_t v347 = (uint64_t)*((int *)v12 + 2) << 6;
        uint64_t v348 = (uint64_t)*((int *)v12 + 1) << 6;
        while (2)
        {
          unint64_t v349 = v1570 + v347;
          unint64_t v350 = v1570 + v348;
          if ((*(_WORD *)(v1570 + v347 + 20) & 0x9000) != 0)
          {
            sub_1B0D1D5BC(v1570 + v347, (long long *)v350, 0x4000);
            LOWORD(v351) = *(_WORD *)(v349 + 20);
          }
          else
          {
            a2 = *(int64x2_t *)v350;
            uint64_t v351 = *(void *)(v350 + 16);
            *(void *)(v349 + 16) = v351;
            *(int64x2_t *)unint64_t v349 = a2;
            LOWORD(v351) = WORD2(v351);
            if ((*(_WORD *)(v350 + 20) & 0x2000) == 0)
            {
              LOWORD(v351) = WORD2(v351) & 0x8FFF | 0x4000;
              *(_WORD *)(v349 + 20) = v351;
            }
          }
          if ((v351 & 0x4000) == 0) {
            goto LABEL_401;
          }
          if (sub_1B0CEA388((int *)v349)) {
            goto LABEL_8;
          }
          LOWORD(v351) = *(_WORD *)(v349 + 20);
LABEL_401:
          if ((v351 & 0x800) != 0 && (*((_WORD *)v12 + 1) & 2) != 0) {
            *(_WORD *)(v349 + 20) = v351 & 0xF7FF;
          }
          if (v346)
          {
            --v346;
            v347 += 64;
            v348 += 64;
            continue;
          }
          break;
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x51u:
        unint64_t v352 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        int v353 = (__n128 *)(v1570 + ((uint64_t)*((int *)v12 + 2) << 6));
        if ((v353[1].n128_u16[2] & 0x9000) != 0)
        {
          sub_1B0D1D5BC((uint64_t)v353, (long long *)v352, 0x4000);
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        a2 = *(int64x2_t *)v352;
        v353[1].n128_u64[0] = *(void *)(v352 + 16);
        *int v353 = (__n128)a2;
        LOWORD(v16) = v1569;
        if ((*(unsigned char *)(v352 + 21) & 0x20) != 0) {
          goto LABEL_21;
        }
        v353[1].n128_u16[2] = v353[1].n128_u16[2] & 0x8FFF | 0x4000;
        v12 += 40;
        continue;
      case 0x52u:
        uint64_t v354 = *(void *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6));
        uint64_t v355 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v355 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v355, v354);
        }
        else
        {
          *(void *)uint64_t v355 = v354;
          *(_WORD *)(v355 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x53u:
        if (*(uint64_t *)(v11 + 80) < 1) {
          goto LABEL_1888;
        }
        *(_DWORD *)(v11 + 52) = 787;
        *(unsigned char *)(v11 + 264) = 2;
        sub_1B0D17334((uint64_t *)v11, "FOREIGN KEY constraint failed", a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
        if (*(char *)(v11 + 266) >= 0) {
          LODWORD(v20) = 1;
        }
        else {
          LODWORD(v20) = 787;
        }
        goto LABEL_2742;
      case 0x54u:
        *(_DWORD *)(v11 + 44) = (*(_DWORD *)(v11 + 44) | 1) + 2;
        *(void *)(v11 + 160) = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        if (*(unsigned char *)(v13 + 103)) {
          goto LABEL_8;
        }
        if ((*(unsigned char *)(v13 + 110) & 4) != 0) {
          (*(void (**)(uint64_t, void, uint64_t, void))(v13 + 240))(4, *(void *)(v13 + 248), v11, 0);
        }
        *(_DWORD *)(v11 + 48) = -858993459 * ((unint64_t)(v12 - v1568) >> 3) + 1;
        uint64_t v1448 = 100;
        goto LABEL_2784;
      case 0x55u:
        uint64_t v356 = *((int *)v12 + 1);
        if (v356)
        {
          unint64_t v357 = v1570;
          goto LABEL_432;
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x56u:
        uint64_t v358 = *((int *)v12 + 1);
        unint64_t v359 = v1570 + (v358 << 6);
        if (v1570)
        {
          __int16 v360 = *(_WORD *)(v359 + 20);
          LOWORD(v16) = v1569;
          if ((v360 & 0x24) != 0)
          {
            uint64_t v361 = *(void *)v359;
          }
          else if ((v360 & 8) != 0)
          {
            a2.i64[0] = *(void *)v359;
            uint64_t v1165 = 0x7FFFFFFFFFFFFFFFLL;
            if (*(double *)v359 <= 9.22337204e18) {
              uint64_t v1165 = (uint64_t)*(double *)v359;
            }
            if (*(double *)a2.i64 >= -9.22337204e18) {
              uint64_t v361 = v1165;
            }
            else {
              uint64_t v361 = 0x8000000000000000;
            }
          }
          else if ((v360 & 0x12) != 0 && *(void *)(v1570 + (v358 << 6) + 8))
          {
            uint64_t v361 = sub_1B0D186C0(v1570 + (v358 << 6));
          }
          else
          {
            uint64_t v361 = 0;
          }
        }
        else
        {
          sub_1B0CE1978(89717);
          uint64_t v361 = 0;
          LOWORD(v16) = v1569;
        }
        *(void *)unint64_t v359 = v361;
        *(_WORD *)(v1570 + (v358 << 6) + 20) = *(_WORD *)(v1570 + (v358 << 6) + 20) & 0xF240 | 4;
        *(void *)unint64_t v359 = v361 + *((int *)v12 + 2);
        v12 += 40;
        continue;
      case 0x57u:
        uint64_t v362 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        if ((*(_WORD *)(v362 + 20) & 0x24) != 0) {
          sub_1B0CEDC28(v362);
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x58u:
        uint64_t v363 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        if ((*(_WORD *)(v363 + 20) & 0x400) != 0)
        {
          int v62 = sub_1B0CC9B18((int *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6)));
          if (v62) {
            goto LABEL_2597;
          }
        }
        int v62 = sub_1B0D195EC(v363, v12[8], v1557);
        if (v62) {
          goto LABEL_2597;
        }
        goto LABEL_1888;
      case 0x59u:
      case 0x5Du:
      case 0x7Bu:
        LOWORD(v16) = v1569;
        goto LABEL_21;
      case 0x5Au:
        if (*((_WORD *)v12 + 1)) {
          uint64_t v364 = *((void *)v12 - 3) + 4;
        }
        else {
          uint64_t v364 = 0;
        }
        __sc = (char *)*((unsigned int *)v12 + 3);
        LOWORD(v16) = v1569;
        if ((int)__sc < 1)
        {
          uint64_t v11 = v1540;
          v12 += 40;
        }
        else
        {
          unint64_t v722 = v18;
          unsigned int v1551 = v19;
          uint64_t v723 = 0;
          uint64_t v724 = *((void *)v12 + 2);
          int v1500 = *((_DWORD *)v12 + 1);
          int v1492 = *((_DWORD *)v12 + 2);
          while (1)
          {
            uint64_t v725 = v12;
            unint64_t v726 = v722;
            int v727 = v364 ? *(_DWORD *)(v364 + 4 * (void)v723) : (int)v723;
            char v728 = v723[*(void *)(v724 + 24)];
            uint64_t v729 = (v727 + v1500);
            uint64_t v730 = (v727 + v1492);
            int v731 = sub_1B0CB6238(v1570 + (v729 << 6), v1570 + (v730 << 6), *(void *)(v724 + 32 + 8 * (void)v723));
            if (v731) {
              break;
            }
            ++v723;
            unint64_t v722 = v726;
            uint64_t v12 = v725;
            if (__sc == v723)
            {
              int v1488 = 0;
              uint64_t v11 = v1540;
              uint64_t v19 = v1551;
              unint64_t v18 = v722;
              LOWORD(v16) = v1569;
              v12 += 40;
              goto LABEL_22;
            }
          }
          if ((v723[*(void *)(v724 + 24)] & 2) != 0)
          {
            LOWORD(v16) = v1569;
            __int16 v1126 = *(_WORD *)(v1570 + (v729 << 6) + 20);
            uint64_t v11 = v1540;
            if (v1126 & 1) != 0 || (*(_WORD *)(v1570 + (v730 << 6) + 20)) {
              int v731 = -v731;
            }
          }
          else
          {
            uint64_t v11 = v1540;
            LOWORD(v16) = v1569;
          }
          if (v728) {
            int v1127 = -v731;
          }
          else {
            int v1127 = v731;
          }
          int v1488 = v1127;
          unint64_t v1128 = v726;
          uint64_t v19 = v1551;
          unsigned int v1129 = v725;
          unint64_t v18 = v1128;
          uint64_t v12 = v1129 + 40;
        }
        continue;
      case 0x5Bu:
        uint64_t v365 = *((int *)v12 + 2);
        uint64_t v366 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v367 = *(_WORD *)(v366 + 20);
        if ((v367 & 0x24) != 0)
        {
          int v368 = *(void *)v366 != 0;
          LOWORD(v16) = v1569;
        }
        else if (v367)
        {
          int v368 = *((_DWORD *)v12 + 3);
          LOWORD(v16) = v1569;
        }
        else
        {
          LOWORD(v16) = v1569;
          if ((v367 & 8) != 0)
          {
            a2.i64[0] = *(void *)v366;
          }
          else if ((v367 & 0x12) != 0)
          {
            *(double *)a2.i64 = sub_1B0D18684(v366);
          }
          else
          {
            a2.i64[0] = 0;
          }
          int v368 = *(double *)a2.i64 != 0.0;
        }
        uint64_t v1360 = v1570 + (v365 << 6);
        uint64_t v1361 = *((_DWORD *)v12 + 4) ^ v368;
        uint64_t v228 = (_WORD *)(v1360 + 20);
        if ((*(_WORD *)(v1360 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v1360, v1361);
          v12 += 40;
          continue;
        }
        *(void *)uint64_t v1360 = v1361;
        goto LABEL_2436;
      case 0x5Cu:
        unint64_t v357 = v1570;
        if ((*(_WORD *)(v1570 + ((uint64_t)*((int *)v12 + 1) << 6) + 20) & 1) != 0
          || (*(_WORD *)(v1570 + ((uint64_t)*((int *)v12 + 3) << 6) + 20) & 1) != 0)
        {
          uint64_t v677 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
          uint64_t v678 = (_WORD *)(v677 + 20);
          LOWORD(v16) = v1569;
          if ((*(_WORD *)(v677 + 20) & 0x9000) != 0) {
            goto LABEL_2388;
          }
LABEL_1047:
          *uint64_t v678 = 1;
          v12 += 40;
        }
        else
        {
          uint64_t v356 = *((int *)v12 + 2);
LABEL_432:
          uint64_t v369 = v357 + (v356 << 6);
          uint64_t v228 = (_WORD *)(v369 + 20);
          LOWORD(v16) = v1569;
          if ((*(_WORD *)(v369 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v369, 0);
            v12 += 40;
          }
          else
          {
            *(void *)uint64_t v369 = 0;
LABEL_2436:
            *uint64_t v228 = 4;
            v12 += 40;
          }
        }
        continue;
      case 0x5Eu:
        a2 = 0uLL;
        memset(__buf, 0, sizeof(__buf));
        unsigned int v370 = *((_DWORD *)v12 + 2);
        uint64_t v371 = *(void *)(v11 + 120) + 8 * *((int *)v12 + 1);
        int v372 = *(_DWORD *)(v11 + 44);
LABEL_435:
        uint64_t v373 = *(void *)v371;
        uint64_t v374 = *(int **)(*(void *)v371 + 80);
        if (*(_DWORD *)(*(void *)v371 + 24) == v372)
        {
          if (**(unsigned char **)(v373 + 40))
          {
            int v62 = sub_1B0D199A0(v373);
            LOWORD(v16) = v1569;
            if (!v62) {
              goto LABEL_443;
            }
            goto LABEL_2597;
          }
        }
        else
        {
          if (*(unsigned char *)(v373 + 2))
          {
            LOWORD(v16) = v1569;
LABEL_1806:
            if (*(unsigned char *)v373 != 3 || (uint64_t v1091 = *(unsigned int *)(v373 + 28), (int)v1091 < 1))
            {
              uint64_t v677 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
              v1135 = (_WORD *)(v677 + 20);
              if ((*(_WORD *)(v677 + 20) & 0x9000) != 0) {
                goto LABEL_2388;
              }
              goto LABEL_2389;
            }
            unsigned int __sh = v370;
            unint64_t v1092 = v1570 + (v1091 << 6);
            int v1093 = *(_DWORD *)(v1092 + 16);
            *(_DWORD *)(v373 + 96) = v1093;
            *(_DWORD *)(v373 + 100) = v1093;
            unsigned int v1094 = *(char **)(v1092 + 8);
            *(void *)(v373 + 88) = v1094;
            goto LABEL_1862;
          }
          uint64_t v375 = *(void *)(v373 + 40);
          LOWORD(v16) = v1569;
          if (*(unsigned char *)(v373 + 3)) {
            goto LABEL_453;
          }
          if (!*(unsigned char *)v375) {
            goto LABEL_1859;
          }
          int v62 = sub_1B0D199A0(v373);
          if (v62) {
            goto LABEL_2597;
          }
          while (1)
          {
LABEL_443:
            while (1)
            {
              uint64_t v374 = *(int **)(v373 + 80);
              int v372 = *(_DWORD *)(v11 + 44);
              if (*(_DWORD *)(v373 + 24) == v372) {
                break;
              }
              if (*(unsigned char *)(v373 + 2))
              {
                int v1558 = 0;
                goto LABEL_1806;
              }
              uint64_t v375 = *(void *)(v373 + 40);
              if (*(unsigned char *)(v373 + 3))
              {
                int v1558 = 0;
LABEL_453:
                uint64_t v376 = *(void *)(v373 + 8);
                if (v376)
                {
                  int v377 = *(_DWORD *)(v376 + 4 * (v370 + 1));
                  if (v377)
                  {
                    uint64_t v371 = v373 + 32;
                    unsigned int v370 = v377 - 1;
                    goto LABEL_435;
                  }
                }
                v1506 = v374;
                int v62 = sub_1B0D1991C(v373);
                if (v62) {
                  goto LABEL_2597;
                }
                int v1558 = 0;
                uint64_t v374 = v1506;
LABEL_1859:
                unsigned int __sh = v370;
                v1121 = v374;
                sub_1B0D146DC(v375);
                uint64_t v374 = v1121;
                *(_DWORD *)(v373 + 96) = *(_DWORD *)(v375 + 64);
                int v1122 = *(unsigned __int16 *)(v375 + 68);
                unsigned int v1094 = *(char **)(v375 + 56);
                int v1123 = *(_DWORD *)(*(void *)(v375 + 136) + 88) - v1094;
                if (v1122 > v1123) {
                  int v1122 = v1123 & ~(v1123 >> 31);
                }
                *(_DWORD *)(v373 + 100) = v1122;
                *(void *)(v373 + 88) = v1094;
                int v372 = *(_DWORD *)(v11 + 44);
LABEL_1862:
                *(_DWORD *)(v373 + 24) = v372;
                int v1124 = *v1094;
                *uint64_t v374 = *v1094;
                if (v1124 < 0)
                {
                  v1172 = v374;
                  unsigned int v1173 = sub_1B0D19A08(v1094, v374);
                  uint64_t v374 = v1172;
                  unint64_t v1125 = v1173;
                }
                else
                {
                  unint64_t v1125 = 1;
                }
                unsigned int v370 = __sh;
                *(_DWORD *)(v373 + 56) = v1125;
                *(_WORD *)(v373 + 66) = 0;
                unint64_t v1161 = *v374;
                if (*(unsigned int *)(v373 + 100) >= v1161)
                {
                  unint64_t v1514 = v18;
                  v1524 = v12;
                  unsigned int v1544 = v19;
                  LODWORD(v1089) = 0;
                  uint64_t v1162 = *(void *)(v373 + 88);
                }
                else
                {
                  *(void *)(v373 + 88) = 0;
                  *(_DWORD *)(v373 + 100) = 0;
                  if (*v374 > 0x18003 || *v374 > *(_DWORD *)(v373 + 96)) {
                    goto LABEL_2519;
                  }
                  LODWORD(v1089) = 0;
LABEL_1803:
                  if (v370 < v1089)
                  {
                    unsigned int v1545 = v19;
                    unsigned int v1090 = *(_DWORD *)(v373 + 4 * v370 + 112);
                    goto LABEL_2365;
                  }
                  unint64_t v1125 = *(unsigned int *)(v373 + 56);
                  unint64_t v1161 = *v374;
                  if (v1125 >= v1161)
                  {
                    unsigned int v1090 = 0u;
                    goto LABEL_2363;
                  }
                  uint64_t v1162 = *(void *)(v373 + 88);
                  unint64_t v1514 = v18;
                  v1524 = v12;
                  unsigned int v1544 = v19;
                  if (!v1162)
                  {
                    memset(__buf, 0, sizeof(__buf));
                    long long v1163 = v374;
                    int v1164 = sub_1B0D19A9C(*(void *)(v373 + 40), *v374, (uint64_t)__buf);
                    if (v1164)
                    {
                      LODWORD(v20) = v1164;
                      uint64_t v11 = v1540;
                      goto LABEL_2705;
                    }
                    int v1558 = 0;
                    uint64_t v1162 = *((void *)&__buf[0] + 1);
                    LODWORD(v1089) = *(unsigned __int16 *)(v373 + 66);
                    unint64_t v1125 = *(unsigned int *)(v373 + 56);
                    unint64_t v1161 = *v1163;
                    uint64_t v374 = v1163;
                  }
                }
                unint64_t v1174 = v374[v1089];
                v1175 = (char *)(v1162 + v1125);
                int v1496 = v1162;
                unint64_t v1176 = v1162 + v1161;
                uint64_t v1177 = v373 + 112;
                unint64_t v1178 = v1089;
                v1504 = v374;
                while (2)
                {
                  int v1179 = *v1175;
                  unsigned int v1090 = *v1175;
                  *(_DWORD *)(v1177 + 4 * v1178) = v1090;
                  if ((v1179 & 0x80000000) == 0)
                  {
                    ++v1175;
                    uint64_t v1089 = byte_1B0DE2184[v1090];
LABEL_2031:
                    v1174 += v1089;
                    LOWORD(v1089) = v1178 + 1;
                    v374[v1178 + 1] = v1174;
                    if (v1178 >= v370 || (++v1178, (unint64_t)v1175 >= v1176))
                    {
                      LODWORD(v1089) = (unsigned __int16)v1089;
                      if ((unint64_t)v1175 >= v1176)
                      {
                        uint64_t v19 = v1544;
                        if ((unint64_t)v1175 <= v1176 && v1174 == *(_DWORD *)(v373 + 96)) {
                          goto LABEL_2359;
                        }
                      }
                      else
                      {
                        uint64_t v19 = v1544;
                        if (v1174 <= *(unsigned int *)(v373 + 96)) {
                          goto LABEL_2359;
                        }
                      }
                      LODWORD(v1089) = *v374;
                      if (*v374)
                      {
                        if (*(void *)(v373 + 88))
                        {
                          uint64_t v11 = v1540;
                          unint64_t v18 = v1514;
                          uint64_t v12 = v1524;
                          LOWORD(v16) = v1569;
                        }
                        else
                        {
                          uint64_t v11 = v1540;
                          unint64_t v18 = v1514;
                          LOWORD(v16) = v1569;
                          if (WORD2(__buf[1]) & 0x9000 | LODWORD(__buf[2])) {
                            sub_1B0D180E4((uint64_t)__buf);
                          }
                          uint64_t v12 = v1524;
                        }
LABEL_2519:
                        int v1392 = *((_DWORD *)v1568 + 3);
                        BOOL v1393 = __OFSUB__(v1392, 1);
                        int v1394 = v1392 - 1;
                        if (v1394 < 0 == v1393)
                        {
                          uint64_t v12 = &v1568[40 * v1394 + 40];
                          goto LABEL_22;
                        }
                        int v1429 = 103176;
LABEL_2631:
                        LODWORD(v20) = sub_1B0D1045C(v1429);
                        goto LABEL_2742;
                      }
                      LODWORD(v1175) = v1176;
LABEL_2359:
                      *(_WORD *)(v373 + 66) = v1089;
                      *(_DWORD *)(v373 + 56) = v1175 - v1496;
                      if (*(void *)(v373 + 88))
                      {
                        unint64_t v18 = v1514;
                        uint64_t v12 = v1524;
                      }
                      else
                      {
                        unint64_t v18 = v1514;
                        uint64_t v12 = v1524;
                        if (WORD2(__buf[1]) & 0x9000 | LODWORD(__buf[2]))
                        {
                          sub_1B0D180E4((uint64_t)__buf);
                          uint64_t v374 = v1504;
                          LODWORD(v1089) = *(unsigned __int16 *)(v373 + 66);
                        }
                      }
LABEL_2363:
                      if (v370 < v1089)
                      {
                        unsigned int v1545 = v19;
LABEL_2365:
                        v1328 = (char *)*((int *)v12 + 3);
                        a10 = v1570 + ((void)v1328 << 6);
                        v1329 = (_WORD *)(a10 + 20);
                        if ((*(_WORD *)(a10 + 20) & 0x9000) != 0)
                        {
                          v1330 = (int *)(v1570 + ((void)v1328 << 6));
                          __suint64_t n = (char *)*((int *)v12 + 3);
                          unsigned int v1331 = v370;
                          v1332 = v374;
                          uint64_t v1333 = a10;
                          sub_1B0D18138(v1330);
                          a10 = v1333;
                          uint64_t v374 = v1332;
                          unsigned int v370 = v1331;
                          v1328 = __sn;
                        }
                        if (*(_DWORD *)(v373 + 100) < v374[v370 + 1])
                        {
                          *(unsigned char *)(v1570 + ((void)v1328 << 6) + 22) = v1557;
                          int v1334 = *((_WORD *)v12 + 1) & 0xC0;
                          if ((*((_WORD *)v12 + 1) & 0xC0) == 0) {
                            goto LABEL_2373;
                          }
                          if (v1334 != 128)
                          {
                            if (v1090 < 0xC) {
                              goto LABEL_2374;
                            }
                            if ((v1090 & 1) != 0 && v1334 != 192)
                            {
LABEL_2373:
                              if (v1090 > 0x7F) {
                                goto LABEL_2375;
                              }
LABEL_2374:
                              if (byte_1B0DE2184[v1090])
                              {
LABEL_2375:
                                int v1335 = sub_1B0D19B1C(v373, v370, v1090, v374[v370], *(_DWORD *)(v1540 + 44), v1483, a10);
                                LODWORD(v20) = v1335;
                                uint64_t v19 = v1545;
                                if (!v1335)
                                {
                                  int v1558 = 0;
                                  goto LABEL_2532;
                                }
                                if (v1335 != 18)
                                {
                                  uint64_t v11 = v1540;
                                  if (v1335 != 7) {
                                    goto LABEL_2742;
                                  }
                                  goto LABEL_8;
                                }
LABEL_2739:
                                uint64_t v11 = v1540;
                                sub_1B0D17334((uint64_t *)v1540, "string or blob too big", a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
                                LODWORD(v20) = 18;
                                goto LABEL_2742;
                              }
                            }
                          }
                          v1337 = byte_1B0DE196D;
LABEL_2382:
                          sub_1B0CAD5D4(v1337, v1090, a10);
LABEL_2531:
                          uint64_t v19 = v1545;
                          goto LABEL_2532;
                        }
                        v1336 = (char *)(*(void *)(v373 + 88) + v374[v370]);
                        if (v1090 <= 0xB)
                        {
                          v1337 = v1336;
                          goto LABEL_2382;
                        }
                        unint64_t v1338 = (unint64_t)(v1090 - 12) >> 1;
                        unint64_t v1339 = v1570 + ((void)v1328 << 6);
                        *(_DWORD *)(v1339 + 16) = v1338;
                        *(unsigned char *)(v1339 + 22) = v1557;
                        if (*(_DWORD *)(v1339 + 32) >= (int)v1338 + 2)
                        {
                          v1341 = *(void **)(v1339 + 40);
                          *(void *)(v1339 + 8) = v1341;
                          unint64_t v1340 = v1570;
                          goto LABEL_2530;
                        }
                        if ((int)v1338 > *(_DWORD *)(v13 + 136))
                        {
                          LOBYTE(v19) = v1545;
                          goto LABEL_2739;
                        }
                        _WORD *v1329 = 1;
                        if (!sub_1B0CA0CF0(a10, (int)v1338 + 2, 0))
                        {
                          unint64_t v1340 = v1570;
                          v1341 = *(void **)(v1570 + ((void)v1328 << 6) + 8);
LABEL_2530:
                          unint64_t v1397 = v1340 + ((void)v1328 << 6);
                          memcpy(v1341, v1336, (unint64_t)(v1090 - 12) >> 1);
                          *(unsigned char *)(*(void *)(v1397 + 8) + v1338) = 0;
                          *(unsigned char *)(*(void *)(v1397 + 8) + v1338 + 1) = 0;
                          _WORD *v1329 = word_1B0DE2180[v1090 & 1];
                          goto LABEL_2531;
                        }
LABEL_2696:
                        LOBYTE(v19) = v1545;
                        uint64_t v11 = v1540;
                        goto LABEL_8;
                      }
                      uint64_t v677 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
                      if (v12[1] == 246)
                      {
                        sub_1B0CBCF4C(v677, *((long long **)v12 + 2), 0x2000);
                        goto LABEL_2532;
                      }
                      v1135 = (_WORD *)(v677 + 20);
                      LOWORD(v16) = v1569;
                      uint64_t v11 = v1540;
                      if ((*(_WORD *)(v677 + 20) & 0x9000) != 0)
                      {
LABEL_2388:
                        sub_1B0D18138((int *)v677);
                        v12 += 40;
                        goto LABEL_22;
                      }
LABEL_2389:
                      _WORD *v1135 = 1;
                      v12 += 40;
                      goto LABEL_22;
                    }
                    continue;
                  }
                  break;
                }
                int v1180 = *v1175;
                int v1181 = v1175[1];
                if ((v1175[1] & 0x80000000) == 0)
                {
                  unsigned int v1090 = ((v1180 & 0x7F) << 7) | v1181;
                  uint64_t v1182 = 2;
                  goto LABEL_2027;
                }
                int v1183 = v1175[2];
                if ((v1183 & 0x80000000) == 0)
                {
                  unsigned int v1090 = v1183 & 0x7F | (v1180 << 14) & 0x1FC07F | ((v1181 & 0x7F) << 7);
                  uint64_t v1182 = 3;
                  goto LABEL_2027;
                }
                *(void *)&long long v1574 = 0;
                unsigned int v1184 = sub_1B0CAD43C(v1175, (unint64_t *)&v1574);
                uint64_t v1182 = v1184;
                unsigned int v1090 = v1574;
                if (!DWORD1(v1574))
                {
                  uint64_t v374 = v1504;
LABEL_2027:
                  v1175 += v1182;
                  *(_DWORD *)(v1177 + 4 * v1178) = v1090;
                  if (v1090 < 0x80) {
                    LODWORD(v1089) = byte_1B0DE2184[v1090];
                  }
                  else {
LABEL_2028:
                  }
                    LODWORD(v1089) = (v1090 - 12) >> 1;
                  uint64_t v1089 = v1089;
                  goto LABEL_2031;
                }
                v1175 += v1184;
                unsigned int v1090 = -1;
                *(_DWORD *)(v1177 + 4 * v1178) = -1;
                uint64_t v374 = v1504;
                goto LABEL_2028;
              }
              if (!*(unsigned char *)v375)
              {
                int v1558 = 0;
                goto LABEL_1859;
              }
              int v62 = sub_1B0D199A0(v373);
              if (v62) {
                goto LABEL_2597;
              }
            }
            if (!**(unsigned char **)(v373 + 40)) {
              break;
            }
            int v62 = sub_1B0D199A0(v373);
            if (v62) {
              goto LABEL_2597;
            }
          }
          int v1558 = 0;
        }
        LODWORD(v1089) = *(unsigned __int16 *)(v373 + 66);
        goto LABEL_1803;
      case 0x5Fu:
        uint64_t v378 = *((void *)v12 + 2);
        int v379 = *(__int16 *)(v378 + 54);
        if (v379 < 1)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v380 = 0;
        uint64_t v381 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        uint64_t v382 = (unsigned __int8 *)(*(void *)(v378 + 8) + 8);
        while (1)
        {
          __int16 v688 = *((_WORD *)v382 + 3);
          if ((v688 & 0x60) == 0) {
            break;
          }
          if ((v688 & 0x20) == 0)
          {
            if (!*((_DWORD *)v12 + 3)) {
              break;
            }
            v381 += 64;
          }
LABEL_869:
          ++v380;
          v382 += 16;
          if (v380 >= (__int16)v379)
          {
            LOWORD(v16) = v1569;
            v12 += 40;
            goto LABEL_22;
          }
        }
        sub_1B0CBCF8C(v381, (char)v382[1], v1557);
        __int16 v689 = *(_WORD *)(v381 + 20);
        if ((v689 & 1) == 0)
        {
          switch((unint64_t)*v382 >> 4)
          {
            case 2uLL:
              if ((v689 & 0x10) != 0) {
                break;
              }
              goto LABEL_2604;
            case 3uLL:
            case 4uLL:
              if ((v689 & 4) != 0) {
                break;
              }
              goto LABEL_2604;
            case 5uLL:
              if ((v689 & 4) != 0)
              {
                uint64_t v690 = *(void *)v381;
                if ((unint64_t)(*(void *)v381 + 0x800000000000) >> 48)
                {
                  *(double *)a2.i64 = (double)v690;
                  *(double *)uint64_t v381 = (double)v690;
                  __int16 v691 = 8;
                  __int16 v692 = -13;
                }
                else
                {
                  __int16 v691 = 32;
                  __int16 v692 = -37;
                }
                *(_WORD *)(v381 + 20) = v692 & v689 | v691;
              }
              else if ((v689 & 0x28) == 0)
              {
LABEL_2604:
                sub_1B0D17334((uint64_t *)v11, "cannot store %s value in %s column %s.%s", a6, (uint64_t)a7, a8, a9, a10, a11, (char)off_1E5FEF5C8[byte_1B0DE186A[v689 & 0x3F] - 1]);
                LODWORD(v20) = 3091;
                goto LABEL_2742;
              }
              break;
            case 6uLL:
              if ((v689 & 2) != 0) {
                break;
              }
              goto LABEL_2604;
            default:
              break;
          }
        }
        v381 += 64;
        LOWORD(v379) = *(_WORD *)(v378 + 54);
        goto LABEL_869;
      case 0x60u:
        uint64_t v383 = (unsigned char *)*((void *)v12 + 2);
        LOWORD(v16) = v1569;
        uint64_t v384 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        char v387 = *v383;
        unsigned int v386 = v383 + 1;
        char v385 = v387;
        do
        {
          sub_1B0CBCF8C(v384, v385, v1557);
          if (*(v386 - 1) == 69)
          {
            __int16 v391 = *(_WORD *)(v384 + 20);
            if ((v391 & 4) != 0)
            {
              uint64_t v392 = *(void *)v384;
              if ((unint64_t)(*(void *)v384 + 0x800000000000) >> 48)
              {
                *(double *)a2.i64 = (double)v392;
                *(double *)uint64_t v384 = (double)v392;
                __int16 v388 = 8;
                __int16 v389 = -15;
              }
              else
              {
                __int16 v388 = 32;
                __int16 v389 = -37;
              }
              *(_WORD *)(v384 + 20) = v389 & v391 | v388;
            }
          }
          int v390 = *v386++;
          char v385 = v390;
          v384 += 64;
        }
        while (v390);
        goto LABEL_21;
      case 0x61u:
        int v393 = (unsigned char *)*((void *)v12 + 2);
        uint64_t v394 = *((int *)v12 + 2);
        unint64_t v395 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        int __s = (char *)*((int *)v12 + 3);
        if (v393)
        {
          char v398 = *v393;
          int v397 = v393 + 1;
          char v396 = v398;
          uint64_t v399 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
          do
          {
            sub_1B0CBCF8C(v399, v396, v1557);
            if (*(v397 - 1) == 69)
            {
              __int16 v401 = *(_WORD *)(v399 + 20);
              if ((v401 & 4) != 0) {
                *(_WORD *)(v399 + 20) = v401 & 0xFFDB | 0x20;
              }
            }
            v399 += 64;
            int v400 = *v397++;
            char v396 = v400;
          }
          while (v400);
        }
        unint64_t v1511 = v18;
        v1519 = v12;
        uint64_t v641 = 0;
        int v642 = 0;
        uint64_t v643 = 0;
        uint64_t v644 = v395 + (v394 << 6) - 64;
        v1499 = (_DWORD *)(v1570 + ((void)__s << 6));
        uint64_t v645 = (int *)v644;
        unsigned int v1550 = v19;
        while (1)
        {
          unsigned int v646 = *((unsigned __int16 *)v645 + 10);
          if (v646)
          {
            v645[9] = ((int)(v646 << 21) >> 31) & 0xA;
            ++v642;
          }
          else
          {
            if ((v646 & 0x24) == 0)
            {
              if ((v646 & 8) == 0)
              {
                unsigned int v649 = v645[4];
                unsigned int v650 = ((v646 >> 1) & 1 | (2 * v649)) + 12;
                if ((v646 & 0x400) != 0)
                {
                  uint64_t v651 = *v645;
                  v650 += 2 * v651;
                  if (v641)
                  {
                    signed int v652 = v651 + v649;
                    if ((int)(v651 + v649) > 0)
                    {
                      uint64_t v653 = v643;
                      goto LABEL_769;
                    }
                    if ((v646 & 0x10) != 0)
                    {
                      uint64_t v653 = v643;
                      signed int v652 = 1;
LABEL_769:
                      if (sub_1B0CA0CF0((uint64_t)v645, v652, 1))
                      {
                        uint64_t v11 = v1540;
                        unint64_t v18 = v1511;
                        uint64_t v12 = v1519;
                        LOBYTE(v19) = v1550;
                        goto LABEL_8;
                      }
                      bzero((void *)(*((void *)v645 + 1) + v645[4]), *v645);
                      int v654 = *v645;
                      v645[4] += *v645;
                      *((_WORD *)v645 + 10) &= 0xF9FFu;
                      v649 += v654;
                      uint64_t v643 = v653;
                    }
                    else
                    {
                      v649 += v651;
                    }
                  }
                  else
                  {
                    v643 += v651;
                  }
                }
                if (v650 >= 0x80)
                {
                  unint64_t v656 = v650;
                  int v655 = 1;
                  do
                  {
                    unint64_t v657 = v656 >> 14;
                    v656 >>= 7;
                    ++v655;
                  }
                  while (v657);
                }
                else
                {
                  int v655 = 1;
                }
                v641 += v649;
                v642 += v655;
                v645[9] = v650;
                uint64_t v19 = v1550;
                goto LABEL_740;
              }
              ++v642;
              v641 += 8;
LABEL_756:
              v645[9] = 7;
              goto LABEL_740;
            }
            uint64_t v647 = *(void *)v645;
            unint64_t v648 = *(void *)v645 ^ (*(uint64_t *)v645 >> 63);
            ++v642;
            if (v648 <= 0x7F)
            {
              if ((unint64_t)v647 > 1 || *(unsigned __int8 *)(v1540 + 265) < 4u)
              {
                ++v641;
                v645[9] = 1;
              }
              else
              {
                v645[9] = v648 + 8;
              }
              goto LABEL_740;
            }
            if (v648 >> 15)
            {
              if (!(v648 >> 23))
              {
                v641 += 3;
                v645[9] = 3;
                goto LABEL_740;
              }
              if (!(v648 >> 31))
              {
                v641 += 4;
                v645[9] = 4;
                goto LABEL_740;
              }
              if (!(v648 >> 47))
              {
                v641 += 6;
                v645[9] = 5;
                goto LABEL_740;
              }
              v641 += 8;
              if ((v646 & 0x20) == 0)
              {
                v645[9] = 6;
                goto LABEL_740;
              }
              *(double *)a2.i64 = (double)v647;
              *(double *)uint64_t v645 = (double)v647;
              *((_WORD *)v645 + 10) = v646 & 0xFFD7 | 8;
              goto LABEL_756;
            }
            v641 += 2;
            v645[9] = 2;
          }
LABEL_740:
          BOOL v449 = v645 == (int *)v395;
          v645 -= 16;
          if (v449)
          {
            if (v642 > 126)
            {
              if (v642 == 127)
              {
                int v739 = 1;
              }
              else
              {
                unint64_t v1013 = v642;
                int v739 = 1;
                do
                {
                  unint64_t v1014 = v1013 >> 14;
                  v1013 >>= 7;
                  ++v739;
                }
                while (v1014);
              }
              int v1015 = v739 + v642;
              if ((v739 + v642) >= 0x80)
              {
                unint64_t v1017 = v1015;
                int v1016 = 1;
                unint64_t v18 = v1511;
                uint64_t v12 = v1519;
                do
                {
                  unint64_t v1018 = v1017 >> 14;
                  v1017 >>= 7;
                  ++v1016;
                }
                while (v1018);
              }
              else
              {
                int v1016 = 1;
                unint64_t v18 = v1511;
                uint64_t v12 = v1519;
              }
              if (v739 >= v1016) {
                int v658 = v1015;
              }
              else {
                int v658 = v1015 + 1;
              }
            }
            else
            {
              int v658 = v642 + 1;
              unint64_t v18 = v1511;
              uint64_t v12 = v1519;
            }
            unint64_t v1019 = v658;
            uint64_t v1020 = v641 + v658;
            unint64_t v1021 = v1570 + ((void)__s << 6);
            if (v1020 + v643 <= *(int *)(v1021 + 32))
            {
              *(void *)(v1021 + 8) = *(void *)(v1021 + 40);
            }
            else
            {
              if (v1020 + v643 > *(int *)(v13 + 136)) {
                goto LABEL_2739;
              }
              uint64_t v1022 = v643;
              int v1023 = sub_1B0D184D4((uint64_t)v1499, v1020);
              uint64_t v643 = v1022;
              if (v1023) {
                goto LABEL_2632;
              }
            }
            unint64_t v1024 = v1570 + ((void)__s << 6);
            *(_WORD *)(v1024 + 20) = 16;
            *(_DWORD *)(v1024 + 16) = v1020;
            if (v643)
            {
              _DWORD *v1499 = v643;
              *(_WORD *)(v1024 + 20) = 1040;
            }
            int v1025 = *(unsigned char **)(v1024 + 8);
            if ((int)v1019 > 127)
            {
              v1026 = (int8x8_t *)&v1025[(int)sub_1B0D19E38(*(int8x8_t **)(v1024 + 8), v1019)];
            }
            else
            {
              *int v1025 = v1019;
              v1026 = (int8x8_t *)(v1025 + 1);
            }
            int v1027 = &v1025[v1019];
            while (2)
            {
              unint64_t v1028 = *(unsigned int *)(v395 + 36);
              if (v1028 <= 7)
              {
                v1026->i8[0] = v1028;
                v1026 = (int8x8_t *)((char *)v1026 + 1);
                if (v1028)
                {
                  unint64_t v1029 = *(void *)v395;
                  unsigned int v1030 = byte_1B0DE2184[v1028];
                  uint64_t v1031 = &v1027[v1030 - 1];
                  unsigned int v1032 = v1030;
                  do
                  {
                    *v1031-- = v1029;
                    v1029 >>= 8;
                    --v1032;
                  }
                  while (v1032);
                  v1027 += v1030;
                }
LABEL_1641:
                BOOL v449 = v395 == v644;
                v395 += 64;
                if (v449)
                {
LABEL_2532:
                  LOWORD(v16) = v1569;
                  uint64_t v11 = v1540;
                  v12 += 40;
                  goto LABEL_22;
                }
                continue;
              }
              break;
            }
            if (v1028 > 0x7F)
            {
              if (v1028 >> 14)
              {
                int v1033 = sub_1B0D1DC5C(v1026, v1028);
              }
              else
              {
                v1026->i8[0] = (v1028 >> 7) | 0x80;
                v1026->i8[1] = v1028 & 0x7F;
                int v1033 = 2;
              }
              v1026 = (int8x8_t *)((char *)v1026 + v1033);
              a6 = *(int *)(v395 + 16);
              if (!a6) {
                goto LABEL_1641;
              }
            }
            else
            {
              v1026->i8[0] = v1028;
              v1026 = (int8x8_t *)((char *)v1026 + 1);
              if (v1028 < 0xE) {
                goto LABEL_1641;
              }
              a6 = *(unsigned int *)(v395 + 16);
              if ((int)a6 < 1) {
                goto LABEL_1641;
              }
            }
            memcpy(v1027, *(const void **)(v395 + 8), a6);
            v1027 += *(int *)(v395 + 16);
            goto LABEL_1641;
          }
        }
      case 0x62u:
        *(void *)&__buf[0] = 0;
        if (*((_DWORD *)v12 + 3))
        {
          *(void *)&__buf[0] = sub_1B0D19E74(*(void *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1))
                                                         + 40));
        }
        else
        {
          int v62 = sub_1B0CD403C(v13, *(void *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1)) + 40), __buf);
          if (v62) {
            goto LABEL_2597;
          }
          int v1558 = 0;
        }
        uint64_t v807 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        uint64_t v259 = v19;
        if ((*(_WORD *)(v807 + 20) & 0x9000) != 0) {
          uint64_t v807 = sub_1B0D1D578(v807);
        }
        else {
          *(_WORD *)(v807 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        *(void *)uint64_t v807 = *(void *)&__buf[0];
        LODWORD(v19) = v1558;
        goto LABEL_1757;
      case 0x63u:
        uint64_t v402 = *((int *)v12 + 3);
        uint64_t v403 = *(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8);
        uint64_t v404 = *(void **)(v403 + 8);
        if (*(unsigned char *)(v403 + 17))
        {
          ++*(_DWORD *)(v403 + 20);
          if (!*(unsigned char *)(v403 + 18)) {
            sub_1B0D12478(v403);
          }
        }
        if (v402 == 15) {
          int v405 = *(_DWORD *)(v403 + 28) + *(_DWORD *)(*v404 + 132);
        }
        else {
          int v405 = bswap32(*(_DWORD *)(*(void *)(v404[3] + 80) + 4 * v402 + 36));
        }
        LOWORD(v16) = v1569;
        if (*(unsigned char *)(v403 + 17))
        {
          int v732 = *(_DWORD *)(v403 + 20) - 1;
          *(_DWORD *)(v403 + 20) = v732;
          if (!v732) {
            sub_1B0D12558(v403);
          }
        }
        uint64_t v733 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v733 + 20) & 0x9000) != 0) {
          uint64_t v733 = sub_1B0D1D578(v733);
        }
        else {
          *(_WORD *)(v733 + 20) = 4;
        }
        *(void *)uint64_t v733 = v405;
        v12 += 40;
        continue;
      case 0x64u:
        uint64_t v406 = *(void *)(v13 + 32);
        uint64_t v407 = *((int *)v12 + 1);
        uint64_t v408 = v406 + 32 * v407;
        int v409 = sub_1B0CE888C(*(void *)(v408 + 8), *((_DWORD *)v12 + 2), *((_DWORD *)v12 + 3));
        LODWORD(v20) = v409;
        int v410 = *((_DWORD *)v12 + 2);
        if (v410 == 2)
        {
          *(unsigned char *)(*(void *)(v408 + 24) + 112) = *((_DWORD *)v12 + 3);
        }
        else if (v410 == 1)
        {
          int v411 = v409;
          **(_DWORD **)(v406 + 32 * v407 + 24) = *((_DWORD *)v12 + 3) - *((unsigned __int16 *)v12 + 1);
          *(_DWORD *)(v13 + 44) |= 1u;
          sub_1B0D1A148((void *)v13, *((_DWORD *)v12 + 1));
          LODWORD(v20) = v411;
        }
        LOWORD(v16) = v1569;
        if (*((_DWORD *)v12 + 1) == 1)
        {
          for (uint64_t m = *(void *)(v13 + 8); m; uint64_t m = *(void *)(m + 16))
            *(_WORD *)(m + 268) = *(_WORD *)(m + 268) & 0xFFFC | 1;
          *(_WORD *)(v11 + 268) &= 0xFFFCu;
        }
        if (v20) {
          goto LABEL_2742;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0x65u:
        uint64_t v412 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        if (!v412 || *(_DWORD *)(v412 + 60) != *((_DWORD *)v12 + 2)) {
          goto LABEL_485;
        }
        sub_1B0D15B64(*(void *)(v412 + 40));
        int v62 = v1558;
        goto LABEL_1887;
      case 0x66u:
      case 0x67u:
      case 0x68u:
      case 0x69u:
        uint64_t v16 = v11;
        uint64_t v64 = *((int *)v12 + 1);
        uint64_t v63 = *((int *)v12 + 2);
        uint64_t v65 = *((int *)v12 + 3);
        double v66 = (char *)(v1570 + (v65 << 6));
        unint64_t v67 = v1570 + (v64 << 6);
        LOBYTE(v68) = *(_WORD *)(v67 + 20);
        uint64_t v69 = v1570 + (v63 << 6);
        int v70 = *(unsigned __int16 *)(v69 + 20);
        if ((v70 | *(unsigned __int16 *)(v67 + 20)))
        {
          if ((*((_WORD *)v66 + 10) & 0x9000) != 0) {
            sub_1B0D18138((int *)(v1570 + (v65 << 6)));
          }
          else {
            *((_WORD *)v66 + 10) = 1;
          }
          uint64_t v11 = v16;
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        if ((v70 & 0x24) != 0)
        {
          uint64_t v71 = *(void *)v69;
        }
        else if ((v70 & 8) != 0)
        {
          a2.i64[0] = *(void *)v69;
          if (*(double *)v69 >= -9.22337204e18)
          {
            if (*(double *)a2.i64 <= 9.22337204e18) {
              uint64_t v71 = (uint64_t)*(double *)a2.i64;
            }
            else {
              uint64_t v71 = 0x7FFFFFFFFFFFFFFFLL;
            }
          }
          else
          {
            uint64_t v71 = 0x8000000000000000;
          }
        }
        else if ((v70 & 0x12) != 0 && *(void *)(v1570 + (v63 << 6) + 8))
        {
          __suint64_t m = (char *)(v1570 + (v65 << 6));
          uint64_t v667 = *((int *)v12 + 3);
          uint64_t v668 = sub_1B0D186C0(v69);
          uint64_t v65 = v667;
          double v66 = __sm;
          uint64_t v71 = v668;
          __int16 v68 = *(_WORD *)(v67 + 20);
        }
        else
        {
          uint64_t v71 = 0;
        }
        if ((v68 & 0x24) != 0)
        {
          uint64_t v72 = *(void *)v67;
        }
        else
        {
          if ((v68 & 8) != 0)
          {
            a2.i64[0] = *(void *)v67;
            __int16 v73 = v1569;
            uint64_t v11 = v16;
            if (*(double *)v67 >= -9.22337204e18)
            {
              if (*(double *)a2.i64 <= 9.22337204e18) {
                uint64_t v72 = (uint64_t)*(double *)a2.i64;
              }
              else {
                uint64_t v72 = 0x7FFFFFFFFFFFFFFFLL;
              }
            }
            else
            {
              uint64_t v72 = 0x8000000000000000;
            }
LABEL_59:
            int v74 = *v12;
            if (v74 == 103)
            {
              v71 |= v72;
              LOWORD(v16) = v73;
            }
            else
            {
              LOWORD(v16) = v73;
              if (v74 == 102)
              {
                v71 &= v72;
              }
              else if (v72)
              {
                uint64_t v693 = 64;
                if (v72 > -64) {
                  uint64_t v693 = -v72;
                }
                if (v72 < 0) {
                  LOBYTE(v74) = -47 - v74;
                }
                else {
                  uint64_t v693 = v72;
                }
                unint64_t v694 = (unint64_t)v71 >> v693;
                if (v71 < 0) {
                  unint64_t v694 = (-1 << -(char)v693) | ((unint64_t)v71 >> v693);
                }
                if (v74 == 104) {
                  unint64_t v694 = v71 << v693;
                }
                uint64_t v696 = v71 < 0 && v74 != 104;
                uint64_t v697 = v696 << 63 >> 63;
                if (v693 >= 64) {
                  uint64_t v71 = v697;
                }
                else {
                  uint64_t v71 = v694;
                }
              }
            }
            *(void *)double v66 = v71;
            *(_WORD *)(v1570 + (v65 << 6) + 20) = *(_WORD *)(v1570 + (v65 << 6) + 20) & 0xF240 | 4;
            v12 += 40;
            continue;
          }
          if ((v68 & 0x12) != 0 && *(void *)(v1570 + (v64 << 6) + 8))
          {
            uint64_t v669 = v66;
            uint64_t v670 = v65;
            uint64_t v72 = sub_1B0D186C0(v1570 + (v64 << 6));
            uint64_t v65 = v670;
            double v66 = v669;
          }
          else
          {
            uint64_t v72 = 0;
          }
        }
        __int16 v73 = v1569;
        uint64_t v11 = v16;
        goto LABEL_59;
      case 0x6Au:
      case 0x6Bu:
      case 0x6Cu:
      case 0x6Du:
      case 0x6Eu:
        unint64_t v35 = v18;
        unsigned int v1542 = v19;
        *(void *)&__buf[0] = 0;
        uint64_t v36 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        uint64_t v38 = (__int16 *)(v36 + 20);
        int v37 = *(unsigned __int16 *)(v36 + 20);
        uint64_t v39 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
        int v41 = (_WORD *)(v39 + 20);
        int v40 = *(unsigned __int16 *)(v39 + 20);
        uint64_t v42 = *((int *)v12 + 3);
        uint64_t v43 = (int *)(v1570 + (v42 << 6));
        if ((v37 & v40 & 4) != 0) {
          goto LABEL_31;
        }
        if ((v40 | v37))
        {
LABEL_1311:
          unint64_t v878 = v1570 + (v42 << 6);
          __int16 v880 = *(_WORD *)(v878 + 20);
          uint64_t v879 = (_WORD *)(v878 + 20);
          if ((v880 & 0x9000) != 0) {
            sub_1B0D18138(v43);
          }
          else {
            *uint64_t v879 = 1;
          }
LABEL_1956:
          uint64_t v11 = v1540;
          uint64_t v19 = v1542;
          LOWORD(v16) = v1569;
          unint64_t v18 = v35;
          v12 += 40;
          continue;
        }
        v1516 = v12;
        unint64_t v128 = v35;
        int v129 = v37 & 0x2D;
        if ((v37 & 0x2D) == 0)
        {
          int v130 = sub_1B0D1D62C((int *)v36);
          uint64_t v43 = (int *)(v1570 + (v42 << 6));
          int v129 = v130;
          LOWORD(v40) = *v41;
        }
        int v131 = v40 & 0x2D;
        if ((v40 & 0x2D) == 0)
        {
          uint64_t v132 = v43;
          int v131 = sub_1B0D1D62C((int *)v39);
          uint64_t v43 = v132;
        }
        unint64_t v35 = v128;
        uint64_t v12 = v1516;
        if ((v129 & v131 & 4) == 0) {
          goto LABEL_848;
        }
        unint64_t v23 = *v1516;
LABEL_31:
        int64_t v44 = *(void *)v36;
        uint64_t v45 = *(void *)v39;
        *(void *)&__buf[0] = *(void *)v39;
        switch(v23)
        {
          case 'j':
            if (v44 < 0)
            {
              if (v45 < 0 && (uint64_t)(0x8000000000000001 - v45) > v44 + 1)
              {
LABEL_848:
                __int16 v683 = *v38;
                if ((*v38 & 8) != 0)
                {
                  double v684 = *(double *)v36;
                }
                else if ((v683 & 0x24) != 0)
                {
                  double v684 = (double)*(uint64_t *)v36;
                }
                else if ((v683 & 0x12) != 0)
                {
                  uint64_t v883 = v43;
                  *(double *)a2.i64 = sub_1B0D18684(v36);
                  uint64_t v43 = v883;
                  double v684 = *(double *)a2.i64;
                }
                else
                {
                  double v684 = 0.0;
                }
                __int16 v685 = *v41;
                if ((*v41 & 8) != 0)
                {
                  a2.i64[0] = *(void *)v39;
                }
                else if ((v685 & 0x24) != 0)
                {
                  *(double *)a2.i64 = (double)*(uint64_t *)v39;
                }
                else if ((v685 & 0x12) != 0)
                {
                  uint64_t v884 = v43;
                  *(double *)a2.i64 = sub_1B0D18684(v39);
                  uint64_t v43 = v884;
                }
                else
                {
                  a2.i64[0] = 0;
                }
                switch(*v12)
                {
                  case 'j':
                    *(double *)a2.i64 = v684 + *(double *)a2.i64;
                    break;
                  case 'k':
                    *(double *)a2.i64 = *(double *)a2.i64 - v684;
                    break;
                  case 'l':
                    *(double *)a2.i64 = v684 * *(double *)a2.i64;
                    break;
                  case 'm':
                    if (v684 == 0.0) {
                      goto LABEL_1311;
                    }
                    *(double *)a2.i64 = *(double *)a2.i64 / v684;
                    break;
                  default:
                    uint64_t v873 = v36;
                    uint64_t v874 = v43;
                    uint64_t v875 = sub_1B0CBD0F8(v873);
                    uint64_t v876 = sub_1B0CBD0F8(v39);
                    uint64_t v43 = v874;
                    *(void *)&__buf[0] = v876;
                    if (!v875) {
                      goto LABEL_1311;
                    }
                    if (v875 == -1) {
                      uint64_t v877 = 1;
                    }
                    else {
                      uint64_t v877 = v875;
                    }
                    *(double *)a2.i64 = (double)(v876 % v877);
                    break;
                }
                *(void *)uint64_t v43 = a2.i64[0];
                unint64_t v1002 = v1570 + (v42 << 6);
                __int16 v1003 = *(_WORD *)(v1002 + 20) & 0xF240 | 8;
LABEL_1955:
                *(_WORD *)(v1002 + 20) = v1003;
                goto LABEL_1956;
              }
            }
            else
            {
              BOOL v46 = v45 < 1 || (v45 ^ 0x7FFFFFFFFFFFFFFFuLL) >= v44;
              if (!v46) {
                goto LABEL_848;
              }
            }
            uint64_t v680 = v45 + v44;
            goto LABEL_1572;
          case 'k':
            uint64_t v681 = v43;
            int v682 = sub_1B0D193FC((uint64_t *)__buf, v44);
            goto LABEL_847;
          case 'l':
            uint64_t v681 = v43;
            int v682 = sub_1B0D19478((uint64_t *)__buf, v44);
LABEL_847:
            uint64_t v43 = v681;
            if (v682) {
              goto LABEL_848;
            }
            goto LABEL_1573;
          case 'm':
            if (!v44) {
              goto LABEL_1311;
            }
            if (v44 == -1 && v45 == 0x8000000000000000) {
              goto LABEL_848;
            }
            uint64_t v680 = v45 / v44;
            goto LABEL_1572;
          default:
            if (!v44) {
              goto LABEL_1311;
            }
            if (v44 == -1) {
              uint64_t v679 = 1;
            }
            else {
              uint64_t v679 = v44;
            }
            uint64_t v680 = v45 % v679;
LABEL_1572:
            *(void *)&__buf[0] = v680;
LABEL_1573:
            *(void *)uint64_t v43 = *(void *)&__buf[0];
            unint64_t v1002 = v1570 + (v42 << 6);
            __int16 v1003 = *(_WORD *)(v1002 + 20) & 0xF240 | 4;
            goto LABEL_1955;
        }
      case 0x6Fu:
        unsigned int v1541 = v19;
        uint64_t v424 = *((int *)v12 + 1);
        uint64_t v423 = (char *)*((int *)v12 + 2);
        uint64_t v425 = v1570 + (v424 << 6);
        uint64_t v426 = v1570 + ((void)v423 << 6);
        uint64_t v427 = *((int *)v12 + 3);
        uint64_t v428 = v1570 + (v427 << 6);
        int v430 = (char *)(v425 + 20);
        __int16 v429 = *(_WORD *)(v425 + 20);
        uint64_t v432 = (_WORD *)(v426 + 20);
        __int16 v431 = *(_WORD *)(v426 + 20);
        if (v431 & 1 | v429 & 1)
        {
          LOWORD(v16) = v1569;
          if ((*(_WORD *)(v428 + 20) & 0x9000) != 0) {
            sub_1B0D18138((int *)(v1570 + (v427 << 6)));
          }
          else {
            *(_WORD *)(v428 + 20) = 1;
          }
LABEL_1780:
          uint64_t v11 = v1540;
          uint64_t v19 = v1541;
          v12 += 40;
          continue;
        }
        unsigned int __sa = (char *)*((int *)v12 + 2);
        if ((v429 & 0x12) != 0)
        {
          if ((*(_WORD *)(v425 + 20) & 0x400) == 0)
          {
LABEL_1765:
            __int16 v1503 = v429;
            if ((v431 & 0x12) != 0)
            {
              if ((v431 & 0x400) == 0)
              {
LABEL_1794:
                __sg = v430;
                uint64_t v1495 = v424;
                unint64_t v1076 = v1570 + (v424 << 6);
                uint64_t v1079 = *(int *)(v1076 + 16);
                uint64_t v1078 = (int *)(v1076 + 16);
                uint64_t v1077 = v1079;
                unint64_t v1080 = v1570 + ((void)v423 << 6);
                uint64_t v1082 = *(int *)(v1080 + 16);
                v1081 = (int *)(v1080 + 16);
                unint64_t v1083 = v1082 + v1077;
                LOBYTE(v19) = v1541;
                if ((int)v1082 + (int)v1077 > *(_DWORD *)(v13 + 136)) {
                  goto LABEL_2739;
                }
                __int16 v1487 = v431;
                v1490 = v432;
                uint64_t v1084 = v428;
                v1085 = v423;
                uint64_t v1086 = v427;
                if (!sub_1B0CA0CF0(v1084, (int)v1083 + 2, v427 == v423))
                {
                  v1523 = v12;
                  unint64_t v1087 = v1570 + (v1086 << 6);
                  *(_WORD *)(v1087 + 20) = *(_WORD *)(v1087 + 20) & 0xF240 | 2;
                  if (v1086 != v1085)
                  {
                    memcpy(*(void **)(v1087 + 8), *(const void **)(v1570 + ((void)v1085 << 6) + 8), *v1081);
                    _WORD *v1490 = v1487;
                  }
                  memcpy((void *)(*(void *)(v1087 + 8) + *v1081), *(const void **)(v1570 + (v1495 << 6) + 8), *v1078);
                  uint64_t v11 = v1540;
                  *(_WORD *)__sg = v1503;
                  unint64_t v1088 = v1083 & 0xFFFFFFFFFFFFFFFELL;
                  if (v1557 <= 1) {
                    unint64_t v1088 = v1083;
                  }
                  *(unsigned char *)(*(void *)(v1087 + 8) + v1088) = 0;
                  *(unsigned char *)(v1088 + *(void *)(v1087 + 8) + 1) = 0;
                  *(_WORD *)(v1087 + 20) |= 0x200u;
                  *(_DWORD *)(v1087 + 16) = v1088;
                  *(unsigned char *)(v1087 + 22) = v1557;
                  uint64_t v19 = v1541;
                  LOWORD(v16) = v1569;
                  uint64_t v12 = v1523 + 40;
                  continue;
                }
                goto LABEL_2632;
              }
              uint64_t v1074 = v427;
              if (sub_1B0CC9B18((int *)v426)) {
                goto LABEL_2674;
              }
LABEL_1793:
              __int16 v431 = *v432 & 0xFFFD;
              uint64_t v423 = __sa;
              uint64_t v427 = v1074;
              goto LABEL_1794;
            }
            uint64_t v1074 = v427;
            if (!sub_1B0CAD780(v426, v1557, 0)) {
              goto LABEL_1793;
            }
LABEL_2674:
            uint64_t v11 = v1540;
            LOBYTE(v19) = v1541;
            goto LABEL_8;
          }
          uint64_t v433 = *((int *)v12 + 3);
          if (sub_1B0CC9B18((int *)v425)) {
            goto LABEL_2674;
          }
        }
        else
        {
          uint64_t v433 = *((int *)v12 + 3);
          if (sub_1B0CAD780(v425, v1557, 0)) {
            goto LABEL_2674;
          }
        }
        __int16 v429 = *(_WORD *)v430 & 0xFFFD;
        __int16 v431 = *v432;
        uint64_t v423 = __sa;
        uint64_t v427 = v433;
        goto LABEL_1765;
      case 0x70u:
      case 0x71u:
LABEL_485:
        if ((*(_WORD *)(v11 + 268) & 3) == 1)
        {
          LODWORD(v20) = 516;
          goto LABEL_2742;
        }
        uint64_t v413 = v11;
        unsigned int v1546 = v19;
        uint64_t v414 = *((unsigned int *)v12 + 2);
        uint64_t v415 = *((int *)v12 + 3);
        uint64_t v416 = *(void *)(v13 + 32) + 32 * v415;
        __int16 v417 = *((_WORD *)v12 + 1);
        uint64_t v1560 = *(void *)(v416 + 8);
        if (v23 == 113)
        {
          uint64_t v418 = v417 & 8 | 4u;
          unsigned int v419 = *(unsigned __int8 *)(*(void *)(v416 + 24) + 112);
          if (v419 < *(unsigned __int8 *)(v413 + 265)) {
            *(unsigned char *)(v413 + 265) = v419;
          }
        }
        else
        {
          uint64_t v418 = 0;
        }
        LODWORD(v420) = v414;
        if ((v417 & 0x10) == 0) {
          goto LABEL_1880;
        }
        unint64_t v421 = v1570 + (v414 << 6);
        if (v1570)
        {
          __int16 v422 = *(_WORD *)(v421 + 20);
          if ((v422 & 0x24) != 0)
          {
            double v420 = *(double *)v421;
            goto LABEL_1879;
          }
          if ((v422 & 8) != 0)
          {
            uint64_t v1130 = 0x7FFFFFFFFFFFFFFFLL;
            if (*(double *)v421 <= 9.22337204e18) {
              uint64_t v1130 = (uint64_t)*(double *)v421;
            }
            if (*(double *)v421 >= -9.22337204e18) {
              double v420 = *(double *)&v1130;
            }
            else {
              double v420 = -0.0;
            }
LABEL_1879:
            *(double *)unint64_t v421 = v420;
            *(_WORD *)(v1570 + (v414 << 6) + 20) = *(_WORD *)(v1570 + (v414 << 6) + 20) & 0xF240 | 4;
LABEL_1880:
            int v1131 = v12[1];
            if (v1131 == 253)
            {
              uint64_t v1132 = 0;
              int v1133 = *((_DWORD *)v12 + 4);
            }
            else if (v1131 == 248)
            {
              uint64_t v1132 = *((void *)v12 + 2);
              int v1133 = *(unsigned __int16 *)(v1132 + 8);
            }
            else
            {
              int v1133 = 0;
              uint64_t v1132 = 0;
            }
            uint64_t v1134 = sub_1B0CACC34(v413, *((_DWORD *)v12 + 1), v1133, 0);
            if (v1134)
            {
              uint64_t v412 = v1134;
              *(unsigned char *)(v1134 + 1) = v415;
              *(unsigned char *)(v1134 + 2) = 1;
              *(unsigned char *)(v1134 + 5) |= 4u;
              *(_DWORD *)(v1134 + 60) = LODWORD(v420);
              int v62 = sub_1B0D1A1D4(v1560, LODWORD(v420), v418, v1132, *(void *)(v1134 + 40));
              *(void *)(v412 + 48) = v1132;
              *(unsigned char *)(v412 + 4) = v12[1] != 248;
              uint64_t v19 = v1546;
              uint64_t v11 = v413;
LABEL_1887:
              *(unsigned char *)(*(void *)(v412 + 40) + 3) = v12[2] & 3;
              if (v62) {
                goto LABEL_2597;
              }
LABEL_1888:
              int v1558 = 0;
              LOWORD(v16) = v1569;
              v12 += 40;
              continue;
            }
            LOBYTE(v19) = v1546;
            uint64_t v11 = v413;
LABEL_8:
            if (!*(unsigned char *)(v13 + 103) && !*(unsigned char *)(v13 + 104))
            {
              *(unsigned char *)(v13 + 103) = 1;
              if (*(int *)(v13 + 220) >= 1) {
                *(_DWORD *)(v13 + 424) = 1;
              }
              ++*(_DWORD *)(v13 + 432);
              *(_WORD *)(v13 + 436) = 0;
              uint64_t v21 = *(void *)(v13 + 344);
              if (v21)
              {
                sub_1B0CEF2BC(v21, "out of memory", a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
                for (uint64_t n = *(void *)(v13 + 344); ; ++*(_DWORD *)(n + 48))
                {
                  *(_DWORD *)(n + 24) = 7;
                  uint64_t n = *(void *)(n + 256);
                  if (!n) {
                    break;
                  }
                }
              }
            }
            sub_1B0D17334((uint64_t *)v11, "out of memory", a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
            LODWORD(v20) = 7;
            goto LABEL_2742;
          }
          if ((v422 & 0x12) != 0 && *(void *)(v1570 + (v414 << 6) + 8))
          {
            double v420 = COERCE_DOUBLE(sub_1B0D186C0(v1570 + (v414 << 6)));
            goto LABEL_1879;
          }
        }
        else
        {
          sub_1B0CE1978(89717);
        }
        double v420 = 0.0;
        goto LABEL_1879;
      case 0x72u:
        uint64_t v434 = *((int *)v12 + 1);
        unint64_t v435 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
        uint64_t v436 = (_WORD *)(v435 + 20);
        if ((*(_WORD *)(v435 + 20) & 0x9000) != 0) {
          sub_1B0D18138((int *)(v1570 + ((uint64_t)*((int *)v12 + 2) << 6)));
        }
        else {
          *uint64_t v436 = 1;
        }
        LOWORD(v16) = v1569;
        uint64_t v808 = v1570 + (v434 << 6);
        if (*(_WORD *)(v808 + 20)) {
          goto LABEL_21;
        }
        *uint64_t v436 = 4;
        *(void *)unint64_t v435 = ~sub_1B0CBD0F8(v808);
        v12 += 40;
        continue;
      case 0x73u:
        uint64_t v437 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 2));
        uint64_t v438 = sub_1B0CACC34(v11, *((_DWORD *)v12 + 1), *(__int16 *)(v437 + 64), 0);
        if (!v438) {
          goto LABEL_8;
        }
        *(unsigned char *)(v438 + 2) = 1;
        char v439 = *(unsigned char *)(v438 + 5) | 1;
        *(unsigned char *)(v438 + 5) = v439;
        *(void *)(v438 + 48) = *(void *)(v437 + 48);
        *(unsigned char *)(v438 + 4) = *(unsigned char *)(v437 + 4);
        *(_DWORD *)(v438 + 60) = *(_DWORD *)(v437 + 60);
        char v440 = v439 & 0xFB | (4 * ((*(unsigned char *)(v437 + 5) & 4) != 0));
        *(unsigned char *)(v438 + 5) = v440;
        *(void *)(v438 + 8) = *(void *)(v437 + 8);
        *(unsigned char *)(v438 + 5) = v440 | 8;
        *(unsigned char *)(v437 + 5) |= 8u;
        int v1558 = sub_1B0D1A1D4(*(void *)(v438 + 8), *(_DWORD *)(v438 + 60), 4, *(void *)(v438 + 48), *(void *)(v438 + 40));
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x74u:
      case 0x76u:
        uint64_t v103 = *((unsigned int *)v12 + 3);
        if ((int)v103 >= 1)
        {
          unint64_t v104 = v1570 + (v103 << 6);
          *(_DWORD *)(v104 + 16) = 0;
          *(void *)(v104 + 8) = &byte_1B0DE9952;
        }
        uint64_t v105 = *((int *)v12 + 1);
        uint64_t v106 = *(void *)(*(void *)(v11 + 120) + 8 * v105);
        if (v106 && (*(unsigned char *)(v106 + 5) & 8) == 0 && *((_DWORD *)v12 + 2) <= *(__int16 *)(v106 + 64))
        {
          *(void *)(v106 + 16) = 0;
          *(_DWORD *)(v106 + 24) = 0;
          int v62 = sub_1B0CDBF48(*(void *)(v106 + 8), *(_DWORD *)(v106 + 60), 0);
          LOWORD(v16) = v1569;
          if (v62) {
            goto LABEL_2597;
          }
LABEL_1577:
          int v1558 = 0;
          *(unsigned char *)(v106 + 2) = 1;
          v12 += 40;
          continue;
        }
        uint64_t v107 = sub_1B0CACC34(v11, v105, *((_DWORD *)v12 + 2), 0);
        LOWORD(v16) = v1569;
        if (!v107) {
          goto LABEL_8;
        }
        uint64_t v106 = v107;
        *(unsigned char *)(v107 + 5) |= 1u;
        int v108 = (uint64_t *)(v107 + 8);
        int v62 = sub_1B0C79F48(*(void *)v13, 0, v13, (uint64_t *)(v107 + 8), *((_WORD *)v12 + 1) | 5u, 0x41Eu);
        if (v62) {
          goto LABEL_2597;
        }
        uint64_t v109 = *v108;
        if (*(unsigned char *)(*v108 + 17) || *(unsigned __int8 *)(v109 + 16) <= 1u)
        {
          int v110 = sub_1B0D12594(v109, 1, 0);
          if (v110) {
            goto LABEL_1576;
          }
        }
        else
        {
          uint64_t v915 = *(void *)v109;
          uint64_t v916 = **(void **)(v109 + 8);
          int v917 = *(_DWORD *)(v915 + 788);
          if (*(_DWORD *)(v916 + 128) < v917)
          {
            if (*(unsigned char *)(v916 + 10))
            {
              int v110 = sub_1B0D13268(v916, v917);
              if (v110) {
                goto LABEL_1576;
              }
            }
          }
        }
        uint64_t v918 = *((void *)v12 + 2);
        *(void *)(v106 + 48) = v918;
        if (v918)
        {
          int v110 = sub_1B0D1A434(*(void *)(v106 + 8), (unsigned int *)(v106 + 60), *((_WORD *)v12 + 1) | 2u);
          if (!v110) {
            int v110 = sub_1B0D1A1D4(*(void *)(v106 + 8), *(_DWORD *)(v106 + 60), 4, v918, *(void *)(v106 + 40));
          }
          char v919 = 0;
        }
        else
        {
          char v919 = 1;
          *(_DWORD *)(v106 + 60) = 1;
          int v110 = sub_1B0D1A1D4(*(void *)(v106 + 8), 1u, 4, 0, *(void *)(v106 + 40));
        }
        *(unsigned char *)(v106 + 4) = v919;
LABEL_1576:
        *(unsigned char *)(v106 + 5) = *(unsigned char *)(v106 + 5) & 0xFB | (4 * (*((_WORD *)v12 + 1) != 8));
        if (v110)
        {
          int v1433 = v110;
          sub_1B0CC70E4(*v108, *(double *)a2.i64);
          LODWORD(v20) = v1433;
          goto LABEL_2742;
        }
        goto LABEL_1577;
      case 0x75u:
        uint64_t v441 = *(void *)(v11 + 104);
        uint64_t v442 = *((int *)v12 + 2);
        uint64_t v443 = v441 + (v442 << 6);
        __int16 v445 = *(_WORD *)(v443 + 20);
        uint64_t v444 = (__int16 *)(v443 + 20);
        if ((v445 & 0x9000) != 0) {
          sub_1B0D1D578(v441 + (v442 << 6));
        }
        else {
          *uint64_t v444 = 4;
        }
        uint64_t v809 = (char *)*((void *)v12 + 2);
        if (v809) {
          int v810 = strlen(*((const char **)v12 + 2)) & 0x3FFFFFFF;
        }
        else {
          int v810 = 0;
        }
        *((_DWORD *)v12 + 1) = v810;
        if (v1557 == 1) {
          goto LABEL_1670;
        }
        if (sub_1B0C79BBC(v441 + (v442 << 6), v809, -1, 1u, 0)) {
          goto LABEL_2739;
        }
        __int16 v869 = *v444;
        uint64_t v870 = (unsigned char *)(v441 + (v442 << 6) + 22);
        if ((*v444 & 2) != 0)
        {
          if (*v870 != v1557)
          {
            if (sub_1B0CD43EC((int *)(v441 + (v442 << 6)), v1557))
            {
LABEL_2632:
              uint64_t v11 = v1540;
              goto LABEL_8;
            }
            __int16 v869 = *v444;
          }
        }
        else
        {
          *uint64_t v870 = v1557;
        }
        uint64_t v1036 = v441 + (v442 << 6);
        *(_DWORD *)(v1036 + 32) = 0;
        *uint64_t v444 = v869 | 0x2000;
        if (v12[1] == 250)
        {
          uint64_t v1037 = (void *)*((void *)v12 + 2);
          if (v1037) {
            sub_1B0D05C10((void *)v13, v1037);
          }
        }
        int v1558 = 0;
        v12[1] = -6;
        *((void *)v12 + 2) = *(void *)(v1036 + 8);
        int v810 = *(_DWORD *)(v1036 + 16);
        *((_DWORD *)v12 + 1) = v810;
LABEL_1670:
        if (v810 > *(_DWORD *)(v13 + 136)) {
          goto LABEL_2739;
        }
        *uint64_t v12 = 73;
        uint64_t v11 = v1540;
LABEL_1672:
        uint64_t v1038 = *(void *)(v11 + 104);
        uint64_t v1039 = *((int *)v12 + 2);
        uint64_t v1040 = v1038 + (v1039 << 6);
        __int16 v1042 = *(_WORD *)(v1040 + 20);
        uint64_t v1041 = (_WORD *)(v1040 + 20);
        if ((v1042 & 0x9000) != 0) {
          sub_1B0D1D578(v1038 + (v1039 << 6));
        }
        else {
          *uint64_t v1041 = 4;
        }
        *uint64_t v1041 = 8706;
        uint64_t v1043 = v1038 + (v1039 << 6);
        *(void *)(v1043 + 8) = *((void *)v12 + 2);
        *(_DWORD *)(v1043 + 16) = *((_DWORD *)v12 + 1);
        *(unsigned char *)(v1043 + 22) = v1557;
        uint64_t v1044 = *((unsigned int *)v12 + 3);
        LOWORD(v16) = v1569;
        if ((int)v1044 >= 1 && *(void *)(v1570 + (v1044 << 6)) == *((unsigned __int16 *)v12 + 1))
        {
          *uint64_t v1041 = 8720;
          v12 += 40;
          continue;
        }
        goto LABEL_21;
      case 0x77u:
        uint64_t v446 = sub_1B0CACC34(v11, *((_DWORD *)v12 + 1), *((_DWORD *)v12 + 2), 1);
        if (!v446) {
          goto LABEL_8;
        }
        uint64_t v447 = v446;
        uint64_t v448 = *((void *)v12 + 2);
        *(void *)(v446 + 48) = v448;
        BOOL v449 = *(unsigned char *)(v13 + 102) == 2 || word_1EB21C9C4 == 0;
        unint64_t v1509 = v18;
        unsigned int v1547 = v19;
        if (v449) {
          int v747 = 0;
        }
        else {
          int v747 = *(_DWORD *)(v13 + 180);
        }
        uint64_t v748 = v12;
        int v749 = *((_DWORD *)v12 + 3);
        uint64_t v750 = 8 * *(unsigned __int16 *)(v448 + 6) + 32;
        int v1561 = v747;
        int v751 = 104 * v747 + 200;
        uint64_t v752 = (void *)sub_1B0D05DC0(v13, v750 + v751);
        if (!v752)
        {
          *(void *)(v447 + 40) = 0;
          LODWORD(v20) = 7;
          unint64_t v18 = v1509;
          LOBYTE(v19) = v1547;
          uint64_t v12 = v748;
          uint64_t v11 = v1540;
          goto LABEL_2742;
        }
        int v753 = v752;
        bzero(v752, v750 + v751);
        *(void *)(v447 + 40) = v753;
        uint64_t v754 = *(void *)(*(void *)(v13 + 32) + 8);
        uint64_t v755 = (char *)v753 + v751;
        v753[5] = v755;
        memcpy(v755, *(const void **)(v447 + 48), v750);
        *((void *)v755 + 2) = 0;
        unsigned __int8 v756 = v1561;
        if (v749 && !v1561) {
          *((_WORD *)v755 + 3) = v749;
        }
        uint64_t v12 = v748;
        if (!*(unsigned char *)(v754 + 17))
        {
          int v758 = *(_DWORD *)(*(void *)(v754 + 8) + 52);
          *((_DWORD *)v753 + 3) = v758;
          uint64_t v11 = v1540;
          unint64_t v18 = v1509;
          uint64_t v19 = v1547;
          goto LABEL_1733;
        }
        int v757 = *(_DWORD *)(v754 + 20) + 1;
        *(_DWORD *)(v754 + 20) = v757;
        if (*(unsigned char *)(v754 + 18))
        {
          int v758 = *(_DWORD *)(*(void *)(v754 + 8) + 52);
          *((_DWORD *)v753 + 3) = v758;
          uint64_t v11 = v1540;
          unint64_t v18 = v1509;
          uint64_t v19 = v1547;
        }
        else
        {
          sub_1B0D12478(v754);
          int v1065 = *(unsigned __int8 *)(v754 + 17);
          int v758 = *(_DWORD *)(*(void *)(v754 + 8) + 52);
          *((_DWORD *)v753 + 3) = v758;
          uint64_t v11 = v1540;
          unint64_t v18 = v1509;
          uint64_t v19 = v1547;
          if (!v1065) {
            goto LABEL_1732;
          }
          int v757 = *(_DWORD *)(v754 + 20);
          unsigned __int8 v756 = v1561;
        }
        int v1066 = v757 - 1;
        *(_DWORD *)(v754 + 20) = v1066;
        if (v1066) {
          goto LABEL_1733;
        }
        sub_1B0D12558(v754);
LABEL_1732:
        unsigned __int8 v756 = v1561;
LABEL_1733:
        unsigned int v1067 = (v756 + 1);
        *((unsigned char *)v753 + 91) = v756 + 1;
        *((unsigned char *)v753 + 90) = v756 - 1;
        *((unsigned char *)v753 + 89) = v1067 > 1;
        v753[4] = v13;
        if (v1067 != v756 + 1) {
          goto LABEL_1828;
        }
        uint64_t v1068 = (v756 + 1);
        if (v756)
        {
          uint64_t v1069 = v1068 & 0xFE;
          v1070 = v753 + 27;
          uint64_t v1071 = v1069;
          do
          {
            *(v1070 - 13) = v753;
            void *v1070 = v753;
            v1070 += 26;
            v1071 -= 2;
          }
          while (v1071);
          if (v1069 == v1068)
          {
LABEL_1828:
            if (*(unsigned char *)(v13 + 102) == 2) {
              goto LABEL_1836;
            }
            int v1104 = dword_1EB21CB10 * v758;
            *(_DWORD *)int v753 = dword_1EB21CB10 * v758;
            uint64_t v1105 = *(int *)(*(void *)(*(void *)(v13 + 32) + 24) + 116);
            uint64_t v1106 = -1024;
            if ((int)v1105 >= 0) {
              uint64_t v1106 = v758;
            }
            uint64_t v1107 = v1106 * v1105;
            if (v1107 >= 0x20000000) {
              LODWORD(v1107) = 0x20000000;
            }
            if (v1104 <= (int)v1107) {
              int v1104 = v1107;
            }
            *((_DWORD *)v753 + 1) = v1104;
            if (byte_1EB21C9C8)
            {
LABEL_1836:
              LODWORD(v20) = 0;
            }
            else
            {
              *((_DWORD *)v753 + 21) = v758;
              uint64_t v1109 = sub_1B0C7FC94(v758);
              v753[8] = v1109;
              if (v1109) {
                LODWORD(v20) = 0;
              }
              else {
                LODWORD(v20) = 7;
              }
            }
            LOWORD(v16) = v1569;
            if (*((unsigned __int16 *)v755 + 4) <= 0xCu)
            {
              uint64_t v1108 = *((void *)v755 + 4);
              if ((!v1108 || v1108 == *(void *)(v13 + 16)) && (**((unsigned char **)v755 + 3) & 2) == 0) {
                *((unsigned char *)v753 + 92) = 3;
              }
            }
            if (v20) {
              goto LABEL_2742;
            }
            int v1558 = 0;
            v12 += 40;
            continue;
          }
        }
        else
        {
          uint64_t v1069 = 0;
        }
        uint64_t v1102 = v1068 - v1069;
        uint64_t v1103 = 104 * v1069 + 112;
        do
        {
          *(void *)((char *)v753 + v1103) = v753;
          v1103 += 104;
          --v1102;
        }
        while (v1102);
        goto LABEL_1828;
      case 0x78u:
        uint64_t v450 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v451 = *(void *)(v450 + 16);
        *(void *)(v450 + 16) = v451 + 1;
        LOWORD(v16) = v1569;
        if (!v451) {
          goto LABEL_2422;
        }
        goto LABEL_21;
      case 0x79u:
        uint64_t v452 = sub_1B0CACC34(v11, *((_DWORD *)v12 + 1), *((_DWORD *)v12 + 3), 3);
        if (!v452) {
          goto LABEL_8;
        }
        *(unsigned char *)(v452 + 2) = 1;
        *(_DWORD *)(v452 + 28) = *((_DWORD *)v12 + 2);
        *(unsigned char *)(v452 + 4) = 1;
        *(void *)(v452 + 40) = &unk_1E9B52218;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x7Au:
        uint64_t v453 = *(void *)(v11 + 120);
        uint64_t v454 = *((int *)v12 + 1);
        int v455 = *(unsigned __int8 **)(v453 + 8 * v454);
        if (v455)
        {
          sub_1B0D1637C((void **)v11, v455);
          uint64_t v453 = *(void *)(v11 + 120);
          uint64_t v454 = *((int *)v12 + 1);
        }
        LOWORD(v16) = v1569;
        *(void *)(v453 + 8 * v454) = 0;
        v12 += 40;
        continue;
      case 0x7Cu:
        uint64_t v1576 = 0;
        a2 = 0uLL;
        long long v1574 = 0u;
        long long v1575 = 0u;
        uint64_t v456 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 11));
        LOWORD(v16) = v1569;
        if (**(unsigned char **)(v456 + 40)) {
          goto LABEL_21;
        }
        int v457 = *((_DWORD *)v12 + 1);
        uint64_t v458 = *(void *)(v456 + 48);
        uint64_t v459 = *((int *)v12 + 13);
        WORD6(v1575) = *((_DWORD *)v12 + 14);
        *(void *)&long long v1574 = v458;
        *((void *)&v1574 + 1) = v1570 + (v459 << 6);
        int v460 = v457 + 1;
        do
        {
          uint64_t v461 = *(void *)(v456 + 40);
          sub_1B0D146DC(v461);
          signed int v462 = *(_DWORD *)(v461 + 64);
          if (v462 <= 0)
          {
            int v1429 = 96383;
            goto LABEL_2631;
          }
          memset(__buf, 0, 24);
          memset(&__buf[2], 0, 32);
          *((void *)&__buf[1] + 1) = v13;
          int v463 = *(unsigned __int16 *)(v461 + 68);
          int v464 = *(char **)(v461 + 56);
          int v465 = *(_DWORD *)(*(void *)(v461 + 136) + 88) - v464;
          if (v463 > v465) {
            int v463 = v465 & ~(v465 >> 31);
          }
          *((void *)&__buf[0] + 1) = *(void *)(v461 + 56);
          if (v463 >= v462)
          {
            WORD2(__buf[1]) = 16400;
            LODWORD(__buf[1]) = v462;
          }
          else
          {
            int v62 = sub_1B0CB63E0(v461, 0, v462, (uint64_t)__buf);
            if (v62) {
              goto LABEL_2597;
            }
            signed int v462 = __buf[1];
            int v464 = (char *)*((void *)&__buf[0] + 1);
          }
          int v466 = sub_1B0D1B630(v462, v464, (uint64_t *)&v1574, 0);
          if (LODWORD(__buf[2])) {
            sub_1B0D180E4((uint64_t)__buf);
          }
          if (v466 >= 1)
          {
            if (!*((_WORD *)v12 + 1)) {
              goto LABEL_2279;
            }
            goto LABEL_1596;
          }
          if ((v466 & 0x80000000) == 0) {
            goto LABEL_1596;
          }
          if (--v460 < 1)
          {
            int v1558 = 0;
            v12 += 40;
            goto LABEL_22;
          }
          *(_DWORD *)(v456 + 24) = 0;
          int v467 = sub_1B0CAE698(*(void *)(v456 + 40));
        }
        while (!v467);
        LODWORD(v20) = v467;
        if (v467 != 101) {
          goto LABEL_2742;
        }
LABEL_2279:
        v12 += 40;
LABEL_1596:
        int v1558 = 0;
        goto LABEL_2422;
      case 0x7Du:
        int v468 = *((_DWORD *)v12 + 2);
        uint64_t v469 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        int v470 = *(unsigned __int16 *)(v469 + 6);
        if (v468 > v470)
        {
          *(_WORD *)(v469 + 6) = v468;
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        int v734 = *((_DWORD *)v12 + 3);
        LOWORD(v16) = v1569;
        if (v734 >= v470) {
          goto LABEL_21;
        }
        *(_WORD *)(v469 + 6) = v734;
        v12 += 40;
        continue;
      case 0x7Eu:
        uint64_t v471 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v471 + 20) & 0x9000) != 0) {
          uint64_t v471 = sub_1B0D1D578(v471);
        }
        else {
          *(_WORD *)(v471 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        uint64_t v811 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v812 = *(void *)(v811 + 16);
        *(void *)(v811 + 16) = v812 + 1;
        *(void *)uint64_t v471 = v812;
        v12 += 40;
        continue;
      case 0x7Fu:
        *(void *)&__buf[0] = 0;
        LODWORD(v1574) = 0;
        uint64_t v472 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(unsigned char *)(v472 + 21) & 0x90) != 0) {
          sub_1B0D1D578(*(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6));
        }
        else {
          *(_WORD *)(v472 + 20) = 4;
        }
        uint64_t v813 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        LOWORD(v16) = v1569;
        if ((*(unsigned char *)(v813 + 5) & 2) != 0) {
          goto LABEL_2081;
        }
        uint64_t v814 = *(void *)(v813 + 40);
        if (!*(unsigned char *)v814 && (*(unsigned char *)(v814 + 1) & 8) != 0)
        {
          LODWORD(v1574) = 0;
        }
        else
        {
          int v62 = sub_1B0D1E888(*(void *)(v813 + 40), &v1574);
          if (v62) {
            goto LABEL_2597;
          }
          if (v1574)
          {
            int v1558 = 0;
            *(void *)&__buf[0] = 1;
LABEL_2081:
            uint64_t v1203 = *((int *)v12 + 3);
            if (v1203)
            {
              uint64_t v1204 = *(void *)(v11 + 352);
              unint64_t v1205 = v1570;
              if (v1204)
              {
                do
                {
                  uint64_t v1206 = v1204;
                  uint64_t v1204 = *(void *)(v1204 + 8);
                }
                while (v1204);
                unint64_t v1205 = *(void *)(v1206 + 24);
              }
              v1207 = (uint64_t *)(v1205 + (v1203 << 6));
              sub_1B0D19530((uint64_t)v1207);
              uint64_t v1208 = *v1207;
              if (*v1207 == 0x7FFFFFFFFFFFFFFFLL || (*(unsigned char *)(v813 + 5) & 2) != 0)
              {
                LODWORD(v20) = 13;
                goto LABEL_2742;
              }
              uint64_t v1209 = *(void *)&__buf[0];
              if (*(uint64_t *)&__buf[0] <= v1208)
              {
                uint64_t v1209 = v1208 + 1;
                *(void *)&__buf[0] = v1208 + 1;
              }
              uint64_t *v1207 = v1209;
            }
            if ((*(unsigned char *)(v813 + 5) & 2) != 0)
            {
              unsigned int v1210 = 0;
              do
              {
                sqlite3_initialize();
                arc4random_buf(__buf, 8uLL);
                *(void *)&__buf[0] = (*(void *)&__buf[0] & 0x3FFFFFFFFFFFFFFFLL) + 1;
                int v1211 = sub_1B0D1AA30(*(void *)(v813 + 40), *(int64_t *)&__buf[0], 0, (int *)&v1574);
                if (v1211) {
                  BOOL v1212 = 0;
                }
                else {
                  BOOL v1212 = v1574 == 0;
                }
                if (!v1212) {
                  break;
                }
                BOOL v46 = v1210++ >= 0x63;
              }
              while (!v46);
              if (v1211) {
                BOOL v1213 = 1;
              }
              else {
                BOOL v1213 = v1574 == 0;
              }
              if (v1213)
              {
                if (v1211) {
                  LODWORD(v20) = v1211;
                }
                else {
                  LODWORD(v20) = 13;
                }
                goto LABEL_2742;
              }
              int v1558 = 0;
            }
            *(unsigned char *)(v813 + 3) = 0;
            *(_DWORD *)(v813 + 24) = 0;
            *(void *)uint64_t v472 = *(void *)&__buf[0];
            v12 += 40;
            continue;
          }
          uint64_t v814 = *(void *)(v813 + 40);
        }
        sub_1B0D146DC(v814);
        uint64_t v1202 = *(void *)(v814 + 48);
        *(void *)&__buf[0] = v1202;
        int v1558 = 0;
        if (v1202 == 0x7FFFFFFFFFFFFFFFLL) {
          *(unsigned char *)(v813 + 5) |= 2u;
        }
        else {
          *(void *)&__buf[0] = v1202 + 1;
        }
        goto LABEL_2081;
      case 0x80u:
        a2 = 0uLL;
        memset(__buf, 0, 48);
        uint64_t v473 = *((int *)v12 + 2);
        uint64_t v474 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v475 = *(void *)(v1570 + ((uint64_t)*((int *)v12 + 3) << 6));
        *((void *)&__buf[0] + 1) = v475;
        if (v12[1] == 251)
        {
          if (*(void *)(v13 + 360))
          {
            int v476 = (uint64_t *)v11;
            uint64_t v477 = *(void *)(*(void *)(v13 + 32) + 32 * *(char *)(v474 + 1));
            __int16 v478 = (void *)*((void *)v12 + 2);
            if (!v478) {
              goto LABEL_981;
            }
            if ((*((_WORD *)v12 + 1) & 4) == 0)
            {
              __sl = *(char **)(*(void *)(v13 + 32) + 32 * *(char *)(v474 + 1));
              sub_1B0D1B400(v476, v474, 18, v477, (uint64_t)v478, v475, v473, 0xFFFFFFFF);
              uint64_t v477 = (uint64_t)__sl;
            }
LABEL_1771:
            if (!*(void *)(v13 + 312) || !v478[1]) {
              goto LABEL_980;
            }
LABEL_981:
            __int16 v735 = *((_WORD *)v12 + 1);
            if ((v735 & 0x40) == 0)
            {
              if (v735)
              {
                ++v476[7];
                if ((v735 & 0x20) != 0) {
                  *(void *)(v13 + 56) = v475;
                }
              }
              __sd = (char *)v477;
              unint64_t v736 = v1570 + (v473 << 6);
              *(void *)&__buf[1] = *(void *)(v736 + 8);
              DWORD1(__buf[2]) = *(_DWORD *)(v736 + 16);
              if ((v735 & 0x10) != 0) {
                int v737 = *(_DWORD *)(v474 + 28);
              }
              else {
                int v737 = 0;
              }
              if ((*(_WORD *)(v736 + 20) & 0x400) != 0) {
                int v1008 = *(_DWORD *)(v1570 + (v473 << 6));
              }
              else {
                int v1008 = 0;
              }
              DWORD2(__buf[2]) = v1008;
              *(void *)&__buf[0] = 0;
              int v1010 = sub_1B0CC0498(*(unsigned __int8 **)(v474 + 40), (uint64_t)__buf, v735 & 0x8A, v737);
              *(unsigned char *)(v474 + 3) = 0;
              *(_DWORD *)(v474 + 24) = 0;
              if (v1010)
              {
                LODWORD(v20) = v1010;
                uint64_t v11 = (uint64_t)v476;
                goto LABEL_2742;
              }
              ++v1483;
              if (v478)
              {
                if ((*((_WORD *)v12 + 1) & 4) != 0) {
                  uint64_t v1011 = 23;
                }
                else {
                  uint64_t v1011 = 18;
                }
                (*(void (**)(void, uint64_t, char *, void, uint64_t))(v13 + 312))(*(void *)(v13 + 304), v1011, __sd, *v478, v475);
              }
              int v1558 = 0;
            }
            LOWORD(v16) = v1569;
            uint64_t v11 = (uint64_t)v476;
            v12 += 40;
            continue;
          }
          int v476 = (uint64_t *)v11;
          if (*(void *)(v13 + 312))
          {
            uint64_t v477 = *(void *)(*(void *)(v13 + 32) + 32 * *(char *)(v474 + 1));
            __int16 v478 = (void *)*((void *)v12 + 2);
            if (!v478) {
              goto LABEL_981;
            }
            goto LABEL_1771;
          }
        }
        else
        {
          int v476 = (uint64_t *)v11;
        }
        uint64_t v477 = 0;
LABEL_980:
        __int16 v478 = 0;
        goto LABEL_981;
      case 0x81u:
        uint64_t v479 = *((int *)v12 + 3);
        if (v479) {
          unint64_t v480 = *(void *)(v1570 + (v479 << 6));
        }
        else {
          unint64_t v480 = 0;
        }
        uint64_t v815 = *(void *)(v11 + 120);
        uint64_t v816 = *(void **)(*(void *)(v815 + 8 * *((int *)v12 + 1)) + 40);
        uint64_t v817 = *(void *)(*(void *)(v815 + 8 * *((int *)v12 + 2)) + 40);
        uint64_t v818 = v816[4];
        uint64_t v819 = *(int8x8_t **)(v818 + 136);
        sub_1B0D146DC(v817);
        uint64_t v1562 = v817;
        unint64_t v820 = *(unsigned int *)(v817 + 64);
        if (v820 > 0x7F)
        {
          if (v820 >> 14)
          {
            int v822 = sub_1B0D1DC5C(v819, v820);
          }
          else
          {
            v819->i8[0] = (v820 >> 7) | 0x80;
            v819->i8[1] = v820 & 0x7F;
            int v822 = 2;
          }
          LOWORD(v16) = v1569;
          uint64_t v821 = (int8x8_t *)((char *)v819 + v822);
        }
        else
        {
          v819->i8[0] = v820;
          uint64_t v821 = (int8x8_t *)((char *)v819 + 1);
          LOWORD(v16) = v1569;
        }
        unint64_t v1513 = v18;
        v1521 = v12;
        if (!v816[16])
        {
          if (v480 > 0x7F)
          {
            if (v480 >> 14)
            {
              uint64_t v1009 = (int)sub_1B0D1DC5C(v821, v480);
            }
            else
            {
              v821->i8[0] = (v480 >> 7) | 0x80;
              v821->i8[1] = v480 & 0x7F;
              uint64_t v1009 = 2;
            }
          }
          else
          {
            v821->i8[0] = v480;
            uint64_t v1009 = 1;
          }
          uint64_t v821 = (int8x8_t *)((char *)v821 + v1009);
        }
        uint64_t v1214 = *(unsigned __int16 *)(v1562 + 68);
        v1215 = *(char **)(v1562 + 56);
        v1216 = (unsigned int *)&v1215[v1214];
        unint64_t v1217 = *(void *)(*(void *)(v1562 + 136) + 88);
        if ((unint64_t)&v1215[v1214] > v1217)
        {
          int v1449 = 86427;
        }
        else
        {
          uint64_t v1218 = *(unsigned int *)(v1562 + 64);
          uint64_t v1219 = v816[17];
          unsigned int v1220 = *(unsigned __int16 *)(v1219 + 14);
          if (v1218 == v1214 && v1214 < v1220)
          {
            memcpy(v821, *(const void **)(v1562 + 56), *(unsigned __int16 *)(v1562 + 68));
            int v1558 = 0;
            *(_DWORD *)(v818 + 144) = v1214 + v821 - *(_DWORD *)(v818 + 136);
            uint64_t v11 = v1540;
            unint64_t v18 = v1513;
            uint64_t v12 = v1521 + 40;
            continue;
          }
          LODWORD(v1573) = 0;
          __suint64_t i = **(char ***)(v1562 + 32);
          *(void *)&__buf[0] = 0;
          if (v1218 <= v1220)
          {
            v1491 = 0;
            *(_DWORD *)(v818 + 144) = v1218 + v821 - *(_DWORD *)(v818 + 136);
            unsigned int v1224 = v1218;
          }
          else
          {
            uint64_t v1222 = *(unsigned __int16 *)(v1219 + 16);
            signed int v1223 = (v1218 - v1222) % (*(_DWORD *)(*(void *)(v1219 + 72) + 56) - 4) + v1222;
            if (v1223 <= (int)v1220) {
              unsigned int v1224 = v1223;
            }
            else {
              unsigned int v1224 = v1222;
            }
            unsigned int v1225 = v1224 + v821 - *(_DWORD *)(v818 + 136);
            *(_DWORD *)(v818 + 144) = v1225;
            if (v1224 >= v1218)
            {
              v1491 = 0;
            }
            else
            {
              v1491 = (int8x8_t *)((char *)v821 + v1224);
              *(_DWORD *)(v818 + 144) = v1225 + 4;
            }
          }
          unsigned int v1505 = v1218;
          if (v1218 <= v1214)
          {
            uint64_t v1226 = 0;
            goto LABEL_2125;
          }
          if ((unint64_t)(v1216 + 1) <= v1217)
          {
            uint64_t v1226 = bswap32(*v1216);
LABEL_2125:
            uint64_t v1497 = 0;
            while (1)
            {
              v1505 -= v1224;
              if (!v1214) {
                goto LABEL_2131;
              }
LABEL_2127:
              int v1227 = v1224 >= v1214 ? v1214 : v1224;
              memcpy(v821, v1215, v1227);
              v1224 -= v1227;
              LODWORD(v1214) = v1214 - v1227;
              uint64_t v821 = (int8x8_t *)((char *)v821 + v1227);
              v1215 += v1227;
LABEL_2131:
              while (v1224)
              {
                uint64_t v1228 = *(void *)&__buf[0];
                if (*(void *)&__buf[0])
                {
                  if ((*(_WORD *)(*(void *)&__buf[0] + 52) & 0x20) != 0)
                  {
                    uint64_t v1229 = *(void *)(*(void *)&__buf[0] + 40);
                    --*(_DWORD *)(v1229 + 152);
                    *(void *)(v1228 + 32) = *(void *)(v1229 + 168);
                    *(void *)(v1229 + 168) = v1228;
                    (*(void (**)(void, void, void))(**(void **)(v1229 + 72) + 144))(*(void *)(v1229 + 72), *(void *)(v1229 + 200) * (*(_DWORD *)(v1228 + 48) - 1), *(void *)(v1228 + 8));
                  }
                  else
                  {
                    sub_1B0D0E3E8(*(uint64_t *)&__buf[0]);
                  }
                }
                *(void *)&__buf[0] = 0;
                int v1230 = (*((uint64_t (**)(char *, uint64_t, _OWORD *, uint64_t))__si + 36))(__si, v1226, __buf, 2);
                LODWORD(v1573) = v1230;
                if (v1230)
                {
                  LODWORD(v20) = v1230;
LABEL_2165:
                  uint64_t v11 = v1540;
                  unint64_t v18 = v1513;
                  uint64_t v12 = v1521;
                  LOWORD(v16) = v1569;
                  if (v1497)
                  {
                    int v1239 = v20;
                    uint64_t v1240 = *(void *)(v1497 + 112);
                    if ((*(_WORD *)(v1240 + 52) & 0x20) != 0)
                    {
                      uint64_t v1241 = *(void *)(v1240 + 40);
                      --*(_DWORD *)(v1241 + 152);
                      *(void *)(v1240 + 32) = *(void *)(v1241 + 168);
                      *(void *)(v1241 + 168) = v1240;
                      (*(void (**)(void, void, void))(**(void **)(v1241 + 72) + 144))(*(void *)(v1241 + 72), *(void *)(v1241 + 200) * (*(_DWORD *)(v1240 + 48) - 1), *(void *)(v1240 + 8));
                    }
                    else
                    {
                      sub_1B0D0E3E8(v1240);
                    }
                    LODWORD(v20) = v1239;
                  }
                  uint64_t v1242 = *(void *)&__buf[0];
                  if (*(void *)&__buf[0])
                  {
                    int v1243 = v20;
                    if ((*(_WORD *)(*(void *)&__buf[0] + 52) & 0x20) != 0)
                    {
                      uint64_t v1244 = *(void *)(*(void *)&__buf[0] + 40);
                      --*(_DWORD *)(v1244 + 152);
                      *(void *)(v1242 + 32) = *(void *)(v1244 + 168);
                      *(void *)(v1244 + 168) = v1242;
                      (*(void (**)(void, void, void))(**(void **)(v1244 + 72) + 144))(*(void *)(v1244 + 72), *(void *)(v1244 + 200) * (*(_DWORD *)(v1242 + 48) - 1), *(void *)(v1242 + 8));
                    }
                    else
                    {
                      sub_1B0D0E3E8(*(uint64_t *)&__buf[0]);
                    }
                    LODWORD(v20) = v1243;
                  }
                  if (v20) {
                    goto LABEL_2742;
                  }
                  int v1558 = 0;
                  uint64_t v12 = v1521 + 40;
                  goto LABEL_22;
                }
                v1231 = *(unsigned int **)(*(void *)&__buf[0] + 8);
                unsigned int v1232 = *v1231;
                v1215 = (char *)(v1231 + 1);
                uint64_t v1226 = bswap32(v1232);
                int v1233 = *(_DWORD *)(*(void *)(v1562 + 32) + 56);
                LODWORD(v1214) = v1233 - 4;
                if (v1233 != 4) {
                  goto LABEL_2127;
                }
              }
              LODWORD(v20) = v1573;
              BOOL v1234 = v1573 || v1505 == 0;
              if (!v1234 && v1491 != 0) {
                break;
              }
              unsigned int v1224 = 0;
LABEL_2161:
              if (!v1505 || v20) {
                goto LABEL_2165;
              }
            }
            LODWORD(v1572) = 0;
            *(void *)&long long v1574 = 0;
            int v1236 = sub_1B0CC64B8(v818, (uint64_t *)&v1574, (int *)&v1572, 0, 0);
            LODWORD(v1573) = v1236;
            v1491->i32[0] = bswap32(v1572);
            if (*(unsigned char *)(v818 + 33) && v1497)
            {
              sub_1B0CD24E8((_DWORD *)v818, (int)v1572, 4, *(_DWORD *)(v1497 + 4), &v1573);
            }
            else if (!v1497)
            {
              goto LABEL_2155;
            }
            uint64_t v1237 = *(void *)(v1497 + 112);
            if ((*(_WORD *)(v1237 + 52) & 0x20) != 0)
            {
              uint64_t v1238 = *(void *)(v1237 + 40);
              --*(_DWORD *)(v1238 + 152);
              *(void *)(v1237 + 32) = *(void *)(v1238 + 168);
              *(void *)(v1238 + 168) = v1237;
              (*(void (**)(void, void, void))(**(void **)(v1238 + 72) + 144))(*(void *)(v1238 + 72), *(void *)(v1238 + 200) * (*(_DWORD *)(v1237 + 48) - 1), *(void *)(v1237 + 8));
            }
            else
            {
              sub_1B0D0E3E8(v1237);
            }
LABEL_2155:
            uint64_t v1497 = v1574;
            if ((void)v1574)
            {
              v1491 = *(int8x8_t **)(v1574 + 80);
              v1491->i32[0] = 0;
              uint64_t v821 = (int8x8_t *)((char *)v1491 + 4);
              if (*(_DWORD *)(v818 + 56) - 4 >= v1505) {
                unsigned int v1224 = v1505;
              }
              else {
                unsigned int v1224 = *(_DWORD *)(v818 + 56) - 4;
              }
            }
            else
            {
              unsigned int v1224 = 0;
            }
            LODWORD(v20) = v1573;
            goto LABEL_2161;
          }
          int v1449 = 86452;
        }
        LODWORD(v20) = sub_1B0D1045C(v1449);
        uint64_t v11 = v1540;
        unint64_t v18 = v1513;
        uint64_t v12 = v1521;
        goto LABEL_2742;
      case 0x82u:
        uint64_t v481 = *(void *)(v11 + 120);
        int v482 = *((_DWORD *)v12 + 2);
        uint64_t v483 = *(void *)(v481 + 8 * *((int *)v12 + 1));
        if (v12[1] == 251 && ((uint64_t v484 = *(void *)(v13 + 360)) != 0 || *(void *)(v13 + 312)))
        {
          uint64_t v485 = *(void *)(*(void *)(v13 + 32) + 32 * *(char *)(v483 + 1));
          uint64_t v486 = *((void *)v12 + 2);
          if ((*((_WORD *)v12 + 1) & 2) != 0 && *(unsigned char *)(v483 + 4))
          {
            uint64_t v487 = *(void *)(v483 + 40);
            sub_1B0D146DC(v487);
            *(void *)(v483 + 72) = *(void *)(v487 + 48);
            uint64_t v484 = *(void *)(v13 + 360);
          }
          BOOL v488 = v486 != 0;
          if (v484 && v486)
          {
            if ((v482 & 4) != 0) {
              int v489 = 23;
            }
            else {
              int v489 = 9;
            }
            sub_1B0D1B400((uint64_t *)v1540, v483, v489, v485, v486, *(void *)(v483 + 72), *((_DWORD *)v12 + 3), 0xFFFFFFFF);
            BOOL v488 = 1;
          }
        }
        else
        {
          BOOL v488 = 0;
          uint64_t v486 = 0;
          uint64_t v485 = 0;
        }
        if ((v482 & 0x40) != 0) {
          goto LABEL_2532;
        }
        int v720 = sub_1B0CBD1B4(*(unsigned __int8 **)(v483 + 40), v12[2]);
        *(void *)(v483 + 24) = 0;
        if (v720) {
          goto LABEL_2653;
        }
        ++v1483;
        if ((v482 & 1) == 0)
        {
          int v1558 = 0;
          LOWORD(v16) = v1569;
          uint64_t v11 = v1540;
          v12 += 40;
          continue;
        }
        uint64_t v11 = v1540;
        ++*(void *)(v1540 + 56);
        v1034 = *(void (**)(void, uint64_t, uint64_t, void, void))(v13 + 312);
        if (v1034) {
          BOOL v1035 = v488;
        }
        else {
          BOOL v1035 = 0;
        }
        if (!v1035) {
          goto LABEL_1888;
        }
        LOWORD(v16) = v1569;
        if ((*(unsigned char *)(v486 + 48) & 0x80) == 0) {
          v1034(*(void *)(v13 + 304), 9, v485, *(void *)v486, *(void *)(v483 + 72));
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0x83u:
        uint64_t v490 = *(void *)(v11 + 56);
        uint64_t v491 = *(void *)(v13 + 128) + v490;
        *(void *)(v13 + 120) = v490;
        *(void *)(v13 + 128) = v491;
        *(void *)(v11 + 56) = 0;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x84u:
        uint64_t v492 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v493 = *((unsigned int *)v12 + 4);
        uint64_t v494 = *((int *)v12 + 3);
        uint64_t v496 = *(void *)(v492 + 40);
        uint64_t v495 = *(void *)(v492 + 48);
        uint64_t v497 = *(uint64_t **)(v496 + 48);
        if (v497) {
          goto LABEL_1897;
        }
        unint64_t v498 = (unint64_t)*(unsigned __int16 *)(v495 + 6) << 6;
        uint64_t v499 = *(void *)(v495 + 16);
        if (v499) {
          uint64_t v500 = sub_1B0D05DC0(v499, v498 + 104);
        }
        else {
          uint64_t v500 = sub_1B0C7FC94(v498 + 104);
        }
        uint64_t v497 = (uint64_t *)v500;
        if (!v500)
        {
          *(void *)(v496 + 48) = 0;
          LODWORD(v20) = 7;
          uint64_t v11 = v1540;
          goto LABEL_2742;
        }
        *(void *)uint64_t v500 = v495;
        *(void *)(v500 + 8) = v500 + 40;
        *(void *)(v496 + 48) = v500;
        *(_WORD *)(v500 + 28) = v493;
LABEL_1897:
        if (*(unsigned char *)(v496 + 88))
        {
          if (*(unsigned char *)(v496 + 89)) {
            uint64_t v1136 = *(void *)(v496 + 16);
          }
          else {
            uint64_t v1136 = *(void *)(*(void *)(v496 + 24) + 24)
          }
                  + 80 * *(int *)(*(void *)(*(void *)(v496 + 24) + 16) + 4);
          int v1137 = (unsigned int *)(v1136 + 20);
          v1138 = *(char **)(v1136 + 40);
        }
        else
        {
          int v1137 = *(unsigned int **)(v496 + 56);
          v1138 = (char *)(v1137 + 4);
        }
        uint64_t v11 = v1540;
        sub_1B0CC14AC(v495, *v1137, v1138, (uint64_t)v497);
        if ((int)v493 < 1) {
          goto LABEL_1907;
        }
        v1139 = (__int16 *)(v497[1] + 20);
        do
        {
          __int16 v1140 = *v1139;
          v1139 += 32;
          if (v1140)
          {
            int v1558 = 0;
            LOWORD(v16) = v1569;
            goto LABEL_2422;
          }
          --v493;
        }
        while (v493);
LABEL_1907:
        int v1558 = 0;
        LOWORD(v16) = v1569;
        if (!sub_1B0D1B630(*(_DWORD *)(v1570 + (v494 << 6) + 16), *(char **)(v1570 + (v494 << 6) + 8), v497, 0))goto LABEL_21; {
        goto LABEL_2422;
        }
      case 0x85u:
        uint64_t v501 = *(void *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1)) + 40);
        if (*(unsigned char *)(v501 + 88))
        {
          if (*(unsigned char *)(v501 + 89)) {
            uint64_t v502 = *(void *)(v501 + 16);
          }
          else {
            uint64_t v502 = *(void *)(*(void *)(v501 + 24) + 24)
          }
                 + 80 * *(int *)(*(void *)(*(void *)(v501 + 24) + 16) + 4);
          uint64_t v823 = (signed int *)(v502 + 20);
          int v824 = *(const void **)(v502 + 40);
        }
        else
        {
          uint64_t v823 = *(signed int **)(v501 + 56);
          int v824 = v823 + 4;
        }
        uint64_t v1046 = *((int *)v12 + 2);
        signed int v1047 = *v823;
        unint64_t v1048 = v1570 + (v1046 << 6);
        if (*(_DWORD *)(v1048 + 32) >= v1047)
        {
          char v1050 = *(void **)(v1048 + 40);
          *(void *)(v1048 + 8) = v1050;
          __int16 v1051 = 16;
        }
        else
        {
          if (sub_1B0CA0CF0(v1570 + (v1046 << 6), v1047, 0)) {
            goto LABEL_2733;
          }
          unint64_t v1049 = v1570 + (v1046 << 6);
          char v1050 = *(void **)(v1049 + 8);
          __int16 v1051 = *(_WORD *)(v1049 + 20) & 0xF240 | 0x10;
        }
        unint64_t v1052 = v1570 + (v1046 << 6);
        *(_DWORD *)(v1052 + 16) = v1047;
        *(_WORD *)(v1052 + 20) = v1051;
        memcpy(v1050, v824, v1047);
        int v1558 = 0;
        *(_DWORD *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 3)) + 24) = 0;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x86u:
        uint64_t v503 = v11;
        uint64_t v16 = *(void *)(v11 + 104);
        uint64_t v504 = *((int *)v12 + 2);
        uint64_t v505 = v16 + (v504 << 6);
        v506 = (_WORD *)(v505 + 20);
        if ((*(_WORD *)(v505 + 20) & 0x9000) != 0) {
          sub_1B0D1D578(v16 + (v504 << 6));
        }
        else {
          _WORD *v506 = 4;
        }
        uint64_t v825 = *(void *)(*(void *)(*(void *)(v503 + 120) + 8 * *((int *)v12 + 1)) + 40);
        sub_1B0D146DC(v825);
        a6 = *(unsigned int *)(v825 + 64);
        if (a6 > *(_DWORD *)(v13 + 136)) {
          goto LABEL_2739;
        }
        uint64_t v826 = *(void *)(v825 + 56);
        int v827 = *(_DWORD *)(*(void *)(v825 + 136) + 88) - v826;
        if (*(unsigned __int16 *)(v825 + 68) <= v827) {
          unsigned int v828 = *(unsigned __int16 *)(v825 + 68);
        }
        else {
          unsigned int v828 = v827 & ~(v827 >> 31);
        }
        uint64_t v829 = v16 + (v504 << 6);
        *(void *)(v829 + 8) = v826;
        if (v828 >= a6)
        {
          _WORD *v506 = 16400;
          *(_DWORD *)(v829 + 16) = a6;
          LOWORD(v16) = v1569;
        }
        else
        {
          int v720 = sub_1B0CB63E0(v825, 0, a6, v16 + (v504 << 6));
          LOWORD(v16) = v1569;
          if (v720)
          {
LABEL_2653:
            LODWORD(v20) = v720;
            uint64_t v11 = v1540;
            goto LABEL_2742;
          }
        }
        uint64_t v11 = v1540;
        if (*((_DWORD *)v12 + 3))
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        if ((*v506 & 0x4000) == 0)
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        if (!sub_1B0CEA388((int *)v505))
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        goto LABEL_8;
      case 0x87u:
        *(void *)&__buf[0] = 0;
        uint64_t v507 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        uint64_t v16 = v507 + 20;
        if ((*(_WORD *)(v507 + 20) & 0x9000) != 0) {
          sub_1B0D1D578(*(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6));
        }
        else {
          *(_WORD *)uint64_t v16 = 4;
        }
        uint64_t v830 = *((int *)v12 + 1);
        uint64_t v831 = *(void *)(*(void *)(v11 + 120) + 8 * v830);
        if (*(unsigned char *)(v831 + 2)) {
          goto LABEL_1190;
        }
        if (*(unsigned char *)(v831 + 3))
        {
          uint64_t v16 = v831 + 72;
        }
        else
        {
          uint64_t v1149 = *(void *)(v831 + 40);
          if (*(unsigned char *)v831 == 2)
          {
            uint64_t v1150 = *(void *)v1149;
            uint64_t v16 = (uint64_t)__buf;
            int v612 = (*(uint64_t (**)(uint64_t, _OWORD *))(**(void **)v1149 + 96))(v1149, __buf);
            sub_1B0D17574(v11, v1150);
            if (v612)
            {
LABEL_2602:
              LODWORD(v20) = v612;
              goto LABEL_2742;
            }
            int v1558 = 0;
          }
          else
          {
            if (*(unsigned char *)v1149)
            {
              int v62 = sub_1B0D199A0(*(void *)(*(void *)(v11 + 120) + 8 * v830));
              if (v62) {
                goto LABEL_2597;
              }
              if (*(unsigned char *)(v831 + 2))
              {
                int v1558 = 0;
LABEL_1190:
                *(_WORD *)uint64_t v16 = 1;
                LOWORD(v16) = v1569;
                v12 += 40;
                continue;
              }
              uint64_t v1149 = *(void *)(v831 + 40);
            }
            sub_1B0D146DC(v1149);
            int v1558 = 0;
            uint64_t v16 = v1149 + 48;
          }
        }
        *(void *)uint64_t v507 = *(void *)v16;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x88u:
        uint64_t v508 = *((int *)v12 + 1);
        uint64_t v509 = *(void *)(*(void *)(v11 + 120) + 8 * v508);
        if (v509) {
          goto LABEL_575;
        }
        uint64_t v509 = sub_1B0CACC34(v11, v508, 1, 3);
        if (!v509) {
          goto LABEL_8;
        }
        *(_DWORD *)(v509 + 28) = 0;
        *(unsigned char *)(v509 + 4) = 1;
        *(unsigned char *)(v509 + 5) |= 8u;
        *(void *)(v509 + 40) = &unk_1E9B52218;
LABEL_575:
        *(unsigned char *)(v509 + 2) = 1;
        *(_DWORD *)(v509 + 24) = 0;
        if (!*(unsigned char *)v509) {
          sub_1B0D15B64(*(void *)(v509 + 40));
        }
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x8Au:
        memset(__buf, 0, 48);
        uint64_t v510 = *((int *)v12 + 2);
        uint64_t v511 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        __int16 v512 = *((_WORD *)v12 + 1);
        if (v512) {
          ++*(void *)(v11 + 56);
        }
        unint64_t v513 = v1570;
        unint64_t v514 = v1570 + (v510 << 6);
        if ((*(_WORD *)(v514 + 20) & 0x400) == 0) {
          goto LABEL_583;
        }
        int v62 = sub_1B0CC9B18((int *)v514);
        if (v62) {
          goto LABEL_2597;
        }
        __int16 v512 = *((_WORD *)v12 + 1);
        unint64_t v513 = v1570;
LABEL_583:
        unint64_t v515 = v513 + (v510 << 6);
        *((void *)&__buf[0] + 1) = *(int *)(v515 + 16);
        *(void *)&__buf[0] = *(void *)(v515 + 8);
        *((void *)&__buf[1] + 1) = v513 + ((uint64_t)*((int *)v12 + 3) << 6);
        LOWORD(__buf[2]) = *((_DWORD *)v12 + 4);
        int v516 = (v512 & 0x10) != 0 ? *(_DWORD *)(v511 + 28) : 0;
        LOWORD(v16) = v1569;
        int v62 = sub_1B0CC0498(*(unsigned __int8 **)(v511 + 40), (uint64_t)__buf, v512 & 0x8A, v516);
        *(_DWORD *)(v511 + 24) = 0;
        if (v62) {
          goto LABEL_2597;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0x8Bu:
        uint64_t v517 = *((int *)v12 + 2);
        uint64_t v518 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        unint64_t v519 = v1570 + (v517 << 6);
        if ((*(_WORD *)(v519 + 20) & 0x400) != 0)
        {
          int v62 = sub_1B0CC9B18((int *)(v1570 + (v517 << 6)));
          if (v62) {
            goto LABEL_2597;
          }
        }
        uint64_t v520 = *(void *)(v518 + 40);
        uint64_t v523 = *(void *)(v519 + 8);
        uint64_t v522 = (char *)(v519 + 8);
        uint64_t v521 = v523;
        uint64_t v524 = (char *)(v523 + 1);
        int v525 = *(unsigned __int8 *)(v523 + 1);
        if (*(char *)(v523 + 1) < 0)
        {
          int v526 = *(unsigned __int8 *)(v521 + 2);
          if (*(char *)(v521 + 2) < 0)
          {
            int v1151 = *(char *)(v521 + 3);
            if (v1151 < 0)
            {
              *(void *)&__buf[0] = 0;
              sub_1B0CAD43C(v524, (unint64_t *)__buf);
              if (HIDWORD(*(void *)&__buf[0])) {
                int v525 = -1;
              }
              else {
                int v525 = __buf[0];
              }
            }
            else
            {
              int v525 = v1151 & 0x7F | (v525 << 14) & 0x1FC07F | ((v526 & 0x7F) << 7);
            }
          }
          else
          {
            int v525 = ((v525 & 0x7F) << 7) | v526;
          }
        }
        BOOL v1303 = v525 == 7 || (v525 - 1) > 8;
        __suint64_t j = v522;
        if (v1303)
        {
          if (v525 < 11 || (v525 & 1) == 0)
          {
            *(unsigned char *)(v520 + 92) = 0;
            goto LABEL_2321;
          }
          char v1305 = *(unsigned char *)(v520 + 92) & 2;
        }
        else
        {
          char v1305 = *(unsigned char *)(v520 + 92) & 1;
        }
        *(unsigned char *)(v520 + 92) = v1305;
LABEL_2321:
        unint64_t v1306 = v1570 + (v517 << 6);
        unint64_t v1309 = *(int *)(v1306 + 16);
        v1307 = (int *)(v1306 + 16);
        unint64_t v1308 = v1309;
        unsigned int v1556 = v19;
        int v1310 = 1;
        if (v1309 >= 0x80)
        {
          unint64_t v1311 = v1308;
          do
          {
            unint64_t v1312 = v1311 >> 14;
            v1311 >>= 7;
            ++v1310;
          }
          while (v1312);
        }
        int v1313 = v1308 + 16;
        int v1314 = *(_DWORD *)(v520 + 4);
        if (!v1314) {
          goto LABEL_2333;
        }
        if (*(void *)(v520 + 64))
        {
          int v1566 = 0;
          int v1315 = *(_DWORD *)(v520 + 80);
          if (!v1315 || v1315 + v1313 <= v1314)
          {
LABEL_2334:
            *(_DWORD *)(v520 + 72) += v1310 + v1308;
            if (v1310 + (int)v1308 > *(_DWORD *)(v520 + 8)) {
              *(_DWORD *)(v520 + 8) = v1310 + v1308;
            }
            uint64_t v1318 = *(void *)(v520 + 64);
            if (v1318)
            {
              int v1319 = *(_DWORD *)(v520 + 80);
              uint64_t v1320 = *(int *)(v520 + 84);
              int v1321 = v1319 + v1313;
              uint64_t v1322 = *(void *)(v520 + 56);
              if (v1319 + v1313 <= (int)v1320) {
                goto LABEL_2354;
              }
              do
                v1320 *= 2;
              while (v1320 < v1321);
              if (v1322) {
                unsigned int v1323 = v1322 - v1318;
              }
              else {
                unsigned int v1323 = -1;
              }
              uint64_t v1324 = *(int *)(v520 + 4);
              if (v1320 < v1324) {
                uint64_t v1324 = v1320;
              }
              if (v1324 <= v1321) {
                uint64_t v1325 = v1321;
              }
              else {
                uint64_t v1325 = v1324;
              }
              uint64_t v1318 = sub_1B0C8E1B8(v1318, v1325);
              if (v1318)
              {
                if ((v1323 & 0x80000000) != 0)
                {
                  uint64_t v1322 = *(void *)(v520 + 56);
                }
                else
                {
                  uint64_t v1322 = v1318 + v1323;
                  *(void *)(v520 + 56) = v1322;
                }
                *(void *)(v520 + 64) = v1318;
                *(_DWORD *)(v520 + 84) = v1325;
                int v1319 = *(_DWORD *)(v520 + 80);
LABEL_2354:
                uint64_t v19 = v1556;
                v1327 = (_DWORD *)(v1318 + v1319);
                *(_DWORD *)(v520 + 80) = v1319 + ((v1308 + 23) & 0xFFFFFFF8);
                if (v1322) {
                  v1327[2] = v1322 - v1318;
                }
                goto LABEL_2356;
              }
            }
            else
            {
              uint64_t v1326 = sub_1B0C7FC94(v1313);
              if (v1326)
              {
                v1327 = (_DWORD *)v1326;
                *(void *)(v1326 + 8) = *(void *)(v520 + 56);
                uint64_t v19 = v1556;
LABEL_2356:
                LOWORD(v16) = v1569;
                uint64_t v11 = v1540;
                memcpy(v1327 + 4, *(const void **)__sj, *v1307);
                _DWORD *v1327 = *v1307;
                *(void *)(v520 + 56) = v1327;
                LODWORD(v20) = v1566;
                if (v1566) {
                  goto LABEL_2742;
                }
                int v1558 = 0;
                v12 += 40;
                continue;
              }
            }
            LODWORD(v20) = 7;
            LOBYTE(v19) = v1556;
            uint64_t v11 = v1540;
            goto LABEL_2742;
          }
        }
        else
        {
          int v1316 = *(_DWORD *)(v520 + 72);
          if (v1316 <= v1314 && (v1316 <= *(_DWORD *)v520 || !dword_1EB2201C8))
          {
LABEL_2333:
            int v1566 = 0;
            goto LABEL_2334;
          }
        }
        sub_1B0D20398(v520);
        int v1566 = v1317;
        *(_DWORD *)(v520 + 72) = 0;
        *(_DWORD *)(v520 + 80) = 0;
        goto LABEL_2334;
      case 0x8Cu:
        LODWORD(v1574) = 0;
        memset(__buf, 0, 40);
        int v527 = *(void **)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        int v529 = (unsigned __int8 *)v527[5];
        uint64_t v528 = v527[6];
        WORD6(__buf[1]) = *((_DWORD *)v12 + 3);
        unint64_t v530 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
        *(void *)&__buf[0] = v528;
        *((void *)&__buf[0] + 1) = v530;
        int v62 = sub_1B0D1AC94((uint64_t)v529, (uint64_t *)__buf, (int *)&v1574);
        if (v62) {
          goto LABEL_2597;
        }
        if (v1574)
        {
          LOWORD(v16) = v1569;
          if (*((_WORD *)v12 + 1) && (*(void *)(v13 + 48) & 0x10000001) != 1)
          {
            sub_1B0D06FEC(779, 106503, "index corruption");
            LODWORD(v20) = 779;
            goto LABEL_2742;
          }
        }
        else
        {
          int v62 = sub_1B0CBD1B4(v529, 4);
          LOWORD(v16) = v1569;
          if (v62) {
            goto LABEL_2597;
          }
        }
        int v1558 = 0;
        v527[3] = 0;
        v12 += 40;
        continue;
      case 0x8Du:
      case 0x8Eu:
        *(void *)&__buf[0] = 0;
        uint64_t v111 = *((int *)v12 + 1);
        uint64_t v112 = *(void *)(*(void *)(v11 + 120) + 8 * v111);
        if (**(unsigned char **)(v112 + 40))
        {
          int v62 = sub_1B0D199A0(*(void *)(*(void *)(v11 + 120) + 8 * v111));
          if (v62) {
            goto LABEL_2597;
          }
        }
        if (*(unsigned char *)(v112 + 2))
        {
          LOWORD(v16) = v1569;
          unint64_t v113 = v1570 + ((uint64_t)*((int *)v12 + 2) << 6);
          __int16 v115 = *(_WORD *)(v113 + 20);
          uint64_t v114 = (_WORD *)(v113 + 20);
          if ((v115 & 0x9000) != 0) {
            sub_1B0D18138((int *)(v1570 + ((uint64_t)*((int *)v12 + 2) << 6)));
          }
          else {
            *uint64_t v114 = 1;
          }
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        *(void *)&__buf[0] = 0;
        int v62 = sub_1B0CB6500(v13, *(void *)(v112 + 40), __buf);
        if (!v62)
        {
          if (*v12 == 141)
          {
            uint64_t v687 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 3));
            *(_WORD *)(v687 + 2) = 256;
            *(void *)(v687 + 72) = *(void *)&__buf[0];
            *(_DWORD *)(v687 + 24) = 0;
            *(void *)(v687 + 8) = *((void *)v12 + 2);
            *(void *)(v687 + 32) = v112;
            LOWORD(v16) = v1569;
            int v1558 = 0;
            v12 += 40;
          }
          else
          {
            uint64_t v881 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
            LOWORD(v16) = v1569;
            if ((*(_WORD *)(v881 + 20) & 0x9000) != 0) {
              uint64_t v881 = sub_1B0D1D578(v881);
            }
            else {
              *(_WORD *)(v881 + 20) = 4;
            }
            *(void *)uint64_t v881 = *(void *)&__buf[0];
            int v1558 = 0;
            v12 += 40;
          }
          continue;
        }
        goto LABEL_2597;
      case 0x8Fu:
        uint64_t v531 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        if (!*(unsigned char *)(v531 + 3))
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        int v62 = sub_1B0D1991C(v531);
        LOWORD(v16) = v1569;
        if (v62) {
          goto LABEL_2597;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0x90u:
        unsigned int v1544 = v19;
        unint64_t v1508 = v18;
        v1517 = v12;
        uint64_t v532 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        uint64_t v533 = (_WORD *)(v532 + 20);
        if ((*(_WORD *)(v532 + 20) & 0x9000) != 0) {
          sub_1B0D1D578(v532);
        }
        else {
          _WORD *v533 = 4;
        }
        _WORD *v533 = 1;
        if (*(_DWORD *)(v13 + 212) > *(_DWORD *)(v13 + 224) + 1)
        {
          *(unsigned char *)(v11 + 264) = 2;
          LODWORD(v20) = 6;
          goto LABEL_2704;
        }
        uint64_t v832 = *((int *)v1517 + 3);
        uint64_t v833 = *(void *)(*(void *)(v13 + 32) + 32 * v832 + 8);
        uint64_t v834 = *((unsigned int *)v1517 + 1);
        if (*(unsigned char *)(v833 + 17))
        {
          ++*(_DWORD *)(v833 + 20);
          if (!*(unsigned char *)(v833 + 18)) {
            sub_1B0D12478(v833);
          }
        }
        v835 = *(_DWORD **)(v833 + 8);
        if (v835[16] < v834)
        {
          int v836 = sub_1B0D1045C(87020);
LABEL_1201:
          LODWORD(v20) = v836;
LABEL_1202:
          int v837 = 0;
          goto LABEL_1203;
        }
        int v836 = sub_1B0CDBF48(v833, v834, 0);
        if (v836) {
          goto LABEL_1201;
        }
        *(void *)&__buf[0] = 0;
        int v836 = (*(uint64_t (**)(void))(*(void *)v835 + 288))();
        if (v836) {
          goto LABEL_1201;
        }
        uint64_t v1277 = *(void *)(*(void *)&__buf[0] + 16);
        if (*(_DWORD *)(v1277 + 4) != v834)
        {
          uint64_t v1278 = *(void *)(*(void *)&__buf[0] + 8);
          *(void *)(v1277 + 112) = *(void *)&__buf[0];
          *(void *)(v1277 + 72) = v835;
          *(void *)(v1277 + 80) = v1278;
          *(_DWORD *)(v1277 + 4) = v834;
          if (v834 == 1) {
            char v1279 = 100;
          }
          else {
            char v1279 = 0;
          }
          *(unsigned char *)(v1277 + 9) = v1279;
        }
        if (!*((unsigned char *)v835 + 33))
        {
          int v1398 = sub_1B0CD3AB8(*(void *)(v1277 + 72), v1277, *(unsigned int *)(v1277 + 4));
          uint64_t v1399 = *(void *)(v1277 + 112);
          if ((*(_WORD *)(v1399 + 52) & 0x20) != 0)
          {
            uint64_t v1400 = *(void *)(v1399 + 40);
            --*(_DWORD *)(v1400 + 152);
            *(void *)(v1399 + 32) = *(void *)(v1400 + 168);
            *(void *)(v1400 + 168) = v1399;
            (*(void (**)(void, void, void))(**(void **)(v1400 + 72) + 144))(*(void *)(v1400 + 72), *(void *)(v1400 + 200) * (*(_DWORD *)(v1399 + 48) - 1), *(void *)(v1399 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v1399);
          }
          int v837 = 0;
          LODWORD(v20) = v1398;
          goto LABEL_1203;
        }
        uint64_t v1280 = *(void *)(v833 + 8);
        if (*(unsigned char *)(v833 + 17))
        {
          ++*(_DWORD *)(v833 + 20);
          if (*(unsigned char *)(v833 + 18))
          {
            BOOL v1281 = 0;
          }
          else
          {
            sub_1B0D12478(v833);
            BOOL v1281 = *(unsigned char *)(v833 + 17) == 0;
          }
        }
        else
        {
          BOOL v1281 = 1;
        }
        unsigned int v1401 = *(_DWORD *)(*(void *)(*(void *)(v1280 + 24) + 80) + 52);
        if (!v1281)
        {
          int v1402 = *(_DWORD *)(v833 + 20) - 1;
          *(_DWORD *)(v833 + 20) = v1402;
          if (!v1402) {
            sub_1B0D12558(v833);
          }
        }
        unsigned int v1403 = bswap32(v1401);
        if (v1403 == v834)
        {
          int v1404 = sub_1B0CD3AB8(*(void *)(v1277 + 72), v1277, *(unsigned int *)(v1277 + 4));
          uint64_t v1405 = v1277;
          int v1406 = v1404;
          uint64_t v1407 = *(void *)(v1405 + 112);
          if ((*(_WORD *)(v1407 + 52) & 0x20) != 0)
          {
            uint64_t v1409 = *(void *)(v1407 + 40);
            --*(_DWORD *)(v1409 + 152);
            *(void *)(v1407 + 32) = *(void *)(v1409 + 168);
            *(void *)(v1409 + 168) = v1407;
            (*(void (**)(void, void, void))(**(void **)(v1409 + 72) + 144))(*(void *)(v1409 + 72), *(void *)(v1409 + 200) * (*(_DWORD *)(v1407 + 48) - 1), *(void *)(v1407 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v1407);
          }
          int v837 = 0;
          LODWORD(v20) = v1406;
          if (v1406) {
            goto LABEL_1203;
          }
        }
        else
        {
          uint64_t v1408 = *(void *)(v1277 + 112);
          if ((*(_WORD *)(v1408 + 52) & 0x20) != 0)
          {
            uint64_t v1414 = *(void *)(v1408 + 40);
            --*(_DWORD *)(v1414 + 152);
            *(void *)(v1408 + 32) = *(void *)(v1414 + 168);
            *(void *)(v1414 + 168) = v1408;
            (*(void (**)(void, void, void))(**(void **)(v1414 + 72) + 144))(*(void *)(v1414 + 72), *(void *)(v1414 + 200) * (*(_DWORD *)(v1408 + 48) - 1), *(void *)(v1408 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v1408);
          }
          *(void *)&__buf[0] = 0;
          int v836 = (*(uint64_t (**)(void))(*(void *)v835 + 288))();
          if (v836) {
            goto LABEL_1201;
          }
          uint64_t v1415 = *(void *)(*(void *)&__buf[0] + 16);
          if (*(_DWORD *)(v1415 + 4) != v1403)
          {
            uint64_t v1416 = *(void *)(*(void *)&__buf[0] + 8);
            *(void *)(v1415 + 112) = *(void *)&__buf[0];
            *(void *)(v1415 + 72) = v835;
            *(void *)(v1415 + 80) = v1416;
            *(_DWORD *)(v1415 + 4) = v1403;
            if (v1403 == 1) {
              char v1417 = 100;
            }
            else {
              char v1417 = 0;
            }
            *(unsigned char *)(v1415 + 9) = v1417;
          }
          int v1418 = sub_1B0D14998(v835, v1415, 1, 0, v834, 0);
          uint64_t v1419 = *(void *)(v1415 + 112);
          if ((*(_WORD *)(v1419 + 52) & 0x20) != 0)
          {
            uint64_t v1420 = *(void *)(v1419 + 40);
            --*(_DWORD *)(v1420 + 152);
            *(void *)(v1419 + 32) = *(void *)(v1420 + 168);
            *(void *)(v1420 + 168) = v1419;
            (*(void (**)(void, void, void))(**(void **)(v1420 + 72) + 144))(*(void *)(v1420 + 72), *(void *)(v1420 + 200) * (*(_DWORD *)(v1419 + 48) - 1), *(void *)(v1419 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v1419);
          }
          if (v1418)
          {
            LODWORD(v20) = v1418;
            goto LABEL_1202;
          }
          *(void *)&__buf[0] = 0;
          int v1421 = (*(uint64_t (**)(void))(*(void *)v835 + 288))();
          if (v1421)
          {
            LODWORD(v20) = v1421;
            int v837 = 0;
            uint64_t v13 = v1498;
            goto LABEL_1203;
          }
          uint64_t v1422 = *(void *)(*(void *)&__buf[0] + 16);
          if (*(_DWORD *)(v1422 + 4) == v1403)
          {
            uint64_t v1423 = *(void *)(v1422 + 72);
          }
          else
          {
            uint64_t v1424 = *(void *)(*(void *)&__buf[0] + 8);
            *(void *)(v1422 + 112) = *(void *)&__buf[0];
            *(void *)(v1422 + 72) = v835;
            *(void *)(v1422 + 80) = v1424;
            *(_DWORD *)(v1422 + 4) = v1403;
            if (v1403 == 1) {
              char v1425 = 100;
            }
            else {
              char v1425 = 0;
            }
            *(unsigned char *)(v1422 + 9) = v1425;
            uint64_t v1423 = (uint64_t)v835;
          }
          int v1426 = sub_1B0CD3AB8(v1423, v1422, *(unsigned int *)(v1422 + 4));
          uint64_t v1427 = *(void *)(v1422 + 112);
          if ((*(_WORD *)(v1427 + 52) & 0x20) != 0)
          {
            uint64_t v1428 = *(void *)(v1427 + 40);
            --*(_DWORD *)(v1428 + 152);
            *(void *)(v1427 + 32) = *(void *)(v1428 + 168);
            *(void *)(v1428 + 168) = v1427;
            (*(void (**)(void, void, void))(**(void **)(v1428 + 72) + 144))(*(void *)(v1428 + 72), *(void *)(v1428 + 200) * (*(_DWORD *)(v1427 + 48) - 1), *(void *)(v1427 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v1427);
          }
          int v837 = v1403;
          uint64_t v13 = v1498;
          if (v1426)
          {
            LODWORD(v20) = v1426;
            goto LABEL_1202;
          }
        }
        unsigned int v1410 = dword_1E9B51ED0 / v835[13];
        do
        {
          while (1)
          {
            do
              unsigned int v1413 = v1403--;
            while (v1410 + 2 == v1413);
            if (v1403 >= 2) {
              break;
            }
            if (v1403) {
              goto LABEL_2565;
            }
          }
          unsigned int v1411 = (v1413 - 3) / (v835[14] / 5u + 1) * (v835[14] / 5u + 1);
          if (v1411 + 1 == v1410) {
            int v1412 = 3;
          }
          else {
            int v1412 = 2;
          }
        }
        while (v1403 == v1412 + v1411);
LABEL_2565:
        LODWORD(v20) = sub_1B0CE888C(v833, 4, v1403);
LABEL_1203:
        if (*(unsigned char *)(v833 + 17))
        {
          int v838 = *(_DWORD *)(v833 + 20) - 1;
          *(_DWORD *)(v833 + 20) = v838;
          if (!v838)
          {
            uint64_t v839 = v833;
            int v840 = v20;
            sub_1B0D12558(v839);
            LODWORD(v20) = v840;
          }
        }
        _WORD *v533 = 4;
        *(void *)uint64_t v532 = v837;
        uint64_t v11 = v1540;
        LOWORD(v16) = v1569;
        if (v20) {
          goto LABEL_2704;
        }
        if (v837)
        {
          sub_1B0D1BE04(v13, v832, v837, *((_DWORD *)v1517 + 1));
          int v1558 = 0;
          uint64_t v19 = (v832 + 1);
          unint64_t v18 = v1508;
        }
        else
        {
          int v1558 = 0;
          unint64_t v18 = v1508;
          uint64_t v19 = v1544;
        }
        uint64_t v12 = v1517 + 40;
        continue;
      case 0x91u:
        *(void *)&__buf[0] = 0;
        int v62 = sub_1B0CDBF48(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 2) + 8), *((_DWORD *)v12 + 1), __buf);
        uint64_t v534 = *((unsigned int *)v12 + 3);
        if (v534)
        {
          uint64_t v535 = *(void *)&__buf[0];
          *(void *)(v11 + 56) += *(void *)&__buf[0];
          if ((int)v534 >= 1) {
            *(void *)(v1570 + (v534 << 6)) += v535;
          }
        }
        LOWORD(v16) = v1569;
        if (v62) {
          goto LABEL_2597;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0x92u:
        uint64_t v536 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v537 = *(void *)(v536 + 40);
        if (*(unsigned char *)v536 == 1)
        {
          sub_1B0D168C0((void *)v13, v537);
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        int v62 = sub_1B0CDBF48(*(void *)(v537 + 8), *(_DWORD *)(v537 + 80), 0);
        LOWORD(v16) = v1569;
        if (!v62)
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        goto LABEL_2597;
      case 0x93u:
        uint64_t v538 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v538 + 20) & 0x9000) != 0) {
          sub_1B0D1D578(*(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6));
        }
        else {
          *(_WORD *)(v538 + 20) = 4;
        }
        LODWORD(__buf[0]) = 0;
        int v62 = sub_1B0D1A434(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8), (unsigned int *)__buf, *((_DWORD *)v12 + 3));
        LOWORD(v16) = v1569;
        if (v62) {
          goto LABEL_2597;
        }
        int v1558 = 0;
        *(void *)uint64_t v538 = LODWORD(__buf[0]);
        v12 += 40;
        continue;
      case 0x94u:
        ++*(unsigned char *)(v13 + 112);
        int v62 = sqlite3_exec((sqlite3 *)v13, *((const char **)v12 + 2), 0, 0, 0);
        --*(unsigned char *)(v13 + 112);
        if (v62) {
          goto LABEL_2597;
        }
        goto LABEL_1888;
      case 0x95u:
        memset(__buf, 0, 40);
        uint64_t v539 = *((unsigned int *)v12 + 1);
        if (*((void *)v12 + 2))
        {
          *(void *)&__buf[0] = v13;
          *((void *)&__buf[0] + 1) = v1485;
          LODWORD(__buf[1]) = v539;
          DWORD2(__buf[1]) = 0;
          uint64_t v540 = (void *)(*(void *)(v13 + 32) + 32 * (int)v539);
          LODWORD(__buf[2]) = *(_DWORD *)(*(void *)(v540[1] + 8) + 64);
          uint64_t v541 = (const char *)sub_1B0C904AC(v13, "SELECT*FROM\"%w\".%s WHERE %s ORDER BY rowid", a6, (uint64_t)a7, a8, a9, a10, a11, *v540);
          if (!v541)
          {
            sub_1B0CE89B4(v13);
            goto LABEL_8;
          }
          int v542 = v541;
          *(unsigned char *)(v13 + 197) = 1;
          DWORD1(__buf[1]) = 0;
          HIDWORD(__buf[1]) = 0;
          int v543 = sqlite3_exec((sqlite3 *)v13, v541, (int (__cdecl *)(void *, int, char **, char **))sub_1B0C8824C, __buf, 0);
          if (v543) {
            int v544 = v543;
          }
          else {
            int v544 = DWORD1(__buf[1]);
          }
          int v545 = v544;
          if (!(v544 | HIDWORD(__buf[1]))) {
            int v545 = sub_1B0D1045C(106960);
          }
          uint64_t v546 = (char *)v542;
          int v547 = v545;
          sub_1B0D05C10((void *)v13, v546);
          int v548 = v547;
          *(unsigned char *)(v13 + 197) = 0;
        }
        else
        {
          sub_1B0D1BE68(*(void *)(*(void *)(v13 + 32) + 32 * (int)v539 + 24));
          *(_DWORD *)(v13 + 44) &= ~0x10u;
          int v548 = sub_1B0C879A0(v13, v539, v1485, *((unsigned __int16 *)v12 + 1), v841, v842, v843, v844);
          *(_DWORD *)(v13 + 44) |= 1u;
          *(_WORD *)(v11 + 268) &= 0xFFFCu;
        }
        LOWORD(v16) = v1569;
        if (!v548)
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
        int v599 = v548;
        sub_1B0CE89B4(v13);
        if (v599 != 7)
        {
LABEL_2655:
          LODWORD(v20) = v599;
          goto LABEL_2742;
        }
        goto LABEL_8;
      case 0x96u:
        int v62 = sub_1B0CB34D0(v13, *((_DWORD *)v12 + 1));
        if (v62) {
          goto LABEL_2597;
        }
        goto LABEL_1888;
      case 0x97u:
        uint64_t v549 = sub_1B0C796D8(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 24) + 8, *((unsigned __int8 **)v12 + 2), 0);
        if (v549)
        {
          if (*(void *)(v13 + 816) || (int v1053 = *(_DWORD *)(v549 + 44) - 1, (*(_DWORD *)(v549 + 44) = v1053) == 0)) {
            sub_1B0D26BF8((void *)v13, (void *)v549);
          }
        }
        *(_DWORD *)(v13 + 44) |= 1u;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x98u:
        uint64_t v550 = sub_1B0C796D8(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 24) + 32, *((unsigned __int8 **)v12 + 2), 0);
        LOWORD(v16) = v1569;
        if (!v550) {
          goto LABEL_636;
        }
        uint64_t v551 = *(void *)(v550 + 24);
        uint64_t v554 = *(void *)(v551 + 16);
        v552 = (void *)(v551 + 16);
        uint64_t v553 = v554;
        if (v554 == v550) {
          goto LABEL_629;
        }
        do
        {
          if (!v553) {
            goto LABEL_630;
          }
          uint64_t v555 = v553;
          uint64_t v553 = *(void *)(v553 + 40);
        }
        while (v553 != v550);
        v552 = (void *)(v555 + 40);
LABEL_629:
        void *v552 = *(void *)(v550 + 40);
LABEL_630:
        sub_1B0D23288((void *)v13, v550);
LABEL_636:
        *(_DWORD *)(v13 + 44) |= 1u;
        v12 += 40;
        continue;
      case 0x99u:
        uint64_t v556 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        int v557 = (_WORD *)(v556 + 20);
        if ((*(_WORD *)(v556 + 20) & 0x9000) != 0) {
          uint64_t v556 = sub_1B0D1D578(v556);
        }
        else {
          _WORD *v557 = 4;
        }
        LOWORD(v16) = v1569;
        _WORD *v557 = 8;
        uint64_t v845 = (unint64_t *)*((void *)v12 + 2);
        a2.i64[0] = *v845;
        *(void *)uint64_t v556 = *v845;
        v12 += 40;
        continue;
      case 0x9Au:
        uint64_t v558 = (void *)sub_1B0C796D8(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 24) + 56, *((unsigned __int8 **)v12 + 2), 0);
        if (!v558)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v559 = v558[5];
        LOWORD(v16) = v1569;
        if (v559 != v558[6]) {
          goto LABEL_635;
        }
        char v1054 = (unsigned char *)v558[1];
        uint64_t v1055 = *(void *)(v559 + 24);
        if (v1055)
        {
          int v1056 = *v1054;
          if (*v1054)
          {
            unsigned int v1057 = 0;
            uint64_t v1058 = v1054 + 1;
            do
            {
              unsigned int v1057 = -1640531535 * (v1057 + byte_1B0DE1758[v1056]);
              int v1059 = *v1058++;
              int v1056 = v1059;
            }
            while (v1059);
          }
          else
          {
            unsigned int v1057 = 0;
          }
          v1254 = (_DWORD *)(v1055 + 16 * (v1057 % *(_DWORD *)(v559 + 8)));
          v1253 = (uint64_t *)(v1254 + 2);
        }
        else
        {
          v1253 = (uint64_t *)(v559 + 16);
          v1254 = (_DWORD *)(v559 + 12);
        }
        int v1293 = *v1254;
        if (!v1293) {
          goto LABEL_2298;
        }
        while (1)
        {
          v1253 = (uint64_t *)*v1253;
          v1294 = (unsigned char *)v1253[3];
          for (iuint64_t i = (unsigned __int8 *)v558[1]; ; ++ii)
          {
            uint64_t v1296 = *v1294;
            uint64_t v1297 = *ii;
            if (v1296 != v1297) {
              break;
            }
            if (!*v1294) {
              goto LABEL_2299;
            }
LABEL_2293:
            ++v1294;
          }
          if (byte_1B0DE1758[v1296] == byte_1B0DE1758[v1297]) {
            goto LABEL_2293;
          }
          if (!--v1293)
          {
LABEL_2298:
            v1253 = &qword_1E9B52220;
LABEL_2299:
            uint64_t v1298 = v1253[2];
            if (v1298)
            {
              v1301 = *(void **)(v1298 + 88);
              v1299 = (void *)(v1298 + 88);
              v1300 = v1301;
              if (v1301)
              {
                if (v1300 != v558)
                {
                  do
                  {
                    v1302 = v1300;
                    v1300 = (void *)v1300[8];
                    if (!v1300) {
                      goto LABEL_635;
                    }
                  }
                  while (v1300 != v558);
                  v1299 = v1302 + 8;
                }
                void *v1299 = v558[8];
              }
            }
LABEL_635:
            sub_1B0C8AF78((void *)v13, (uint64_t)v558);
            goto LABEL_636;
          }
        }
      case 0x9Bu:
        unint64_t v1510 = v18;
        v1518 = v12;
        uint64_t v560 = *((void *)v12 + 2);
        int v561 = *(_DWORD *)(v560 + 4);
        unsigned int v1548 = v19;
        if (v561) {
          BOOL __sb = 0;
        }
        else {
          BOOL __sb = *(_DWORD *)(v560 + 8) != 1;
        }
        unint64_t v846 = *((unsigned int *)v1518 + 2);
        uint64_t v1563 = *((int *)v1518 + 1);
        uint64_t v847 = *(void *)(*(void *)(v13 + 32) + 32 * *((unsigned __int16 *)v1518 + 1) + 8);
        v1501 = (int *)(v1570 + ((uint64_t)*((int *)v1518 + 3) << 6));
        int v848 = *v1501;
        uint64_t v849 = *(void *)(v847 + 8);
        uint64_t v850 = *(void *)(*(void *)(v849 + 8) + 48);
        if (*(unsigned char *)(v847 + 17))
        {
          ++*(_DWORD *)(v847 + 20);
          if (!*(unsigned char *)(v847 + 18)) {
            sub_1B0D12478(v847);
          }
        }
        long long v1579 = 0u;
        long long v1580 = 0u;
        long long v1578 = 0u;
        memset(&__buf[1], 0, 48);
        uint64_t v1581 = v13;
        *(void *)&__buf[0] = v849;
        *((void *)&__buf[0] + 1) = *(void *)v849;
        DWORD2(__buf[1]) = *(_DWORD *)(v849 + 64);
        HIDWORD(__buf[1]) = v848 + 1;
        *(void *)&long long v1579 = &v1574;
        *((void *)&v1579 + 1) = 0x7FFFFFFD00000064;
        BYTE5(v1580) = 1;
        if (!DWORD2(__buf[1])) {
          goto LABEL_2485;
        }
        uint64_t v1493 = v850;
        unint64_t v851 = ((unint64_t)DWORD2(__buf[1]) >> 3) + 1;
        int v852 = (void *)sub_1B0C7FC94(v851);
        if (v852)
        {
          uint64_t v853 = v852;
          bzero(v852, v851);
          *(void *)&__buf[1] = v853;
          *((void *)&v1580 + 1) = sub_1B0D121F0(*(_DWORD *)(v849 + 52));
          if (*((void *)&v1580 + 1))
          {
            unint64_t v854 = dword_1E9B51ED0 / *(_DWORD *)(v849 + 52) + 1;
            if (v854 <= DWORD2(__buf[1]))
            {
              *(unsigned char *)(*(void *)&__buf[1] + (v854 >> 3)) |= 1 << ((dword_1E9B51ED0
                                                                     / *(_DWORD *)(v849 + 52)
                                                                     + 1) & 7);
              if (__sb)
              {
LABEL_1228:
                uint64_t v855 = v1493;
                if (!v561)
                {
LABEL_2446:
                  uint64_t v1370 = *(void *)(v849 + 8);
                  *(void *)(v1370 + 48) &= ~0x200000uLL;
                  int v1371 = HIDWORD(__buf[1]);
                  if ((int)v846 >= 1 && HIDWORD(__buf[1]))
                  {
                    unint64_t v1372 = 1;
                    do
                    {
                      unsigned int v1373 = *(_DWORD *)(v560 + 4 * v1372);
                      if (v1373)
                      {
                        if (v561)
                        {
                          if (v1373 != 1 && *(unsigned char *)(v849 + 33) != 0)
                          {
                            sub_1B0D23784((uint64_t)__buf, v1373, 1, 0);
                            unsigned int v1373 = *(_DWORD *)(v560 + 4 * v1372);
                          }
                        }
                        DWORD2(__buf[3]) = v1373;
                        sub_1B0D23848((uint64_t)__buf, v1373, &v1573, 0x7FFFFFFFFFFFFFFFLL);
                        int v1371 = HIDWORD(__buf[1]);
                      }
                      if (v1372 >= v846) {
                        break;
                      }
                      ++v1372;
                    }
                    while (v1371);
                    uint64_t v1370 = *(void *)(v849 + 8);
                    uint64_t v855 = v1493;
                  }
                  *(void *)(v1370 + 48) = v855;
                  if (v561 && DWORD2(__buf[1]) && v1371)
                  {
                    unsigned int v1375 = -1;
                    do
                    {
                      unint64_t v1376 = v1375 + 2;
                      int v1377 = 1 << ((v1375 + 2) & 7);
                      if ((v1377 & *(unsigned char *)(*(void *)&__buf[1] + (v1376 >> 3))) != 0
                        || (v1376 >= 2
                          ? ((unsigned int v1379 = v1375 / (*(_DWORD *)(v849 + 56) / 5u + 1) * (*(_DWORD *)(v849 + 56) / 5u + 1),
                              v1379 + 1 != dword_1E9B51ED0 / *(_DWORD *)(v849 + 52))
                           ? (int v1380 = 2)
                           : (int v1380 = 3),
                             unsigned int v1378 = v1380 + v1379)
                          : (unsigned int v1378 = 0),
                            (v1376 != v1378 || !*(unsigned char *)(v849 + 33))
                         && (sub_1B0D23628((uint64_t)__buf, "Page %u: never used", v1375 + 2),
                             (v1377 & *(unsigned char *)(*(void *)&__buf[1] + (v1376 >> 3))) != 0)))
                      {
                        if (v1376 >= 2)
                        {
                          unsigned int v1382 = v1375 / (*(_DWORD *)(v849 + 56) / 5u + 1) * (*(_DWORD *)(v849 + 56) / 5u + 1);
                          int v1383 = v1382 + 1 == dword_1E9B51ED0 / *(_DWORD *)(v849 + 52) ? 3 : 2;
                          unsigned int v1381 = v1383 + v1382;
                        }
                        else
                        {
                          unsigned int v1381 = 0;
                        }
                        if (v1376 == v1381 && *(unsigned char *)(v849 + 33)) {
                          sub_1B0D23628((uint64_t)__buf, "Page %u: pointer map referenced", v1375 + 2);
                        }
                      }
                      if (v1375 + 3 > DWORD2(__buf[1])) {
                        break;
                      }
                      ++v1375;
                    }
                    while (HIDWORD(__buf[1]));
                  }
                  goto LABEL_2485;
                }
LABEL_1973:
                if (!*(unsigned char *)(v849 + 33))
                {
                  if (bswap32(*(_DWORD *)(*(void *)(*(void *)(v849 + 24) + 80) + 64))) {
                    sub_1B0D23628((uint64_t)__buf, "incremental_vacuum enabled with a max rootpage of zero");
                  }
                  goto LABEL_2446;
                }
                if ((int)v846 < 1)
                {
                  unsigned int v1160 = 0;
                }
                else
                {
                  if (v846 < 8)
                  {
                    unint64_t v1159 = 0;
                    unsigned int v1160 = 0;
                    goto LABEL_2440;
                  }
                  unint64_t v1159 = v846 & 0x7FFFFFF8;
                  v1362 = (uint32x4_t *)(v560 + 20);
                  uint32x4_t v1363 = 0uLL;
                  uint64_t v1364 = v846 & 0xFFFFFFF8;
                  uint32x4_t v1365 = 0uLL;
                  do
                  {
                    uint32x4_t v1363 = vmaxq_u32(v1363, v1362[-1]);
                    uint32x4_t v1365 = vmaxq_u32(v1365, *v1362);
                    v1362 += 2;
                    v1364 -= 8;
                  }
                  while (v1364);
                  unsigned int v1160 = vmaxvq_u32(vmaxq_u32(v1363, v1365));
                  if (v1159 != v846)
                  {
LABEL_2440:
                    unint64_t v1366 = v846 - v1159;
                    v1367 = (unsigned int *)(v560 + 4 * v1159 + 4);
                    do
                    {
                      unsigned int v1369 = *v1367++;
                      unsigned int v1368 = v1369;
                      if (v1160 <= v1369) {
                        unsigned int v1160 = v1368;
                      }
                      --v1366;
                    }
                    while (v1366);
                  }
                }
                if (v1160 != bswap32(*(_DWORD *)(*(void *)(*(void *)(v849 + 24) + 80) + 52))) {
                  sub_1B0D23628((uint64_t)__buf, "max rootpage (%u) disagrees with header (%u)");
                }
                goto LABEL_2446;
              }
            }
            else if (__sb)
            {
              goto LABEL_1228;
            }
            *(void *)&__buf[3] = "Freelist: ";
            sub_1B0D2330C((uint64_t)__buf, 1, bswap32(*(_DWORD *)(*(void *)(*(void *)(v849 + 24) + 80) + 32)), bswap32(*(_DWORD *)(*(void *)(*(void *)(v849 + 24) + 80) + 36)));
            *(void *)&__buf[3] = 0;
            uint64_t v855 = v1493;
            if (!v561) {
              goto LABEL_2446;
            }
            goto LABEL_1973;
          }
        }
        else
        {
          *(void *)&__buf[1] = 0;
        }
        DWORD1(__buf[2]) = 7;
        HIDWORD(__buf[1]) = 0;
        if (!LODWORD(__buf[2])) {
          LODWORD(__buf[2]) = 1;
        }
LABEL_2485:
        sub_1B0D10ED8(*((unint64_t *)&v1580 + 1));
        uint64_t v1384 = *(void *)&__buf[1];
        uint64_t v11 = v1540;
        unint64_t v18 = v1510;
        uint64_t v12 = v1518;
        if (!*(void *)&__buf[1]) {
          goto LABEL_2492;
        }
        v1385 = &off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_2491;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v1384);
        --qword_1EB220150;
        off_1EB21C9E8(v1384);
        uint64_t v1384 = xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          v1385 = &xmmword_1EB21CA50;
LABEL_2491:
          (*v1385)(v1384);
        }
LABEL_2492:
        uint64_t v1386 = SLODWORD(__buf[2]);
        if (LODWORD(__buf[2]))
        {
          if ((void)v1579 && (*(unsigned char *)(v1579 + v1580) = 0, HIDWORD(v1579)) && (BYTE5(v1580) & 4) == 0) {
            __suint64_t k = (char *)sub_1B0D06044((uint64_t *)&v1578 + 1);
          }
          else {
            __suint64_t k = (char *)v1579;
          }
        }
        else
        {
          char v1387 = BYTE5(v1580);
          if ((BYTE5(v1580) & 4) != 0)
          {
            if ((void)v1579)
            {
              sub_1B0D05C10(*((void **)&v1578 + 1), (void *)v1579);
              char v1387 = BYTE5(v1580);
            }
            BYTE5(v1580) = v1387 & 0xFB;
          }
          __suint64_t k = 0;
          DWORD2(v1579) = 0;
          LODWORD(v1580) = 0;
          *(void *)&long long v1579 = 0;
        }
        uint64_t v259 = v1548;
        if (*(unsigned char *)(v847 + 17))
        {
          int v1388 = *(_DWORD *)(v847 + 20) - 1;
          *(_DWORD *)(v847 + 20) = v1388;
          if (!v1388) {
            sub_1B0D12558(v847);
          }
        }
        uint64_t v1389 = v1570 + (v1563 << 6);
        LODWORD(v19) = DWORD1(__buf[2]);
        v1390 = (_WORD *)(v1389 + 20);
        if ((*(_WORD *)(v1389 + 20) & 0x9000) != 0) {
          sub_1B0D18138((int *)(v1570 + (v1563 << 6)));
        }
        else {
          _WORD *v1390 = 1;
        }
        if (v1386)
        {
          if (v19)
          {
            sqlite3_free(__sk);
LABEL_2683:
            LODWORD(v20) = v19;
            LOBYTE(v19) = v259;
            goto LABEL_2742;
          }
          *(void *)v1501 = *(void *)v1501 - v1386 + 1;
          sub_1B0C79BBC(v1389, __sk, -1, 1u, (uint64_t (*)(uint64_t))sqlite3_free);
        }
        v1391 = (unsigned char *)(v1570 + (v1563 << 6) + 22);
        if ((*v1390 & 2) != 0)
        {
          LOWORD(v16) = v1569;
          if (*v1391 != v1557) {
            sub_1B0CD43EC((int *)v1389, v1557);
          }
          goto LABEL_1757;
        }
        unsigned char *v1391 = v1557;
        goto LABEL_1756;
      case 0x9Cu:
        uint64_t v562 = *((int *)v12 + 2);
        unint64_t v563 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        if ((*(_WORD *)(v563 + 20) & 0x10) == 0
          && sub_1B0D1BF78(v1570 + ((uint64_t)*((int *)v12 + 1) << 6)))
        {
          goto LABEL_8;
        }
        sub_1B0D1C088(*(void *)(v563 + 8), *(void *)(v1570 + (v562 << 6)));
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0x9Du:
        uint64_t v564 = (__n128 *)(*(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6));
        uint64_t v565 = &v564[1].n128_i16[2];
        if ((v564[1].n128_u16[2] & 0x9000) != 0)
        {
          uint64_t v564 = (__n128 *)sub_1B0D1D578((uint64_t)v564);
          __int16 v566 = *v565;
        }
        else
        {
          __int16 v566 = 4;
          *uint64_t v565 = 4;
        }
        uint64_t v856 = *(void *)(*(void *)(v11 + 352) + 24)
             + ((*(int *)(*(void *)(*(void *)(v11 + 352) + 16) + 40 * *(int *)(*(void *)(v11 + 352) + 76) + 4)
               + (uint64_t)*((int *)v12 + 1)) << 6);
        LOWORD(v16) = v1569;
        if ((v566 & 0x9000) != 0)
        {
          sub_1B0D1D5BC((uint64_t)v564, (long long *)v856, 0x4000);
          v12 += 40;
          continue;
        }
        a2 = *(int64x2_t *)v856;
        v564[1].n128_u64[0] = *(void *)(v856 + 16);
        *uint64_t v564 = (__n128)a2;
        if ((*(unsigned char *)(v856 + 21) & 0x20) != 0) {
          goto LABEL_21;
        }
        *uint64_t v565 = *v565 & 0x8FFF | 0x4000;
        v12 += 40;
        continue;
      case 0x9Eu:
        if ((*(unsigned char *)(v13 + 50) & 8) != 0)
        {
          *(void *)(v13 + 808) += *((int *)v12 + 2);
          LOWORD(v16) = v1569;
          v12 += 40;
        }
        else
        {
          uint64_t v567 = *((int *)v12 + 2);
          LOWORD(v16) = v1569;
          if (*((_DWORD *)v12 + 1)) {
            *(void *)(v13 + 800) += v567;
          }
          else {
            *(void *)(v11 + 80) += v567;
          }
          v12 += 40;
        }
        continue;
      case 0x9Fu:
        uint64_t v568 = *(void *)(v11 + 352);
        unint64_t v569 = v1570;
        if (v568)
        {
          do
          {
            uint64_t v570 = v568;
            uint64_t v568 = *(void *)(v568 + 8);
          }
          while (v568);
          unint64_t v569 = *(void *)(v570 + 24);
        }
        uint64_t v571 = *((int *)v12 + 1);
        unint64_t v572 = v569 + (v571 << 6);
        if (v569)
        {
          __int16 v573 = *(_WORD *)(v572 + 20);
          LOWORD(v16) = v1569;
          if ((v573 & 0x24) != 0)
          {
            uint64_t v574 = *(void *)v572;
          }
          else if ((v573 & 8) != 0)
          {
            a2.i64[0] = *(void *)v572;
            uint64_t v1166 = 0x7FFFFFFFFFFFFFFFLL;
            if (*(double *)v572 <= 9.22337204e18) {
              uint64_t v1166 = (uint64_t)*(double *)v572;
            }
            if (*(double *)a2.i64 >= -9.22337204e18) {
              uint64_t v574 = v1166;
            }
            else {
              uint64_t v574 = 0x8000000000000000;
            }
          }
          else if ((v573 & 0x12) != 0 && *(void *)(v569 + (v571 << 6) + 8))
          {
            uint64_t v574 = sub_1B0D186C0(v569 + (v571 << 6));
          }
          else
          {
            uint64_t v574 = 0;
          }
        }
        else
        {
          sub_1B0CE1978(89717);
          uint64_t v574 = 0;
          LOWORD(v16) = v1569;
        }
        *(void *)unint64_t v572 = v574;
        *(_WORD *)(v569 + (v571 << 6) + 20) = *(_WORD *)(v569 + (v571 << 6) + 20) & 0xF240 | 4;
        uint64_t v1255 = *((int *)v12 + 2);
        unint64_t v1256 = v1570 + (v1255 << 6);
        if (v1570)
        {
          __int16 v1257 = *(_WORD *)(v1256 + 20);
          if ((v1257 & 0x24) != 0)
          {
            uint64_t v1258 = *(void *)v1256;
            goto LABEL_2207;
          }
          if ((v1257 & 8) != 0)
          {
            a2.i64[0] = *(void *)v1256;
            uint64_t v1259 = 0x7FFFFFFFFFFFFFFFLL;
            if (*(double *)v1256 <= 9.22337204e18) {
              uint64_t v1259 = (uint64_t)*(double *)v1256;
            }
            if (*(double *)a2.i64 >= -9.22337204e18) {
              uint64_t v1258 = v1259;
            }
            else {
              uint64_t v1258 = 0x8000000000000000;
            }
LABEL_2207:
            *(void *)unint64_t v1256 = v1258;
            *(_WORD *)(v1570 + (v1255 << 6) + 20) = *(_WORD *)(v1570 + (v1255 << 6) + 20) & 0xF240 | 4;
            if (*(void *)v572 < v1258)
            {
              *(void *)unint64_t v572 = v1258;
              v12 += 40;
              continue;
            }
            goto LABEL_21;
          }
          if ((v1257 & 0x12) != 0 && *(void *)(v1570 + (v1255 << 6) + 8))
          {
            uint64_t v1258 = sub_1B0D186C0(v1570 + (v1255 << 6));
            goto LABEL_2207;
          }
        }
        else
        {
          sub_1B0CE1978(89717);
        }
        uint64_t v1258 = 0;
        goto LABEL_2207;
      case 0xA0u:
        uint64_t v575 = *((int *)v12 + 3);
        uint64_t v576 = *((int *)v12 + 1);
        uint64_t v577 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v577 + 20) & 0x9000) != 0) {
          uint64_t v577 = sub_1B0D1D578(v577);
        }
        else {
          *(_WORD *)(v577 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        uint64_t v857 = *(void *)(v1570 + (v576 << 6));
        if (v857 < 1)
        {
          *(void *)uint64_t v577 = -1;
          v12 += 40;
        }
        else
        {
          unint64_t v858 = *(void *)(v1570 + (v575 << 6)) & ~(*(uint64_t *)(v1570 + (v575 << 6)) >> 63);
          unint64_t v859 = v857 ^ 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v860 = v858 + v857;
          if (v859 < v858) {
            uint64_t v860 = -1;
          }
          *(void *)uint64_t v577 = v860;
          v12 += 40;
        }
        continue;
      case 0xA1u:
      case 0xA2u:
        int v116 = *((unsigned __int16 *)v12 + 1);
        uint64_t v117 = (8 * v116 + 55) & 0xFFFF8;
        uint64_t v118 = sub_1B0D05DC0(v13, v117 + 64);
        if (!v118) {
          goto LABEL_8;
        }
        uint64_t v119 = v118;
        *(void *)(v118 + 16) = 0;
        uint64_t v120 = v118 + v117;
        *(void *)uint64_t v118 = v118 + v117;
        *(_WORD *)(v120 + 20) = 1;
        *(void *)(v120 + 24) = v13;
        *(_DWORD *)(v120 + 32) = 0;
        *(void *)(v118 + 8) = *((void *)v12 + 2);
        *(void *)(v118 + 24) = v11;
        *(unsigned char *)(v118 + 41) = 0;
        *(_DWORD *)(v118 + 32) = -858993459 * ((unint64_t)(v12 - v1568) >> 3);
        *(_DWORD *)(v118 + 36) = 0;
        *(unsigned char *)(v118 + 40) = v1557;
        *(unsigned char *)(v118 + 42) = v116;
        *((void *)v12 + 2) = v118;
        *(_WORD *)uint64_t v12 = -3677;
LABEL_657:
        uint64_t v578 = *((int *)v12 + 3);
        unint64_t v579 = v1570 + (v578 << 6);
        if (*(void *)(v119 + 16) == v579)
        {
          uint64_t v580 = *(unsigned __int8 *)(v119 + 42);
          LOWORD(v16) = v1569;
          goto LABEL_932;
        }
        *(void *)(v119 + 16) = v579;
        uint64_t v580 = *(unsigned __int8 *)(v119 + 42);
        if (!*(unsigned char *)(v119 + 42))
        {
          LOWORD(v16) = v1569;
          goto LABEL_932;
        }
        unint64_t v581 = *((int *)v12 + 2);
        if (v580 >= 4)
        {
          unint64_t v582 = v580 & 3;
          a2.i64[0] = *((int *)v12 + 2);
          int64x2_t v706 = vdupq_n_s64(v581);
          unint64_t v707 = *(unsigned __int8 *)(v119 + 42);
          uint64_t v708 = v580 & 0xFC;
          do
          {
            a4.i64[0] = v707;
            int64x2_t v709 = vaddq_s64(vdupq_n_s64(v707), (int64x2_t)xmmword_1B0DE1510);
            int64x2_t v710 = vdupq_n_s64(v1570);
            int8x16_t v711 = (int8x16_t)vaddq_s64(v710, vshlq_n_s64(vaddq_s64(v709, v706), 6uLL));
            int8x16_t v712 = (int8x16_t)vaddq_s64(vdupq_lane_s64(vshlq_n_s64(vaddq_s64(a2, a4), 6uLL).i64[0], 0), vaddq_s64(v710, (int64x2_t)xmmword_1B0DE1520));
            uint64_t v713 = v119 + 8 * v709.i64[0];
            *(int8x16_t *)(v713 + 40) = vextq_s8(v711, v711, 8uLL);
            a4 = (int64x2_t)vextq_s8(v712, v712, 8uLL);
            *(int64x2_t *)(v713 + 24) = a4;
            v707 -= 4;
            v708 -= 4;
          }
          while (v708);
          LOWORD(v16) = v1569;
          if ((v580 & 0xFC) == v580)
          {
LABEL_932:
            ++*(_DWORD *)(v1570 + (v578 << 6) + 16);
            uint64_t v715 = 48;
            if (!*((_DWORD *)v12 + 1)) {
              uint64_t v715 = 24;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 + 8) + v715))(v119, v580, v119 + 48);
            int v716 = *(_DWORD *)(v119 + 36);
            if (v716)
            {
              int v717 = v1558;
              if (v716 >= 1)
              {
                uint64_t v718 = *(void *)v119;
                if (*(void *)v119)
                {
                  int v719 = *(unsigned __int16 *)(v718 + 20);
                  if ((~v719 & 0x202) != 0 || *(unsigned char *)(v718 + 22) != 1)
                  {
                    if (v719) {
                      LOBYTE(v718) = 0;
                    }
                    else {
                      LOBYTE(v718) = sub_1B0D18254((int *)v718, 1);
                    }
                  }
                  else
                  {
                    uint64_t v718 = *(void *)(v718 + 8);
                  }
                }
                sub_1B0D17334((uint64_t *)v11, "%s", a6, (uint64_t)a7, a8, a9, a10, a11, v718);
                int v717 = *(_DWORD *)(v119 + 36);
              }
              if (*(unsigned char *)(v119 + 41))
              {
                uint64_t v1004 = *((int *)v12 - 9);
                if (v1004)
                {
                  uint64_t v1005 = v1570 + (v1004 << 6);
                  if ((*(_WORD *)(v1005 + 20) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v1005, 1);
                  }
                  else
                  {
                    *(void *)uint64_t v1005 = 1;
                    *(_WORD *)(v1005 + 20) = 4;
                  }
                }
                *(unsigned char *)(v119 + 41) = 0;
              }
              uint64_t v1006 = *(void *)v119;
              if ((*(_WORD *)(*(void *)v119 + 20) & 0x9000) != 0 || *(_DWORD *)(v1006 + 32))
              {
                sub_1B0D180E4(v1006);
                uint64_t v1006 = *(void *)v119;
              }
              int v1558 = 0;
              *(_WORD *)(v1006 + 20) = 1;
              *(_DWORD *)(v119 + 36) = 0;
              if (v717)
              {
                LODWORD(v20) = v717;
                goto LABEL_2742;
              }
            }
            goto LABEL_21;
          }
        }
        else
        {
          unint64_t v582 = *(unsigned __int8 *)(v119 + 42);
          LOWORD(v16) = v1569;
        }
        uint64_t v714 = v1570 + ((v582 + v581) << 6) - 64;
        do
        {
          *(void *)(v119 + 40 + 8 * v582) = v714;
          v714 -= 64;
          BOOL v1303 = v582-- > 1;
        }
        while (v1303);
        goto LABEL_932;
      case 0xA3u:
        uint64_t v119 = *((void *)v12 + 2);
        goto LABEL_657;
      case 0xA4u:
      case 0xA5u:
        uint64_t v121 = *((int *)v12 + 1);
        unint64_t v122 = v1570 + (v121 << 6);
        uint64_t v123 = *((int *)v12 + 3);
        if (v123)
        {
          unint64_t v124 = v1570 + (v123 << 6);
          uint64_t v125 = *((void *)v12 + 2);
          memset((char *)&__buf[1] + 8, 0, 32);
          if ((*(_WORD *)(v124 + 20) & 0x9000) != 0) {
            sub_1B0D18138((int *)v124);
          }
          else {
            *(_WORD *)(v124 + 20) = 1;
          }
          *((void *)&__buf[0] + 1) = v125;
          *(void *)&__buf[1] = v1570 + (v121 << 6);
          *(void *)&__buf[0] = v124;
          BYTE8(__buf[2]) = *(unsigned char *)(*(void *)(*(void *)&__buf[1] + 24) + 100);
          (*(void (**)(_OWORD *))(v125 + 40))(__buf);
          int v676 = DWORD1(__buf[2]);
          unint64_t v122 = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        }
        else
        {
          int v676 = sub_1B0CCF21C(v1570 + (v121 << 6), *((void *)v12 + 2));
        }
        LOWORD(v16) = v1569;
        if (!v676)
        {
          if ((*(_WORD *)(v122 + 20) & 2) != 0)
          {
            if (*(unsigned __int8 *)(v122 + 22) != v1557) {
              sub_1B0CD43EC((int *)v122, v1557);
            }
            int v1558 = 0;
            v12 += 40;
          }
          else
          {
            int v1558 = 0;
            *(unsigned char *)(v122 + 22) = v1557;
            v12 += 40;
          }
          continue;
        }
        int v1430 = v676;
        if (!v122) {
          goto LABEL_2659;
        }
        int v1431 = *(unsigned __int16 *)(v122 + 20);
        if ((~v1431 & 0x202) != 0 || *(unsigned char *)(v122 + 22) != 1)
        {
          if (v1431) {
LABEL_2659:
          }
            LOBYTE(v1432) = 0;
          else {
            LOBYTE(v1432) = sub_1B0D18254((int *)v122, 1);
          }
        }
        else
        {
          uint64_t v1432 = *(void *)(v122 + 8);
        }
        sub_1B0D17334((uint64_t *)v11, "%s", a6, (uint64_t)a7, a8, a9, a10, a11, v1432);
        LODWORD(v20) = v1430;
        goto LABEL_2742;
      case 0xA6u:
        if (*((_DWORD *)v12 + 1))
        {
          *(_WORD *)(v11 + 268) = *(_WORD *)(v11 + 268) & 0xFFFC | (*((_WORD *)v12 + 4) + 1) & 3;
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v861 = *(void *)(v13 + 8);
        LOWORD(v16) = v1569;
        if (v861)
        {
          __int16 v862 = (*((_WORD *)v12 + 4) + 1) & 3;
          do
          {
            *(_WORD *)(v861 + 268) = *(_WORD *)(v861 + 268) & 0xFFFC | v862;
            uint64_t v861 = *(void *)(v861 + 16);
          }
          while (v861);
        }
        goto LABEL_21;
      case 0xA7u:
        uint64_t v583 = *(void *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1)) + 40);
        char v584 = *(unsigned char *)(v583 + 1) | 0x40;
        goto LABEL_666;
      case 0xA8u:
        uint64_t v583 = *(void *)(*(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1)) + 40);
        char v584 = *(unsigned char *)(v583 + 1) & 0xBF;
LABEL_666:
        *(unsigned char *)(v583 + 1) = v584;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0xA9u:
        a6 = v12[12];
        if (!v12[12] && (*(unsigned char *)(v13 + 52) & 4) != 0)
        {
          LOWORD(v16) = v1569;
          v12 += 40;
        }
        else
        {
          int v585 = sub_1B0D1D12C(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8), *((_DWORD *)v12 + 2), a6);
          LOWORD(v16) = v1569;
          if (v585)
          {
            LODWORD(v20) = v585;
            if (v585 == 6)
            {
              uint64_t v1477 = *((void *)v12 + 2);
              v1445 = "database table is locked: %s";
              v1447 = (uint64_t *)v11;
              int v1446 = v20;
LABEL_2668:
              sub_1B0D17334(v1447, v1445, a6, (uint64_t)a7, a8, a9, a10, a11, v1477);
              LODWORD(v20) = v1446;
            }
            goto LABEL_2742;
          }
          int v1558 = 0;
          v12 += 40;
        }
        continue;
      case 0xAAu:
        uint64_t v586 = *((void *)v12 + 2);
        uint64_t v587 = *(unsigned int *)(v13 + 564);
        if ((int)v587 < 1 || *(void *)(v13 + 600))
        {
          if (!v586) {
            goto LABEL_1888;
          }
          uint64_t v588 = **(void **)(v586 + 16);
          uint64_t v20 = *(void *)(v588 + 112);
          LOWORD(v16) = v1569;
          if (!v20) {
            goto LABEL_2057;
          }
          if ((int)v587 >= 1)
          {
            uint64_t v589 = *(void **)(v13 + 600);
            do
            {
              if (*v589 == v586)
              {
                LODWORD(v20) = 0;
                goto LABEL_2057;
              }
              ++v589;
              --v587;
            }
            while (v587);
          }
          *(double *)a2.i64 = sub_1B0D24A54(v13);
          LODWORD(v20) = v590;
          if (!v590)
          {
            LODWORD(v20) = (*(uint64_t (**)(void, double))(v588 + 112))(*(void *)(v586 + 16), *(double *)a2.i64);
            if (!v20)
            {
              int v591 = *(_DWORD *)(v13 + 792);
              int v592 = *(_DWORD *)(v13 + 788);
              uint64_t v593 = *(void *)(v13 + 600);
              uint64_t v594 = *(int *)(v13 + 564);
              *(_DWORD *)(v13 + 564) = v594 + 1;
              *(void *)(v593 + 8 * v594) = v586;
              ++*(_DWORD *)(v586 + 24);
              LODWORD(v20) = v592 + v591;
              if (v20)
              {
                uint64_t v595 = *(uint64_t (**)(void, void))(v588 + 160);
                if (v595)
                {
                  *(_DWORD *)(v586 + 32) = v20;
                  LODWORD(v20) = v595(*(void *)(v586 + 16), (v20 - 1));
                }
                else
                {
                  LODWORD(v20) = 0;
                }
              }
            }
            goto LABEL_2057;
          }
        }
        else
        {
          LODWORD(v20) = 6;
          LOWORD(v16) = v1569;
        }
        if (!v586) {
          goto LABEL_2058;
        }
LABEL_2057:
        uint64_t v1198 = *(void *)(v586 + 16);
        int v1199 = v20;
        sub_1B0D17574(v11, v1198);
        LODWORD(v20) = v1199;
LABEL_2058:
        if (v20) {
          goto LABEL_2742;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0xABu:
        memset(&__buf[2], 0, 32);
        memset(__buf, 0, 24);
        *((void *)&__buf[1] + 1) = v13;
        uint64_t v596 = (int64x2_t *)(v1570 + ((uint64_t)*((int *)v12 + 2) << 6));
        a2 = *v596;
        *(void *)&__buf[1] = v596[1].i64[0];
        __buf[0] = a2;
        char v597 = BYTE4(__buf[1]);
        int v598 = WORD2(__buf[1]) & 0xEFFF;
        WORD2(__buf[1]) &= ~0x1000u;
        if ((v597 & 0x12) == 0 || (v596[1].i16[2] & 0x2000) != 0)
        {
          int v599 = 0;
        }
        else
        {
          WORD2(__buf[1]) = v598 | 0x4000;
          int v599 = sub_1B0CEA388((int *)__buf);
          int v598 = WORD2(__buf[1]);
        }
        if ((~v598 & 0x202) != 0 || BYTE6(__buf[1]) != 1)
        {
          LOWORD(v16) = v1569;
          if (v598) {
            goto LABEL_1000;
          }
          a6 = sub_1B0D18254((int *)__buf, 1);
        }
        else
        {
          a6 = *((void *)&__buf[0] + 1);
          LOWORD(v16) = v1569;
        }
        if (a6)
        {
          sub_1B0D1D2C8(v13, *((_DWORD *)v12 + 1), (char *)a6, (void **)v1485);
          int v599 = v738;
        }
LABEL_1000:
        if (WORD2(__buf[1]) & 0x9000 | LODWORD(__buf[2])) {
          sub_1B0D180E4((uint64_t)__buf);
        }
        if (v599) {
          goto LABEL_2655;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0xACu:
        ++*(_DWORD *)(v13 + 224);
        uint64_t v600 = sub_1B0CF60C8(v13, *((char **)v12 + 2), *(unsigned char **)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1)));
        if (!v600
          || (uint64_t v601 = v600, *(unsigned char *)(v600 + 63) != 1)
          || (v603 = (void *)(v600 + 80), (uint64_t v602 = *(void **)(v600 + 80)) == 0))
        {
          int v1558 = 0;
          --*(_DWORD *)(v13 + 224);
          LOWORD(v16) = v1569;
          v12 += 40;
          continue;
        }
        uint64_t v604 = *(void *)(v600 + 80);
        LOWORD(v16) = v1569;
        do
        {
          if (*(int *)(*(void *)(v604 + 16) + 8) >= 1)
          {
            --*(_DWORD *)(v13 + 224);
            LODWORD(v20) = 6;
            goto LABEL_2742;
          }
          uint64_t v604 = *(void *)(v604 + 40);
        }
        while (v604);
        int v605 = 0;
        *uint64_t v603 = 0;
        do
        {
          uint64_t v608 = *v602;
          uint64_t v609 = (void *)v602[5];
          if (*v602 == v13)
          {
            uint64_t v607 = 0;
            uint64_t v606 = (void *)(v600 + 80);
            int v605 = v602;
          }
          else
          {
            uint64_t v606 = (void *)(v608 + 608);
            uint64_t v607 = *(void *)(v608 + 608);
          }
          *uint64_t v606 = v602;
          v602[5] = v607;
          uint64_t v602 = v609;
        }
        while (v609);
        uint64_t v1185 = *(void *)v605[1];
        v1186 = *(uint64_t (**)(void))(v1185 + 40);
        if (!v1186) {
          v1186 = *(uint64_t (**)(void))(v1185 + 32);
        }
        ++*(_DWORD *)(v600 + 44);
        int v1187 = v1186(v605[2]);
        LODWORD(v20) = v1187;
        if (!v1187)
        {
          v605[2] = 0;
          *uint64_t v603 = 0;
          v1188 = (void *)*v605;
          int v1189 = *((_DWORD *)v605 + 6) - 1;
          *((_DWORD *)v605 + 6) = v1189;
          if (!v1189)
          {
            unsigned int v1555 = v19;
            int v1190 = v1187;
            uint64_t v1191 = v605[2];
            v1192 = v1188;
            if (v1191)
            {
              (*(void (**)(uint64_t))(*(void *)v1191 + 32))(v1191);
              v1192 = (void *)*v605;
            }
            uint64_t v1193 = v605[1];
            int v1194 = *(_DWORD *)(v1193 + 16) - 1;
            *(_DWORD *)(v1193 + 16) = v1194;
            if (!v1194)
            {
              v1195 = *(void (**)(void))(v1193 + 32);
              if (v1195) {
                v1195(*(void *)(v1193 + 24));
              }
              sub_1B0D05C10(v1192, (void *)v1193);
            }
            sub_1B0D05C10(v1188, v605);
            LOWORD(v16) = v1569;
            uint64_t v11 = v1540;
            LODWORD(v20) = v1190;
            uint64_t v19 = v1555;
          }
        }
        if (*(void *)(v13 + 816) || (int v1359 = *(_DWORD *)(v601 + 44) - 1, (*(_DWORD *)(v601 + 44) = v1359) == 0))
        {
          v1196 = (void *)v601;
          int v1197 = v20;
          sub_1B0D26BF8((void *)v13, v1196);
          LODWORD(v20) = v1197;
        }
        --*(_DWORD *)(v13 + 224);
        if (!v20)
        {
          int v1558 = 0;
          v12 += 40;
          continue;
        }
LABEL_2742:
        int v1457 = 7;
        if (!*(unsigned char *)(v13 + 103))
        {
          int v1457 = v20;
          if (v20 == 8458) {
            int v1457 = sub_1B0D1045C(108919);
          }
        }
        if (!*(void *)(v11 + 168) && v1457 != 3082)
        {
          v1458 = "abort due to ROLLBACK";
          if (v1457 != 516)
          {
            if (v1457 == 101)
            {
              v1458 = "no more rows available";
            }
            else if (v1457 == 100)
            {
              v1458 = "another row available";
            }
            else
            {
              v1458 = "unknown error";
              if (v1457 <= 0x1Cu)
              {
                v1458 = "unknown error";
                if (((0x1410004uLL >> v1457) & 1) == 0) {
                  v1458 = off_1E5FF0368[v1457];
                }
              }
            }
          }
          sub_1B0D17334((uint64_t *)v11, "%s", a6, (uint64_t)a7, a8, a9, a10, a11, (char)v1458);
        }
        *(_DWORD *)(v11 + 52) = v1457;
        if (v1457 != 3082 && (v1457 & 0xFB) == 0xA)
        {
          int v1459 = 0;
          v1460 = *(uint64_t (**)(void))(*(void *)v13 + 128);
          if (v1460) {
            int v1459 = v1460();
          }
          *(_DWORD *)(v13 + 92) = v1459;
        }
        sqlite3_log(v1457, "statement aborts at %d: [%s] %s", -858993459 * ((v12 - v1568) >> 3), *(const char **)(v11 + 320), *(const char **)(v11 + 168));
        if (*(unsigned char *)(v11 + 267) == 2) {
          sub_1B0C8B23C(v11);
        }
        if (v1457 != 11)
        {
          if (v1457 == 3082 && !*(unsigned char *)(v13 + 103) && !*(unsigned char *)(v13 + 104))
          {
            *(unsigned char *)(v13 + 103) = 1;
            if (*(int *)(v13 + 220) >= 1) {
              *(_DWORD *)(v13 + 424) = 1;
            }
            ++*(_DWORD *)(v13 + 432);
            *(_WORD *)(v13 + 436) = 0;
            uint64_t v1467 = *(void *)(v13 + 344);
            if (v1467)
            {
              sub_1B0CEF2BC(v1467, "out of memory", v1461, v1462, v1463, v1464, v1465, v1466, v1478);
              for (juint64_t j = *(void *)(v13 + 344); ; ++*(_DWORD *)(jj + 48))
              {
                *(_DWORD *)(jj + 24) = 7;
                juint64_t j = *(void *)(jj + 256);
                if (!jj) {
                  break;
                }
              }
            }
          }
LABEL_2774:
          if ((_BYTE)v19) {
            goto LABEL_2775;
          }
LABEL_2783:
          uint64_t v1448 = 1;
          LOBYTE(v19) = 0;
          goto LABEL_2784;
        }
        if (*(unsigned char *)(v13 + 101)) {
          goto LABEL_2774;
        }
        *(void *)(v13 + 48) |= 0x200000000uLL;
        if (!(_BYTE)v19) {
          goto LABEL_2783;
        }
LABEL_2775:
        uint64_t v1469 = *(void *)(v13 + 32);
        uint64_t v1470 = *(void *)(v1469 + 32 * (v19 - 1) + 24);
        *(_WORD *)(v1470 + 114) |= 8u;
        *(_WORD *)(*(void *)(v1469 + 56) + 114) |= 8u;
        *(_DWORD *)(v13 + 44) &= ~0x10u;
        if (!*(_DWORD *)(v13 + 72))
        {
          int v1471 = *(_DWORD *)(v13 + 40);
          if (v1471 >= 1)
          {
            uint64_t v1472 = 0;
            uint64_t v1473 = 24;
            do
            {
              uint64_t v1474 = *(void *)(*(void *)(v13 + 32) + v1473);
              if ((*(_WORD *)(v1474 + 114) & 8) != 0)
              {
                sub_1B0D1BE68(v1474);
                int v1471 = *(_DWORD *)(v13 + 40);
              }
              ++v1472;
              v1473 += 32;
            }
            while (v1472 < v1471);
          }
        }
        uint64_t v1448 = 1;
LABEL_2784:
        while (v18 >= v17)
        {
          v1475 = *(unsigned int (**)(void))(v13 + 544);
          if (!v1475) {
            break;
          }
          v17 += *(unsigned int *)(v13 + 560);
          if (v1475(*(void *)(v13 + 552))) {
            goto LABEL_2741;
          }
        }
        *(_DWORD *)(v11 + 296) += v18;
        *(_DWORD *)(v11 + 216) += v18;
        if (*(_DWORD *)(v11 + 276)) {
          sub_1B0D1738C(v11);
        }
        return v1448;
      case 0xADu:
        *(void *)&__buf[0] = 0;
        uint64_t v610 = *(void *)(*((void *)v12 + 2) + 16);
        if (!v610 || (uint64_t v611 = *(void *)v610) == 0)
        {
LABEL_2600:
          LODWORD(v20) = 6;
          goto LABEL_2742;
        }
        int v612 = (*(uint64_t (**)(void, _OWORD *))(v611 + 48))(*(void *)(*((void *)v12 + 2) + 16), __buf);
        sub_1B0D17574(v11, v610);
        LOWORD(v16) = v1569;
        if (v612) {
          goto LABEL_2602;
        }
        **(void **)&__buf[0] = v610;
        uint64_t v613 = sub_1B0CACC34(v11, *((_DWORD *)v12 + 1), 0, 2);
        if (v613)
        {
          int v1558 = 0;
          *(void *)(v613 + 40) = *(void *)&__buf[0];
          ++*(_DWORD *)(v610 + 8);
          v12 += 40;
          continue;
        }
        (*(void (**)(void))(v611 + 56))(*(void *)&__buf[0]);
        goto LABEL_8;
      case 0xAEu:
        uint64_t v614 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        if (sqlite3_initialize()) {
          goto LABEL_8;
        }
        uint64_t v615 = (void *)sub_1B0C7FC94(16);
        if (!v615) {
          goto LABEL_8;
        }
        uint64_t v616 = v615;
        unsigned int v1549 = v19;
        *uint64_t v615 = *(void *)(v614 + 40);
        v615[1] = v1570 + ((uint64_t)*((int *)v12 + 3) << 6);
        uint64_t v617 = v11;
        uint64_t v618 = *(void *)(v11 + 104);
        uint64_t v16 = *((int *)v12 + 2);
        uint64_t v619 = v618 + (v16 << 6);
        uint64_t v620 = (_WORD *)(v619 + 20);
        if ((*(unsigned char *)(v619 + 21) & 0x90) != 0) {
          sub_1B0D1D578(v618 + (v16 << 6));
        }
        else {
          *uint64_t v620 = 4;
        }
        *uint64_t v620 = 1;
        sub_1B0D180E4(v618 + (v16 << 6));
        *(void *)uint64_t v619 = "ValueList";
        uint64_t v882 = v618 + (v16 << 6);
        *(void *)(v882 + 8) = v616;
        *uint64_t v620 = 6657;
        *(unsigned char *)(v882 + 23) = 112;
        *(unsigned char *)(v882 + 56) = 0;
        *(void *)(v882 + 48) = sub_1B0D1D4B0;
        LOWORD(v16) = v1569;
        uint64_t v11 = v617;
        uint64_t v19 = v1549;
        v12 += 40;
        continue;
      case 0xAFu:
        a2 = 0uLL;
        memset(__buf, 0, 56);
        uint64_t v621 = (uint64_t *)v11;
        uint64_t v622 = *(void *)(*(void *)(v11 + 120) + 8 * *((int *)v12 + 1));
        uint64_t v623 = *((int *)v12 + 3);
        unint64_t v624 = v1570 + (v623 << 6);
        if (*(unsigned char *)(v622 + 2))
        {
          if ((*(_WORD *)(v624 + 20) & 0x9000) != 0) {
            sub_1B0D18138((int *)(v1570 + (v623 << 6)));
          }
          else {
            *(_WORD *)(v624 + 20) = 1;
          }
          LOWORD(v16) = v1569;
          uint64_t v11 = (uint64_t)v621;
          v12 += 40;
          continue;
        }
        unsigned int v1553 = v19;
        v1564 = **(uint64_t ***)(v622 + 40);
        uint64_t v19 = *v1564;
        *(_OWORD *)((char *)&__buf[1] + 8) = 0uLL;
        *(_OWORD *)((char *)&__buf[2] + 8) = 0uLL;
        *(_OWORD *)((char *)__buf + 8) = 0uLL;
        *(void *)&__buf[0] = v1570 + (v623 << 6);
        BYTE8(__buf[2]) = v1557;
        uint64_t v863 = (_WORD *)(v624 + 20);
        if (v12[2])
        {
          if ((*(_WORD *)(v624 + 20) & 0x9000) != 0) {
            sub_1B0D18138((int *)v624);
          }
          else {
            *uint64_t v863 = 1;
          }
          *uint64_t v863 = 1025;
          *(_DWORD *)unint64_t v624 = 0;
        }
        else
        {
          *uint64_t v863 = *(_WORD *)(v624 + 20) & 0xF240 | 1;
        }
        LODWORD(v19) = (*(uint64_t (**)(void, _OWORD *, void))(v19 + 88))(*(void *)(v622 + 40), __buf, *((unsigned int *)v12 + 2));
        uint64_t v11 = (uint64_t)v621;
        sub_1B0D17574((uint64_t)v621, (uint64_t)v1564);
        if (SDWORD1(__buf[2]) >= 1)
        {
          char v1264 = sqlite3_value_text((sqlite3_value *)v624);
          sub_1B0D17334(v621, "%s", v1265, v1266, v1267, v1268, v1269, v1270, v1264);
          LODWORD(v19) = DWORD1(__buf[2]);
        }
        LOBYTE(v259) = v1553;
        v1271 = (unsigned char *)(v1570 + (v623 << 6) + 22);
        if ((*v863 & 2) != 0)
        {
          LOWORD(v16) = v1569;
          if (*v1271 != v1557) {
            sub_1B0CD43EC((int *)v624, v1557);
          }
        }
        else
        {
          unsigned char *v1271 = v1557;
          LOWORD(v16) = v1569;
        }
        if (v19) {
          goto LABEL_2683;
        }
        int v1558 = 0;
        uint64_t v19 = v1553;
        v12 += 40;
        continue;
      case 0xB0u:
        uint64_t v625 = *(void *)(v13 + 48);
        *(void *)(v13 + 48) = v625 | 0x4000000;
        uint64_t v626 = *(void *)(*((void *)v12 + 2) + 16);
        uint64_t v627 = *((int *)v12 + 1);
        unint64_t v628 = v1570 + (v627 << 6);
        int v629 = (unsigned char *)(v628 + 22);
        if ((*(_WORD *)(v628 + 20) & 2) != 0)
        {
          if (*v629 != 1)
          {
            int v62 = sub_1B0CD43EC((int *)v628, 1);
            if (v62) {
              goto LABEL_2597;
            }
          }
        }
        else
        {
          *int v629 = 1;
        }
        int v612 = (*(uint64_t (**)(uint64_t, void))(*(void *)v626 + 152))(v626, *(void *)(v1570 + (v627 << 6) + 8));
        LOWORD(v16) = v1569;
        if ((v625 & 0x4000000) == 0) {
          *(void *)(v13 + 48) &= ~0x4000000uLL;
        }
        sub_1B0D17574(v11, v626);
        *(_WORD *)(v11 + 268) &= 0xFFFCu;
        if (v612) {
          goto LABEL_2602;
        }
        int v1558 = 0;
        v12 += 40;
        continue;
      case 0xB1u:
        uint64_t v630 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v630 + 20) & 0x9000) != 0) {
          uint64_t v630 = sub_1B0D1D578(v630);
        }
        else {
          *(_WORD *)(v630 + 20) = 4;
        }
        LOWORD(v16) = v1569;
        *(void *)uint64_t v630 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8)
                                                      + 8)
                                          + 64);
        v12 += 40;
        continue;
      case 0xB2u:
        uint64_t v631 = *(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6);
        if ((*(_WORD *)(v631 + 20) & 0x9000) != 0) {
          sub_1B0D1D578(*(void *)(v11 + 104) + ((uint64_t)*((int *)v12 + 2) << 6));
        }
        else {
          *(_WORD *)(v631 + 20) = 4;
        }
        uint64_t v864 = *(void *)(*(void *)(v13 + 32) + 32 * *((int *)v12 + 1) + 8);
        unsigned int v865 = *((_DWORD *)v12 + 3);
        if (v865)
        {
          if (*(_DWORD *)(*(void *)(v864 + 8) + 64) <= v865) {
            unsigned int v866 = *((_DWORD *)v12 + 3);
          }
          else {
            unsigned int v866 = *(_DWORD *)(*(void *)(v864 + 8) + 64);
          }
        }
        else
        {
          unsigned int v866 = 0;
        }
        LOWORD(v16) = v1569;
        if (*(unsigned char *)(v864 + 17))
        {
          ++*(_DWORD *)(v864 + 20);
          if (!*(unsigned char *)(v864 + 18)) {
            sub_1B0D12478(v864);
          }
        }
        uint64_t v871 = **(void **)(v864 + 8);
        if (v866) {
          *(_DWORD *)(v871 + 188) = v866;
        }
        else {
          unsigned int v866 = *(_DWORD *)(v871 + 188);
        }
        if (*(unsigned char *)(v864 + 17))
        {
          int v872 = *(_DWORD *)(v864 + 20) - 1;
          *(_DWORD *)(v864 + 20) = v872;
          if (!v872) {
            sub_1B0D12558(v864);
          }
        }
        *(void *)uint64_t v631 = v866;
        v12 += 40;
        continue;
      case 0xB3u:
        unint64_t v327 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
        __int16 v328 = *(_WORD *)(v327 + 20) & 0xF7FF;
LABEL_717:
        *(_WORD *)(v327 + 20) = v328;
        LOWORD(v16) = v1569;
        v12 += 40;
        continue;
      case 0xB4u:
        uint64_t v632 = *((int *)v12 + 4);
        if ((int)v632 < 1)
        {
          unint64_t v633 = 0;
          LOWORD(v16) = v1569;
LABEL_1253:
          unint64_t v867 = v1570 + ((uint64_t)*((int *)v12 + 1) << 6);
          unint64_t v868 = v633 % (8 * *(int *)(v867 + 16));
          *(unsigned char *)(*(void *)(v867 + 8) + (v868 >> 3)) |= 1 << (v868 & 7);
          v12 += 40;
          continue;
        }
        unint64_t v633 = 0;
        uint64_t v634 = *((int *)v12 + 3);
        uint64_t v635 = v634 + v632;
        LOWORD(v16) = v1569;
        unint64_t v636 = v1570 + (v634 << 6);
        break;
      default:
        goto LABEL_21;
    }
    break;
  }
  while (1)
  {
    __int16 v638 = *(_WORD *)(v636 + 20);
    if ((v638 & 0x24) != 0)
    {
      uint64_t v639 = *(void *)v636;
    }
    else
    {
      if ((v638 & 8) == 0)
      {
        uint64_t v637 = v638 & 0x12;
        if (v637) {
          v633 += v637 + 4093;
        }
        goto LABEL_722;
      }
      a2.i64[0] = *(void *)v636;
      if (*(double *)v636 >= -9.22337204e18)
      {
        if (*(double *)a2.i64 <= 9.22337204e18) {
          uint64_t v639 = (uint64_t)*(double *)a2.i64;
        }
        else {
          uint64_t v639 = 0x7FFFFFFFFFFFFFFFLL;
        }
      }
      else
      {
        uint64_t v639 = 0x8000000000000000;
      }
    }
    v633 += v639;
LABEL_722:
    v636 += 64;
    if (++v634 >= v635) {
      goto LABEL_1253;
    }
  }
}

uint64_t sub_1B0CACC34(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v7 = *(void *)(a1 + 104);
  if (a2 >= 1) {
    v7 += (*(int *)(a1 + 36) - (uint64_t)a2) << 6;
  }
  uint64_t v8 = 8 * a3 + 120;
  int v9 = 296;
  if (a4) {
    int v9 = 0;
  }
  int v10 = v8 + v9;
  uint64_t v11 = a2;
  uint64_t v12 = *(unsigned __int8 **)(*(void *)(a1 + 120) + 8 * a2);
  if (v12)
  {
    sub_1B0D1637C((void **)a1, v12);
    *(void *)(*(void *)(a1 + 120) + 8 * v11) = 0;
  }
  int v13 = *(_DWORD *)(v7 + 32);
  if (v13 >= v10)
  {
    uint64_t result = *(void *)(v7 + 40);
  }
  else
  {
    if (v13 >= 1) {
      sub_1B0D05C10(*(void **)(v7 + 24), *(void **)(v7 + 40));
    }
    uint64_t v14 = *(void *)(v7 + 24);
    if (v14) {
      uint64_t result = sub_1B0D05DC0(v14, v10);
    }
    else {
      uint64_t result = sub_1B0C7FC94(v10);
    }
    *(void *)(v7 + 40) = result;
    *(void *)(v7 + 8) = result;
    if (!result)
    {
      *(_DWORD *)(v7 + 32) = 0;
      return result;
    }
    *(_DWORD *)(v7 + 32) = v10;
  }
  *(void *)(*(void *)(a1 + 120) + 8 * v11) = result;
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(unsigned char *)uint64_t result = a4;
  *(_WORD *)(result + 64) = a3;
  *(void *)(result + 80) = result + 4 * a3 + 112;
  if (!a4)
  {
    uint64_t v16 = (_OWORD *)(*(void *)(v7 + 8) + v8);
    *(void *)(result + 40) = v16;
    *uint64_t v16 = 0uLL;
    v16[1] = 0uLL;
  }
  return result;
}

uint64_t sub_1B0CACD5C(unsigned __int8 *a1)
{
  if ((char)a1[84] < 0)
  {
    unsigned int v7 = *((_DWORD *)a1 + 20);
    if (!v7)
    {
LABEL_17:
      *a1 = 1;
      return 16;
    }
    unsigned int v8 = *a1;
    if (v8 < 3) {
      goto LABEL_30;
    }
    if (v8 == 4) {
      return *((unsigned int *)a1 + 1);
    }
    uint64_t v10 = *((void *)a1 + 3);
    if (v10)
    {
      uint64_t v11 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v10);
        --qword_1EB220150;
        off_1EB21C9E8(v10);
        uint64_t v10 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_29;
        }
        uint64_t v11 = &xmmword_1EB21CA50;
      }
      (*v11)(v10);
    }
LABEL_29:
    *((void *)a1 + 3) = 0;
    *a1 = 1;
    unsigned int v7 = *((_DWORD *)a1 + 20);
LABEL_30:
    uint64_t result = sub_1B0D1DE18(*((_DWORD **)a1 + 4), v7, (uint64_t *)a1 + 17);
    if (result)
    {
      *a1 = 1;
      return result;
    }
    a1[84] = 0;
    uint64_t v2 = *((void *)a1 + 17);
    a1[85] = *(unsigned char *)(v2 + 1);
    goto LABEL_33;
  }
  uint64_t v2 = *((void *)a1 + 17);
  if (a1[84])
  {
    uint64_t v3 = *(void *)(v2 + 112);
    if ((*(_WORD *)(v3 + 52) & 0x20) != 0) {
      goto LABEL_5;
    }
LABEL_4:
    sub_1B0D0E3E8(v3);
    while (1)
    {
      signed __int8 v5 = a1[84] - 1;
      a1[84] = v5;
      if (!v5) {
        break;
      }
      uint64_t v3 = *(void *)(*(void *)&a1[8 * v5 + 144] + 112);
      if ((*(_WORD *)(v3 + 52) & 0x20) == 0) {
        goto LABEL_4;
      }
LABEL_5:
      uint64_t v4 = *(void *)(v3 + 40);
      --*(_DWORD *)(v4 + 152);
      *(void *)(v3 + 32) = *(void *)(v4 + 168);
      *(void *)(v4 + 168) = v3;
      (*(void (**)(void, void, void))(**(void **)(v4 + 72) + 144))(*(void *)(v4 + 72), *(void *)(v4 + 200) * (*(_DWORD *)(v3 + 48) - 1), *(void *)(v3 + 8));
    }
    uint64_t v2 = *((void *)a1 + 18);
    *((void *)a1 + 17) = v2;
    goto LABEL_10;
  }
LABEL_33:
  if (!*(unsigned char *)v2 || *(unsigned char *)(v2 + 1) != (*((void *)a1 + 16) == 0))
  {
    return sub_1B0D11B5C(82351, v2);
  }
LABEL_10:
  *((_WORD *)a1 + 43) = 0;
  *((_WORD *)a1 + 35) = 0;
  a1[1] &= 0xF1u;
  if (*(_WORD *)(v2 + 24))
  {
    uint64_t result = 0;
    *a1 = 0;
    return result;
  }
  if (*(unsigned char *)(v2 + 8)) {
    goto LABEL_17;
  }
  if (*(_DWORD *)(v2 + 4) == 1)
  {
    unsigned int v9 = bswap32(*(_DWORD *)(*(unsigned __int8 *)(v2 + 9) + *(void *)(v2 + 80) + 8));
    *a1 = 0;
    return sub_1B0CAD12C((uint64_t)a1, v9);
  }
  else
  {
    return sub_1B0D1045C(82363);
  }
}

uint64_t sub_1B0CAD004(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = (unsigned __int8 *)(*(void *)(a1 + 80) + *(unsigned __int8 *)(a1 + 9));
  if (sub_1B0D11A00(a1, *v3))
  {
    uint64_t v4 = 79043;
LABEL_5:
    return sub_1B0D11B5C(v4, a1);
  }
  uint64_t v5 = *(unsigned int *)(v2 + 52);
  *(_WORD *)(a1 + 26) = v5 - 1;
  *(unsigned char *)(a1 + 12) = 0;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 10);
  *(_WORD *)(a1 + 18) = *(unsigned __int8 *)(a1 + 9) + (_WORD)v6 + 8;
  uint64_t v7 = *(void *)(a1 + 80);
  *(void *)(a1 + 88) = v7 + v5;
  *(void *)(a1 + 96) = &v3[v6 + 8];
  *(void *)(a1 + 104) = v7 + v6;
  unsigned int v8 = __rev16(*(unsigned __int16 *)(v3 + 3));
  *(_WORD *)(a1 + 24) = v8;
  if (((int)v5 - 8) / 6u < v8)
  {
    uint64_t v4 = 79057;
    goto LABEL_5;
  }
  *(_DWORD *)(a1 + 20) = -1;
  *(unsigned char *)a1 = 1;
  if ((*(unsigned char *)(*(void *)(v2 + 8) + 50) & 0x20) == 0) {
    return 0;
  }

  return sub_1B0D11C80(a1);
}

uint64_t sub_1B0CAD12C(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(char *)(a1 + 84);
  if (v2 < 19)
  {
    *(_WORD *)(a1 + 70) = 0;
    *(unsigned char *)(a1 + 1) &= 0xF9u;
    *(_WORD *)(a1 + 2 * v2 + 88) = *(_WORD *)(a1 + 86);
    uint64_t v5 = (uint64_t *)(a1 + 136);
    *(void *)(a1 + 8 * v2 + 144) = *(void *)(a1 + 136);
    *(_WORD *)(a1 + 86) = 0;
    *(unsigned char *)(a1 + 84) = v2 + 1;
    uint64_t result = sub_1B0D1DE18(*(_DWORD **)(a1 + 32), a2, (uint64_t *)(a1 + 136));
    if (!result)
    {
      uint64_t v6 = *v5;
      if (*(_WORD *)(*v5 + 24) && *(unsigned __int8 *)(v6 + 1) == *(unsigned __int8 *)(a1 + 85)) {
        return 0;
      }
      uint64_t v7 = *(void *)(v6 + 112);
      if ((*(_WORD *)(v7 + 52) & 0x20) != 0)
      {
        uint64_t v8 = *(void *)(v7 + 40);
        --*(_DWORD *)(v8 + 152);
        *(void *)(v7 + 32) = *(void *)(v8 + 168);
        *(void *)(v8 + 168) = v7;
        (*(void (**)(void, void, void))(**(void **)(v8 + 72) + 144))(*(void *)(v8 + 72), *(void *)(v8 + 200) * (*(_DWORD *)(v7 + 48) - 1), *(void *)(v7 + 8));
      }
      else
      {
        sub_1B0D0E3E8(v7);
      }
      uint64_t result = sub_1B0D1045C(82216);
    }
    char v9 = *(unsigned char *)(a1 + 84) - 1;
    *(unsigned char *)(a1 + 84) = v9;
    *(void *)(a1 + 136) = *(void *)(a1 + 8 * v9 + 144);
  }
  else
  {
    return sub_1B0D1045C(82202);
  }
  return result;
}

uint64_t sub_1B0CAD26C(uint64_t result, unsigned __int8 *a2, uint64_t a3)
{
  unsigned int v3 = *a2;
  uint64_t v4 = a2;
  if ((char)*a2 < 0)
  {
    uint64_t v4 = a2 + 1;
    int v5 = a2[1] & 0x7F | ((v3 & 0x7F) << 7);
    if ((a2[1] & 0x80) == 0)
    {
LABEL_3:
      unsigned int v3 = v5;
      goto LABEL_6;
    }
    uint64_t v4 = a2 + 2;
    unsigned int v3 = a2[2] & 0x7F | (v5 << 7);
    if ((a2[2] & 0x80) != 0)
    {
      uint64_t v4 = a2 + 3;
      unsigned int v3 = a2[3] & 0x7F | (v3 << 7);
      if ((a2[3] & 0x80) != 0)
      {
        uint64_t v4 = a2 + 4;
        int v5 = a2[4] & 0x7F | (v3 << 7);
        if ((a2[4] & 0x80) == 0) {
          goto LABEL_3;
        }
        uint64_t v4 = a2 + 5;
        unsigned int v3 = a2[5] & 0x7F | (v5 << 7);
        if ((a2[5] & 0x80) != 0)
        {
          uint64_t v4 = a2 + 6;
          int v5 = a2[6] & 0x7F | (v3 << 7);
          if ((a2[6] & 0x80) == 0) {
            goto LABEL_3;
          }
          uint64_t v4 = a2 + 7;
          unsigned int v3 = a2[7] & 0x7F | (v5 << 7);
          if ((a2[7] & 0x80) != 0)
          {
            uint64_t v4 = a2 + 8;
            int v5 = a2[8] & 0x7F | (v3 << 7);
            goto LABEL_3;
          }
        }
      }
    }
  }
LABEL_6:
  uint64_t v6 = v4 + 1;
  uint64_t v7 = v4[1];
  if ((char)v4[1] < 0)
  {
    uint64_t v6 = v4 + 2;
    unint64_t v8 = v4[2] ^ (unint64_t)(v7 << 7);
    if ((char)v4[2] < 0)
    {
      uint64_t v6 = v4 + 3;
      unint64_t v9 = v4[3] ^ (v8 << 7);
      if ((char)v4[3] < 0)
      {
        uint64_t v6 = v4 + 4;
        uint64_t v7 = v4[4] ^ (v9 << 7) ^ 0x10204000;
        if ((char)v4[4] < 0)
        {
          uint64_t v6 = v4 + 5;
          uint64_t v7 = v4[5] ^ (unint64_t)(v7 << 7) ^ 0x4000;
          if ((char)v4[5] < 0)
          {
            uint64_t v6 = v4 + 6;
            uint64_t v7 = v4[6] ^ (unint64_t)(v7 << 7) ^ 0x4000;
            if ((char)v4[6] < 0)
            {
              uint64_t v6 = v4 + 7;
              uint64_t v7 = v4[7] ^ (unint64_t)(v7 << 7) ^ 0x4000;
              if ((char)v4[7] < 0)
              {
                uint64_t v6 = v4 + 8;
                uint64_t v7 = v4[8] ^ (unint64_t)(v7 << 7) ^ 0x4000;
                if ((char)v4[8] < 0)
                {
                  uint64_t v7 = (v4[9] | (unint64_t)(v7 << 8)) ^ 0x8000;
                  uint64_t v6 = v4 + 9;
                }
              }
            }
          }
        }
      }
      else
      {
        uint64_t v7 = v9 ^ 0x204000;
      }
    }
    else
    {
      uint64_t v7 = v8 ^ 0x4000;
    }
  }
  *(_DWORD *)(a3 + 16) = v3;
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v6 + 1;
  if (v3 > *(unsigned __int16 *)(result + 14)) {
    return sub_1B0D121A4(result, (__int16)a2, a3);
  }
  __int16 v10 = v3 + (_WORD)v6 + 1 - (_WORD)a2;
  if ((v10 & 0xFFFC) == 0) {
    __int16 v10 = 4;
  }
  *(_WORD *)(a3 + 22) = v10;
  *(_WORD *)(a3 + 20) = v3;
  return result;
}

uint64_t sub_1B0CAD43C(char *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  if (*a1 < 0)
  {
    uint64_t v4 = a1[1];
    if (a1[1] < 0)
    {
      int v5 = a1[2];
      unsigned int v6 = v5 & 0x7F | (*a1 << 14) & 0x1FFFFF;
      if (v5 < 0)
      {
        int v7 = (a1[3] | (v4 << 14)) & 0x1FC07F;
        if (a1[3] < 0)
        {
          unsigned int v8 = a1[4];
          int v9 = v8 | (v6 << 14);
          if (a1[4] < 0)
          {
            unsigned int v10 = v7 | (v6 << 7);
            int v11 = a1[5] | (v7 << 14);
            if (a1[5] < 0)
            {
              int v12 = a1[6] | (v9 << 14);
              if (a1[6] < 0)
              {
                int v13 = v12 & 0x1FC07F;
                int v14 = a1[7] | (v11 << 14);
                if (a1[7] < 0)
                {
                  unint64_t v15 = a1[8] | (v13 << 15) | (v14 << 8) & 0x1FC07F00u | ((unint64_t)((v8 >> 3) & 0xF | (16 * v10)) << 32);
                  uint64_t result = 9;
                }
                else
                {
                  unint64_t v15 = v14 & 0xF01FC07F | (v13 << 7) | ((unint64_t)(v10 >> 4) << 32);
                  uint64_t result = 8;
                }
                *a2 = v15;
              }
              else
              {
                uint64_t result = 7;
                *a2 = v12 & 0xF01FC07F | (v11 << 7) & 0xFE03F80 | ((unint64_t)(v10 >> 11) << 32);
              }
            }
            else
            {
              uint64_t result = 6;
              *a2 = v11 | (v9 << 7) & 0xFE03F80u | ((unint64_t)(v10 >> 18) << 32);
            }
          }
          else
          {
            uint64_t result = 5;
            *a2 = v9 | (v7 << 7) | ((unint64_t)(v6 >> 18) << 32);
          }
        }
        else
        {
          uint64_t result = 4;
          *a2 = v7 | (v6 << 7);
        }
      }
      else
      {
        uint64_t result = 3;
        *a2 = v6 | ((v4 & 0x7F) << 7);
      }
    }
    else
    {
      uint64_t result = 2;
      *a2 = v4 | ((v2 & 0x7F) << 7);
    }
  }
  else
  {
    uint64_t result = 1;
    *a2 = v2;
  }
  return result;
}

char *sub_1B0CAD5D4(char *result, int a2, uint64_t a3)
{
  switch(a2)
  {
    case 0:
    case 11:
      *(_WORD *)(a3 + 20) = 1;
      return result;
    case 1:
      unint64_t v5 = *result;
      goto LABEL_12;
    case 2:
      unint64_t v5 = result[1] | (unint64_t)((uint64_t)*result << 8);
      goto LABEL_12;
    case 3:
      unint64_t v6 = ((uint64_t)*result << 16) | ((unint64_t)result[1] << 8);
      uint64_t v7 = result[2];
      goto LABEL_10;
    case 4:
      unint64_t v6 = ((uint64_t)*result << 24) | ((unint64_t)result[1] << 16) | ((unint64_t)result[2] << 8);
      uint64_t v7 = result[3];
LABEL_10:
      unint64_t v5 = v6 | v7;
      goto LABEL_12;
    case 5:
      unint64_t v5 = bswap32(*(_DWORD *)(result + 2)) | ((unint64_t)(result[1] | (*result << 8)) << 32);
      goto LABEL_12;
    case 6:
    case 7:
      int v3 = (*result << 24) | (result[1] << 16);
      unint64_t v4 = ((unint64_t)result[4] << 24) | ((unint64_t)result[5] << 16) | ((unint64_t)(v3 | (bswap32(*((unsigned __int16 *)result + 1)) >> 16)) << 32) | result[7] | ((unint64_t)result[6] << 8);
      if (a2 == 6)
      {
        *(void *)a3 = v4;
LABEL_13:
        *(_WORD *)(a3 + 20) = 4;
      }
      else
      {
        *(void *)a3 = v4;
        uint64_t v8 = ~v3 & 0x7FF00000;
        if ((v4 & 0xFFFFFFFFFFFFFLL) != 0 && v8 == 0) {
          __int16 v10 = 1;
        }
        else {
          __int16 v10 = 8;
        }
        *(_WORD *)(a3 + 20) = v10;
      }
      return result;
    case 8:
    case 9:
      unint64_t v5 = (a2 - 8);
LABEL_12:
      *(void *)a3 = v5;
      goto LABEL_13;
    case 10:
      *(_WORD *)(a3 + 20) = 1025;
      *(_DWORD *)(a3 + 16) = 0;
      *(_DWORD *)a3 = 0;
      return result;
    default:
      *(void *)(a3 + 8) = result;
      *(_DWORD *)(a3 + 16) = (a2 - 12) >> 1;
      *(_WORD *)(a3 + 20) = word_1B0DE2204[a2 & 1];
      return result;
  }
}

const unsigned __int8 *__cdecl sqlite3_value_text(const unsigned __int8 *result)
{
  if (result)
  {
    int v1 = *((unsigned __int16 *)result + 10);
    if ((~v1 & 0x202) != 0 || result[22] != 1)
    {
      if (v1) {
        return 0;
      }
      else {
        return (const unsigned __int8 *)sub_1B0D18254((int *)result, 1);
      }
    }
    else
    {
      return (const unsigned __int8 *)*((void *)result + 1);
    }
  }
  return result;
}

uint64_t sub_1B0CAD780(uint64_t a1, int a2, int a3)
{
  if (*(int *)(a1 + 32) >= 32)
  {
    uint64_t v7 = *(void **)(a1 + 40);
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 20) &= 0x2Du;
  }
  else
  {
    if (sub_1B0CA0CF0(a1, 32, 0))
    {
      *(unsigned char *)(a1 + 22) = 0;
      return 7;
    }
    uint64_t v7 = *(void **)(a1 + 8);
  }
  sub_1B0D18508(v7, a1);
  *(unsigned char *)(a1 + 22) = 1;
  __int16 v8 = *(_WORD *)(a1 + 20) | 0x202;
  if (a3) {
    __int16 v8 = *(_WORD *)(a1 + 20) & 0xFDD1 | 0x202;
  }
  *(_WORD *)(a1 + 20) = v8;
  if (a2 != 1) {
    sub_1B0CD43EC((int *)a1, a2);
  }
  return 0;
}

void sub_1B0CAD844(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *(void *)(a1 + 344);
  if (!v10)
  {
LABEL_47:
    if (!a2) {
      return;
    }
    goto LABEL_48;
  }
  int v11 = *(_DWORD *)(v10 + 48);
  if ((v11 & 4) != 0)
  {
    sub_1B0CEF2BC(a1, "table \"%s\" has more than one primary key", a3, a4, a5, a6, a7, a8, *(void *)v10);
    goto LABEL_47;
  }
  int v12 = a5;
  int v13 = a4;
  uint64_t v14 = a3;
  *(_DWORD *)(v10 + 48) = v11 | 4;
  if (!a2)
  {
    uint64_t v18 = *(__int16 *)(v10 + 54) - 1;
    uint64_t v17 = *(void *)(v10 + 8) + 16 * v18;
    __int16 v28 = *(_WORD *)(v17 + 14);
    *(_WORD *)(v17 + 14) = v28 | 1;
    if ((v28 & 0x60) != 0) {
      sub_1B0CEF2BC(a1, "generated columns cannot be part of the PRIMARY KEY", a3, a4, a5, a6, a7, a8, v37);
    }
LABEL_33:
    if (!v17 || v12 == 1 || (*(unsigned char *)(v17 + 8) & 0xF0) != 0x40) {
      goto LABEL_45;
    }
    if (a2 && *(unsigned __int8 *)(a1 + 302) >= 2u)
    {
      for (uint64_t i = *((void *)a2 + 1); i; uint64_t i = *(void *)(i + 16))
      {
        if ((*(unsigned char *)(i + 5) & 0x20) == 0) {
          break;
        }
      }
      __int16 v30 = *(void **)(a1 + 408);
      if (v30)
      {
        while (*v30 != i)
        {
          __int16 v30 = (void *)v30[3];
          if (!v30) {
            goto LABEL_54;
          }
        }
        *__int16 v30 = v10 + 52;
      }
    }
LABEL_54:
    *(_WORD *)(v10 + 52) = v18;
    *(unsigned char *)(v10 + 62) = v14;
    *(_DWORD *)(v10 + 48) |= 8 * v13;
    if (!a2) {
      return;
    }
    *(unsigned char *)(a1 + 300) = *((unsigned char *)a2 + 24);
    uint64_t v32 = *a2;
    if ((int)v32 >= 1)
    {
      __int16 v33 = (_WORD *)((char *)a2 + 25);
      while ((*v33 & 0x20) == 0)
      {
        v33 += 12;
        if (!--v32) {
          goto LABEL_48;
        }
      }
      int v34 = *((unsigned __int8 *)v33 - 1);
      BOOL v35 = v34 == 3 || v34 == 0;
      uint64_t v36 = "LAST";
      if (v35) {
        uint64_t v36 = "FIRST";
      }
      sub_1B0CEF2BC(a1, "unsupported use of NULLS %s", a3, a4, a5, a6, a7, a8, (char)v36);
    }
LABEL_48:
    uint64_t v31 = *(void **)a1;
    sub_1B0D270DC(v31, a2);
    return;
  }
  uint64_t v15 = *a2;
  if ((int)v15 < 1) {
    goto LABEL_45;
  }
  int v38 = a5;
  int v39 = a4;
  unsigned int v40 = a3;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  LOWORD(v18) = -1;
  while (2)
  {
    for (uint64_t j = *(unsigned __int8 **)&a2[6 * v16 + 2]; j; uint64_t j = (unsigned __int8 *)*((void *)j + 2))
    {
      if ((j[5] & 0x20) == 0) {
        break;
      }
    }
    int v20 = *j;
    uint64_t v21 = j;
    if (v20 == 117) {
      goto LABEL_14;
    }
    if (v20 == 113)
    {
      uint64_t v21 = (unsigned char *)*((void *)j + 2);
      if (*v21 != 117) {
        goto LABEL_7;
      }
LABEL_14:
      *uint64_t v21 = 59;
      int v20 = *j;
    }
    if (v20 != 59) {
      goto LABEL_7;
    }
    if (*(__int16 *)(v10 + 54) < 1)
    {
      LOWORD(v18) = 0;
      goto LABEL_7;
    }
    uint64_t v18 = 0;
    uint64_t v22 = *(void *)(v10 + 8);
    while (2)
    {
      unint64_t v23 = *(unsigned __int8 **)(v22 + 16 * v18);
      for (uint64_t k = (unsigned char *)*((void *)j + 1); ; ++k)
      {
        uint64_t v25 = *k;
        uint64_t v26 = *v23;
        if (v25 != v26) {
          break;
        }
        if (!*k)
        {
          uint64_t v17 = v22 + 16 * v18;
          __int16 v27 = *(_WORD *)(v17 + 14);
          *(_WORD *)(v17 + 14) = v27 | 1;
          if ((v27 & 0x60) != 0) {
            sub_1B0CEF2BC(a1, "generated columns cannot be part of the PRIMARY KEY", a3, a4, a5, a6, a7, a8, v37);
          }
          goto LABEL_7;
        }
LABEL_20:
        ++v23;
      }
      if (byte_1B0DE1758[v25] == byte_1B0DE1758[v26]) {
        goto LABEL_20;
      }
      if (++v18 != *(unsigned __int16 *)(v10 + 54)) {
        continue;
      }
      break;
    }
    LOWORD(v18) = *(_WORD *)(v10 + 54);
LABEL_7:
    if (++v16 != v15) {
      continue;
    }
    break;
  }
  int v13 = v39;
  uint64_t v14 = v40;
  int v12 = v38;
  if (v15 == 1) {
    goto LABEL_33;
  }
LABEL_45:
  if (v13)
  {
    sub_1B0CEF2BC(a1, "AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY", a3, a4, a5, a6, a7, a8, v37);
    goto LABEL_47;
  }
  sub_1B0CAE7F0((void **)a1, 0, 0, 0, (uint64_t)a2, v14, 0, 0, v12, 0, 2u);
}

uint64_t sub_1B0CADBC0(int a1)
{
  return (a1 + 7) & 0xFFFFFFF8;
}

void *sub_1B0CADBCC(void *ptr, int a2)
{
  unint64_t v4 = (malloc_zone_t *)qword_1E9B52268;
  if (!qword_1E9B52268) {
    unint64_t v4 = malloc_default_zone();
  }
  unint64_t v5 = malloc_type_zone_realloc(v4, ptr, a2, 0x559ACC9AuLL);
  if (!v5)
  {
    if (qword_1E9B52268) {
      int v6 = (*(uint64_t (**)(uint64_t, void *))(qword_1E9B52268 + 16))(qword_1E9B52268, ptr);
    }
    else {
      int v6 = malloc_size(ptr);
    }
    sqlite3_log(7, "failed memory resize %u to %u bytes", v6, a2);
  }
  return v5;
}

void sub_1B0CADC68(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 344);
  if (v11)
  {
    int v12 = a4;
    int v13 = (unsigned __int8 *)a3;
    __int16 v14 = 4;
    if (*(unsigned char *)(v10 + 197))
    {
      if (*(unsigned char *)(v10 + 196) == 1) {
        __int16 v14 = 4;
      }
      else {
        __int16 v14 = 5;
      }
    }
    uint64_t v15 = *(void *)(v11 + 8);
    uint64_t v16 = *(__int16 *)(v11 + 54) - 1;
    uint64_t v17 = (uint64_t *)(v15 + 16 * v16);
    *((void *)&v34 + 1) = 0;
    long long v35 = 0u;
    *(void *)&long long v33 = 0;
    WORD2(v35) = v14;
    *((void *)&v33 + 1) = sub_1B0CADEA4;
    *(void *)&long long v34 = sub_1B0D32AA8;
    if (a2)
    {
      sub_1B0D32AB4((uint64_t)&v33, (uint64_t)a2);
      if (!WORD2(v35))
      {
        uint64_t v32 = *v17;
        uint64_t v18 = "default value of column [%s] is not constant";
        goto LABEL_20;
      }
    }
    if ((*(_WORD *)(v15 + 16 * v16 + 14) & 0x60) != 0)
    {
      uint64_t v18 = "cannot use DEFAULT on a generated column";
LABEL_20:
      sub_1B0CEF2BC(a1, v18, a3, a4, a5, a6, a7, a8, v32);
      goto LABEL_21;
    }
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v33 = 0u;
    LOBYTE(v33) = -75;
    int v19 = v12 - v13;
    do
    {
      int v20 = v13;
      int v21 = v19;
      int v22 = *v13++;
      --v19;
    }
    while ((byte_1B0DE196D[v22] & 1) != 0);
    uint64_t v23 = v21;
    uint64_t v24 = ((uint64_t)v21 << 32) + 0x100000000;
    uint64_t v25 = v23 - 2;
    do
    {
      char v26 = byte_1B0DE196D[v13[v25]];
      v24 -= 0x100000000;
      --v25;
    }
    while ((v26 & 1) != 0);
    size_t v27 = v24 >> 32;
    __int16 v28 = (unsigned char *)sub_1B0D05DC0(v10, (v24 >> 32) + 1);
    uint64_t v29 = v28;
    if (v28)
    {
      memcpy(v28, v20, v27);
      v29[v27] = 0;
    }
    *((void *)&v33 + 1) = v29;
    *(void *)&long long v34 = a2;
    DWORD1(v33) = 0x2000;
    __int16 v30 = (unsigned __int8 *)sub_1B0CAE048(v10, (unsigned __int8 *)&v33, 1, 0);
    if (*((void *)&v33 + 1)) {
      sub_1B0D05C10((void *)v10, *((void **)&v33 + 1));
    }
    sub_1B0D36624((uint64_t *)a1, v11, (uint64_t)v17, v30);
  }
LABEL_21:
  unsigned int v31 = *(unsigned __int8 *)(a1 + 302);
  if (v31 >= 2)
  {
    long long v35 = 0uLL;
    *(void *)&long long v33 = a1;
    *((void *)&v33 + 1) = sub_1B0D3A9BC;
    *(void *)&long long v34 = sub_1B0D3AA28;
    *((void *)&v34 + 1) = 0;
    *(unsigned char *)(a1 + 302) = 3;
    if (a2) {
      sub_1B0D32AB4((uint64_t)&v33, (uint64_t)a2);
    }
    *(unsigned char *)(a1 + 302) = v31;
  }
  if (a2) {
    sub_1B0D1DF88((void *)v10, a2);
  }
}

uint64_t sub_1B0CADEA4(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int16 *)(a1 + 36);
  if (v2 == 2 && (*(unsigned char *)(a2 + 4) & 1) != 0) {
    goto LABEL_27;
  }
  uint64_t v3 = 0;
  switch(*(unsigned char *)a2)
  {
    case 0x8D:
    case 0xB0:
    case 0xB3:
      goto LABEL_27;
    case 0x8E:
    case 0x8F:
    case 0x90:
    case 0x91:
    case 0x92:
    case 0x93:
    case 0x94:
    case 0x95:
    case 0x96:
    case 0x97:
    case 0x98:
    case 0x99:
    case 0x9A:
    case 0x9B:
    case 0x9D:
    case 0x9E:
    case 0x9F:
    case 0xA0:
    case 0xA1:
    case 0xA2:
    case 0xA3:
    case 0xA4:
    case 0xA5:
    case 0xA6:
    case 0xAA:
    case 0xAB:
    case 0xAD:
    case 0xAE:
    case 0xAF:
    case 0xB1:
    case 0xB2:
      return v3;
    case 0x9C:
      if (v2 == 4) {
        goto LABEL_27;
      }
      if (v2 != 5) {
        return 0;
      }
      *(unsigned char *)a2 = 121;
      return 0;
    case 0xA7:
    case 0xA8:
    case 0xA9:
      goto LABEL_4;
    case 0xAC:
      unsigned int v12 = *(_DWORD *)(a2 + 4);
      int v13 = (v12 >> 20) & 1;
      if (v2 > 3) {
        int v13 = 1;
      }
      if (v13 != 1 || (v12 & 0x1000000) != 0) {
        goto LABEL_27;
      }
      if (v2 != 5) {
        return 0;
      }
      *(_DWORD *)(a2 + 4) = v12 | 0x40000000;
      return 0;
    default:
      if (*(unsigned char *)a2 != 59) {
        return v3;
      }
      int v5 = *(_DWORD *)(a2 + 4);
      if ((v5 & 0x4000800) != 0) {
        goto LABEL_4;
      }
      int v6 = *(unsigned char **)(a2 + 8);
      uint64_t v7 = "true";
      __int16 v8 = v6;
      break;
  }
  while (1)
  {
    uint64_t v9 = *v8;
    uint64_t v10 = *(unsigned __int8 *)v7;
    if (v9 != v10) {
      break;
    }
    if (!*v8)
    {
      int v11 = 0x10000000;
      goto LABEL_37;
    }
LABEL_14:
    ++v8;
    ++v7;
  }
  if (byte_1B0DE1758[v9] == byte_1B0DE1758[v10]) {
    goto LABEL_14;
  }
  for (uint64_t i = "false"; ; ++i)
  {
    uint64_t v16 = *v6;
    uint64_t v17 = *(unsigned __int8 *)i;
    if (v16 != v17)
    {
      if (byte_1B0DE1758[v16] == byte_1B0DE1758[v17]) {
        goto LABEL_33;
      }
LABEL_4:
      if ((*(unsigned char *)(a2 + 4) & 0x20) != 0)
      {
        if (v2 != 2) {
          return 0;
        }
      }
      else if (v2 == 3 && *(_DWORD *)(a2 + 44) == *(_DWORD *)(a1 + 40))
      {
        return 0;
      }
LABEL_27:
      *(_WORD *)(a1 + 36) = 0;
      return 2;
    }
    if (!*v6) {
      break;
    }
LABEL_33:
    ++v6;
  }
  int v11 = 0x20000000;
LABEL_37:
  *(unsigned char *)a2 = -86;
  *(_DWORD *)(a2 + 4) = v11 | v5;
  return 1;
}

unsigned int *sub_1B0CAE048(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned __int8 **a4)
{
  if (a4)
  {
    __int16 v8 = (unsigned int *)*a4;
    int v9 = 0x8000000;
    if (!*a4) {
      return v8;
    }
  }
  else
  {
    int v10 = sub_1B0CAE394(a2, a3);
    __int16 v8 = (unsigned int *)sub_1B0D05DC0(a1, v10);
    int v9 = 0;
    if (!v8) {
      return v8;
    }
  }
  if (!a3 || *a2 == 178 || (a2[7] & 1) != 0)
  {
    int v11 = 80;
    int v12 = *((_DWORD *)a2 + 1);
    if ((v12 & 0x800) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    int v11 = 16428;
    if (*((void *)a2 + 2))
    {
      int v12 = *((_DWORD *)a2 + 1);
      if ((v12 & 0x800) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      if (*((void *)a2 + 4)) {
        int v11 = 16428;
      }
      else {
        int v11 = 65552;
      }
      int v12 = *((_DWORD *)a2 + 1);
      if ((v12 & 0x800) != 0) {
        goto LABEL_26;
      }
    }
  }
  int v13 = (const char *)*((void *)a2 + 1);
  if (v13)
  {
    unsigned int v14 = (strlen(v13) & 0x3FFFFFFF) + 1;
    size_t v15 = v11 & 0x7C;
    if (!a3) {
      goto LABEL_14;
    }
LABEL_27:
    memcpy(v8, a2, v15);
    goto LABEL_28;
  }
LABEL_26:
  unsigned int v14 = 0;
  size_t v15 = v11 & 0x7C;
  if (a3) {
    goto LABEL_27;
  }
LABEL_14:
  if ((v12 & 0x4000) != 0) {
    unsigned int v16 = 44;
  }
  else {
    unsigned int v16 = 80;
  }
  if ((v12 & 0x10000) != 0) {
    size_t v17 = 16;
  }
  else {
    size_t v17 = v16;
  }
  memcpy(v8, a2, v17);
  if (v17 <= 0x4F) {
    bzero((char *)v8 + v17, 80 - v17);
  }
LABEL_28:
  long long v35 = 0;
  unsigned int v18 = v11 & 0x14000 | v9 | v8[1] & 0xF7FEBFFF;
  v8[1] = v18;
  if (v14)
  {
    int v19 = (unsigned __int8 *)v8 + v15;
    *((void *)v8 + 1) = v19;
    memcpy(v19, *((const void **)a2 + 1), v14);
    unsigned int v18 = v8[1];
  }
  int v20 = *((_DWORD *)a2 + 1);
  if (((v18 | v20) & 0x810000) == 0)
  {
    int v21 = (void *)*((void *)a2 + 4);
    if ((v20 & 0x1000) != 0) {
      uint64_t v22 = sub_1B0CB0DF4(a1, (uint64_t)v21, a3);
    }
    else {
      uint64_t v22 = (uint64_t)sub_1B0CAE478(a1, v21, a3);
    }
    *((void *)v8 + 4) = v22;
  }
  unsigned int v23 = v8[1];
  if ((v23 & 0x1014000) != 0)
  {
    if (a3)
    {
      int v24 = *((_DWORD *)a2 + 1);
      int v25 = 80;
      if (*a2 != 178 && (v24 & 0x1000000) == 0)
      {
        int v25 = 44;
        if (!*((void *)a2 + 2))
        {
          if (*((void *)a2 + 4)) {
            int v25 = 44;
          }
          else {
            int v25 = 16;
          }
        }
      }
    }
    else
    {
      int v24 = *((_DWORD *)a2 + 1);
      int v25 = 80;
    }
    if ((v24 & 0x800) == 0)
    {
      uint64_t v29 = (const char *)*((void *)a2 + 1);
      if (v29) {
        int v25 = (v25 | 1) + (strlen(v29) & 0x3FFFFFFF);
      }
    }
    long long v35 = (unsigned __int8 *)v8 + ((v25 + 7) & 0x7FFFFFF8);
    if ((v23 & 0x810000) != 0)
    {
      if ((v24 & 0x1000000) == 0) {
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v30 = *((void *)a2 + 2);
      if (v30) {
        uint64_t v31 = sub_1B0CAE048(a1, v30, 1, &v35);
      }
      else {
        uint64_t v31 = 0;
      }
      *((void *)v8 + 2) = v31;
      uint64_t v32 = *((void *)a2 + 3);
      if (v32) {
        uint64_t v33 = sub_1B0CAE048(a1, v32, 1, &v35);
      }
      else {
        uint64_t v33 = 0;
      }
      *((void *)v8 + 3) = v33;
      if ((*((_DWORD *)a2 + 1) & 0x1000000) == 0)
      {
LABEL_55:
        if (!a4) {
          return v8;
        }
        goto LABEL_65;
      }
    }
    *((void *)v8 + 9) = sub_1B0D34AD8(a1, (uint64_t)v8, *((void *)a2 + 9));
    if (a4) {
LABEL_65:
    }
      *a4 = v35;
  }
  else if ((a2[6] & 0x81) == 0)
  {
    uint64_t v26 = *((void *)a2 + 2);
    if (*(unsigned __int8 *)v8 != 178 && v26) {
      uint64_t v26 = sub_1B0CAE048(a1, v26, 0, 0);
    }
    *((void *)v8 + 2) = v26;
    uint64_t v27 = *((void *)a2 + 3);
    if (v27) {
      uint64_t v28 = sub_1B0CAE048(a1, v27, 0, 0);
    }
    else {
      uint64_t v28 = 0;
    }
    *((void *)v8 + 3) = v28;
  }
  return v8;
}

uint64_t sub_1B0CAE394(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  for (int i = 0; v3; i += v8 + v7)
  {
    if (!a2 || *v3 == 178 || (v3[7] & 1) != 0)
    {
      int v5 = 80;
      if ((v3[5] & 8) == 0) {
        goto LABEL_9;
      }
    }
    else
    {
      if (!*((void *)v3 + 2))
      {
        if (*((void *)v3 + 4)) {
          int v5 = 44;
        }
        else {
          int v5 = 16;
        }
        if ((v3[5] & 8) != 0) {
          goto LABEL_11;
        }
LABEL_9:
        int v6 = (const char *)*((void *)v3 + 1);
        if (v6) {
          int v5 = (v5 | 1) + (strlen(v6) & 0x3FFFFFFF);
        }
        goto LABEL_11;
      }
      int v5 = 44;
      if ((v3[5] & 8) == 0) {
        goto LABEL_9;
      }
    }
LABEL_11:
    int v7 = (v5 + 7) & 0x7FFFFFF8;
    if ((a2 & 1) == 0) {
      return (v7 + i);
    }
    int v8 = sub_1B0CAE394(*((void *)v3 + 2), a2);
    uint64_t v3 = (unsigned __int8 *)*((void *)v3 + 3);
  }
  int v7 = 0;
  return (v7 + i);
}

void *sub_1B0CAE478(uint64_t a1, void *a2, unsigned int a3)
{
  if (!a2) {
    return 0;
  }
  if (a1 && *(void *)(a1 + 520) > (unint64_t)a2)
  {
    if (*(void *)(a1 + 496) <= (unint64_t)a2)
    {
      int v5 = 128;
      goto LABEL_7;
    }
    if (*(void *)(a1 + 504) <= (unint64_t)a2)
    {
      int v5 = *(unsigned __int16 *)(a1 + 438);
      goto LABEL_7;
    }
  }
  int v5 = off_1EB21C9F8(a2);
LABEL_7:
  int v6 = (void *)sub_1B0D05DC0(a1, v5);
  int v7 = v6;
  if (v6)
  {
    *int v6 = *a2;
    if (*(int *)a2 >= 1)
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v26 = 0;
      int v10 = 0;
      while (1)
      {
        unsigned int v14 = &a2[v8];
        size_t v15 = &v7[v8];
        unsigned int v16 = (unsigned __int8 *)a2[v8 + 1];
        if (!v16) {
          break;
        }
        uint64_t v17 = sub_1B0CAE048(a1, a2[v8 + 1], a3, 0);
        v15[1] = v17;
        if (*v16 != 178 || v17 == 0) {
          goto LABEL_21;
        }
        uint64_t v19 = v17;
        uint64_t v20 = *(void *)(v17 + 24);
        if (v20)
        {
          uint64_t v26 = *((void *)v16 + 3);
          *(void *)(v17 + 16) = v20;
          uint64_t v9 = v20;
          int v21 = (const char *)v14[2];
          if (!v21) {
            goto LABEL_10;
          }
        }
        else
        {
          uint64_t v24 = *((void *)v16 + 2);
          if (v24 != v26)
          {
            if (v24) {
              uint64_t v9 = sub_1B0CAE048(a1, v24, a3, 0);
            }
            else {
              uint64_t v9 = 0;
            }
            *(void *)(v19 + 24) = v9;
            uint64_t v26 = v24;
          }
          *(void *)(v19 + 16) = v9;
          int v21 = (const char *)v14[2];
          if (!v21)
          {
LABEL_10:
            int v11 = 0;
            goto LABEL_11;
          }
        }
LABEL_22:
        size_t v22 = strlen(v21);
        unint64_t v23 = v22 + 1;
        if (a1)
        {
          int v11 = (void *)sub_1B0D05DC0(a1, v23);
          if (!v11) {
            goto LABEL_11;
          }
LABEL_26:
          memcpy(v11, v21, v23);
          goto LABEL_11;
        }
        int v11 = (void *)sub_1B0C7FC94(v22 + 1);
        if (v11) {
          goto LABEL_26;
        }
LABEL_11:
        int v12 = &v7[v8];
        void v12[2] = v11;
        unsigned int v13 = *((_DWORD *)v14 + 6);
        *((_DWORD *)v12 + 6) = v13;
        *(_WORD *)((char *)v12 + 25) = (v13 >> 8) & 0xFFFB;
        *((_DWORD *)v12 + 7) = *((_DWORD *)v14 + 7);
        ++v10;
        v8 += 3;
        if (v10 >= *(_DWORD *)a2) {
          return v7;
        }
      }
      v15[1] = 0;
LABEL_21:
      int v21 = (const char *)v14[2];
      if (!v21) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  return v7;
}

uint64_t sub_1B0CAE698(uint64_t a1)
{
  *(_WORD *)(a1 + 70) = 0;
  *(unsigned char *)(a1 + 1) &= 0xF9u;
  if (*(unsigned char *)a1)
  {
LABEL_10:
    return sub_1B0D1EC00((unsigned __int8 *)a1);
  }
  uint64_t v2 = *(void *)(a1 + 136);
  __int16 v3 = *(_WORD *)(a1 + 86);
  *(_WORD *)(a1 + 86) = v3 + 1;
  if (*(unsigned __int16 *)(v2 + 24) <= (unsigned __int16)(v3 + 1))
  {
    *(_WORD *)(a1 + 86) = v3;
    goto LABEL_10;
  }
  if (!*(unsigned char *)(v2 + 8))
  {
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + 136);
      if (*(unsigned char *)(v5 + 8)) {
        break;
      }
      uint64_t result = sub_1B0CAD12C(a1, bswap32(*(_DWORD *)(*(void *)(v5 + 80)+ (unsigned __int16)(_byteswap_ushort(*(_WORD *)(*(void *)(v5 + 96)+ 2 * *(unsigned __int16 *)(a1 + 86))) & *(_WORD *)(v5 + 26)))));
      if (result) {
        return result;
      }
    }
  }
  return 0;
}

void *sub_1B0CAE764(uint64_t *a1, char *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 100);
  int v6 = *(unsigned __int8 *)(v4 + 197);
  uint64_t result = sub_1B0D224B0(v4, *(unsigned __int8 *)(v4 + 100), a2, v6);
  if (!v6 && (!result || !result[3]))
  {
    return (void *)sub_1B0D2719C((uint64_t)a1, v5, (uint64_t)result, a2, v8, v9, v10, v11);
  }
  return result;
}

void *sub_1B0CAE7F0(void **a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, unsigned __int8 a11)
{
  uint64_t v11 = (unsigned __int8 *)a8;
  int v12 = (void *)a5;
  long long v245 = 0u;
  long long v246 = 0u;
  long long v243 = 0u;
  long long v244 = 0u;
  long long v241 = 0u;
  long long v242 = 0u;
  uint64_t v14 = (uint64_t)*a1;
  __dst = 0;
  if (*((_DWORD *)a1 + 12)) {
    goto LABEL_28;
  }
  int v16 = a6;
  if (a11 != 2 && *((unsigned char *)a1 + 302) == 1) {
    goto LABEL_28;
  }
  if (!*(unsigned char *)(v14 + 197))
  {
    int v25 = sub_1B0C878D8(v14, (char **)a1 + 1, a3, (uint64_t)a4, a5, a6, a7, a8);
    if (v25)
    {
      uint64_t v26 = 0;
      *((_DWORD *)a1 + 6) = v25;
      ++*((_DWORD *)a1 + 12);
      goto LABEL_29;
    }
    if (*(unsigned char *)(v14 + 111)) {
      *(_DWORD *)(v14 + 44) |= 0x10u;
    }
  }
  if (v12)
  {
    uint64_t v20 = *(unsigned int *)v12;
    if ((int)v20 >= 1)
    {
      unint64_t v21 = 0;
      uint64_t v22 = 24 * v20;
      while ((*(_WORD *)((unsigned char *)&v12[v21 / 8 + 3] + 1) & 0x20) == 0)
      {
        v21 += 24;
        if (v22 == v21) {
          goto LABEL_10;
        }
      }
      int v34 = LOBYTE(v12[v21 / 8 + 3]);
      BOOL v35 = v34 == 3 || v34 == 0;
      long long v36 = "LAST";
      if (v35) {
        long long v36 = "FIRST";
      }
      char v226 = (char)v36;
      uint64_t v24 = "unsupported use of NULLS %s";
      goto LABEL_27;
    }
  }
LABEL_10:
  if (a4)
  {
    uint64_t v23 = (uint64_t)*a1;
    if (*(_DWORD *)(a3 + 8))
    {
      if (*(unsigned char *)(v23 + 197))
      {
        uint64_t v24 = "corrupt database";
LABEL_27:
        sub_1B0CEF2BC((uint64_t)a1, v24, a3, (uint64_t)a4, a5, a6, a7, a8, v226);
        goto LABEL_28;
      }
      int v238 = a11;
      int v30 = sub_1B0D35B18(v23, a2);
      uint64_t v38 = a3;
      if (v30 < 0)
      {
        sub_1B0CEF2BC((uint64_t)a1, "unknown database %T", a3, (uint64_t)a4, a5, a6, a7, a8, a2);
        goto LABEL_28;
      }
    }
    else
    {
      int v238 = a11;
      int v30 = *(unsigned __int8 *)(v23 + 196);
      uint64_t v38 = a2;
    }
    uint64_t v239 = v38;
    if (!*(unsigned char *)(v14 + 197))
    {
      uint64_t v39 = sub_1B0D3AE5C(a1, (uint64_t)a4, a3, (uint64_t)a4, a5, a6, a7, a8);
      if (*(_DWORD *)(a3 + 8))
      {
        uint64_t v38 = v239;
      }
      else
      {
        uint64_t v38 = v239;
        if (v39 && *(void *)(v39 + 96) == *(void *)(*(void *)(v14 + 32) + 56)) {
          int v30 = 1;
        }
      }
    }
    uint64_t v40 = (uint64_t)*a1;
    *(void *)&long long v241 = a1;
    int v41 = (void *)(*(void *)(v40 + 32) + 32 * v30);
    *((void *)&v245 + 1) = *v41;
    uint64_t v42 = v41[3];
    *(void *)&long long v246 = "index";
    *((void *)&v246 + 1) = v38;
    LOBYTE(v245) = v30 == 1;
    *(void *)&long long v244 = &v241;
    *((void *)&v244 + 1) = v42;
    *((void *)&v241 + 1) = a1;
    *(void *)&long long v242 = sub_1B0D3B968;
    *((void *)&v242 + 1) = sub_1B0D3B9E8;
    *(void *)&long long v243 = nullsub_8;
    DWORD2(v243) = 0;
    WORD6(v243) = 0;
    long long v253 = 0u;
    long long v254 = 0u;
    long long v251 = 0u;
    long long v252 = 0u;
    uint64_t v248 = 0;
    long long v250 = 0u;
    memset(v247, 0, sizeof(v247));
    uint64_t v249 = a4;
    sub_1B0C962CC((void *)&v241 + 1, v247);
    uint64_t v48 = sub_1B0D38D78((uint64_t)a1, 0, (uint64_t)(a4 + 1), v43, v44, v45, v46, v47);
    if (!v48) {
      goto LABEL_28;
    }
    uint64_t v27 = (void *)v48;
    if (v30 == 1 && *(void *)(*(void *)(v14 + 32) + 56) != *(void *)(v48 + 96))
    {
      sub_1B0CEF2BC((uint64_t)a1, "cannot create a TEMP index on non-TEMP table \"%s\"", a3, (uint64_t)a4, a5, a6, a7, a8, *(void *)v48);
LABEL_95:
      uint64_t v26 = 0;
      goto LABEL_96;
    }
    if ((*(unsigned char *)(v48 + 48) & 0x80) != 0)
    {
      uint64_t v33 = *(void *)(v48 + 16);
      for (i = v239; v33; uint64_t v33 = *(void *)(v33 + 40))
      {
        if ((*(_WORD *)(v33 + 99) & 3) == 2) {
          break;
        }
      }
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t i = v239;
    }
  }
  else
  {
    uint64_t v27 = a1[43];
    if (!v27)
    {
LABEL_28:
      uint64_t v26 = 0;
      goto LABEL_29;
    }
    int v238 = a11;
    uint64_t v28 = v27[12];
    if (v28)
    {
      uint64_t v29 = (uint64_t *)(*(void *)(v14 + 32) + 24);
      int v30 = -1;
      do
      {
        uint64_t v31 = *v29;
        v29 += 4;
        ++v30;
      }
      while (v31 != v28);
      uint64_t i = 0;
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t i = 0;
      uint64_t v33 = 0;
      int v30 = -32768;
    }
  }
  uint64_t v49 = (char *)*v27;
  if (*v27)
  {
    uint64_t v50 = *v49;
    if (!*v49)
    {
      int v59 = 0;
      signed int v58 = "sqlite_";
      goto LABEL_86;
    }
    if ((v50 & 0xFFFFFFDF) == 0x53)
    {
      uint64_t v51 = v49[1];
      if (!v49[1])
      {
        int v59 = 0;
        signed int v58 = "qlite_";
        goto LABEL_86;
      }
      if ((v51 & 0xFFFFFFDF) == 0x51)
      {
        uint64_t v52 = v49[2];
        if (!v49[2])
        {
          int v59 = 0;
          signed int v58 = "lite_";
          goto LABEL_86;
        }
        if ((v52 & 0xFFFFFFDF) == 0x4C)
        {
          uint64_t v53 = v49[3];
          if (!v49[3])
          {
            int v59 = 0;
            signed int v58 = "ite_";
            goto LABEL_86;
          }
          if ((v53 & 0xFFFFFFDF) == 0x49)
          {
            uint64_t v54 = v49[4];
            if (!v49[4])
            {
              int v59 = 0;
              signed int v58 = "te_";
              goto LABEL_86;
            }
            if ((v54 & 0xFFFFFFDF) == 0x54)
            {
              uint64_t v55 = v49[5];
              if (!v49[5])
              {
                int v59 = 0;
                signed int v58 = "e_";
                goto LABEL_86;
              }
              if ((v55 & 0xFFFFFFDF) == 0x45)
              {
                uint64_t v56 = v49[6];
                if (!v49[6])
                {
                  int v59 = 0;
                  signed int v58 = "_";
LABEL_86:
                  if (v59 != byte_1B0DE1758[*v58]) {
                    goto LABEL_90;
                  }
                  goto LABEL_87;
                }
                if (v56 == 95)
                {
LABEL_87:
                  if (a4 && !*(unsigned char *)(v14 + 197))
                  {
                    sub_1B0CEF2BC((uint64_t)a1, "table %s may not be indexed", a3, (uint64_t)a4, a5, a6, a7, a8, *v27);
                    goto LABEL_95;
                  }
                  goto LABEL_90;
                }
                uint64_t v57 = &byte_1B0DE1758[v56];
                signed int v58 = "_";
              }
              else
              {
                uint64_t v57 = &byte_1B0DE1758[v55];
                signed int v58 = "e_";
              }
            }
            else
            {
              uint64_t v57 = &byte_1B0DE1758[v54];
              signed int v58 = "te_";
            }
          }
          else
          {
            uint64_t v57 = &byte_1B0DE1758[v53];
            signed int v58 = "ite_";
          }
        }
        else
        {
          uint64_t v57 = &byte_1B0DE1758[v52];
          signed int v58 = "lite_";
        }
      }
      else
      {
        uint64_t v57 = &byte_1B0DE1758[v51];
        signed int v58 = "qlite_";
      }
    }
    else
    {
      uint64_t v57 = &byte_1B0DE1758[v50];
      signed int v58 = "sqlite_";
    }
    int v59 = *v57;
    goto LABEL_86;
  }
LABEL_90:
  int v60 = *((unsigned __int8 *)v27 + 63);
  if (v60 == 1)
  {
    int v61 = "virtual tables may not be indexed";
    goto LABEL_94;
  }
  if (v60 == 2)
  {
    int v61 = "views may not be indexed";
LABEL_94:
    sub_1B0CEF2BC((uint64_t)a1, v61, a3, (uint64_t)a4, a5, a6, a7, a8, v226);
    goto LABEL_95;
  }
  uint64_t v237 = v30;
  uint64_t v230 = *(void *)(v14 + 32);
  uint64_t v233 = (unsigned __int8 **)(v230 + 32 * v30);
  if (i)
  {
    uint64_t v26 = sub_1B0D2A1BC(v14, i);
    if (!v26 || sub_1B0D3555C(a1, v26, "index", (char *)*v27, v67, v68, v69, v70)) {
      goto LABEL_96;
    }
    if (*((unsigned __int8 *)a1 + 302) > 1u) {
      goto LABEL_128;
    }
    if (!*(unsigned char *)(v14 + 197) && sub_1B0CF60C8(v14, v26, *v233))
    {
      sub_1B0CEF2BC((uint64_t)a1, "there is already a table named %s", v93, v94, v95, v96, v97, v98, (char)v26);
      goto LABEL_96;
    }
    if (sub_1B0D22904(v14, (unsigned __int8 *)v26, *v233))
    {
      if (a10)
      {
        sub_1B0C9CCDC((uint64_t)a1, v237);
        sub_1B0D358A0((uint64_t *)a1, v77, v78, v79, v80, v81, v82, v83);
      }
      else
      {
        sub_1B0CEF2BC((uint64_t)a1, "index %s already exists", v71, v72, v73, v74, v75, v76, (char)v26);
      }
      goto LABEL_96;
    }
  }
  else
  {
    uint64_t v84 = v27[2];
    if (v84)
    {
      int v85 = 1;
      do
      {
        ++v85;
        uint64_t v84 = *(void *)(v84 + 40);
      }
      while (v84);
    }
    uint64_t v86 = (char *)sub_1B0C904AC(v14, "sqlite_autoindex_%s_%d", a3, (uint64_t)a4, a5, a6, a7, a8, (char)v49);
    uint64_t v26 = v86;
    if (!v86) {
      goto LABEL_96;
    }
    if (!*((unsigned char *)a1 + 302))
    {
LABEL_120:
      uint64_t v87 = *v233;
      if (v237 == 1) {
        uint64_t v88 = "sqlite_temp_master";
      }
      else {
        uint64_t v88 = "sqlite_master";
      }
      uint64_t v234 = *v233;
      if (sub_1B0D354D0((uint64_t)a1, 18, (uint64_t)v88, 0, (uint64_t)v87)) {
        goto LABEL_96;
      }
      uint64_t v89 = v237 == 1 ? 3 : 1;
      if (sub_1B0D354D0((uint64_t)a1, v89, (uint64_t)v26, *v27, (uint64_t)v234)) {
        goto LABEL_96;
      }
      goto LABEL_128;
    }
    ++v86[7];
  }
  if (*((unsigned __int8 *)a1 + 302) <= 1u) {
    goto LABEL_120;
  }
LABEL_128:
  if (v12)
  {
    if (*(_DWORD *)v12 > *((_DWORD *)*a1 + 36)) {
      sub_1B0CEF2BC((uint64_t)a1, "too many columns in %s", v71, v72, v73, v74, v75, v76, (char)"index");
    }
    if (*((_DWORD *)a1 + 12)) {
      goto LABEL_96;
    }
  }
  else
  {
    v247[0] = 0uLL;
    uint64_t v90 = v27[1] + 16 * *((__int16 *)v27 + 27);
    *(_WORD *)(v90 - 2) |= 8u;
    uint64_t v91 = *(const char **)(v90 - 16);
    *(void *)&v247[0] = v91;
    if (v91) {
      int v92 = strlen(v91) & 0x3FFFFFFF;
    }
    else {
      int v92 = 0;
    }
    DWORD2(v247[0]) = v92;
    uint64_t v99 = (unsigned __int8 *)sub_1B0C904D8(v14, 59, (uint64_t)v247, 0);
    uint64_t v100 = sub_1B0D55ACC(*a1, v99);
    int v12 = v100;
    if (!v100) {
      goto LABEL_96;
    }
    char v101 = a9;
    if (a9 == -1) {
      char v101 = 0;
    }
    LOBYTE(v100[3 * *(int *)v100]) = v101;
  }
  uint64_t v227 = a7;
  int v228 = v16;
  uint64_t v102 = *(unsigned int *)v12;
  int v103 = 0;
  if ((int)v102 >= 1)
  {
    unint64_t v104 = v12 + 1;
    do
    {
      if (*(unsigned char *)*v104 == 113)
      {
        uint64_t v107 = *(const char **)(*v104 + 8);
        if (v107)
        {
          int v235 = v103;
          int v105 = strlen(v107);
          int v103 = v235;
          int v106 = v105 & 0x3FFFFFFF;
        }
        else
        {
          int v106 = 0;
        }
        v103 += v106 + 1;
      }
      v104 += 3;
      --v102;
    }
    while (v102);
  }
  int v108 = v103;
  int v109 = strlen(v26) & 0x3FFFFFFF;
  if (v33) {
    __int16 v110 = *(_WORD *)(v33 + 94);
  }
  else {
    __int16 v110 = 1;
  }
  size_t v111 = (v109 + 1);
  uint64_t v112 = sub_1B0D3AFB8(v14, (__int16)(v110 + *(_DWORD *)v12), (int)v111 + v108, &__dst);
  if (*(unsigned char *)(v14 + 103)) {
    goto LABEL_154;
  }
  unint64_t v113 = (char *)__dst;
  *(void *)uint64_t v112 = __dst;
  __dst = &v113[v111];
  memcpy(v113, v26, v111);
  *(void *)(v112 + 24) = v27;
  *(unsigned char *)(v112 + 98) = v228;
  *(_WORD *)(v112 + 99) = *(_WORD *)(v112 + 99) & 0xFFF4 | (8 * (v228 != 0)) | v238 & 3;
  *(void *)(v112 + 48) = *(void *)(*(void *)(v14 + 32) + 32 * v237 + 24);
  *(_WORD *)(v112 + 94) = *(_DWORD *)v12;
  if (v11)
  {
    sub_1B0D36570((uint64_t)a1, v27, 2, (uint64_t)v11, 0, v114, v115, v116);
    *(void *)(v112 + 72) = v11;
  }
  unsigned int v117 = *(unsigned __int8 *)(*(void *)(v230 + 32 * v237 + 24) + 112);
  uint64_t v231 = v12;
  if (*((unsigned __int8 *)a1 + 302) >= 2u)
  {
    uint64_t v231 = 0;
    *(void *)(v112 + 80) = v12;
  }
  uint64_t v236 = v112;
  if (!*(_WORD *)(v112 + 94))
  {
    unsigned int v146 = 0;
    goto LABEL_207;
  }
  uint64_t v118 = (unsigned __int8 **)(v12 + 1);
  unint64_t v119 = 0;
  unsigned int v229 = v117;
  do
  {
    uint64_t v123 = *v118;
    int v124 = **v118;
    uint64_t v125 = *v118;
    if (v124 == 117 || v124 == 113 && (uint64_t v125 = (unsigned __int8 *)*((void *)v123 + 2), *v125 == 117)) {
      *uint64_t v125 = 59;
    }
    sub_1B0D36570((uint64_t)a1, v27, 32, (uint64_t)v123, 0, v114, v115, v116);
    if (*((_DWORD *)a1 + 12))
    {
      uint64_t v11 = 0;
      int v12 = v231;
      goto LABEL_155;
    }
    for (uint64_t j = *v118; j; uint64_t j = (unsigned __int8 *)*((void *)j + 2))
    {
      if ((j[5] & 0x20) == 0) {
        break;
      }
    }
    if (*j != 167)
    {
      if (v27 == a1[43])
      {
        sub_1B0CEF2BC((uint64_t)a1, "expressions prohibited in PRIMARY KEY and UNIQUE constraints", v126, v127, v128, v114, v115, v116, v226);
        uint64_t v11 = 0;
        int v12 = v231;
        goto LABEL_154;
      }
      if (!*(void *)(v112 + 80))
      {
        *(void *)(v112 + 80) = v231;
        uint64_t v231 = 0;
      }
      *(_WORD *)(*(void *)(v112 + 8) + 2 * v119) = -2;
      *(_WORD *)(v112 + 99) = *(_WORD *)(v112 + 99) & 0xF7F7 | 0x800;
      uint64_t v132 = *v118;
      if (**v118 != 113)
      {
LABEL_190:
        uint64_t v133 = v118;
        unint64_t v135 = v119;
        int v141 = 0;
        goto LABEL_193;
      }
LABEL_186:
      uint64_t v133 = v118;
      uint64_t v134 = (const char *)*((void *)v132 + 1);
      unint64_t v135 = v119;
      if (v134)
      {
        char v136 = (const char *)*((void *)v132 + 1);
        int v137 = strlen(v136);
        uint64_t v134 = v136;
        uint64_t v138 = v137 & 0x3FFFFFFF;
      }
      else
      {
        uint64_t v138 = 0;
      }
      uint64_t v142 = v138 + 1;
      int v141 = (char *)__dst;
      memcpy(__dst, v134, v138 + 1);
      __dst = &v141[v142];
      unsigned int v117 = v229;
      goto LABEL_193;
    }
    uint64_t v130 = *((unsigned int *)j + 12);
    if ((v130 & 0x80000000) != 0)
    {
      LODWORD(v130) = *((__int16 *)v27 + 26);
    }
    else
    {
      uint64_t v131 = v27[1];
      if ((*(unsigned char *)(v131 + 16 * v130 + 8) & 0xF) == 0)
      {
        *(_WORD *)(v112 + 99) &= ~8u;
        uint64_t v131 = v27[1];
      }
      if ((*(_WORD *)(v131 + 16 * v130 + 14) & 0x20) != 0) {
        *(_WORD *)(v112 + 99) |= 0xC00u;
      }
    }
    *(_WORD *)(*(void *)(v112 + 8) + 2 * v119) = v130;
    uint64_t v132 = *v118;
    if (**v118 == 113) {
      goto LABEL_186;
    }
    if ((v130 & 0x80000000) != 0) {
      goto LABEL_190;
    }
    uint64_t v139 = v27[1];
    __int16 v140 = *(_WORD *)(v139 + 16 * v130 + 14);
    if ((v140 & 0x200) == 0) {
      goto LABEL_190;
    }
    uint64_t v143 = *(void *)(v139 + 16 * v130) - 1;
    while (*(unsigned __int8 *)++v143)
      ;
    uint64_t v133 = v118;
    unint64_t v135 = v119;
    if ((v140 & 4) != 0)
    {
      while (*(unsigned __int8 *)++v143)
        ;
    }
    int v141 = (char *)(v143 + 1);
LABEL_193:
    if (!v141) {
      int v141 = "BINARY";
    }
    if (!*(unsigned char *)(v14 + 197) && !sub_1B0CAE764((uint64_t *)a1, v141))
    {
      uint64_t v11 = 0;
      int v12 = v231;
      uint64_t v112 = v236;
      goto LABEL_154;
    }
    *(void *)(*(void *)(v236 + 64) + 8 * v135) = v141;
    unint64_t v120 = v135;
    uint64_t v121 = v133;
    uint64_t v112 = v236;
    char v122 = *((unsigned char *)v121 + 16);
    if (v117 <= 3) {
      char v122 = 0;
    }
    *(unsigned char *)(*(void *)(v236 + 56) + v120) = v122;
    unint64_t v119 = v120 + 1;
    uint64_t v118 = v121 + 3;
  }
  while (v119 < *(unsigned __int16 *)(v236 + 94));
  unsigned int v146 = v119;
LABEL_207:
  int v12 = v231;
  if (v33)
  {
    unsigned int v232 = v146;
    unsigned int v147 = *(unsigned __int16 *)(v33 + 94);
    if (*(_WORD *)(v33 + 94))
    {
      unint64_t v148 = 0;
      do
      {
        if (sub_1B0D37190(v112, *(unsigned __int16 *)(v112 + 94), v33, v148))
        {
          --*(_WORD *)(v112 + 96);
        }
        else
        {
          *(_WORD *)(*(void *)(v112 + 8) + 2 * (int)v232) = *(_WORD *)(*(void *)(v33 + 8) + 2 * v148);
          *(void *)(*(void *)(v112 + 64) + 8 * (int)v232) = *(void *)(*(void *)(v33 + 64) + 8 * v148);
          *(unsigned char *)(*(void *)(v112 + 56) + (int)v232++) = *(unsigned char *)(*(void *)(v33 + 56) + v148);
          unsigned int v147 = *(unsigned __int16 *)(v33 + 94);
        }
        ++v148;
      }
      while (v148 < v147);
    }
  }
  else
  {
    *(_WORD *)(*(void *)(v112 + 8) + 2 * v146) = -1;
    *(void *)(*(void *)(v112 + 64) + 8 * v146) = "BINARY";
  }
  sub_1B0D22B7C(v112);
  if (!a1[43]) {
    sub_1B0D36708(v112);
  }
  sub_1B0D3732C(v112);
  if (a4)
  {
    uint64_t v156 = *(unsigned __int16 *)(v112 + 96);
    if ((int)v156 >= *((__int16 *)v27 + 27))
    {
      __int16 v157 = *(_WORD *)(v112 + 99);
      *(_WORD *)(v112 + 99) = v157 | 0x20;
      int v158 = *((__int16 *)v27 + 27);
      if (v158 >= 1)
      {
        int v159 = 0;
        while (1)
        {
          if (v159 != *((__int16 *)v27 + 26))
          {
            if (!v156) {
              break;
            }
            uint64_t v160 = 0;
            while (*(unsigned __int16 *)(*(void *)(v112 + 8) + 2 * v160) != (unsigned __int16)v159)
            {
              if (v156 == ++v160) {
                goto LABEL_229;
              }
            }
            if ((v160 & 0x8000) != 0) {
              break;
            }
          }
          if (++v159 == v158) {
            goto LABEL_230;
          }
        }
LABEL_229:
        *(_WORD *)(v112 + 99) = v157 & 0xFFDF;
      }
    }
  }
LABEL_230:
  if (v27 != a1[43] || (uint64_t v170 = v27[2]) == 0)
  {
LABEL_231:
    if (*((unsigned __int8 *)a1 + 302) <= 1u)
    {
      if (*(unsigned char *)(v14 + 197))
      {
        if (a4)
        {
          int v161 = *(_DWORD *)(v14 + 192);
          *(_DWORD *)(v112 + 88) = v161;
          uint64_t v162 = *(void *)(*(void *)(v112 + 24) + 16);
          if (v162)
          {
            while (v162 == v112 || *(_DWORD *)(v162 + 88) != v161)
            {
              uint64_t v162 = *(void *)(v162 + 40);
              if (!v162) {
                goto LABEL_235;
              }
            }
            sub_1B0CEF2BC((uint64_t)a1, "invalid rootpage", v150, v151, v152, v153, v154, v155, v226);
            uint64_t v11 = 0;
            *((_DWORD *)a1 + 6) = sub_1B0D1045C(132026);
            goto LABEL_154;
          }
        }
LABEL_235:
        if (sub_1B0C796D8(*(void *)(v112 + 48) + 32, *(unsigned __int8 **)v112, v112))
        {
          sub_1B0CEB0A4(v14, v163, v164, v165, v166, v167, v168, v169);
          goto LABEL_266;
        }
        *(_DWORD *)(v14 + 44) |= 1u;
      }
      else
      {
        if (!a4 && (v27[6] & 0x80) != 0) {
          goto LABEL_291;
        }
        uint64_t v179 = (*((_DWORD *)a1 + 14) + 1);
        *((_DWORD *)a1 + 14) = v179;
        uint64_t v180 = sub_1B0CCB8D4((uint64_t *)a1, v149, v150, v151, v152, v153, v154, v155);
        if (!v180)
        {
          uint64_t v11 = 0;
          uint64_t v112 = v236;
          goto LABEL_154;
        }
        uint64_t v181 = v180;
        sub_1B0D3597C((uint64_t)a1, 1, v237);
        *(_DWORD *)(v236 + 88) = sub_1B0D2F924(v181, 184, v182, v183, v184, v185, v186, v187);
        sub_1B0C8A924(v181, 147, v237, v179, 2, v188, v189, v190);
        if (v227)
        {
          unint64_t v197 = " UNIQUE";
          if (!v228) {
            unint64_t v197 = &byte_1B0DE9952;
          }
          uint64_t v198 = sub_1B0C904AC(v14, "CREATE%s INDEX %.*s", v191, v192, v193, v194, v195, v196, (char)v197);
        }
        else
        {
          uint64_t v198 = 0;
        }
        sub_1B0CD9598((uint64_t *)a1, "INSERT INTO %Q.sqlite_master VALUES('index',%Q,%Q,#%d,%Q);",
          v191,
          v192,
          v193,
          v194,
          v195,
          v196,
          *(void *)(*(void *)(v14 + 32) + 32 * v237));
        if (v198) {
          sub_1B0D05C10((void *)v14, v198);
        }
        if (a4)
        {
          sub_1B0D3B084((uint64_t)a1, v236, v179, v199, v200, v201, v202, v203);
          sub_1B0D37018((uint64_t *)a1, v237, v204, v205, v206, v207, v208, v209);
          int v216 = sub_1B0C904AC(v14, "name='%q' AND type='index'", v210, v211, v212, v213, v214, v215, *(void *)v236);
          sub_1B0D37088(v181, v237, (uint64_t)v216, 0, v217, v218, v219, v220);
          sub_1B0D254B8(v181, 166, 0, 1, v221, v222, v223, v224);
        }
        if (*(unsigned char *)(*(void *)v181 + 103)) {
          uint64_t v225 = &byte_1E9B52240;
        }
        else {
          uint64_t v225 = (char *)(*(void *)(v181 + 136) + 40 * *(int *)(v236 + 88));
        }
        *((_DWORD *)v225 + 2) = *(_DWORD *)(v181 + 144);
      }
      uint64_t v112 = v236;
    }
    if (a4 && !*(unsigned char *)(v14 + 197))
    {
      if (*((unsigned __int8 *)a1 + 302) >= 2u)
      {
        uint64_t v11 = 0;
        a1[44] = (void *)v112;
        goto LABEL_96;
      }
      uint64_t v11 = 0;
LABEL_154:
      if (v112) {
        goto LABEL_155;
      }
      goto LABEL_96;
    }
LABEL_291:
    uint64_t v11 = 0;
    *(void *)(v112 + 40) = v27[2];
    v27[2] = v112;
    goto LABEL_96;
  }
  uint64_t v171 = *(unsigned __int16 *)(v112 + 94);
  while (*(unsigned __int16 *)(v170 + 94) != v171)
  {
LABEL_245:
    uint64_t v170 = *(void *)(v170 + 40);
    if (!v170) {
      goto LABEL_231;
    }
  }
  if (!*(_WORD *)(v112 + 94))
  {
    LODWORD(v172) = 0;
LABEL_244:
    if (v172 == v171) {
      goto LABEL_256;
    }
    goto LABEL_245;
  }
  uint64_t v172 = 0;
  do
  {
    if (*(unsigned __int16 *)(*(void *)(v170 + 8) + 2 * v172) != *(unsigned __int16 *)(*(void *)(v112 + 8)
                                                                                        + 2 * v172))
      goto LABEL_244;
    uint64_t v173 = *(unsigned char **)(*(void *)(v170 + 64) + 8 * v172);
    for (uint64_t k = *(unsigned __int8 **)(*(void *)(v112 + 64) + 8 * v172); ; ++k)
    {
      uint64_t v175 = *v173;
      uint64_t v176 = *k;
      if (v175 == v176) {
        break;
      }
      if (byte_1B0DE1758[v175] != byte_1B0DE1758[v176]) {
        goto LABEL_244;
      }
LABEL_252:
      ++v173;
    }
    if (*v173) {
      goto LABEL_252;
    }
    ++v172;
  }
  while (v172 != v171);
LABEL_256:
  int v177 = *(unsigned __int8 *)(v170 + 98);
  int v178 = *(unsigned __int8 *)(v112 + 98);
  if (v177 != v178)
  {
    if (v177 != 11 && v178 != 11)
    {
      sub_1B0CEF2BC((uint64_t)a1, "conflicting ON CONFLICT clauses specified", v150, v151, v152, v153, v154, v155, 0);
      int v177 = *(unsigned __int8 *)(v170 + 98);
    }
    if (v177 == 11) {
      *(unsigned char *)(v170 + 98) = *(unsigned char *)(v236 + 98);
    }
  }
  if (v238 == 2) {
    *(_WORD *)(v170 + 99) = *(_WORD *)(v170 + 99) & 0xFFFC | 2;
  }
  if (*((unsigned __int8 *)a1 + 302) >= 2u)
  {
    uint64_t v11 = 0;
    *(void *)(v236 + 40) = a1[44];
    a1[44] = (void *)v236;
    goto LABEL_96;
  }
LABEL_266:
  uint64_t v11 = 0;
  uint64_t v112 = v236;
LABEL_155:
  sub_1B0D23288((void *)v14, v112);
LABEL_96:
  uint64_t v64 = v27[2];
  uint64_t v63 = v27 + 2;
  uint64_t v62 = v64;
  if (v64)
  {
    if (*(unsigned char *)(v62 + 98) == 5)
    {
LABEL_103:
      while (1)
      {
        uint64_t v66 = *(void *)(v62 + 40);
        if (!v66 || *(unsigned char *)(v66 + 98) == 5) {
          break;
        }
        *uint64_t v63 = v66;
        uint64_t v63 = (void *)(v66 + 40);
        *(void *)(v62 + 40) = *(void *)(v66 + 40);
        *(void *)(v66 + 40) = v62;
      }
    }
    else
    {
      while (1)
      {
        uint64_t v65 = v62;
        uint64_t v62 = *(void *)(v62 + 40);
        if (!v62) {
          break;
        }
        if (*(unsigned char *)(v62 + 98) == 5)
        {
          uint64_t v63 = (void *)(v65 + 40);
          goto LABEL_103;
        }
      }
    }
  }
LABEL_29:
  if (v11) {
    sub_1B0D1DF88((void *)v14, v11);
  }
  if (v12) {
    sub_1B0D270DC((void *)v14, v12);
  }
  uint64_t result = sub_1B0CA115C((void *)v14, a4);
  if (v26) {
    return sub_1B0D05C10((void *)v14, v26);
  }
  return result;
}

void *sub_1B0CAF97C(uint64_t a1, char *__s)
{
  if (!__s) {
    return 0;
  }
  size_t v4 = strlen(__s);
  unint64_t v5 = v4 + 1;
  if (a1)
  {
    int v6 = (void *)sub_1B0D05DC0(a1, v5);
    if (!v6) {
      return v6;
    }
    goto LABEL_7;
  }
  int v6 = (void *)sub_1B0C7FC94(v4 + 1);
  if (v6) {
LABEL_7:
  }
    memcpy(v6, __s, v5);
  return v6;
}

uint64_t sub_1B0CAFA00(uint64_t result, uint64_t a2, int a3)
{
  if (!a2) {
    return result;
  }
  uint64_t v3 = result;
  uint64_t v23 = a2;
  if (a3)
  {
    size_t v4 = (unint64_t *)&v23;
  }
  else
  {
    uint64_t v24 = a2;
    uint64_t v5 = *(void *)(a2 + 56);
    if (v5)
    {
      uint64_t v6 = (((2 * *(unsigned char *)(a2 + 32)) ^ 2) + *(unsigned char *)(result + 48)) & 3;
      *(unsigned char *)(a2 + 33) = v6;
      uint64_t v7 = *(unsigned int *)(result + 124);
      if ((int)v7 >= 1)
      {
        uint64_t v8 = *(uint64_t **)(v5 + 16);
        while (1)
        {
          uint64_t v9 = *v8;
          BOOL v10 = !*v8 || v9 == a2;
          if (!v10 && *(unsigned __int8 *)(v9 + 33) == v6) {
            break;
          }
          ++v8;
          if (!--v7) {
            goto LABEL_22;
          }
        }
        uint64_t v11 = (void *)(v9 + 40);
        while (1)
        {
          int v12 = v11;
          uint64_t v11 = (void *)v11[1];
          if (!v11) {
            break;
          }
          if (v11[2] != v5)
          {
            *uint64_t v11 = a2 + 40;
            *(void *)(a2 + 40) = v12;
            v12[1] = a2 + 40;
            *(void *)(a2 + 48) = v11;
            goto LABEL_27;
          }
        }
      }
LABEL_22:
      uint64_t v13 = result + 16 * v6;
      uint64_t v16 = *(void *)(v13 + 56);
      uint64_t v14 = (void *)(v13 + 56);
      uint64_t v15 = v16;
      uint64_t v17 = (void *)(a2 + 40);
      if (v16)
      {
        *(void *)(v15 + 8) = v17;
        *uint64_t v17 = v15;
      }
      else
      {
        *(void *)(result + 16 * v6 + 64) = v17;
      }
      *uint64_t v14 = v17;
LABEL_27:
      ++*(_DWORD *)(result + 24);
      uint64_t v18 = *(void *)(a2 + 56);
      if (v18)
      {
        char v19 = *(unsigned char *)(v18 + 33) - 1;
        *(unsigned char *)(v18 + 33) = v19;
        ++*(unsigned char *)(v18 + 34);
        if (!v19)
        {
          sub_1B0D77EE0((void *)result, (uint64_t *)v18);
          uint64_t v20 = (uint64_t *)(v3 + 136);
          if (*(unsigned __int8 *)(v18 + 33) + *(unsigned __int8 *)(v18 + 34) >= *(_DWORD *)(v3 + 124))
          {
            uint64_t v22 = *(void **)(v3 + 144);
            if (v22)
            {
              *uint64_t v22 = v18;
              *(void *)(v18 + 8) = v22;
            }
            else
            {
              *uint64_t v20 = v18;
            }
            uint64_t v20 = (uint64_t *)(v3 + 144);
          }
          else
          {
            uint64_t v21 = *v20;
            if (*v20)
            {
              *(void *)(v21 + 8) = v18;
              *(void *)uint64_t v18 = v21;
            }
            else
            {
              *(void *)(v3 + 144) = v18;
            }
          }
          *uint64_t v20 = v18;
          *(unsigned char *)(v18 + 32) = 2;
        }
      }
      goto LABEL_5;
    }
    size_t v4 = (unint64_t *)&v24;
  }
  sub_1B0D78000((int *)result, v4);
LABEL_5:

  return sub_1B0D77C10(v3);
}

void *sub_1B0CAFBC8(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  BOOL v10 = (unsigned __int8 *)a8;
  char v13 = a5;
  int v14 = a4;
  uint64_t v16 = a2;
  uint64_t v18 = *(void *)a1;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  long long v104 = 0u;
  long long v105 = 0u;
  int v19 = *(_DWORD *)(a3 + 8);
  if (a9)
  {
    if (v19)
    {
      uint64_t v20 = "temporary trigger may not have qualified name";
LABEL_7:
      sub_1B0CEF2BC((uint64_t)a1, v20, a3, a4, a5, (uint64_t)a6, a7, a8, v99);
      goto LABEL_46;
    }
    if (!a7) {
      goto LABEL_46;
    }
    int v21 = 1;
  }
  else
  {
    if (v19)
    {
      if (*(unsigned char *)(v18 + 197))
      {
        uint64_t v20 = "corrupt database";
        goto LABEL_7;
      }
      int v21 = sub_1B0D35B18(v18, a2);
      a2 = a3;
      if (v21 < 0)
      {
        sub_1B0CEF2BC((uint64_t)a1, "unknown database %T", v22, v23, a5, (uint64_t)a6, a7, a8, v16);
        goto LABEL_46;
      }
    }
    else
    {
      int v21 = *(unsigned __int8 *)(v18 + 196);
    }
    uint64_t v16 = a2;
    if (!a7) {
      goto LABEL_46;
    }
  }
  if (!*(unsigned char *)(v18 + 103))
  {
    int v102 = v21;
    if (v21 != 1 && *(unsigned char *)(v18 + 197))
    {
      uint64_t v24 = *(void **)(a7 + 16);
      if (v24) {
        sub_1B0D05C10((void *)v18, v24);
      }
      *(void *)(a7 + 16) = 0;
    }
    uint64_t v25 = *(void *)(a7 + 8);
    char v101 = v13;
    if (v25)
    {
      uint64_t v26 = *(void *)(*(void *)a1 + 32);
      uint64_t v27 = (uint64_t *)(v26 + 24);
      uint64_t v28 = 0xFFFFFFFF00000000;
      do
      {
        uint64_t v29 = *v27;
        v27 += 4;
        v28 += 0x100000000;
      }
      while (v29 != v25);
      int v30 = (unsigned char **)(v26 + (v28 >> 27));
    }
    else
    {
      int v30 = (unsigned char **)(a7 + 16);
    }
    uint64_t v37 = sub_1B0CB02B4((uint64_t)a1, 0, *(char **)(a7 + 24), *v30, a5, (uint64_t)a6, a7, a8);
    uint64_t v38 = *(void *)(a7 + 40);
    if (v38)
    {
      uint64_t v39 = *(void **)a1;
      if (*(void *)(*(void *)a1 + 816) || (int v40 = *(_DWORD *)(v38 + 44) - 1, (*(_DWORD *)(v38 + 44) = v40) == 0)) {
        sub_1B0D26BF8(v39, (void *)v38);
      }
    }
    *(void *)(a7 + 40) = v37;
    *(_WORD *)(a7 + 69) |= 0x200u;
    int v41 = v102;
    if (v37)
    {
      ++*(_DWORD *)(v37 + 44);
      if ((*(_WORD *)(a7 + 69) & 2) != 0)
      {
        uint64_t v42 = *(void *)(v37 + 16);
        if (!v42) {
          goto LABEL_39;
        }
        while (1)
        {
          uint64_t v43 = *(unsigned char **)v42;
          for (uint64_t i = *(unsigned __int8 **)(a7 + 96); ; ++i)
          {
            uint64_t v45 = *v43;
            uint64_t v46 = *i;
            if (v45 != v46) {
              break;
            }
            if (!*v43)
            {
              *(void *)(a7 + 104) = v42;
              goto LABEL_40;
            }
LABEL_34:
            ++v43;
          }
          if (byte_1B0DE1758[v45] == byte_1B0DE1758[v46]) {
            goto LABEL_34;
          }
          uint64_t v42 = *(void *)(v42 + 40);
          if (!v42)
          {
LABEL_39:
            sub_1B0CEF2BC((uint64_t)a1, "no such index: %s", v31, v32, v33, v34, v35, v36, *(void *)(a7 + 96));
            int v41 = v102;
            uint64_t v37 = 0;
            a1[29] = 1;
            break;
          }
        }
      }
    }
LABEL_40:
    if (!*(unsigned char *)(v18 + 197)
      && !*(_DWORD *)(a3 + 8)
      && v37
      && *(void *)(v37 + 96) == *(void *)(*(void *)(v18 + 32) + 56))
    {
      int v41 = 1;
    }
    char v47 = v101;
    if (!*(unsigned char *)(v18 + 103))
    {
      uint64_t v54 = *(void *)a1;
      *(void *)&long long v104 = a1;
      uint64_t v55 = (void *)(*(void *)(v54 + 32) + 32 * v41);
      *((void *)&v108 + 1) = *v55;
      uint64_t v56 = v55[3];
      *(void *)&long long v109 = "trigger";
      *((void *)&v109 + 1) = v16;
      LOBYTE(v108) = v41 == 1;
      *(void *)&long long v107 = &v104;
      *((void *)&v107 + 1) = v56;
      *((void *)&v104 + 1) = a1;
      *(void *)&long long v105 = sub_1B0D3B968;
      *((void *)&v105 + 1) = sub_1B0D3B9E8;
      *(void *)&long long v106 = nullsub_8;
      DWORD2(v106) = 0;
      WORD6(v106) = 0;
      if (!a7) {
        goto LABEL_60;
      }
      long long v116 = 0u;
      long long v117 = 0u;
      long long v114 = 0u;
      long long v115 = 0u;
      uint64_t v111 = 0;
      long long v113 = 0u;
      memset(v110, 0, sizeof(v110));
      uint64_t v112 = a7;
      int v57 = v41;
      int v58 = sub_1B0C962CC((void *)&v104 + 1, v110);
      int v41 = v57;
      if (!v58)
      {
LABEL_60:
        unsigned int v103 = v41;
        uint64_t v59 = sub_1B0D3AE5C(a1, a7, v31, v32, v33, v34, v35, v36);
        if (!v59)
        {
LABEL_63:
          uint64_t v67 = 0;
LABEL_64:
          if (*(unsigned char *)(v18 + 196) == 1) {
            *(unsigned char *)(v18 + 198) |= 1u;
          }
          if (!v67) {
            goto LABEL_46;
          }
LABEL_71:
          sub_1B0D05C10((void *)v18, v67);
          goto LABEL_46;
        }
        uint64_t v66 = v59;
        if (*(unsigned char *)(v59 + 63) == 1)
        {
          sub_1B0CEF2BC((uint64_t)a1, "cannot create triggers on virtual tables", v60, v61, v62, v63, v64, v65, v99);
          goto LABEL_63;
        }
        uint64_t v68 = sub_1B0D2A1BC(v18, v16);
        if (!v68) {
          goto LABEL_46;
        }
        uint64_t v100 = (unsigned __int8 *)v68;
        if (sub_1B0D3555C(a1, v68, "trigger", *(char **)v66, v69, v70, v71, v72))
        {
LABEL_70:
          uint64_t v67 = v100;
          goto LABEL_71;
        }
        if (a1[302] <= 1u
          && sub_1B0D22710(*(void *)(*(void *)(v18 + 32) + 32 * v103 + 24) + 56, v100))
        {
          if (a10)
          {
            sub_1B0C9CCDC((uint64_t)a1, v103);
            goto LABEL_70;
          }
          char v99 = v16;
          uint64_t v81 = "trigger %T already exists";
        }
        else
        {
          if (sqlite3_strnicmp(*(const char **)v66, "sqlite_", 7))
          {
            int v79 = *(unsigned __int8 *)(v66 + 63);
            if (v14 == 65 || v79 != 2)
            {
              if (v14 != 65 || v79 == 2)
              {
                if (a1[302] > 1u) {
                  goto LABEL_130;
                }
                uint64_t v87 = *(void *)(v66 + 96);
                uint64_t v88 = *(void *)(v18 + 32);
                if (v87)
                {
                  uint64_t v89 = (uint64_t *)(v88 + 24);
                  int v90 = -1;
                  do
                  {
                    uint64_t v91 = *v89;
                    v89 += 4;
                    ++v90;
                  }
                  while (v91 != v87);
                }
                else
                {
                  int v90 = -32768;
                }
                uint64_t v92 = *(void *)(v88 + 32 * v90);
                uint64_t v93 = v92;
                if (a9) {
                  uint64_t v93 = *(void *)(v88 + 32);
                }
                BOOL v94 = v90 != 1 && a9 == 0;
                uint64_t v95 = v94 ? 7 : 5;
                if (!sub_1B0D354D0((uint64_t)a1, v95, (uint64_t)v100, *(void *)v66, v93))
                {
                  uint64_t v96 = v90 == 1 ? "sqlite_temp_master" : "sqlite_master";
                  int v97 = sub_1B0D354D0((uint64_t)a1, 18, (uint64_t)v96, 0, v92);
                  char v47 = v101;
                  if (!v97)
                  {
LABEL_130:
                    uint64_t v82 = sub_1B0C79680(v18, 0x48uLL);
                    if (v82)
                    {
                      uint64_t v53 = (uint64_t)v82;
                      *uint64_t v82 = v100;
                      uint64_t v83 = sub_1B0CAF97C(v18, *(char **)(a7 + 24));
                      BOOL v84 = v14 == 33 || v14 == 65;
                      *(void *)(v53 + 8) = v83;
                      *(void *)(v53 + 40) = *(void *)(*(void *)(v18 + 32) + 32 * v103 + 24);
                      *(void *)(v53 + 48) = *(void *)(v66 + 96);
                      *(unsigned char *)(v53 + 16) = v47;
                      if (v84) {
                        char v85 = 1;
                      }
                      else {
                        char v85 = 2;
                      }
                      *(unsigned char *)(v53 + 17) = v85;
                      if (a1[302] < 2u)
                      {
                        if (v10) {
                          uint64_t v98 = sub_1B0CAE048(v18, v10, 1, 0);
                        }
                        else {
                          uint64_t v98 = 0;
                        }
                      }
                      else
                      {
                        uint64_t v86 = (void *)*((void *)a1 + 51);
                        if (v86)
                        {
                          while (*v86 != *(void *)(a7 + 24))
                          {
                            uint64_t v86 = (void *)v86[3];
                            if (!v86) {
                              goto LABEL_125;
                            }
                          }
                          *uint64_t v86 = v83;
                        }
LABEL_125:
                        uint64_t v98 = (unsigned int *)v10;
                        BOOL v10 = 0;
                      }
                      *(void *)(v53 + 24) = v98;
                      *(void *)(v53 + 32) = a6;
                      *((void *)a1 + 45) = v53;
                      uint64_t result = sub_1B0CA115C((void *)v18, (void *)a7);
                      if (v10) {
                        goto LABEL_54;
                      }
                      goto LABEL_55;
                    }
                  }
                }
                uint64_t v67 = v100;
                goto LABEL_71;
              }
              sub_1B0CEF2BC((uint64_t)a1, "cannot create INSTEAD OF trigger on table: %S", v73, v74, v75, v76, v77, v78, a7 + 8);
            }
            else
            {
              uint64_t v80 = "AFTER";
              if (v14 == 33) {
                uint64_t v80 = "BEFORE";
              }
              sub_1B0CEF2BC((uint64_t)a1, "cannot create %s trigger on view: %S", v73, v74, v75, v76, v77, v78, (char)v80);
            }
            uint64_t v67 = v100;
            goto LABEL_64;
          }
          uint64_t v81 = "cannot create trigger on system table";
        }
        sub_1B0CEF2BC((uint64_t)a1, v81, v73, v74, v75, v76, v77, v78, v99);
        goto LABEL_70;
      }
    }
  }
LABEL_46:
  uint64_t result = sub_1B0CA115C((void *)v18, (void *)a7);
  if (a6)
  {
    int v49 = *(_DWORD *)a6;
    if (*(int *)a6 >= 1)
    {
      uint64_t v50 = 0;
      uint64_t v51 = 1;
      do
      {
        uint64_t v52 = (void *)a6[v51];
        if (v52)
        {
          sub_1B0D05C10((void *)v18, v52);
          int v49 = *(_DWORD *)a6;
        }
        ++v50;
        v51 += 2;
      }
      while (v50 < v49);
    }
    uint64_t result = sub_1B0D15C20((void *)v18, a6);
  }
  uint64_t v53 = 0;
  if (v10) {
LABEL_54:
  }
    uint64_t result = sub_1B0D1DF88((void *)v18, v10);
LABEL_55:
  if (!*((void *)a1 + 45)) {
    return sub_1B0C8AF78((void *)v18, v53);
  }
  return result;
}

uint64_t sub_1B0CB02B4(uint64_t a1, char a2, char *a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = *(void *)a1;
  if ((*(unsigned char *)(*(void *)a1 + 44) & 0x10) == 0 && !*(unsigned char *)(v12 + 197))
  {
    int v21 = sub_1B0C878D8(*(void *)a1, (char **)(a1 + 8), (uint64_t)a3, (uint64_t)a4, a5, a6, a7, a8);
    if (v21)
    {
      int v22 = v21;
      uint64_t result = 0;
      *(_DWORD *)(a1 + 24) = v22;
      ++*(_DWORD *)(a1 + 48);
      return result;
    }
    if (*(unsigned char *)(v12 + 111)) {
      *(_DWORD *)(v12 + 44) |= 0x10u;
    }
  }
  uint64_t result = sub_1B0CF60C8(v12, a3, a4);
  if (result)
  {
    if (*(unsigned char *)(result + 63) != 1 || (*(unsigned char *)(a1 + 37) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
  if ((*(unsigned char *)(a1 + 37) & 4) != 0 || *(unsigned char *)(v12 + 197))
  {
LABEL_9:
    if ((a2 & 2) != 0) {
      return 0;
    }
    *(unsigned char *)(a1 + 29) = 1;
LABEL_11:
    uint64_t v20 = "no such view";
    if ((a2 & 1) == 0) {
      uint64_t v20 = "no such table";
    }
    if (a4) {
      sub_1B0CEF2BC(a1, "%s: %s.%s", v14, v15, v16, v17, v18, v19, (char)v20);
    }
    else {
      sub_1B0CEF2BC(a1, "%s: %s", v14, v15, v16, v17, v18, v19, (char)v20);
    }
    return 0;
  }
  uint64_t v23 = *(void *)(v12 + 584);
  if (v23)
  {
    int v24 = *a3;
    if (*a3)
    {
      unsigned int v25 = 0;
      uint64_t v26 = a3 + 1;
      do
      {
        unsigned int v25 = -1640531535 * (v25 + byte_1B0DE1758[v24]);
        int v27 = *v26++;
        int v24 = v27;
      }
      while (v27);
    }
    else
    {
      unsigned int v25 = 0;
    }
    uint64_t v29 = (_DWORD *)(v23 + 16 * (v25 % *(_DWORD *)(v12 + 568)));
    uint64_t v28 = (uint64_t *)(v29 + 2);
  }
  else
  {
    uint64_t v28 = (uint64_t *)(v12 + 576);
    uint64_t v29 = (_DWORD *)(v12 + 572);
  }
  int v30 = *v29;
  if (v30)
  {
LABEL_31:
    uint64_t v28 = (uint64_t *)*v28;
    uint64_t v31 = (unsigned char *)v28[3];
    for (uint64_t i = a3; ; ++i)
    {
      uint64_t v33 = *v31;
      uint64_t v34 = *i;
      if (v33 == v34)
      {
        if (!*v31) {
          goto LABEL_40;
        }
      }
      else if (byte_1B0DE1758[v33] != byte_1B0DE1758[v34])
      {
        if (!--v30)
        {
          uint64_t v28 = &qword_1E9B52220;
          goto LABEL_40;
        }
        goto LABEL_31;
      }
      ++v31;
    }
  }
  uint64_t v28 = &qword_1E9B52220;
LABEL_40:
  uint64_t v35 = v28[2];
  if (!v35)
  {
    if (!a3) {
      goto LABEL_9;
    }
    uint64_t v40 = *a3;
    if (!*a3)
    {
      int v49 = 0;
      uint64_t v48 = "pragma_";
      goto LABEL_98;
    }
    if ((v40 & 0xFFFFFFDF) == 0x50)
    {
      uint64_t v41 = a3[1];
      if (!a3[1])
      {
        int v49 = 0;
        uint64_t v48 = "ragma_";
        goto LABEL_98;
      }
      if ((v41 & 0xFFFFFFDF) == 0x52)
      {
        uint64_t v42 = a3[2];
        if (!a3[2])
        {
          int v49 = 0;
          uint64_t v48 = "agma_";
          goto LABEL_98;
        }
        if ((v42 & 0xFFFFFFDF) == 0x41)
        {
          uint64_t v43 = a3[3];
          if (!a3[3])
          {
            int v49 = 0;
            uint64_t v48 = "gma_";
            goto LABEL_98;
          }
          if ((v43 & 0xFFFFFFDF) == 0x47)
          {
            uint64_t v44 = a3[4];
            if (!a3[4])
            {
              int v49 = 0;
              uint64_t v48 = "ma_";
              goto LABEL_98;
            }
            if ((v44 & 0xFFFFFFDF) == 0x4D)
            {
              uint64_t v45 = a3[5];
              if (!a3[5])
              {
                int v49 = 0;
                uint64_t v48 = "a_";
                goto LABEL_98;
              }
              if ((v45 & 0xFFFFFFDF) == 0x41)
              {
                uint64_t v46 = a3[6];
                if (!a3[6])
                {
                  int v49 = 0;
                  uint64_t v48 = "_";
LABEL_98:
                  if (v49 != byte_1B0DE1758[*v48]) {
                    goto LABEL_9;
                  }
                  goto LABEL_99;
                }
                if (v46 == 95)
                {
LABEL_99:
                  uint64_t v35 = sub_1B0D25BC0(v12, a3);
                  if (!v35) {
                    goto LABEL_9;
                  }
                  goto LABEL_41;
                }
                char v47 = &byte_1B0DE1758[v46];
                uint64_t v48 = "_";
              }
              else
              {
                char v47 = &byte_1B0DE1758[v45];
                uint64_t v48 = "a_";
              }
            }
            else
            {
              char v47 = &byte_1B0DE1758[v44];
              uint64_t v48 = "ma_";
            }
          }
          else
          {
            char v47 = &byte_1B0DE1758[v43];
            uint64_t v48 = "gma_";
          }
        }
        else
        {
          char v47 = &byte_1B0DE1758[v42];
          uint64_t v48 = "agma_";
        }
      }
      else
      {
        char v47 = &byte_1B0DE1758[v41];
        uint64_t v48 = "ragma_";
      }
    }
    else
    {
      char v47 = &byte_1B0DE1758[v40];
      uint64_t v48 = "pragma_";
    }
    int v49 = *v47;
    goto LABEL_98;
  }
LABEL_41:
  uint64_t v36 = *(void *)v35;
  uint64_t v91 = 0;
  uint64_t result = *(void *)(v35 + 40);
  if (result) {
    return result;
  }
  uint64_t v37 = *(void **)a1;
  uint64_t v38 = *(void *)(v36 + 8);
  if (v38 && v38 != *(void *)(v36 + 16)) {
    goto LABEL_9;
  }
  uint64_t v39 = v37 ? sub_1B0D05DC0(*(void *)a1, 0x68uLL) : sub_1B0C7FC94(104);
  uint64_t v50 = v39;
  if (!v39) {
    goto LABEL_9;
  }
  *(void *)(v39 + 96) = 0;
  *(_OWORD *)(v39 + 64) = 0u;
  *(_OWORD *)(v39 + 80) = 0u;
  *(_OWORD *)(v39 + 32) = 0u;
  *(_OWORD *)(v39 + 48) = 0u;
  *(_OWORD *)uint64_t v39 = 0u;
  *(_OWORD *)(v39 + 16) = 0u;
  uint64_t v51 = *(const void **)(v35 + 8);
  if (!v51
    || ((size_t v52 = strlen(*(const char **)(v35 + 8)), __n = v52 + 1, !v37)
      ? (uint64_t v53 = (char *)sub_1B0C7FC94(v52 + 1))
      : (uint64_t v53 = (char *)sub_1B0D05DC0((uint64_t)v37, v52 + 1)),
        (uint64_t v54 = v53) == 0))
  {
    *(void *)uint64_t v50 = 0;
    sub_1B0D05C10(v37, (void *)v50);
    goto LABEL_9;
  }
  memcpy(v53, v51, __n);
  *(void *)uint64_t v50 = v54;
  *(void *)(v35 + 40) = v50;
  *(unsigned char *)(v50 + 63) = 1;
  *(void *)(v50 + 96) = *(void *)(v37[4] + 24);
  *(_WORD *)(v50 + 52) = -1;
  int v55 = *(_DWORD *)(v50 + 48) | 0x8000;
  *(_DWORD *)(v50 + 44) = 1;
  *(_DWORD *)(v50 + 48) = v55;
  unint64_t v56 = strlen(v54) + 1;
  int v57 = (void *)sub_1B0D05DC0((uint64_t)v37, v56);
  uint64_t v63 = v57;
  if (v57) {
    memcpy(v57, v54, v56);
  }
  sub_1B0D269E4(a1, v50, v63, v58, v59, v60, v61, v62);
  sub_1B0D269E4(a1, v50, 0, v64, v65, v66, v67, v68);
  uint64_t v74 = *(const char **)v50;
  if (*(void *)v50)
  {
    unint64_t v75 = strlen(*(const char **)v50) + 1;
    uint64_t v76 = (void *)sub_1B0D05DC0((uint64_t)v37, v75);
    uint64_t v77 = v76;
    if (v76) {
      memcpy(v76, v74, v75);
    }
  }
  else
  {
    uint64_t v77 = 0;
  }
  sub_1B0D269E4(a1, v50, v77, v69, v70, v71, v72, v73);
  if (!sub_1B0D24B38((uint64_t)v37, v50, v35, *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t *))(v36 + 16), (void **)&v91, v78, v79, v80))return *(void *)(v35 + 40); {
  uint64_t v87 = v91;
  }
  sub_1B0CEF2BC(a1, "%s", v81, v82, v83, v84, v85, v86, (char)v91);
  if (v87) {
    sub_1B0D05C10(v37, v87);
  }
  uint64_t v88 = *(void *)(v35 + 40);
  if (!v88) {
    return 0;
  }
  *(_DWORD *)(v88 + 48) |= 0x4000u;
  if (v37[102] || (int v89 = *(_DWORD *)(v88 + 44) - 1, (*(_DWORD *)(v88 + 44) = v89) == 0)) {
    sub_1B0D26BF8(v37, (void *)v88);
  }
  uint64_t result = 0;
  *(void *)(v35 + 40) = 0;
  return result;
}

uint64_t sub_1B0CB0878(uint64_t a1, int *a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v4 = sub_1B0D05DC0(a1, (16 * *a2) | 8);
  uint64_t v5 = v4;
  if (v4)
  {
    *(_DWORD *)uint64_t v4 = *a2;
    *(unsigned char *)(v4 + 4) = *((unsigned char *)a2 + 4);
    if (*a2 >= 1)
    {
      uint64_t v6 = 0;
      for (uint64_t i = 0; i < *a2; ++i)
      {
        BOOL v10 = *(const void **)&a2[v6 + 2];
        if (v10)
        {
          size_t v11 = strlen(*(const char **)&a2[v6 + 2]);
          unint64_t v12 = v11 + 1;
          if (a1)
          {
            uint64_t v8 = (void *)sub_1B0D05DC0(a1, v12);
            if (!v8) {
              goto LABEL_6;
            }
LABEL_12:
            memcpy(v8, v10, v12);
            goto LABEL_6;
          }
          uint64_t v8 = (void *)sub_1B0C7FC94(v11 + 1);
          if (v8) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v8 = 0;
        }
LABEL_6:
        uint64_t v9 = v5 + v6 * 4;
        *(void *)(v9 + 8) = v8;
        *(void *)(v9 + 16) = *(void *)&a2[v6 + 4];
        v6 += 4;
      }
    }
  }
  return v5;
}

void *sub_1B0CB0988(uint64_t a1, char a2, uint64_t a3, unsigned __int8 *a4, int a5)
{
  if (*(_DWORD *)(a1 + 48)) {
    return 0;
  }
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(unsigned int *)(a3 + 8);
  size_t v14 = v13 + 97;
  if (*(void *)a1)
  {
    uint64_t v5 = (void *)sub_1B0D05DC0(*(void *)a1, v13 + 97);
    if (!v5) {
      return v5;
    }
  }
  else
  {
    uint64_t v5 = (void *)sub_1B0C7FC94(v13 + 97);
    if (!v5) {
      return v5;
    }
  }
  bzero(v5, v14);
  uint64_t v15 = v5 + 12;
  memcpy(v5 + 12, *(const void **)a3, *(unsigned int *)(a3 + 8));
  if ((char)byte_1B0DE196D[*((unsigned __int8 *)v5 + 96)] < 0)
  {
    uint64_t v16 = 0;
    if (*((unsigned char *)v5 + 96) == 91) {
      int v17 = 93;
    }
    else {
      int v17 = *((unsigned __int8 *)v5 + 96);
    }
    for (int i = 1; ; ++i)
    {
      uint64_t v19 = i;
      int v20 = *((unsigned __int8 *)v15 + i);
      if (v20 == v17)
      {
        ++i;
        LOBYTE(v20) = v17;
        if (*((unsigned __int8 *)v15 + v19 + 1) != v17) {
          break;
        }
      }
      *((unsigned char *)v15 + v16++) = v20;
    }
    *((unsigned char *)v15 + v16) = 0;
  }
  v5[3] = v15;
  *(unsigned char *)uint64_t v5 = a2;
  int v21 = a5 - a4;
  do
  {
    int v22 = a4;
    int v23 = v21;
    int v24 = *a4++;
    --v21;
  }
  while ((byte_1B0DE196D[v24] & 1) != 0);
  uint64_t v25 = v23;
  uint64_t v26 = ((uint64_t)v23 << 32) + 0x100000000;
  uint64_t v27 = v25 - 2;
  do
  {
    char v28 = byte_1B0DE196D[a4[v27]];
    v26 -= 0x100000000;
    --v27;
  }
  while ((v28 & 1) != 0);
  size_t v29 = v26 >> 32;
  int v30 = (unsigned char *)sub_1B0D05DC0(v12, (v26 >> 32) + 1);
  uint64_t v31 = v30;
  if (v30)
  {
    memcpy(v30, v22, v29);
    v31[v29] = 0;
    int v32 = *v31;
    if (*v31)
    {
      uint64_t v33 = v31 + 1;
      do
      {
        if (byte_1B0DE196D[v32]) {
          *(v33 - 1) = 32;
        }
        int v34 = *v33++;
        int v32 = v34;
      }
      while (v34);
    }
  }
  v5[9] = v31;
  unsigned int v35 = *(unsigned __int8 *)(a1 + 302);
  if (v35 >= 2 && v35 != 3)
  {
    uint64_t v36 = v5[3];
    if (*(void *)a1)
    {
      uint64_t v37 = sub_1B0D05DC0(*(void *)a1, 0x20uLL);
      if (!v37) {
        return v5;
      }
    }
    else
    {
      uint64_t v37 = sub_1B0C7FC94(32);
      if (!v37) {
        return v5;
      }
    }
    *(_OWORD *)uint64_t v37 = 0u;
    *(_OWORD *)(v37 + 16) = 0u;
    *(void *)uint64_t v37 = v36;
    *(_OWORD *)(v37 + 8) = *(_OWORD *)a3;
    *(void *)(v37 + 24) = *(void *)(a1 + 408);
    *(void *)(a1 + 408) = v37;
  }
  return v5;
}

uint64_t sub_1B0CB0BA8(uint64_t a1, void *a2, _DWORD *a3, int a4)
{
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = sub_1B0C904D8(*(void *)a1, 172, (uint64_t)a3, 1);
  uint64_t v16 = v9;
  if (v9)
  {
    *(_DWORD *)(v9 + 56) = *a3 - *(_DWORD *)(a1 + 336);
    if (a2 && *(_DWORD *)a2 > *(_DWORD *)(*(void *)a1 + 160) && !*(unsigned char *)(a1 + 30)) {
      sub_1B0CEF2BC(a1, "too many arguments on function %T", v10, v11, v12, v13, v14, v15, (char)a3);
    }
    *(void *)(v16 + 32) = a2;
    *(_DWORD *)(v16 + 4) |= 8u;
    sub_1B0D2B274((_DWORD *)a1, v16, v10, v11, v12, v13, v14, v15);
    if (a4 == 1) {
      *(_DWORD *)(v16 + 4) |= 4u;
    }
  }
  else if (a2)
  {
    sub_1B0D270DC(v8, a2);
  }
  return v16;
}

void *sub_1B0CB0C94(void *result, _DWORD *a2)
{
  for (; result; uint64_t result = (void *)result[10])
  {
    uint64_t v2 = result[6];
    if (v2)
    {
      int v3 = *(_DWORD *)(v2 + 40);
      if (v3 > *a2) {
        *a2 = v3;
      }
    }
    uint64_t v4 = result[8];
    if (v4)
    {
      int v5 = *(_DWORD *)(v4 + 40);
      if (v5 > *a2) {
        *a2 = v5;
      }
    }
    uint64_t v6 = result[12];
    if (v6)
    {
      int v7 = *(_DWORD *)(v6 + 40);
      if (v7 > *a2) {
        *a2 = v7;
      }
    }
    uint64_t v8 = (int *)result[4];
    if (v8)
    {
      int v9 = *v8;
      if (*v8 >= 1)
      {
        uint64_t v10 = 0;
        uint64_t v11 = 2;
        do
        {
          uint64_t v12 = *(void *)&v8[v11];
          if (v12)
          {
            int v13 = *(_DWORD *)(v12 + 40);
            if (v13 > *a2)
            {
              *a2 = v13;
              int v9 = *v8;
            }
          }
          ++v10;
          v11 += 6;
        }
        while (v10 < v9);
      }
    }
    uint64_t v14 = (int *)result[7];
    if (v14)
    {
      int v15 = *v14;
      if (*v14 >= 1)
      {
        uint64_t v16 = 0;
        uint64_t v17 = 2;
        do
        {
          uint64_t v18 = *(void *)&v14[v17];
          if (v18)
          {
            int v19 = *(_DWORD *)(v18 + 40);
            if (v19 > *a2)
            {
              *a2 = v19;
              int v15 = *v14;
            }
          }
          ++v16;
          v17 += 6;
        }
        while (v16 < v15);
      }
    }
    int v20 = (int *)result[9];
    if (v20)
    {
      int v21 = *v20;
      if (*v20 >= 1)
      {
        uint64_t v22 = 0;
        uint64_t v23 = 2;
        do
        {
          uint64_t v24 = *(void *)&v20[v23];
          if (v24)
          {
            int v25 = *(_DWORD *)(v24 + 40);
            if (v25 > *a2)
            {
              *a2 = v25;
              int v21 = *v20;
            }
          }
          ++v22;
          v23 += 6;
        }
        while (v22 < v21);
      }
    }
  }
  return result;
}

uint64_t sub_1B0CB0DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = 0;
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v6 = 0;
    int v7 = &v22;
    do
    {
      uint64_t v8 = sub_1B0D05DC0(a1, 0x80uLL);
      if (!v8) {
        break;
      }
      uint64_t v9 = v8;
      *(void *)(v8 + 32) = sub_1B0CAE478(a1, *(void **)(v4 + 32), a3);
      *(void *)(v9 + 40) = sub_1B0CB1030(a1, *(int **)(v4 + 40), a3);
      uint64_t v10 = *(void *)(v4 + 48);
      if (v10) {
        uint64_t v11 = sub_1B0CAE048(a1, v10, a3, 0);
      }
      else {
        uint64_t v11 = 0;
      }
      *(void *)(v9 + 48) = v11;
      *(void *)(v9 + 56) = sub_1B0CAE478(a1, *(void **)(v4 + 56), a3);
      uint64_t v12 = *(void *)(v4 + 64);
      if (v12) {
        uint64_t v13 = sub_1B0CAE048(a1, v12, a3, 0);
      }
      else {
        uint64_t v13 = 0;
      }
      *(void *)(v9 + 64) = v13;
      *(void *)(v9 + 72) = sub_1B0CAE478(a1, *(void **)(v4 + 72), a3);
      *(unsigned char *)uint64_t v9 = *(unsigned char *)v4;
      *(void *)(v9 + 88) = v6;
      *(void *)(v9 + 80) = 0;
      uint64_t v14 = *(void *)(v4 + 96);
      if (v14) {
        uint64_t v15 = sub_1B0CAE048(a1, v14, a3, 0);
      }
      else {
        uint64_t v15 = 0;
      }
      *(void *)(v9 + 96) = v15;
      *(void *)(v9 + 8) = 0;
      *(_DWORD *)(v9 + 4) = *(_DWORD *)(v4 + 4) & 0xFFFFFFDF;
      *(void *)(v9 + 20) = -1;
      *(_WORD *)(v9 + 2) = *(_WORD *)(v4 + 2);
      *(void *)(v9 + 104) = sub_1B0D34974(a1, *(int **)(v4 + 104));
      *(void *)(v9 + 112) = 0;
      uint64_t v16 = *(void *)(v4 + 120);
      v23[0] = 0;
      if (v16)
      {
        uint64_t v17 = v23;
        do
        {
          uint64_t v18 = sub_1B0D34AD8(a1, 0, v16);
          *uint64_t v17 = v18;
          if (!v18) {
            break;
          }
          uint64_t v17 = (uint64_t *)(v18 + 64);
          uint64_t v16 = *(void *)(v16 + 64);
        }
        while (v16);
        uint64_t v19 = v23[0];
      }
      else
      {
        uint64_t v19 = 0;
      }
      *(void *)(v9 + 120) = v19;
      int v20 = *(unsigned __int8 *)(a1 + 103);
      if (*(void *)(v4 + 112))
      {
        if (*(unsigned char *)(a1 + 103))
        {
          *(_DWORD *)(v9 + 16) = *(_DWORD *)(v4 + 16);
LABEL_26:
          *(void *)(v9 + 88) = 0;
          sub_1B0CA0FA8((void *)a1, v9, 1);
          return v22;
        }
        v23[0] = 0;
        v23[1] = sub_1B0D34D6C;
        v23[3] = 0;
        v23[4] = 0;
        v23[2] = sub_1B0D34DA4;
        v23[5] = v9;
        sub_1B0C962CC(v23, (void *)v9);
        int v20 = *(unsigned __int8 *)(a1 + 103);
      }
      *(_DWORD *)(v9 + 16) = *(_DWORD *)(v4 + 16);
      if (v20) {
        goto LABEL_26;
      }
      uint64_t *v7 = v9;
      uint64_t v4 = *(void *)(v4 + 80);
      int v7 = (uint64_t *)(v9 + 80);
      uint64_t v6 = v9;
    }
    while (v4);
  }
  return v22;
}

_DWORD *sub_1B0CB1030(uint64_t a1, int *a2, unsigned int a3)
{
  if (!a2) {
    return 0;
  }
  if (*a2 <= 0) {
    int v5 = 112;
  }
  else {
    int v5 = 104 * *a2 + 8;
  }
  uint64_t v6 = (_DWORD *)sub_1B0D05DC0(a1, v5);
  int v7 = v6;
  if (v6)
  {
    int v8 = *a2;
    *uint64_t v6 = *a2;
    v6[1] = v8;
    if (*a2 >= 1)
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v13 = &a2[v9];
        uint64_t v14 = *(const char **)&a2[v9 + 4];
        *(void *)&v7[v9 + 2] = *(void *)&a2[v9 + 2];
        if (!v14)
        {
          uint64_t v17 = 0;
          goto LABEL_17;
        }
        size_t v15 = strlen(v14);
        unint64_t v16 = v15 + 1;
        if (!a1) {
          break;
        }
        uint64_t v17 = (void *)sub_1B0D05DC0(a1, v16);
        if (v17) {
          goto LABEL_16;
        }
LABEL_17:
        *(void *)&v7[v9 + 4] = v17;
        uint64_t v18 = (const void *)*((void *)v13 + 3);
        if (!v18)
        {
          int v21 = 0;
          goto LABEL_24;
        }
        size_t v19 = strlen(*((const char **)v13 + 3));
        size_t v20 = v19 + 1;
        if (!a1)
        {
          int v21 = (void *)sub_1B0C7FC94(v19 + 1);
          if (!v21) {
            goto LABEL_24;
          }
LABEL_23:
          memcpy(v21, v18, v20);
          goto LABEL_24;
        }
        int v21 = (void *)sub_1B0D05DC0(a1, v20);
        if (v21) {
          goto LABEL_23;
        }
LABEL_24:
        uint64_t v22 = &v7[v9];
        *(void *)&v7[v9 + 6] = v21;
        uint64_t v23 = &a2[v9];
        uint64_t v24 = *(const void **)&a2[v9 + 8];
        if (!v24)
        {
          uint64_t v27 = 0;
          goto LABEL_31;
        }
        size_t v25 = strlen(*(const char **)&a2[v9 + 8]);
        size_t v26 = v25 + 1;
        if (!a1)
        {
          uint64_t v27 = (void *)sub_1B0C7FC94(v25 + 1);
          if (!v27) {
            goto LABEL_31;
          }
LABEL_30:
          memcpy(v27, v24, v26);
          goto LABEL_31;
        }
        uint64_t v27 = (void *)sub_1B0D05DC0(a1, v26);
        if (v27) {
          goto LABEL_30;
        }
LABEL_31:
        *((void *)v22 + 4) = v27;
        v22[17] = v23[17];
        v22[18] = v23[18];
        *((void *)v22 + 7) = *((void *)v23 + 7);
        __int16 v28 = *(_WORD *)((char *)v22 + 69);
        if ((v28 & 2) != 0)
        {
          size_t v29 = *(const void **)&a2[v9 + 24];
          if (v29)
          {
            size_t v30 = strlen(*(const char **)&a2[v9 + 24]);
            unint64_t v31 = v30 + 1;
            if (a1)
            {
              int v32 = (void *)sub_1B0D05DC0(a1, v31);
              if (!v32) {
                goto LABEL_39;
              }
LABEL_38:
              memcpy(v32, v29, v31);
            }
            else
            {
              int v32 = (void *)sub_1B0C7FC94(v30 + 1);
              if (v32) {
                goto LABEL_38;
              }
            }
          }
          else
          {
            int v32 = 0;
          }
LABEL_39:
          *(void *)&v7[v9 + 24] = v32;
          __int16 v28 = *(_WORD *)((char *)v22 + 69);
        }
        uint64_t v33 = *(_DWORD **)&a2[v9 + 26];
        *(void *)&v7[v9 + 26] = v33;
        if ((v28 & 0x100) != 0)
        {
          ++*v33;
          __int16 v28 = *(_WORD *)((char *)v22 + 69);
        }
        if ((v28 & 4) != 0) {
          *(void *)&v7[v9 + 24] = sub_1B0CAE478(a1, *(void **)&a2[v9 + 24], a3);
        }
        int v34 = &a2[v9];
        uint64_t v35 = *(void *)&a2[v9 + 10];
        *(void *)&v7[v9 + 10] = v35;
        if (v35) {
          ++*(_DWORD *)(v35 + 44);
        }
        *(void *)&v7[v9 + 12] = sub_1B0CB0DF4(a1, *((void *)v34 + 6), a3);
        uint64_t v36 = (int *)*((void *)v34 + 10);
        if ((*(_WORD *)((unsigned char *)v34 + 69) & 0x400) != 0)
        {
          uint64_t v11 = sub_1B0CB0878(a1, v36);
        }
        else if (v36)
        {
          uint64_t v11 = sub_1B0CAE048(a1, v36, a3, 0);
        }
        else
        {
          uint64_t v11 = 0;
        }
        uint64_t v12 = &v7[v9];
        *((void *)v12 + 10) = v11;
        *((void *)v12 + 11) = *(void *)&a2[v9 + 22];
        ++v10;
        v9 += 26;
        if (v10 >= *a2) {
          return v7;
        }
      }
      uint64_t v17 = (void *)sub_1B0C7FC94(v15 + 1);
      if (!v17) {
        goto LABEL_17;
      }
LABEL_16:
      memcpy(v17, v14, v16);
      goto LABEL_17;
    }
  }
  return v7;
}

void *sub_1B0CB135C(uint64_t a1, uint64_t a2, int *a3, void *a4, unsigned __int8 *a5, char a6, unsigned __int8 *a7, int a8)
{
  uint64_t v13 = *(void **)a1;
  uint64_t v14 = sub_1B0CB0988(a1, 129, a2, a7, a8);
  size_t v15 = v14;
  if (v14)
  {
    if (*(unsigned __int8 *)(a1 + 302) < 2u)
    {
      _OWORD v14[6] = sub_1B0CAE478((uint64_t)v13, a4, 1u);
      if (a5) {
        uint64_t v17 = sub_1B0CAE048((uint64_t)v13, a5, 1, 0);
      }
      else {
        uint64_t v17 = 0;
      }
      v15[5] = v17;
      unint64_t v16 = sub_1B0CB1030((uint64_t)v13, a3, 1u);
    }
    else
    {
      v14[5] = a5;
      _OWORD v14[6] = a4;
      unint64_t v16 = a3;
      a5 = 0;
      a4 = 0;
      a3 = 0;
    }
    v15[4] = v16;
    *((unsigned char *)v15 + 1) = a6;
  }
  if (a4) {
    sub_1B0D270DC(v13, a4);
  }
  if (a5) {
    sub_1B0D1DF88(v13, a5);
  }
  sub_1B0CA115C(v13, a3);
  return v15;
}

void *sub_1B0CB1468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a2;
  uint64_t v9 = *(void *)(a1 + 360);
  uint64_t v10 = *(void *)a1;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  *(void *)(a1 + 360) = 0;
  if (*(_DWORD *)(a1 + 48) || !v9) {
    goto LABEL_73;
  }
  uint64_t v11 = a3;
  uint64_t v13 = *(void *)(v9 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v10 + 32) + 24);
    LODWORD(v15) = -1;
    do
    {
      uint64_t v16 = *v14;
      v14 += 4;
      uint64_t v15 = (v15 + 1);
    }
    while (v16 != v13);
  }
  else
  {
    uint64_t v15 = 4294934528;
  }
  uint64_t v17 = *(char **)v9;
  *(void *)(v9 + 56) = a2;
  if (a2)
  {
    uint64_t v18 = a2;
    do
    {
      *(void *)(v18 + 8) = v9;
      uint64_t v18 = *(void *)(v18 + 80);
    }
    while (v18);
  }
  uint64_t v81 = v17;
  if (v17) {
    int v19 = strlen(v17) & 0x3FFFFFFF;
  }
  else {
    int v19 = 0;
  }
  LODWORD(v82) = v19;
  *(void *)&long long v83 = a1;
  size_t v20 = (void *)(*(void *)(v10 + 32) + 32 * (int)v15);
  *((void *)&v87 + 1) = *v20;
  uint64_t v21 = v20[3];
  *(void *)&long long v88 = "trigger";
  *((void *)&v88 + 1) = &v81;
  LOBYTE(v87) = v15 == 1;
  *(void *)&long long v86 = &v83;
  *((void *)&v86 + 1) = v21;
  *((void *)&v83 + 1) = a1;
  *(void *)&long long v84 = sub_1B0D3B968;
  *((void *)&v84 + 1) = sub_1B0D3B9E8;
  *(void *)&long long v85 = nullsub_8;
  DWORD2(v85) = 0;
  WORD6(v85) = 0;
  if (v8)
  {
    uint64_t v80 = v11;
    while (!sub_1B0C962CC((void *)&v83 + 1, *(void **)(v8 + 16)))
    {
      uint64_t v22 = *(void *)(v8 + 40);
      if (v22)
      {
        if (sub_1B0D32AB4((uint64_t)&v83 + 8, v22)) {
          break;
        }
      }
      uint64_t v23 = *(_DWORD **)(v8 + 48);
      if (v23 && (int)*v23 >= 1)
      {
        uint64_t v24 = (uint64_t *)(v23 + 2);
        int v25 = *v23 + 1;
        while (!*v24 || !sub_1B0D32AB4((uint64_t)&v83 + 8, *v24))
        {
          v24 += 3;
          if (--v25 <= 1) {
            goto LABEL_26;
          }
        }
        goto LABEL_72;
      }
LABEL_26:
      uint64_t v26 = *(void *)(v8 + 32);
      if (v26)
      {
        long long v95 = 0u;
        long long v96 = 0u;
        long long v93 = 0u;
        long long v94 = 0u;
        uint64_t v90 = 0;
        long long v92 = 0u;
        memset(v89, 0, sizeof(v89));
        uint64_t v91 = v26;
        if (sub_1B0C962CC((void *)&v83 + 1, v89)) {
          goto LABEL_72;
        }
      }
      uint64_t v27 = *(void *)(v8 + 64);
      if (v27)
      {
        while (1)
        {
          __int16 v28 = *(int **)v27;
          if (*(void *)v27)
          {
            if (*v28 >= 1) {
              break;
            }
          }
LABEL_36:
          uint64_t v31 = *(void *)(v27 + 8);
          if (v31 && sub_1B0D32AB4((uint64_t)&v83 + 8, v31)) {
            goto LABEL_72;
          }
          int v32 = *(_DWORD **)(v27 + 16);
          if (v32 && (int)*v32 >= 1)
          {
            uint64_t v33 = (uint64_t *)(v32 + 2);
            int v34 = *v32 + 1;
            while (!*v33 || !sub_1B0D32AB4((uint64_t)&v83 + 8, *v33))
            {
              v33 += 3;
              if (--v34 <= 1) {
                goto LABEL_45;
              }
            }
            goto LABEL_72;
          }
LABEL_45:
          uint64_t v35 = *(void *)(v27 + 24);
          if (v35 && sub_1B0D32AB4((uint64_t)&v83 + 8, v35)) {
            goto LABEL_72;
          }
          uint64_t v27 = *(void *)(v27 + 32);
          if (!v27) {
            goto LABEL_48;
          }
        }
        size_t v29 = (uint64_t *)(v28 + 2);
        int v30 = *v28 + 1;
        while (!*v29 || !sub_1B0D32AB4((uint64_t)&v83 + 8, *v29))
        {
          v29 += 3;
          if (--v30 <= 1) {
            goto LABEL_36;
          }
        }
        goto LABEL_72;
      }
LABEL_48:
      uint64_t v8 = *(void *)(v8 + 80);
      uint64_t v11 = v80;
      if (!v8) {
        goto LABEL_49;
      }
    }
    goto LABEL_72;
  }
LABEL_49:
  uint64_t v36 = *(void *)(v9 + 24);
  if (v36 && sub_1B0D32AB4((uint64_t)&v83 + 8, v36)) {
    goto LABEL_72;
  }
  if (*(unsigned __int8 *)(a1 + 302) < 2u)
  {
    if (!*(unsigned char *)(v10 + 197))
    {
      if ((*(unsigned char *)(v10 + 51) & 0x10) != 0
        && !*(void *)(v10 + 592)
        && !*(_DWORD *)(v10 + 220)
        && (*(int *)(v10 + 564) < 1 || *(void *)(v10 + 600)))
      {
        uint64_t v74 = *(void *)(v9 + 56);
        if (v74)
        {
          while (1)
          {
            unint64_t v75 = *(char **)(v74 + 24);
            if (v75)
            {
              uint64_t v76 = strrchr(*(char **)(v74 + 24), 95);
              if (v76)
              {
                uint64_t v77 = v76;
                *uint64_t v76 = 0;
                uint64_t v78 = sub_1B0CF60C8(v10, v75, 0);
                *uint64_t v77 = 95;
                if (v78)
                {
                  uint64_t v36 = v78;
                  if (*(unsigned char *)(v78 + 63) == 1)
                  {
                    if (sub_1B0D35CAC(v10, v78, v75)) {
                      break;
                    }
                  }
                }
              }
            }
            uint64_t v74 = *(void *)(v74 + 80);
            if (!v74) {
              goto LABEL_57;
            }
          }
          sub_1B0CEF2BC(a1, "trigger \"%s\" may not write to shadow table \"%s\"", a3, a4, a5, a6, a7, a8, *(void *)v9);
          goto LABEL_72;
        }
      }
LABEL_57:
      uint64_t v8 = *(void *)(a1 + 16);
      if (!v8)
      {
        if (!*(void *)(a1 + 168) && (*(unsigned char *)(*(void *)a1 + 96) & 8) == 0) {
          *(unsigned char *)(a1 + 35) = 1;
        }
        uint64_t v8 = sub_1B0CEF480((uint64_t *)a1, v36, a3, a4, a5, a6, a7, a8);
        if (!v8) {
          goto LABEL_73;
        }
      }
      sub_1B0D3597C(a1, 0, v15);
      uint64_t v37 = sub_1B0C87878(v10, *(const void **)v11, *(unsigned int *)(v11 + 8));
      sub_1B0CD9598((uint64_t *)a1, "INSERT INTO %Q.sqlite_master VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')", v38, v39, v40, v41, v42, v43, *(void *)(*(void *)(v10 + 32) + 32 * (int)v15));
      if (v37) {
        sub_1B0D05C10((void *)v10, v37);
      }
      sub_1B0D37018((uint64_t *)a1, v15, v44, v45, v46, v47, v48, v49);
      unint64_t v56 = sub_1B0C904AC(v10, "type='trigger' AND name='%q'", v50, v51, v52, v53, v54, v55, (char)v17);
      sub_1B0D37088(v8, v15, (uint64_t)v56, 0, v57, v58, v59, v60);
    }
  }
  else
  {
    *(void *)(a1 + 360) = v9;
    uint64_t v9 = 0;
  }
  if (!*(unsigned char *)(v10 + 197))
  {
LABEL_72:
    uint64_t v8 = 0;
    goto LABEL_73;
  }
  uint64_t v61 = sub_1B0C796D8(*(void *)(*(void *)(v10 + 32) + 32 * (int)v15 + 24) + 56, (unsigned __int8 *)v17, v9);
  if (!v61)
  {
    uint64_t v69 = *(void *)(v9 + 40);
    if (v69 == *(void *)(v9 + 48))
    {
      uint64_t v71 = sub_1B0D22710(v69 + 8, *(unsigned __int8 **)(v9 + 8));
      uint64_t v8 = 0;
      *(void *)(v9 + 64) = *(void *)(v71 + 88);
      *(void *)(v71 + 88) = v9;
      uint64_t v9 = 0;
      goto LABEL_73;
    }
    uint64_t v9 = 0;
    goto LABEL_72;
  }
  uint64_t v68 = v61;
  if (!*(unsigned char *)(v10 + 103) && !*(unsigned char *)(v10 + 104))
  {
    *(unsigned char *)(v10 + 103) = 1;
    if (*(int *)(v10 + 220) >= 1) {
      *(_DWORD *)(v10 + 424) = 1;
    }
    ++*(_DWORD *)(v10 + 432);
    *(_WORD *)(v10 + 436) = 0;
    uint64_t v72 = *(void *)(v10 + 344);
    if (v72)
    {
      sub_1B0CEF2BC(v72, "out of memory", v62, v63, v64, v65, v66, v67, v79);
      for (uint64_t i = *(void *)(v10 + 344); ; ++*(_DWORD *)(i + 48))
      {
        *(_DWORD *)(i + 24) = 7;
        uint64_t i = *(void *)(i + 256);
        if (!i) {
          break;
        }
      }
    }
  }
  uint64_t v8 = 0;
  uint64_t v9 = v68;
LABEL_73:
  sub_1B0C8AF78((void *)v10, v9);
  return sub_1B0CB19F8((void *)v10, v8);
}

void *sub_1B0CB19F8(void *result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    int v3 = result;
    do
    {
      uint64_t v4 = *(void *)(v2 + 80);
      int v5 = *(unsigned __int8 **)(v2 + 40);
      if (v5) {
        sub_1B0D1DF88(v3, v5);
      }
      uint64_t v6 = *(void **)(v2 + 48);
      if (v6) {
        sub_1B0D270DC(v3, v6);
      }
      uint64_t v7 = *(void *)(v2 + 16);
      if (v7) {
        sub_1B0CA0FA8(v3, v7, 1);
      }
      uint64_t v8 = *(void **)(v2 + 56);
      if (v8)
      {
        int v9 = *(_DWORD *)v8;
        if (*(int *)v8 >= 1)
        {
          uint64_t v10 = 0;
          uint64_t v11 = 1;
          do
          {
            uint64_t v12 = (void *)v8[v11];
            if (v12)
            {
              sub_1B0D05C10(v3, v12);
              int v9 = *(_DWORD *)v8;
            }
            ++v10;
            v11 += 2;
          }
          while (v10 < v9);
        }
        sub_1B0D15C20(v3, v8);
      }
      uint64_t v13 = *(void **)(v2 + 64);
      if (v13) {
        sub_1B0D27040(v3, v13);
      }
      sub_1B0CA115C(v3, *(void **)(v2 + 32));
      uint64_t v14 = *(void **)(v2 + 72);
      if (v14) {
        sub_1B0D05C10(v3, v14);
      }
      uint64_t result = sub_1B0D05C10(v3, (void *)v2);
      uint64_t v2 = v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1B0CB1B08(uint64_t a1, void *a2, int *a3, _DWORD *a4)
{
  int v5 = a2;
  uint64_t v6 = *a3;
  *a4 = v6;
  if ((v6 & (v6 - 1)) != 0) {
    goto LABEL_10;
  }
  if (v6) {
    unint64_t v8 = 48 * v6;
  }
  else {
    unint64_t v8 = 24;
  }
  if (a2)
  {
    if (*(void *)(a1 + 512) > (unint64_t)a2)
    {
      if (*(void *)(a1 + 496) <= (unint64_t)a2)
      {
        if (v8 < 0x81)
        {
LABEL_10:
          uint64_t v9 = (uint64_t)a2;
LABEL_15:
          uint64_t v10 = (void *)(v9 + 24 * (int)v6);
          *uint64_t v10 = 0;
          v10[1] = 0;
          v10[2] = 0;
          ++*a3;
          return v9;
        }
      }
      else if (*(void *)(a1 + 504) <= (unint64_t)a2 && v8 <= *(unsigned __int16 *)(a1 + 438))
      {
        goto LABEL_10;
      }
    }
    uint64_t v9 = sub_1B0D05E6C(a1, a2, v8);
    if (v9) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v9 = sub_1B0D05DC0(a1, v8);
    if (v9) {
      goto LABEL_15;
    }
  }
  *a4 = -1;
  return (uint64_t)v5;
}

uint64_t sub_1B0CB1BEC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)(a1 + 600);
  *(void *)(a1 + 600) = 0;
  while (v5 < *(int *)(a1 + 564))
  {
    uint64_t v7 = *(void *)(*(void *)(v6 + 8 * v5) + 16);
    if (v7 && (unint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)v7 + 120)) != 0)
    {
      uint64_t v9 = v8(v7);
      sub_1B0D17574(a2, v7);
      ++v5;
      if (v9)
      {
        *(void *)(a1 + 600) = v6;
        return v9;
      }
    }
    else
    {
      ++v5;
    }
  }
  uint64_t v11 = 0;
  int v12 = 0;
  int v13 = 0;
  *(void *)(a1 + 600) = v6;
  while (v11 < *(int *)(a1 + 40))
  {
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = *(void *)(v14 + 32 * v11 + 8);
    if (v15 && *(unsigned char *)(v15 + 16) == 2)
    {
      if (*(unsigned char *)(v15 + 17))
      {
        ++*(_DWORD *)(v15 + 20);
        if (!*(unsigned char *)(v15 + 18))
        {
          sub_1B0D12478(v15);
          uint64_t v14 = *(void *)(a1 + 32);
        }
      }
      uint64_t v16 = **(void **)(v15 + 8);
      if (*(unsigned char *)(v14 + 32 * v11 + 16) == 1 || ((0x34uLL >> *(unsigned char *)(v16 + 9)) & 1) != 0 || *(unsigned char *)(v16 + 16))
      {
        uint64_t v9 = *(unsigned int *)(v16 + 48);
        if (!v9) {
          goto LABEL_27;
        }
      }
      else
      {
        if (!*(unsigned char *)(v16 + 20)) {
          ++v13;
        }
        uint64_t v9 = *(unsigned int *)(v16 + 48);
        if (!v9)
        {
LABEL_27:
          if (!*(void *)(v16 + 344))
          {
            while (1)
            {
              unsigned int v18 = *(unsigned __int8 *)(v16 + 22);
              if (v18 >= 4 && v18 != 5) {
                break;
              }
              if (*(unsigned char *)(v16 + 17)) {
                goto LABEL_42;
              }
              uint64_t v20 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v16 + 72) + 56))(*(void *)(v16 + 72), 4);
              if (v20 != 5)
              {
                uint64_t v9 = v20;
                if (v20) {
                  goto LABEL_21;
                }
LABEL_42:
                uint64_t v9 = 0;
                *(unsigned char *)(v16 + 22) = 4;
                goto LABEL_21;
              }
              if (!(*(unsigned int (**)(void))(v16 + 232))(*(void *)(v16 + 240)))
              {
                uint64_t v9 = 5;
                if (*(unsigned char *)(v15 + 17)) {
                  goto LABEL_22;
                }
                goto LABEL_29;
              }
            }
          }
          uint64_t v9 = 0;
          if (!*(unsigned char *)(v15 + 17)) {
            goto LABEL_29;
          }
LABEL_22:
          int v17 = *(_DWORD *)(v15 + 20) - 1;
          *(_DWORD *)(v15 + 20) = v17;
          if (!v17) {
            sub_1B0D12558(v15);
          }
          goto LABEL_29;
        }
      }
LABEL_21:
      if (*(unsigned char *)(v15 + 17)) {
        goto LABEL_22;
      }
LABEL_29:
      int v12 = 1;
      ++v11;
      if (v9) {
        return v9;
      }
    }
    else
    {
      ++v11;
    }
  }
  if (v12)
  {
    uint64_t v21 = *(unsigned int (**)(void))(a1 + 280);
    if (v21)
    {
      if (v21(*(void *)(a1 + 272))) {
        return 531;
      }
    }
  }
  uint64_t v22 = *(uint64_t **)(*(void *)(*(void *)(a1 + 32) + 8) + 8);
  uint64_t v23 = *v22;
  int v24 = *(unsigned __int8 *)(*v22 + 19);
  if (*(unsigned char *)(*v22 + 19) || *(_UNKNOWN **)v23 == &unk_1EB21D5B8)
  {
    int v25 = (const char *)&unk_1B0DE20F1;
  }
  else
  {
    int v25 = *(const char **)(v23 + 216);
    if (!v25)
    {
LABEL_72:
      uint64_t v42 = -1;
      uint64_t v43 = 8;
      while (++v42 < *(int *)(a1 + 40))
      {
        uint64_t v44 = *(void *)(*(void *)(a1 + 32) + v43);
        if (v44)
        {
          uint64_t v9 = sub_1B0CB23E8(v44, 0, a3);
          v43 += 32;
          if (v9) {
            return v9;
          }
        }
        else
        {
          v43 += 32;
        }
      }
      uint64_t v45 = -1;
      uint64_t v46 = 8;
      while (++v45 < *(int *)(a1 + 40))
      {
        uint64_t v47 = *(void *)(*(void *)(a1 + 32) + v46);
        if (v47)
        {
          uint64_t v9 = sub_1B0CB283C(v47, 0);
          v46 += 32;
          if (v9) {
            return v9;
          }
        }
        else
        {
          v46 += 32;
        }
      }
      goto LABEL_118;
    }
  }
  if ((strlen(v25) & 0x3FFFFFFF) == 0 || v13 <= 1) {
    goto LABEL_72;
  }
  uint64_t v32 = *(void *)a1;
  if (v24 || *(_UNKNOWN **)v23 == &unk_1EB21D5B8)
  {
    uint64_t v73 = 0;
    int v72 = 0;
    uint64_t v33 = (const char *)&unk_1B0DE20F1;
LABEL_53:
    size_t v34 = strlen(v33) & 0x3FFFFFFF;
    goto LABEL_54;
  }
  uint64_t v33 = *(const char **)(v23 + 216);
  uint64_t v73 = 0;
  int v72 = 0;
  if (v33) {
    goto LABEL_53;
  }
  size_t v34 = 0;
LABEL_54:
  uint64_t v35 = (char *)sub_1B0C904AC(a1, "%.4c%s%.16c", v26, v27, v28, v29, v30, v31, 0);
  if (!v35) {
    return 7;
  }
  uint64_t v36 = v35;
  uint64_t v37 = v35 + 4;
  uint64_t v38 = &v35[v34 + 4];
  unsigned int __buf = 0;
  sqlite3_initialize();
  arc4random_buf(&__buf, 4uLL);
  sqlite3_snprintf(13, v38, "-mj%06X9%02X", __buf >> 8, __buf);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, char *, void, int *))(v32 + 56))(v32, v37, 0, &v72);
  if (v9
    || !v72
    || (unsigned int __buf = 0,
        sqlite3_log(13, "MJ collide: %s", v37),
        sqlite3_initialize(),
        arc4random_buf(&__buf, 4uLL),
        sqlite3_snprintf(13, v38, "-mj%06X9%02X", __buf >> 8, __buf),
        uint64_t v9 = (*(uint64_t (**)(uint64_t, char *, void, int *))(v32 + 56))(v32, v37, 0, &v72),
        v9)
    || !v72)
  {
LABEL_67:
    if (v9) {
      goto LABEL_69;
    }
  }
  else
  {
    int v39 = 1;
    while (1)
    {
      unsigned int __buf = 0;
      if (++v39 >= 0x65) {
        break;
      }
      sqlite3_initialize();
      arc4random_buf(&__buf, 4uLL);
      sqlite3_snprintf(13, v38, "-mj%06X9%02X", __buf >> 8, __buf);
      uint64_t v40 = (*(uint64_t (**)(uint64_t, char *, void, int *))(v32 + 56))(v32, v37, 0, &v72);
      if (v40) {
        BOOL v41 = 1;
      }
      else {
        BOOL v41 = v72 == 0;
      }
      if (v41)
      {
        uint64_t v9 = v40;
        goto LABEL_67;
      }
    }
    sqlite3_log(13, "MJ delete: %s", v37);
    uint64_t v60 = *(void (**)(uint64_t, char *, void))(v32 + 48);
    if (v60) {
      v60(v32, v37, 0);
    }
  }
  uint64_t v9 = sub_1B0D1744C(v32, (uint64_t)v37, &v73, 16406, 0);
  if (v9) {
    goto LABEL_69;
  }
  int v48 = *(_DWORD *)(a1 + 40);
  uint64_t v49 = v73;
  if (v48 < 1)
  {
LABEL_94:
    if (((*(uint64_t (**)(void *))(*v49 + 96))(v49) & 0x400) == 0)
    {
      uint64_t v59 = (*(uint64_t (**)(void *, uint64_t))(*v49 + 40))(v49, 2);
      if (v59)
      {
        uint64_t v9 = v59;
        sub_1B0D17258(v49);
        goto LABEL_127;
      }
    }
    uint64_t v61 = -1;
    uint64_t v62 = 8;
    while (++v61 < *(int *)(a1 + 40))
    {
      uint64_t v63 = *(void *)(*(void *)(a1 + 32) + v62);
      if (v63)
      {
        uint64_t v9 = sub_1B0CB23E8(v63, v37, v58);
        v62 += 32;
        if (v9)
        {
          sub_1B0D17258(v49);
          goto LABEL_69;
        }
      }
      else
      {
        v62 += 32;
      }
    }
    sub_1B0D17258(v49);
    uint64_t v64 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 48);
    if (v64)
    {
      uint64_t v9 = v64(v32, v37, 1);
      uint64_t v65 = (uint64_t)sub_1B0D05C10((void *)a1, v36);
      if (v9) {
        return v9;
      }
    }
    else
    {
      uint64_t v65 = (uint64_t)sub_1B0D05C10((void *)a1, v36);
    }
    if (off_1E9B52208) {
      off_1E9B52208(v65);
    }
    int v66 = *(_DWORD *)(a1 + 40);
    if (v66 >= 1)
    {
      uint64_t v67 = 0;
      uint64_t v68 = 8;
      do
      {
        uint64_t v65 = *(void *)(*(void *)(a1 + 32) + v68);
        if (v65)
        {
          uint64_t v65 = sub_1B0CB283C(v65, 1);
          int v66 = *(_DWORD *)(a1 + 40);
        }
        ++v67;
        v68 += 32;
      }
      while (v67 < v66);
    }
    if (off_1E9B52210) {
      off_1E9B52210(v65);
    }
LABEL_118:
    sub_1B0CB33C4((int *)a1, 0x80u);
    return 0;
  }
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 8;
  while (2)
  {
    uint64_t v53 = *(void *)(*(void *)(a1 + 32) + v52);
    if (!v53 || *(unsigned char *)(v53 + 16) != 2 || (uint64_t v54 = **(void **)(v53 + 8), (v55 = *(const char **)(v54 + 224)) == 0))
    {
LABEL_88:
      ++v50;
      v52 += 32;
      if (v50 >= v48) {
        goto LABEL_94;
      }
      continue;
    }
    break;
  }
  int v56 = strlen(*(const char **)(v54 + 224));
  uint64_t v57 = (*(uint64_t (**)(void *, const char *, void, uint64_t))(*v49 + 24))(v49, v55, (v56 & 0x3FFFFFFFu) + 1, v51);
  if (!v57)
  {
    v51 += (strlen(v55) & 0x3FFFFFFF) + 1;
    int v48 = *(_DWORD *)(a1 + 40);
    goto LABEL_88;
  }
  uint64_t v9 = v57;
  if (*v49)
  {
    (*(void (**)(void *))(*v49 + 8))(v49);
    *uint64_t v49 = 0;
  }
  uint64_t v69 = &off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v49);
    --qword_1EB220150;
    off_1EB21C9E8(v49);
    uint64_t v49 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v69 = &xmmword_1EB21CA50;
      goto LABEL_126;
    }
  }
  else
  {
LABEL_126:
    (*v69)(v49);
  }
LABEL_127:
  uint64_t v70 = *(void (**)(uint64_t, char *, void))(v32 + 48);
  if (v70) {
    v70(v32, v37, 0);
  }
LABEL_69:
  sub_1B0D05C10((void *)a1, v36);
  return v9;
}

uint64_t sub_1B0CB23E8(uint64_t a1, unsigned char *a2, double a3)
{
  if (*(unsigned char *)(a1 + 16) != 2) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 17) && (++*(_DWORD *)(a1 + 20), !*(unsigned char *)(a1 + 18)))
  {
    sub_1B0D12478(a1);
    if (!*(unsigned char *)(v5 + 33)) {
      goto LABEL_8;
    }
  }
  else if (!*(unsigned char *)(v5 + 33))
  {
LABEL_8:
    uint64_t v9 = *(void *)v5;
    if (*(unsigned char *)(v5 + 35)) {
      *(_DWORD *)(v9 + 32) = *(_DWORD *)(v5 + 64);
    }
    uint64_t v10 = sub_1B0CC19D8(v9, a2, 0);
LABEL_11:
    uint64_t v11 = v10;
    if (!*(unsigned char *)(a1 + 17)) {
      return v11;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)v6;
  for (uint64_t i = *(void *)(v6 + 16); i; uint64_t i = *(void *)(i + 40))
    *(unsigned char *)(i + 1) &= ~4u;
  if (*(unsigned char *)(v6 + 34)) {
    goto LABEL_8;
  }
  unsigned int v14 = *(_DWORD *)(v6 + 64);
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    unsigned int v16 = v15 / (*(_DWORD *)(v6 + 56) / 5u + 1) * (*(_DWORD *)(v6 + 56) / 5u + 1);
    if (v16 + 1 == dword_1E9B51ED0 / *(_DWORD *)(v6 + 52)) {
      int v17 = 3;
    }
    else {
      int v17 = 2;
    }
    if (v17 + v16 == v14) {
      goto LABEL_26;
    }
  }
  else if (!v14)
  {
    goto LABEL_26;
  }
  unsigned int v18 = dword_1E9B51ED0;
  if (v14 == dword_1E9B51ED0 / *(_DWORD *)(v6 + 52) + 1)
  {
LABEL_26:
    uint64_t v10 = sub_1B0D1045C(81006);
    goto LABEL_11;
  }
  uint64_t v19 = bswap32(*(_DWORD *)(*(void *)(*(void *)(v6 + 24) + 80) + 36));
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(uint64_t (**)(void, void, void, uint64_t))(*(void *)a1 + 336);
  if (v21)
  {
    uint64_t v22 = *(unsigned int *)(v20 + 40);
    uint64_t v23 = *(void *)(v20 + 32);
    if ((int)v22 < 1)
    {
      LODWORD(v24) = 0;
    }
    else
    {
      uint64_t v24 = 0;
      int v25 = (void *)(v23 + 8);
      while (*v25 != a1)
      {
        ++v24;
        v25 += 4;
        if (v22 == v24)
        {
          LODWORD(v24) = *(_DWORD *)(v20 + 40);
          break;
        }
      }
    }
    unsigned int v27 = v21(*(void *)(v20 + 320), *(void *)(v23 + 32 * v24), *(unsigned int *)(v6 + 64), v19);
    if (v27 >= v19) {
      unsigned int v26 = v19;
    }
    else {
      unsigned int v26 = v27;
    }
    if (!v26) {
      goto LABEL_8;
    }
    unsigned int v18 = dword_1E9B51ED0;
  }
  else
  {
    unsigned int v26 = v19;
  }
  unsigned int v28 = *(_DWORD *)(v6 + 56) / 5u;
  if (v14 > 1)
  {
    unsigned int v30 = v28 + 1;
    int v32 = v15 / v30 * v30;
    int v31 = v18 / *(_DWORD *)(v6 + 52);
    if (v32 + 1 == v31) {
      int v33 = 3;
    }
    else {
      int v33 = 2;
    }
    int v29 = v33 + v32;
  }
  else
  {
    int v29 = 0;
    unsigned int v30 = v28 + 1;
    int v31 = v18 / *(_DWORD *)(v6 + 52);
  }
  unsigned int v34 = v14 - v26 - (v26 - v14 + v28 + v29) / v28;
  unsigned int v35 = v31 + 1;
  BOOL v36 = v31 + 1 >= v14 || v34 >= v35;
  int v37 = !v36;
  unsigned int v38 = v34 - v37;
  do
  {
    unsigned int v39 = v38;
    BOOL v36 = v38 >= 2;
    unsigned int v40 = v38 - 2;
    if (v36)
    {
      int v42 = v40 / v30 * v30;
      if (v42 + 1 == v31) {
        int v43 = 3;
      }
      else {
        int v43 = 2;
      }
      int v41 = v43 + v42;
    }
    else
    {
      int v41 = 0;
    }
    unsigned int v38 = v39 - 1;
  }
  while (v39 == v41 || v39 == v35);
  if (v39 > v14)
  {
    uint64_t v10 = sub_1B0D1045C(81033);
    goto LABEL_11;
  }
  int v54 = v19;
  if (v39 >= v14)
  {
    uint64_t v11 = 0;
    BOOL v46 = 1;
  }
  else
  {
    uint64_t v44 = *(unsigned __int8 **)(v6 + 16);
    if (v44 && (uint64_t v45 = sub_1B0D143DC(v44, 0, 0), v45))
    {
      uint64_t v11 = v45;
      BOOL v46 = 0;
    }
    else
    {
      BOOL v47 = v26 == v19;
      do
      {
        uint64_t v48 = sub_1B0D13FF0(v6, v39, v14, v47);
        uint64_t v11 = v48;
        --v14;
        BOOL v46 = v48 == 0;
      }
      while (v14 > v39 && !v48);
    }
  }
  BOOL v49 = !v46;
  if (v11 == 101) {
    BOOL v49 = 0;
  }
  if (!v49 && v54)
  {
    uint64_t v50 = *(void *)(*(void *)(v6 + 24) + 112);
    uint64_t v51 = *(_DWORD **)(v50 + 40);
    if ((*(_WORD *)(v50 + 52) & 4) != 0 && v51[8] >= *(_DWORD *)(v50 + 48))
    {
      if (!v51[32])
      {
        uint64_t v11 = 0;
        goto LABEL_84;
      }
      uint64_t v52 = sub_1B0D0F4D4(v50);
    }
    else
    {
      uint64_t v11 = v51[12];
      if (v11)
      {
LABEL_84:
        uint64_t v53 = *(void *)(v6 + 24);
        if (v26 == v54)
        {
          *(_DWORD *)(*(void *)(v53 + 80) + 32) = 0;
          *(_DWORD *)(*(void *)(*(void *)(v6 + 24) + 80) + 36) = 0;
          uint64_t v53 = *(void *)(v6 + 24);
        }
        *(_DWORD *)(*(void *)(v53 + 80) + 28) = bswap32(v39);
        *(unsigned char *)(v6 + 35) = 1;
        *(_DWORD *)(v6 + 64) = v39;
        goto LABEL_87;
      }
      if (v51[46] <= v51[50]) {
        uint64_t v52 = sub_1B0CBD7E0(v50);
      }
      else {
        uint64_t v52 = sub_1B0D133D0(v50);
      }
    }
    uint64_t v11 = v52;
    goto LABEL_84;
  }
LABEL_87:
  if (!v11) {
    goto LABEL_8;
  }
  sub_1B0CC7574(v7, a3);
  if (!*(unsigned char *)(a1 + 17)) {
    return v11;
  }
LABEL_12:
  int v12 = *(_DWORD *)(a1 + 20) - 1;
  *(_DWORD *)(a1 + 20) = v12;
  if (!v12) {
    sub_1B0D12558(a1);
  }
  return v11;
}

uint64_t sub_1B0CB283C(uint64_t a1, int a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 17) || (++*(_DWORD *)(a1 + 20), *(unsigned char *)(a1 + 18)))
  {
    if (v2 != 2) {
      goto LABEL_27;
    }
LABEL_5:
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)v5;
    uint64_t v7 = *(unsigned int *)(*(void *)v5 + 48);
    if (!v7)
    {
      ++*(_DWORD *)(v6 + 132);
      if (*(unsigned char *)(v6 + 21) == 2 && *(unsigned char *)(v6 + 8) && *(unsigned char *)(v6 + 9) == 1)
      {
        *(unsigned char *)(v6 + 21) = 1;
LABEL_26:
        --*(_DWORD *)(a1 + 28);
        *(unsigned char *)(v5 + 36) = 1;
        sub_1B0CD2868(*(void *)(v5 + 96));
        *(void *)(v5 + 96) = 0;
        goto LABEL_27;
      }
      uint64_t v8 = sub_1B0CB2BC8(v6, *(unsigned __int8 *)(v6 + 24), 1);
      uint64_t v7 = v8;
      if (v8 == 13 || v8 == 10)
      {
        *(_DWORD *)(v6 + 48) = v8;
        *(unsigned char *)(v6 + 21) = 6;
        uint64_t v10 = sub_1B0D11088;
        if (!v8)
        {
          if (!*(unsigned char *)(v6 + 27) || (uint64_t v10 = sub_1B0D11094, *(void *)(v6 + 296))) {
            uint64_t v10 = sub_1B0D112F8;
          }
        }
        *(void *)(v6 + 288) = v10;
      }
    }
    if (!a2 && v7)
    {
      if (!*(unsigned char *)(a1 + 17)) {
        return v7;
      }
      goto LABEL_29;
    }
    goto LABEL_26;
  }
  sub_1B0D12478(a1);
  if (*(unsigned char *)(a1 + 16) == 2) {
    goto LABEL_5;
  }
LABEL_27:
  sub_1B0CB29D0(a1);
  if (!*(unsigned char *)(a1 + 17)) {
    return 0;
  }
  uint64_t v7 = 0;
LABEL_29:
  int v11 = *(_DWORD *)(a1 + 20) - 1;
  *(_DWORD *)(a1 + 20) = v11;
  if (!v11) {
    sub_1B0D12558(a1);
  }
  return v7;
}

uint64_t sub_1B0CB29D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)result;
  uint64_t v3 = *(void *)(result + 8);
  *(unsigned char *)(v3 + 35) = 0;
  if (*(unsigned char *)(result + 16))
  {
    if (*(int *)(v2 + 212) >= 2)
    {
      if (*(void *)(v3 + 128) == result)
      {
        *(void *)(v3 + 128) = 0;
        *(_WORD *)(v3 + 40) &= 0xFF3Fu;
        for (uint64_t i = *(void *)(v3 + 120); i; uint64_t i = *(void *)(i + 16))
          *(unsigned char *)(i + 12) = 1;
      }
      *(unsigned char *)(result + 16) = 1;
      return result;
    }
    uint64_t v6 = (uint64_t *)(v3 + 120);
    uint64_t v5 = *(void *)(v3 + 120);
    if (v5)
    {
      do
      {
        if (*(void *)v5 == v1)
        {
          uint64_t v7 = *(void *)(v5 + 16);
          *uint64_t v6 = v7;
          if (*(_DWORD *)(v5 + 8) == 1) {
            goto LABEL_11;
          }
          uint64_t v8 = &off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108 -= (int)off_1EB21C9F8(v5);
            --qword_1EB220150;
            uint64_t result = off_1EB21C9E8(v5);
            uint64_t v5 = xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              goto LABEL_10;
            }
            uint64_t v8 = &xmmword_1EB21CA50;
          }
          uint64_t result = (*v8)(v5);
        }
        else
        {
          uint64_t v6 = (uint64_t *)(v5 + 16);
        }
LABEL_10:
        uint64_t v7 = *v6;
LABEL_11:
        uint64_t v5 = v7;
      }
      while (v7);
    }
    if (*(void *)(v3 + 128) == v1)
    {
      *(void *)(v3 + 128) = 0;
      int v9 = *(_DWORD *)(v3 + 60);
      __int16 v10 = -193;
    }
    else
    {
      int v9 = *(_DWORD *)(v3 + 60);
      if (v9 != 2) {
        goto LABEL_25;
      }
      __int16 v10 = -129;
    }
    *(_WORD *)(v3 + 40) &= v10;
LABEL_25:
    int v11 = v9 - 1;
    *(_DWORD *)(v3 + 60) = v11;
    if (!v11) {
      *(unsigned char *)(v3 + 36) = 0;
    }
  }
  *(unsigned char *)(v1 + 16) = 0;
  if (!*(unsigned char *)(v3 + 36))
  {
    uint64_t v12 = *(void *)(v3 + 24);
    if (v12)
    {
      *(void *)(v3 + 24) = 0;
      uint64_t v13 = *(void *)(v12 + 112);
      return sub_1B0D05580(v13);
    }
  }
  return result;
}

uint64_t sub_1B0CB2BC8(uint64_t a1, int a2, int a3)
{
  if (*(unsigned __int8 *)(a1 + 21) <= 1u && *(unsigned __int8 *)(a1 + 22) < 2u) {
    return 0;
  }
  sub_1B0D11778(a1);
  uint64_t v7 = *(uint64_t **)(a1 + 80);
  uint64_t v8 = *v7;
  if (!*v7) {
    goto LABEL_34;
  }
  if ((_UNKNOWN *)v8 == &unk_1F09A5508)
  {
    uint64_t v12 = (void *)v7[2];
    if (!v12)
    {
LABEL_22:
      unsigned int v10 = 0;
      uint64_t *v7 = 0;
      goto LABEL_49;
    }
    while (1)
    {
      uint64_t v13 = (void *)*v12;
      unsigned int v14 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v12);
        --qword_1EB220150;
        off_1EB21C9E8(v12);
        uint64_t v12 = (void *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_16;
        }
        unsigned int v14 = &xmmword_1EB21CA50;
      }
      (*v14)(v12);
LABEL_16:
      uint64_t v12 = v13;
      if (!v13) {
        goto LABEL_22;
      }
    }
  }
  int v9 = *(unsigned __int8 *)(a1 + 9);
  if (v9 == 1) {
    goto LABEL_25;
  }
  if (v9 != 3)
  {
    if (v9 != 5 && *(unsigned char *)(a1 + 8))
    {
LABEL_25:
      if (a2)
      {
        BOOL v15 = 1;
        if (!*(void *)(a1 + 96)) {
          goto LABEL_47;
        }
      }
      else
      {
        BOOL v15 = *(unsigned char *)(a1 + 16) != 0;
        if (!*(void *)(a1 + 96)) {
          goto LABEL_47;
        }
      }
      uint64_t v16 = *(void *)(a1 + 208);
      if (v15 || !v16)
      {
        unsigned int v10 = (*(uint64_t (**)(void, void))(v8 + 32))(*(void *)(a1 + 80), 0);
        if (v10) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v10 = (*(uint64_t (**)(void, void *, uint64_t, void))(v8 + 24))(*(void *)(a1 + 80), &unk_1B0DE20FE, 28, 0);
        if (v10) {
          goto LABEL_48;
        }
      }
      if (*(unsigned char *)(a1 + 11)) {
        unsigned int v10 = 0;
      }
      else {
        unsigned int v10 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 80) + 40))(*(void *)(a1 + 80), *(unsigned __int8 *)(a1 + 14) | 0x10u);
      }
      if (v10) {
        goto LABEL_48;
      }
      if (v16 < 1) {
        goto LABEL_48;
      }
      uint64_t v34 = 0;
      unsigned int v10 = (*(uint64_t (**)(void, uint64_t *))(**(void **)(a1 + 80) + 48))(*(void *)(a1 + 80), &v34);
      if (v10) {
        goto LABEL_48;
      }
      if (v34 > v16)
      {
        unsigned int v11 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 80) + 32))(*(void *)(a1 + 80), v16);
        goto LABEL_46;
      }
LABEL_47:
      unsigned int v10 = 0;
      goto LABEL_48;
    }
    int v17 = *(unsigned __int8 *)(a1 + 16);
    (*(void (**)(void))(v8 + 8))(*(void *)(a1 + 80));
    uint64_t *v7 = 0;
    if (!v17)
    {
      unsigned int v18 = *(uint64_t (**)(void))(*(void *)a1 + 48);
      if (v18)
      {
        unsigned int v10 = v18();
        goto LABEL_49;
      }
    }
LABEL_34:
    unsigned int v10 = 0;
    goto LABEL_49;
  }
  if (!*(void *)(a1 + 96)) {
    goto LABEL_47;
  }
  unsigned int v10 = (*(uint64_t (**)(void, void))(v8 + 32))(*(void *)(a1 + 80), 0);
  if (!v10)
  {
    if (*(unsigned char *)(a1 + 12) && *(unsigned char *)(a1 + 14))
    {
      unsigned int v11 = (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 40))(*(void *)(a1 + 80));
LABEL_46:
      unsigned int v10 = v11;
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_48:
  *(void *)(a1 + 96) = 0;
LABEL_49:
  sub_1B0CD2868(*(void *)(a1 + 64));
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (!v10)
  {
    if (!*(unsigned char *)(a1 + 19) && *(unsigned char *)(a1 + 16))
    {
      if (!a3 || !**(void **)(a1 + 72)) {
        goto LABEL_107;
      }
      unsigned int v27 = *(uint64_t **)(a1 + 336);
      LODWORD(v28) = *((_DWORD *)v27 + 8);
      if ((v28 & 0x80000000) != 0)
      {
        uint64_t v28 = -1024 * (int)v28 / (*((int *)v27 + 11) + (uint64_t)*((int *)v27 + 10));
        if (v28 >= 1000000000) {
          LODWORD(v28) = 1000000000;
        }
      }
      uint64_t v29 = *v27;
      if (*v27)
      {
        uint64_t v30 = 0;
        do
        {
          uint64_t v29 = *(void *)(v29 + 64);
          v30 += 100;
        }
        while (v29);
      }
      else
      {
        uint64_t v30 = 0;
      }
      if (!v28 || (int)(v30 / (int)v28) < 25)
      {
LABEL_107:
        uint64_t v21 = *(uint64_t **)(a1 + 336);
        for (uint64_t i = *v21; i; uint64_t i = *(void *)(i + 64))
          *(_WORD *)(i + 52) &= 0xFFF3u;
        v21[2] = v21[1];
LABEL_110:
        sub_1B0C7D108(v21, *(_DWORD *)(a1 + 32));
        uint64_t v19 = *(void *)(a1 + 344);
        if (v19) {
          goto LABEL_51;
        }
        goto LABEL_111;
      }
    }
    uint64_t v21 = *(uint64_t **)(a1 + 336);
    uint64_t v22 = *v21;
    if (!*v21) {
      goto LABEL_110;
    }
    while (1)
    {
      uint64_t v23 = *(void *)(v22 + 24);
      uint64_t v24 = *(void *)(v22 + 72);
      if (*(void *)(v23 + 16) == v22)
      {
        *(void *)(v23 + 16) = v24;
        uint64_t v25 = *(void *)(v22 + 64);
        if (v25)
        {
LABEL_71:
          *(void *)(v25 + 72) = v24;
          uint64_t v24 = *(void *)(v22 + 72);
          if (!v24)
          {
            *(void *)uint64_t v23 = v25;
            goto LABEL_76;
          }
LABEL_75:
          *(void *)(v24 + 64) = v25;
          goto LABEL_76;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(v22 + 64);
        if (v25) {
          goto LABEL_71;
        }
      }
      *(void *)(v23 + 8) = v24;
      if (v24) {
        goto LABEL_75;
      }
      *(void *)uint64_t v23 = 0;
      *(unsigned char *)(v23 + 49) = 2;
LABEL_76:
      *(_WORD *)(v22 + 52) = *(_WORD *)(v22 + 52) & 0xFFF0 | 1;
      if (!*(void *)(v22 + 56) && *(unsigned char *)(v23 + 48)) {
        xmmword_1EB21CAA8(*(void *)(v23 + 72), *(void *)v22, 0);
      }
      uint64_t v22 = *v21;
      if (!*v21)
      {
        uint64_t v21 = *(uint64_t **)(a1 + 336);
        goto LABEL_110;
      }
    }
  }
  uint64_t v19 = *(void *)(a1 + 344);
  if (v19)
  {
LABEL_51:
    if (*(unsigned char *)(v19 + 64))
    {
      if (!*(unsigned char *)(v19 + 63)) {
        (*(void (**)(void, void, uint64_t, uint64_t))(**(void **)(v19 + 8) + 112))(*(void *)(v19 + 8), 0, 1, 9);
      }
      *(unsigned char *)(v19 + 64) = 0;
      *(_DWORD *)(v19 + 124) = 0;
      *(unsigned char *)(v19 + 67) = 0;
    }
    goto LABEL_55;
  }
LABEL_111:
  if (a3 && !v10)
  {
    unsigned int v33 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 40) <= v33) {
      unsigned int v10 = 0;
    }
    else {
      unsigned int v10 = sub_1B0CDAF40(a1, v33);
    }
  }
LABEL_55:
  if (a3)
  {
    if (!v10)
    {
      uint64_t v20 = *(void *)(a1 + 72);
      if (!*(void *)v20
        || (unsigned int v10 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v20 + 80))(v20, 22, 0),
            v10 == 12))
      {
        unsigned int v10 = 0;
      }
    }
  }
  if (*(unsigned char *)(a1 + 8)) {
    goto LABEL_61;
  }
  uint64_t v26 = *(void *)(a1 + 344);
  if (!v26)
  {
LABEL_96:
    uint64_t v31 = *(void *)(a1 + 72);
    if (*(void *)v31)
    {
      if (*(unsigned char *)(a1 + 17)) {
        LODWORD(result) = 0;
      }
      else {
        LODWORD(result) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v31 + 64))(v31, 1);
      }
      if (*(unsigned char *)(a1 + 22) != 5) {
        *(unsigned char *)(a1 + 22) = 1;
      }
    }
    else
    {
      LODWORD(result) = 0;
    }
    *(unsigned char *)(a1 + 23) = *(unsigned char *)(a1 + 16);
    goto LABEL_62;
  }
  if (!*(unsigned char *)(v26 + 63))
  {
LABEL_61:
    LODWORD(result) = 0;
    goto LABEL_62;
  }
  *(unsigned char *)(v26 + 63) = 0;
  if (!(*(unsigned int (**)(void, void, uint64_t, uint64_t))(**(void **)(v26 + 8) + 112))(*(void *)(v26 + 8), (*(__int16 *)(v26 + 60) + 3), 1, 6))
  {
    if (!*(unsigned char *)(v26 + 63)) {
      goto LABEL_96;
    }
    goto LABEL_61;
  }
  LODWORD(result) = 0;
  *(unsigned char *)(v26 + 63) = 1;
LABEL_62:
  *(unsigned char *)(a1 + 21) = 1;
  *(unsigned char *)(a1 + 24) = 0;
  if (v10) {
    return v10;
  }
  else {
    return result;
  }
}

uint64_t sub_1B0CB3198(uint64_t a1)
{
  sub_1B0CD2868(*(void *)(a1 + 64));
  *(void *)(a1 + 64) = 0;
  uint64_t result = sub_1B0D11778(a1);
  uint64_t v3 = *(void *)(a1 + 344);
  if (v3)
  {
    if (*(unsigned char *)(v3 + 64))
    {
      if (!*(unsigned char *)(v3 + 63)) {
        uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(**(void **)(v3 + 8) + 112))(*(void *)(v3 + 8), 0, 1, 9);
      }
      *(unsigned char *)(v3 + 64) = 0;
      *(_DWORD *)(v3 + 124) = 0;
      *(unsigned char *)(v3 + 67) = 0;
    }
    if ((*(__int16 *)(v3 + 60) & 0x80000000) == 0)
    {
      if (!*(unsigned char *)(v3 + 63)) {
        uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(**(void **)(v3 + 8) + 112))(*(void *)(v3 + 8), *(unsigned __int16 *)(v3 + 60) + 3, 1, 5);
      }
      *(_WORD *)(v3 + 60) = -1;
    }
LABEL_10:
    *(unsigned char *)(a1 + 21) = 0;
    goto LABEL_12;
  }
  if (!*(unsigned char *)(a1 + 8))
  {
    uint64_t v8 = *(void *)(a1 + 72);
    if (!*(void *)v8
      || ((*(uint64_t (**)(uint64_t))(*(void *)v8 + 96))(v8) & 0x800) == 0
      || (*(unsigned char *)(a1 + 9) & 5) != 1)
    {
      uint64_t v9 = *(void *)(a1 + 80);
      if (*(void *)v9)
      {
        (*(void (**)(void))(*(void *)v9 + 8))(*(void *)(a1 + 80));
        *(void *)uint64_t v9 = 0;
      }
    }
    uint64_t result = *(void *)(a1 + 72);
    if (*(void *)result)
    {
      if (*(unsigned char *)(a1 + 17)) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 64))(result, 0);
      }
      if (*(unsigned char *)(a1 + 22) != 5) {
        *(unsigned char *)(a1 + 22) = 0;
      }
      *(unsigned char *)(a1 + 23) = *(unsigned char *)(a1 + 16);
      if (result && *(unsigned char *)(a1 + 21) == 6) {
        *(unsigned char *)(a1 + 22) = 5;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 23) = *(unsigned char *)(a1 + 16);
    }
    goto LABEL_10;
  }
LABEL_12:
  if (*(_DWORD *)(a1 + 48))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      BOOL v4 = **(void **)(a1 + 80) == 0;
    }
    else
    {
      ++*(_DWORD *)(a1 + 132);
      for (uint64_t i = *(void *)(a1 + 112); i; uint64_t i = *(void *)(i + 64))
        *(_DWORD *)(i + 24) = 1;
      uint64_t result = (uint64_t)sub_1B0C7D108(*(void **)(a1 + 336), 0);
      BOOL v4 = 0;
      *(unsigned char *)(a1 + 23) = 0;
    }
    *(unsigned char *)(a1 + 21) = v4;
    if (*(unsigned char *)(a1 + 27))
    {
      uint64_t result = (*(uint64_t (**)(void, void, void))(**(void **)(a1 + 72) + 144))(*(void *)(a1 + 72), 0, 0);
      int v6 = *(unsigned __int8 *)(a1 + 27);
      *(_DWORD *)(a1 + 48) = 0;
      if (v6)
      {
        uint64_t v7 = sub_1B0D11094;
        if (!*(void *)(a1 + 296)) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      *(_DWORD *)(a1 + 48) = 0;
    }
    uint64_t v7 = sub_1B0D112F8;
LABEL_24:
    *(void *)(a1 + 288) = v7;
  }
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  return result;
}

int *sub_1B0CB33C4(int *result, unsigned int a2)
{
  uint64_t v2 = (void *)*((void *)result + 75);
  if (v2)
  {
    uint64_t v3 = result;
    *((void *)result + 75) = 0;
    if (result[141] >= 1)
    {
      uint64_t v4 = 0;
      uint64_t v5 = a2;
      do
      {
        uint64_t v6 = v2[v4];
        uint64_t v7 = *(void **)(v6 + 16);
        if (v7)
        {
          uint64_t v8 = *(void (**)(void))(*v7 + v5);
          if (v8) {
            v8();
          }
        }
        *(_DWORD *)(v6 + 32) = 0;
        uint64_t v9 = *(void **)v6;
        int v10 = *(_DWORD *)(v6 + 24) - 1;
        *(_DWORD *)(v6 + 24) = v10;
        if (!v10)
        {
          uint64_t v11 = *(void *)(v6 + 16);
          uint64_t v12 = v9;
          if (v11)
          {
            (*(void (**)(uint64_t))(*(void *)v11 + 32))(v11);
            uint64_t v12 = *(void **)v6;
          }
          uint64_t v13 = *(void *)(v6 + 8);
          int v14 = *(_DWORD *)(v13 + 16) - 1;
          *(_DWORD *)(v13 + 16) = v14;
          if (!v14)
          {
            BOOL v15 = *(void (**)(void))(v13 + 32);
            if (v15) {
              v15(*(void *)(v13 + 24));
            }
            sub_1B0D05C10(v12, (void *)v13);
          }
          sub_1B0D05C10(v9, (void *)v6);
        }
        ++v4;
      }
      while (v4 < *((int *)v3 + 141));
    }
    uint64_t result = (int *)sub_1B0D05C10(v3, v2);
    *((_DWORD *)v3 + 141) = 0;
  }
  return result;
}

uint64_t sub_1B0CB34D0(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 + 32 * a2 + 24);
  for (uint64_t i = *(void **)(v4 + 16); i; uint64_t i = (void *)*i)
    *(_DWORD *)(i[2] + 48) &= ~0x10u;
  uint64_t v6 = *(void **)(v4 + 40);
  if (v6)
  {
    do
    {
      *(_WORD *)(v6[2] + 99) &= ~0x80u;
      uint64_t v6 = (void *)*v6;
    }
    while (v6);
    uint64_t v3 = *(void *)(a1 + 32);
  }
  v29[0] = a1;
  uint64_t v7 = *(unsigned char **)(v3 + 32 * a2);
  v29[1] = v7;
  uint64_t v8 = sub_1B0CF60C8(a1, "sqlite_stat1", v7);
  if (v8 && !*(unsigned char *)(v8 + 63))
  {
    uint64_t v23 = (const char *)sub_1B0C904AC(a1, "SELECT tbl,idx,stat FROM %Q.sqlite_stat1", v9, v10, v11, v12, v13, v14, (char)v7);
    if (v23)
    {
      uint64_t v24 = (char *)v23;
      uint64_t v15 = sqlite3_exec((sqlite3 *)a1, v23, (int (__cdecl *)(void *, int, char **, char **))sub_1B0CD92D0, v29, 0);
      sub_1B0D05C10((void *)a1, v24);
      uint64_t v16 = *(void **)(v4 + 40);
      if (!v16) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v15 = 7;
      uint64_t v16 = *(void **)(v4 + 40);
      if (!v16) {
        goto LABEL_27;
      }
    }
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = *(void **)(v4 + 40);
    if (!v16) {
      goto LABEL_27;
    }
  }
  do
  {
    uint64_t v17 = v16[2];
    if ((*(_WORD *)(v17 + 99) & 0x80) == 0)
    {
      if (*(unsigned __int16 *)(v17 + 94) >= 5u) {
        unint64_t v18 = 5;
      }
      else {
        unint64_t v18 = *(unsigned __int16 *)(v17 + 94);
      }
      uint64_t v20 = *(_WORD **)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      int v21 = *(__int16 *)(v19 + 58);
      if (v21 <= 98)
      {
        LOWORD(v21) = 99;
        *(_WORD *)(v19 + 58) = 99;
      }
      if (*(void *)(v17 + 72)) {
        LOWORD(v21) = v21 - 10;
      }
      *uint64_t v20 = v21;
      memcpy(v20 + 1, &unk_1B0DE2214, 2 * (v18 & 0x7FFF));
      LODWORD(v22) = *(unsigned __int16 *)(v17 + 94);
      if (v18 < v22)
      {
        do
        {
          v20[v18 + 1] = 23;
          unint64_t v22 = *(unsigned __int16 *)(v17 + 94);
          ++v18;
        }
        while (v18 < v22);
      }
      if (*(unsigned char *)(v17 + 98)) {
        v20[v22] = 0;
      }
    }
    uint64_t v16 = (void *)*v16;
  }
  while (v16);
LABEL_27:
  if (v15 == 7 && !*(unsigned char *)(a1 + 103) && !*(unsigned char *)(a1 + 104))
  {
    *(unsigned char *)(a1 + 103) = 1;
    if (*(int *)(a1 + 220) >= 1) {
      *(_DWORD *)(a1 + 424) = 1;
    }
    ++*(_DWORD *)(a1 + 432);
    *(_WORD *)(a1 + 436) = 0;
    uint64_t v26 = *(void *)(a1 + 344);
    if (v26)
    {
      sub_1B0CEF2BC(v26, "out of memory", v9, v10, v11, v12, v13, v14, v28);
      for (uint64_t j = *(void *)(a1 + 344); ; ++*(_DWORD *)(j + 48))
      {
        *(_DWORD *)(j + 24) = 7;
        uint64_t j = *(void *)(j + 256);
        if (!j) {
          break;
        }
      }
    }
  }
  return v15;
}

int sqlite3_get_table(sqlite3 *db, const char *zSql, char ***pazResult, int *pnRow, int *pnColumn, char **pzErrmsg)
{
  if (pazResult) {
    *pazResult = 0;
  }
  if (pnColumn) {
    *pnColumuint64_t n = 0;
  }
  if (pnRow) {
    *pnRow = 0;
  }
  if (pzErrmsg) {
    *pzErrmsg = 0;
  }
  if (!db)
  {
    uint64_t v13 = "NULL";
    goto LABEL_21;
  }
  int v12 = *((unsigned __int8 *)db + 113);
  if (v12 == 186)
  {
LABEL_13:
    uint64_t v13 = "unopened";
LABEL_21:
    sqlite3_log(21, "API call with %s database connection pointer", v13);
    goto LABEL_22;
  }
  if (v12 != 118)
  {
    if (v12 != 109)
    {
      uint64_t v13 = "invalid";
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (pazResult)
  {
    long long v25 = 0uLL;
    long long v26 = xmmword_1B0DE1380;
    uint64_t v27 = 0;
    if (sqlite3_initialize() || (uint64_t v16 = (void *)sub_1B0C7FC94(160), (*(void *)&v25 = v16) == 0))
    {
LABEL_17:
      int v14 = 7;
LABEL_18:
      *((_DWORD *)db + 20) = v14;
      return v14;
    }
    *uint64_t v16 = 0;
    int v17 = sqlite3_exec(db, zSql, (int (__cdecl *)(void *, int, char **, char **))sub_1B0CB6710, &v25, pzErrmsg);
    *(void *)long long v25 = HIDWORD(v26);
    if (v17 == 4)
    {
      sqlite3_free_table((char **)(v25 + 8));
      uint64_t v18 = *((void *)&v25 + 1);
      if (!*((void *)&v25 + 1)) {
        goto LABEL_43;
      }
      if (!pzErrmsg)
      {
LABEL_37:
        int v21 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v18);
          --qword_1EB220150;
          off_1EB21C9E8(v18);
          uint64_t v18 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_43;
          }
          int v21 = &xmmword_1EB21CA50;
        }
        (*v21)(v18);
LABEL_43:
        int v14 = v27;
        goto LABEL_18;
      }
      uint64_t v19 = *pzErrmsg;
      if (*pzErrmsg)
      {
        uint64_t v20 = (void (**)(char *))&off_1EB21C9E8;
        if (!dword_1EB21C9C0)
        {
LABEL_35:
          (*v20)(v19);
          goto LABEL_36;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v19);
        --qword_1EB220150;
        off_1EB21C9E8(v19);
        uint64_t v19 = (char *)xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          uint64_t v20 = (void (**)(char *))&xmmword_1EB21CA50;
          goto LABEL_35;
        }
      }
LABEL_36:
      *pzErrmsg = sqlite3_mprintf("%s", *((const char **)&v25 + 1));
      uint64_t v18 = *((void *)&v25 + 1);
      if (!*((void *)&v25 + 1)) {
        goto LABEL_43;
      }
      goto LABEL_37;
    }
    int v14 = v17;
    uint64_t v22 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      uint64_t v23 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v22);
        --qword_1EB220150;
        off_1EB21C9E8(v22);
        uint64_t v22 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_51;
        }
        uint64_t v23 = &xmmword_1EB21CA50;
      }
      (*v23)(v22);
    }
LABEL_51:
    if (v14)
    {
      sqlite3_free_table((char **)(v25 + 8));
      return v14;
    }
    uint64_t v24 = v25;
    if (v26 <= HIDWORD(v26) || (uint64_t v24 = sub_1B0C8E1B8(v25, 8 * HIDWORD(v26))) != 0)
    {
      *pazResult = (char **)(v24 + 8);
      if (pnColumn) {
        *pnColumuint64_t n = DWORD2(v26);
      }
      int v14 = 0;
      if (pnRow) {
        *pnRow = DWORD1(v26);
      }
      return v14;
    }
    sqlite3_free_table((char **)(v25 + 8));
    goto LABEL_17;
  }
LABEL_22:

  return sub_1B0CE1978(157459);
}

uint64_t sub_1B0CB3AF4(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t result = *(unsigned int *)(a1 + 20);
  uint64_t v7 = *(int *)(a1 + 24);
  if ((int)result < (int)v7)
  {
LABEL_4:
    uint64_t v14 = *(void *)(a1 + 32);
    *(_DWORD *)(a1 + 20) = result + 1;
    if ((a3 & 2) == 0) {
      *(_DWORD *)(a1 + 28) = result + 1;
    }
    if (!a2)
    {
      *(_WORD *)(v14 + 56 * (int)result + 16) = 1;
LABEL_10:
      *(void *)(v14 + 56 * (int)result) = a2;
      uint64_t v16 = v14 + 56 * (int)result;
      *(_WORD *)(v16 + 18) = a3;
      *(void *)(v16 + 8) = a1;
      *(_OWORD *)(v16 + 20) = 0u;
      *(_OWORD *)(v16 + 36) = 0u;
      *(_DWORD *)(v16 + 52) = 0;
      return result;
    }
    if ((*(unsigned char *)(a2 + 6) & 8) == 0)
    {
      __int16 v15 = 1;
      goto LABEL_30;
    }
    unint64_t v17 = *(int *)(a2 + 44);
    if (v17 >= 8)
    {
      __int16 v18 = 40;
      if (v17 >= 0x100)
      {
        unint64_t v19 = *(int *)(a2 + 44);
        do
        {
          v18 += 40;
          unint64_t v17 = v19 >> 4;
          BOOL v20 = v19 > 0xFFF;
          v19 >>= 4;
        }
        while (v20);
      }
      if (v17 < 0x10)
      {
        LOBYTE(v21) = v17;
      }
      else
      {
        do
        {
          v18 += 10;
          unint64_t v21 = v17 >> 1;
          BOOL v20 = v17 > 0x1F;
          v17 >>= 1;
        }
        while (v20);
      }
    }
    else
    {
      if (v17 < 2)
      {
        __int16 v15 = -270;
        goto LABEL_30;
      }
      __int16 v18 = 40;
      do
      {
        v18 -= 10;
        LOBYTE(v21) = 2 * v17;
        BOOL v22 = v17 >= 4;
        v17 *= 2;
      }
      while (!v22);
    }
    __int16 v15 = v18 + word_1B0DE8C5A[v21 & 7] - 280;
LABEL_30:
    *(_WORD *)(v14 + 56 * (int)result + 16) = v15;
    do
    {
      int v24 = *(_DWORD *)(a2 + 4);
      if ((v24 & 0x82000) == 0) {
        break;
      }
      uint64_t v23 = (uint64_t *)((v24 & 0x80000) != 0 ? *(void *)(a2 + 32) + 8 : a2 + 16);
      a2 = *v23;
    }
    while (*v23);
    goto LABEL_10;
  }
  uint64_t v8 = *(const void **)(a1 + 32);
  uint64_t v9 = *(void ****)a1;
  uint64_t v10 = ***(void ****)a1;
  uint64_t v11 = 112 * v7;
  int v12 = (void *)sub_1B0D05DC0((uint64_t)v10, 112 * v7 + 16);
  if (v12)
  {
    *int v12 = v9[11];
    v12[1] = v11;
    v9[11] = (void **)v12;
    uint64_t v13 = v12 + 2;
    *(void *)(a1 + 32) = v13;
    memcpy(v13, v8, 56 * *(int *)(a1 + 20));
    uint64_t result = *(unsigned int *)(a1 + 20);
    *(_DWORD *)(a1 + 24) *= 2;
    goto LABEL_4;
  }
  *(void *)(a1 + 32) = 0;
  if (a2 && (a3 & 1) != 0) {
    sub_1B0D1DF88(v10, (unsigned __int8 *)a2);
  }
  uint64_t result = 0;
  *(void *)(a1 + 32) = v8;
  return result;
}

void sub_1B0CB3D04(int *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  v254[1] = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *a2;
  uint64_t v252 = 0;
  v253[0] = 0;
  uint64_t v10 = *(uint64_t **)v9;
  uint64_t v11 = **(void **)v9;
  if (*(unsigned char *)(v11 + 103)) {
    return;
  }
  int v12 = a3;
  uint64_t v14 = a1;
  uint64_t v15 = a2[4];
  int v16 = a3;
  uint64_t v249 = (_DWORD *)(v9 + 592);
  uint64_t v242 = v15 + 56 * (int)a3;
  unint64_t v17 = *(unsigned __int8 **)v242;
  *(_DWORD *)(v9 + 592) = 0;
  __int16 v18 = (unsigned __int8 *)*((void *)v17 + 2);
  if (!v18)
  {
LABEL_15:
    uint64_t v21 = 0;
    goto LABEL_16;
  }
  if (*v18 != 167 || (*((_DWORD *)v18 + 1) & 0x20) != 0)
  {
    if ((*((_DWORD *)v18 + 1) & 0x810000) == 0)
    {
      uint64_t v20 = sub_1B0D4A4CC(v249, v18);
      uint64_t v14 = a1;
      uint64_t v21 = v20;
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  int v22 = *((_DWORD *)v18 + 11);
  if (*(_DWORD *)(v9 + 600) == v22)
  {
    uint64_t v21 = 1;
    goto LABEL_16;
  }
  uint64_t v23 = *(unsigned int *)(v9 + 596);
  if ((int)v23 < 2) {
    goto LABEL_15;
  }
  uint64_t v24 = 0;
  uint64_t v25 = v23 - 1;
  while (*(_DWORD *)(v9 + 604 + 4 * v24) != v22)
  {
    if (v25 == ++v24) {
      goto LABEL_15;
    }
  }
  uint64_t v21 = 1 << (v24 + 1);
LABEL_16:
  unsigned int v26 = *v17;
  uint64_t v250 = (uint64_t)a2;
  int v251 = v16;
  uint64_t v248 = v10;
  uint64_t v244 = v21;
  if (v26 != 49)
  {
    int v32 = (unsigned __int8 *)*((void *)v17 + 3);
    if (v32)
    {
      if (*v32 == 167 && (*((_DWORD *)v32 + 1) & 0x20) == 0)
      {
        int v42 = *((_DWORD *)v32 + 11);
        if (*(_DWORD *)(v9 + 600) == v42)
        {
          uint64_t v34 = 1;
          goto LABEL_55;
        }
        uint64_t v44 = *(unsigned int *)(v9 + 596);
        if ((int)v44 >= 2)
        {
          uint64_t v45 = 0;
          uint64_t v46 = v44 - 1;
          while (*(_DWORD *)(v9 + 604 + 4 * v45) != v42)
          {
            if (v46 == ++v45) {
              goto LABEL_54;
            }
          }
          uint64_t v34 = 1 << (v45 + 1);
LABEL_55:
          *(void *)(v15 + 56 * v16 + 40) = v34;
          int v47 = *((_DWORD *)v17 + 1);
          int v245 = v12;
          uint64_t v243 = v11;
          if (*((void *)v17 + 2) && (v47 & 0x41000) == 0 && !*((void *)v17 + 4))
          {
            unint64_t v49 = v34 | v21;
            goto LABEL_72;
          }
          if (*v17 != 167 || (v47 & 0x20) != 0)
          {
            if ((v47 & 0x810000) == 0)
            {
              unint64_t v49 = sub_1B0D4A4CC(v249, v17);
              uint64_t v21 = v244;
              uint64_t v14 = a1;
              goto LABEL_72;
            }
          }
          else
          {
            int v48 = *((_DWORD *)v17 + 11);
            if (*(_DWORD *)(v9 + 600) == v48)
            {
              unint64_t v49 = 1;
              goto LABEL_72;
            }
            uint64_t v50 = *(unsigned int *)(v9 + 596);
            if ((int)v50 >= 2)
            {
              uint64_t v51 = 0;
              uint64_t v52 = v50 - 1;
              while (*(_DWORD *)(v9 + 604 + 4 * v51) != v48)
              {
                if (v52 == ++v51) {
                  goto LABEL_68;
                }
              }
              unint64_t v49 = 1 << (v51 + 1);
              goto LABEL_72;
            }
          }
LABEL_68:
          unint64_t v49 = 0;
          goto LABEL_72;
        }
      }
      else if ((*((_DWORD *)v32 + 1) & 0x810000) == 0)
      {
        uint64_t v34 = sub_1B0D4A4CC(v249, v32);
        uint64_t v21 = v244;
        uint64_t v14 = a1;
        goto LABEL_55;
      }
    }
LABEL_54:
    uint64_t v34 = 0;
    goto LABEL_55;
  }
  int v27 = sub_1B0D33B08(v10, (uint64_t)v17, a3, a4, a5, a6, a7, a8);
  uint64_t v14 = a1;
  if (v27) {
    return;
  }
  char v28 = (int *)*((void *)v17 + 4);
  int v245 = v12;
  uint64_t v243 = v11;
  if ((v17[5] & 0x10) != 0)
  {
    uint64_t v43 = sub_1B0D48AF8(v249, (uint64_t)v28);
    uint64_t v14 = a1;
    uint64_t v31 = v43;
    uint64_t v21 = v244;
  }
  else
  {
    uint64_t v21 = v244;
    if (v28)
    {
      int v29 = *v28;
      if (*v28 >= 1)
      {
        uint64_t v30 = 0;
        uint64_t v31 = 0;
        while (1)
        {
          BOOL v36 = *(unsigned __int8 **)&v28[6 * v30 + 2];
          if (v36)
          {
            if (*v36 == 167 && (*((_DWORD *)v36 + 1) & 0x20) == 0)
            {
              int v38 = *((_DWORD *)v36 + 11);
              if (*(_DWORD *)(v9 + 600) == v38)
              {
                uint64_t v35 = 1;
                goto LABEL_31;
              }
              uint64_t v39 = *(unsigned int *)(v9 + 596);
              if ((int)v39 >= 2)
              {
                uint64_t v40 = 0;
                uint64_t v41 = v39 - 1;
                while (*(_DWORD *)(v9 + 604 + 4 * v40) != v38)
                {
                  if (v41 == ++v40) {
                    goto LABEL_30;
                  }
                }
                uint64_t v35 = 1 << (v40 + 1);
                goto LABEL_31;
              }
            }
            else if ((*((_DWORD *)v36 + 1) & 0x810000) == 0)
            {
              uint64_t v35 = sub_1B0D4A4CC(v249, v36);
              uint64_t v21 = v244;
              uint64_t v14 = a1;
              int v29 = *v28;
              goto LABEL_31;
            }
          }
LABEL_30:
          uint64_t v35 = 0;
LABEL_31:
          v31 |= v35;
          if (++v30 >= v29) {
            goto LABEL_71;
          }
        }
      }
    }
    uint64_t v31 = 0;
  }
LABEL_71:
  *(void *)(v15 + 56 * v16 + 40) = v31;
  unint64_t v49 = v31 | v21;
  uint64_t v10 = v248;
LABEL_72:
  if (*v249) {
    *(_WORD *)(v15 + 56 * v16 + 18) |= 0x1000u;
  }
  int v53 = *((_DWORD *)v17 + 1);
  if ((v53 & 3) == 0) {
    goto LABEL_78;
  }
  int v54 = *((_DWORD *)v17 + 14);
  if (*(_DWORD *)(v9 + 600) == v54)
  {
    unint64_t v55 = 1;
    if ((v53 & 1) == 0)
    {
LABEL_77:
      if (v55 > v49 >> 1)
      {
LABEL_78:
        unint64_t v241 = 0;
LABEL_89:
        uint64_t v59 = v15 + 56 * v16;
        *(void *)(v59 + 48) = v49;
        uint64_t v60 = (void *)(v59 + 48);
        *(v60 - 3) = -1;
        *((_WORD *)v60 - 14) = 0;
        uint64_t v61 = (_WORD *)v60 - 14;
        if (v26 > 0x39 || ((1 << v26) & 0x3E6200000000000) == 0)
        {
          unsigned int v91 = *v17;
          if (v91 > 0x32)
          {
            uint64_t v85 = v250;
            if (v91 == 51)
            {
              long long v107 = (unsigned __int8 *)*((void *)v17 + 2);
              if (*v107 == 167 && (v53 & 1) == 0 && (*((_DWORD *)v107 + 12) & 0x80000000) == 0)
              {
                long long v108 = sub_1B0CAE048(v243, *((unsigned __int8 **)v17 + 2), 0, 0);
                uint64_t v109 = sub_1B0C904D8(v243, 121, 0, 0);
                uint64_t v110 = (uint64_t)v108;
                uint64_t v10 = v248;
                uint64_t v111 = sub_1B0D28CCC(v248, 54, v110, v109);
                int v112 = sub_1B0CB3AF4(v250, v111, 131);
                if (v112)
                {
                  uint64_t v113 = *(void *)(v250 + 32) + 56 * v112;
                  *(void *)(v113 + 40) = 0;
                  *(void *)(v113 + 28) = *(void *)(v107 + 44);
                  *(_WORD *)(v113 + 20) = 4;
                  uint64_t v114 = *(void *)(v250 + 32);
                  uint64_t v115 = v114 + 56 * v112;
                  *(_DWORD *)(v115 + 24) = v245;
                  uint64_t v116 = v114 + 56 * v16;
                  *(_WORD *)(v115 + 16) = *(_WORD *)(v116 + 16);
                  ++*(unsigned char *)(v116 + 22);
                  *(_WORD *)(v116 + 18) |= 8u;
                  uint64_t v242 = v116;
                  *(void *)(v113 + 48) = *(void *)(v116 + 48);
                }
              }
              goto LABEL_223;
            }
            if (v91 == 172)
            {
              if (*(unsigned char *)(v250 + 16) != 44
                || !sub_1B0D49E04((uint64_t)v10, (uint64_t)v17, (uint64_t *)v253, (BOOL *)&v252 + 1, &v252))
              {
                goto LABEL_223;
              }
              char v101 = *(unsigned __int8 **)(*((void *)v17 + 4) + 32);
              int v102 = v253[0];
              if (v253[0]) {
                unsigned int v103 = sub_1B0CAE048(v243, v253[0], 0, 0);
              }
              else {
                unsigned int v103 = 0;
              }
              int v218 = v252;
              if (v252)
              {
                if (!*(unsigned char *)(*v248 + 103))
                {
                  *(_WORD *)(v15 + 56 * v16 + 18) |= 0x400u;
                  uint64_t v219 = (unsigned char *)*((void *)v102 + 1);
                  int v220 = *v219;
                  if (*v219)
                  {
                    uint64_t v221 = 0;
                    do
                    {
                      unsigned char *v219 = v220 & (~byte_1B0DE196D[v220] | 0xDF);
                      *(unsigned char *)(*((void *)v103 + 1) + v221++) = byte_1B0DE1758[v220];
                      uint64_t v219 = (unsigned char *)(v221 + *((void *)v102 + 1));
                      int v220 = *v219;
                    }
                    while (*v219);
                  }
                }
              }
              if (!*(unsigned char *)(v243 + 103))
              {
                uint64_t v222 = *((void *)v103 + 1);
                if (v222) {
                  size_t v223 = strlen(*((const char **)v103 + 1)) & 0x3FFFFFFF;
                }
                else {
                  size_t v223 = 0;
                }
                size_t v224 = v223 - 1;
                uint64_t v225 = *(unsigned __int8 *)(v222 + v224);
                if (v218)
                {
                  if (v225 == 64) {
                    HIDWORD(v252) = 0;
                  }
                  LOBYTE(v225) = byte_1B0DE1758[v225];
                }
                *(unsigned char *)(v222 + v224) = v225 + 1;
              }
              if (v218) {
                char v226 = "NOCASE";
              }
              else {
                char v226 = "BINARY";
              }
              if (v101) {
                uint64_t v227 = sub_1B0CAE048(v243, v101, 0, 0);
              }
              else {
                uint64_t v227 = 0;
              }
              uint64_t v228 = sub_1B0D38230(v248, (uint64_t)v227, v226);
              uint64_t v229 = sub_1B0D28CCC(v248, 57, v228, (uint64_t)v102);
              if (v229 && (*((_DWORD *)v17 + 1) & 3) != 0)
              {
                *(_DWORD *)(v229 + 4) |= *((_DWORD *)v17 + 1) & 3;
                *(_DWORD *)(v229 + 56) = *((_DWORD *)v17 + 14);
              }
              uint64_t v230 = sub_1B0CB3AF4(v250, v229, 259);
              if (v101) {
                uint64_t v231 = sub_1B0CAE048(v243, v101, 0, 0);
              }
              else {
                uint64_t v231 = 0;
              }
              uint64_t v232 = sub_1B0D38230(v248, (uint64_t)v231, v226);
              uint64_t v233 = sub_1B0D28CCC(v248, 56, v232, (uint64_t)v103);
              if (v233 && (*((_DWORD *)v17 + 1) & 3) != 0)
              {
                *(_DWORD *)(v233 + 4) |= *((_DWORD *)v17 + 1) & 3;
                *(_DWORD *)(v233 + 56) = *((_DWORD *)v17 + 14);
              }
              uint64_t v234 = sub_1B0CB3AF4(v250, v233, 259);
              sub_1B0CB3D04(a1, v250, v230);
              sub_1B0CB3D04(a1, v250, v234);
              uint64_t v235 = *(void *)(v250 + 32);
              uint64_t v242 = v235 + 56 * v16;
              if (HIDWORD(v252))
              {
                uint64_t v236 = v235 + 56 * (int)v230;
                *(_DWORD *)(v236 + 24) = v245;
                uint64_t v237 = v235 + 56 * v16;
                *(_WORD *)(v236 + 16) = *(_WORD *)(v237 + 16);
                LOBYTE(v236) = *(unsigned char *)(v237 + 22);
                uint64_t v238 = v235 + 56 * (int)v234;
                *(_DWORD *)(v238 + 24) = v245;
                *(_WORD *)(v238 + 16) = *(_WORD *)(v237 + 16);
                *(unsigned char *)(v237 + 22) = v236 + 2;
              }
              goto LABEL_153;
            }
          }
          else
          {
            uint64_t v85 = v250;
            if (v91 == 43)
            {
              sub_1B0D49230(v14, v250, v245);
              uint64_t v242 = *(void *)(v250 + 32) + 56 * v16;
              goto LABEL_223;
            }
            if (v91 == 48)
            {
              if (*(unsigned char *)(v250 + 16) == 44)
              {
                uint64_t v92 = *((void *)v17 + 4);
                long long v93 = (unsigned __int8 *)*((void *)v17 + 2);
                if (v93) {
                  long long v94 = sub_1B0CAE048(v243, v93, 0, 0);
                }
                else {
                  long long v94 = 0;
                }
                uint64_t v182 = *(unsigned __int8 **)(v92 + 8);
                if (v182) {
                  uint64_t v183 = sub_1B0CAE048(v243, v182, 0, 0);
                }
                else {
                  uint64_t v183 = 0;
                }
                uint64_t v184 = sub_1B0D28CCC(v10, 57, (uint64_t)v94, (uint64_t)v183);
                if (v184 && (*((_DWORD *)v17 + 1) & 3) != 0)
                {
                  *(_DWORD *)(v184 + 4) |= *((_DWORD *)v17 + 1) & 3;
                  *(_DWORD *)(v184 + 56) = *((_DWORD *)v17 + 14);
                }
                uint64_t v185 = sub_1B0CB3AF4(v250, v184, 3);
                int v186 = v185;
                sub_1B0CB3D04(a1, v250, v185);
                uint64_t v187 = *(void *)(v250 + 32);
                uint64_t v188 = v187 + 56 * v186;
                *(_DWORD *)(v188 + 24) = v245;
                uint64_t v189 = v187 + 56 * v16;
                *(_WORD *)(v188 + 16) = *(_WORD *)(v189 + 16);
                ++*(unsigned char *)(v189 + 22);
                uint64_t v190 = (unsigned __int8 *)*((void *)v17 + 2);
                if (v190) {
                  uint64_t v191 = sub_1B0CAE048(v243, v190, 0, 0);
                }
                else {
                  uint64_t v191 = 0;
                }
                uint64_t v192 = *(unsigned __int8 **)(v92 + 32);
                if (v192) {
                  uint64_t v193 = sub_1B0CAE048(v243, v192, 0, 0);
                }
                else {
                  uint64_t v193 = 0;
                }
                uint64_t v194 = sub_1B0D28CCC(v10, 55, (uint64_t)v191, (uint64_t)v193);
                if (v194 && (*((_DWORD *)v17 + 1) & 3) != 0)
                {
                  *(_DWORD *)(v194 + 4) |= *((_DWORD *)v17 + 1) & 3;
                  *(_DWORD *)(v194 + 56) = *((_DWORD *)v17 + 14);
                }
                uint64_t v195 = sub_1B0CB3AF4(v250, v194, 3);
                int v196 = v195;
                sub_1B0CB3D04(a1, v250, v195);
                uint64_t v197 = *(void *)(v250 + 32);
                uint64_t v198 = v197 + 56 * v196;
                *(_DWORD *)(v198 + 24) = v245;
                uint64_t v199 = v197 + 56 * v16;
                *(_WORD *)(v198 + 16) = *(_WORD *)(v199 + 16);
                uint64_t v242 = v199;
                ++*(unsigned char *)(v199 + 22);
              }
              goto LABEL_223;
            }
          }
LABEL_224:
          if (v91 == 53)
          {
LABEL_227:
            uint64_t v126 = (unsigned __int8 *)*((void *)v17 + 2);
            int v127 = *v126;
            if (v127 == 176) {
              int v127 = v126[2];
            }
            if (v127 == 138)
            {
              uint64_t v128 = (int **)(*((void *)v126 + 4) + 32);
            }
            else
            {
              if (v127 != 177) {
                goto LABEL_260;
              }
              uint64_t v128 = (int **)(v126 + 32);
            }
            int v129 = **v128;
            if (v129 >= 2)
            {
              uint64_t v130 = (unsigned __int8 *)*((void *)v17 + 3);
              int v131 = *v130;
              if (v131 == 176) {
                int v131 = v130[2];
              }
              if (v131 == 138)
              {
                uint64_t v132 = (_DWORD **)(*((void *)v130 + 4) + 32);
              }
              else
              {
                if (v131 != 177) {
                  goto LABEL_260;
                }
                uint64_t v132 = (_DWORD **)(v130 + 32);
              }
              if (**v132 == v129 && ((v126[5] & 0x10) == 0 || (v130[5] & 0x10) == 0) && *(unsigned char *)(v85 + 16) == 44)
              {
                for (int i = 0; i != v129; ++i)
                {
                  unint64_t v135 = sub_1B0D4A3A0((uint64_t)v10, *((unsigned __int8 **)v17 + 2), i, v129);
                  char v136 = sub_1B0D4A3A0((uint64_t)v10, *((unsigned __int8 **)v17 + 3), i, v129);
                  uint64_t v137 = sub_1B0D28CCC(v10, *v17, (uint64_t)v135, (uint64_t)v136);
                  if (v137 && (*((_DWORD *)v17 + 1) & 3) != 0)
                  {
                    *(_DWORD *)(v137 + 4) |= *((_DWORD *)v17 + 1) & 3;
                    *(_DWORD *)(v137 + 56) = *((_DWORD *)v17 + 14);
                  }
                  uint64_t v134 = sub_1B0CB3AF4(v85, v137, 32769);
                  sub_1B0CB3D04(a1, v85, v134);
                }
                uint64_t v181 = *(void *)(v85 + 32) + 56 * v16;
                *(_WORD *)(v181 + 18) |= 6u;
                *(_WORD *)(v181 + 20) = 0x2000;
                goto LABEL_385;
              }
            }
LABEL_260:
            if (*(unsigned char *)(v85 + 16) != 44)
            {
LABEL_385:
              uint64_t v217 = *(void *)(v250 + 32) + 56 * v251;
              *(void *)(v217 + 40) |= v241;
              return;
            }
            if (v91 - 51 >= 2 && v91 != 171)
            {
              if (v91 == 172)
              {
                uint64_t v142 = *((void *)v17 + 4);
                if (v142)
                {
                  if (*(_DWORD *)v142 == 2)
                  {
                    uint64_t v143 = *(unsigned __int8 **)(v142 + 32);
                    if (*v143 == 167 && *(unsigned char *)(*((void *)v143 + 9) + 63) == 1)
                    {
                      int v144 = (unsigned char *)*((void *)v17 + 1);
                      int v145 = "match";
                      for (uint64_t j = v144; ; ++j)
                      {
                        uint64_t v157 = *j;
                        uint64_t v158 = *(unsigned __int8 *)v145;
                        if (v157 == v158)
                        {
                          if (!*j)
                          {
                            uint64_t v159 = 0;
LABEL_296:
                            LOBYTE(v247) = (&off_1E5FF0098)[2 * v159 + 1];
                            unint64_t v148 = *(unsigned __int8 **)(v142 + 8);
                            int v149 = 1;
LABEL_301:
                            uint64_t v160 = v9 + 604;
                            while (2)
                            {
                              uint64_t v167 = v143;
                              if (v148)
                              {
                                if (*v148 == 167 && (*((_DWORD *)v148 + 1) & 0x20) == 0)
                                {
                                  int v170 = *((_DWORD *)v148 + 11);
                                  if (*(_DWORD *)(v9 + 600) == v170)
                                  {
                                    uint64_t v169 = 1;
                                    if (v143) {
                                      goto LABEL_320;
                                    }
                                    goto LABEL_336;
                                  }
                                  uint64_t v171 = *(unsigned int *)(v9 + 596);
                                  if ((int)v171 >= 2)
                                  {
                                    uint64_t v172 = 0;
                                    uint64_t v173 = v171 - 1;
                                    while (*(_DWORD *)(v160 + 4 * v172) != v170)
                                    {
                                      if (v173 == ++v172) {
                                        goto LABEL_319;
                                      }
                                    }
                                    uint64_t v169 = 1 << (v172 + 1);
                                    if (v143) {
                                      goto LABEL_320;
                                    }
                                    goto LABEL_336;
                                  }
                                }
                                else if ((*((_DWORD *)v148 + 1) & 0x810000) == 0)
                                {
                                  uint64_t v169 = sub_1B0D4A4CC(v249, v148);
                                  if (!v143) {
                                    goto LABEL_336;
                                  }
LABEL_320:
                                  if (*v143 != 167 || (*((_DWORD *)v143 + 1) & 0x20) != 0)
                                  {
                                    if ((*((_DWORD *)v143 + 1) & 0x810000) != 0
                                      || (sub_1B0D4A4CC(v249, v143) & v169) == 0)
                                    {
                                      goto LABEL_336;
                                    }
LABEL_303:
                                    uint64_t v143 = v148;
                                    unint64_t v148 = v167;
                                    if (v149-- <= 1) {
                                      goto LABEL_385;
                                    }
                                    continue;
                                  }
                                  int v175 = *((_DWORD *)v143 + 11);
                                  if (*(_DWORD *)(v9 + 600) == v175)
                                  {
                                    if (v169) {
                                      goto LABEL_303;
                                    }
                                  }
                                  else
                                  {
                                    uint64_t v176 = *(unsigned int *)(v9 + 596);
                                    if ((int)v176 >= 2)
                                    {
                                      uint64_t v177 = 0;
                                      uint64_t v178 = v176 - 1;
                                      while (*(_DWORD *)(v160 + 4 * v177) != v175)
                                      {
                                        if (v178 == ++v177) {
                                          goto LABEL_336;
                                        }
                                      }
                                      if (((1 << (v177 + 1)) & v169) != 0) {
                                        goto LABEL_303;
                                      }
                                    }
                                  }
LABEL_336:
                                  if (v148) {
                                    uint64_t v179 = sub_1B0CAE048(v243, v148, 0, 0);
                                  }
                                  else {
                                    uint64_t v179 = 0;
                                  }
                                  uint64_t v180 = sub_1B0D28CCC(v248, 46, 0, (uint64_t)v179);
                                  if ((v17[4] & 1) != 0 && v180)
                                  {
                                    *(_DWORD *)(v180 + 4) |= 1u;
                                    *(_DWORD *)(v180 + 56) = *((_DWORD *)v17 + 14);
                                  }
                                  int v161 = sub_1B0CB3AF4(v250, v180, 3);
                                  uint64_t v162 = *(void *)(v250 + 32) + 56 * v161;
                                  *(void *)(v162 + 40) = v169;
                                  *(void *)(v162 + 28) = *(void *)(v143 + 44);
                                  *(_WORD *)(v162 + 20) = 64;
                                  *(unsigned char *)(v162 + 23) = v247;
                                  uint64_t v163 = *(void *)(v250 + 32);
                                  uint64_t v164 = v163 + 56 * v161;
                                  *(_DWORD *)(v164 + 24) = v245;
                                  uint64_t v165 = v163 + 56 * v251;
                                  *(_WORD *)(v164 + 16) = *(_WORD *)(v165 + 16);
                                  ++*(unsigned char *)(v165 + 22);
                                  *(_WORD *)(v165 + 18) |= 8u;
                                  *(void *)(v162 + 48) = *(void *)(v165 + 48);
                                  goto LABEL_303;
                                }
                              }
                              break;
                            }
LABEL_319:
                            uint64_t v169 = 0;
                            if (!v143) {
                              goto LABEL_336;
                            }
                            goto LABEL_320;
                          }
                        }
                        else if (byte_1B0DE1758[v157] != byte_1B0DE1758[v158])
                        {
                          uint64_t v200 = "glob";
                          uint64_t v159 = 1;
                          for (uint64_t k = (unsigned char *)*((void *)v17 + 1); ; ++k)
                          {
                            uint64_t v202 = *k;
                            uint64_t v203 = *(unsigned __int8 *)v200;
                            if (v202 == v203)
                            {
                              if (!*k) {
                                goto LABEL_296;
                              }
                            }
                            else if (byte_1B0DE1758[v202] != byte_1B0DE1758[v203])
                            {
                              uint64_t v204 = "like";
                              uint64_t v159 = 2;
                              for (uint64_t m = (unsigned char *)*((void *)v17 + 1); ; ++m)
                              {
                                uint64_t v206 = *m;
                                uint64_t v207 = *(unsigned __int8 *)v204;
                                if (v206 == v207)
                                {
                                  if (!*m) {
                                    goto LABEL_296;
                                  }
                                }
                                else if (byte_1B0DE1758[v206] != byte_1B0DE1758[v207])
                                {
                                  uint64_t v208 = "regexp";
                                  uint64_t v159 = 3;
                                  while (1)
                                  {
                                    uint64_t v209 = *v144;
                                    uint64_t v210 = *(unsigned __int8 *)v208;
                                    if (v209 == v210)
                                    {
                                      if (!*v144) {
                                        goto LABEL_296;
                                      }
                                    }
                                    else if (byte_1B0DE1758[v209] != byte_1B0DE1758[v210])
                                    {
                                      goto LABEL_378;
                                    }
                                    ++v144;
                                    ++v208;
                                  }
                                }
                                ++v204;
                              }
                            }
                            ++v200;
                          }
                        }
                        ++v145;
                      }
                    }
LABEL_378:
                    uint64_t v143 = *(unsigned __int8 **)(v142 + 8);
                    if (*v143 == 167)
                    {
                      uint64_t v211 = *((void *)v143 + 9);
                      if (*(unsigned char *)(v211 + 63) == 1)
                      {
                        v253[1] = 0;
                        v254[0] = 0;
                        uint64_t v212 = (uint64_t **)(v211 + 80);
                        do
                        {
                          uint64_t v213 = *v212;
                          uint64_t v214 = *v212;
                          uint64_t v215 = *v214;
                          uint64_t v212 = (uint64_t **)(v214 + 5);
                        }
                        while (v215 != v243);
                        int v216 = *(uint64_t (**)(void))(*(void *)v213[2] + 144);
                        if (v216)
                        {
                          int v247 = v216();
                          if (v247 >= 150)
                          {
                            unint64_t v148 = *(unsigned __int8 **)(v142 + 32);
                            int v149 = 1;
                            goto LABEL_301;
                          }
                        }
                      }
                    }
                  }
                }
              }
              goto LABEL_385;
            }
            unint64_t v148 = (unsigned __int8 *)*((void *)v17 + 2);
            unsigned int v147 = (unsigned __int8 *)*((void *)v17 + 3);
            if (*v148 == 167)
            {
              int v149 = *(unsigned __int8 *)(*((void *)v148 + 9) + 63) == 1;
              if (v147)
              {
LABEL_271:
                if (*v147 == 167 && *(unsigned char *)(*((void *)v147 + 9) + 63) == 1)
                {
                  ++v149;
                  uint64_t v143 = (unsigned __int8 *)*((void *)v17 + 3);
                }
                else
                {
                  uint64_t v143 = (unsigned __int8 *)*((void *)v17 + 2);
                  unint64_t v148 = (unsigned __int8 *)*((void *)v17 + 3);
                }
LABEL_287:
                switch(v91)
                {
                  case 0xABu:
                    LOBYTE(v247) = 69;
                    break;
                  case 0x34u:
                    LOBYTE(v247) = 68;
                    break;
                  case 0x33u:
                    LOBYTE(v247) = 70;
                    break;
                  default:
                    LOBYTE(v247) = 0;
                    break;
                }
                if (v149) {
                  goto LABEL_301;
                }
                goto LABEL_385;
              }
            }
            else
            {
              int v149 = 0;
              if (v147) {
                goto LABEL_271;
              }
            }
            uint64_t v143 = (unsigned __int8 *)*((void *)v17 + 2);
            unint64_t v148 = 0;
            goto LABEL_287;
          }
          if (v91 != 49)
          {
            if (v91 != 45) {
              goto LABEL_260;
            }
            goto LABEL_227;
          }
          if (*(_DWORD *)(v242 + 36)) {
            goto LABEL_260;
          }
          uint64_t v138 = (unsigned __int8 *)*((void *)v17 + 2);
          if (*v138 != 177) {
            goto LABEL_260;
          }
          if ((v17[5] & 0x10) == 0) {
            goto LABEL_260;
          }
          uint64_t v139 = *((void *)v17 + 4);
          if (*(void *)(v139 + 80))
          {
            if ((*(unsigned char *)(v139 + 5) & 2) == 0) {
              goto LABEL_260;
            }
          }
          if (*(void *)(v139 + 112) || *(unsigned char *)(v85 + 16) != 44) {
            goto LABEL_260;
          }
          int v140 = 177;
          int v141 = 1;
          while (v140 != 138)
          {
            if (v140 == 177)
            {
              uint64_t v155 = (int **)(v138 + 32);
LABEL_280:
              int v156 = **v155;
              goto LABEL_282;
            }
            int v156 = 1;
LABEL_282:
            if (v141 - 1 >= v156) {
              goto LABEL_385;
            }
            uint64_t v150 = sub_1B0CB3AF4(v250, (uint64_t)v17, 32770);
            int v151 = v150;
            *(_DWORD *)(*(void *)(v250 + 32) + 56 * (int)v150 + 36) = v141;
            sub_1B0CB3D04(a1, v250, v150);
            uint64_t v152 = *(void *)(v250 + 32);
            uint64_t v153 = v152 + 56 * v151;
            *(_DWORD *)(v153 + 24) = v245;
            uint64_t v154 = v152 + 56 * v251;
            *(_WORD *)(v153 + 16) = *(_WORD *)(v154 + 16);
            ++*(unsigned char *)(v154 + 22);
            uint64_t v138 = (unsigned __int8 *)*((void *)v17 + 2);
            int v140 = *v138;
            ++v141;
            if (v140 == 176) {
              int v140 = v138[2];
            }
          }
          uint64_t v155 = (int **)(*((void *)v138 + 4) + 32);
          goto LABEL_280;
        }
        for (uint64_t n = (unsigned __int8 *)*((void *)v17 + 2); n; uint64_t n = (unsigned __int8 *)*((void *)n + 2))
        {
          if ((n[5] & 0x20) == 0) {
            break;
          }
        }
        uint64_t v63 = (unsigned __int8 *)*((void *)v17 + 3);
        for (ii = v49; v63; uint64_t v63 = (unsigned __int8 *)*((void *)v63 + 2))
        {
          if ((v63[5] & 0x20) == 0) {
            break;
          }
        }
        uint64_t v64 = v15 + 56 * v16;
        if ((*(void *)(v64 + 40) & v21) != 0) {
          __int16 v65 = 2048;
        }
        else {
          __int16 v65 = 0x3FFF;
        }
        __int16 v240 = v65;
        int v66 = *(_DWORD *)(v64 + 36);
        BOOL v67 = __OFSUB__(v66, 1);
        int v68 = v66 - 1;
        if (v68 < 0 == v67) {
          uint64_t n = *(unsigned __int8 **)(*((void *)n + 4) + 24 * v68 + 8);
        }
        uint64_t v69 = (unsigned int *)v60 - 5;
        int v70 = *n;
        uint64_t v71 = n;
        if (v26 - 54 <= 3 && v70 == 177)
        {
          uint64_t v71 = *(unsigned __int8 **)(*((void *)n + 4) + 8);
          int v70 = *v71;
        }
        if (v70 == 167)
        {
          unsigned int v72 = *((_DWORD *)v71 + 11);
          unsigned int v73 = *((_DWORD *)v71 + 12);
          v254[0] = __PAIR64__(v73, v72);
        }
        else
        {
          uint64_t v74 = *v14;
          if ((int)v74 < 1) {
            goto LABEL_127;
          }
          a4 = 0;
          while (1)
          {
            uint64_t v75 = *(void *)(*(void *)&v14[26 * a4 + 10] + 16);
            if (v75) {
              break;
            }
LABEL_109:
            if (++a4 == v74) {
              goto LABEL_127;
            }
          }
          while (!*(void *)(v75 + 80))
          {
            uint64_t v75 = *(void *)(v75 + 40);
            if (!v75) {
              goto LABEL_109;
            }
          }
          int v76 = sub_1B0D4AA50(v14, v254, v71, a4);
          uint64_t v14 = a1;
          if (!v76)
          {
LABEL_127:
            if (v26 == 45) {
              *(_WORD *)(v15 + 56 * v16 + 18) |= 0x800u;
            }
            if (v63)
            {
              int v78 = *v63;
              char v79 = v63;
              if (v26 - 54 <= 3 && v78 == 177)
              {
                char v79 = *(unsigned __int8 **)(*((void *)v63 + 4) + 8);
                int v78 = *v79;
              }
              if (v78 == 167)
              {
                v254[0] = *(void *)(v79 + 44);
                goto LABEL_143;
              }
              uint64_t v80 = *v14;
              if ((int)v80 >= 1)
              {
                uint64_t v81 = 0;
                while (1)
                {
                  uint64_t v82 = *(void *)(*(void *)&v14[26 * v81 + 10] + 16);
                  if (v82) {
                    break;
                  }
LABEL_137:
                  if (++v81 == v80) {
                    goto LABEL_148;
                  }
                }
                while (!*(void *)(v82 + 80))
                {
                  uint64_t v82 = *(void *)(v82 + 40);
                  if (!v82) {
                    goto LABEL_137;
                  }
                }
                if (sub_1B0D4AA50(v14, v254, v79, v81))
                {
LABEL_143:
                  if ((v63[4] & 0x20) == 0)
                  {
                    if ((*((_DWORD *)v60 - 5) & 0x80000000) != 0)
                    {
                      __int16 v95 = 0;
                      uint64_t v96 = v242;
                      long long v84 = v17;
                      uint64_t v85 = v250;
                      uint64_t v10 = v248;
                    }
                    else
                    {
                      long long v83 = (unsigned __int8 *)sub_1B0CAE048(v243, v17, 0, 0);
                      long long v84 = v83;
                      uint64_t v85 = v250;
                      uint64_t v10 = v248;
                      if (*(unsigned char *)(v243 + 103))
                      {
                        if (v83) {
                          sub_1B0D1DF88((void *)v243, v83);
                        }
                        return;
                      }
                      int v104 = sub_1B0CB3AF4(v250, (uint64_t)v83, 3);
                      if (!v104) {
                        return;
                      }
                      uint64_t v105 = *(void *)(v250 + 32);
                      uint64_t v96 = v105 + 56 * v104;
                      *(_DWORD *)(v96 + 24) = v245;
                      uint64_t v106 = v105 + 56 * v251;
                      *(_WORD *)(v96 + 16) = *(_WORD *)(v106 + 16);
                      ++*(unsigned char *)(v106 + 22);
                      if (v26 == 45) {
                        *(_WORD *)(v105 + 56 * v104 + 18) |= 0x800u;
                      }
                      uint64_t v242 = v105 + 56 * v251;
                      *(_WORD *)(v242 + 18) |= 8u;
                      if (sub_1B0D490F4((uint64_t)v248, (unsigned __int8 **)v84))
                      {
                        *(_WORD *)(v105 + 56 * v251 + 20) |= 0x800u;
                        __int16 v95 = 2048;
                      }
                      else
                      {
                        __int16 v95 = 0;
                      }
                    }
                    uint64_t v97 = v244;
                    uint64_t v98 = (unsigned __int8 *)*((void *)v84 + 2);
                    if (*v98 == 177) {
                      goto LABEL_211;
                    }
                    char v99 = (unsigned __int8 *)*((void *)v84 + 3);
                    if (*v99 == 177) {
                      goto LABEL_211;
                    }
                    if ((v98[5] & 2) != 0)
                    {
                      char v99 = (unsigned __int8 *)*((void *)v84 + 2);
                    }
                    else if ((v99[5] & 2) == 0)
                    {
                      uint64_t v100 = sub_1B0C9ADE0((uint64_t)v10, v98, (uint64_t)v79, a4, a5, a6, a7, a8);
                      if (v100)
                      {
LABEL_203:
                        long long v117 = (unsigned __int8 *)*((void *)v84 + 3);
                        if ((v117[5] & 2) != 0)
                        {
                          uint64_t v120 = (uint64_t)v10;
                        }
                        else
                        {
                          uint64_t v118 = (unsigned __int8 *)*((void *)v84 + 2);
                          if (!v118 || (v118[5] & 2) == 0)
                          {
                            uint64_t v119 = sub_1B0C9ADE0((uint64_t)v10, v117, (uint64_t)v79, a4, a5, a6, a7, a8);
                            if (v119)
                            {
LABEL_210:
                              uint64_t v97 = v244;
                              if (v100 == v119)
                              {
LABEL_212:
                                *((int8x16_t *)v84 + 1) = vextq_s8(*((int8x16_t *)v84 + 1), *((int8x16_t *)v84 + 1), 8uLL);
                                unsigned int v121 = *v84;
                                BOOL v122 = v121 >= 0x36;
                                char v123 = v121 - 54;
                                if (v122) {
                                  *long long v84 = (v123 ^ 2) + 54;
                                }
                                *(void *)(v96 + 28) = v254[0];
                                *(void *)(v96 + 40) = v241 | v97;
                                *(void *)(v96 + 48) = ii;
                                int v124 = *v84;
                                switch(v124)
                                {
                                  case '-':
                                    LOWORD(v125) = 128;
                                    break;
                                  case '1':
                                    LOWORD(v125) = 1;
                                    break;
                                  case '2':
                                    LOWORD(v125) = 256;
                                    break;
                                  default:
                                    int v125 = 2 << (v124 - 53);
                                    break;
                                }
                                *(_WORD *)(v96 + 20) = (v125 + v95) & v240;
                                int v16 = v251;
                                goto LABEL_223;
                              }
LABEL_211:
                              *((_DWORD *)v84 + 1) ^= 0x400u;
                              goto LABEL_212;
                            }
                          }
                          uint64_t v120 = (uint64_t)v10;
                          long long v117 = v118;
                        }
                        uint64_t v119 = sub_1B0C9ADE0(v120, v117, (uint64_t)v79, a4, a5, a6, a7, a8);
                        goto LABEL_210;
                      }
                    }
                    uint64_t v100 = sub_1B0C9ADE0((uint64_t)v10, v99, (uint64_t)v79, a4, a5, a6, a7, a8);
                    goto LABEL_203;
                  }
                }
              }
            }
LABEL_148:
            if (v26 == 50)
            {
              int v86 = *((_DWORD *)v17 + 1);
              uint64_t v10 = v248;
              if ((v86 & 1) == 0)
              {
                while (1)
                {
                  int v87 = *n;
                  if ((v87 - 173) >= 2) {
                    break;
                  }
                  uint64_t n = (unsigned __int8 *)*((void *)n + 2);
                }
                if (v87 == 176) {
                  int v87 = n[2];
                }
                if ((v87 - 153) < 3
                  || v87 == 117
                  || v87 == 167
                  && (n[6] & 0x20) == 0
                  && (uint64_t v88 = *((void *)n + 9)) != 0
                  && ((uint64_t v89 = *((unsigned int *)n + 12), (v89 & 0x80000000) != 0)
                   || (uint64_t v90 = *(void *)(v88 + 8)) == 0
                   || (*(unsigned char *)(v90 + 16 * v89 + 8) & 0xF) != 0))
                {
                  *unint64_t v17 = -86;
                  *((void *)v17 + 1) = "false";
                  *((_DWORD *)v17 + 1) = v86 | 0x20000000;
                  *uint64_t v60 = 0;
                  _WORD *v61 = 0;
                }
              }
              uint64_t v85 = v250;
              goto LABEL_223;
            }
            uint64_t v85 = v250;
LABEL_153:
            uint64_t v10 = v248;
LABEL_223:
            unsigned int v91 = *v17;
            goto LABEL_224;
          }
          unsigned int v72 = v254[0];
          unsigned int v73 = HIDWORD(v254[0]);
          uint64_t v69 = (unsigned int *)v60 - 5;
        }
        *uint64_t v69 = v72;
        *(_DWORD *)(v64 + 32) = v73;
        switch(v26)
        {
          case '-':
            LOWORD(v77) = 128;
            break;
          case '1':
            LOWORD(v77) = 1;
            break;
          case '2':
            LOWORD(v77) = 256;
            break;
          default:
            int v77 = 2 << (v26 - 53);
            break;
        }
        _WORD *v61 = v77 & v240;
        goto LABEL_127;
      }
      if (*v14 < 1 || (v14[17] & 0x40) == 0)
      {
        unint64_t v241 = 0;
        v53 &= ~2u;
        *((_DWORD *)v17 + 1) = v53;
        goto LABEL_89;
      }
      goto LABEL_120;
    }
  }
  else
  {
    uint64_t v56 = *(unsigned int *)(v9 + 596);
    if ((int)v56 < 2)
    {
LABEL_83:
      unint64_t v55 = 0;
      if ((v53 & 1) == 0) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v57 = 0;
      uint64_t v58 = v56 - 1;
      while (*(_DWORD *)(v9 + 604 + 4 * v57) != v54)
      {
        if (v58 == ++v57) {
          goto LABEL_83;
        }
      }
      unint64_t v55 = 1 << (v57 + 1);
      if ((v53 & 1) == 0) {
        goto LABEL_77;
      }
    }
  }
  v49 |= v55;
  if (v55 > v49 >> 1)
  {
    unint64_t v241 = v55 - 1;
    goto LABEL_89;
  }
LABEL_120:

  sub_1B0CEF2BC((uint64_t)v10, "ON clause references tables to its right", a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1B0CB5528(unsigned __int8 *a1)
{
  while (2)
  {
    int v1 = *a1;
LABEL_2:
    switch(v1)
    {
      case 138:
        uint64_t v2 = *(void *)(*((void *)a1 + 4) + 32);
        goto LABEL_14;
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 168:
      case 170:
      case 171:
      case 172:
      case 173:
      case 174:
      case 175:
      case 176:
        goto LABEL_4;
      case 167:
        uint64_t v3 = *((void *)a1 + 9);
        goto LABEL_19;
      case 169:
        uint64_t v3 = *((void *)a1 + 9);
        if (!v3)
        {
          if ((*((_DWORD *)a1 + 1) & 0x42000) == 0)
          {
LABEL_15:
            uint64_t v4 = a1 + 1;
LABEL_16:
            LOBYTE(v5) = *v4;
            return (char)v5;
          }
LABEL_11:
          a1 = (unsigned __int8 *)*((void *)a1 + 2);
          continue;
        }
LABEL_19:
        uint64_t v7 = *((unsigned int *)a1 + 12);
        if ((v7 & 0x80000000) == 0 && (int)v7 < *(__int16 *)(v3 + 54))
        {
          uint64_t v4 = (unsigned char *)(*(void *)(v3 + 8) + 16 * v7 + 9);
          goto LABEL_16;
        }
        return 68;
      case 177:
        uint64_t v2 = *((void *)a1 + 4);
        goto LABEL_14;
      case 178:
        uint64_t v2 = *(void *)(*(void *)(*((void *)a1 + 2) + 32) + 32) + 24 * *((int *)a1 + 12);
LABEL_14:
        a1 = *(unsigned __int8 **)(v2 + 8);
        continue;
      default:
        if (v1 == 36)
        {
          uint64_t v8 = (unsigned char *)*((void *)a1 + 1);
          int v9 = *v8;
          if (!*v8) {
            return 67;
          }
          int v10 = 0;
          uint64_t v11 = v8 + 1;
          uint64_t v12 = 67;
          while (2)
          {
            int v10 = byte_1B0DE1758[v9] | (v10 << 8);
            uint64_t v5 = 66;
            if (v10 > 1668050785)
            {
              if (v10 != 1668050786 && v10 != 1952807028) {
                goto LABEL_36;
              }
            }
            else if (v10 == 1651273570)
            {
              uint64_t v5 = 65;
              if (v12 != 67 && v12 != 69)
              {
LABEL_36:
                BOOL v16 = v10 == 1718382433 || v10 == 1919246700 || v10 == 1685026146;
                if (v16 && v12 == 67)
                {
                  uint64_t v5 = 69;
                }
                else
                {
                  uint64_t v5 = v12;
                  if ((v10 & 0xFFFFFF) == 0x696E74) {
                    return 68;
                  }
                }
              }
            }
            else if (v10 != 1667785074)
            {
              goto LABEL_36;
            }
            int v14 = *v11++;
            int v9 = v14;
            uint64_t v12 = v5;
            if (!v14) {
              return (char)v5;
            }
            continue;
          }
        }
LABEL_4:
        if ((*((_DWORD *)a1 + 1) & 0x42000) != 0) {
          goto LABEL_11;
        }
        if (v1 != 176) {
          goto LABEL_15;
        }
        int v1 = a1[2];
        if (v1 == 176) {
          goto LABEL_15;
        }
        goto LABEL_2;
    }
  }
}

uint64_t sub_1B0CB5720(uint64_t *a1, unsigned __int8 **a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a6;
  int v9 = a3;
  int v10 = a2;
  uint64_t v11 = a1;
  uint64_t v12 = *a2;
  int v13 = **a2;
  if (v13 == 53) {
    goto LABEL_4;
  }
  uint64_t v14 = a1[2];
  if (v13 == 50)
  {
    int v25 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v25)
    {
      sub_1B0D25510(v14, 75, 0, a6, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v25 + 1;
      uint64_t v26 = *(void *)(v14 + 136) + 40 * v25;
      *(void *)uint64_t v26 = 75;
      *(_DWORD *)(v26 + 8) = a6;
      *(void *)(v26 + 12) = 0;
      *(void *)(v26 + 28) = 0;
      *(void *)(v26 + 20) = 0;
      *(_DWORD *)(v26 + 36) = 0;
    }
    goto LABEL_5;
  }
  if (v13 == 45)
  {
LABEL_4:
    uint64_t v8 = sub_1B0C9E080(v11, *((unsigned __int8 **)v12 + 3), a6, a4, a5, a6, a7, a8);
    goto LABEL_5;
  }
  BOOL v27 = a5;
  int v28 = a4;
  uint64_t v29 = *((void *)a3 + 12);
  if ((*(unsigned char *)(v29 + 49) & 4) == 0)
  {
    uint64_t v30 = *(void *)(v29 + 32);
    if (v30)
    {
      if (*(unsigned char *)(*(void *)(v30 + 56) + (int)a4)) {
        BOOL v27 = a5 == 0;
      }
      else {
        BOOL v27 = a5;
      }
    }
  }
  if ((int)a4 < 1)
  {
LABEL_50:
    uint64_t v46 = *(unsigned __int16 *)(v29 + 52);
    unsigned int v155 = a6;
    if ((int)v46 <= (int)a4)
    {
      signed int v49 = 0;
    }
    else
    {
      uint64_t v47 = *(void *)(v29 + 64);
      unint64_t v48 = v46 - (int)a4;
      if (v48 >= 2)
      {
        int v51 = 0;
        int v52 = 0;
        unint64_t v50 = (v48 & 0xFFFFFFFFFFFFFFFELL) + (int)a4;
        int v53 = (unsigned __int8 ***)(v47 + 8 * (int)a4 + 8);
        unint64_t v54 = v48 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (**(v53 - 1) == v12) {
            ++v51;
          }
          if (**v53 == v12) {
            ++v52;
          }
          v53 += 2;
          v54 -= 2;
        }
        while (v54);
        signed int v49 = v52 + v51;
        if (v48 == (v48 & 0xFFFFFFFFFFFFFFFELL)) {
          goto LABEL_66;
        }
      }
      else
      {
        signed int v49 = 0;
        unint64_t v50 = (int)a4;
      }
      unint64_t v55 = (unsigned __int8 ***)(v47 + 8 * v50);
      uint64_t v56 = v46 - v50;
      do
      {
        uint64_t v57 = *v55++;
        if (*v57 == v12) {
          ++v49;
        }
        --v56;
      }
      while (v56);
    }
LABEL_66:
    unsigned int v165 = 0;
    int v58 = *((_DWORD *)v12 + 1);
    uint64_t v163 = v14;
    uint64_t v164 = v11;
    if ((v58 & 0x1000) == 0 || **(_DWORD **)(*((void *)v12 + 4) + 32) == 1)
    {
      int v59 = sub_1B0CC5010(v11, v12, 4, 0, 0, &v165);
      uint64_t v63 = v163;
      int v64 = v59;
      uint64_t v158 = 0;
      goto LABEL_138;
    }
    if ((v58 & 0x2000000) != 0 && *((_DWORD *)v12 + 11))
    {
      __int16 v65 = (unsigned __int8 *)*((void *)v12 + 2);
      int v66 = *v65;
      if (v66 == 176) {
        int v66 = v65[2];
      }
      if (v66 == 138)
      {
        __int16 v65 = (unsigned __int8 *)*((void *)v65 + 4);
      }
      else if (v66 != 177)
      {
        unsigned int v67 = 1;
LABEL_125:
        uint64_t v104 = *v11;
        if (v49 > (int)v67) {
          unsigned int v67 = v49;
        }
        size_t v105 = 4 * v67;
        if (v104) {
          uint64_t v106 = (void *)sub_1B0D05DC0(v104, 4 * v67);
        }
        else {
          uint64_t v106 = (void *)sub_1B0C7FC94(4 * v67);
        }
        long long v107 = v106;
        uint64_t v158 = v106;
        if (v106)
        {
          bzero(v106, v105);
          long long v107 = v158;
        }
        int v64 = sub_1B0CC5010(v11, v12, 4, 0, v107, &v165);
        goto LABEL_137;
      }
      unsigned int v67 = **((_DWORD **)v65 + 4);
      goto LABEL_125;
    }
    uint64_t v68 = *v11;
    uint64_t v69 = sub_1B0CAE048(*v11, v12, 0, 0);
    int v70 = v69;
    uint64_t v152 = v68;
    if (*(unsigned char *)(v68 + 103)) {
      goto LABEL_77;
    }
    uint64_t v72 = *((void *)v69 + 4);
    if (!v72) {
      goto LABEL_134;
    }
    uint64_t v150 = v28;
    BOOL v151 = v27;
    uint64_t v153 = v69;
    int v156 = v9;
    while (1)
    {
      if (v72 == *((void *)v70 + 4)) {
        unsigned int v73 = *(void **)(*((void *)v70 + 2) + 32);
      }
      else {
        unsigned int v73 = 0;
      }
      uint64_t v74 = *(void **)(v72 + 32);
      uint64_t v159 = v72;
      uint64_t v160 = v73;
      if (*(unsigned __int16 *)(v29 + 52) > v28)
      {
        uint64_t v75 = 0;
        int v76 = 0;
        uint64_t v77 = v150;
        while (1)
        {
          uint64_t v79 = *(void *)(*(void *)(v29 + 64) + 8 * v77);
          if (*(unsigned __int8 **)v79 != v12) {
            goto LABEL_89;
          }
          uint64_t v80 = *(int *)(v79 + 36) - 1;
          uint64_t v81 = &v74[3 * v80];
          long long v84 = (unsigned __int8 *)v81[1];
          long long v83 = v81 + 1;
          uint64_t v82 = v84;
          if (!v84) {
            goto LABEL_89;
          }
          if (v76)
          {
            int v85 = *v76;
            if (v76[1] > *v76)
            {
              *int v76 = v85 + 1;
              int v86 = &v76[6 * v85];
              *((void *)v86 + 2) = 0;
              *((void *)v86 + 3) = 0;
              *((void *)v86 + 1) = v82;
              *long long v83 = 0;
              if (!v73) {
                goto LABEL_89;
              }
              goto LABEL_99;
            }
            int v87 = sub_1B0D55B34(*v164, v76, v82);
          }
          else
          {
            int v87 = (int *)sub_1B0D55ACC((void *)*v164, v82);
          }
          unsigned int v73 = v160;
          int v76 = v87;
          *long long v83 = 0;
          if (!v160) {
            goto LABEL_89;
          }
LABEL_99:
          uint64_t v88 = &v73[3 * v80];
          unsigned int v91 = (unsigned __int8 *)v88[1];
          uint64_t v90 = v88 + 1;
          uint64_t v89 = v91;
          if (v75)
          {
            int v92 = *v75;
            if (v75[1] > *v75)
            {
              _DWORD *v75 = v92 + 1;
              long long v93 = &v75[6 * v92];
              v93[2] = 0;
              v93[3] = 0;
              v93[1] = v89;
              goto LABEL_88;
            }
            int v78 = sub_1B0D55B34(*v164, v75, v89);
          }
          else
          {
            int v78 = sub_1B0D55ACC((void *)*v164, v89);
          }
          unsigned int v73 = v160;
          uint64_t v75 = v78;
LABEL_88:
          *uint64_t v90 = 0;
LABEL_89:
          if (++v77 >= *(unsigned __int16 *)(v29 + 52)) {
            goto LABEL_104;
          }
        }
      }
      int v76 = 0;
      uint64_t v75 = 0;
LABEL_104:
      if (v74)
      {
        sub_1B0D270DC((void *)v152, v74);
        unsigned int v73 = v160;
      }
      uint64_t v11 = v164;
      if (v73)
      {
        sub_1B0D270DC((void *)v152, v73);
        *(void *)(*((void *)v153 + 2) + 32) = v75;
      }
      int v9 = v156;
      uint64_t v94 = v159;
      *(void *)(v159 + 32) = v76;
      if (v75 && *v75 == 1)
      {
        uint64_t v95 = *((void *)v75 + 1);
        *((void *)v75 + 1) = 0;
        uint64_t v96 = (unsigned __int8 *)*((void *)v153 + 2);
        if (v96) {
          sub_1B0D1DF88((void *)v152, v96);
        }
        *((void *)v153 + 2) = v95;
        uint64_t v94 = v159;
      }
      uint64_t v97 = *(unsigned int **)(v94 + 72);
      int v28 = a4;
      BOOL v27 = v151;
      int v70 = v153;
      if (!v97) {
        goto LABEL_80;
      }
      uint64_t v98 = *v97;
      if ((int)v98 < 1) {
        goto LABEL_80;
      }
      if (v98 == 1)
      {
        uint64_t v99 = 0;
      }
      else
      {
        uint64_t v99 = v98 & 0xFFFFFFFE;
        uint64_t v100 = v97 + 13;
        uint64_t v101 = v99;
        do
        {
          *(v100 - 12) = 0;
          *uint64_t v100 = 0;
          v100 += 24;
          v101 -= 2;
        }
        while (v101);
        if (v99 == v98) {
          goto LABEL_80;
        }
      }
      uint64_t v102 = v98 - v99;
      unsigned int v103 = &v97[6 * v99 + 7];
      do
      {
        *(_WORD *)unsigned int v103 = 0;
        v103 += 6;
        --v102;
      }
      while (v102);
LABEL_80:
      uint64_t v72 = *(void *)(v94 + 80);
      if (!v72)
      {
        if (!*(unsigned char *)(v152 + 103))
        {
LABEL_134:
          uint64_t v71 = sub_1B0C79680(*v11, 4 * v49);
          int v64 = sub_1B0CC5010(v11, v70, 4, 0, v71, &v165);
          *((_DWORD *)v12 + 11) = v165;
          goto LABEL_135;
        }
LABEL_77:
        uint64_t v71 = 0;
        int v64 = 5;
LABEL_135:
        uint64_t v158 = v71;
        if (v70) {
          sub_1B0D1DF88((void *)v152, (unsigned __int8 *)v70);
        }
LABEL_137:
        uint64_t v63 = v163;
LABEL_138:
        if (v64 == 4) {
          BOOL v108 = !v27;
        }
        else {
          BOOL v108 = v27;
        }
        if (v108) {
          uint64_t v109 = 32;
        }
        else {
          uint64_t v109 = 36;
        }
        unsigned int v110 = v165;
        int v111 = *(_DWORD *)(v63 + 144);
        if (*(_DWORD *)(v63 + 148) <= v111)
        {
          sub_1B0D25510(v63, v109, v165, 0, 0, v60, v61, v62);
        }
        else
        {
          *(_DWORD *)(v63 + 144) = v111 + 1;
          uint64_t v112 = *(void *)(v63 + 136) + 40 * v111;
          *(unsigned char *)uint64_t v112 = v109;
          *(_WORD *)(v112 + 2) = 0;
          *(_DWORD *)(v112 + 4) = v110;
          *(unsigned char *)(v112 + 1) = 0;
          *(_OWORD *)(v112 + 8) = 0u;
          *(_OWORD *)(v112 + 24) = 0u;
        }
        int v113 = *(_DWORD *)(v29 + 48);
        *(_DWORD *)(v29 + 48) = v113 | 0x800;
        if (!v9[20])
        {
          int v114 = *((_DWORD *)v11 + 17) - 1;
          *((_DWORD *)v11 + 17) = v114;
          v9[4] = v114;
        }
        int v161 = v64;
        if ((int)a4 >= 1 && (v113 & 0x100000) == 0) {
          *(_DWORD *)(v29 + 48) = v113 | 0x40800;
        }
        uint64_t v115 = v9[20];
        uint64_t v116 = v115 + v49;
        v9[20] = v116;
        long long v117 = (uint64_t ***)v10[1];
        uint64_t v118 = *v117;
        uint64_t v119 = (const void *)*((void *)v9 + 11);
        uint64_t v120 = 20 * v116;
        unsigned int v121 = (uint64_t *)sub_1B0D05DC0(***v117, 20 * v116 + 16);
        if (v121)
        {
          uint64_t v157 = v9;
          uint64_t *v121 = (uint64_t)v118[11];
          v121[1] = v120;
          v118[11] = v121;
          int v125 = v121 + 2;
          if (v119) {
            memcpy(v121 + 2, v119, *((void *)v119 - 1));
          }
          *((void *)v157 + 11) = v125;
          uint64_t v126 = *(unsigned __int16 *)(v29 + 52);
          uint64_t v127 = v163;
          if ((int)v126 > (int)a4)
          {
            uint64_t v128 = 0;
            int v129 = 0;
            uint64_t v130 = (char *)v125 + 20 * (int)v115;
            uint64_t v131 = v155;
            if (v108) {
              char v132 = 38;
            }
            else {
              char v132 = 39;
            }
            char v154 = v132;
            uint64_t v133 = (int)a4;
            while (2)
            {
              if (**(unsigned __int8 ***)(*(void *)(v29 + 64) + 8 * v133) != v12) {
                goto LABEL_162;
              }
              if (v161 == 1)
              {
                unsigned int v134 = v165;
                int v135 = *(_DWORD *)(v127 + 144);
                if (*(_DWORD *)(v127 + 148) > v135)
                {
                  *(_DWORD *)(v127 + 144) = v135 + 1;
                  uint64_t v136 = *(void *)(v127 + 136) + 40 * v135;
                  *(_DWORD *)uint64_t v136 = 135;
                  *(_DWORD *)(v136 + 4) = v134;
                  *(_DWORD *)(v136 + 8) = v131;
                  *(void *)(v136 + 12) = 0;
                  *(void *)(v136 + 28) = 0;
                  *(void *)(v136 + 20) = 0;
                  *(_DWORD *)(v136 + 36) = 0;
                  goto LABEL_175;
                }
                uint64_t v138 = v127;
                uint64_t v139 = 135;
                uint64_t v140 = v165;
                uint64_t v137 = v131;
                uint64_t v141 = 0;
LABEL_174:
                int v135 = sub_1B0D25510(v138, v139, v140, v137, v141, v122, v123, v124);
                uint64_t v127 = v163;
              }
              else
              {
                if (v158) {
                  uint64_t v137 = *((unsigned int *)v158 + v129++);
                }
                else {
                  uint64_t v137 = 0;
                }
                unsigned int v134 = v165;
                int v135 = *(_DWORD *)(v127 + 144);
                if (*(_DWORD *)(v127 + 148) <= v135)
                {
                  uint64_t v138 = v127;
                  uint64_t v139 = 94;
                  uint64_t v140 = v165;
                  uint64_t v141 = v131;
                  goto LABEL_174;
                }
                *(_DWORD *)(v127 + 144) = v135 + 1;
                uint64_t v142 = *(void *)(v127 + 136) + 40 * v135;
                *(_DWORD *)uint64_t v142 = 94;
                *(_DWORD *)(v142 + 4) = v134;
                *(_DWORD *)(v142 + 8) = v137;
                *(_DWORD *)(v142 + 12) = v131;
                *(void *)(v142 + 24) = 0;
                *(void *)(v142 + 32) = 0;
                *(void *)(v142 + 16) = 0;
              }
LABEL_175:
              *((_DWORD *)v130 + 1) = v135;
              int v143 = *(_DWORD *)(v127 + 144);
              if (*(_DWORD *)(v127 + 148) <= v143)
              {
                sub_1B0D25510(v127, 50, v131, 0, 0, v122, v123, v124);
                uint64_t v127 = v163;
                if (v128) {
                  goto LABEL_160;
                }
LABEL_179:
                *(_DWORD *)uint64_t v130 = v134;
                v130[16] = v154;
                if ((int)a4 < 1)
                {
                  *((_DWORD *)v130 + 3) = 0;
                }
                else
                {
                  *((_DWORD *)v130 + 2) = v155 - a4;
                  *((_DWORD *)v130 + 3) = a4;
                }
              }
              else
              {
                *(_DWORD *)(v127 + 144) = v143 + 1;
                uint64_t v144 = *(void *)(v127 + 136) + 40 * v143;
                *(_DWORD *)uint64_t v144 = 50;
                *(_DWORD *)(v144 + 4) = v131;
                *(_OWORD *)(v144 + 8) = 0u;
                *(_OWORD *)(v144 + 24) = 0u;
                if (!v128) {
                  goto LABEL_179;
                }
LABEL_160:
                v130[16] = -72;
              }
              v130 += 20;
              uint64_t v126 = *(unsigned __int16 *)(v29 + 52);
LABEL_162:
              ++v133;
              --v128;
              uint64_t v131 = (v131 + 1);
              if (v133 >= v126) {
                break;
              }
              continue;
            }
          }
          uint64_t v8 = v155;
          int v9 = v157;
          int v145 = v164;
          if ((int)a4 >= 1 && (*(_DWORD *)(v29 + 48) & 0x100400) == 0)
          {
            uint64_t v146 = v157[2];
            int v147 = *(_DWORD *)(v127 + 144);
            if (*(_DWORD *)(v127 + 148) <= v147)
            {
              sub_1B0D25510(v127, 125, v146, 0, a4, v122, v123, v124);
              int v149 = v158;
              if (!v158)
              {
LABEL_5:
                if ((*(unsigned char *)(*((void *)v9 + 12) + 50) & 0x20) == 0 || (*((_WORD *)v10 + 10) & 0x800) == 0)
                {
                  uint64_t v15 = (_WORD *)v10 + 9;
                  __int16 v16 = *((_WORD *)v10 + 9);
                  if ((v16 & 4) == 0)
                  {
                    int v17 = 0;
                    int v18 = *v9;
                    do
                    {
                      if (v18 && ((*v10)[4] & 1) == 0) {
                        break;
                      }
                      if (((unint64_t)v10[6] & *((void *)v9 + 13)) != 0) {
                        break;
                      }
                      BOOL v19 = !v17 || (v16 & 0x400) == 0;
                      __int16 v20 = v19 ? 4 : 512;
                      *uint64_t v15 = v20 | v16;
                      unsigned int v21 = *((_DWORD *)v10 + 6);
                      if ((v21 & 0x80000000) != 0) {
                        break;
                      }
                      uint64_t v22 = *((void *)v10[1] + 4);
                      uint64_t v23 = v22 + 56 * v21;
                      char v24 = *(unsigned char *)(v23 + 22) - 1;
                      *(unsigned char *)(v23 + 22) = v24;
                      if (v24) {
                        break;
                      }
                      int v10 = (unsigned __int8 **)(v22 + 56 * v21);
                      uint64_t v15 = (_WORD *)v10 + 9;
                      __int16 v16 = *((_WORD *)v10 + 9);
                      --v17;
                    }
                    while ((v16 & 4) == 0);
                  }
                }
                return v8;
              }
            }
            else
            {
              *(_DWORD *)(v127 + 144) = v147 + 1;
              uint64_t v148 = *(void *)(v127 + 136) + 40 * v147;
              *(_DWORD *)uint64_t v148 = 125;
              *(_DWORD *)(v148 + 4) = v146;
              *(_DWORD *)(v148 + 8) = 0;
              *(_DWORD *)(v148 + 12) = a4;
              *(void *)(v148 + 24) = 0;
              *(void *)(v148 + 32) = 0;
              *(void *)(v148 + 16) = 0;
              int v149 = v158;
              if (!v158) {
                goto LABEL_5;
              }
            }
LABEL_189:
            sub_1B0D05C10((void *)*v145, v149);
            goto LABEL_5;
          }
        }
        else
        {
          *((void *)v9 + 11) = 0;
          v9[20] = 0;
          uint64_t v8 = v155;
          int v145 = v164;
        }
        int v149 = v158;
        if (!v158) {
          goto LABEL_5;
        }
        goto LABEL_189;
      }
    }
  }
  uint64_t v31 = 0;
  BOOL v32 = 1;
  while (1)
  {
    unsigned int v33 = *(unsigned __int8 ***)(*(void *)(v29 + 64) + 8 * v31);
    if (v33)
    {
      if (*v33 == v12) {
        break;
      }
    }
    BOOL v32 = ++v31 < (unint64_t)a4;
    if (a4 == v31) {
      goto LABEL_50;
    }
  }
  uint64_t v34 = (_WORD *)a2 + 9;
  __int16 v35 = *((_WORD *)a2 + 9);
  if ((v35 & 4) == 0)
  {
    int v36 = 0;
    int v37 = *a3;
    int v38 = a2;
    do
    {
      if (v37 && ((*v38)[4] & 1) == 0) {
        break;
      }
      if (((unint64_t)v38[6] & *((void *)a3 + 13)) != 0) {
        break;
      }
      BOOL v39 = !v36 || (v35 & 0x400) == 0;
      __int16 v40 = v39 ? 4 : 512;
      *uint64_t v34 = v40 | v35;
      unsigned int v41 = *((_DWORD *)v38 + 6);
      if ((v41 & 0x80000000) != 0) {
        break;
      }
      uint64_t v42 = *((void *)v38[1] + 4);
      uint64_t v43 = v42 + 56 * v41;
      char v44 = *(unsigned char *)(v43 + 22) - 1;
      *(unsigned char *)(v43 + 22) = v44;
      if (v44) {
        break;
      }
      int v38 = (unsigned __int8 **)(v42 + 56 * v41);
      uint64_t v34 = (_WORD *)v38 + 9;
      __int16 v35 = *((_WORD *)v38 + 9);
      --v36;
    }
    while ((v35 & 4) == 0);
    if (!v32) {
      goto LABEL_5;
    }
  }
  return v8;
}

uint64_t sub_1B0CB6230(unsigned int a1, char *a2, uint64_t *a3)
{
  return sub_1B0D1B630(a1, a2, a3, 0);
}

uint64_t sub_1B0CB6238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *(_WORD *)(a1 + 20);
  __int16 v4 = *(_WORD *)(a2 + 20);
  if ((v4 | v3)) {
    return (v4 & 1) - (v3 & 1u);
  }
  if (((v4 | v3) & 0x2C) == 0)
  {
    if (((v4 | v3) & 2) != 0)
    {
      if ((v3 & 2) == 0) {
        return 1;
      }
      if ((v4 & 2) == 0) {
        return 0xFFFFFFFFLL;
      }
      if (a3) {
        return sub_1B0D1D834((long long *)a1, (long long *)a2, a3, 0);
      }
    }
    return sub_1B0D1D9EC(a1, a2);
  }
  if ((v4 & v3 & 0x24) != 0) {
    goto LABEL_4;
  }
  if ((v4 & v3 & 8) != 0)
  {
    if (*(double *)a1 >= *(double *)a2) {
      return *(double *)a1 > *(double *)a2;
    }
    else {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    if ((v3 & 0x24) != 0)
    {
      if ((v4 & 8) == 0)
      {
        if ((v4 & 0x24) != 0)
        {
LABEL_4:
          if (*(void *)a1 >= *(void *)a2) {
            return *(void *)a1 > *(void *)a2;
          }
          else {
            return 0xFFFFFFFFLL;
          }
        }
        return 0xFFFFFFFFLL;
      }
      double v8 = *(double *)a2;
      if (*(double *)a2 >= -9.22337204e18)
      {
        if (v8 >= 9.22337204e18) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v9 = *(void *)a1;
        if (*(void *)a1 < (uint64_t)v8) {
          return 0xFFFFFFFFLL;
        }
        if (*(void *)a1 <= (uint64_t)v8)
        {
          if (v8 <= (double)v9) {
            return v8 < (double)v9;
          }
          return 0xFFFFFFFFLL;
        }
      }
      return 1;
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    if ((v4 & 0x24) == 0) {
      return 0xFFFFFFFFLL;
    }
    double v6 = *(double *)a1;
    if (*(double *)a1 < -9.22337204e18) {
      return 0xFFFFFFFFLL;
    }
    if (v6 >= 9.22337204e18) {
      return 1;
    }
    uint64_t v7 = *(void *)a2;
    if (*(void *)a2 < (uint64_t)v6) {
      return 1;
    }
    if (*(void *)a2 > (uint64_t)v6) {
      return 0xFFFFFFFFLL;
    }
    if (v6 > (double)v7) {
      return 1;
    }
    if (v6 >= (double)v7) {
      return 0;
    }
    else {
      return 0xFFFFFFFFLL;
    }
  }
}

uint64_t sub_1B0CB63A4(int a1, int a2, void *__s1, int a4, void *__s2)
{
  unsigned int v5 = a2 - a4;
  if (a2 >= a4) {
    int v6 = a4;
  }
  else {
    int v6 = a2;
  }
  LODWORD(result) = memcmp(__s1, __s2, v6);
  if (result) {
    return result;
  }
  else {
    return v5;
  }
}

uint64_t sub_1B0CB63E0(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  *(_WORD *)(a4 + 20) = 1;
  if (*(unsigned int *)(*(void *)(a1 + 32) + 64) * (unint64_t)*(unsigned int *)(*(void *)(a1 + 32) + 52) >= a3 + a2)
  {
    if (*(_DWORD *)(a4 + 32) >= (signed int)(a3 + 1))
    {
      int v10 = *(char **)(a4 + 40);
      *(void *)(a4 + 8) = v10;
      *(_WORD *)(a4 + 20) = 1;
    }
    else
    {
      uint64_t v9 = sub_1B0CA0CF0(a4, a3 + 1, 0);
      if (v9) {
        return v9;
      }
      int v10 = *(char **)(a4 + 8);
    }
    uint64_t v9 = sub_1B0CD1CD0(a1, a2, a3, v10, 0);
    if (v9)
    {
      if ((*(_WORD *)(a4 + 20) & 0x9000) != 0 || *(_DWORD *)(a4 + 32)) {
        sub_1B0D180E4(a4);
      }
    }
    else
    {
      *(unsigned char *)(*(void *)(a4 + 8) + a3) = 0;
      *(_WORD *)(a4 + 20) = 16;
      *(_DWORD *)(a4 + 16) = a3;
    }
    return v9;
  }

  return sub_1B0D1045C(90398);
}

uint64_t sub_1B0CB6500(uint64_t a1, uint64_t a2, void *a3)
{
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  memset(v21, 0, sizeof(v21));
  sub_1B0D146DC(a2);
  unsigned int v6 = *(_DWORD *)(a2 + 64);
  WORD2(v23) = 0;
  *((void *)&v23 + 1) = a1;
  LODWORD(v24) = 0;
  int v7 = *(unsigned __int16 *)(a2 + 68);
  double v8 = *(char **)(a2 + 56);
  int v9 = *(_DWORD *)(*(void *)(a2 + 136) + 88) - v8;
  if (v7 > v9) {
    int v7 = v9 & ~(v9 >> 31);
  }
  *((void *)&v22 + 1) = *(void *)(a2 + 56);
  if (v7 >= v6)
  {
    WORD2(v23) = 16400;
    LODWORD(v23) = v6;
  }
  else
  {
    uint64_t result = sub_1B0CB63E0(a2, 0, v6, (uint64_t)&v22);
    if (result) {
      return result;
    }
    double v8 = (char *)*((void *)&v22 + 1);
  }
  unsigned int v11 = *v8;
  if (*v8 < 0)
  {
    int v12 = v8[1];
    if (v8[1] < 0)
    {
      int v13 = v8[2];
      if (v13 < 0)
      {
        unint64_t v26 = 0;
        sub_1B0CAD43C(v8, &v26);
        unsigned int v11 = v26;
        if (HIDWORD(v26))
        {
          unsigned int v11 = -1;
          goto LABEL_14;
        }
      }
      else
      {
        unsigned int v11 = v13 & 0x7F | (v11 << 14) & 0x1FC07F | ((v12 & 0x7F) << 7);
      }
    }
    else
    {
      unsigned int v11 = ((v11 & 0x7F) << 7) | v12;
    }
  }
  if (v11 < 3)
  {
LABEL_30:
    if (v24) {
      sub_1B0D180E4((uint64_t)&v22);
    }
    return sub_1B0D1045C(96350);
  }
LABEL_14:
  unsigned int v14 = v23;
  if (v11 > v23) {
    goto LABEL_30;
  }
  uint64_t v15 = &v8[v11 - 1];
  int v16 = *v15;
  if (*v15 < 0)
  {
    int v17 = v15[1];
    if (v15[1] < 0)
    {
      int v18 = v15[2];
      if (v18 < 0)
      {
        unint64_t v26 = 0;
        sub_1B0CAD43C(v15, &v26);
        if (HIDWORD(v26)) {
          int v16 = -1;
        }
        else {
          int v16 = v26;
        }
      }
      else
      {
        int v16 = v18 & 0x7F | (v16 << 14) & 0x1FC07F | ((v17 & 0x7F) << 7);
      }
    }
    else
    {
      int v16 = ((v16 & 0x7F) << 7) | v17;
    }
  }
  if (v16 == 7 || (v16 - 10) < 0xFFFFFFF7) {
    goto LABEL_30;
  }
  int v20 = byte_1B0DE2184[v16];
  if (v14 < v11 + v20) {
    goto LABEL_30;
  }
  sub_1B0CAD5D4(&v8[v14 - v20], v16, (uint64_t)v21);
  *a3 = *(void *)&v21[0];
  if (v24) {
    sub_1B0D180E4((uint64_t)&v22);
  }
  return 0;
}

uint64_t sub_1B0CB6710(uint64_t a1, int a2, const char **a3, const char **a4)
{
  unsigned int v5 = a3;
  unsigned int v9 = *(_DWORD *)(a1 + 16);
  int v8 = *(_DWORD *)(a1 + 20);
  if (a3) {
    BOOL v10 = v8 == 0;
  }
  else {
    BOOL v10 = 0;
  }
  char v11 = v10;
  int v12 = a2 << v11;
  if (v12 + *(_DWORD *)(a1 + 28) > v9)
  {
    *(_DWORD *)(a1 + 16) = v12 + 2 * v9;
    uint64_t v13 = sub_1B0C8E1B8(*(void *)a1, 8 * (v12 + 2 * v9));
    if (!v13)
    {
LABEL_33:
      *(_DWORD *)(a1 + 32) = 7;
      return 1;
    }
    *(void *)a1 = v13;
    int v8 = *(_DWORD *)(a1 + 20);
  }
  if (v8)
  {
    if (*(_DWORD *)(a1 + 24) != a2)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      if (v14)
      {
        uint64_t v15 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v14);
          --qword_1EB220150;
          off_1EB21C9E8(v14);
          uint64_t v14 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_19;
          }
          uint64_t v15 = &xmmword_1EB21CA50;
        }
        (*v15)(v14);
      }
LABEL_19:
      *(void *)(a1 + 8) = sqlite3_mprintf("sqlite3_get_table() called with two or more incompatible queries");
      uint64_t result = 1;
      *(_DWORD *)(a1 + 32) = 1;
      return result;
    }
    goto LABEL_24;
  }
  *(_DWORD *)(a1 + 24) = a2;
  if (a2 >= 1)
  {
    uint64_t v17 = a2;
    do
    {
      int v18 = sqlite3_mprintf("%s", *a4);
      if (!v18) {
        goto LABEL_33;
      }
      uint64_t v19 = *(void *)a1;
      uint64_t v20 = *(unsigned int *)(a1 + 28);
      *(_DWORD *)(a1 + 28) = v20 + 1;
      *(void *)(v19 + 8 * v20) = v18;
      ++a4;
    }
    while (--v17);
  }
LABEL_24:
  if (!v5) {
    return 0;
  }
  if (a2 >= 1)
  {
    for (uint64_t i = a2; i; --i)
    {
      if (*v5)
      {
        int v25 = strlen(*v5);
        if (sqlite3_initialize()) {
          goto LABEL_33;
        }
        uint64_t v26 = (v25 & 0x3FFFFFFF) + 1;
        BOOL v27 = (void *)sub_1B0C7FC94(v26);
        if (!v27) {
          goto LABEL_33;
        }
        long long v22 = v27;
        memcpy(v27, *v5, v26);
      }
      else
      {
        long long v22 = 0;
      }
      uint64_t v23 = *(void *)a1;
      uint64_t v24 = *(unsigned int *)(a1 + 28);
      *(_DWORD *)(a1 + 28) = v24 + 1;
      *(void *)(v23 + 8 * v24) = v22;
      ++v5;
    }
  }
  uint64_t result = 0;
  ++*(_DWORD *)(a1 + 20);
  return result;
}

char *sqlite3_mprintf(const char *a1, ...)
{
  va_start(va, a1);
  if (sqlite3_initialize()) {
    return 0;
  }
  else {
    return sqlite3_vmprintf(a1, va);
  }
}

void sqlite3_free_table(char **result)
{
  if (!result) {
    return;
  }
  int v1 = result;
  uint64_t v2 = result - 1;
  if ((int)*(result - 1) >= 2)
  {
    for (uint64_t i = *(result - 1) - 1; i; --i)
    {
      __int16 v4 = *v1;
      if (*v1)
      {
        unsigned int v5 = (uint64_t (**)(void))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40();
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v4);
          --qword_1EB220150;
          off_1EB21C9E8(v4);
          __int16 v4 = (char *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_5;
          }
          unsigned int v5 = &xmmword_1EB21CA50;
        }
        ((void (*)(char *))*v5)(v4);
      }
LABEL_5:
      ++v1;
    }
  }
  unsigned int v6 = (uint64_t (**)(void))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_17;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40();
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v2);
  --qword_1EB220150;
  off_1EB21C9E8(v2);
  uint64_t v2 = (char **)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v6 = &xmmword_1EB21CA50;
LABEL_17:
    int v7 = *v6;
    ((void (*)(char **))v7)(v2);
  }
}

void sub_1B0CB6B0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  uint64_t v10 = *a1;
  char v11 = *(uint64_t (**)(void, uint64_t, const char *, void, void, uint64_t))(*a1 + 528);
  if (v11 && !*(unsigned char *)(v10 + 197) && !*((unsigned char *)a1 + 302))
  {
    int v22 = v11(*(void *)(v10 + 536), 22, "BEGIN", 0, 0, a1[46]);
    if (v22 == 1)
    {
      int v23 = 23;
      uint64_t v24 = "not authorized";
    }
    else
    {
      if ((v22 & 0xFFFFFFFD) == 0)
      {
        if (v22) {
          return;
        }
        goto LABEL_4;
      }
      int v23 = 1;
      uint64_t v24 = "authorizer malfunction";
    }
    sub_1B0CEF2BC((uint64_t)a1, v24, a3, a4, a5, a6, a7, a8, v25);
    *((_DWORD *)a1 + 6) = v23;
    return;
  }
LABEL_4:
  uint64_t v12 = a1[2];
  if (v12) {
    goto LABEL_10;
  }
  if (!a1[21] && (*(unsigned char *)(*a1 + 96) & 8) == 0) {
    *((unsigned char *)a1 + 35) = 1;
  }
  uint64_t v12 = sub_1B0CEF480(a1, a2, a3, a4, a5, a6, a7, a8);
  if (v12)
  {
LABEL_10:
    if (v8 != 7 && *(int *)(v10 + 40) >= 1)
    {
      uint64_t v13 = 0;
      if (v8 == 9) {
        uint64_t v14 = 2;
      }
      else {
        uint64_t v14 = 1;
      }
      uint64_t v15 = 8;
      do
      {
        uint64_t v16 = *(void *)(*(void *)(v10 + 32) + v15);
        if (v16 && (*(_WORD *)(*(void *)(v16 + 8) + 40) & 1) != 0) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = v14;
        }
        int v18 = *(_DWORD *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) <= v18)
        {
          sub_1B0D25510(v12, 2, v13, v17, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v12 + 144) = v18 + 1;
          uint64_t v19 = *(void *)(v12 + 136) + 40 * v18;
          *(_DWORD *)uint64_t v19 = 2;
          *(_DWORD *)(v19 + 4) = v13;
          *(_DWORD *)(v19 + 8) = v17;
          *(void *)(v19 + 12) = 0;
          *(void *)(v19 + 28) = 0;
          *(void *)(v19 + 20) = 0;
          *(_DWORD *)(v19 + 36) = 0;
        }
        *(_DWORD *)(v12 + 272) |= 1 << v13;
        if (v13 != 1 && *(unsigned char *)(*(void *)(*(void *)(*(void *)v12 + 32) + v15) + 17)) {
          *(_DWORD *)(v12 + 276) |= 1 << v13;
        }
        ++v13;
        v15 += 32;
      }
      while (v13 < *(int *)(v10 + 40));
    }
    int v20 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v20)
    {
      sub_1B0D25510(v12, 1, 0, 0, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v20 + 1;
      uint64_t v21 = *(void *)(v12 + 136) + 40 * v20;
      *(unsigned char *)uint64_t v21 = 1;
      *(_OWORD *)(v21 + 1) = 0u;
      *(_OWORD *)(v21 + 17) = 0u;
      *(void *)(v21 + 32) = 0;
    }
  }
}

uint64_t sub_1B0CB6D6C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 64)) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 112);
  unsigned int v6 = *(_DWORD **)(v5 + 40);
  if ((*(_WORD *)(v5 + 52) & 4) == 0 || v6[8] < *(_DWORD *)(v5 + 48))
  {
    uint64_t result = v6[12];
    if (result) {
      return result;
    }
    uint64_t v7 = *(void *)(v3 + 112);
    if (v6[46] <= v6[50])
    {
      uint64_t result = sub_1B0CBD7E0(v7);
      if (result) {
        return result;
      }
    }
    else
    {
      uint64_t result = sub_1B0D133D0(v7);
      if (result) {
        return result;
      }
    }
    goto LABEL_13;
  }
  if (!v6[32] || (uint64_t result = sub_1B0D0F4D4(*(void *)(v3 + 112)), !result))
  {
LABEL_13:
    strcpy((char *)v4, "SQLite format 3");
    *(unsigned char *)(v4 + 16) = BYTE1(*(_DWORD *)(a1 + 52));
    *(unsigned char *)(v4 + 17) = *(_WORD *)(a1 + 54);
    *(_WORD *)(v4 + 18) = 257;
    *(unsigned char *)(v4 + 20) = *(_DWORD *)(a1 + 52) - *(_DWORD *)(a1 + 56);
    *(_WORD *)(v4 + 21) = 8256;
    *(unsigned char *)(v4 + 23) = 32;
    *(_OWORD *)(v4 + 24) = 0u;
    *(_OWORD *)(v4 + 40) = 0u;
    *(_OWORD *)(v4 + 56) = 0u;
    *(_OWORD *)(v4 + 72) = 0u;
    *(_OWORD *)(v4 + 84) = 0u;
    sub_1B0CC63D4(v3, 13);
    uint64_t result = 0;
    *(_WORD *)(a1 + 40) |= 2u;
    char v8 = *(unsigned char *)(a1 + 33);
    *(_WORD *)(v4 + 52) = 0;
    *(unsigned char *)(v4 + 54) = 0;
    *(unsigned char *)(v4 + 55) = v8;
    char v9 = *(unsigned char *)(a1 + 34);
    *(_WORD *)(v4 + 64) = 0;
    *(unsigned char *)(v4 + 66) = 0;
    *(unsigned char *)(v4 + 67) = v9;
    *(_DWORD *)(a1 + 64) = 1;
    *(unsigned char *)(v4 + 31) = 1;
  }
  return result;
}

void *sub_1B0CB6EBC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8 = (unsigned int **)a6;
  uint64_t v10 = a3;
  *(void *)uint64_t v340 = 0;
  uint64_t v339 = 0;
  long long v337 = 0u;
  long long v338 = 0u;
  int v336 = 0;
  uint64_t v12 = *(void *)a1;
  if (*(_DWORD *)(a1 + 48))
  {
    uint64_t result = sub_1B0CA115C(*(void **)a1, (void *)a2);
    uint64_t v14 = 0;
    goto LABEL_44;
  }
  unsigned int v15 = a5;
  DWORD1(v337) = 0;
  if (a3 && (*(unsigned char *)(a3 + 5) & 2) != 0 && !*(void *)(a3 + 80))
  {
    uint64_t v331 = *(int **)(a3 + 32);
    *(void *)(a3 + 32) = 0;
    sub_1B0CA0FA8((void *)v12, a3, 1);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v331 = 0;
  }
  uint64_t v23 = sub_1B0D38D78(a1, 0, a2 + 8, (uint64_t)a4, a5, a6, a7, a8);
  uint64_t v24 = *(void *)(a2 + 40);
  if (v24)
  {
    char v25 = *(void **)a1;
    if (*(void *)(*(void *)a1 + 816) || (int v26 = *(_DWORD *)(v24 + 44) - 1, (*(_DWORD *)(v24 + 44) = v26) == 0)) {
      sub_1B0D26BF8(v25, (void *)v24);
    }
  }
  *(void *)(a2 + 40) = v23;
  *(_WORD *)(a2 + 69) |= 0x200u;
  if (!v23) {
    goto LABEL_41;
  }
  ++*(_DWORD *)(v23 + 44);
  if ((*(_WORD *)(a2 + 69) & 2) == 0) {
    goto LABEL_23;
  }
  uint64_t v27 = *(void *)(v23 + 16);
  if (!v27)
  {
LABEL_21:
    sub_1B0CEF2BC(a1, "no such index: %s", v17, v18, v19, v20, v21, v22, *(void *)(a2 + 96));
    goto LABEL_22;
  }
LABEL_14:
  int v28 = *(unsigned char **)v27;
  for (uint64_t i = *(unsigned __int8 **)(a2 + 96); ; ++i)
  {
    uint64_t v30 = *v28;
    uint64_t v31 = *i;
    if (v30 == v31) {
      break;
    }
    if (byte_1B0DE1758[v30] != byte_1B0DE1758[v31])
    {
      uint64_t v27 = *(void *)(v27 + 40);
      if (!v27) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }
LABEL_16:
    ++v28;
  }
  if (*v28) {
    goto LABEL_16;
  }
  *(void *)(a2 + 104) = v27;
LABEL_23:
  uint64_t v32 = *(void *)(v23 + 96);
  uint64_t v33 = *(void *)(v12 + 32);
  if (v32)
  {
    uint64_t v34 = (uint64_t *)(v33 + 24);
    LODWORD(v35) = -1;
    do
    {
      uint64_t v36 = *v34;
      v34 += 4;
      uint64_t v35 = (v35 + 1);
    }
    while (v36 != v32);
  }
  else
  {
    uint64_t v35 = 4294934528;
  }
  uint64_t v37 = *(void *)a1;
  int v38 = *(uint64_t (**)(void, uint64_t, void, void, void, void))(*(void *)a1 + 528);
  if (v38 && !*(unsigned char *)(v37 + 197) && !*(unsigned char *)(a1 + 302))
  {
    int v78 = v38(*(void *)(v37 + 536), 18, *(void *)v23, 0, *(void *)(v33 + 32 * (int)v35), *(void *)(a1 + 368));
    if (v78 == 1)
    {
      uint64_t v79 = v331;
      int v80 = 23;
      uint64_t v81 = "not authorized";
    }
    else
    {
      if ((v78 & 0xFFFFFFFD) == 0)
      {
        if (!v78) {
          goto LABEL_31;
        }
        goto LABEL_41;
      }
      uint64_t v79 = v331;
      int v80 = 1;
      uint64_t v81 = "authorizer malfunction";
    }
    uint64_t v331 = v79;
    sub_1B0CEF2BC(a1, v81, v17, v18, v19, v20, v21, v22, v297);
    uint64_t v14 = 0;
    *(_DWORD *)(a1 + 24) = v80;
    goto LABEL_42;
  }
LABEL_31:
  int v328 = *(_DWORD *)(v23 + 48);
  if ((*(void *)(v23 + 88)
     || (uint64_t v40 = *(void *)(*(void *)(*(void *)a1 + 32) + 56)) != 0 && *(void *)(v40 + 64))
    && !*(unsigned char *)(a1 + 221))
  {
    uint64_t v39 = (uint64_t)sub_1B0D5674C((void *)a1, (unsigned __int8 **)v23, 127, 0, &v336, v20, v21, v22);
  }
  else
  {
    uint64_t v39 = 0;
    int v336 = 0;
  }
  int v323 = *(unsigned __int8 *)(v23 + 63);
  if ((v323 == 1 || *(__int16 *)(v23 + 54) <= 0) && sub_1B0D393F0(a1, v23, v17, v18, v19, v20, v21, v22)
    || sub_1B0D56154(a1, v23, v39, v18, v19, v20, v21, v22))
  {
    goto LABEL_41;
  }
  uint64_t v321 = v39;
  uint64_t v53 = *(void *)(a1 + 16);
  if (!v53)
  {
    if (!*(void *)(a1 + 168) && (*(unsigned char *)(*(void *)a1 + 96) & 8) == 0) {
      *(unsigned char *)(a1 + 35) = 1;
    }
    uint64_t v53 = sub_1B0CEF480((uint64_t *)a1, v41, v42, v43, v44, v45, v46, v47);
    if (!v53) {
      goto LABEL_41;
    }
  }
  unsigned int v319 = v15;
  int v320 = v8;
  if (!*(unsigned char *)(a1 + 30)) {
    *(_WORD *)(v53 + 268) |= 0x10u;
  }
  uint64_t v322 = v53;
  uint64_t v54 = v39;
  BOOL v55 = (v10 | v39) != 0;
  if (*(void *)(a1 + 168)) {
    uint64_t v56 = *(void *)(a1 + 168);
  }
  else {
    uint64_t v56 = a1;
  }
  int v57 = *(_DWORD *)(v56 + 124);
  int v58 = 1 << v35;
  if ((v57 & (1 << v35)) == 0)
  {
    *(_DWORD *)(v56 + 124) = v57 | v58;
    if (v35 == 1)
    {
      sub_1B0D0E7A4(v56);
      uint64_t v54 = v321;
    }
  }
  *(_DWORD *)(v56 + 120) |= v58;
  *(unsigned char *)(v56 + 32) |= v55;
  if (!a4 && v10 && !v54 && sub_1B0CD96FC(a1, v23, v10, v319, v35, v45, v46, v47))
  {
    uint64_t v66 = 0;
    uint64_t v14 = 0;
    char v8 = v320;
LABEL_77:
    if (!*(unsigned char *)(a1 + 30) && !*(void *)(a1 + 176) && *(void *)(a1 + 160)) {
      sub_1B0D5A764((uint64_t *)a1, v59, v60, v61, v62, v63, v64, v65);
    }
    if (v66) {
      sub_1B0D56618(v322, v66, "rows inserted", v61, v62, v63, v64, v65);
    }
    goto LABEL_42;
  }
  unsigned int v67 = sub_1B0D5C73C(a1, v35, v23);
  int v72 = *(_DWORD *)(a1 + 56);
  unsigned int v73 = v72 + 1;
  int v74 = v72 + 1 + *(__int16 *)(v23 + 54);
  *(_DWORD *)(a1 + 56) = v74;
  unsigned int v316 = v67;
  unsigned int v317 = v72 + 1;
  char v8 = v320;
  if (*(unsigned char *)(v23 + 63) == 1)
  {
    unsigned int v73 = v72 + 2;
    *(_DWORD *)(a1 + 56) = v74 + 1;
  }
  uint64_t v75 = (*(_WORD *)(v23 + 48) & 0x440) == 0;
  if (!a4 || (*((unsigned char *)a4 + 4) = 1, uint64_t v76 = *a4, (int)v76 < 1))
  {
    uint64_t v82 = 0xFFFFFFFFLL;
LABEL_92:
    unsigned int v315 = v73;
    unsigned int v318 = v73 + 1;
    if (!v10)
    {
      long long v335 = 0u;
      long long v334 = 0u;
      long long v333 = 0u;
      uint64_t v332 = a1;
      if (v331)
      {
        uint64_t v102 = v82;
        LODWORD(v103) = *v331;
        int v104 = sub_1B0D374CC((uint64_t)&v332, v331, v68, v69, v70, v71, v82, v75);
        char v105 = a2 + 8;
        if (v104)
        {
          sub_1B0CA115C((void *)v12, (void *)a2);
          uint64_t v14 = 0;
          unint64_t v48 = v331;
          goto LABEL_43;
        }
        uint64_t v82 = v102;
      }
      else
      {
        LODWORD(v103) = 0;
        char v105 = a2 + 8;
      }
      int v98 = 0;
      char v311 = 1;
      unsigned int v309 = -1;
      uint64_t v100 = v322;
LABEL_154:
      if (a4 || (int)v103 < 1) {
        goto LABEL_180;
      }
      uint64_t v127 = *(__int16 *)(v23 + 52);
      int v128 = *(_DWORD *)(v23 + 48);
      if ((v127 & 0x80000000) != 0 || !*(_WORD *)(v23 + 52) || (v128 & 0x60) == 0)
      {
        uint64_t v82 = *(__int16 *)(v23 + 52);
        goto LABEL_165;
      }
      uint64_t v129 = *(void *)(v23 + 8);
      if (v127 < 2 || (unint64_t)(v127 - 1) >> 32)
      {
        uint64_t v130 = *(__int16 *)(v23 + 52);
      }
      else
      {
        int v164 = 0;
        uint64_t v130 = *(_WORD *)(v23 + 52) & 1;
        unsigned int v165 = v127 - 2;
        uint64_t v166 = v127 & 0xFFFFFFFE;
        int v167 = *(__int16 *)(v23 + 52);
        do
        {
          v167 -= (*(_WORD *)(v129 + 16 * (v165 + 1) + 14) & 0x60) != 0;
          v164 -= (*(_WORD *)(v129 + 16 * v165 + 14) & 0x60) != 0;
          v165 -= 2;
          v166 -= 2;
        }
        while (v166);
        uint64_t v82 = (v164 + v167);
        BOOL v168 = (v127 & 0xFFFFFFFE) == v127;
        LODWORD(v127) = v164 + v167;
        uint64_t v100 = v322;
        if (v168)
        {
LABEL_165:
          int v132 = 0;
          uint64_t v133 = *(__int16 *)(v23 + 54);
          if ((v128 & 0x62) != 0 && (int)v133 >= 1)
          {
            uint64_t v134 = *(void *)(v23 + 8);
            if (v133 >= 9)
            {
              uint64_t v136 = *(_WORD *)(v23 + 54) & 7;
              if ((*(_WORD *)(v23 + 54) & 7) == 0) {
                uint64_t v136 = 8;
              }
              uint64_t v135 = v133 - v136;
              uint64_t v137 = v134 + 78;
              int32x4_t v138 = 0uLL;
              v139.i64[0] = 0x100000001;
              v139.i64[1] = 0x100000001;
              uint64_t v140 = v135;
              int32x4_t v141 = 0uLL;
              do
              {
                v142.i32[0] = vzip1_s16(*(int16x4_t *)(v137 - 64), *(int16x4_t *)(v137 - 48)).u32[0];
                v142.i32[1] = vext_s8(*(int8x8_t *)(v137 - 32), (int8x8_t)vzip1_s16(*(int16x4_t *)(v137 - 32), *(int16x4_t *)(v137 - 16)), 4uLL).i32[1];
                int8x8_t v143 = vext_s8(*(int8x8_t *)(v137 + 32), (int8x8_t)vzip1_s16(*(int16x4_t *)(v137 + 32), *(int16x4_t *)(v137 + 48)), 4uLL);
                int16x4_t v144 = *(int16x4_t *)(v137 + 16);
                int16x4_t v145 = *(int16x4_t *)v137;
                v137 += 128;
                v144.i32[0] = vzip1_s16(v145, v144).u32[0];
                v144.i32[1] = v143.i32[1];
                int32x4_t v138 = vaddq_s32(v138, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vtst_s16(v142, (int16x4_t)0x62006200620062)), v139));
                int32x4_t v141 = vaddq_s32(v141, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vtst_s16(v144, (int16x4_t)0x62006200620062)), v139));
                v140 -= 8;
              }
              while (v140);
              int v132 = vaddvq_s32(vaddq_s32(v141, v138));
            }
            else
            {
              uint64_t v135 = 0;
              int v132 = 0;
            }
            uint64_t v146 = (__int16 *)(v134 + 16 * v135 + 14);
            uint64_t v147 = v133 - v135;
            do
            {
              __int16 v148 = *v146;
              v146 += 8;
              if ((v148 & 0x62) != 0) {
                ++v132;
              }
              --v147;
            }
            while (v147);
          }
          if (v103 != v133 - v132)
          {
            sub_1B0CEF2BC(a1, "table %S has %d columns but %d values were supplied", v68, v69, v70, v71, v82, v75, v105);
            goto LABEL_41;
          }
LABEL_180:
          if (a4 && v103 != *a4)
          {
            sub_1B0CEF2BC(a1, "%d values for %d columns", v68, v69, v70, v71, v82, v75, v103);
            goto LABEL_41;
          }
          unsigned int v314 = v82;
          int v305 = v98;
          if ((*(unsigned char *)(v12 + 52) & 1) == 0 || *(unsigned char *)(a1 + 30) || *(void *)(a1 + 176) || *(unsigned char *)(a1 + 219))
          {
            LODWORD(v149) = 0;
          }
          else
          {
            uint64_t v149 = (*(_DWORD *)(a1 + 56) + 1);
            *(_DWORD *)(a1 + 56) = v149;
            sub_1B0D254B8(v100, 71, 0, v149, v70, v71, v82, v75);
            uint64_t v100 = v322;
          }
          int v302 = v103;
          unsigned int v300 = v149;
          if (v323 == 2)
          {
            uint64_t v14 = 0;
          }
          else
          {
            int v150 = sub_1B0CB85EC(a1, v23, 113, 0, 0xFFFFFFFFLL, 0, &v340[1], v340);
            uint64_t v151 = sub_1B0D05DC0(v12, 4 * (v150 + 2));
            uint64_t v14 = (void *)v151;
            if (!v151) {
              goto LABEL_42;
            }
            int v152 = *(_DWORD *)(a1 + 56);
            if (v150 < 1)
            {
              int v150 = 0;
              uint64_t v100 = v322;
            }
            else
            {
              uint64_t v153 = (uint64_t *)(v23 + 16);
              uint64_t v154 = v150;
              unsigned int v155 = (int *)v151;
              uint64_t v100 = v322;
              do
              {
                uint64_t v156 = *v153;
                int v157 = v152 + 1;
                *(_DWORD *)(a1 + 56) = v157;
                *v155++ = v157;
                int v152 = *(_DWORD *)(a1 + 56) + *(unsigned __int16 *)(v156 + 96);
                *(_DWORD *)(a1 + 56) = v152;
                uint64_t v153 = (uint64_t *)(v156 + 40);
                --v154;
              }
              while (v154);
            }
            int v169 = v152 + 1;
            *(_DWORD *)(a1 + 56) = v169;
            *(_DWORD *)(v151 + 4 * v150) = v169;
          }
          if (v320)
          {
            int v170 = *(unsigned __int8 *)(v23 + 63);
            if (v170 == 2)
            {
              sub_1B0CEF2BC(a1, "cannot UPSERT a view", v68, v69, v70, v71, v82, v75, v297);
            }
            else if (v170 == 1)
            {
              sub_1B0CEF2BC(a1, "UPSERT not implemented for virtual table \"%s\"", v68, v69, v70, v71, v82, v75, *(void *)v23);
            }
            else if (!sub_1B0D3ADD0(a1, *v320, v68, v69, v70, v71, v82, v75))
            {
              unsigned int v171 = v340[0];
              unsigned int v325 = v340[1];
              *(_DWORD *)(a2 + 72) = v340[1];
              uint64_t v172 = v320;
              uint64_t v100 = v322;
              while (1)
              {
                v172[8] = (unsigned int *)a2;
                *((_DWORD *)v172 + 18) = v318;
                *((_DWORD *)v172 + 19) = v325;
                *((_DWORD *)v172 + 20) = v171;
                if (*v172)
                {
                  int v173 = sub_1B0D5C9A8(a1, a2, (unsigned __int8 *)v172, v69, v70, v71, v82, v75);
                  uint64_t v100 = v322;
                  if (v173) {
                    break;
                  }
                }
                uint64_t v172 = (unsigned int **)v172[4];
                if (!v172) {
                  goto LABEL_222;
                }
              }
            }
            goto LABEL_42;
          }
LABEL_222:
          if (v311)
          {
            if (v10)
            {
              uint64_t v174 = v100;
              int v175 = sub_1B0D2F978(v100, 12, DWORD1(v337), v69, v70, v71, v82, v75);
              LODWORD(v299) = v175;
              if ((v314 & 0x80000000) != 0)
              {
                HIDWORD(v299) = v175;
              }
              else
              {
                int v176 = v175;
                sub_1B0D254B8(v174, 80, v314 + v305, v315, v70, v71, v82, v75);
                HIDWORD(v299) = v176;
              }
              uint64_t v100 = v174;
            }
            else
            {
              uint64_t v299 = 0;
            }
          }
          else
          {
            int v177 = sub_1B0D2F978(v100, 36, v309, v69, v70, v71, v82, v75);
            uint64_t v100 = v322;
            LODWORD(v299) = v177;
            HIDWORD(v299) = *(_DWORD *)(v322 + 144);
          }
          LODWORD(v202) = *(__int16 *)(v23 + 54);
          if ((int)v202 >= 1)
          {
            uint64_t v203 = 0;
            int v326 = 0;
            uint64_t v204 = v318;
            while (1)
            {
              if (v203 == *(__int16 *)(v23 + 52)) {
                goto LABEL_245;
              }
              uint64_t v205 = *(void *)(v23 + 8);
              __int16 v206 = *(_WORD *)(v205 + 16 * v203 + 14);
              if ((v206 & 0x62) != 0) {
                break;
              }
              if (a4) {
                goto LABEL_255;
              }
              if (!v302)
              {
LABEL_269:
                int v213 = *(unsigned __int16 *)(v205 + 16 * v203 + 12);
                if (v213 && !*(unsigned char *)(v23 + 63) && (uint64_t v215 = *(_DWORD **)(v23 + 80)) != 0 && *v215 >= v213) {
                  uint64_t v214 = *(void *)&v215[6 * (v213 - 1) + 2];
                }
                else {
                  uint64_t v214 = 0;
                }
                sub_1B0D35058((void *)a1, v214, v204);
                goto LABEL_246;
              }
              uint64_t v69 = (v203 - v326);
LABEL_265:
              if (v311)
              {
                if (v10)
                {
                  if (v305 == v318) {
                    goto LABEL_247;
                  }
                  uint64_t v210 = (v69 + v305);
                  uint64_t v211 = v100;
                  uint64_t v212 = 81;
                  goto LABEL_282;
                }
                uint64_t v298 = *(void *)&v331[6 * (int)v69 + 2];
                uint64_t v216 = sub_1B0C9E080((void *)a1, (unsigned __int8 *)v298, v204, v69, v70, v71, v82, v75);
                if (v216 != v204)
                {
                  uint64_t v210 = v216;
                  if ((*(_DWORD *)(v298 + 4) & 0x400000) != 0) {
                    uint64_t v212 = 80;
                  }
                  else {
                    uint64_t v212 = 81;
                  }
                  uint64_t v211 = v322;
LABEL_282:
                  sub_1B0D254B8(v211, v212, v210, v204, v70, v71, v82, v75);
                }
              }
              else
              {
                sub_1B0C8A924(v100, 94, v309, v69, v204, v71, v82, v75);
              }
LABEL_246:
              uint64_t v100 = v322;
LABEL_247:
              ++v203;
              uint64_t v204 = (v204 + 1);
              uint64_t v202 = *(__int16 *)(v23 + 54);
              if (v203 >= v202) {
                goto LABEL_283;
              }
            }
            ++v326;
            if ((v206 & 0x20) != 0)
            {
              LODWORD(v204) = v204 - 1;
              goto LABEL_247;
            }
            if ((v206 & 0x40) != 0)
            {
              if ((v336 & 1) == 0) {
                goto LABEL_247;
              }
LABEL_245:
              sub_1B0D2F978(v100, 76, v204, v69, v70, v71, v82, v75);
              goto LABEL_246;
            }
            if (!a4) {
              goto LABEL_269;
            }
LABEL_255:
            uint64_t v207 = *a4;
            if ((int)v207 < 1) {
              goto LABEL_269;
            }
            uint64_t v69 = 0;
            uint64_t v208 = (int *)(a4 + 4);
            while (1)
            {
              int v209 = *v208;
              v208 += 4;
              if (v203 == v209) {
                goto LABEL_265;
              }
              if (v207 == ++v69) {
                goto LABEL_269;
              }
            }
          }
LABEL_283:
          int v217 = *(_DWORD *)(a1 + 68) - 1;
          *(_DWORD *)(a1 + 68) = v217;
          uint64_t v218 = v315;
          unsigned int v327 = v217;
          if (v336)
          {
            uint64_t v223 = sub_1B0D31118(a1, (__int16)v202 + 1);
            unsigned int v307 = v223;
            if ((v314 & 0x80000000) != 0)
            {
              uint64_t v230 = v322;
              int v231 = v223;
              sub_1B0D254B8(v322, 71, 0xFFFFFFFFLL, v223, v219, v220, v221, v222);
            }
            else
            {
              if (v311)
              {
                uint64_t v224 = v223;
                sub_1B0D2F9D0(a1, *(unsigned __int8 **)&v331[6 * v314 + 2], v223);
                uint64_t v230 = v322;
              }
              else
              {
                uint64_t v230 = v322;
                uint64_t v224 = v223;
                sub_1B0C8A924(v322, 94, v309, v314, v223, v220, v221, v222);
              }
              int v304 = sub_1B0D2F978(v230, 51, v224, v225, v226, v227, v228, v229);
              sub_1B0D254B8(v230, 71, 0xFFFFFFFFLL, v224, v235, v236, v237, v238);
              if (*(unsigned char *)(*(void *)v230 + 103)) {
                uint64_t v244 = &byte_1E9B52240;
              }
              else {
                uint64_t v244 = (char *)(*(void *)(v230 + 136) + 40 * v304);
              }
              *((_DWORD *)v244 + 2) = *(_DWORD *)(v230 + 144);
              int v231 = v307;
              sub_1B0D2F978(v230, 13, v307, v239, v240, v241, v242, v243);
            }
            uint64_t v245 = (v231 + 1);
            sub_1B0C8A924(v230, 80, v318, v245, (*(__int16 *)(v23 + 56) - 1), v232, v233, v234);
            if ((*(unsigned char *)(v23 + 48) & 0x60) != 0) {
              sub_1B0D5BC34(a1, v245, v23, v246, v247, v248, v249, v250);
            }
            uint64_t v251 = v245;
            int v217 = v327;
            uint64_t v218 = v315;
            if (v323 != 2) {
              sub_1B0D36984(v322, v23, v251, v246, v247, v248, v249, v250);
            }
            sub_1B0D56F44(a1, v321, 127, 0, 1, v23, v307 + (__int16)~*(_WORD *)(v23 + 54), v319, v327);
            int v252 = *(__int16 *)(v23 + 54);
            if (*(_WORD *)(v23 + 54))
            {
              uint64_t v100 = v322;
              if (*(_DWORD *)(a1 + 40) > v252) {
                goto LABEL_304;
              }
              *(_DWORD *)(a1 + 40) = v252 + 1;
              long long v253 = (unsigned int *)(a1 + 44);
              goto LABEL_303;
            }
            uint64_t v100 = v322;
            if (v307)
            {
              uint64_t v254 = *(unsigned __int8 *)(a1 + 31);
              if (v254 <= 7)
              {
                *(unsigned char *)(a1 + 31) = v254 + 1;
                long long v253 = (unsigned int *)(a1 + 4 * v254 + 224);
LABEL_303:
                unsigned int *v253 = v307;
              }
            }
          }
LABEL_304:
          if (v323 == 2)
          {
LABEL_347:
            if (v300) {
              sub_1B0D254B8(v322, 86, v300, 1, v70, v71, v82, v75);
            }
            if (v321) {
              sub_1B0D56F44(a1, v321, 127, 0, 2, v23, v315 + (__int16)~*(_WORD *)(v23 + 54), v319, v327);
            }
            sub_1B0D31504(v322, v327);
            if (v311)
            {
              uint64_t v66 = v300;
              if (v10)
              {
                sub_1B0D2FAAC(v322, HIDWORD(v299), v60, v61, v62, v63, v64, v65);
                if (*(unsigned char *)(*(void *)v322 + 103)) {
                  uint64_t v290 = &byte_1E9B52240;
                }
                else {
                  uint64_t v290 = (char *)(*(void *)(v322 + 136) + 40 * (int)v299);
                }
                *((_DWORD *)v290 + 2) = *(_DWORD *)(v322 + 144);
              }
            }
            else
            {
              sub_1B0D254B8(v322, 39, v309, HIDWORD(v299), v62, v63, v64, v65);
              uint64_t v66 = v300;
              if (*(unsigned char *)(*(void *)v322 + 103)) {
                uint64_t v296 = &byte_1E9B52240;
              }
              else {
                uint64_t v296 = (char *)(*(void *)(v322 + 136) + 40 * (int)v299);
              }
              *((_DWORD *)v296 + 2) = *(_DWORD *)(v322 + 144);
              sub_1B0D2F978(v322, 122, v309, v291, v292, v293, v294, v295);
            }
            goto LABEL_77;
          }
          if (*(unsigned char *)(v23 + 63) == 1)
          {
            sub_1B0D254B8(v100, 75, 0, v317, v70, v71, v82, v75);
            uint64_t v100 = v322;
          }
          uint64_t v255 = v314;
          if ((v314 & 0x80000000) != 0)
          {
            if (*(unsigned char *)(v23 + 63) != 1 && (v328 & 0x80) == 0)
            {
              sub_1B0C8A924(v100, 127, v340[1], v218, v316, v71, v82, v75);
              unsigned int v329 = 1;
LABEL_327:
              sub_1B0D5CC54(a1, v316, v218, v257, v258, v259, v260, v261);
              if ((*(unsigned char *)(v23 + 48) & 0x60) != 0) {
                sub_1B0D5BC34(a1, v318, v23, v272, v273, v274, v275, v276);
              }
              if (*(unsigned char *)(v23 + 63) == 1)
              {
                for (uint64_t j = *(void **)(v23 + 80); j; uint64_t j = (void *)j[5])
                {
                  if (*j == v12) {
                    break;
                  }
                }
                sub_1B0D5651C((uint64_t *)a1, v23);
                sub_1B0CCB908((uint64_t *)v322, 7, 1, (*(__int16 *)(v23 + 54) + 2), v317, (uint64_t)j, 4294967285, v279);
                int v280 = *(_DWORD *)(v322 + 144);
                BOOL v281 = __OFSUB__(v280, 1);
                int v282 = v280 - 1;
                if (v282 < 0 == v281)
                {
                  if (v319 == 11) {
                    __int16 v283 = 2;
                  }
                  else {
                    __int16 v283 = v319;
                  }
                  *(_WORD *)(*(void *)(v322 + 136) + 40 * v282 + 2) = v283;
                }
                uint64_t v284 = *(void *)(a1 + 168);
                if (!v284) {
                  uint64_t v284 = a1;
                }
                *(unsigned char *)(v284 + 33) = 1;
              }
              else
              {
                LODWORD(v332) = 0;
                unsigned int v285 = v217;
                uint64_t v286 = v340[1];
                unsigned int v324 = v340[0];
                sub_1B0CB888C(a1, v23, (uint64_t)v14, v340[1], v340[0], v317, 0, (v314 & 0x80000000) == 0, v277, v319, v285, (int *)&v332, 0, (uint64_t)v8);
                if ((*(unsigned char *)(v12 + 49) & 0x40) != 0) {
                  sub_1B0CBC2F0((uint64_t *)a1, v23, 0, v317, 0, 0, v287, v288);
                }
                if (v332) {
                  BOOL v289 = *(void *)(v322 + 376) == 0;
                }
                else {
                  BOOL v289 = 1;
                }
                sub_1B0CBCC78(a1, v23, v286, v324, v317, (uint64_t)v14, 0, v329, v289);
              }
              goto LABEL_347;
            }
            sub_1B0D254B8(v100, 75, 0, v218, v70, v71, v82, v75);
          }
          else
          {
            if (v311)
            {
              if (!v10)
              {
                uint64_t v256 = *(unsigned __int8 **)&v331[6 * v314 + 2];
                if (*v256 == 121 && *(unsigned char *)(v23 + 63) != 1)
                {
                  sub_1B0C8A924(v322, 127, v340[1], v218, v316, v71, v82, v75);
                  unsigned int v329 = 1;
                  char v8 = v320;
                  int v217 = v327;
                  goto LABEL_327;
                }
                sub_1B0D2F9D0(a1, v256, v218);
                char v8 = v320;
              }
            }
            else
            {
              sub_1B0C8A924(v100, 94, v309, v314, v218, v71, v82, v75);
            }
            if (*(unsigned char *)(v23 + 63) == 1)
            {
              uint64_t v218 = v315;
              sub_1B0D254B8(v322, 50, v315, (*(_DWORD *)(v322 + 144) + 2), v70, v71, v82, v75);
              uint64_t v267 = v322;
            }
            else
            {
              int v330 = sub_1B0D2F978(v322, 51, v315, v255, v70, v71, v82, v75);
              sub_1B0C8A924(v322, 127, v340[1], v315, v316, v268, v269, v270);
              uint64_t v267 = v322;
              if (*(unsigned char *)(*(void *)v322 + 103)) {
                uint64_t v271 = &byte_1E9B52240;
              }
              else {
                uint64_t v271 = (char *)(*(void *)(v322 + 136) + 40 * v330);
              }
              *((_DWORD *)v271 + 2) = *(_DWORD *)(v322 + 144);
              uint64_t v218 = v315;
            }
            int v217 = v327;
            sub_1B0D2F978(v267, 13, v218, v262, v263, v264, v265, v266);
          }
          unsigned int v329 = 0;
          goto LABEL_327;
        }
      }
      unint64_t v131 = v130 + 1;
      LODWORD(v82) = v127;
      do
        uint64_t v82 = v82 - ((*(_WORD *)(v129 + 16 * (v131-- - 2) + 14) & 0x60) != 0);
      while (v131 > 1);
      goto LABEL_165;
    }
    unsigned int v313 = v82;
    uint64_t v83 = (*(_DWORD *)(a1 + 56) + 1);
    *(_DWORD *)(a1 + 56) = v83;
    int v308 = *(_DWORD *)(v322 + 144);
    char v84 = v75;
    sub_1B0C8A924(v322, 11, v83, 0, (v308 + 1), v71, v82, v75);
    LOBYTE(v337) = 13;
    unsigned int v310 = v83;
    *(void *)((char *)&v337 + 4) = v83;
    *((void *)&v338 + 1) = 0;
    unsigned int v90 = v318;
    if (!v84) {
      unsigned int v90 = 0;
    }
    int v91 = *(__int16 *)(v23 + 54);
    HIDWORD(v337) = v90;
    LODWORD(v338) = v91;
    uint64_t v14 = 0;
    if (sub_1B0C9110C((void **)a1, v10, (uint64_t)&v337, v85, v86, v87, v88, v89)) {
      goto LABEL_42;
    }
    if (!*(_DWORD *)(a1 + 48))
    {
      int v98 = HIDWORD(v337);
      sub_1B0D36904(v322, v310, v92, v93, v94, v95, v96, v97);
      uint64_t v100 = v322;
      if (*(unsigned char *)(*(void *)v322 + 103)) {
        uint64_t v101 = &byte_1E9B52240;
      }
      else {
        uint64_t v101 = (char *)(*(void *)(v322 + 136) + 40 * v308);
      }
      *((_DWORD *)v101 + 2) = *(_DWORD *)(v322 + 144);
      uint64_t v103 = **(unsigned int **)(v10 + 32);
      if (!v321)
      {
        int v158 = sub_1B0D5C864((uint64_t *)a1, v35, v23, v99, v70, v71, v82, v75);
        uint64_t v82 = v313;
        uint64_t v100 = v322;
        if (!v158)
        {
          unsigned int v309 = 0;
          char v311 = 1;
          char v105 = a2 + 8;
          goto LABEL_154;
        }
      }
      unsigned int v306 = v98;
      unsigned int v309 = *(_DWORD *)(a1 + 52);
      *(_DWORD *)(a1 + 52) = v309 + 1;
      char v159 = *(unsigned char *)(a1 + 31);
      if (v159)
      {
        *(unsigned char *)(a1 + 31) = v159 - 1;
        int v160 = *(_DWORD *)(a1 + 4 * (v159 - 1) + 224);
        if (v159 != 1)
        {
          unsigned int v301 = *(_DWORD *)(a1 + 4 * (v159 - 1) + 224);
          uint64_t v161 = v103;
          unsigned __int8 v162 = v159 - 2;
          *(unsigned char *)(a1 + 31) = v162;
          uint64_t v103 = *(unsigned int *)(a1 + 4 * v162 + 224);
LABEL_229:
          sub_1B0D254B8(v100, 118, v309, v161, v70, v71, v82, v75);
          unsigned int v312 = sub_1B0D2F978(v322, 12, DWORD1(v337), v178, v179, v180, v181, v182);
          int v303 = v161;
          sub_1B0C8A924(v322, 97, v306, v161, v301, v183, v184, v185);
          sub_1B0D254B8(v322, 127, v309, v103, v186, v187, v188, v189);
          sub_1B0C8A924(v322, 128, v309, v301, v103, v190, v191, v192);
          sub_1B0D2FAAC(v322, v312, v193, v194, v195, v196, v197, v198);
          uint64_t v100 = v322;
          if (*(unsigned char *)(*(void *)v322 + 103)) {
            uint64_t v199 = &byte_1E9B52240;
          }
          else {
            uint64_t v199 = (char *)(*(void *)(v322 + 136) + 40 * (int)v312);
          }
          uint64_t v82 = v313;
          char v105 = a2 + 8;
          *((_DWORD *)v199 + 2) = *(_DWORD *)(v322 + 144);
          int v98 = v306;
          if (v301)
          {
            uint64_t v200 = *(unsigned __int8 *)(a1 + 31);
            if (v200 <= 7)
            {
              *(unsigned char *)(a1 + 31) = v200 + 1;
              *(_DWORD *)(a1 + 4 * v200 + 224) = v301;
            }
          }
          if (v103 && (uint64_t v201 = *(unsigned __int8 *)(a1 + 31), v201 <= 7))
          {
            char v311 = 0;
            *(unsigned char *)(a1 + 31) = v201 + 1;
            *(_DWORD *)(a1 + 4 * v201 + 224) = v103;
            LODWORD(v103) = v303;
          }
          else
          {
            char v311 = 0;
            LODWORD(v103) = v303;
          }
          goto LABEL_154;
        }
        uint64_t v161 = v103;
        int v163 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        uint64_t v161 = v103;
        int v163 = *(_DWORD *)(a1 + 56) + 1;
        int v160 = v163;
      }
      unsigned int v301 = v160;
      uint64_t v103 = (v163 + 1);
      *(_DWORD *)(a1 + 56) = v103;
      goto LABEL_229;
    }
LABEL_41:
    uint64_t v14 = 0;
    goto LABEL_42;
  }
  if (v76 == 1)
  {
    uint64_t v77 = 0;
    goto LABEL_108;
  }
  uint64_t v77 = v76 & 0xFFFFFFFE;
  uint64_t v106 = a4 + 8;
  uint64_t v107 = v77;
  do
  {
    *(v106 - 4) = -1;
    *uint64_t v106 = -1;
    v106 += 8;
    v107 -= 2;
  }
  while (v107);
  if (v77 != v76)
  {
LABEL_108:
    BOOL v108 = &a4[4 * v77 + 4];
    uint64_t v109 = v76 - v77;
    do
    {
      *BOOL v108 = -1;
      v108 += 4;
      --v109;
    }
    while (v109);
  }
  uint64_t v110 = 0;
  uint64_t v82 = 0xFFFFFFFFLL;
  __int16 v111 = *(_WORD *)(v23 + 54);
  while (2)
  {
    uint64_t v112 = v111;
    if ((int)v112 < 1) {
      goto LABEL_130;
    }
    uint64_t v113 = 0;
    int v114 = *(unsigned char **)&a4[4 * v110 + 2];
LABEL_114:
    uint64_t v68 = 0;
    uint64_t v69 = *(void *)(*(void *)(v23 + 8) + 16 * v113);
LABEL_117:
    uint64_t v70 = v114[v68];
    uint64_t v71 = *(unsigned __int8 *)(v69 + v68);
    if (v70 == v71)
    {
      if (!v114[v68])
      {
        a4[4 * v110 + 4] = v113;
        uint64_t v115 = *(void *)(v23 + 8);
        if ((*(_WORD *)(v115 + 16 * v113 + 14) & 0x60) != 0)
        {
          sub_1B0CEF2BC(a1, "cannot INSERT into generated column \"%s\"", v68, v69, v70, v71, v82, v75, *(void *)(v115 + 16 * v113));
          goto LABEL_41;
        }
        if (v113 == *(__int16 *)(v23 + 52)) {
          uint64_t v82 = v110;
        }
        else {
          uint64_t v82 = v82;
        }
        if (v110 == v113) {
          uint64_t v75 = v75;
        }
        else {
          uint64_t v75 = 0;
        }
        __int16 v111 = *(_WORD *)(v23 + 54);
        if ((int)v113 >= v111)
        {
LABEL_130:
          int v114 = *(unsigned char **)&a4[4 * v110 + 2];
          goto LABEL_131;
        }
LABEL_111:
        if (++v110 == v76) {
          goto LABEL_92;
        }
        continue;
      }
      goto LABEL_116;
    }
    break;
  }
  uint64_t v70 = byte_1B0DE1758[v70];
  uint64_t v71 = byte_1B0DE1758[v71];
  if (v70 == v71)
  {
LABEL_116:
    ++v68;
    goto LABEL_117;
  }
  if (++v113 != v112) {
    goto LABEL_114;
  }
LABEL_131:
  uint64_t v116 = 0;
  while (2)
  {
    uint64_t v117 = v114[v116];
    uint64_t v118 = aRowid_6[v116];
    if (v117 != v118)
    {
      if (byte_1B0DE1758[v117] != byte_1B0DE1758[v118])
      {
        uint64_t v119 = v114;
        for (uint64_t k = "ROWID"; ; ++k)
        {
          uint64_t v121 = *v119;
          uint64_t v122 = *(unsigned __int8 *)k;
          if (v121 == v122)
          {
            if (!*v119) {
              goto LABEL_146;
            }
          }
          else if (byte_1B0DE1758[v121] != byte_1B0DE1758[v122])
          {
            uint64_t v123 = v114;
            for (uint64_t m = "OID"; ; ++m)
            {
              uint64_t v125 = *v123;
              uint64_t v126 = *(unsigned __int8 *)m;
              if (v125 == v126)
              {
                if (!*v123) {
                  goto LABEL_146;
                }
              }
              else if (byte_1B0DE1758[v125] != byte_1B0DE1758[v126])
              {
                goto LABEL_148;
              }
              ++v123;
            }
          }
          ++v119;
        }
      }
      goto LABEL_133;
    }
    if (v114[v116])
    {
LABEL_133:
      ++v116;
      continue;
    }
    break;
  }
LABEL_146:
  if ((v328 & 0x80) == 0)
  {
    uint64_t v75 = 0;
    uint64_t v82 = v110;
    goto LABEL_111;
  }
LABEL_148:
  sub_1B0CEF2BC(a1, "table %S has no column named %s", v68, v69, v70, v71, v82, v75, a2 + 8);
LABEL_22:
  uint64_t v14 = 0;
  *(unsigned char *)(a1 + 29) = 1;
LABEL_42:
  uint64_t result = sub_1B0CA115C((void *)v12, (void *)a2);
  unint64_t v48 = v331;
  if (v331) {
LABEL_43:
  }
    uint64_t result = sub_1B0D270DC((void *)v12, v48);
LABEL_44:
  if (v8) {
    uint64_t result = sub_1B0D27040((void *)v12, v8);
  }
  if (v10) {
    uint64_t result = sub_1B0CA0FA8((void *)v12, v10, 1);
  }
  if (a4)
  {
    int v49 = *a4;
    if ((int)*a4 >= 1)
    {
      uint64_t v50 = 0;
      uint64_t v51 = 2;
      do
      {
        int v52 = *(void **)&a4[v51];
        if (v52)
        {
          sub_1B0D05C10((void *)v12, v52);
          int v49 = *a4;
        }
        ++v50;
        v51 += 4;
      }
      while (v50 < v49);
    }
    uint64_t result = sub_1B0D15C20((void *)v12, a4);
  }
  if (v14) {
    return sub_1B0D15C20((void *)v12, v14);
  }
  return result;
}

uint64_t sub_1B0CB85EC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, unsigned char *a6, _DWORD *a7, _DWORD *a8)
{
  if (*(unsigned char *)(a2 + 63) == 1)
  {
    uint64_t v10 = 0;
    *a8 = -999;
    *a7 = -999;
    return v10;
  }
  uint64_t v16 = *(void *)a1;
  uint64_t v17 = *(void *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v16 + 32) + 24);
    LODWORD(v19) = -1;
    do
    {
      uint64_t v20 = *v18;
      v18 += 4;
      uint64_t v19 = (v19 + 1);
    }
    while (v20 != v17);
    if ((a5 & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v19 = 4294934528;
    if ((a5 & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  a5 = *(unsigned int *)(a1 + 52);
LABEL_7:
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = (a5 + 1);
  *a7 = a5;
  if ((*(unsigned char *)(a2 + 48) & 0x80) != 0 || a6 && !*a6)
  {
    if (!*(unsigned char *)(v16 + 111)
      && v19 != 1
      && *(unsigned char *)(*(void *)(*(void *)(v16 + 32) + 32 * (int)v19 + 8) + 17))
    {
      sub_1B0D2FBBC(a1, v19, *(_DWORD *)(a2 + 40), a3 == 113, *(void *)a2);
    }
  }
  else
  {
    sub_1B0C9CD14((void *)a1, a5, v19, a2, a3, (uint64_t)a6, (uint64_t)a7, (uint64_t)a8);
  }
  *a8 = v22;
  uint64_t v23 = *(void *)(a2 + 16);
  if (v23)
  {
    uint64_t v36 = a7;
    uint64_t v37 = a2;
    uint64_t v10 = 0;
    do
    {
      uint64_t v24 = v22 + v10;
      if ((*(_WORD *)(v23 + 99) & 3) == 2 && (*(unsigned char *)(v37 + 48) & 0x80) != 0)
      {
        a4 = 0;
        *uint64_t v36 = v24;
      }
      if (!a6 || a6[v10 + 1])
      {
        uint64_t v25 = *(unsigned int *)(v23 + 88);
        int v26 = *(_DWORD *)(v21 + 144);
        if (*(_DWORD *)(v21 + 148) <= v26)
        {
          sub_1B0D25510(v21, a3, v24, v25, v19, (uint64_t)a6, (uint64_t)a7, (uint64_t)a8);
        }
        else
        {
          *(_DWORD *)(v21 + 144) = v26 + 1;
          uint64_t v27 = *(void *)(v21 + 136) + 40 * v26;
          *(unsigned char *)uint64_t v27 = a3;
          *(_WORD *)(v27 + 2) = 0;
          *(_DWORD *)(v27 + 4) = v24;
          *(_DWORD *)(v27 + 8) = v25;
          *(_DWORD *)(v27 + 12) = v19;
          *(unsigned char *)(v27 + 1) = 0;
          *(void *)(v27 + 24) = 0;
          *(void *)(v27 + 32) = 0;
          *(void *)(v27 + 16) = 0;
        }
        uint64_t v28 = *(void *)(a1 + 16);
        uint64_t v29 = sub_1B0D2FDAC((_DWORD *)a1, v23);
        if (v29)
        {
          if (*(unsigned char *)(*(void *)v28 + 103))
          {
            if (!*(void *)(*(void *)v28 + 816) && (*(_DWORD *)v29)-- == 1) {
              sub_1B0D15C20(*(void **)(v29 + 16), (void *)v29);
            }
          }
          else
          {
            uint64_t v31 = *(void *)(v28 + 136) + 40 * *(int *)(v28 + 144);
            *(unsigned char *)(v31 - 39) = -8;
            *(void *)(v31 - 24) = v29;
          }
        }
        int v32 = *(_DWORD *)(v21 + 144);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *(_WORD *)(*(void *)(v21 + 136) + 40 * v34 + 2) = a4;
        }
      }
      ++v10;
      uint64_t v23 = *(void *)(v23 + 40);
    }
    while (v23);
    LODWORD(v22) = v22 + v10;
  }
  else
  {
    uint64_t v10 = 0;
  }
  if ((int)v22 > *(_DWORD *)(a1 + 52)) {
    *(_DWORD *)(a1 + 52) = v22;
  }
  return v10;
}

void sub_1B0CB888C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int16x8_t a9, unsigned __int8 a10, unsigned int a11, int *a12, uint64_t a13, uint64_t a14)
{
  int v349 = a8;
  unsigned int v351 = a7;
  uint64_t v14 = a6;
  unsigned int v338 = a5;
  uint64_t v360 = a3;
  uint64_t v15 = a2;
  uint64_t v16 = a1;
  uint64_t v17 = a13;
  uint64_t v358 = *(void *)a1;
  uint64_t v18 = *(void *)(a1 + 16);
  int v19 = *(_DWORD *)(a2 + 48);
  if ((v19 & 0x80) != 0)
  {
    uint64_t v21 = a2 + 16;
    do
    {
      uint64_t v22 = *(void *)v21;
      int v23 = *(_WORD *)(*(void *)v21 + 99) & 3;
      uint64_t v21 = *(void *)v21 + 40;
    }
    while (v23 != 2);
    uint64_t v357 = v22;
    int v20 = *(unsigned __int16 *)(v22 + 94);
  }
  else
  {
    uint64_t v357 = 0;
    int v20 = 1;
  }
  int v340 = v20;
  unsigned int v332 = a4;
  unsigned int v366 = a10;
  uint64_t v353 = a2;
  unsigned int v367 = a6;
  if ((v19 & 0x800) != 0)
  {
    char v43 = 0;
    int v44 = 0;
    int v45 = 0;
    unsigned int v361 = a6 + 1;
    int v356 = *(__int16 *)(a2 + 54);
    int8x16_t v46 = (int8x16_t)xmmword_1B0DE1600;
    int8x16_t v47 = (int8x16_t)xmmword_1B0DE1610;
    int8x16_t v48 = (int8x16_t)xmmword_1B0DE1620;
    v49.i64[0] = 0x1000100010001;
    v49.i64[1] = 0x1000100010001;
    int v50 = 1;
    while (1)
    {
      int v370 = v44;
      if (v356 >= 1) {
        break;
      }
LABEL_133:
      int v44 = v370;
      uint64_t v16 = a1;
      if (v43 & 1 | ((v45 | v370) == 0)) {
        goto LABEL_7;
      }
      int v50 = 0;
      char v43 = 1;
      if (v370 >= 1)
      {
        int v50 = 0;
        if ((*(unsigned char *)(v15 + 48) & 0x60) != 0)
        {
          sub_1B0D5BC34(a1, v361, v15, a4, a5, a6, a7, a8);
          v49.i64[0] = 0x1000100010001;
          v49.i64[1] = 0x1000100010001;
          int8x16_t v48 = (int8x16_t)xmmword_1B0DE1620;
          int8x16_t v47 = (int8x16_t)xmmword_1B0DE1610;
          int8x16_t v46 = (int8x16_t)xmmword_1B0DE1600;
          uint64_t v17 = a13;
          int v50 = 0;
        }
      }
    }
    unint64_t v51 = 0;
    int v363 = v50;
    while (1)
    {
      uint64_t v52 = *(void *)(v15 + 8);
      uint64_t v53 = v52 + 16 * v51;
      unsigned int v54 = *(unsigned char *)(v53 + 8) & 0xF;
      if ((*(unsigned char *)(v53 + 8) & 0xF) == 0 || v51 == *(__int16 *)(v15 + 52)) {
        goto LABEL_61;
      }
      if (v43 & 1 | ((*(_WORD *)(v52 + 16 * v51 + 14) & 0x60) == 0))
      {
        if (v17 && (*(_WORD *)(v52 + 16 * v51 + 14) & 0x60) == 0 && (*(_DWORD *)(v17 + 4 * v51) & 0x80000000) != 0) {
          goto LABEL_61;
        }
        if (v54 == 11) {
          unsigned int v54 = 2;
        }
        if (a10 == 11) {
          uint64_t v55 = v54;
        }
        else {
          uint64_t v55 = a10;
        }
        if (v55 == 5)
        {
          if ((v43 & 1) != 0 || !*(_WORD *)(v52 + 16 * v51 + 12)) {
            uint64_t v55 = 2;
          }
          else {
            uint64_t v55 = 5;
          }
        }
        else if ((((*(_WORD *)(v52 + 16 * v51 + 14) & 0x60) == 0) & ~v50) != 0)
        {
          goto LABEL_61;
        }
        __int16 v56 = v51;
        if ((v51 & 0x8000) == 0 && (*(_DWORD *)(v15 + 48) & 0x20) != 0)
        {
          if ((_WORD)v51)
          {
            if (v51 >= 0x11)
            {
              uint64_t v59 = 16;
              if ((v51 & 0xF) != 0) {
                uint64_t v59 = v51 & 0xF;
              }
              unint64_t v57 = v51 - v59;
              uint64_t v60 = v52 + 142;
              int16x8_t v61 = 0uLL;
              int16x8_t v62 = 0uLL;
              do
              {
                int8x16_t v63 = vqtbl2q_s8(*(int8x16x2_t *)(v60 - 64), v47);
                v63.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v60 - 32), v46).i32[3];
                v64.i32[0] = vzip1q_s16(*(int16x8_t *)(v60 - 128), *(int16x8_t *)(v60 - 112)).u32[0];
                v64.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v60 - 96), v48).i32[1];
                v64.i64[1] = v63.i64[1];
                int8x16x2_t v376 = *(int8x16x2_t *)(v60 + 32);
                int8x16_t v65 = vqtbl2q_s8(*(int8x16x2_t *)(v60 + 64), v47);
                v65.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v60 + 96), v46).i32[3];
                int16x8_t v67 = *(int16x8_t *)v60;
                int16x8_t v66 = *(int16x8_t *)(v60 + 16);
                v60 += 256;
                v66.i32[0] = vzip1q_s16(v67, v66).u32[0];
                v66.i32[1] = vqtbl2q_s8(v376, v48).i32[1];
                v66.i64[1] = v65.i64[1];
                int16x8_t v61 = vaddq_s16((int16x8_t)vbicq_s8(v49, (int8x16_t)vshrq_n_u16(v64, 5uLL)), v61);
                int16x8_t v62 = vaddq_s16((int16x8_t)vbicq_s8(v49, (int8x16_t)vshrq_n_u16((uint16x8_t)v66, 5uLL)), v62);
                v59 += 16;
              }
              while (v51 != v59);
              a9 = vaddq_s16(v62, v61);
              a9.i16[0] = vaddvq_s16(a9);
              unsigned __int16 v58 = a9.i16[0];
            }
            else
            {
              unint64_t v57 = 0;
              unsigned __int16 v58 = 0;
            }
            uint64_t v68 = (unsigned __int16 *)(v52 + 16 * v57 + 14);
            do
            {
              unsigned int v69 = *v68;
              v68 += 8;
              v58 += ((v69 >> 5) & 1) == 0;
              ++v57;
            }
            while (v51 != v57);
          }
          else
          {
            unsigned __int16 v58 = 0;
          }
          if ((*(_WORD *)(v52 + 16 * ((uint64_t)(v51 << 16) >> 16) + 14) & 0x20) != 0) {
            __int16 v56 = v51 - v58 + *(_WORD *)(v15 + 56);
          }
          else {
            __int16 v56 = v58;
          }
        }
        uint64_t v70 = v361 + v56;
        switch((int)v55)
        {
          case 1:
          case 3:
            goto LABEL_100;
          case 2:
            uint64_t v71 = *(void *)(a1 + 168);
            if (!v71) {
              uint64_t v71 = a1;
            }
            *(unsigned char *)(v71 + 33) = 1;
LABEL_100:
            int v72 = sub_1B0C904AC(v358, "%s.%s", a3, a4, a5, a6, a7, a8, *(void *)v15);
            int v73 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v73)
            {
              sub_1B0D25510(v18, 69, 1299, v55, v70, a6, a7, a8);
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v73 + 1;
              uint64_t v74 = *(void *)(v18 + 136) + 40 * v73;
              *(void *)uint64_t v74 = 0x51300000045;
              *(_DWORD *)(v74 + 8) = v55;
              *(_DWORD *)(v74 + 12) = v70;
              *(void *)(v74 + 24) = 0;
              *(void *)(v74 + 32) = 0;
              *(void *)(v74 + 16) = 0;
            }
            uint64_t v14 = v367;
            int8x16_t v47 = (int8x16_t)xmmword_1B0DE1610;
            int8x16_t v46 = (int8x16_t)xmmword_1B0DE1600;
            int8x16_t v48 = (int8x16_t)xmmword_1B0DE1620;
            v49.i64[0] = 0x1000100010001;
            v49.i64[1] = 0x1000100010001;
            if (*(unsigned char *)(*(void *)v18 + 103))
            {
              if (v72)
              {
                sub_1B0D15C20(*(void **)v18, v72);
                v49.i64[0] = 0x1000100010001;
                v49.i64[1] = 0x1000100010001;
                int8x16_t v48 = (int8x16_t)xmmword_1B0DE1620;
                int8x16_t v47 = (int8x16_t)xmmword_1B0DE1610;
                int8x16_t v46 = (int8x16_t)xmmword_1B0DE1600;
              }
            }
            else
            {
              uint64_t v75 = *(void *)(v18 + 136) + 40 * *(int *)(v18 + 144);
              *(unsigned char *)(v75 - 39) = -6;
              *(void *)(v75 - 24) = v72;
            }
            int v76 = *(_DWORD *)(v18 + 144);
            BOOL v40 = __OFSUB__(v76, 1);
            int v77 = v76 - 1;
            if (v77 < 0 == v40) {
              *(_WORD *)(*(void *)(v18 + 136) + 40 * v77 + 2) = 1;
            }
            uint64_t v17 = a13;
            int v50 = v363;
            break;
          case 5:
            int v80 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v80)
            {
              int v80 = sub_1B0D25510(v18, 51, v361 + v56, 0, 0, a6, a7, a8);
              uint64_t v17 = a13;
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v80 + 1;
              uint64_t v81 = *(void *)(v18 + 136) + 40 * v80;
              *(_DWORD *)uint64_t v81 = 51;
              *(_DWORD *)(v81 + 4) = v70;
              a9 = 0uLL;
              *(_OWORD *)(v81 + 8) = 0u;
              *(_OWORD *)(v81 + 24) = 0u;
            }
            int v82 = *(unsigned __int16 *)(v52 + 16 * v51 + 12);
            if (*(_WORD *)(v52 + 16 * v51 + 12)
              && !*(unsigned char *)(v15 + 63)
              && (uint64_t v86 = *(_DWORD **)(v15 + 80)) != 0
              && *v86 >= v82)
            {
              a2 = *(void *)&v86[6 * (v82 - 1) + 2];
              uint64_t v84 = *(void *)a1;
              if (a2)
              {
                uint64_t v83 = (unsigned __int8 *)sub_1B0CAE048(*(void *)a1, (unsigned __int8 *)a2, 0, 0);
                uint64_t v17 = a13;
              }
              else
              {
                uint64_t v83 = 0;
              }
            }
            else
            {
              uint64_t v83 = 0;
              uint64_t v84 = *(void *)a1;
            }
            if (*(unsigned char *)(v84 + 103))
            {
              if (!v83) {
                goto LABEL_123;
              }
LABEL_122:
              sub_1B0D1DF88((void *)v84, v83);
              uint64_t v17 = a13;
              goto LABEL_123;
            }
            sub_1B0D2F9D0(a1, v83, v70);
            uint64_t v17 = a13;
            if (v83) {
              goto LABEL_122;
            }
LABEL_123:
            uint64_t v85 = &byte_1E9B52240;
            uint64_t v14 = v367;
            if (!*(unsigned char *)(*(void *)v18 + 103)) {
              uint64_t v85 = (char *)(*(void *)(v18 + 136) + 40 * v80);
            }
            ++v370;
            *((_DWORD *)v85 + 2) = *(_DWORD *)(v18 + 144);
            uint64_t v15 = v353;
            int8x16_t v47 = (int8x16_t)xmmword_1B0DE1610;
            int8x16_t v46 = (int8x16_t)xmmword_1B0DE1600;
            int8x16_t v48 = (int8x16_t)xmmword_1B0DE1620;
            v49.i64[0] = 0x1000100010001;
            v49.i64[1] = 0x1000100010001;
            int v50 = v363;
            break;
          default:
            int v78 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v78)
            {
              sub_1B0D25510(v18, 50, v70, a11, 0, a6, a7, a8);
              int v50 = v363;
              v49.i64[0] = 0x1000100010001;
              v49.i64[1] = 0x1000100010001;
              int8x16_t v48 = (int8x16_t)xmmword_1B0DE1620;
              int8x16_t v47 = (int8x16_t)xmmword_1B0DE1610;
              int8x16_t v46 = (int8x16_t)xmmword_1B0DE1600;
              uint64_t v17 = a13;
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v78 + 1;
              uint64_t v79 = *(void *)(v18 + 136) + 40 * v78;
              *(_DWORD *)uint64_t v79 = 50;
              *(_DWORD *)(v79 + 4) = v70;
              *(_DWORD *)(v79 + 8) = a11;
              *(void *)(v79 + 12) = 0;
              *(void *)(v79 + 28) = 0;
              *(void *)(v79 + 20) = 0;
              *(_DWORD *)(v79 + 36) = 0;
            }
            uint64_t v14 = v367;
            break;
        }
      }
      else
      {
        ++v45;
      }
LABEL_61:
      if (++v51 == v356) {
        goto LABEL_133;
      }
    }
  }
LABEL_7:
  uint64_t v24 = *(int **)(v15 + 32);
  if (!v24)
  {
    int v355 = 0;
    uint64_t v34 = a14;
LABEL_141:
    uint64_t v25 = v358;
    goto LABEL_142;
  }
  uint64_t v25 = v358;
  if ((*(unsigned char *)(v358 + 49) & 2) == 0)
  {
    *(_DWORD *)(v16 + 64) = ~v14;
    if (*v24 >= 1)
    {
      uint64_t v26 = 0;
      int v355 = 0;
      uint64_t v27 = (v14 + 1);
      if (a10 == 11) {
        LODWORD(v28) = 2;
      }
      else {
        LODWORD(v28) = a10;
      }
      uint64_t v29 = (uint64_t *)(v24 + 4);
      while (1)
      {
        uint64_t v30 = (unsigned __int8 *)*(v29 - 1);
        if (!v17) {
          break;
        }
        uint64_t v374 = 0;
        uint64_t v375 = v17;
        a9 = 0uLL;
        v372[0] = 0;
        long long v373 = 0u;
        v372[1] = sub_1B0D5C028;
        if (v30)
        {
          sub_1B0D32AB4((uint64_t)v372, (uint64_t)v30);
          uint64_t v17 = a13;
          int v31 = WORD2(v374);
        }
        else
        {
          int v31 = 0;
        }
        if (!v349) {
          v31 &= ~2u;
        }
        if (v31) {
          break;
        }
        uint64_t v34 = a14;
LABEL_16:
        ++v26;
        v29 += 3;
        if (v26 >= *v24) {
          goto LABEL_140;
        }
      }
      if (!v355)
      {
        sub_1B0D36984(v18, v353, v27, a4, a5, a6, a7, a8);
        int v355 = 1;
      }
      int v32 = *(_DWORD *)(a1 + 68);
      *(_DWORD *)(a1 + 68) = v32 - 1;
      if (v30)
      {
        uint64_t v30 = (unsigned __int8 *)sub_1B0CAE048(v358, v30, 0, 0);
        if (*(unsigned char *)(v358 + 103)) {
          goto LABEL_29;
        }
      }
      else if (*(unsigned char *)(v358 + 103))
      {
LABEL_29:
        if (v30) {
          sub_1B0D1DF88((void *)v358, v30);
        }
        if (v28 == 4)
        {
          int v33 = *(_DWORD *)(v18 + 144);
          uint64_t v14 = v367;
          uint64_t v34 = a14;
          if (*(_DWORD *)(v18 + 148) <= v33)
          {
            sub_1B0D25510(v18, 9, 0, a11, 0, a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v18 + 144) = v33 + 1;
            uint64_t v35 = *(void *)(v18 + 136) + 40 * v33;
            *(void *)uint64_t v35 = 9;
            *(_DWORD *)(v35 + 8) = a11;
            *(void *)(v35 + 12) = 0;
            *(void *)(v35 + 28) = 0;
            *(void *)(v35 + 20) = 0;
            *(_DWORD *)(v35 + 36) = 0;
          }
          LODWORD(v28) = 4;
LABEL_50:
          uint64_t v42 = *(void *)(v18 + 24);
          a3 = -v32;
          if (*(_DWORD *)(v42 + 68) + *(_DWORD *)(v42 + 72) >= 0) {
            *(_DWORD *)(*(void *)(v42 + 80) + 4 * (int)a3) = *(_DWORD *)(v18 + 144);
          }
          else {
            sub_1B0D34EC8(v42, v18, a3);
          }
          uint64_t v17 = a13;
          goto LABEL_16;
        }
        uint64_t v36 = *v29;
        if (v28 == 5) {
          uint64_t v28 = 2;
        }
        else {
          uint64_t v28 = v28;
        }
        uint64_t v37 = *(void *)(a1 + 16);
        if (v37)
        {
          if (v28 != 2)
          {
LABEL_42:
            sub_1B0CCB908((uint64_t *)v37, 70, 275, v28, 0, v36, 0, a8);
            int v39 = *(_DWORD *)(v37 + 144);
            BOOL v40 = __OFSUB__(v39, 1);
            int v41 = v39 - 1;
            if (v41 < 0 == v40) {
              *(_WORD *)(*(void *)(v37 + 136) + 40 * v41 + 2) = 3;
            }
            uint64_t v14 = v367;
            uint64_t v34 = a14;
            goto LABEL_50;
          }
        }
        else
        {
          if (!*(void *)(a1 + 168) && (*(unsigned char *)(*(void *)a1 + 96) & 8) == 0) {
            *(unsigned char *)(a1 + 35) = 1;
          }
          uint64_t v37 = sub_1B0CEF480((uint64_t *)a1, a2, a3, a4, a5, a6, a7, a8);
          if (v28 != 2) {
            goto LABEL_42;
          }
        }
        uint64_t v38 = *(void *)(a1 + 168);
        if (!v38) {
          uint64_t v38 = a1;
        }
        *(unsigned char *)(v38 + 33) = 1;
        goto LABEL_42;
      }
      sub_1B0CCFCD4(a1, v30, (v32 - 1), 16, a5, a6, a7, a8);
      goto LABEL_29;
    }
    int v355 = 0;
    uint64_t v34 = a14;
LABEL_140:
    uint64_t v16 = a1;
    *(_DWORD *)(a1 + 64) = 0;
    uint64_t v15 = v353;
    goto LABEL_141;
  }
  int v355 = 0;
  uint64_t v34 = a14;
LABEL_142:
  uint64_t v87 = *(void *)(v15 + 16);
  uint64_t v371 = v87;
  if (!v34) {
    goto LABEL_150;
  }
  if (!*(void *)v34)
  {
    int v91 = 0;
    if (*(unsigned char *)(v34 + 40))
    {
      int v92 = 6;
    }
    else
    {
      uint64_t v34 = 0;
      int v92 = 4;
    }
    unsigned int v366 = v92;
    goto LABEL_155;
  }
  if (!v87)
  {
LABEL_150:
    int v91 = 0;
LABEL_155:
    char v350 = 1;
    goto LABEL_156;
  }
  unint64_t v88 = 0;
  uint64_t v89 = 0;
  int v90 = 0;
  do
  {
    uint64_t v87 = *(void *)(v87 + 40);
    ++v90;
    v89 += 16;
    v88 += 18;
  }
  while (v87);
  LODWORD(v371) = v90;
  if (v25)
  {
    int v91 = (uint64_t *)sub_1B0D05DC0(v25, v88);
    if (!v91) {
      return;
    }
  }
  else
  {
    int v91 = (uint64_t *)sub_1B0C7FC94(v88);
    if (!v91) {
      return;
    }
  }
  bzero(v91, v88);
  int v109 = 0;
  *(void *)(v34 + 48) = v91;
  uint64_t v110 = (void *)v34;
  do
  {
    if (!*v110) {
      break;
    }
    uint64_t v111 = v110[7];
    if (v111)
    {
      uint64_t v112 = *(void *)(v15 + 16);
      uint64_t v113 = 0;
      if (v112) {
        BOOL v114 = v112 == v111;
      }
      else {
        BOOL v114 = 1;
      }
      if (!v114)
      {
        do
        {
          ++v113;
          uint64_t v112 = *(void *)(v112 + 40);
          if (v112) {
            BOOL v115 = v112 == v111;
          }
          else {
            BOOL v115 = 1;
          }
        }
        while (!v115);
      }
      if (!*((unsigned char *)v91 + v113 + v89))
      {
        *((unsigned char *)v91 + v113 + v89) = 1;
        uint64_t v116 = &v91[2 * v109];
        uint64_t *v116 = v112;
        *((_DWORD *)v116 + 2) = v113;
        ++v109;
      }
    }
    uint64_t v110 = (void *)v110[4];
  }
  while (v110);
  uint64_t v117 = *(void *)(v15 + 16);
  if (v117)
  {
    uint64_t v118 = 0;
    do
    {
      if (!*((unsigned char *)v91 + v118 + v89))
      {
        uint64_t v119 = &v91[2 * v109];
        *uint64_t v119 = v117;
        *((_DWORD *)v119 + 2) = v118;
        ++v109;
      }
      ++v118;
      uint64_t v117 = *(void *)(v117 + 40);
    }
    while (v117);
  }
  char v350 = 0;
LABEL_156:
  uint64_t v93 = *(void *)(v25 + 48);
  if ((v93 & 0x6000) == 0) {
    goto LABEL_173;
  }
  if ((v93 & 0x2000) != 0)
  {
    if ((*(void *)(v15 + 88)
       || (uint64_t v101 = *(void *)(*(void *)(*(void *)v16 + 32) + 56)) != 0 && *(void *)(v101 + 64))
      && !*(unsigned char *)(v16 + 221))
    {
      uint64_t v331 = sub_1B0D5674C((void *)v16, (unsigned __int8 **)v15, 128, 0, 0, a6, a7, a8);
      if (v331) {
        goto LABEL_598;
      }
    }
    if ((*(unsigned char *)(*(void *)v16 + 49) & 0x40) != 0 && !*(unsigned char *)(v15 + 63))
    {
      uint64_t v301 = *(void *)(v15 + 96);
      int v302 = *(unsigned __int8 **)v15;
      uint64_t v303 = *(void *)(v301 + 96);
      if (v303)
      {
        int v304 = *v302;
        if (*v302)
        {
          unsigned int v305 = 0;
          unsigned int v306 = v302 + 1;
          do
          {
            unsigned int v305 = -1640531535 * (v305 + byte_1B0DE1758[v304]);
            int v307 = *v306++;
            int v304 = v307;
          }
          while (v307);
        }
        else
        {
          unsigned int v305 = 0;
        }
        unsigned int v312 = (_DWORD *)(v303 + 16 * (v305 % *(_DWORD *)(v301 + 80)));
        unsigned int v310 = (uint64_t *)(v312 + 2);
      }
      else
      {
        unsigned int v310 = (uint64_t *)(v301 + 88);
        unsigned int v312 = (_DWORD *)(v301 + 84);
      }
      int v320 = *v312;
      if (!v320) {
        goto LABEL_594;
      }
LABEL_586:
      unsigned int v310 = (uint64_t *)*v310;
      uint64_t v321 = (unsigned char *)v310[3];
      for (uint64_t i = *(unsigned __int8 **)v15; ; ++i)
      {
        uint64_t v323 = *v321;
        uint64_t v324 = *i;
        if (v323 == v324)
        {
          if (!*v321) {
            goto LABEL_595;
          }
        }
        else if (byte_1B0DE1758[v323] != byte_1B0DE1758[v324])
        {
          if (!--v320) {
            goto LABEL_593;
          }
          goto LABEL_586;
        }
        ++v321;
      }
    }
LABEL_173:
    uint64_t v333 = 0;
    uint64_t v331 = 0;
    goto LABEL_174;
  }
  if ((*(unsigned char *)(*(void *)v16 + 49) & 0x40) == 0 || *(unsigned char *)(v15 + 63)) {
    goto LABEL_173;
  }
  uint64_t v94 = *(void *)(v15 + 96);
  uint64_t v95 = *(unsigned __int8 **)v15;
  uint64_t v96 = *(void *)(v94 + 96);
  if (v96)
  {
    int v97 = *v95;
    if (*v95)
    {
      unsigned int v98 = 0;
      uint64_t v99 = v95 + 1;
      do
      {
        unsigned int v98 = -1640531535 * (v98 + byte_1B0DE1758[v97]);
        int v100 = *v99++;
        int v97 = v100;
      }
      while (v100);
    }
    else
    {
      unsigned int v98 = 0;
    }
    char v311 = (_DWORD *)(v96 + 16 * (v98 % *(_DWORD *)(v94 + 80)));
    unsigned int v310 = (uint64_t *)(v311 + 2);
  }
  else
  {
    unsigned int v310 = (uint64_t *)(v94 + 88);
    char v311 = (_DWORD *)(v94 + 84);
  }
  int v313 = *v311;
  if (v313)
  {
    while (1)
    {
      unsigned int v310 = (uint64_t *)*v310;
      unsigned int v314 = (unsigned char *)v310[3];
      for (uint64_t j = *(unsigned __int8 **)v15; ; ++j)
      {
        uint64_t v316 = *v314;
        uint64_t v317 = *j;
        if (v316 != v317) {
          break;
        }
        if (!*v314) {
          goto LABEL_595;
        }
LABEL_570:
        ++v314;
      }
      if (byte_1B0DE1758[v316] == byte_1B0DE1758[v317]) {
        goto LABEL_570;
      }
      if (!--v313)
      {
LABEL_593:
        unsigned int v310 = &qword_1E9B52220;
        goto LABEL_595;
      }
    }
  }
LABEL_594:
  unsigned int v310 = &qword_1E9B52220;
LABEL_595:
  if (v310[2])
  {
    uint64_t v331 = 0;
  }
  else
  {
    uint64_t v331 = 0;
    if (!*(void *)(v15 + 72))
    {
      uint64_t v333 = 0;
      goto LABEL_174;
    }
  }
LABEL_598:
  a4 = (*(_DWORD *)(v16 + 56) + 1);
  *(_DWORD *)(v16 + 56) = a4;
  int v325 = *(_DWORD *)(v18 + 144);
  HIDWORD(v333) = a4;
  if (*(_DWORD *)(v18 + 148) <= v325)
  {
    sub_1B0D25510(v18, 71, 0, a4, 0, a6, a7, a8);
  }
  else
  {
    *(_DWORD *)(v18 + 144) = v325 + 1;
    uint64_t v326 = *(void *)(v18 + 136) + 40 * v325;
    *(void *)uint64_t v326 = 71;
    *(_DWORD *)(v326 + 8) = a4;
    *(void *)(v326 + 12) = 0;
    *(void *)(v326 + 28) = 0;
    *(void *)(v326 + 20) = 0;
    *(_DWORD *)(v326 + 36) = 0;
  }
  LODWORD(v333) = *(_DWORD *)(v16 + 68) - 1;
  *(_DWORD *)(v16 + 68) = v333;
LABEL_174:
  uint64_t v102 = 0;
  int v335 = 0;
  if (v349)
  {
    int v341 = 0;
    int v344 = 0;
    unsigned int v336 = 0;
    int v337 = 0;
    int v103 = 0;
    if (!v357)
    {
      int v104 = *(_DWORD *)(v16 + 68);
      int v105 = v104 - 1;
      *(_DWORD *)(v16 + 68) = v104 - 1;
      uint64_t v106 = v366;
      if (v366 == 11)
      {
        if (*(unsigned char *)(v15 + 62) == 11) {
          uint64_t v106 = 2;
        }
        else {
          uint64_t v106 = *(unsigned __int8 *)(v15 + 62);
        }
      }
      if (v34)
      {
        uint64_t v102 = v34;
        while (*(void *)v102 && *(void *)(v102 + 56))
        {
          uint64_t v102 = *(void *)(v102 + 32);
          if (!v102) {
            goto LABEL_185;
          }
        }
        if (*(unsigned char *)(v102 + 40)) {
          uint64_t v106 = 6;
        }
        else {
          uint64_t v106 = 4;
        }
        if (v102 == v34)
        {
          int v344 = 0;
          uint64_t v102 = v34;
          goto LABEL_217;
        }
LABEL_185:
        int v107 = *(_DWORD *)(v18 + 144);
        if (*(_DWORD *)(v18 + 148) <= v107)
        {
          int v344 = sub_1B0D25510(v18, 9, 0, 0, 0, a6, a7, a8);
        }
        else
        {
          int v344 = *(_DWORD *)(v18 + 144);
          *(_DWORD *)(v18 + 144) = v107 + 1;
          uint64_t v108 = *(void *)(v18 + 136) + 40 * v107;
          *(unsigned char *)uint64_t v108 = 9;
          a9 = 0uLL;
          *(_OWORD *)(v108 + 1) = 0u;
          *(_OWORD *)(v108 + 17) = 0u;
          *(void *)(v108 + 32) = 0;
        }
      }
      else
      {
        uint64_t v102 = 0;
        int v344 = 0;
      }
LABEL_217:
      if (v106 != 5 || v366 == 5)
      {
        unsigned int v336 = 0;
      }
      else
      {
        unsigned int v336 = 0;
        if (*(void *)(v15 + 16) && !v344)
        {
          int v123 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v123)
          {
            unsigned int v336 = sub_1B0D25510(v18, 9, 0, 0, 0, a6, a7, a8) + 1;
          }
          else
          {
            unsigned int v336 = v123 + 1;
            *(_DWORD *)(v18 + 144) = v123 + 1;
            uint64_t v124 = *(void *)(v18 + 136) + 40 * v123;
            *(unsigned char *)uint64_t v124 = 9;
            a9 = 0uLL;
            *(_OWORD *)(v124 + 1) = 0u;
            *(_OWORD *)(v124 + 17) = 0u;
            *(void *)(v124 + 32) = 0;
          }
        }
      }
      int v121 = *(_DWORD *)(v18 + 144);
      if (v351)
      {
        if (*(_DWORD *)(v18 + 148) <= v121)
        {
          sub_1B0D25510(v18, 53, v14, (v104 - 1), v351, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v18 + 144) = v121 + 1;
          uint64_t v122 = *(void *)(v18 + 136) + 40 * v121;
          *(_DWORD *)uint64_t v122 = 53;
          *(_DWORD *)(v122 + 4) = v14;
          *(_DWORD *)(v122 + 8) = v105;
          *(_DWORD *)(v122 + 12) = v351;
          *(void *)(v122 + 24) = 0;
          *(void *)(v122 + 32) = 0;
          *(void *)(v122 + 16) = 0;
        }
        int v121 = *(_DWORD *)(v18 + 144);
        if (v121 >= 1) {
          *(_WORD *)(*(void *)(v18 + 136) + 40 * (v121 - 1) + 2) = 144;
        }
      }
      if (*(_DWORD *)(v18 + 148) <= v121)
      {
        sub_1B0D25510(v18, 31, v332, (v104 - 1), v14, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v18 + 144) = v121 + 1;
        uint64_t v125 = *(void *)(v18 + 136) + 40 * v121;
        *(_DWORD *)uint64_t v125 = 31;
        *(_DWORD *)(v125 + 4) = v332;
        *(_DWORD *)(v125 + 8) = v105;
        *(_DWORD *)(v125 + 12) = v14;
        *(void *)(v125 + 24) = 0;
        *(void *)(v125 + 32) = 0;
        *(void *)(v125 + 16) = 0;
      }
      switch((int)v106)
      {
        case 1:
        case 2:
        case 3:
          goto LABEL_243;
        case 4:
          goto LABEL_245;
        case 5:
          if (HIDWORD(v333))
          {
            uint64_t v126 = *(void *)(v16 + 168);
            if (!v126) {
              uint64_t v126 = v16;
            }
            *(unsigned char *)(v126 + 32) = 1;
            sub_1B0CBB19C(v16, v15, (uint64_t)v331, v332, v338, v14, 1, 0, a9, 5u, 1u, 0xFFFFFFFF);
            int v127 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v127)
            {
              int v335 = 1;
              sub_1B0D25510(v18, 86, HIDWORD(v333), 1, 0, a6, a7, a8);
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v127 + 1;
              uint64_t v128 = *(void *)(v18 + 136) + 40 * v127;
              *(_DWORD *)uint64_t v128 = 86;
              *(_DWORD *)(v128 + 4) = HIDWORD(v333);
              int v335 = 1;
              *(_DWORD *)(v128 + 8) = 1;
              *(void *)(v128 + 12) = 0;
              *(void *)(v128 + 28) = 0;
              *(void *)(v128 + 20) = 0;
              *(_DWORD *)(v128 + 36) = 0;
            }
            int v337 = 1;
            goto LABEL_250;
          }
          int v308 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v308)
          {
            sub_1B0D25510(v18, 130, v332, 64, 0, a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v18 + 144) = v308 + 1;
            uint64_t v309 = *(void *)(v18 + 136) + 40 * v308;
            *(_DWORD *)uint64_t v309 = 130;
            *(_DWORD *)(v309 + 4) = v332;
            *(_DWORD *)(v309 + 8) = 64;
            *(void *)(v309 + 12) = 0;
            *(void *)(v309 + 28) = 0;
            *(void *)(v309 + 20) = 0;
            *(_DWORD *)(v309 + 36) = 0;
          }
          if (!*(unsigned char *)(*(void *)v18 + 103))
          {
            uint64_t v318 = *(void *)(v18 + 136) + 40 * *(int *)(v18 + 144);
            *(unsigned char *)(v318 - 39) = -5;
            *(void *)(v318 - 24) = v15;
          }
          int v335 = 1;
          if (*(void *)(v15 + 16))
          {
            uint64_t v319 = *(void *)(v16 + 168);
            if (!v319) {
              uint64_t v319 = v16;
            }
            *(unsigned char *)(v319 + 32) = 1;
            sub_1B0D57168(v16, v15, v332, v338, 0, -1, a9);
          }
          goto LABEL_249;
        case 6:
          sub_1B0D5C1CC(v16, v34, v15, 0, v332, a6, a7, a8);
LABEL_245:
          int v129 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v129)
          {
            sub_1B0D25510(v18, 9, 0, a11, 0, a6, a7, a8);
LABEL_248:
            int v335 = 0;
LABEL_249:
            int v337 = 0;
          }
          else
          {
            int v335 = 0;
            int v337 = 0;
            *(_DWORD *)(v18 + 144) = v129 + 1;
            uint64_t v130 = *(void *)(v18 + 136) + 40 * v129;
            *(void *)uint64_t v130 = 9;
            *(_DWORD *)(v130 + 8) = a11;
            *(void *)(v130 + 12) = 0;
            *(void *)(v130 + 28) = 0;
            *(void *)(v130 + 20) = 0;
            *(_DWORD *)(v130 + 36) = 0;
          }
LABEL_250:
          uint64_t v131 = *(void *)(v18 + 24);
          int v132 = -v104;
          if (*(_DWORD *)(v131 + 68) + *(_DWORD *)(v131 + 72) < 0)
          {
            sub_1B0D34EC8(v131, v18, v132);
            if (!v34) {
              goto LABEL_257;
            }
          }
          else
          {
            *(_DWORD *)(*(void *)(v131 + 80) + 4 * v132) = *(_DWORD *)(v18 + 144);
            if (!v34) {
              goto LABEL_257;
            }
          }
          if (v102 != v34)
          {
            int v133 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v133)
            {
              int v341 = sub_1B0D25510(v18, 9, 0, 0, 0, a6, a7, a8);
              int v103 = 0;
            }
            else
            {
              int v103 = 0;
              int v341 = *(_DWORD *)(v18 + 144);
              *(_DWORD *)(v18 + 144) = v133 + 1;
              uint64_t v134 = *(void *)(v18 + 136) + 40 * v133;
              *(unsigned char *)uint64_t v134 = 9;
              a9 = 0uLL;
              *(_OWORD *)(v134 + 1) = 0u;
              *(_OWORD *)(v134 + 17) = 0u;
              *(void *)(v134 + 32) = 0;
            }
            break;
          }
LABEL_257:
          if (v336)
          {
            int v103 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v103)
            {
              int v103 = sub_1B0D25510(v18, 9, 0, 0, 0, a6, a7, a8);
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v103 + 1;
              uint64_t v135 = *(void *)(v18 + 136) + 40 * v103;
              *(unsigned char *)uint64_t v135 = 9;
              a9 = 0uLL;
              *(_OWORD *)(v135 + 1) = 0u;
              *(_OWORD *)(v135 + 17) = 0u;
              *(void *)(v135 + 32) = 0;
            }
            if (*(unsigned char *)(*(void *)v18 + 103)) {
              uint64_t v136 = &byte_1E9B52240;
            }
            else {
              uint64_t v136 = (char *)(*(void *)(v18 + 136) + 40 * (int)(v336 - 1));
            }
            int v341 = 0;
            *((_DWORD *)v136 + 2) = *(_DWORD *)(v18 + 144);
          }
          else
          {
            int v341 = 0;
            unsigned int v336 = 0;
            int v103 = 0;
          }
          break;
        default:
          uint64_t v106 = 2;
LABEL_243:
          sub_1B0D5C0A0((uint64_t *)v16, v106, v15, a4, a5, a6, a7, a8);
          goto LABEL_248;
      }
    }
  }
  else
  {
    int v341 = 0;
    int v344 = 0;
    unsigned int v336 = 0;
    int v337 = 0;
    int v103 = 0;
  }
  int v329 = v103;
  long long v345 = v91;
  if ((v350 & 1) == 0)
  {
    LODWORD(v137) = *((_DWORD *)v91 + 2);
    uint64_t v138 = *v91;
    if (v138) {
      goto LABEL_270;
    }
LABEL_514:
    unsigned int v342 = v333;
LABEL_515:
    int v284 = v335;
    uint64_t v283 = v336;
    if (v336) {
      goto LABEL_516;
    }
    goto LABEL_523;
  }
  LODWORD(v137) = 0;
  uint64_t v138 = v371;
  if (!v371) {
    goto LABEL_514;
  }
LABEL_270:
  int v359 = 0;
  unsigned int v364 = v14 + 1;
  int v369 = ~v14;
  unsigned int v327 = (unsigned int *)(v16 + 44);
  if (v351) {
    BOOL v139 = v331 == 0;
  }
  else {
    BOOL v139 = 1;
  }
  int v140 = !v139;
  int v328 = v140;
  unsigned int v330 = v344 + 1;
  int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
  int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
  int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
  v144.i64[0] = 0x1000100010001;
  v144.i64[1] = 0x1000100010001;
  unsigned int v342 = v333;
  uint64_t v354 = v34;
  while (1)
  {
    while (1)
    {
      uint64_t v365 = (int)v137;
      if (!*(_DWORD *)(v360 + 4 * (int)v137)) {
        goto LABEL_364;
      }
      if (v34)
      {
        uint64_t v102 = v34;
        do
        {
          if (!*(void *)v102) {
            break;
          }
          if (*(void *)(v102 + 56) == v138) {
            break;
          }
          uint64_t v102 = *(void *)(v102 + 32);
        }
        while (v102);
        if (v344 && v102 == v34)
        {
          int16x4_t v145 = &byte_1E9B52240;
          if (!*(unsigned char *)(*(void *)v18 + 103)) {
            int16x4_t v145 = (char *)(*(void *)(v18 + 136) + 40 * v344);
          }
          *((_DWORD *)v145 + 2) = *(_DWORD *)(v18 + 144);
          uint64_t v102 = v34;
        }
      }
      int v146 = *(_DWORD *)(v16 + 68);
      unsigned int v362 = v146 - 1;
      *(_DWORD *)(v16 + 68) = v146 - 1;
      if (!v355)
      {
        sub_1B0D36984(v18, v15, v364, a4, a5, a6, a7, a8);
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        int v355 = 1;
        if (!*(void *)(v138 + 72)) {
          goto LABEL_303;
        }
LABEL_293:
        uint64_t v147 = *(unsigned int *)(v360 + 4 * v365);
        int v148 = *(_DWORD *)(v18 + 144);
        if (*(_DWORD *)(v18 + 148) <= v148)
        {
          sub_1B0D25510(v18, 75, 0, v147, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v18 + 144) = v148 + 1;
          uint64_t v149 = *(void *)(v18 + 136) + 40 * v148;
          *(void *)uint64_t v149 = 75;
          *(_DWORD *)(v149 + 8) = v147;
          *(void *)(v149 + 12) = 0;
          *(void *)(v149 + 28) = 0;
          *(void *)(v149 + 20) = 0;
          *(_DWORD *)(v149 + 36) = 0;
        }
        *(_DWORD *)(v16 + 64) = v369;
        int v150 = *(unsigned __int8 **)(v138 + 72);
        uint64_t v151 = *(void *)v16;
        if (v150) {
          int v152 = sub_1B0CAE048(*(void *)v16, v150, 0, 0);
        }
        else {
          int v152 = 0;
        }
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        if (*(unsigned char *)(v151 + 103))
        {
          if (!v152)
          {
LABEL_302:
            *(_DWORD *)(v16 + 64) = 0;
            goto LABEL_303;
          }
        }
        else
        {
          sub_1B0CC2204(v16, (unsigned __int8 **)v152, v362, 16, a5, a6, a7, a8);
          v144.i64[0] = 0x1000100010001;
          v144.i64[1] = 0x1000100010001;
          int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
          int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
          int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
          if (!v152) {
            goto LABEL_302;
          }
        }
        sub_1B0D1DF88((void *)v151, (unsigned __int8 *)v152);
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        goto LABEL_302;
      }
      if (*(void *)(v138 + 72)) {
        goto LABEL_293;
      }
LABEL_303:
      a5 = *(unsigned int *)(v360 + 4 * v365);
      uint64_t v153 = (a5 + 1);
      int v352 = v146;
      unsigned int v347 = *(_DWORD *)(v360 + 4 * v365);
      if (*(_WORD *)(v138 + 96))
      {
        unint64_t v154 = 0;
        while (1)
        {
          int v155 = *(unsigned __int16 *)(*(void *)(v138 + 8) + 2 * v154);
          if (v155 == 0xFFFF) {
            goto LABEL_315;
          }
          if (v155 == 65534)
          {
            *(_DWORD *)(v16 + 64) = v369;
            uint64_t v156 = *(unsigned __int8 **)(*(void *)(v138 + 80) + 24 * v154 + 8);
            uint64_t v157 = *(void *)v16;
            if (v156)
            {
              int v158 = sub_1B0CAE048(*(void *)v16, v156, 0, 0);
              v144.i64[0] = 0x1000100010001;
              v144.i64[1] = 0x1000100010001;
              int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
              int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
              int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
              char v159 = (unsigned __int8 *)v158;
              if (!*(unsigned char *)(v157 + 103)) {
                goto LABEL_311;
              }
            }
            else
            {
              char v159 = 0;
              if (!*(unsigned char *)(v157 + 103))
              {
LABEL_311:
                sub_1B0D2F9D0(v16, v159, (v153 + v154));
                v144.i64[0] = 0x1000100010001;
                v144.i64[1] = 0x1000100010001;
                int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
                int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
                int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
              }
            }
            if (v159)
            {
              sub_1B0D1DF88((void *)v157, v159);
              v144.i64[0] = 0x1000100010001;
              v144.i64[1] = 0x1000100010001;
              int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
              int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
              int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
            }
            *(_DWORD *)(v16 + 64) = 0;
            goto LABEL_306;
          }
          __int16 v160 = *(_WORD *)(*(void *)(v138 + 8) + 2 * v154);
          if (*(unsigned __int16 *)(v15 + 52) == (unsigned __int16)v155)
          {
LABEL_315:
            uint64_t v161 = (v153 + v154);
            int v162 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v162)
            {
              uint64_t v164 = v18;
              uint64_t v165 = 82;
              uint64_t v166 = v14;
LABEL_340:
              sub_1B0D25510(v164, v165, v166, v161, 0, a6, a7, a8);
              v144.i64[0] = 0x1000100010001;
              v144.i64[1] = 0x1000100010001;
              int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
              int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
              int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
              goto LABEL_306;
            }
            *(_DWORD *)(v18 + 144) = v162 + 1;
            uint64_t v163 = *(void *)(v18 + 136) + 40 * v162;
            *(_DWORD *)uint64_t v163 = 82;
            *(_DWORD *)(v163 + 4) = v14;
          }
          else
          {
            if (((__int16)v155 & 0x80000000) == 0 && (*(_DWORD *)(v15 + 48) & 0x20) != 0)
            {
              uint64_t v167 = *(void *)(v15 + 8);
              if ((_WORD)v155)
              {
                unint64_t v168 = (__int16)v155 & 0xFFFFFFFFLL;
                if (v168 >= 0x11)
                {
                  uint64_t v171 = *(_WORD *)(*(void *)(v138 + 8) + 2 * v154) & 0xF;
                  if ((*(_WORD *)(*(void *)(v138 + 8) + 2 * v154) & 0xF) == 0) {
                    uint64_t v171 = 16;
                  }
                  unint64_t v169 = v168 - v171;
                  uint64_t v172 = v167 + 142;
                  int16x8_t v173 = 0uLL;
                  unint64_t v174 = v169;
                  int16x8_t v175 = 0uLL;
                  do
                  {
                    int8x16_t v176 = vqtbl2q_s8(*(int8x16x2_t *)(v172 - 64), v142);
                    v176.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v172 - 32), v141).i32[3];
                    v177.i32[0] = vzip1q_s16(*(int16x8_t *)(v172 - 128), *(int16x8_t *)(v172 - 112)).u32[0];
                    v177.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v172 - 96), v143).i32[1];
                    v177.i64[1] = v176.i64[1];
                    uint16x8_t v178 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)(v172 + 96), v141);
                    int8x16x2_t v377 = *(int8x16x2_t *)(v172 + 32);
                    int8x16_t v179 = vqtbl2q_s8(*(int8x16x2_t *)(v172 + 64), v142);
                    int16x8_t v181 = *(int16x8_t *)v172;
                    int16x8_t v180 = *(int16x8_t *)(v172 + 16);
                    v172 += 256;
                    v179.i32[3] = v178.i32[3];
                    v178.i32[0] = vzip1q_s16(v181, v180).u32[0];
                    v178.i32[1] = vqtbl2q_s8(v377, v143).i32[1];
                    v178.i64[1] = v179.i64[1];
                    int16x8_t v173 = vaddq_s16((int16x8_t)vbicq_s8(v144, (int8x16_t)vshrq_n_u16(v177, 5uLL)), v173);
                    int16x8_t v175 = vaddq_s16((int16x8_t)vbicq_s8(v144, (int8x16_t)vshrq_n_u16(v178, 5uLL)), v175);
                    v174 -= 16;
                  }
                  while (v174);
                  a9 = vaddq_s16(v175, v173);
                  a9.i16[0] = vaddvq_s16(a9);
                  unsigned __int16 v170 = a9.i16[0];
                }
                else
                {
                  unint64_t v169 = 0;
                  unsigned __int16 v170 = 0;
                }
                unint64_t v182 = v168 - v169;
                uint64_t v183 = (unsigned __int16 *)(v167 + 16 * v169 + 14);
                do
                {
                  unsigned int v184 = *v183;
                  v183 += 8;
                  v170 += ((v184 >> 5) & 1) == 0;
                  --v182;
                }
                while (v182);
              }
              else
              {
                unint64_t v168 = 0;
                unsigned __int16 v170 = 0;
              }
              if ((*(_WORD *)(v167 + 16 * v168 + 14) & 0x20) != 0) {
                __int16 v160 = v160 - v170 + *(_WORD *)(v15 + 56);
              }
              else {
                __int16 v160 = v170;
              }
            }
            uint64_t v166 = v364 + v160;
            uint64_t v161 = (v153 + v154);
            int v185 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v185)
            {
              uint64_t v164 = v18;
              uint64_t v165 = 81;
              goto LABEL_340;
            }
            *(_DWORD *)(v18 + 144) = v185 + 1;
            uint64_t v163 = *(void *)(v18 + 136) + 40 * v185;
            *(_DWORD *)uint64_t v163 = 81;
            *(_DWORD *)(v163 + 4) = v166;
          }
          *(_DWORD *)(v163 + 8) = v161;
          *(void *)(v163 + 12) = 0;
          *(void *)(v163 + 28) = 0;
          *(void *)(v163 + 20) = 0;
          *(_DWORD *)(v163 + 36) = 0;
LABEL_306:
          ++v154;
          a4 = *(unsigned __int16 *)(v138 + 96);
          if (v154 >= a4)
          {
            a5 = *(unsigned int *)(v360 + 4 * v365);
            int v146 = v352;
            goto LABEL_343;
          }
        }
      }
      a4 = 0;
LABEL_343:
      int v186 = *(_DWORD *)(v18 + 144);
      if (*(_DWORD *)(v18 + 148) <= v186)
      {
        sub_1B0D25510(v18, 97, v153, a4, a5, a6, a7, a8);
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        if (!v351) {
          goto LABEL_349;
        }
      }
      else
      {
        *(_DWORD *)(v18 + 144) = v186 + 1;
        uint64_t v187 = *(void *)(v18 + 136) + 40 * v186;
        *(_DWORD *)uint64_t v187 = 97;
        *(_DWORD *)(v187 + 4) = v153;
        *(_DWORD *)(v187 + 8) = a4;
        *(_DWORD *)(v187 + 12) = a5;
        *(void *)(v187 + 24) = 0;
        *(void *)(v187 + 32) = 0;
        *(void *)(v187 + 16) = 0;
        if (!v351) {
          goto LABEL_349;
        }
      }
      if (!v349 && v357 == v138)
      {
LABEL_360:
        uint64_t v192 = *(void *)(v18 + 24);
        int v193 = -v146;
        if (*(_DWORD *)(v192 + 68) + *(_DWORD *)(v192 + 72) < 0)
        {
          sub_1B0D34EC8(v192, v18, v193);
          v144.i64[0] = 0x1000100010001;
          v144.i64[1] = 0x1000100010001;
          int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
          int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
          int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        }
        else
        {
          *(_DWORD *)(*(void *)(v192 + 80) + 4 * v193) = *(_DWORD *)(v18 + 144);
        }
        uint64_t v34 = v354;
LABEL_364:
        int v194 = v359;
        goto LABEL_365;
      }
LABEL_349:
      int v188 = *(unsigned __int8 *)(v138 + 98);
      if (!*(unsigned char *)(v138 + 98)) {
        goto LABEL_360;
      }
      if (v188 == 11) {
        int v188 = 2;
      }
      if (v366 != 11) {
        int v188 = v366;
      }
      if (v102)
      {
        if (*(unsigned char *)(v102 + 40)) {
          int v188 = 6;
        }
        else {
          int v188 = 4;
        }
      }
      unsigned int v343 = v188;
      unsigned int v189 = v365 + v338;
      a6 = *(unsigned __int16 *)(v138 + 94);
      int v190 = *(_DWORD *)(v18 + 144);
      if (*(_DWORD *)(v18 + 148) <= v190)
      {
        int v190 = sub_1B0D2575C(v18, 27, v365 + v338, v362, v153, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v18 + 144) = v190 + 1;
        uint64_t v191 = *(void *)(v18 + 136) + 40 * v190;
        *(_DWORD *)uint64_t v191 = 64795;
        *(_DWORD *)(v191 + 4) = v189;
        *(_DWORD *)(v191 + 8) = v362;
        *(_DWORD *)(v191 + 12) = v153;
        *(_DWORD *)(v191 + 16) = a6;
        *(void *)(v191 + 24) = 0;
        *(void *)(v191 + 32) = 0;
      }
      unsigned int v196 = v153;
      if (v357 != v138)
      {
        if (v340 == 1)
        {
          if (*(unsigned char *)(v16 + 31))
          {
            unsigned __int8 v197 = *(unsigned char *)(v16 + 31) - 1;
            *(unsigned char *)(v16 + 31) = v197;
            unsigned int v196 = *(_DWORD *)(v16 + 4 * v197 + 224);
          }
          else
          {
            unsigned int v196 = *(_DWORD *)(v16 + 56) + 1;
            *(_DWORD *)(v16 + 56) = v196;
          }
        }
        else
        {
          int v198 = *(_DWORD *)(v16 + 40);
          BOOL v40 = __OFSUB__(v198, v340);
          int v199 = v198 - v340;
          if (v199 < 0 != v40)
          {
            int v200 = *(_DWORD *)(v16 + 56);
            unsigned int v196 = v200 + 1;
            *(_DWORD *)(v16 + 56) = v200 + v340;
          }
          else
          {
            unsigned int v196 = *(_DWORD *)(v16 + 44);
            *(_DWORD *)(v16 + 40) = v199;
            *(_DWORD *)(v16 + 44) = v196 + v340;
          }
        }
      }
      unsigned int v339 = v365 + v338;
      int v334 = v190;
      unsigned int v346 = v196;
      uint64_t v201 = v357;
      if (v351 || v343 == 5)
      {
        if ((*(unsigned char *)(v15 + 48) & 0x80) != 0)
        {
          if (v357 != v138 && *(_WORD *)(v357 + 94))
          {
            unint64_t v206 = 0;
            do
            {
              if (*(_WORD *)(v138 + 96))
              {
                uint64_t v208 = 0;
                while (*(unsigned __int16 *)(*(void *)(v138 + 8) + 2 * v208) != *(unsigned __int16 *)(*(void *)(v357 + 8) + 2 * v206))
                {
                  if (*(unsigned __int16 *)(v138 + 96) == ++v208) {
                    goto LABEL_402;
                  }
                }
              }
              else
              {
LABEL_402:
                LOWORD(v208) = -1;
              }
              a4 = (__int16)v208;
              a5 = v346 + v206;
              int v209 = *(_DWORD *)(v18 + 144);
              if (*(_DWORD *)(v18 + 148) > v209)
              {
                *(_DWORD *)(v18 + 144) = v209 + 1;
                uint64_t v207 = *(void *)(v18 + 136) + 40 * v209;
                *(_DWORD *)uint64_t v207 = 94;
                *(_DWORD *)(v207 + 4) = v189;
                *(_DWORD *)(v207 + 8) = a4;
                *(_DWORD *)(v207 + 12) = a5;
                *(void *)(v207 + 24) = 0;
                *(void *)(v207 + 32) = 0;
                *(void *)(v207 + 16) = 0;
              }
              else
              {
                sub_1B0D25510(v18, 94, v189, a4, a5, a6, a7, a8);
              }
              ++v206;
            }
            while (v206 < *(unsigned __int16 *)(v357 + 94));
          }
          if (v351)
          {
            int v210 = v346;
            if ((*(_WORD *)(v138 + 99) & 3) == 2) {
              int v210 = v153;
            }
            int v348 = v210;
            if (*(_WORD *)(v357 + 94))
            {
              unint64_t v211 = 0;
              LODWORD(v212) = *(_DWORD *)(v18 + 144) + *(unsigned __int16 *)(v357 + 94);
              LODWORD(v213) = 52;
              do
              {
                uint64_t v214 = *(char **)(*(void *)(v201 + 64) + 8 * v211);
                uint64_t v215 = *(unsigned __int8 *)(*(void *)a1 + 100);
                int v216 = *(unsigned __int8 *)(*(void *)a1 + 197);
                int v217 = sub_1B0D224B0(*(void *)a1, *(unsigned __int8 *)(*(void *)a1 + 100), v214, v216);
                uint64_t v221 = (uint64_t)v217;
                if (!v216 && (!v217 || !v217[3])) {
                  uint64_t v221 = sub_1B0D2719C(a1, v215, (uint64_t)v217, v214, v218, (uint64_t)v217, v219, v220);
                }
                uint64_t v15 = v353;
                uint64_t v14 = v367;
                uint64_t v201 = v357;
                uint64_t v222 = *(__int16 *)(*(void *)(v357 + 8) + 2 * v211);
                if (v211 == *(unsigned __int16 *)(v357 + 94) - 1) {
                  uint64_t v212 = v362;
                }
                else {
                  uint64_t v212 = v212;
                }
                if (v211 == *(unsigned __int16 *)(v357 + 94) - 1) {
                  uint64_t v213 = 53;
                }
                else {
                  uint64_t v213 = v213;
                }
                v223.i64[0] = 0x1000100010001;
                v223.i64[1] = 0x1000100010001;
                if ((v222 & 0x8000000000000000) == 0 && (*(_DWORD *)(v353 + 48) & 0x20) != 0)
                {
                  uint64_t v224 = *(void *)(v353 + 8);
                  if (*(_WORD *)(*(void *)(v357 + 8) + 2 * v211))
                  {
                    uint64_t v225 = v222;
                    if (v222 >= 0x11uLL)
                    {
                      uint64_t v228 = v222 & 0xF;
                      if ((v222 & 0xF) == 0) {
                        uint64_t v228 = 16;
                      }
                      uint64_t v226 = v222 - v228;
                      uint64_t v229 = v224 + 142;
                      int16x8_t v230 = 0uLL;
                      uint64_t v231 = v226;
                      int16x8_t v232 = 0uLL;
                      do
                      {
                        int8x16_t v233 = vqtbl2q_s8(*(int8x16x2_t *)(v229 - 64), (int8x16_t)xmmword_1B0DE1610);
                        v233.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v229 - 32), (int8x16_t)xmmword_1B0DE1600).i32[3];
                        v234.i32[0] = vzip1q_s16(*(int16x8_t *)(v229 - 128), *(int16x8_t *)(v229 - 112)).u32[0];
                        v234.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v229 - 96), (int8x16_t)xmmword_1B0DE1620).i32[1];
                        v234.i64[1] = v233.i64[1];
                        uint16x8_t v235 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)(v229 + 96), (int8x16_t)xmmword_1B0DE1600);
                        int8x16x2_t v378 = *(int8x16x2_t *)(v229 + 32);
                        int8x16_t v236 = vqtbl2q_s8(*(int8x16x2_t *)(v229 + 64), (int8x16_t)xmmword_1B0DE1610);
                        int16x8_t v238 = *(int16x8_t *)v229;
                        int16x8_t v237 = *(int16x8_t *)(v229 + 16);
                        v229 += 256;
                        v236.i32[3] = v235.i32[3];
                        v235.i32[0] = vzip1q_s16(v238, v237).u32[0];
                        v235.i32[1] = vqtbl2q_s8(v378, (int8x16_t)xmmword_1B0DE1620).i32[1];
                        v235.i64[1] = v236.i64[1];
                        int16x8_t v230 = vaddq_s16((int16x8_t)vbicq_s8(v223, (int8x16_t)vshrq_n_u16(v234, 5uLL)), v230);
                        int16x8_t v232 = vaddq_s16((int16x8_t)vbicq_s8(v223, (int8x16_t)vshrq_n_u16(v235, 5uLL)), v232);
                        v231 -= 16;
                      }
                      while (v231);
                      __int16 v227 = vaddvq_s16(vaddq_s16(v232, v230));
                    }
                    else
                    {
                      uint64_t v226 = 0;
                      __int16 v227 = 0;
                    }
                    uint64_t v239 = v222 - v226;
                    uint64_t v240 = (unsigned __int16 *)(v224 + 16 * v226 + 14);
                    do
                    {
                      unsigned int v241 = *v240;
                      v240 += 8;
                      v227 += ((v241 >> 5) & 1) == 0;
                      --v239;
                    }
                    while (v239);
                  }
                  else
                  {
                    uint64_t v225 = 0;
                    __int16 v227 = 0;
                  }
                  if ((*(_WORD *)(v224 + 16 * v225 + 14) & 0x20) != 0) {
                    LOWORD(v222) = v222 - v227 + *(_WORD *)(v353 + 56);
                  }
                  else {
                    LOWORD(v222) = v227;
                  }
                }
                sub_1B0CCB908((uint64_t *)v18, v213, v351 + 1 + (__int16)v222, v212, (v348 + v211), v221, 4294967294, v220);
                int v242 = *(_DWORD *)(v18 + 144);
                BOOL v40 = __OFSUB__(v242, 1);
                int v243 = v242 - 1;
                if (v243 < 0 == v40) {
                  *(_WORD *)(*(void *)(v18 + 136) + 40 * v243 + 2) = 144;
                }
                ++v211;
              }
              while (v211 < *(unsigned __int16 *)(v357 + 94));
            }
          }
        }
        else
        {
          int v202 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v202)
          {
            sub_1B0D25510(v18, 142, v189, v196, 0, a6, a7, a8);
            if (!v351) {
              goto LABEL_382;
            }
          }
          else
          {
            *(_DWORD *)(v18 + 144) = v202 + 1;
            uint64_t v203 = *(void *)(v18 + 136) + 40 * v202;
            *(_DWORD *)uint64_t v203 = 142;
            *(_DWORD *)(v203 + 4) = v189;
            *(_DWORD *)(v203 + 8) = v196;
            *(void *)(v203 + 12) = 0;
            *(void *)(v203 + 28) = 0;
            *(void *)(v203 + 20) = 0;
            *(_DWORD *)(v203 + 36) = 0;
            if (!v351) {
              goto LABEL_382;
            }
          }
          int v258 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v258)
          {
            sub_1B0D25510(v18, 53, v346, v362, v351, a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v18 + 144) = v258 + 1;
            uint64_t v259 = *(void *)(v18 + 136) + 40 * v258;
            *(_DWORD *)uint64_t v259 = 53;
            *(_DWORD *)(v259 + 4) = v346;
            *(_DWORD *)(v259 + 8) = v362;
            *(_DWORD *)(v259 + 12) = v351;
            *(void *)(v259 + 24) = 0;
            *(void *)(v259 + 32) = 0;
            *(void *)(v259 + 16) = 0;
          }
          int v262 = *(_DWORD *)(v18 + 144);
          BOOL v40 = __OFSUB__(v262, 1);
          int v263 = v262 - 1;
          if (v263 < 0 == v40) {
            *(_WORD *)(*(void *)(v18 + 136) + 40 * v263 + 2) = 144;
          }
        }
      }
LABEL_382:
      if (v343 - 1 < 3)
      {
        uint64_t v16 = a1;
        sub_1B0D3BD18((uint64_t *)a1, v343, v138, a4, a5, a6, a7, a8);
        goto LABEL_447;
      }
      uint64_t v16 = a1;
      if (v343 == 4) {
        goto LABEL_391;
      }
      if (v343 == 6)
      {
        sub_1B0D5C1CC(a1, v354, v15, v138, v339, a6, a7, a8);
LABEL_391:
        int v204 = *(_DWORD *)(v18 + 144);
        if (*(_DWORD *)(v18 + 148) <= v204)
        {
          sub_1B0D25510(v18, 9, 0, a11, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v18 + 144) = v204 + 1;
          uint64_t v205 = *(void *)(v18 + 136) + 40 * v204;
          *(void *)uint64_t v205 = 9;
          *(_DWORD *)(v205 + 8) = a11;
          *(void *)(v205 + 12) = 0;
          *(void *)(v205 + 28) = 0;
          *(void *)(v205 + 20) = 0;
          *(_DWORD *)(v205 + 36) = 0;
        }
LABEL_447:
        int v194 = v359;
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        unsigned int v246 = v346;
        goto LABEL_448;
      }
      int v244 = *(_DWORD *)(v18 + 144);
      if (HIDWORD(v333))
      {
        uint64_t v245 = *(void *)(a1 + 168);
        if (!v245) {
          uint64_t v245 = a1;
        }
        *(unsigned char *)(v245 + 32) = 1;
        ++v337;
      }
      unsigned int v246 = v346;
      if (v328)
      {
        if (*(_DWORD *)(v18 + 148) <= v244)
        {
          uint64_t v248 = v332;
          sub_1B0D25510(v18, 167, v332, 0, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v18 + 144) = v244 + 1;
          uint64_t v247 = *(void *)(v18 + 136) + 40 * v244;
          uint64_t v248 = v332;
          *(_DWORD *)uint64_t v247 = 167;
          *(_DWORD *)(v247 + 4) = v332;
          int16x8_t v249 = 0uLL;
          *(_OWORD *)(v247 + 8) = 0u;
          *(_OWORD *)(v247 + 24) = 0u;
        }
        sub_1B0CBB19C(a1, v15, (uint64_t)v331, v248, v338, v346, (__int16)v340, 0, v249, 5u, v357 == v138, v339);
        int v268 = *(_DWORD *)(v18 + 144);
        if (*(_DWORD *)(v18 + 148) <= v268)
        {
          sub_1B0D25510(v18, 168, v248, 0, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v18 + 144) = v268 + 1;
          uint64_t v269 = *(void *)(v18 + 136) + 40 * v268;
          *(_DWORD *)uint64_t v269 = 168;
          *(_DWORD *)(v269 + 4) = v248;
          a9 = 0uLL;
          *(_OWORD *)(v269 + 8) = 0u;
          *(_OWORD *)(v269 + 24) = 0u;
        }
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        unsigned int v246 = v346;
        if (HIDWORD(v333))
        {
LABEL_474:
          int v260 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v260)
          {
            sub_1B0D25510(v18, 86, HIDWORD(v333), 1, 0, a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v18 + 144) = v260 + 1;
            uint64_t v261 = *(void *)(v18 + 136) + 40 * v260;
            *(_DWORD *)uint64_t v261 = 86;
            *(_DWORD *)(v261 + 4) = HIDWORD(v333);
            *(_DWORD *)(v261 + 8) = 1;
            *(void *)(v261 + 12) = 0;
            *(void *)(v261 + 28) = 0;
            *(void *)(v261 + 20) = 0;
            *(_DWORD *)(v261 + 36) = 0;
          }
          int v264 = *(_DWORD *)(v18 + 144);
          if (*(_DWORD *)(v18 + 148) <= v264)
          {
            int v264 = sub_1B0D25510(v18, 9, 0, 0, 0, a6, a7, a8);
          }
          else
          {
            *(_DWORD *)(v18 + 144) = v264 + 1;
            uint64_t v265 = *(void *)(v18 + 136) + 40 * v264;
            *(unsigned char *)uint64_t v265 = 9;
            *(_OWORD *)(v265 + 1) = 0u;
            *(_OWORD *)(v265 + 17) = 0u;
            *(void *)(v265 + 32) = 0;
          }
          uint64_t v266 = *(void *)(v18 + 24);
          int v267 = ~v342;
          if (*(_DWORD *)(v266 + 68) + *(_DWORD *)(v266 + 72) < 0) {
            sub_1B0D34EC8(v266, v18, v267);
          }
          else {
            *(_DWORD *)(*(void *)(v266 + 80) + 4 * v267) = *(_DWORD *)(v18 + 144);
          }
          unsigned int v342 = *(_DWORD *)(a1 + 68) - 1;
          *(_DWORD *)(a1 + 68) = v342;
          if (*(void *)(v138 + 72))
          {
            int v270 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v270)
            {
              sub_1B0D25510(v18, 50, v347, v342, 0, a6, a7, a8);
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v270 + 1;
              uint64_t v271 = *(void *)(v18 + 136) + 40 * v270;
              *(_DWORD *)uint64_t v271 = 50;
              *(_DWORD *)(v271 + 4) = v347;
              *(_DWORD *)(v271 + 8) = v342;
              *(void *)(v271 + 12) = 0;
              *(void *)(v271 + 28) = 0;
              *(void *)(v271 + 20) = 0;
              *(_DWORD *)(v271 + 36) = 0;
            }
          }
          if (v244 - v334 >= 1)
          {
            uint64_t v272 = 40 * v334;
            int v273 = v244 - v334 + 1;
            do
            {
              uint64_t v274 = &byte_1E9B52240;
              if (!*(unsigned char *)(*(void *)v18 + 103)) {
                uint64_t v274 = (char *)(*(void *)(v18 + 136) + v272);
              }
              uint64_t v275 = *v274;
              if (v275 != 142)
              {
                __int16 v276 = *((_WORD *)v274 + 1);
                uint64_t v277 = v274[1];
                uint64_t v278 = (byte_1B0DE18AA[*v274] & 1) != 0 ? v342 : *((unsigned int *)v274 + 2);
                uint64_t v279 = v277 == -3 ? (int)*((void *)v274 + 2) : *((void *)v274 + 2);
                sub_1B0CCB908((uint64_t *)v18, v275, *((unsigned int *)v274 + 1), v278, *((unsigned int *)v274 + 3), v279, v277, a8);
                int v280 = *(_DWORD *)(v18 + 144);
                BOOL v40 = __OFSUB__(v280, 1);
                int v281 = v280 - 1;
                if (v281 < 0 == v40) {
                  *(_WORD *)(*(void *)(v18 + 136) + 40 * v281 + 2) = v276;
                }
              }
              v272 += 40;
              --v273;
            }
            while (v273 > 1);
          }
          sub_1B0D3BD18((uint64_t *)a1, 2, v138, a4, a5, a6, a7, a8);
          int v282 = &byte_1E9B52240;
          if (!*(unsigned char *)(*(void *)v18 + 103)) {
            int v282 = (char *)(*(void *)(v18 + 136) + 40 * v264);
          }
          *((_DWORD *)v282 + 2) = *(_DWORD *)(v18 + 144);
          int v335 = 1;
          uint64_t v14 = v367;
          goto LABEL_447;
        }
      }
      else
      {
        sub_1B0CBB19C(a1, v15, (uint64_t)v331, v332, v338, v346, (__int16)v340, 0, a9, 5u, v357 == v138, v339);
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        if (HIDWORD(v333)) {
          goto LABEL_474;
        }
      }
      int v335 = 1;
      int v194 = v359;
LABEL_448:
      uint64_t v250 = *(void *)(v18 + 24);
      int v251 = -v352;
      if (*(_DWORD *)(v250 + 68) + *(_DWORD *)(v250 + 72) < 0)
      {
        sub_1B0D34EC8(v250, v18, v251);
        v144.i64[0] = 0x1000100010001;
        v144.i64[1] = 0x1000100010001;
        int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
        int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
      }
      else
      {
        *(_DWORD *)(*(void *)(v250 + 80) + 4 * v251) = *(_DWORD *)(v18 + 144);
      }
      BOOL v114 = v246 == v153;
      uint64_t v34 = v354;
      if (!v114)
      {
        if (v340 == 1)
        {
          if (v246)
          {
            uint64_t v252 = *(unsigned __int8 *)(v16 + 31);
            if (v252 <= 7)
            {
              *(unsigned char *)(v16 + 31) = v252 + 1;
              long long v253 = (unsigned int *)(v16 + 4 * v252 + 224);
LABEL_458:
              unsigned int *v253 = v246;
            }
          }
        }
        else if (*(_DWORD *)(v16 + 40) < v340)
        {
          *(_DWORD *)(v16 + 40) = v340;
          long long v253 = v327;
          goto LABEL_458;
        }
      }
      if (v102)
      {
        if (v341)
        {
          uint64_t v254 = *(void **)(v102 + 32);
          if (!v254 || !*v254 || !v254[7])
          {
            int v255 = *(_DWORD *)(v18 + 144);
            if (*(_DWORD *)(v18 + 148) <= v255)
            {
              sub_1B0D25510(v18, 9, 0, v330, 0, a6, a7, a8);
              v144.i64[0] = 0x1000100010001;
              v144.i64[1] = 0x1000100010001;
              int8x16_t v143 = (int8x16_t)xmmword_1B0DE1620;
              int8x16_t v142 = (int8x16_t)xmmword_1B0DE1610;
              int8x16_t v141 = (int8x16_t)xmmword_1B0DE1600;
            }
            else
            {
              *(_DWORD *)(v18 + 144) = v255 + 1;
              uint64_t v256 = *(void *)(v18 + 136) + 40 * v255;
              *(void *)uint64_t v256 = 9;
              *(_DWORD *)(v256 + 8) = v330;
              *(void *)(v256 + 12) = 0;
              *(void *)(v256 + 28) = 0;
              *(void *)(v256 + 20) = 0;
              *(_DWORD *)(v256 + 36) = 0;
            }
            uint64_t v257 = &byte_1E9B52240;
            if (!*(unsigned char *)(*(void *)v18 + 103)) {
              uint64_t v257 = (char *)(*(void *)(v18 + 136) + 40 * v341);
            }
            int v341 = 0;
            *((_DWORD *)v257 + 2) = *(_DWORD *)(v18 + 144);
          }
        }
      }
LABEL_365:
      if ((v350 & 1) == 0) {
        break;
      }
      LODWORD(v137) = v365 + 1;
      uint64_t v138 = *(void *)(v371 + 40);
      uint64_t v371 = v138;
      if (!v138) {
        goto LABEL_515;
      }
    }
    uint64_t v137 = v194 + 1;
    if ((int)v137 >= (int)v371) {
      break;
    }
    int v359 = v137;
    uint64_t v195 = &v345[2 * v137];
    LODWORD(v137) = *((_DWORD *)v195 + 2);
    uint64_t v138 = *v195;
    if (!*v195) {
      goto LABEL_515;
    }
  }
  int v284 = v335;
  uint64_t v283 = v336;
  if (!v336) {
    goto LABEL_523;
  }
LABEL_516:
  int v285 = *(_DWORD *)(v18 + 144);
  if (*(_DWORD *)(v18 + 148) <= v285)
  {
    sub_1B0D25510(v18, 9, 0, v283, 0, a6, a7, a8);
  }
  else
  {
    *(_DWORD *)(v18 + 144) = v285 + 1;
    uint64_t v286 = *(void *)(v18 + 136) + 40 * v285;
    *(void *)uint64_t v286 = 9;
    *(_DWORD *)(v286 + 8) = v283;
    *(void *)(v286 + 12) = 0;
    *(void *)(v286 + 28) = 0;
    *(void *)(v286 + 20) = 0;
    *(_DWORD *)(v286 + 36) = 0;
  }
  if (*(unsigned char *)(*(void *)v18 + 103)) {
    uint64_t v287 = &byte_1E9B52240;
  }
  else {
    uint64_t v287 = (char *)(*(void *)(v18 + 136) + 40 * v329);
  }
  *((_DWORD *)v287 + 2) = *(_DWORD *)(v18 + 144);
LABEL_523:
  if (v337)
  {
    int v288 = *(_DWORD *)(v18 + 144);
    if (*(_DWORD *)(v18 + 148) <= v288)
    {
      sub_1B0D25510(v18, 17, HIDWORD(v333), v342, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v18 + 144) = v288 + 1;
      uint64_t v289 = *(void *)(v18 + 136) + 40 * v288;
      *(_DWORD *)uint64_t v289 = 17;
      *(_DWORD *)(v289 + 4) = HIDWORD(v333);
      *(_DWORD *)(v289 + 8) = v342;
      *(void *)(v289 + 12) = 0;
      *(void *)(v289 + 28) = 0;
      *(void *)(v289 + 20) = 0;
      *(_DWORD *)(v289 + 36) = 0;
    }
    int v290 = *(_DWORD *)(v18 + 144);
    if (v357)
    {
      if (*(_DWORD *)(v18 + 148) <= v290)
      {
        sub_1B0D25510(v18, 9, 0, v333, 0, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v18 + 144) = v290 + 1;
        uint64_t v291 = *(void *)(v18 + 136) + 40 * v290;
        *(void *)uint64_t v291 = 9;
        *(_DWORD *)(v291 + 8) = v333;
        *(void *)(v291 + 12) = 0;
        *(void *)(v291 + 28) = 0;
        *(void *)(v291 + 20) = 0;
        *(_DWORD *)(v291 + 36) = 0;
      }
    }
    else
    {
      if (v351)
      {
        if (*(_DWORD *)(v18 + 148) <= v290)
        {
          sub_1B0D25510(v18, 53, v14, v333, v351, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v18 + 144) = v290 + 1;
          uint64_t v292 = *(void *)(v18 + 136) + 40 * v290;
          *(_DWORD *)uint64_t v292 = 53;
          *(_DWORD *)(v292 + 4) = v14;
          *(_DWORD *)(v292 + 8) = v333;
          *(_DWORD *)(v292 + 12) = v351;
          *(void *)(v292 + 24) = 0;
          *(void *)(v292 + 32) = 0;
          *(void *)(v292 + 16) = 0;
        }
        int v290 = *(_DWORD *)(v18 + 144);
        if (v290 >= 1) {
          *(_WORD *)(*(void *)(v18 + 136) + 40 * (v290 - 1) + 2) = 144;
        }
      }
      if (*(_DWORD *)(v18 + 148) <= v290)
      {
        sub_1B0D25510(v18, 31, v332, v333, v14, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v18 + 144) = v290 + 1;
        uint64_t v293 = *(void *)(v18 + 136) + 40 * v290;
        *(_DWORD *)uint64_t v293 = 31;
        *(_DWORD *)(v293 + 4) = v332;
        *(_DWORD *)(v293 + 8) = v333;
        *(_DWORD *)(v293 + 12) = v14;
        *(void *)(v293 + 24) = 0;
        *(void *)(v293 + 32) = 0;
        *(void *)(v293 + 16) = 0;
      }
      sub_1B0D5C0A0((uint64_t *)v16, 2, v15, v283, a5, a6, a7, a8);
    }
    uint64_t v294 = *(void *)(v18 + 24);
    int v295 = ~v342;
    if (*(_DWORD *)(v294 + 68) + *(_DWORD *)(v294 + 72) >= 0)
    {
      *(_DWORD *)(*(void *)(v294 + 80) + 4 * v295) = *(_DWORD *)(v18 + 144);
      goto LABEL_545;
    }
    sub_1B0D34EC8(v294, v18, v295);
    if ((*(unsigned char *)(v15 + 48) & 0x80) != 0) {
      goto LABEL_552;
    }
  }
  else
  {
LABEL_545:
    if ((*(unsigned char *)(v15 + 48) & 0x80) != 0) {
      goto LABEL_552;
    }
  }
  uint64_t v296 = *(unsigned int *)(v360 + 4 * (int)v137);
  uint64_t v297 = (v14 + 1);
  uint64_t v298 = *(__int16 *)(v15 + 56);
  int v299 = *(_DWORD *)(v18 + 144);
  if (*(_DWORD *)(v18 + 148) <= v299)
  {
    sub_1B0D25510(v18, 97, v297, v298, v296, a6, a7, a8);
    if (v355) {
      goto LABEL_552;
    }
  }
  else
  {
    *(_DWORD *)(v18 + 144) = v299 + 1;
    uint64_t v300 = *(void *)(v18 + 136) + 40 * v299;
    *(_DWORD *)uint64_t v300 = 97;
    *(_DWORD *)(v300 + 4) = v297;
    *(_DWORD *)(v300 + 8) = v298;
    *(_DWORD *)(v300 + 12) = v296;
    *(void *)(v300 + 24) = 0;
    *(void *)(v300 + 32) = 0;
    *(void *)(v300 + 16) = 0;
    if (v355) {
      goto LABEL_552;
    }
  }
  sub_1B0D36984(v18, v15, 0, v298, v296, a6, a7, a8);
LABEL_552:
  *a12 = v284;
}

uint64_t sub_1B0CBB19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int16x8_t a9, unsigned __int8 a10, unsigned __int8 a11, unsigned int a12)
{
  int v12 = a8;
  unsigned int v119 = a7;
  unsigned int v121 = a6;
  unsigned int v116 = a5;
  uint64_t v14 = a3;
  int v17 = a11;
  uint64_t v18 = a10;
  uint64_t v19 = *(void *)(a1 + 16);
  int v20 = *(_DWORD *)(a1 + 68);
  uint64_t v21 = (v20 - 1);
  *(_DWORD *)(a1 + 68) = v21;
  if ((*(unsigned char *)(a2 + 48) & 0x80) != 0) {
    int v22 = 28;
  }
  else {
    int v22 = 31;
  }
  unsigned int v118 = v22;
  if (!a11)
  {
    int v23 = *(_DWORD *)(v19 + 144);
    if (*(_DWORD *)(v19 + 148) <= v23)
    {
      sub_1B0D2575C(v19, v118, a4, (v20 - 1), a6, a7, a7, a8);
    }
    else
    {
      *(_DWORD *)(v19 + 144) = v23 + 1;
      uint64_t v24 = *(void *)(v19 + 136) + 40 * v23;
      *(unsigned char *)uint64_t v24 = v118;
      *(_WORD *)(v24 + 2) = 0;
      *(_DWORD *)(v24 + 4) = a4;
      *(_DWORD *)(v24 + 8) = v21;
      *(_DWORD *)(v24 + 12) = a6;
      *(_DWORD *)(v24 + 16) = a7;
      *(unsigned char *)(v24 + 1) = -3;
      *(void *)(v24 + 24) = 0;
      *(void *)(v24 + 32) = 0;
    }
  }
  int v117 = v12;
  if ((*(unsigned char *)(*(void *)a1 + 49) & 0x40) == 0 || *(unsigned char *)(a2 + 63)) {
    goto LABEL_10;
  }
  uint64_t v63 = *(void *)(a2 + 96);
  uint16x8_t v64 = *(unsigned __int8 **)a2;
  uint64_t v65 = *(void *)(v63 + 96);
  if (v65)
  {
    int v66 = *v64;
    if (*v64)
    {
      unsigned int v67 = 0;
      uint64_t v68 = v64 + 1;
      do
      {
        unsigned int v67 = -1640531535 * (v67 + byte_1B0DE1758[v66]);
        int v69 = *v68++;
        int v66 = v69;
      }
      while (v69);
    }
    else
    {
      unsigned int v67 = 0;
    }
    uint64_t v108 = (_DWORD *)(v65 + 16 * (v67 % *(_DWORD *)(v63 + 80)));
    int v103 = (uint64_t *)(v108 + 2);
    int v104 = *v108;
    if (v104)
    {
      while (1)
      {
LABEL_145:
        int v103 = (uint64_t *)*v103;
        int v109 = (unsigned char *)v103[3];
        for (uint64_t i = *(unsigned __int8 **)a2; ; ++i)
        {
          uint64_t v111 = *v109;
          uint64_t v112 = *i;
          if (v111 != v112) {
            break;
          }
          if (!*v109) {
            goto LABEL_124;
          }
LABEL_147:
          ++v109;
        }
        if (byte_1B0DE1758[v111] == byte_1B0DE1758[v112]) {
          goto LABEL_147;
        }
        if (!--v104)
        {
          int v103 = &qword_1E9B52220;
          goto LABEL_124;
        }
      }
    }
  }
  else
  {
    int v103 = (uint64_t *)(v63 + 88);
    int v104 = *(_DWORD *)(v63 + 84);
    if (v104) {
      goto LABEL_145;
    }
  }
  int v103 = &qword_1E9B52220;
LABEL_124:
  if (v103[2] || *(void *)(a2 + 72))
  {
    int v115 = v20;
    unsigned int v114 = v20 - 1;
    BOOL v120 = v14 != 0;
    if (v14) {
      goto LABEL_127;
    }
    int v113 = a11;
    int v25 = 0;
    goto LABEL_14;
  }
LABEL_10:
  if (!v14)
  {
    BOOL v120 = 0;
    uint64_t v32 = 0;
    goto LABEL_63;
  }
  int v115 = v20;
  unsigned int v114 = v20 - 1;
  if (*(unsigned char *)(a2 + 63) != 2)
  {
    BOOL v120 = 1;
LABEL_127:
    int v113 = a11;
    int v25 = 0;
    uint64_t v105 = v14;
    while (1)
    {
      if (*(unsigned __int8 *)(v105 + 16) != 128 || (*(unsigned char *)(v105 + 17) & 3) == 0) {
        goto LABEL_129;
      }
      if (*(unsigned char *)(v105 + 18))
      {
        int v25 = -1;
      }
      else
      {
        uint64_t v106 = *(void *)(a1 + 168);
        if (!v106) {
          uint64_t v106 = a1;
        }
        uint64_t v107 = *(void *)(v106 + 184);
        if (v107)
        {
          while (*(void *)v107 != v105 || *(_DWORD *)(v107 + 24) != a10)
          {
            uint64_t v107 = *(void *)(v107 + 8);
            if (!v107) {
              goto LABEL_136;
            }
          }
        }
        else
        {
LABEL_136:
          uint64_t v107 = sub_1B0CD0568(a1, (uint64_t *)v105, a2, a10);
          *(_DWORD *)(*(void *)a1 + 84) = -1;
          if (!v107) {
            goto LABEL_129;
          }
        }
        v25 |= *(_DWORD *)(v107 + 28);
      }
LABEL_129:
      uint64_t v105 = *(void *)(v105 + 64);
      if (!v105) {
        goto LABEL_14;
      }
    }
  }
  BOOL v120 = 1;
  int v113 = a11;
  int v25 = -1;
LABEL_14:
  int v29 = sub_1B0D56BF4((void **)a1, a2, a3, a4, a5, a6, a7, a8);
  int v31 = *(_DWORD *)(a1 + 56);
  uint64_t v32 = (v31 + 1);
  *(_DWORD *)(a1 + 56) = v32 + *(__int16 *)(a2 + 54);
  int v33 = *(_DWORD *)(v19 + 144);
  if (*(_DWORD *)(v19 + 148) <= v33)
  {
    sub_1B0D25510(v19, 80, v121, (v31 + 1), 0, v26, v27, v28);
  }
  else
  {
    *(_DWORD *)(v19 + 144) = v33 + 1;
    uint64_t v34 = *(void *)(v19 + 136) + 40 * v33;
    *(_DWORD *)uint64_t v34 = 80;
    *(_DWORD *)(v34 + 4) = v121;
    *(_DWORD *)(v34 + 8) = v32;
    *(void *)(v34 + 12) = 0;
    *(void *)(v34 + 28) = 0;
    *(void *)(v34 + 20) = 0;
    *(_DWORD *)(v34 + 36) = 0;
  }
  int v35 = *(__int16 *)(a2 + 54);
  if (v35 >= 1)
  {
    unint64_t v36 = 0;
    unsigned int v37 = v29 | v25;
    int v38 = v31 + 2;
    int8x16_t v39 = (int8x16_t)xmmword_1B0DE1600;
    int8x16_t v40 = (int8x16_t)xmmword_1B0DE1610;
    int8x16_t v41 = (int8x16_t)xmmword_1B0DE1620;
    v42.i64[0] = 0x1000100010001;
    v42.i64[1] = 0x1000100010001;
    do
    {
      if (v37 == -1 || v36 <= 0x1F && ((v37 >> v36) & 1) != 0)
      {
        __int16 v43 = v36;
        if ((v36 & 0x8000) == 0 && (*(_DWORD *)(a2 + 48) & 0x20) != 0)
        {
          uint64_t v44 = *(void *)(a2 + 8);
          if ((_WORD)v36)
          {
            if (v36 >= 0x11)
            {
              uint64_t v47 = 16;
              if ((v36 & 0xF) != 0) {
                uint64_t v47 = v36 & 0xF;
              }
              unint64_t v45 = v36 - v47;
              uint64_t v48 = v44 + 142;
              int16x8_t v49 = 0uLL;
              int16x8_t v50 = 0uLL;
              do
              {
                int8x16_t v51 = vqtbl2q_s8(*(int8x16x2_t *)(v48 - 64), v40);
                v51.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v48 - 32), v39).i32[3];
                v52.i32[0] = vzip1q_s16(*(int16x8_t *)(v48 - 128), *(int16x8_t *)(v48 - 112)).u32[0];
                v52.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v48 - 96), v41).i32[1];
                v52.i64[1] = v51.i64[1];
                int8x16x2_t v124 = *(int8x16x2_t *)(v48 + 32);
                int8x16_t v53 = vqtbl2q_s8(*(int8x16x2_t *)(v48 + 64), v40);
                v53.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v48 + 96), v39).i32[3];
                int16x8_t v55 = *(int16x8_t *)v48;
                int16x8_t v54 = *(int16x8_t *)(v48 + 16);
                v48 += 256;
                v54.i32[0] = vzip1q_s16(v55, v54).u32[0];
                v54.i32[1] = vqtbl2q_s8(v124, v41).i32[1];
                v54.i64[1] = v53.i64[1];
                int16x8_t v49 = vaddq_s16((int16x8_t)vbicq_s8(v42, (int8x16_t)vshrq_n_u16(v52, 5uLL)), v49);
                int16x8_t v50 = vaddq_s16((int16x8_t)vbicq_s8(v42, (int8x16_t)vshrq_n_u16((uint16x8_t)v54, 5uLL)), v50);
                v47 += 16;
              }
              while (v36 != v47);
              int16x8_t v30 = vaddq_s16(v50, v49);
              v30.i16[0] = vaddvq_s16(v30);
              __int16 v46 = v30.i16[0];
            }
            else
            {
              unint64_t v45 = 0;
              __int16 v46 = 0;
            }
            __int16 v56 = (unsigned __int16 *)(v44 + 16 * v45 + 14);
            do
            {
              unsigned int v57 = *v56;
              v56 += 8;
              v46 += ((v57 >> 5) & 1) == 0;
              ++v45;
            }
            while (v36 != v45);
          }
          else
          {
            __int16 v46 = 0;
          }
          if ((*(_WORD *)(v44 + 16 * ((uint64_t)(v36 << 16) >> 16) + 14) & 0x20) != 0) {
            __int16 v43 = v36 - v46 + *(_WORD *)(a2 + 56);
          }
          else {
            __int16 v43 = v46;
          }
        }
        *(double *)v30.i64 = sub_1B0D32578(v19, a2, a4, v36, (v38 + v43), v26, v27, v28, v30);
        LOWORD(v35) = *(_WORD *)(a2 + 54);
        int8x16_t v40 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v39 = (int8x16_t)xmmword_1B0DE1600;
        int8x16_t v41 = (int8x16_t)xmmword_1B0DE1620;
        v42.i64[0] = 0x1000100010001;
        v42.i64[1] = 0x1000100010001;
      }
      ++v36;
    }
    while ((uint64_t)v36 < (__int16)v35);
  }
  if (v14)
  {
    int v58 = *(_DWORD *)(v19 + 144);
    uint64_t v59 = v14;
    uint64_t v21 = v114;
    uint64_t v18 = a10;
    do
    {
      if (*(unsigned __int8 *)(v59 + 16) == 128 && *(unsigned char *)(v59 + 17) == 1)
      {
        if (*(unsigned char *)(v59 + 18))
        {
          if (!*(void *)(a1 + 168)) {
            sub_1B0D57CA8(a1, v59, a2, v32);
          }
        }
        else
        {
          sub_1B0CD0C78(a1, (uint64_t *)v59, a2, v32, a10, v114, v27, v28);
        }
      }
      uint64_t v59 = *(void *)(v59 + 64);
    }
    while (v59);
    int v60 = *(_DWORD *)(v19 + 144);
    BOOL v61 = v58 < v60;
    int v20 = v115;
    int v17 = v113;
    if (v61)
    {
      if (*(_DWORD *)(v19 + 148) <= v60)
      {
        sub_1B0D2575C(v19, v118, a4, v114, v121, v119, v27, v28);
      }
      else
      {
        *(_DWORD *)(v19 + 144) = v60 + 1;
        uint64_t v62 = *(void *)(v19 + 136) + 40 * v60;
        *(unsigned char *)uint64_t v62 = v118;
        *(_WORD *)(v62 + 2) = 0;
        *(_DWORD *)(v62 + 4) = a4;
        *(_DWORD *)(v62 + 8) = v114;
        *(_DWORD *)(v62 + 12) = v121;
        *(_DWORD *)(v62 + 16) = v119;
        *(unsigned char *)(v62 + 1) = -3;
        *(void *)(v62 + 24) = 0;
        *(void *)(v62 + 32) = 0;
      }
      a12 = -1;
    }
  }
  else
  {
    uint64_t v18 = a10;
    int v20 = v115;
    int v17 = v113;
    uint64_t v21 = v114;
  }
  sub_1B0CBC2F0((uint64_t *)a1, a2, v32, 0, 0, 0, v27, v28);
LABEL_63:
  if (*(unsigned char *)(a2 + 63) == 2) {
    goto LABEL_86;
  }
  sub_1B0D57168(a1, a2, a4, v116, 0, a12, a9);
  BOOL v70 = v117 != 0;
  int v71 = *(_DWORD *)(v19 + 144);
  if (*(_DWORD *)(v19 + 148) <= v71)
  {
    sub_1B0D25510(v19, 130, a4, v70, 0, a6, a7, a8);
    if (!*(unsigned char *)(a1 + 30)) {
      goto LABEL_74;
    }
LABEL_68:
    int v73 = *(unsigned __int8 **)a2;
    if (*(void *)a2)
    {
      for (uint64_t j = "sqlite_stat1"; ; ++j)
      {
        uint64_t v75 = *v73;
        uint64_t v76 = *(unsigned __int8 *)j;
        if (v75 == v76)
        {
          if (!*v73) {
            goto LABEL_74;
          }
        }
        else if (byte_1B0DE1758[v75] != byte_1B0DE1758[v76])
        {
          goto LABEL_76;
        }
        ++v73;
      }
    }
    goto LABEL_76;
  }
  *(_DWORD *)(v19 + 144) = v71 + 1;
  uint64_t v72 = *(void *)(v19 + 136) + 40 * v71;
  *(_DWORD *)uint64_t v72 = 130;
  *(_DWORD *)(v72 + 4) = a4;
  *(_DWORD *)(v72 + 8) = v70;
  *(void *)(v72 + 12) = 0;
  *(void *)(v72 + 28) = 0;
  *(void *)(v72 + 20) = 0;
  *(_DWORD *)(v72 + 36) = 0;
  if (*(unsigned char *)(a1 + 30)) {
    goto LABEL_68;
  }
LABEL_74:
  if (!*(unsigned char *)(*(void *)v19 + 103))
  {
    uint64_t v77 = *(void *)(v19 + 136) + 40 * *(int *)(v19 + 144);
    *(unsigned char *)(v77 - 39) = -5;
    *(void *)(v77 - 24) = a2;
  }
LABEL_76:
  if (v17)
  {
    int v78 = *(_DWORD *)(v19 + 144);
    BOOL v79 = __OFSUB__(v78, 1);
    int v80 = v78 - 1;
    if (v80 < 0 == v79) {
      *(_WORD *)(*(void *)(v19 + 136) + 40 * v80 + 2) = 4;
    }
  }
  if ((a12 & 0x80000000) == 0 && a12 != a4)
  {
    int v81 = *(_DWORD *)(v19 + 144);
    if (*(_DWORD *)(v19 + 148) <= v81)
    {
      sub_1B0D25510(v19, 130, a12, 0, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v19 + 144) = v81 + 1;
      uint64_t v82 = *(void *)(v19 + 136) + 40 * v81;
      *(_DWORD *)uint64_t v82 = 130;
      *(_DWORD *)(v82 + 4) = a12;
      *(_OWORD *)(v82 + 8) = 0u;
      *(_OWORD *)(v82 + 24) = 0u;
    }
  }
  int v83 = *(_DWORD *)(v19 + 144);
  BOOL v79 = __OFSUB__(v83, 1);
  int v84 = v83 - 1;
  if (v84 < 0 == v79) {
    *(_WORD *)(*(void *)(v19 + 136) + 40 * v84 + 2) = 2 * (v17 == 2);
  }
LABEL_86:
  if ((*(unsigned char *)(*(void *)a1 + 49) & 0x40) != 0)
  {
    uint64_t v85 = *(void *)(a2 + 96);
    uint64_t v86 = *(unsigned __int8 **)a2;
    uint64_t v87 = *(void *)(v85 + 96);
    if (v87)
    {
      int v88 = *v86;
      if (*v86)
      {
        unsigned int v89 = 0;
        int v90 = v86 + 1;
        do
        {
          unsigned int v89 = -1640531535 * (v89 + byte_1B0DE1758[v88]);
          int v91 = *v90++;
          int v88 = v91;
        }
        while (v91);
      }
      else
      {
        unsigned int v89 = 0;
      }
      unsigned int v98 = (_DWORD *)(v87 + 16 * (v89 % *(_DWORD *)(v85 + 80)));
      int v92 = (uint64_t *)(v98 + 2);
      int v93 = *v98;
      if (v93)
      {
        while (1)
        {
LABEL_114:
          int v92 = (uint64_t *)*v92;
          uint64_t v99 = (unsigned char *)v92[3];
          for (uint64_t k = *(unsigned __int8 **)a2; ; ++k)
          {
            uint64_t v101 = *v99;
            uint64_t v102 = *k;
            if (v101 != v102) {
              break;
            }
            if (!*v99) {
              goto LABEL_94;
            }
LABEL_116:
            ++v99;
          }
          if (byte_1B0DE1758[v101] == byte_1B0DE1758[v102]) {
            goto LABEL_116;
          }
          if (!--v93)
          {
            int v92 = &qword_1E9B52220;
            goto LABEL_94;
          }
        }
      }
    }
    else
    {
      int v92 = (uint64_t *)(v85 + 88);
      int v93 = *(_DWORD *)(v85 + 84);
      if (v93) {
        goto LABEL_114;
      }
    }
    int v92 = &qword_1E9B52220;
LABEL_94:
    for (uint64_t m = v92[2]; m; uint64_t m = *(void *)(m + 24))
    {
      int v97 = sub_1B0D59C04((uint64_t *)a1, a2, m, 0, a5, a6, a7, a8);
      if (v97) {
        sub_1B0CD0C78(a1, v97, a2, v32, 2, 0, a7, a8);
      }
    }
  }
  if (v120 && v14)
  {
    do
    {
      if (*(unsigned __int8 *)(v14 + 16) == 128 && *(unsigned char *)(v14 + 17) == 2)
      {
        if (*(unsigned char *)(v14 + 18))
        {
          if (!*(void *)(a1 + 168)) {
            sub_1B0D57CA8(a1, v14, a2, v32);
          }
        }
        else
        {
          sub_1B0CD0C78(a1, (uint64_t *)v14, a2, v32, v18, v21, a7, a8);
        }
      }
      uint64_t v14 = *(void *)(v14 + 64);
    }
    while (v14);
  }
  uint64_t result = *(void *)(v19 + 24);
  int v96 = -v20;
  if (*(_DWORD *)(result + 68) + *(_DWORD *)(result + 72) < 0)
  {
    return sub_1B0D34EC8(result, v19, v96);
  }
  else
  {
    *(_DWORD *)(*(void *)(result + 80) + 4 * v96) = *(_DWORD *)(v19 + 144);
  }
  return result;
}

uint64_t sub_1B0CBBBB4(uint64_t a1, unsigned __int8 **a2, uint64_t a3, int a4)
{
  if ((*(unsigned char *)(*(void *)a1 + 49) & 0x40) == 0 || *((unsigned char *)a2 + 63)) {
    return 0;
  }
  if (!a3)
  {
    int v23 = a2[12];
    uint64_t v24 = *a2;
    uint64_t v25 = *((void *)v23 + 12);
    if (v25)
    {
      int v26 = *v24;
      if (*v24)
      {
        unsigned int v27 = 0;
        uint64_t v28 = v24 + 1;
        do
        {
          unsigned int v27 = -1640531535 * (v27 + byte_1B0DE1758[v26]);
          int v29 = *v28++;
          int v26 = v29;
        }
        while (v29);
      }
      else
      {
        unsigned int v27 = 0;
      }
      uint64_t v47 = (_DWORD *)(v25 + 16 * (v27 % *((_DWORD *)v23 + 20)));
      __int16 v46 = (uint64_t *)(v47 + 2);
    }
    else
    {
      __int16 v46 = (uint64_t *)(v23 + 88);
      uint64_t v47 = v23 + 84;
    }
    int v48 = *v47;
    if (!v48)
    {
      __int16 v46 = &qword_1E9B52220;
LABEL_88:
      if (v46[2]) {
        return 1;
      }
      uint64_t result = 1;
      if (!a2[9]) {
        return 0;
      }
      return result;
    }
LABEL_79:
    __int16 v46 = (uint64_t *)*v46;
    int16x8_t v49 = (unsigned char *)v46[3];
    for (uint64_t i = *a2; ; ++i)
    {
      uint64_t v51 = *v49;
      uint64_t v52 = *i;
      if (v51 == v52)
      {
        if (!*v49) {
          goto LABEL_88;
        }
      }
      else if (byte_1B0DE1758[v51] != byte_1B0DE1758[v52])
      {
        if (!--v48)
        {
          __int16 v46 = &qword_1E9B52220;
          goto LABEL_88;
        }
        goto LABEL_79;
      }
      ++v49;
    }
  }
  uint64_t v5 = a2[9];
  int v6 = 0;
  uint64_t result = 1;
  while (v5)
  {
    uint64_t v14 = *((unsigned int *)v5 + 10);
    if ((int)v14 >= 1)
    {
      uint64_t v15 = (int *)(v5 + 64);
      while (1)
      {
        uint64_t v17 = *v15;
        v15 += 4;
        int v16 = v17;
        if ((*(_DWORD *)(a3 + 4 * v17) & 0x80000000) == 0 || a4 && v16 == *((__int16 *)a2 + 26)) {
          break;
        }
        if (!--v14) {
          goto LABEL_13;
        }
      }
      uint64_t v18 = *a2;
      uint64_t v19 = (unsigned __int8 *)*((void *)v5 + 2);
      if (*a2)
      {
        if (v19)
        {
          while (1)
          {
            uint64_t v21 = *v18;
            uint64_t v22 = *v19;
            if (v21 == v22)
            {
              if (!*v18) {
                goto LABEL_32;
              }
            }
            else
            {
              int v20 = byte_1B0DE1758[v21] - byte_1B0DE1758[v22];
              if (v20) {
                goto LABEL_31;
              }
            }
            ++v18;
            ++v19;
          }
        }
      }
      else
      {
        if (v19) {
          int v20 = -1;
        }
        else {
          int v20 = 0;
        }
LABEL_31:
        if (!v20)
        {
LABEL_32:
          int v6 = 1;
          uint64_t result = 2;
          goto LABEL_13;
        }
      }
      int v6 = 1;
    }
LABEL_13:
    uint64_t v5 = (unsigned __int8 *)*((void *)v5 + 1);
  }
  uint64_t v7 = a2[12];
  char v8 = *a2;
  uint64_t v9 = *((void *)v7 + 12);
  if (!v9)
  {
    int16x8_t v30 = (uint64_t *)(v7 + 88);
    int v31 = *((_DWORD *)v7 + 21);
    if (v31) {
      goto LABEL_67;
    }
LABEL_39:
    int16x8_t v30 = &qword_1E9B52220;
    goto LABEL_40;
  }
  int v10 = *v8;
  if (*v8)
  {
    unsigned int v11 = 0;
    int v12 = v8 + 1;
    do
    {
      unsigned int v11 = -1640531535 * (v11 + byte_1B0DE1758[v10]);
      int v13 = *v12++;
      int v10 = v13;
    }
    while (v13);
  }
  else
  {
    unsigned int v11 = 0;
  }
  int8x16_t v41 = (_DWORD *)(v9 + 16 * (v11 % *((_DWORD *)v7 + 20)));
  int16x8_t v30 = (uint64_t *)(v41 + 2);
  int v31 = *v41;
  if (!v31) {
    goto LABEL_39;
  }
  do
  {
LABEL_67:
    int16x8_t v30 = (uint64_t *)*v30;
    int8x16_t v42 = (unsigned char *)v30[3];
    for (uint64_t j = *a2; ; ++j)
    {
      uint64_t v44 = *v42;
      uint64_t v45 = *j;
      if (v44 != v45) {
        break;
      }
      if (!*v42) {
        goto LABEL_40;
      }
LABEL_69:
      ++v42;
    }
    if (byte_1B0DE1758[v44] == byte_1B0DE1758[v45]) {
      goto LABEL_69;
    }
    --v31;
  }
  while (v31);
  int16x8_t v30 = &qword_1E9B52220;
LABEL_40:
  for (uint64_t k = v30[2]; k; uint64_t k = *(void *)(k + 24))
  {
    uint64_t v33 = *(unsigned int *)(k + 40);
    if ((int)v33 >= 1)
    {
      uint64_t v34 = 0;
      while (*((__int16 *)a2 + 27) < 1)
      {
LABEL_60:
        if (++v34 == v33) {
          goto LABEL_43;
        }
      }
      uint64_t v35 = 0;
      while (1)
      {
        if ((*(_DWORD *)(a3 + 4 * v35) & 0x80000000) == 0 || a4 && v35 == *((__int16 *)a2 + 26))
        {
          unint64_t v36 = a2[1];
          if (*(void *)(k + 16 * v34 + 72))
          {
            unsigned int v37 = *(unsigned char **)&v36[16 * v35];
            for (uint64_t m = *(unsigned __int8 **)(k + 16 * v34 + 72); ; ++m)
            {
              uint64_t v39 = *v37;
              uint64_t v40 = *m;
              if (v39 == v40)
              {
                if (!*v37) {
                  goto LABEL_62;
                }
              }
              else if (byte_1B0DE1758[v39] != byte_1B0DE1758[v40])
              {
                goto LABEL_49;
              }
              ++v37;
            }
          }
          if (*(_WORD *)&v36[16 * v35 + 14]) {
            break;
          }
        }
LABEL_49:
        if (++v35 == *((__int16 *)a2 + 27)) {
          goto LABEL_60;
        }
      }
LABEL_62:
      if (*(unsigned char *)(k + 46)) {
        return 2;
      }
      int v6 = 1;
    }
LABEL_43:
    ;
  }
  if (!v6) {
    return 0;
  }
  return result;
}

uint64_t sub_1B0CBBF4C(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int *a6, uint64_t a7, uint64_t a8, int16x8_t a9)
{
  int v9 = a8;
  uint64_t v10 = a7;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!a6) {
    goto LABEL_8;
  }
  int v16 = *(unsigned __int8 **)(a2 + 72);
  if (v16)
  {
    int v17 = *(_DWORD *)(a1 + 68) - 1;
    *(_DWORD *)(a1 + 68) = v17;
    *a6 = v17;
    *(_DWORD *)(a1 + 64) = a3 + 1;
    uint64_t v18 = *a6;
    uint64_t v19 = *(void *)a1;
    uint64_t v21 = sub_1B0CAE048(*(void *)a1, v16, 0, 0);
    if (!*(unsigned char *)(v19 + 103)) {
      sub_1B0CC2204(a1, (unsigned __int8 **)v21, v18, 16, v20, (uint64_t)a6, a7, a8);
    }
    if (v21) {
      sub_1B0D1DF88((void *)v19, (unsigned __int8 *)v21);
    }
    uint64_t v10 = 0;
    *(_DWORD *)(a1 + 64) = 0;
LABEL_8:
    if (!a5) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  *a6 = 0;
  if (!a5) {
    goto LABEL_12;
  }
LABEL_9:
  if ((*(_WORD *)(a2 + 99) & 8) != 0)
  {
    uint64_t v22 = (unsigned __int16 *)(a2 + 94);
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v22 = (unsigned __int16 *)(a2 + 96);
LABEL_13:
  uint64_t v23 = *v22;
  if (v23 == 1)
  {
    if (*(unsigned char *)(a1 + 31))
    {
      unsigned __int8 v24 = *(unsigned char *)(a1 + 31) - 1;
      *(unsigned char *)(a1 + 31) = v24;
      int v25 = *(_DWORD *)(a1 + 4 * v24 + 224);
      unsigned int v50 = a4;
      unsigned int v51 = v25;
      if (!v10) {
        goto LABEL_27;
      }
    }
    else
    {
      int v25 = *(_DWORD *)(a1 + 56) + 1;
      *(_DWORD *)(a1 + 56) = v25;
      unsigned int v50 = a4;
      unsigned int v51 = v25;
      if (!v10) {
        goto LABEL_27;
      }
    }
  }
  else
  {
    int v26 = *(_DWORD *)(a1 + 40);
    BOOL v27 = __OFSUB__(v26, v23);
    int v28 = v26 - v23;
    if (v28 < 0 != v27)
    {
      int v29 = *(_DWORD *)(a1 + 56);
      int v25 = v29 + 1;
      *(_DWORD *)(a1 + 56) = v29 + v23;
      unsigned int v50 = a4;
      unsigned int v51 = v29 + 1;
      if (!v10) {
        goto LABEL_27;
      }
    }
    else
    {
      int v25 = *(_DWORD *)(a1 + 44);
      *(_DWORD *)(a1 + 40) = v28;
      *(_DWORD *)(a1 + 44) = v25 + v23;
      unsigned int v50 = a4;
      unsigned int v51 = v25;
      if (!v10) {
        goto LABEL_27;
      }
    }
  }
  if (v25 != v9 || *(void *)(v10 + 72)) {
    uint64_t v10 = 0;
  }
LABEL_27:
  if (v23)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 8;
    while (1)
    {
      uint64_t v32 = *(void *)(a2 + 8);
      if (v10)
      {
        int v33 = *(unsigned __int16 *)(*(void *)(v10 + 8) + 2 * v30);
        int v34 = *(unsigned __int16 *)(v32 + 2 * v30);
        if (v33 != 65534 && v33 == v34) {
          goto LABEL_29;
        }
      }
      else
      {
        int v34 = *(unsigned __int16 *)(v32 + 2 * v30);
      }
      if (v34 == 65534) {
        break;
      }
      *(double *)a9.i64 = sub_1B0D32578(*(void *)(a1 + 16), *(void *)(a2 + 24), a3, (__int16)v34, v51 + v30, (uint64_t)a6, a7, a8, a9);
LABEL_45:
      if ((*(__int16 *)(*(void *)(a2 + 8) + 2 * v30) & 0x80000000) == 0)
      {
        int v40 = *(_DWORD *)(v15 + 144);
        BOOL v27 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v27)
        {
          uint64_t v42 = *(void *)(v15 + 136);
          __int16 v43 = (unsigned char *)(v42 + 40 * v41);
          if (*v43 == 87 && !*(unsigned char *)(*(void *)v15 + 103))
          {
            uint64_t v44 = v42 + 40 * v41;
            sub_1B0C8B9A4(*(void **)v15, *(char *)(v44 + 1), *(void *)(v44 + 16));
            *(unsigned char *)(v44 + 1) = 0;
            *(void *)(v44 + 16) = 0;
            unsigned char *v43 = -72;
          }
        }
      }
LABEL_29:
      ++v30;
      v31 += 24;
      if (v23 == v30) {
        goto LABEL_52;
      }
    }
    uint64_t v36 = v15;
    *(_DWORD *)(a1 + 64) = a3 + 1;
    unsigned int v37 = *(unsigned __int8 **)(*(void *)(a2 + 80) + v31);
    uint64_t v38 = *(void *)a1;
    if (v37)
    {
      uint64_t v39 = (unsigned __int8 *)sub_1B0CAE048(*(void *)a1, v37, 0, 0);
      if (*(unsigned char *)(v38 + 103))
      {
LABEL_41:
        if (v39) {
          sub_1B0D1DF88((void *)v38, v39);
        }
        *(_DWORD *)(a1 + 64) = 0;
        uint64_t v15 = v36;
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v39 = 0;
      if (*(unsigned char *)(v38 + 103)) {
        goto LABEL_41;
      }
    }
    sub_1B0D2F9D0(a1, v39, v51 + v30);
    goto LABEL_41;
  }
LABEL_52:
  if (v50)
  {
    int v45 = *(_DWORD *)(v15 + 144);
    if (*(_DWORD *)(v15 + 148) <= v45)
    {
      sub_1B0D25510(v15, 97, v51, v23, v50, (uint64_t)a6, a7, a8);
      if (v23 == 1) {
        goto LABEL_56;
      }
      goto LABEL_60;
    }
    *(_DWORD *)(v15 + 144) = v45 + 1;
    uint64_t v46 = *(void *)(v15 + 136) + 40 * v45;
    *(_DWORD *)uint64_t v46 = 97;
    *(_DWORD *)(v46 + 4) = v51;
    *(_DWORD *)(v46 + 8) = v23;
    *(_DWORD *)(v46 + 12) = v50;
    *(void *)(v46 + 24) = 0;
    *(void *)(v46 + 32) = 0;
    *(void *)(v46 + 16) = 0;
  }
  if (v23 == 1)
  {
LABEL_56:
    if (v51)
    {
      uint64_t v47 = *(unsigned __int8 *)(a1 + 31);
      if (v47 <= 7)
      {
        *(unsigned char *)(a1 + 31) = v47 + 1;
        int v48 = (unsigned int *)(a1 + 4 * v47 + 224);
LABEL_62:
        unsigned int *v48 = v51;
        return v51;
      }
    }
    return v51;
  }
LABEL_60:
  if (*(_DWORD *)(a1 + 40) < (int)v23)
  {
    *(_DWORD *)(a1 + 40) = v23;
    int v48 = (unsigned int *)(a1 + 44);
    goto LABEL_62;
  }
  return v51;
}

void sub_1B0CBC2F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v113 = *a1;
  if ((*(unsigned char *)(*a1 + 49) & 0x40) == 0) {
    return;
  }
  uint64_t v8 = a2;
  if (*(unsigned char *)(a2 + 63)) {
    return;
  }
  int v9 = a6;
  uint64_t v10 = a5;
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(v113 + 32);
  if (v13)
  {
    uint64_t v15 = (uint64_t *)(v14 + 24);
    int v16 = -1;
    int v17 = a1;
    do
    {
      uint64_t v18 = *v15;
      v15 += 4;
      ++v16;
    }
    while (v18 != v13);
  }
  else
  {
    int v16 = -32768;
    int v17 = a1;
  }
  int v108 = *((unsigned __int8 *)v17 + 221);
  uint64_t v19 = *(void *)(a2 + 72);
  if (v19)
  {
    uint64_t v109 = v16;
    uint64_t v20 = *(unsigned char **)(v14 + 32 * v16);
    unsigned int v106 = a3;
    int v111 = a3 + 1;
    uint64_t v107 = v20;
    int v105 = a6;
    unsigned int v103 = a4;
    while (1)
    {
      int v115 = 0;
      v116[0] = 0;
      int v114 = 0;
      if (v10)
      {
        uint64_t v22 = *(unsigned __int8 **)v8;
        uint64_t v23 = *(unsigned __int8 **)(v19 + 16);
        if (*(void *)v8)
        {
          if (v23)
          {
            while (1)
            {
              uint64_t v24 = *v22;
              uint64_t v25 = *v23;
              if (v24 == v25)
              {
                if (!*v22) {
                  goto LABEL_29;
                }
              }
              else if (byte_1B0DE1758[v24] != byte_1B0DE1758[v25])
              {
                break;
              }
              ++v22;
              ++v23;
            }
          }
        }
        else if (!v23)
        {
          goto LABEL_29;
        }
        uint64_t v26 = *(unsigned int *)(v19 + 40);
        if ((int)v26 < 1) {
          goto LABEL_12;
        }
        BOOL v27 = (int *)(v19 + 64);
        while (1)
        {
          uint64_t v29 = *v27;
          v27 += 4;
          int v28 = v29;
          if ((*(_DWORD *)(v10 + 4 * v29) & 0x80000000) == 0 || v9 && v28 == *(__int16 *)(v8 + 52)) {
            break;
          }
          if (!--v26) {
            goto LABEL_12;
          }
        }
      }
LABEL_29:
      if (*((unsigned char *)v17 + 221))
      {
        uint64_t v33 = sub_1B0CF60C8(v113, *(char **)(v19 + 16), v20);
        if (!v33) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v33 = sub_1B0CB02B4((uint64_t)v17, 0, *(char **)(v19 + 16), v20, a5, a6, a7, a8);
        if (!v33) {
          goto LABEL_34;
        }
      }
      if (sub_1B0D57960((void **)v17, v33, v19, v116, (uint64_t *)&v115, a6, a7, a8))
      {
LABEL_34:
        if (!v108 || *(unsigned char *)(v113 + 103)) {
          return;
        }
        int8x16_t v35 = (int8x16_t)xmmword_1B0DE1610;
        int8x16_t v34 = (int8x16_t)xmmword_1B0DE1600;
        int8x16_t v36 = (int8x16_t)xmmword_1B0DE1620;
        v37.i64[0] = 0x1000100010001;
        v37.i64[1] = 0x1000100010001;
        if (!v33)
        {
          uint64_t v38 = v17[2];
          if (!v38)
          {
            if (!v17[21] && (*(unsigned char *)(*v17 + 96) & 8) == 0) {
              *((unsigned char *)v17 + 35) = 1;
            }
            uint64_t v38 = sub_1B0CEF480(v17, v30, v31, v32, a5, a6, a7, a8);
            int8x16_t v35 = (int8x16_t)xmmword_1B0DE1610;
            int8x16_t v34 = (int8x16_t)xmmword_1B0DE1600;
            int8x16_t v36 = (int8x16_t)xmmword_1B0DE1620;
            v37.i64[0] = 0x1000100010001;
            v37.i64[1] = 0x1000100010001;
          }
          int v39 = *(_DWORD *)(v38 + 144);
          int v40 = *(_DWORD *)(v19 + 40);
          if (v40 >= 1)
          {
            uint64_t v41 = 0;
            uint64_t v42 = (v39 + v40 + 1);
            do
            {
              int v44 = *(_DWORD *)(v19 + 16 * v41 + 64);
              uint64_t v45 = (__int16)v44;
              if ((v44 & 0x8000) == 0)
              {
                uint64_t v46 = *(void *)v19;
                if ((*(_DWORD *)(*(void *)v19 + 48) & 0x20) != 0)
                {
                  uint64_t v47 = *(void *)(v46 + 8);
                  if ((unsigned __int16)*(_DWORD *)(v19 + 16 * v41 + 64))
                  {
                    if ((v44 << 16) >= 0x110000)
                    {
                      uint64_t v50 = v44 & 0xF;
                      if ((v44 & 0xF) == 0) {
                        uint64_t v50 = 16;
                      }
                      uint64_t v48 = v45 - v50;
                      uint64_t v51 = v47 + 142;
                      int16x8_t v52 = 0uLL;
                      uint64_t v53 = v48;
                      int16x8_t v54 = 0uLL;
                      do
                      {
                        int8x16_t v55 = vqtbl2q_s8(*(int8x16x2_t *)(v51 - 64), v35);
                        v55.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v51 - 32), v34).i32[3];
                        v56.i32[0] = vzip1q_s16(*(int16x8_t *)(v51 - 128), *(int16x8_t *)(v51 - 112)).u32[0];
                        v56.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v51 - 96), v36).i32[1];
                        v56.i64[1] = v55.i64[1];
                        uint16x8_t v57 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)(v51 + 96), v34);
                        int8x16x2_t v117 = *(int8x16x2_t *)(v51 + 32);
                        int8x16_t v58 = vqtbl2q_s8(*(int8x16x2_t *)(v51 + 64), v35);
                        int16x8_t v60 = *(int16x8_t *)v51;
                        int16x8_t v59 = *(int16x8_t *)(v51 + 16);
                        v51 += 256;
                        v58.i32[3] = v57.i32[3];
                        v57.i32[0] = vzip1q_s16(v60, v59).u32[0];
                        v57.i32[1] = vqtbl2q_s8(v117, v36).i32[1];
                        v57.i64[1] = v58.i64[1];
                        int16x8_t v52 = vaddq_s16((int16x8_t)vbicq_s8(v37, (int8x16_t)vshrq_n_u16(v56, 5uLL)), v52);
                        int16x8_t v54 = vaddq_s16((int16x8_t)vbicq_s8(v37, (int8x16_t)vshrq_n_u16(v57, 5uLL)), v54);
                        v53 -= 16;
                      }
                      while (v53);
                      __int16 v49 = vaddvq_s16(vaddq_s16(v54, v52));
                    }
                    else
                    {
                      uint64_t v48 = 0;
                      __int16 v49 = 0;
                    }
                    uint64_t v61 = v45 - v48;
                    uint64_t v62 = (unsigned __int16 *)(v47 + 16 * v48 + 14);
                    do
                    {
                      unsigned int v63 = *v62;
                      v62 += 8;
                      v49 += ((v63 >> 5) & 1) == 0;
                      --v61;
                    }
                    while (v61);
                  }
                  else
                  {
                    __int16 v49 = 0;
                  }
                  if ((*(_WORD *)(v47 + 16 * v45 + 14) & 0x20) != 0) {
                    LOWORD(v45) = v44 - v49 + *(_WORD *)(v46 + 56);
                  }
                  else {
                    LOWORD(v45) = v49;
                  }
                }
              }
              uint64_t v64 = (v111 + (__int16)v45);
              int v65 = *(_DWORD *)(v38 + 144);
              if (*(_DWORD *)(v38 + 148) > v65)
              {
                *(_DWORD *)(v38 + 144) = v65 + 1;
                uint64_t v43 = *(void *)(v38 + 136) + 40 * v65;
                *(_DWORD *)uint64_t v43 = 50;
                *(_DWORD *)(v43 + 4) = v64;
                *(_DWORD *)(v43 + 8) = v42;
                *(void *)(v43 + 12) = 0;
                *(void *)(v43 + 28) = 0;
                *(void *)(v43 + 20) = 0;
                *(_DWORD *)(v43 + 36) = 0;
              }
              else
              {
                sub_1B0D25510(v38, 50, v64, v42, 0, a6, a7, a8);
                v37.i64[0] = 0x1000100010001;
                v37.i64[1] = 0x1000100010001;
                int8x16_t v36 = (int8x16_t)xmmword_1B0DE1620;
                int8x16_t v35 = (int8x16_t)xmmword_1B0DE1610;
                int8x16_t v34 = (int8x16_t)xmmword_1B0DE1600;
              }
              ++v41;
            }
            while (v41 < *(int *)(v19 + 40));
            int v39 = *(_DWORD *)(v38 + 144);
            uint64_t v8 = a2;
            uint64_t v20 = v107;
          }
          uint64_t v72 = *(unsigned __int8 *)(v19 + 44);
          if (*(_DWORD *)(v38 + 148) > v39)
          {
            *(_DWORD *)(v38 + 144) = v39 + 1;
            uint64_t v21 = *(void *)(v38 + 136) + 40 * v39;
            *(_DWORD *)uint64_t v21 = 158;
            *(_DWORD *)(v21 + 4) = v72;
            *(_DWORD *)(v21 + 8) = -1;
            *(void *)(v21 + 12) = 0;
            *(void *)(v21 + 28) = 0;
            *(void *)(v21 + 20) = 0;
            *(_DWORD *)(v21 + 36) = 0;
          }
          else
          {
            sub_1B0D25510(v38, 158, v72, 0xFFFFFFFFLL, 0, a6, a7, a8);
          }
        }
        goto LABEL_12;
      }
      int v66 = v115;
      if (!v115)
      {
        int v114 = *(_DWORD *)(v19 + 64);
        int v66 = &v114;
      }
      if (*(int *)(v19 + 40) < 1)
      {
        BOOL v69 = 0;
      }
      else
      {
        uint64_t v67 = 0;
        uint64_t v68 = 0;
        BOOL v69 = 0;
        uint64_t v70 = v116[0];
        do
        {
          if (v66[v68] == *(__int16 *)(a2 + 52)) {
            v66[v68] = -1;
          }
          if (*(void *)(v113 + 528))
          {
            int v71 = (__int16 *)(v33 + 52);
            if (v70) {
              int v71 = (__int16 *)(*(void *)(v70 + 8) + v67);
            }
            BOOL v69 = sub_1B0CC386C((uint64_t)a1, *(const char **)v33, *(const char **)(*(void *)(v33 + 8) + 16 * *v71), v109) == 2;
          }
          ++v68;
          v67 += 2;
        }
        while (v68 < *(int *)(v19 + 40));
      }
      int v17 = a1;
      if (v109 != 1 && *(unsigned char *)(*(void *)(*(void *)(*a1 + 32) + 32 * v109 + 8) + 17)) {
        sub_1B0D2FBBC((uint64_t)a1, v109, *(_DWORD *)(v33 + 40), 0, *(void *)v33);
      }
      ++*((_DWORD *)a1 + 13);
      int v9 = v105;
      a7 = v106;
      uint64_t v10 = a5;
      uint64_t v11 = v103;
      if (v106) {
        sub_1B0D5830C(a1, v109, v33, v116[0], v19, (uint64_t)v66, v106, 0xFFFFFFFFLL, v69);
      }
      if (v11)
      {
        int v73 = (uint64_t *)a1[21];
        if (!v73) {
          int v73 = a1;
        }
        uint64_t v74 = (uint64_t *)v73[23];
        if (!v74
          || ((uint64_t v75 = *v74, v75 != *(void *)(v19 + 48)) || *(unsigned char *)(v19 + 45) != 8)
          && (v75 != *(void *)(v19 + 56) || *(unsigned char *)(v19 + 46) != 8))
        {
          sub_1B0D5830C(a1, v109, v33, v116[0], v19, (uint64_t)v66, v11, 1, v69);
        }
      }
      uint64_t v8 = a2;
      uint64_t v20 = v107;
      if (v115) {
        sub_1B0D05C10((void *)v113, v115);
      }
LABEL_12:
      uint64_t v19 = *(void *)(v19 + 8);
      if (!v19)
      {
        uint64_t v13 = *(void *)(v8 + 96);
        uint64_t v12 = v106;
        break;
      }
    }
  }
  uint64_t v76 = *(unsigned __int8 **)v8;
  uint64_t v77 = *(void *)(v13 + 96);
  if (!v77)
  {
    uint64_t v82 = (uint64_t *)(v13 + 88);
    int v83 = *(_DWORD *)(v13 + 84);
    if (v83) {
      goto LABEL_147;
    }
LABEL_102:
    uint64_t v82 = &qword_1E9B52220;
    goto LABEL_103;
  }
  int v78 = *v76;
  if (*v76)
  {
    unsigned int v79 = 0;
    int v80 = v76 + 1;
    do
    {
      unsigned int v79 = -1640531535 * (v79 + byte_1B0DE1758[v78]);
      int v81 = *v80++;
      int v78 = v81;
    }
    while (v81);
  }
  else
  {
    unsigned int v79 = 0;
  }
  unsigned int v98 = (_DWORD *)(v77 + 16 * (v79 % *(_DWORD *)(v13 + 80)));
  uint64_t v82 = (uint64_t *)(v98 + 2);
  int v83 = *v98;
  if (!v83) {
    goto LABEL_102;
  }
  do
  {
LABEL_147:
    uint64_t v82 = (uint64_t *)*v82;
    uint64_t v99 = (unsigned char *)v82[3];
    for (uint64_t i = *(unsigned __int8 **)v8; ; ++i)
    {
      uint64_t v101 = *v99;
      uint64_t v102 = *i;
      if (v101 != v102) {
        break;
      }
      if (!*v99) {
        goto LABEL_103;
      }
LABEL_149:
      ++v99;
    }
    if (byte_1B0DE1758[v101] == byte_1B0DE1758[v102]) {
      goto LABEL_149;
    }
    --v83;
  }
  while (v83);
  uint64_t v82 = &qword_1E9B52220;
LABEL_103:
  uint64_t v84 = v82[2];
  if (v84)
  {
    while (2)
    {
      int v115 = 0;
      v116[0] = 0;
      if (v10)
      {
        uint64_t v85 = *(unsigned int *)(v84 + 40);
        if ((int)v85 >= 1)
        {
          uint64_t v86 = 0;
          while (*(__int16 *)(v8 + 54) < 1)
          {
LABEL_123:
            if (++v86 == v85) {
              goto LABEL_105;
            }
          }
          uint64_t v87 = 0;
          while (1)
          {
            if ((*(_DWORD *)(v10 + 4 * v87) & 0x80000000) == 0 || v9 && v87 == *(__int16 *)(v8 + 52))
            {
              uint64_t v88 = *(void *)(v8 + 8);
              if (*(void *)(v84 + 16 * v86 + 72))
              {
                unsigned int v89 = *(unsigned char **)(v88 + 16 * v87);
                for (uint64_t j = *(unsigned __int8 **)(v84 + 16 * v86 + 72); ; ++j)
                {
                  uint64_t v91 = *v89;
                  uint64_t v92 = *j;
                  if (v91 == v92)
                  {
                    if (!*v89) {
                      goto LABEL_125;
                    }
                  }
                  else if (byte_1B0DE1758[v91] != byte_1B0DE1758[v92])
                  {
                    goto LABEL_112;
                  }
                  ++v89;
                }
              }
              if (*(_WORD *)(v88 + 16 * v87 + 14)) {
                goto LABEL_125;
              }
            }
LABEL_112:
            if (++v87 == *(__int16 *)(v8 + 54)) {
              goto LABEL_123;
            }
          }
        }
      }
      else
      {
LABEL_125:
        if (*(unsigned char *)(v84 + 44) || (*(unsigned char *)(v113 + 50) & 8) != 0 || a1[21] || *((unsigned char *)a1 + 32))
        {
          if (sub_1B0D57960((void **)a1, v8, v84, v116, (uint64_t *)&v115, a6, a7, a8))
          {
            if (!v108 || *(unsigned char *)(v113 + 103)) {
              return;
            }
          }
          else
          {
            uint64_t v93 = sub_1B0D05DC0(*a1, 0x70uLL);
            if (v93)
            {
              uint64_t v94 = (void *)v93;
              *(void *)uint64_t v93 = 0x100000001;
              *(_OWORD *)(v93 + 8) = 0u;
              *(_OWORD *)(v93 + 24) = 0u;
              *(_OWORD *)(v93 + 56) = 0u;
              *(_OWORD *)(v93 + 72) = 0u;
              *(_OWORD *)(v93 + 88) = 0u;
              *(void *)(v93 + 104) = 0;
              *(_OWORD *)(v93 + 40) = 0u;
              *(void *)(v93 + 16) = 0;
              *(void *)(v93 + 24) = 0;
              uint64_t v95 = *(void *)v84;
              *(void *)(v93 + 40) = *(void *)v84;
              *(void *)(v93 + 24) = *(void *)v95;
              ++*(_DWORD *)(v95 + 44);
              LODWORD(v95) = *((_DWORD *)a1 + 13);
              *((_DWORD *)a1 + 13) = v95 + 1;
              *(_DWORD *)(v93 + 72) = v95;
              if (v11) {
                sub_1B0D593D0((uint64_t)a1, v93, v8, v116[0], v84, (uint64_t)v115, v11, 0xFFFFFFFFLL);
              }
              if (v12)
              {
                int v96 = *(unsigned __int8 *)(v84 + (v10 != 0) + 45);
                sub_1B0D593D0((uint64_t)a1, (uint64_t)v94, a2, v116[0], v84, (uint64_t)v115, v12, 1);
                if (!*(unsigned char *)(v84 + 44) && (v96 | 2) != 0xA)
                {
                  int v97 = (uint64_t *)a1[21];
                  if (!v97) {
                    int v97 = a1;
                  }
                  *((unsigned char *)v97 + 33) = 1;
                }
              }
              v94[3] = 0;
              sub_1B0CA115C((void *)v113, v94);
              uint64_t v8 = a2;
            }
            if (v115) {
              sub_1B0D05C10((void *)v113, v115);
            }
          }
        }
      }
LABEL_105:
      uint64_t v84 = *(void *)(v84 + 24);
      if (!v84) {
        return;
      }
      continue;
    }
  }
}

uint64_t sub_1B0CBCC78(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v9 = a6;
  int v11 = a9;
  uint64_t v46 = result;
  uint64_t v12 = *(void *)(result + 16);
  uint64_t v13 = *(void *)(a2 + 16);
  if (!v13)
  {
    uint64_t v33 = 0;
    if ((*(unsigned char *)(a2 + 48) & 0x80) != 0) {
      return result;
    }
    goto LABEL_27;
  }
  unsigned int v43 = a8;
  unsigned int v44 = a3;
  unsigned int v45 = a5;
  uint64_t v14 = 0;
  unsigned int v47 = a7;
  __int16 v15 = a7 & 2 | (16 * (a9 != 0)) | 1;
  uint64_t v16 = a4;
  do
  {
    uint64_t v17 = *(unsigned int *)(v9 + 4 * v14);
    if (v17)
    {
      if (*(void *)(v13 + 72))
      {
        int v18 = *(_DWORD *)(v12 + 144);
        uint64_t v19 = (v18 + 2);
        if (*(_DWORD *)(v12 + 148) <= v18)
        {
          uint64_t result = sub_1B0D25510(v12, 50, v17, v19, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v12 + 144) = v18 + 1;
          uint64_t v20 = *(void *)(v12 + 136) + 40 * v18;
          *(_DWORD *)uint64_t v20 = 50;
          *(_DWORD *)(v20 + 4) = v17;
          *(_DWORD *)(v20 + 8) = v19;
          *(void *)(v20 + 12) = 0;
          *(void *)(v20 + 28) = 0;
          *(void *)(v20 + 20) = 0;
          *(_DWORD *)(v20 + 36) = 0;
        }
      }
      __int16 v21 = *(_WORD *)(v13 + 99);
      if ((v21 & 3) == 2)
      {
        int v22 = *(_DWORD *)(a2 + 48);
        if ((v22 & 0x80) != 0) {
          __int16 v23 = v15;
        }
        else {
          __int16 v23 = 16 * (a9 != 0);
        }
        if ((v22 & 0x80) != 0 && !v47)
        {
          uint64_t result = sub_1B0D5C618(v46, a2, (v16 + v14), *(unsigned int *)(v9 + 4 * v14), a5, a6, a7, a8);
          __int16 v21 = *(_WORD *)(v13 + 99);
          __int16 v23 = v15;
        }
      }
      else
      {
        __int16 v23 = 16 * (a9 != 0);
      }
      uint64_t v24 = v16 + v14;
      uint64_t v25 = *(unsigned int *)(v9 + 4 * v14);
      a5 = (v25 + 1);
      BOOL v26 = (v21 & 8) == 0;
      uint64_t v27 = 94;
      if (v26) {
        uint64_t v27 = 96;
      }
      a6 = *(unsigned __int16 *)(v13 + v27);
      int v28 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v28)
      {
        uint64_t result = sub_1B0D2575C(v12, 138, v24, v25, a5, a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v28 + 1;
        uint64_t v29 = *(void *)(v12 + 136) + 40 * v28;
        *(_DWORD *)uint64_t v29 = 64906;
        *(_DWORD *)(v29 + 4) = v24;
        *(_DWORD *)(v29 + 8) = v25;
        *(_DWORD *)(v29 + 12) = a5;
        *(_DWORD *)(v29 + 16) = a6;
        *(void *)(v29 + 24) = 0;
        *(void *)(v29 + 32) = 0;
      }
      int v30 = *(_DWORD *)(v12 + 144);
      BOOL v31 = __OFSUB__(v30, 1);
      int v32 = v30 - 1;
      if (v32 < 0 == v31) {
        *(_WORD *)(*(void *)(v12 + 136) + 40 * v32 + 2) = v23;
      }
    }
    ++v14;
    uint64_t v13 = *(void *)(v13 + 40);
  }
  while (v13);
  uint64_t v33 = v14;
  a3 = v44;
  a5 = v45;
  int v11 = a9;
  a8 = v43;
  a7 = v47;
  if ((*(unsigned char *)(a2 + 48) & 0x80) == 0)
  {
LABEL_27:
    char v34 = a7 | 1;
    if (!a7) {
      char v34 = 33;
    }
    if (*(unsigned char *)(v46 + 30)) {
      char v35 = 0;
    }
    else {
      char v35 = v34;
    }
    if (a8) {
      v35 |= 8u;
    }
    if (v11) {
      unsigned __int8 v36 = v35 | 0x10;
    }
    else {
      unsigned __int8 v36 = v35;
    }
    uint64_t v37 = *(unsigned int *)(v9 + 4 * v33);
    int v38 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v38)
    {
      uint64_t result = sub_1B0D25510(v12, 128, a3, v37, a5, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v38 + 1;
      uint64_t v39 = *(void *)(v12 + 136) + 40 * v38;
      *(_DWORD *)uint64_t v39 = 128;
      *(_DWORD *)(v39 + 4) = a3;
      *(_DWORD *)(v39 + 8) = v37;
      *(_DWORD *)(v39 + 12) = a5;
      *(void *)(v39 + 24) = 0;
      *(void *)(v39 + 32) = 0;
      *(void *)(v39 + 16) = 0;
    }
    if (!*(unsigned char *)(v46 + 30) && !*(unsigned char *)(*(void *)v12 + 103))
    {
      uint64_t v40 = *(void *)(v12 + 136) + 40 * *(int *)(v12 + 144);
      *(unsigned char *)(v40 - 39) = -5;
      *(void *)(v40 - 24) = a2;
    }
    int v41 = *(_DWORD *)(v12 + 144);
    BOOL v31 = __OFSUB__(v41, 1);
    int v42 = v41 - 1;
    if (v42 < 0 == v31) {
      *(_WORD *)(*(void *)(v12 + 136) + 40 * v42 + 2) = v36;
    }
  }
  return result;
}

void sub_1B0CBCF4C(uint64_t a1, long long *a2, __int16 a3)
{
  if ((*(_WORD *)(a1 + 20) & 0x9000) != 0)
  {
    sub_1B0D1D5BC(a1, a2, a3);
  }
  else
  {
    long long v3 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v3;
    if ((*((unsigned char *)a2 + 21) & 0x20) == 0) {
      *(_WORD *)(a1 + 20) = *(_WORD *)(a1 + 20) & 0x8FFF | a3;
    }
  }
}

void sub_1B0CBCF8C(uint64_t a1, int a2, int a3)
{
  if (a2 < 67)
  {
    if (a2 != 66) {
      return;
    }
    __int16 v10 = *(_WORD *)(a1 + 20);
    if ((v10 & 2) != 0 || (v10 & 0x2C) == 0) {
      goto LABEL_32;
    }
    if (*(int *)(a1 + 32) >= 32)
    {
      uint64_t v12 = *(void **)(a1 + 40);
      *(void *)(a1 + 8) = v12;
      *(_WORD *)(a1 + 20) = v10 & 0x2D;
    }
    else
    {
      if (sub_1B0CA0CF0(a1, 32, 0))
      {
        *(unsigned char *)(a1 + 22) = 0;
LABEL_32:
        __int16 v9 = *(_WORD *)(a1 + 20) & 0xFFD3;
        goto LABEL_33;
      }
      uint64_t v12 = *(void **)(a1 + 8);
    }
    sub_1B0D18508(v12, a1);
    *(unsigned char *)(a1 + 22) = 1;
    *(_WORD *)(a1 + 20) = *(_WORD *)(a1 + 20) & 0xFDD1 | 0x202;
    if (a3 != 1) {
      sub_1B0CD43EC((int *)a1, a3);
    }
    goto LABEL_32;
  }
  __int16 v4 = *(_WORD *)(a1 + 20);
  if ((v4 & 4) != 0) {
    return;
  }
  if ((v4 & 0x28) != 0)
  {
    if (a2 > 0x45) {
      return;
    }
    if ((v4 & 0x20) != 0) {
      goto LABEL_17;
    }
    double v5 = *(double *)a1;
    if (*(double *)a1 >= -9.22337204e18
      && v5 <= 9.22337204e18
      && v5 == (double)(uint64_t)v5
      && (unint64_t)((uint64_t)v5 + 0x7FFFFFFFFFFFFFFFLL) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      *(void *)a1 = (uint64_t)v5;
LABEL_17:
      __int16 v9 = v4 & 0xF240 | 4;
LABEL_33:
      *(_WORD *)(a1 + 20) = v9;
    }
  }
  else if ((v4 & 2) != 0)
  {
    sub_1B0CEE968(a1, 1);
  }
}

uint64_t sub_1B0CBD0F8(uint64_t a1)
{
  if (!a1)
  {
    sub_1B0CE1978(89717);
    return 0;
  }
  __int16 v1 = *(_WORD *)(a1 + 20);
  if ((v1 & 0x24) != 0) {
    return *(void *)a1;
  }
  if ((v1 & 8) != 0)
  {
    double v3 = *(double *)a1;
    if (*(double *)a1 < -9.22337204e18) {
      return 0x8000000000000000;
    }
    if (v3 <= 9.22337204e18) {
      return (uint64_t)v3;
    }
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  if ((v1 & 0x12) == 0 || !*(void *)(a1 + 8)) {
    return 0;
  }

  return sub_1B0D186C0(a1);
}

uint64_t sub_1B0CBD1B4(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *(void *)(v4 + 8);
  if (*a1)
  {
    if (*a1 < 3u)
    {
      int v19 = 86548;
      goto LABEL_12;
    }
    uint64_t result = sub_1B0D1DAC8((uint64_t)a1);
    unsigned int v51 = result;
    if (result) {
      return result;
    }
    if (*a1) {
      return 0;
    }
  }
  uint64_t v8 = (uint64_t *)(a1 + 136);
  uint64_t v7 = *((void *)a1 + 17);
  uint64_t v9 = *((unsigned __int16 *)a1 + 43);
  unsigned int v10 = *(unsigned __int16 *)(v7 + 24);
  if (v10 <= v9)
  {
    int v19 = 86557;
    goto LABEL_12;
  }
  int v11 = (char)a1[84];
  v49[0] = 0;
  v49[1] = 0;
  uint64_t v50 = 0;
  uint64_t v12 = *(void *)(v7 + 80);
  unsigned int v13 = *(unsigned __int16 *)(v7 + 26);
  uint64_t v14 = *(void *)(v7 + 96);
  __int16 v15 = (unsigned __int8 *)(v14 + 2 * v9);
  int v16 = *v15;
  int v17 = v15[1];
  if ((*(_DWORD *)(v7 + 20) & 0x80000000) != 0)
  {
    int v46 = v11;
    int v48 = v9;
    if (sub_1B0D1F1CC(v7))
    {
      int v19 = 86561;
      goto LABEL_12;
    }
    uint64_t v14 = *(void *)(v7 + 96);
    unsigned int v10 = *(unsigned __int16 *)(v7 + 24);
    LODWORD(v9) = v48;
    int v11 = v46;
  }
  unint64_t v18 = v12 + ((v17 | (v16 << 8)) & v13);
  if (v18 < v14 + (unint64_t)v10)
  {
    int v19 = 86564;
LABEL_12:
    return sub_1B0D1045C(v19);
  }
  int v20 = v11;
  unsigned int v47 = v9;
  char v21 = a2;
  if ((a2 & 2) != 0)
  {
    if (*(unsigned char *)(v7 + 8))
    {
      int v22 = *(_DWORD *)(v7 + 20);
      if ((int)(v22 + (*(uint64_t (**)(uint64_t, unint64_t))(v7 + 120))(v7, v18) + 2) <= (int)(2 * *(_DWORD *)(v5 + 56) / 3u)
        && *(_WORD *)(v7 + 24) != 1)
      {
        int v23 = 1;
        if (*(unsigned char *)(v7 + 8)) {
          goto LABEL_21;
        }
        goto LABEL_45;
      }
    }
    uint64_t result = sub_1B0D145BC((uint64_t)a1);
    if (result) {
      return result;
    }
  }
  int v23 = 0;
  if (*(unsigned char *)(v7 + 8)) {
    goto LABEL_21;
  }
LABEL_45:
  a1[1] &= 0xF1u;
  *((_WORD *)a1 + 35) = 0;
  if (!*a1 && *((_WORD *)a1 + 43) && *(unsigned char *)(*v8 + 8))
  {
    --*((_WORD *)a1 + 43);
  }
  else
  {
    uint64_t result = sub_1B0D1EF8C(a1);
    if (result) {
      return result;
    }
  }
LABEL_21:
  if ((a1[1] & 0x20) != 0)
  {
    uint64_t v24 = *(void *)(v5 + 16);
    if (v24)
    {
      int v25 = *((_DWORD *)a1 + 20);
      while ((unsigned __int8 *)v24 == a1 || v25 && *(_DWORD *)(v24 + 80) != v25)
      {
        uint64_t v24 = *(void *)(v24 + 40);
        if (!v24) {
          goto LABEL_33;
        }
      }
      uint64_t result = sub_1B0D143DC((unsigned __int8 *)v24, v25, a1);
      unsigned int v51 = result;
      if (result) {
        return result;
      }
    }
    else
    {
LABEL_33:
      a1[1] &= ~0x20u;
      unsigned int v51 = 0;
    }
  }
  if (!*((void *)a1 + 16) && *(unsigned char *)(v4 + 19)) {
    sub_1B0D1E2F0(v4, *((_DWORD *)a1 + 20), *((void *)a1 + 6), 0);
  }
  uint64_t v26 = *(void *)(v7 + 112);
  uint64_t v27 = *(_DWORD **)(v26 + 40);
  if ((*(_WORD *)(v26 + 52) & 4) == 0 || v27[8] < *(_DWORD *)(v26 + 48))
  {
    uint64_t result = v27[12];
    if (result) {
      return result;
    }
    uint64_t v28 = *(void *)(v7 + 112);
    if (v27[46] <= v27[50]) {
      uint64_t result = sub_1B0CBD7E0(v28);
    }
    else {
      uint64_t result = sub_1B0D133D0(v28);
    }
LABEL_52:
    if (result) {
      return result;
    }
    goto LABEL_53;
  }
  if (v27[32])
  {
    uint64_t result = sub_1B0D0F4D4(*(void *)(v7 + 112));
    goto LABEL_52;
  }
LABEL_53:
  (*(void (**)(uint64_t, unint64_t, void *))(v7 + 128))(v7, v18, v49);
  if (v50 == WORD2(v50)) {
    unsigned int v29 = 0;
  }
  else {
    unsigned int v29 = sub_1B0D1E344(v7, v18, (uint64_t)v49);
  }
  unsigned int v51 = v29;
  sub_1B0CBDC3C(v7, v47, HIWORD(v50), &v51);
  uint64_t result = v51;
  if (!v51)
  {
    if (*(unsigned char *)(v7 + 8)) {
      goto LABEL_94;
    }
    uint64_t v35 = *v8;
    if ((*(_DWORD *)(*v8 + 20) & 0x80000000) == 0 || (uint64_t result = sub_1B0D1F1CC(*v8), !result))
    {
      if ((char)a1[84] - 1 <= v20) {
        uint64_t v36 = (uint64_t)(a1 + 136);
      }
      else {
        uint64_t v36 = (uint64_t)&a1[8 * v20 + 152];
      }
      uint64_t v37 = *(void *)(v35 + 96) + 2 * *(unsigned __int16 *)(v35 + 24);
      unint64_t v38 = (*(unsigned __int8 *)(v37 - 1) | (*(unsigned __int8 *)(v37 - 2) << 8)) & (unint64_t)*(unsigned __int16 *)(v35 + 26);
      if (v38 <= 3) {
        return sub_1B0D1045C(86655);
      }
      int v41 = v20;
      unsigned int v42 = *(_DWORD *)(*(void *)v36 + 4);
      unint64_t v43 = *(void *)(v35 + 80) + v38;
      int v44 = (*(uint64_t (**)(uint64_t, unint64_t))(v35 + 120))(v35, v43);
      unsigned int v45 = *(_DWORD **)(v5 + 136);
      unsigned int v51 = sub_1B0CBD790(*(void *)(v35 + 112));
      if (!v51) {
        unsigned int v51 = sub_1B0CC16BC(v7, v47, (char *)(v43 - 4), v44 + 4, v45, v42);
      }
      sub_1B0CBDC3C(v35, *(unsigned __int16 *)(v35 + 24) - 1, v44, &v51);
      uint64_t result = v51;
      int v20 = v41;
      if (!v51)
      {
LABEL_94:
        if (3 * *(_DWORD *)(*((void *)a1 + 17) + 20) <= 2 * *(_DWORD *)(*((void *)a1 + 4) + 56)
          || (uint64_t result = sub_1B0CBDD6C((uint64_t)a1), !result))
        {
          if ((char)a1[84] <= v20) {
            goto LABEL_77;
          }
          sub_1B0D14730(*((void *)a1 + 17));
          int v30 = (char)--a1[84];
          if (v30 > v20)
          {
            int v31 = v20;
            do
            {
              a1[84] = v30 - 1;
              uint64_t v32 = *(void *)&a1[8 * (char)v30 + 144];
              if (v32)
              {
                uint64_t v33 = *(void *)(v32 + 112);
                if ((*(_WORD *)(v33 + 52) & 0x20) != 0)
                {
                  uint64_t v34 = *(void *)(v33 + 40);
                  --*(_DWORD *)(v34 + 152);
                  *(void *)(v33 + 32) = *(void *)(v34 + 168);
                  *(void *)(v34 + 168) = v33;
                  (*(void (**)(void, void, void))(**(void **)(v34 + 72) + 144))(*(void *)(v34 + 72), *(void *)(v34 + 200) * (*(_DWORD *)(v33 + 48) - 1), *(void *)(v33 + 8));
                }
                else
                {
                  sub_1B0D0E3E8(v33);
                }
                int v31 = v20;
              }
              int v30 = (char)a1[84];
            }
            while (v30 > v31);
          }
          *((void *)a1 + 17) = *(void *)&a1[8 * v30 + 144];
          uint64_t result = sub_1B0CBDD6C((uint64_t)a1);
          if (!result)
          {
LABEL_77:
            if (v23)
            {
              *a1 = 2;
              unsigned int v39 = *(unsigned __int16 *)(v7 + 24);
              uint64_t result = 0;
              if (v47 >= v39)
              {
                *((_DWORD *)a1 + 1) = -1;
                *((_WORD *)a1 + 43) = v39 - 1;
              }
              else
              {
                *((_DWORD *)a1 + 1) = 1;
              }
            }
            else
            {
              unsigned int v40 = sub_1B0CACD5C(a1);
              if ((v21 & 2) != 0)
              {
                sub_1B0D144AC((uint64_t)a1);
                *a1 = 3;
              }
              if (v40 == 16) {
                return 0;
              }
              else {
                return v40;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B0CBD790(uint64_t a1)
{
  __int16 v1 = *(_DWORD **)(a1 + 40);
  if ((*(_WORD *)(a1 + 52) & 4) != 0 && v1[8] >= *(_DWORD *)(a1 + 48))
  {
    uint64_t v2 = v1[32];
    if (!v2) {
      return v2;
    }
    return sub_1B0D0F4D4(a1);
  }
  else
  {
    uint64_t v2 = v1[12];
    if (v2) {
      return v2;
    }
    if (v1[46] <= v1[50]) {
      return sub_1B0CBD7E0(a1);
    }
    else {
      return sub_1B0D133D0(a1);
    }
  }
}

uint64_t sub_1B0CBD7E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  int v3 = *(unsigned __int8 *)(v2 + 21);
  if (v3 == 2)
  {
    uint64_t v4 = *(unsigned int *)(v2 + 48);
    if (v4) {
      return v4;
    }
    if (*(void *)(v2 + 344) || *(unsigned char *)(v2 + 9) == 2) {
      goto LABEL_5;
    }
    uint64_t v20 = *(void *)v2;
    int v21 = *(_DWORD *)(v2 + 32);
    int v22 = (_OWORD *)sub_1B0C7FC94(512);
    if (!v22)
    {
      *(void *)(v2 + 64) = 0;
      return 7;
    }
    v22[30] = 0u;
    v22[31] = 0u;
    v22[28] = 0u;
    v22[29] = 0u;
    v22[26] = 0u;
    v22[27] = 0u;
    v22[24] = 0u;
    v22[25] = 0u;
    v22[22] = 0u;
    v22[23] = 0u;
    v22[20] = 0u;
    v22[21] = 0u;
    v22[18] = 0u;
    v22[19] = 0u;
    v22[16] = 0u;
    v22[17] = 0u;
    v22[14] = 0u;
    v22[15] = 0u;
    v22[12] = 0u;
    v22[13] = 0u;
    v22[10] = 0u;
    v22[11] = 0u;
    v22[8] = 0u;
    v22[9] = 0u;
    v22[6] = 0u;
    v22[7] = 0u;
    v22[4] = 0u;
    v22[5] = 0u;
    v22[2] = 0u;
    v22[3] = 0u;
    *int v22 = 0u;
    v22[1] = 0u;
    *(_DWORD *)int v22 = v21;
    *(void *)(v2 + 64) = v22;
    uint64_t v23 = *(void *)(v2 + 80);
    if (!*(void *)v23)
    {
      if (*(unsigned char *)(v2 + 9) == 4)
      {
        *(_OWORD *)(v23 + 48) = 0uLL;
        *(_OWORD *)(v23 + 64) = 0uLL;
        *(_OWORD *)(v23 + 16) = 0uLL;
        *(_OWORD *)(v23 + 32) = 0uLL;
        *(_OWORD *)uint64_t v23 = 0uLL;
        *(void *)uint64_t v23 = &unk_1F09A5508;
        *(void *)(v23 + 8) = -4294966280;
        *(_DWORD *)(v23 + 56) = 0;
        *(void *)(v23 + 64) = 0;
        *(void *)(v23 + 72) = 0;
      }
      else
      {
        int v24 = *(_DWORD *)(v2 + 180);
        int v25 = *(unsigned __int8 *)(v2 + 16);
        int v26 = dword_1EB21C9DC;
        uint64_t v4 = sub_1B0D12364(v2);
        if (!v4)
        {
          if (v25) {
            int v27 = v26;
          }
          else {
            int v27 = 0;
          }
          if (v25) {
            int v28 = 4126;
          }
          else {
            int v28 = 2054;
          }
          uint64_t v4 = sub_1B0D102D4(v20, *(void *)(v2 + 224), *(void *)(v2 + 80), v28 | v24 & 0x1700000u, v27);
        }
        if (v4) {
          goto LABEL_56;
        }
      }
    }
    *(_DWORD *)(v2 + 52) = 0;
    *(unsigned char *)(v2 + 24) = 0;
    *(void *)(v2 + 96) = 0;
    *(void *)(v2 + 104) = 0;
    uint64_t v4 = sub_1B0CCA880(v2);
    if (!v4)
    {
LABEL_5:
      int v3 = 3;
      *(unsigned char *)(v2 + 21) = 3;
      goto LABEL_6;
    }
LABEL_56:
    sub_1B0CD2868(*(void *)(v2 + 64));
    *(void *)(v2 + 64) = 0;
    *(void *)(v2 + 96) = 0;
    return v4;
  }
LABEL_6:
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x11) != 0)
  {
    __int16 v6 = v5 & 0xFFEF;
    *(_WORD *)(a1 + 52) = v5 & 0xFFEF;
    if (v5)
    {
      v6 ^= 3u;
      *(_WORD *)(a1 + 52) = v6;
      uint64_t v7 = *(uint64_t **)(a1 + 24);
      uint64_t v8 = *v7;
      *(void *)(a1 + 64) = *v7;
      *(void *)(a1 + 72) = 0;
      if (v8)
      {
        *(void *)(v8 + 72) = a1;
      }
      else
      {
        v7[1] = a1;
        if (*((unsigned char *)v7 + 48)) {
          *((unsigned char *)v7 + 49) = 1;
        }
      }
      uint64_t *v7 = a1;
      if ((v5 & 8) == 0 && !v7[2]) {
        v7[2] = a1;
      }
    }
  }
  else
  {
    __int16 v6 = *(_WORD *)(a1 + 52);
  }
  uint64_t v9 = *(_DWORD **)(v2 + 64);
  if (!v9) {
    goto LABEL_27;
  }
  unsigned int v10 = *(_DWORD *)(a1 + 48);
  unsigned int v11 = v10 - 1;
  if (v10 - 1 >= *v9)
  {
LABEL_20:
    if (v10 <= *(_DWORD *)(v2 + 36))
    {
      uint64_t v4 = sub_1B0D137FC(a1);
      if (v4) {
        return v4;
      }
      __int16 v6 = *(_WORD *)(a1 + 52);
    }
    else if (v3 != 4)
    {
      v6 |= 8u;
    }
    goto LABEL_27;
  }
  while (1)
  {
    unsigned int v12 = v9[2];
    if (!v12) {
      break;
    }
    unsigned int v13 = v11 / v12;
    v11 %= v12;
    uint64_t v9 = *(_DWORD **)&v9[2 * v13 + 4];
    if (!v9) {
      goto LABEL_20;
    }
  }
  if (*v9 >= 0xF81u)
  {
    unsigned int v16 = v11 % 0x7C;
    int v17 = v9 + 4;
    int v18 = v17[v11 % 0x7C];
    if (v18)
    {
      unsigned int v19 = v11 + 1;
      while (v18 != v19)
      {
        if (v16 == 123) {
          unsigned int v16 = 0;
        }
        else {
          ++v16;
        }
        int v18 = v17[v16];
        if (!v18) {
          goto LABEL_20;
        }
      }
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if (((*((unsigned __int8 *)v9 + ((unint64_t)v11 >> 3) + 16) >> (v11 & 7)) & 1) == 0) {
    goto LABEL_20;
  }
LABEL_27:
  *(_WORD *)(a1 + 52) = v6 | 4;
  if (*(int *)(v2 + 128) < 1) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = sub_1B0D0F4D4(a1);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 48);
  if (*(_DWORD *)(v2 + 32) < v14) {
    *(_DWORD *)(v2 + 32) = v14;
  }
  return v4;
}

uint64_t sub_1B0CBDB10(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v2 = a2[4];
  if (((char)a2[4] & 0x80000000) == 0)
  {
    __int16 v3 = 4;
    goto LABEL_10;
  }
  int v4 = a2[5] & 0x7F | ((v2 & 0x7F) << 7);
  if ((a2[5] & 0x80) == 0)
  {
    __int16 v3 = 5;
LABEL_5:
    unsigned int v2 = v4;
    goto LABEL_10;
  }
  unsigned int v2 = a2[6] & 0x7F | (v4 << 7);
  if ((a2[6] & 0x80) != 0)
  {
    unsigned int v2 = a2[7] & 0x7F | (v2 << 7);
    if ((a2[7] & 0x80) != 0)
    {
      int v4 = a2[8] & 0x7F | (v2 << 7);
      if ((a2[8] & 0x80) == 0)
      {
        __int16 v3 = 8;
        goto LABEL_5;
      }
      unsigned int v2 = a2[9] & 0x7F | (v4 << 7);
      if ((a2[9] & 0x80) != 0)
      {
        int v4 = a2[10] & 0x7F | (v2 << 7);
        if ((a2[10] & 0x80) == 0)
        {
          __int16 v3 = 10;
          goto LABEL_5;
        }
        unsigned int v2 = a2[11] & 0x7F | (v4 << 7);
        if ((a2[11] & 0x80) != 0)
        {
          int v4 = a2[12] & 0x7F | (v2 << 7);
          __int16 v3 = 12;
          goto LABEL_5;
        }
        __int16 v3 = 11;
      }
      else
      {
        __int16 v3 = 9;
      }
    }
    else
    {
      __int16 v3 = 7;
    }
  }
  else
  {
    __int16 v3 = 6;
  }
LABEL_10:
  __int16 v5 = (_WORD)a2 + v3 + 1;
  unsigned int v6 = *(unsigned __int16 *)(a1 + 14);
  if (v2 <= v6) {
    return (unsigned __int16)(v2 + v5 - (_WORD)a2);
  }
  unsigned int v7 = (v2 - *(unsigned __int16 *)(a1 + 16)) % (*(_DWORD *)(*(void *)(a1 + 72) + 56) - 4)
     + *(unsigned __int16 *)(a1 + 16);
  if (v7 > v6) {
    LOWORD(v7) = *(_WORD *)(a1 + 16);
  }
  return (unsigned __int16)(v7 + v5 - (_WORD)a2 + 4);
}

uint64_t sub_1B0CBDC3C(uint64_t result, int a2, int a3, _DWORD *a4)
{
  if (!*a4)
  {
    uint64_t v6 = result;
    unsigned int v7 = (unsigned __int16 *)(*(void *)(result + 96) + 2 * a2);
    unsigned int v8 = __rev16(*v7);
    if (v8 + a3 <= *(_DWORD *)(*(void *)(result + 72) + 56))
    {
      uint64_t v9 = *(void *)(result + 80);
      uint64_t v10 = *(unsigned __int8 *)(result + 9);
      uint64_t result = sub_1B0D1F658(result, v8, (unsigned __int16)a3);
      if (result)
      {
        *a4 = result;
      }
      else
      {
        unsigned __int16 v11 = *(_WORD *)(v6 + 24) - 1;
        *(_WORD *)(v6 + 24) = v11;
        if (v11)
        {
          uint64_t result = (uint64_t)memmove(v7, v7 + 1, 2 * (v11 - a2));
          uint64_t v12 = v10 + v9;
          *(unsigned char *)(v12 + 3) = *(unsigned char *)(v6 + 25);
          *(unsigned char *)(v12 + 4) = *(unsigned char *)(v6 + 24);
          int v13 = *(_DWORD *)(v6 + 20) + 2;
        }
        else
        {
          uint64_t v14 = v10 + v9;
          *(_DWORD *)(v14 + 1) = 0;
          *(unsigned char *)(v14 + 7) = 0;
          *(unsigned char *)(v14 + 5) = BYTE1(*(_DWORD *)(*(void *)(v6 + 72) + 56));
          *(unsigned char *)(v14 + 6) = *(_DWORD *)(*(void *)(v6 + 72) + 56);
          int v13 = *(_DWORD *)(*(void *)(v6 + 72) + 56)
              - (*(unsigned __int8 *)(v6 + 9)
               + *(unsigned __int8 *)(v6 + 10))
              - 8;
        }
        *(_DWORD *)(v6 + 20) = v13;
      }
    }
    else
    {
      uint64_t result = sub_1B0D1045C(83991);
      *a4 = result;
    }
  }
  return result;
}

uint64_t sub_1B0CBDD6C(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = 0;
  v465[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 136);
  int64x2_t v406 = vdupq_n_s64(8uLL);
  while (1)
  {
    if ((*(_DWORD *)(v3 + 20) & 0x80000000) != 0 && sub_1B0D1F1CC(v3))
    {
LABEL_499:
      uint64_t v11 = 0;
      goto LABEL_502;
    }
    if (*(unsigned char *)(v3 + 12)) {
      break;
    }
    if (3 * *(_DWORD *)(v3 + 20) <= 2 * *(_DWORD *)(*(void *)(v1 + 32) + 56)) {
      goto LABEL_499;
    }
    int v6 = *(unsigned __int8 *)(v1 + 84);
    if (!*(unsigned char *)(v1 + 84)) {
      goto LABEL_499;
    }
LABEL_23:
    if (*(int *)(*(void *)(v3 + 112) + 56) >= 2)
    {
      int v385 = 85860;
LABEL_501:
      uint64_t v11 = sub_1B0D1045C(v385);
      goto LABEL_502;
    }
    uint64_t v12 = (char)v6 - 1;
    uint64_t v13 = *(void *)(v1 + 8 * v12 + 144);
    int v14 = *(unsigned __int16 *)(v1 + 2 * v12 + 88);
    uint64_t v15 = *(void *)(v13 + 112);
    unsigned int v16 = *(_DWORD **)(v15 + 40);
    if ((*(_WORD *)(v15 + 52) & 4) != 0 && v16[8] >= *(_DWORD *)(v15 + 48))
    {
      if (v16[32])
      {
        uint64_t v11 = sub_1B0D0F4D4(v15);
        if (v11) {
          goto LABEL_201;
        }
      }
    }
    else
    {
      uint64_t v11 = v16[12];
      if (v11) {
        goto LABEL_201;
      }
      if (v16[46] <= v16[50])
      {
        uint64_t v11 = sub_1B0CBD7E0(v15);
        if (v11) {
          goto LABEL_201;
        }
      }
      else
      {
        uint64_t v11 = sub_1B0D133D0(v15);
        if (v11) {
          goto LABEL_201;
        }
      }
    }
    if ((*(_DWORD *)(v13 + 20) & 0x80000000) != 0)
    {
      uint64_t v27 = sub_1B0D1F1CC(v13);
      if (v27)
      {
        uint64_t v11 = v27;
        goto LABEL_201;
      }
    }
    if (*(unsigned char *)(v3 + 2)
      && *(unsigned char *)(v3 + 12) == 1
      && *(unsigned __int16 *)(v3 + 28) == *(unsigned __int16 *)(v3 + 24)
      && *(_DWORD *)(v13 + 4) != 1
      && *(unsigned __int16 *)(v13 + 24) == v14)
    {
      if (!*(_WORD *)(v3 + 28))
      {
        uint64_t v11 = sub_1B0D1045C(84712);
        goto LABEL_201;
      }
      uint64_t v17 = *(void *)(v3 + 72);
      uint64_t v452 = 0;
      v458[0] = 0;
      uint64_t v11 = sub_1B0CC64B8(v17, &v452, (int *)v458, 0, 0);
      if (v11) {
        goto LABEL_201;
      }
      uint64_t v464 = *(void *)(v3 + 40);
      v457[0] = (*(uint64_t (**)(uint64_t))(v3 + 120))(v3);
      uint64_t v447 = 0;
      long long v445 = 0u;
      long long v446 = 0u;
      long long v443 = 0u;
      long long v444 = 0u;
      long long v441 = 0u;
      long long v442 = 0u;
      int v18 = (unsigned __int16 *)v452;
      sub_1B0CC63D4(v452, 13);
      LODWORD(v441) = 1;
      *((void *)&v441 + 1) = v3;
      *(void *)&long long v442 = &v464;
      uint64_t v19 = *(void *)(v3 + 88);
      *((void *)&v442 + 1) = v457;
      *(void *)&long long v443 = v19;
      LODWORD(v446) = 2;
      uint64_t v20 = sub_1B0D1FA40((uint64_t)&v441, 0, 1, (uint64_t)v18);
      v459[0] = v20;
      if (v20)
      {
        uint64_t v11 = v20;
        if (!v18) {
          goto LABEL_201;
        }
      }
      else
      {
        *((_DWORD *)v18 + 5) = *(_DWORD *)(v17 + 56) - (v18[9] + v457[0]) - 2;
        if (*(unsigned char *)(v17 + 33))
        {
          sub_1B0CD24E8((_DWORD *)v17, v458[0], 5, *(_DWORD *)(v13 + 4), v459);
          if (v457[0] > v18[8] && !v459[0])
          {
            unint64_t v235 = v464;
            long long v461 = 0uLL;
            *(void *)&long long v462 = 0;
            (*((void (**)(unsigned __int16 *, uint64_t, long long *))v18 + 16))(v18, v464, &v461);
            if (v462 > WORD2(v462))
            {
              unint64_t v236 = *((void *)v18 + 11);
              if (v236 <= v235 || v235 + WORD2(v462) <= v236) {
                sub_1B0CD24E8(*((_DWORD **)v18 + 9), bswap32(*(_DWORD *)(WORD3(v462) + v235 - 4)), 3, *((_DWORD *)v18 + 1), v459);
              }
              else {
                v459[0] = sub_1B0D1045C(78404);
              }
            }
          }
        }
        unint64_t v374 = 0;
        uint64_t v375 = *(void *)(v3 + 96) + 2 * *(unsigned __int16 *)(v3 + 24);
        unint64_t v376 = *(void *)(v3 + 80)
             + ((*(unsigned __int8 *)(v375 - 1) | (*(unsigned __int8 *)(v375 - 2) << 8)) & (unint64_t)*(unsigned __int16 *)(v3 + 26));
        do
        {
          unint64_t v377 = v374 + 1;
          uint64_t v464 = v376 + v374 + 1;
          if (v374 > 7) {
            break;
          }
          int v378 = *(char *)(v376 + v374++);
        }
        while (v378 < 0);
        uint64_t v379 = 0;
        unint64_t v380 = v376 + v377;
        do
        {
          uint64_t v381 = &__src[v379];
          uint64_t v464 = v380 + v379 + 1;
          int v382 = *(char *)(v380 + v379++);
          v381[4] = v382;
        }
        while (v382 < 0 && v379 + v380 < v380 + 9);
        uint64_t v11 = v459[0];
        if (!v459[0]) {
          uint64_t v11 = sub_1B0CC16BC(v13, *(unsigned __int16 *)(v13 + 24), __src, (int)v379 + 4, 0, *(_DWORD *)(v3 + 4));
        }
        *(_DWORD *)(*(unsigned __int8 *)(v13 + 9) + *(void *)(v13 + 80) + 8) = bswap32(v458[0]);
        if (!v18) {
          goto LABEL_201;
        }
      }
      uint64_t v383 = *((void *)v18 + 14);
      if ((*(_WORD *)(v383 + 52) & 0x20) != 0)
      {
        uint64_t v384 = *(void *)(v383 + 40);
        --*(_DWORD *)(v384 + 152);
        *(void *)(v383 + 32) = *(void *)(v384 + 168);
        *(void *)(v384 + 168) = v383;
        (*(void (**)(void, void, void))(**(void **)(v384 + 72) + 144))(*(void *)(v384 + 72), *(void *)(v384 + 200) * (*(_DWORD *)(v383 + 48) - 1), *(void *)(v383 + 8));
      }
      else
      {
        sub_1B0D0E3E8(v383);
      }
      goto LABEL_201;
    }
    uint64_t v21 = sub_1B0D121F0(*(_DWORD *)(*(void *)(v1 + 32) + 52));
    char v22 = *(unsigned char *)(v1 + 3);
    uint64_t v463 = 0;
    long long v461 = 0u;
    long long v462 = 0u;
    v460[0] = 0;
    v460[1] = 0;
    int v448 = 0;
    char v449 = 0;
    uint64_t v447 = 0;
    long long v445 = 0u;
    long long v446 = 0u;
    long long v441 = 0u;
    long long v442 = 0u;
    long long v443 = 0u;
    long long v444 = 0u;
    unint64_t v435 = v21;
    if (!v21)
    {
      uint64_t v11 = 7;
      if (v2) {
        goto LABEL_199;
      }
      goto LABEL_200;
    }
    int v411 = v22 & 1;
    int v23 = *(unsigned __int8 *)(v13 + 12);
    int v24 = *(unsigned __int16 *)(v13 + 24);
    unsigned int v25 = v24 + v23;
    if ((v24 + v23) >= 2)
    {
      if (v14)
      {
        if (v25 == v14) {
          int v26 = v14 + v411 - 2;
        }
        else {
          int v26 = v14 - 1;
        }
      }
      else
      {
        int v26 = 0;
      }
      unsigned int v25 = 2 - v411;
    }
    else
    {
      int v26 = 0;
    }
    uint64_t v440 = *(void *)(v13 + 72);
    uint64_t v464 = 0;
    v465[0] = 0;
    v465[1] = 0;
    signed int v28 = v26 - v23 + v25;
    uint64_t v431 = v3;
    unint64_t v407 = v2;
    uint64_t v408 = v1;
    int v398 = v6;
    int v401 = v14;
    if (v28 == v24)
    {
      unint64_t v29 = *(unsigned __int8 *)(v13 + 9) + 8;
    }
    else
    {
      int v30 = (unsigned __int8 *)(*(void *)(v13 + 96) + 2 * v28);
      unint64_t v29 = (v30[1] | (*v30 << 8)) & (unint64_t)*(unsigned __int16 *)(v13 + 26);
    }
    int v31 = 0;
    int64_t v32 = v25 + 1;
    uint64_t v399 = (unsigned int *)(*(void *)(v13 + 80) + v29);
    unsigned int v33 = bswap32(*v399);
    uint64_t v34 = v25;
    int v403 = v25;
    uint64_t v35 = v25;
    int v428 = v26;
    uint64_t v436 = v13;
    int v437 = v26 - 1;
    unint64_t v419 = v25;
    while (1)
    {
      uint64_t v36 = sub_1B0D1DE18((_DWORD *)v440, v33, &v465[v35 - 1]);
      unsigned int v451 = v36;
      if (v36)
      {
        uint64_t v11 = v36;
        goto LABEL_85;
      }
      uint64_t v37 = v465[v34 - 1];
      if ((*(_DWORD *)(v37 + 20) & 0x80000000) != 0)
      {
        uint64_t v38 = sub_1B0D1F1CC(v465[v34 - 1]);
        unsigned int v451 = v38;
        if (v38)
        {
          uint64_t v11 = v38;
LABEL_85:
          __memset_chk();
          int v47 = 0;
          uint64_t v1 = v408;
          goto LABEL_86;
        }
      }
      v31 += *(unsigned __int16 *)(v37 + 24) + 4;
      if (!v34) {
        break;
      }
      if (!*(unsigned char *)(v13 + 12))
      {
        int v40 = v437 + v34;
        goto LABEL_81;
      }
      if (v437 + v34 != *(unsigned __int16 *)(v13 + 28))
      {
        int v40 = v428 + v34 - 1;
LABEL_81:
        int v41 = (unsigned __int8 *)(*(void *)(v13 + 96) + 2 * (v40 - *(unsigned __int8 *)(v13 + 12)));
        unsigned int v42 = (unsigned int *)(*(void *)(v13 + 80)
                             + ((v41[1] | (*v41 << 8)) & (unint64_t)*(unsigned __int16 *)(v13 + 26)));
        *(void *)&v459[2 * v34 + 3] = v42;
        unsigned int v43 = *v42;
        unsigned int v44 = (*(uint64_t (**)(uint64_t, unsigned int *))(v13 + 120))(v13, v42);
        int v45 = v44;
        *(_DWORD *)&v456[4 * v34 + 12] = v44;
        if ((*(unsigned char *)(v440 + 40) & 0xC) != 0)
        {
          int v46 = v42 - *(_DWORD *)(v13 + 80);
          if ((signed int)(v46 + v44) <= *(_DWORD *)(v440 + 56))
          {
            memcpy((void *)(v435 + v46), v42, v44);
            uint64_t v13 = v436;
            *(void *)&v459[2 * v34 + 3] = (char *)v42 + v435 - *(void *)(v436 + 80);
          }
        }
        unsigned int v33 = bswap32(v43);
        sub_1B0CBDC3C(v13, v40 - *(unsigned __int8 *)(v13 + 12), v45, &v451);
        uint64_t v11 = v451;
        goto LABEL_71;
      }
      unsigned int v39 = *(unsigned int **)(v13 + 40);
      *(void *)&v459[2 * v34 + 3] = v39;
      unsigned int v33 = bswap32(*v39);
      uint64_t v11 = 0;
      *(_DWORD *)&v456[4 * v34 + 12] = (*(uint64_t (**)(uint64_t))(v13 + 120))(v13);
      *(unsigned char *)(v13 + 12) = 0;
LABEL_71:
      --v35;
      --v34;
      if (v11) {
        goto LABEL_85;
      }
    }
    unsigned int v450 = v33;
    unint64_t v50 = (v31 + 3);
    unsigned int v51 = v50 & 0x7FFFFFFC;
    uint64_t v52 = sub_1B0C7FC94((int)(*(_DWORD *)(v440 + 52) + 10 * (v50 & 0x7FFFFFFC)));
    *(void *)&long long v442 = v52;
    if (!v52)
    {
      int v47 = 0;
      uint64_t v11 = 7;
      uint64_t v1 = v408;
      uint64_t v3 = v431;
      goto LABEL_185;
    }
    uint64_t v53 = v52;
    unint64_t v54 = 0;
    int v55 = 0;
    LODWORD(v56) = 0;
    uint64_t v57 = v52 + 8 * v51;
    uint64_t v414 = v57 + 2 * v51;
    *((void *)&v442 + 1) = v57;
    *((void *)&v441 + 1) = v464;
    int v391 = *(unsigned __int8 *)(v464 + 8);
    uint64_t v404 = 4 * *(unsigned __int8 *)(v464 + 8);
    uint64_t v438 = *(unsigned __int8 *)(v464 + 2);
    uint64_t v409 = v52 + 8;
    uint64_t v392 = v52 + 16;
    uint64_t v394 = v52 + 40 * ((v50 >> 2) & 0x1FFFFFFF);
    uint64_t v421 = v57;
    while (2)
    {
      uint64_t v58 = v465[v54 - 1];
      int16x8_t v59 = *(unsigned __int8 **)(v58 + 80);
      if (*v59 != **(unsigned __int8 **)(v464 + 80))
      {
        int v187 = 85133;
        goto LABEL_275;
      }
      unint64_t v432 = v54;
      uint64_t v60 = *(unsigned __int16 *)(v58 + 24);
      unint64_t v61 = *(unsigned __int16 *)(v58 + 26);
      uint64_t v62 = *(unsigned __int16 *)(v58 + 18);
      unint64_t v63 = (unint64_t)&v59[v62];
      bzero((void *)(v57 + 2 * (int)v56), 2 * (*(unsigned __int8 *)(v58 + 12) + v60));
      LODWORD(v64) = *(unsigned __int8 *)(v58 + 12);
      int64x2_t v65 = vdupq_n_s64((unint64_t)v59);
      if (!*(unsigned char *)(v58 + 12))
      {
        v68.i64[0] = 0x100000001;
        v68.i64[1] = 0x100000001;
        uint64_t v57 = v421;
        goto LABEL_128;
      }
      uint64_t v66 = *(unsigned __int16 *)(v58 + 28);
      if (v60 < v66)
      {
        int v187 = 85157;
        goto LABEL_275;
      }
      uint64_t v67 = (int)v56;
      if (*(_WORD *)(v58 + 28))
      {
        v68.i64[0] = 0x100000001;
        v68.i64[1] = 0x100000001;
        uint64_t v57 = v421;
        if (v66 < 0x10
          || ((BOOL v69 = (int64x2_t *)(v53 + 8 * (int)v56),
               uint64_t v70 = (v66 - 1),
               v69 < (int64x2_t *)&v59[2 * v70 + 2 + v62])
            ? (BOOL v71 = v63 >= v409 + 8 * ((int)v56 + v70))
            : (BOOL v71 = 1),
              !v71))
        {
          LODWORD(v72) = 0;
          goto LABEL_115;
        }
        uint64_t v72 = (unsigned __int16)v66 & 0xFFF0;
        uint64_t v67 = v72 + (int)v56;
        v63 += 2 * v72;
        int8x16_t v73 = (int8x16_t)vdupq_n_s64(v61);
        uint64_t v74 = v72;
        do
        {
          uint64_t v75 = (const char *)&v59[v62];
          int8x16x2_t v467 = vld2q_s8(v75);
          uint16x8_t v76 = vmovl_u8(*(uint8x8_t *)v467.val[0].i8);
          int8x16_t v77 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v76.i8);
          int8x16_t v78 = (int8x16_t)vmovl_high_u16(v76);
          uint16x8_t v79 = vmovl_high_u8((uint8x16_t)v467.val[0]);
          int8x16_t v80 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v79.i8);
          int8x16_t v81 = (int8x16_t)vmovl_high_u16(v79);
          uint16x8_t v82 = vmovl_high_u8((uint8x16_t)v467.val[1]);
          int8x16_t v83 = (int8x16_t)vmovl_high_u16(v82);
          int8x16_t v84 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v82.i8);
          v467.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v467.val[1].i8);
          v467.val[1] = (int8x16_t)vmovl_high_u16((uint16x8_t)v467.val[0]);
          v467.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v467.val[0].i8);
          int8x8_t v85 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v467.val[0], v467.val[0], 8uLL));
          v86.i64[0] = v85.u32[0];
          v86.i64[1] = v85.u32[1];
          int8x16_t v87 = v86;
          *(int8x8_t *)v467.val[0].i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v77.i8, 8uLL), *(int8x8_t *)v467.val[0].i8);
          v86.i64[0] = v467.val[0].u32[0];
          v86.i64[1] = v467.val[0].u32[1];
          v467.val[0] = v86;
          *(int8x8_t *)v77.i8 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v467.val[1], v467.val[1], 8uLL));
          v86.i64[0] = v77.u32[0];
          v86.i64[1] = v77.u32[1];
          int8x16_t v88 = v86;
          int8x8_t v89 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v84, v84, 8uLL));
          v86.i64[0] = v89.u32[0];
          v86.i64[1] = v89.u32[1];
          int8x16_t v90 = v86;
          *(int8x8_t *)v467.val[1].i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v78.i8, 8uLL), *(int8x8_t *)v467.val[1].i8);
          v86.i64[0] = v467.val[1].u32[0];
          v86.i64[1] = v467.val[1].u32[1];
          v467.val[1] = v86;
          *(int8x8_t *)v78.i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v80.i8, 8uLL), *(int8x8_t *)v84.i8);
          v86.i64[0] = v78.u32[0];
          v86.i64[1] = v78.u32[1];
          int8x16_t v91 = v86;
          *(int8x8_t *)v80.i8 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL));
          v86.i64[0] = v80.u32[0];
          v86.i64[1] = v80.u32[1];
          int8x16_t v92 = v86;
          *(int8x8_t *)v81.i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v81.i8, 8uLL), *(int8x8_t *)v83.i8);
          v86.i64[0] = v81.u32[0];
          v86.i64[1] = v81.u32[1];
          v69[6] = vaddq_s64(v65, (int64x2_t)vandq_s8(v86, v73));
          v69[7] = vaddq_s64(v65, (int64x2_t)vandq_s8(v92, v73));
          v69[4] = vaddq_s64(v65, (int64x2_t)vandq_s8(v91, v73));
          v69[5] = vaddq_s64(v65, (int64x2_t)vandq_s8(v90, v73));
          v69[2] = vaddq_s64(v65, (int64x2_t)vandq_s8(v467.val[1], v73));
          v69[3] = vaddq_s64(v65, (int64x2_t)vandq_s8(v88, v73));
          *BOOL v69 = vaddq_s64(v65, (int64x2_t)vandq_s8(v467.val[0], v73));
          v69[1] = vaddq_s64(v65, (int64x2_t)vandq_s8(v87, v73));
          v69 += 8;
          v62 += 32;
          v74 -= 16;
        }
        while (v74);
        if (v72 != v66)
        {
LABEL_115:
          int v93 = v66 - v72;
          do
          {
            *(void *)(v53 + 8 * v67) = &v59[(*(unsigned __int8 *)(v63 + 1) | (*(unsigned __int8 *)v63 << 8)) & v61];
            v63 += 2;
            ++v67;
            --v93;
          }
          while (v93);
        }
        uint64_t v67 = (int)v67;
      }
      else
      {
        v68.i64[0] = 0x100000001;
        v68.i64[1] = 0x100000001;
        uint64_t v57 = v421;
      }
      if (v64 <= 1) {
        uint64_t v64 = 1;
      }
      else {
        uint64_t v64 = v64;
      }
      if (v64 < 8 || (uint64_t v94 = 8 * v67, (unint64_t)(8 * v67 + v53 - v58 - 40) < 0x20))
      {
        uint64_t v95 = 0;
        goto LABEL_125;
      }
      uint64_t v95 = v64 & 0xFC;
      v67 += v95;
      uint64_t v128 = (long long *)(v58 + 56);
      int v129 = (_OWORD *)(v392 + v94);
      uint64_t v130 = v95;
      do
      {
        long long v131 = *v128;
        *(v129 - 1) = *(v128 - 1);
        *int v129 = v131;
        v128 += 2;
        v129 += 2;
        v130 -= 4;
      }
      while (v130);
      if (v95 != v64)
      {
LABEL_125:
        uint64_t v96 = v64 - v95;
        int v97 = (uint64_t *)(v58 + 8 * v95 + 40);
        do
        {
          uint64_t v98 = *v97++;
          *(void *)(v53 + 8 * v67++) = v98;
          --v96;
        }
        while (v96);
      }
      LODWORD(v441) = v67;
      LODWORD(v56) = v67;
LABEL_128:
      uint64_t v99 = *(unsigned __int16 *)(v58 + 18);
      uint64_t v100 = 2 * *(unsigned __int16 *)(v58 + 24);
      uint64_t v101 = &v59[v99 + v100];
      if (v63 >= (unint64_t)v101)
      {
        unint64_t v120 = v432;
        goto LABEL_161;
      }
      uint64_t v102 = (int)v56;
      unint64_t v103 = (unint64_t)&v59[v100 + v99];
      unint64_t v104 = v63 + 2;
      if (v103 <= v63 + 2) {
        unint64_t v105 = v63 + 2;
      }
      else {
        unint64_t v105 = v103;
      }
      unint64_t v106 = v105 + ~v63;
      if (v106 < 0xE) {
        goto LABEL_157;
      }
      unint64_t v107 = v53 + 8 * (int)v56;
      if (v103 <= v104) {
        unint64_t v103 = v63 + 2;
      }
      unint64_t v108 = v103 + ~v63;
      unint64_t v109 = v409 + 8 * ((int)v56 + (v108 >> 1));
      unint64_t v110 = v104 + (v108 & 0xFFFFFFFFFFFFFFFELL);
      BOOL v111 = v107 >= v110 || v63 >= v109;
      BOOL v112 = !v111;
      BOOL v113 = (unint64_t)&v441 >= v110 || v63 >= (unint64_t)&v441 + 4;
      BOOL v114 = !v113;
      BOOL v115 = (unint64_t)&v441 >= v109 || v107 >= (unint64_t)&v441 + 4;
      if (!v115 || v112 || v114)
      {
LABEL_157:
        unint64_t v56 = (int)v56;
        unsigned int v121 = (unsigned __int8 *)v63;
        goto LABEL_158;
      }
      uint64_t v116 = (v106 >> 1) + 1;
      int8x16_t v117 = (int8x16_t)vdupq_n_s64(v61);
      if (v106 >= 0x1E)
      {
        int64x2_t v132 = vdupq_n_s64((int)v56);
        int32x4_t v133 = (int32x4_t)vaddq_s64(v132, (int64x2_t)xmmword_1B0DE1590);
        unint64_t v118 = v116 & 0xFFFFFFFFFFFFFFF0;
        int32x4_t v134 = (int32x4_t)vaddq_s64(v132, (int64x2_t)xmmword_1B0DE15A0);
        int64x2_t v135 = vaddq_s64(v132, (int64x2_t)xmmword_1B0DE15B0);
        int64x2_t v136 = vaddq_s64(v132, (int64x2_t)xmmword_1B0DE15C0);
        int64x2_t v137 = vaddq_s64(v132, (int64x2_t)xmmword_1B0DE15D0);
        int64x2_t v138 = vaddq_s64(v132, (int64x2_t)xmmword_1B0DE15E0);
        int64x2_t v139 = vaddq_s64(v132, (int64x2_t)xmmword_1B0DE15F0);
        int64x2_t v140 = vaddq_s64(v132, (int64x2_t)xmmword_1B0DE1490);
        unint64_t v119 = (v116 & 0xFFFFFFFFFFFFFFF0) + (int)v56;
        int8x16_t v141 = (int64x2_t *)(v53 + 8 * (int)v56);
        unint64_t v142 = v116 & 0xFFFFFFFFFFFFFFF0;
        int8x16_t v143 = (const char *)v63;
        do
        {
          int8x16x2_t v468 = vld2q_s8(v143);
          v143 += 32;
          uint16x8_t v144 = vmovl_u8(*(uint8x8_t *)v468.val[0].i8);
          int8x16_t v145 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v144.i8);
          int8x16_t v146 = (int8x16_t)vmovl_high_u16(v144);
          uint16x8_t v147 = vmovl_high_u8((uint8x16_t)v468.val[0]);
          int8x16_t v148 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v147.i8);
          int8x16_t v149 = (int8x16_t)vmovl_high_u16(v147);
          uint16x8_t v150 = vmovl_high_u8((uint8x16_t)v468.val[1]);
          int8x16_t v151 = (int8x16_t)vmovl_high_u16(v150);
          int8x16_t v152 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v150.i8);
          v468.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v468.val[1].i8);
          v468.val[1] = (int8x16_t)vmovl_high_u16((uint16x8_t)v468.val[0]);
          v468.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v468.val[0].i8);
          int8x8_t v153 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v145, v145, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v468.val[0], v468.val[0], 8uLL));
          v154.i64[0] = v153.u32[0];
          v154.i64[1] = v153.u32[1];
          int8x16_t v155 = v154;
          *(int8x8_t *)v468.val[0].i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v145.i8, 8uLL), *(int8x8_t *)v468.val[0].i8);
          v154.i64[0] = v468.val[0].u32[0];
          v154.i64[1] = v468.val[0].u32[1];
          v468.val[0] = v154;
          *(int8x8_t *)v145.i8 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v146, v146, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v468.val[1], v468.val[1], 8uLL));
          v154.i64[0] = v145.u32[0];
          v154.i64[1] = v145.u32[1];
          int8x16_t v156 = v154;
          int8x8_t v157 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v148, v148, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v152, v152, 8uLL));
          v154.i64[0] = v157.u32[0];
          v154.i64[1] = v157.u32[1];
          int8x16_t v158 = v154;
          *(int8x8_t *)v468.val[1].i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v146.i8, 8uLL), *(int8x8_t *)v468.val[1].i8);
          v154.i64[0] = v468.val[1].u32[0];
          v154.i64[1] = v468.val[1].u32[1];
          v468.val[1] = v154;
          *(int8x8_t *)v146.i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v148.i8, 8uLL), *(int8x8_t *)v152.i8);
          v154.i64[0] = v146.u32[0];
          v154.i64[1] = v146.u32[1];
          int8x16_t v159 = v154;
          *(int8x8_t *)v148.i8 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v149, v149, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v151, v151, 8uLL));
          v154.i64[0] = v148.u32[0];
          v154.i64[1] = v148.u32[1];
          int8x16_t v160 = v154;
          *(int8x8_t *)v149.i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v149.i8, 8uLL), *(int8x8_t *)v151.i8);
          v154.i64[0] = v149.u32[0];
          v154.i64[1] = v149.u32[1];
          v141[6] = vaddq_s64(v65, (int64x2_t)vandq_s8(v154, v117));
          v141[7] = vaddq_s64(v65, (int64x2_t)vandq_s8(v160, v117));
          v141[4] = vaddq_s64(v65, (int64x2_t)vandq_s8(v159, v117));
          v141[5] = vaddq_s64(v65, (int64x2_t)vandq_s8(v158, v117));
          v141[2] = vaddq_s64(v65, (int64x2_t)vandq_s8(v468.val[1], v117));
          v141[3] = vaddq_s64(v65, (int64x2_t)vandq_s8(v156, v117));
          *int8x16_t v141 = vaddq_s64(v65, (int64x2_t)vandq_s8(v468.val[0], v117));
          v141[1] = vaddq_s64(v65, (int64x2_t)vandq_s8(v155, v117));
          v141 += 8;
          int32x4_t v161 = vaddq_s32(vuzp1q_s32(v134, v133), v68);
          LODWORD(v441) = v161.i32[3];
          v468.val[1] = (int8x16_t)vdupq_n_s64(0x10uLL);
          int64x2_t v138 = vaddq_s64(v138, (int64x2_t)v468.val[1]);
          int64x2_t v139 = vaddq_s64(v139, (int64x2_t)v468.val[1]);
          int64x2_t v140 = vaddq_s64(v140, (int64x2_t)v468.val[1]);
          int64x2_t v137 = vaddq_s64(v137, (int64x2_t)v468.val[1]);
          int64x2_t v136 = vaddq_s64(v136, (int64x2_t)v468.val[1]);
          int64x2_t v135 = vaddq_s64(v135, (int64x2_t)v468.val[1]);
          int32x4_t v134 = (int32x4_t)vaddq_s64((int64x2_t)v134, (int64x2_t)v468.val[1]);
          int32x4_t v133 = (int32x4_t)vaddq_s64((int64x2_t)v133, (int64x2_t)v468.val[1]);
          v142 -= 16;
        }
        while (v142);
        if (v116 == v118)
        {
          LODWORD(v56) = v161.i32[3];
          unint64_t v120 = v432;
          goto LABEL_161;
        }
        if ((v116 & 8) != 0) {
          goto LABEL_178;
        }
        unsigned int v121 = (unsigned __int8 *)(v63 + 2 * v118);
        unint64_t v56 = v118 + (int)v56;
LABEL_158:
        unint64_t v120 = v432;
        goto LABEL_159;
      }
      unint64_t v118 = 0;
      unint64_t v119 = (int)v56;
LABEL_178:
      unint64_t v56 = (v116 & 0xFFFFFFFFFFFFFFF8) + (int)v56;
      unsigned int v121 = (unsigned __int8 *)(v63 + 2 * (v116 & 0xFFFFFFFFFFFFFFF8));
      int64x2_t v162 = vdupq_n_s64(v119);
      int32x4_t v163 = (int32x4_t)vaddq_s64(v162, (int64x2_t)xmmword_1B0DE15D0);
      int32x4_t v164 = (int32x4_t)vaddq_s64(v162, (int64x2_t)xmmword_1B0DE15E0);
      int64x2_t v165 = vaddq_s64(v162, (int64x2_t)xmmword_1B0DE15F0);
      int64x2_t v166 = vaddq_s64(v162, (int64x2_t)xmmword_1B0DE1490);
      uint64_t v167 = (const char *)(v63 + 2 * v118);
      unint64_t v168 = v118 - (v116 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v169 = (int64x2_t *)(v53 + 8 * (v118 + v102));
      do
      {
        int8x16_t v466 = (int8x16_t)vld2_s8(v167);
        v167 += 16;
        uint16x8_t v170 = vmovl_u8(*(uint8x8_t *)v466.i8);
        int8x16_t v171 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v170.i8);
        int8x16_t v172 = (int8x16_t)vmovl_high_u16(v170);
        int8x16_t v466 = (int8x16_t)vmovl_u8((uint8x8_t)v466.u64[1]);
        *(uint32x4_t *)((char *)&v466 + 8) = vmovl_high_u16((uint16x8_t)v466);
        int8x16_t v466 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v466.i8);
        int8x8_t v173 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v466, v466, 8uLL));
        v174.i64[0] = v173.u32[0];
        v174.i64[1] = v173.u32[1];
        int8x16_t v175 = v174;
        *(int8x8_t *)v466.i8 = vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v171.i8, 8uLL), *(int8x8_t *)v466.i8);
        v174.i64[0] = v466.u32[0];
        v174.i64[1] = v466.u32[1];
        int8x16_t v466 = v174;
        *(int8x8_t *)v171.i8 = vorr_s8((int8x8_t)vshl_n_s32((int32x2_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL), 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)((char *)&v466 + 8), *(int8x16_t *)((char *)&v466 + 8), 8uLL));
        v174.i64[0] = v171.u32[0];
        v174.i64[1] = v171.u32[1];
        int8x16_t v176 = v174;
        v466.u64[1] = (unint64_t)vorr_s8((int8x8_t)vshl_n_s32(*(int32x2_t *)v172.i8, 8uLL), (int8x8_t)v466.u64[1]);
        v174.i64[0] = v466.u32[2];
        v174.i64[1] = v466.u32[3];
        v169[2] = vaddq_s64(v65, (int64x2_t)vandq_s8(v174, v117));
        v169[3] = vaddq_s64(v65, (int64x2_t)vandq_s8(v176, v117));
        *unint64_t v169 = vaddq_s64(v65, (int64x2_t)vandq_s8(v466, v117));
        v169[1] = vaddq_s64(v65, (int64x2_t)vandq_s8(v175, v117));
        v169 += 4;
        int32x4_t v177 = vaddq_s32(vuzp1q_s32(v164, v163), v68);
        LODWORD(v441) = v177.i32[3];
        int32x4_t v164 = (int32x4_t)vaddq_s64((int64x2_t)v164, v406);
        int64x2_t v165 = vaddq_s64(v165, v406);
        int64x2_t v166 = vaddq_s64(v166, v406);
        int32x4_t v163 = (int32x4_t)vaddq_s64((int64x2_t)v163, v406);
        v168 += 8;
      }
      while (v168);
      unint64_t v120 = v432;
      if (v116 == (v116 & 0xFFFFFFFFFFFFFFF8))
      {
        LODWORD(v56) = v177.i32[3];
        goto LABEL_161;
      }
LABEL_159:
      uint64_t v122 = (void *)(v53 + 8 * v56);
      do
      {
        *v122++ = &v59[(v121[1] | (*v121 << 8)) & v61];
        LODWORD(v56) = v56 + 1;
        LODWORD(v441) = v56;
        v121 += 2;
      }
      while (v121 < v101);
LABEL_161:
      v458[v120] = v56;
      if (v120 < v419 && !v438)
      {
        unsigned __int16 v123 = *(_DWORD *)&v457[2 * v120];
        *(_WORD *)(v57 + 2 * (int)v56) = v123;
        int8x16x2_t v124 = (char *)(v414 + v55);
        v55 += v123;
        memcpy(v124, (const void *)v460[v120], v123);
        uint64_t v57 = v421;
        *(void *)(v53 + 8 * (int)v56) = &v124[v404];
        unsigned __int16 v125 = *(_WORD *)(v421 + 2 * (int)v56) - 4 * v391;
        *(_WORD *)(v421 + 2 * (int)v56) = v125;
        if (*(unsigned char *)(v58 + 8))
        {
          if (v125 <= 3u)
          {
            uint64_t v126 = (unsigned char *)(v394 + v55);
            do
            {
              *v126++ = 0;
              unsigned int v127 = (unsigned __int16)++*(_WORD *)(v421 + 2 * (int)v56);
              ++v55;
            }
            while (v127 < 4);
          }
        }
        else
        {
          *(_DWORD *)&v124[v404] = *(_DWORD *)(*(void *)(v58 + 80) + 8);
        }
        LODWORD(v56) = v56 + 1;
        LODWORD(v441) = v56;
      }
      unint64_t v54 = v120 + 1;
      if (v54 != v32) {
        continue;
      }
      break;
    }
    uint64_t v188 = 0;
    int v189 = 0;
    int v190 = v404 + *(_DWORD *)(v440 + 56) - 12;
    int v410 = v190;
    while (2)
    {
      uint64_t v191 = v465[v188 - 1];
      *((void *)&v443 + v189) = *(void *)(v191 + 88);
      int v192 = v458[v188];
      *((_DWORD *)&v446 + v189) = v192;
      if (v189)
      {
        if (v192 == *((_DWORD *)&v446 + v189 - 1)) {
          LODWORD(v193) = v189 - 1;
        }
        else {
          LODWORD(v193) = v189;
        }
        uint64_t v194 = v436;
        if (!v438)
        {
LABEL_211:
          uint64_t v193 = (int)v193 + 1;
          *((void *)&v443 + v193) = *(void *)(v194 + 88);
          *((_DWORD *)&v446 + v193) = v192 + 1;
        }
      }
      else
      {
        LODWORD(v193) = 0;
        uint64_t v194 = v436;
        if (!v438) {
          goto LABEL_211;
        }
      }
      int v195 = v190 - *(_DWORD *)(v191 + 20);
      *(_DWORD *)&v457[2 * v188] = v195;
      if (*(unsigned char *)(v191 + 12))
      {
        unint64_t v196 = 0;
        do
        {
          v195 += (*(uint64_t (**)(uint64_t, void))(v191 + 120))(v191, *(void *)(v191 + 8 * v196 + 40)) + 2;
          *(_DWORD *)&v457[2 * v188] = v195;
          ++v196;
        }
        while (v196 < *(unsigned __int8 *)(v191 + 12));
      }
      v459[v188++] = v192;
      int v189 = v193 + 1;
      int v190 = v410;
      if (v188 != v32) {
        continue;
      }
      break;
    }
    unint64_t v197 = 0;
    int v422 = v441;
    uint64_t v415 = (int)v441;
    uint64_t v433 = *((void *)&v442 + 1);
    uint64_t v395 = *((void *)&v442 + 1) + 2;
    int64_t v198 = v32;
    uint64_t v3 = v431;
    while (2)
    {
      int v199 = *(_DWORD *)&v457[2 * v197];
      if (v199 <= v410)
      {
        int v203 = v459[v197];
        int64_t v200 = v197 + 1;
        goto LABEL_235;
      }
      int64_t v200 = v197 + 1;
      while (2)
      {
        if (v200 >= (int)v198)
        {
          if (v197 < 4)
          {
            *(_DWORD *)&v457[2 * v200] = 0;
            v459[v200] = v422;
            int64_t v198 = (v197 + 2);
            goto LABEL_226;
          }
          *(_DWORD *)&v457[2 * v197] = v199;
          int v187 = 85258;
LABEL_275:
          uint64_t v11 = sub_1B0D1045C(v187);
          int v47 = 0;
          uint64_t v1 = v408;
LABEL_86:
          uint64_t v3 = v431;
          goto LABEL_87;
        }
LABEL_226:
        uint64_t v202 = (int)v459[v197];
        int v203 = v202 - 1;
        int v204 = *(unsigned __int16 *)(v433 + 2 * (v202 - 1));
        if (!*(_WORD *)(v433 + 2 * (v202 - 1)))
        {
          int64_t v205 = v198;
          int v204 = sub_1B0D1FC9C((uint64_t)&v441, (int)v202 - 1);
          int64_t v198 = v205;
        }
        int v206 = v204 + 2;
        int v201 = v204 + 2;
        if (!v438)
        {
          if ((int)v202 >= v422)
          {
            int v201 = 0;
          }
          else
          {
            int v207 = *(unsigned __int16 *)(v433 + 2 * v202);
            if (!*(_WORD *)(v433 + 2 * v202))
            {
              int v208 = v202;
              int64_t v209 = v198;
              int v207 = sub_1B0D1FC9C((uint64_t)&v441, v208);
              int64_t v198 = v209;
            }
            int v201 = v207 + 2;
          }
        }
        v199 -= v206;
        *(_DWORD *)&v457[2 * v200] += v201;
        v459[v197] = v203;
        if (v199 > v410) {
          continue;
        }
        break;
      }
      uint64_t v3 = v431;
LABEL_235:
      *(_DWORD *)&v457[2 * v197] = v199;
      if (v203 >= v422)
      {
LABEL_247:
        int64_t v198 = v200;
      }
      else
      {
        uint64_t v210 = v203;
        unint64_t v211 = (_WORD *)(v395 + 2 * v203);
        int64_t v212 = v198;
        while (1)
        {
          int v214 = (unsigned __int16)*(v211 - 1);
          if (!*(v211 - 1))
          {
            int v214 = sub_1B0D1FC9C((uint64_t)&v441, v210);
            int64_t v198 = v212;
          }
          int v213 = v214 + 2;
          v199 += v214 + 2;
          if (v199 > v410) {
            break;
          }
          unint64_t v215 = 4 * v197;
          *(_DWORD *)&v457[v215 / 2] = v199;
          uint64_t v216 = v210 + 1;
          v459[v215 / 4] = v210 + 1;
          if (!v438)
          {
            if (v216 >= v415)
            {
              int v213 = 0;
            }
            else
            {
              int v217 = (unsigned __int16)*v211;
              if (!*v211)
              {
                int v217 = sub_1B0D1FC9C((uint64_t)&v441, (int)v210 + 1);
                int64_t v198 = v212;
              }
              int v213 = v217 + 2;
            }
          }
          *(_DWORD *)&v457[2 * v200] -= v213;
          ++v211;
          ++v210;
          BOOL v250 = v415 == v216;
          uint64_t v3 = v431;
          if (v250) {
            goto LABEL_247;
          }
        }
        if (v197) {
          int v218 = v459[(v197 - 1)];
        }
        else {
          int v218 = 0;
        }
        if (v218 >= (int)v210)
        {
          uint64_t v11 = sub_1B0D1045C(85291);
          int v47 = 0;
          uint64_t v1 = v408;
          goto LABEL_87;
        }
      }
      unint64_t v197 = v200;
      if (v200 < (int)v198) {
        continue;
      }
      break;
    }
    uint64_t v219 = v433 - 2 * v438;
    uint64_t v220 = v433 - 2;
    uint64_t v416 = (v198 - 1);
    uint64_t v221 = v416;
    int v222 = v428;
    int v223 = v198;
LABEL_256:
    if ((int)v221 >= 1)
    {
      int v225 = *(_DWORD *)&v457[2 * v221];
      uint64_t v226 = v221 - 1;
      unint64_t v227 = 4 * (v221 - 1);
      int v228 = *(_DWORD *)&v457[v227 / 2];
      uint64_t v229 = (int)v459[v227 / 4];
      if (!*(_WORD *)(v433 + 2 * ((int)v229 - (int)v438)))
      {
        sub_1B0D1FC9C((uint64_t)&v441, v229 - v438);
        uint64_t v219 = v433 - 2 * v438;
        LODWORD(v198) = v223;
      }
      uint64_t v423 = v221;
      if (v221 == v416) {
        int v230 = 0;
      }
      else {
        int v230 = -2;
      }
      while (1)
      {
        int v232 = v229 - 1;
        int v233 = *(unsigned __int16 *)(v220 + 2 * v229);
        if (*(_WORD *)(v220 + 2 * v229))
        {
          int v234 = *(unsigned __int16 *)(v219 + 2 * v229);
          if (!v225) {
            goto LABEL_262;
          }
        }
        else
        {
          int v233 = sub_1B0D1FC9C((uint64_t)&v441, (int)v229 - 1);
          uint64_t v219 = v433 - 2 * v438;
          LODWORD(v198) = v223;
          int v234 = *(unsigned __int16 *)(v219 + 2 * v229);
          if (!v225)
          {
LABEL_262:
            int v231 = v234 + 2;
            goto LABEL_263;
          }
        }
        if (v411 || (int v231 = v225 + v234 + 2, v231 > v228 + v230 - v233))
        {
          int v231 = v225;
LABEL_271:
          int v222 = v428;
          *(_DWORD *)&v457[2 * v423] = v231;
          *(_DWORD *)&v457[2 * v226] = v228;
          if ((int)v423 >= 2) {
            int v224 = v459[(v423 - 2)];
          }
          else {
            int v224 = 0;
          }
          uint64_t v221 = v226;
          if ((int)v229 <= v224)
          {
            uint64_t v11 = sub_1B0D1045C(85335);
            int v47 = 0;
            uint64_t v1 = v408;
            uint64_t v3 = v431;
            goto LABEL_87;
          }
          goto LABEL_256;
        }
LABEL_263:
        --v229;
        int v228 = v228 - v233 - 2;
        v459[v226] = v232;
        int v225 = v231;
        if (v229 + 1 <= 1) {
          goto LABEL_271;
        }
      }
    }
    int v424 = **(unsigned __int8 **)(v464 + 80);
    if ((int)v198 < 1)
    {
      int v251 = 0;
      goto LABEL_317;
    }
    unint64_t v237 = 0;
    int v434 = 0;
    uint64_t v238 = (v401 - v222);
    int v239 = v441;
    uint64_t v240 = v198;
    uint64_t v1 = v408;
    while (1)
    {
      uint64_t v452 = 0;
      if (v237 <= v419)
      {
        unint64_t v244 = v237;
        uint64_t v245 = v465[v237 - 1];
        *(void *)((char *)&v461 + v244 * 8) = v245;
        v465[v244 - 1] = 0;
        uint64_t v246 = *(void *)(v245 + 112);
        uint64_t v247 = *(_DWORD **)(v246 + 40);
        if ((*(unsigned char *)(v246 + 52) & 4) != 0 && v247[8] >= *(_DWORD *)(v246 + 48))
        {
          if (v247[32])
          {
            uint64_t v248 = sub_1B0D0F4D4(v246);
            goto LABEL_303;
          }
          uint64_t v11 = 0;
        }
        else
        {
          uint64_t v11 = v247[12];
          if (!v11)
          {
            if (v247[46] <= v247[50]) {
              uint64_t v248 = sub_1B0CBD7E0(v246);
            }
            else {
              uint64_t v248 = sub_1B0D133D0(v246);
            }
LABEL_303:
            uint64_t v11 = v248;
          }
        }
        unsigned int v451 = v11;
        ++v434;
        if (v238 == v237) {
          int v249 = 2;
        }
        else {
          int v249 = 1;
        }
        BOOL v250 = v249 != *(_DWORD *)(*(void *)(v245 + 112) + 56) && v11 == 0;
        if (v250)
        {
          uint64_t v11 = sub_1B0D1045C(85368);
          goto LABEL_497;
        }
        if (v11) {
          goto LABEL_497;
        }
        goto LABEL_286;
      }
      unsigned int v241 = v411 ? 1 : v450;
      uint64_t v242 = sub_1B0CC64B8(v440, &v452, (int *)&v450, v241, 0);
      unsigned int v451 = v242;
      if (v242) {
        break;
      }
      int v243 = (_DWORD *)v452;
      sub_1B0CC63D4(v452, v424);
      *((void *)&v461 + v237) = v243;
      ++v434;
      v458[v237] = v239;
      if (*(unsigned char *)(v440 + 33))
      {
        sub_1B0CD24E8((_DWORD *)v440, v243[1], 5, *(_DWORD *)(v436 + 4), &v451);
        uint64_t v11 = v451;
        if (v451) {
          goto LABEL_497;
        }
      }
LABEL_286:
      ++v237;
      int v222 = v428;
      if (v240 == v237)
      {
        int v251 = v434;
        if (v434 < 1)
        {
LABEL_317:
          uint64_t v3 = v431;
          int v412 = 0;
          int v390 = 0;
          LODWORD(v252) = v251 - 1;
        }
        else
        {
          uint64_t v252 = (v434 - 1);
          uint64_t v3 = v431;
          if (v434 == 1)
          {
            uint64_t v347 = 0;
            goto LABEL_462;
          }
          uint64_t v347 = v434 & 0xFFFFFFFE;
          uint64_t v351 = v347;
          int v352 = v456;
          uint64_t v353 = (char *)&v461 + 8;
          do
          {
            int v354 = *(_DWORD *)(*(void *)v353 + 4);
            *(v352 - 1) = *(_DWORD *)(*((void *)v353 - 1) + 4);
            *int v352 = v354;
            v353 += 16;
            v352 += 2;
            v351 -= 2;
          }
          while (v351);
          if (v347 != v434)
          {
LABEL_462:
            uint64_t v355 = v434 - v347;
            int v356 = &__src[4 * v347 + 13];
            uint64_t v357 = (uint64_t *)&v461 + v347;
            do
            {
              uint64_t v358 = *v357++;
              *(_DWORD *)int v356 = *(_DWORD *)(v358 + 4);
              v356 += 4;
              --v355;
            }
            while (v355);
          }
          if (v434 < 2)
          {
            int v412 = 0;
            int v390 = 1;
          }
          else
          {
            uint64_t v359 = 0;
            uint64_t v360 = 1;
            do
            {
              uint64_t v361 = v359 + 1;
              if (v359 + 1 >= (unint64_t)v434)
              {
                int v363 = v359;
              }
              else
              {
                uint64_t v362 = v360;
                int v363 = v359;
                do
                {
                  if (*(_DWORD *)(*((void *)&v461 + v362) + 4) < *(_DWORD *)(*((void *)&v461 + v363) + 4)) {
                    int v363 = v362;
                  }
                  ++v362;
                }
                while (v434 != v362);
              }
              if (v359 != v363)
              {
                uint64_t v364 = *((void *)&v461 + v359);
                uint64_t v365 = *(unsigned int *)(v364 + 4);
                uint64_t v366 = *((void *)&v461 + v363);
                uint64_t v367 = *(unsigned int *)(v366 + 4);
                uint64_t v368 = dword_1E9B51ED0 / *(_DWORD *)(v440 + 52) + 1;
                uint64_t v369 = *(void *)(v364 + 112);
                __int16 v370 = *(_WORD *)(v369 + 52);
                __int16 v371 = *(_WORD *)(*(void *)(v366 + 112) + 52);
                *(_WORD *)(v369 + 52) = v371;
                sub_1B0D15484(v369, v368);
                uint64_t v372 = *(void *)(v366 + 112);
                *(_WORD *)(v372 + 52) = v370;
                sub_1B0D15484(v372, v365);
                uint64_t v373 = *(void *)(v364 + 112);
                *(_WORD *)(v373 + 52) = v371;
                sub_1B0D15484(v373, v367);
                *(_DWORD *)(v364 + 4) = v367;
                uint64_t v252 = (v434 - 1);
                *(_DWORD *)(v366 + 4) = v365;
                int v222 = v428;
              }
              ++v360;
              uint64_t v359 = v361;
            }
            while (v361 != v252);
            int v412 = 1;
            int v390 = 1;
            uint64_t v3 = v431;
            int v251 = v434;
          }
        }
        unsigned int v417 = v252;
        uint64_t v253 = *((void *)&v461 + (int)v252);
        *uint64_t v399 = bswap32(*(_DWORD *)(v253 + 4));
        if ((v424 & 8) == 0 && v32 != v251)
        {
          if (v251 <= (int)v32) {
            uint64_t v254 = &v464;
          }
          else {
            uint64_t v254 = (uint64_t *)&v461;
          }
          *(_DWORD *)(*(void *)(v253 + 80) + 8) = *(_DWORD *)(*(void *)(v254[v419] + 80) + 8);
        }
        int v434 = v251;
        if (*(unsigned char *)(v440 + 33))
        {
          int v255 = v441;
          if ((int)v441 >= 1)
          {
            uint64_t v256 = 0;
            int v257 = 0;
            uint64_t v258 = 0;
            uint64_t v259 = v461;
            LODWORD(v260) = *(unsigned __int16 *)(v461 + 24) + *(unsigned __int8 *)(v461 + 12);
            uint64_t v261 = v461;
            do
            {
              if (v256 == v260)
              {
                uint64_t v262 = v257;
                int v263 = &v465[v262];
                int v264 = (char *)&v461 + v262 * 8 + 8;
                uint64_t v265 = v257 + 1;
                do
                {
                  if (v265 >= v434) {
                    uint64_t v266 = v263;
                  }
                  else {
                    uint64_t v266 = v264;
                  }
                  uint64_t v261 = *v266;
                  uint64_t v260 = v260
                       + (v438 == 0)
                       + *(unsigned __int16 *)(*v266 + 24)
                       + *(unsigned __int8 *)(*v266 + 12);
                  ++v257;
                  ++v263;
                  v264 += 8;
                  ++v265;
                }
                while (v256 == v260);
              }
              int v267 = *(unsigned int **)(v442 + 8 * v256);
              if (v256 != v459[(int)v258]
                || (uint64_t v259 = *((void *)&v461 + (int)v258 + 1), v258 = (int)v258 + 1, v438))
              {
                if (v257 >= v434
                  || *(_DWORD *)(v259 + 4) != *(_DWORD *)&__src[4 * v257 + 13]
                  || (unint64_t)v267 < *(void *)(v261 + 80)
                  || (unint64_t)v267 >= *(void *)(v261 + 88))
                {
                  if (!v391)
                  {
                    uint64_t v425 = *(unsigned int **)(v442 + 8 * v256);
                    uint64_t v268 = v259;
                    sub_1B0CD24E8((_DWORD *)v440, bswap32(*v267), 5, *(_DWORD *)(v259 + 4), &v451);
                    int v267 = v425;
                    uint64_t v259 = v268;
                  }
                  uint64_t v426 = v258;
                  unsigned int v269 = *(unsigned __int16 *)(*((void *)&v442 + 1) + 2 * v256);
                  if (!*(_WORD *)(*((void *)&v442 + 1) + 2 * v256))
                  {
                    int v270 = v267;
                    uint64_t v271 = v259;
                    unsigned int v269 = sub_1B0D1FC9C((uint64_t)&v441, v256);
                    int v267 = v270;
                    uint64_t v259 = v271;
                  }
                  uint64_t v11 = v451;
                  if (v269 > *(unsigned __int16 *)(v259 + 16))
                  {
                    if (!v451)
                    {
                      uint64_t v453 = 0;
                      uint64_t v452 = 0;
                      uint64_t v454 = 0;
                      uint64_t v272 = v267;
                      uint64_t v273 = v259;
                      (*(void (**)(uint64_t, unsigned int *, uint64_t *))(v259 + 128))(v259, v267, &v452);
                      uint64_t v259 = v273;
                      if (v454 > WORD2(v454))
                      {
                        unint64_t v274 = *(void *)(v261 + 88);
                        if (v274 <= (unint64_t)v272 || (unint64_t)v272 + WORD2(v454) <= v274)
                        {
                          sub_1B0CD24E8(*(_DWORD **)(v273 + 72), bswap32(*(unsigned int *)((char *)v272 + HIWORD(v454) - 4)), 3, *(_DWORD *)(v273 + 4), &v451);
                          uint64_t v259 = v273;
                        }
                        else
                        {
                          unsigned int v275 = sub_1B0D1045C(78404);
                          uint64_t v259 = v273;
                          unsigned int v451 = v275;
                        }
                      }
                    }
                    uint64_t v11 = v451;
                  }
                  if (v11)
                  {
LABEL_458:
                    uint64_t v1 = v408;
                    goto LABEL_498;
                  }
                  int v255 = v441;
                  uint64_t v258 = v426;
                  int v222 = v428;
                }
              }
              ++v256;
            }
            while (v256 < v255);
          }
        }
        if (v412)
        {
          int v276 = 0;
          *(void *)__int16 v429 = *((void *)&v442 + 1);
          uint64_t v277 = v442;
          uint64_t v278 = v417;
          long long v279 = v446;
          int v280 = v459;
          int v281 = &v461;
          uint64_t v282 = v447;
          uint64_t v396 = v442;
          while (1)
          {
            int v283 = v222;
            uint64_t v285 = *v280++;
            int v284 = v285;
            uint64_t v286 = *(char **)(v277 + 8 * v285);
            uint64_t v287 = *(void *)v281;
            int v288 = *(unsigned __int16 *)(*(void *)v429 + 2 * v285);
            int v289 = v288 + v404;
            int v290 = (_DWORD *)(v435 + v276);
            if (*(unsigned char *)(*(void *)v281 + 8))
            {
              if (v438)
              {
                uint64_t v453 = 0;
                uint64_t v452 = 0;
                uint64_t v454 = 0;
                uint64_t v291 = *(void *)(v277 + 8 * --v284);
                uint64_t v292 = v287;
                unint64_t v293 = v435 + v276;
                (*(void (**)(uint64_t, uint64_t, uint64_t *))(v287 + 128))(v287, v291, &v452);
                uint64_t v286 = (char *)v293;
                uint64_t v294 = (int8x8_t *)(v293 + 4);
                char v295 = v452;
                if ((unint64_t)v452 > 0x7F)
                {
                  if ((unint64_t)v452 >> 14)
                  {
                    int v296 = sub_1B0D1DC5C(v294, v452);
                    uint64_t v286 = (char *)(v435 + v276);
                  }
                  else
                  {
                    *(unsigned char *)(v293 + 4) = (v452 >> 7) | 0x80;
                    *(unsigned char *)(v293 + 5) = v295 & 0x7F;
                    int v296 = 2;
                  }
                }
                else
                {
                  v294->i8[0] = v452;
                  int v296 = 1;
                }
                uint64_t v287 = v292;
                int v289 = v296 + 4;
                int v290 = 0;
                uint64_t v277 = v396;
              }
              else
              {
                v286 -= 4;
                if (v288 == 4)
                {
                  uint64_t v297 = *(void *)v281;
                  int v298 = (*(uint64_t (**)(uint64_t, char *))(v436 + 120))(v436, v286);
                  uint64_t v287 = v297;
                  uint64_t v277 = v396;
                  int v290 = (_DWORD *)(v435 + v276);
                  int v289 = v298;
                }
              }
            }
            else
            {
              *(_DWORD *)(*(void *)(v287 + 80) + 8) = *(_DWORD *)v286;
            }
            uint64_t v299 = 5;
            if (SHIDWORD(v282) <= v284) {
              uint64_t v299 = 6;
            }
            if ((int)v282 > v284) {
              uint64_t v299 = 4;
            }
            if (SHIDWORD(v279) > v284) {
              uint64_t v299 = 3;
            }
            if (SDWORD2(v279) > v284) {
              uint64_t v299 = 2;
            }
            if (SDWORD1(v279) > v284) {
              uint64_t v299 = 1;
            }
            if ((int)v279 > v284) {
              uint64_t v299 = 0;
            }
            unint64_t v300 = *((void *)&v443 + v299);
            if ((unint64_t)v286 < v300 && (unint64_t)&v286[v289] > v300) {
              break;
            }
            uint64_t v302 = sub_1B0CC16BC(v436, v283, v286, v289, v290, *(_DWORD *)(v287 + 4));
            uint64_t v3 = v431;
            if (v302)
            {
              uint64_t v11 = v302;
              goto LABEL_458;
            }
            v276 += v289;
            int v281 = (long long *)((char *)v281 + 8);
            --v278;
            int v222 = v283 + 1;
            if (!v278) {
              goto LABEL_385;
            }
          }
          int v350 = 85568;
LABEL_495:
          uint64_t v306 = sub_1B0D1045C(v350);
LABEL_496:
          uint64_t v11 = v306;
          uint64_t v1 = v408;
          goto LABEL_497;
        }
LABEL_385:
        int v303 = 1 - v434;
        int v304 = v403;
        if (1 - v434 >= v434)
        {
LABEL_433:
          unsigned int v451 = 0;
          if (v398 == 1
            && !*(_WORD *)(v436 + 24)
            && (uint64_t v341 = v461, *(_DWORD *)(v461 + 20) >= (int)*(unsigned __int8 *)(v436 + 9)))
          {
            unsigned int v451 = sub_1B0CD2158(v461, -1);
            sub_1B0CC9BA8(v341, v436, &v451);
            uint64_t v11 = v451;
            uint64_t v1 = v408;
            int v47 = v434;
            if (!v451) {
              uint64_t v11 = sub_1B0CD3AB8(*(void *)(v341 + 72), v341, *(unsigned int *)(v341 + 4));
            }
          }
          else
          {
            if (*(unsigned char *)(v440 + 33)) {
              BOOL v342 = v391 == 0;
            }
            else {
              BOOL v342 = 0;
            }
            int v343 = v390;
            if (!v342) {
              int v343 = 0;
            }
            uint64_t v1 = v408;
            int v47 = v434;
            if (v343 == 1)
            {
              uint64_t v344 = v434;
              long long v345 = (uint64_t *)&v461;
              do
              {
                uint64_t v346 = *v345++;
                sub_1B0CD24E8((_DWORD *)v440, bswap32(*(_DWORD *)(*(void *)(v346 + 80) + 8)), 5, *(_DWORD *)(v346 + 4), &v451);
                --v344;
              }
              while (v344);
              uint64_t v11 = v451;
            }
            else
            {
              uint64_t v11 = 0;
            }
          }
          if (v47 <= v403)
          {
            int v348 = &v465[v47 - 1];
            int v349 = v32;
            do
            {
              if (!v11) {
                uint64_t v11 = sub_1B0CD3AB8(*(void *)(*v348 + 72), *v348, *(unsigned int *)(*v348 + 4));
              }
              ++v348;
              --v349;
            }
            while (v47 != v349);
          }
          goto LABEL_87;
        }
        BOOL v400 = v438 == 0;
        int v393 = v441;
        int v389 = v459[0];
        uint64_t v418 = *((void *)&v442 + 1);
        uint64_t v305 = *((void *)&v441 + 1);
        uint64_t v397 = v442;
        while (2)
        {
          if (v303 >= 0) {
            uint64_t v309 = v303;
          }
          else {
            uint64_t v309 = -v303;
          }
          if (!*((unsigned char *)&v448 + v309))
          {
            if (v303 < 0)
            {
              uint64_t v310 = (int)v309 - 1;
              if ((signed int)v458[v310] >= v459[v310])
              {
LABEL_398:
                int v311 = v393;
                if ((int)v309 <= v304) {
                  int v311 = v458[v310] + v400;
                }
                int v312 = v459[v310] + v400;
                int v313 = v459[v309] - v312;
                goto LABEL_402;
              }
            }
            else
            {
              if (v303)
              {
                uint64_t v310 = (int)v309 - 1;
                goto LABEL_398;
              }
              int v312 = 0;
              int v311 = 0;
              int v313 = v389;
LABEL_402:
              uint64_t v314 = *((void *)&v461 + v309);
              uint64_t v413 = *(void *)(v314 + 80);
              uint64_t v405 = *(unsigned __int8 *)(v314 + 9);
              uint64_t v315 = *(void *)(v314 + 96);
              uint64_t v316 = *(unsigned __int16 *)(v314 + 24);
              int v317 = *(unsigned __int8 *)(v314 + 12);
              int v318 = v311 - v312;
              int v439 = v313;
              int v430 = v312;
              int v427 = v311;
              if (v311 >= v312)
              {
                int v320 = *(unsigned __int16 *)(v314 + 24);
              }
              else
              {
                int v319 = sub_1B0D1FCDC(v314, v311, v312 - v311, (uint64_t)&v441);
                int v320 = v316 - v319;
                if ((int)v316 < v319)
                {
                  int v350 = 84598;
                  goto LABEL_495;
                }
                memmove(*(void **)(v314 + 96), (const void *)(*(void *)(v314 + 96) + 2 * v319), 2 * v316);
                int v313 = v439;
                int v312 = v430;
                int v311 = v427;
              }
              int v321 = v311 + v316 + v317;
              if (v321 > v313 + v312)
              {
                int v322 = sub_1B0D1FCDC(v314, v313 + v312, v321 - (v313 + v312), (uint64_t)&v441);
                int v311 = v427;
                v320 -= v322;
              }
              int v308 = v410;
              int v323 = v439;
              unint64_t v324 = v413 + __rev16(*(unsigned __int16 *)(v405 + v413 + 5));
              uint64_t v452 = v324;
              unint64_t v420 = v315 + 2 * v439;
              if (v324 < v420 || v324 > *(void *)(v314 + 88)) {
                goto LABEL_427;
              }
              int v325 = v430;
              uint64_t v402 = v314;
              if (v430 >= v311) {
                goto LABEL_415;
              }
              if (v318 >= v439) {
                int v318 = v439;
              }
              uint64_t v326 = *(_WORD **)(v314 + 96);
              memmove(&v326[v318], *(const void **)(v402 + 96), 2 * v320);
              unsigned int v327 = v326;
              uint64_t v314 = v402;
              int v328 = sub_1B0D1FED8(v402, v420, (void **)&v452, v327, v430, v318, (uint64_t)&v441);
              int v311 = v427;
              int v323 = v439;
              if (v328) {
                goto LABEL_427;
              }
              v320 += v318;
              int v325 = v430;
LABEL_415:
              unsigned __int8 v329 = *(unsigned char *)(v314 + 12);
              if (v329)
              {
                uint64_t v330 = 0;
                do
                {
                  int v331 = v311 + *(unsigned __int16 *)(v314 + 2 * v330 + 28);
                  int v332 = v331 - v325;
                  if (v331 - v325 >= 0 && v332 < v323)
                  {
                    uint64_t v333 = *(void *)(v314 + 96) + (2 * v332);
                    if (v320 > v332) {
                      memmove((void *)(v333 + 2), (const void *)v333, 2 * (v320 - v332));
                    }
                    if (!*(_WORD *)(v418 + 2 * v331)) {
                      sub_1B0D1FC9C((uint64_t)&v441, v331);
                    }
                    int v334 = (_WORD *)v333;
                    uint64_t v314 = v402;
                    int v335 = sub_1B0D1FED8(v402, v420, (void **)&v452, v334, v331, 1, (uint64_t)&v441);
                    int v323 = v439;
                    int v311 = v427;
                    if (v335) {
                      goto LABEL_427;
                    }
                    ++v320;
                    unsigned __int8 v329 = *(unsigned char *)(v402 + 12);
                    int v325 = v430;
                  }
                }
                while (++v330 < (unint64_t)v329);
              }
              int v336 = sub_1B0D1FED8(v314, v420, (void **)&v452, (_WORD *)(*(void *)(v314 + 96) + 2 * v320), v320 + v325, v323 - v320, (uint64_t)&v441);
              int v323 = v439;
              if (v336)
              {
LABEL_427:
                if (v323 < 1)
                {
                  int v350 = 84672;
                  goto LABEL_495;
                }
                int v337 = (void *)(v397 + 8 * v430);
                int v338 = v323 + 1;
                unsigned int v339 = (_WORD *)(v418 + 2 * v430);
                do
                {
                  if (!*v339) {
                    *unsigned int v339 = (*(uint64_t (**)(uint64_t, void))(v305 + 120))(v305, *v337);
                  }
                  ++v337;
                  ++v339;
                  --v338;
                }
                while (v338 > 1);
                uint64_t v306 = sub_1B0D1FA40((uint64_t)&v441, v430, v439, v314);
                uint64_t v307 = v314;
                int v308 = v410;
                if (v306) {
                  goto LABEL_496;
                }
              }
              else
              {
                *(_WORD *)(v314 + 24) = v439;
                *(unsigned char *)(v314 + 12) = 0;
                uint64_t v340 = v405 + v413;
                *(unsigned char *)(v340 + 3) = BYTE1(v439);
                *(unsigned char *)(v340 + 4) = *(unsigned char *)(v314 + 24);
                *(_WORD *)(v405 + v413 + 5) = bswap32(v452 - v413) >> 16;
                uint64_t v307 = v314;
              }
              *((unsigned char *)&v448 + v309) = 1;
              *(_DWORD *)(v307 + 20) = v308 - *(_DWORD *)&v457[2 * v309];
              uint64_t v3 = v431;
              int v304 = v403;
            }
          }
          if (++v303 == v434) {
            goto LABEL_433;
          }
          continue;
        }
      }
    }
    uint64_t v11 = v242;
LABEL_497:
    uint64_t v3 = v431;
LABEL_498:
    int v47 = v434;
LABEL_87:
    uint64_t v48 = v442;
    if ((void)v442)
    {
      __int16 v49 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_182;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v48);
      --qword_1EB220150;
      off_1EB21C9E8(v48);
      uint64_t v48 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        __int16 v49 = &xmmword_1EB21CA50;
LABEL_182:
        (*v49)(v48);
      }
    }
LABEL_185:
    uint16x8_t v178 = &v464;
    do
    {
      if (*v178)
      {
        uint64_t v179 = *(void *)(*v178 + 112);
        if ((*(_WORD *)(v179 + 52) & 0x20) != 0)
        {
          uint64_t v180 = *(void *)(v179 + 40);
          --*(_DWORD *)(v180 + 152);
          *(void *)(v179 + 32) = *(void *)(v180 + 168);
          *(void *)(v180 + 168) = v179;
          (*(void (**)(void, void, void))(**(void **)(v180 + 72) + 144))(*(void *)(v180 + 72), *(void *)(v180 + 200) * (*(_DWORD *)(v179 + 48) - 1), *(void *)(v179 + 8));
        }
        else
        {
          sub_1B0D0E3E8(v179);
        }
      }
      ++v178;
      --v32;
    }
    while (v32);
    if (v47 >= 1)
    {
      uint64_t v181 = v47;
      unint64_t v182 = &v461;
      do
      {
        if (*(void *)v182)
        {
          uint64_t v183 = *(void *)(*(void *)v182 + 112);
          if ((*(_WORD *)(v183 + 52) & 0x20) != 0)
          {
            uint64_t v184 = *(void *)(v183 + 40);
            --*(_DWORD *)(v184 + 152);
            *(void *)(v183 + 32) = *(void *)(v184 + 168);
            *(void *)(v184 + 168) = v183;
            (*(void (**)(void, void, void))(**(void **)(v184 + 72) + 144))(*(void *)(v184 + 72), *(void *)(v184 + 200) * (*(_DWORD *)(v183 + 48) - 1), *(void *)(v183 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v183);
          }
        }
        unint64_t v182 = (long long *)((char *)v182 + 8);
        --v181;
      }
      while (v181);
    }
    unint64_t v2 = v407;
    if (v407) {
LABEL_199:
    }
      sub_1B0D10ED8(v2);
LABEL_200:
    unint64_t v2 = v435;
LABEL_201:
    *(unsigned char *)(v3 + 12) = 0;
    uint64_t v185 = *(void *)(v3 + 112);
    if ((*(_WORD *)(v185 + 52) & 0x20) != 0)
    {
      uint64_t v186 = *(void *)(v185 + 40);
      --*(_DWORD *)(v186 + 152);
      *(void *)(v185 + 32) = *(void *)(v186 + 168);
      *(void *)(v186 + 168) = v185;
      (*(void (**)(void, void, void))(**(void **)(v186 + 72) + 144))(*(void *)(v186 + 72), *(void *)(v186 + 200) * (*(_DWORD *)(v185 + 48) - 1), *(void *)(v185 + 8));
    }
    else
    {
      sub_1B0D0E3E8(v185);
    }
    char v4 = *(unsigned char *)(v1 + 84) - 1;
    *(unsigned char *)(v1 + 84) = v4;
    uint64_t v5 = *(void *)(v1 + 8 * v4 + 144);
LABEL_4:
    *(void *)(v1 + 136) = v5;
    uint64_t v3 = v5;
    if (v11) {
      goto LABEL_502;
    }
  }
  int v6 = *(unsigned __int8 *)(v1 + 84);
  if (*(unsigned char *)(v1 + 84)) {
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)(*(void *)(v1 + 32) + 16);
  if (v7)
  {
    while (v7 == v1 || *(unsigned char *)v7 || *(void *)(v7 + 136) != *(void *)(v1 + 136))
    {
      uint64_t v7 = *(void *)(v7 + 40);
      if (!v7) {
        goto LABEL_10;
      }
    }
    int v385 = 85800;
    goto LABEL_501;
  }
LABEL_10:
  *(void *)&long long v441 = 0;
  LODWORD(v452) = 0;
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 112);
  uint64_t v10 = *(_DWORD **)(v9 + 40);
  if ((*(_WORD *)(v9 + 52) & 4) != 0 && v10[8] >= *(_DWORD *)(v9 + 48))
  {
    if (v10[32])
    {
      uint64_t v11 = sub_1B0D0F4D4(v9);
      if (v11) {
        goto LABEL_505;
      }
    }
  }
  else
  {
    uint64_t v11 = v10[12];
    if (v11)
    {
LABEL_505:
      *(void *)(v1 + 152) = 0;
      goto LABEL_502;
    }
    if (v10[46] <= v10[50])
    {
      uint64_t v11 = sub_1B0CBD7E0(v9);
      if (v11) {
        goto LABEL_505;
      }
    }
    else
    {
      uint64_t v11 = sub_1B0D133D0(v9);
      if (v11) {
        goto LABEL_505;
      }
    }
  }
  LODWORD(v461) = sub_1B0CC64B8(v8, (uint64_t *)&v441, (int *)&v452, *(_DWORD *)(v3 + 4), 0);
  uint64_t v5 = v441;
  sub_1B0CC9BA8(v3, v441, &v461);
  if (*(unsigned char *)(v8 + 33)) {
    sub_1B0CD24E8((_DWORD *)v8, v452, 5, *(_DWORD *)(v3 + 4), &v461);
  }
  uint64_t v11 = v461;
  if (!v461)
  {
    memcpy((void *)(v5 + 28), (const void *)(v3 + 28), 2 * *(unsigned __int8 *)(v3 + 12));
    memcpy((void *)(v5 + 40), (const void *)(v3 + 40), 8 * *(unsigned __int8 *)(v3 + 12));
    *(unsigned char *)(v5 + 12) = *(unsigned char *)(v3 + 12);
    sub_1B0CC63D4(v3, **(unsigned char **)(v5 + 80) & 0xF7);
    *(_DWORD *)(*(unsigned __int8 *)(v3 + 9) + *(void *)(v3 + 80) + 8) = bswap32(v452);
    *(unsigned char *)(v1 + 84) = 1;
    *(_DWORD *)(v1 + 86) = 0;
    *(void *)(v1 + 144) = v3;
    *(void *)(v1 + 152) = v5;
    goto LABEL_4;
  }
  *(void *)(v1 + 152) = 0;
  if (v5)
  {
    uint64_t v387 = *(void *)(v5 + 112);
    if ((*(_WORD *)(v387 + 52) & 0x20) != 0)
    {
      uint64_t v388 = *(void *)(v387 + 40);
      --*(_DWORD *)(v388 + 152);
      *(void *)(v387 + 32) = *(void *)(v388 + 168);
      *(void *)(v388 + 168) = v387;
      (*(void (**)(void, void, void))(**(void **)(v388 + 72) + 144))(*(void *)(v388 + 72), *(void *)(v388 + 200) * (*(_DWORD *)(v387 + 48) - 1), *(void *)(v387 + 8));
    }
    else
    {
      sub_1B0D0E3E8(v387);
    }
  }
LABEL_502:
  if (v2) {
    sub_1B0D10ED8(v2);
  }
  return v11;
}

uint64_t sub_1B0CC0498(unsigned __int8 *a1, uint64_t a2, char a3, int a4)
{
  int v118 = a4;
  unsigned int v119 = 0;
  uint64_t v8 = *((void *)a1 + 1);
  unsigned __int8 v9 = a1[1];
  if ((v9 & 0x20) != 0)
  {
    uint64_t v10 = *(void *)(*(void *)(v8 + 8) + 16);
    if (v10)
    {
      int v11 = *((_DWORD *)a1 + 20);
      while ((unsigned __int8 *)v10 == a1 || v11 && *(_DWORD *)(v10 + 80) != v11)
      {
        uint64_t v10 = *(void *)(v10 + 40);
        if (!v10)
        {
          if (!a1) {
            goto LABEL_13;
          }
          goto LABEL_12;
        }
      }
      uint64_t v12 = sub_1B0D143DC((unsigned __int8 *)v10, v11, a1);
      unsigned int v119 = v12;
      if (v12) {
        return v12;
      }
      if (a4) {
        goto LABEL_14;
      }
    }
    else
    {
LABEL_12:
      a1[1] = v9 & 0xDF;
LABEL_13:
      unsigned int v119 = 0;
      if (a4)
      {
LABEL_14:
        if ((char)a1[84] < 0)
        {
          return sub_1B0D1045C(86133);
        }
      }
    }
  }
  if (*a1 >= 3u)
  {
    uint64_t v12 = sub_1B0CACD5C(a1);
    unsigned int v119 = v12;
    if ((v12 & 0xFFFFFFEF) != 0) {
      return v12;
    }
  }
  uint64_t v13 = *((void *)a1 + 16);
  if (v13)
  {
    if (a3 & 2 | a4)
    {
      if (a4) {
        goto LABEL_50;
      }
    }
    else
    {
      __int16 v23 = *(_WORD *)(a2 + 32);
      if (v23)
      {
        *(void *)&long long v117 = 0;
        uint64_t v24 = *(void *)(a2 + 24);
        *(void *)&long long v115 = v13;
        *((void *)&v115 + 1) = v24;
        long long v116 = 0uLL;
        WORD6(v116) = v23;
        uint64_t v25 = sub_1B0D1AC94((uint64_t)a1, (uint64_t *)&v115, &v118);
      }
      else
      {
        uint64_t v25 = sub_1B0CC1388((uint64_t)a1, *(char **)a2, *(void *)(a2 + 8), (a3 & 8) != 0, &v118);
      }
      uint64_t v12 = v25;
      unsigned int v119 = v25;
      if (v25) {
        return v12;
      }
      if (v118) {
        goto LABEL_50;
      }
    }
    sub_1B0D146DC((uint64_t)a1);
    uint64_t v14 = *((void *)a1 + 6);
    if (v14 == *(void *)(a2 + 8))
    {
      long long v116 = 0u;
      long long v117 = 0u;
      long long v115 = 0u;
      *(void *)&long long v116 = *(void *)a2;
      DWORD1(v117) = v14;
      uint64_t v15 = *((void *)a1 + 17);
      unsigned int v16 = (unsigned char *)*((void *)a1 + 7);
      uint64_t v17 = *((unsigned __int16 *)a1 + 34);
      if ((unint64_t)&v16[v17] <= *(void *)(v15 + 88)
        && (unint64_t)v16 >= *(void *)(v15 + 80) + (unint64_t)*(unsigned __int16 *)(v15 + 18))
      {
        if (v14 == v17) {
          return sub_1B0D1F2D4(v15, v16, (uint64_t)&v115, 0, v14);
        }
        else {
          return sub_1B0D1F47C((uint64_t)a1, (uint64_t)&v115);
        }
      }
      int v18 = 86052;
      return sub_1B0D1045C(v18);
    }
  }
  else
  {
    if (*(unsigned char *)(v8 + 19))
    {
      int v19 = *((_DWORD *)a1 + 20);
      uint64_t v20 = *(void *)(a2 + 8);
      *(unsigned char *)(v8 + 19) = 0;
      for (uint64_t i = *(void *)(*(void *)(v8 + 8) + 16); i; uint64_t i = *(void *)(i + 40))
      {
        if ((*(unsigned char *)(i + 1) & 0x10) != 0)
        {
          *(unsigned char *)(v8 + 19) = 1;
          if (*(_DWORD *)(i + 80) == v19 && *(void *)(i + 48) == v20) {
            *(unsigned char *)uint64_t i = 1;
          }
        }
      }
    }
    if ((a1[1] & 2) != 0 && *(void *)(a2 + 8) == *((void *)a1 + 6))
    {
      if (*((_WORD *)a1 + 35) && *((_DWORD *)a1 + 16) == *(_DWORD *)(a2 + 40) + *(_DWORD *)(a2 + 36))
      {
        return sub_1B0D1F164((uint64_t)a1, a2);
      }
    }
    else if (!a4)
    {
      uint64_t v12 = sub_1B0D1AA30((uint64_t)a1, *(void *)(a2 + 8), (a3 & 8) != 0, &v118);
      unsigned int v119 = v12;
      if (v12) {
        return v12;
      }
    }
  }
LABEL_50:
  uint64_t v26 = *((void *)a1 + 17);
  if ((*(_DWORD *)(v26 + 20) & 0x80000000) != 0)
  {
    if (*a1 >= 2u)
    {
      int v18 = 86256;
      return sub_1B0D1045C(v18);
    }
    uint64_t v12 = sub_1B0D1F1CC(*((void *)a1 + 17));
    unsigned int v119 = v12;
    if (v12) {
      return v12;
    }
  }
  uint64_t v27 = *(void *)(v8 + 8);
  signed int v28 = *(_DWORD **)(v27 + 136);
  if (a3 < 0)
  {
    unsigned int v119 = 0;
    if (*(int *)(v27 + 144) <= 4) {
      unsigned int v36 = 4;
    }
    else {
      unsigned int v36 = *(_DWORD *)(v27 + 144);
    }
    int v114 = v36;
    if (*(unsigned char *)(v27 + 33) && v36 > *(unsigned __int16 *)(v26 + 14))
    {
      long long v115 = 0uLL;
      *(void *)&long long v116 = 0;
      (*(void (**)(uint64_t, _DWORD *, long long *))(v26 + 128))(v26, v28, &v115);
      uint64_t v37 = v28;
      if (v116 != WORD2(v116))
      {
        sub_1B0CD24E8(*(_DWORD **)(v8 + 8), bswap32(*(_DWORD *)((char *)v28 + v36 - 4)), 3, *(_DWORD *)(v26 + 4), &v119);
        uint64_t v12 = v119;
        if (v119) {
          return v12;
        }
      }
      signed int v28 = v37;
    }
LABEL_135:
    uint64_t v69 = *((unsigned __int16 *)a1 + 43);
    *((_WORD *)a1 + 35) = 0;
    if (v118)
    {
      uint64_t v70 = v28;
      int v71 = v114;
      if (v118 < 0 && *(_WORD *)(v26 + 24))
      {
        *((_WORD *)a1 + 43) = v69 + 1;
        LODWORD(v69) = (unsigned __int16)(v69 + 1);
        a1[1] &= ~2u;
      }
      goto LABEL_139;
    }
    long long v115 = 0uLL;
    *(void *)&long long v116 = 0;
    if (v69 >= *(unsigned __int16 *)(v26 + 24))
    {
      int v18 = 86295;
      return sub_1B0D1045C(v18);
    }
    uint64_t v70 = v28;
    uint64_t v74 = *(void *)(v26 + 112);
    uint64_t v75 = *(_DWORD **)(v74 + 40);
    if ((*(_WORD *)(v74 + 52) & 4) != 0 && v75[8] >= *(_DWORD *)(v74 + 48))
    {
      if (!v75[32])
      {
LABEL_176:
        int v93 = (_DWORD *)(*(void *)(v26 + 80)
                       + ((*(unsigned __int8 *)(*(void *)(v26 + 96) + 2 * v69 + 1) | (*(unsigned __int8 *)(*(void *)(v26 + 96) + 2 * v69) << 8)) & (unint64_t)*(unsigned __int16 *)(v26 + 26)));
        if (!*(unsigned char *)(v26 + 8)) {
          *uint64_t v70 = *v93;
        }
        (*(void (**)(uint64_t, _DWORD *, long long *))(v26 + 128))(v26, v93, &v115);
        if (v116 == WORD2(v116)) {
          unsigned int v94 = 0;
        }
        else {
          unsigned int v94 = sub_1B0D1E344(v26, (uint64_t)v93, (uint64_t)&v115);
        }
        unsigned int v119 = v94;
        a1[1] &= ~4u;
        if (v114 == WORD3(v116)
          && v116 == WORD2(v116)
          && (!*(unsigned char *)(*(void *)(v8 + 8) + 33) || v114 < *(unsigned __int16 *)(v26 + 16)))
        {
          if ((unint64_t)v93 >= *(void *)(v26 + 80) + (unint64_t)*(unsigned __int8 *)(v26 + 9) + 10)
          {
            if ((unint64_t)v93 + v114 <= *(void *)(v26 + 88))
            {
              memcpy(v93, v70, v114);
              return 0;
            }
            int v18 = 86325;
          }
          else
          {
            int v18 = 86322;
          }
          return sub_1B0D1045C(v18);
        }
        sub_1B0CBDC3C(v26, v69, WORD3(v116), &v119);
        uint64_t v12 = v119;
        int v71 = v114;
        if (v119) {
          return v12;
        }
LABEL_139:
        int v72 = v71 + 2;
        if (v71 + 2 > *(_DWORD *)(v26 + 20))
        {
          uint64_t v12 = 0;
          uint64_t v73 = *(unsigned __int8 *)(v26 + 12);
          *(unsigned char *)(v26 + 12) = v73 + 1;
          *(void *)(v26 + 8 * v73 + 40) = v70;
          *(_WORD *)(v26 + 2 * v73 + 28) = v69;
LABEL_213:
          if (!*(unsigned char *)(v26 + 12)) {
            return v12;
          }
          a1[1] &= ~2u;
          uint64_t v101 = sub_1B0CBDD6C((uint64_t)a1);
          uint64_t v12 = v101;
          *(unsigned char *)(*((void *)a1 + 17) + 12) = 0;
          *a1 = 1;
          if ((a3 & 2) == 0 || v101) {
            return v12;
          }
          sub_1B0D144AC((uint64_t)a1);
          if (*((void *)a1 + 16))
          {
            uint64_t v102 = (void *)sub_1B0C7FC94(*(void *)(a2 + 8));
            *((void *)a1 + 3) = v102;
            if (!v102)
            {
              uint64_t v12 = 7;
              goto LABEL_221;
            }
            memcpy(v102, *(const void **)a2, *(void *)(a2 + 8));
          }
          uint64_t v12 = 0;
LABEL_221:
          *a1 = 3;
          *((void *)a1 + 9) = *(void *)(a2 + 8);
          return v12;
        }
        uint64_t v77 = *(void *)(v26 + 112);
        int8x16_t v78 = *(_DWORD **)(v77 + 40);
        if ((*(_WORD *)(v77 + 52) & 4) != 0 && v78[8] >= *(_DWORD *)(v77 + 48))
        {
          if (!v78[32]) {
            goto LABEL_160;
          }
          uint64_t v79 = sub_1B0D0F4D4(v77);
        }
        else
        {
          uint64_t v12 = v78[12];
          if (v12) {
            goto LABEL_213;
          }
          if (v78[46] <= v78[50]) {
            uint64_t v79 = sub_1B0CBD7E0(v77);
          }
          else {
            uint64_t v79 = sub_1B0D133D0(v77);
          }
        }
        uint64_t v12 = v79;
        if (v79) {
          goto LABEL_213;
        }
LABEL_160:
        char v111 = a3;
        uint64_t v80 = 78662;
        uint64_t v81 = *(void *)(v26 + 80);
        uint64_t v82 = *(unsigned __int8 *)(v26 + 9);
        LODWORD(v115) = 0;
        int v83 = *(unsigned __int16 *)(v26 + 18) + 2 * *(unsigned __int16 *)(v26 + 24);
        uint64_t v84 = v26;
        int8x8_t v85 = (unsigned __int16 *)(v82 + v81 + 5);
        int v86 = __rev16(*v85);
        if (v83 <= v86)
        {
          uint64_t v87 = v84;
          if (v86 <= *(_DWORD *)(*(void *)(v84 + 72) + 56)) {
            goto LABEL_168;
          }
          uint64_t v80 = 78665;
        }
        else
        {
          uint64_t v87 = v84;
          if (!v86 && *(_DWORD *)(*(void *)(v84 + 72) + 56) == 0x10000)
          {
            int v86 = 0x10000;
LABEL_168:
            uint64_t v113 = v81;
            uint64_t v88 = v82 + v81;
            if (!*(unsigned char *)(v88 + 2) && !*(unsigned char *)(v88 + 1) || v83 + 2 > v86) {
              goto LABEL_190;
            }
            int8x8_t v89 = sub_1B0D1F920(v87, v114, &v115);
            if (v89)
            {
              unint64_t v90 = (unint64_t)v89 - v113;
              if (v83 >= (int)v89 - (int)v113)
              {
                uint64_t v26 = v87;
                uint64_t v12 = sub_1B0D11B5C(78682, v87);
LABEL_212:
                a3 = v111;
                goto LABEL_213;
              }
              unint64_t v91 = v90 >> 8;
              uint64_t v26 = v87;
              int v92 = v114;
LABEL_197:
              *(_DWORD *)(v26 + 20) -= (unsigned __int16)v72;
              memcpy((void *)(v113 + (int)v90), v70, v92);
              uint64_t v96 = (unsigned char *)(*(void *)(v26 + 96) + 2 * v69);
              memmove(v96 + 2, v96, 2 * (*(unsigned __int16 *)(v26 + 24) - (int)v69));
              unsigned char *v96 = v91;
              v96[1] = v90;
              ++*(_WORD *)(v26 + 24);
              uint64_t v97 = *(unsigned __int8 *)(v26 + 9) + v113;
              __int16 v98 = (*(unsigned char *)(v97 + 4))++ + 1;
              if ((v98 & 0x100) != 0) {
                ++*(unsigned char *)(*(unsigned __int8 *)(v26 + 9) + v113 + 3);
              }
              if (*(unsigned char *)(*(void *)(v26 + 72) + 33)
                && (unsigned int v121 = 0,
                    long long v115 = 0uLL,
                    *(void *)&long long v116 = 0,
                    (*(void (**)(uint64_t, _DWORD *, long long *))(v26 + 128))(v26, v70, &v115),
                    v116 > WORD2(v116)))
              {
                unint64_t v99 = *(void *)(v26 + 88);
                if (v99 <= (unint64_t)v70 || (unint64_t)v70 + WORD2(v116) <= v99)
                {
                  sub_1B0CD24E8(*(_DWORD **)(v26 + 72), bswap32(*(_DWORD *)((char *)v70 + WORD3(v116) - 4)), 3, *(_DWORD *)(v26 + 4), &v121);
                  uint64_t v12 = v121;
                }
                else
                {
                  uint64_t v12 = sub_1B0D1045C(78404);
                }
              }
              else
              {
                uint64_t v12 = 0;
              }
              goto LABEL_212;
            }
            uint64_t v12 = v115;
            if (!v115)
            {
LABEL_190:
              if (v83 + v72 <= v86)
              {
LABEL_196:
                int v92 = v114;
                LODWORD(v90) = v86 - v114;
                LODWORD(v91) = v90 >> 8;
                *int8x8_t v85 = bswap32(v90) >> 16;
                uint64_t v26 = v87;
                goto LABEL_197;
              }
              if (*(_DWORD *)(v87 + 20) - v72 >= 4) {
                int v95 = 4;
              }
              else {
                int v95 = *(_DWORD *)(v87 + 20) - v72;
              }
              uint64_t v12 = sub_1B0CD2158(v87, v95);
              if (!v12)
              {
                int v86 = (unsigned __int16)(_byteswap_ushort(*v85) - 1) + 1;
                goto LABEL_196;
              }
            }
LABEL_167:
            a3 = v111;
            uint64_t v26 = v87;
            goto LABEL_213;
          }
        }
        uint64_t v12 = sub_1B0D11B5C(v80, v87);
        goto LABEL_167;
      }
      uint64_t v76 = sub_1B0D0F4D4(v74);
    }
    else
    {
      uint64_t v12 = v75[12];
      if (v12) {
        return v12;
      }
      if (v75[46] <= v75[50]) {
        uint64_t v76 = sub_1B0CBD7E0(v74);
      }
      else {
        uint64_t v76 = sub_1B0D133D0(v74);
      }
    }
    uint64_t v12 = v76;
    if (v76) {
      return v12;
    }
    goto LABEL_176;
  }
  char v110 = a3;
  unsigned int v121 = 0;
  uint64_t v29 = v26;
  uint64_t v30 = *(unsigned __int8 *)(v26 + 10);
  uint64_t v112 = v29;
  if (*(unsigned char *)(v29 + 1))
  {
    uint64_t v32 = *(int *)(a2 + 36);
    uint64_t v31 = *(int *)(a2 + 40);
    unint64_t v33 = v31 + v32;
    uint64_t v34 = *(char **)(a2 + 16);
    if ((v31 + v32) > 0x7F)
    {
      int v40 = (int8x8_t *)((char *)v28 + v30);
      if (v33 >> 14)
      {
        int v35 = sub_1B0D1DC5C(v40, v33);
      }
      else
      {
        v40->i8[0] = (v33 >> 7) | 0x80;
        v40->i8[1] = v33 & 0x7F;
        int v35 = 2;
      }
    }
    else
    {
      *((unsigned char *)v28 + v30) = v33;
      int v35 = 1;
    }
    uint64_t v42 = (v35 + v30);
    unsigned int v43 = (int8x8_t *)((char *)v28 + v42);
    unint64_t v44 = *(void *)(a2 + 8);
    if (v44 > 0x7F)
    {
      uint64_t v26 = v112;
      if (v44 >> 14)
      {
        int v45 = sub_1B0D1DC5C(v43, v44) + v42;
      }
      else
      {
        v43->i8[0] = (v44 >> 7) | 0x80;
        v43->i8[1] = v44 & 0x7F;
        int v45 = v42 + 2;
      }
    }
    else
    {
      v43->i8[0] = v44;
      uint64_t v26 = v112;
      int v45 = v42 + 1;
    }
  }
  else
  {
    uint64_t v34 = *(char **)a2;
    uint64_t v38 = *(void *)(a2 + 8);
    LODWORD(v33) = v38;
    if (v38 > 0x7F)
    {
      int v41 = (int8x8_t *)((char *)v28 + v30);
      if (v38 >> 7)
      {
        if ((unint64_t)v38 >> 14)
        {
          int v39 = sub_1B0D1DC5C(v41, (int)v38);
        }
        else
        {
          v41->i8[0] = (v38 >> 7) | 0x80;
          v41->i8[1] = v38 & 0x7F;
          int v39 = 2;
        }
      }
      else
      {
        v41->i8[0] = v38;
        int v39 = 1;
      }
    }
    else
    {
      *((unsigned char *)v28 + v30) = v38;
      int v39 = 1;
    }
    int v45 = v39 + v30;
    LODWORD(v32) = v33;
    uint64_t v26 = v112;
  }
  int v46 = v28;
  int v47 = (char *)v28 + v45;
  int v48 = *(unsigned __int16 *)(v26 + 14);
  if ((int)v33 <= v48)
  {
    int v66 = v45 + v33;
    if (v66 <= 4) {
      int v66 = 4;
    }
    int v114 = v66;
    memcpy(v47, v34, (int)v32);
    bzero(&v47[(int)v32], (int)v33 - (int)v32);
    signed int v28 = v46;
    goto LABEL_134;
  }
  unint64_t v106 = v46;
  uint64_t v107 = a2;
  int v49 = *(unsigned __int16 *)(v26 + 16);
  uint64_t v50 = *(void *)(v26 + 72);
  if ((int)(((int)v33 - v49) % (*(_DWORD *)(v50 + 56) - 4) + v49) <= v48) {
    int v51 = ((int)v33 - v49) % (*(_DWORD *)(v50 + 56) - 4) + v49;
  }
  else {
    int v51 = *(unsigned __int16 *)(v26 + 16);
  }
  uint64_t v52 = v45 + (uint64_t)v51;
  int v114 = v52 + 4;
  unint64_t v108 = (_DWORD *)((char *)v46 + v52);
  uint64_t v109 = 0;
  unsigned int v120 = 0;
  while (1)
  {
    do
    {
      if ((int)v33 >= v51) {
        int v53 = v51;
      }
      else {
        int v53 = v33;
      }
      if ((int)v32 >= v53)
      {
        memcpy(v47, v34, v53);
      }
      else if ((int)v32 < 1)
      {
        bzero(v47, v53);
      }
      else
      {
        memcpy(v47, v34, v32);
        int v53 = v32;
      }
      LODWORD(v33) = v33 - v53;
      if ((int)v33 < 1)
      {
        if (v109)
        {
          uint64_t v67 = *(void *)(v109 + 112);
          signed int v28 = v106;
          a2 = v107;
          a3 = v110;
          uint64_t v26 = v112;
          if ((*(_WORD *)(v67 + 52) & 0x20) != 0)
          {
            uint64_t v68 = *(void *)(v67 + 40);
            --*(_DWORD *)(v68 + 152);
            *(void *)(v67 + 32) = *(void *)(v68 + 168);
            *(void *)(v68 + 168) = v67;
            (*(void (**)(void, void, void))(**(void **)(v68 + 72) + 144))(*(void *)(v68 + 72), *(void *)(v68 + 200) * (*(_DWORD *)(v67 + 48) - 1), *(void *)(v67 + 8));
          }
          else
          {
            sub_1B0D0E3E8(v67);
          }
        }
        else
        {
          signed int v28 = v106;
          a2 = v107;
          a3 = v110;
          uint64_t v26 = v112;
        }
LABEL_134:
        unsigned int v119 = 0;
        goto LABEL_135;
      }
      v47 += v53;
      v34 += v53;
      LODWORD(v32) = v32 - v53;
      v51 -= v53;
    }
    while (v51);
    *(void *)&long long v115 = 0;
    int v54 = v120;
    unsigned int v55 = v120;
    if (*(unsigned char *)(v50 + 33))
    {
      unsigned int v56 = v120;
      while (1)
      {
        while (1)
        {
          unsigned int v57 = v56++;
          if (v56 < 2) {
            break;
          }
          unsigned int v58 = (v57 - 1) / (*(_DWORD *)(v50 + 56) / 5u + 1) * (*(_DWORD *)(v50 + 56) / 5u + 1);
          if (v58 + 1 == dword_1E9B51ED0 / *(_DWORD *)(v50 + 52)) {
            int v59 = 3;
          }
          else {
            int v59 = 2;
          }
          if (v56 != v59 + v58) {
            goto LABEL_110;
          }
        }
        if (v56)
        {
LABEL_110:
          if (v57 != dword_1E9B51ED0 / *(_DWORD *)(v50 + 52))
          {
            unsigned int v55 = v57 + 1;
            unsigned int v120 = v57 + 1;
            break;
          }
        }
      }
    }
    uint64_t v60 = sub_1B0CC64B8(v50, (uint64_t *)&v115, (int *)&v120, v55, 0);
    uint64_t v12 = v60;
    unsigned int v121 = v60;
    if (*(unsigned char *)(v50 + 33))
    {
      if (!v60) {
        break;
      }
    }
    if (v60) {
      goto LABEL_225;
    }
    unsigned int v61 = v120;
LABEL_121:
    *unint64_t v108 = bswap32(v61);
    if (v109)
    {
      uint64_t v63 = *(void *)(v109 + 112);
      if ((*(_WORD *)(v63 + 52) & 0x20) != 0)
      {
        uint64_t v64 = *(void *)(v63 + 40);
        --*(_DWORD *)(v64 + 152);
        *(void *)(v63 + 32) = *(void *)(v64 + 168);
        *(void *)(v64 + 168) = v63;
        (*(void (**)(void, void, void))(**(void **)(v64 + 72) + 144))(*(void *)(v64 + 72), *(void *)(v64 + 200) * (*(_DWORD *)(v63 + 48) - 1), *(void *)(v63 + 8));
      }
      else
      {
        sub_1B0D0E3E8(v63);
      }
    }
    uint64_t v65 = v115;
    unint64_t v108 = *(_DWORD **)(v115 + 80);
    uint64_t v109 = v115;
    *unint64_t v108 = 0;
    int v47 = (char *)(*(void *)(v65 + 80) + 4);
    int v51 = *(_DWORD *)(v50 + 56) - 4;
  }
  unsigned int v61 = v120;
  if (v54) {
    int v62 = 4;
  }
  else {
    int v62 = 3;
  }
  sub_1B0CD24E8((_DWORD *)v50, v120, v62, v54, &v121);
  uint64_t v12 = v121;
  if (!v121) {
    goto LABEL_121;
  }
  if ((void)v115)
  {
    uint64_t v100 = *(void *)(v115 + 112);
    if ((*(_WORD *)(v100 + 52) & 0x20) != 0)
    {
      uint64_t v103 = *(void *)(v100 + 40);
      --*(_DWORD *)(v103 + 152);
      *(void *)(v100 + 32) = *(void *)(v103 + 168);
      *(void *)(v103 + 168) = v100;
      (*(void (**)(void, void, void))(**(void **)(v103 + 72) + 144))(*(void *)(v103 + 72), *(void *)(v103 + 200) * (*(_DWORD *)(v100 + 48) - 1), *(void *)(v100 + 8));
    }
    else
    {
      sub_1B0D0E3E8(v100);
    }
  }
LABEL_225:
  if (v109)
  {
    uint64_t v104 = *(void *)(v109 + 112);
    if ((*(_WORD *)(v104 + 52) & 0x20) != 0)
    {
      uint64_t v105 = *(void *)(v104 + 40);
      --*(_DWORD *)(v105 + 152);
      *(void *)(v104 + 32) = *(void *)(v105 + 168);
      *(void *)(v105 + 168) = v104;
      (*(void (**)(void, void, void))(**(void **)(v105 + 72) + 144))(*(void *)(v105 + 72), *(void *)(v105 + 200) * (*(_DWORD *)(v104 + 48) - 1), *(void *)(v104 + 8));
    }
    else
    {
      sub_1B0D0E3E8(v104);
    }
  }
  return v12;
}

uint64_t sub_1B0CC1388(uint64_t a1, char *a2, int64_t a3, char a4, int *a5)
{
  unsigned int v6 = a3;
  if (a2)
  {
    uint64_t v9 = *(void *)(a1 + 128);
    unint64_t v10 = (unint64_t)*(unsigned __int16 *)(v9 + 6) << 6;
    uint64_t v11 = *(void *)(v9 + 16);
    if (v11)
    {
      uint64_t v12 = sub_1B0D05DC0(v11, v10 + 104);
      if (v12) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v12 = sub_1B0C7FC94(v10 + 104);
      if (v12)
      {
LABEL_4:
        *(void *)uint64_t v12 = v9;
        *(void *)(v12 + 8) = v12 + 40;
        *(_WORD *)(v12 + 28) = *(_WORD *)(v9 + 6) + 1;
        sub_1B0CC14AC(v9, v6, a2, v12);
        if (*(_WORD *)(v12 + 28) && *(unsigned __int16 *)(v12 + 28) <= *(unsigned __int16 *)(v9 + 8)) {
          uint64_t v13 = sub_1B0D1AC94(a1, (uint64_t *)v12, a5);
        }
        else {
          uint64_t v13 = sub_1B0D1045C(77695);
        }
        uint64_t v15 = v13;
        sub_1B0D05C10(*(void **)(*(void *)(a1 + 128) + 16), (void *)v12);
        return v15;
      }
    }
    return 7;
  }

  return sub_1B0D1AA30(a1, a3, a4, a5);
}

void sub_1B0CC14AC(uint64_t a1, unsigned int a2, char *a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 8);
  *(unsigned char *)(a4 + 30) = 0;
  unsigned int v8 = *a3;
  if ((v8 & 0x80) != 0)
  {
    int v10 = a3[1];
    if (a3[1] < 0)
    {
      int v11 = a3[2];
      if (v11 < 0)
      {
        unint64_t v21 = 0;
        unsigned int v9 = sub_1B0CAD43C(a3, &v21);
        if (HIDWORD(v21)) {
          unsigned int v8 = -1;
        }
        else {
          unsigned int v8 = v21;
        }
      }
      else
      {
        unsigned int v8 = v11 & 0x7F | (v8 << 14) & 0x1FC07F | ((v10 & 0x7F) << 7);
        unsigned int v9 = 3;
      }
    }
    else
    {
      unsigned int v8 = ((v8 & 0x7F) << 7) | v10;
      unsigned int v9 = 2;
    }
  }
  else
  {
    unsigned int v9 = 1;
  }
  unsigned int v12 = 0;
  unsigned int v13 = v8;
  do
  {
    if (v9 >= v8 || v13 > a2) {
      break;
    }
    uint64_t v15 = &a3[v9];
    unsigned int v16 = *v15;
    if ((v16 & 0x80) != 0)
    {
      int v18 = v15[1];
      if (v15[1] < 0)
      {
        int v19 = v15[2];
        if (v19 < 0)
        {
          unint64_t v21 = 0;
          int v17 = sub_1B0CAD43C(v15, &v21);
          unsigned int v16 = HIDWORD(v21) ? -1 : v21;
        }
        else
        {
          unsigned int v16 = v19 & 0x7F | (v16 << 14) & 0x1FC07F | ((v18 & 0x7F) << 7);
          int v17 = 3;
        }
      }
      else
      {
        unsigned int v16 = ((v16 & 0x7F) << 7) | v18;
        int v17 = 2;
      }
    }
    else
    {
      int v17 = 1;
    }
    *(unsigned char *)(v7 + 22) = *(unsigned char *)(a1 + 4);
    *(void *)(v7 + 24) = *(void *)(a1 + 16);
    *(_DWORD *)(v7 + 32) = 0;
    *(void *)(v7 + 8) = 0;
    sub_1B0CAD5D4(&a3[v13], v16, v7);
    unsigned int v14 = v16 < 0x80 ? byte_1B0DE2184[v16] : (v16 - 12) >> 1;
    v9 += v17;
    v13 += v14;
    v7 += 64;
    ++v12;
  }
  while (v12 < *(unsigned __int16 *)(a4 + 28));
  if (v13 > a2 && v12)
  {
    if ((*(_WORD *)(v7 - 44) & 0x9000) != 0) {
      sub_1B0D18138((int *)(v7 - 64));
    }
    else {
      *(_WORD *)(v7 - 44) = 1;
    }
  }
  *(_WORD *)(a4 + 28) = v12;
}

uint64_t sub_1B0CC16BC(uint64_t a1, int a2, char *__src, int a4, _DWORD *__dst, unsigned int a6)
{
  uint64_t v7 = __dst;
  if (*(unsigned char *)(a1 + 12) || (int v12 = a4 + 2, a4 + 2 > *(_DWORD *)(a1 + 20)))
  {
    if (__dst) {
      memcpy(__dst, __src, a4);
    }
    else {
      uint64_t v7 = __src;
    }
    uint64_t result = 0;
    _DWORD *v7 = bswap32(a6);
    uint64_t v14 = *(unsigned __int8 *)(a1 + 12);
    *(unsigned char *)(a1 + 12) = v14 + 1;
    *(void *)(a1 + 8 * v14 + 40) = v7;
    *(_WORD *)(a1 + 2 * v14 + 28) = a2;
    return result;
  }
  uint64_t v15 = *(void *)(a1 + 112);
  unsigned int v16 = *(_DWORD **)(v15 + 40);
  if ((*(_WORD *)(v15 + 52) & 4) != 0 && v16[8] >= *(_DWORD *)(v15 + 48))
  {
    if (!v16[32]) {
      goto LABEL_17;
    }
    uint64_t result = sub_1B0D0F4D4(*(void *)(a1 + 112));
  }
  else
  {
    uint64_t result = v16[12];
    if (result) {
      return result;
    }
    uint64_t v17 = *(void *)(a1 + 112);
    if (v16[46] <= v16[50]) {
      uint64_t result = sub_1B0CBD7E0(v17);
    }
    else {
      uint64_t result = sub_1B0D133D0(v17);
    }
  }
  if (result) {
    return result;
  }
LABEL_17:
  uint64_t v18 = 78662;
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(unsigned __int8 *)(a1 + 9);
  unsigned int v39 = 0;
  int v21 = *(unsigned __int16 *)(a1 + 18) + 2 * *(unsigned __int16 *)(a1 + 24);
  char v22 = (unsigned __int16 *)(v20 + v19 + 5);
  int v23 = __rev16(*v22);
  if (v21 > v23)
  {
    if (!v23 && *(_DWORD *)(*(void *)(a1 + 72) + 56) == 0x10000)
    {
      int v23 = 0x10000;
      goto LABEL_25;
    }
LABEL_23:
    uint64_t v24 = v18;
    return sub_1B0D11B5C(v24, a1);
  }
  if (v23 > *(_DWORD *)(*(void *)(a1 + 72) + 56))
  {
    uint64_t v18 = 78665;
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v25 = v20 + v19;
  if ((*(unsigned char *)(v25 + 2) || *(unsigned char *)(v25 + 1)) && v21 + 2 <= v23)
  {
    uint64_t v37 = v19;
    uint64_t v26 = sub_1B0D1F920(a1, a4, &v39);
    if (v26)
    {
      uint64_t v19 = v37;
      unint64_t v27 = (unint64_t)v26 - v37;
      if (v21 < (int)v26 - (int)v37)
      {
        unint64_t v28 = v27 >> 8;
        goto LABEL_39;
      }
      uint64_t v24 = 78682;
      return sub_1B0D11B5C(v24, a1);
    }
    uint64_t result = v39;
    uint64_t v19 = v37;
    if (v39) {
      return result;
    }
  }
  if (v12 + v21 > v23)
  {
    if (*(_DWORD *)(a1 + 20) - v12 >= 4) {
      int v29 = 4;
    }
    else {
      int v29 = *(_DWORD *)(a1 + 20) - v12;
    }
    uint64_t v30 = v19;
    uint64_t result = sub_1B0CD2158(a1, v29);
    if (result) {
      return result;
    }
    uint64_t v19 = v30;
    int v23 = (unsigned __int16)(_byteswap_ushort(*v22) - 1) + 1;
  }
  LODWORD(v27) = v23 - a4;
  LODWORD(v28) = v27 >> 8;
  *char v22 = bswap32(v27) >> 16;
LABEL_39:
  *(_DWORD *)(a1 + 20) -= (unsigned __int16)v12;
  uint64_t v31 = (_DWORD *)(v19 + (int)v27);
  size_t v32 = a4 - 4;
  uint64_t v33 = v19;
  memcpy(v31 + 1, __src + 4, v32);
  *uint64_t v31 = bswap32(a6);
  uint64_t v34 = (unsigned char *)(*(void *)(a1 + 96) + 2 * a2);
  memmove(v34 + 2, v34, 2 * (*(unsigned __int16 *)(a1 + 24) - a2));
  *uint64_t v34 = v28;
  v34[1] = v27;
  ++*(_WORD *)(a1 + 24);
  uint64_t v35 = *(unsigned __int8 *)(a1 + 9) + v33;
  __int16 v36 = (*(unsigned char *)(v35 + 4))++ + 1;
  if ((v36 & 0x100) != 0) {
    ++*(unsigned char *)(*(unsigned __int8 *)(a1 + 9) + v33 + 3);
  }
  if (!*(unsigned char *)(*(void *)(a1 + 72) + 33)) {
    return 0;
  }
  unsigned int v38 = 0;
  sub_1B0D157E0((_DWORD *)a1, a1, (unint64_t)__src, &v38);
  return v38;
}

uint64_t sub_1B0CC19D8(uint64_t a1, unsigned char *a2, int a3)
{
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if (!v3)
  {
    if (off_1EB21CB60 && off_1EB21CB60(400)) {
      return 10;
    }
    if (*(unsigned __int8 *)(a1 + 21) < 3u) {
      return 0;
    }
    if (*(unsigned char *)(a1 + 16))
    {
      if (!**(void **)(a1 + 72)) {
        goto LABEL_18;
      }
      uint64_t v7 = *(uint64_t **)(a1 + 336);
      LODWORD(v8) = *((_DWORD *)v7 + 8);
      if ((v8 & 0x80000000) != 0)
      {
        uint64_t v8 = -1024 * (int)v8 / (*((int *)v7 + 11) + (uint64_t)*((int *)v7 + 10));
        if (v8 >= 1000000000) {
          LODWORD(v8) = 1000000000;
        }
      }
      uint64_t v9 = *v7;
      if (*v7)
      {
        uint64_t v10 = 0;
        do
        {
          uint64_t v9 = *(void *)(v9 + 64);
          v10 += 100;
        }
        while (v9);
        if (!v8)
        {
LABEL_18:
          for (uint64_t i = *(void *)(a1 + 112); i; uint64_t i = *(void *)(i + 64))
            *(_DWORD *)(i + 24) = 1;
LABEL_39:
          if (!*(void *)(a1 + 344))
          {
            uint64_t v3 = 0;
            *(unsigned char *)(a1 + 21) = 5;
            return v3;
          }
          return 0;
        }
      }
      else
      {
        uint64_t v10 = 0;
        if (!v8) {
          goto LABEL_18;
        }
      }
      if ((int)(v10 / (int)v8) <= 24) {
        goto LABEL_18;
      }
    }
    if (*(void *)(a1 + 344))
    {
      uint64_t v18 = 0;
      uint64_t v12 = sub_1B0D13A30(*(uint64_t **)(a1 + 336));
      if (!v12)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t *, void))(a1 + 288))(a1, 1, &v18, 0);
        uint64_t v12 = v18;
        *(void *)(v18 + 32) = 0;
      }
      uint64_t v3 = sub_1B0D0F828(a1, v12, *(_DWORD *)(a1 + 32), 1);
      uint64_t v13 = v18;
      if (v18)
      {
        if ((*(_WORD *)(v18 + 52) & 0x20) != 0)
        {
          uint64_t v16 = *(void *)(v18 + 40);
          --*(_DWORD *)(v16 + 152);
          *(void *)(v13 + 32) = *(void *)(v16 + 168);
          *(void *)(v16 + 168) = v13;
          (*(void (**)(void, void, void))(**(void **)(v16 + 72) + 144))(*(void *)(v16 + 72), *(void *)(v16 + 200) * (*(_DWORD *)(v13 + 48) - 1), *(void *)(v13 + 8));
        }
        else
        {
          sub_1B0D0E3E8(v18);
        }
      }
      if (!v3) {
        sub_1B0D118A4(*(uint64_t **)(a1 + 336));
      }
      goto LABEL_38;
    }
    uint64_t v3 = sub_1B0D13CA8(a1);
    if (!v3)
    {
      uint64_t v3 = sub_1B0D13E14(a1, a2);
      if (!v3)
      {
        uint64_t v3 = sub_1B0CCAE84(a1, 0);
        if (!v3)
        {
          uint64_t v14 = sub_1B0D13A30(*(uint64_t **)(a1 + 336));
          uint64_t v3 = sub_1B0CCB118((void *)a1, v14);
          if (!v3)
          {
            sub_1B0D118A4(*(uint64_t **)(a1 + 336));
            unsigned int v15 = *(_DWORD *)(a1 + 32);
            if (v15 <= *(_DWORD *)(a1 + 40)
              || (uint64_t v3 = sub_1B0CDAF40(a1, v15 - (v15 == *(_DWORD *)(a1 + 192))), !v3))
            {
              if (a3) {
                goto LABEL_39;
              }
              uint64_t v3 = sub_1B0CE8C78(a1, (uint64_t)a2);
LABEL_38:
              if (v3) {
                return v3;
              }
              goto LABEL_39;
            }
          }
        }
      }
    }
  }
  return v3;
}

uint64_t sub_1B0CC1C5C(uint64_t result, int a2, int a3, unsigned int *a4, uint64_t a5)
{
  *(unsigned char *)a5 = HIBYTE(a2);
  *(unsigned char *)(a5 + 1) = BYTE2(a2);
  *(unsigned char *)(a5 + 2) = BYTE1(a2);
  *(unsigned char *)(a5 + 3) = a2;
  *(unsigned char *)(a5 + 4) = HIBYTE(a3);
  *(unsigned char *)(a5 + 5) = BYTE2(a3);
  *(unsigned char *)(a5 + 6) = BYTE1(a3);
  *(unsigned char *)(a5 + 7) = a3;
  if (*(_DWORD *)(result + 124))
  {
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
  }
  else
  {
    uint64_t v6 = result;
    *(void *)(a5 + 8) = *(void *)(result + 104);
    uint64_t v7 = (int *)(result + 96);
    int v8 = *(_DWORD *)(result + 96);
    int v9 = *(unsigned __int8 *)(result + 85);
    BOOL v10 = *(unsigned char *)(result + 85) == 0;
    int v11 = v7[1];
    int v12 = v11 + v8;
    unsigned int v13 = *(_DWORD *)a5;
    if (v9)
    {
      unsigned int v13 = bswap32(v13);
      unsigned int v14 = bswap32(*(_DWORD *)(a5 + 4));
    }
    else
    {
      unsigned int v14 = *(_DWORD *)(a5 + 4);
    }
    int v15 = v12 + v13;
    *(_DWORD *)(v6 + 96) = v15;
    *(_DWORD *)(v6 + 100) = v14 + v11 + v15;
    uint64_t result = sub_1B0D10334(v10, a4, *(_DWORD *)(v6 + 56), v7, v7);
    *(_DWORD *)(a5 + 16) = bswap32(*(_DWORD *)(v6 + 96));
    *(_DWORD *)(a5 + 20) = bswap32(*(_DWORD *)(v6 + 100));
  }
  return result;
}

uint64_t sub_1B0CC1D40(uint64_t a1, char *__buf, int a3, off_t a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(a1 + 160)
    || (v7 = a4, v8 = a3, v9 = __buf, (uint64_t v10 = *(void *)(a1 + 64)) != 0) && *(_DWORD *)(*(void *)v10 + 168))
  {
    sqlite3_log(27, "denying write to invalidated fd %d", *(_DWORD *)(a1 + 24));
    return 6922;
  }
  else
  {
    int v11 = sub_1B0D0751C(a1, a4, __buf, a3);
    BOOL v12 = v11 < v8;
    if (v11 < v8 && v11 >= 1)
    {
      do
      {
        v8 -= v11;
        v7 += v11;
        v9 += v11;
        int v11 = sub_1B0D0751C(a1, v7, v9, v8);
        BOOL v12 = v11 < v8;
      }
      while (v11 < v8 && v11 > 0);
    }
    if (v12)
    {
      if (*(_DWORD *)(a1 + 32) == 28)
      {
        unsigned int v14 = *(const char **)(a1 + 56);
        long long v19 = 0u;
        long long v20 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        *(_OWORD *)__strerrbuf = 0u;
        strerror_r(28, __strerrbuf, 0x4FuLL);
        int v15 = &byte_1B0DE9952;
        if (v14) {
          int v15 = v14;
        }
        uint64_t v5 = 13;
        sqlite3_log(13, "os_unix.c:%d: (%d) %s(%s) - %s", 44378, 28, "unixWrite", v15, __strerrbuf);
      }
      else
      {
        return 778;
      }
    }
    else
    {
      return 0;
    }
  }
  return v5;
}

uint64_t sub_1B0CC1ECC(uint64_t a1, char a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(a1 + 160) || (uint64_t v5 = *(void *)(a1 + 64)) != 0 && *(_DWORD *)(*(void *)v5 + 168))
  {
    sqlite3_log(27, "denying sync of invalidated fd %d", *(_DWORD *)(a1 + 24));
    return 6922;
  }
  else
  {
    if ((a2 & 0xF) == 3) {
      int v6 = 85;
    }
    else {
      int v6 = 0;
    }
    if ((*(unsigned char *)(a1 + 128) & 2) != 0) {
      int v7 = 51;
    }
    else {
      int v7 = v6;
    }
    int v8 = *(_DWORD *)(a1 + 24);
    if ((!v7 || fcntl(v8, v7, 0)) && fsync(v8))
    {
      *(_DWORD *)(a1 + 32) = *__error();
      int v9 = *(const char **)(a1 + 56);
      int v10 = *__error();
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v10, __strerrbuf, 0x4FuLL);
      int v11 = &byte_1B0DE9952;
      if (v9) {
        int v11 = v9;
      }
      uint64_t v3 = 1034;
      sqlite3_log(1034, "os_unix.c:%d: (%d) %s(%s) - %s", 44635, v10, "full_fsync", v11, __strerrbuf);
    }
    else if ((*(_WORD *)(a1 + 30) & 8) != 0)
    {
      int v15 = 0;
      if (!off_1EC526520(*(const char **)(a1 + 56), &v15))
      {
        fsync(v15);
        if ((v15 & 0x80000000) == 0)
        {
          if (off_1EC5263A0(v15))
          {
            BOOL v12 = *(const char **)(a1 + 56);
            int v13 = *__error();
            long long v19 = 0u;
            long long v20 = 0u;
            long long v17 = 0u;
            long long v18 = 0u;
            *(_OWORD *)__strerrbuf = 0u;
            strerror_r(v13, __strerrbuf, 0x4FuLL);
            unsigned int v14 = &byte_1B0DE9952;
            if (v12) {
              unsigned int v14 = v12;
            }
            sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 44655, v13, "close", v14, __strerrbuf);
          }
        }
      }
      uint64_t v3 = 0;
      *(_WORD *)(a1 + 30) &= ~8u;
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

unint64_t sub_1B0CC20F0(unint64_t result, unsigned int a2)
{
  if (*(_DWORD *)(result + 120) >= a2)
  {
    unint64_t v3 = result;
    unint64_t v4 = *(unsigned int *)(result + 32);
    if (v4)
    {
      for (unint64_t i = 0; i < v4; ++i)
      {
        unint64_t v6 = *(void *)(*(void *)(v3 + 40) + 8 * i);
        unint64_t v9 = v6;
        if (v6)
        {
          do
          {
            unsigned int v7 = *(_DWORD *)(v6 + 16);
            unint64_t v6 = *(void *)(v6 + 24);
            if (v7 >= a2) {
              uint64_t result = sub_1B0D78000((int *)v3, &v9);
            }
            unint64_t v9 = v6;
          }
          while (v6);
          unint64_t v4 = *(unsigned int *)(v3 + 32);
        }
      }
    }
    unsigned int v8 = a2 - 1;
    if (!a2) {
      unsigned int v8 = 0;
    }
    *(_DWORD *)(v3 + 120) = v8;
  }
  return result;
}

uint64_t sub_1B0CC2198(uint64_t a1, sqlite3 *db, char *zDb, int a4)
{
  if ((int)a1 <= a4)
  {
    if (off_1E9B52208) {
      off_1E9B52208(a1);
    }
    uint64_t v6 = sqlite3_wal_checkpoint_v2(db, zDb, 0, 0, 0);
    if (off_1E9B52210) {
      off_1E9B52210(v6);
    }
  }
  return 0;
}

void sub_1B0CC2204(uint64_t a1, unsigned __int8 **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v53 = 0;
  if (!a2 || !v8) {
    return;
  }
  uint64_t v9 = a4;
  int v13 = *(unsigned __int8 *)a2;
  uint64_t v14 = v13 ^ 1u;
  switch(*(unsigned char *)a2)
  {
    case 0x13:
      sub_1B0CCFCD4(a1, a2[2], a3, a4, a5, a6, a7, a8);
      goto LABEL_54;
    case 0x2B:
    case 0x2C:
      uint64_t v15 = sub_1B0D35154((unsigned __int8 *)a2);
      if ((unsigned __int8 **)v15 != a2)
      {
        uint64_t v20 = v15;
LABEL_43:
        sub_1B0CC2204(a1, v20);
        goto LABEL_54;
      }
      if (v13 == 44)
      {
        sub_1B0CC2204(a1, a2[2]);
        uint64_t v20 = (uint64_t)a2[3];
        goto LABEL_43;
      }
      uint64_t v52 = (*(_DWORD *)(a1 + 68) - 1);
      *(_DWORD *)(a1 + 68) = v52;
      sub_1B0CCFCD4(a1, a2[2], v52, v9 ^ 0x10, v16, v17, v18, v19);
      sub_1B0CC2204(a1, a2[3]);
      sub_1B0D31504(v8, v52);
      goto LABEL_54;
    case 0x2D:
    case 0xAB:
      if (v13 == 45) {
        uint64_t v14 = 52;
      }
      else {
        uint64_t v14 = 53;
      }
      uint64_t v9 = 128;
      goto LABEL_10;
    case 0x30:
      sub_1B0D31534((unsigned int *)a1, (uint64_t)a2, a3, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t))sub_1B0CC2204, a4, a6, a7, a8);
      goto LABEL_54;
    case 0x31:
      if (a4)
      {
        sub_1B0CC427C((void **)a1, (uint64_t)a2, a3, a3, a5, a6, a7, a8);
      }
      else
      {
        uint64_t v51 = (*(_DWORD *)(a1 + 68) - 1);
        *(_DWORD *)(a1 + 68) = v51;
        sub_1B0CC427C((void **)a1, (uint64_t)a2, a3, v51, a5, a6, a7, a8);
        sub_1B0D31504(v8, v51);
      }
      goto LABEL_54;
    case 0x32:
    case 0x33:
      uint64_t v29 = sub_1B0D30948(a1, a2[2], (_DWORD *)&v53 + 1);
      uint64_t v30 = v29;
      if (*(unsigned char *)(*(void *)v8 + 103)) {
        uint64_t v31 = &byte_1E9B52240;
      }
      else {
        uint64_t v31 = (char *)(*(void *)(v8 + 136) + 40 * *(int *)(v8 + 144) - 40);
      }
      if (*((_DWORD *)v31 + 3) == v29 && *v31 == 94) {
        *((_WORD *)v31 + 1) |= 0x80u;
      }
      int v45 = *(_DWORD *)(v8 + 144);
      if (*(_DWORD *)(v8 + 148) > v45)
      {
        *(_DWORD *)(v8 + 144) = v45 + 1;
        uint64_t v28 = *(void *)(v8 + 136) + 40 * v45;
        *(unsigned char *)uint64_t v28 = v13 ^ 1;
        *(_WORD *)(v28 + 2) = 0;
        *(_DWORD *)(v28 + 4) = v29;
        *(_DWORD *)(v28 + 8) = a3;
        *(unsigned char *)(v28 + 1) = 0;
        goto LABEL_50;
      }
      uint64_t v43 = v8;
      uint64_t v44 = v13 ^ 1u;
      goto LABEL_52;
    case 0x34:
    case 0x35:
    case 0x36:
    case 0x37:
    case 0x38:
    case 0x39:
LABEL_10:
      uint64_t v21 = a2[2];
      int v22 = *v21;
      if (v22 == 176) {
        int v22 = v21[2];
      }
      if (v22 == 138)
      {
        int v23 = (int **)(*((void *)v21 + 4) + 32);
      }
      else
      {
        if (v22 != 177)
        {
LABEL_17:
          uint64_t v24 = sub_1B0D30948(a1, v21, (_DWORD *)&v53 + 1);
          uint64_t v25 = sub_1B0D30948(a1, a2[3], &v53);
          sub_1B0CC26B4(a1, a2[2], a2[3], v14, v24, v25, a3, v9, (*((_DWORD *)a2 + 1) >> 10) & 1);
          goto LABEL_54;
        }
        int v23 = (int **)(v21 + 32);
      }
      if (**v23 <= 1) {
        goto LABEL_17;
      }
LABEL_18:
      int v26 = *((_DWORD *)a2 + 1);
      if ((v26 & 0x20000001) != 0x20000000)
      {
        if ((v26 & 0x10000001) == 0x10000000) {
          goto LABEL_54;
        }
        uint64_t v32 = sub_1B0D30948(a1, (unsigned __int8 *)a2, (_DWORD *)&v53 + 1);
        uint64_t v30 = v32;
        BOOL v33 = v9 != 0;
        int v34 = *(_DWORD *)(v8 + 144);
        if (*(_DWORD *)(v8 + 148) > v34)
        {
          *(_DWORD *)(v8 + 144) = v34 + 1;
          uint64_t v35 = *(void *)(v8 + 136) + 40 * v34;
          *(_DWORD *)uint64_t v35 = 17;
          *(_DWORD *)(v35 + 4) = v32;
          *(_DWORD *)(v35 + 8) = a3;
          *(_DWORD *)(v35 + 12) = v33;
          *(void *)(v35 + 24) = 0;
          *(void *)(v35 + 32) = 0;
          *(void *)(v35 + 16) = 0;
          goto LABEL_54;
        }
        uint64_t v43 = v8;
        uint64_t v44 = 17;
        uint64_t v46 = a3;
        goto LABEL_53;
      }
      int v27 = *(_DWORD *)(v8 + 144);
      if (*(_DWORD *)(v8 + 148) <= v27)
      {
        uint64_t v43 = v8;
        uint64_t v44 = 9;
        uint64_t v30 = 0;
LABEL_52:
        uint64_t v46 = a3;
        BOOL v33 = 0;
LABEL_53:
        sub_1B0D25510(v43, v44, v30, v46, v33, a6, a7, a8);
        goto LABEL_54;
      }
      *(_DWORD *)(v8 + 144) = v27 + 1;
      uint64_t v28 = *(void *)(v8 + 136) + 40 * v27;
      *(void *)uint64_t v28 = 9;
      *(_DWORD *)(v28 + 8) = a3;
LABEL_50:
      *(void *)(v28 + 12) = 0;
      *(void *)(v28 + 28) = 0;
      *(void *)(v28 + 20) = 0;
      *(_DWORD *)(v28 + 36) = 0;
LABEL_54:
      int v47 = HIDWORD(v53);
      if (HIDWORD(v53))
      {
        uint64_t v48 = *(unsigned __int8 *)(a1 + 31);
        if (v48 <= 7)
        {
          *(unsigned char *)(a1 + 31) = v48 + 1;
          *(_DWORD *)(a1 + 4 * v48 + 224) = v47;
        }
      }
      int v49 = v53;
      if (v53)
      {
        uint64_t v50 = *(unsigned __int8 *)(a1 + 31);
        if (v50 <= 7)
        {
          *(unsigned char *)(a1 + 31) = v50 + 1;
          *(_DWORD *)(a1 + 4 * v50 + 224) = v49;
        }
      }
      return;
    case 0xAF:
      int v36 = *((unsigned __int8 *)a2 + 2);
      uint64_t v37 = a2[3];
      while (1)
      {
        int v38 = *((_DWORD *)v37 + 1);
        if ((v38 & 0x82000) == 0) {
          break;
        }
        if ((v38 & 0x80000) != 0) {
          uint64_t v37 = *(unsigned __int8 **)(*((void *)v37 + 4) + 8);
        }
        else {
          uint64_t v37 = (unsigned __int8 *)*((void *)v37 + 2);
        }
      }
      BOOL v39 = v36 == 171;
      BOOL v40 = v36 != 171;
      int v41 = v39;
      uint64_t v42 = a2[2];
      if ((v41 ^ (*(unsigned char *)(*((void *)v37 + 1) + 4) != 0))) {
        sub_1B0CCFCD4(a1, v42, a3, (16 * v40), a5, a6, a7, a8);
      }
      else {
        sub_1B0CC2204(a1, v42);
      }
      goto LABEL_54;
    default:
      goto LABEL_18;
  }
}

uint64_t sub_1B0CC26B4(uint64_t result, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  if (*(_DWORD *)(result + 48)) {
    return result;
  }
  char v9 = a8;
  uint64_t v16 = result;
  if (a9)
  {
    if ((a3[5] & 2) == 0)
    {
      if (a2 && (a2[5] & 2) != 0) {
        goto LABEL_13;
      }
      uint64_t v17 = sub_1B0C9ADE0(result, a3, (uint64_t)a3, a4, a5, a6, a7, a8);
      if (!v17) {
        goto LABEL_13;
      }
      goto LABEL_15;
    }
LABEL_12:
    uint64_t v18 = v16;
    uint64_t v19 = a3;
LABEL_14:
    uint64_t v17 = sub_1B0C9ADE0(v18, v19, (uint64_t)a3, a4, a5, a6, a7, a8);
    goto LABEL_15;
  }
  if ((a2[5] & 2) != 0)
  {
LABEL_13:
    uint64_t v18 = v16;
    uint64_t v19 = a2;
    goto LABEL_14;
  }
  if (a3 && (a3[5] & 2) != 0) {
    goto LABEL_12;
  }
  uint64_t v17 = sub_1B0C9ADE0(result, a2, (uint64_t)a3, a4, a5, a6, a7, a8);
  if (!v17) {
    goto LABEL_12;
  }
LABEL_15:
  int v20 = sub_1B0CB5528(a3);
  int v21 = sub_1B0CB5528(a2);
  if (v20 < 65 || v21 < 65)
  {
    if (v21 >= 65) {
      char v25 = v21;
    }
    else {
      char v25 = v20;
    }
    char v24 = v25 | 0x40;
  }
  else if (v21 > 0x42 || v20 > 0x42)
  {
    char v24 = 67;
  }
  else
  {
    char v24 = 65;
  }
  uint64_t result = sub_1B0CCB908(*(uint64_t **)(v16 + 16), a4, a6, a7, a5, v17, 4294967294, v22);
  uint64_t v26 = *(void *)(v16 + 16);
  int v27 = *(_DWORD *)(v26 + 144);
  BOOL v28 = __OFSUB__(v27, 1);
  int v29 = v27 - 1;
  if (v29 < 0 == v28) {
    *(_WORD *)(*(void *)(v26 + 136) + 40 * v29 + 2) = (v24 | v9);
  }
  return result;
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return sub_1B0C7EAC0((uint64_t)db, (unsigned __int8 *)zSql, *(uint64_t *)&nByte, 128, 0, ppStmt, pzTail, v5);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  if (!a1) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  if (v4) {
    xmmword_1EB21CA40(v4);
  }
  uint64_t v5 = *((void *)a1 + 20);
  if (!v5 || *((unsigned __int16 *)a1 + 130) <= iCol)
  {
    uint64_t v7 = *(void *)a1;
    *(_DWORD *)(v7 + 80) = 25;
    sub_1B0D0E714(v7, 25);
LABEL_8:
    uint64_t v6 = &qword_1B0DE22A8;
    goto LABEL_9;
  }
  uint64_t v6 = (uint64_t *)(v5 + ((unint64_t)iCol << 6));
LABEL_9:
  int v8 = *((unsigned __int16 *)v6 + 10);
  if ((~v8 & 0x202) != 0 || *((unsigned char *)v6 + 22) != 1)
  {
    if (v8)
    {
      char v9 = 0;
      if (!a1) {
        return v9;
      }
    }
    else
    {
      char v9 = (const unsigned __int8 *)sub_1B0D18254((int *)v6, 1);
      if (!a1) {
        return v9;
      }
    }
  }
  else
  {
    char v9 = (const unsigned __int8 *)v6[1];
    if (!a1) {
      return v9;
    }
  }
  uint64_t v10 = *(void *)a1;
  unsigned int v11 = *((_DWORD *)a1 + 13);
  if (v11 || (int v12 = *(unsigned __int8 *)(v10 + 103), *(unsigned char *)(v10 + 103)))
  {
    int v12 = sub_1B0D1806C(v10, v11);
    uint64_t v10 = *(void *)a1;
  }
  *((_DWORD *)a1 + 13) = v12;
  uint64_t v13 = *(void *)(v10 + 24);
  if (v13) {
    xmmword_1EB21CA50(v13);
  }
  return v9;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  if (a1)
  {
    uint64_t v4 = *(void *)(*(void *)a1 + 24);
    if (v4) {
      xmmword_1EB21CA40(v4);
    }
    uint64_t v5 = *((void *)a1 + 20);
    if (v5 && *((unsigned __int16 *)a1 + 130) > iCol)
    {
      uint64_t v6 = (uint64_t *)(v5 + ((unint64_t)iCol << 6));
      goto LABEL_9;
    }
    uint64_t v7 = *(void *)a1;
    *(_DWORD *)(v7 + 80) = 25;
    sub_1B0D0E714(v7, 25);
  }
  uint64_t v6 = &qword_1B0DE22A8;
LABEL_9:
  __int16 v8 = *((_WORD *)v6 + 10);
  if ((v8 & 0x24) != 0)
  {
    sqlite3_int64 v9 = *v6;
  }
  else if ((v8 & 8) != 0)
  {
    double v15 = *(double *)v6;
    if (*(double *)v6 >= -9.22337204e18)
    {
      if (v15 <= 9.22337204e18) {
        sqlite3_int64 v9 = (uint64_t)v15;
      }
      else {
        sqlite3_int64 v9 = 0x7FFFFFFFFFFFFFFFLL;
      }
    }
    else
    {
      sqlite3_int64 v9 = 0x8000000000000000;
    }
  }
  else if ((v8 & 0x12) != 0 && v6[1])
  {
    sqlite3_int64 v9 = sub_1B0D186C0((uint64_t)v6);
  }
  else
  {
    sqlite3_int64 v9 = 0;
  }
  if (a1)
  {
    uint64_t v10 = *(void *)a1;
    unsigned int v11 = *((_DWORD *)a1 + 13);
    if (v11 || (int v12 = *(unsigned __int8 *)(v10 + 103), *(unsigned char *)(v10 + 103)))
    {
      int v12 = sub_1B0D1806C(v10, v11);
      uint64_t v10 = *(void *)a1;
    }
    *((_DWORD *)a1 + 13) = v12;
    uint64_t v13 = *(void *)(v10 + 24);
    if (v13) {
      xmmword_1EB21CA50(v13);
    }
  }
  return v9;
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  uint64_t v1 = pStmt;
  if (pStmt)
  {
    uint64_t v2 = *(void *)pStmt;
    uint64_t v3 = *(void *)(*(void *)pStmt + 24);
    if (v3) {
      xmmword_1EB21CA40(v3);
    }
    sub_1B0CE93FC(v2, (uint64_t)v1);
    unsigned int v4 = sub_1B0C8B140((void **)v1);
    *((unsigned char *)v1 + 267) = 1;
    *((_DWORD *)v1 + 13) = 0;
    *((_WORD *)v1 + 132) = -254;
    *((void *)v1 + 7) = 0;
    *(void *)((char *)v1 + 44) = 0xFFFFFFFF00000001;
    *((_DWORD *)v1 + 16) = 0;
    *((void *)v1 + 10) = 0;
    if (v4 || (LODWORD(v1) = 0, *(unsigned char *)(v2 + 103))) {
      LODWORD(v1) = sub_1B0D1806C(v2, v4);
    }
    uint64_t v5 = *(void *)(v2 + 24);
    if (v5) {
      xmmword_1EB21CA50(v5);
    }
  }
  return (int)v1;
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  if (a1)
  {
    uint64_t v2 = *(void *)(*(void *)a1 + 24);
    if (v2) {
      xmmword_1EB21CA40(*(void *)(*(void *)a1 + 24));
    }
    int v3 = *((_DWORD *)a1 + 8);
    if (v3 >= 1)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = *((void *)a1 + 16);
      do
      {
        uint64_t v7 = v6 + v4;
        if ((*(_WORD *)(v6 + v4 + 20) & 0x9000) != 0 || *(_DWORD *)(v7 + 32))
        {
          sub_1B0D180E4(v7);
          uint64_t v6 = *((void *)a1 + 16);
          int v3 = *((_DWORD *)a1 + 8);
        }
        *(_WORD *)(v6 + v4 + 20) = 1;
        ++v5;
        v4 += 64;
      }
      while (v5 < v3);
    }
    if (*((_DWORD *)a1 + 93)) {
      *((_WORD *)a1 + 134) = *((_WORD *)a1 + 134) & 0xFFFC | 1;
    }
    if (v2) {
      xmmword_1EB21CA50(v2);
    }
  }
  return 0;
}

int sqlite3_open(const char *filename, sqlite3 **ppDb)
{
  return sub_1B0C77698((char *)filename, (uint64_t *)ppDb, 6u, 0);
}

int sqlite3_extended_result_codes(sqlite3 *a1, int onoff)
{
  if (!a1)
  {
    uint64_t v4 = "NULL";
    goto LABEL_14;
  }
  int v3 = *((unsigned __int8 *)a1 + 113);
  if (v3 == 186)
  {
LABEL_5:
    uint64_t v4 = "unopened";
LABEL_14:
    sqlite3_log(21, "API call with %s database connection pointer", v4);
    return sub_1B0CE1978(189509);
  }
  if (v3 != 118)
  {
    if (v3 != 109)
    {
      uint64_t v4 = "invalid";
      goto LABEL_14;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *((void *)a1 + 3);
  if (v6)
  {
    xmmword_1EB21CA40(v6);
    uint64_t v7 = *((void *)a1 + 3);
    if (onoff) {
      int v8 = -1;
    }
    else {
      int v8 = 255;
    }
    *((_DWORD *)a1 + 22) = v8;
    if (v7) {
      xmmword_1EB21CA50(v7);
    }
  }
  else
  {
    if (onoff) {
      int v10 = -1;
    }
    else {
      int v10 = 255;
    }
    *((_DWORD *)a1 + 22) = v10;
  }
  return 0;
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  if (!a1)
  {
    uint64_t v4 = "NULL";
    goto LABEL_13;
  }
  int v3 = *((unsigned __int8 *)a1 + 113);
  if (v3 == 186)
  {
LABEL_5:
    uint64_t v4 = "unopened";
LABEL_13:
    sqlite3_log(21, "API call with %s database connection pointer", v4);
    return sub_1B0CE1978(187104);
  }
  if (v3 != 118)
  {
    if (v3 != 109)
    {
      uint64_t v4 = "invalid";
      goto LABEL_13;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *((void *)a1 + 3);
  if (ms < 1)
  {
    if (v6)
    {
      xmmword_1EB21CA40(v6);
      uint64_t v9 = *((void *)a1 + 3);
      *(_OWORD *)((char *)a1 + 664) = 0u;
      *((void *)a1 + 85) = a1;
      *((_DWORD *)a1 + 172) = 0;
      if (v9) {
        xmmword_1EB21CA50(v9);
      }
    }
    else
    {
      *(_OWORD *)((char *)a1 + 664) = 0u;
      *((void *)a1 + 85) = a1;
      *((_DWORD *)a1 + 172) = 0;
    }
    *((_DWORD *)a1 + 193) = 0;
  }
  else if (v6)
  {
    xmmword_1EB21CA40(v6);
    uint64_t v7 = *((void *)a1 + 3);
    *((void *)a1 + 83) = sub_1B0CF3B30;
    *((void *)a1 + 84) = a1;
    *((void *)a1 + 85) = a1;
    *((_DWORD *)a1 + 172) = 0;
    if (v7) {
      xmmword_1EB21CA50(v7);
    }
    *((_DWORD *)a1 + 193) = ms;
  }
  else
  {
    *((void *)a1 + 83) = sub_1B0CF3B30;
    *((void *)a1 + 84) = a1;
    *((void *)a1 + 85) = a1;
    *((_DWORD *)a1 + 172) = 0;
    *((_DWORD *)a1 + 193) = ms;
  }
  return 0;
}

int sqlite3_changes(sqlite3 *a1)
{
  if (a1)
  {
    int v1 = *((unsigned __int8 *)a1 + 113);
    switch(v1)
    {
      case 186:
        goto LABEL_5;
      case 118:
        return *((_DWORD *)a1 + 30);
      case 109:
LABEL_5:
        uint64_t v2 = "unopened";
        break;
      default:
        uint64_t v2 = "invalid";
        break;
    }
  }
  else
  {
    uint64_t v2 = "NULL";
  }
  sqlite3_log(21, "API call with %s database connection pointer", v2);
  sub_1B0CE1978(186291);
  return 0;
}

int sqlite3_set_authorizer(sqlite3 *a1, int (__cdecl *xAuth)(void *, int, const char *, const char *, const char *, const char *), void *pUserData)
{
  if (!a1)
  {
    uint64_t v5 = "NULL";
    goto LABEL_16;
  }
  int v4 = *((unsigned __int8 *)a1 + 113);
  if (v4 == 186)
  {
LABEL_5:
    uint64_t v5 = "unopened";
LABEL_16:
    sqlite3_log(21, "API call with %s database connection pointer", v5);
    return sub_1B0CE1978(127458);
  }
  if (v4 != 118)
  {
    if (v4 != 109)
    {
      uint64_t v5 = "invalid";
      goto LABEL_16;
    }
    goto LABEL_5;
  }
  uint64_t v8 = *((void *)a1 + 3);
  if (v8) {
    xmmword_1EB21CA40(v8);
  }
  *((void *)a1 + 66) = xAuth;
  *((void *)a1 + 67) = pUserData;
  if (xAuth)
  {
    for (uint64_t i = *((void *)a1 + 1); i; uint64_t i = *(void *)(i + 16))
      *(_WORD *)(i + 268) = *(_WORD *)(i + 268) & 0xFFFC | 2;
  }
  uint64_t v10 = *((void *)a1 + 3);
  if (v10) {
    xmmword_1EB21CA50(v10);
  }
  return 0;
}

uint64_t sub_1B0CC301C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = (char *)a3;
  int v9 = a2;
  int v11 = *(_DWORD *)(a1 + 144);
  if (v11 + (int)a2 > *(_DWORD *)(a1 + 148))
  {
    if (sub_1B0D255A4(a1, a2, a3, a4, a5, a6, a7, a8)) {
      return 0;
    }
    int v11 = *(_DWORD *)(a1 + 144);
  }
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t result = v13 + 40 * v11;
  if (v9 >= 1)
  {
    uint64_t v14 = v13 + 40 * v11 + 8;
    int v15 = v9;
    do
    {
      uint64_t v16 = *v8;
      *(unsigned char *)(v14 - 8) = v16;
      *(_DWORD *)(v14 - 4) = v8[1];
      int v17 = v8[2];
      *(_DWORD *)uint64_t v14 = v17;
      if ((byte_1B0DE18AA[v16] & 1) != 0 && v17 >= 1) {
        *(_DWORD *)uint64_t v14 = *(_DWORD *)(a1 + 144) + v17;
      }
      *(_DWORD *)(v14 + 4) = v8[3];
      *(unsigned char *)(v14 - 7) = 0;
      *(void *)(v14 + 8) = 0;
      *(_WORD *)(v14 - 6) = 0;
      v14 += 40;
      v8 += 4;
      --v15;
    }
    while (v15);
    int v11 = *(_DWORD *)(a1 + 144);
  }
  *(_DWORD *)(a1 + 144) = v11 + v9;
  return result;
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  int v1 = (unsigned __int16 *)pStmt;
  if (pStmt)
  {
    if (*(void *)(*(void *)pStmt + 24))
    {
      xmmword_1EB21CA40();
      uint64_t v2 = *(void *)(*(void *)v1 + 24);
      LODWORD(v1) = v1[130];
      if (v2) {
        xmmword_1EB21CA50();
      }
    }
    else
    {
      LODWORD(v1) = *((unsigned __int16 *)pStmt + 130);
    }
  }
  return (int)v1;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  if (a1)
  {
    uint64_t v4 = *(void *)(*(void *)a1 + 24);
    if (v4) {
      xmmword_1EB21CA40(v4);
    }
    uint64_t v5 = *((void *)a1 + 20);
    if (v5 && *((unsigned __int16 *)a1 + 130) > iCol)
    {
      uint64_t v6 = (uint64_t *)(v5 + ((unint64_t)iCol << 6));
      goto LABEL_9;
    }
    uint64_t v7 = *(void *)a1;
    *(_DWORD *)(v7 + 80) = 25;
    sub_1B0D0E714(v7, 25);
  }
  uint64_t v6 = &qword_1B0DE22A8;
LABEL_9:
  __int16 v8 = *((_WORD *)v6 + 10);
  if ((v8 & 0x24) != 0)
  {
    double v9 = *(double *)v6;
  }
  else if ((v8 & 8) != 0)
  {
    double v15 = *(double *)v6;
    if (*(double *)v6 >= -9.22337204e18)
    {
      if (v15 <= 9.22337204e18) {
        *(void *)&double v9 = (uint64_t)v15;
      }
      else {
        LODWORD(v9) = -1;
      }
    }
    else
    {
      LODWORD(v9) = 0;
    }
  }
  else if ((v8 & 0x12) != 0 && v6[1])
  {
    LODWORD(v9) = sub_1B0D186C0((uint64_t)v6);
  }
  else
  {
    LODWORD(v9) = 0;
  }
  if (a1)
  {
    uint64_t v10 = *(void *)a1;
    unsigned int v11 = *((_DWORD *)a1 + 13);
    if (v11 || (int v12 = *(unsigned __int8 *)(v10 + 103), *(unsigned char *)(v10 + 103)))
    {
      int v12 = sub_1B0D1806C(v10, v11);
      uint64_t v10 = *(void *)a1;
    }
    *((_DWORD *)a1 + 13) = v12;
    uint64_t v13 = *(void *)(v10 + 24);
    if (v13) {
      xmmword_1EB21CA50(v13);
    }
  }
  return LODWORD(v9);
}

uint64_t sub_1B0CC32A8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112)) {
    return *(unsigned int *)(a1 + 116);
  }
  if ((*(_WORD *)(a1 + 30) & 0x10) != 0) {
    *(_DWORD *)(a1 + 116) |= 0x1000u;
  }
  *(_DWORD *)(a1 + 112) = 4096;
  return *(unsigned int *)(a1 + 116);
}

uint64_t sub_1B0CC32DC(uint64_t a1, signed int a2)
{
  return sub_1B0D078E4(a1, a2, 0);
}

uint64_t sub_1B0CC32E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void *sub_1B0CC32EC(void *result, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (void *)*result;
  uint64_t v11 = result[43];
  if (!v11) {
    goto LABEL_3;
  }
  uint64_t v12 = (uint64_t)result;
  if (*((unsigned char *)result + 302) == 1) {
    goto LABEL_3;
  }
  uint64_t v66 = *result;
  if (a2)
  {
    int v14 = *(_DWORD *)a2;
    if (a4)
    {
      if (*(_DWORD *)a4 != v14)
      {
        sub_1B0CEF2BC((uint64_t)result, "number of columns in foreign key does not match the number of columns in the referenced table", a3, (uint64_t)a4, a5, a6, a7, a8, v62);
LABEL_4:
        uint64_t result = sub_1B0D270DC(v10, a2);
        goto LABEL_5;
      }
LABEL_17:
      __int16 v16 = a5;
      int v65 = v14;
      int v17 = (int *)(a3 + 8);
      uint64_t v18 = *(unsigned int *)(a3 + 8) + 16 * (v14 - 1) + 81;
      uint64_t v19 = *(unsigned int *)a4;
      if ((int)v19 >= 1)
      {
        int v20 = (const char **)(a4 + 2);
        do
        {
          if (*v20) {
            size_t v21 = strlen(*v20) & 0x3FFFFFFF;
          }
          else {
            size_t v21 = 0;
          }
          v18 += v21 + 1;
          v20 += 3;
          --v19;
        }
        while (v19);
      }
      int v64 = 1;
      uint64_t v10 = (void *)v66;
      if (!v66)
      {
LABEL_24:
        uint64_t result = (void *)sub_1B0C7FC94(v18);
        uint64_t v22 = result;
        if (!result) {
          goto LABEL_3;
        }
        goto LABEL_30;
      }
LABEL_29:
      uint64_t result = (void *)sub_1B0D05DC0((uint64_t)v10, v18);
      uint64_t v22 = result;
      if (!result) {
        goto LABEL_3;
      }
LABEL_30:
      __int16 v63 = v16;
      bzero(v22, v18);
      *uint64_t v22 = v11;
      int v23 = (unsigned __int8 *)&v22[2 * v65 + 8];
      v22[1] = *(void *)(v11 + 72);
      v22[2] = v23;
      unsigned int v24 = *(unsigned __int8 *)(v12 + 302);
      if (v24 > 3 || v24 == 2)
      {
        uint64_t v60 = *(void *)v12 ? sub_1B0D05DC0(*(void *)v12, 0x20uLL) : sub_1B0C7FC94(32);
        if (v60)
        {
          *(_OWORD *)uint64_t v60 = 0u;
          *(_OWORD *)(v60 + 16) = 0u;
          *(void *)uint64_t v60 = v23;
          *(_OWORD *)(v60 + 8) = *(_OWORD *)a3;
          *(void *)(v60 + 24) = *(void *)(v12 + 408);
          *(void *)(v12 + 408) = v60;
        }
      }
      memcpy(v23, *(const void **)a3, *(unsigned int *)(a3 + 8));
      v23[*(unsigned int *)(a3 + 8)] = 0;
      int v30 = *v23;
      if ((char)byte_1B0DE196D[*v23] < 0)
      {
        uint64_t v31 = 0;
        if (v30 == 91) {
          int v30 = 93;
        }
        for (int i = 1; ; ++i)
        {
          uint64_t v33 = i;
          int v34 = v23[i];
          if (v34 == v30)
          {
            ++i;
            LOBYTE(v34) = v30;
            if (v23[v33 + 1] != v30) {
              break;
            }
          }
          v23[v31++] = v34;
        }
        v23[v31] = 0;
      }
      int v35 = *v17;
      *((_DWORD *)v22 + 10) = v65;
      if (a2)
      {
        if (v65 >= 1)
        {
          uint64_t v36 = 0;
          int v37 = *(__int16 *)(v11 + 54);
          uint64_t v10 = (void *)v66;
          while (1)
          {
            if (v37 < 1)
            {
              unsigned int v61 = 0;
              uint64_t v10 = (void *)v66;
LABEL_91:
              sub_1B0CEF2BC(v12, "unknown column \"%s\" in foreign key definition", v25, v26, v65, v27, v28, v29, a2[3 * v61 + 2]);
LABEL_92:
              uint64_t result = sub_1B0D05C10(v10, v22);
              goto LABEL_3;
            }
            uint64_t v38 = 0;
            uint64_t v39 = a2[3 * v36 + 2];
LABEL_47:
            for (uint64_t j = 0; ; ++j)
            {
              uint64_t v25 = *(unsigned __int8 *)(*(void *)(*(void *)(v11 + 8) + 16 * v38) + j);
              uint64_t v26 = *(unsigned __int8 *)(v39 + j);
              if (v25 == v26) {
                break;
              }
              uint64_t v25 = byte_1B0DE1758[v25];
              uint64_t v26 = byte_1B0DE1758[v26];
              if (v25 != v26)
              {
                if (++v38 != v37) {
                  goto LABEL_47;
                }
                unsigned int v61 = v36;
                goto LABEL_91;
              }
LABEL_49:
              ;
            }
            if (*(unsigned char *)(*(void *)(*(void *)(v11 + 8) + 16 * v38) + j)) {
              goto LABEL_49;
            }
            int v41 = &v22[2 * v36];
            *((_DWORD *)v41 + 16) = v38;
            uint64_t v42 = v41 + 8;
            if (*(unsigned __int8 *)(v12 + 302) >= 2u)
            {
              uint64_t v43 = *(void **)(v12 + 408);
              if (v43)
              {
                while (*v43 != v39)
                {
                  uint64_t v43 = (void *)v43[3];
                  if (!v43) {
                    goto LABEL_44;
                  }
                }
                void *v43 = v42;
              }
            }
LABEL_44:
            if (++v36 == v65) {
              goto LABEL_61;
            }
          }
        }
      }
      else
      {
        *((_DWORD *)v22 + 16) = *(__int16 *)(v11 + 54) - 1;
LABEL_61:
        int v44 = v64;
        if (v65 <= 0) {
          int v44 = 0;
        }
        if (v44 == 1)
        {
          uint64_t v45 = 0;
          uint64_t v46 = &v23[v35 + 1];
          do
          {
            uint64_t v48 = &a4[3 * v45];
            int v49 = (const void *)v48[2];
            if (v49) {
              size_t v50 = strlen((const char *)v48[2]) & 0x3FFFFFFF;
            }
            else {
              size_t v50 = 0;
            }
            v22[2 * v45 + 9] = v46;
            if (*(unsigned __int8 *)(v12 + 302) >= 2u)
            {
              uint64_t v51 = *(const void ***)(v12 + 408);
              if (v51)
              {
                while (*v51 != v49)
                {
                  uint64_t v51 = (const void **)v51[3];
                  if (!v51) {
                    goto LABEL_66;
                  }
                }
                _DWORD *v51 = v46;
              }
            }
LABEL_66:
            memcpy(v46, v49, v50);
            int v47 = &v46[v50];
            *int v47 = 0;
            uint64_t v46 = v47 + 1;
            ++v45;
          }
          while (v45 != v65);
        }
      }
      *((unsigned char *)v22 + 44) = 0;
      *(_WORD *)((char *)v22 + 45) = v63;
      uint64_t result = (void *)sub_1B0C796D8(*(void *)(v11 + 96) + 80, (unsigned __int8 *)v22[2], (uint64_t)v22);
      if (result == v22)
      {
        uint64_t v10 = (void *)v66;
        if (!*(unsigned char *)(v66 + 103) && !*(unsigned char *)(v66 + 104))
        {
          *(unsigned char *)(v66 + 103) = 1;
          if (*(int *)(v66 + 220) >= 1) {
            *(_DWORD *)(v66 + 424) = 1;
          }
          ++*(_DWORD *)(v66 + 432);
          *(_WORD *)(v66 + 436) = 0;
          uint64_t v58 = *(void *)(v66 + 344);
          if (v58)
          {
            sub_1B0CEF2BC(v58, "out of memory", v52, v53, v54, v55, v56, v57, v62);
            for (uint64_t k = *(void *)(v66 + 344); ; ++*(_DWORD *)(k + 48))
            {
              *(_DWORD *)(k + 24) = 7;
              uint64_t k = *(void *)(k + 256);
              if (!k) {
                break;
              }
            }
          }
        }
        goto LABEL_92;
      }
      if (result)
      {
        v22[3] = result;
        result[4] = v22;
      }
      *(void *)(v11 + 72) = v22;
      uint64_t v10 = (void *)v66;
LABEL_3:
      if (a2) {
        goto LABEL_4;
      }
LABEL_5:
      if (!a4) {
        return result;
      }
      goto LABEL_6;
    }
    __int16 v16 = a5;
LABEL_28:
    int v64 = 0;
    int v65 = v14;
    int v17 = (int *)(a3 + 8);
    uint64_t v18 = *(unsigned int *)(a3 + 8) + 16 * (v14 - 1) + 81;
    if (!v10) {
      goto LABEL_24;
    }
    goto LABEL_29;
  }
  uint64_t v15 = *(__int16 *)(v11 + 54);
  if (v15 < 1) {
    goto LABEL_5;
  }
  if (!a4)
  {
    __int16 v16 = a5;
    int v14 = 1;
    goto LABEL_28;
  }
  int v14 = *(_DWORD *)a4;
  if (*(_DWORD *)a4 == 1) {
    goto LABEL_17;
  }
  sub_1B0CEF2BC((uint64_t)result, "foreign key on %s should reference only one column of table %T", a3, (uint64_t)a4, a5, a6, a7, a8, *(void *)(*(void *)(v11 + 8) + 16 * (v15 - 1)));
LABEL_6:

  return sub_1B0D270DC(v10, a4);
}

uint64_t sub_1B0CC386C(uint64_t a1, const char *a2, const char *a3, int a4)
{
  uint64_t v4 = *(void *)a1;
  if (!*(unsigned char *)(*(void *)a1 + 197))
  {
    uint64_t v10 = *(void *)(*(void *)(v4 + 32) + 32 * a4);
    uint64_t v11 = (*(uint64_t (**)(void, uint64_t, const char *, const char *, uint64_t, void))(v4 + 528))(*(void *)(v4 + 536), 20, a2, a3, v10, *(void *)(a1 + 368));
    if (v11 == 1)
    {
      uint64_t v18 = sqlite3_mprintf("%s.%s", a2, a3);
      if (a4 || *(int *)(v4 + 40) >= 3) {
        LOBYTE(v18) = sqlite3_mprintf("%s.%z", v10, v18);
      }
      sub_1B0CEF2BC(a1, "access to %z is prohibited", v19, v20, v21, v22, v23, v24, (char)v18);
      uint64_t v5 = 1;
      int v25 = 23;
    }
    else
    {
      uint64_t v5 = v11;
      if ((v11 & 0xFFFFFFFD) == 0) {
        return v5;
      }
      sub_1B0CEF2BC(a1, "authorizer malfunction", v12, v13, v14, v15, v16, v17, v27);
      int v25 = 1;
    }
    *(_DWORD *)(a1 + 24) = v25;
    return v5;
  }
  return 0;
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return sub_1B0CEBAA4((uint64_t *)a1, N, 0, 0);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  if (!a1) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  if (v4) {
    xmmword_1EB21CA40(v4);
  }
  uint64_t v5 = *((void *)a1 + 20);
  if (!v5 || *((unsigned __int16 *)a1 + 130) <= iCol)
  {
    uint64_t v9 = *(void *)a1;
    *(_DWORD *)(v9 + 80) = 25;
    sub_1B0D0E714(v9, 25);
LABEL_10:
    uint64_t v6 = &qword_1B0DE22A8;
    LOBYTE(v7) = 1;
    goto LABEL_11;
  }
  uint64_t v6 = (uint64_t *)(v5 + ((unint64_t)iCol << 6));
  __int16 v7 = *((_WORD *)v6 + 10);
  if ((v7 & 8) != 0)
  {
    double v8 = *(double *)v6;
    if (!a1) {
      return v8;
    }
    goto LABEL_18;
  }
LABEL_11:
  if ((v7 & 0x24) != 0)
  {
    double v8 = (double)*v6;
    if (!a1) {
      return v8;
    }
  }
  else if ((v7 & 0x12) != 0)
  {
    double v8 = sub_1B0D18684((uint64_t)v6);
    if (!a1) {
      return v8;
    }
  }
  else
  {
    double v8 = 0.0;
    if (!a1) {
      return v8;
    }
  }
LABEL_18:
  uint64_t v10 = *(void *)a1;
  unsigned int v11 = *((_DWORD *)a1 + 13);
  if (v11 || (int v12 = *(unsigned __int8 *)(v10 + 103), *(unsigned char *)(v10 + 103)))
  {
    int v12 = sub_1B0D1806C(v10, v11);
    uint64_t v10 = *(void *)a1;
  }
  *((_DWORD *)a1 + 13) = v12;
  uint64_t v13 = *(void *)(v10 + 24);
  if (v13) {
    xmmword_1EB21CA50(v13);
  }
  return v8;
}

void sub_1B0CC3A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    uint64_t v8 = a2;
    uint64_t v10 = *(void *)a1;
    uint64_t v11 = *(void *)(a2 + 8);
    uint64_t v12 = *(char *)(v11 + 1);
    if (!*(unsigned char *)(v11 + 1))
    {
      LODWORD(v14) = *(_DWORD *)(a1 + 296) + 1;
      *(_DWORD *)(a1 + 296) = v14;
LABEL_43:
      *(_DWORD *)(v8 + 48) = v14;
      if ((int)v14 <= *(_DWORD *)(v10 + 172)) {
        return;
      }
      sub_1B0CEF2BC(a1, "too many SQL variables", a3, a4, a5, a6, a7, a8, v36);
      uint64_t v22 = *(void *)a1;
      while (1)
      {
        if ((*(unsigned char *)(v8 + 4) & 3) == 0)
        {
          int v23 = *(_DWORD *)(v8 + 56);
          if (v23 > 0) {
            break;
          }
        }
        uint64_t v8 = *(void *)(v8 + 16);
        if (!v8) {
          return;
        }
      }
      goto LABEL_48;
    }
    int v13 = a3;
    if (*(unsigned char *)v11 != 63)
    {
      uint64_t v16 = *(int **)(a1 + 320);
      if (v16)
      {
        int v17 = v16[1];
        int v18 = 2;
        while (1)
        {
          uint64_t v19 = v18;
          uint64_t v20 = (const char *)&v16[v18 + 2];
          if (!strncmp(v20, (const char *)v11, v13) && !v20[v13]) {
            break;
          }
          int v18 = v16[v19 + 1] + v19;
          if (v18 >= v17) {
            goto LABEL_13;
          }
        }
        LODWORD(v14) = v16[v19];
        if (v14) {
          goto LABEL_43;
        }
      }
LABEL_13:
      LODWORD(v14) = *(_DWORD *)(a1 + 296) + 1;
      *(_DWORD *)(a1 + 296) = v14;
      goto LABEL_28;
    }
    uint64_t v37 = 0;
    if (a3 == 2)
    {
      uint64_t v14 = v12 - 48;
      int v15 = *(_DWORD *)(v10 + 172);
    }
    else
    {
      BOOL v21 = sub_1B0D186FC((unsigned __int8 *)(v11 + 1), &v37, (int)a3 - 1, 1) != 0;
      uint64_t v14 = v37;
      int v15 = *(_DWORD *)(v10 + 172);
      if (v21) {
        goto LABEL_19;
      }
    }
    if (v14 >= 1 && v14 <= v15)
    {
      if (*(_DWORD *)(a1 + 296) >= (int)v14)
      {
        uint64_t v16 = *(int **)(a1 + 320);
        if (v16)
        {
          int v24 = 2;
          while (v16[v24] != v14)
          {
            v24 += v16[v24 + 1];
            if (v24 >= v16[1]) {
              goto LABEL_28;
            }
          }
          goto LABEL_43;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 296) = v14;
        uint64_t v16 = *(int **)(a1 + 320);
      }
LABEL_28:
      int v25 = v13 / 4;
      int v26 = v13 / 4 + 3;
      if (v16)
      {
        int v27 = v16[1];
        uint64_t v28 = *v16;
        int v29 = v27 + v26;
        if (v27 + v26 <= (int)v28)
        {
LABEL_41:
          int v34 = &v16[v27];
          *int v34 = v14;
          v34[1] = v26;
          int v35 = v34 + 2;
          v16[1] = v29;
          memcpy(v34 + 2, (const void *)v11, v13);
          *((unsigned char *)v35 + v13) = 0;
          goto LABEL_42;
        }
        uint64_t v30 = 2 * v28 + v26;
        unint64_t v31 = 4 * v30;
        if (*(void *)(v10 + 512) > (unint64_t)v16)
        {
          if (*(void *)(v10 + 496) <= (unint64_t)v16)
          {
            if (v31 < 0x81)
            {
LABEL_34:
              *uint64_t v16 = v30;
              goto LABEL_41;
            }
          }
          else if (*(void *)(v10 + 504) <= (unint64_t)v16 && v31 <= *(unsigned __int16 *)(v10 + 438))
          {
            goto LABEL_34;
          }
        }
        uint64_t v33 = sub_1B0D05E6C(v10, v16, v31);
        if (v33)
        {
          int v27 = *(_DWORD *)(v33 + 4);
          uint64_t v16 = (int *)v33;
          goto LABEL_40;
        }
      }
      else
      {
        LODWORD(v30) = v25 + 13;
        uint64_t v32 = sub_1B0D05DC0(v10, 4 * (v25 + 13));
        uint64_t v16 = (int *)v32;
        if (v32)
        {
          int v27 = 2;
          *(_DWORD *)(v32 + 4) = 2;
LABEL_40:
          *uint64_t v16 = v30;
          int v29 = v27 + v26;
          goto LABEL_41;
        }
      }
LABEL_42:
      *(void *)(a1 + 320) = v16;
      goto LABEL_43;
    }
LABEL_19:
    sub_1B0CEF2BC(a1, "variable number must be between ?1 and ?%d", a3, a4, a5, a6, a7, a8, v15);
    uint64_t v22 = *(void *)a1;
    while (1)
    {
      if ((*(unsigned char *)(v8 + 4) & 3) == 0)
      {
        int v23 = *(_DWORD *)(v8 + 56);
        if (v23 > 0) {
          break;
        }
      }
      uint64_t v8 = *(void *)(v8 + 16);
      if (!v8) {
        return;
      }
    }
LABEL_48:
    *(_DWORD *)(v22 + 84) = v23;
  }
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return sub_1B0CC3DB8((uint64_t *)a1, a2, (char *)a3, a4, (uint64_t (*)(uint64_t))a5, 1u);
}

uint64_t sub_1B0CC3DB8(uint64_t *a1, int a2, char *a3, uint64_t a4, uint64_t (*a5)(uint64_t result), unsigned int a6)
{
  if (a2 <= 0)
  {
    if (a1)
    {
      uint64_t v20 = *a1;
      if (*a1)
      {
        uint64_t v12 = 25;
        *(_DWORD *)(v20 + 80) = 25;
        sub_1B0D0E714(v20, 25);
        goto LABEL_14;
      }
      sqlite3_log(21, "API called with finalized prepared statement");
    }
    else
    {
      sqlite3_log(21, "API called with NULL prepared statement");
    }
    uint64_t v12 = 25;
  }
  else
  {
    uint64_t v11 = (a2 - 1);
    uint64_t v12 = sub_1B0CC3F2C((uint64_t)a1, a2 - 1);
    if (!v12)
    {
      if (a3)
      {
        uint64_t v13 = a1[16];
        unsigned int v14 = sub_1B0C79BBC(v13 + (v11 << 6), a3, a4, a6, a5);
        unsigned int v15 = v14;
        if (a6 && !v14)
        {
          int v16 = *(unsigned __int8 *)(*a1 + 100);
          uint64_t v17 = v13 + (v11 << 6);
          __int16 v18 = *(_WORD *)(v17 + 20);
          uint64_t v19 = (unsigned char *)(v17 + 22);
          if ((v18 & 2) == 0)
          {
            uint64_t v12 = 0;
            *uint64_t v19 = v16;
            goto LABEL_21;
          }
          if (*v19 == v16) {
            goto LABEL_20;
          }
          unsigned int v15 = sub_1B0CD43EC((int *)(v13 + (v11 << 6)), v16);
        }
        if (v15)
        {
          uint64_t v21 = *a1;
          *(_DWORD *)(v21 + 80) = v15;
          sub_1B0D0E714(v21, v15);
          uint64_t v12 = sub_1B0D1806C(*a1, v15);
          goto LABEL_21;
        }
      }
LABEL_20:
      uint64_t v12 = 0;
LABEL_21:
      uint64_t v22 = *(void *)(*a1 + 24);
      if (v22) {
        xmmword_1EB21CA50(v22);
      }
      return v12;
    }
  }
LABEL_14:
  if ((unint64_t)a5 + 1 >= 2) {
    a5((uint64_t)a3);
  }
  return v12;
}

uint64_t sub_1B0CC3F2C(uint64_t a1, unsigned int a2)
{
  if (!a1)
  {
    sqlite3_log(21, "API called with NULL prepared statement");
LABEL_17:
    int v10 = 98645;
    goto LABEL_21;
  }
  if (!*(void *)a1)
  {
    sqlite3_log(21, "API called with finalized prepared statement");
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  if (v4) {
    xmmword_1EB21CA40(v4);
  }
  if (*(unsigned char *)(a1 + 267) == 1)
  {
    if (*(_DWORD *)(a1 + 32) <= a2)
    {
      uint64_t v14 = *(void *)a1;
      uint64_t v9 = 25;
      *(_DWORD *)(v14 + 80) = 25;
      sub_1B0D0E714(v14, 25);
      uint64_t v15 = *(void *)(*(void *)a1 + 24);
      if (v15) {
        xmmword_1EB21CA50(v15);
      }
    }
    else
    {
      uint64_t v5 = *(void *)(a1 + 128) + ((unint64_t)a2 << 6);
      uint64_t v6 = (_WORD *)(v5 + 20);
      if ((*(_WORD *)(v5 + 20) & 0x9000) != 0 || *(_DWORD *)(v5 + 32)) {
        sub_1B0D180E4(v5);
      }
      *uint64_t v6 = 1;
      *(_DWORD *)(*(void *)a1 + 80) = 0;
      int v7 = *(_DWORD *)(a1 + 372);
      if (!v7) {
        return 0;
      }
      int v8 = 1 << a2;
      if (a2 > 0x1E) {
        int v8 = 0x80000000;
      }
      if ((v7 & v8) != 0)
      {
        uint64_t v9 = 0;
        *(_WORD *)(a1 + 268) = *(_WORD *)(a1 + 268) & 0xFFFC | 1;
      }
      else
      {
        return 0;
      }
    }
    return v9;
  }
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)(v11 + 80) = 21;
  sub_1B0D0E714(v11, 21);
  uint64_t v12 = *(void *)(*(void *)a1 + 24);
  if (v12) {
    xmmword_1EB21CA50(v12);
  }
  sqlite3_log(21, "bind on a busy prepared statement: [%s]", *(const char **)(a1 + 320));
  int v10 = 98653;
LABEL_21:

  return sub_1B0CE1978(v10);
}

int sqlite3_expired(sqlite3_stmt *a1)
{
  if (!a1) {
    return 1;
  }
  if (!*(void *)(*(void *)a1 + 24)) {
    return (*((_WORD *)a1 + 134) & 3) != 0;
  }
  xmmword_1EB21CA40();
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  BOOL v3 = (*((_WORD *)a1 + 134) & 3) != 0;
  if (v2) {
    xmmword_1EB21CA50();
  }
  return v3;
}

void sqlite3_progress_handler(sqlite3 *a1, int a2, int (__cdecl *a3)(void *), void *a4)
{
  if (!a1)
  {
    uint64_t v6 = "NULL";
    goto LABEL_20;
  }
  int v5 = *((unsigned __int8 *)a1 + 113);
  if (v5 == 186)
  {
LABEL_5:
    uint64_t v6 = "unopened";
LABEL_20:
    sqlite3_log(21, "API call with %s database connection pointer", v6);
    sub_1B0CE1978(187079);
    return;
  }
  if (v5 != 118)
  {
    if (v5 != 109)
    {
      uint64_t v6 = "invalid";
      goto LABEL_20;
    }
    goto LABEL_5;
  }
  uint64_t v10 = *((void *)a1 + 3);
  if (v10) {
    xmmword_1EB21CA40(v10);
  }
  if (a2 <= 0) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = a3;
  }
  if (a2 <= 0) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = a4;
  }
  *((void *)a1 + 68) = v11;
  *((_DWORD *)a1 + 140) = a2 & ~(a2 >> 31);
  *((void *)a1 + 69) = v12;
  if (*((void *)a1 + 3))
  {
    uint64_t v13 = (void (*)(void))xmmword_1EB21CA50;
    v13();
  }
}

void sub_1B0CC427C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a4;
  unsigned int v9 = a3;
  unsigned int v166 = 0;
  unsigned int v164 = 0;
  char v12 = *((unsigned char *)a1 + 35);
  uint64_t v13 = *(unsigned __int8 **)(a2 + 16);
  if (sub_1B0D33B08(a1, a2, a3, a4, a5, a6, a7, a8)) {
    return;
  }
  int8x16_t v160 = (void *)sub_1B0D33C14((uint64_t *)a1, a2);
  uint64_t v14 = *(unsigned __int8 **)(a2 + 16);
  int v15 = *v14;
  if (v15 == 176) {
    int v15 = v14[2];
  }
  int8x16_t v159 = v13;
  if (v15 == 138)
  {
    uint64_t v14 = (unsigned __int8 *)*((void *)v14 + 4);
  }
  else if (v15 != 177)
  {
    uint64_t v16 = 1;
    goto LABEL_9;
  }
  uint64_t v16 = **((unsigned int **)v14 + 4);
LABEL_9:
  uint64_t v17 = 5 * (int)v16;
  size_t v18 = v17 + 1;
  unsigned int v161 = v9;
  unsigned int v162 = v8;
  if (*a1) {
    uint64_t v19 = (void *)sub_1B0D05DC0((uint64_t)*a1, v17 + 1);
  }
  else {
    uint64_t v19 = (void *)sub_1B0C7FC94(v17 + 1);
  }
  uint64_t v22 = (uint64_t)v19;
  uint64_t v154 = v16;
  if (v19) {
    bzero(v19, v18);
  }
  int8x16_t v155 = (void *)v22;
  if (!*((unsigned char *)*a1 + 103))
  {
    uint64_t v23 = (uint64_t)a1[2];
    if (v161 == v162) {
      int v24 = 0;
    }
    else {
      int v24 = &v166;
    }
    int v25 = sub_1B0CC5010((uint64_t)a1, a2, 3, (uint64_t)v24, v22, &v164, v20, v21);
    int v32 = v25;
    *((unsigned char *)a1 + 35) = 0;
    int v33 = *v159;
    int v34 = v33;
    if (v33 == 176) {
      int v34 = v159[2];
    }
    int v165 = 0;
    if (v34 == 138)
    {
      int v35 = (unsigned int **)(*((void *)v159 + 4) + 32);
    }
    else
    {
      if (v34 != 177) {
        goto LABEL_30;
      }
      int v35 = (unsigned int **)(v159 + 32);
    }
    uint64_t v36 = **v35;
    if (v36 != 1)
    {
      if (v33 == 138)
      {
        uint64_t v37 = sub_1B0CC5A70(a1, v159, v26, v27, v28, v29, v30, v31);
      }
      else
      {
        int v38 = *((_DWORD *)a1 + 14);
        uint64_t v37 = (v38 + 1);
        *((_DWORD *)a1 + 14) = v38 + v36;
        if ((int)v36 >= 1)
        {
          int v156 = v25;
          uint64_t v39 = 0;
          uint64_t v40 = 24 * v36;
          uint64_t v41 = (v38 + 1);
          do
          {
            sub_1B0D35058(a1, *(void *)(*((void *)v159 + 4) + v39 + 8), v41);
            v39 += 24;
            uint64_t v41 = (v41 + 1);
          }
          while (v40 != v39);
          int v32 = v156;
        }
      }
LABEL_37:
      *((unsigned char *)a1 + 35) = v12;
      unsigned int v153 = v37;
      if ((int)v154 < 1)
      {
        LODWORD(v42) = 0;
      }
      else
      {
        uint64_t v42 = 0;
        while (v42 == *((_DWORD *)v155 + v42))
        {
          if (v154 == ++v42) {
            goto LABEL_58;
          }
        }
      }
      if (v42 != v154)
      {
        if (v154 == 1)
        {
          if (*((unsigned char *)a1 + 31))
          {
            unsigned __int8 v43 = *((unsigned char *)a1 + 31) - 1;
            *((unsigned char *)a1 + 31) = v43;
            uint64_t v37 = *((unsigned int *)a1 + v43 + 56);
          }
          else
          {
            uint64_t v37 = (*((_DWORD *)a1 + 14) + 1);
            *((_DWORD *)a1 + 14) = v37;
          }
        }
        else
        {
          int v44 = *((_DWORD *)a1 + 10);
          BOOL v45 = __OFSUB__(v44, v154);
          int v46 = v44 - v154;
          if (v46 < 0 != v45)
          {
            int v47 = *((_DWORD *)a1 + 14);
            uint64_t v37 = (v47 + 1);
            *((_DWORD *)a1 + 14) = v47 + v154;
          }
          else
          {
            uint64_t v37 = *((unsigned int *)a1 + 11);
            *((_DWORD *)a1 + 10) = v46;
            *((_DWORD *)a1 + 11) = v37 + v154;
          }
          if ((int)v154 < 1) {
            goto LABEL_58;
          }
        }
        uint64_t v48 = (int *)v155;
        uint64_t v49 = v153;
        uint64_t v50 = v154;
        do
        {
          int v52 = *v48++;
          uint64_t v27 = (v52 + v37);
          int v53 = *(_DWORD *)(v23 + 144);
          if (*(_DWORD *)(v23 + 148) > v53)
          {
            *(_DWORD *)(v23 + 144) = v53 + 1;
            uint64_t v51 = *(void *)(v23 + 136) + 40 * v53;
            *(_DWORD *)uint64_t v51 = 80;
            *(_DWORD *)(v51 + 4) = v49;
            *(_DWORD *)(v51 + 8) = v27;
            *(void *)(v51 + 12) = 0;
            *(void *)(v51 + 28) = 0;
            *(void *)(v51 + 20) = 0;
            *(_DWORD *)(v51 + 36) = 0;
          }
          else
          {
            sub_1B0D25510(v23, 80, v49, v27, 0, v29, v30, v31);
          }
          uint64_t v49 = (v49 + 1);
          --v50;
        }
        while (v50);
      }
LABEL_58:
      if (v32 == 5)
      {
        int v157 = *((_DWORD *)a1 + 17);
        *((_DWORD *)a1 + 17) = v157 - 1;
        int v163 = 0;
        uint64_t v54 = *(int **)(a2 + 32);
        uint64_t v58 = sub_1B0C9ADE0((uint64_t)a1, *(unsigned __int8 **)(a2 + 16), v26, v27, v28, v29, v30, v31);
        uint64_t v59 = 0;
        uint64_t v60 = v161;
        if (v161 != v162)
        {
          if (*((unsigned char *)a1 + 31))
          {
            unsigned __int8 v61 = *((unsigned char *)a1 + 31) - 1;
            *((unsigned char *)a1 + 31) = v61;
            uint64_t v59 = *((unsigned int *)a1 + v61 + 56);
          }
          else
          {
            uint64_t v59 = (*((_DWORD *)a1 + 14) + 1);
            *((_DWORD *)a1 + 14) = v59;
          }
          int v84 = *(_DWORD *)(v23 + 144);
          if (*(_DWORD *)(v23 + 148) <= v84)
          {
            sub_1B0D25510(v23, 102, v37, v37, v59, v55, v56, v57);
          }
          else
          {
            *(_DWORD *)(v23 + 144) = v84 + 1;
            uint64_t v85 = *(void *)(v23 + 136) + 40 * v84;
            *(_DWORD *)uint64_t v85 = 102;
            *(int32x2_t *)(v85 + 4) = vdup_n_s32(v37);
            *(_DWORD *)(v85 + 12) = v59;
            *(void *)(v85 + 24) = 0;
            *(void *)(v85 + 32) = 0;
            *(void *)(v85 + 16) = 0;
          }
        }
        if (*v54 < 1)
        {
LABEL_141:
          if (v59)
          {
            int v108 = *(_DWORD *)(v23 + 144);
            if (*(_DWORD *)(v23 + 148) <= v108)
            {
              sub_1B0D25510(v23, 50, v59, v162, 0, v55, v56, v57);
            }
            else
            {
              *(_DWORD *)(v23 + 144) = v108 + 1;
              uint64_t v109 = *(void *)(v23 + 136) + 40 * v108;
              *(_DWORD *)uint64_t v109 = 50;
              *(_DWORD *)(v109 + 4) = v59;
              *(_DWORD *)(v109 + 8) = v162;
              *(void *)(v109 + 12) = 0;
              *(void *)(v109 + 28) = 0;
              *(void *)(v109 + 20) = 0;
              *(_DWORD *)(v109 + 36) = 0;
            }
            int v110 = *(_DWORD *)(v23 + 144);
            if (*(_DWORD *)(v23 + 148) <= v110)
            {
              sub_1B0D25510(v23, 9, 0, v60, 0, v55, v56, v57);
            }
            else
            {
              *(_DWORD *)(v23 + 144) = v110 + 1;
              uint64_t v111 = *(void *)(v23 + 136) + 40 * v110;
              *(void *)uint64_t v111 = 9;
              *(_DWORD *)(v111 + 8) = v60;
              *(void *)(v111 + 12) = 0;
              *(void *)(v111 + 28) = 0;
              *(void *)(v111 + 20) = 0;
              *(_DWORD *)(v111 + 36) = 0;
            }
          }
          uint64_t v112 = *(void *)(v23 + 24);
          int v113 = -v157;
          if (*(_DWORD *)(v112 + 68) + *(_DWORD *)(v112 + 72) < 0)
          {
            sub_1B0D34EC8(v112, v23, v113);
            if (!v59) {
              goto LABEL_206;
            }
          }
          else
          {
            *(_DWORD *)(*(void *)(v112 + 80) + 4 * v113) = *(_DWORD *)(v23 + 144);
            if (!v59) {
              goto LABEL_206;
            }
          }
          uint64_t v114 = *((unsigned __int8 *)a1 + 31);
          if (v114 <= 7)
          {
            *((unsigned char *)a1 + 31) = v114 + 1;
            *((_DWORD *)a1 + v114 + 56) = v59;
          }
LABEL_206:
          if (v37 != v153)
          {
            if (v37)
            {
              uint64_t v150 = *((unsigned __int8 *)a1 + 31);
              if (v150 <= 7)
              {
                *((unsigned char *)a1 + 31) = v150 + 1;
                *((_DWORD *)a1 + v150 + 56) = v37;
              }
            }
          }
          goto LABEL_15;
        }
        uint64_t v86 = 0;
        while (1)
        {
          uint64_t v87 = &v54[6 * v86];
          int8x8_t v89 = (unsigned __int8 *)*((void *)v87 + 1);
          uint64_t v88 = (unsigned __int8 **)(v87 + 2);
          uint64_t v90 = sub_1B0D30948((uint64_t)a1, v89, &v163);
          uint64_t v94 = v90;
          if (!v59) {
            goto LABEL_124;
          }
          while (1)
          {
            uint64_t v95 = (uint64_t)*v88;
            int v96 = **v88;
            if ((v96 - 173) >= 2) {
              break;
            }
            uint64_t v88 = (unsigned __int8 **)(v95 + 16);
          }
          if (v96 == 176) {
            int v96 = *(unsigned __int8 *)(v95 + 2);
          }
          if ((v96 - 153) < 3) {
            goto LABEL_124;
          }
          if (v96 == 117) {
            goto LABEL_124;
          }
          if (v96 == 167 && (*(unsigned char *)(v95 + 6) & 0x20) == 0)
          {
            uint64_t v97 = *(void *)(v95 + 72);
            if (v97)
            {
              uint64_t v98 = *(unsigned int *)(v95 + 48);
              if ((v98 & 0x80000000) != 0) {
                goto LABEL_124;
              }
              uint64_t v99 = *(void *)(v97 + 8);
              if (!v99 || (*(unsigned char *)(v99 + 16 * v98 + 8) & 0xF) != 0) {
                goto LABEL_124;
              }
            }
          }
          int v100 = *(_DWORD *)(v23 + 144);
          if (*(_DWORD *)(v23 + 148) > v100) {
            break;
          }
          sub_1B0D25510(v23, 102, v59, v90, v59, v91, v92, v93);
          int v102 = v163;
          if (!v163) {
            goto LABEL_127;
          }
LABEL_125:
          uint64_t v103 = *((unsigned __int8 *)a1 + 31);
          if (v103 <= 7)
          {
            *((unsigned char *)a1 + 31) = v103 + 1;
            *((_DWORD *)a1 + v103 + 56) = v102;
          }
LABEL_127:
          uint64_t v60 = v161;
          if (v161 == v162 && v86 >= *v54 - 1)
          {
            if (v37 == v94) {
              uint64_t v104 = 50;
            }
            else {
              uint64_t v104 = 52;
            }
            sub_1B0CCB908((uint64_t *)v23, v104, v37, v161, v94, v58, 4294967294, v93);
            int v105 = *(_DWORD *)(v23 + 144);
            if (v105 < 1) {
              goto LABEL_108;
            }
            char v106 = *(unsigned char *)v160 | 0x10;
          }
          else
          {
            if (v37 == v94) {
              uint64_t v107 = 51;
            }
            else {
              uint64_t v107 = 53;
            }
            sub_1B0CCB908((uint64_t *)v23, v107, v37, (v157 - 1), v94, v58, 4294967294, v93);
            int v105 = *(_DWORD *)(v23 + 144);
            if (v105 < 1) {
              goto LABEL_108;
            }
            char v106 = *(unsigned char *)v160;
          }
          *(_WORD *)(*(void *)(v23 + 136) + 40 * (v105 - 1) + 2) = v106;
LABEL_108:
          if (++v86 >= *v54) {
            goto LABEL_141;
          }
        }
        *(_DWORD *)(v23 + 144) = v100 + 1;
        uint64_t v101 = *(void *)(v23 + 136) + 40 * v100;
        *(_DWORD *)uint64_t v101 = 102;
        *(_DWORD *)(v101 + 4) = v59;
        *(_DWORD *)(v101 + 8) = v90;
        *(_DWORD *)(v101 + 12) = v59;
        *(void *)(v101 + 24) = 0;
        *(void *)(v101 + 32) = 0;
        *(void *)(v101 + 16) = 0;
LABEL_124:
        int v102 = v163;
        if (!v163) {
          goto LABEL_127;
        }
        goto LABEL_125;
      }
      uint64_t v62 = v161;
      if (v161 == v162)
      {
        int v63 = 0;
      }
      else
      {
        uint64_t v62 = (*((_DWORD *)a1 + 17) - 1);
        *((_DWORD *)a1 + 17) = v62;
        int v63 = v62;
      }
      if ((int)v154 >= 1)
      {
        uint64_t v64 = 0;
        while (1)
        {
          uint64_t v66 = *(unsigned __int8 **)(a2 + 16);
          int v67 = *v66;
          int v68 = v67;
          if (v67 == 176) {
            int v68 = v66[2];
          }
          if (v68 == 138) {
            break;
          }
          if (v68 == 177)
          {
            uint64_t v69 = (int **)(v66 + 32);
            goto LABEL_75;
          }
LABEL_80:
          if (*((_DWORD *)a1 + 12)) {
            goto LABEL_15;
          }
          while (1)
          {
            int v70 = *v66;
            if ((v70 - 173) >= 2) {
              break;
            }
            uint64_t v66 = (unsigned __int8 *)*((void *)v66 + 2);
          }
          if (v70 == 176) {
            int v70 = v66[2];
          }
          if ((v70 - 153) >= 3 && v70 != 117)
          {
            if (v70 != 167
              || (v66[6] & 0x20) != 0
              || (uint64_t v71 = *((void *)v66 + 9)) == 0
              || (uint64_t v72 = *((unsigned int *)v66 + 12), (v72 & 0x80000000) == 0)
              && (uint64_t v73 = *(void *)(v71 + 8)) != 0
              && (*(unsigned char *)(v73 + 16 * v72 + 8) & 0xF) == 0)
            {
              uint64_t v26 = (v37 + v64);
              int v74 = *(_DWORD *)(v23 + 144);
              if (*(_DWORD *)(v23 + 148) > v74)
              {
                *(_DWORD *)(v23 + 144) = v74 + 1;
                uint64_t v65 = *(void *)(v23 + 136) + 40 * v74;
                *(_DWORD *)uint64_t v65 = 50;
                *(_DWORD *)(v65 + 4) = v26;
                *(_DWORD *)(v65 + 8) = v62;
                *(void *)(v65 + 12) = 0;
                *(void *)(v65 + 28) = 0;
                *(void *)(v65 + 20) = 0;
                *(_DWORD *)(v65 + 36) = 0;
              }
              else
              {
                sub_1B0D25510(v23, 50, v26, v62, 0, v29, v30, v31);
              }
            }
          }
          if (++v64 == v154) {
            goto LABEL_96;
          }
        }
        uint64_t v69 = (int **)(*((void *)v66 + 4) + 32);
LABEL_75:
        if (**v69 >= 2)
        {
          if (v67 == 138 || v66[2] == 138) {
            uint64_t v66 = (unsigned __int8 *)*((void *)v66 + 4);
          }
          uint64_t v66 = *(unsigned __int8 **)(*((void *)v66 + 4) + 24 * v64 + 8);
        }
        goto LABEL_80;
      }
LABEL_96:
      if (v32 == 1)
      {
        uint64_t v75 = v164;
        int v76 = *(_DWORD *)(v23 + 144);
        if (*(_DWORD *)(v23 + 148) <= v76)
        {
          uint64_t v78 = v161;
          sub_1B0D25510(v23, 30, v164, v161, v37, v29, v30, v31);
        }
        else
        {
          *(_DWORD *)(v23 + 144) = v76 + 1;
          uint64_t v77 = *(void *)(v23 + 136) + 40 * v76;
          *(_DWORD *)uint64_t v77 = 30;
          *(_DWORD *)(v77 + 4) = v75;
          uint64_t v78 = v161;
          *(_DWORD *)(v77 + 8) = v161;
          *(_DWORD *)(v77 + 12) = v37;
          *(void *)(v77 + 24) = 0;
          *(void *)(v77 + 32) = 0;
          *(void *)(v77 + 16) = 0;
        }
        unsigned int v82 = v162;
        int v115 = *(_DWORD *)(v23 + 144);
        int v79 = v154;
        if (*(_DWORD *)(v23 + 148) > v115)
        {
          int v151 = *(_DWORD *)(v23 + 144);
          *(_DWORD *)(v23 + 144) = v115 + 1;
          uint64_t v116 = *(void *)(v23 + 136) + 40 * v115;
          *(unsigned char *)uint64_t v116 = 9;
          *(_OWORD *)(v116 + 1) = 0u;
          *(_OWORD *)(v116 + 17) = 0u;
          *(void *)(v116 + 32) = 0;
          goto LABEL_160;
        }
        int v83 = sub_1B0D25510(v23, 9, 0, 0, 0, v29, v30, v31);
      }
      else
      {
        int v79 = v154;
        sub_1B0CCB908((uint64_t *)v23, 96, v37, v154, 0, (uint64_t)v160, v154, v31);
        uint64_t v75 = v164;
        uint64_t v78 = v161;
        unsigned int v82 = v162;
        if (v161 == v162)
        {
          sub_1B0CEF5FC(v23, 28, v164, v161, v37, v154, v80, v81);
          goto LABEL_206;
        }
        int v83 = sub_1B0CEF5FC(v23, 29, v164, 0, v37, v154, v80, v81);
      }
      int v151 = v83;
LABEL_160:
      if (v79 == 1)
      {
        uint64_t v26 = v166;
        if (v166) {
          sub_1B0D254B8(v23, 51, v166, v78, v28, v29, v30, v31);
        }
      }
      if (v78 == v82) {
        sub_1B0D2FAAC(v23, v78, v26, v27, v28, v29, v30, v31);
      }
      long long v117 = v159;
      if (v63)
      {
        uint64_t v118 = *(void *)(v23 + 24);
        uint64_t v26 = ~v63;
        if (*(_DWORD *)(v118 + 68) + *(_DWORD *)(v118 + 72) < 0) {
          sub_1B0D34EC8(v118, v23, v26);
        }
        else {
          *(_DWORD *)(*(void *)(v118 + 80) + 4 * (int)v26) = *(_DWORD *)(v23 + 144);
        }
      }
      int v119 = *(_DWORD *)(v23 + 144);
      if (*(_DWORD *)(v23 + 148) <= v119)
      {
        int v152 = sub_1B0D25510(v23, 36, v75, v78, 0, v29, v30, v31);
      }
      else
      {
        int v152 = *(_DWORD *)(v23 + 144);
        *(_DWORD *)(v23 + 144) = v119 + 1;
        uint64_t v120 = *(void *)(v23 + 136) + 40 * v119;
        *(_DWORD *)uint64_t v120 = 36;
        *(_DWORD *)(v120 + 4) = v75;
        *(_DWORD *)(v120 + 8) = v78;
        *(void *)(v120 + 12) = 0;
        *(void *)(v120 + 28) = 0;
        *(void *)(v120 + 20) = 0;
        *(_DWORD *)(v120 + 36) = 0;
      }
      if (v79 <= 1)
      {
        unsigned int v158 = v78;
        if (v79 < 1) {
          goto LABEL_197;
        }
      }
      else
      {
        unsigned int v158 = *((_DWORD *)a1 + 17) - 1;
        *((_DWORD *)a1 + 17) = v158;
      }
      int v121 = v37;
      uint64_t v37 = v75;
      uint64_t v122 = 0;
      unsigned __int16 v123 = v159 + 32;
      uint64_t v124 = 8;
      while (1)
      {
        if (*((unsigned char *)a1 + 31))
        {
          unsigned __int8 v125 = *((unsigned char *)a1 + 31) - 1;
          *((unsigned char *)a1 + 31) = v125;
          uint64_t v126 = *((unsigned int *)a1 + v125 + 56);
        }
        else
        {
          uint64_t v126 = (*((_DWORD *)a1 + 14) + 1);
          *((_DWORD *)a1 + 14) = v126;
        }
        int v127 = *v117;
        int v128 = v127;
        if (v127 == 176) {
          int v128 = v117[2];
        }
        int v129 = (int **)(v159 + 32);
        if (v128 == 177) {
          goto LABEL_185;
        }
        uint64_t v130 = v117;
        if (v128 == 138) {
          break;
        }
LABEL_190:
        uint64_t v135 = sub_1B0C9ADE0((uint64_t)a1, v130, v26, v27, v28, v29, v30, v31);
        int v136 = *(_DWORD *)(v23 + 144);
        if (*(_DWORD *)(v23 + 148) <= v136)
        {
          sub_1B0D25510(v23, 94, v37, v122, v126, v132, v133, v134);
        }
        else
        {
          *(_DWORD *)(v23 + 144) = v136 + 1;
          uint64_t v137 = *(void *)(v23 + 136) + 40 * v136;
          *(_DWORD *)uint64_t v137 = 94;
          *(_DWORD *)(v137 + 4) = v37;
          *(_DWORD *)(v137 + 8) = v122;
          *(_DWORD *)(v137 + 12) = v126;
          *(void *)(v137 + 24) = 0;
          *(void *)(v137 + 32) = 0;
          *(void *)(v137 + 16) = 0;
        }
        sub_1B0CCB908((uint64_t *)v23, 52, (v122 + v121), v158, v126, v135, 4294967294, v134);
        if (v126)
        {
          uint64_t v138 = *((unsigned __int8 *)a1 + 31);
          if (v138 <= 7)
          {
            *((unsigned char *)a1 + 31) = v138 + 1;
            *((_DWORD *)a1 + v138 + 56) = v126;
          }
        }
        ++v122;
        v124 += 24;
        long long v117 = v159;
        if (v79 == v122)
        {
          uint64_t v78 = v161;
          int v79 = v154;
          uint64_t v75 = v37;
          LODWORD(v37) = v121;
LABEL_197:
          int v139 = *(_DWORD *)(v23 + 144);
          if (*(_DWORD *)(v23 + 148) <= v139)
          {
            sub_1B0D25510(v23, 9, 0, v162, 0, v29, v30, v31);
          }
          else
          {
            *(_DWORD *)(v23 + 144) = v139 + 1;
            uint64_t v140 = *(void *)(v23 + 136) + 40 * v139;
            *(void *)uint64_t v140 = 9;
            *(_DWORD *)(v140 + 8) = v162;
            *(void *)(v140 + 12) = 0;
            *(void *)(v140 + 28) = 0;
            *(void *)(v140 + 20) = 0;
            *(_DWORD *)(v140 + 36) = 0;
          }
          if (v79 >= 2)
          {
            sub_1B0D31504(v23, v158);
            sub_1B0D254B8(v23, 39, v75, (v152 + 1), v141, v142, v143, v144);
            sub_1B0D254B8(v23, 9, 0, v78, v145, v146, v147, v148);
          }
          if (*(unsigned char *)(*(void *)v23 + 103)) {
            int8x16_t v149 = &byte_1E9B52240;
          }
          else {
            int8x16_t v149 = (char *)(*(void *)(v23 + 136) + 40 * v151);
          }
          *((_DWORD *)v149 + 2) = *(_DWORD *)(v23 + 144);
          goto LABEL_206;
        }
      }
      int v129 = (int **)(*v123 + 32);
LABEL_185:
      uint64_t v130 = v117;
      if (**v129 >= 2)
      {
        if (v127 == 138 || (long long v131 = v159 + 32, v117[2] == 138)) {
          long long v131 = (void *)(*v123 + 32);
        }
        uint64_t v130 = *(unsigned __int8 **)(*v131 + v124);
      }
      goto LABEL_190;
    }
LABEL_30:
    uint64_t v37 = sub_1B0D30948((uint64_t)a1, v159, &v165);
    goto LABEL_37;
  }
LABEL_15:
  if (v155) {
    sub_1B0D05C10(*a1, v155);
  }
  if (v160) {
    sub_1B0D05C10(*a1, v160);
  }
}

uint64_t sub_1B0CC5010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (_DWORD *)a4;
  char v11 = a3;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    if (!*(void *)(a1 + 168) && (*(unsigned char *)(*(void *)a1 + 96) & 8) == 0) {
      *(unsigned char *)(a1 + 35) = 1;
    }
    uint64_t v14 = sub_1B0CEF480((uint64_t *)a1, a2, a3, a4, a5, (uint64_t)a6, a7, a8);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 52);
  *(_DWORD *)(a1 + 52) = v15 + 1;
  if (v10 && (*(unsigned char *)(a2 + 5) & 0x10) != 0)
  {
    uint64_t v16 = *(_DWORD **)(*(void *)(a2 + 32) + 32);
    uint64_t v17 = *v16;
    if ((int)v17 < 1)
    {
      LODWORD(v18) = 0;
    }
    else
    {
      uint64_t v18 = 0;
      while (1)
      {
        for (int i = (unsigned __int8 **)&v16[6 * v18 + 2]; ; int i = (unsigned __int8 **)(v20 + 16))
        {
          uint64_t v20 = *i;
          int v21 = *v20;
          if ((v21 - 173) >= 2) {
            break;
          }
        }
        if (v21 == 176) {
          int v21 = v20[2];
        }
        if ((v21 - 153) >= 3 && v21 != 117)
        {
          if (v21 != 167) {
            break;
          }
          if ((v20[6] & 0x20) != 0) {
            break;
          }
          uint64_t v22 = *((void *)v20 + 9);
          if (!v22) {
            break;
          }
          uint64_t v23 = *((unsigned int *)v20 + 12);
          if ((v23 & 0x80000000) == 0)
          {
            uint64_t v24 = *(void *)(v22 + 8);
            if (v24)
            {
              if ((*(unsigned char *)(v24 + 16 * v23 + 8) & 0xF) == 0) {
                break;
              }
            }
          }
        }
        if (++v18 == v17)
        {
          LODWORD(v18) = *v16;
          break;
        }
      }
    }
    if (v18 == v17) {
      uint64_t v10 = 0;
    }
  }
  if (*(_DWORD *)(a1 + 48)) {
    goto LABEL_38;
  }
  if ((*(_DWORD *)(a2 + 4) & 0x1040) != 0x1000) {
    goto LABEL_38;
  }
  uint64_t v25 = *(void *)(a2 + 32);
  if (*(void *)(v25 + 80)) {
    goto LABEL_38;
  }
  if ((*(unsigned char *)(v25 + 4) & 9) != 0) {
    goto LABEL_38;
  }
  if (*(void *)(v25 + 96)) {
    goto LABEL_38;
  }
  if (*(void *)(v25 + 48)) {
    goto LABEL_38;
  }
  uint64_t v26 = *(void *)(v25 + 40);
  if (*(_DWORD *)v26 != 1) {
    goto LABEL_38;
  }
  if (*(void *)(v26 + 48)) {
    goto LABEL_38;
  }
  uint64_t v27 = *(void *)(v26 + 40);
  if (*(unsigned char *)(v27 + 63) == 1) {
    goto LABEL_38;
  }
  int v127 = *(unsigned int **)(v25 + 32);
  LODWORD(v50) = *v127;
  if ((int)*v127 >= 1)
  {
    uint64_t v51 = (unsigned __int8 **)(v127 + 2);
    uint64_t v52 = *v127;
    do
    {
      if (**v51 != 167) {
        goto LABEL_38;
      }
      v51 += 3;
      --v52;
    }
    while (v52);
    if (!v25)
    {
LABEL_38:
      if ((v11 & 1) != 0 && (*(unsigned char *)(a2 + 5) & 0x10) == 0)
      {
        uint64_t v28 = *(void *)(a2 + 16);
        *(void *)(a2 + 16) = 0;
        v132[3] = 0;
        long long v133 = 0u;
        v132[0] = 0;
        WORD2(v133) = 1;
        v132[1] = sub_1B0CADEA4;
        v132[2] = sub_1B0D32AA8;
        sub_1B0D32AB4((uint64_t)v132, a2);
        int v29 = WORD2(v133);
        *(void *)(a2 + 16) = v28;
        if (!v29 || **(int **)(a2 + 32) <= 2)
        {
          --*(_DWORD *)(a1 + 52);
          uint64_t result = 5;
          LODWORD(v15) = -1;
          goto LABEL_50;
        }
      }
      __int16 v31 = *(_WORD *)(a1 + 216);
      if ((v11 & 4) != 0)
      {
        *(_WORD *)(a1 + 216) = 0;
      }
      else if (v10)
      {
        int v32 = *(_DWORD *)(a1 + 56);
        uint64_t v33 = (v32 + 1);
        BOOL v34 = v32 == -1;
        *(_DWORD *)(a1 + 56) = v33;
        *uint64_t v10 = v33;
        sub_1B0D33FE8((uint64_t *)a1, a2, v15, a4, a5, (uint64_t)a6, a7, a8);
        if (!v34) {
          sub_1B0D33E68(v14, v15, v33, v35, v36, v37, v38, v39);
        }
        goto LABEL_49;
      }
      sub_1B0D33FE8((uint64_t *)a1, a2, v15, a4, a5, (uint64_t)a6, a7, a8);
LABEL_49:
      *(_WORD *)(a1 + 216) = v31;
      uint64_t result = 2;
      goto LABEL_50;
    }
  }
  uint64_t v53 = *(void *)(v27 + 96);
  if (v53)
  {
    uint64_t v54 = (uint64_t *)(*(void *)(*(void *)a1 + 32) + 24);
    LODWORD(v55) = -1;
    do
    {
      uint64_t v56 = *v54;
      v54 += 4;
      uint64_t v55 = (v55 + 1);
    }
    while (v56 != v53);
  }
  else
  {
    uint64_t v55 = 4294934528;
  }
  if (*(void *)(a1 + 168)) {
    uint64_t v57 = *(void *)(a1 + 168);
  }
  else {
    uint64_t v57 = a1;
  }
  int v58 = *(_DWORD *)(v57 + 124);
  unint64_t v124 = *v127;
  if ((v58 & (1 << v55)) != 0)
  {
    if (v55 == 1) {
      goto LABEL_87;
    }
  }
  else
  {
    *(_DWORD *)(v57 + 124) = v58 | (1 << v55);
    if (v55 == 1)
    {
      sub_1B0D0E7A4(v57);
LABEL_86:
      LODWORD(v50) = v124;
      goto LABEL_87;
    }
  }
  if (*(unsigned char *)(*(void *)(*(void *)(*(void *)a1 + 32) + 32 * (int)v55 + 8) + 17))
  {
    sub_1B0D2FBBC(a1, v55, *(_DWORD *)(v27 + 40), 0, *(void *)v27);
    goto LABEL_86;
  }
LABEL_87:
  uint64_t v120 = v55;
  uint64_t v122 = v27;
  if (v50 == 1)
  {
    if ((*(_DWORD *)(*((void *)v127 + 1) + 48) & 0x80000000) != 0)
    {
      int v59 = *(_DWORD *)(v14 + 144);
      if (*(_DWORD *)(v14 + 148) <= v59)
      {
        int v59 = sub_1B0D25510(v14, 15, 0, 0, 0, (uint64_t)a6, a7, a8);
      }
      else
      {
        *(_DWORD *)(v14 + 144) = v59 + 1;
        uint64_t v60 = *(void *)(v14 + 136) + 40 * v59;
        *(unsigned char *)uint64_t v60 = 15;
        *(_OWORD *)(v60 + 1) = 0u;
        *(_OWORD *)(v60 + 17) = 0u;
        *(void *)(v60 + 32) = 0;
      }
      sub_1B0C9CD14((void *)a1, v15, v55, v27, 112, (uint64_t)a6, a7, a8);
      sub_1B0D33724((uint64_t *)a1, 0, "USING ROWID SEARCH ON TABLE %s FOR IN-OPERATOR", v96, v97, v98, v99, v100, *(void *)v27);
      if (*(unsigned char *)(*(void *)v14 + 103)) {
        uint64_t v101 = &byte_1E9B52240;
      }
      else {
        uint64_t v101 = (char *)(*(void *)(v14 + 136) + 40 * v59);
      }
      *((_DWORD *)v101 + 2) = *(_DWORD *)(v14 + 144);
      uint64_t result = 1;
      goto LABEL_50;
    }
  }
  else if ((int)v50 < 1)
  {
    goto LABEL_131;
  }
  unsigned __int8 v61 = *(unsigned __int8 **)(a2 + 16);
  int v125 = *v61;
  int v128 = (int **)(v61 + 32);
  uint64_t v62 = 2;
  uint64_t v63 = 1;
  int v121 = v61;
  do
  {
    int v70 = v125;
    if (v125 == 176) {
      int v70 = v61[2];
    }
    uint64_t v71 = v128;
    if (v70 != 177)
    {
      uint64_t v72 = v61;
      if (v70 != 138) {
        goto LABEL_117;
      }
      uint64_t v71 = (int **)(*v128 + 8);
    }
    uint64_t v72 = v61;
    if (**v71 >= 2)
    {
      if (v125 == 138 || (uint64_t v73 = v128, v61[2] == 138)) {
        uint64_t v73 = (int **)(*v128 + 8);
      }
      uint64_t v72 = *(unsigned __int8 **)&(*v73)[v62];
    }
LABEL_117:
    uint64_t v74 = *(unsigned int *)(*(void *)&v127[v62] + 48);
    uint64_t v130 = v63;
    if ((v74 & 0x80000000) != 0 || (int)v74 >= *(__int16 *)(v27 + 54)) {
      unsigned int v75 = 68;
    }
    else {
      unsigned int v75 = *(unsigned __int8 *)(*(void *)(v27 + 8) + 16 * v74 + 9);
    }
    int v76 = sub_1B0CB5528(v72);
    if ((char)v75 < 65 || v76 < 65)
    {
      if (v76 >= 65) {
        char v64 = v76;
      }
      else {
        char v64 = v75;
      }
      char v65 = v64 | 0x40;
      unint64_t v50 = v124;
      unsigned __int8 v61 = v121;
      unint64_t v66 = v130;
    }
    else
    {
      if (v76 > 0x42 || v75 > 0x42) {
        char v65 = 67;
      }
      else {
        char v65 = 65;
      }
      unint64_t v50 = v124;
      unsigned __int8 v61 = v121;
      unint64_t v66 = v130;
    }
    BOOL v68 = (v65 - 65) < 2 || (char)v75 > 66;
    v62 += 6;
    BOOL v69 = !v68 || v66 >= v50;
    uint64_t v63 = v66 + 1;
    uint64_t v27 = v122;
  }
  while (!v69);
  if (!v68) {
    goto LABEL_38;
  }
LABEL_131:
  uint64_t v78 = *(void *)(v27 + 16);
  if (!v78) {
    goto LABEL_38;
  }
  uint64_t v123 = ~(-1 << v50);
  while (1)
  {
    int v80 = *(unsigned __int16 *)(v78 + 96);
    if ((int)v50 <= v80)
    {
      BOOL v81 = v80 <= 0x3E && *(void *)(v78 + 72) == 0;
      if (v81
        && ((v11 & 4) == 0 || (int)v50 >= *(unsigned __int16 *)(v78 + 94) && ((int)v50 >= v80 || *(unsigned char *)(v78 + 98))))
      {
        uint64_t v126 = v78;
        if ((int)v50 >= 1)
        {
          uint64_t v82 = 0;
          uint64_t v79 = 0;
          while (1)
          {
            int v83 = *(unsigned __int8 **)(a2 + 16);
            int v84 = *v83;
            int v85 = v84;
            if (v84 == 176) {
              int v85 = v83[2];
            }
            uint64_t v131 = v79;
            if (v85 == 138)
            {
              uint64_t v86 = (int **)(*((void *)v83 + 4) + 32);
            }
            else
            {
              if (v85 != 177) {
                goto LABEL_161;
              }
              uint64_t v86 = (int **)(v83 + 32);
            }
            if (**v86 >= 2)
            {
              if (v84 == 138 || v83[2] == 138) {
                uint64_t v87 = (void *)(*((void *)v83 + 4) + 32);
              }
              else {
                uint64_t v87 = v83 + 32;
              }
              int v83 = *(unsigned __int8 **)(*v87 + 24 * v82 + 8);
            }
LABEL_161:
            uint64_t v88 = *(unsigned __int8 **)&v127[6 * v82 + 2];
            uint64_t v129 = v82;
            if ((v83[5] & 2) != 0)
            {
              uint64_t v90 = a1;
              goto LABEL_167;
            }
            if (v88 && (v88[5] & 2) != 0
              || (int8x8_t v89 = (unsigned char **)sub_1B0C9ADE0(a1, v83, a3, a4, a5, (uint64_t)a6, a7, a8)) == 0)
            {
              uint64_t v90 = a1;
              int v83 = v88;
LABEL_167:
              int8x8_t v89 = (unsigned char **)sub_1B0C9ADE0(v90, v83, a3, a4, a5, (uint64_t)a6, a7, a8);
            }
            uint64_t v91 = 0;
            LODWORD(v50) = v124;
            uint64_t v78 = v126;
            uint64_t v79 = v131;
            while (*((_DWORD *)v88 + 12) != *(__int16 *)(*(void *)(v126 + 8) + 2 * v91))
            {
LABEL_169:
              if (++v91 == v124) {
                goto LABEL_134;
              }
            }
            if (v89)
            {
              uint64_t v92 = *v89;
              for (uint64_t j = *(unsigned __int8 **)(*(void *)(v126 + 64) + 8 * v91); ; ++j)
              {
                uint64_t v94 = *v92;
                uint64_t v95 = *j;
                if (v94 == v95)
                {
                  if (!*v92) {
                    break;
                  }
                }
                else if (byte_1B0DE1758[v94] != byte_1B0DE1758[v95])
                {
                  goto LABEL_169;
                }
                ++v92;
              }
            }
            if (v124 != v91 && ((1 << v91) & v131) == 0)
            {
              if (a5) {
                *(_DWORD *)(a5 + 4 * v129) = v91;
              }
              uint64_t v79 = (1 << v91) | v131;
              uint64_t v82 = v129 + 1;
              if (v129 + 1 != v124) {
                continue;
              }
            }
            goto LABEL_134;
          }
        }
        uint64_t v79 = 0;
LABEL_134:
        if (v79 == v123) {
          break;
        }
      }
    }
    uint64_t v78 = *(void *)(v78 + 40);
    if (!v78) {
      goto LABEL_38;
    }
  }
  int v102 = *(_DWORD *)(v14 + 144);
  if (*(_DWORD *)(v14 + 148) <= v102)
  {
    int v102 = sub_1B0D25510(v14, 15, 0, 0, 0, (uint64_t)a6, a7, a8);
  }
  else
  {
    *(_DWORD *)(v14 + 144) = v102 + 1;
    uint64_t v103 = *(void *)(v14 + 136) + 40 * v102;
    *(unsigned char *)uint64_t v103 = 15;
    *(_OWORD *)(v103 + 1) = 0u;
    *(_OWORD *)(v103 + 17) = 0u;
    *(void *)(v103 + 32) = 0;
  }
  sub_1B0D33724((uint64_t *)a1, 0, "USING INDEX %s FOR IN-OPERATOR", a4, a5, (uint64_t)a6, a7, a8, *(void *)v126);
  uint64_t v107 = *(unsigned int *)(v126 + 88);
  int v108 = *(_DWORD *)(v14 + 144);
  if (*(_DWORD *)(v14 + 148) <= v108)
  {
    sub_1B0D25510(v14, 112, v15, v107, v120, v104, v105, v106);
  }
  else
  {
    *(_DWORD *)(v14 + 144) = v108 + 1;
    uint64_t v109 = *(void *)(v14 + 136) + 40 * v108;
    *(_DWORD *)uint64_t v109 = 112;
    *(_DWORD *)(v109 + 4) = v15;
    *(_DWORD *)(v109 + 8) = v107;
    *(_DWORD *)(v109 + 12) = v120;
    *(void *)(v109 + 24) = 0;
    *(void *)(v109 + 32) = 0;
    *(void *)(v109 + 16) = 0;
  }
  uint64_t v110 = *(void *)(a1 + 16);
  uint64_t v111 = sub_1B0D2FDAC((_DWORD *)a1, v126);
  if (v111)
  {
    if (*(unsigned char *)(*(void *)v110 + 103))
    {
      if (!*(void *)(*(void *)v110 + 816))
      {
        BOOL v81 = (*(_DWORD *)v111)-- == 1;
        if (v81) {
          sub_1B0D15C20(*(void **)(v111 + 16), (void *)v111);
        }
      }
    }
    else
    {
      uint64_t v117 = *(void *)(v110 + 136) + 40 * *(int *)(v110 + 144);
      *(unsigned char *)(v117 - 39) = -8;
      *(void *)(v117 - 24) = v111;
    }
  }
  int v118 = **(unsigned __int8 **)(v126 + 56);
  if (v10)
  {
    uint64_t v119 = (*(_DWORD *)(a1 + 56) + 1);
    *(_DWORD *)(a1 + 56) = v119;
    *uint64_t v10 = v119;
    if (v124 == 1) {
      sub_1B0D33E68(v14, v15, v119, v112, v113, v114, v115, v116);
    }
  }
  uint64_t result = (v118 + 3);
  if (*(unsigned char *)(*(void *)v14 + 103)) {
    dword_1E9B52248 = *(_DWORD *)(v14 + 144);
  }
  else {
    *(_DWORD *)(*(void *)(v14 + 136) + 40 * v102 + 8) = *(_DWORD *)(v14 + 144);
  }
LABEL_50:
  if (a5 && (result - 5) <= 0xFFFFFFFD)
  {
    uint64_t v40 = *(unsigned __int8 **)(a2 + 16);
    int v41 = *v40;
    if (v41 == 176) {
      int v41 = v40[2];
    }
    if (v41 == 138)
    {
      uint64_t v40 = (unsigned __int8 *)*((void *)v40 + 4);
    }
    else if (v41 != 177)
    {
      int v42 = 1;
      goto LABEL_59;
    }
    int v42 = **((_DWORD **)v40 + 4);
    if (v42 >= 1)
    {
LABEL_59:
      uint64_t v43 = v42;
      if (v42 < 8)
      {
        uint64_t v44 = 0;
        goto LABEL_64;
      }
      uint64_t v44 = v42 & 0x7FFFFFF8;
      int32x4_t v45 = (int32x4_t)xmmword_1B0DE1640;
      int v46 = (int32x4_t *)(a5 + 16);
      v47.i64[0] = 0x400000004;
      v47.i64[1] = 0x400000004;
      v48.i64[0] = 0x800000008;
      v48.i64[1] = 0x800000008;
      uint64_t v49 = v43 & 0xFFFFFFF8;
      do
      {
        v46[-1] = v45;
        *int v46 = vaddq_s32(v45, v47);
        int32x4_t v45 = vaddq_s32(v45, v48);
        v46 += 2;
        v49 -= 8;
      }
      while (v49);
      for (; v43 != v44; ++v44)
LABEL_64:
        *(_DWORD *)(a5 + 4 * v44) = v44;
    }
  }
  *a6 = v15;
  return result;
}

uint64_t sub_1B0CC5A70(void **a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*((_DWORD *)a1 + 12)) {
    return 0;
  }
  uint64_t v12 = (uint64_t)a1[2];
  uint64_t v83 = 0;
  long long v81 = 0u;
  long long v82 = 0u;
  uint64_t v13 = *((void *)a2 + 4);
  int v14 = *((_DWORD *)a2 + 1);
  if ((v14 & 0x2000000) != 0)
  {
    sub_1B0D33724((uint64_t *)a1, 0, "REUSE SUBQUERY %d", a4, a5, a6, a7, a8, *(_DWORD *)(v13 + 16));
    uint64_t v23 = *((unsigned int *)a2 + 18);
    uint64_t v22 = *((unsigned int *)a2 + 19);
    int v24 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v24)
    {
      sub_1B0D25510(v12, 10, v22, v23, 0, v19, v20, v21);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v24 + 1;
      uint64_t v25 = *(void *)(v12 + 136) + 40 * v24;
      *(_DWORD *)uint64_t v25 = 10;
      *(_DWORD *)(v25 + 4) = v22;
      *(_DWORD *)(v25 + 8) = v23;
      *(void *)(v25 + 12) = 0;
      *(void *)(v25 + 28) = 0;
      *(void *)(v25 + 20) = 0;
      *(_DWORD *)(v25 + 36) = 0;
    }
    return *((unsigned int *)a2 + 11);
  }
  *((_DWORD *)a2 + 1) = v14 | 0x2000000;
  uint64_t v15 = (*((_DWORD *)a1 + 14) + 1);
  *((_DWORD *)a1 + 14) = v15;
  *((_DWORD *)a2 + 19) = v15;
  int v16 = *(_DWORD *)(v12 + 144);
  if (*(_DWORD *)(v12 + 148) <= v16)
  {
    int v17 = sub_1B0D25510(v12, 74, 0, v15, 0, a6, a7, a8) + 1;
  }
  else
  {
    int v17 = v16 + 1;
    *(_DWORD *)(v12 + 144) = v16 + 1;
    uint64_t v18 = *(void *)(v12 + 136) + 40 * v16;
    *(void *)uint64_t v18 = 74;
    *(_DWORD *)(v18 + 8) = v15;
    *(void *)(v18 + 12) = 0;
    *(void *)(v18 + 28) = 0;
    *(void *)(v18 + 20) = 0;
    *(_DWORD *)(v18 + 36) = 0;
  }
  *((_DWORD *)a2 + 18) = v17;
  if ((a2[4] & 0x40) != 0)
  {
    int v26 = 0;
  }
  else
  {
    int v26 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v26)
    {
      int v26 = sub_1B0D25510(v12, 15, 0, 0, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v26 + 1;
      uint64_t v27 = *(void *)(v12 + 136) + 40 * v26;
      *(unsigned char *)uint64_t v27 = 15;
      *(_OWORD *)(v27 + 1) = 0u;
      *(_OWORD *)(v27 + 17) = 0u;
      *(void *)(v27 + 32) = 0;
    }
  }
  uint64_t v28 = &byte_1B0DE9952;
  if (!v26) {
    uint64_t v28 = "CORRELATED ";
  }
  int v29 = sub_1B0D33724((uint64_t *)a1, 1, "%sSCALAR SUBQUERY %d", v15, a5, a6, a7, a8, (char)v28);
  int v33 = v29;
  if ((*(unsigned char *)(*(void *)v12 + 49) & 4) != 0)
  {
    uint64_t v34 = *(unsigned int *)(v12 + 392);
    uint64_t v35 = 56 * v34;
    int v36 = v34 + 1;
    while (--v36 >= 1)
    {
      uint64_t v37 = v35 - 56;
      uint64_t v38 = *(void *)(v12 + 400);
      int v39 = *(_DWORD *)(v38 + v35 - 56);
      v35 -= 56;
      if (v39 == v29)
      {
        if (v29 >= 1) {
          *(_DWORD *)(v38 + v37 + 28) = v29;
        }
        break;
      }
    }
  }
  int v40 = *a2;
  if (v40 == 138) {
    int v41 = **(_DWORD **)(v13 + 32);
  }
  else {
    int v41 = 1;
  }
  int v42 = *((_DWORD *)a1 + 14);
  uint64_t v43 = (v42 + 1);
  *((void *)&v82 + 1) = 0;
  DWORD1(v81) = v42 + 1;
  *((void *)&v81 + 1) = 0;
  LODWORD(v82) = 0;
  uint64_t v44 = (v42 + v41);
  *((_DWORD *)a1 + 14) = v44;
  if (v40 == 138)
  {
    LOBYTE(v81) = 10;
    HIDWORD(v81) = v42 + 1;
    LODWORD(v82) = v41;
    int v45 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) > v45)
    {
      *(_DWORD *)(v12 + 144) = v45 + 1;
      uint64_t v46 = *(void *)(v12 + 136) + 40 * v45;
      *(void *)uint64_t v46 = 75;
      *(_DWORD *)(v46 + 8) = v43;
      *(_DWORD *)(v46 + 12) = v44;
      *(void *)(v46 + 24) = 0;
      *(void *)(v46 + 32) = 0;
      *(void *)(v46 + 16) = 0;
      goto LABEL_36;
    }
    uint64_t v49 = v12;
    uint64_t v50 = 75;
  }
  else
  {
    LOBYTE(v81) = 3;
    int v47 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) > v47)
    {
      *(_DWORD *)(v12 + 144) = v47 + 1;
      uint64_t v48 = *(void *)(v12 + 136) + 40 * v47;
      *(void *)uint64_t v48 = 71;
      *(_DWORD *)(v48 + 8) = v43;
      *(void *)(v48 + 12) = 0;
      *(void *)(v48 + 28) = 0;
      *(void *)(v48 + 20) = 0;
      *(_DWORD *)(v48 + 36) = 0;
      goto LABEL_36;
    }
    uint64_t v49 = v12;
    uint64_t v50 = 71;
    uint64_t v44 = 0;
  }
  sub_1B0D25510(v49, v50, 0, v43, v44, v30, v31, v32);
LABEL_36:
  uint64_t v51 = (uint64_t)*a1;
  if (!*(void *)(v13 + 96))
  {
    int v84 = "1";
    uint64_t v85 = 1;
    uint64_t v56 = sub_1B0C904D8(v51, 155, (uint64_t)&v84, 0);
    *(void *)(v13 + 96) = sub_1B0D28CCC((uint64_t *)a1, 148, v56, 0);
    goto LABEL_51;
  }
  int v84 = "0";
  uint64_t v85 = 1;
  uint64_t v52 = sub_1B0C904D8(v51, 155, (uint64_t)&v84, 0);
  if (v52)
  {
    uint64_t v53 = v52;
    *(unsigned char *)(v52 + 1) = 67;
    uint64_t v54 = *(unsigned __int8 **)(*(void *)(v13 + 96) + 16);
    if (v54) {
      uint64_t v55 = sub_1B0CAE048(v51, v54, 0, 0);
    }
    else {
      uint64_t v55 = 0;
    }
    uint64_t v57 = sub_1B0D28CCC((uint64_t *)a1, 52, (uint64_t)v55, v53);
  }
  else
  {
    uint64_t v57 = 0;
  }
  int v58 = *(unsigned __int8 **)(*(void *)(v13 + 96) + 16);
  if (!*a1)
  {
    int v59 = (void *)sub_1B0C7FC94(24);
    if (v59) {
      goto LABEL_46;
    }
LABEL_48:
    if (v58) {
      sub_1B0D1DF88(*a1, v58);
    }
    goto LABEL_50;
  }
  int v59 = (void *)sub_1B0D05DC0((uint64_t)*a1, 0x18uLL);
  if (!v59) {
    goto LABEL_48;
  }
LABEL_46:
  void *v59 = a1[24];
  a1[24] = v59;
  v59[1] = v58;
  v59[2] = sub_1B0C9AA88;
LABEL_50:
  *(void *)(*(void *)(v13 + 96) + 16) = v57;
LABEL_51:
  *(_DWORD *)(v13 + 8) = 0;
  if (sub_1B0C9110C(a1, v13, &v81))
  {
    uint64_t v8 = 0;
    a2[2] = *a2;
    *a2 = -74;
  }
  else
  {
    uint64_t v8 = DWORD1(v81);
    *((_DWORD *)a2 + 11) = DWORD1(v81);
    uint64_t v63 = *(void *)v12;
    if (v26)
    {
      if (*(unsigned char *)(v63 + 103)) {
        char v64 = &byte_1E9B52240;
      }
      else {
        char v64 = (char *)(*(void *)(v12 + 136) + 40 * v26);
      }
      *((_DWORD *)v64 + 2) = *(_DWORD *)(v12 + 144);
    }
    if ((*(unsigned char *)(v63 + 49) & 4) != 0)
    {
      unsigned int v65 = *(_DWORD *)(v12 + 392);
      uint64_t v66 = 56 * v65 + 20;
      unsigned int v67 = v65 + 1;
      while ((int)--v67 >= 1)
      {
        uint64_t v68 = v66 - 56;
        uint64_t v69 = *(void *)(v12 + 400);
        int v70 = *(_DWORD *)(v69 + v66 - 76);
        v66 -= 56;
        if (v70 == v33)
        {
          int v71 = *(_DWORD *)(v12 + 144);
          uint64_t v72 = v69 + v68;
          uint64_t v73 = (int *)(v69 + v68 - 16);
          if (*v73)
          {
            int v75 = *(_DWORD *)(v72 - 8);
            uint64_t v74 = (int *)(v72 - 8);
            if (v75)
            {
              uint64_t v73 = (int *)(v69 + v68);
              if (*(_DWORD *)(v69 + v68)) {
                break;
              }
              uint64_t v76 = 5;
            }
            else
            {
              uint64_t v76 = 3;
              uint64_t v73 = v74;
            }
          }
          else
          {
            uint64_t v76 = 1;
          }
          *uint64_t v73 = v33;
          *(_DWORD *)(v69 + 4 * v76 + v68 - 16) = v71 - 1;
          break;
        }
      }
    }
    uint64_t v78 = *((unsigned int *)a2 + 18);
    uint64_t v77 = *((unsigned int *)a2 + 19);
    int v79 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v79)
    {
      sub_1B0D25510(v12, 67, v77, v78, 1, v60, v61, v62);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v79 + 1;
      uint64_t v80 = *(void *)(v12 + 136) + 40 * v79;
      *(_DWORD *)uint64_t v80 = 67;
      *(_DWORD *)(v80 + 4) = v77;
      *(_DWORD *)(v80 + 8) = v78;
      *(_DWORD *)(v80 + 12) = 1;
      *(void *)(v80 + 24) = 0;
      *(void *)(v80 + 32) = 0;
      *(void *)(v80 + 16) = 0;
    }
    *((unsigned char *)a1 + 31) = 0;
    *((_DWORD *)a1 + 10) = 0;
  }
  return v8;
}

void sub_1B0CC6050(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *(void *)(a1 + 16);
  if ((*(unsigned char *)(a2 + 5) & 8) != 0)
  {
    unsigned int v25 = *(_DWORD *)(a2 + 8);
    if (a3) {
      uint64_t v26 = -v25;
    }
    else {
      uint64_t v26 = v25;
    }
    int v27 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) <= v27)
    {
      uint64_t v29 = *(void *)(a1 + 16);
      sub_1B0D25510(v29, 71, v26, a4, 0, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v10 + 144) = v27 + 1;
      uint64_t v28 = *(void *)(v10 + 136) + 40 * v27;
      *(_DWORD *)uint64_t v28 = 71;
      *(_DWORD *)(v28 + 4) = v26;
      *(_DWORD *)(v28 + 8) = a4;
      *(void *)(v28 + 12) = 0;
      *(void *)(v28 + 28) = 0;
      *(void *)(v28 + 20) = 0;
      *(_DWORD *)(v28 + 36) = 0;
    }
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v12 = *(char **)(a2 + 8);
    int v13 = sub_1B0CF8344(v12, (unint64_t *)&v34);
    if (a3) {
      BOOL v20 = 0;
    }
    else {
      BOOL v20 = v13 == 3;
    }
    int v21 = !v20;
    BOOL v22 = v13 == 2 || v21 == 0;
    if (v22 || a3 && v34 == 0x8000000000000000)
    {
      if (!v12) {
        goto LABEL_42;
      }
      int v23 = *v12;
      int v24 = "0x";
      if (*v12)
      {
        if (v23 != 48)
        {
LABEL_20:
          int v23 = byte_1B0DE1758[v23];
          goto LABEL_38;
        }
        int v23 = v12[1];
        if (v12[1])
        {
          if ((v23 & 0xFFFFFFDF) == 0x58)
          {
LABEL_39:
            int v33 = &byte_1B0DE9952;
            if (a3) {
              int v33 = "-";
            }
            sub_1B0CEF2BC(a1, "hex literal too big: %s%#T", v14, v15, v16, v17, v18, v19, (char)v33);
            return;
          }
          int v24 = "x";
          goto LABEL_20;
        }
        int v24 = "x";
      }
LABEL_38:
      if (v23 == byte_1B0DE1758[*v24]) {
        goto LABEL_39;
      }
LABEL_42:
      sub_1B0D3089C((uint64_t *)v10, v12, a3, a4);
      return;
    }
    if (a3)
    {
      if (v13 == 3) {
        uint64_t v30 = 0x8000000000000000;
      }
      else {
        uint64_t v30 = -v34;
      }
      uint64_t v34 = v30;
    }
    uint64_t v31 = (void *)sub_1B0D05DC0(*(void *)v10, 8uLL);
    if (v31) {
      *uint64_t v31 = v34;
    }
    sub_1B0CCB908((uint64_t *)v10, 72, 0, a4, 0, (uint64_t)v31, 4294967283, v32);
  }
}

int *sub_1B0CC625C(int *result, uint64_t a2)
{
  uint64_t v2 = (_WORD *)(a2 + 18);
  __int16 v3 = *(_WORD *)(a2 + 18);
  if ((v3 & 4) == 0)
  {
    int v4 = 0;
    int v5 = *result;
    do
    {
      if (v5 && (*(unsigned char *)(*(void *)a2 + 4) & 1) == 0) {
        break;
      }
      if ((*(void *)(a2 + 48) & *((void *)result + 13)) != 0) {
        break;
      }
      BOOL v6 = (v3 & 0x400) == 0 || v4 == 0;
      __int16 v7 = v6 ? 4 : 512;
      _WORD *v2 = v7 | v3;
      unsigned int v8 = *(_DWORD *)(a2 + 24);
      if ((v8 & 0x80000000) != 0) {
        break;
      }
      uint64_t v9 = *(void *)(*(void *)(a2 + 8) + 32);
      uint64_t v10 = v9 + 56 * v8;
      char v11 = *(unsigned char *)(v10 + 22) - 1;
      *(unsigned char *)(v10 + 22) = v11;
      if (v11) {
        break;
      }
      a2 = v9 + 56 * v8;
      uint64_t v2 = (_WORD *)(a2 + 18);
      __int16 v3 = *(_WORD *)(a2 + 18);
      --v4;
    }
    while ((v3 & 4) == 0);
  }
  return result;
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  if (a2 <= 0)
  {
    if (a1)
    {
      uint64_t v8 = *(void *)a1;
      if (*(void *)a1)
      {
        int v6 = 25;
        *(_DWORD *)(v8 + 80) = 25;
        sub_1B0D0E714(v8, 25);
        return v6;
      }
      sqlite3_log(21, "API called with finalized prepared statement", a3);
    }
    else
    {
      sqlite3_log(21, "API called with NULL prepared statement", a3);
    }
    return 25;
  }
  uint64_t v5 = (a2 - 1);
  int v6 = sub_1B0CC3F2C((uint64_t)a1, a2 - 1);
  if (!v6)
  {
    uint64_t v7 = *((void *)a1 + 16) + (v5 << 6);
    if ((*(_WORD *)(v7 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v7, a3);
    }
    else
    {
      *(void *)uint64_t v7 = a3;
      *(_WORD *)(v7 + 20) = 4;
    }
    uint64_t v9 = *(void *)(*(void *)a1 + 24);
    if (v9) {
      xmmword_1EB21CA50(v9);
    }
    return 0;
  }
  return v6;
}

uint64_t sub_1B0CC63D4(uint64_t a1, int a2)
{
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 9);
  if ((*(_WORD *)(v5 + 40) & 0xC) != 0) {
    bzero((void *)(v4 + v6), (*(_DWORD *)(v5 + 56) - v6));
  }
  *(unsigned char *)(v4 + v6) = a2;
  if ((a2 & 8) != 0) {
    int v7 = 8;
  }
  else {
    int v7 = 12;
  }
  uint64_t v8 = (v7 + v6);
  uint64_t v9 = v4 + v6;
  *(_DWORD *)(v9 + 1) = 0;
  *(unsigned char *)(v9 + 7) = 0;
  *(unsigned char *)(v9 + 5) = BYTE1(*(_DWORD *)(v5 + 56));
  *(unsigned char *)(v9 + 6) = *(_DWORD *)(v5 + 56);
  *(_DWORD *)(a1 + 20) = (unsigned __int16)(*(_DWORD *)(v5 + 56) - v8);
  uint64_t result = sub_1B0D11A00(a1, a2);
  *(_WORD *)(a1 + 18) = v8;
  uint64_t v11 = *(unsigned int *)(v5 + 52);
  *(void *)(a1 + 88) = v4 + v11;
  *(void *)(a1 + 96) = v4 + v8;
  *(void *)(a1 + 104) = v4 + *(unsigned __int8 *)(a1 + 10);
  *(unsigned char *)(a1 + 12) = 0;
  *(_WORD *)(a1 + 26) = v11 - 1;
  *(_WORD *)(a1 + 24) = 0;
  *(unsigned char *)a1 = 1;
  return result;
}

uint64_t sub_1B0CC64B8(uint64_t a1, uint64_t *a2, int *a3, unsigned int a4, int a5)
{
  uint64_t v119 = 0;
  uint64_t v5 = *(void *)(a1 + 24);
  unsigned int v6 = *(_DWORD *)(a1 + 64);
  unsigned int v7 = bswap32(*(_DWORD *)(*(void *)(v5 + 80) + 36));
  if (v7 >= v6)
  {
    return sub_1B0D1045C(83243);
  }
  if (v7)
  {
    if (a5 == 2)
    {
      BOOL v12 = 1;
    }
    else if (a5 == 1 && v6 >= a4)
    {
      LOBYTE(v118) = 0;
      uint64_t v16 = sub_1B0D14784((_DWORD *)a1, a4, &v118, 0);
      BOOL v12 = v118 == 2;
      if (v16) {
        return v16;
      }
    }
    else
    {
      BOOL v12 = 0;
    }
    uint64_t v18 = *(void *)(v5 + 112);
    uint64_t v19 = *(_DWORD **)(v18 + 40);
    if ((*(_WORD *)(v18 + 52) & 4) != 0 && v19[8] >= *(_DWORD *)(v18 + 48))
    {
      if (v19[32])
      {
        uint64_t v16 = sub_1B0D0F4D4(v18);
        if (v16) {
          return v16;
        }
      }
    }
    else
    {
      uint64_t v16 = v19[12];
      if (v16) {
        return v16;
      }
      if (v19[46] <= v19[50])
      {
        uint64_t v16 = sub_1B0CBD7E0(v18);
        if (v16) {
          return v16;
        }
      }
      else
      {
        uint64_t v16 = sub_1B0D133D0(v18);
        if (v16) {
          return v16;
        }
      }
    }
    int v113 = a5;
    uint64_t v20 = 0;
    unsigned int v21 = 0;
    *(_DWORD *)(*(void *)(v5 + 80) + 36) = bswap32(v7 - 1);
    uint64_t v114 = (unsigned int *)a3;
    uint64_t v112 = a2;
    unsigned int v116 = v6;
    while (1)
    {
      uint64_t v22 = v20;
      if (v20)
      {
        int v23 = *(unsigned __int8 **)(v20 + 80);
        int v24 = (*v23 << 24) | (v23[1] << 16) | (v23[2] << 8);
        unsigned int v25 = v23 + 3;
      }
      else
      {
        uint64_t v26 = *(unsigned __int8 **)(v5 + 80);
        int v24 = (v26[32] << 24) | (v26[33] << 16) | (v26[34] << 8);
        unsigned int v25 = v26 + 35;
      }
      unsigned int v27 = *v25;
      unsigned int v28 = v24 | v27;
      if ((v24 | v27) > v6 || v21 > v7)
      {
        uint64_t v16 = sub_1B0D1045C(83299);
        goto LABEL_222;
      }
      uint64_t v30 = sub_1B0D14FC0(a1, v24 | v27, &v119);
      if (v30)
      {
        uint64_t v16 = v30;
        goto LABEL_222;
      }
      uint64_t v117 = v22;
      uint64_t v20 = v119;
      uint64_t v31 = *(_DWORD **)(v119 + 80);
      uint64_t v32 = bswap32(v31[1]);
      if (!v12 && !v32)
      {
        uint64_t v33 = *(void *)(v119 + 112);
        uint64_t v34 = *(_DWORD **)(v33 + 40);
        if ((*(_WORD *)(v33 + 52) & 4) != 0 && v34[8] >= *(_DWORD *)(v33 + 48))
        {
          unsigned int v6 = v116;
          if (v34[32])
          {
            uint64_t v35 = v119;
            uint64_t v36 = sub_1B0D0F4D4(v33);
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v16 = v34[12];
          unsigned int v6 = v116;
          if (v16) {
            goto LABEL_218;
          }
          uint64_t v35 = v119;
          if (v34[46] <= v34[50]) {
            uint64_t v36 = sub_1B0CBD7E0(v33);
          }
          else {
            uint64_t v36 = sub_1B0D133D0(v33);
          }
LABEL_72:
          uint64_t v16 = v36;
          uint64_t v20 = v35;
          if (v36) {
            goto LABEL_218;
          }
          uint64_t v31 = *(_DWORD **)(v35 + 80);
        }
        uint64_t v16 = 0;
        BOOL v12 = 0;
        *uint64_t v114 = v28;
        *(_DWORD *)(*(void *)(v5 + 80) + 32) = *v31;
        *a2 = v20;
        uint64_t v119 = 0;
        uint64_t v20 = 0;
        uint64_t v22 = v117;
        if (v117) {
          goto LABEL_184;
        }
        goto LABEL_33;
      }
      if (v32 > (*(_DWORD *)(a1 + 56) >> 2) - 2)
      {
        uint64_t v101 = v119;
        uint64_t v102 = sub_1B0D1045C(83328);
        uint64_t v20 = v101;
        uint64_t v16 = v102;
        goto LABEL_218;
      }
      if (v12)
      {
        BOOL v37 = v113 == 2;
        if (v28 >= a4) {
          BOOL v37 = 0;
        }
        BOOL v38 = v28 != a4 && !v37;
        if (!v38)
        {
          *uint64_t v114 = v28;
          *a2 = v20;
          uint64_t v39 = *(void *)(v20 + 112);
          int v40 = *(_DWORD **)(v39 + 40);
          if ((*(_WORD *)(v39 + 52) & 4) == 0 || v40[8] < *(_DWORD *)(v39 + 48))
          {
            uint64_t v16 = v40[12];
            uint64_t v22 = v117;
            if (v16) {
              goto LABEL_219;
            }
            uint64_t v41 = v20;
            if (v40[46] <= v40[50]) {
              uint64_t v42 = sub_1B0CBD7E0(v39);
            }
            else {
              uint64_t v42 = sub_1B0D133D0(v39);
            }
            goto LABEL_120;
          }
          uint64_t v22 = v117;
          if (v40[32])
          {
            uint64_t v41 = v20;
            uint64_t v42 = sub_1B0D0F4D4(v39);
LABEL_120:
            uint64_t v16 = v42;
            uint64_t v20 = v41;
            if (v42) {
              goto LABEL_219;
            }
          }
          if (v32)
          {
            uint64_t v118 = 0;
            uint64_t v111 = v20;
            uint64_t v61 = *(unsigned __int8 **)(v20 + 80);
            int v62 = v61[8];
            int v63 = v61[9];
            int v64 = v61[11];
            unsigned int v65 = (v62 << 24) | (v63 << 16) | (v61[10] << 8) | v64;
            if (v65 > v116)
            {
              uint64_t v66 = sub_1B0D1045C(83362);
LABEL_216:
              uint64_t v16 = v66;
LABEL_217:
              uint64_t v20 = v111;
LABEL_218:
              uint64_t v22 = v117;
              goto LABEL_219;
            }
            unsigned __int8 v110 = v61[10];
            uint64_t v66 = sub_1B0D14FC0(a1, v65, &v118);
            if (v66) {
              goto LABEL_216;
            }
            char v109 = v64;
            uint64_t v67 = v118;
            uint64_t v68 = *(void *)(v118 + 112);
            uint64_t v69 = *(_DWORD **)(v68 + 40);
            uint64_t v70 = v111;
            if ((*(_WORD *)(v68 + 52) & 4) == 0 || v69[8] < *(_DWORD *)(v68 + 48))
            {
              uint64_t v16 = v69[12];
              if (v16) {
                goto LABEL_214;
              }
              if (v69[46] <= v69[50]) {
                uint64_t v71 = sub_1B0CBD7E0(v68);
              }
              else {
                uint64_t v71 = sub_1B0D133D0(v68);
              }
              goto LABEL_152;
            }
            if (v69[32])
            {
              uint64_t v71 = sub_1B0D0F4D4(v68);
LABEL_152:
              uint64_t v16 = v71;
              uint64_t v70 = v111;
              if (v71)
              {
LABEL_214:
                sub_1B0D1493C(v67);
                goto LABEL_217;
              }
            }
            **(_DWORD **)(v67 + 80) = **(_DWORD **)(v70 + 80);
            *(_DWORD *)(*(void *)(v67 + 80) + 4) = bswap32(v32 - 1);
            memcpy((void *)(*(void *)(v67 + 80) + 8), (const void *)(*(void *)(v70 + 80) + 12), (4 * (v32 - 1)));
            sub_1B0D1493C(v67);
            if (v117)
            {
              uint64_t v66 = sub_1B0CBD790(*(void *)(v117 + 112));
              unsigned int v6 = v116;
              if (v66) {
                goto LABEL_216;
              }
              long long v82 = *(unsigned char **)(v117 + 80);
              *long long v82 = v62;
              v82[1] = v63;
              v82[2] = v110;
              uint64_t v83 = v82 + 3;
            }
            else
            {
              int v84 = *(unsigned char **)(v5 + 80);
              v84[32] = v62;
              v84[33] = v63;
              v84[34] = v110;
              uint64_t v83 = v84 + 35;
              unsigned int v6 = v116;
            }
            *uint64_t v83 = v109;
            uint64_t v22 = v117;
          }
          else if (v22)
          {
            uint64_t v72 = *(void *)(v22 + 112);
            uint64_t v73 = *(_DWORD **)(v72 + 40);
            if ((*(_WORD *)(v72 + 52) & 4) != 0 && v73[8] >= *(_DWORD *)(v72 + 48))
            {
              unsigned int v6 = v116;
              if (v73[32])
              {
                uint64_t v85 = v20;
                uint64_t v16 = sub_1B0D0F4D4(v72);
                uint64_t v20 = v85;
                if (v16) {
                  goto LABEL_219;
                }
              }
            }
            else
            {
              uint64_t v16 = v73[12];
              if (v16) {
                goto LABEL_219;
              }
              uint64_t v74 = v20;
              uint64_t v75 = v73[46] <= v73[50] ? sub_1B0CBD7E0(v72) : sub_1B0D133D0(v72);
              uint64_t v16 = v75;
              unsigned int v6 = v116;
              uint64_t v20 = v74;
              if (v75) {
                goto LABEL_219;
              }
            }
            **(_DWORD **)(v22 + 80) = **(_DWORD **)(v20 + 80);
          }
          else
          {
            *(_DWORD *)(*(void *)(v5 + 80) + 32) = **(_DWORD **)(v20 + 80);
            unsigned int v6 = v116;
          }
          uint64_t v20 = 0;
          uint64_t v16 = 0;
          BOOL v12 = 0;
          uint64_t v119 = 0;
          if (v22) {
            goto LABEL_184;
          }
          goto LABEL_33;
        }
      }
      if (!v32)
      {
        uint64_t v16 = 0;
        goto LABEL_115;
      }
      if (!a4) {
        break;
      }
      if (v113 == 2)
      {
        uint64_t v43 = 0;
        int v44 = 8;
        while (bswap32(*(_DWORD *)((char *)v31 + (v44 & 0xFFFFFFFC))) > a4)
        {
          ++v43;
          v44 += 4;
          if (v32 == v43) {
            goto LABEL_93;
          }
        }
      }
      else
      {
        if (v32 < 2) {
          break;
        }
        LODWORD(v43) = 0;
        int v45 = bswap32(v31[2]) - a4;
        if (v45 == 0x80000000) {
          int v46 = 0x7FFFFFFF;
        }
        else {
          int v46 = -v45;
        }
        if (v45 < 0) {
          int v45 = v46;
        }
        int v47 = 12;
        for (uint64_t i = 1; i != v32; ++i)
        {
          int v49 = bswap32(*(_DWORD *)((char *)v31 + (v47 & 0xFFFFFFFC))) - a4;
          if (v49 == 0x80000000) {
            int v50 = 0x7FFFFFFF;
          }
          else {
            int v50 = -v49;
          }
          if (v49 < 0) {
            int v49 = v50;
          }
          if (v49 < v45)
          {
            LODWORD(v43) = i;
            int v45 = v49;
          }
          v47 += 4;
        }
      }
LABEL_94:
      uint64_t v51 = (_DWORD *)((char *)v31 + (4 * v43 + 8));
      unsigned int v52 = bswap32(*v51);
      if (v52 > v116 || v52 <= 1)
      {
        uint64_t v103 = v119;
        uint64_t v104 = sub_1B0D1045C(83427);
        uint64_t v20 = v103;
        uint64_t v16 = v104;
        uint64_t v22 = v117;
        if (!v20)
        {
LABEL_222:
          if (v22)
          {
            uint64_t v107 = *(void *)(v22 + 112);
            if ((*(_WORD *)(v107 + 52) & 0x20) != 0)
            {
              uint64_t v108 = *(void *)(v107 + 40);
              --*(_DWORD *)(v108 + 152);
              *(void *)(v107 + 32) = *(void *)(v108 + 168);
              *(void *)(v108 + 168) = v107;
              (*(void (**)(void, void, void))(**(void **)(v108 + 72) + 144))(*(void *)(v108 + 72), *(void *)(v108 + 200) * (*(_DWORD *)(v107 + 48) - 1), *(void *)(v107 + 8));
            }
            else
            {
              sub_1B0D0E3E8(v107);
            }
          }
          return v16;
        }
LABEL_219:
        uint64_t v105 = *(void *)(v20 + 112);
        if ((*(_WORD *)(v105 + 52) & 0x20) != 0)
        {
          uint64_t v106 = *(void *)(v105 + 40);
          --*(_DWORD *)(v106 + 152);
          *(void *)(v105 + 32) = *(void *)(v106 + 168);
          *(void *)(v106 + 168) = v105;
          (*(void (**)(void, void, void))(**(void **)(v106 + 72) + 144))(*(void *)(v106 + 72), *(void *)(v106 + 200) * (*(_DWORD *)(v105 + 48) - 1), *(void *)(v105 + 8));
        }
        else
        {
          sub_1B0D0E3E8(v105);
        }
        goto LABEL_222;
      }
      if ((v52 >= a4 || v113 != 2) && v12 && v52 != a4)
      {
        uint64_t v16 = 0;
        BOOL v12 = 1;
        a2 = v112;
LABEL_115:
        unsigned int v6 = v116;
        uint64_t v22 = v117;
        if (v117) {
          goto LABEL_184;
        }
        goto LABEL_33;
      }
      *uint64_t v114 = v52;
      uint64_t v57 = *(void *)(v20 + 112);
      int v58 = *(_DWORD **)(v57 + 40);
      if ((*(_WORD *)(v57 + 52) & 4) == 0 || v58[8] < *(_DWORD *)(v57 + 48))
      {
        uint64_t v16 = v58[12];
        if (v16) {
          goto LABEL_218;
        }
        uint64_t v59 = v20;
        if (v58[46] <= v58[50]) {
          uint64_t v60 = sub_1B0CBD7E0(v57);
        }
        else {
          uint64_t v60 = sub_1B0D133D0(v57);
        }
LABEL_139:
        uint64_t v16 = v60;
        uint64_t v20 = v59;
        if (v60) {
          goto LABEL_218;
        }
        goto LABEL_140;
      }
      if (v58[32])
      {
        uint64_t v59 = v20;
        uint64_t v60 = sub_1B0D0F4D4(v57);
        goto LABEL_139;
      }
LABEL_140:
      if (v43 < (int)v32 - 1) {
        unsigned int *v51 = *(_DWORD *)((char *)v31 + (4 * v32 + 4));
      }
      v31[1] = bswap32(v32 - 1);
      unsigned int v76 = *v114;
      uint64_t v77 = *(unsigned int **)(a1 + 96);
      if (!v77)
      {
        uint64_t v78 = v20;
        a2 = v112;
        unsigned int v6 = v116;
        uint64_t v22 = v117;
        goto LABEL_178;
      }
      a2 = v112;
      unsigned int v6 = v116;
      uint64_t v22 = v117;
      if (*v77 < v76)
      {
        uint64_t v78 = v20;
        goto LABEL_178;
      }
      unsigned int v79 = v76 - 1;
      if (v76 - 1 >= *v77) {
        goto LABEL_177;
      }
      while (1)
      {
        unsigned int v80 = v77[2];
        if (!v80) {
          break;
        }
        unsigned int v81 = v79 / v80;
        v79 %= v80;
        uint64_t v77 = *(unsigned int **)&v77[2 * v81 + 4];
        if (!v77)
        {
          uint64_t v78 = v20;
          goto LABEL_178;
        }
      }
      if (*v77 <= 0xF80)
      {
        uint64_t v78 = v20;
        goto LABEL_178;
      }
      unsigned int v86 = v79 % 0x7C;
      unsigned int v87 = v77[v79 % 0x7C + 4];
      if (v87)
      {
        uint64_t v78 = v20;
        unsigned int v88 = v79 + 1;
        do
        {
          if (v87 == v88) {
            break;
          }
          if (v86 == 123) {
            unsigned int v86 = 0;
          }
          else {
            ++v86;
          }
          unsigned int v87 = v77[v86 + 4];
        }
        while (v87);
      }
      else
      {
LABEL_177:
        uint64_t v78 = v20;
      }
LABEL_178:
      uint64_t v89 = sub_1B0D14FC0(a1, v76, a2);
      if (v89)
      {
        uint64_t v16 = v89;
LABEL_180:
        BOOL v12 = 0;
        uint64_t v20 = v78;
        if (v22) {
          goto LABEL_184;
        }
        goto LABEL_33;
      }
      uint64_t v16 = sub_1B0CBD790(*(void *)(*a2 + 112));
      if (!v16) {
        goto LABEL_180;
      }
      sub_1B0D1493C(*a2);
      BOOL v12 = 0;
      *a2 = 0;
      uint64_t v20 = v78;
      if (v22)
      {
LABEL_184:
        uint64_t v90 = v20;
        uint64_t v91 = *(void *)(v22 + 112);
        if ((*(_WORD *)(v91 + 52) & 0x20) != 0)
        {
          uint64_t v92 = *(void *)(v91 + 40);
          --*(_DWORD *)(v92 + 152);
          *(void *)(v91 + 32) = *(void *)(v92 + 168);
          *(void *)(v92 + 168) = v91;
          (*(void (**)(void, void, void))(**(void **)(v92 + 72) + 144))(*(void *)(v92 + 72), *(void *)(v92 + 200) * (*(_DWORD *)(v91 + 48) - 1), *(void *)(v91 + 8));
        }
        else
        {
          sub_1B0D0E3E8(v91);
        }
        uint64_t v20 = v90;
      }
LABEL_33:
      ++v21;
      BOOL v38 = !v12;
      BOOL v12 = 1;
      if (v38)
      {
        uint64_t v22 = 0;
        if (!v20) {
          goto LABEL_222;
        }
        goto LABEL_219;
      }
    }
LABEL_93:
    LODWORD(v43) = 0;
    goto LABEL_94;
  }
  uint64_t v14 = *(void *)(v5 + 112);
  uint64_t v15 = *(_DWORD **)(v14 + 40);
  if ((*(_WORD *)(v14 + 52) & 4) != 0 && v15[8] >= *(_DWORD *)(v14 + 48))
  {
    if (!v15[32]) {
      goto LABEL_190;
    }
    uint64_t v17 = sub_1B0D0F4D4(v14);
  }
  else
  {
    uint64_t v16 = v15[12];
    if (v16) {
      return v16;
    }
    if (v15[46] <= v15[50]) {
      uint64_t v17 = sub_1B0CBD7E0(v14);
    }
    else {
      uint64_t v17 = sub_1B0D133D0(v14);
    }
  }
  uint64_t v16 = v17;
  if (v17) {
    return v16;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 64);
LABEL_190:
  unsigned int v93 = v6 + 1;
  *(_DWORD *)(a1 + 64) = v6 + 1;
  unsigned int v94 = dword_1E9B51ED0 / *(_DWORD *)(a1 + 52);
  if (v6 == v94)
  {
    unsigned int v93 = v6 + 2;
    *(_DWORD *)(a1 + 64) = v6 + 2;
  }
  if (*(unsigned char *)(a1 + 33))
  {
    if (v93 >= 2)
    {
      unsigned int v96 = (v93 - 2) / (*(_DWORD *)(a1 + 56) / 5u + 1) * (*(_DWORD *)(a1 + 56) / 5u + 1);
      int v97 = v96 + 1 == v94 ? 3 : 2;
      unsigned int v95 = v97 + v96;
    }
    else
    {
      unsigned int v95 = 0;
    }
    if (v95 == v93)
    {
      uint64_t v118 = 0;
      uint64_t v16 = sub_1B0D14FC0(a1, v93, &v118);
      if (v16) {
        return v16;
      }
      uint64_t v98 = v118;
      uint64_t v16 = sub_1B0CBD790(*(void *)(v118 + 112));
      sub_1B0D1493C(v98);
      if (v16) {
        return v16;
      }
      int v99 = *(_DWORD *)(a1 + 64);
      unsigned int v93 = v99 + 1;
      *(_DWORD *)(a1 + 64) = v99 + 1;
      if (v99 == dword_1E9B51ED0 / *(_DWORD *)(a1 + 52))
      {
        unsigned int v93 = v99 + 2;
        *(_DWORD *)(a1 + 64) = v99 + 2;
      }
    }
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 80) + 28) = bswap32(v93);
  int v100 = *(_DWORD *)(a1 + 64);
  *a3 = v100;
  uint64_t v16 = sub_1B0D14FC0(a1, v100, a2);
  if (!v16)
  {
    uint64_t v16 = sub_1B0CBD790(*(void *)(*a2 + 112));
    if (v16)
    {
      sub_1B0D1493C(*a2);
      *a2 = 0;
    }
  }
  return v16;
}

uint64_t sub_1B0CC70E4(uint64_t a1, double a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 17))
  {
    ++*(_DWORD *)(a1 + 20);
    if (!*(unsigned char *)(a1 + 18)) {
      sub_1B0D12478(a1);
    }
  }
  sub_1B0CC7410(v2, 0, 0, a2);
  if (!*(unsigned char *)(v2 + 17)) {
    goto LABEL_23;
  }
  int v4 = *(_DWORD *)(v2 + 20) - 1;
  *(_DWORD *)(v2 + 20) = v4;
  if (!v4)
  {
    sub_1B0D12558(v2);
    if (!*(unsigned char *)(v2 + 17)) {
      goto LABEL_23;
    }
  }
  if ((_BYTE)word_1EB21C9C4)
  {
    uint64_t v5 = qword_1EB21CA30(2);
    uint64_t v6 = v5;
    if (v5)
    {
      xmmword_1EB21CA40(v5);
      char v7 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  char v7 = 1;
LABEL_12:
  int v8 = *(_DWORD *)(v3 + 104);
  *(_DWORD *)(v3 + 104) = v8 - 1;
  if (v8 <= 1)
  {
    uint64_t v9 = &qword_1E9B52200;
    uint64_t v10 = qword_1E9B52200;
    if (qword_1E9B52200 == v3)
    {
LABEL_17:
      *uint64_t v9 = *(void *)(v3 + 112);
    }
    else
    {
      while (v10)
      {
        uint64_t v11 = v10;
        uint64_t v10 = *(void *)(v10 + 112);
        if (v10 == v3)
        {
          uint64_t v9 = (uint64_t *)(v11 + 112);
          goto LABEL_17;
        }
      }
    }
    if (*(void *)(v3 + 88)) {
      off_1EB21CA38();
    }
  }
  if ((v7 & 1) == 0) {
    xmmword_1EB21CA50(v6);
  }
  if (v8 > 1) {
    goto LABEL_41;
  }
LABEL_23:
  sub_1B0CC76A0(*(void *)v3, *(void *)v2);
  BOOL v12 = *(void (**)(void))(v3 + 80);
  if (v12 && *(void *)(v3 + 72)) {
    v12();
  }
  uint64_t v13 = *(void *)(v3 + 72);
  if (!v13) {
    goto LABEL_33;
  }
  uint64_t v14 = &off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v13);
    --qword_1EB220150;
    off_1EB21C9E8(v13);
    uint64_t v13 = xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_33;
    }
    uint64_t v14 = &xmmword_1EB21CA50;
  }
  (*v14)(v13);
LABEL_33:
  uint64_t v15 = *(void *)(v3 + 136);
  if (v15)
  {
    *(void *)(v3 + 136) = v15 - 4;
    sub_1B0D10ED8(v15 - 4);
    *(void *)(v3 + 136) = 0;
  }
  uint64_t v16 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_40;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v3);
  --qword_1EB220150;
  off_1EB21C9E8(v3);
  uint64_t v3 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v16 = &xmmword_1EB21CA50;
LABEL_40:
    (*v16)(v3);
  }
LABEL_41:
  uint64_t v17 = *(void *)(v2 + 40);
  if (v17) {
    *(void *)(v17 + 32) = *(void *)(v2 + 32);
  }
  uint64_t v18 = *(void *)(v2 + 32);
  if (v18) {
    *(void *)(v18 + 40) = v17;
  }
  uint64_t v19 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_50;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v2);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v2);
  uint64_t v2 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v19 = &xmmword_1EB21CA50;
LABEL_50:
    unsigned int v21 = *v19;
    return v21(v2);
  }
  return result;
}

uint64_t sub_1B0CC7410(uint64_t a1, int a2, int a3, double a4)
{
  int v5 = a2;
  uint64_t v7 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 17) && (++*(_DWORD *)(a1 + 20), !*(unsigned char *)(a1 + 18)))
  {
    sub_1B0D12478(a1);
    if (v5) {
      goto LABEL_4;
    }
  }
  else if (a2)
  {
LABEL_4:
    sub_1B0D15898(a1, v5, a3);
    goto LABEL_5;
  }
  uint64_t v10 = *(unsigned __int8 **)(v7 + 16);
  if (v10)
  {
    int v11 = sub_1B0D143DC(v10, 0, 0);
    if (v11)
    {
      int v5 = v11;
      a3 = 0;
      goto LABEL_4;
    }
  }
LABEL_5:
  if (*(unsigned char *)(a1 + 16) == 2)
  {
    sub_1B0CC7574(*(void *)v7, a4);
    if (!(*(unsigned int (**)(void))(*(void *)v7 + 288))())
    {
      uint64_t v8 = MEMORY[0x10];
      if (*(_DWORD *)(MEMORY[0x10] + 4) == 1)
      {
        uint64_t v9 = *(void *)(MEMORY[0x10] + 80);
      }
      else
      {
        uint64_t v9 = MEMORY[8];
        *(void *)(MEMORY[0x10] + 112) = 0;
        *(void *)(v8 + 72) = v7;
        *(void *)(v8 + 80) = v9;
        *(_DWORD *)(v8 + 4) = 1;
        *(unsigned char *)(v8 + 9) = 100;
      }
      unsigned int v12 = bswap32(*(_DWORD *)(v9 + 28));
      if (!v12) {
        unsigned int v12 = *(_DWORD *)(*(void *)v7 + 32);
      }
      *(_DWORD *)(v7 + 64) = v12;
      sub_1B0D05580(*(void *)(v8 + 112));
    }
    *(unsigned char *)(v7 + 36) = 1;
    sub_1B0CD2868(*(void *)(v7 + 96));
    *(void *)(v7 + 96) = 0;
  }
  uint64_t result = sub_1B0CB29D0(a1);
  if (*(unsigned char *)(a1 + 17))
  {
    int v14 = *(_DWORD *)(a1 + 20) - 1;
    *(_DWORD *)(a1 + 20) = v14;
    if (!v14) {
      return sub_1B0D12558(a1);
    }
  }
  return result;
}

uint64_t sub_1B0CC7574(uint64_t a1, double a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a1 + 21);
  if (v3 == 6) {
    return *(unsigned int *)(a1 + 48);
  }
  if (v3 < 2) {
    return 0;
  }
  if (*(void *)(a1 + 344))
  {
    unsigned int v5 = sub_1B0D17968(a1, 2, -1, a2);
    LODWORD(result) = sub_1B0CB2BC8(a1, *(unsigned __int8 *)(a1 + 24), 0);
    if (v5) {
      uint64_t result = v5;
    }
    else {
      uint64_t result = result;
    }
  }
  else if (v3 == 2 || **(void **)(a1 + 80) == 0)
  {
    uint64_t result = sub_1B0CB2BC8(a1, 0, 0);
    if (v3 >= 3 && !*(unsigned char *)(a1 + 19))
    {
      *(_DWORD *)(a1 + 48) = 4;
      *(unsigned char *)(a1 + 21) = 6;
      uint64_t v7 = (uint64_t (*)())sub_1B0D11088;
LABEL_26:
      *(void *)(a1 + 288) = v7;
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1B0CDA4A0(a1, 0);
  }
  if (result == 13 || result == 10)
  {
    *(_DWORD *)(a1 + 48) = result;
    *(unsigned char *)(a1 + 21) = 6;
    uint64_t v7 = (uint64_t (*)())sub_1B0D11088;
    if (!result)
    {
      if (!*(unsigned char *)(a1 + 27) || (uint64_t v7 = sub_1B0D11094, *(void *)(a1 + 296))) {
        uint64_t v7 = sub_1B0D112F8;
      }
    }
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_1B0CC76A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void *)(a1 + 328);
  if (off_1E9B52208) {
    off_1E9B52208(a1);
  }
  uint64_t v5 = *(void *)(v3 + 168);
  if (v5)
  {
    do
    {
      uint64_t v7 = *(void *)(v5 + 32);
      uint64_t v8 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v5);
        --qword_1EB220150;
        off_1EB21C9E8(v5);
        uint64_t v5 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_9;
        }
        uint64_t v8 = &xmmword_1EB21CA50;
      }
      (*v8)(v5);
LABEL_9:
      uint64_t v5 = v7;
    }
    while (v7);
  }
  *(unsigned char *)(v3 + 8) = 0;
  if (!a2
    || (*(unsigned char *)(a2 + 49) & 8) != 0
    || !*(unsigned char *)(v3 + 16)
    && *(_DWORD *)(v3 + 32)
    && (uint64_t v9 = **(void **)(v3 + 72)) != 0
    && (int v10 = (*(uint64_t (**)(void))(v9 + 80))(), v10 != 12)
    && v10)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = v4;
  }
  sub_1B0CC7A24(*(void *)(v3 + 344), a2, *(unsigned __int8 *)(v3 + 15), *(_DWORD *)(v3 + 200), v6);
  *(void *)(v3 + 344) = 0;
  ++*(_DWORD *)(v3 + 132);
  for (uint64_t i = *(void *)(v3 + 112); i; uint64_t i = *(void *)(i + 64))
    *(_DWORD *)(i + 24) = 1;
  sub_1B0C7D108(*(void **)(v3 + 336), 0);
  if (!*(unsigned char *)(v3 + 19))
  {
    uint64_t v19 = *(uint64_t **)(v3 + 80);
    uint64_t v20 = *v19;
    if (!*v19)
    {
LABEL_52:
      int v23 = *(unsigned __int8 *)(v3 + 21);
      if (*(unsigned char *)(v3 + 21))
      {
        if (v23 == 1)
        {
          if (!*(unsigned char *)(v3 + 8)) {
            sub_1B0CB2BC8(v3, 0, 0);
          }
        }
        else if (v23 != 6)
        {
          if (off_1E9B52208) {
            double v12 = off_1E9B52208(v19);
          }
          uint64_t v24 = sub_1B0CC7574(v3, v12);
          if (off_1E9B52210) {
            off_1E9B52210(v24);
          }
        }
      }
      goto LABEL_23;
    }
    if (!*(unsigned char *)(v3 + 11))
    {
      uint64_t v19 = (uint64_t *)(*(uint64_t (**)(void))(v20 + 40))();
      if (v19)
      {
LABEL_42:
        if (v19 == 13 || v19 == 10)
        {
          *(_DWORD *)(v3 + 48) = v19;
          *(unsigned char *)(v3 + 21) = 6;
          uint64_t v22 = sub_1B0D11088;
          if (!v19)
          {
            if (!*(unsigned char *)(v3 + 27) || (uint64_t v22 = sub_1B0D11094, *(void *)(v3 + 296))) {
              uint64_t v22 = sub_1B0D112F8;
            }
          }
          *(void *)(v3 + 288) = v22;
        }
        goto LABEL_52;
      }
      uint64_t v20 = **(void **)(v3 + 80);
    }
    uint64_t v19 = (uint64_t *)(*(uint64_t (**)(void))(v20 + 48))();
    goto LABEL_42;
  }
LABEL_23:
  uint64_t v13 = sub_1B0CB3198(v3);
  if (off_1E9B52210) {
    off_1E9B52210(v13);
  }
  uint64_t v14 = *(void *)(v3 + 80);
  if (*(void *)v14)
  {
    (*(void (**)(void))(*(void *)v14 + 8))(*(void *)(v3 + 80));
    *(void *)uint64_t v14 = 0;
  }
  uint64_t v15 = *(void *)(v3 + 72);
  if (*(void *)v15)
  {
    (*(void (**)(void))(*(void *)v15 + 8))(*(void *)(v3 + 72));
    *(void *)uint64_t v15 = 0;
  }
  sub_1B0D10ED8(v4);
  (*((void (**)(void))&xmmword_1EB21CAB8 + 1))(*(void *)(*(void *)(v3 + 336) + 72));
  uint64_t v16 = *(void (**)(void))(v3 + 312);
  if (v16) {
    v16(*(void *)(v3 + 320));
  }
  uint64_t v17 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    return (*v17)(v3);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v3);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v3);
  uint64_t v3 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v17 = &xmmword_1EB21CA50;
    return (*v17)(v3);
  }
  return result;
}

uint64_t sub_1B0CC7A24(uint64_t a1, uint64_t a2, unsigned int a3, int a4, uint64_t a5)
{
  if (!a1) {
    return 0;
  }
  uint64_t v9 = a1;
  uint64_t v10 = *(void *)(a1 + 8);
  if (*(void *)v10) {
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)v10 + 80))(v10, 106, 0);
  }
  uint64_t v11 = **(void **)(v9 + 16);
  if (v11) {
    (*(void (**)(void))(v11 + 80))();
  }
  if (a5)
  {
    uint64_t v12 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v9 + 8) + 56))(*(void *)(v9 + 8), 4);
    if (v12) {
      goto LABEL_11;
    }
    if (!*(unsigned char *)(v9 + 63)) {
      *(unsigned char *)(v9 + 63) = 1;
    }
    uint64_t v12 = sub_1B0CD2960(v9, a2, 0, 0, 0, a3, a4, a5, 0, 0);
    if (v12)
    {
LABEL_11:
      uint64_t v13 = v12;
      LODWORD(a5) = 0;
      goto LABEL_17;
    }
    uint64_t v14 = **(void **)(v9 + 8);
    if (v14) {
      (*(void (**)(void))(v14 + 80))();
    }
    LODWORD(a5) = 1;
  }
  uint64_t v13 = 0;
LABEL_17:
  uint64_t v15 = sub_1B0D108CC(v9);
  uint64_t v17 = *(void *)(v9 + 16);
  if (*(void *)v17)
  {
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)v17 + 8))(*(void *)(v9 + 16));
    *(void *)uint64_t v17 = 0;
  }
  if (a5)
  {
    if (off_1E9B52208) {
      v16.n128_f64[0] = off_1E9B52208(v15);
    }
    uint64_t v18 = *(void *)v9;
    uint64_t v19 = *(uint64_t (**)(__n128))(*(void *)v9 + 48);
    if (v19) {
      uint64_t v18 = v19(v16);
    }
    if (off_1E9B52210) {
      off_1E9B52210(v18);
    }
  }
  uint64_t v20 = *(void *)(v9 + 48);
  if (!v20) {
    goto LABEL_33;
  }
  unsigned int v21 = &off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v20);
    --qword_1EB220150;
    off_1EB21C9E8(v20);
    uint64_t v20 = xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_33;
    }
    unsigned int v21 = &xmmword_1EB21CA50;
  }
  (*v21)(v20);
LABEL_33:
  uint64_t v22 = (void (**)(uint64_t))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_38:
    (*v22)(v9);
    return v13;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v9);
  --qword_1EB220150;
  off_1EB21C9E8(v9);
  uint64_t v9 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v22 = (void (**)(uint64_t))&xmmword_1EB21CA50;
    goto LABEL_38;
  }
  return v13;
}

uint64_t sub_1B0CC7CC8(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = *(unsigned int *)(a1 + 32);
  if (v2)
  {
    for (unint64_t i = 0; i < v2; ++i)
    {
      unint64_t v4 = *(void *)(*(void *)(v1 + 40) + 8 * i);
      unint64_t v10 = v4;
      if (v4)
      {
        do
        {
          unint64_t v4 = *(void *)(v4 + 24);
          sub_1B0D78000((int *)v1, &v10);
          unint64_t v10 = v4;
        }
        while (v4);
        unint64_t v2 = *(unsigned int *)(v1 + 32);
      }
    }
  }
  *(_DWORD *)(v1 + 120) = 0;
  while (*(void *)(v1 + 144))
    sub_1B0D77D04(v1, *(void *)(v1 + 136));
  while (*(void *)(v1 + 160))
    sub_1B0D77D04(v1, *(void *)(v1 + 152));
  uint64_t v5 = *(void *)(v1 + 40);
  if (v5)
  {
    uint64_t v6 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_18:
      (*v6)(v5);
      goto LABEL_19;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v5);
    --qword_1EB220150;
    off_1EB21C9E8(v5);
    uint64_t v5 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v6 = &xmmword_1EB21CA50;
      goto LABEL_18;
    }
  }
LABEL_19:
  uint64_t v7 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_24:
    uint64_t v9 = *v7;
    return v9(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v7 = &xmmword_1EB21CA50;
    goto LABEL_24;
  }
  return result;
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  if (a1)
  {
    uint64_t v5 = *(void *)(*(void *)a1 + 24);
    if (v5) {
      xmmword_1EB21CA40(v5);
    }
    uint64_t v6 = *((void *)a1 + 20);
    if (v6 && *((unsigned __int16 *)a1 + 130) > iCol)
    {
      uint64_t v7 = (sqlite3_value *)(v6 + ((unint64_t)iCol << 6));
    }
    else
    {
      uint64_t v8 = *(void *)a1;
      *(_DWORD *)(v8 + 80) = 25;
      sub_1B0D0E714(v8, 25);
      uint64_t v7 = (sqlite3_value *)&qword_1B0DE22A8;
    }
    uint64_t v9 = sqlite3_value_blob(v7);
    uint64_t v10 = *(void *)a1;
    unsigned int v11 = *((_DWORD *)a1 + 13);
    if (v11 || (int v12 = *(unsigned __int8 *)(v10 + 103), *(unsigned char *)(v10 + 103)))
    {
      int v12 = sub_1B0D1806C(v10, v11);
      uint64_t v10 = *(void *)a1;
    }
    *((_DWORD *)a1 + 13) = v12;
    uint64_t v13 = *(void *)(v10 + 24);
    if (v13) {
      xmmword_1EB21CA50(v13);
    }
    return v9;
  }
  else
  {
    return sqlite3_value_blob((sqlite3_value *)&qword_1B0DE22A8);
  }
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  if (!a1) {
    return 5;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  if (v4) {
    xmmword_1EB21CA40(v4);
  }
  uint64_t v5 = *((void *)a1 + 20);
  if (v5 && *((unsigned __int16 *)a1 + 130) > iCol)
  {
    uint64_t v6 = (uint64_t *)(v5 + ((unint64_t)iCol << 6));
  }
  else
  {
    uint64_t v7 = *(void *)a1;
    *(_DWORD *)(v7 + 80) = 25;
    sub_1B0D0E714(v7, 25);
    uint64_t v6 = &qword_1B0DE22A8;
  }
  int v8 = byte_1B0DE186A[*((_WORD *)v6 + 10) & 0x3F];
  uint64_t v9 = *(void *)a1;
  unsigned int v10 = *((_DWORD *)a1 + 13);
  if (v10 || (int v11 = *(unsigned __int8 *)(v9 + 103), *(unsigned char *)(v9 + 103)))
  {
    int v11 = sub_1B0D1806C(v9, v10);
    uint64_t v9 = *(void *)a1;
  }
  *((_DWORD *)a1 + 13) = v11;
  uint64_t v12 = *(void *)(v9 + 24);
  if (v12) {
    xmmword_1EB21CA50(v12);
  }
  return v8;
}

uint64_t sub_1B0CC8044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a3;
  uint64_t v11 = *(void *)(a2 + 80);
  if (!v11 || (uint64_t result = sub_1B0CC8044(a1, v11, a3)) == 0)
  {
    uint64_t v13 = *(_DWORD **)(a2 + 32);
    if (*v13 <= v8)
    {
      return 0;
    }
    else
    {
      uint64_t v14 = *(unsigned __int8 **)&v13[6 * v8 + 2];
      return sub_1B0C9ADE0(a1, v14, a3, a4, a5, a6, a7, a8);
    }
  }
  return result;
}

uint64_t sub_1B0CC80D0(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a7;
  uint64_t v14 = *(void *)(a1 + 16);
  char v15 = *((unsigned char *)a2 + 36);
  __n128 v16 = *a2;
  if (v15) {
    int v17 = a6;
  }
  else {
    int v17 = a6 + 1;
  }
  int v128 = *v16;
  int v18 = v17 + *v16;
  int v130 = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 12) = *(_DWORD *)(v14 + 144);
  if (a7)
  {
    uint64_t v19 = (a4 - a7);
  }
  else
  {
    int v20 = *(_DWORD *)(a1 + 56);
    uint64_t v19 = (v20 + 1);
    *(_DWORD *)(a1 + 56) = v20 + v18;
  }
  int v21 = *(_DWORD *)(a3 + 12);
  if (v21) {
    unsigned int v22 = v21 + 1;
  }
  else {
    unsigned int v22 = *(_DWORD *)(a3 + 8);
  }
  unsigned int v127 = v22;
  int v23 = *(_DWORD *)(a1 + 68) - 1;
  *(_DWORD *)(a1 + 68) = v23;
  *((_DWORD *)a2 + 7) = v23;
  if (a5) {
    char v24 = 5;
  }
  else {
    char v24 = 1;
  }
  uint64_t result = sub_1B0D31188(a1, v16, v19, a5, v24, a6, a7, a8);
  if ((v15 & 1) == 0)
  {
    uint64_t v29 = *((unsigned int *)a2 + 3);
    uint64_t v30 = (v19 + v128);
    int v31 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v31)
    {
      uint64_t result = sub_1B0D25510(v14, 126, v29, v30, 0, v26, v27, v28);
      if ((int)a6 < 1) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
    *(_DWORD *)(v14 + 144) = v31 + 1;
    uint64_t v32 = *(void *)(v14 + 136) + 40 * v31;
    *(_DWORD *)uint64_t v32 = 126;
    *(_DWORD *)(v32 + 4) = v29;
    *(_DWORD *)(v32 + 8) = v30;
    *(void *)(v32 + 12) = 0;
    *(void *)(v32 + 28) = 0;
    *(void *)(v32 + 20) = 0;
    *(_DWORD *)(v32 + 36) = 0;
  }
  if ((int)a6 < 1) {
    goto LABEL_23;
  }
LABEL_17:
  if (!v8)
  {
    uint64_t v33 = v128 + ((v15 & 1) == 0) + v19;
    uint64_t result = *(void *)(a1 + 16);
    int v34 = *(_DWORD *)(result + 144);
    if (*(_DWORD *)(result + 148) <= v34)
    {
      uint64_t result = sub_1B0D25510(result, 79, a4, v33, a6, v26, v27, v28);
    }
    else
    {
      *(_DWORD *)(result + 144) = v34 + 1;
      uint64_t v35 = *(void *)(result + 136) + 40 * v34;
      *(_DWORD *)uint64_t v35 = 79;
      *(_DWORD *)(v35 + 4) = a4;
      *(_DWORD *)(v35 + 8) = v33;
      *(_DWORD *)(v35 + 12) = a6;
      *(void *)(v35 + 24) = 0;
      *(void *)(v35 + 32) = 0;
      *(void *)(v35 + 16) = 0;
    }
  }
LABEL_23:
  uint64_t v36 = a3;
  if (v130 < 1)
  {
    uint64_t v45 = 0;
    uint64_t v46 = v127;
    if (!v127) {
      goto LABEL_96;
    }
    goto LABEL_29;
  }
  int v126 = v18;
  int v37 = *((_DWORD *)a2 + 2);
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v39 = (*(_DWORD *)(a1 + 56) + 1);
  *(_DWORD *)(a1 + 56) = v39;
  int v40 = a2[5];
  if (v40) {
    uint64_t result = sub_1B0D31188(a1, *(_DWORD **)(a3 + 32), *v40, 0, *((unsigned char *)v40 + 4), v26, v27, v28);
  }
  uint64_t v41 = (v37 + v19);
  uint64_t v42 = (v126 - v37);
  int v43 = *(_DWORD *)(v38 + 144);
  if (*(_DWORD *)(v38 + 148) <= v43)
  {
    uint64_t result = sub_1B0D25510(v38, 97, v41, v42, v39, v26, v27, v28);
  }
  else
  {
    *(_DWORD *)(v38 + 144) = v43 + 1;
    uint64_t v44 = *(void *)(v38 + 136) + 40 * v43;
    *(_DWORD *)uint64_t v44 = 97;
    *(_DWORD *)(v44 + 4) = v41;
    *(_DWORD *)(v44 + 8) = v42;
    *(_DWORD *)(v44 + 12) = v39;
    *(void *)(v44 + 24) = 0;
    *(void *)(v44 + 32) = 0;
    *(void *)(v44 + 16) = 0;
  }
  int v51 = *(_DWORD *)(a1 + 56);
  uint64_t v52 = (v51 + 1);
  int v53 = *((_DWORD *)a2 + 2);
  *(_DWORD *)(a1 + 56) = v53 + v51;
  if (v15)
  {
    uint64_t v54 = *((unsigned int *)a2 + 3);
    int v57 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) > v57)
    {
      *(_DWORD *)(v14 + 144) = v57 + 1;
      uint64_t v58 = *(void *)(v14 + 136) + 40 * v57;
      *(_DWORD *)uint64_t v58 = 120;
      *(_DWORD *)(v58 + 4) = v54;
      *(_OWORD *)(v58 + 8) = 0u;
      *(_OWORD *)(v58 + 24) = 0u;
      int v55 = v57;
      goto LABEL_52;
    }
    uint64_t v66 = v14;
    uint64_t v67 = 120;
  }
  else
  {
    uint64_t v54 = (v19 + v128);
    int v55 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) > v55)
    {
      *(_DWORD *)(v14 + 144) = v55 + 1;
      uint64_t v56 = *(void *)(v14 + 136) + 40 * v55;
      *(_DWORD *)uint64_t v56 = 17;
      *(_DWORD *)(v56 + 4) = v54;
      *(_OWORD *)(v56 + 8) = 0u;
      *(_OWORD *)(v56 + 24) = 0u;
      goto LABEL_52;
    }
    uint64_t v66 = v14;
    uint64_t v67 = 17;
  }
  uint64_t result = sub_1B0D25510(v66, v67, v54, 0, 0, v26, v27, v28);
  int v55 = result;
LABEL_52:
  uint64_t v68 = *((unsigned int *)a2 + 2);
  int v69 = *(_DWORD *)(v14 + 144);
  if (*(_DWORD *)(v14 + 148) <= v69)
  {
    uint64_t result = sub_1B0D25510(v14, 90, v52, v19, v68, v26, v27, v28);
  }
  else
  {
    *(_DWORD *)(v14 + 144) = v69 + 1;
    uint64_t v70 = *(void *)(v14 + 136) + 40 * v69;
    *(_DWORD *)uint64_t v70 = 90;
    *(_DWORD *)(v70 + 4) = v52;
    *(_DWORD *)(v70 + 8) = v19;
    *(_DWORD *)(v70 + 12) = v68;
    *(void *)(v70 + 24) = 0;
    *(void *)(v70 + 32) = 0;
    *(void *)(v70 + 16) = 0;
  }
  unsigned int v125 = v39;
  if (*(unsigned char *)(*(void *)v14 + 103)) {
    uint64_t v71 = &byte_1E9B52240;
  }
  else {
    uint64_t v71 = (char *)(*(void *)(v14 + 136) + 40 * *((int *)a2 + 6));
  }
  if (!*(unsigned char *)(*(void *)a1 + 103))
  {
    int v123 = v55;
    *((_DWORD *)v71 + 2) = v126 - v53;
    uint64_t v72 = *((void *)v71 + 2);
    bzero(*(void **)(v72 + 24), *(unsigned __int16 *)(v72 + 6));
    unsigned int v124 = v52;
    if (*(unsigned char *)(*(void *)v14 + 103))
    {
      if (!*(void *)(*(void *)v14 + 816) && (*(_DWORD *)v72)-- == 1) {
        sub_1B0D15C20(*(void **)(v72 + 16), (void *)v72);
      }
    }
    else
    {
      uint64_t v74 = *(int *)(v14 + 144) - 1;
      uint64_t v75 = *(void *)(v14 + 136);
      uint64_t v76 = v75 + 40 * v74;
      int v78 = *(unsigned __int8 *)(v76 + 1);
      uint64_t v77 = (unsigned char *)(v76 + 1);
      if (v78)
      {
        sub_1B0D257F4((uint64_t *)v14, v75 + 40 * v74, (char *)v72, 0xFFFFFFF8);
      }
      else
      {
        *(void *)(v75 + 40 * v74 + 16) = v72;
        *uint64_t v77 = -8;
      }
    }
    unsigned int v79 = *a2;
    int v80 = **a2;
    uint64_t v81 = sub_1B0D2FF40(*(void *)a1, v80 - v130, *(unsigned __int16 *)(v72 + 8) - *(unsigned __int16 *)(v72 + 6));
    uint64_t v85 = v81;
    if (v80 > v130 && v81)
    {
      uint64_t v86 = 0;
      uint64_t v87 = (uint64_t)&v79[6 * v130 + 2];
      do
      {
        uint64_t v88 = sub_1B0C9ADE0(a1, *(unsigned __int8 **)v87, v82, v83, v84, v26, v27, v28);
        if (!v88) {
          uint64_t v88 = *(void *)(*(void *)a1 + 16);
        }
        *(void *)(v85 + 32 + 8 * v86) = v88;
        *(unsigned char *)(*(void *)(v85 + 24) + v86++) = *(unsigned char *)(v87 + 16);
        v87 += 24;
      }
      while (v80 - v130 != v86);
    }
    *((void *)v71 + 2) = v85;
    int v89 = *(_DWORD *)(v14 + 144);
    uint64_t v90 = (v89 + 1);
    if (*(_DWORD *)(v14 + 148) <= v89)
    {
      sub_1B0D25510(v14, 14, v90, 0, (v89 + 1), v26, v27, v28);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v90;
      uint64_t v91 = *(void *)(v14 + 136) + 40 * v89;
      *(_DWORD *)uint64_t v91 = 14;
      *(void *)(v91 + 4) = v90;
      *(_DWORD *)(v91 + 12) = v90;
      *(void *)(v91 + 24) = 0;
      *(void *)(v91 + 32) = 0;
      *(void *)(v91 + 16) = 0;
    }
    uint64_t v45 = v125;
    int v18 = v126;
    uint64_t v46 = v127;
    uint64_t v92 = (*(_DWORD *)(a1 + 68) - 1);
    *(_DWORD *)(a1 + 68) = v92;
    uint64_t v93 = (*(_DWORD *)(a1 + 56) + 1);
    *(_DWORD *)(a1 + 56) = v93;
    *((_DWORD *)a2 + 4) = v93;
    *((_DWORD *)a2 + 5) = v92;
    int v94 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v94)
    {
      sub_1B0D25510(v14, 10, v93, v92, 0, v26, v27, v28);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v94 + 1;
      uint64_t v95 = *(void *)(v14 + 136) + 40 * v94;
      *(_DWORD *)uint64_t v95 = 10;
      *(_DWORD *)(v95 + 4) = v93;
      *(_DWORD *)(v95 + 8) = v92;
      *(void *)(v95 + 12) = 0;
      *(void *)(v95 + 28) = 0;
      *(void *)(v95 + 20) = 0;
      *(_DWORD *)(v95 + 36) = 0;
    }
    uint64_t v96 = *((unsigned int *)a2 + 3);
    int v97 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v97)
    {
      sub_1B0D25510(v14, 146, v96, 0, 0, v26, v27, v28);
      if (!v127) {
        goto LABEL_86;
      }
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v97 + 1;
      uint64_t v98 = *(void *)(v14 + 136) + 40 * v97;
      *(_DWORD *)uint64_t v98 = 146;
      *(_DWORD *)(v98 + 4) = v96;
      *(_OWORD *)(v98 + 8) = 0u;
      *(_OWORD *)(v98 + 24) = 0u;
      if (!v127)
      {
LABEL_86:
        if (*(unsigned char *)(*(void *)v14 + 103)) {
          uint64_t v102 = &byte_1E9B52240;
        }
        else {
          uint64_t v102 = (char *)(*(void *)(v14 + 136) + 40 * v123);
        }
        *((_DWORD *)v102 + 2) = *(_DWORD *)(v14 + 144);
        uint64_t v103 = *((unsigned int *)a2 + 2);
        uint64_t result = *(void *)(a1 + 16);
        int v104 = *(_DWORD *)(result + 144);
        if (*(_DWORD *)(result + 148) <= v104)
        {
          uint64_t result = sub_1B0D25510(result, 79, v19, v124, v103, v26, v27, v28);
        }
        else
        {
          *(_DWORD *)(result + 144) = v104 + 1;
          uint64_t v105 = *(void *)(result + 136) + 40 * v104;
          *(_DWORD *)uint64_t v105 = 79;
          *(_DWORD *)(v105 + 4) = v19;
          *(_DWORD *)(v105 + 8) = v124;
          *(_DWORD *)(v105 + 12) = v103;
          *(void *)(v105 + 24) = 0;
          *(void *)(v105 + 32) = 0;
          *(void *)(v105 + 16) = 0;
        }
        uint64_t v36 = a3;
        if (*(unsigned char *)(*(void *)v14 + 103)) {
          uint64_t v106 = &byte_1E9B52240;
        }
        else {
          uint64_t v106 = (char *)(*(void *)(v14 + 136) + 40 * v89);
        }
        *((_DWORD *)v106 + 2) = *(_DWORD *)(v14 + 144);
        if (!v127)
        {
LABEL_96:
          int v62 = 0;
          if (v45) {
            goto LABEL_102;
          }
LABEL_97:
          int v107 = v18;
          int v108 = *((_DWORD *)a2 + 2);
          uint64_t v109 = *(void *)(a1 + 16);
          uint64_t v45 = (*(_DWORD *)(a1 + 56) + 1);
          *(_DWORD *)(a1 + 56) = v45;
          unsigned __int8 v110 = a2[5];
          if (v110) {
            uint64_t result = sub_1B0D31188(a1, *(_DWORD **)(v36 + 32), *v110, 0, *((unsigned char *)v110 + 4), v26, v27, v28);
          }
          uint64_t v111 = (v108 + v19);
          uint64_t v112 = (v107 - v108);
          int v18 = v107;
          int v113 = *(_DWORD *)(v109 + 144);
          if (*(_DWORD *)(v109 + 148) <= v113)
          {
            uint64_t result = sub_1B0D25510(v109, 97, v111, v112, v45, v26, v27, v28);
          }
          else
          {
            *(_DWORD *)(v109 + 144) = v113 + 1;
            uint64_t v114 = *(void *)(v109 + 136) + 40 * v113;
            *(_DWORD *)uint64_t v114 = 97;
            *(_DWORD *)(v114 + 4) = v111;
            *(_DWORD *)(v114 + 8) = v112;
            *(_DWORD *)(v114 + 12) = v45;
            *(void *)(v114 + 24) = 0;
            *(void *)(v114 + 32) = 0;
            *(void *)(v114 + 16) = 0;
          }
LABEL_102:
          if (*((unsigned char *)a2 + 36)) {
            uint64_t v115 = 139;
          }
          else {
            uint64_t v115 = 138;
          }
          uint64_t v116 = *((unsigned int *)a2 + 3);
          uint64_t v117 = (v19 + v130);
          uint64_t v118 = (v18 - v130);
          int v119 = *(_DWORD *)(v14 + 144);
          if (*(_DWORD *)(v14 + 148) <= v119)
          {
            uint64_t result = sub_1B0D2575C(v14, v115, v116, v45, v117, v118, v27, v28);
            if (!v62)
            {
LABEL_115:
              *((_DWORD *)a2 + 13) = *(_DWORD *)(v14 + 144) - 1;
              return result;
            }
          }
          else
          {
            *(_DWORD *)(v14 + 144) = v119 + 1;
            uint64_t v120 = *(void *)(v14 + 136) + 40 * v119;
            *(unsigned char *)uint64_t v120 = v115;
            *(_WORD *)(v120 + 2) = 0;
            *(_DWORD *)(v120 + 4) = v116;
            *(_DWORD *)(v120 + 8) = v45;
            *(_DWORD *)(v120 + 12) = v117;
            *(_DWORD *)(v120 + 16) = v118;
            *(unsigned char *)(v120 + 1) = -3;
            *(void *)(v120 + 24) = 0;
            *(void *)(v120 + 32) = 0;
            if (!v62) {
              goto LABEL_115;
            }
          }
          int v121 = *((_DWORD *)a2 + 8);
          if (!v121) {
            int v121 = *(_DWORD *)(v14 + 144);
          }
          if (*(unsigned char *)(*(void *)v14 + 103)) {
            uint64_t v122 = &byte_1E9B52240;
          }
          else {
            uint64_t v122 = (char *)(*(void *)(v14 + 136) + 40 * v62);
          }
          *((_DWORD *)v122 + 2) = v121;
          goto LABEL_115;
        }
LABEL_29:
        uint64_t v47 = *((unsigned int *)a2 + 3);
        int v48 = *(_DWORD *)(v14 + 144);
        uint64_t v49 = (v48 + 4);
        if (*(_DWORD *)(v14 + 148) <= v48)
        {
          uint64_t result = sub_1B0D25510(v14, 60, v46, v49, 0, v26, v27, v28);
        }
        else
        {
          *(_DWORD *)(v14 + 144) = v48 + 1;
          uint64_t v50 = *(void *)(v14 + 136) + 40 * v48;
          *(_DWORD *)uint64_t v50 = 60;
          *(_DWORD *)(v50 + 4) = v46;
          *(_DWORD *)(v50 + 8) = v49;
          *(void *)(v50 + 12) = 0;
          *(void *)(v50 + 28) = 0;
          *(void *)(v50 + 20) = 0;
          *(_DWORD *)(v50 + 36) = 0;
        }
        int v59 = *(_DWORD *)(v14 + 144);
        if (*(_DWORD *)(v14 + 148) <= v59)
        {
          uint64_t result = sub_1B0D25510(v14, 32, v47, 0, 0, v26, v27, v28);
        }
        else
        {
          *(_DWORD *)(v14 + 144) = v59 + 1;
          uint64_t v60 = *(void *)(v14 + 136) + 40 * v59;
          *(_DWORD *)uint64_t v60 = 32;
          *(_DWORD *)(v60 + 4) = v47;
          *(_OWORD *)(v60 + 8) = 0u;
          *(_OWORD *)(v60 + 24) = 0u;
        }
        uint64_t v61 = (v19 + v130);
        uint64_t v26 = (v128 - v130);
        int v62 = *(_DWORD *)(v14 + 144);
        if (*(_DWORD *)(v14 + 148) <= v62)
        {
          uint64_t result = sub_1B0D2575C(v14, 40, v47, 0, v61, v26, v27, v28);
          int v62 = result;
        }
        else
        {
          *(_DWORD *)(v14 + 144) = v62 + 1;
          uint64_t v63 = *(void *)(v14 + 136) + 40 * v62;
          *(_DWORD *)uint64_t v63 = 64808;
          *(_DWORD *)(v63 + 4) = v47;
          *(_DWORD *)(v63 + 8) = 0;
          *(_DWORD *)(v63 + 12) = v61;
          *(_DWORD *)(v63 + 16) = v26;
          *(void *)(v63 + 24) = 0;
          *(void *)(v63 + 32) = 0;
        }
        int v64 = *(_DWORD *)(v14 + 144);
        if (*(_DWORD *)(v14 + 148) <= v64)
        {
          uint64_t result = sub_1B0D25510(v14, 130, v47, 0, 0, v26, v27, v28);
        }
        else
        {
          *(_DWORD *)(v14 + 144) = v64 + 1;
          uint64_t v65 = *(void *)(v14 + 136) + 40 * v64;
          *(_DWORD *)uint64_t v65 = 130;
          *(_DWORD *)(v65 + 4) = v47;
          *(_OWORD *)(v65 + 8) = 0u;
          *(_OWORD *)(v65 + 24) = 0u;
        }
        uint64_t v36 = a3;
        if (v45) {
          goto LABEL_102;
        }
        goto LABEL_97;
      }
    }
    uint64_t v99 = *((unsigned int *)a2 + 7);
    int v100 = *(_DWORD *)(v14 + 144);
    if (*(_DWORD *)(v14 + 148) <= v100)
    {
      sub_1B0D25510(v14, 17, v127, v99, 0, v26, v27, v28);
    }
    else
    {
      *(_DWORD *)(v14 + 144) = v100 + 1;
      uint64_t v101 = *(void *)(v14 + 136) + 40 * v100;
      *(_DWORD *)uint64_t v101 = 17;
      *(_DWORD *)(v101 + 4) = v127;
      *(_DWORD *)(v101 + 8) = v99;
      *(void *)(v101 + 12) = 0;
      *(void *)(v101 + 28) = 0;
      *(void *)(v101 + 20) = 0;
      *(_DWORD *)(v101 + 36) = 0;
    }
    goto LABEL_86;
  }
  return result;
}

uint64_t sub_1B0CC8AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a4;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(unsigned int *)(a3 + 28);
  int v14 = *(_DWORD *)(a1 + 68);
  unsigned int v191 = v14 - 1;
  *(_DWORD *)(a1 + 68) = v14 - 1;
  char v15 = *(_DWORD **)a3;
  int v16 = *a5;
  unsigned int v179 = *((_DWORD *)a5 + 1);
  uint64_t v180 = *(void *)(a2 + 32);
  if (*(int *)(a3 + 8) <= 0) {
    int v17 = &byte_1B0DE9952;
  }
  else {
    int v17 = "RIGHT PART OF ";
  }
  int v18 = sub_1B0D33724((uint64_t *)a1, 0, "USE TEMP B-TREE FOR %sORDER BY", a4, (uint64_t)a5, a6, a7, a8, (char)v17);
  int v22 = v18;
  if ((*(unsigned char *)(*(void *)v12 + 49) & 4) != 0)
  {
    int v23 = *(_DWORD *)(a3 + 48);
    int v24 = *(_DWORD *)(a3 + 52);
    uint64_t v25 = *(unsigned int *)(v12 + 392);
    uint64_t v26 = 56 * v25 + 20;
    int v27 = v25 + 1;
    while (--v27 >= 1)
    {
      uint64_t v28 = v26 - 56;
      uint64_t v29 = *(void *)(v12 + 400);
      int v30 = *(_DWORD *)(v29 + v26 - 76);
      v26 -= 56;
      if (v30 == v18)
      {
        if (v24 < 0) {
          int v24 = *(_DWORD *)(v12 + 144) - 1;
        }
        uint64_t v31 = v29 + v28;
        uint64_t v32 = (int *)(v29 + v28 - 16);
        if (*v32)
        {
          int v34 = *(_DWORD *)(v31 - 8);
          uint64_t v33 = (int *)(v31 - 8);
          if (v34)
          {
            uint64_t v32 = (int *)(v29 + v28);
            if (*(_DWORD *)(v29 + v28)) {
              break;
            }
            uint64_t v35 = 5;
          }
          else
          {
            uint64_t v35 = 3;
            uint64_t v32 = v33;
          }
        }
        else
        {
          uint64_t v35 = 1;
        }
        *uint64_t v32 = v23;
        *(_DWORD *)(v29 + 4 * v35 + v28 - 16) = v24;
        int v23 = *(_DWORD *)(a3 + 48);
        uint64_t v25 = *(unsigned int *)(v12 + 392);
        break;
      }
    }
    uint64_t v36 = 56 * v25;
    int v37 = v25 + 1;
    while (--v37 >= 1)
    {
      uint64_t v38 = v36 - 56;
      uint64_t v39 = *(void *)(v12 + 400);
      int v40 = *(_DWORD *)(v39 + v36 - 56);
      v36 -= 56;
      if (v40 == v18)
      {
        if (v18 >= 1) {
          *(_DWORD *)(v39 + v38 + 28) = v18;
        }
        if (v23 >= 1) {
          *(_DWORD *)(v39 + v38 + 32) = v23;
        }
        break;
      }
    }
  }
  uint64_t v41 = *(unsigned int *)(a3 + 20);
  if (v41)
  {
    uint64_t v42 = *(unsigned int *)(a3 + 16);
    int v43 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v43)
    {
      sub_1B0D25510(v12, 10, v42, v41, 0, v19, v20, v21);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v43 + 1;
      uint64_t v44 = *(void *)(v12 + 136) + 40 * v43;
      *(_DWORD *)uint64_t v44 = 10;
      *(_DWORD *)(v44 + 4) = v42;
      *(_DWORD *)(v44 + 8) = v41;
      *(void *)(v44 + 12) = 0;
      *(void *)(v44 + 28) = 0;
      *(void *)(v44 + 20) = 0;
      *(_DWORD *)(v44 + 36) = 0;
    }
    int v45 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v45)
    {
      sub_1B0D25510(v12, 9, 0, v13, 0, v19, v20, v21);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v45 + 1;
      uint64_t v46 = *(void *)(v12 + 136) + 40 * v45;
      *(void *)uint64_t v46 = 9;
      *(_DWORD *)(v46 + 8) = v13;
      *(void *)(v46 + 12) = 0;
      *(void *)(v46 + 28) = 0;
      *(void *)(v46 + 20) = 0;
      *(_DWORD *)(v46 + 36) = 0;
    }
    uint64_t v47 = *(void *)(v12 + 24);
    int v48 = ~*(_DWORD *)(a3 + 20);
    if (*(_DWORD *)(v47 + 68) + *(_DWORD *)(v47 + 72) < 0) {
      sub_1B0D34EC8(v47, v12, v48);
    }
    else {
      *(_DWORD *)(*(void *)(v47 + 80) + 4 * v48) = *(_DWORD *)(v12 + 144);
    }
  }
  unsigned int v194 = *(_DWORD *)(a3 + 12);
  int v184 = v16 - 9;
  int v187 = v14;
  int v188 = v22;
  if (v16 == 9 || v16 == 13) {
    goto LABEL_47;
  }
  if (v16 == 10)
  {
    if (*(_DWORD *)(a2 + 12))
    {
      uint64_t v49 = *((unsigned int *)a5 + 3);
      int v50 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v50)
      {
        sub_1B0D25510(v12, 75, 0, v49, 0, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v50 + 1;
        uint64_t v51 = *(void *)(v12 + 136) + 40 * v50;
        *(void *)uint64_t v51 = 75;
        *(_DWORD *)(v51 + 8) = v49;
        *(void *)(v51 + 12) = 0;
        *(void *)(v51 + 28) = 0;
        *(void *)(v51 + 20) = 0;
        *(_DWORD *)(v51 + 36) = 0;
      }
    }
LABEL_47:
    unsigned int v183 = 0;
    unsigned int v193 = *((_DWORD *)a5 + 3);
    unsigned int v53 = v8;
    goto LABEL_48;
  }
  char v52 = *(unsigned char *)(a1 + 31);
  if (v52)
  {
    *(unsigned char *)(a1 + 31) = v52 - 1;
    unsigned int v183 = *(_DWORD *)(a1 + 4 * (v52 - 1) + 224);
    if ((v16 & 0xFFFFFFFD) == 0xC)
    {
      if (v52 != 1)
      {
        unsigned int v53 = 0;
        unsigned __int8 v54 = v52 - 2;
        *(unsigned char *)(a1 + 31) = v54;
        unsigned int v193 = *(_DWORD *)(a1 + 4 * v54 + 224);
        goto LABEL_48;
      }
      goto LABEL_45;
    }
    if (v8 == 1)
    {
      if (v52 != 1)
      {
        unsigned __int8 v115 = v52 - 2;
        *(unsigned char *)(a1 + 31) = v115;
        unsigned int v193 = *(_DWORD *)(a1 + 4 * v115 + 224);
        unsigned int v53 = 1;
        goto LABEL_48;
      }
      goto LABEL_148;
    }
    unsigned int v53 = v8;
  }
  else
  {
    unsigned int v183 = *(_DWORD *)(a1 + 56) + 1;
    *(_DWORD *)(a1 + 56) = v183;
    if ((v16 & 0xFFFFFFFD) == 0xC)
    {
LABEL_45:
      unsigned int v53 = 0;
      int v55 = *(_DWORD *)(a1 + 56) + 1;
      unsigned int v193 = v55;
      goto LABEL_197;
    }
    unsigned int v53 = v8;
    if (v8 == 1)
    {
LABEL_148:
      unsigned int v193 = *(_DWORD *)(a1 + 56) + 1;
      *(_DWORD *)(a1 + 56) = v193;
      unsigned int v53 = 1;
      goto LABEL_48;
    }
  }
  int v176 = *(_DWORD *)(a1 + 40);
  BOOL v133 = __OFSUB__(v176, v53);
  int v177 = v176 - v53;
  if (v177 < 0 == v133)
  {
    unsigned int v193 = *(_DWORD *)(a1 + 44);
    *(_DWORD *)(a1 + 40) = v177;
    *(_DWORD *)(a1 + 44) = v193 + v53;
    goto LABEL_48;
  }
  int v178 = *(_DWORD *)(a1 + 56);
  unsigned int v193 = v178 + 1;
  int v55 = v178 + v53;
LABEL_197:
  *(_DWORD *)(a1 + 56) = v55;
LABEL_48:
  int v56 = *v15 - *(_DWORD *)(a3 + 8);
  int v190 = v13;
  uint64_t v189 = a3;
  uint64_t v186 = a1;
  int v185 = v16;
  if (*(unsigned char *)(a3 + 36))
  {
    uint64_t v60 = *(unsigned int *)(a1 + 52);
    uint64_t v61 = (*(_DWORD *)(a1 + 56) + 1);
    *(_DWORD *)(a1 + 52) = v60 + 1;
    *(_DWORD *)(a1 + 56) = v61;
    if (*(_DWORD *)(a3 + 20))
    {
      int v62 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v62)
      {
        int v62 = sub_1B0D25510(v12, 15, 0, 0, 0, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v62 + 1;
        uint64_t v63 = *(void *)(v12 + 136) + 40 * v62;
        *(unsigned char *)uint64_t v63 = 15;
        *(_OWORD *)(v63 + 1) = 0u;
        *(_OWORD *)(v63 + 17) = 0u;
        *(void *)(v63 + 32) = 0;
      }
    }
    else
    {
      int v62 = 0;
    }
    uint64_t v67 = v53 + v56 + 1;
    int v68 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v68)
    {
      sub_1B0D25510(v12, 121, v60, v61, v67, v19, v20, v21);
      int v70 = *(_DWORD *)(v12 + 144);
      if (!v62)
      {
LABEL_72:
        if (*(_DWORD *)(v12 + 148) <= v70)
        {
          int v182 = sub_1B0D25510(v12, 34, v194, v13, 0, v19, v20, v21);
        }
        else
        {
          int v182 = v70;
          *(_DWORD *)(v12 + 144) = v70 + 1;
          uint64_t v75 = *(void *)(v12 + 136) + 40 * v70;
          *(_DWORD *)uint64_t v75 = 34;
          *(_DWORD *)(v75 + 4) = v194;
          *(_DWORD *)(v75 + 8) = v13;
          *(void *)(v75 + 12) = 0;
          *(void *)(v75 + 28) = 0;
          *(void *)(v75 + 20) = 0;
          *(_DWORD *)(v75 + 36) = 0;
        }
        int v76 = *(_DWORD *)(v12 + 144);
        if (*(_DWORD *)(v12 + 148) <= v76)
        {
          sub_1B0D25510(v12, 133, v194, v61, v60, v19, v20, v21);
          int v77 = 0;
        }
        else
        {
          int v77 = 0;
          *(_DWORD *)(v12 + 144) = v76 + 1;
          uint64_t v78 = *(void *)(v12 + 136) + 40 * v76;
          *(_DWORD *)uint64_t v78 = 133;
          *(_DWORD *)(v78 + 4) = v194;
          *(_DWORD *)(v78 + 8) = v61;
          *(_DWORD *)(v78 + 12) = v60;
          *(void *)(v78 + 24) = 0;
          *(void *)(v78 + 32) = 0;
          *(void *)(v78 + 16) = 0;
        }
        goto LABEL_80;
      }
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v68 + 1;
      uint64_t v69 = *(void *)(v12 + 136) + 40 * v68;
      *(_DWORD *)uint64_t v69 = 121;
      *(_DWORD *)(v69 + 4) = v60;
      *(_DWORD *)(v69 + 8) = v61;
      *(_DWORD *)(v69 + 12) = v67;
      *(void *)(v69 + 24) = 0;
      *(void *)(v69 + 32) = 0;
      *(void *)(v69 + 16) = 0;
      int v70 = *(_DWORD *)(v12 + 144);
      if (!v62) {
        goto LABEL_72;
      }
    }
    if (*(unsigned char *)(*(void *)v12 + 103)) {
      uint64_t v71 = &byte_1E9B52240;
    }
    else {
      uint64_t v71 = (char *)(*(void *)(v12 + 136) + 40 * v62);
    }
    *((_DWORD *)v71 + 2) = v70;
    goto LABEL_72;
  }
  int v57 = *(_DWORD *)(v12 + 144);
  if (*(_DWORD *)(v12 + 148) <= v57)
  {
    int v59 = sub_1B0D25510(v12, 35, v194, v13, 0, v19, v20, v21);
  }
  else
  {
    *(_DWORD *)(v12 + 144) = v57 + 1;
    uint64_t v58 = *(void *)(v12 + 136) + 40 * v57;
    *(_DWORD *)uint64_t v58 = 35;
    *(_DWORD *)(v58 + 4) = v194;
    *(_DWORD *)(v58 + 8) = v13;
    *(void *)(v58 + 12) = 0;
    *(void *)(v58 + 28) = 0;
    *(void *)(v58 + 20) = 0;
    *(_DWORD *)(v58 + 36) = 0;
    int v59 = v57;
  }
  uint64_t v64 = *(unsigned int *)(a2 + 12);
  int v182 = v59;
  if ((int)v64 >= 1)
  {
    int v65 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v65)
    {
      sub_1B0D25510(v12, 59, v64, v191, 1, v19, v20, v21);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v65 + 1;
      uint64_t v66 = *(void *)(v12 + 136) + 40 * v65;
      *(_DWORD *)uint64_t v66 = 59;
      *(_DWORD *)(v66 + 4) = v64;
      *(_DWORD *)(v66 + 8) = v191;
      *(_DWORD *)(v66 + 12) = 1;
      *(void *)(v66 + 24) = 0;
      *(void *)(v66 + 32) = 0;
      *(void *)(v66 + 16) = 0;
    }
    if (*(int *)(a2 + 12) >= 1)
    {
      uint64_t v72 = *(unsigned int *)(a2 + 8);
      int v73 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v73)
      {
        sub_1B0D25510(v12, 86, v72, 0xFFFFFFFFLL, 0, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v73 + 1;
        uint64_t v74 = *(void *)(v12 + 136) + 40 * v73;
        *(_DWORD *)uint64_t v74 = 86;
        *(_DWORD *)(v74 + 4) = v72;
        *(_DWORD *)(v74 + 8) = -1;
        *(void *)(v74 + 12) = 0;
        *(void *)(v74 + 28) = 0;
        *(void *)(v74 + 20) = 0;
        *(_DWORD *)(v74 + 36) = 0;
      }
    }
  }
  int v77 = 1;
  uint64_t v60 = v194;
LABEL_80:
  unsigned int v181 = v77 + v56;
  if ((int)v53 < 1) {
    goto LABEL_98;
  }
  unsigned int v79 = v181 - 1;
  uint64_t v80 = v53;
  if (v53 < 8)
  {
    uint64_t v81 = 0;
    unsigned int v82 = v193;
    uint64_t v83 = v180;
    goto LABEL_86;
  }
  uint64_t v81 = v53 & 0xFFFFFFF8;
  int32x4_t v84 = 0uLL;
  int32x4_t v85 = (int32x4_t)(v181 - 1);
  uint64_t v83 = v180;
  uint64_t v86 = (__int16 *)(v180 + 100);
  v87.i64[0] = 0x100000001;
  v87.i64[1] = 0x100000001;
  uint64_t v88 = v81;
  do
  {
    v89.i16[0] = *(v86 - 36);
    v89.i16[1] = *(v86 - 24);
    v89.i16[2] = *(v86 - 12);
    v89.i16[3] = *v86;
    v90.i16[0] = v86[12];
    v90.i16[1] = v86[24];
    v90.i16[2] = v86[36];
    v90.i16[3] = v86[48];
    int32x4_t v85 = vaddq_s32(v85, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vceqz_s16(v89)), v87));
    int32x4_t v84 = vaddq_s32(v84, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16((uint16x4_t)vceqz_s16(v90)), v87));
    v86 += 96;
    v88 -= 8;
  }
  while (v88);
  unsigned int v79 = vaddvq_s32(vaddq_s32(v84, v85));
  unsigned int v82 = v193;
  if (v81 != v53)
  {
LABEL_86:
    uint64_t v91 = (unsigned __int16 *)(v83 + 24 * v81 + 28);
    uint64_t v92 = v53 - v81;
    do
    {
      int v93 = *v91;
      v91 += 12;
      if (!v93) {
        ++v79;
      }
      --v92;
    }
    while (v92);
  }
  uint64_t v94 = v83 + 8;
  uint64_t v95 = v82 - 1;
  do
  {
    uint64_t v97 = v80 - 1;
    int v98 = *(_WORD *)(v94 + 24 * (v80 - 1) + 20) == 0;
    if (*(_WORD *)(v94 + 24 * (v80 - 1) + 20)) {
      uint64_t v99 = *(unsigned __int16 *)(v94 + 24 * (v80 - 1) + 20) - 1;
    }
    else {
      uint64_t v99 = v79;
    }
    uint64_t v100 = v95 + v80;
    int v101 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) > v101)
    {
      *(_DWORD *)(v12 + 144) = v101 + 1;
      uint64_t v96 = *(void *)(v12 + 136) + 40 * v101;
      *(_DWORD *)uint64_t v96 = 94;
      *(_DWORD *)(v96 + 4) = v60;
      *(_DWORD *)(v96 + 8) = v99;
      *(_DWORD *)(v96 + 12) = v100;
      *(void *)(v96 + 24) = 0;
      *(void *)(v96 + 32) = 0;
      *(void *)(v96 + 16) = 0;
    }
    else
    {
      sub_1B0D25510(v12, 94, v60, v99, v100, v19, v20, v21);
    }
    v79 -= v98;
    uint64_t v80 = v97;
  }
  while ((unint64_t)(v97 + 1) > 1);
LABEL_98:
  unsigned int v102 = v193;
  if ((*(unsigned char *)(*(void *)v12 + 49) & 4) != 0)
  {
    unsigned int v103 = *(_DWORD *)(v12 + 392);
    uint64_t v104 = 56 * v103 + 20;
    unsigned int v105 = v103 + 1;
    while ((int)--v105 >= 1)
    {
      uint64_t v106 = v104 - 56;
      uint64_t v107 = *(void *)(v12 + 400);
      int v108 = *(_DWORD *)(v107 + v104 - 76);
      v104 -= 56;
      if (v108 == v188)
      {
        int v109 = *(_DWORD *)(v12 + 144);
        uint64_t v110 = v107 + v106;
        uint64_t v111 = (int *)(v107 + v106 - 16);
        if (*v111)
        {
          int v113 = *(_DWORD *)(v110 - 8);
          uint64_t v112 = (int *)(v110 - 8);
          if (v113)
          {
            uint64_t v111 = (int *)(v107 + v106);
            if (*(_DWORD *)(v107 + v106)) {
              break;
            }
            uint64_t v114 = 5;
          }
          else
          {
            uint64_t v114 = 3;
            uint64_t v111 = v112;
          }
        }
        else
        {
          uint64_t v114 = 1;
        }
        int *v111 = v188;
        *(_DWORD *)(v107 + 4 * v114 + v106 - 16) = v109 - 1;
        break;
      }
    }
  }
  switch(v184)
  {
    case 0:
      uint64_t v118 = *((unsigned int *)a5 + 3);
      int v119 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v119)
      {
        uint64_t v135 = v12;
        uint64_t v136 = 84;
        uint64_t v137 = v53;
        goto LABEL_135;
      }
      *(_DWORD *)(v12 + 144) = v119 + 1;
      uint64_t v120 = *(void *)(v12 + 136) + 40 * v119;
      *(_DWORD *)uint64_t v120 = 84;
      *(_DWORD *)(v120 + 4) = v118;
      *(_DWORD *)(v120 + 8) = v53;
      *(void *)(v120 + 12) = 0;
      *(void *)(v120 + 28) = 0;
      *(void *)(v120 + 20) = 0;
      *(_DWORD *)(v120 + 36) = 0;
      break;
    case 1:
      break;
    case 2:
      sub_1B0CCB908((uint64_t *)v12, 97, v193, v53, v183, *((void *)a5 + 3), v53, v21);
      int v121 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) > v121)
      {
        *(_DWORD *)(v12 + 144) = v121 + 1;
        uint64_t v122 = *(void *)(v12 + 136) + 40 * v121;
        *(_DWORD *)uint64_t v122 = 64906;
        *(_DWORD *)(v122 + 4) = v179;
        *(_DWORD *)(v122 + 8) = v183;
        *(_DWORD *)(v122 + 12) = v193;
        *(_DWORD *)(v122 + 16) = v53;
        goto LABEL_144;
      }
      sub_1B0D2575C(v12, 138, v179, v183, v193, v53, v20, v21);
      break;
    case 3:
    case 5:
      int v116 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v116)
      {
        sub_1B0D25510(v12, 94, v60, v181, v193, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v116 + 1;
        uint64_t v117 = *(void *)(v12 + 136) + 40 * v116;
        *(_DWORD *)uint64_t v117 = 94;
        *(_DWORD *)(v117 + 4) = v60;
        *(_DWORD *)(v117 + 8) = v181;
        *(_DWORD *)(v117 + 12) = v193;
        *(void *)(v117 + 24) = 0;
        *(void *)(v117 + 32) = 0;
        *(void *)(v117 + 16) = 0;
      }
      int v128 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v128)
      {
        sub_1B0D25510(v12, 127, v179, v183, 0, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v128 + 1;
        uint64_t v129 = *(void *)(v12 + 136) + 40 * v128;
        *(_DWORD *)uint64_t v129 = 127;
        *(_DWORD *)(v129 + 4) = v179;
        *(_DWORD *)(v129 + 8) = v183;
        *(void *)(v129 + 12) = 0;
        *(void *)(v129 + 28) = 0;
        *(void *)(v129 + 20) = 0;
        *(_DWORD *)(v129 + 36) = 0;
      }
      int v130 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v130)
      {
        sub_1B0D25510(v12, 128, v179, v193, v183, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v130 + 1;
        uint64_t v131 = *(void *)(v12 + 136) + 40 * v130;
        *(_DWORD *)uint64_t v131 = 128;
        *(_DWORD *)(v131 + 4) = v179;
        *(_DWORD *)(v131 + 8) = v193;
        *(_DWORD *)(v131 + 12) = v183;
        *(void *)(v131 + 24) = 0;
        *(void *)(v131 + 32) = 0;
        *(void *)(v131 + 16) = 0;
      }
      int v132 = *(_DWORD *)(v12 + 144);
      BOOL v133 = __OFSUB__(v132, 1);
      int v134 = v132 - 1;
      if (v134 < 0 == v133) {
        *(_WORD *)(*(void *)(v12 + 136) + 40 * v134 + 2) = 8;
      }
      break;
    case 6:
      uint64_t v125 = *((unsigned int *)a5 + 2);
      if (*(unsigned char *)(v186 + 31))
      {
        unsigned __int8 v126 = *(unsigned char *)(v186 + 31) - 1;
        *(unsigned char *)(v186 + 31) = v126;
        uint64_t v127 = *(unsigned int *)(v186 + 4 * v126 + 224);
      }
      else
      {
        uint64_t v127 = (*(_DWORD *)(v186 + 56) + 1);
        *(_DWORD *)(v186 + 56) = v127;
      }
      uint64_t v139 = (v125 >> 31) + v193;
      uint64_t v140 = v53 - (v125 >> 31);
      int v141 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v141)
      {
        sub_1B0D25510(v12, 97, v139, v140, v127, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v141 + 1;
        uint64_t v142 = *(void *)(v12 + 136) + 40 * v141;
        *(_DWORD *)uint64_t v142 = 97;
        *(_DWORD *)(v142 + 4) = v139;
        *(_DWORD *)(v142 + 8) = v140;
        *(_DWORD *)(v142 + 12) = v127;
        *(void *)(v142 + 24) = 0;
        *(void *)(v142 + 32) = 0;
        *(void *)(v142 + 16) = 0;
      }
      int v143 = *(_DWORD *)(v12 + 148);
      int v144 = *(_DWORD *)(v12 + 144);
      if ((v125 & 0x80000000) != 0)
      {
        if (v143 <= v144)
        {
          uint64_t v135 = v12;
          uint64_t v136 = 128;
          uint64_t v118 = v179;
          uint64_t v137 = v127;
          unsigned int v102 = v193;
          uint64_t v138 = v193;
          goto LABEL_136;
        }
        *(_DWORD *)(v12 + 144) = v144 + 1;
        uint64_t v145 = *(void *)(v12 + 136) + 40 * v144;
        *(_DWORD *)uint64_t v145 = 128;
        *(_DWORD *)(v145 + 4) = v179;
        unsigned int v102 = v193;
        *(_DWORD *)(v145 + 8) = v127;
        *(_DWORD *)(v145 + 12) = v193;
        *(void *)(v145 + 24) = 0;
        *(void *)(v145 + 32) = 0;
        *(void *)(v145 + 16) = 0;
      }
      else if (v143 <= v144)
      {
        uint64_t v146 = v125;
        unsigned int v102 = v193;
        sub_1B0D2575C(v12, 138, v179, v127, v193, v146, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v144 + 1;
        uint64_t v122 = *(void *)(v12 + 136) + 40 * v144;
        *(_DWORD *)uint64_t v122 = 64906;
        *(_DWORD *)(v122 + 4) = v179;
        *(_DWORD *)(v122 + 8) = v127;
        *(_DWORD *)(v122 + 12) = v193;
        *(_DWORD *)(v122 + 16) = v125;
        unsigned int v102 = v193;
LABEL_144:
        *(void *)(v122 + 24) = 0;
        *(void *)(v122 + 32) = 0;
      }
      break;
    default:
      uint64_t v118 = *((unsigned int *)a5 + 1);
      int v123 = *(_DWORD *)(v12 + 144);
      if (*(_DWORD *)(v12 + 148) <= v123)
      {
        uint64_t v135 = v12;
        uint64_t v136 = 12;
        uint64_t v137 = 0;
LABEL_135:
        uint64_t v138 = 0;
LABEL_136:
        sub_1B0D25510(v135, v136, v118, v137, v138, v19, v20, v21);
      }
      else
      {
        *(_DWORD *)(v12 + 144) = v123 + 1;
        uint64_t v124 = *(void *)(v12 + 136) + 40 * v123;
        *(_DWORD *)uint64_t v124 = 12;
        *(_DWORD *)(v124 + 4) = v118;
        *(_OWORD *)(v124 + 8) = 0u;
        *(_OWORD *)(v124 + 24) = 0u;
      }
      break;
  }
  if (v183)
  {
    if (v185 == 11 && v53 != 1)
    {
      if (*(_DWORD *)(v186 + 40) >= (signed int)v53) {
        goto LABEL_159;
      }
      *(_DWORD *)(v186 + 40) = v53;
      uint64_t v148 = (unsigned int *)(v186 + 44);
    }
    else
    {
      if (!v102 || (uint64_t v147 = *(unsigned __int8 *)(v186 + 31), v147 > 7))
      {
LABEL_159:
        uint64_t v149 = *(unsigned __int8 *)(v186 + 31);
        if (v149 <= 7)
        {
          *(unsigned char *)(v186 + 31) = v149 + 1;
          *(_DWORD *)(v186 + 4 * v149 + 224) = v183;
        }
        goto LABEL_161;
      }
      *(unsigned char *)(v186 + 31) = v147 + 1;
      uint64_t v148 = (unsigned int *)(v186 + 4 * v147 + 224);
    }
    unsigned int *v148 = v102;
    goto LABEL_159;
  }
LABEL_161:
  uint64_t v150 = (v182 + 1);
  uint64_t v151 = *(void *)(v12 + 24);
  int v152 = -v187;
  if (*(_DWORD *)(v151 + 68) + *(_DWORD *)(v151 + 72) < 0) {
    sub_1B0D34EC8(v151, v12, v152);
  }
  else {
    *(_DWORD *)(*(void *)(v151 + 80) + 4 * v152) = *(_DWORD *)(v12 + 144);
  }
  int v153 = *(_DWORD *)(v12 + 148);
  int v154 = *(_DWORD *)(v12 + 144);
  if (*(unsigned char *)(v189 + 36))
  {
    if (v153 > v154)
    {
      *(_DWORD *)(v12 + 144) = v154 + 1;
      uint64_t v155 = *(void *)(v12 + 136) + 40 * v154;
      int v156 = 37;
      goto LABEL_169;
    }
    uint64_t v157 = v12;
    uint64_t v158 = 37;
  }
  else
  {
    if (v153 > v154)
    {
      *(_DWORD *)(v12 + 144) = v154 + 1;
      uint64_t v155 = *(void *)(v12 + 136) + 40 * v154;
      int v156 = 39;
LABEL_169:
      *(_DWORD *)uint64_t v155 = v156;
      *(_DWORD *)(v155 + 4) = v194;
      *(_DWORD *)(v155 + 8) = v150;
      *(void *)(v155 + 12) = 0;
      *(void *)(v155 + 28) = 0;
      *(void *)(v155 + 20) = 0;
      *(_DWORD *)(v155 + 36) = 0;
      goto LABEL_173;
    }
    uint64_t v157 = v12;
    uint64_t v158 = 39;
  }
  sub_1B0D25510(v157, v158, v194, v150, 0, v19, v20, v21);
LABEL_173:
  if ((*(unsigned char *)(*(void *)v12 + 49) & 4) != 0)
  {
    int v159 = *(_DWORD *)(v12 + 144) - 1;
    unsigned int v160 = *(_DWORD *)(v12 + 392);
    uint64_t v161 = 56 * v160 + 20;
    unsigned int v162 = v160 + 1;
    while ((int)--v162 >= 1)
    {
      uint64_t v163 = v161 - 56;
      uint64_t v164 = *(void *)(v12 + 400);
      int v165 = *(_DWORD *)(v164 + v161 - 76);
      v161 -= 56;
      if (v165 == v188)
      {
        uint64_t v166 = v164 + v163;
        uint64_t v167 = (int *)(v164 + v163 - 16);
        if (*v167)
        {
          int v169 = *(_DWORD *)(v166 - 8);
          unint64_t v168 = (int *)(v166 - 8);
          if (v169)
          {
            uint64_t v167 = (int *)(v164 + v163);
            if (*(_DWORD *)(v164 + v163)) {
              break;
            }
            uint64_t v170 = 5;
          }
          else
          {
            uint64_t v170 = 3;
            uint64_t v167 = v168;
          }
        }
        else
        {
          uint64_t v170 = 1;
        }
        *uint64_t v167 = v159;
        *(_DWORD *)(v164 + 4 * v170 + v163 - 16) = v159;
        break;
      }
    }
  }
  uint64_t v171 = *(unsigned int *)(v189 + 16);
  if (v171)
  {
    int v172 = *(_DWORD *)(v12 + 144);
    if (*(_DWORD *)(v12 + 148) <= v172)
    {
      sub_1B0D25510(v12, 67, v171, 0, 0, v19, v20, v21);
    }
    else
    {
      *(_DWORD *)(v12 + 144) = v172 + 1;
      uint64_t v173 = *(void *)(v12 + 136) + 40 * v172;
      *(_DWORD *)uint64_t v173 = 67;
      *(_DWORD *)(v173 + 4) = v171;
      *(_OWORD *)(v173 + 8) = 0u;
      *(_OWORD *)(v173 + 24) = 0u;
    }
  }
  uint64_t result = *(void *)(v12 + 24);
  int v175 = ~v190;
  if (*(_DWORD *)(result + 68) + *(_DWORD *)(result + 72) < 0)
  {
    return sub_1B0D34EC8(result, v12, v175);
  }
  else
  {
    *(_DWORD *)(*(void *)(result + 80) + 4 * v175) = *(_DWORD *)(v12 + 144);
  }
  return result;
}

uint64_t sub_1B0CC9B18(int *a1)
{
  int v2 = a1[4];
  signed int v3 = *a1 + v2;
  if ((v3 < 0) ^ __OFADD__(*a1, v2) | (v3 == 0))
  {
    if ((a1[5] & 0x10) == 0) {
      return 0;
    }
    signed int v3 = 1;
  }
  if (sub_1B0CA0CF0((uint64_t)a1, v3, 1)) {
    return 7;
  }
  bzero((void *)(*((void *)a1 + 1) + a1[4]), *a1);
  uint64_t result = 0;
  a1[4] += *a1;
  *((_WORD *)a1 + 10) &= 0xF9FFu;
  return result;
}

uint64_t sub_1B0CC9BA8(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (!*a3)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 72);
    uint64_t v6 = *(void *)(result + 80);
    uint64_t v8 = *(void *)(a2 + 80);
    uint64_t v9 = *(unsigned __int8 *)(result + 9);
    if (*(_DWORD *)(a2 + 4) == 1) {
      uint64_t v10 = 100;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v11 = (const void *)(v6 + v9);
    uint64_t v12 = __rev16(*(unsigned __int16 *)(v6 + v9 + 5));
    memcpy((void *)(v8 + v12), (const void *)(v6 + v12), (*(_DWORD *)(v7 + 56) - v12));
    memcpy((void *)(v8 + v10), v11, *(unsigned __int16 *)(v5 + 18) + 2 * *(unsigned __int16 *)(v5 + 24));
    *(unsigned char *)a2 = 0;
    uint64_t result = sub_1B0CAD004(a2);
    if (!result)
    {
      uint64_t result = sub_1B0D1F1CC(a2);
      if (!result)
      {
        if (!*(unsigned char *)(v7 + 33)) {
          return result;
        }
        uint64_t result = sub_1B0D150D0(a2);
      }
    }
    *a3 = result;
  }
  return result;
}

uint64_t sub_1B0CC9C74(uint64_t a1, int a2, unsigned char *a3, int a4, unsigned __int8 *a5)
{
  uint64_t v5 = (a2 - a4);
  if (a2 >= a4) {
    int v6 = a4;
  }
  else {
    int v6 = a2;
  }
  if (v6 < 0)
  {
    sub_1B0CE1978(35844);
    return v5;
  }
  if (!a3)
  {
    if (a5) {
      uint64_t result = 0xFFFFFFFFLL;
    }
    else {
      uint64_t result = 0;
    }
    if (result) {
      return result;
    }
    return v5;
  }
  if (!a5) {
    return 1;
  }
  if (!v6) {
    return v5;
  }
  int v7 = v6 + 1;
  while (1)
  {
    uint64_t v8 = *a3;
    if (!*a3) {
      break;
    }
    LODWORD(v8) = byte_1B0DE1758[v8];
    int v9 = byte_1B0DE1758[*a5];
    if (v8 != v9) {
      goto LABEL_21;
    }
    ++a3;
    ++a5;
    if (--v7 <= 1) {
      return v5;
    }
  }
  int v9 = byte_1B0DE1758[*a5];
LABEL_21:
  uint64_t result = (v8 - v9);
  if (!result) {
    return v5;
  }
  return result;
}

uint64_t sub_1B0CC9D20(unsigned __int8 *a1, double *a2, int a3, int a4)
{
  *a2 = 0.0;
  if (!a3) {
    return 0;
  }
  if (a4 == 1)
  {
    uint64_t v5 = 1;
    int v6 = a1;
    uint64_t result = 1;
  }
  else
  {
    LODWORD(v8) = 3 - a4;
    if (3 - a4 >= (int)(a3 & 0xFFFFFFFE))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v8 = (int)v8;
      while (!a1[v8])
      {
        v8 += 2;
        if (v8 >= (int)(a3 & 0xFFFFFFFE))
        {
          uint64_t result = 1;
          goto LABEL_11;
        }
      }
      uint64_t result = 4294967196;
    }
LABEL_11:
    a3 = v8 ^ 1;
    int v6 = &a1[a4 & 1];
    uint64_t v5 = 2;
  }
  int v9 = &a1[a3];
  if (v6 >= v9) {
    return 0;
  }
  while (1)
  {
    int v10 = *v6;
    if ((byte_1B0DE196D[*v6] & 1) == 0) {
      break;
    }
    v6 += v5;
    if (v6 >= v9) {
      return 0;
    }
  }
  if (v10 == 43 || v10 == 45) {
    uint64_t v12 = v5;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = &v6[v12];
  if (v13 >= v9)
  {
    int v14 = 0;
    int v19 = 1;
    goto LABEL_65;
  }
  int v14 = 0;
  int v15 = 0;
  unint64_t v16 = 0;
  while (1)
  {
    uint64_t v17 = *v13;
    if ((unint64_t)(v17 - 58) < 0xFFFFFFFFFFFFFFF6) {
      break;
    }
    unint64_t v16 = (char)v17 + 10 * v16 - 48;
    v13 += v5;
    BOOL v18 = v16 <= 0x1999999999999997 || v13 >= v9;
    if (!v18)
    {
      do
      {
        if ((unint64_t)*v13 - 58 < 0xFFFFFFFFFFFFFFF6) {
          break;
        }
        v13 += v5;
        ++v15;
      }
      while (v13 < v9);
    }
    ++v14;
    if (v13 >= v9) {
      goto LABEL_52;
    }
  }
  if ((char)v17 == 46)
  {
    uint64_t result = (result + 1);
    for (v13 += v5; v13 < v9; v13 += v5)
    {
      uint64_t v20 = *v13;
      if ((unint64_t)(v20 - 58) < 0xFFFFFFFFFFFFFFF6) {
        break;
      }
      if (v16 < 0x1999999999999998)
      {
        unint64_t v16 = (char)v20 + 10 * v16 - 48;
        --v15;
        ++v14;
      }
    }
  }
  if (v13 >= v9)
  {
LABEL_52:
    int v25 = 0;
    int v23 = 1;
    int v19 = 1;
    goto LABEL_53;
  }
  if ((*v13 | 0x20) != 0x65)
  {
    int v25 = 0;
    int v23 = 1;
LABEL_114:
    int v19 = 1;
    goto LABEL_117;
  }
  v13 += v5;
  uint64_t result = (result + 1);
  if (v13 >= v9)
  {
    int v25 = 0;
    int v19 = 0;
    int v23 = 1;
    goto LABEL_53;
  }
  int v21 = *v13;
  int v22 = &v13[v5];
  if (v21 == 45)
  {
    v13 += v5;
    int v23 = -1;
  }
  else
  {
    int v23 = 1;
  }
  if (v21 == 43)
  {
    uint64_t v13 = v22;
    int v23 = 1;
  }
  if (v13 < v9)
  {
    uint64_t v24 = *v13;
    if ((unint64_t)(v24 - 58) >= 0xFFFFFFFFFFFFFFF6)
    {
      int v25 = (char)v24 - 48;
      for (v13 += v5; v13 < v9; v13 += v5)
      {
        uint64_t v56 = *v13;
        if ((unint64_t)(v56 - 58) < 0xFFFFFFFFFFFFFFF6) {
          break;
        }
        int v57 = (char)v56 + 10 * v25 - 48;
        int v25 = v25 >= 10000 ? 10000 : v57;
      }
      goto LABEL_114;
    }
  }
  int v25 = 0;
  int v19 = 0;
LABEL_117:
  while (v13 < v9 && (byte_1B0DE196D[*v13] & 1) != 0)
    v13 += v5;
LABEL_53:
  if (!v16)
  {
LABEL_65:
    double v30 = -0.0;
    if (v10 != 45) {
      double v30 = 0.0;
    }
    goto LABEL_67;
  }
  unsigned int v26 = v15 + v25 * v23;
  if ((int)v26 < 1 || v16 >= 0x1999999999999999)
  {
    if ((v26 & 0x80000000) == 0 || v16 % 0xA)
    {
      unint64_t v29 = v16;
    }
    else
    {
      int v28 = -v26;
      unint64_t v29 = v16;
      do
      {
        v29 /= 0xAuLL;
        --v28;
      }
      while (v28 && v29 == 10 * ((v29 * (unsigned __int128)0x199999999999999AuLL) >> 64));
      unsigned int v26 = -v28;
    }
  }
  else
  {
    do
    {
      unsigned int v32 = v26;
      unint64_t v29 = 10 * v16;
      --v26;
      if (v32 < 2) {
        break;
      }
      BOOL v18 = v16 >= 0x28F5C28F5C28F5DLL;
      v16 *= 10;
    }
    while (!v18);
  }
  if (v26)
  {
    if (byte_1EB21C9CA)
    {
      double v33 = (double)v29;
      if ((int)v26 <= 0)
      {
        if (v26 > 0xFFFFFF9C)
        {
          int v46 = v26;
        }
        else
        {
          do
          {
            int v46 = v26 + 100;
            double v33 = v33 * 1.0e-100;
            BOOL v18 = __CFADD__(v26, 199);
            v26 += 100;
          }
          while (!v18);
        }
        if (v46 > -10)
        {
          int v50 = v46;
        }
        else
        {
          do
          {
            int v50 = v46 + 10;
            double v33 = v33 * 1.0e-10;
            BOOL v18 = __CFADD__(v46, 19);
            v46 += 10;
          }
          while (!v18);
        }
        if (v50 < 0)
        {
          do
          {
            double v33 = v33 * 0.1;
            BOOL v18 = __CFADD__(v50++, 1);
          }
          while (!v18);
        }
      }
      else
      {
        if (v26 >= 0x64)
        {
          do
          {
            v26 -= 100;
            double v33 = v33 * 1.0e100;
          }
          while (v26 > 0x63);
        }
        if (v26 >= 0xA)
        {
          do
          {
            v26 -= 10;
            double v33 = v33 * 1.0e10;
          }
          while (v26 > 9);
        }
        if (v26)
        {
          unsigned int v34 = v26 + 1;
          do
          {
            double v33 = v33 * 10.0;
            --v34;
          }
          while (v34 > 1);
        }
      }
      if (v33 > 1.79769313e308) {
        double v33 = INFINITY;
      }
    }
    else
    {
      double v35 = (double)v29;
      unint64_t v36 = (unint64_t)(double)v29;
      double v37 = -(double)(v36 - v29);
      BOOL v18 = v29 >= v36;
      unint64_t v38 = v29 - v36;
      if (v18) {
        double v37 = (double)v38;
      }
      double v58 = v37;
      double v59 = (double)v29;
      if ((int)v26 <= 0)
      {
        if (v26 > 0xFFFFFF9C)
        {
          int v47 = v26;
        }
        else
        {
          do
          {
            int v47 = v26 + 100;
            *(void *)&double v48 = *(void *)&v35 & 0xFFFFFFFFFC000000;
            double v69 = (v59 - v48) * 9.99999999e-101 + v48 * 1.18108707e-109;
            double v63 = v48 * 9.99999999e-101
                - (v48 * 9.99999999e-101
                 + v69)
                + v69
                + (v59 - v48) * 1.18108707e-109
                + v58 * 1.0e-100
                + v59 * -1.99918998e-117;
            double v59 = v48 * 9.99999999e-101 + v69 + v63;
            double v49 = v48 * 9.99999999e-101 + v69;
            double v35 = v59;
            double v37 = v63 + v49 - v59;
            double v58 = v37;
            BOOL v18 = __CFADD__(v26, 199);
            v26 += 100;
          }
          while (!v18);
        }
        if (v47 > -10)
        {
          int v51 = v47;
        }
        else
        {
          do
          {
            int v51 = v47 + 10;
            *(void *)&double v52 = *(void *)&v35 & 0xFFFFFFFFFC000000;
            double v70 = (v59 - v52) * 9.99999996e-11 + v52 * 3.99580284e-19;
            double v64 = v52 * 9.99999996e-11
                - (v52 * 9.99999996e-11
                 + v70)
                + v70
                + (v59 - v52) * 3.99580284e-19
                + v58 * 1.0e-10
                + v59 * -3.64321973e-27;
            double v59 = v52 * 9.99999996e-11 + v70 + v64;
            double v53 = v52 * 9.99999996e-11 + v70;
            double v35 = v59;
            double v37 = v64 + v53 - v59;
            double v58 = v37;
            BOOL v18 = __CFADD__(v47, 19);
            v47 += 10;
          }
          while (!v18);
        }
        if (v51 < 0)
        {
          do
          {
            *(void *)&double v54 = *(void *)&v35 & 0xFFFFFFFFFC000000;
            double v71 = (v59 - v54) * 0.0999999996 + v54 * 3.72529035e-10;
            double v65 = v54 * 0.0999999996
                - (v54 * 0.0999999996
                 + v71)
                + v71
                + (v59 - v54) * 3.72529035e-10
                + v58 * 0.1
                + v59 * -5.55111512e-18;
            double v59 = v54 * 0.0999999996 + v71 + v65;
            double v55 = v54 * 0.0999999996 + v71;
            double v35 = v59;
            double v37 = v65 + v55 - v59;
            double v58 = v37;
            BOOL v18 = __CFADD__(v51++, 1);
          }
          while (!v18);
        }
      }
      else
      {
        if (v26 >= 0x64)
        {
          do
          {
            v26 -= 100;
            *(void *)&double v39 = *(void *)&v35 & 0xFFFFFFFFFC000000;
            double v66 = (v59 - v39) * 9.99999995e99 + v39 * 5.15323793e91;
            double v60 = v39 * 9.99999995e99
                - (v39 * 9.99999995e99
                 + v66)
                + v66
                + (v59 - v39) * 5.15323793e91
                + v58 * 1.0e100
                + v59 * -1.59028911e83;
            double v59 = v39 * 9.99999995e99 + v66 + v60;
            double v40 = v39 * 9.99999995e99 + v66;
            double v35 = v59;
            double v37 = v60 + v40 - v59;
            double v58 = v37;
          }
          while (v26 > 0x63);
        }
        if (v26 >= 0xA)
        {
          do
          {
            v26 -= 10;
            *(void *)&double v41 = *(void *)&v35 & 0xFFFFFFFFFC000000;
            double v67 = (v59 - v41) * 1.0e10 + v41 * 0.0;
            double v61 = v41 * 1.0e10 - (v41 * 1.0e10 + v67) + v67 + (v59 - v41) * 0.0 + v58 * 1.0e10 + v59 * 0.0;
            double v59 = v41 * 1.0e10 + v67 + v61;
            double v42 = v41 * 1.0e10 + v67;
            double v35 = v59;
            double v37 = v61 + v42 - v59;
            double v58 = v37;
          }
          while (v26 > 9);
        }
        if (v26)
        {
          unsigned int v43 = v26 + 1;
          do
          {
            *(void *)&double v44 = *(void *)&v35 & 0xFFFFFFFFFC000000;
            double v68 = (v59 - v44) * 10.0 + v44 * 0.0;
            double v62 = v44 * 10.0 - (v44 * 10.0 + v68) + v68 + (v59 - v44) * 0.0 + v58 * 10.0 + v59 * 0.0;
            double v59 = v44 * 10.0 + v68 + v62;
            double v45 = v44 * 10.0 + v68;
            double v35 = v59;
            double v37 = v62 + v45 - v59;
            double v58 = v37;
            --v43;
          }
          while (v43 > 1);
        }
      }
      double v33 = v35 + v37;
    }
  }
  else
  {
    double v33 = (double)v29;
  }
  *a2 = v33;
  if (v10 == 45)
  {
    double v30 = -v33;
LABEL_67:
    *a2 = v30;
  }
  if (!v19 || v13 != v9 || v14 < 1 || (int)result <= 0)
  {
    if ((int)result > 1)
    {
      BOOL v31 = result != 3 && v19 == 0;
      if (!v31 && v14 > 0) {
        return 0xFFFFFFFFLL;
      }
    }
    return 0;
  }
  return result;
}

int sqlite3_create_collation(sqlite3 *a1, const char *zName, int eTextRep, void *pArg, int (__cdecl *xCompare)(void *, int, const void *, int, const void *))
{
  return sqlite3_create_collation_v2(a1, zName, eTextRep, pArg, xCompare, 0);
}

uint64_t sub_1B0CCA880(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 328);
  unsigned int v3 = *(_DWORD *)(a1 + 200);
  uint64_t v4 = *(unsigned int *)(a1 + 184);
  if (v4 >= v3) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v4;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 128);
  if ((int)v6 >= 1)
  {
    int v7 = (void *)(*(void *)(a1 + 120) + 8);
    do
    {
      if (!*v7) {
        void *v7 = *(void *)(a1 + 96);
      }
      v7 += 7;
      --v6;
    }
    while (v6);
  }
  uint64_t v8 = *(void *)(a1 + 96);
  if (v8) {
    uint64_t v9 = v4 + v4 * ((v8 - 1) / v4);
  }
  else {
    uint64_t v9 = 0;
  }
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = v9;
  if (*(unsigned char *)(a1 + 11)
    || *(unsigned char *)(a1 + 9) == 4
    || (uint64_t v10 = **(void **)(a1 + 72)) != 0 && ((*(uint64_t (**)(void))(v10 + 96))() & 0x200) != 0)
  {
    *(void *)uint64_t v2 = 0xD763A120F905D5D9;
    *(_DWORD *)(v2 + 8) = -1;
  }
  else
  {
    *(_DWORD *)(v2 + 8) = 0;
    *(void *)uint64_t v2 = 0;
  }
  sqlite3_initialize();
  arc4random_buf((void *)(a1 + 56), 4uLL);
  *(_DWORD *)(v2 + 12) = bswap32(*(_DWORD *)(a1 + 56));
  *(_DWORD *)(v2 + 16) = bswap32(*(_DWORD *)(a1 + 36));
  *(_DWORD *)(v2 + 20) = bswap32(*(_DWORD *)(a1 + 184));
  *(_DWORD *)(v2 + 24) = bswap32(*(_DWORD *)(a1 + 200));
  bzero((void *)(v2 + 28), v5 - 28);
  unsigned int v11 = -(int)v5;
  while (1)
  {
    v11 += v5;
    if (v11 >= *(_DWORD *)(a1 + 184)) {
      break;
    }
    uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, void))(**(void **)(a1 + 80) + 24))(*(void *)(a1 + 80), v2, v5, *(void *)(a1 + 96));
    *(void *)(a1 + 96) += v5;
    if (result) {
      return result;
    }
  }
  return 0;
}

void sqlite3_randomness(int N, void *P)
{
  sqlite3_initialize();
  if (N >= 1 && P)
  {
    arc4random_buf(P, N);
  }
}

uint64_t sub_1B0CCAA58(int a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (int)a2;
  bzero(a3, (int)a2);
  dword_1EB220310 = getpid();
  uint64_t v6 = sub_1B0D06D40("/dev/urandom", 0, 0, 0);
  if ((v6 & 0x80000000) != 0)
  {
    *(void *)__strerrbuf = 0;
    time((time_t *)__strerrbuf);
    *a3 = *(void *)__strerrbuf;
    *((_DWORD *)a3 + 2) = dword_1EB220310;
    return 12;
  }
  else
  {
    uint64_t v7 = v6;
    while ((off_1EC526448(v7, a3, v5) & 0x80000000) != 0 && *__error() == 4)
      ;
    if (off_1EC5263A0(v7))
    {
      int v8 = *__error();
      long long v13 = 0u;
      long long v14 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v8, __strerrbuf, 0x4FuLL);
      sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 50043, v8, "close", &byte_1B0DE9952, __strerrbuf);
    }
  }
  return v4;
}

uint64_t sub_1B0CCABC4(unsigned int *a1, int a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = a1;
  unsigned int v3 = a2 - 1;
  if (*a1 < 0xF81)
  {
LABEL_3:
    uint64_t v4 = 0;
    *((unsigned char *)v2 + ((unint64_t)v3 >> 3) + 16) |= 1 << (v3 & 7);
    return v4;
  }
  while (1)
  {
    unsigned int v5 = v2[2];
    uint64_t v6 = v2 + 4;
    if (!v5) {
      break;
    }
    uint64_t v7 = v3 / v5;
    uint64_t v2 = (unsigned int *)*((void *)v6 + v7);
    if (!v2)
    {
      int v8 = (unsigned int *)sub_1B0C7FC94(512);
      if (!v8)
      {
        *((void *)v6 + v7) = 0;
        return 7;
      }
      uint64_t v2 = v8;
      *((_OWORD *)v8 + 30) = 0u;
      *((_OWORD *)v8 + 31) = 0u;
      *((_OWORD *)v8 + 28) = 0u;
      *((_OWORD *)v8 + 29) = 0u;
      *((_OWORD *)v8 + 26) = 0u;
      *((_OWORD *)v8 + 27) = 0u;
      *((_OWORD *)v8 + 24) = 0u;
      *((_OWORD *)v8 + 25) = 0u;
      *((_OWORD *)v8 + 22) = 0u;
      *((_OWORD *)v8 + 23) = 0u;
      *((_OWORD *)v8 + 20) = 0u;
      *((_OWORD *)v8 + 21) = 0u;
      *((_OWORD *)v8 + 18) = 0u;
      *((_OWORD *)v8 + 19) = 0u;
      *((_OWORD *)v8 + 16) = 0u;
      *((_OWORD *)v8 + 17) = 0u;
      *((_OWORD *)v8 + 14) = 0u;
      *((_OWORD *)v8 + 15) = 0u;
      *((_OWORD *)v8 + 12) = 0u;
      *((_OWORD *)v8 + 13) = 0u;
      *((_OWORD *)v8 + 10) = 0u;
      *((_OWORD *)v8 + 11) = 0u;
      *((_OWORD *)v8 + 8) = 0u;
      *((_OWORD *)v8 + 9) = 0u;
      *((_OWORD *)v8 + 6) = 0u;
      *((_OWORD *)v8 + 7) = 0u;
      *((_OWORD *)v8 + 4) = 0u;
      *((_OWORD *)v8 + 5) = 0u;
      *((_OWORD *)v8 + 2) = 0u;
      *((_OWORD *)v8 + 3) = 0u;
      *(_OWORD *)int v8 = 0u;
      *((_OWORD *)v8 + 1) = 0u;
      *int v8 = v5;
      *((void *)v6 + v7) = v8;
    }
    v3 %= v5;
    if (*v2 <= 0xF80) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = v3 + 1;
  uint64_t v10 = v3 % 0x7C;
  int v11 = *((_DWORD *)v6 + v10);
  if (v11)
  {
    while (v11 != v9)
    {
      if ((v10 + 1) <= 0x7B) {
        uint64_t v10 = (v10 + 1);
      }
      else {
        uint64_t v10 = 0;
      }
      int v11 = *((_DWORD *)v6 + v10);
      if (!v11)
      {
        unsigned int v12 = v2[1];
        if (v12 >= 0x3E) {
          goto LABEL_20;
        }
        goto LABEL_16;
      }
    }
    return 0;
  }
  unsigned int v12 = v2[1];
  if (v12 < 0x7B)
  {
LABEL_16:
    uint64_t v4 = 0;
    v2[1] = v12 + 1;
    *((_DWORD *)v6 + v10) = v9;
    return v4;
  }
LABEL_20:
  long long v14 = (char *)sub_1B0C7FC94(496);
  if (!v14) {
    return 7;
  }
  uint64_t v15 = v14;
  memcpy(v14, v2 + 4, 0x1F0uLL);
  *uint64_t v6 = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_OWORD *)v2 + 23) = 0u;
  *((_OWORD *)v2 + 24) = 0u;
  *((_OWORD *)v2 + 25) = 0u;
  *((_OWORD *)v2 + 26) = 0u;
  *((_OWORD *)v2 + 27) = 0u;
  *((_OWORD *)v2 + 28) = 0u;
  uint64_t v16 = *v2 + 61;
  *((_OWORD *)v2 + 29) = 0u;
  *((_OWORD *)v2 + 30) = 0u;
  *((_OWORD *)v2 + 31) = 0u;
  v2[2] = ((unint64_t)v16 * (unsigned __int128)0x421084210842109uLL) >> 64;
  uint64_t v4 = sub_1B0CCABC4(v2, v9);
  for (uint64_t i = 0; i != 496; i += 4)
  {
    uint64_t v18 = *(unsigned int *)&v15[i];
    if (v18) {
      uint64_t v4 = sub_1B0CCABC4(v2, v18) | v4;
    }
  }
  int v19 = (uint64_t (**)(void *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_31:
    (*v19)(v15);
    return v4;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v15);
  --qword_1EB220150;
  off_1EB21C9E8(v15);
  uint64_t v15 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v19 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
    goto LABEL_31;
  }
  return v4;
}

uint64_t sub_1B0CCAE84(uint64_t a1, int a2)
{
  v18[1] = *MEMORY[0x1E4F143B8];
  uint64_t result = *(unsigned int *)(a1 + 48);
  if (result) {
    return result;
  }
  if (!*(void *)(a1 + 344))
  {
    while (1)
    {
      unsigned int v5 = *(unsigned __int8 *)(a1 + 22);
      if (v5 >= 4 && v5 != 5) {
        break;
      }
      if (*(unsigned char *)(a1 + 17)) {
        goto LABEL_13;
      }
      uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 72) + 56))(*(void *)(a1 + 72), 4);
      if (result != 5)
      {
        if (result) {
          return result;
        }
LABEL_13:
        *(unsigned char *)(a1 + 22) = 4;
        break;
      }
      if (!(*(unsigned int (**)(void))(a1 + 232))(*(void *)(a1 + 240))) {
        return 5;
      }
    }
  }
  if (*(unsigned char *)(a1 + 11)) {
    goto LABEL_18;
  }
  if (**(void **)(a1 + 80) && *(unsigned char *)(a1 + 9) != 4)
  {
    uint64_t v9 = *(void *)(a1 + 72);
    if (*(void *)v9)
    {
      __int16 v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 96))(v9);
      if ((v10 & 0x200) != 0)
      {
        char v11 = 1;
LABEL_43:
        if ((v10 & 0x400) == 0)
        {
          if (*(unsigned __int8 *)(a1 + 14) | (16 * (*(unsigned char *)(a1 + 14) == 3)))
          {
            uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 40))(*(void *)(a1 + 80));
            if (result) {
              return result;
            }
          }
        }
        *(void *)(a1 + 104) = *(void *)(a1 + 96);
        char v15 = a2 ? v11 : 1;
        if ((v15 & 1) == 0)
        {
          *(_DWORD *)(a1 + 52) = 0;
          uint64_t result = sub_1B0CCA880(a1);
          if (result) {
            return result;
          }
        }
        goto LABEL_18;
      }
    }
    else
    {
      __int16 v10 = 0;
    }
    unint64_t v16 = 0xD763A120F905D5D9;
    unsigned int v17 = bswap32(*(_DWORD *)(a1 + 52));
    uint64_t v12 = *(void *)(a1 + 96);
    if (v12) {
      uint64_t v13 = *(unsigned int *)(a1 + 184) + *(unsigned int *)(a1 + 184) * ((v12 - 1) / *(unsigned int *)(a1 + 184));
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t result = (*(uint64_t (**)(void, void *, uint64_t, uint64_t))(**(void **)(a1 + 80) + 16))(*(void *)(a1 + 80), v18, 8, v13);
    if (!result)
    {
      if (v18[0] != 0xD763A120F905D5D9)
      {
LABEL_37:
        if ((v10 & 0x400) == 0)
        {
          if (*(unsigned char *)(a1 + 12))
          {
            if (*(unsigned char *)(a1 + 14))
            {
              uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 40))(*(void *)(a1 + 80));
              if (result) {
                return result;
              }
            }
          }
        }
        uint64_t result = (*(uint64_t (**)(void, unint64_t *, uint64_t, void))(**(void **)(a1 + 80) + 24))(*(void *)(a1 + 80), &v16, 12, *(void *)(a1 + 104));
        if (result) {
          return result;
        }
        char v11 = 0;
        goto LABEL_43;
      }
      uint64_t result = (*(uint64_t (**)(void, void *, uint64_t, uint64_t))(**(void **)(a1 + 80) + 24))(*(void *)(a1 + 80), &unk_1B0DE20FD, 1, v13);
    }
    if (result != 522 && result != 0) {
      return result;
    }
    goto LABEL_37;
  }
  *(void *)(a1 + 104) = *(void *)(a1 + 96);
LABEL_18:
  uint64_t v7 = *(uint64_t **)(a1 + 336);
  for (uint64_t i = *v7; i; uint64_t i = *(void *)(i + 64))
    *(_WORD *)(i + 52) &= ~8u;
  uint64_t result = 0;
  v7[2] = v7[1];
  *(unsigned char *)(a1 + 21) = 4;
  return result;
}

uint64_t sub_1B0CCB118(void *a1, uint64_t a2)
{
  if (*(void *)a1[9] || (uint64_t v14 = (*(uint64_t (**)(void, void))(*a1 + 40))(*a1, 0), !v14))
  {
    unsigned int v4 = *((_DWORD *)a1 + 11);
    uint64_t v5 = *((unsigned int *)a1 + 8);
    if (v4 < v5 && (*(void *)(a2 + 32) || *(_DWORD *)(a2 + 48) > v4))
    {
      uint64_t v15 = a1[25] * v5;
      uint64_t v6 = a1[9];
      if (*(void *)v6)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v6 + 80))(v6, 5, &v15);
        LODWORD(v5) = *((_DWORD *)a1 + 8);
      }
      *((_DWORD *)a1 + 11) = v5;
    }
    if (!a2) {
      return 0;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned int *)(a2 + 48);
      if (v7 > *((_DWORD *)a1 + 8) || (*(_WORD *)(a2 + 52) & 0x10) != 0)
      {
        uint64_t v14 = 0;
      }
      else
      {
        uint64_t v8 = a1[25];
        if (v7 == 1)
        {
          unsigned int v9 = bswap32(bswap32(*(_DWORD *)(*(void *)(a2 + 40) + 136)) + 1);
          *(_DWORD *)(*(void *)(a2 + 8) + 24) = v9;
          *(_DWORD *)(*(void *)(a2 + 8) + 92) = v9;
          *(_DWORD *)(*(void *)(a2 + 8) + 96) = -1167184384;
        }
        __int16 v10 = (uint64_t (*)(void, void, uint64_t, uint64_t))a1[37];
        if (v10)
        {
          uint64_t v11 = v10(a1[40], *(void *)(a2 + 8), v7, 6);
          if (!v11) {
            return 7;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(a2 + 8);
        }
        uint64_t v14 = (*(uint64_t (**)(void, uint64_t, void, uint64_t))(*(void *)a1[9] + 24))(a1[9], v11, *((unsigned int *)a1 + 50), v8 * (v7 - 1));
        if (v7 == 1) {
          *(_OWORD *)(a1 + 17) = *(_OWORD *)(v11 + 24);
        }
        if (v7 > *((_DWORD *)a1 + 10)) {
          *((_DWORD *)a1 + 10) = v7;
        }
        ++*((_DWORD *)a1 + 64);
        ++*((_DWORD *)a1 + 68);
        uint64_t v12 = a1[14];
        if (v12) {
          sub_1B0D10D8C(v12, v7, *(void *)(a2 + 8));
        }
      }
      if (!v14)
      {
        a2 = *(void *)(a2 + 32);
        if (a2) {
          continue;
        }
      }
      return v14;
    }
  }
  return v14;
}

uint64_t sub_1B0CCB318(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)(a1 + 152);
  if (v2)
  {
    *(void *)(a1 + 152) = 0;
    if ((_dispatch_is_fork_of_multithreaded_parent() & 1) == 0)
    {
      dispatch_source_cancel_and_wait();
      dispatch_release(v2);
    }
  }
  if (qword_1EB2201D0) {
    xmmword_1EB21CA40(qword_1EB2201D0);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    if (*(_DWORD *)(v3 + 28))
    {
      uint64_t v4 = *(void *)(a1 + 48);
      *(void *)(v4 + 8) = *(void *)(v3 + 40);
      *(void *)(v3 + 40) = v4;
      *(_DWORD *)(a1 + 24) = -1;
      *(void *)(a1 + 48) = 0;
    }
    sub_1B0D06A2C(a1);
  }
  sub_1B0CCB3C8(a1);
  if (qword_1EB2201D0) {
    xmmword_1EB21CA50(qword_1EB2201D0);
  }
  return 0;
}

double sub_1B0CCB3C8(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(NSObject **)(a1 + 152);
  if (v2)
  {
    *(void *)(a1 + 152) = 0;
    if ((_dispatch_is_fork_of_multithreaded_parent() & 1) == 0)
    {
      dispatch_source_cancel_and_wait();
      dispatch_release(v2);
    }
  }
  uint64_t v3 = *(void *)(a1 + 104);
  if (v3)
  {
    off_1EC5265B0(v3, *(void *)(a1 + 88));
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if ((v4 & 0x80000000) == 0)
  {
    if (off_1EC5263A0(v4))
    {
      uint64_t v5 = *(const char **)(a1 + 56);
      int v6 = *__error();
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v6, __strerrbuf, 0x4FuLL);
      uint64_t v7 = &byte_1B0DE9952;
      if (v5) {
        uint64_t v7 = v5;
      }
      sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s", 42798, v6, "close", v7, __strerrbuf);
    }
    *(_DWORD *)(a1 + 24) = -1;
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8)
  {
    unsigned int v9 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_18:
      (*v9)(v8);
      goto LABEL_19;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v8);
    --qword_1EB220150;
    off_1EB21C9E8(v8);
    uint64_t v8 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v9 = &xmmword_1EB21CA50;
      goto LABEL_18;
    }
  }
LABEL_19:
  *(void *)(a1 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  if (!a1) {
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  if (v4) {
    xmmword_1EB21CA40(v4);
  }
  uint64_t v5 = *((void *)a1 + 20);
  if (!v5 || *((unsigned __int16 *)a1 + 130) <= iCol)
  {
    uint64_t v8 = *(void *)a1;
    *(_DWORD *)(v8 + 80) = 25;
    sub_1B0D0E714(v8, 25);
LABEL_9:
    int v6 = &qword_1B0DE22A8;
    __int16 v7 = 1;
    goto LABEL_13;
  }
  int v6 = (uint64_t *)(v5 + ((unint64_t)iCol << 6));
  __int16 v7 = *((_WORD *)v6 + 10);
  if ((v7 & 2) != 0 && *((unsigned char *)v6 + 22) == 1)
  {
    int v9 = *((_DWORD *)v6 + 4);
    if (!a1) {
      return v9;
    }
    goto LABEL_20;
  }
LABEL_13:
  if ((v7 & 0x10) == 0)
  {
    if (v7)
    {
      int v9 = 0;
      if (!a1) {
        return v9;
      }
    }
    else
    {
      int v9 = sub_1B0D18228((uint64_t)v6, 1);
      if (!a1) {
        return v9;
      }
    }
    goto LABEL_20;
  }
  int v9 = *((_DWORD *)v6 + 4);
  if ((v7 & 0x400) != 0) {
    v9 += *(_DWORD *)v6;
  }
  if (a1)
  {
LABEL_20:
    uint64_t v10 = *(void *)a1;
    unsigned int v11 = *((_DWORD *)a1 + 13);
    if (v11 || (int v12 = *(unsigned __int8 *)(v10 + 103), *(unsigned char *)(v10 + 103)))
    {
      int v12 = sub_1B0D1806C(v10, v11);
      uint64_t v10 = *(void *)a1;
    }
    *((_DWORD *)a1 + 13) = v12;
    uint64_t v13 = *(void *)(v10 + 24);
    if (v13) {
      xmmword_1EB21CA50(v13);
    }
  }
  return v9;
}

uint64_t sub_1B0CCB6B4(uint64_t a1, const char *a2, char a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (off_1EC526508(a2) == -1)
  {
    if (*__error() == 2) {
      return 5898;
    }
    int v9 = *__error();
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    *(_OWORD *)__strerrbuf = 0u;
    strerror_r(v9, __strerrbuf, 0x4FuLL);
    uint64_t v5 = 2570;
    sqlite3_log(2570, "os_unix.c:%d: (%d) %s(%s) - %s");
    return v5;
  }
  if ((a3 & 1) == 0) {
    return 0;
  }
  int v13 = 0;
  uint64_t v5 = 0;
  if (off_1EC526520(a2, &v13)) {
    return v5;
  }
  if (!fsync(v13))
  {
    uint64_t v5 = 0;
    uint64_t v8 = v13;
    if (v13 < 0) {
      return v5;
    }
    goto LABEL_16;
  }
  int v6 = *__error();
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  *(_OWORD *)__strerrbuf = 0u;
  strerror_r(v6, __strerrbuf, 0x4FuLL);
  if (a2) {
    __int16 v7 = a2;
  }
  else {
    __int16 v7 = &byte_1B0DE9952;
  }
  int v12 = v6;
  uint64_t v5 = 1290;
  sqlite3_log(1290, "os_unix.c:%d: (%d) %s(%s) - %s", 49766, v12, "fsync", v7, __strerrbuf);
  uint64_t v8 = v13;
  if ((v13 & 0x80000000) == 0)
  {
LABEL_16:
    if (off_1EC5263A0(v8))
    {
      int v11 = *__error();
      long long v17 = 0u;
      long long v18 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      *(_OWORD *)__strerrbuf = 0u;
      strerror_r(v11, __strerrbuf, 0x4FuLL);
      sqlite3_log(4106, "os_unix.c:%d: (%d) %s(%s) - %s");
    }
  }
  return v5;
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return sqlite3_bind_int64(a1, a2, a3);
}

uint64_t sub_1B0CCB8D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1[2]) {
    return a1[2];
  }
  if (!a1[21] && (*(unsigned char *)(*a1 + 96) & 8) == 0) {
    *((unsigned char *)a1 + 35) = 1;
  }
  return sub_1B0CEF480(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1B0CCB908(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a7;
  uint64_t v11 = *((unsigned int *)a1 + 36);
  if (*((_DWORD *)a1 + 37) <= (int)v11)
  {
    uint64_t v11 = sub_1B0D25510((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
  }
  else
  {
    *((_DWORD *)a1 + 36) = v11 + 1;
    uint64_t v12 = a1[17] + 40 * (int)v11;
    *(unsigned char *)uint64_t v12 = a2;
    *(_WORD *)(v12 + 2) = 0;
    *(_DWORD *)(v12 + 4) = a3;
    *(_DWORD *)(v12 + 8) = a4;
    *(_DWORD *)(v12 + 12) = a5;
    *(unsigned char *)(v12 + 1) = 0;
    *(void *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 16) = 0;
  }
  if (*(unsigned char *)(*a1 + 103))
  {
    if (v8 != -11) {
      sub_1B0C8B9A4((void *)*a1, v8, a6);
    }
    return v11;
  }
  int v13 = v11;
  if ((v11 & 0x80000000) != 0)
  {
    int v13 = *((_DWORD *)a1 + 36) - 1;
    uint64_t v14 = a1[17];
    if ((v8 & 0x80000000) != 0) {
      goto LABEL_11;
    }
LABEL_12:
    sub_1B0D257F4(a1, v14 + 40 * v13, (char *)a6, v8);
    return v11;
  }
  uint64_t v14 = a1[17];
  if ((v8 & 0x80000000) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v15 = v14 + 40 * v13;
  int v17 = *(unsigned __int8 *)(v15 + 1);
  long long v16 = (unsigned char *)(v15 + 1);
  if (v17) {
    goto LABEL_12;
  }
  if (v8 == -3)
  {
    *(_DWORD *)(v14 + 40 * v13 + 16) = a6;
    *long long v16 = -3;
  }
  else if (a6)
  {
    *(void *)(v14 + 40 * v13 + 16) = a6;
    *long long v16 = v8;
    if (v8 == -11) {
      ++*(_DWORD *)(a6 + 24);
    }
  }
  return v11;
}

void *sub_1B0CCBA4C(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = (unsigned __int8 *)a7;
  int v9 = (void *)a6;
  uint64_t v10 = (unsigned __int8 *)a4;
  uint64_t v12 = a2;
  memset(v386, 0, 56);
  BOOL v385 = 0;
  int v13 = *(void **)a1;
  if (*(_DWORD *)(a1 + 48)) {
    goto LABEL_2;
  }
  unsigned int v16 = a5;
  int v17 = (uint64_t *)a1;
  uint64_t v24 = (void *)sub_1B0D38D78(a1, 0, a2 + 8, a4, a5, a6, a7, a8);
  uint64_t v25 = *(void *)(v12 + 40);
  if (v25)
  {
    unsigned int v26 = (void *)*v17;
    if (*(void *)(*v17 + 816) || (int v27 = *(_DWORD *)(v25 + 44) - 1, (*(_DWORD *)(v25 + 44) = v27) == 0)) {
      sub_1B0D26BF8(v26, (void *)v25);
    }
  }
  *(void *)(v12 + 40) = v24;
  *(_WORD *)(v12 + 69) |= 0x200u;
  if (!v24) {
    goto LABEL_2;
  }
  ++*((_DWORD *)v24 + 11);
  if ((*(_WORD *)(v12 + 69) & 2) != 0)
  {
    uint64_t v28 = v24[2];
    if (!v28)
    {
LABEL_25:
      sub_1B0CEF2BC((uint64_t)v17, "no such index: %s", v18, v19, v20, v21, v22, v23, *(void *)(v12 + 96));
      *((unsigned char *)v17 + 29) = 1;
      goto LABEL_2;
    }
LABEL_18:
    unint64_t v29 = *(unsigned char **)v28;
    for (uint64_t i = *(unsigned __int8 **)(v12 + 96); ; ++i)
    {
      uint64_t v31 = *v29;
      uint64_t v32 = *i;
      if (v31 == v32)
      {
        if (!*v29)
        {
          *(void *)(v12 + 104) = v28;
          break;
        }
      }
      else if (byte_1B0DE1758[v31] != byte_1B0DE1758[v32])
      {
        uint64_t v28 = *(void *)(v28 + 40);
        if (!v28) {
          goto LABEL_25;
        }
        goto LABEL_18;
      }
      ++v29;
    }
  }
  unsigned int v378 = v16;
  uint64_t v33 = *v17;
  uint64_t v34 = v24[12];
  if (v34)
  {
    double v35 = (uint64_t *)(*(void *)(v33 + 32) + 24);
    int v36 = -1;
    do
    {
      uint64_t v37 = *v35;
      v35 += 4;
      ++v36;
    }
    while (v37 != v34);
    if (v24[11]) {
      goto LABEL_34;
    }
  }
  else
  {
    int v36 = -32768;
    if (v24[11]) {
      goto LABEL_34;
    }
  }
  uint64_t v38 = *(void *)(*(void *)(v33 + 32) + 56);
  if (!v38 || !*(void *)(v38 + 64)) {
    goto LABEL_35;
  }
LABEL_34:
  if (*((unsigned char *)v17 + 221))
  {
LABEL_35:
    unint64_t v380 = 0;
    HIDWORD(v385) = 0;
    goto LABEL_37;
  }
  unint64_t v380 = sub_1B0D5674C(v17, (unsigned __int8 **)v24, 129, a3, (_DWORD *)&v385 + 1, v21, v22, v23);
LABEL_37:
  int v39 = *((unsigned __int8 *)v24 + 63);
  if (*(int *)v12 < 2) {
    unsigned int v40 = 0;
  }
  else {
    unsigned int v40 = *a3;
  }
  unsigned int v379 = v40;
  int v375 = *((unsigned __int8 *)v24 + 63);
  if (v39 == 2 || v40)
  {
    if (v39 == 1) {
      goto LABEL_46;
    }
LABEL_45:
    if (*((__int16 *)v24 + 27) > 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  uint64_t v10 = sub_1B0D55C0C(v17, v12, (uint64_t)v10, (uint64_t)v9, (uint64_t)v8, (uint64_t)"UPDATE", v22, v23);
  int v9 = 0;
  unsigned int v8 = 0;
  if (*((unsigned char *)v24 + 63) != 1) {
    goto LABEL_45;
  }
LABEL_46:
  if (sub_1B0D393F0((uint64_t)v17, (uint64_t)v24, v18, v19, v20, v21, v22, v23)) {
    goto LABEL_2;
  }
LABEL_47:
  if (sub_1B0D56154((uint64_t)v17, (uint64_t)v24, (uint64_t)v380, v19, v20, v21, v22, v23)) {
    goto LABEL_2;
  }
  unsigned int v41 = *((_DWORD *)v17 + 13);
  unsigned int v42 = v41 + 1;
  *((_DWORD *)v17 + 13) = v41 + 1;
  uint64_t v43 = v24[2];
  uint64_t v366 = v10;
  if ((v24[6] & 0x80) != 0)
  {
    if (!v43)
    {
      uint64_t v44 = 0;
      goto LABEL_61;
    }
    uint64_t v44 = v24[2];
    do
    {
      if ((*(_WORD *)(v44 + 99) & 3) == 2) {
        break;
      }
      uint64_t v44 = *(void *)(v44 + 40);
    }
    while (v44);
  }
  else
  {
    uint64_t v44 = 0;
  }
  if (!v43)
  {
LABEL_61:
    unsigned int v45 = 0;
    unsigned int v46 = v41;
    goto LABEL_62;
  }
  unsigned int v45 = 0;
  unsigned int v46 = v41;
  do
  {
    if (v44 == v43) {
      unsigned int v46 = v42 + v45;
    }
    ++v45;
    uint64_t v43 = *(void *)(v43 + 40);
  }
  while (v43);
  *((_DWORD *)v17 + 13) = v42 + v45;
LABEL_62:
  uint64_t v383 = v44;
  uint64_t v365 = v9;
  uint64_t v362 = a8;
  unsigned int v351 = v41;
  if (a8)
  {
    unsigned int v46 = *(_DWORD *)(a8 + 76);
    unsigned int v353 = *(_DWORD *)(a8 + 80);
    *((_DWORD *)v17 + 13) = v41;
  }
  else
  {
    unsigned int v353 = v41 + 1;
  }
  uint64_t v372 = v12;
  unsigned int v368 = v46;
  *(_DWORD *)(v12 + 72) = v46;
  uint64_t v47 = v45 + 1;
  uint64_t v367 = (uint64_t)v13;
  uint64_t v48 = sub_1B0D05DC0((uint64_t)v13, v45 + 4 * ((int)v47 + *((__int16 *)v24 + 27)) + 2);
  if (!v48)
  {
    uint64_t v10 = v366;
    goto LABEL_473;
  }
  double v49 = (void *)v48;
  uint64_t v357 = (_DWORD *)(v48 + 4 * *((__int16 *)v24 + 27));
  memset(&v357[v45 + 1], 1, v45 + 1);
  *((unsigned char *)&v357[v45 + 1] + v47) = 0;
  if (*((__int16 *)v24 + 27) >= 1) {
    memset(v49, 255, 4 * *((unsigned __int16 *)v24 + 27));
  }
  *(_OWORD *)((char *)&v386[2] + 8) = 0u;
  *(_OWORD *)((char *)&v386[1] + 8) = 0u;
  *(void *)&v386[0] = v17;
  *((void *)&v386[0] + 1) = v372;
  *(void *)&v386[1] = v362;
  DWORD2(v386[2]) = 512;
  uint64_t v57 = v17[2];
  if (!v57)
  {
    if (!v17[21] && (*(unsigned char *)(*v17 + 96) & 8) == 0) {
      *((unsigned char *)v17 + 35) = 1;
    }
    uint64_t v57 = sub_1B0CEF480(v17, v50, v51, (uint64_t)v52, v53, v54, v55, v56);
    if (!v57)
    {
      uint64_t v10 = v366;
      goto LABEL_472;
    }
  }
  uint64_t v373 = v57;
  unint64_t v374 = (int *)a3;
  uint64_t v358 = (uint64_t)v8;
  __b = &v357[v45 + 1];
  uint64_t v361 = v17;
  if ((int)*a3 < 1)
  {
    char v360 = 0;
    LOBYTE(v59) = 0;
    __int16 v371 = 0;
    unsigned int v370 = -1;
LABEL_77:
    unsigned __int8 v349 = v59 + v360;
    char v381 = v59;
    if ((v24[6] & 0x60) != 0)
    {
      LOWORD(v62) = *((_WORD *)v24 + 27);
      do
      {
        if ((__int16)v62 < 1) {
          break;
        }
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        int v65 = 0;
        do
        {
          if ((*((_DWORD *)v49 + v64) & 0x80000000) != 0)
          {
            uint64_t v66 = v24[1] + v63;
            if ((*(_WORD *)(v66 + 14) & 0x60) != 0)
            {
              int v67 = *(unsigned __int16 *)(v66 + 12);
              if (v67
                && !*((unsigned char *)v24 + 63)
                && (double v69 = (_DWORD *)v24[10]) != 0
                && *v69 >= v67
                && (uint64_t v70 = *(void *)&v69[6 * (v67 - 1) + 2],
                    uint64_t v390 = 0,
                    int v391 = v49,
                    uint64_t v387 = 0,
                    long long v389 = 0u,
                    uint64_t v388 = sub_1B0D5C028,
                    v70))
              {
                sub_1B0D32AB4((uint64_t)&v387, v70);
                LOBYTE(v59) = v381;
                int v68 = WORD2(v390);
              }
              else
              {
                int v68 = 0;
              }
              if (!(_BYTE)v59) {
                v68 &= ~2u;
              }
              if (v68)
              {
                *((_DWORD *)v49 + v64) = 99999;
                int v65 = 1;
              }
            }
          }
          ++v64;
          uint64_t v62 = *((__int16 *)v24 + 27);
          v63 += 16;
        }
        while (v64 < v62);
      }
      while (v65);
    }
    if (*((unsigned char *)v24 + 63) == 1) {
      uint64_t v71 = -1;
    }
    else {
      uint64_t v71 = 0;
    }
    *(void *)(v372 + 88) = v71;
    int v72 = sub_1B0CBBBB4((uint64_t)v17, (unsigned __int8 **)v24, (uint64_t)v49, v349);
    BOOL v354 = v378 == 5;
    uint64_t v73 = v24[2];
    int v350 = v72;
    if (v73)
    {
      uint64_t v74 = 0;
      if (v349) {
        BOOL v75 = 0;
      }
      else {
        BOOL v75 = v72 <= 1;
      }
      char v76 = !v75;
      char v376 = v76;
      int v77 = v357;
      uint64_t v78 = v383;
      char v79 = v381;
      uint64_t v80 = &v357[v45 + 1];
      while (1)
      {
        char v83 = v376;
        if (v73 == v78) {
          char v83 = 1;
        }
        if (v83) {
          goto LABEL_107;
        }
        uint64_t v84 = *(void *)(v73 + 72);
        if (v84)
        {
          uint64_t v390 = 0;
          int v391 = v49;
          uint64_t v387 = 0;
          long long v389 = 0u;
          uint64_t v388 = sub_1B0D5C028;
          sub_1B0D32AB4((uint64_t)&v387, v84);
          char v79 = v381;
          int v85 = WORD2(v390);
          if (!v381) {
            int v85 = WORD2(v390) & 0xFFFD;
          }
          if (v85)
          {
LABEL_107:
            int v81 = *((_DWORD *)v17 + 14) + 1;
            *((_DWORD *)v17 + 14) = v81 + *(unsigned __int16 *)(v73 + 96);
            if (v81) {
              goto LABEL_108;
            }
LABEL_133:
            uint64_t v78 = v383;
LABEL_134:
            int v81 = 0;
            uint64_t v82 = v74 + 1;
            v80[v74 + 1] = 0;
            goto LABEL_109;
          }
        }
        if (!*(_WORD *)(v73 + 94)) {
          goto LABEL_133;
        }
        unint64_t v86 = 0;
        uint64_t v87 = 8;
        while ((*(__int16 *)(*(void *)(v73 + 8) + 2 * v86) & 0x80000000) == 0)
        {
          if ((*((_DWORD *)v49 + *(unsigned __int16 *)(*(void *)(v73 + 8) + 2 * v86)) & 0x80000000) == 0) {
            goto LABEL_128;
          }
LABEL_120:
          ++v86;
          v87 += 24;
          if (v86 >= *(unsigned __int16 *)(v73 + 94))
          {
            uint64_t v78 = v383;
            uint64_t v80 = &v357[v45 + 1];
            goto LABEL_134;
          }
        }
        uint64_t v88 = *(void *)(*(void *)(v73 + 80) + v87);
        uint64_t v390 = 0;
        int v391 = v49;
        uint64_t v387 = 0;
        long long v389 = 0u;
        uint64_t v388 = sub_1B0D5C028;
        if (v88)
        {
          sub_1B0D32AB4((uint64_t)&v387, v88);
          char v79 = v381;
          int v89 = WORD2(v390);
        }
        else
        {
          int v89 = 0;
        }
        if (!v79) {
          v89 &= ~2u;
        }
        if (!v89) {
          goto LABEL_120;
        }
LABEL_128:
        int v81 = *((_DWORD *)v17 + 14) + 1;
        *((_DWORD *)v17 + 14) = v81 + *(unsigned __int16 *)(v73 + 96);
        if (v378 == 11)
        {
          int v90 = v354;
          if (*(unsigned char *)(v73 + 98) == 5) {
            int v90 = 1;
          }
          BOOL v354 = v90;
        }
        uint64_t v80 = &v357[v45 + 1];
        if (!v81) {
          goto LABEL_133;
        }
LABEL_108:
        uint64_t v82 = v74 + 1;
        uint64_t v78 = v383;
LABEL_109:
        v357[v74] = v81;
        uint64_t v73 = *(void *)(v73 + 40);
        uint64_t v74 = v82;
        if (!v73) {
          goto LABEL_191;
        }
      }
    }
    LODWORD(v82) = 0;
    int v77 = v357;
    uint64_t v80 = &v357[v45 + 1];
LABEL_191:
    LODWORD(v385) = v354;
    int v126 = *((_DWORD *)v17 + 14) + 1;
    *((_DWORD *)v17 + 14) = v126;
    v77[v82] = v126;
    if (v354) {
      memset(v80, 1, v45 + 1);
    }
    uint64_t v127 = v82;
    unsigned int v8 = (unsigned __int8 *)v358;
    a3 = (unsigned int *)v374;
    if (!*((unsigned char *)v17 + 30)) {
      *(_WORD *)(v373 + 268) |= 0x10u;
    }
    uint64_t v128 = (uint64_t)v380;
    if (v380) {
      BOOL v129 = 0;
    }
    else {
      BOOL v129 = v350 == 0;
    }
    char v130 = !v129;
    sub_1B0D3597C((uint64_t)v17, v130, v36);
    int v138 = *((unsigned __int8 *)v24 + 63);
    uint64_t v340 = v127;
    if (v138 == 1)
    {
      uint64_t v139 = 0;
      uint64_t v347 = 0;
      int v377 = 0;
      unsigned int v341 = 0;
      uint64_t v140 = v383;
      unsigned int v141 = v379;
    }
    else
    {
      unsigned int v341 = v357[v127];
      int v142 = *((_DWORD *)v17 + 14);
      uint64_t v139 = (v142 + 1);
      if (v380 || v360 || v350)
      {
        int v377 = v142 + 2;
        int v143 = v139 + *((__int16 *)v24 + 27);
      }
      else
      {
        int v377 = 0;
        int v143 = v142 + 1;
      }
      uint64_t v140 = v383;
      unsigned int v141 = v379;
      if (v349) {
        BOOL v144 = 0;
      }
      else {
        BOOL v144 = v380 == 0;
      }
      BOOL v145 = v144 && v350 == 0;
      if (v145) {
        int v146 = v143;
      }
      else {
        int v146 = v143 + 1;
      }
      if (v145) {
        int v147 = v139;
      }
      else {
        int v147 = v143 + 1;
      }
      HIDWORD(v347) = v147;
      LODWORD(v347) = v146 + 1;
      *((_DWORD *)v17 + 14) = v146 + *((__int16 *)v24 + 27);
    }
    int v148 = v375;
    if (v375 == 2)
    {
      uint64_t v346 = v17[46];
      v17[46] = *v24;
      if (v141)
      {
        __leuint64_t n = (size_t)v17;
        goto LABEL_231;
      }
      sub_1B0D562BC(v17, (uint64_t)v24, v366, (uint64_t)v365, v358, v368);
      unsigned int v8 = 0;
      uint64_t v365 = 0;
      __leuint64_t n = (size_t)v17;
    }
    else
    {
      uint64_t v346 = 0;
      __leuint64_t n = 0;
      if (v141) {
        goto LABEL_231;
      }
    }
    if (sub_1B0D373A0((uint64_t)v386, (uint64_t)v366, v132, v133, v134, v135, v136, v137))
    {
LABEL_229:
      uint64_t v10 = v366;
      goto LABEL_470;
    }
    int v138 = *((unsigned __int8 *)v24 + 63);
    uint64_t v140 = v383;
    unsigned int v141 = v379;
LABEL_231:
    if (v138 == 1)
    {
      uint64_t v10 = v366;
      sub_1B0D5A9AC((void **)v17, (int *)v372, (uint64_t)v24, (uint64_t)v374, v371, (uint64_t)v49, v366, v378);
LABEL_470:
      if (__len) {
        *(void *)(__len + 368) = v346;
      }
      goto LABEL_472;
    }
    unsigned int v344 = *((_DWORD *)v17 + 17) - 1;
    *((_DWORD *)v17 + 17) = v344;
    if ((*(unsigned char *)(v367 + 52) & 1) == 0 || v17[22] || *((unsigned char *)v17 + 30))
    {
      unsigned int v336 = 0;
    }
    else
    {
      unsigned int v336 = 0;
      if (!v362 && !*((unsigned char *)v17 + 219))
      {
        int v212 = *((_DWORD *)v17 + 14);
        uint64_t v213 = (v212 + 1);
        *((_DWORD *)v17 + 14) = v213;
        unsigned int v336 = v212 + 1;
        sub_1B0D254B8(v373, 71, 0, v213, v134, v135, v136, v137);
        unsigned int v141 = v379;
        uint64_t v140 = v383;
      }
    }
    unsigned int v345 = v139;
    if (!v141 && (v24[6] & 0x80) == 0)
    {
      sub_1B0C8A924(v373, 75, 0, v341, v139, v135, v136, v137);
      uint64_t v149 = *((unsigned int *)v17 + 13);
      *((_DWORD *)v17 + 13) = v149 + 1;
      unsigned int v343 = v149;
      int v154 = sub_1B0C8A924(v373, 118, v149, 0, v341, v150, v151, v152);
      unsigned int v333 = 0;
      __int16 v155 = 0;
      unsigned int v338 = 0;
      if (!v362)
      {
LABEL_279:
        uint64_t v184 = 4;
        if (!v380 && !*((unsigned char *)v17 + 30) && !v350 && !v349 && !v354 && (!v366 || (v366[6] & 0x40) == 0)) {
          uint64_t v184 = 12;
        }
        uint64_t v167 = sub_1B0C9B61C((uint64_t)v17, (int *)v372, (uint64_t)v366, 0, 0, 0, v184, v353);
        if (!v167) {
          goto LABEL_229;
        }
        unint64_t v331 = *(void *)(v167 + 40);
        unint64_t v165 = HIDWORD(v331);
        int v185 = *(unsigned __int8 *)(v167 + 66);
        int v339 = *(unsigned char *)(v167 + 68) & 1;
        int v168 = 1;
        if (v185 != 1)
        {
          uint64_t v186 = (uint64_t *)v17[21];
          if (!v186) {
            uint64_t v186 = v17;
          }
          *((unsigned char *)v186 + 32) = 1;
          if (v185 == 2)
          {
            int v168 = 2;
            if ((v331 & 0x8000000000000000) == 0 && v368 != HIDWORD(v331)) {
              int v168 = 2 * (__b[HIDWORD(v331) - v351] == 0);
            }
          }
          else
          {
            int v168 = v185;
          }
        }
        goto LABEL_252;
      }
LABEL_251:
      sub_1B0CC2204((uint64_t)v17, (unsigned __int8 **)v366, v344, 16, v153, v135, v136, v137);
      uint64_t v167 = 0;
      int v339 = 0;
      int v168 = 1;
      LODWORD(v331) = v169;
LABEL_252:
      int v330 = v165;
      int v355 = v168;
      int v332 = (uint64_t **)v167;
      __int16 v337 = v155;
      if ((v24[6] & 0x80) != 0)
      {
        unsigned int v328 = v154;
        uint64_t v136 = v155;
        uint64_t v171 = v383;
        if ((int)v136 >= 1)
        {
          uint64_t v172 = 0;
          do
          {
            uint64_t v173 = v136;
            *(double *)v166.i64 = sub_1B0D32578(v373, (uint64_t)v24, v368, *(__int16 *)(*(void *)(v171 + 8) + 2 * v172), v333 + v172, v135, v136, v137, v166);
            uint64_t v136 = v173;
            uint64_t v171 = v383;
            ++v172;
          }
          while (v173 != v172);
        }
        int v170 = v355;
        uint64_t v335 = v136;
        if (v355)
        {
          uint64_t v161 = (_DWORD *)v373;
          uint64_t v139 = v345;
          uint64_t v131 = v328;
          if (v328)
          {
            sub_1B0C9CF24(v373, v328);
            int v170 = v355;
          }
          int v342 = 0;
          uint64_t v158 = v333;
          unsigned int v338 = v333;
        }
        else
        {
          uint64_t v188 = *(void *)(v171 + 32);
          uint64_t v139 = v345;
          if (!v188)
          {
            uint64_t v189 = v136;
            uint64_t v190 = sub_1B0D4FCF8(v367, v383);
            uint64_t v136 = v189;
            uint64_t v188 = v190;
          }
          sub_1B0CCB908((uint64_t *)v373, 97, v333, v136, v338, v188, v136, v137);
          uint64_t v161 = (_DWORD *)v373;
          sub_1B0CEF5FC(v373, 138, v343, v338, v333, v335, v191, v192);
          uint64_t v158 = v333;
          int v342 = 0;
          int v170 = 0;
          uint64_t v335 = 0;
        }
        uint64_t v128 = (uint64_t)v380;
        unsigned int v156 = v368;
        int v148 = v375;
        unsigned int v141 = v379;
        char v159 = v381;
        uint64_t v160 = v351;
      }
      else
      {
        uint64_t v161 = (_DWORD *)v373;
        sub_1B0D254B8(v373, 135, v368, v139, v163, v135, v164, v137);
        int v170 = v355;
        if (v355)
        {
          if (v154)
          {
            sub_1B0C9CF24(v373, v154);
            int v170 = v355;
          }
          int v342 = 0;
        }
        else
        {
          int v187 = *((_DWORD *)v17 + 14) + 1;
          *((_DWORD *)v17 + 14) = v187;
          v357[v340] = v187;
          sub_1B0C8A924(v373, 128, v343, v341, v139, v135, v136, v137);
          int v342 = 0;
          int v170 = 0;
        }
        uint64_t v335 = 0;
        unsigned int v156 = v368;
        int v148 = v375;
        unsigned int v141 = v379;
        char v159 = v381;
        uint64_t v160 = v351;
        uint64_t v158 = v333;
      }
      goto LABEL_301;
    }
    if (v140) {
      __int16 v155 = *(_WORD *)(v140 + 94);
    }
    else {
      __int16 v155 = 0;
    }
    unsigned int v156 = v368;
    int v157 = *((_DWORD *)v17 + 14);
    uint64_t v158 = (v157 + 1);
    uint64_t v153 = (v157 + v155);
    unsigned int v338 = v141 + v153 + 1;
    *((_DWORD *)v17 + 14) = v338;
    if (v362)
    {
      unsigned int v343 = 0;
      if (!v141)
      {
        unsigned int v333 = v157 + 1;
        int v154 = 0;
        goto LABEL_251;
      }
      uint64_t v335 = v155;
      __int16 v337 = v155;
      char v159 = v381;
      uint64_t v160 = v351;
      uint64_t v161 = (_DWORD *)v373;
    }
    else
    {
      __int16 v337 = v155;
      uint64_t v335 = v155;
      if (v375 == 2) {
        int v162 = *((__int16 *)v24 + 27);
      }
      else {
        int v162 = 0;
      }
      uint64_t v174 = v141 + v155 + v162;
      uint64_t v175 = *((unsigned int *)v17 + 13);
      *((_DWORD *)v17 + 13) = v175 + 1;
      unsigned int v343 = v175;
      unsigned int v333 = v157 + 1;
      if (v140)
      {
        uint64_t v176 = v140;
        sub_1B0C8A924(v373, 75, 0, v158, v153, v135, v136, v137);
        int v329 = sub_1B0D254B8(v373, 118, v175, v174, v177, v178, v179, v180);
        uint64_t v181 = sub_1B0D2FDAC(v17, v176);
        if (v181)
        {
          *(_WORD *)(v181 + 8) = v174;
          sub_1B0D2FF04((void *)v373, v181, -8);
        }
        uint64_t v139 = v345;
        uint64_t v161 = (_DWORD *)v373;
      }
      else
      {
        uint64_t v161 = (_DWORD *)v373;
        int v329 = sub_1B0D254B8(v373, 118, v175, v174, v153, v135, v136, v137);
        uint64_t v139 = v345;
      }
      if (!v379)
      {
        BOOL v354 = v385;
        __int16 v155 = v337;
        int v154 = v329;
        goto LABEL_279;
      }
      sub_1B0D5B5E0(v17, v175, v383, v374, v372, v366, v365, v8, v327);
      unsigned int v141 = v379;
      unsigned int v182 = v175;
      int v148 = v375;
      unsigned int v156 = v368;
      if (v375 == 2) {
        unsigned int v156 = v182;
      }
      char v159 = v381;
      uint64_t v160 = v351;
      uint64_t v158 = v333;
    }
    int v170 = 0;
    unsigned int v183 = (uint64_t *)v17[21];
    if (!v183) {
      unsigned int v183 = v17;
    }
    int v342 = 1;
    *((unsigned char *)v183 + 32) = 1;
    int v330 = (int)v183;
    LODWORD(v331) = v183;
    int v332 = 0;
    unsigned int v338 = v158;
    int v339 = 1;
LABEL_301:
    uint64_t v359 = v8;
    unsigned int v369 = v156;
    int v356 = v170;
    if (v362)
    {
      unsigned int v352 = 0;
      unsigned int __ba = v344;
      uint64_t v193 = HIDWORD(v347);
    }
    else
    {
      if (!v141 && v170 != 2)
      {
        uint64_t v194 = v160;
        unint64_t v380 = (unsigned __int8 *)v128;
        uint64_t v195 = v139;
        unint64_t v196 = v161;
        uint64_t v197 = v158;
        sub_1B0C9FAF0(v332, v131, v132, v158, v160, v135, v136, v137);
        uint64_t v158 = v197;
        uint64_t v161 = v196;
        uint64_t v139 = v195;
        uint64_t v128 = (uint64_t)v380;
        int v170 = v356;
        uint64_t v160 = v194;
        unsigned int v156 = v369;
      }
      uint64_t v198 = v383;
      if (v148 != 2)
      {
        LODWORD(v387) = 0;
        int v384 = 0;
        if (!v170) {
          goto LABEL_317;
        }
        if ((v331 & 0x80000000) == 0) {
          __b[(int)v331 - (int)v160] = 0;
        }
        if ((v330 & 0x80000000) == 0) {
          __b[v330 - (int)v160] = 0;
        }
        if (v170 == 2 && (int)(v45 + (~v330 >> 31)) > 0)
        {
          uint64_t v199 = v160;
          int v200 = v158;
          int v201 = sub_1B0D2F924((uint64_t)v161, 15, v132, v158, v160, v135, v136, v137);
          sub_1B0CB85EC((uint64_t)v17, (uint64_t)v24, 113, 0, v199, __b, &v387, &v384);
          LODWORD(v158) = v200;
          uint64_t v198 = v383;
          unsigned int v156 = v369;
          if (v201)
          {
            int v202 = v161[36];
            if (v202 - 1 == v201)
            {
              v161[36] = v201;
            }
            else
            {
              if (*(unsigned char *)(*(void *)v161 + 103)) {
                int v323 = &byte_1E9B52240;
              }
              else {
                int v323 = (char *)(*(void *)(v373 + 136) + 40 * v201);
              }
              *((_DWORD *)v323 + 2) = v202;
              uint64_t v161 = (_DWORD *)v373;
              a3 = (unsigned int *)v374;
              uint64_t v128 = (uint64_t)v380;
              unsigned int v156 = v369;
              uint64_t v198 = v383;
              LODWORD(v158) = v200;
              int v17 = v361;
            }
          }
        }
        else
        {
LABEL_317:
          int v203 = v158;
          sub_1B0CB85EC((uint64_t)v17, (uint64_t)v24, 113, 0, v160, __b, &v387, &v384);
          LODWORD(v158) = v203;
          uint64_t v198 = v383;
          unsigned int v156 = v369;
        }
        uint64_t v139 = v345;
        int v170 = v356;
      }
      if (v170)
      {
        if (v331 != v156 && v330 != v156)
        {
          sub_1B0CEF5FC((uint64_t)v161, 28, v369, v344, v338, v335, v136, v137);
          int v170 = v356;
          uint64_t v198 = v383;
        }
        unsigned int __ba = v344;
        if (v170 != 1)
        {
          unsigned int __ba = *((_DWORD *)v17 + 17) - 1;
          *((_DWORD *)v17 + 17) = __ba;
        }
        if (v198) {
          uint64_t v204 = v338;
        }
        else {
          uint64_t v204 = v139;
        }
        sub_1B0D254B8((uint64_t)v161, 50, v204, v344, v160, v135, v136, v137);
        unsigned int v352 = 0;
        unsigned int v141 = v379;
        char v159 = v381;
        uint64_t v193 = HIDWORD(v347);
      }
      else
      {
        int v205 = v148;
        char v206 = v342 ^ 1;
        if (v198) {
          char v206 = 0;
        }
        if (v206)
        {
          sub_1B0D254B8((uint64_t)v161, 36, v343, v344, v160, v135, v136, v137);
          uint64_t v216 = (*((_DWORD *)v17 + 17) - 1);
          *((_DWORD *)v17 + 17) = v216;
          unsigned int v352 = sub_1B0D254B8((uint64_t)v161, 135, v343, v139, v217, v218, v219, v220);
          unsigned int __ba = v216;
          sub_1B0C8A924((uint64_t)v161, 31, v369, v216, v139, v221, v222, v223);
          int v148 = v205;
          unsigned int v141 = v379;
          char v159 = v381;
          uint64_t v193 = HIDWORD(v347);
        }
        else
        {
          unsigned int v334 = v158;
          uint64_t v207 = (*((_DWORD *)v17 + 17) - 1);
          *((_DWORD *)v17 + 17) = v207;
          sub_1B0D254B8((uint64_t)v161, 36, v343, v344, v160, v135, v136, v137);
          unsigned int __ba = v207;
          unsigned int v352 = v161[36];
          if (v342)
          {
            if (v148 != 2)
            {
              if (v383)
              {
                uint64_t v208 = v337;
                if ((int)v208 >= 1)
                {
                  uint64_t v209 = 0;
                  do
                  {
                    sub_1B0C8A924((uint64_t)v161, 94, v343, v209, v334 + v209, v135, v136, v137);
                    uint64_t v209 = (v209 + 1);
                  }
                  while (v208 != v209);
                }
                sub_1B0CEF5FC((uint64_t)v161, 28, v369, __ba, v334, v208, v136, v137);
                a3 = (unsigned int *)v374;
                uint64_t v128 = (uint64_t)v380;
                int v148 = v205;
                uint64_t v210 = v378;
                unsigned int v141 = v379;
                char v211 = v381;
                uint64_t v193 = HIDWORD(v347);
              }
              else
              {
                sub_1B0D254B8((uint64_t)v161, 135, v343, v345, v160, v135, v136, v137);
                sub_1B0C8A924((uint64_t)v161, 31, v369, v207, v345, v324, v325, v326);
                a3 = (unsigned int *)v374;
                uint64_t v128 = (uint64_t)v380;
                uint64_t v210 = v378;
                unsigned int v141 = v379;
                char v211 = v381;
                uint64_t v193 = HIDWORD(v347);
              }
              int v17 = v361;
              if (!v211)
              {
LABEL_353:
                if (v128 || v360 || v350)
                {
                  if (v350) {
                    int v231 = sub_1B0D56BF4((void **)v17, (uint64_t)v24, v132, v158, v160, v135, v136, v137);
                  }
                  else {
                    int v231 = 0;
                  }
                  int v232 = sub_1B0D56A1C(v17, v128, a3, 0, 3u, (uint64_t)v24, v210);
                  uint64_t v238 = v383;
                  char v239 = v381;
                  if (*((__int16 *)v24 + 27) >= 1)
                  {
                    unint64_t v240 = 0;
                    int v241 = v232 | v231;
                    int8x16_t v242 = (int8x16_t)xmmword_1B0DE1600;
                    int8x16_t v243 = (int8x16_t)xmmword_1B0DE1610;
                    int8x16_t v244 = (int8x16_t)xmmword_1B0DE1620;
                    v245.i64[0] = 0x1000100010001;
                    v245.i64[1] = 0x1000100010001;
                    do
                    {
                      uint64_t v246 = v24[1];
                      __int16 v247 = v240;
                      if ((v240 & 0x8000) == 0 && (v24[6] & 0x20) != 0)
                      {
                        if ((_WORD)v240)
                        {
                          if (v240 >= 0x11)
                          {
                            if ((v240 & 0xF) != 0) {
                              uint64_t v250 = v240 & 0xF;
                            }
                            else {
                              uint64_t v250 = 16;
                            }
                            unint64_t v248 = v240 - v250;
                            uint64_t v251 = v246 + 142;
                            int16x8_t v252 = 0uLL;
                            int16x8_t v253 = 0uLL;
                            do
                            {
                              int8x16_t v254 = vqtbl2q_s8(*(int8x16x2_t *)(v251 - 64), v243);
                              v254.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v251 - 32), v242).i32[3];
                              v255.i32[0] = vzip1q_s16(*(int16x8_t *)(v251 - 128), *(int16x8_t *)(v251 - 112)).u32[0];
                              v255.i32[1] = vqtbl2q_s8(*(int8x16x2_t *)(v251 - 96), v244).i32[1];
                              v255.i64[1] = v254.i64[1];
                              int8x16x2_t v392 = *(int8x16x2_t *)(v251 + 32);
                              int8x16_t v256 = vqtbl2q_s8(*(int8x16x2_t *)(v251 + 64), v243);
                              v256.i32[3] = vqtbl2q_s8(*(int8x16x2_t *)(v251 + 96), v242).i32[3];
                              int16x8_t v258 = *(int16x8_t *)v251;
                              int16x8_t v257 = *(int16x8_t *)(v251 + 16);
                              v251 += 256;
                              v257.i32[0] = vzip1q_s16(v258, v257).u32[0];
                              v257.i32[1] = vqtbl2q_s8(v392, v244).i32[1];
                              v257.i64[1] = v256.i64[1];
                              int16x8_t v252 = vaddq_s16((int16x8_t)vbicq_s8(v245, (int8x16_t)vshrq_n_u16(v255, 5uLL)), v252);
                              int16x8_t v253 = vaddq_s16((int16x8_t)vbicq_s8(v245, (int8x16_t)vshrq_n_u16((uint16x8_t)v257, 5uLL)), v253);
                              v250 += 16;
                            }
                            while (v240 != v250);
                            int16x8_t v237 = vaddq_s16(v253, v252);
                            v237.i16[0] = vaddvq_s16(v237);
                            __int16 v249 = v237.i16[0];
                          }
                          else
                          {
                            unint64_t v248 = 0;
                            __int16 v249 = 0;
                          }
                          uint64_t v259 = (unsigned __int16 *)(v246 + 16 * v248 + 14);
                          do
                          {
                            unsigned int v260 = *v259;
                            v259 += 8;
                            v249 += ((v260 >> 5) & 1) == 0;
                            ++v248;
                          }
                          while (v240 != v248);
                        }
                        else
                        {
                          __int16 v249 = 0;
                        }
                        if ((*(_WORD *)(v246 + 16 * ((uint64_t)(v240 << 16) >> 16) + 14) & 0x20) != 0) {
                          __int16 v247 = v240 - v249 + *((_WORD *)v24 + 28);
                        }
                        else {
                          __int16 v247 = v249;
                        }
                      }
                      uint64_t v261 = (v377 + v247);
                      if (v241 != -1)
                      {
                        __int16 v262 = *(_WORD *)(v246 + 16 * v240 + 14);
                        if (v240 > 0x1F)
                        {
                          if ((v262 & 1) == 0)
                          {
LABEL_385:
                            sub_1B0D254B8(v373, 75, 0, (v377 + v247), v261, v234, v235, v236);
                            goto LABEL_362;
                          }
                        }
                        else if (!((1 << v240) & v241 | v262 & 1))
                        {
                          goto LABEL_385;
                        }
                      }
                      *(double *)v237.i64 = sub_1B0D32578(v373, (uint64_t)v24, v369, v240, v261, v234, v235, v236, v237);
LABEL_362:
                      ++v240;
                      uint64_t v238 = v383;
                      char v239 = v381;
                      int8x16_t v242 = (int8x16_t)xmmword_1B0DE1600;
                      int8x16_t v243 = (int8x16_t)xmmword_1B0DE1610;
                      int8x16_t v244 = (int8x16_t)xmmword_1B0DE1620;
                      v245.i64[0] = 0x1000100010001;
                      v245.i64[1] = 0x1000100010001;
                    }
                    while ((uint64_t)v240 < *((__int16 *)v24 + 27));
                  }
                  uint64_t v210 = v378;
                  if (!v238 && !v239) {
                    sub_1B0D254B8(v373, 80, v345, HIDWORD(v347), v233, v234, v235, v236);
                  }
                }
                unsigned int v382 = sub_1B0D56A1C(v17, v128, a3, 1u, 1u, (uint64_t)v24, v210);
                int v269 = *((__int16 *)v24 + 27);
                if (v269 >= 1)
                {
                  uint64_t v270 = 0;
                  uint64_t v271 = 14;
                  uint64_t v272 = v347;
                  do
                  {
                    if (v270 == *((__int16 *)v24 + 26))
                    {
                      int v273 = *(_DWORD *)(v373 + 144);
                      if (*(_DWORD *)(v373 + 148) <= v273)
                      {
                        sub_1B0D25510(v373, 75, 0, v272, 0, v265, v266, v267);
                      }
                      else
                      {
                        *(_DWORD *)(v373 + 144) = v273 + 1;
                        uint64_t v274 = *(void *)(v373 + 136) + 40 * v273;
                        *(void *)uint64_t v274 = 75;
                        *(_DWORD *)(v274 + 8) = v272;
                        *(void *)(v274 + 12) = 0;
                        *(void *)(v274 + 28) = 0;
                        *(void *)(v274 + 20) = 0;
                        *(_DWORD *)(v274 + 36) = 0;
                      }
                    }
                    else
                    {
                      int v275 = *(unsigned __int16 *)(v24[1] + v271);
                      if ((v275 & 0x60) != 0)
                      {
                        LODWORD(v272) = v272 + (v275 << 26 >> 31);
                      }
                      else
                      {
                        int v276 = *((_DWORD *)v49 + v270);
                        if (v276 < 0)
                        {
                          if ((unint64_t)v270 <= 0x1F
                            && (v385 & 0x100000000) != 0
                            && ((v382 >> v270) & 1) == 0)
                          {
                            sub_1B0D254B8(v373, 75, 0, v272, v264, v265, v266, v267);
                          }
                          else
                          {
                            *(double *)v268.i64 = sub_1B0D32578(v373, (uint64_t)v24, v369, v270, v272, v265, v266, v267, v268);
                            int v339 = 0;
                          }
                        }
                        else if (v342)
                        {
                          if (v148 != 2) {
                            LOWORD(v269) = v337;
                          }
                          sub_1B0C8A924(v373, 94, v343, (v276 + (__int16)v269), v272, v265, v266, v267);
                        }
                        else
                        {
                          sub_1B0D2F9D0((uint64_t)v17, *(unsigned __int8 **)&a3[6 * v276 + 2], v272);
                        }
                      }
                    }
                    ++v270;
                    uint64_t v272 = (v272 + 1);
                    LOWORD(v269) = *((_WORD *)v24 + 27);
                    v271 += 16;
                  }
                  while (v270 < (__int16)v269);
                }
                uint64_t v277 = v345;
                if ((v24[6] & 0x60) != 0) {
                  sub_1B0D5BC34((uint64_t)v17, v347, (uint64_t)v24, v263, v264, v265, v266, v267);
                }
                unsigned int v8 = v359;
                uint64_t v10 = v366;
                uint64_t v278 = (uint64_t)v380;
                uint64_t v279 = __ba;
                if ((v385 & 0x100000000) != 0)
                {
                  sub_1B0D36984(v373, (uint64_t)v24, v347, v263, v264, v265, v266, v267);
                  sub_1B0D56F44((uint64_t)v17, (uint64_t)v380, 129, a3, 1, (uint64_t)v24, v345, v378, __ba);
                  if (v148 == 2)
                  {
LABEL_456:
                    if (v336) {
                      sub_1B0D254B8(v373, 86, v336, 1, v264, v265, v266, v267);
                    }
                    if (v278) {
                      sub_1B0D56F44((uint64_t)v17, v278, 129, a3, 2, (uint64_t)v24, v277, v378, v279);
                    }
                    if (v356 != 1)
                    {
                      sub_1B0D31504(v373, __ba);
                      if (v356 == 2) {
                        sub_1B0C9FAF0(v332, v309, v310, v311, v312, v313, v314, v315);
                      }
                      else {
                        sub_1B0D254B8(v373, 39, v343, v352, v312, v313, v314, v315);
                      }
                    }
                    sub_1B0D31504(v373, v344);
                    if (!*((unsigned char *)v17 + 30) && !(v362 | v17[22]) && v17[20]) {
                      sub_1B0D5A764(v17, v316, v317, v318, v319, v320, v321, v322);
                    }
                    if (v336) {
                      sub_1B0D56618(v373, v336, "rows updated", v318, v319, v320, v321, v322);
                    }
                    goto LABEL_470;
                  }
                  if (v383) {
                    sub_1B0CEF5FC(v373, 28, v369, __ba, v338, v335, v266, v267);
                  }
                  else {
                    sub_1B0C8A924(v373, 31, v369, __ba, v345, v265, v266, v267);
                  }
                  int v282 = *((__int16 *)v24 + 27);
                  if (v282 >= 1)
                  {
                    uint64_t v283 = 0;
                    uint64_t v284 = 14;
                    uint64_t v285 = v347;
                    do
                    {
                      int v286 = *(unsigned __int16 *)(v24[1] + v284);
                      if ((v286 & 0x60) != 0)
                      {
                        LODWORD(v285) = v285 + (v286 << 26 >> 31);
                      }
                      else if ((*((_DWORD *)v49 + v283) & 0x80000000) != 0 && v283 != *((__int16 *)v24 + 26))
                      {
                        *(double *)v281.i64 = sub_1B0D32578(v373, (uint64_t)v24, v369, v283, v285, v265, v266, v267, v281);
                        LOWORD(v282) = *((_WORD *)v24 + 27);
                      }
                      ++v283;
                      uint64_t v285 = (v285 + 1);
                      v284 += 16;
                    }
                    while (v283 < (__int16)v282);
                  }
                  uint64_t v10 = v366;
                  uint64_t v278 = (uint64_t)v380;
                  uint64_t v277 = v345;
                  uint64_t v279 = __ba;
                  if ((v24[6] & 0x60) != 0) {
                    sub_1B0D5BC34((uint64_t)v17, v347, (uint64_t)v24, v280, v264, v265, v266, v267);
                  }
                }
                if (v148 != 2)
                {
                  HIDWORD(v327) = v279;
                  LOBYTE(v327) = v378;
                  sub_1B0CB888C(v17, v24, v357, v369, v353, HIDWORD(v347), v277, v349, v327, &v385, v49, 0);
                  if (v385 || v349)
                  {
                    if (v383) {
                      sub_1B0CEF5FC(v373, 28, v369, v279, v338, v335, v288, v289);
                    }
                    else {
                      sub_1B0C8A924(v373, 31, v369, v279, v277, v287, v288, v289);
                    }
                  }
                  if (v350) {
                    sub_1B0CBC2F0(v17, (uint64_t)v24, v277, 0, (uint64_t)v49, v349, v288, v289);
                  }
                  sub_1B0D57168((uint64_t)v17, (uint64_t)v24, v369, v353, v357, -1, v290);
                  if (v339) {
                    sub_1B0D2F978(v373, 143, v369, v291, v292, v293, v294, v295);
                  }
                  if (v349) {
                    BOOL v296 = 0;
                  }
                  else {
                    BOOL v296 = v350 <= 1;
                  }
                  if (v296) {
                    uint64_t v297 = 68;
                  }
                  else {
                    uint64_t v297 = 4;
                  }
                  sub_1B0C8A924(v373, 130, v369, v297, HIDWORD(v347), v293, v294, v295);
                  int v300 = v356;
                  if (v356 == 2)
                  {
                    int v301 = *(_DWORD *)(v373 + 144);
                    BOOL v302 = __OFSUB__(v301, 1);
                    int v303 = v301 - 1;
                    if (v303 < 0 == v302) {
                      *(_WORD *)(*(void *)(v373 + 136) + 40 * v303 + 2) = 2;
                    }
                  }
                  if (!*((unsigned char *)v17 + 30))
                  {
                    sub_1B0D2FF04((void *)v373, (uint64_t)v24, -5);
                    int v300 = v356;
                  }
                  if (v350)
                  {
                    int v304 = v300;
                    sub_1B0CBC2F0(v17, (uint64_t)v24, 0, HIDWORD(v347), (uint64_t)v49, v349, v298, v299);
                    BOOL v129 = v304 == 2;
                    LODWORD(v279) = __ba;
                    if (v129) {
                      uint64_t v305 = 6;
                    }
                    else {
                      uint64_t v305 = 4;
                    }
                    sub_1B0CBCC78((uint64_t)v17, (uint64_t)v24, v369, v353, HIDWORD(v347), (uint64_t)v357, v305, 0, 0);
                    uint64_t v277 = v345;
                    sub_1B0D57328(v17, (uint64_t)v24, (uint64_t)a3, v345, (uint64_t)v49, v349, v306, v307);
                  }
                  else
                  {
                    if (v300 == 2) {
                      uint64_t v308 = 6;
                    }
                    else {
                      uint64_t v308 = 4;
                    }
                    sub_1B0CBCC78((uint64_t)v17, (uint64_t)v24, v369, v353, HIDWORD(v347), (uint64_t)v357, v308, 0, 0);
                    uint64_t v277 = v345;
                  }
                }
                goto LABEL_456;
              }
LABEL_349:
              if (v141) {
                sub_1B0C8A924((uint64_t)v161, 94, v343, v370, v193, v135, v136, v137);
              }
              else {
                sub_1B0D2F9D0((uint64_t)v17, v371, v193);
              }
              sub_1B0D2F978((uint64_t)v161, 13, v193, v226, v227, v228, v229, v230);
              goto LABEL_353;
            }
          }
          else
          {
            sub_1B0D254B8((uint64_t)v161, 134, v343, v338, v160, v135, v136, v137);
            sub_1B0CEF5FC((uint64_t)v161, 28, v369, v207, v338, 0, v224, v225);
          }
          unsigned int v141 = v379;
          char v159 = v381;
          uint64_t v193 = HIDWORD(v347);
        }
      }
    }
    uint64_t v210 = v378;
    if (!v159) {
      goto LABEL_353;
    }
    goto LABEL_349;
  }
  uint64_t v58 = 0;
  __int16 v371 = 0;
  uint64_t v59 = 0;
  char v360 = 0;
  unsigned int v370 = -1;
  uint64_t v60 = v383;
  unsigned int v61 = v379;
  while (2)
  {
    uint64_t v91 = &a3[6 * v58];
    uint64_t v94 = (unsigned char *)*((void *)v91 + 2);
    int v93 = v91 + 4;
    uint64_t v92 = v94;
    if (v94)
    {
      int v95 = *v92;
      if (*v92)
      {
        unsigned __int8 v96 = 0;
        uint64_t v97 = v92 + 1;
        do
        {
          v96 += byte_1B0DE1758[v95];
          int v98 = *v97++;
          int v95 = v98;
        }
        while (v98);
        uint64_t v99 = v93 - 1;
        if (!v61)
        {
LABEL_146:
          uint64_t v100 = v99;
          uint64_t v101 = v59;
          BOOL v102 = sub_1B0D373A0((uint64_t)v386, *v99, v59, (uint64_t)v52, v53, v54, v55, v56);
          uint64_t v99 = v100;
          int v17 = v361;
          uint64_t v59 = v101;
          unsigned int v61 = v379;
          uint64_t v60 = v383;
          if (v102)
          {
            unsigned int v8 = (unsigned __int8 *)v358;
            uint64_t v10 = v366;
            a3 = (unsigned int *)v374;
            goto LABEL_472;
          }
        }
      }
      else
      {
        unsigned __int8 v96 = 0;
        uint64_t v99 = v93 - 1;
        if (!v61) {
          goto LABEL_146;
        }
      }
    }
    else
    {
      unsigned __int8 v96 = 0;
      uint64_t v99 = v93 - 1;
      if (!v61) {
        goto LABEL_146;
      }
    }
    if (*((__int16 *)v24 + 27) >= 1)
    {
      uint64_t v103 = 0;
      uint64_t v104 = v24[1];
      do
      {
        if (*(unsigned __int8 *)(v104 + 16 * v103 + 11) == v96)
        {
          for (uint64_t j = 0; ; ++j)
          {
            uint64_t v106 = *(unsigned __int8 *)(*(void *)(v104 + 16 * v103) + j);
            uint64_t v107 = *(unsigned __int8 *)(*v93 + j);
            if (v106 == v107)
            {
              if (!*(unsigned char *)(*(void *)(v104 + 16 * v103) + j))
              {
                if (v103 == *((__int16 *)v24 + 26))
                {
                  __int16 v371 = (unsigned __int8 *)*v99;
                  uint64_t v59 = 1;
                  unsigned int v370 = v58;
                  a3 = (unsigned int *)v374;
                }
                else
                {
                  __int16 v120 = *(_WORD *)(v104 + 16 * v103 + 14);
                  a3 = (unsigned int *)v374;
                  if (v60 && (v120 & 1) != 0)
                  {
                    char v360 = 1;
                  }
                  else if ((v120 & 0x60) != 0)
                  {
                    sub_1B0CEF2BC((uint64_t)v17, "cannot UPDATE generated column \"%s\"", v59, (uint64_t)v52, v53, v54, v55, v56, *(void *)(v104 + 16 * v103));
                    goto LABEL_189;
                  }
                }
                *((_DWORD *)v49 + v103) = v58;
                double v52 = *(const char **)(v104 + 16 * v103);
                goto LABEL_180;
              }
            }
            else if (byte_1B0DE1758[v106] != byte_1B0DE1758[v107])
            {
              break;
            }
          }
        }
        ++v103;
      }
      while (v103 != *((unsigned __int16 *)v24 + 27));
    }
    a3 = (unsigned int *)v374;
    if (v60)
    {
LABEL_188:
      sub_1B0CEF2BC((uint64_t)v17, "no such column: %s", v59, (uint64_t)v52, v53, v54, v55, v56, *v93);
      *((unsigned char *)v17 + 29) = 1;
      goto LABEL_189;
    }
    int v108 = (unsigned char *)*v93;
    for (uint64_t k = "_ROWID_"; ; ++k)
    {
      uint64_t v110 = *v108;
      uint64_t v111 = *(unsigned __int8 *)k;
      if (v110 == v111) {
        break;
      }
      if (byte_1B0DE1758[v110] != byte_1B0DE1758[v111])
      {
        uint64_t v112 = (unsigned char *)*v93;
        for (uint64_t m = "ROWID"; ; ++m)
        {
          uint64_t v114 = *v112;
          uint64_t v115 = *(unsigned __int8 *)m;
          if (v114 == v115)
          {
            if (!*v112) {
              goto LABEL_174;
            }
          }
          else if (byte_1B0DE1758[v114] != byte_1B0DE1758[v115])
          {
            int v116 = (unsigned char *)*v93;
            for (uint64_t n = "OID"; ; ++n)
            {
              uint64_t v118 = *v116;
              uint64_t v119 = *(unsigned __int8 *)n;
              if (v118 == v119)
              {
                if (!*v116) {
                  goto LABEL_174;
                }
              }
              else if (byte_1B0DE1758[v118] != byte_1B0DE1758[v119])
              {
                goto LABEL_188;
              }
              ++v116;
            }
          }
          ++v112;
        }
      }
LABEL_161:
      ++v108;
    }
    if (*v108) {
      goto LABEL_161;
    }
LABEL_174:
    __int16 v371 = (unsigned __int8 *)*v99;
    LODWORD(v103) = -1;
    uint64_t v59 = 1;
    unsigned int v370 = v58;
    double v52 = "ROWID";
LABEL_180:
    uint64_t v121 = *v17;
    uint64_t v122 = *(uint64_t (**)(void, uint64_t, void, const char *, void, uint64_t))(*v17 + 528);
    if (!v122 || *(unsigned char *)(v121 + 197) || *((unsigned char *)v17 + 302))
    {
LABEL_136:
      if (++v58 >= (int)*a3) {
        goto LABEL_77;
      }
      continue;
    }
    break;
  }
  uint64_t v123 = v59;
  int v124 = v122(*(void *)(v121 + 536), 23, *v24, v52, *(void *)(*(void *)(v367 + 32) + 32 * v36), v17[46]);
  if (v124 == 1)
  {
    int v214 = "not authorized";
    int v215 = 23;
  }
  else
  {
    if ((v124 & 0xFFFFFFFD) == 0)
    {
      if (v124 == 2) {
        *((_DWORD *)v49 + (int)v103) = -1;
      }
      uint64_t v60 = v383;
      unsigned int v61 = v379;
      uint64_t v59 = v123;
      goto LABEL_136;
    }
    int v215 = 1;
    int v214 = "authorizer malfunction";
  }
  sub_1B0CEF2BC((uint64_t)v17, v214, v125, (uint64_t)v52, v53, v54, v55, v56, v327);
  *((_DWORD *)v17 + 6) = v215;
LABEL_189:
  unsigned int v8 = (unsigned __int8 *)v358;
  uint64_t v10 = v366;
LABEL_472:
  int v13 = (void *)v367;
  sub_1B0D05C10((void *)v367, v49);
LABEL_473:
  int v9 = v365;
  uint64_t v12 = v372;
LABEL_2:
  double result = sub_1B0CA115C(v13, (void *)v12);
  if (a3) {
    double result = sub_1B0D270DC(v13, a3);
  }
  if (v10) {
    double result = sub_1B0D1DF88(v13, v10);
  }
  if (v9) {
    double result = sub_1B0D270DC(v13, v9);
  }
  if (v8) {
    return sub_1B0D1DF88(v13, v8);
  }
  return result;
}

void *sub_1B0CCDA04(unsigned char *a1, uint64_t a2, unsigned __int8 *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = (unsigned __int8 *)a5;
  *(void *)int v231 = 0;
  uint64_t v230 = 0;
  long long v228 = 0u;
  long long v229 = 0u;
  long long v227 = 0u;
  uint64_t v12 = *(void *)a1;
  if (*((_DWORD *)a1 + 12)) {
    goto LABEL_2;
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    uint64_t v17 = *(void *)(v12 + 32);
    uint64_t v18 = (uint64_t *)(v17 + 24);
    uint64_t v19 = 0xFFFFFFFF00000000;
    do
    {
      uint64_t v20 = *v18;
      v18 += 4;
      v19 += 0x100000000;
    }
    while (v20 != v16);
    uint64_t v21 = (unsigned char **)(v17 + (v19 >> 27));
  }
  else
  {
    uint64_t v21 = (unsigned char **)(a2 + 16);
  }
  uint64_t v28 = (void *)sub_1B0CB02B4((uint64_t)a1, 0, *(char **)(a2 + 24), *v21, a5, a6, a7, a8);
  uint64_t v29 = *(void *)(a2 + 40);
  if (v29)
  {
    double v30 = *(void **)a1;
    if (*(void *)(*(void *)a1 + 816) || (int v31 = *(_DWORD *)(v29 + 44) - 1, (*(_DWORD *)(v29 + 44) = v31) == 0)) {
      sub_1B0D26BF8(v30, (void *)v29);
    }
  }
  *(void *)(a2 + 40) = v28;
  *(_WORD *)(a2 + 69) |= 0x200u;
  if (!v28) {
    goto LABEL_2;
  }
  ++*((_DWORD *)v28 + 11);
  if ((*(_WORD *)(a2 + 69) & 2) == 0) {
    goto LABEL_32;
  }
  uint64_t v32 = v28[2];
  if (!v32)
  {
LABEL_31:
    sub_1B0CEF2BC((uint64_t)a1, "no such index: %s", v22, v23, v24, v25, v26, v27, *(void *)(a2 + 96));
    int v13 = 0;
    a1[29] = 1;
    goto LABEL_3;
  }
LABEL_24:
  uint64_t v33 = *(unsigned char **)v32;
  for (uint64_t i = *(unsigned __int8 **)(a2 + 96); ; ++i)
  {
    uint64_t v35 = *v33;
    uint64_t v36 = *i;
    if (v35 == v36) {
      break;
    }
    if (byte_1B0DE1758[v35] != byte_1B0DE1758[v36])
    {
      uint64_t v32 = *(void *)(v32 + 40);
      if (!v32) {
        goto LABEL_31;
      }
      goto LABEL_24;
    }
LABEL_26:
    ++v33;
  }
  if (*v33) {
    goto LABEL_26;
  }
  *(void *)(a2 + 104) = v32;
LABEL_32:
  if (!v28[11] && ((uint64_t v43 = *(void *)(*(void *)(*(void *)a1 + 32) + 56)) == 0 || !*(void *)(v43 + 64))
    || a1[221])
  {
    int v39 = (char *)v28 + 63;
    int v38 = *((unsigned __int8 *)v28 + 63);
    BOOL v40 = v38 == 2;
    if ((*(unsigned char *)(*(void *)a1 + 49) & 0x40) == 0 || v38) {
      goto LABEL_54;
    }
LABEL_40:
    uint64_t v44 = v28[12];
    unsigned int v45 = (unsigned __int8 *)*v28;
    uint64_t v46 = *(void *)(v44 + 96);
    if (v46)
    {
      int v47 = *v45;
      if (*v45)
      {
        unsigned int v48 = 0;
        double v49 = v45 + 1;
        do
        {
          unsigned int v48 = -1640531535 * (v48 + byte_1B0DE1758[v47]);
          int v50 = *v49++;
          int v47 = v50;
        }
        while (v50);
      }
      else
      {
        unsigned int v48 = 0;
      }
      int v65 = (_DWORD *)(v46 + 16 * (v48 % *(_DWORD *)(v44 + 80)));
      uint64_t v51 = (uint64_t *)(v65 + 2);
      int v52 = *v65;
      if (v52)
      {
        while (1)
        {
LABEL_65:
          uint64_t v51 = (uint64_t *)*v51;
          uint64_t v66 = (unsigned char *)v51[3];
          for (uint64_t j = (unsigned __int8 *)*v28; ; ++j)
          {
            uint64_t v68 = *v66;
            uint64_t v69 = *j;
            if (v68 != v69) {
              break;
            }
            if (!*v66) {
              goto LABEL_49;
            }
LABEL_67:
            ++v66;
          }
          if (byte_1B0DE1758[v68] == byte_1B0DE1758[v69]) {
            goto LABEL_67;
          }
          if (!--v52)
          {
            uint64_t v51 = &qword_1E9B52220;
            goto LABEL_49;
          }
        }
      }
    }
    else
    {
      uint64_t v51 = (uint64_t *)(v44 + 88);
      int v52 = *(_DWORD *)(v44 + 84);
      if (v52) {
        goto LABEL_65;
      }
    }
    uint64_t v51 = &qword_1E9B52220;
LABEL_49:
    if (v51[2] || v28[9])
    {
      int v225 = 1;
      uint64_t v41 = 0;
      if (!v40) {
        goto LABEL_52;
      }
    }
    else
    {
LABEL_54:
      int v225 = 0;
      uint64_t v41 = 0;
      if (!v40) {
        goto LABEL_52;
      }
    }
    int v42 = 1;
    if (v38 == 1) {
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v37 = sub_1B0D5674C(a1, (unsigned __int8 **)v28, 128, 0, 0, v25, v26, v27);
  int v39 = (char *)v28 + 63;
  int v38 = *((unsigned __int8 *)v28 + 63);
  BOOL v40 = v38 == 2;
  if (!v37) {
    goto LABEL_40;
  }
  uint64_t v41 = (uint64_t)v37;
  int v225 = 1;
  if (v38 == 2)
  {
    int v42 = 1;
    goto LABEL_56;
  }
LABEL_52:
  a3 = sub_1B0D55C0C((uint64_t *)a1, a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)v8, (uint64_t)"DELETE", v26, v27);
  int v42 = 0;
  a4 = 0;
  unsigned int v8 = 0;
  if (*v39 == 1)
  {
LABEL_57:
    if (!sub_1B0D393F0((uint64_t)a1, (uint64_t)v28, v22, v23, v24, v25, v26, v27)) {
      goto LABEL_58;
    }
    goto LABEL_2;
  }
LABEL_56:
  if (*((__int16 *)v28 + 27) <= 0) {
    goto LABEL_57;
  }
LABEL_58:
  if (sub_1B0D56154((uint64_t)a1, (uint64_t)v28, v41, v23, v24, v25, v26, v27))
  {
LABEL_2:
    int v13 = 0;
    goto LABEL_3;
  }
  int v221 = v42;
  uint64_t v220 = (uint64_t)a4;
  uint64_t v60 = v28[12];
  uint64_t v61 = *(void *)(v12 + 32);
  if (v60)
  {
    uint64_t v62 = (uint64_t *)(v61 + 24);
    LODWORD(v63) = -1;
    do
    {
      uint64_t v64 = *v62;
      v62 += 4;
      uint64_t v63 = (v63 + 1);
    }
    while (v64 != v60);
  }
  else
  {
    uint64_t v63 = 4294934528;
  }
  uint64_t v70 = *(void *)a1;
  uint64_t v71 = *(uint64_t (**)(void, uint64_t, void, void, void, void))(*(void *)a1 + 528);
  if (!v71 || *(unsigned char *)(v70 + 197) || a1[302])
  {
    int v212 = 0;
    goto LABEL_78;
  }
  int v113 = v71(*(void *)(v70 + 536), 9, *v28, 0, *(void *)(v61 + 32 * (int)v63), *((void *)a1 + 46));
  if (v113 == 1)
  {
    int v114 = 23;
    uint64_t v115 = "not authorized";
    goto LABEL_159;
  }
  if ((v113 & 0xFFFFFFFD) == 0)
  {
    int v212 = v113;
LABEL_78:
    char v211 = v39;
    unsigned int v72 = *((_DWORD *)a1 + 13);
    unsigned int v73 = v72 + 1;
    *((_DWORD *)a1 + 13) = v72 + 1;
    unsigned int v218 = v72;
    *(_DWORD *)(a2 + 72) = v72;
    uint64_t v75 = (uint64_t)(v28 + 2);
    uint64_t v74 = v28[2];
    if (v74)
    {
      unsigned int v76 = 0;
      do
      {
        ++v76;
        uint64_t v74 = *(void *)(v74 + 40);
      }
      while (v74);
      *((_DWORD *)a1 + 13) = v73 + v76;
    }
    else
    {
      unsigned int v76 = 0;
    }
    unsigned int v209 = v73;
    if (v221)
    {
      uint64_t v214 = *((void *)a1 + 46);
      *((void *)a1 + 46) = *v28;
      uint64_t v219 = a1;
    }
    else
    {
      uint64_t v214 = 0;
      uint64_t v219 = 0;
    }
    uint64_t v224 = *((void *)a1 + 2);
    if (!v224)
    {
      if (!*((void *)a1 + 21) && (*(unsigned char *)(*(void *)a1 + 96) & 8) == 0) {
        a1[35] = 1;
      }
      uint64_t v224 = sub_1B0CEF480((uint64_t *)a1, v53, v54, v55, v56, v57, v58, v59);
      if (!v224) {
        goto LABEL_103;
      }
    }
    uint64_t v207 = v41;
    uint64_t v215 = (uint64_t)v8;
    if (!a1[30]) {
      *(_WORD *)(v224 + 268) |= 0x10u;
    }
    if (*((void *)a1 + 21)) {
      uint64_t v77 = *((void *)a1 + 21);
    }
    else {
      uint64_t v77 = (uint64_t)a1;
    }
    int v78 = *(_DWORD *)(v77 + 124);
    int v79 = 1 << v63;
    if ((v78 & (1 << v63)) == 0)
    {
      *(_DWORD *)(v77 + 124) = v78 | v79;
      if (v63 == 1) {
        sub_1B0D0E7A4(v77);
      }
    }
    *(_DWORD *)(v77 + 120) |= v79;
    *(unsigned char *)(v77 + 32) |= v225;
    if (v221)
    {
      sub_1B0D562BC((uint64_t *)a1, (uint64_t)v28, a3, v220, v215, v218);
      uint64_t v220 = 0;
      unsigned int v8 = 0;
      v231[0] = v218;
      v231[1] = v218;
    }
    else
    {
      unsigned int v8 = (unsigned __int8 *)v215;
    }
    uint64_t v230 = 0;
    long long v228 = 0u;
    long long v229 = 0u;
    *(void *)&long long v227 = a1;
    *((void *)&v227 + 1) = a2;
    if (sub_1B0D373A0((uint64_t)&v227, (uint64_t)a3, v54, v55, v56, v57, v58, v59))
    {
LABEL_103:
      int v13 = 0;
LABEL_104:
      uint64_t v84 = v219;
      a4 = (void *)v220;
LABEL_105:
      if (v84) {
        *((void *)v84 + 46) = v214;
      }
      goto LABEL_3;
    }
    if ((*(unsigned char *)(v12 + 52) & 1) == 0 || a1[30] || *((void *)a1 + 22) || a1[219])
    {
      unsigned int v208 = 0;
    }
    else
    {
      int v173 = *((_DWORD *)a1 + 14);
      uint64_t v174 = (v173 + 1);
      *((_DWORD *)a1 + 14) = v174;
      unsigned int v208 = v173 + 1;
      sub_1B0D254B8(v224, 71, 0, v174, v80, v81, v82, v83);
    }
    if (v212) {
      BOOL v85 = 0;
    }
    else {
      BOOL v85 = a3 == 0;
    }
    char v86 = v225;
    if (!v85) {
      char v86 = 1;
    }
    if ((v86 & 1) == 0 && *v211 != 1 && !*(void *)(v12 + 360))
    {
      sub_1B0D2FB04((uint64_t)a1, v63, *((_DWORD *)v28 + 10), 1, *v28);
      if ((v28[6] & 0x80) == 0)
      {
        if (v208) {
          uint64_t v159 = v208;
        }
        else {
          uint64_t v159 = 0xFFFFFFFFLL;
        }
        sub_1B0CCB908((uint64_t *)v224, 145, *((unsigned int *)v28 + 10), v63, v159, *v28, 0xFFFFFFFFLL, v158);
      }
      uint64_t v160 = *(void *)v75;
      if (v160)
      {
        if (v208) {
          uint64_t v161 = v208;
        }
        else {
          uint64_t v161 = 0xFFFFFFFFLL;
        }
        do
        {
          while ((*(_WORD *)(v160 + 99) & 3) != 2 || (v28[6] & 0x80) == 0)
          {
            sub_1B0D254B8(v224, 145, *(unsigned int *)(v160 + 88), v63, v155, v156, v157, v158);
            uint64_t v160 = *(void *)(v160 + 40);
            if (!v160) {
              goto LABEL_177;
            }
          }
          sub_1B0C8A924(v224, 145, *(unsigned int *)(v160 + 88), v63, v161, v156, v157, v158);
          uint64_t v160 = *(void *)(v160 + 40);
        }
        while (v160);
      }
LABEL_177:
      int v13 = 0;
      uint64_t v84 = v219;
      a4 = (void *)v220;
      uint64_t v112 = v208;
      goto LABEL_221;
    }
    if (BYTE8(v229) & 0x40 | v225) {
      uint64_t v87 = 20;
    }
    else {
      uint64_t v87 = 28;
    }
    if ((v28[6] & 0x80) != 0)
    {
      do
      {
        uint64_t v91 = *(void *)v75;
        int v92 = *(_WORD *)(*(void *)v75 + 99) & 3;
        uint64_t v75 = *(void *)v75 + 40;
      }
      while (v92 != 2);
      uint64_t v93 = *(__int16 *)(v91 + 94);
      __int16 v213 = *(_WORD *)(v91 + 94);
      uint64_t v94 = *((unsigned int *)a1 + 13);
      int v95 = *((_DWORD *)a1 + 14);
      LODWORD(v206) = v95 + 1;
      HIDWORD(v206) = v94;
      *((_DWORD *)a1 + 13) = v94 + 1;
      *((_DWORD *)a1 + 14) = v95 + v93;
      uint64_t v90 = v224;
      int v204 = sub_1B0D254B8(v224, 118, v94, v93, v80, v81, v82, v83);
      uint64_t v226 = v91;
      sub_1B0D2FB30((uint64_t)a1, v91);
      unsigned int v203 = 0;
    }
    else
    {
      int v88 = *((_DWORD *)a1 + 14);
      uint64_t v89 = (v88 + 1);
      *((_DWORD *)a1 + 14) = v89;
      uint64_t v90 = v224;
      unsigned int v203 = v88 + 1;
      sub_1B0D254B8(v224, 75, 0, v89, v80, v81, v82, v83);
      uint64_t v226 = 0;
      uint64_t v206 = 0;
      int v204 = 0;
      __int16 v213 = 1;
    }
    uint64_t v96 = sub_1B0C9B61C((uint64_t)a1, (int *)a2, (uint64_t)a3, 0, 0, 0, v87, v209);
    int v13 = (uint64_t **)v96;
    if (!v96) {
      goto LABEL_104;
    }
    unint64_t v103 = *(void *)(v96 + 40);
    int v210 = *(unsigned __int8 *)(v96 + 66);
    if (v210 != 1)
    {
      uint64_t v104 = (unsigned char *)*((void *)a1 + 21);
      if (!v104) {
        uint64_t v104 = a1;
      }
      v104[32] = 1;
    }
    if (*(unsigned char *)(v96 + 68))
    {
      uint64_t v105 = v90;
      uint64_t v224 = v90;
      unint64_t v106 = v103;
      sub_1B0D2F978(v105, 143, v218, v97, v98, v99, v100, v101);
      unint64_t v103 = v106;
      uint64_t v90 = v224;
    }
    unint64_t v200 = v103;
    unint64_t v201 = HIDWORD(v103);
    if (v208) {
      sub_1B0D254B8(v90, 86, v208, 1, v98, v99, v100, v101);
    }
    uint64_t v107 = v226;
    int v202 = v13;
    if (v226)
    {
      uint64_t v216 = v8;
      uint64_t v108 = v213;
      if ((int)v108 >= 1)
      {
        uint64_t v109 = v90;
        uint64_t v110 = 0;
        do
        {
          uint64_t v111 = v108;
          *(double *)v102.i64 = sub_1B0D32578(v109, (uint64_t)v28, v218, *(__int16 *)(*(void *)(v107 + 8) + 2 * v110), (v206 + v110), v99, v100, v101, v102);
          uint64_t v108 = v111;
          uint64_t v107 = v226;
          ++v110;
        }
        while (v111 != v110);
      }
      if (v210)
      {
        unsigned int v205 = v206;
        uint64_t v90 = v224;
        uint64_t v112 = v208;
        unsigned int v8 = v216;
LABEL_146:
        uint64_t v121 = (uint64_t **)sub_1B0D05DC0(v12, v76 + 2);
        int v13 = v121;
        if (!v121)
        {
          sub_1B0C9FAF0(v202, v122, v123, v124, v125, v126, v127, v128);
          goto LABEL_104;
        }
        size_t v129 = v76 + 1;
        memset(v121, 1, v129);
        *((unsigned char *)v13 + v129) = 0;
        if ((v200 & 0x80000000) == 0) {
          *((unsigned char *)v13 + (int)(v200 - v218)) = 0;
        }
        uint64_t v136 = v211;
        if ((v200 & 0x8000000000000000) == 0) {
          *((unsigned char *)v13 + (int)(v201 - v218)) = 0;
        }
        if (v204) {
          sub_1B0C9CF24(v90, v204);
        }
        unsigned int v217 = *((_DWORD *)a1 + 17) - 1;
        *((_DWORD *)a1 + 17) = v217;
        if ((v221 & 1) == 0)
        {
          if (v210 == 2)
          {
            int v222 = sub_1B0D2F924(v90, 15, v130, v131, v132, v133, v134, v135);
            sub_1B0CB85EC((uint64_t)a1, (uint64_t)v28, 113, 8, v218, v13, &v231[1], v231);
            int v137 = *(_DWORD *)(v90 + 144);
            if (v137 - 1 == v222)
            {
              *(_DWORD *)(v90 + 144) = v222;
            }
            else
            {
              if (*(unsigned char *)(*(void *)v90 + 103)) {
                uint64_t v172 = &byte_1E9B52240;
              }
              else {
                uint64_t v172 = (char *)(*(void *)(v90 + 136) + 40 * v222);
              }
              *((_DWORD *)v172 + 2) = v137;
            }
          }
          else
          {
            sub_1B0CB85EC((uint64_t)a1, (uint64_t)v28, 113, 8, v218, v13, &v231[1], v231);
          }
        }
        if (*v211 == 1)
        {
          unsigned int v223 = 0;
          char v171 = 0;
          goto LABEL_200;
        }
        if (*((unsigned char *)v13 + (int)(v231[1] - v218))) {
          sub_1B0CEF5FC(v90, 28, v231[1], v217, v205, v213, v134, v135);
        }
        char v171 = 0;
        unsigned int v223 = 0;
LABEL_199:
        if (*v136 != 1)
        {
          HIBYTE(v199) = v210;
          LOBYTE(v199) = 11;
          sub_1B0CBB19C(a1, v28, v207, v231[1], v231[0], v205, v213, a1[30] == 0, v199);
          uint64_t v84 = v219;
LABEL_212:
          if (v171)
          {
            if (v226) {
              sub_1B0D254B8(v224, 39, HIDWORD(v206), v223 + 1, v183, v184, v185, v186);
            }
            else {
              sub_1B0D2FAAC(v224, v223, HIDWORD(v206), v182, v183, v184, v185, v186);
            }
            if (*(unsigned char *)(*(void *)v224 + 103)) {
              uint64_t v197 = &byte_1E9B52240;
            }
            else {
              uint64_t v197 = (char *)(*(void *)(v224 + 136) + 40 * (int)v223);
            }
            a4 = (void *)v220;
            *((_DWORD *)v197 + 2) = *(_DWORD *)(v224 + 144);
          }
          else
          {
            sub_1B0D31504(v224, v217);
            sub_1B0C9FAF0(v202, v190, v191, v192, v193, v194, v195, v196);
            a4 = (void *)v220;
          }
LABEL_221:
          if (!a1[30] && !*((void *)a1 + 22) && *((void *)a1 + 20)) {
            sub_1B0D5A764((uint64_t *)a1, v152, v153, v154, v155, v156, v157, v158);
          }
          if (v112) {
            sub_1B0D56618(v224, v112, "rows deleted", v154, v155, v156, v157, v158);
          }
          goto LABEL_105;
        }
LABEL_200:
        for (uint64_t k = (void *)v28[10]; k; uint64_t k = (void *)k[5])
        {
          if (*k == v12) {
            break;
          }
        }
        sub_1B0D5651C((uint64_t *)a1, (uint64_t)v28);
        uint64_t v181 = (unsigned char *)*((void *)a1 + 21);
        if (!v181) {
          uint64_t v181 = a1;
        }
        v181[33] = 1;
        if (v210 == 1)
        {
          sub_1B0D2F978(v224, 122, v218, v176, v177, v178, v179, v180);
          if (!*((void *)a1 + 21)) {
            a1[32] = 0;
          }
        }
        sub_1B0CCB908((uint64_t *)v224, 7, 0, 1, v205, (uint64_t)k, 4294967285, v180);
        int v187 = *(_DWORD *)(v224 + 144);
        BOOL v188 = __OFSUB__(v187, 1);
        int v189 = v187 - 1;
        uint64_t v84 = v219;
        if (v189 < 0 == v188) {
          *(_WORD *)(*(void *)(v224 + 136) + 40 * v189 + 2) = 2;
        }
        uint64_t v112 = v208;
        goto LABEL_212;
      }
      uint64_t v138 = (*((_DWORD *)a1 + 14) + 1);
      *((_DWORD *)a1 + 14) = v138;
      uint64_t v139 = *(void *)(v107 + 32);
      uint64_t v90 = v224;
      unsigned int v8 = v216;
      if (!v139)
      {
        uint64_t v140 = v108;
        uint64_t v141 = sub_1B0D4FCF8(*(void *)a1, v226);
        uint64_t v108 = v140;
        unsigned int v8 = v216;
        uint64_t v139 = v141;
      }
      uint64_t v142 = v108;
      sub_1B0CCB908((uint64_t *)v224, 97, v206, v108, v138, v139, v108, v101);
      unsigned int v205 = v138;
      sub_1B0CEF5FC(v224, 138, HIDWORD(v206), v138, v206, v142, v143, v144);
      __int16 v213 = 0;
      uint64_t v136 = v211;
    }
    else
    {
      uint64_t v116 = (*((_DWORD *)a1 + 14) + 1);
      *((_DWORD *)a1 + 14) = v116;
      sub_1B0D32578(v90, (uint64_t)v28, v218, 0xFFFFFFFFLL, v116, v99, v100, v101, v102);
      unsigned int v205 = v116;
      if (v210)
      {
        uint64_t v112 = v208;
        goto LABEL_146;
      }
      sub_1B0D254B8(v90, 156, v203, v116, v117, v118, v119, v120);
      __int16 v213 = 1;
      uint64_t v136 = v211;
    }
    uint64_t v112 = v208;
    sub_1B0C9FAF0(v13, v145, v146, v147, v148, v149, v150, v151);
    if ((v221 & 1) == 0) {
      sub_1B0CB85EC((uint64_t)a1, (uint64_t)v28, 113, 8, v218, 0, &v231[1], v231);
    }
    if (v226)
    {
      unsigned int v223 = sub_1B0D2F978(v90, 36, HIDWORD(v206), v162, v163, v164, v165, v166);
      if (*v136 == 1) {
        sub_1B0C8A924(v90, 94, HIDWORD(v206), 0, v205, v168, v169, v170);
      }
      else {
        sub_1B0D254B8(v90, 134, HIDWORD(v206), v205, v167, v168, v169, v170);
      }
      int v13 = 0;
      unsigned int v217 = 0;
      char v171 = 1;
      uint64_t v112 = v208;
    }
    else
    {
      unsigned int v223 = sub_1B0C8A924(v90, 46, v203, 0, v205, v164, v165, v166);
      int v13 = 0;
      unsigned int v217 = 0;
      char v171 = 1;
    }
    goto LABEL_199;
  }
  int v114 = 1;
  uint64_t v115 = "authorizer malfunction";
LABEL_159:
  sub_1B0CEF2BC((uint64_t)a1, v115, v54, v55, v56, v57, v58, v59, v198);
  int v13 = 0;
  *((_DWORD *)a1 + 6) = v114;
LABEL_3:
  double result = sub_1B0CA115C((void *)v12, (void *)a2);
  if (a3) {
    double result = sub_1B0D1DF88((void *)v12, a3);
  }
  if (a4) {
    double result = sub_1B0D270DC((void *)v12, a4);
  }
  if (v8) {
    double result = sub_1B0D1DF88((void *)v12, v8);
  }
  if (v13) {
    return sub_1B0D15C20((void *)v12, v13);
  }
  return result;
}

uint64_t sub_1B0CCE8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t **)(a1 + 40);
  uint64_t v4 = *v3;
  uint64_t v5 = (int *)v3[1];
  uint64_t v6 = v3[2];
  switch(*(unsigned char *)a2)
  {
    case 0xA7:
    case 0xA9:
    case 0xB3:
      if (!v5) {
        return 0;
      }
      int v7 = *v5;
      if (*v5 < 1) {
        return 0;
      }
      unsigned int v8 = v5 + 18;
      while (1)
      {
        int v9 = *v8;
        v8 += 26;
        if (*(_DWORD *)(a2 + 44) == v9) {
          break;
        }
        if (!--v7) {
          return 0;
        }
      }
      sub_1B0D558DC((uint64_t *)v4, v6, (unsigned __int8 *)a2);
      return 0;
    case 0xA8:
      if ((*((unsigned char *)v3 + 42) & 2) != 0 || *(_DWORD *)(a1 + 32) != *(unsigned __int8 *)(a2 + 2)) {
        return 0;
      }
      int v10 = *(_DWORD *)(v6 + 48);
      if (v10 < 1 || (uint64_t v11 = *(unsigned __int8 ***)(v6 + 40), v12 = *v11, *v11 == (unsigned __int8 *)a2))
      {
        unsigned int v13 = 0;
      }
      else
      {
        unsigned int v13 = 0;
        uint64_t v14 = v11 + 3;
        do
        {
          int v15 = sub_1B0D31DE4(0, v12, (unsigned __int8 *)a2, 0xFFFFFFFFLL);
          int v10 = *(_DWORD *)(v6 + 48);
          if (!v15) {
            break;
          }
          if ((int)++v13 >= v10) {
            break;
          }
          uint64_t v16 = *v14;
          v14 += 3;
          uint64_t v12 = v16;
        }
        while (v16 != (unsigned __int8 *)a2);
      }
      if ((int)v13 >= v10)
      {
        uint64_t v20 = *(void *)v4;
        unsigned int v21 = *(unsigned __int8 *)(*(void *)v4 + 100);
        LODWORD(v28[0]) = 0;
        uint64_t v22 = sub_1B0CB1B08(v20, *(void **)(v6 + 40), (int *)(v6 + 48), v28);
        *(void *)(v6 + 40) = v22;
        unsigned int v13 = v28[0];
        if ((v28[0] & 0x80000000) == 0)
        {
          uint64_t v23 = v22;
          *(void *)(v22 + 24 * LODWORD(v28[0])) = a2;
          uint64_t v24 = *(int **)(a2 + 32);
          if (v24) {
            int v25 = *v24;
          }
          else {
            int v25 = 0;
          }
          *(void *)(v22 + 24 * v13 + 8) = sub_1B0C7D668(*(void *)v4, *(char **)(a2 + 8), v25, v21, 0);
          if ((*(unsigned char *)(a2 + 4) & 4) != 0)
          {
            int v26 = *(_DWORD *)(v4 + 52);
            *(_DWORD *)(v4 + 52) = v26 + 1;
          }
          else
          {
            int v26 = -1;
          }
          *(_DWORD *)(v23 + 24 * v13 + 16) = v26;
        }
      }
      *(_WORD *)(a2 + 52) = v13;
      *(void *)(a2 + 64) = v6;
      return 1;
    default:
      if ((*((unsigned char *)v3 + 42) & 2) == 0) {
        return 0;
      }
      uint64_t v17 = *(void *)(v4 + 96);
      if (!v17) {
        return 0;
      }
      break;
  }
  while (1)
  {
    uint64_t v18 = *(unsigned int *)(v17 + 8);
    if ((v18 & 0x80000000) == 0
      && !sub_1B0D31DE4(0, (unsigned __int8 *)a2, *(unsigned __int8 **)v17, v18))
    {
      break;
    }
    uint64_t v17 = *(void *)(v17 + 24);
    if (!v17) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a2 + 7) & 3) != 0 || *v5 < 1 || v5[18] != *(_DWORD *)(v17 + 8) || *(void *)(a2 + 64)) {
    return 0;
  }
  if (*(_DWORD *)(v4 + 48)) {
    return 2;
  }
  *(_OWORD *)&v29[16] = 0u;
  long long v30 = 0u;
  *(_OWORD *)uint64_t v29 = 0u;
  memset(v28, 0, sizeof(v28));
  LOBYTE(v28[0]) = -87;
  *(void *)&v29[12] = *(void *)(v17 + 12);
  sub_1B0D558DC((uint64_t *)v4, v6, (unsigned __int8 *)v28);
  if (*(_DWORD *)(v4 + 48)) {
    return 2;
  }
  __int16 v27 = *(_WORD *)&v29[20];
  *(void *)(*(void *)(v6 + 24) + 24 * *(__int16 *)&v29[20] + 8) = a2;
  *(void *)(a2 + 64) = v6;
  *(_WORD *)(a2 + 52) = v27;
  return 1;
}

void sub_1B0CCEB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = *(_DWORD *)(a2 + 32) + *(_DWORD *)(a2 + 48);
  if (v8 && !*(_DWORD *)(a1 + 48))
  {
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v12 = *(unsigned int *)(a2 + 12);
    uint64_t v13 = (v8 + v12 - 1);
    int v14 = *(_DWORD *)(v11 + 144);
    if (*(_DWORD *)(v11 + 148) <= v14)
    {
      sub_1B0D25510(*(void *)(a1 + 16), 75, 0, v12, v13, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v11 + 144) = v14 + 1;
      uint64_t v15 = *(void *)(v11 + 136) + 40 * v14;
      *(void *)uint64_t v15 = 75;
      *(_DWORD *)(v15 + 8) = v12;
      *(_DWORD *)(v15 + 12) = v13;
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = 0;
      *(void *)(v15 + 16) = 0;
    }
    if (*(int *)(a2 + 48) >= 1)
    {
      int v16 = 0;
      uint64_t v17 = (unsigned int *)(*(void *)(a2 + 40) + 16);
      do
      {
        if ((*v17 & 0x80000000) == 0)
        {
          uint64_t v18 = *(void *)(*((void *)v17 - 2) + 32);
          if (v18 && *(_DWORD *)v18 == 1)
          {
            uint64_t v25 = sub_1B0D2FF40(*(void *)a1, 1, 1);
            if (v25)
            {
              uint64_t v26 = sub_1B0C9ADE0(a1, *(unsigned __int8 **)(v18 + 8), v19, v20, v21, v22, v23, v24);
              if (!v26) {
                uint64_t v26 = *(void *)(*(void *)a1 + 16);
              }
              *(void *)(v25 + 32) = v26;
              **(unsigned char **)(v25 + 24) = *(unsigned char *)(v18 + 24);
            }
            v17[1] = sub_1B0CCB908((uint64_t *)v11, 118, *v17, 0, 0, v25, 4294967288, v24);
            sub_1B0D33724((uint64_t *)a1, 0, "USE TEMP B-TREE FOR %s(DISTINCT)", v27, v28, v29, v30, v31, *(void *)(*((void *)v17 - 1) + 56));
          }
          else
          {
            sub_1B0CEF2BC(a1, "DISTINCT aggregates must have exactly one argument", a3, v12, v13, a6, a7, a8, v32);
            *uint64_t v17 = -1;
          }
        }
        ++v16;
        v17 += 6;
      }
      while (v16 < *(_DWORD *)(a2 + 48));
    }
  }
}

uint64_t sub_1B0CCED0C(uint64_t result, unsigned int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(result + 48)) {
    return result;
  }
  uint64_t v8 = a3;
  uint64_t v9 = result;
  uint64_t v10 = *(void *)(result + 16);
  *(unsigned char *)a3 = 1;
  if (*(int *)(a3 + 48) < 1)
  {
LABEL_66:
    int v47 = 0;
    if (a2)
    {
      unsigned int v58 = a2;
      if (*(_DWORD *)(v8 + 36)) {
        goto LABEL_68;
      }
    }
    goto LABEL_71;
  }
  unsigned int v57 = a2;
  unsigned int v58 = 0;
  int v11 = 0;
  uint64_t v12 = *(uint64_t **)(a3 + 40);
  uint64_t v55 = (_DWORD *)(result + 44);
  do
  {
    uint64_t v13 = *(_DWORD **)(*v12 + 32);
    if (*(unsigned char *)(*v12 + 7))
    {
      uint64_t v18 = *(void *)(*(void *)(*v12 + 72) + 72);
      if (*(_DWORD *)(v8 + 36) && v57 && (*(_DWORD *)(v12[1] + 4) & 0x20) != 0)
      {
        int v19 = v58;
        if (!v58)
        {
          int v19 = *(_DWORD *)(v9 + 56) + 1;
          *(_DWORD *)(v9 + 56) = v19;
        }
        unsigned int v58 = v19;
        int v20 = *(_DWORD *)(v10 + 144);
        if (*(_DWORD *)(v10 + 148) <= v20)
        {
          sub_1B0D25510(v10, 80, v57, v58, 0, a6, a7, a8);
        }
        else
        {
          *(_DWORD *)(v10 + 144) = v20 + 1;
          uint64_t v21 = *(void *)(v10 + 136) + 40 * v20;
          *(_DWORD *)uint64_t v21 = 80;
          *(_DWORD *)(v21 + 4) = v57;
          *(_DWORD *)(v21 + 8) = v58;
          *(void *)(v21 + 12) = 0;
          *(void *)(v21 + 28) = 0;
          *(void *)(v21 + 20) = 0;
          *(_DWORD *)(v21 + 36) = 0;
        }
      }
      uint64_t v14 = (*(_DWORD *)(v9 + 68) - 1);
      *(_DWORD *)(v9 + 68) = v14;
      sub_1B0CC2204(v9, v18);
      if (!v13)
      {
LABEL_39:
        int v15 = 0;
        uint64_t v29 = v12 + 1;
        uint64_t v17 = 0;
        if ((*(unsigned char *)(v12[1] + 4) & 0x20) == 0)
        {
          uint64_t v17 = 0;
          goto LABEL_46;
        }
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v14 = 0;
      if (!v13) {
        goto LABEL_39;
      }
    }
    int v15 = *v13;
    if (*v13 == 1)
    {
      if (*(unsigned char *)(v9 + 31))
      {
        unsigned __int8 v16 = *(unsigned char *)(v9 + 31) - 1;
        *(unsigned char *)(v9 + 31) = v16;
        uint64_t v17 = *(unsigned int *)(v9 + 4 * v16 + 224);
      }
      else
      {
        uint64_t v17 = (*(_DWORD *)(v9 + 56) + 1);
        *(_DWORD *)(v9 + 56) = v17;
      }
    }
    else
    {
      int v22 = *(_DWORD *)(v9 + 40);
      BOOL v23 = __OFSUB__(v22, v15);
      int v24 = v22 - v15;
      if (v24 < 0 != v23)
      {
        int v25 = *(_DWORD *)(v9 + 56);
        uint64_t v17 = (v25 + 1);
        *(_DWORD *)(v9 + 56) = v25 + v15;
      }
      else
      {
        uint64_t v17 = *(unsigned int *)(v9 + 44);
        *(_DWORD *)(v9 + 40) = v24;
        *(_DWORD *)(v9 + 44) = v17 + v15;
      }
    }
    sub_1B0D31188(v9, v13, v17, 0, 1, a6, a7, a8);
    uint64_t v28 = *((unsigned int *)v12 + 4);
    if ((v28 & 0x80000000) == 0)
    {
      if (!v14)
      {
        uint64_t v14 = (*(_DWORD *)(v9 + 68) - 1);
        *(_DWORD *)(v9 + 68) = v14;
      }
      *((_DWORD *)v12 + 4) = sub_1B0D54E8C(v9, a4, v28, v14, v13, v17, a7, a8);
    }
    uint64_t v29 = v12 + 1;
    if ((*(unsigned char *)(v12[1] + 4) & 0x20) != 0)
    {
      if (v15 >= 1)
      {
        uint64_t v30 = (unsigned __int8 **)(v13 + 2);
        int v31 = 1;
        do
        {
          char v32 = *v30;
          v30 += 3;
          uint64_t v33 = sub_1B0C9ADE0(v9, v32, v28, v26, v27, a6, a7, a8);
          if (v33) {
            BOOL v34 = 0;
          }
          else {
            BOOL v34 = v31 < v15;
          }
          ++v31;
        }
        while (v34);
        uint64_t v35 = v33;
        uint64_t v8 = a3;
        if (v33)
        {
          uint64_t v36 = v58;
          if (!v58)
          {
LABEL_42:
            if (*(_DWORD *)(v8 + 36))
            {
              uint64_t v36 = (*(_DWORD *)(v9 + 56) + 1);
              *(_DWORD *)(v9 + 56) = v36;
            }
            else
            {
              uint64_t v36 = 0;
            }
          }
LABEL_45:
          unsigned int v58 = v36;
          sub_1B0CCB908((uint64_t *)v10, 85, v36, 0, 0, v35, 4294967294, a8);
          goto LABEL_46;
        }
      }
LABEL_41:
      uint64_t v35 = *(void *)(*(void *)v9 + 16);
      uint64_t v36 = v58;
      if (!v58) {
        goto LABEL_42;
      }
      goto LABEL_45;
    }
LABEL_46:
    uint64_t v37 = (*(_DWORD *)(v8 + 12) + v11 + *(_DWORD *)(v8 + 32));
    int v38 = *(_DWORD *)(v10 + 144);
    if (*(_DWORD *)(v10 + 148) <= v38)
    {
      sub_1B0D25510(v10, 162, 0, v17, v37, a6, a7, a8);
    }
    else
    {
      *(_DWORD *)(v10 + 144) = v38 + 1;
      uint64_t v39 = *(void *)(v10 + 136) + 40 * v38;
      *(void *)uint64_t v39 = 162;
      *(_DWORD *)(v39 + 8) = v17;
      *(_DWORD *)(v39 + 12) = v37;
      *(void *)(v39 + 24) = 0;
      *(void *)(v39 + 32) = 0;
      *(void *)(v39 + 16) = 0;
    }
    uint64_t v40 = *v29;
    double result = *(void *)v10;
    if (*(unsigned char *)(*(void *)v10 + 103))
    {
      if ((*(unsigned char *)(v40 + 4) & 0x10) != 0) {
        double result = (uint64_t)sub_1B0D15C20((void *)result, (void *)v40);
      }
    }
    else
    {
      uint64_t v41 = *(void *)(v10 + 136) + 40 * *(int *)(v10 + 144);
      *(unsigned char *)(v41 - 39) = -7;
      *(void *)(v41 - 24) = v40;
    }
    int v42 = *(_DWORD *)(v10 + 144);
    BOOL v23 = __OFSUB__(v42, 1);
    int v43 = v42 - 1;
    if (v43 < 0 == v23) {
      *(_WORD *)(*(void *)(v10 + 136) + 40 * v43 + 2) = v15;
    }
    if (v15 != 1)
    {
      if (*(_DWORD *)(v9 + 40) >= v15) {
        goto LABEL_62;
      }
      *(_DWORD *)(v9 + 40) = v15;
      unsigned int v45 = v55;
      goto LABEL_61;
    }
    if (v17)
    {
      uint64_t v44 = *(unsigned __int8 *)(v9 + 31);
      if (v44 <= 7)
      {
        *(unsigned char *)(v9 + 31) = v44 + 1;
        unsigned int v45 = (_DWORD *)(v9 + 4 * v44 + 224);
LABEL_61:
        *unsigned int v45 = v17;
      }
    }
LABEL_62:
    if (v14)
    {
      double result = *(void *)(v10 + 24);
      int v46 = ~v14;
      if (*(_DWORD *)(result + 68) + *(_DWORD *)(result + 72) >= 0) {
        *(_DWORD *)(*(void *)(result + 80) + 4 * v46) = *(_DWORD *)(v10 + 144);
      }
      else {
        double result = sub_1B0D34EC8(result, v10, v46);
      }
    }
    ++v11;
    v12 += 3;
  }
  while (v11 < *(_DWORD *)(v8 + 48));
  a2 = v57;
  if (!v58) {
    goto LABEL_66;
  }
LABEL_68:
  int v47 = *(_DWORD *)(v10 + 144);
  if (*(_DWORD *)(v10 + 148) <= v47)
  {
    double result = sub_1B0D25510(v10, 16, v58, 0, 0, a6, a7, a8);
    int v47 = result;
  }
  else
  {
    *(_DWORD *)(v10 + 144) = v47 + 1;
    uint64_t v48 = *(void *)(v10 + 136) + 40 * v47;
    *(_DWORD *)uint64_t v48 = 16;
    *(_DWORD *)(v48 + 4) = v58;
    *(_OWORD *)(v48 + 8) = 0u;
    *(_OWORD *)(v48 + 24) = 0u;
  }
LABEL_71:
  if (*(int *)(v8 + 36) >= 1)
  {
    int v49 = 0;
    int v50 = (unsigned __int8 **)(*(void *)(v8 + 24) + 8);
    do
    {
      uint64_t v51 = *v50;
      v50 += 3;
      double result = sub_1B0D2F9D0(v9, v51, (v49 + *(_DWORD *)(v8 + 12)));
      ++v49;
    }
    while (v49 < *(_DWORD *)(v8 + 36));
  }
  *(unsigned char *)uint64_t v8 = 0;
  if (v47)
  {
    int v52 = *(_DWORD *)(v10 + 144);
    if (v52 - 1 == v47)
    {
      *(_DWORD *)(v10 + 144) = v47;
    }
    else
    {
      if (*(unsigned char *)(*(void *)v10 + 103)) {
        uint64_t v53 = &byte_1E9B52240;
      }
      else {
        uint64_t v53 = (char *)(*(void *)(v10 + 136) + 40 * v47);
      }
      *((_DWORD *)v53 + 2) = v52;
    }
  }
  return result;
}

uint64_t sub_1B0CCF21C(uint64_t a1, uint64_t a2)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  WORD2(v7) = 1;
  *((void *)&v7 + 1) = *(void *)(a1 + 24);
  v10[1] = a2;
  v10[2] = a1;
  v10[0] = &v6;
  LOBYTE(v12) = *(unsigned char *)(*((void *)&v7 + 1) + 100);
  (*(void (**)(void *))(a2 + 32))(v10);
  if (*(int *)(a1 + 32) >= 1) {
    sub_1B0D05C10(*(void **)(a1 + 24), *(void **)(a1 + 40));
  }
  long long v3 = v7;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = v9;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v4;
  return HIDWORD(v11);
}

void sub_1B0CCF2B0(uint64_t *a1)
{
  if (a1)
  {
    uint64_t v2 = a1[1];
    if (v2 && *(void *)(v2 + 32))
    {
      uint64_t v3 = a1[2];
      if ((*(__int16 *)(v3 + 20) & 0x80000000) == 0)
      {
        long long v4 = (uint64_t *)sub_1B0CEB5F8((uint64_t)a1, 0);
        if (!v4) {
          goto LABEL_8;
        }
LABEL_13:
        uint64_t v5 = *v4;
LABEL_14:
        uint64_t v6 = *a1;
        if ((*(_WORD *)(*a1 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v6, v5);
        }
        else
        {
          *(void *)uint64_t v6 = v5;
          *(_WORD *)(v6 + 20) = 4;
        }
        return;
      }
      long long v4 = *(uint64_t **)(v3 + 8);
      if (v4) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B0CE1978(98123);
    }
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_14;
  }
  sub_1B0CE1978(98123);

  sub_1B0CE1978(97441);
}

void *__cdecl sqlite3_aggregate_context(sqlite3_context *a1, int nBytes)
{
  if (a1 && (uint64_t v2 = *((void *)a1 + 1)) != 0 && *(void *)(v2 + 32))
  {
    uint64_t v3 = *((void *)a1 + 2);
    if (*(__int16 *)(v3 + 20) < 0)
    {
      return *(void **)(v3 + 8);
    }
    else
    {
      return sub_1B0CEB5F8((uint64_t)a1, nBytes);
    }
  }
  else
  {
    sub_1B0CE1978(98123);
    return 0;
  }
}

uint64_t sub_1B0CCF3FC(uint64_t result, int a2, uint64_t *a3)
{
  if (!result || (uint64_t v5 = *(void *)(result + 8)) == 0 || !*(void *)(v5 + 32))
  {
    double result = sub_1B0CE1978(98123);
    if (!a2) {
      return result;
    }
    long long v7 = 0;
    uint64_t v8 = *a3;
    if (*a3) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(result + 16);
  if ((*(__int16 *)(v6 + 20) & 0x80000000) == 0)
  {
    double result = (uint64_t)sub_1B0CEB5F8(result, 8);
    long long v7 = (void *)result;
    if (a2) {
      goto LABEL_6;
    }
LABEL_18:
    if (!v7) {
      return result;
    }
    goto LABEL_15;
  }
  long long v7 = *(void **)(v6 + 8);
  if (!a2) {
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v8 = *a3;
  if (*a3)
  {
LABEL_7:
    unint64_t v9 = (0x5555555555555555uLL >> *(_WORD *)(v8 + 20)) & 1;
    goto LABEL_11;
  }
LABEL_10:
  double result = sub_1B0CE1978(97220);
  LODWORD(v9) = 1;
LABEL_11:
  if (v9) {
    BOOL v10 = v7 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10) {
LABEL_15:
  }
    ++*v7;
  return result;
}

uint64_t sub_1B0CCF4CC(uint64_t result, int *a2)
{
  if (a2)
  {
    int v3 = *a2;
    if (*a2 >= 1)
    {
      uint64_t v4 = result;
      int v5 = 0;
      uint64_t v6 = a2 + 18;
      do
      {
        if ((*v6 & 0x80000000) != 0)
        {
          int v7 = *(_DWORD *)(v4 + 52);
          *(_DWORD *)(v4 + 52) = v7 + 1;
          *uint64_t v6 = v7;
          uint64_t v8 = *((void *)v6 - 3);
          if (v8)
          {
            double result = sub_1B0CCF4CC(v4, *(void *)(v8 + 40));
            int v3 = *a2;
          }
        }
        ++v5;
        v6 += 26;
      }
      while (v5 < v3);
    }
  }
  return result;
}

uint64_t *sub_1B0CCF55C(uint64_t *result, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v7 = result;
  uint64_t v8 = *(unsigned __int8 **)(a2 + 24 * a3 + 8);
  uint64_t v9 = *result;
  if (!v8)
  {
    if (*(unsigned char *)(v9 + 103)) {
      return result;
    }
    uint64_t v10 = 0;
LABEL_9:
    if (a5 >= 1)
    {
      long long v26 = 0uLL;
      long long v27 = 0uLL;
      v25[0] = 0;
      v25[1] = sub_1B0D382F0;
      DWORD2(v27) = a5;
      if (v10) {
        sub_1B0D32AB4((uint64_t)v25, v10);
      }
    }
    if (*(unsigned char *)a4 == 113)
    {
      long long v11 = *(const void **)(a4 + 8);
      if (v11)
      {
        size_t v12 = strlen(*(const char **)(a4 + 8)) & 0x3FFFFFFF;
        if (v12)
        {
          uint64_t v13 = sub_1B0D05DC0(*v7, v12 + 81);
          if (v13)
          {
            uint64_t v14 = v13;
            *(_OWORD *)(v13 + 48) = 0u;
            *(_OWORD *)(v13 + 64) = 0u;
            *(_OWORD *)(v13 + 16) = 0u;
            *(_OWORD *)(v13 + 32) = 0u;
            *(_OWORD *)uint64_t v13 = 0u;
            *(unsigned char *)uint64_t v13 = 113;
            *(_WORD *)(v13 + 52) = -1;
            uint64_t v15 = v13 + 80;
            *(void *)(v13 + 8) = v13 + 80;
            memcpy((void *)(v13 + 80), v11, v12);
            *(unsigned char *)(v15 + v12) = 0;
            *(_DWORD *)(v14 + 40) = 1;
            *(void *)(v14 + 16) = v10;
            *(_DWORD *)(v14 + 4) |= 0x2200u;
            uint64_t v10 = v14;
          }
        }
      }
    }
    long long v20 = *(_OWORD *)v10;
    long long v23 = *(_OWORD *)(v10 + 48);
    long long v24 = *(_OWORD *)(v10 + 64);
    long long v21 = *(_OWORD *)(v10 + 16);
    long long v22 = *(_OWORD *)(v10 + 32);
    long long v16 = *(_OWORD *)(a4 + 64);
    long long v18 = *(_OWORD *)(a4 + 16);
    long long v17 = *(_OWORD *)(a4 + 32);
    *(_OWORD *)(v10 + 48) = *(_OWORD *)(a4 + 48);
    *(_OWORD *)(v10 + 64) = v16;
    *(_OWORD *)(v10 + 16) = v18;
    *(_OWORD *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)a4;
    *(_OWORD *)a4 = v20;
    *(_OWORD *)(a4 + 16) = v21;
    *(_OWORD *)(a4 + 32) = v22;
    *(_OWORD *)(a4 + 48) = v23;
    *(_OWORD *)(a4 + 64) = v24;
    if (*(unsigned char *)(a4 + 7))
    {
      uint64_t v19 = *(void *)(a4 + 72);
      if (v19) {
        *(void *)(v19 + 112) = a4;
      }
    }
    if (*v7)
    {
      double result = (uint64_t *)sub_1B0D05DC0(*v7, 0x18uLL);
      if (result)
      {
LABEL_22:
        *double result = v7[24];
        v7[24] = (uint64_t)result;
        result[1] = v10;
        result[2] = (uint64_t)sub_1B0C9AA88;
        return result;
      }
    }
    else
    {
      double result = (uint64_t *)sub_1B0C7FC94(24);
      if (result) {
        goto LABEL_22;
      }
    }
    return sub_1B0D1DF88((void *)*v7, (unsigned __int8 *)v10);
  }
  double result = (uint64_t *)sub_1B0CAE048(*result, v8, 0, 0);
  uint64_t v10 = (uint64_t)result;
  if (!*(unsigned char *)(v9 + 103)) {
    goto LABEL_9;
  }
  if (result)
  {
    return sub_1B0D1DF88((void *)v9, (unsigned __int8 *)result);
  }
  return result;
}

unsigned __int8 *sub_1B0CCF798(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a2;
  if (!a2) {
    return v8;
  }
  int v10 = *((_DWORD *)a2 + 1);
  if ((v10 & 3) != 0 && *((_DWORD *)a2 + 14) == *(_DWORD *)(a1 + 8)) {
    *((_DWORD *)a2 + 14) = *(_DWORD *)(a1 + 12);
  }
  int v11 = *a2;
  if (v11 == 179)
  {
    if (*((_DWORD *)a2 + 11) == *(_DWORD *)(a1 + 8)) {
      *((_DWORD *)a2 + 11) = *(_DWORD *)(a1 + 12);
    }
    goto LABEL_16;
  }
  if (v11 != 167 || (v10 & 0x20) != 0 || *((_DWORD *)a2 + 11) != *(_DWORD *)(a1 + 8))
  {
LABEL_16:
    *((void *)a2 + 2) = sub_1B0CCF798(a1, *((void *)a2 + 2));
    *((void *)v8 + 3) = sub_1B0CCF798(a1, *((void *)v8 + 3));
    long long v17 = (int *)*((void *)v8 + 4);
    if ((v8[5] & 0x10) != 0)
    {
      sub_1B0D40D70(a1, *((void **)v8 + 4), 1);
    }
    else if (v17 && *v17 >= 1)
    {
      uint64_t v18 = 0;
      uint64_t v19 = 2;
      do
      {
        *(void *)&v17[v19] = sub_1B0CCF798(a1, *(void *)&v17[v19]);
        ++v18;
        v19 += 6;
      }
      while (v18 < *v17);
    }
    if (v8[7])
    {
      long long v20 = (void *)*((void *)v8 + 9);
      v20[9] = sub_1B0CCF798(a1, v20[9]);
      long long v21 = (int *)v20[2];
      if (v21 && *v21 >= 1)
      {
        uint64_t v22 = 0;
        uint64_t v23 = 2;
        do
        {
          *(void *)&v21[v23] = sub_1B0CCF798(a1, *(void *)&v21[v23]);
          ++v22;
          v23 += 6;
        }
        while (v22 < *v21);
      }
      long long v24 = (int *)v20[3];
      if (v24 && *v24 >= 1)
      {
        uint64_t v25 = 0;
        uint64_t v26 = 2;
        do
        {
          *(void *)&v24[v26] = sub_1B0CCF798(a1, *(void *)&v24[v26]);
          ++v25;
          v26 += 6;
        }
        while (v25 < *v24);
      }
    }
    return v8;
  }
  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v52 = 0u;
  int v12 = *((_DWORD *)a2 + 12);
  uint64_t v13 = *(unsigned __int8 **)(*(void *)(a1 + 24) + 24 * v12 + 8);
  int v14 = *v13;
  int v15 = v14;
  if (v14 == 176) {
    int v15 = v13[2];
  }
  if (v15 == 138)
  {
    long long v16 = (int **)(*((void *)v13 + 4) + 32);
  }
  else
  {
    if (v15 != 177) {
      goto LABEL_35;
    }
    long long v16 = (int **)(v13 + 32);
  }
  if (**v16 < 2)
  {
LABEL_35:
    uint64_t v27 = **(void **)a1;
    if (!*(_DWORD *)(a1 + 16)) {
      goto LABEL_43;
    }
    if (v14 == 167)
    {
      int v28 = *(_DWORD *)(a1 + 12);
      if (*((_DWORD *)v13 + 11) == v28)
      {
LABEL_43:
        uint64_t v30 = sub_1B0CAE048(v27, v13, 0, 0);
        int v31 = (unsigned __int8 *)v30;
        if (*(unsigned char *)(v27 + 103))
        {
          if (v30) {
            sub_1B0D1DF88((void *)v27, (unsigned __int8 *)v30);
          }
        }
        else
        {
          if (*(_DWORD *)(a1 + 16)) {
            v30[1] |= 0x200000u;
          }
          int v32 = *((_DWORD *)v8 + 1);
          if ((v32 & 3) != 0) {
            sub_1B0D3A514((uint64_t)v30, *((unsigned int *)v8 + 14), v32 & 3);
          }
          sub_1B0D1DF88((void *)v27, v8);
          if (*v31 == 170)
          {
            BOOL v39 = sub_1B0D30858((uint64_t)v31);
            *int v31 = -101;
            *((_DWORD *)v31 + 1) |= 0x800u;
            *((_DWORD *)v31 + 2) = v39;
          }
          uint64_t v40 = sub_1B0C9ADE0(*(void *)a1, v31, v33, v34, v35, v36, v37, v38);
          int v47 = (char **)sub_1B0C9ADE0(*(void *)a1, *(unsigned __int8 **)(*(void *)(a1 + 32) + 24 * v12 + 8), v41, v42, v43, v44, v45, v46);
          if ((char **)v40 != v47 || (int v49 = *v31, v49 != 113) && v49 != 167)
          {
            if (v47) {
              uint64_t v48 = *v47;
            }
            else {
              uint64_t v48 = "BINARY";
            }
            int v31 = (unsigned __int8 *)sub_1B0D38230(*(uint64_t **)a1, (uint64_t)v31, v48);
          }
          *((_DWORD *)v31 + 1) &= ~0x200u;
          return v31;
        }
        return v8;
      }
    }
    else
    {
      int v28 = *(_DWORD *)(a1 + 12);
    }
    LOBYTE(v52) = -77;
    *(void *)&long long v53 = v13;
    HIDWORD(v54) = v28;
    LODWORD(v55) = -99;
    uint64_t v13 = (unsigned __int8 *)&v52;
    DWORD1(v52) = 0x40000;
    goto LABEL_43;
  }
  uint64_t v29 = *(void *)a1;
  if ((v13[5] & 0x10) != 0)
  {
    if (!*(_DWORD *)(v29 + 48)) {
      sub_1B0CEF2BC(v29, "sub-select returns %d columns - expected %d", a3, a4, a5, a6, a7, a8, **(_DWORD **)(*((void *)v13 + 4) + 32));
    }
  }
  else
  {
    sub_1B0CEF2BC(v29, "row value misused", a3, a4, a5, a6, a7, a8, v51);
  }
  return v8;
}

long long *sub_1B0CCFB6C(uint64_t a1, long long *a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  if (!a4) {
    return a2;
  }
  if (*a4 != 167) {
    return a2;
  }
  uint64_t v5 = *((void *)a4 + 9);
  if (!v5) {
    return a2;
  }
  if (*(unsigned char *)(v5 + 63) != 1) {
    return a2;
  }
  int v7 = (uint64_t **)(v5 + 80);
  do
  {
    uint64_t v8 = *v7;
    uint64_t v9 = *v7;
    uint64_t v10 = *v9;
    int v7 = (uint64_t **)(v9 + 5);
  }
  while (v10 != a1);
  int v11 = *(unsigned int (**)(void))(*(void *)v8[2] + 144);
  if (!v11 || !v11()) {
    return a2;
  }
  int v12 = (const char *)*((void *)a2 + 7);
  if (v12)
  {
    size_t v13 = (strlen(v12) & 0x3FFFFFFF) + 73;
    if (a1) {
      goto LABEL_11;
    }
LABEL_15:
    int v14 = (_OWORD *)sub_1B0C7FC94(v13);
    if (v14) {
      goto LABEL_12;
    }
    return a2;
  }
  size_t v13 = 73;
  if (!a1) {
    goto LABEL_15;
  }
LABEL_11:
  int v14 = (_OWORD *)sub_1B0D05DC0(a1, v13);
  if (!v14) {
    return a2;
  }
LABEL_12:
  bzero(v14, v13);
  long long v15 = a2[1];
  long long v16 = a2[2];
  uint64_t v17 = *((void *)a2 + 8);
  v14[3] = a2[3];
  long long v18 = *a2;
  v14[1] = v15;
  v14[2] = v16;
  *int v14 = v18;
  *((void *)v14 + 7) = (char *)v14 + 72;
  *((void *)v14 + 8) = v17;
  uint64_t v19 = (const char *)*((void *)a2 + 7);
  if (v19) {
    size_t v20 = (strlen(v19) & 0x3FFFFFFF) + 1;
  }
  else {
    size_t v20 = 1;
  }
  memcpy((char *)v14 + 72, v19, v20);
  *((void *)v14 + 3) = v23;
  *((void *)v14 + 1) = v22;
  *((_DWORD *)v14 + 1) |= 0x10u;
  return v14;
}

uint64_t sub_1B0CCFCD4(uint64_t result, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(result + 16);
  uint64_t v51 = 0;
  if (!a2 || !v8) {
    return result;
  }
  uint64_t v9 = a4;
  uint64_t v12 = result;
  uint64_t v13 = *a2;
  switch(*a2)
  {
    case 0x13u:
      uint64_t v30 = *((void *)a2 + 2);
      goto LABEL_41;
    case 0x2Bu:
    case 0x2Cu:
      uint64_t v14 = sub_1B0D35154(a2);
      if ((unsigned __int8 *)v14 != a2)
      {
        uint64_t v15 = v14;
LABEL_65:
        double result = sub_1B0CCFCD4(v12, v15, a3, v9);
        goto LABEL_69;
      }
      if (v13 != 44)
      {
        sub_1B0CCFCD4(v12, *((void *)a2 + 2), a3, v9);
        uint64_t v15 = *((void *)a2 + 3);
        goto LABEL_65;
      }
      int v44 = *(_DWORD *)(v12 + 68) - 1;
      *(_DWORD *)(v12 + 68) = v44;
      sub_1B0CC2204(v12, *((void *)a2 + 2));
      sub_1B0CCFCD4(v12, *((void *)a2 + 3), a3, v9);
      double result = sub_1B0D31504(v8, v44);
      int v21 = HIDWORD(v51);
      if (HIDWORD(v51)) {
        goto LABEL_67;
      }
      goto LABEL_69;
    case 0x2Du:
    case 0xABu:
      if (v13 == 45) {
        uint64_t v13 = 53;
      }
      else {
        uint64_t v13 = 52;
      }
      uint64_t v9 = 128;
      goto LABEL_10;
    case 0x30u:
      double result = (uint64_t)sub_1B0D31534((unsigned int *)result, (uint64_t)a2, a3, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t))sub_1B0CCFCD4, a4, a6, a7, a8);
      goto LABEL_69;
    case 0x31u:
      int v31 = *(_DWORD *)(result + 68);
      uint64_t v32 = (v31 - 1);
      *(_DWORD *)(result + 68) = v32;
      if (a4) {
        uint64_t v33 = a3;
      }
      else {
        uint64_t v33 = v32;
      }
      sub_1B0CC427C((void **)result, (uint64_t)a2, v32, v33, a5, a6, a7, a8);
      int v37 = *(_DWORD *)(v8 + 144);
      if (*(_DWORD *)(v8 + 148) <= v37)
      {
        sub_1B0D25510(v8, 9, 0, a3, 0, v34, v35, v36);
      }
      else
      {
        *(_DWORD *)(v8 + 144) = v37 + 1;
        uint64_t v38 = *(void *)(v8 + 136) + 40 * v37;
        *(void *)uint64_t v38 = 9;
        *(_DWORD *)(v38 + 8) = a3;
        *(void *)(v38 + 12) = 0;
        *(void *)(v38 + 28) = 0;
        *(void *)(v38 + 20) = 0;
        *(_DWORD *)(v38 + 36) = 0;
      }
      double result = *(void *)(v8 + 24);
      int v47 = -v31;
      if (*(_DWORD *)(result + 68) + *(_DWORD *)(result + 72) < 0)
      {
        double result = sub_1B0D34EC8(result, v8, v47);
        int v21 = HIDWORD(v51);
        if (HIDWORD(v51)) {
          goto LABEL_67;
        }
      }
      else
      {
        *(_DWORD *)(*(void *)(result + 80) + 4 * v47) = *(_DWORD *)(v8 + 144);
        int v21 = HIDWORD(v51);
        if (HIDWORD(v51)) {
          goto LABEL_67;
        }
      }
      goto LABEL_69;
    case 0x32u:
    case 0x33u:
      double result = sub_1B0D30948(result, *((unsigned __int8 **)a2 + 2), (_DWORD *)&v51 + 1);
      uint64_t v25 = result;
      if (*(unsigned char *)(*(void *)v8 + 103)) {
        uint64_t v26 = &byte_1E9B52240;
      }
      else {
        uint64_t v26 = (char *)(*(void *)(v8 + 136) + 40 * *(int *)(v8 + 144) - 40);
      }
      if (*((_DWORD *)v26 + 3) == result && *v26 == 94) {
        *((_WORD *)v26 + 1) |= 0x80u;
      }
      int v45 = *(_DWORD *)(v8 + 144);
      if (*(_DWORD *)(v8 + 148) > v45)
      {
        *(_DWORD *)(v8 + 144) = v45 + 1;
        uint64_t v24 = *(void *)(v8 + 136) + 40 * v45;
        *(unsigned char *)uint64_t v24 = v13;
        *(_WORD *)(v24 + 2) = 0;
        *(_DWORD *)(v24 + 4) = result;
        *(_DWORD *)(v24 + 8) = a3;
        *(unsigned char *)(v24 + 1) = 0;
        goto LABEL_52;
      }
      uint64_t v42 = v8;
      uint64_t v43 = v13;
      goto LABEL_55;
    case 0x34u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
LABEL_10:
      long long v16 = (unsigned __int8 *)*((void *)a2 + 2);
      int v17 = *v16;
      if (v17 == 176) {
        int v17 = v16[2];
      }
      if (v17 == 138)
      {
        long long v18 = (int **)(*((void *)v16 + 4) + 32);
      }
      else
      {
        if (v17 != 177) {
          goto LABEL_17;
        }
        long long v18 = (int **)(v16 + 32);
      }
      if (**v18 <= 1)
      {
LABEL_17:
        uint64_t v19 = sub_1B0D30948(result, v16, (_DWORD *)&v51 + 1);
        uint64_t v20 = sub_1B0D30948(v12, *((unsigned __int8 **)a2 + 3), &v51);
        double result = sub_1B0CC26B4(v12, *((unsigned __int8 **)a2 + 2), *((unsigned __int8 **)a2 + 3), v13, v19, v20, a3, v9, (*((_DWORD *)a2 + 1) >> 10) & 1);
        int v21 = HIDWORD(v51);
        if (!HIDWORD(v51)) {
          goto LABEL_69;
        }
        goto LABEL_67;
      }
LABEL_19:
      int v22 = *((_DWORD *)a2 + 1);
      if ((v22 & 0x10000001) != 0x10000000)
      {
        if ((v22 & 0x20000001) == 0x20000000) {
          goto LABEL_69;
        }
        double result = sub_1B0D30948(result, a2, (_DWORD *)&v51 + 1);
        uint64_t v25 = result;
        BOOL v27 = v9 != 0;
        int v28 = *(_DWORD *)(v8 + 144);
        if (*(_DWORD *)(v8 + 148) > v28)
        {
          *(_DWORD *)(v8 + 144) = v28 + 1;
          uint64_t v29 = *(void *)(v8 + 136) + 40 * v28;
          *(_DWORD *)uint64_t v29 = 16;
          *(_DWORD *)(v29 + 4) = result;
          *(_DWORD *)(v29 + 8) = a3;
          *(_DWORD *)(v29 + 12) = v27;
          *(void *)(v29 + 24) = 0;
          *(void *)(v29 + 32) = 0;
          *(void *)(v29 + 16) = 0;
          int v21 = HIDWORD(v51);
          if (!HIDWORD(v51)) {
            goto LABEL_69;
          }
          goto LABEL_67;
        }
        uint64_t v42 = v8;
        uint64_t v43 = 16;
        uint64_t v46 = a3;
LABEL_56:
        double result = sub_1B0D25510(v42, v43, v25, v46, v27, a6, a7, a8);
        int v21 = HIDWORD(v51);
        if (!HIDWORD(v51)) {
          goto LABEL_69;
        }
        goto LABEL_67;
      }
      int v23 = *(_DWORD *)(v8 + 144);
      if (*(_DWORD *)(v8 + 148) <= v23)
      {
        uint64_t v42 = v8;
        uint64_t v43 = 9;
        uint64_t v25 = 0;
LABEL_55:
        uint64_t v46 = a3;
        BOOL v27 = 0;
        goto LABEL_56;
      }
      *(_DWORD *)(v8 + 144) = v23 + 1;
      uint64_t v24 = *(void *)(v8 + 136) + 40 * v23;
      *(void *)uint64_t v24 = 9;
      *(_DWORD *)(v24 + 8) = a3;
LABEL_52:
      *(void *)(v24 + 12) = 0;
      *(void *)(v24 + 28) = 0;
      *(void *)(v24 + 20) = 0;
      *(_DWORD *)(v24 + 36) = 0;
      int v21 = HIDWORD(v51);
      if (HIDWORD(v51))
      {
LABEL_67:
        uint64_t v48 = *(unsigned __int8 *)(v12 + 31);
        if (v48 <= 7)
        {
          *(unsigned char *)(v12 + 31) = v48 + 1;
          *(_DWORD *)(v12 + 4 * v48 + 224) = v21;
        }
      }
LABEL_69:
      int v49 = v51;
      if (v51)
      {
        uint64_t v50 = *(unsigned __int8 *)(v12 + 31);
        if (v50 <= 7)
        {
          *(unsigned char *)(v12 + 31) = v50 + 1;
          *(_DWORD *)(v12 + 4 * v50 + 224) = v49;
        }
      }
      return result;
    case 0xAFu:
      int v39 = a2[2];
      uint64_t v40 = *((void *)a2 + 3);
      while (1)
      {
        int v41 = *(_DWORD *)(v40 + 4);
        if ((v41 & 0x82000) == 0) {
          break;
        }
        if ((v41 & 0x80000) != 0) {
          uint64_t v40 = *(void *)(*(void *)(v40 + 32) + 8);
        }
        else {
          uint64_t v40 = *(void *)(v40 + 16);
        }
      }
      uint64_t v30 = *((void *)a2 + 2);
      if ((v39 == 171) != (*(unsigned char *)(*(void *)(v40 + 8) + 4) != 0)) {
LABEL_41:
      }
        double result = sub_1B0CC2204(result, v30);
      else {
        double result = ((uint64_t (*)(void))sub_1B0CCFCD4)();
      }
      goto LABEL_69;
    default:
      goto LABEL_19;
  }
}

int sqlite3_bind_parameter_index(sqlite3_stmt *a1, const char *zName)
{
  uint64_t v2 = zName;
  if (zName)
  {
    int v4 = strlen(zName);
    if (a1)
    {
      int v5 = v4;
      uint64_t v6 = *(void *)(*(void *)a1 + 24);
      if (v6) {
        xmmword_1EB21CA40(v6);
      }
      uint64_t v7 = *((void *)a1 + 22);
      if (v7)
      {
        size_t v8 = v5 & 0x3FFFFFFF;
        int v9 = *(_DWORD *)(v7 + 4);
        int v10 = 2;
        while (1)
        {
          uint64_t v11 = v10;
          uint64_t v12 = (const char *)(v7 + 4 * v10 + 8);
          if (!strncmp(v12, v2, v8) && !v12[v8]) {
            break;
          }
          int v10 = *(_DWORD *)(v7 + 4 * v11 + 4) + v11;
          if (v10 >= v9) {
            goto LABEL_11;
          }
        }
        LODWORD(v2) = *(_DWORD *)(v7 + 4 * v11);
      }
      else
      {
LABEL_11:
        LODWORD(v2) = 0;
      }
      uint64_t v13 = *(void *)(*(void *)a1 + 24);
      if (v13) {
        xmmword_1EB21CA50(v13);
      }
    }
    else
    {
      LODWORD(v2) = 0;
    }
  }
  return (int)v2;
}