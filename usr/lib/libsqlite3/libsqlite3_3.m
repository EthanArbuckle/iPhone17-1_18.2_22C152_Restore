uint64_t sub_1B0D8B1A4(uint64_t result, uint64_t a2, _DWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;

  if (a2 && !*a3)
  {
    v5 = result;
    if (*(_DWORD *)a2 == 5)
    {
      v6 = *(void *)(a2 + 32);
      v7 = *(unsigned int *)(v6 + 80);
      if (v7)
      {
        if ((int)v7 < 1)
        {
          LODWORD(v8) = 0;
        }
        else
        {
          v8 = 0;
          v9 = (void *)(v6 + 112);
          while (*v9)
          {
            ++v8;
            v9 += 5;
            if (v7 == v8)
            {
              LODWORD(v8) = *(_DWORD *)(v6 + 80);
              break;
            }
          }
        }
        *(unsigned char *)(a2 + 50) = v8 == v7;
      }
      result = sub_1B0D8D198(result, 1, v6);
      *a3 = result;
    }
    else
    {
      sub_1B0D8B1A4(result, *(void *)(a2 + 16), a3);
      result = sub_1B0D8B1A4(v5, *(void *)(a2 + 24), a3);
      v10 = *(unsigned char *)(*(void *)(a2 + 16) + 50);
      if (v10) {
        v10 = *(unsigned char *)(*(void *)(a2 + 24) + 50) != 0;
      }
      *(unsigned char *)(a2 + 50) = v10;
    }
  }
  return result;
}

uint64_t sub_1B0D8B290(uint64_t a1, uint64_t a2, int a3, _DWORD *a4, char **a5)
{
  uint64_t v6 = a2;
  uint64_t v55 = 0;
  uint64_t v8 = *(void *)(a2 + 32);
  memset(v56, 0, 32);
  int v9 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 12)) {
    int v10 = 11;
  }
  else {
    int v10 = 3;
  }
  int v11 = v10 | (32 * (*(_DWORD *)(a2 + 16) != 0));
  BOOL v12 = *(_DWORD *)(a1 + 48) > a3;
  memset(&v56[2], 0, 80);
  long long v57 = 0uLL;
  memset(v58, 0, sizeof(v58));
  int v54 = a3;
  LODWORD(v55) = v11 | (4 * v12);
  v52 = *(const void **)a2;
  v13 = v52;
  int v53 = v9;
  *(void *)(v8 + 16) = &v52;
  uint64_t v14 = sub_1B0D7D91C(a1, (uint64_t *)v8, v13, v9);
  if (v14) {
    goto LABEL_77;
  }
  uint64_t v48 = v6;
  v49 = a4;
  uint64_t v51 = v8;
LABEL_6:
  while (1)
  {
    uint64_t v15 = sub_1B0D7E204(a1, v8);
    if (v15 != 100) {
      break;
    }
    v16 = *(char **)(v8 + 72);
    int v17 = *(_DWORD *)(v8 + 80);
    v18 = *(char **)&v56[0];
    if (*(void *)&v56[0])
    {
      uint64_t v19 = 0;
      v20 = v16;
      while (1)
      {
        v59 = 0;
        v60[0] = 0;
        uint64_t v21 = sub_1B0D8C0B0(*(unsigned __int8 *)(a1 + 463), v20, v17, v18, *((_DWORD *)v58 + v19), &v59, v60);
        BOOL v23 = v20 == v16 || v20 == 0;
        if (v21)
        {
          uint64_t v14 = v21;
          uint64_t v8 = v51;
          if (!v23)
          {
            v32 = (void (**)(char *))&off_1EB21C9E8;
            if (!dword_1EB21C9C0) {
              goto LABEL_44;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v20);
            --qword_1EB220150;
            off_1EB21C9E8(v20);
            v20 = (char *)xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              v32 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_44:
              (*v32)(v20);
            }
          }
LABEL_76:
          uint64_t v6 = v48;
          goto LABEL_77;
        }
        if (!v23)
        {
          v24 = (void (**)(char *))&off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_22;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v20);
          --qword_1EB220150;
          off_1EB21C9E8(v20);
          v20 = (char *)xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0) {
            break;
          }
        }
LABEL_23:
        uint64_t v25 = *((void *)v56 + v19);
        if (!v25) {
          goto LABEL_30;
        }
        v26 = &off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_29;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v25);
        --qword_1EB220150;
        off_1EB21C9E8(v25);
        uint64_t v25 = xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          v26 = &xmmword_1EB21CA50;
LABEL_29:
          (*v26)(v25);
        }
LABEL_30:
        *((void *)v56 + v19) = 0;
        v20 = v59;
        int v17 = v60[0];
        if (v19 == 15)
        {
          *((void *)&v57 + 1) = v59;
          v28 = (char *)&v56[3] + 12;
LABEL_37:
          *((_DWORD *)v28 + 32) = v17;
          uint64_t v8 = v51;
          goto LABEL_6;
        }
        uint64_t v27 = v19 + 1;
        v18 = (char *)*((void *)v56 + ++v19);
        if (!v18)
        {
          *((void *)v56 + v27) = v59;
          v28 = (char *)v56 + 4 * v27;
          goto LABEL_37;
        }
      }
      v24 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_22:
      (*v24)(v20);
      goto LABEL_23;
    }
    if (sqlite3_initialize())
    {
      *(void *)&v56[0] = 0;
      uint64_t v14 = 7;
      goto LABEL_76;
    }
    v29 = (char *)sub_1B0C7FC94(v17 + 11);
    *(void *)&v56[0] = v29;
    LODWORD(v58[0]) = v17;
    if (!v29)
    {
      uint64_t v14 = 7;
      uint64_t v6 = v48;
      uint64_t v8 = v51;
      goto LABEL_77;
    }
    v30 = v29;
    memcpy(v29, v16, v17);
    v31 = &v30[v17];
    *(void *)v31 = 0;
    *((_WORD *)v31 + 4) = 0;
    uint64_t v8 = v51;
  }
  uint64_t v14 = v15;
  if (v15) {
    goto LABEL_76;
  }
  uint64_t v33 = 0;
  v34 = 0;
  v35 = v49;
  v36 = a5;
  do
  {
    v37 = (char *)*((void *)v56 + v33);
    if (!v37) {
      goto LABEL_48;
    }
    if (!v34)
    {
      LODWORD(v14) = *((_DWORD *)v58 + v33);
      *((void *)v56 + v33) = 0;
      v34 = v37;
      goto LABEL_48;
    }
    v60[0] = 0;
    v59 = 0;
    uint64_t v38 = sub_1B0D8C0B0(*(unsigned __int8 *)(a1 + 463), v37, *((_DWORD *)v58 + v33), v34, v14, &v59, v60);
    if (v38)
    {
      uint64_t v14 = v38;
      v47 = (void (**)(char *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        uint64_t v6 = v48;
        uint64_t v8 = v51;
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v34);
        --qword_1EB220150;
        off_1EB21C9E8(v34);
        v34 = (char *)xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          v47 = (void (**)(char *))&xmmword_1EB21CA50;
          goto LABEL_93;
        }
      }
      else
      {
        uint64_t v6 = v48;
        uint64_t v8 = v51;
LABEL_93:
        (*v47)(v34);
      }
LABEL_77:
      uint64_t v44 = 0;
      while (2)
      {
        uint64_t v45 = *(void *)((char *)v56 + v44);
        if (v45)
        {
          v46 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_78;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v45);
          --qword_1EB220150;
          off_1EB21C9E8(v45);
          uint64_t v45 = xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            v46 = &xmmword_1EB21CA50;
LABEL_78:
            (*v46)(v45);
          }
        }
        v44 += 8;
        if (v44 == 128) {
          goto LABEL_67;
        }
        continue;
      }
    }
    uint64_t v39 = *((void *)v56 + v33);
    if (v39)
    {
      v40 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_58;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v39);
      --qword_1EB220150;
      off_1EB21C9E8(v39);
      uint64_t v39 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        v40 = &xmmword_1EB21CA50;
LABEL_58:
        (*v40)(v39);
      }
    }
    v41 = (void (**)(char *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v34);
      --qword_1EB220150;
      off_1EB21C9E8(v34);
      v34 = (char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_65;
      }
      v41 = (void (**)(char *))&xmmword_1EB21CA50;
    }
    (*v41)(v34);
LABEL_65:
    *((void *)v56 + v33) = 0;
    v34 = v59;
    LODWORD(v14) = v60[0];
    v35 = v49;
    v36 = a5;
LABEL_48:
    ++v33;
  }
  while (v33 != 16);
  *v36 = v34;
  _DWORD *v35 = v14;
  uint64_t v14 = 0;
  uint64_t v6 = v48;
  uint64_t v8 = v51;
LABEL_67:
  sub_1B0D7C0A8(v8);
  if (v8)
  {
    v42 = (void (**)(uint64_t))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_73;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
    --qword_1EB220150;
    off_1EB21C9E8(v8);
    uint64_t v8 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      v42 = (void (**)(uint64_t))&xmmword_1EB21CA50;
LABEL_73:
      (*v42)(v8);
    }
  }
  *(void *)(v6 + 32) = 0;
  return v14;
}

uint64_t sub_1B0D8B8E8(uint64_t a1, uint64_t a2, int a3, char *a4, int a5)
{
  if (!a4)
  {
    v18 = *(char **)a2;
    if (*(void *)a2)
    {
      uint64_t v19 = (uint64_t (**)(char *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v18);
        --qword_1EB220150;
        off_1EB21C9E8(v18);
        v18 = (char *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_30;
        }
        uint64_t v19 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
      }
      (*v19)(v18);
    }
LABEL_30:
    uint64_t v16 = 0;
    *(void *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    goto LABEL_107;
  }
  v7 = a4;
  int v8 = *(_DWORD *)(a2 + 60);
  if (v8 < 0)
  {
    uint64_t v16 = 0;
    *(void *)a2 = a4;
    *(_DWORD *)(a2 + 8) = a5;
    goto LABEL_107;
  }
  if (*(void *)a2)
  {
    if (v8 < a3) {
      int v9 = a4;
    }
    else {
      int v9 = *(char **)a2;
    }
    if (v8 < a3) {
      int v10 = a5;
    }
    else {
      int v10 = *(_DWORD *)(a2 + 8);
    }
    if (v8 < a3) {
      int v11 = *(char **)a2;
    }
    else {
      int v11 = a4;
    }
    if (v8 < a3) {
      int v12 = *(_DWORD *)(a2 + 8);
    }
    else {
      int v12 = a5;
    }
    if (v8 < a3) {
      int v13 = a3 - v8;
    }
    else {
      int v13 = v8 - a3;
    }
    int v60 = v13;
    int v14 = *(unsigned __int8 *)(a1 + 463);
    uint64_t v15 = v9;
    if (v14)
    {
      if (sqlite3_initialize() || (uint64_t v15 = (unsigned char *)sub_1B0C7FC94(v10 + 10)) == 0)
      {
        uint64_t v16 = 7;
        int v17 = (void (**)(char *))&off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_105;
        }
        goto LABEL_101;
      }
    }
    uint64_t v61 = v10;
    v63 = v15;
    long long v57 = v15;
    v58 = v9;
    if (v12 < 1)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v66 = 0;
      uint64_t v21 = (unsigned __int8 *)&v11[(int)sub_1B0D7D81C(v11, (unint64_t *)&v66)];
      uint64_t v22 = v66;
    }
    v65 = (char *)v21;
    int v9 = v57;
    int v23 = (int)v57;
    if (v10 >= 1)
    {
      uint64_t v66 = 0;
      v24 = (unsigned __int8 *)&v58[(int)sub_1B0D7D81C(v58, (unint64_t *)&v66)];
      uint64_t v25 = v66;
      v64 = (char *)v24;
      int v23 = (int)v57;
      if (v21)
      {
        uint64_t v26 = 0;
        uint64_t v27 = v11;
        uint64_t v28 = 0;
        unint64_t v62 = (unint64_t)&v58[v61];
        v56 = v27;
        unint64_t v59 = (unint64_t)&v27[v12];
        while (1)
        {
          if (v22 == v25) {
            int v29 = 0;
          }
          else {
            int v29 = -1;
          }
          if (v22 > v25) {
            int v29 = 1;
          }
          if (v14) {
            int v29 = -v29;
          }
          if (v29)
          {
            if (v29 < 0)
            {
              int v47 = (char)*v21;
              if (*v21)
              {
                do
                {
                  unsigned int v48 = v47 & 0xFFFFFF80;
                  int v49 = (char)*++v21;
                  int v47 = v49;
                }
                while (v48 | v49);
              }
              v65 = (char *)(v21 + 1);
              if ((unint64_t)(v21 + 1) >= v59) {
                goto LABEL_90;
              }
              uint64_t v66 = 0;
              int v50 = sub_1B0D7D81C((char *)v21 + 1, (unint64_t *)&v66);
              uint64_t v21 = (unsigned __int8 *)&v65[v50];
              v65 = (char *)v21;
              uint64_t v51 = v66;
              if (v14) {
                uint64_t v51 = -v66;
              }
              v22 += v51;
              v24 = (unsigned __int8 *)v64;
            }
            else
            {
              int v30 = (char)*v24;
              if (*v24)
              {
                do
                {
                  unsigned int v31 = v30 & 0xFFFFFF80;
                  int v32 = (char)*++v24;
                  int v30 = v32;
                }
                while (v31 | v32);
              }
              v64 = (char *)(v24 + 1);
              if ((unint64_t)(v24 + 1) >= v62) {
                goto LABEL_90;
              }
              uint64_t v66 = 0;
              int v33 = sub_1B0D7D81C((char *)v24 + 1, (unint64_t *)&v66);
              uint64_t v21 = (unsigned __int8 *)v65;
              v24 = (unsigned __int8 *)&v64[v33];
              v64 = (char *)v24;
              uint64_t v34 = v66;
              if (v14) {
                uint64_t v34 = -v66;
              }
              v25 += v34;
            }
          }
          else
          {
            v35 = v63;
            if (v14) {
              BOOL v36 = v26 == 0;
            }
            else {
              BOOL v36 = 1;
            }
            if (v36) {
              uint64_t v37 = v28;
            }
            else {
              uint64_t v37 = v22;
            }
            if (v36) {
              uint64_t v38 = v22;
            }
            else {
              uint64_t v38 = v28;
            }
            unint64_t v39 = v38 - v37;
            v40 = v63;
            do
            {
              char v41 = v39;
              *v40++ = v39 | 0x80;
              BOOL v42 = v39 > 0x7F;
              v39 >>= 7;
            }
            while (v42);
            *(v40 - 1) = v41 & 0x7F;
            v63 = v40;
            uint64_t v43 = 1;
            uint64_t v44 = v22;
            if (!sub_1B0D8CB60(&v63, v60, 0, 1, (unsigned __int8 **)&v65, (unsigned __int8 **)&v64))
            {
              v63 = v35;
              uint64_t v44 = v28;
              uint64_t v43 = v26;
            }
            uint64_t v45 = v65;
            if ((unint64_t)v65 >= v59)
            {
              uint64_t v21 = 0;
            }
            else
            {
              uint64_t v66 = 0;
              uint64_t v21 = (unsigned __int8 *)&v45[(int)sub_1B0D7D81C(v65, (unint64_t *)&v66)];
              uint64_t v46 = v66;
              if (v14) {
                uint64_t v46 = -v66;
              }
              v22 += v46;
            }
            v65 = (char *)v21;
            v52 = v64;
            if ((unint64_t)v64 >= v62)
            {
LABEL_90:
              int v23 = (int)v63;
              int v11 = v56;
              int v9 = v57;
              break;
            }
            uint64_t v66 = 0;
            v24 = (unsigned __int8 *)&v52[(int)sub_1B0D7D81C(v64, (unint64_t *)&v66)];
            v64 = (char *)v24;
            uint64_t v53 = v66;
            if (v14) {
              uint64_t v53 = -v66;
            }
            v25 += v53;
            uint64_t v28 = v44;
            uint64_t v26 = v43;
          }
          if (!v21 || !v24) {
            goto LABEL_90;
          }
        }
      }
    }
    int v10 = v23 - v9;
    if (!v14)
    {
      uint64_t v16 = 0;
      int v9 = v58;
      int v17 = (void (**)(char *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_105;
      }
      goto LABEL_101;
    }
    int v54 = (void (**)(char *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v58);
      --qword_1EB220150;
      off_1EB21C9E8(v58);
      v58 = (char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0)
      {
LABEL_98:
        uint64_t v16 = 0;
        int v17 = (void (**)(char *))&off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_105;
        }
LABEL_101:
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v11);
        --qword_1EB220150;
        off_1EB21C9E8(v11);
        int v11 = (char *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_106;
        }
        int v17 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_105:
        (*v17)(v11);
LABEL_106:
        *(void *)a2 = v9;
        *(_DWORD *)(a2 + 8) = v10;
        goto LABEL_107;
      }
      int v54 = (void (**)(char *))&xmmword_1EB21CA50;
    }
    (*v54)(v58);
    goto LABEL_98;
  }
  v20 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_37:
    (*v20)(v7);
    uint64_t v16 = 0;
    goto LABEL_107;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v7);
  --qword_1EB220150;
  off_1EB21C9E8(v7);
  v7 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    v20 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
    goto LABEL_37;
  }
  uint64_t v16 = 0;
LABEL_107:
  if (*(_DWORD *)(a2 + 60) < a3) {
    *(_DWORD *)(a2 + 60) = a3;
  }
  return v16;
}

uint64_t sub_1B0D8BEA4(uint64_t *a1, sqlite3_stmt **a2)
{
  v7 = 0;
  uint64_t result = sub_1B0D7D3B4(a1, 22, &v7, 0);
  v4 = v7;
  if (!result)
  {
    if (!sub_1B0CC3F2C((uint64_t)v7, 0))
    {
      uint64_t v5 = *((void *)v4 + 16);
      if ((*(_WORD *)(v5 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v5, 0);
      }
      else
      {
        *(void *)uint64_t v5 = 0;
        *(_WORD *)(v5 + 20) = 4;
      }
      uint64_t v6 = *(void *)(*(void *)v4 + 24);
      if (v6) {
        xmmword_1EB21CA50(v6);
      }
    }
    if (sqlite3_step(v4) == 100 && sqlite3_column_type(v4, 0) == 4)
    {
      uint64_t result = 0;
    }
    else
    {
      LODWORD(result) = sqlite3_reset(v4);
      v4 = 0;
      if (result) {
        uint64_t result = result;
      }
      else {
        uint64_t result = 267;
      }
    }
  }
  *a2 = v4;
  return result;
}

uint64_t sub_1B0D8BF88(unsigned char *a1, unint64_t a2, void *a3)
{
  if ((unint64_t)a1 >= a2)
  {
    uint64_t v4 = 0;
    LODWORD(v3) = a1;
    goto LABEL_22;
  }
  v3 = a1 + 1;
  uint64_t v4 = *a1 & 0x7F;
  if ((*a1 & 0x80) != 0)
  {
    if ((unint64_t)v3 >= a2) {
      goto LABEL_22;
    }
    int v5 = (char)a1[1];
    v3 = a1 + 2;
    v4 |= (unint64_t)(v5 & 0x7F) << 7;
    if (v5 < 0)
    {
      if ((unint64_t)v3 >= a2) {
        goto LABEL_22;
      }
      int v6 = (char)a1[2];
      v3 = a1 + 3;
      v4 |= (unint64_t)(v6 & 0x7F) << 14;
      if (v6 < 0)
      {
        if ((unint64_t)v3 >= a2) {
          goto LABEL_22;
        }
        int v7 = (char)a1[3];
        v3 = a1 + 4;
        v4 |= (unint64_t)(v7 & 0x7F) << 21;
        if (v7 < 0)
        {
          if ((unint64_t)v3 >= a2) {
            goto LABEL_22;
          }
          int v8 = (char)a1[4];
          v3 = a1 + 5;
          v4 |= (unint64_t)(v8 & 0x7F) << 28;
          if (v8 < 0)
          {
            if ((unint64_t)v3 >= a2) {
              goto LABEL_22;
            }
            int v9 = (char)a1[5];
            v3 = a1 + 6;
            v4 |= (unint64_t)(v9 & 0x7F) << 35;
            if (v9 < 0)
            {
              if ((unint64_t)v3 >= a2) {
                goto LABEL_22;
              }
              int v10 = (char)a1[6];
              v3 = a1 + 7;
              v4 |= (unint64_t)(v10 & 0x7F) << 42;
              if (v10 < 0)
              {
                if ((unint64_t)v3 >= a2) {
                  goto LABEL_22;
                }
                int v11 = (char)a1[7];
                v3 = a1 + 8;
                v4 |= (unint64_t)(v11 & 0x7F) << 49;
                if (v11 < 0)
                {
                  if ((unint64_t)v3 >= a2) {
                    goto LABEL_22;
                  }
                  int v12 = (char)a1[8];
                  v3 = a1 + 9;
                  v4 |= (unint64_t)(v12 & 0x7F) << 56;
                  if (v12 < 0)
                  {
                    if ((unint64_t)v3 < a2)
                    {
                      v4 |= (unint64_t)a1[9] << 63;
                      LODWORD(v3) = a1 + 10;
                      goto LABEL_23;
                    }
LABEL_22:
                    LODWORD(v3) = v3 + 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_23:
  *a3 = v4;
  return (v3 - a1);
}

uint64_t sub_1B0D8C0B0(int a1, char *a2, int a3, char *a4, int a5, void *a6, _DWORD *a7)
{
  int v7 = a7;
  *a6 = 0;
  *a7 = 0;
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v15 = a3;
  uint64_t v16 = a5;
  int v17 = (unsigned char *)sub_1B0C7FC94(a3 + (uint64_t)a5 + 17);
  if (!v17) {
    return 7;
  }
  v75 = v17;
  v76 = v17;
  if (a3 < 1)
  {
    v18 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v79 = 0;
    v18 = &a2[(int)sub_1B0D7D81C(a2, (unint64_t *)&v79)];
    uint64_t v19 = v79;
  }
  v74 = a6;
  v78 = v18;
  if (a5 < 1)
  {
    v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v79 = 0;
    v20 = &a4[(int)sub_1B0D7D81C(a4, (unint64_t *)&v79)];
    uint64_t v21 = v79;
  }
  v77 = v20;
  BOOL v22 = v18 != 0;
  BOOL v23 = v20 != 0;
  v24 = v75;
  uint64_t v25 = v75;
  if (!((unint64_t)v18 | (unint64_t)v20))
  {
LABEL_76:
    uint64_t v14 = 0;
    *uint64_t v25 = 0;
    goto LABEL_77;
  }
  v73 = v7;
  uint64_t v26 = 0;
  unint64_t v27 = (unint64_t)&a2[v15];
  unint64_t v28 = (unint64_t)&a4[v16];
  char v29 = 1;
  while (1)
  {
    if (v19 == v21) {
      int v31 = 0;
    }
    else {
      int v31 = -1;
    }
    if (v19 > v21) {
      int v31 = 1;
    }
    if (a1) {
      int v31 = -v31;
    }
    if (!v22 || !v23 || v31)
    {
      BOOL v41 = v31 < 0;
      char v42 = (a1 == 0) | v29;
      uint64_t v43 = v76;
      if (v23 && (!v22 || !v41))
      {
        if (v42) {
          uint64_t v44 = v26;
        }
        else {
          uint64_t v44 = v21;
        }
        if (v42) {
          uint64_t v26 = v21;
        }
        unint64_t v45 = v26 - v44;
        do
        {
          char v46 = v45;
          *v43++ = v45 | 0x80;
          BOOL v36 = v45 > 0x7F;
          v45 >>= 7;
        }
        while (v36);
        *(v43 - 1) = v46 & 0x7F;
        v76 = v43;
        int v47 = *v20;
        unsigned int v48 = v20;
        if (*v20)
        {
          unsigned int v48 = v20;
          do
          {
            unsigned int v49 = v47 & 0xFFFFFF80;
            int v50 = *++v48;
            int v47 = v50;
          }
          while (v49 | v50);
        }
        uint64_t v51 = v48 + 1;
        size_t v52 = (int)v48 + 1 - (int)v20;
        memcpy(v43, v20, v52);
        v76 = &v43[v52];
        v77 = v51;
        if ((unint64_t)v51 >= v28)
        {
          v20 = 0;
          v77 = 0;
          uint64_t v40 = v19;
          uint64_t v30 = v21;
        }
        else
        {
          uint64_t v79 = 0;
          int v53 = sub_1B0D7D81C(v51, (unint64_t *)&v79);
          v18 = v78;
          v20 = &v77[v53];
          v77 = v20;
          uint64_t v54 = v79;
          if (a1) {
            uint64_t v54 = -v79;
          }
          uint64_t v30 = v54 + v21;
          uint64_t v40 = v19;
        }
        uint64_t v19 = v21;
        goto LABEL_14;
      }
      if (v42) {
        uint64_t v55 = v26;
      }
      else {
        uint64_t v55 = v19;
      }
      if (v42) {
        uint64_t v26 = v19;
      }
      unint64_t v56 = v26 - v55;
      do
      {
        char v57 = v56;
        *v43++ = v56 | 0x80;
        BOOL v36 = v56 > 0x7F;
        v56 >>= 7;
      }
      while (v36);
      *(v43 - 1) = v57 & 0x7F;
      v76 = v43;
      int v58 = *v18;
      unint64_t v59 = v18;
      if (*v18)
      {
        unint64_t v59 = v18;
        do
        {
          unsigned int v60 = v58 & 0xFFFFFF80;
          int v61 = *++v59;
          int v58 = v61;
        }
        while (v60 | v61);
      }
      unint64_t v62 = (unsigned __int8 *)(v59 + 1);
      size_t v63 = (int)v59 + 1 - (int)v18;
      memcpy(v43, v18, v63);
      v76 = &v43[v63];
      v78 = (char *)v62;
      if ((unint64_t)v62 >= v27)
      {
        v18 = 0;
        v78 = 0;
        uint64_t v40 = v19;
      }
      else
      {
        uint64_t v79 = 0;
        int v64 = sub_1B0D7D81C((char *)v62, (unint64_t *)&v79);
        v20 = v77;
        v18 = &v78[v64];
        v78 = v18;
        uint64_t v65 = v79;
        if (a1) {
          uint64_t v65 = -v79;
        }
        uint64_t v40 = v65 + v19;
      }
      goto LABEL_13;
    }
    if ((a1 == 0) | v29 & 1) {
      uint64_t v32 = v26;
    }
    else {
      uint64_t v32 = v19;
    }
    if ((a1 == 0) | v29 & 1) {
      uint64_t v26 = v19;
    }
    unint64_t v33 = v26 - v32;
    uint64_t v34 = v76;
    do
    {
      char v35 = v33;
      *v34++ = v33 | 0x80;
      BOOL v36 = v33 > 0x7F;
      v33 >>= 7;
    }
    while (v36);
    *(v34 - 1) = v35 & 0x7F;
    v76 = v34;
    uint64_t v37 = sub_1B0D8C5A8(&v76, (unsigned __int8 **)&v78, &v77);
    if (v37) {
      break;
    }
    uint64_t v38 = v78;
    if ((unint64_t)v78 >= v27)
    {
      v18 = 0;
      uint64_t v40 = v19;
    }
    else
    {
      uint64_t v79 = 0;
      v18 = &v38[(int)sub_1B0D7D81C(v78, (unint64_t *)&v79)];
      uint64_t v39 = v79;
      if (a1) {
        uint64_t v39 = -v79;
      }
      uint64_t v40 = v39 + v19;
    }
    v78 = v18;
    uint64_t v66 = v77;
    if ((unint64_t)v77 < v28)
    {
      uint64_t v79 = 0;
      v20 = &v66[(int)sub_1B0D7D81C(v77, (unint64_t *)&v79)];
      v77 = v20;
      uint64_t v67 = v79;
      if (a1) {
        uint64_t v67 = -v79;
      }
      uint64_t v30 = v67 + v21;
      goto LABEL_14;
    }
    v20 = 0;
    v77 = 0;
LABEL_13:
    uint64_t v30 = v21;
LABEL_14:
    char v29 = 0;
    BOOL v22 = v18 != 0;
    BOOL v23 = v20 != 0;
    uint64_t v26 = v19;
    uint64_t v21 = v30;
    uint64_t v19 = v40;
    if (!((unint64_t)v18 | (unint64_t)v20))
    {
      v24 = v75;
      uint64_t v25 = v76;
      int v7 = v73;
      goto LABEL_76;
    }
  }
  uint64_t v14 = v37;
  v70 = &off_1EB21C9E8;
  v71 = v75;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0)
    {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
      v71 = v75;
    }
    v72 = v71;
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v71);
    --qword_1EB220150;
    off_1EB21C9E8(v72);
    v71 = (void *)xmmword_1EB2201B0;
    int v7 = v73;
    if ((void)xmmword_1EB2201B0)
    {
      v70 = &xmmword_1EB21CA50;
      goto LABEL_86;
    }
    LODWORD(v25) = 0;
    v24 = 0;
LABEL_77:
    v68 = v74;
  }
  else
  {
    int v7 = v73;
LABEL_86:
    v68 = v74;
    (*v70)(v71);
    LODWORD(v25) = 0;
    v24 = 0;
  }
  void *v68 = v24;
  _DWORD *v7 = v25 - v24;
  return v14;
}

uint64_t sub_1B0D8C5A8(unsigned char **a1, unsigned __int8 **a2, char **a3)
{
  int v6 = *a1;
  int v7 = *a2;
  int v8 = *a3;
LABEL_2:
  while (2)
  {
    int v9 = (char *)(v7 + 1);
    while (1)
    {
      unsigned int v11 = *v7;
      if (v11 == 1)
      {
        LODWORD(v13) = *v9;
        if (*v9 < 0)
        {
          LODWORD(v13) = v13 & 0x7F | (v7[2] << 7);
          if ((char)v7[2] < 0)
          {
            LODWORD(v13) = v13 & 0x3FFF | (v7[3] << 14);
            if ((char)v7[3] < 0)
            {
              LODWORD(v13) = v13 & 0x1FFFFF | (v7[4] << 21);
              if ((char)v7[4] < 0) {
                LODWORD(v13) = v13 & 0xFFFFFFF | ((v7[5] & 7) << 28);
              }
            }
          }
        }
        if (!v13) {
          return 267;
        }
        unsigned int v12 = *v8;
        if (!*v8)
        {
LABEL_8:
          unsigned int v14 = 0x7FFFFFFF;
          goto LABEL_27;
        }
      }
      else if (*v7)
      {
        LODWORD(v13) = 0;
        unsigned int v12 = *v8;
        if (!*v8) {
          goto LABEL_8;
        }
      }
      else
      {
        unsigned int v12 = *v8;
        if (!*v8) {
          goto LABEL_113;
        }
        LODWORD(v13) = 0x7FFFFFFF;
      }
      if (v12 == 1)
      {
        unsigned int v14 = v8[1];
        if (v8[1] < 0)
        {
          unsigned int v14 = v14 & 0x7F | (v8[2] << 7);
          if (v8[2] < 0)
          {
            unsigned int v14 = v14 & 0x3FFF | (v8[3] << 14);
            if (v8[3] < 0)
            {
              unsigned int v14 = v14 & 0x1FFFFF | (v8[4] << 21);
              if (v8[4] < 0) {
                unsigned int v14 = v14 & 0xFFFFFFF | ((v8[5] & 7) << 28);
              }
            }
          }
        }
        if (!v14) {
          return 267;
        }
      }
      else
      {
        unsigned int v14 = 0;
      }
LABEL_27:
      if (v13 == v14) {
        break;
      }
      if (v13 < v14)
      {
        if (v13)
        {
          uint64_t v28 = 0;
          unint64_t v13 = v13;
          do
          {
            char v29 = v13;
            v6[++v28] = v13 | 0x80;
            BOOL v18 = v13 > 0x7F;
            v13 >>= 7;
          }
          while (v18);
          *int v6 = 1;
          uint64_t v30 = &v6[v28];
          unsigned char *v30 = v29 & 0x7F;
          int v6 = v30 + 1;
          LODWORD(v13) = v28 + 1;
          unsigned int v11 = v9[v28];
        }
        int v31 = &v7[(int)v13];
        int v7 = v31;
        if (v11 >= 2)
        {
          int v7 = v31;
          do
          {
            int v32 = v11 & 0x80;
            char v33 = *++v7;
            LOBYTE(v11) = v33;
          }
          while (v33 & 0xFE | v32);
        }
        size_t v34 = (int)v7 - (int)v31;
        memcpy(v6, v31, v34);
        v6 += v34;
        goto LABEL_2;
      }
      if (v14)
      {
        uint64_t v15 = 0;
        unint64_t v16 = v14;
        do
        {
          char v17 = v16;
          v6[++v15] = v16 | 0x80;
          BOOL v18 = v16 > 0x7F;
          v16 >>= 7;
        }
        while (v18);
        *int v6 = 1;
        uint64_t v19 = &v6[v15];
        *uint64_t v19 = v17 & 0x7F;
        int v6 = v19 + 1;
        int v20 = v15 + 1;
        unsigned int v12 = v8[v15 + 1];
      }
      else
      {
        int v20 = 0;
      }
      uint64_t v21 = (unsigned __int8 *)&v8[v20];
      int v8 = (char *)v21;
      if (v12 >= 2)
      {
        int v8 = (char *)v21;
        do
        {
          int v22 = v12 & 0x80;
          char v23 = *++v8;
          LOBYTE(v12) = v23;
        }
        while (v23 & 0xFE | v22);
      }
      size_t v10 = (int)v8 - (int)v21;
      memcpy(v6, v21, v10);
      v6 += v10;
    }
    if (v13)
    {
      uint64_t v24 = 0;
      unint64_t v13 = v13;
      do
      {
        char v25 = v13;
        v6[++v24] = v13 | 0x80;
        BOOL v18 = v13 > 0x7F;
        v13 >>= 7;
      }
      while (v18);
      *int v6 = 1;
      uint64_t v26 = &v6[v24];
      *uint64_t v26 = v25 & 0x7F;
      int v6 = v26 + 1;
      int v27 = v24 + 1;
    }
    else
    {
      int v27 = 0;
    }
    char v35 = &v8[v27];
    uint64_t v52 = 0;
    v7 += v27 + (uint64_t)(int)sub_1B0D7D81C((char *)&v7[v27], (unint64_t *)&v52);
    uint64_t v36 = v52;
    uint64_t v52 = 0;
    int v8 = &v35[(int)sub_1B0D7D81C(v35, (unint64_t *)&v52)];
    if (v36 >= 2)
    {
      uint64_t v37 = v52;
      if (v52 >= 2)
      {
        uint64_t v38 = 0;
        do
        {
          uint64_t v39 = v36;
          if (v36 >= v37) {
            uint64_t v40 = v37;
          }
          else {
            uint64_t v40 = v36;
          }
          unint64_t v41 = v40 - v38;
          do
          {
            char v42 = v41;
            *v6++ = v41 | 0x80;
            BOOL v18 = v41 > 0x7F;
            v41 >>= 7;
          }
          while (v18);
          *(v6 - 1) = v42 & 0x7F;
          if (v36 == v37)
          {
            unsigned int v43 = *v7;
            if (v43 >= 2)
            {
              if ((v43 & 0x80) != 0)
              {
                unsigned int v43 = v43 & 0x7F | (v7[1] << 7);
                if ((char)v7[1] < 0)
                {
                  unsigned int v43 = v43 & 0x3FFF | (v7[2] << 14);
                  if ((char)v7[2] < 0)
                  {
                    unsigned int v43 = v43 & 0x1FFFFF | (v7[3] << 21);
                    if ((char)v7[3] < 0)
                    {
                      unsigned int v43 = v43 & 0xFFFFFFF | ((v7[4] & 7) << 28);
                      uint64_t v45 = 5;
                    }
                    else
                    {
                      uint64_t v45 = 4;
                    }
                  }
                  else
                  {
                    uint64_t v45 = 3;
                  }
                }
                else
                {
                  uint64_t v45 = 2;
                }
              }
              else
              {
                uint64_t v45 = 1;
              }
              v7 += v45;
              uint64_t v36 = v36 + v43 - 2;
            }
            else
            {
              uint64_t v36 = 0x7FFFFFFFFFFFFFFFLL;
            }
            unsigned int v49 = *v8;
            if (v49 >= 2)
            {
              if ((v49 & 0x80) != 0)
              {
                unsigned int v49 = v49 & 0x7F | (v8[1] << 7);
                if (v8[1] < 0)
                {
                  unsigned int v49 = v49 & 0x3FFF | (v8[2] << 14);
                  if (v8[2] < 0)
                  {
                    unsigned int v49 = v49 & 0x1FFFFF | (v8[3] << 21);
                    if (v8[3] < 0)
                    {
                      unsigned int v49 = v49 & 0xFFFFFFF | ((v8[4] & 7) << 28);
                      uint64_t v50 = 5;
                    }
                    else
                    {
                      uint64_t v50 = 4;
                    }
                  }
                  else
                  {
                    uint64_t v50 = 3;
                  }
                }
                else
                {
                  uint64_t v50 = 2;
                }
              }
              else
              {
                uint64_t v50 = 1;
              }
              v8 += v50;
              uint64_t v37 = v39 + v49 - 2;
            }
            else
            {
              uint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
            }
          }
          else if (v36 >= v37)
          {
            unsigned int v46 = *v8;
            if (v46 >= 2)
            {
              if ((v46 & 0x80) != 0)
              {
                unsigned int v46 = v46 & 0x7F | (v8[1] << 7);
                if (v8[1] < 0)
                {
                  unsigned int v46 = v46 & 0x3FFF | (v8[2] << 14);
                  if (v8[2] < 0)
                  {
                    unsigned int v46 = v46 & 0x1FFFFF | (v8[3] << 21);
                    if (v8[3] < 0)
                    {
                      unsigned int v46 = v46 & 0xFFFFFFF | ((v8[4] & 7) << 28);
                      uint64_t v48 = 5;
                    }
                    else
                    {
                      uint64_t v48 = 4;
                    }
                  }
                  else
                  {
                    uint64_t v48 = 3;
                  }
                }
                else
                {
                  uint64_t v48 = 2;
                }
              }
              else
              {
                uint64_t v48 = 1;
              }
              v8 += v48;
              uint64_t v37 = v37 + v46 - 2;
            }
            else
            {
              uint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
            }
          }
          else
          {
            unsigned int v44 = *v7;
            if (v44 >= 2)
            {
              if ((v44 & 0x80) != 0)
              {
                unsigned int v44 = v44 & 0x7F | (v7[1] << 7);
                if ((char)v7[1] < 0)
                {
                  unsigned int v44 = v44 & 0x3FFF | (v7[2] << 14);
                  if ((char)v7[2] < 0)
                  {
                    unsigned int v44 = v44 & 0x1FFFFF | (v7[3] << 21);
                    if ((char)v7[3] < 0)
                    {
                      unsigned int v44 = v44 & 0xFFFFFFF | ((v7[4] & 7) << 28);
                      uint64_t v47 = 5;
                    }
                    else
                    {
                      uint64_t v47 = 4;
                    }
                  }
                  else
                  {
                    uint64_t v47 = 3;
                  }
                }
                else
                {
                  uint64_t v47 = 2;
                }
              }
              else
              {
                uint64_t v47 = 1;
              }
              v7 += v47;
              uint64_t v36 = v36 + v44 - 2;
            }
            else
            {
              uint64_t v36 = 0x7FFFFFFFFFFFFFFFLL;
            }
          }
          uint64_t v38 = v40 - 2;
        }
        while (v36 != 0x7FFFFFFFFFFFFFFFLL || v37 != 0x7FFFFFFFFFFFFFFFLL);
        continue;
      }
    }
    break;
  }
LABEL_113:
  uint64_t result = 0;
  *int v6 = 0;
  *a1 = v6 + 1;
  *a2 = v7 + 1;
  *a3 = v8 + 1;
  return result;
}

uint64_t sub_1B0D8CB60(unsigned char **a1, int a2, int a3, int a4, unsigned __int8 **a5, unsigned __int8 **a6)
{
  int v6 = a6;
  int v9 = a1;
  size_t v10 = *a1;
  unsigned int v11 = *a5;
  unsigned int v12 = (char *)*a6;
  if (**a5 == 1)
  {
    LODWORD(v13) = v11[1];
    if ((char)v11[1] < 0)
    {
      LODWORD(v13) = v13 & 0x7F | (v11[2] << 7);
      if ((char)v11[2] < 0)
      {
        LODWORD(v13) = v13 & 0x3FFF | (v11[3] << 14);
        if ((char)v11[3] < 0)
        {
          LODWORD(v13) = v13 & 0x1FFFFF | (v11[4] << 21);
          if ((char)v11[4] < 0)
          {
            LODWORD(v13) = v13 & 0xFFFFFFF | ((v11[5] & 7) << 28);
            uint64_t v14 = 5;
          }
          else
          {
            uint64_t v14 = 4;
          }
        }
        else
        {
          uint64_t v14 = 3;
        }
      }
      else
      {
        uint64_t v14 = 2;
      }
    }
    else
    {
      uint64_t v14 = 1;
    }
    v11 += v14 + 1;
  }
  else
  {
    LODWORD(v13) = 0;
  }
  if (*v12 == 1)
  {
    int v15 = v12[1];
    if (v12[1] < 0)
    {
      int v15 = v15 & 0x7F | (v12[2] << 7);
      if (v12[2] < 0)
      {
        int v15 = v15 & 0x3FFF | (v12[3] << 14);
        if (v12[3] < 0)
        {
          int v15 = v15 & 0x1FFFFF | (v12[4] << 21);
          if (v12[4] < 0)
          {
            int v15 = v15 & 0xFFFFFFF | ((v12[5] & 7) << 28);
            uint64_t v16 = 5;
          }
          else
          {
            uint64_t v16 = 4;
          }
        }
        else
        {
          uint64_t v16 = 3;
        }
      }
      else
      {
        uint64_t v16 = 2;
      }
    }
    else
    {
      uint64_t v16 = 1;
    }
    v12 += v16 + 1;
  }
  else
  {
    int v15 = 0;
  }
  uint64_t v58 = a2;
  while (1)
  {
    while (v13 != v15)
    {
      if ((int)v13 < v15)
      {
        unsigned int v35 = *v11;
        if (v35 >= 2)
        {
          do
          {
            unsigned int v37 = *++v11;
            unsigned int v36 = v37;
            int v38 = v35 & 0x80;
            LOBYTE(v35) = v37;
          }
          while (v37 & 0xFE | v38);
          unsigned int v35 = v36;
        }
        if (!v35) {
          goto LABEL_121;
        }
        LODWORD(v13) = v11[1];
        if ((char)v11[1] < 0)
        {
          LODWORD(v13) = v13 & 0x7F | (v11[2] << 7);
          if ((char)v11[2] < 0)
          {
            LODWORD(v13) = v13 & 0x3FFF | (v11[3] << 14);
            if ((char)v11[3] < 0)
            {
              LODWORD(v13) = v13 & 0x1FFFFF | (v11[4] << 21);
              if ((char)v11[4] < 0)
              {
                LODWORD(v13) = v13 & 0xFFFFFFF | ((v11[5] & 7) << 28);
                v11 += 6;
              }
              else
              {
                v11 += 5;
              }
            }
            else
            {
              v11 += 4;
            }
          }
          else
          {
            v11 += 3;
          }
        }
        else
        {
          v11 += 2;
        }
      }
      else
      {
        unsigned int v17 = *v12;
        if (v17 >= 2)
        {
          do
          {
            unsigned int v19 = *++v12;
            unsigned int v18 = v19;
            int v20 = v17 & 0x80;
            LOBYTE(v17) = v19;
          }
          while (v19 & 0xFE | v20);
          unsigned int v17 = v18;
        }
        if (!v17) {
          goto LABEL_121;
        }
        int v15 = v12[1];
        if (v12[1] < 0)
        {
          int v15 = v15 & 0x7F | (v12[2] << 7);
          if (v12[2] < 0)
          {
            int v15 = v15 & 0x3FFF | (v12[3] << 14);
            if (v12[3] < 0)
            {
              int v15 = v15 & 0x1FFFFF | (v12[4] << 21);
              if (v12[4] < 0)
              {
                int v15 = v15 & 0xFFFFFFF | ((v12[5] & 7) << 28);
                v12 += 6;
              }
              else
              {
                v12 += 5;
              }
            }
            else
            {
              v12 += 4;
            }
          }
          else
          {
            v12 += 3;
          }
        }
        else
        {
          v12 += 2;
        }
      }
    }
    char v57 = a5;
    uint64_t v21 = v10;
    if (v13)
    {
      *size_t v10 = 1;
      uint64_t v21 = v10 + 1;
      unint64_t v13 = v13;
      do
      {
        char v22 = v13;
        *v21++ = v13 | 0x80;
        BOOL v25 = v13 > 0x7F;
        v13 >>= 7;
      }
      while (v25);
      *(v21 - 1) = v22 & 0x7F;
    }
    uint64_t v59 = 0;
    v11 += (int)sub_1B0D7D81C((char *)v11, (unint64_t *)&v59);
    uint64_t v23 = v59;
    uint64_t v59 = 0;
    v12 += (int)sub_1B0D7D81C(v12, (unint64_t *)&v59);
    int64_t v24 = v23 - 2;
    BOOL v25 = v23 < 2 || v59 < 2;
    if (v25) {
      break;
    }
    uint64_t v55 = v6;
    unint64_t v56 = v9;
    int64_t v26 = 0;
    int64_t v27 = v59 - 2;
LABEL_49:
    int64_t v28 = v24 + v58;
    while (1)
    {
      int64_t v29 = v26;
      if (v27 == v28 || v27 <= v28 && !a4 && v27 > v24)
      {
        if (a3) {
          int64_t v26 = v24;
        }
        else {
          int64_t v26 = v27;
        }
        unint64_t v30 = v26 - v29 + 2;
        do
        {
          char v31 = v30;
          *v21++ = v30 | 0x80;
          BOOL v25 = v30 > 0x7F;
          v30 >>= 7;
        }
        while (v25);
        size_t v10 = 0;
        *(v21 - 1) = v31 & 0x7F;
      }
      if (a3) {
        BOOL v32 = 0;
      }
      else {
        BOOL v32 = v27 <= v28;
      }
      char v33 = !v32;
      if (v27 > v24 && (v33 & 1) != 0)
      {
        unsigned int v34 = *v11;
        if (v34 > 1)
        {
          uint64_t v59 = 0;
          v11 += (int)sub_1B0D7D81C((char *)v11, (unint64_t *)&v59);
          int64_t v24 = v24 + v59 - 2;
          goto LABEL_49;
        }
        if (!v10) {
          size_t v10 = v21;
        }
        goto LABEL_81;
      }
      if (*v12 < 2u) {
        break;
      }
      uint64_t v59 = 0;
      v12 += (int)sub_1B0D7D81C(v12, (unint64_t *)&v59);
      int64_t v27 = v27 + v59 - 2;
    }
    unsigned int v34 = *v11;
    if (!v10) {
      size_t v10 = v21;
    }
    if (v34 < 2)
    {
LABEL_81:
      int v6 = v55;
      int v9 = v56;
      a5 = v57;
      goto LABEL_86;
    }
    int v6 = v55;
    int v9 = v56;
    a5 = v57;
    do
    {
      unsigned int v40 = *++v11;
      unsigned int v39 = v40;
      int v41 = v34 & 0x80;
      LOBYTE(v34) = v40;
    }
    while (v40 & 0xFE | v41);
    unsigned int v34 = v39;
LABEL_86:
    unsigned int v42 = *v12;
    if (v42 >= 2)
    {
      do
      {
        unsigned int v44 = *++v12;
        unsigned int v43 = v44;
        int v45 = v42 & 0x80;
        LOBYTE(v42) = v44;
      }
      while (v44 & 0xFE | v45);
      unsigned int v42 = v43;
    }
    if (!v34) {
      goto LABEL_121;
    }
    if (!v42)
    {
      uint64_t v51 = (unsigned __int8 *)(v12 + 1);
      goto LABEL_124;
    }
    LODWORD(v13) = v11[1];
    if ((char)v11[1] < 0)
    {
      LODWORD(v13) = v13 & 0x7F | (v11[2] << 7);
      if ((char)v11[2] < 0)
      {
        LODWORD(v13) = v13 & 0x3FFF | (v11[3] << 14);
        if ((char)v11[3] < 0)
        {
          LODWORD(v13) = v13 & 0x1FFFFF | (v11[4] << 21);
          if ((char)v11[4] < 0)
          {
            LODWORD(v13) = v13 & 0xFFFFFFF | ((v11[5] & 7) << 28);
            uint64_t v46 = 5;
          }
          else
          {
            uint64_t v46 = 4;
          }
        }
        else
        {
          uint64_t v46 = 3;
        }
      }
      else
      {
        uint64_t v46 = 2;
      }
    }
    else
    {
      uint64_t v46 = 1;
    }
    int v15 = v12[1];
    if (v12[1] < 0)
    {
      int v15 = v15 & 0x7F | (v12[2] << 7);
      if (v12[2] < 0)
      {
        int v15 = v15 & 0x3FFF | (v12[3] << 14);
        if (v12[3] < 0)
        {
          int v15 = v15 & 0x1FFFFF | (v12[4] << 21);
          if (v12[4] < 0)
          {
            int v15 = v15 & 0xFFFFFFF | ((v12[5] & 7) << 28);
            uint64_t v47 = 5;
          }
          else
          {
            uint64_t v47 = 4;
          }
        }
        else
        {
          uint64_t v47 = 3;
        }
      }
      else
      {
        uint64_t v47 = 2;
      }
    }
    else
    {
      uint64_t v47 = 1;
    }
    v11 += v46 + 1;
    v12 += v47 + 1;
  }
  size_t v10 = v21;
  a5 = v57;
LABEL_121:
  int v48 = *v12;
  if (*v12)
  {
    do
    {
      unsigned int v49 = v48 & 0xFFFFFF80;
      int v50 = *++v12;
      int v48 = v50;
    }
    while (v49 | v50);
  }
  LOBYTE(v34) = *v11;
  uint64_t v51 = (unsigned __int8 *)(v12 + 1);
  if (*v11)
  {
LABEL_124:
    unsigned int v34 = (char)v34;
    do
    {
      unsigned int v52 = v34 & 0xFFFFFF80;
      unsigned int v53 = (char)*++v11;
      unsigned int v34 = v53;
    }
    while (v52 | v53);
  }
  *a5 = v11 + 1;
  *int v6 = v51;
  if ((unsigned char *)*v9 == v10) {
    return 0;
  }
  *size_t v10 = 0;
  *int v9 = v10 + 1;
  return 1;
}

uint64_t sub_1B0D8D198(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a1;
  if (a2)
  {
    if (*(unsigned __int8 *)(a1 + 76) == *(unsigned __int8 *)(v4 + 463))
    {
      int v5 = *(_DWORD *)(a3 + 80);
      if ((v5 - 5) >= 0xFFFFFFFC)
      {
        if (v5 < 1)
        {
          LODWORD(v6) = 0;
        }
        else
        {
          if (*(_DWORD *)(a3 + 104)) {
            goto LABEL_31;
          }
          uint64_t v6 = *(void *)(a3 + 120);
          if (v6)
          {
            if (!*(_DWORD *)(v6 + 52)) {
              goto LABEL_31;
            }
            LODWORD(v6) = 1;
          }
          int v7 = v5 & ~(v5 >> 31);
          if (v7 != 1)
          {
            if (*(_DWORD *)(a3 + 144)) {
              goto LABEL_31;
            }
            uint64_t v8 = *(void *)(a3 + 160);
            if (v8)
            {
              if (!*(_DWORD *)(v8 + 52)) {
                goto LABEL_31;
              }
              LODWORD(v6) = 1;
            }
            if (v7 != 2)
            {
              if (*(_DWORD *)(a3 + 184)) {
                goto LABEL_31;
              }
              uint64_t v9 = *(void *)(a3 + 200);
              if (v9)
              {
                if (!*(_DWORD *)(v9 + 52)) {
                  goto LABEL_31;
                }
                LODWORD(v6) = 1;
              }
              if (v7 != 3)
              {
                if (*(_DWORD *)(a3 + 224)) {
                  goto LABEL_31;
                }
                uint64_t v10 = *(void *)(a3 + 240);
                if (v10)
                {
                  if (!*(_DWORD *)(v10 + 52)) {
                    goto LABEL_31;
                  }
                  LODWORD(v6) = 1;
                }
              }
            }
          }
        }
        if (v6)
        {
          if (*(_DWORD *)(a3 + 84) >= *(_DWORD *)(v4 + 48)) {
            int v11 = -1;
          }
          else {
            int v11 = *(_DWORD *)(a3 + 84);
          }
          int v40 = v11;
          if (*(int *)(a3 + 80) < 1)
          {
            uint64_t result = 0;
            goto LABEL_75;
          }
          uint64_t v12 = 0;
          while (1)
          {
            unsigned int v17 = *(uint64_t **)(a3 + 40 * v12 + 120);
            if (v17)
            {
              uint64_t v18 = a3 + 40 * v12;
              unsigned int v19 = *(const void **)(v18 + 88);
              int v20 = *(_DWORD *)(v18 + 96);
              uint64_t v21 = *((unsigned int *)v17 + 2);
              if (*(unsigned char *)(v4 + 463)) {
                char v22 = sub_1B0D7EBBC;
              }
              else {
                char v22 = sub_1B0D7EC14;
              }
              uint64_t result = sub_1B0D7D91C(v4, v17, v19, v20);
              if (result) {
                goto LABEL_75;
              }
              uint64_t v41 = v12;
              unsigned int v43 = v17;
              if ((int)v21 <= 0)
              {
                *((_DWORD *)v17 + 3) = 0;
              }
              else
              {
                uint64_t v23 = 0;
                uint64_t v24 = *v17;
                while (1)
                {
                  uint64_t v25 = *(void *)(v24 + 8 * v23);
                  if (!*(void *)(v25 + 40)) {
                    break;
                  }
                  int v26 = *(_DWORD *)(v25 + 72);
                  int64_t v27 = *(const void **)(v25 + 80);
                  int v28 = v26 >= v20 ? v20 : *(_DWORD *)(v25 + 72);
                  if (memcmp(v27, v19, v28) || v26 != v20) {
                    break;
                  }
                  if (v21 == ++v23)
                  {
                    LODWORD(v23) = v21;
                    break;
                  }
                }
                *((_DWORD *)v43 + 3) = v23;
                if ((int)v23 >= 1)
                {
                  uint64_t v30 = 0;
                  uint64_t v31 = 0;
                  while (1)
                  {
                    uint64_t result = sub_1B0D7EC6C(v4, *(void *)(*v43 + 8 * v31));
                    if (result) {
                      break;
                    }
                    ++v31;
                    v30 += 8;
                    if (v31 >= *((int *)v43 + 3))
                    {
                      if ((v31 & 0xFFFFFFFE) != 0)
                      {
                        uint64_t v32 = 0;
                        uint64_t v33 = v31 - 1;
                        uint64_t v42 = *v43;
                        uint64_t v34 = *v43 + v30;
                        do
                        {
                          uint64_t v35 = v33--;
                          if (v35 < v31)
                          {
                            uint64_t v36 = *(void *)(v42 + 8 * v33);
                            uint64_t v37 = v32;
                            do
                            {
                              uint64_t v38 = v34 + v37;
                              if ((v22(v36, *(void *)(v34 + v37 - 8)) & 0x80000000) != 0) {
                                break;
                              }
                              int8x16_t v39 = *(int8x16_t *)(v38 - 16);
                              *(int8x16_t *)(v38 - 16) = vextq_s8(v39, v39, 8uLL);
                              uint64_t v36 = v39.i64[0];
                              v37 += 8;
                            }
                            while (v37 != 8);
                          }
                          v32 -= 8;
                        }
                        while (v35 > 1);
                      }
                      goto LABEL_42;
                    }
                  }
LABEL_75:
                  int v16 = 1;
                  goto LABEL_40;
                }
              }
LABEL_42:
              *((_DWORD *)v43 + 10) = v40;
              uint64_t v12 = v41;
            }
            uint64_t result = 0;
            ++v12;
            int v16 = 1;
            if (v12 >= *(int *)(a3 + 80)) {
              goto LABEL_40;
            }
          }
        }
      }
    }
  }
LABEL_31:
  uint64_t v13 = 0;
  uint64_t v14 = a3 + 88;
  while (v13 < *(int *)(a3 + 80))
  {
    if (*(void *)(v14 + 32))
    {
      int v45 = 0;
      unsigned int v44 = 0;
      uint64_t result = sub_1B0D8B290(v4, v14, *(_DWORD *)(a3 + 84), &v45, &v44);
      if (!result) {
        uint64_t result = sub_1B0D8B8E8(v4, a3, v13, v44, v45);
      }
    }
    else
    {
      uint64_t result = 0;
    }
    ++v13;
    v14 += 40;
    if (result)
    {
      int v16 = 0;
      goto LABEL_40;
    }
  }
  int v16 = 0;
  uint64_t result = 0;
LABEL_40:
  *(_DWORD *)(a3 + 56) = v16;
  return result;
}

uint64_t sub_1B0D8D508(uint64_t result, uint64_t a2, int *a3)
{
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  if (!*a3)
  {
    uint64_t v3 = a2;
    uint64_t v4 = (BOOL *)(a2 + 48);
    if (!*(unsigned char *)(a2 + 48))
    {
      uint64_t v6 = (unsigned __int8 *)result;
      int v7 = *(unsigned __int8 *)(result + 76);
      *(unsigned char *)(a2 + 49) = 1;
      switch(*(_DWORD *)a2)
      {
        case 1:
        case 3:
          uint64_t v9 = *(void *)(a2 + 16);
          uint64_t v8 = *(void *)(a2 + 24);
          if (*(unsigned char *)(v9 + 50))
          {
            uint64_t result = sub_1B0D8D508(result, *(void *)(a2 + 24), a3);
            *(void *)(v3 + 40) = *(void *)(v8 + 40);
            *(unsigned char *)(v3 + 48) = *(unsigned char *)(v8 + 48);
          }
          else
          {
            int v35 = *(unsigned __int8 *)(v8 + 50);
            uint64_t result = sub_1B0D8D508(result, *(void *)(a2 + 16), a3);
            if (v35)
            {
              *(void *)(v3 + 40) = *(void *)(v9 + 40);
              *(unsigned char *)(v3 + 48) = *(unsigned char *)(v9 + 48);
            }
            else
            {
              v88 = v6;
              uint64_t v89 = v8;
              while (1)
              {
                uint64_t result = sub_1B0D8D508(v88, v89, a3);
                if (*(unsigned char *)(v9 + 48) || *(unsigned char *)(v8 + 48))
                {
                  uint64_t v90 = *(void *)(v9 + 40);
                  BOOL v94 = 1;
                  goto LABEL_194;
                }
                uint64_t v90 = *(void *)(v9 + 40);
                if (*a3) {
                  break;
                }
                uint64_t v91 = *(void *)(v8 + 40);
                BOOL v92 = v90 <= v91;
                if (v90 == v91) {
                  int v93 = 0;
                }
                else {
                  int v93 = -1;
                }
                if (!v92) {
                  int v93 = 1;
                }
                if (v7) {
                  int v93 = -v93;
                }
                if (!v93) {
                  break;
                }
                if (v93 >= 0) {
                  uint64_t v89 = v8;
                }
                else {
                  uint64_t v89 = v9;
                }
                v88 = v6;
              }
              BOOL v94 = *(unsigned __int8 *)(v8 + 48) != 0;
LABEL_194:
              *(void *)(v3 + 40) = v90;
              *(unsigned char *)(v3 + 48) = v94;
              if (*(_DWORD *)v3 == 1 && v94)
              {
                uint64_t v96 = *(void *)(v8 + 32);
                if (*(void *)v96 && !*a3)
                {
                  do
                  {
                    if (*(unsigned char *)(v8 + 48)) {
                      break;
                    }
                    bzero(*(void **)(v96 + 40), *(int *)(v96 + 48));
                    uint64_t result = sub_1B0D8D508(v6, v8, a3);
                  }
                  while (!*a3);
                }
                uint64_t v97 = *(void *)(v9 + 32);
                if (v97 && *(void *)v97 && !*a3)
                {
                  do
                  {
                    if (*(unsigned char *)(v9 + 48)) {
                      break;
                    }
                    bzero(*(void **)(v97 + 40), *(int *)(v97 + 48));
                    uint64_t result = sub_1B0D8D508(v6, v9, a3);
                  }
                  while (!*a3);
                }
                *(unsigned char *)(v9 + 48) = 1;
                *(unsigned char *)(v8 + 48) = 1;
              }
            }
          }
          return result;
        case 2:
          uint64_t v14 = *(void *)(a2 + 16);
          uint64_t v15 = *(void *)(a2 + 24);
          if (!*(unsigned char *)(v15 + 49)) {
            sub_1B0D8D508(result, *(void *)(a2 + 24), a3);
          }
          uint64_t result = sub_1B0D8D508(v6, v14, a3);
          char v16 = *(unsigned char *)(v14 + 48);
          if (!v16)
          {
            if (*a3)
            {
              char v16 = 0;
            }
            else
            {
              do
              {
                if (*(unsigned char *)(v15 + 48)) {
                  break;
                }
                uint64_t v17 = *(void *)(v14 + 40);
                uint64_t v18 = *(void *)(v15 + 40);
                BOOL v26 = v17 < v18;
                BOOL v19 = v17 > v18;
                int v20 = v26;
                if (v7) {
                  BOOL v19 = v20;
                }
                if (!v19) {
                  break;
                }
                uint64_t result = sub_1B0D8D508(v6, v15, a3);
              }
              while (!*a3);
              char v16 = *(unsigned char *)(v14 + 48);
            }
          }
          *(void *)(v3 + 40) = *(void *)(v14 + 40);
          *(unsigned char *)(v3 + 48) = v16;
          return result;
        case 4:
          uint64_t v22 = *(void *)(a2 + 16);
          uint64_t v21 = *(void *)(a2 + 24);
          if (v7) {
            int v23 = -1;
          }
          else {
            int v23 = 1;
          }
          uint64_t v24 = *(void *)(v22 + 40);
          uint64_t v25 = *(void *)(v21 + 40);
          BOOL v26 = v24 <= v25;
          if (v24 == v25) {
            int v27 = 0;
          }
          else {
            int v27 = -1;
          }
          if (!v26) {
            int v27 = 1;
          }
          uint64_t v28 = *(void *)(a2 + 16);
          if (!*(unsigned char *)(v21 + 48))
          {
            int v29 = v27 * v23;
            if (*(unsigned char *)(v22 + 48) || (uint64_t v28 = *(void *)(v3 + 16), (v29 & 0x80000000) == 0))
            {
              BOOL v30 = !*(unsigned char *)(v22 + 48) && v29 <= 0;
              uint64_t v28 = *(void *)(v3 + 24);
              if (v30)
              {
                sub_1B0D8D508(result, *(void *)(v3 + 16), a3);
                uint64_t v28 = v21;
              }
            }
          }
          uint64_t result = sub_1B0D8D508(v6, v28, a3);
          char v31 = *(unsigned char *)(v22 + 48);
          if (v31) {
            char v31 = *(unsigned char *)(v21 + 48) != 0;
          }
          BOOL *v4 = v31;
          uint64_t v32 = *(void *)(v22 + 40);
          if (*(unsigned char *)(v21 + 48)) {
            goto LABEL_60;
          }
          uint64_t v33 = *(void *)(v21 + 40);
          if (v32 == v33) {
            int v34 = 0;
          }
          else {
            int v34 = -1;
          }
          if (v32 > v33) {
            int v34 = 1;
          }
          if (!*(unsigned char *)(v22 + 48) && v34 * v23 < 0) {
LABEL_60:
          }
            *(void *)(v3 + 40) = v32;
          else {
            *(void *)(v3 + 40) = v33;
          }
          return result;
        default:
          uint64_t v10 = *(void *)(a2 + 32);
          if (!*(_DWORD *)(v10 + 32)) {
            goto LABEL_15;
          }
          uint64_t v11 = *(void *)(v10 + 40);
          if (!v11) {
            goto LABEL_15;
          }
          uint64_t v12 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_14;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v11);
          --qword_1EB220150;
          uint64_t result = off_1EB21C9E8(v11);
          uint64_t v11 = xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            uint64_t v12 = &xmmword_1EB21CA50;
LABEL_14:
            uint64_t result = (*v12)(v11);
          }
LABEL_15:
          *(void *)(v10 + 40) = 0;
          *(_DWORD *)(v10 + 48) = 0;
          *(_DWORD *)(v10 + 32) = 0;
          uint64_t v101 = *(void *)v6;
          if (!*(_DWORD *)(v10 + 56))
          {
            uint64_t v36 = *(unsigned __int8 *)(*(void *)v6 + 463);
            if (v6[76] == v36 || (int v37 = *(_DWORD *)(v10 + 8)) == 0)
            {
              uint64_t result = sub_1B0D8E344(v101, v10, v4);
              int v13 = 0;
            }
            else
            {
              uint64_t result = sub_1B0D7EF2C(v36, *(char **)v10, v37, (char **)(v10 + 16), (void *)(v10 + 24), (int *)(v10 + 48), v4);
              int v13 = 0;
              *(void *)(v10 + 40) = *(void *)(v10 + 16);
            }
            goto LABEL_212;
          }
          unsigned __int8 v106 = 0;
          if (*(_DWORD *)(v10 + 80) == 1)
          {
            uint64_t result = sub_1B0D8E468(v101, *(void *)(v10 + 120), (void *)(v10 + 24), (void *)(v10 + 40), (_DWORD *)(v10 + 48));
            int v13 = result;
            BOOL *v4 = *(void *)(v10 + 40) == 0;
LABEL_212:
            *a3 = v13;
            *(void *)(v3 + 40) = *(void *)(v10 + 24);
            return result;
          }
          v98 = v4;
          uint64_t v99 = v3;
          uint64_t v38 = 0;
          int v13 = 0;
          int v100 = v6[76];
          memset(&v108[3], 0, 64);
          if (v100) {
            int v39 = -1;
          }
          else {
            int v39 = 1;
          }
          int v102 = v39;
          long long v107 = 0uLL;
          memset(v108, 0, 48);
          uint64_t v40 = v101;
LABEL_72:
          if (v13)
          {
            uint64_t v42 = 0;
            goto LABEL_100;
          }
          uint64_t v43 = 0;
          uint64_t v42 = 0;
          int v44 = 0;
          uint64_t v45 = 120;
          uint64_t v46 = (_DWORD *)v108 + 2;
          break;
      }
      while (1)
      {
        uint64_t v38 = v106;
        if (v43 >= *(int *)(v10 + 80) || v106 != 0)
        {
          int v13 = 0;
          goto LABEL_100;
        }
        if (v43 == *(_DWORD *)(v10 + 60)) {
          break;
        }
        uint64_t v49 = *(void *)(v10 + v45);
        if (v49)
        {
          uint64_t result = sub_1B0D8E468(v40, v49, (void *)v46 - 2, (void *)v46 - 1, v46);
          int v13 = result;
          if (!*((void *)v46 - 1)) {
            unsigned __int8 v106 = 1;
          }
          goto LABEL_87;
        }
        int v13 = 0;
        *(v46 - 6) = 1;
LABEL_76:
        ++v43;
        v46 += 8;
        v45 += 40;
        if (v13)
        {
          uint64_t v38 = v106;
LABEL_100:
          int v52 = *(_DWORD *)(v10 + 80);
          if (v52 < 1)
          {
            LOBYTE(v54) = v38;
LABEL_159:
            if (!(_BYTE)v54)
            {
              uint64_t v80 = *((int *)&v108[2 * v52 - 1] - 2);
              uint64_t result = sqlite3_initialize();
              if (result || (uint64_t result = sub_1B0C7FC94(v80 + 8)) == 0)
              {
                int v13 = 7;
                uint64_t v3 = v99;
                goto LABEL_212;
              }
              v81 = (unsigned __int8 *)result;
              uint64_t result = (uint64_t)memcpy((void *)result, *(const void **)&v108[2 * *(int *)(v10 + 80) - 2], (int)v80 + 1);
              *(void *)&v81[v80] = 0;
              int v82 = *(_DWORD *)(v10 + 80);
              if (v82 >= 2)
              {
                uint64_t v83 = 0;
                int v84 = 0;
                int v85 = -1;
                v86 = (unsigned __int8 **)v108;
                while (1)
                {
                  if (!*((_DWORD *)v86 - 4))
                  {
                    v87 = *v86;
                    v104 = v81;
                    v105 = v87;
                    v103 = v81;
                    uint64_t result = sub_1B0D8CB60(&v103, v82 + v85, 0, 1, &v105, &v104);
                    int v82 = *(_DWORD *)(v10 + 80);
                    if (!result)
                    {
LABEL_168:
                      uint64_t v40 = v101;
                      goto LABEL_170;
                    }
                    int v84 = v103 - v81;
                  }
                  ++v83;
                  v86 += 4;
                  --v85;
                  if (v83 >= v82 - 1) {
                    goto LABEL_168;
                  }
                }
              }
              LODWORD(v83) = 0;
              int v84 = 0;
LABEL_170:
              if (v83 != v82 - 1)
              {
                uint64_t v41 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
                if (!dword_1EB21C9C0) {
                  goto LABEL_71;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v81);
                --qword_1EB220150;
                uint64_t result = off_1EB21C9E8(v81);
                v81 = (unsigned __int8 *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v41 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_71:
                  uint64_t result = (*v41)(v81);
                  goto LABEL_72;
                }
                goto LABEL_72;
              }
              LOBYTE(v54) = 0;
              *(void *)(v10 + 24) = v42;
              *(void *)(v10 + 40) = v81;
              *(_DWORD *)(v10 + 48) = v84;
              *(_DWORD *)(v10 + 32) = 1;
            }
            uint64_t v3 = v99;
            BOOL *v98 = v54;
            goto LABEL_212;
          }
          int v53 = 0;
          uint64_t v54 = v38;
          LOBYTE(v55) = v38;
          char v56 = v38;
          int v57 = v102;
          while (2)
          {
            if (!v13 && !v56)
            {
              unint64_t v58 = (unint64_t)&v108[2 * v53 - 1];
              if (*(_DWORD *)v58) {
                goto LABEL_103;
              }
              uint64_t v59 = *(void *)(v58 + 8);
              BOOL v60 = v59 <= v42;
              if (v59 == v42) {
                int v61 = 0;
              }
              else {
                int v61 = -1;
              }
              if (!v60) {
                int v61 = 1;
              }
              if (((v61 * v57) & 0x80000000) == 0) {
                goto LABEL_103;
              }
              unint64_t v62 = (uint64_t *)(v58 | 8);
              if (*(_DWORD *)(v10 + 60) == v53)
              {
                uint64_t result = sub_1B0D8E344(v40, v10, &v106);
                int v57 = v102;
                int v13 = 0;
                size_t v63 = &v108[2 * v53 - 1];
                *((void *)v63 + 2) = *(void *)(v10 + 40);
                *((_DWORD *)v63 + 6) = *(_DWORD *)(v10 + 48);
                *unint64_t v62 = *(void *)(v10 + 24);
                uint64_t v38 = v106;
                uint64_t v54 = v106;
                LOBYTE(v55) = v106;
              }
              else
              {
                uint64_t v64 = *(void *)(v10 + 40 * v53 + 120);
                if (v64)
                {
                  uint64_t v65 = v40;
                  uint64_t v66 = v54;
                  uint64_t v67 = &v108[2 * v53 - 1];
                  uint64_t result = sub_1B0D8E468(v65, v64, (void *)(v58 | 8), (void *)v67 + 2, (_DWORD *)v67 + 6);
                  int v13 = result;
                  if (*((void *)v67 + 2))
                  {
                    int v57 = v102;
                    uint64_t v54 = v66;
                  }
                  else
                  {
                    uint64_t v38 = 1;
                    unsigned __int8 v106 = 1;
                    uint64_t v54 = 1;
                    LOBYTE(v55) = 1;
                    int v57 = v102;
                  }
                  uint64_t v40 = v101;
                }
                else
                {
                  int v13 = 0;
                  *(_DWORD *)unint64_t v58 = 1;
                }
              }
              if (*v62 == v42) {
                int v68 = 0;
              }
              else {
                int v68 = -1;
              }
              if (*v62 > v42) {
                int v68 = 1;
              }
              if (v68 * v57 > 0)
              {
                uint64_t v42 = *v62;
                int v53 = 0;
              }
              if (v13 || (_BYTE)v55)
              {
                char v56 = v55;
              }
              else
              {
                while (1)
                {
                  unint64_t v69 = (unint64_t)&v108[2 * v53 - 1];
                  if (*(_DWORD *)v69) {
                    break;
                  }
                  uint64_t v70 = *(void *)(v69 + 8);
                  BOOL v71 = v70 <= v42;
                  if (v70 == v42) {
                    int v72 = 0;
                  }
                  else {
                    int v72 = -1;
                  }
                  if (!v71) {
                    int v72 = 1;
                  }
                  if (((v72 * v57) & 0x80000000) == 0) {
                    break;
                  }
                  v73 = (uint64_t *)(v69 | 8);
                  if (*(_DWORD *)(v10 + 60) == v53)
                  {
                    uint64_t result = sub_1B0D8E344(v40, v10, &v106);
                    int v57 = v102;
                    int v13 = 0;
                    v74 = &v108[2 * v53 - 1];
                    *((void *)v74 + 2) = *(void *)(v10 + 40);
                    *((_DWORD *)v74 + 6) = *(_DWORD *)(v10 + 48);
                    uint64_t *v73 = *(void *)(v10 + 24);
                    uint64_t v38 = v106;
                    uint64_t v54 = v106;
                    int v55 = v106;
                  }
                  else
                  {
                    uint64_t v75 = *(void *)(v10 + 40 * v53 + 120);
                    if (v75)
                    {
                      uint64_t v76 = v40;
                      uint64_t v77 = v54;
                      v78 = &v108[2 * v53 - 1];
                      uint64_t result = sub_1B0D8E468(v76, v75, (void *)(v69 | 8), (void *)v78 + 2, (_DWORD *)v78 + 6);
                      int v13 = result;
                      if (*((void *)v78 + 2))
                      {
                        int v55 = 0;
                        int v57 = v102;
                        uint64_t v54 = v77;
                      }
                      else
                      {
                        uint64_t v38 = 1;
                        unsigned __int8 v106 = 1;
                        uint64_t v54 = 1;
                        int v55 = 1;
                        int v57 = v102;
                      }
                      uint64_t v40 = v101;
                    }
                    else
                    {
                      int v55 = 0;
                      int v13 = 0;
                      *(_DWORD *)unint64_t v69 = 1;
                    }
                  }
                  if (*v73 == v42) {
                    int v79 = 0;
                  }
                  else {
                    int v79 = -1;
                  }
                  if (*v73 > v42) {
                    int v79 = 1;
                  }
                  if (v79 * v57 > 0)
                  {
                    uint64_t v42 = *v73;
                    int v53 = 0;
                  }
                  char v56 = v55;
                  if (v13 || v55) {
                    goto LABEL_104;
                  }
                }
                LOBYTE(v55) = 0;
LABEL_103:
                char v56 = 0;
                int v13 = 0;
              }
LABEL_104:
              int v52 = *(_DWORD *)(v10 + 80);
            }
            if (++v53 >= v52) {
              goto LABEL_159;
            }
            continue;
          }
        }
      }
      uint64_t result = sub_1B0D8E344(v40, v10, &v106);
      int v13 = 0;
      uint64_t v48 = *(void *)(v10 + 40);
      *uint64_t v46 = *(_DWORD *)(v10 + 48);
      *((void *)v46 - 2) = *(void *)(v10 + 24);
      *((void *)v46 - 1) = v48;
LABEL_87:
      if (!*(v46 - 6))
      {
        uint64_t v50 = *((void *)v46 - 2);
        if (!v44) {
          goto LABEL_98;
        }
        if (v42 == v50) {
          int v51 = 0;
        }
        else {
          int v51 = -1;
        }
        if (v42 > v50) {
          int v51 = 1;
        }
        if (v100) {
          int v51 = -v51;
        }
        if (v51 < 0)
        {
LABEL_98:
          int v44 = 1;
          uint64_t v42 = *((void *)v46 - 2);
        }
        else
        {
          int v44 = 1;
        }
      }
      goto LABEL_76;
    }
  }
  return result;
}

BOOL sub_1B0D8DFB8(uint64_t a1, int *a2)
{
  int v2 = *a2;
  int v41 = v2;
  if (v2)
  {
    BOOL v3 = 0;
    return !v2 && v3;
  }
  if (*(void *)(a1 + 40))
  {
    int v41 = sub_1B0D8E810(0, a1);
    if (!v41)
    {
      int v45 = 0;
      if (!*(void *)(a1 + 40)) {
        goto LABEL_50;
      }
      uint64_t v6 = *(void *)a1;
      int v7 = *(void **)(*(void *)a1 + 72);
      uint64_t v8 = *v7;
      sqlite3_int64 v9 = sqlite3_column_int64(*(sqlite3_stmt **)(a1 + 16), 0);
      int v10 = *(_DWORD *)(v6 + 48);
      if (v10 >= 1)
      {
        unint64_t v11 = v9;
        int64_t v12 = 0;
        int v39 = v7;
        do
        {
          while (*(unsigned char *)(*(void *)(v6 + 64) + v12))
          {
            if (++v12 >= v10) {
              goto LABEL_49;
            }
          }
          int64_t v40 = v12 + 1;
          int v13 = sqlite3_column_text(*(sqlite3_stmt **)(a1 + 16), (int)v12 + 1);
          uint64_t v14 = *(unsigned int *)(a1 + 32);
          uint64_t v15 = *v7;
          __s1 = 0;
          int v16 = (*(uint64_t (**)(void *, const unsigned __int8 *, uint64_t, void **))(v15 + 24))(v7, v13, 0xFFFFFFFFLL, &__s1);
          uint64_t v17 = v7;
          uint64_t v18 = __s1;
          if (v16)
          {
            int v19 = v16;
            int v45 = v16;
          }
          else
          {
            *(void *)__s1 = v17;
            uint64_t v18 = __s1;
            if (*(int *)v15 >= 1
              && (v20 = (*(uint64_t (**)(void *, uint64_t))(v15 + 48))(__s1, v14), uint64_t v18 = __s1, v20))
            {
              int v19 = v20;
              (*(void (**)(void *))(v15 + 32))(__s1);
              uint64_t v18 = 0;
              int v45 = v19;
            }
            else
            {
              do
              {
                __s1 = 0;
                int v44 = 0;
                uint64_t v43 = 0;
                int v42 = 0;
                int v21 = (*(uint64_t (**)(void *, void **, int *, char *, uint64_t *, int *))(v8 + 40))(v18, &__s1, &v44, (char *)&v43 + 4, &v43, &v42);
                int v19 = v21;
                int v45 = v21;
                uint64_t v22 = *(int ***)(a1 + 40);
                if (v22) {
                  BOOL v23 = v21 == 0;
                }
                else {
                  BOOL v23 = 0;
                }
                if (v23)
                {
                  int v19 = 0;
                  do
                  {
                    uint64_t v24 = *((unsigned int *)v22 + 2);
                    BOOL v25 = v12 != v24 && (int)v24 < *(_DWORD *)(v6 + 48);
                    if (!v25
                      && ((v26 = *v22, int v27 = v42, (*v22)[4]) ? (v28 = v42 == 0) : (v28 = 1),
                          v28
                       && ((size_t v29 = v26[2], v29 == v44) || ((int)v29 < v44 ? (v30 = v26[3] == 0) : (v30 = 1), !v30)))
                      && !memcmp(__s1, *(const void **)v26, v29))
                    {
                      sub_1B0D8F61C(v22 + 3, v11, v12, v27, &v45);
                      int v19 = v45;
                      int v31 = v45;
                    }
                    else
                    {
                      int v31 = 0;
                    }
                    uint64_t v22 = (int **)v22[2];
                    if (v22) {
                      BOOL v32 = v31 == 0;
                    }
                    else {
                      BOOL v32 = 0;
                    }
                  }
                  while (v32);
                }
              }
              while (!v19);
            }
          }
          if (v18) {
            (*(void (**)(void *))(v8 + 32))(v18);
          }
          if (v19 != 101) {
            goto LABEL_51;
          }
          int v45 = 0;
          int v10 = *(_DWORD *)(v6 + 48);
          int v7 = v39;
          ++v12;
        }
        while (v40 < v10);
      }
LABEL_49:
      uint64_t v33 = *(void *)(a1 + 40);
      if (v33)
      {
        do
        {
          if (*(void *)(v33 + 24)) {
            int v19 = sub_1B0D8F740((int **)(v33 + 24), 0);
          }
          else {
            int v19 = 0;
          }
          uint64_t v33 = *(void *)(v33 + 16);
          if (v33) {
            BOOL v37 = v19 == 0;
          }
          else {
            BOOL v37 = 0;
          }
        }
        while (v37);
      }
      else
      {
LABEL_50:
        int v19 = 0;
      }
LABEL_51:
      int v41 = v19;
    }
  }
  BOOL v3 = sub_1B0D8E9C0(a1, *(void *)(a1 + 24), &v41) == 0;
  for (uint64_t i = *(void *)(a1 + 40); i; uint64_t i = *(void *)(i + 16))
  {
    uint64_t v35 = *(void *)(i + 24);
    if (v35)
    {
      uint64_t v36 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v35);
        --qword_1EB220150;
        off_1EB21C9E8(v35);
        uint64_t v35 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_55;
        }
        uint64_t v36 = &xmmword_1EB21CA50;
      }
      (*v36)(v35);
    }
LABEL_55:
    *(void *)(i + 24) = 0;
  }
  int v2 = v41;
  *a2 = v41;
  return !v2 && v3;
}

uint64_t sub_1B0D8E344(uint64_t result, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = result;
  uint64_t v6 = *(char **)(a2 + 16);
  int v7 = *(char **)a2;
  if ((v6 || (uint64_t v6 = *(char **)a2, v7)) && (v8 = *(int *)(a2 + 8), v6 < &v7[v8]))
  {
    unint64_t v17 = 0;
    uint64_t result = sub_1B0D7D81C(v6, &v17);
    sqlite3_int64 v9 = &v6[(int)result];
    if (*(unsigned char *)(v5 + 463) && *(void *)(a2 + 16)) {
      uint64_t v10 = *(void *)(a2 + 24) - v17;
    }
    else {
      uint64_t v10 = *(void *)(a2 + 24) + v17;
    }
    *(void *)(a2 + 24) = v10;
    *(void *)(a2 + 40) = v9;
    int v11 = *v9;
    unint64_t v12 = (unint64_t)&v6[(int)result];
    if (*v9)
    {
      unint64_t v12 = (unint64_t)&v6[(int)result];
      do
      {
        unsigned int v13 = v11 & 0xFFFFFF80;
        int v14 = *(char *)++v12;
        int v11 = v14;
      }
      while (v13 | v14);
    }
    uint64_t v15 = (char *)(v12 + 1);
    *(_DWORD *)(a2 + 48) = v12 + 1 - v9;
    if (v12 + 1 < (unint64_t)&v7[v8])
    {
      int v16 = &v7[v8 + ~v12];
      while (!*v15)
      {
        ++v15;
        if (!--v16)
        {
          uint64_t v15 = &v7[v8];
          break;
        }
      }
    }
    *(void *)(a2 + 16) = v15;
    *a3 = 0;
  }
  else
  {
    *a3 = 1;
  }
  return result;
}

uint64_t sub_1B0D8E468(uint64_t a1, uint64_t a2, void *a3, void *a4, _DWORD *a5)
{
  uint64_t v5 = *(int *)(a2 + 12);
  if (*(unsigned char *)(a1 + 463)) {
    uint64_t v6 = sub_1B0D7EBBC;
  }
  else {
    uint64_t v6 = sub_1B0D7EC14;
  }
  if (!v5)
  {
    uint64_t result = 0;
    *a4 = 0;
    return result;
  }
  int v7 = *(uint64_t **)a2;
  if (!*(void *)(**(void **)a2 + 112))
  {
LABEL_63:
    uint64_t result = 0;
    *a4 = 0;
    return result;
  }
  uint64_t v8 = a1;
  while (1)
  {
    uint64_t v47 = 0;
    unsigned int v46 = 0;
    uint64_t v9 = *(void *)(*v7 + 128);
    uint64_t result = sub_1B0D7ED34(v8, *v7, &v47, &v46);
    BOOL v11 = result || (int)v5 < 2;
    uint64_t v45 = v9;
    if (v11)
    {
      if (result) {
        return result;
      }
      LODWORD(v12) = 1;
    }
    else
    {
      uint64_t v12 = 1;
      while (1)
      {
        uint64_t v13 = v7[v12];
        if (!*(void *)(v13 + 112) || *(void *)(v13 + 128) != v9) {
          break;
        }
        uint64_t result = sub_1B0D7ED34(v8, v13, 0, 0);
        ++v12;
        if (result) {
          BOOL v14 = 0;
        }
        else {
          BOOL v14 = v12 < v5;
        }
        if (!v14)
        {
          if (result) {
            return result;
          }
          break;
        }
      }
    }
    uint64_t v15 = v12 - (v12 == v5);
    if ((int)v15 >= 1)
    {
      int v16 = *(uint64_t **)a2;
      uint64_t v17 = *(void *)a2 + 8 * v15 - 8;
      do
      {
        int v18 = v15--;
        if ((int)v5 > v18)
        {
          uint64_t v19 = v16[v15];
          int v20 = (int8x16_t *)v17;
          uint64_t v21 = v15;
          do
          {
            if ((v6(v19, v20->i64[1]) & 0x80000000) != 0) {
              break;
            }
            ++v21;
            int8x16_t v22 = *v20;
            int8x16_t *v20 = vextq_s8(*v20, *v20, 8uLL);
            int v20 = (int8x16_t *)((char *)v20 + 8);
            uint64_t v19 = v22.i64[0];
          }
          while (v21 < v5 - 1);
        }
        v17 -= 8;
      }
      while (v18 > 1);
    }
    uint64_t v23 = v46;
    if ((int)v46 >= 1)
    {
      if (*(void *)(*v7 + 64)) {
        break;
      }
    }
LABEL_37:
    int v30 = *(_DWORD *)(a2 + 40);
    if ((v30 & 0x80000000) == 0)
    {
      int v31 = 0;
      BOOL v32 = (unsigned __int8 *)v47;
      uint64_t v33 = &v47[(int)v23];
      int v34 = v47;
      while (1)
      {
        uint64_t v35 = (char *)v32;
        if (v34 < v33)
        {
          int v36 = 0;
          int64_t v37 = v33 - v34;
          while (1)
          {
            char v38 = *v34;
            if (!(*v34 & 0xFE | v36)) {
              break;
            }
            ++v34;
            int v36 = v38 & 0x80;
            if (!--v37)
            {
              BOOL v32 = (unsigned __int8 *)v33;
              if (v31 != v30) {
                goto LABEL_47;
              }
              goto LABEL_56;
            }
          }
        }
        BOOL v32 = (unsigned __int8 *)v34;
        if (v31 == v30)
        {
LABEL_56:
          LODWORD(v23) = v32 - v35;
          goto LABEL_58;
        }
LABEL_47:
        LODWORD(v23) = v23 + v35 - v32;
        if ((int)v23 < 1) {
          break;
        }
        int v31 = v32[1];
        if ((char)v32[1] < 0)
        {
          int v31 = v31 & 0x7F | (v32[2] << 7);
          if ((char)v32[2] < 0)
          {
            int v31 = v31 & 0x3FFF | (v32[3] << 14);
            if ((char)v32[3] < 0)
            {
              int v31 = v31 & 0x1FFFFF | (v32[4] << 21);
              if ((char)v32[4] < 0)
              {
                int v31 = v31 & 0xFFFFFFF | ((v32[5] & 7) << 28);
                int v34 = (char *)(v32 + 6);
              }
              else
              {
                int v34 = (char *)(v32 + 5);
              }
            }
            else
            {
              int v34 = (char *)(v32 + 4);
            }
          }
          else
          {
            int v34 = (char *)(v32 + 3);
          }
        }
        else
        {
          int v34 = (char *)(v32 + 2);
        }
      }
      uint64_t v35 = (char *)v32;
LABEL_58:
      int v39 = &v35[(int)v23];
      if (v33 - v39 >= 1) {
        bzero(v39, v33 - v39);
      }
      uint64_t v47 = v35;
    }
    if ((int)v23 >= 1)
    {
      uint64_t result = 0;
      *a4 = v47;
      *a3 = v45;
      *a5 = v23;
      return result;
    }
    uint64_t v8 = a1;
    if (!*(void *)(**(void **)a2 + 112)) {
      goto LABEL_63;
    }
  }
  uint64_t v24 = v47;
  uint64_t v25 = v46 + 1;
  if (v46 + 21 <= *(void *)(a2 + 32))
  {
    BOOL v28 = *(void **)(a2 + 24);
    goto LABEL_36;
  }
  uint64_t v26 = *(void *)(a2 + 24);
  if (!sqlite3_initialize())
  {
    uint64_t v27 = 2 * (int)v25 + 20;
    BOOL v28 = (void *)sub_1B0C8E1B8(v26, v27);
    if (v28)
    {
      *(void *)(a2 + 24) = v28;
      *(void *)(a2 + 32) = v27;
LABEL_36:
      memcpy(v28, v24, v23 + 1);
      uint64_t v29 = *(void *)(a2 + 24) + v25;
      *(_DWORD *)(v29 + 16) = 0;
      *(void *)uint64_t v29 = 0;
      *(void *)(v29 + 8) = 0;
      uint64_t v47 = *(char **)(a2 + 24);
      goto LABEL_37;
    }
  }
  return 7;
}

uint64_t sub_1B0D8E810(_DWORD *a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 11)) {
    return 0;
  }
  uint64_t v4 = sub_1B0D89304((uint64_t *)a2);
  if (v4)
  {
LABEL_3:
    if (a1)
    {
      a1[9] = v4;
      if (*(_WORD *)(*(void *)a1 + 20))
      {
        switch(v4)
        {
          case 0x204:
            uint64_t v5 = "abort due to ROLLBACK";
            break;
          case 0x65:
            uint64_t v5 = "no more rows available";
            break;
          case 0x64:
            uint64_t v5 = "another row available";
            break;
          default:
            if v4 > 0x1Cu || ((0x1410004uLL >> v4)) {
              uint64_t v5 = "unknown error";
            }
            else {
              uint64_t v5 = off_1E5FF0368[v4];
            }
            break;
        }
        sub_1B0CEA530((uint64_t)a1, v5, -1, 1u, 0);
      }
    }
    return v4;
  }
  uint64_t v6 = *(void *)a2;
  ++*(_DWORD *)(*(void *)a2 + 104);
  int v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 48);
  if (!sub_1B0CC3F2C((uint64_t)v7, 0))
  {
    uint64_t v9 = v7[16];
    if ((*(_WORD *)(v9 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v9, v8);
    }
    else
    {
      *(void *)uint64_t v9 = v8;
      *(_WORD *)(v9 + 20) = 4;
    }
    uint64_t v10 = *(void *)(*v7 + 24);
    if (v10) {
      xmmword_1EB21CA50(v10);
    }
  }
  *(unsigned char *)(a2 + 11) = 0;
  int v11 = sqlite3_step(*(sqlite3_stmt **)(a2 + 16));
  uint64_t v4 = 0;
  --*(_DWORD *)(v6 + 104);
  if (v11 != 100)
  {
    uint64_t v4 = sqlite3_reset(*(sqlite3_stmt **)(a2 + 16));
    if (v4) {
      goto LABEL_3;
    }
    if (!*(void *)(*(void *)a2 + 80))
    {
      *(unsigned char *)(a2 + 10) = 1;
      uint64_t v4 = 267;
      goto LABEL_3;
    }
    return 0;
  }
  return v4;
}

uint64_t sub_1B0D8E9C0(uint64_t a1, uint64_t a2, int *a3)
{
  if (*a3) {
    return 1;
  }
  uint64_t v5 = a2;
  switch(*(_DWORD *)a2)
  {
    case 1:
    case 3:
      if (!sub_1B0D8E9C0(a1, *(void *)(a2 + 16), a3)
        || !sub_1B0D8E9C0(a1, *(void *)(v5 + 24), a3))
      {
        goto LABEL_88;
      }
      if (*a3) {
        return 1;
      }
      if (*(_DWORD *)v5 != 1) {
        return 1;
      }
      int v7 = *(_DWORD **)(v5 + 8);
      if (v7)
      {
        if (*v7 == 1) {
          return 1;
        }
      }
      uint64_t v8 = *(void *)(v5 + 16);
      if (v8)
      {
        uint64_t v9 = 0;
        uint64_t v10 = v5;
        do
        {
          uint64_t v11 = v8;
          v9 += *(int *)(*(void *)(*(void *)(v10 + 24) + 32) + 48);
          uint64_t v8 = *(void *)(v8 + 16);
          uint64_t v10 = v11;
        }
        while (v8);
      }
      else
      {
        uint64_t v9 = 0;
        uint64_t v11 = v5;
      }
      uint64_t v43 = *(int *)(*(void *)(v11 + 32) + 48);
      if (sqlite3_initialize() || (uint64_t v50 = sub_1B0C7FC94(2 * (v9 + v43))) == 0)
      {
        *a3 = 7;
        goto LABEL_88;
      }
      int v51 = (char *)v50;
      uint64_t v52 = *(void *)(v11 + 32);
      int v79 = *(unsigned __int8 **)(v52 + 40);
      LODWORD(v78) = *(_DWORD *)(v52 + 80);
      uint64_t v53 = *(void *)(v11 + 8);
      if (!v53) {
        goto LABEL_132;
      }
      while (*(_DWORD *)v53 == 1)
      {
        int v54 = sub_1B0D8F8EC(*(_DWORD *)(v53 + 4), v51, &v79, &v78, *(void *)(*(void *)(v53 + 24) + 32));
        uint64_t v53 = *(void *)(v53 + 8);
        if (v54) {
          BOOL v55 = v53 == 0;
        }
        else {
          BOOL v55 = 1;
        }
        if (v55)
        {
          int v56 = v54;
          goto LABEL_133;
        }
      }
LABEL_132:
      int v56 = 1;
LABEL_133:
      uint64_t v60 = *(void *)(*(void *)(v5 + 24) + 32);
      int v79 = *(unsigned __int8 **)(v60 + 40);
      LODWORD(v78) = *(_DWORD *)(v60 + 80);
      if (v56)
      {
        uint64_t v61 = *(void *)(v5 + 16);
        if (v61)
        {
          do
          {
            uint64_t v64 = v61;
            if (*(_DWORD *)v61 == 1) {
              uint64_t v64 = *(void *)(v61 + 24);
            }
            int v62 = sub_1B0D8F8EC(*(_DWORD *)(*(void *)(v61 + 8) + 4), v51, &v79, &v78, *(void *)(v64 + 32));
            uint64_t v61 = *(void *)(v61 + 16);
            if (v61) {
              BOOL v63 = v62 == 0;
            }
            else {
              BOOL v63 = 1;
            }
          }
          while (!v63);
          int v56 = v62;
        }
      }
      BOOL v71 = (void (**)(char *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_163;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v51);
      --qword_1EB220150;
      off_1EB21C9E8(v51);
      int v51 = (char *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        BOOL v71 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_163:
        (*v71)(v51);
      }
      if (v56) {
        return 1;
      }
LABEL_88:
      if (*(_DWORD *)v5 != 1) {
        return 0;
      }
      int v44 = *(_DWORD **)(v5 + 8);
      if (v44)
      {
        if (*v44 == 1) {
          return 0;
        }
      }
      uint64_t v45 = *(void *)(v5 + 32);
      if (v45)
      {
LABEL_92:
        if (*(void *)(v5 + 40) != *(void *)(a1 + 48)) {
          return 0;
        }
        sub_1B0D89240(v45);
        return 0;
      }
      while (1)
      {
        uint64_t v46 = *(void *)(v5 + 24);
        if (*(void *)(v46 + 40) != *(void *)(a1 + 48)) {
          goto LABEL_98;
        }
        uint64_t v47 = *(void *)(v46 + 32);
        if (*(_DWORD *)(v47 + 32))
        {
          uint64_t v48 = *(void *)(v47 + 40);
          if (v48)
          {
            uint64_t v49 = &off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v48);
              --qword_1EB220150;
              off_1EB21C9E8(v48);
              uint64_t v48 = xmmword_1EB2201B0;
              if (!(void)xmmword_1EB2201B0) {
                goto LABEL_97;
              }
              uint64_t v49 = &xmmword_1EB21CA50;
            }
            (*v49)(v48);
          }
        }
LABEL_97:
        *(void *)(v47 + 40) = 0;
        *(_DWORD *)(v47 + 48) = 0;
        *(_DWORD *)(v47 + 32) = 0;
LABEL_98:
        uint64_t v5 = *(void *)(v5 + 16);
        uint64_t v45 = *(void *)(v5 + 32);
        if (v45) {
          goto LABEL_92;
        }
      }
    case 2:
      uint64_t result = sub_1B0D8E9C0(a1, *(void *)(a2 + 16), a3);
      if (result) {
        return sub_1B0D8E9C0(a1, *(void *)(v5 + 24), a3) == 0;
      }
      return result;
    case 4:
      int v22 = sub_1B0D8E9C0(a1, *(void *)(a2 + 16), a3);
      return (v22 | sub_1B0D8E9C0(a1, *(void *)(v5 + 24), a3)) != 0;
    default:
      if (!*(void *)(a1 + 40)) {
        return !*(unsigned char *)(a2 + 48)
      }
            && *(void *)(a2 + 40) == *(void *)(a1 + 48)
            && *(_DWORD *)(*(void *)(a2 + 32) + 48) > 0;
      if (*(unsigned char *)(a2 + 50))
      {
        uint64_t v12 = *(void *)(a2 + 32);
        if (*(_DWORD *)(v12 + 32))
        {
          uint64_t v13 = *(void *)(v12 + 40);
          if (v13)
          {
            BOOL v14 = &off_1EB21C9E8;
            uint64_t v15 = *(void *)(a2 + 32);
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
              --qword_1EB220150;
              off_1EB21C9E8(v13);
              uint64_t v13 = xmmword_1EB2201B0;
              uint64_t v12 = v15;
              if (!(void)xmmword_1EB2201B0) {
                goto LABEL_25;
              }
              BOOL v14 = &xmmword_1EB21CA50;
            }
            (*v14)(v13);
            uint64_t v12 = v15;
          }
        }
LABEL_25:
        uint64_t v16 = 0;
        *(void *)(v12 + 40) = 0;
        *(_DWORD *)(v12 + 48) = 0;
        *(_DWORD *)(v12 + 32) = 0;
LABEL_26:
        uint64_t v76 = v12;
        if (*(int *)(v12 + 80) < 1) {
          goto LABEL_122;
        }
        uint64_t v75 = v16;
        uint64_t v17 = 0;
        LODWORD(v18) = 0;
        uint64_t v19 = 0;
        int v20 = (uint64_t *)(v12 + 112);
        unsigned int v21 = -1;
        while (1)
        {
          uint64_t v23 = *v20;
          if (!*v20) {
            goto LABEL_34;
          }
          uint64_t v24 = *(int **)(v23 + 24);
          if (!v24)
          {
            uint64_t v40 = v75;
            if (v19)
            {
              int v41 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_76;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
              --qword_1EB220150;
              off_1EB21C9E8(v19);
              uint64_t v19 = (unsigned __int8 *)xmmword_1EB2201B0;
              uint64_t v12 = v76;
              if ((void)xmmword_1EB2201B0)
              {
                int v41 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_76:
                (*v41)(v19);
                uint64_t v12 = v76;
              }
            }
            if (v75)
            {
              int v42 = &off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_83;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v75);
              --qword_1EB220150;
              off_1EB21C9E8(v75);
              uint64_t v40 = xmmword_1EB2201B0;
              uint64_t v12 = v76;
              if ((void)xmmword_1EB2201B0)
              {
                int v42 = &xmmword_1EB21CA50;
LABEL_83:
                (*v42)(v40);
                uint64_t v12 = v76;
              }
            }
            int v39 = 0;
LABEL_155:
            *(void *)(v12 + 40) = 0;
            *(_DWORD *)(v12 + 48) = 0;
LABEL_156:
            *a3 = v39;
            uint64_t result = *(void *)(v12 + 40) != 0;
            *(void *)(v5 + 40) = *(void *)(a1 + 48);
            return result;
          }
          uint64_t v25 = *v24;
          if (sqlite3_initialize()) {
            goto LABEL_69;
          }
          uint64_t v26 = sub_1B0C7FC94(v25);
          if (!v26) {
            goto LABEL_69;
          }
          uint64_t v27 = (void *)v26;
          int v28 = sub_1B0D7D81C(*(char **)(*(void *)(v23 + 24) + 8), (unint64_t *)&v79);
          uint64_t v29 = *(int **)(v23 + 24);
          size_t v18 = *v29 - (uint64_t)v28;
          memcpy(v27, (const void *)(*((void *)v29 + 1) + v28), v18);
          if (v19) {
            break;
          }
LABEL_33:
          uint64_t v19 = (unsigned __int8 *)v27;
          unsigned int v21 = v17;
          uint64_t v12 = v76;
LABEL_34:
          ++v17;
          v20 += 5;
          if (v17 >= *(int *)(v12 + 80))
          {
            uint64_t v16 = v75;
            if ((v21 & 0x80000000) != 0) {
              goto LABEL_122;
            }
            unsigned int v31 = *(_DWORD *)(v12 + 60);
            if ((v31 & 0x80000000) != 0)
            {
              *(void *)(v12 + 40) = v19;
              *(_DWORD *)(v12 + 48) = v18;
              *(void *)(v12 + 24) = *(void *)(a1 + 48);
              *(_DWORD *)(v12 + 32) = 1;
              goto LABEL_122;
            }
            BOOL v32 = *(unsigned __int8 **)(v12 + 40);
            int v33 = v21 - v31;
            BOOL v34 = v31 >= v21;
            int v35 = v31 - v21;
            if (v35 != 0 && v34) {
              int v36 = v19;
            }
            else {
              int v36 = v32;
            }
            if (v35 != 0 && v34)
            {
              int v37 = v35;
            }
            else
            {
              BOOL v32 = v19;
              int v37 = v33;
            }
            v78 = v32;
            int v79 = v36;
            if (!sqlite3_initialize())
            {
              int v65 = v18 + 8;
              size_t v66 = (int)v18 + 8;
              uint64_t v67 = (unsigned char *)sub_1B0C7FC94(v65);
              if (v67)
              {
                int v68 = v67;
                bzero(v67, v66);
                uint64_t v77 = v68;
                *(void *)(v76 + 40) = v68;
                if (sub_1B0D8CB60(&v77, v37, 0, 1, &v79, &v78))
                {
                  *(_DWORD *)(v76 + 32) = 1;
                  int v69 = v77 - *(_DWORD *)(v76 + 40);
                  uint64_t v12 = v76;
                  goto LABEL_174;
                }
                int v72 = v77;
                if (v77)
                {
                  v73 = &off_1EB21C9E8;
                  if (!dword_1EB21C9C0) {
                    goto LABEL_172;
                  }
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v72);
                  --qword_1EB220150;
                  off_1EB21C9E8(v72);
                  int v72 = (unsigned char *)xmmword_1EB2201B0;
                  if ((void)xmmword_1EB2201B0)
                  {
                    v73 = &xmmword_1EB21CA50;
LABEL_172:
                    (*v73)(v72);
                  }
                }
                int v69 = 0;
                uint64_t v12 = v76;
                *(void *)(v76 + 40) = 0;
LABEL_174:
                *(_DWORD *)(v12 + 48) = v69;
                if (v19)
                {
                  v74 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
                  if (!dword_1EB21C9C0) {
                    goto LABEL_180;
                  }
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
                  --qword_1EB220150;
                  off_1EB21C9E8(v19);
                  uint64_t v19 = (unsigned __int8 *)xmmword_1EB2201B0;
                  uint64_t v12 = v76;
                  if ((void)xmmword_1EB2201B0)
                  {
                    v74 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_180:
                    (*v74)(v19);
                    uint64_t v12 = v76;
                  }
                }
LABEL_122:
                int v39 = 0;
                if (!v16 || *(void *)(v12 + 40) == v16) {
                  goto LABEL_156;
                }
                uint64_t v59 = &off_1EB21C9E8;
                if (dword_1EB21C9C0)
                {
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v16);
                  --qword_1EB220150;
                  off_1EB21C9E8(v16);
                  uint64_t v16 = xmmword_1EB2201B0;
                  if ((void)xmmword_1EB2201B0)
                  {
                    uint64_t v59 = &xmmword_1EB21CA50;
                    goto LABEL_129;
                  }
                }
                else
                {
LABEL_129:
                  (*v59)(v16);
                }
                int v39 = 0;
LABEL_131:
                uint64_t v12 = v76;
                goto LABEL_156;
              }
            }
            if (v19)
            {
              char v38 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_68;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
              --qword_1EB220150;
              off_1EB21C9E8(v19);
              uint64_t v19 = (unsigned __int8 *)xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                char v38 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_68:
                (*v38)(v19);
              }
            }
LABEL_69:
            int v39 = 7;
            goto LABEL_131;
          }
        }
        v78 = v19;
        int v79 = (unsigned __int8 *)v27;
        uint64_t v77 = v27;
        sub_1B0D8CB60(&v79, v17 - v21, 0, 1, &v78, &v77);
        int v30 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
          --qword_1EB220150;
          off_1EB21C9E8(v19);
          uint64_t v19 = (unsigned __int8 *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0)
          {
LABEL_32:
            LODWORD(v18) = v79 - v27;
            if (v79 == v27)
            {
              int v57 = (void (**)(void *))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                uint64_t v58 = v75;
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v27);
                --qword_1EB220150;
                off_1EB21C9E8(v27);
                uint64_t v27 = (void *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  int v57 = (void (**)(void *))&xmmword_1EB21CA50;
                  goto LABEL_146;
                }
              }
              else
              {
                uint64_t v58 = v75;
LABEL_146:
                (*v57)(v27);
              }
              if (v58)
              {
                uint64_t v70 = &off_1EB21C9E8;
                if (!dword_1EB21C9C0) {
                  goto LABEL_153;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v58);
                --qword_1EB220150;
                off_1EB21C9E8(v58);
                uint64_t v58 = xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v70 = &xmmword_1EB21CA50;
LABEL_153:
                  (*v70)(v58);
                }
              }
              int v39 = 0;
              uint64_t v12 = v76;
              goto LABEL_155;
            }
            goto LABEL_33;
          }
          int v30 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
        }
        (*v30)(v19);
        goto LABEL_32;
      }
      if (*(void *)(a2 + 40) == *(void *)(a1 + 48))
      {
        uint64_t v12 = *(void *)(a2 + 32);
        if (*(void *)(v12 + 40))
        {
          if (*(_DWORD *)(v12 + 32)) {
            uint64_t v16 = *(void *)(v12 + 40);
          }
          else {
            uint64_t v16 = 0;
          }
          goto LABEL_26;
        }
      }
      return !*(unsigned char *)(a2 + 48)
          && *(void *)(a2 + 40) == *(void *)(a1 + 48)
          && *(_DWORD *)(*(void *)(a2 + 32) + 48) > 0;
  }
}

uint64_t sub_1B0D8F61C(int **a1, unint64_t a2, int64_t a3, uint64_t a4, _DWORD *a5)
{
  unint64_t v8 = a2;
  uint64_t v10 = *a1;
  BOOL v14 = v10;
  if (v10)
  {
    uint64_t v11 = *((void *)v10 + 3);
    a2 -= v11;
    if (v8 == v11) {
      goto LABEL_6;
    }
    ++*v10;
  }
  int v12 = sub_1B0D8F740(&v14, a2);
  uint64_t v10 = v14;
  if (v12) {
    goto LABEL_15;
  }
  *((_OWORD *)v14 + 2) = xmmword_1B0DE1670;
  *((void *)v10 + 3) = v8;
LABEL_6:
  if (a3 < 1)
  {
    if (a3 < 0)
    {
      int v12 = 0;
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  if (*((void *)v10 + 4) == a3)
  {
LABEL_11:
    int v12 = sub_1B0D8F740(&v14, a4 - *((void *)v10 + 5) + 2);
    uint64_t v10 = v14;
    if (!v12) {
      *((void *)v14 + 5) = a4;
    }
    goto LABEL_15;
  }
  int v12 = sub_1B0D8F740(&v14, 1uLL);
  if (v12)
  {
    uint64_t v10 = v14;
    goto LABEL_15;
  }
  int v12 = sub_1B0D8F740(&v14, a3);
  uint64_t v10 = v14;
  if (!v12)
  {
    *((void *)v14 + 4) = a3;
    *((void *)v10 + 5) = 0;
    goto LABEL_11;
  }
LABEL_15:
  *a5 = v12;
  if (v10 == *a1) {
    return 0;
  }
  *a1 = v10;
  return 1;
}

uint64_t sub_1B0D8F740(int **a1, unint64_t a2)
{
  uint64_t v4 = *a1;
  if (!*a1)
  {
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v10 = sub_1B0C7FC94(148);
    if (!v10) {
      return 7;
    }
    uint64_t v4 = (int *)v10;
    int v5 = 0;
    *(_DWORD *)(v10 + 16) = 100;
    uint64_t v9 = v10 + 48;
    *(void *)(v10 + 8) = v10 + 48;
    *(_DWORD *)uint64_t v10 = 0;
    goto LABEL_19;
  }
  int v5 = *v4;
  uint64_t v6 = v4[4];
  if (*v4 + 11 <= (int)v6)
  {
    uint64_t v9 = *((void *)v4 + 1);
    goto LABEL_19;
  }
  if (!sqlite3_initialize())
  {
    uint64_t v11 = 2 * v6;
    uint64_t v12 = sub_1B0C8E1B8((uint64_t)v4, v11 + 48);
    if (v12)
    {
      uint64_t v4 = (int *)v12;
      *(_DWORD *)(v12 + 16) = v11;
      uint64_t v9 = v12 + 48;
      *(void *)(v12 + 8) = v12 + 48;
      int v5 = *(_DWORD *)v12;
LABEL_19:
      uint64_t v13 = 0;
      uint64_t v14 = v9 + v5;
      do
      {
        char v15 = a2;
        *(unsigned char *)(v14 + v13++) = a2 | 0x80;
        BOOL v16 = a2 > 0x7F;
        a2 >>= 7;
      }
      while (v16);
      uint64_t result = 0;
      *(unsigned char *)(v14 + v13 - 1) = v15 & 0x7F;
      uint64_t v17 = *v4;
      int *v4 = v17 + v13;
      *(unsigned char *)(*((void *)v4 + 1) + v17 + v13) = 0;
      goto LABEL_22;
    }
  }
  uint64_t v4 = *a1;
  if (!*a1) {
    goto LABEL_16;
  }
  int v7 = (void (**)(int *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
    --qword_1EB220150;
    off_1EB21C9E8(v4);
    uint64_t v4 = (int *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v7 = (void (**)(int *))&xmmword_1EB21CA50;
      goto LABEL_10;
    }
LABEL_16:
    uint64_t result = 7;
    goto LABEL_22;
  }
LABEL_10:
  (*v7)(v4);
  uint64_t v4 = 0;
  uint64_t result = 7;
LABEL_22:
  *a1 = v4;
  return result;
}

uint64_t sub_1B0D8F8EC(int a1, char *a2, unsigned __int8 **a3, _DWORD *a4, uint64_t a5)
{
  int v9 = *(_DWORD *)(a5 + 80) + a1;
  int v10 = *a4 + a1;
  uint64_t v11 = *(unsigned char **)(a5 + 40);
  int v30 = v11;
  unsigned int v31 = v11;
  BOOL v34 = a2;
  int v35 = a2;
  uint64_t v12 = *a3;
  sub_1B0D8CB60(&v34, v9, 0, 0, a3, &v31);
  uint64_t v13 = v34;
  BOOL v32 = v34;
  int v33 = v34;
  *a3 = v12;
  unsigned int v31 = v11;
  sub_1B0D8CB60(&v33, v10, 1, 0, &v31, a3);
  if (v13 == a2)
  {
    if (v33 == a2) {
      return 0;
    }
    int v15 = *a2;
    LODWORD(v16) = a2;
    if (*a2)
    {
      BOOL v16 = a2;
      do
      {
        unsigned int v17 = v15 & 0xFFFFFF80;
        int v18 = *++v16;
        int v15 = v18;
      }
      while (v17 | v18);
    }
    goto LABEL_12;
  }
  if (v33 == v13)
  {
    int v19 = *a2;
    LODWORD(v16) = a2;
    if (*a2)
    {
      BOOL v16 = a2;
      do
      {
        unsigned int v20 = v19 & 0xFFFFFF80;
        int v21 = *++v16;
        int v19 = v21;
      }
      while (v20 | v21);
    }
LABEL_12:
    size_t v22 = (int)v16 - (int)a2 + 1;
    memcpy(v11, a2, v22);
    int v14 = v11 + v22;
    goto LABEL_13;
  }
  sub_1B0D8C5A8(&v30, (unsigned __int8 **)&v35, &v32);
  int v14 = (int)v30;
LABEL_13:
  uint64_t v23 = *(unsigned __int8 **)(a5 + 40);
  int v24 = v14 - v23;
  unsigned int v25 = v24 - 1;
  if (v24 >= 1)
  {
    int v26 = *(_DWORD *)(a5 + 48);
    BOOL v27 = __OFSUB__(v26, v25);
    int v28 = v26 - v25;
    if (v28 < 0 == v27)
    {
      bzero(&v23[v25], v28);
      *(_DWORD *)(a5 + 48) = v25;
      uint64_t v23 = *(unsigned __int8 **)(a5 + 40);
    }
  }
  *a3 = v23;
  *a4 = *(_DWORD *)(a5 + 80);
  return 1;
}

uint64_t sub_1B0D8FA84(uint64_t a1, sqlite3_stmt *a2, _DWORD *a3, _DWORD *a4)
{
  unsigned int v25 = a2;
  pStmt = 0;
  BOOL v27 = a2;
  uint64_t v8 = sub_1B0D7D3B4((uint64_t *)a1, 7, &pStmt, (uint64_t)&v27);
  int v9 = pStmt;
  if (v8)
  {
LABEL_2:
    sqlite3_reset(v9);
    return v8;
  }
  if (sqlite3_step(pStmt) != 100)
  {
    uint64_t v12 = v9;
    return sqlite3_reset(v12);
  }
  if (*(void *)(a1 + 88)) {
    uint64_t v11 = sqlite3_column_int(v9, *(_DWORD *)(a1 + 48) + 1);
  }
  else {
    uint64_t v11 = 0;
  }
  sqlite3_int64 v13 = sqlite3_column_int64(v9, 0);
  sqlite3_int64 v14 = v13;
  sqlite3_int64 v15 = *(void *)(a1 + 512);
  if (v15 > v13
    || v15 == v13 && !*(_DWORD *)(a1 + 524)
    || *(_DWORD *)(a1 + 520) != v11
    || *(_DWORD *)(a1 + 508) > *(_DWORD *)(a1 + 504))
  {
    uint64_t v8 = sub_1B0D90990(a1);
    if (v8) {
      goto LABEL_2;
    }
  }
  uint64_t v16 = 0;
  *(void *)(a1 + 512) = v14;
  *(_DWORD *)(a1 + 520) = v11;
  *(_DWORD *)(a1 + 524) = 1;
  unsigned int v17 = a4;
  while (v16 + 1 <= *(int *)(a1 + 48))
  {
    if (*(unsigned char *)(*(void *)(a1 + 64) + v16))
    {
      uint64_t v8 = 0;
    }
    else
    {
      int v18 = sqlite3_column_text(v9, (int)v16 + 1);
      uint64_t v8 = sub_1B0D92A28(a1, v11, (uint64_t)v18, -1, v17);
      a4[*(int *)(a1 + 48)] += sqlite3_column_bytes(v9, v16 + 1);
    }
    ++v16;
    ++v17;
    if (v8) {
      goto LABEL_2;
    }
  }
  uint64_t v8 = sqlite3_reset(v9);
  if (!v8)
  {
    BOOL v27 = a2;
    if (*(void *)(a1 + 80))
    {
      --*a3;
LABEL_25:
      if (!*(unsigned char *)(a1 + 462)) {
        return 0;
      }
      goto LABEL_26;
    }
    pStmt = 0;
    uint64_t v20 = sub_1B0D7D3B4((uint64_t *)a1, 1, &pStmt, (uint64_t)&v27);
    if (v20) {
      return v20;
    }
    int v21 = pStmt;
    if (sqlite3_step(pStmt) == 100)
    {
      int v22 = sqlite3_column_int(v21, 0);
      uint64_t v8 = sqlite3_reset(v21);
      if (v8) {
        return v8;
      }
      if (v22)
      {
        uint64_t v8 = sub_1B0D928E4(a1, 1);
        *a3 = 0;
        bzero(a4, 8 * *(int *)(a1 + 48) + 8);
        return v8;
      }
    }
    else
    {
      uint64_t v8 = sqlite3_reset(v21);
      if (v8) {
        return v8;
      }
    }
    uint64_t v23 = *(void *)(a1 + 80);
    --*a3;
    if (v23) {
      goto LABEL_25;
    }
    BOOL v27 = 0;
    uint64_t v8 = sub_1B0D7D3B4((uint64_t *)a1, 0, &v27, (uint64_t)&v25);
    if (!v8)
    {
      int v24 = v27;
      sqlite3_step(v27);
      uint64_t v8 = sqlite3_reset(v24);
    }
    if (*(unsigned char *)(a1 + 462) && !v8)
    {
LABEL_26:
      BOOL v27 = 0;
      uint64_t v8 = sub_1B0D7D3B4((uint64_t *)a1, 19, &v27, (uint64_t)&v25);
      if (v8) {
        return v8;
      }
      int v19 = v27;
      sqlite3_step(v27);
      uint64_t v12 = v19;
      return sqlite3_reset(v12);
    }
  }
  return v8;
}

uint64_t sub_1B0D8FD98(uint64_t a1, void *a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 80))
  {
    BOOL v27 = 0;
    int v9 = a2 + 1;
    uint64_t v10 = sub_1B0D7D3B4((uint64_t *)a1, 18, &v27, (uint64_t)(a2 + 1));
    if (v10) {
      return v10;
    }
    if (!*(void *)(a1 + 88))
    {
LABEL_26:
      uint64_t v18 = a2[*(int *)(a1 + 48) + 3];
      if (v18)
      {
        if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v18 + 20)))
        {
          int v19 = v27;
          goto LABEL_39;
        }
      }
      else
      {
        sub_1B0CE1978(97220);
      }
      if (*a2)
      {
        if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(*a2 + 20)))
        {
          if (!*v9)
          {
            sub_1B0CE1978(97220);
            return 1;
          }
          if (((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(*v9 + 20)) & 1) == 0) {
            return 1;
          }
        }
      }
      else
      {
        sub_1B0CE1978(97220);
      }
      int v19 = v27;
      uint64_t v10 = sqlite3_bind_value(v27, 1, (const sqlite3_value *)a2[*(int *)(a1 + 48) + 3]);
      if (v10) {
        return v10;
      }
LABEL_39:
      sqlite3_step(v19);
      uint64_t v10 = sqlite3_reset(v19);
      uint64_t v21 = *(void *)(a1 + 24);
      if (v21)
      {
        int v22 = *(unsigned __int8 *)(v21 + 113);
        switch(v22)
        {
          case 186:
            goto LABEL_43;
          case 118:
            uint64_t v25 = *(void *)(v21 + 56);
LABEL_59:
            *a3 = v25;
            return v10;
          case 109:
LABEL_43:
            uint64_t v23 = "unopened";
            break;
          default:
            uint64_t v23 = "invalid";
            break;
        }
      }
      else
      {
        uint64_t v23 = "NULL";
      }
      sqlite3_log(21, "API call with %s database connection pointer", v23);
      sub_1B0CE1978(186263);
      uint64_t v25 = 0;
      goto LABEL_59;
    }
    uint64_t v11 = v27;
    int v12 = *(_DWORD *)(a1 + 48);
    int v13 = v12 + 2;
    uint64_t v14 = a2[v12 + 4];
    if (v14)
    {
      __int16 v15 = *(_WORD *)(v14 + 20);
      if ((v15 & 0x24) != 0)
      {
        double v16 = *(double *)v14;
        goto LABEL_25;
      }
      if ((v15 & 8) != 0)
      {
        double v24 = *(double *)v14;
        if (*(double *)v14 >= -9.22337204e18)
        {
          if (v24 <= 9.22337204e18) {
            *(void *)&double v16 = (uint64_t)v24;
          }
          else {
            LODWORD(v16) = -1;
          }
        }
        else
        {
          LODWORD(v16) = 0;
        }
LABEL_25:
        uint64_t v10 = sqlite3_bind_int64(v11, v13, SLODWORD(v16));
        if (v10) {
          return v10;
        }
        goto LABEL_26;
      }
      if ((v15 & 0x12) != 0 && *(void *)(v14 + 8))
      {
        LODWORD(v16) = sub_1B0D186C0(v14);
        goto LABEL_25;
      }
    }
    else
    {
      sub_1B0CE1978(89717);
    }
    LODWORD(v16) = 0;
    goto LABEL_25;
  }
  uint64_t v6 = a2[*(int *)(a1 + 48) + 3];
  if (!v6)
  {
    sub_1B0CE1978(97220);
    goto LABEL_15;
  }
  __int16 v7 = *(_WORD *)(v6 + 20);
  if (((0xAAAAAAAAAAAAAAAALL >> v7) & 1) == 0)
  {
    char v8 = v7 & 0x3F;
    goto LABEL_13;
  }
  uint64_t v6 = a2[1];
  if (!v6)
  {
LABEL_15:
    sub_1B0CE1978(97220);
    return 19;
  }
  __int16 v7 = *(_WORD *)(v6 + 20);
  char v8 = v7 & 0x3F;
LABEL_13:
  if (((0x50505050uLL >> v8) & 1) == 0) {
    return 19;
  }
  if ((v7 & 0x24) != 0)
  {
    uint64_t v17 = *(void *)v6;
  }
  else if ((v7 & 8) != 0)
  {
    double v20 = *(double *)v6;
    if (*(double *)v6 >= -9.22337204e18)
    {
      if (v20 <= 9.22337204e18) {
        uint64_t v17 = (uint64_t)v20;
      }
      else {
        uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
      }
    }
    else
    {
      uint64_t v17 = 0x8000000000000000;
    }
  }
  else if ((v7 & 0x12) != 0 && *(void *)(v6 + 8))
  {
    uint64_t v17 = sub_1B0D186C0(v6);
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v10 = 0;
  *a3 = v17;
  return v10;
}

uint64_t sub_1B0D900E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!*(_DWORD *)result)
  {
    int v5 = (_DWORD *)result;
    uint64_t v6 = *(int *)(a2 + 48);
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C7FC94(10 * v6)) == 0)
    {
      int v7 = 7;
    }
    else
    {
      char v8 = (char *)result;
      uint64_t v9 = *(unsigned int *)(a2 + 48);
      if ((int)v9 < 1)
      {
        unsigned int v11 = 0;
      }
      else
      {
        uint64_t v10 = 0;
        unsigned int v11 = 0;
        do
        {
          unint64_t v12 = *(unsigned int *)(a3 + 4 * v10);
          int v13 = (unsigned char *)(result + (int)v11);
          do
          {
            char v14 = v12;
            *v13++ = v12 | 0x80;
            ++v11;
            BOOL v15 = v12 > 0x7F;
            v12 >>= 7;
          }
          while (v15);
          *(v13 - 1) = v14 & 0x7F;
          ++v10;
        }
        while (v10 != v9);
      }
      int v22 = 0;
      int v16 = sub_1B0D7D3B4((uint64_t *)a2, 20, &v22, 0);
      if (!v16)
      {
        uint64_t v18 = (uint64_t *)v22;
        uint64_t v19 = *(void *)(a2 + 512);
        if (!sub_1B0CC3F2C((uint64_t)v22, 0))
        {
          uint64_t v20 = v18[16];
          if ((*(_WORD *)(v20 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v20, v19);
          }
          else
          {
            *(void *)uint64_t v20 = v19;
            *(_WORD *)(v20 + 20) = 4;
          }
          uint64_t v21 = *(void *)(*v18 + 24);
          if (v21) {
            xmmword_1EB21CA50(v21);
          }
        }
        if ((v11 & 0x80000000) != 0) {
          sub_1B0CE1978(98740);
        }
        else {
          sub_1B0CC3DB8(v18, 2, v8, v11, (uint64_t (*)(uint64_t))sqlite3_free, 0);
        }
        sqlite3_step((sqlite3_stmt *)v18);
        uint64_t result = sqlite3_reset((sqlite3_stmt *)v18);
        int v7 = result;
        goto LABEL_4;
      }
      int v7 = v16;
      uint64_t v17 = (uint64_t (**)(char *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
        --qword_1EB220150;
        uint64_t result = off_1EB21C9E8(v8);
        char v8 = (char *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_4;
        }
        uint64_t v17 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
      }
      uint64_t result = (*v17)(v8);
    }
LABEL_4:
    *int v5 = v7;
  }
  return result;
}

void sub_1B0D90304(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (*a1) {
    return;
  }
  uint64_t v10 = *(int *)(a2 + 48);
  if (sqlite3_initialize() || (uint64_t v11 = v10 + 2, (v12 = sub_1B0C7FC94(14 * (v10 + 2))) == 0))
  {
    *a1 = 7;
    return;
  }
  int v13 = (_DWORD *)v12;
  uint64_t v48 = 0;
  int v14 = sub_1B0D7D3B4((uint64_t *)a2, 22, &v48, 0);
  if (v14)
  {
LABEL_27:
    int v25 = v14;
    int v26 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
      --qword_1EB220150;
      off_1EB21C9E8(v13);
      int v13 = (_DWORD *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_33;
      }
      int v26 = &xmmword_1EB21CA50;
    }
    (*v26)(v13);
LABEL_33:
    *a1 = v25;
    return;
  }
  BOOL v15 = v48;
  if (!sub_1B0CC3F2C((uint64_t)v48, 0))
  {
    uint64_t v16 = *((void *)v15 + 16);
    if ((*(_WORD *)(v16 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v16, 0);
    }
    else
    {
      *(void *)uint64_t v16 = 0;
      *(_WORD *)(v16 + 20) = 4;
    }
    uint64_t v17 = *(void *)(*(void *)v15 + 24);
    if (v17) {
      xmmword_1EB21CA50(v17);
    }
  }
  if (sqlite3_step(v15) == 100)
  {
    uint64_t v47 = v13;
    unint64_t v18 = (unint64_t)sqlite3_column_blob(v15, 0);
    int v19 = sqlite3_column_bytes(v15, 0);
    if (!v19 || (int v20 = v19, *(char *)(v18 + v19 - 1) < 0))
    {
      LODWORD(v18) = 0;
    }
    else
    {
      unint64_t v46 = v18;
      LODWORD(v18) = 0;
      if ((int)v10 >= -1 && v19 >= 1)
      {
        uint64_t v45 = v15;
        unint64_t v18 = 0;
        int v21 = 0;
        do
        {
          unint64_t v49 = 0;
          int v22 = sub_1B0D7D81C((char *)(v46 + v21), &v49);
          v47[v18++] = v49;
          if (v18 >= v11) {
            break;
          }
          v21 += v22;
        }
        while (v21 < v20);
        BOOL v15 = v45;
      }
    }
    int v13 = v47;
    if ((int)v18 >= (int)v11) {
      goto LABEL_26;
    }
    double v24 = &v47[v18];
    size_t v23 = 4 * (v11 + ~v18) + 4;
  }
  else
  {
    size_t v23 = 4 * v11;
    double v24 = v13;
  }
  bzero(v24, v23);
LABEL_26:
  int v14 = sqlite3_reset(v15);
  if (v14) {
    goto LABEL_27;
  }
  BOOL v27 = *v13 < -a5 && a5 < 0;
  int v28 = *v13 + a5;
  if (v27) {
    int v28 = 0;
  }
  _DWORD *v13 = v28;
  if ((*(_DWORD *)(a2 + 48) & 0x80000000) == 0)
  {
    uint64_t v29 = 0;
    int v30 = v13 + 1;
    do
    {
      unsigned int v31 = *(_DWORD *)(a3 + 4 * v29) + v30[v29];
      unsigned int v32 = *(_DWORD *)(a4 + 4 * v29);
      BOOL v33 = v31 >= v32;
      unsigned int v34 = v31 - v32;
      if (!v33) {
        unsigned int v34 = 0;
      }
      v30[v29] = v34;
      BOOL v35 = v29++ < *(int *)(a2 + 48);
    }
    while (v35);
  }
  if ((int)v10 < -1)
  {
    int v37 = 0;
  }
  else
  {
    uint64_t v36 = 0;
    int v37 = 0;
    do
    {
      unint64_t v38 = v13[v36];
      int v39 = (char *)&v13[v11] + v37;
      do
      {
        char v40 = v38;
        *v39++ = v38 | 0x80;
        ++v37;
        BOOL v35 = v38 > 0x7F;
        v38 >>= 7;
      }
      while (v35);
      *(v39 - 1) = v40 & 0x7F;
      ++v36;
    }
    while (v36 != v11);
  }
  int v41 = sub_1B0D7D3B4((uint64_t *)a2, 23, &v48, 0);
  if (v41)
  {
    int v42 = v41;
    uint64_t v43 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
      --qword_1EB220150;
      off_1EB21C9E8(v13);
      int v13 = (_DWORD *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_59;
      }
      uint64_t v43 = &xmmword_1EB21CA50;
    }
    (*v43)(v13);
LABEL_59:
    *a1 = v42;
    return;
  }
  int v44 = v48;
  sqlite3_bind_int64(v48, 1, 0);
  sqlite3_bind_blob(v44, 2, &v13[v11], v37, 0);
  sqlite3_step(v44);
  *a1 = sqlite3_reset(v44);
  sqlite3_bind_null(v44, 2);

  sqlite3_free(v13);
}

uint64_t sub_1B0D90764(uint64_t a1, int a2)
{
  BOOL v27 = 0;
  unsigned int v4 = sub_1B0D90990(a1);
  if (v4) {
    goto LABEL_28;
  }
  unsigned int v4 = sub_1B0D7D3B4((uint64_t *)a1, 27, &v27, 0);
  if (v4) {
    goto LABEL_28;
  }
  int v5 = v27;
  uint64_t v6 = *(int *)(a1 + 520);
  if (!sub_1B0CC3F2C((uint64_t)v27, 0))
  {
    uint64_t v7 = *((void *)v5 + 16);
    if ((*(_WORD *)(v7 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v7, v6);
    }
    else
    {
      *(void *)uint64_t v7 = v6;
      *(_WORD *)(v7 + 20) = 4;
    }
    uint64_t v8 = *(void *)(*(void *)v5 + 24);
    if (v8) {
      xmmword_1EB21CA50(v8);
    }
  }
  uint64_t v9 = *(int *)(a1 + 488);
  if (!sub_1B0CC3F2C((uint64_t)v5, 1u))
  {
    uint64_t v10 = *((void *)v5 + 16);
    if ((*(_WORD *)(v10 + 84) & 0x9000) != 0)
    {
      sub_1B0D18980(v10 + 64, v9);
    }
    else
    {
      *(void *)(v10 + 64) = v9;
      *(_WORD *)(v10 + 84) = 4;
    }
    uint64_t v11 = *(void *)(*(void *)v5 + 24);
    if (v11) {
      xmmword_1EB21CA50(v11);
    }
  }
  if (sqlite3_step(v5) != 100)
  {
    unsigned int v4 = sqlite3_reset(v5);
LABEL_28:
    unsigned int v12 = v4;
    int v13 = 0;
    goto LABEL_29;
  }
  unsigned int v12 = 0;
  int v13 = 0;
  do
  {
    uint64_t v14 = sqlite3_column_int(v5, 0);
    if (!v12)
    {
      uint64_t v15 = v14;
      for (uint64_t i = 0; (int)i < *(_DWORD *)(a1 + 488); uint64_t i = (i + 1))
      {
        unsigned int v17 = sub_1B0D90ABC(a1, v15, i, -2);
        if (v17 == 101)
        {
          int v13 = 1;
        }
        else
        {
          unsigned int v12 = v17;
          if (v17) {
            goto LABEL_18;
          }
        }
      }
      unsigned int v12 = 0;
    }
LABEL_18:
    ;
  }
  while (sqlite3_step(v5) == 100);
  int v26 = sqlite3_reset(v5);
  if (!v12) {
    unsigned int v12 = v26;
  }
LABEL_29:
  unint64_t v18 = *(void **)(a1 + 480);
  if (v18)
  {
    int v19 = (sqlite3_stmt *)v18[3];
    int v20 = (void *)v18[4];
    uint64_t v21 = v20[3];
    if (v21) {
      xmmword_1EB21CA40(v21);
    }
    sub_1B0D05C10(v20, v18);
    uint64_t v22 = v20[3];
    if (v22) {
      xmmword_1EB21CA50(v22);
    }
    sqlite3_finalize(v19);
  }
  *(void *)(a1 + 480) = 0;
  if (v13) {
    BOOL v23 = v12 == 0;
  }
  else {
    BOOL v23 = 0;
  }
  if (!v23 || a2 == 0) {
    return v12;
  }
  else {
    return 101;
  }
}

uint64_t sub_1B0D90990(uint64_t a1)
{
  if (*(int *)(a1 + 488) >= 1)
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = sub_1B0D90ABC(a1, *(unsigned int *)(a1 + 520), v2, -1);
      if (v3 != 101 && v3 != 0) {
        break;
      }
      uint64_t v2 = (v2 + 1);
      if ((int)v2 >= *(_DWORD *)(a1 + 488)) {
        goto LABEL_9;
      }
    }
    uint64_t v9 = v3;
    sub_1B0D91878(a1);
    return v9;
  }
LABEL_9:
  sub_1B0D91878(a1);
  if (!*(unsigned char *)(a1 + 461) || *(_DWORD *)(a1 + 96) != 255 || !*(_DWORD *)(a1 + 100)) {
    return 0;
  }
  uint64_t v11 = 0;
  uint64_t v9 = sub_1B0D7D3B4((uint64_t *)a1, 22, &v11, 0);
  if (!v9)
  {
    int v5 = v11;
    sqlite3_bind_int64(v11, 1, 2);
    int v6 = sqlite3_step(v5);
    if (v6 == 101)
    {
      int v8 = 0;
    }
    else
    {
      if (v6 != 100) {
        return sqlite3_reset(v5);
      }
      int v7 = sqlite3_column_int(v5, 0);
      if (v7 == 1) {
        int v8 = 8;
      }
      else {
        int v8 = v7;
      }
    }
    *(_DWORD *)(a1 + 96) = v8;
    return sqlite3_reset(v5);
  }
  return v9;
}

uint64_t sub_1B0D90ABC(uint64_t a1, uint64_t a2, uint64_t a3, signed int a4)
{
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v164 = 0;
  uint64_t v161 = 0;
  long long v159 = 0u;
  long long v160 = 0u;
  long long v157 = 0u;
  long long v158 = 0u;
  long long v156 = 0u;
  uint64_t v8 = sub_1B0D7C434(a1, a2, a3, a4, 0, 0, 1, 0, (uint64_t)&v156);
  if (v8) {
    goto LABEL_157;
  }
  int v9 = DWORD2(v156);
  if (!DWORD2(v156)) {
    goto LABEL_157;
  }
  if (a4 == -1)
  {
    sqlite3_int64 v11 = 0;
    int v12 = a2;
    uint64_t v13 = (int)a3;
    goto LABEL_7;
  }
  v165[0] = 0;
  uint64_t v10 = sub_1B0D7D3B4((uint64_t *)a1, 15, v165, 0);
  if (v10)
  {
    uint64_t v8 = v10;
    goto LABEL_157;
  }
  uint64_t v21 = v165[0];
  int v12 = a2;
  int v22 = *(_DWORD *)(a1 + 488);
  uint64_t v13 = (int)a3;
  if (!sub_1B0CC3F2C((uint64_t)v165[0], 0))
  {
    uint64_t v23 = ((int)a3 + v22 * (uint64_t)(int)a2) << 10;
    uint64_t v24 = *((void *)v21 + 16);
    if ((*(_WORD *)(v24 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v24, v23);
    }
    else
    {
      *(void *)uint64_t v24 = v23;
      *(_WORD *)(v24 + 20) = 4;
    }
    uint64_t v25 = *(void *)(*(void *)v21 + 24);
    if (v25) {
      xmmword_1EB21CA50(v25);
    }
  }
  int v26 = *(_DWORD *)(a1 + 488);
  if (!sub_1B0CC3F2C((uint64_t)v21, 1u))
  {
    uint64_t v27 = (((int)a3 + v26 * (uint64_t)(int)a2) << 10) | 0x3FF;
    uint64_t v28 = *((void *)v21 + 16);
    if ((*(_WORD *)(v28 + 84) & 0x9000) != 0)
    {
      sub_1B0D18980(v28 + 64, v27);
    }
    else
    {
      *(void *)(v28 + 64) = v27;
      *(_WORD *)(v28 + 84) = 4;
    }
    uint64_t v29 = *(void *)(*(void *)v21 + 24);
    if (v29) {
      xmmword_1EB21CA50(v29);
    }
  }
  if (sqlite3_step(v21) == 100) {
    sqlite3_int64 v11 = sqlite3_column_int64(v21, 0);
  }
  else {
    sqlite3_int64 v11 = 0;
  }
  uint64_t v8 = sqlite3_reset(v21);
  if (v8) {
    goto LABEL_157;
  }
  if (a4 != -2)
  {
LABEL_7:
    int v14 = *(_DWORD *)(a1 + 488);
    v165[0] = 0;
    uint64_t v8 = sub_1B0D7D3B4((uint64_t *)a1, 8, v165, 0);
    if (v8) {
      goto LABEL_157;
    }
    sqlite3_int64 v154 = v11;
    uint64_t v15 = v13 + v12 * (uint64_t)v14;
    uint64_t v16 = a4 + 1;
    unsigned int v17 = v165[0];
    int v18 = *(_DWORD *)(a1 + 488);
    if (!sub_1B0CC3F2C((uint64_t)v165[0], 0))
    {
      uint64_t v19 = v16 + ((v13 + v12 * (uint64_t)v18) << 10);
      uint64_t v20 = *((void *)v17 + 16);
      if ((*(_WORD *)(v20 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v20, v19);
      }
      else
      {
        *(void *)uint64_t v20 = v19;
        *(_WORD *)(v20 + 20) = 4;
      }
      uint64_t v34 = *(void *)(*(void *)v17 + 24);
      if (v34) {
        xmmword_1EB21CA50(v34);
      }
    }
    sqlite3_int64 v33 = v16 + (v15 << 10);
    if (sqlite3_step(v17) == 100)
    {
      int v30 = sqlite3_column_int(v17, 0);
      uint64_t v8 = sqlite3_reset(v17);
      sqlite3_int64 v11 = v154;
      if (v8) {
        goto LABEL_157;
      }
      if (v30 > 15)
      {
        uint64_t v35 = sub_1B0D90ABC(a1, a2, a3, v16);
        uint64_t v8 = v35;
        BOOL v36 = a4 == -1 || v33 <= v154;
        BOOL v37 = !v36;
        if (v35) {
          goto LABEL_157;
        }
        int v30 = 0;
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v8 = sqlite3_reset(v17);
      sqlite3_int64 v11 = v154;
      if (v8) {
        goto LABEL_157;
      }
      int v30 = 0;
    }
    BOOL v37 = a4 != -1 && v33 > v11;
LABEL_53:
    int v32 = 0;
    uint64_t v162 = 0;
    uint64_t v163 = 0;
    uint64_t v164 = 0;
    if (v37) {
      int v31 = 3;
    }
    else {
      int v31 = 1;
    }
    goto LABEL_56;
  }
  if (v9 == 1 && !*(void *)(*(void *)v156 + 64))
  {
    uint64_t v8 = 101;
    goto LABEL_157;
  }
  int v30 = 0;
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  int v31 = 3;
  int v32 = 1;
  sqlite3_int64 v33 = v11;
  uint64_t v164 = 0;
LABEL_56:
  LODWORD(v164) = v31;
  *(void *)&long long v157 = &v162;
  uint64_t v8 = sub_1B0D7D91C(a1, (uint64_t *)&v156, 0, 0);
  if (v8) {
    goto LABEL_157;
  }
  int v146 = v32;
  int v144 = v30;
  uint64_t v145 = v33;
  int v39 = 0;
  sqlite3_int64 v155 = v11;
  while (1)
  {
    uint64_t v41 = sub_1B0D7E204(a1, (uint64_t)&v156);
    if (v41 != 100) {
      break;
    }
    int v42 = (unsigned __int8 *)*((void *)&v159 + 1);
    unsigned int v43 = v160;
    int v44 = (void *)*((void *)&v160 + 1);
    size_t v45 = (int)v161;
    int v151 = v160;
    size_t v152 = (int)v161;
    if (!v39)
    {
      v165[0] = 0;
      if (sqlite3_initialize())
      {
        int v39 = 0;
LABEL_135:
        uint64_t v8 = 7;
        goto LABEL_136;
      }
      uint64_t v46 = sub_1B0C7FC94(72);
      int v39 = (uint64_t *)v46;
      if (!v46) {
        goto LABEL_135;
      }
      *(void *)(v46 + 64) = 0;
      *(_OWORD *)(v46 + 32) = 0u;
      *(_OWORD *)(v46 + 48) = 0u;
      *(_OWORD *)uint64_t v46 = 0u;
      *(_OWORD *)(v46 + 16) = 0u;
      uint64_t v47 = *(int *)(a1 + 456);
      if (sqlite3_initialize())
      {
        v39[7] = 0;
        goto LABEL_135;
      }
      uint64_t v48 = sub_1B0C7FC94(v47);
      v39[7] = v48;
      if (!v48) {
        goto LABEL_135;
      }
      *((_DWORD *)v39 + 12) = *(_DWORD *)(a1 + 456);
      uint64_t v49 = sub_1B0D7D3B4((uint64_t *)a1, 10, v165, 0);
      if (v49)
      {
        uint64_t v8 = v49;
        goto LABEL_136;
      }
      uint64_t v50 = v165[0];
      if (sqlite3_step(v165[0]) == 100)
      {
        sqlite3_int64 v51 = sqlite3_column_int64(v50, 0);
        v39[1] = v51;
        v39[2] = v51;
      }
      uint64_t v52 = sqlite3_reset(v50);
      if (v52)
      {
        uint64_t v8 = v52;
        goto LABEL_137;
      }
      unsigned int v43 = v151;
      size_t v45 = v152;
    }
    unsigned int v53 = *((_DWORD *)v39 + 8);
    if ((int)v53 >= (int)v43) {
      uint64_t v54 = v43;
    }
    else {
      uint64_t v54 = v53;
    }
    v147 = v44;
    if ((int)v54 < 1)
    {
      LODWORD(v54) = 0;
    }
    else
    {
      uint64_t v55 = 0;
      while (*(unsigned __int8 *)(v39[3] + v55) == v42[v55])
      {
        if (v54 == ++v55) {
          goto LABEL_81;
        }
      }
      LODWORD(v54) = v55;
    }
LABEL_81:
    unint64_t v56 = v43 - v54;
    if ((int)v56 < 1)
    {
      uint64_t v8 = 267;
      goto LABEL_136;
    }
    __src = v42;
    int v57 = 0;
    size_t __n = (int)v43;
    v149 = v39;
    uint64_t v58 = *((unsigned int *)v39 + 13);
    unint64_t v59 = (int)v54;
    int v60 = v43 + v45;
    int v61 = v43 + v45 + 1;
    int v62 = v61 - v54;
    int v63 = v60 + 2;
    int v64 = v60 + 2 - v54;
    do
    {
      int v65 = v62;
      int v66 = v64;
      ++v57;
      ++v62;
      ++v64;
      BOOL v36 = v59 > 0x7F;
      v59 >>= 7;
    }
    while (v36);
    unint64_t v67 = v56;
    do
    {
      int v68 = v66;
      ++v65;
      ++v66;
      BOOL v36 = v67 > 0x7F;
      v67 >>= 7;
    }
    while (v36);
    unint64_t v69 = v45;
    do
    {
      ++v68;
      BOOL v36 = v69 > 0x7F;
      v69 >>= 7;
    }
    while (v36);
    uint64_t v70 = v68;
    if ((int)v58 >= 1 && v68 + v58 > *(int *)(a1 + 456))
    {
      uint64_t v71 = v149[2];
      if (v71 == 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v8 = 267;
        int v39 = v149;
        goto LABEL_137;
      }
      v149[2] = v71 + 1;
      uint64_t v72 = sub_1B0D91E50((uint64_t *)a1, v71, (char *)v149[7], v58);
      if (v72
        || (++*(_DWORD *)(a1 + 100), uint64_t v72 = sub_1B0D91FC4(a1, v149, __src, (v54 + 1)), v72))
      {
        uint64_t v8 = v72;
        int v39 = v149;
        goto LABEL_137;
      }
      *((_DWORD *)v149 + 8) = 0;
      unint64_t v73 = __n;
      do
      {
        int v74 = v63;
        ++v61;
        ++v63;
        BOOL v36 = v73 > 0x7F;
        v73 >>= 7;
      }
      while (v36);
      LODWORD(v45) = v152;
      unint64_t v75 = v152;
      do
      {
        ++v74;
        BOOL v36 = v75 > 0x7F;
        v75 >>= 7;
      }
      while (v36);
      LODWORD(v54) = 0;
      LODWORD(v58) = 0;
      uint64_t v70 = v74;
      LODWORD(v56) = v151;
    }
    int v39 = v149;
    uint64_t v76 = v149[7];
    v149[8] += v70;
    if (v70 > *((int *)v149 + 12))
    {
      if (sqlite3_initialize() || (uint64_t v77 = sub_1B0C8E1B8(v76, v70)) == 0)
      {
LABEL_128:
        uint64_t v8 = 7;
        goto LABEL_137;
      }
      uint64_t v76 = v77;
      v149[7] = v77;
      *((_DWORD *)v149 + 12) = v70;
      LODWORD(v45) = v152;
    }
    uint64_t v78 = (int)v54;
    int v79 = v56 + v58 + 2;
    int v80 = v79 + v45;
    v81 = (unsigned char *)(v76 + (int)v58);
    unint64_t v82 = (int)v54;
    do
    {
      uint64_t v83 = v81;
      int v84 = v80;
      char v85 = v82;
      *v81++ = v82 | 0x80;
      int v86 = v79;
      ++v80;
      ++v79;
      BOOL v36 = v82 > 0x7F;
      v82 >>= 7;
    }
    while (v36);
    *uint64_t v83 = v85 & 0x7F;
    uint64_t v87 = (int)v58 + (uint64_t)((int)v81 - ((int)v76 + (int)v58));
    v88 = (unsigned char *)(v149[7] + v87);
    uint64_t v89 = v88;
    unint64_t v90 = (int)v56;
    sqlite3_int64 v11 = v155;
    do
    {
      uint64_t v91 = v89;
      int v92 = v84;
      char v93 = v90;
      *v89++ = v90 | 0x80;
      int v94 = v86;
      ++v84;
      ++v86;
      BOOL v36 = v90 > 0x7F;
      v90 >>= 7;
    }
    while (v36);
    *uint64_t v91 = v93 & 0x7F;
    int v95 = v87 + v89 - v88;
    memcpy((void *)(v149[7] + v95), &__src[v78], (int)v56);
    uint64_t v96 = (unsigned char *)(v149[7] + v95 + (int)v56);
    unint64_t v97 = v152;
    do
    {
      char v98 = v97;
      *v96++ = v97 | 0x80;
      ++v92;
      ++v94;
      BOOL v36 = v97 > 0x7F;
      v97 >>= 7;
    }
    while (v36);
    *(v96 - 1) = v98 & 0x7F;
    memcpy((void *)(v149[7] + v94), v147, v152);
    *((_DWORD *)v149 + 13) = v92;
    int v99 = v151;
    if (*((_DWORD *)v149 + 9) >= v151)
    {
      char v40 = (void *)v149[3];
    }
    else
    {
      uint64_t v100 = v149[5];
      if (sqlite3_initialize()) {
        goto LABEL_128;
      }
      char v40 = (void *)sub_1B0C8E1B8(v100, 2 * __n);
      if (!v40) {
        goto LABEL_128;
      }
      int v99 = v151;
      *((_DWORD *)v149 + 9) = 2 * v151;
      v149[5] = (uint64_t)v40;
      v149[3] = (uint64_t)v40;
    }
    memcpy(v40, __src, __n);
    *((_DWORD *)v149 + 8) = v99;
  }
  uint64_t v8 = v41;
  if (v41) {
    goto LABEL_136;
  }
  if (a4 == -1)
  {
    if (!v39)
    {
      uint64_t v8 = 0;
      goto LABEL_157;
    }
LABEL_177:
    if (*v39)
    {
      uint64_t v125 = v39[2];
      v39[2] = v125 + 1;
      v150 = v39;
      uint64_t v8 = sub_1B0D91E50((uint64_t *)a1, v125, (char *)v39[7], *((_DWORD *)v39 + 13));
      if (v8)
      {
LABEL_179:
        ++*(_DWORD *)(a1 + 100);
        int v39 = v150;
        goto LABEL_136;
      }
      v126 = (void *)*v39;
      unint64_t v127 = v39[1];
      uint64_t v128 = v39[2];
      v129 = *(void **)*v39;
      if (v129)
      {
        char v130 = 1;
        do
        {
          unint64_t v131 = v128;
          uint64_t v132 = v126[2];
          v133 = v129;
          if (v132)
          {
            do
            {
              uint64_t v134 = 10;
              unint64_t v135 = v127;
              do
              {
                --v134;
                BOOL v36 = v135 > 0x7F;
                v135 >>= 7;
              }
              while (v36);
              *(unsigned char *)(*(void *)(v132 + 64) + v134) = v130;
              v136 = (unsigned char *)(*(void *)(v132 + 64) + v134 + 1);
              unint64_t v137 = v127;
              do
              {
                char v138 = v137;
                *v136++ = v137 | 0x80;
                BOOL v36 = v137 > 0x7F;
                v137 >>= 7;
              }
              while (v36);
              *(v136 - 1) = v138 & 0x7F;
              uint64_t v139 = sub_1B0D91E50((uint64_t *)a1, v128, (char *)(*(void *)(v132 + 64) + v134), *(_DWORD *)(v132 + 56) - (int)v134);
              uint64_t v8 = v139;
              ++v128;
              if (!*(void *)(v132 + 8)) {
                break;
              }
              v127 += *(int *)(v132 + 24) + 1;
              uint64_t v132 = *(void *)(v132 + 8);
            }
            while (!v139);
            if (v139) {
              goto LABEL_179;
            }
            v133 = (void *)*v126;
          }
          ++v130;
          v129 = (void *)*v133;
          unint64_t v127 = v131;
          v126 = v133;
        }
        while (*v133);
        v126 = v133;
        unint64_t v127 = v131;
      }
      else
      {
        char v130 = 1;
      }
      uint64_t v140 = 10;
      unint64_t v141 = v127;
      do
      {
        --v140;
        BOOL v36 = v141 > 0x7F;
        v141 >>= 7;
      }
      while (v36);
      *(unsigned char *)(v126[8] + v140) = v130;
      v142 = (unsigned char *)(v126[8] + v140 + 1);
      do
      {
        char v143 = v127;
        *v142++ = v127 | 0x80;
        BOOL v105 = v127 >= 0x80;
        v127 >>= 7;
      }
      while (v105);
      *(v142 - 1) = v143 & 0x7F;
      int v39 = v150;
      uint64_t v8 = sub_1B0D923DC((uint64_t *)a1, v145, v144, v150[1], v125, v128 - 1, v150[8], (char *)(v126[8] + v140), *((_DWORD *)v126 + 14) - (int)v140);
      sqlite3_int64 v11 = v155;
    }
    else
    {
      uint64_t v8 = sub_1B0D923DC((uint64_t *)a1, v145, v144, 0, 0, 0, v39[8], (char *)v39[7], *((_DWORD *)v39 + 13));
    }
    ++*(_DWORD *)(a1 + 100);
    if (!v8)
    {
      if (a4 == -1 || v145 < v11) {
        uint64_t v8 = sub_1B0D91998((uint64_t *)a1, v145, v39[8]);
      }
      else {
        uint64_t v8 = 0;
      }
    }
    goto LABEL_137;
  }
  uint64_t v101 = v156;
  unint64_t v102 = DWORD2(v156);
  v165[0] = 0;
  if (SDWORD2(v156) < 1) {
    goto LABEL_122;
  }
  unint64_t v103 = 0;
  do
  {
    uint64_t v104 = sub_1B0D922BC((uint64_t *)a1, *(void *)(v101 + 8 * v103++));
    if (v104) {
      BOOL v105 = 1;
    }
    else {
      BOOL v105 = v103 >= v102;
    }
  }
  while (!v105);
  uint64_t v8 = v104;
  if (!v104)
  {
LABEL_122:
    if (v146)
    {
      uint64_t v8 = sub_1B0D7D3B4((uint64_t *)a1, 26, v165, 0);
      if (v8) {
        goto LABEL_136;
      }
      unsigned __int8 v106 = v165[0];
      int v107 = *(_DWORD *)(a1 + 488);
      if (!sub_1B0CC3F2C((uint64_t)v165[0], 0))
      {
        uint64_t v108 = ((int)a3 + v107 * (uint64_t)(int)a2) << 10;
        uint64_t v109 = *((void *)v106 + 16);
        if ((*(_WORD *)(v109 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v109, v108);
        }
        else
        {
          *(void *)uint64_t v109 = v108;
          *(_WORD *)(v109 + 20) = 4;
        }
        uint64_t v119 = *(void *)(*(void *)v106 + 24);
        sqlite3_int64 v11 = v155;
        if (v119) {
          xmmword_1EB21CA50(v119);
        }
      }
      int v120 = *(_DWORD *)(a1 + 488);
      if (!sub_1B0CC3F2C((uint64_t)v106, 1u))
      {
        uint64_t v121 = (((int)a3 + v120 * (uint64_t)(int)a2) << 10) | 0x3FF;
        uint64_t v122 = *((void *)v106 + 16);
        if ((*(_WORD *)(v122 + 84) & 0x9000) != 0)
        {
          sub_1B0D18980(v122 + 64, v121);
        }
        else
        {
          *(void *)(v122 + 64) = v121;
          *(_WORD *)(v122 + 84) = 4;
        }
        goto LABEL_173;
      }
    }
    else
    {
      uint64_t v8 = sub_1B0D7D3B4((uint64_t *)a1, 16, v165, 0);
      if (v8) {
        goto LABEL_136;
      }
      unsigned __int8 v106 = v165[0];
      int v116 = *(_DWORD *)(a1 + 488);
      if (!sub_1B0CC3F2C((uint64_t)v165[0], 0))
      {
        uint64_t v117 = (((int)a3 + v116 * (uint64_t)(int)a2) << 10) + a4;
        uint64_t v118 = *((void *)v106 + 16);
        if ((*(_WORD *)(v118 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v118, v117);
        }
        else
        {
          *(void *)uint64_t v118 = v117;
          *(_WORD *)(v118 + 20) = 4;
        }
LABEL_173:
        uint64_t v123 = *(void *)(*(void *)v106 + 24);
        sqlite3_int64 v11 = v155;
        if (v123) {
          xmmword_1EB21CA50(v123);
        }
      }
    }
    sqlite3_step(v106);
    uint64_t v124 = sqlite3_reset(v106);
    uint64_t v8 = v124;
    if (v39 && !v124) {
      goto LABEL_177;
    }
  }
LABEL_136:
  if (!v39) {
    goto LABEL_157;
  }
LABEL_137:
  uint64_t v110 = v39[7];
  if (v110)
  {
    v111 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_143:
      (*v111)(v110);
      goto LABEL_144;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v110);
    --qword_1EB220150;
    off_1EB21C9E8(v110);
    uint64_t v110 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      v111 = &xmmword_1EB21CA50;
      goto LABEL_143;
    }
  }
LABEL_144:
  uint64_t v112 = v39[5];
  if (v112)
  {
    v113 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v112);
      --qword_1EB220150;
      off_1EB21C9E8(v112);
      uint64_t v112 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_151;
      }
      v113 = &xmmword_1EB21CA50;
    }
    (*v113)(v112);
  }
LABEL_151:
  sub_1B0D92720(*v39);
  v114 = (void (**)(uint64_t *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_156:
    (*v114)(v39);
    goto LABEL_157;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v39);
  --qword_1EB220150;
  off_1EB21C9E8(v39);
  int v39 = (uint64_t *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    v114 = (void (**)(uint64_t *))&xmmword_1EB21CA50;
    goto LABEL_156;
  }
LABEL_157:
  sub_1B0D7C0A8((uint64_t)&v156);
  return v8;
}

uint64_t sub_1B0D91878(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 488) >= 1)
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(v1 + 496) + 40 * v2;
      unsigned int v4 = *(void **)(v3 + 16);
      if (v4) {
        break;
      }
LABEL_3:
      uint64_t result = sub_1B0D79DB0(v3 + 8);
      if (++v2 >= *(int *)(v1 + 488)) {
        goto LABEL_14;
      }
    }
    while (1)
    {
      uint64_t v5 = v4[2];
      if (v5)
      {
        int v6 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
          --qword_1EB220150;
          off_1EB21C9E8(v5);
          uint64_t v5 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_7;
          }
          int v6 = &xmmword_1EB21CA50;
        }
        (*v6)(v5);
      }
LABEL_7:
      unsigned int v4 = (void *)*v4;
      if (!v4) {
        goto LABEL_3;
      }
    }
  }
LABEL_14:
  *(_DWORD *)(v1 + 508) = 0;
  return result;
}

uint64_t sub_1B0D91998(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = 0;
  uint64_t v6 = sub_1B0D7D3B4(a1, 37, &v52, 0);
  if (v6) {
    return v6;
  }
  if (a2 >= 0) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = a2 + 1023;
  }
  if (3 * a3 >= 0) {
    uint64_t v9 = 3 * a3;
  }
  else {
    uint64_t v9 = 3 * a3 + 1;
  }
  uint64_t v10 = v52;
  if (!sub_1B0CC3F2C((uint64_t)v52, 0))
  {
    uint64_t v11 = a2 + 1;
    uint64_t v12 = *((void *)v10 + 16);
    if ((*(_WORD *)(v12 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v12, v11);
    }
    else
    {
      *(void *)uint64_t v12 = v11;
      *(_WORD *)(v12 + 20) = 4;
    }
    uint64_t v13 = *(void *)(*(void *)v10 + 24);
    if (v13) {
      xmmword_1EB21CA50(v13);
    }
  }
  if (!sub_1B0CC3F2C((uint64_t)v10, 1u))
  {
    uint64_t v14 = v8 | 0x3FF;
    uint64_t v15 = *((void *)v10 + 16);
    if ((*(_WORD *)(v15 + 84) & 0x9000) != 0)
    {
      sub_1B0D18980(v15 + 64, v14);
    }
    else
    {
      *(void *)(v15 + 64) = v14;
      *(_WORD *)(v15 + 84) = 4;
    }
    uint64_t v16 = *(void *)(*(void *)v10 + 24);
    if (v16) {
      xmmword_1EB21CA50(v16);
    }
  }
  if (sqlite3_step(v10) == 100)
  {
    uint64_t v17 = v9 >> 1;
    while (1)
    {
      int v18 = sqlite3_column_text(v10, 2);
      if (!v18) {
        break;
      }
      if (*v18 - 48 > 9)
      {
        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v19 = 0;
        do
        {
          unsigned int v20 = v19 + 1;
          unsigned int v21 = v18[++v19] - 48;
        }
        while (v21 < 0xA);
        uint64_t v22 = v20;
      }
      while (1)
      {
        int v23 = v18[v22];
        if (v23 != 32) {
          break;
        }
        ++v22;
      }
      BOOL v24 = v23 == 45;
      int v25 = v23 == 45 ? v22 + 1 : v22;
      uint64_t v26 = v24 ? -1 : 1;
      uint64_t v27 = v25;
      int v28 = v18[v25];
      if ((v28 - 48) > 9)
      {
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = 0;
        int v30 = &v18[v27 + 1];
        do
        {
          uint64_t v29 = (v28 - 48) + 10 * v29;
          int v31 = *v30++;
          int v28 = v31;
        }
        while ((v31 - 48) < 0xA);
      }
      uint64_t v32 = v29 * v26;
      if (v32 < 1 || v32 > v17) {
        break;
      }
      if (sqlite3_step(v10) != 100)
      {
        uint64_t v6 = sqlite3_reset(v10);
        uint64_t v50 = 0;
        sqlite3_int64 v51 = 0;
        if (!v6)
        {
          uint64_t v6 = sub_1B0D7D3B4(a1, 38, &v51, 0);
          if (!v6)
          {
            uint64_t v6 = sub_1B0D7D3B4(a1, 39, &v50, 0);
            if (!v6)
            {
              if (!sub_1B0CC3F2C((uint64_t)v10, 0))
              {
                uint64_t v34 = *((void *)v10 + 16);
                if ((*(_WORD *)(v34 + 20) & 0x9000) != 0)
                {
                  sub_1B0D18980(v34, a2);
                }
                else
                {
                  *(void *)uint64_t v34 = a2;
                  *(_WORD *)(v34 + 20) = 4;
                }
                uint64_t v35 = *(void *)(*(void *)v10 + 24);
                if (v35) {
                  xmmword_1EB21CA50(v35);
                }
              }
              uint64_t v36 = 0;
              BOOL v37 = v51;
              while (sqlite3_step(v10) == 100)
              {
                if (!sub_1B0CC3F2C((uint64_t)v37, 0))
                {
                  uint64_t v39 = *((void *)v37 + 16);
                  if ((*(_WORD *)(v39 + 20) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v39, v36);
                  }
                  else
                  {
                    *(void *)uint64_t v39 = v36;
                    *(_WORD *)(v39 + 20) = 4;
                  }
                  uint64_t v40 = *(void *)(*(void *)v37 + 24);
                  if (v40) {
                    xmmword_1EB21CA50(v40);
                  }
                }
                int v41 = sqlite3_column_int(v10, 0);
                if (!sub_1B0CC3F2C((uint64_t)v37, 1u))
                {
                  uint64_t v42 = *((void *)v37 + 16);
                  if ((*(_WORD *)(v42 + 84) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v42 + 64, v41);
                  }
                  else
                  {
                    *(void *)(v42 + 64) = v41;
                    *(_WORD *)(v42 + 84) = 4;
                  }
                  uint64_t v43 = *(void *)(*(void *)v37 + 24);
                  if (v43) {
                    xmmword_1EB21CA50(v43);
                  }
                }
                int v44 = sqlite3_column_int(v10, 1);
                if (!sub_1B0CC3F2C((uint64_t)v37, 2u))
                {
                  uint64_t v45 = *((void *)v37 + 16);
                  if ((*(_WORD *)(v45 + 148) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v45 + 128, v44);
                  }
                  else
                  {
                    *(void *)(v45 + 128) = v44;
                    *(_WORD *)(v45 + 148) = 4;
                  }
                  uint64_t v46 = *(void *)(*(void *)v37 + 24);
                  if (v46) {
                    xmmword_1EB21CA50(v46);
                  }
                }
                sqlite3_step(v37);
                uint64_t v38 = sqlite3_reset(v37);
                ++v36;
                if (v38)
                {
                  uint64_t v6 = v38;
                  sqlite3_reset(v10);
                  return v6;
                }
              }
              uint64_t v6 = sqlite3_reset(v10);
              if (!v6)
              {
                uint64_t v47 = v50;
                if (!sub_1B0CC3F2C((uint64_t)v50, 0))
                {
                  uint64_t v48 = *((void *)v47 + 16);
                  if ((*(_WORD *)(v48 + 20) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v48, a2);
                  }
                  else
                  {
                    *(void *)uint64_t v48 = a2;
                    *(_WORD *)(v48 + 20) = 4;
                  }
                  uint64_t v49 = *(void *)(*(void *)v47 + 24);
                  if (v49) {
                    xmmword_1EB21CA50(v49);
                  }
                }
                sqlite3_step(v47);
                return sqlite3_reset(v47);
              }
            }
          }
        }
        return v6;
      }
    }
  }

  return sqlite3_reset(v10);
}

uint64_t sub_1B0D91E50(uint64_t *a1, uint64_t a2, char *a3, unsigned int a4)
{
  uint64_t v17 = 0;
  uint64_t v7 = sub_1B0D7D3B4(a1, 9, &v17, 0);
  if (!v7)
  {
    uint64_t v8 = (uint64_t *)v17;
    if (!sub_1B0CC3F2C((uint64_t)v17, 0))
    {
      uint64_t v9 = v8[16];
      if ((*(_WORD *)(v9 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v9, a2);
      }
      else
      {
        *(void *)uint64_t v9 = a2;
        *(_WORD *)(v9 + 20) = 4;
      }
      uint64_t v10 = *(void *)(*v8 + 24);
      if (v10) {
        xmmword_1EB21CA50(v10);
      }
    }
    if ((a4 & 0x80000000) != 0)
    {
      sub_1B0CE1978(98740);
    }
    else if (!sub_1B0CC3F2C((uint64_t)v8, 1u))
    {
      if (a3)
      {
        unsigned int v11 = sub_1B0C79BBC(v8[16] + 64, a3, a4, 0, 0);
        if (v11)
        {
          unsigned int v12 = v11;
          uint64_t v13 = *v8;
          *(_DWORD *)(v13 + 80) = v12;
          sub_1B0D0E714(v13, v12);
          sub_1B0D1806C(*v8, v12);
        }
      }
      uint64_t v14 = *(void *)(*v8 + 24);
      if (v14) {
        xmmword_1EB21CA50(v14);
      }
    }
    sqlite3_step((sqlite3_stmt *)v8);
    uint64_t v7 = sqlite3_reset((sqlite3_stmt *)v8);
    if (!sub_1B0CC3F2C((uint64_t)v8, 1u))
    {
      uint64_t v15 = *(void *)(*v8 + 24);
      if (v15) {
        xmmword_1EB21CA50(v15);
      }
    }
  }
  return v7;
}

uint64_t sub_1B0D91FC4(uint64_t a1, uint64_t *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t *)*a2;
  if (*a2)
  {
    uint64_t v9 = v8[4];
    LODWORD(v10) = *((_DWORD *)v8 + 10);
    if ((int)v10 >= (int)a4) {
      unint64_t v10 = a4;
    }
    else {
      unint64_t v10 = v10;
    }
    if ((int)v10 < 1)
    {
      LODWORD(v10) = 0;
    }
    else
    {
      uint64_t v11 = 0;
      while (*(unsigned __int8 *)(v9 + v11) == a3[v11])
      {
        if (v10 == ++v11) {
          goto LABEL_13;
        }
      }
      LODWORD(v10) = v11;
    }
LABEL_13:
    size_t v13 = (a4 - v10);
    if ((int)v13 < 1) {
      return 267;
    }
    int v14 = *((_DWORD *)v8 + 14);
    uint64_t v15 = v14;
    unint64_t v16 = (int)v10;
    int v17 = v14 + a4 - v10;
    unint64_t v10 = (int)v10;
    do
    {
      ++v17;
      BOOL v18 = v10 > 0x7F;
      v10 >>= 7;
    }
    while (v18);
    unint64_t v19 = v13;
    do
    {
      ++v17;
      BOOL v18 = v19 > 0x7F;
      v19 >>= 7;
    }
    while (v18);
    int v12 = *(_DWORD *)(a1 + 456);
    if (v17 > v12)
    {
      if (v9) {
        goto LABEL_20;
      }
      if (sqlite3_initialize())
      {
        v8[8] = 0;
        return 7;
      }
      uint64_t v24 = sub_1B0C7FC94(v17);
      v8[8] = v24;
      if (!v24) {
        return 7;
      }
      uint64_t v9 = v8[4];
      uint64_t v15 = v14;
    }
    if (v9)
    {
      int v25 = (unsigned char *)(v8[8] + v15);
      unint64_t v26 = v16;
      do
      {
        char v27 = v26;
        *v25++ = v26 | 0x80;
        ++v14;
        BOOL v18 = v26 > 0x7F;
        v26 >>= 7;
      }
      while (v18);
      *(v25 - 1) = v27 & 0x7F;
    }
    int v28 = (unsigned char *)(v8[8] + v14);
    unint64_t v29 = v13;
    do
    {
      char v30 = v29;
      *v28++ = v29 | 0x80;
      ++v14;
      BOOL v18 = v29 > 0x7F;
      v29 >>= 7;
    }
    while (v18);
    *(v28 - 1) = v30 & 0x7F;
    memcpy((void *)(v8[8] + v14), &a3[v16], v13);
    *((_DWORD *)v8 + 14) = v13 + v14;
    ++*((_DWORD *)v8 + 6);
    int v31 = (void *)v8[6];
    if (*((_DWORD *)v8 + 11) >= (int)a4)
    {
      size_t v33 = (int)a4;
    }
    else
    {
      if (sqlite3_initialize()) {
        return 7;
      }
      uint64_t v32 = sub_1B0C8E1B8((uint64_t)v31, 2 * (int)a4);
      if (!v32) {
        return 7;
      }
      int v31 = (void *)v32;
      size_t v33 = (int)a4;
      *((_DWORD *)v8 + 11) = 2 * a4;
      v8[6] = v32;
    }
    v8[4] = (uint64_t)v31;
    memcpy(v31, a3, v33);
    uint64_t result = 0;
    *((_DWORD *)v8 + 10) = a4;
    return result;
  }
  int v12 = *(_DWORD *)(a1 + 456);
LABEL_20:
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v21 = sub_1B0C7FC94(v12 + 72);
  uint64_t v35 = v21;
  if (!v21) {
    return 7;
  }
  uint64_t v22 = v21;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_OWORD *)uint64_t v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  *(_DWORD *)(v21 + 56) = 11;
  *(void *)(v21 + 64) = v21 + 72;
  if (v8)
  {
    uint64_t v34 = *v8;
    uint64_t result = sub_1B0D91FC4(a1, &v34, a3, a4);
    uint64_t v23 = v34;
    if (!*v8) {
      *uint64_t v8 = v34;
    }
    v8[1] = v22;
    *(void *)(v22 + 16) = v8[2];
    *(void *)uint64_t v22 = v23;
    *(void *)(v22 + 48) = v8[6];
    *(_DWORD *)(v22 + 44) = *((_DWORD *)v8 + 11);
    v8[6] = 0;
  }
  else
  {
    *(void *)(v21 + 16) = v21;
    uint64_t result = sub_1B0D91FC4(a1, &v35, a3, a4);
    uint64_t v22 = v35;
  }
  *a2 = v22;
  return result;
}

uint64_t sub_1B0D922BC(uint64_t *a1, uint64_t a2)
{
  if (!*(void *)(a2 + 8)) {
    return 0;
  }
  uint64_t v11 = 0;
  uint64_t result = sub_1B0D7D3B4(a1, 17, &v11, 0);
  if (!result)
  {
    unsigned int v4 = v11;
    uint64_t v5 = *(void *)(a2 + 8);
    if (!sub_1B0CC3F2C((uint64_t)v11, 0))
    {
      uint64_t v6 = *((void *)v4 + 16);
      if ((*(_WORD *)(v6 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v6, v5);
      }
      else
      {
        *(void *)uint64_t v6 = v5;
        *(_WORD *)(v6 + 20) = 4;
      }
      uint64_t v7 = *(void *)(*(void *)v4 + 24);
      if (v7) {
        xmmword_1EB21CA50(v7);
      }
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!sub_1B0CC3F2C((uint64_t)v4, 1u))
    {
      uint64_t v9 = *((void *)v4 + 16);
      if ((*(_WORD *)(v9 + 84) & 0x9000) != 0)
      {
        sub_1B0D18980(v9 + 64, v8);
      }
      else
      {
        *(void *)(v9 + 64) = v8;
        *(_WORD *)(v9 + 84) = 4;
      }
      uint64_t v10 = *(void *)(*(void *)v4 + 24);
      if (v10) {
        xmmword_1EB21CA50(v10);
      }
    }
    sqlite3_step(v4);
    return sqlite3_reset(v4);
  }
  return result;
}

uint64_t sub_1B0D923DC(uint64_t *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, unsigned int a9)
{
  uint64_t v35 = 0;
  uint64_t v16 = sub_1B0D7D3B4(a1, 11, &v35, 0);
  if (!v16)
  {
    int v17 = (uint64_t *)v35;
    if (!sub_1B0CC3F2C((uint64_t)v35, 0))
    {
      uint64_t v18 = v17[16];
      if ((*(_WORD *)(v18 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v18, a2);
      }
      else
      {
        *(void *)uint64_t v18 = a2;
        *(_WORD *)(v18 + 20) = 4;
      }
      uint64_t v19 = *(void *)(*v17 + 24);
      if (v19) {
        xmmword_1EB21CA50(v19);
      }
    }
    if (!sub_1B0CC3F2C((uint64_t)v17, 1u))
    {
      uint64_t v20 = v17[16];
      if ((*(_WORD *)(v20 + 84) & 0x9000) != 0)
      {
        sub_1B0D18980(v20 + 64, a3);
      }
      else
      {
        *(void *)(v20 + 64) = a3;
        *(_WORD *)(v20 + 84) = 4;
      }
      uint64_t v21 = *(void *)(*v17 + 24);
      if (v21) {
        xmmword_1EB21CA50(v21);
      }
    }
    if (!sub_1B0CC3F2C((uint64_t)v17, 2u))
    {
      uint64_t v22 = v17[16];
      if ((*(_WORD *)(v22 + 148) & 0x9000) != 0)
      {
        sub_1B0D18980(v22 + 128, a4);
      }
      else
      {
        *(void *)(v22 + 128) = a4;
        *(_WORD *)(v22 + 148) = 4;
      }
      uint64_t v23 = *(void *)(*v17 + 24);
      if (v23) {
        xmmword_1EB21CA50(v23);
      }
    }
    if (!sub_1B0CC3F2C((uint64_t)v17, 3u))
    {
      uint64_t v24 = v17[16];
      if ((*(_WORD *)(v24 + 212) & 0x9000) != 0)
      {
        sub_1B0D18980(v24 + 192, a5);
      }
      else
      {
        *(void *)(v24 + 192) = a5;
        *(_WORD *)(v24 + 212) = 4;
      }
      uint64_t v25 = *(void *)(*v17 + 24);
      if (v25) {
        xmmword_1EB21CA50(v25);
      }
    }
    if (a7)
    {
      unint64_t v26 = sqlite3_mprintf("%lld %lld", a6, a7);
      if (!v26) {
        return 7;
      }
      sub_1B0CC3DB8(v17, 5, v26, -1, (uint64_t (*)(uint64_t))sqlite3_free, 1u);
    }
    else if (!sub_1B0CC3F2C((uint64_t)v17, 4u))
    {
      uint64_t v27 = v17[16];
      if ((*(_WORD *)(v27 + 276) & 0x9000) != 0)
      {
        sub_1B0D18980(v27 + 256, a6);
      }
      else
      {
        *(void *)(v27 + 256) = a6;
        *(_WORD *)(v27 + 276) = 4;
      }
      uint64_t v28 = *(void *)(*v17 + 24);
      if (v28) {
        xmmword_1EB21CA50(v28);
      }
    }
    if ((a9 & 0x80000000) != 0)
    {
      sub_1B0CE1978(98740);
    }
    else if (!sub_1B0CC3F2C((uint64_t)v17, 5u))
    {
      if (a8)
      {
        unsigned int v29 = sub_1B0C79BBC(v17[16] + 320, a8, a9, 0, 0);
        if (v29)
        {
          unsigned int v30 = v29;
          uint64_t v31 = *v17;
          *(_DWORD *)(v31 + 80) = v30;
          sub_1B0D0E714(v31, v30);
          sub_1B0D1806C(*v17, v30);
        }
      }
      uint64_t v32 = *(void *)(*v17 + 24);
      if (v32) {
        xmmword_1EB21CA50(v32);
      }
    }
    sqlite3_step((sqlite3_stmt *)v17);
    uint64_t v16 = sqlite3_reset((sqlite3_stmt *)v17);
    if (!sub_1B0CC3F2C((uint64_t)v17, 5u))
    {
      uint64_t v33 = *(void *)(*v17 + 24);
      if (v33) {
        xmmword_1EB21CA50(v33);
      }
    }
  }
  return v16;
}

uint64_t sub_1B0D92720(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = *(void **)(result + 16);
    sub_1B0D92720(*v1);
    while (1)
    {
      uint64_t v2 = (void *)v1[1];
      uint64_t v3 = (void *)v1[8];
      if (v3 != v1 + 9 && v3 != 0)
      {
        uint64_t v5 = &off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_14;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v3);
        --qword_1EB220150;
        off_1EB21C9E8(v3);
        uint64_t v3 = (void *)xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0) {
          break;
        }
      }
LABEL_15:
      uint64_t v6 = v1[6];
      if (!v6) {
        goto LABEL_22;
      }
      uint64_t v7 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_21;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v6);
      --qword_1EB220150;
      off_1EB21C9E8(v6);
      uint64_t v6 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v7 = &xmmword_1EB21CA50;
LABEL_21:
        (*v7)(v6);
      }
LABEL_22:
      uint64_t v8 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v1);
        --qword_1EB220150;
        uint64_t result = off_1EB21C9E8(v1);
        uint64_t v1 = (void *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_4;
        }
        uint64_t v8 = &xmmword_1EB21CA50;
      }
      uint64_t result = (*v8)(v1);
LABEL_4:
      uint64_t v1 = v2;
      if (!v2) {
        return result;
      }
    }
    uint64_t v5 = &xmmword_1EB21CA50;
LABEL_14:
    (*v5)(v3);
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1B0D928E4(uint64_t a1, int a2)
{
  sub_1B0D91878(a1);
  if (!a2
    || (uint64_t v10 = 0, result = sub_1B0D7D3B4((uint64_t *)a1, 2, &v10, 0), !result)
    && (v5 = v10, sqlite3_step(v10), uint64_t result = sqlite3_reset(v5), !result))
  {
    uint64_t v10 = 0;
    uint64_t result = sub_1B0D7D3B4((uint64_t *)a1, 3, &v10, 0);
    if (!result)
    {
      uint64_t v6 = v10;
      sqlite3_step(v10);
      uint64_t result = sqlite3_reset(v6);
      if (!result)
      {
        uint64_t v10 = 0;
        uint64_t result = sub_1B0D7D3B4((uint64_t *)a1, 4, &v10, 0);
        if (!result)
        {
          uint64_t v7 = v10;
          sqlite3_step(v10);
          uint64_t result = sqlite3_reset(v7);
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 462))
  {
    if (!result)
    {
      uint64_t v10 = 0;
      uint64_t result = sub_1B0D7D3B4((uint64_t *)a1, 5, &v10, 0);
      if (!result)
      {
        uint64_t v8 = v10;
        sqlite3_step(v10);
        uint64_t result = sqlite3_reset(v8);
      }
    }
  }
  if (*(unsigned char *)(a1 + 461) && !result)
  {
    uint64_t v10 = 0;
    uint64_t result = sub_1B0D7D3B4((uint64_t *)a1, 6, &v10, 0);
    if (!result)
    {
      uint64_t v9 = v10;
      sqlite3_step(v10);
      return sqlite3_reset(v9);
    }
  }
  return result;
}

uint64_t sub_1B0D92A28(uint64_t a1, uint64_t a2, uint64_t a3, int a4, _DWORD *a5)
{
  uint64_t v28 = 0;
  int v27 = 0;
  unint64_t v26 = 0;
  int v25 = 0;
  if (a3)
  {
    uint64_t v9 = *(uint64_t **)(a1 + 72);
    uint64_t v10 = *v9;
    unsigned int v29 = 0;
    uint64_t v11 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t ***))(v10 + 24))(v9, a3, 0xFFFFFFFFLL, &v29);
    if (!v11)
    {
      int *v29 = v9;
      int v12 = v29;
      if (*(int *)v10 >= 1
        && (v13 = (*(uint64_t (**)(uint64_t **, uint64_t))(v10 + 48))(v29, a2), int v12 = v29, v13))
      {
        uint64_t v11 = v13;
        (*(void (**)(uint64_t **))(v10 + 32))(v29);
      }
      else
      {
        int v14 = *(uint64_t (**)(uint64_t **, char **, int *, char *, uint64_t *, int *))(v10 + 40);
        unsigned int v15 = v14(v12, &v26, &v25, (char *)&v28 + 4, &v28, &v27);
        if (v15)
        {
          unsigned int v16 = v15;
          int v17 = 0;
        }
        else
        {
          int v17 = 0;
          do
          {
            if (v27 >= v17) {
              int v17 = v27 + 1;
            }
            unsigned int v16 = 1;
            if (v27 < 0) {
              break;
            }
            if (!v26 || v25 < 1) {
              break;
            }
            unsigned int v20 = sub_1B0D92C38(a1, a4, v27, *(void *)(a1 + 496) + 8, v26, v25);
            if (v20)
            {
              unsigned int v16 = v20;
              break;
            }
            uint64_t v21 = 0;
            uint64_t v22 = 40;
            while (++v21 < *(int *)(a1 + 488))
            {
              uint64_t v23 = *(void *)(a1 + 496);
              uint64_t v24 = *(unsigned int *)(v23 + v22);
              if (v25 >= (int)v24)
              {
                unsigned int v16 = sub_1B0D92C38(a1, a4, v27, v23 + v22 + 8, v26, v24);
                v22 += 40;
                if (v16) {
                  goto LABEL_9;
                }
              }
              else
              {
                v22 += 40;
              }
            }
            unsigned int v16 = v14(v12, &v26, &v25, (char *)&v28 + 4, &v28, &v27);
          }
          while (!v16);
        }
LABEL_9:
        (*(void (**)(uint64_t **))(v10 + 32))(v12);
        *a5 += v17;
        if (v16 == 101) {
          return 0;
        }
        else {
          return v16;
        }
      }
    }
  }
  else
  {
    uint64_t v11 = 0;
    *a5 = 0;
  }
  return v11;
}

uint64_t sub_1B0D92C38(uint64_t a1, int a2, int a3, uint64_t a4, char *a5, uint64_t a6)
{
  unsigned int v24 = 0;
  if (a4 && *(void *)(a4 + 24))
  {
    int v12 = sub_1B0D7D35C;
    if (*(unsigned char *)a4 == 1) {
      int v12 = sub_1B0C7E150;
    }
    int v13 = v12(a5, a6);
    uint64_t v14 = *(void *)(a4 + 24);
    if (v14)
    {
      unsigned int v15 = (int *)(v14 + 16 * ((*(_DWORD *)(a4 + 16) - 1) & v13));
      int v18 = *v15;
      unsigned int v16 = v15 + 2;
      int v17 = v18;
      if (*(unsigned char *)a4 == 1) {
        uint64_t v19 = sub_1B0C7E1B8;
      }
      else {
        uint64_t v19 = sub_1B0D7D394;
      }
      while (v17)
      {
        unsigned int v16 = *(_DWORD **)v16;
        if (!v16) {
          break;
        }
        --v17;
        if (!((unsigned int (*)(void, void, char *, uint64_t))v19)(*((void *)v16 + 3), v16[8], a5, a6))
        {
          unsigned int v20 = (int *)*((void *)v16 + 2);
          int v25 = v20;
          if (v20) {
            *(_DWORD *)(a1 + 508) = *(_DWORD *)(a1 + 508) - a6 - *v20 - 40;
          }
          goto LABEL_15;
        }
      }
    }
  }
  int v25 = 0;
LABEL_15:
  if (sub_1B0D8F61C(&v25, *(void *)(a1 + 512), a2, a3, &v24))
  {
    uint64_t v21 = v25;
    if (v21 == (int *)sub_1B0C7DD6C(a4, a5, a6, (uint64_t)v25))
    {
      if (v21)
      {
        uint64_t v23 = (void (**)(int *))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v21);
          --qword_1EB220150;
          off_1EB21C9E8(v21);
          uint64_t v21 = (int *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            return 7;
          }
          uint64_t v23 = (void (**)(int *))&xmmword_1EB21CA50;
        }
        (*v23)(v21);
      }
      return 7;
    }
  }
  uint64_t result = v24;
  if (!v24) {
    *(_DWORD *)(a1 + 508) += a6 + *v25 + 40;
  }
  return result;
}

uint64_t sub_1B0D92E5C(uint64_t a1, int a2, int a3)
{
  v345 = 0;
  uint64_t v346 = 0;
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v8 = sub_1B0C7FC94(808);
  if (!v8) {
    return 7;
  }
  uint64_t v9 = v8;
  int v340 = a3;
  *(void *)&v349[0] = 0;
  LODWORD(v346) = 0;
  uint64_t v6 = sub_1B0D7D3B4((uint64_t *)a1, 22, (sqlite3_stmt **)v349, 0);
  uint64_t v10 = &qword_1EB21FB68[147];
  if (!v6)
  {
    unsigned int v16 = *(sqlite3_stmt **)&v349[0];
    if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
    {
      uint64_t v17 = *((void *)v16 + 16);
      if ((*(_WORD *)(v17 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v17, 1);
      }
      else
      {
        *(void *)uint64_t v17 = 1;
        *(_WORD *)(v17 + 20) = 4;
      }
      uint64_t v18 = *(void *)(*(void *)v16 + 24);
      if (v18) {
        xmmword_1EB21CA50(v18);
      }
    }
    if (sqlite3_step(v16) == 100)
    {
      uint64_t v19 = sqlite3_column_blob(v16, 0);
      int v20 = sqlite3_column_bytes(v16, 0);
      if (v19)
      {
        unsigned int v21 = v20;
        if (v20 >= 1)
        {
          if (sqlite3_initialize() || (uint64_t v22 = (char *)sub_1B0C8E1B8(0, v21)) == 0)
          {
            sqlite3_reset(v16);
            uint64_t v6 = 7;
            goto LABEL_6;
          }
          HIDWORD(v346) = v21;
          v345 = v22;
          memcpy(v22, v19, v21);
        }
        LODWORD(v346) = v21;
      }
    }
    uint64_t v6 = sqlite3_reset(v16);
    unsigned int v348 = v6;
    if (!v6 && a2 >= 1)
    {
      int v338 = 0;
      sqlite3_int64 v343 = 0;
      if (a3 <= 2) {
        uint64_t v23 = 2;
      }
      else {
        uint64_t v23 = a3;
      }
      uint64_t v333 = v23;
      v330 = (uint64_t *)(v9 + 80);
      uint64_t v331 = v9 + 696;
      uint64_t v327 = v9 + 96;
      v328 = (unsigned int *)(v9 + 88);
      v329 = (uint64_t *)(v9 + 64);
      uint64_t v334 = v9;
      uint64_t v339 = a1;
      uint64_t v341 = v9 + 720;
      while (1)
      {
        uint64_t v26 = *(int *)(a1 + 488);
        v344 = 0;
        sub_1B0D7D3B4((uint64_t *)a1, 28, &v344, 0);
        int v27 = v344;
        if (!sub_1B0CC3F2C((uint64_t)v344, 0))
        {
          uint64_t v28 = *((void *)v27 + 16);
          if ((*(_WORD *)(v28 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v28, v333);
          }
          else
          {
            *(void *)uint64_t v28 = v333;
            *(_WORD *)(v28 + 20) = 4;
          }
          uint64_t v29 = *(void *)(*(void *)v27 + 24);
          if (v29) {
            xmmword_1EB21CA50(v29);
          }
        }
        if (sqlite3_step(v27) == 100)
        {
          sqlite3_int64 v343 = sqlite3_column_int64(v27, 0);
          int v30 = sqlite3_column_int(v27, 1);
        }
        else
        {
          int v30 = -1;
        }
        uint64_t v31 = v26 << 10;
        int v347 = v30;
        uint64_t v6 = sqlite3_reset(v27);
        int v32 = 0;
        unsigned int v348 = v6;
        if (v6) {
          goto LABEL_89;
        }
        int v33 = v346;
        if (!v346) {
          goto LABEL_88;
        }
        *(void *)&v349[0] = 0;
        uint64_t v34 = (int)v346 - 1;
        uint64_t v35 = v345;
        if (v345[v34] < 0) {
          goto LABEL_63;
        }
        int v36 = v34 & ((int)v34 >> 31);
        BOOL v37 = &v345[v34 - 1];
        int v38 = v346;
        while (--v38 >= 1)
        {
          int v39 = *v37--;
          if ((v39 & 0x80000000) == 0) {
            goto LABEL_65;
          }
        }
        int v38 = v36;
        if ((int)v346 > 0)
        {
LABEL_63:
          uint64_t v40 = 0;
          int v41 = 0;
          uint64_t v6 = 267;
          unsigned int v348 = 267;
          if (v30 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
LABEL_65:
          if (v38 >= 1) {
            int v42 = 1;
          }
          else {
            int v42 = v38;
          }
          int v43 = v42 - 1;
          uint64_t v44 = v38 + 4294967294;
          while (v38 >= 2)
          {
            int v45 = v345[v44--];
            --v38;
            if ((v45 & 0x80000000) == 0) {
              goto LABEL_73;
            }
          }
          int v38 = v43;
LABEL_73:
          LODWORD(v346) = v38;
          uint64_t v46 = v38 + (uint64_t)(int)sub_1B0D7D81C(&v345[v38], (unint64_t *)v349);
          uint64_t v47 = (unsigned __int8 *)&v35[v46];
          int v41 = v35[v46];
          if ((v41 & 0x80) != 0)
          {
            int v41 = v41 & 0x7F | (v47[1] << 7);
            uint64_t v9 = v334;
            if ((char)v47[1] < 0)
            {
              int v41 = v41 & 0x3FFF | (v47[2] << 14);
              if ((char)v47[2] < 0)
              {
                int v41 = v41 & 0x1FFFFF | (v47[3] << 21);
                if ((char)v47[3] < 0)
                {
                  int v41 = v41 & 0xFFFFFFF | ((v47[4] & 7) << 28);
                  int v48 = 5;
                }
                else
                {
                  int v48 = 4;
                }
              }
              else
              {
                int v48 = 3;
              }
            }
            else
            {
              int v48 = 2;
            }
          }
          else
          {
            int v48 = 1;
            uint64_t v9 = v334;
          }
          if (v48 + v46 == v33) {
            uint64_t v6 = 0;
          }
          else {
            uint64_t v6 = 267;
          }
          uint64_t v40 = *(void *)&v349[0];
          unsigned int v348 = v6;
          if (v30 < 0) {
            goto LABEL_91;
          }
        }
        if (v343 % v31 < v40 % v31)
        {
          int v32 = 0;
          LODWORD(v346) = v33;
LABEL_88:
          a1 = v339;
LABEL_89:
          uint64_t v40 = v343;
          if (v30 < 1) {
            goto LABEL_540;
          }
          goto LABEL_97;
        }
LABEL_91:
        int v49 = v340;
        if (v30 > v340) {
          int v49 = v30;
        }
        if (v49 >= v41) {
          int v30 = v41;
        }
        else {
          int v30 = v49;
        }
        int v347 = v30;
        int v338 = 1;
        int v32 = 1;
        a1 = v339;
        if (v30 < 1)
        {
LABEL_540:
          uint64_t v50 = v6;
LABEL_541:
          uint64_t v6 = v50;
LABEL_542:
          if (v338)
          {
            if (!v6)
            {
              *(void *)&v349[0] = 0;
              uint64_t v6 = sub_1B0D7D3B4((uint64_t *)a1, 23, (sqlite3_stmt **)v349, 0);
              if (!v6)
              {
                v305 = *(uint64_t **)&v349[0];
                if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
                {
                  uint64_t v306 = v305[16];
                  if ((*(_WORD *)(v306 + 20) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v306, 1);
                  }
                  else
                  {
                    *(void *)uint64_t v306 = 1;
                    *(_WORD *)(v306 + 20) = 4;
                  }
                  uint64_t v307 = *(void *)(*v305 + 24);
                  if (v307) {
                    xmmword_1EB21CA50(v307);
                  }
                }
                uint64_t v308 = v346;
                if ((v346 & 0x80000000) != 0)
                {
                  sub_1B0CE1978(98740);
                }
                else
                {
                  v309 = v345;
                  if (!sub_1B0CC3F2C((uint64_t)v305, 1u))
                  {
                    if (v309)
                    {
                      unsigned int v310 = sub_1B0C79BBC(v305[16] + 64, v309, v308, 0, 0);
                      if (v310)
                      {
                        unsigned int v311 = v310;
                        uint64_t v312 = *v305;
                        *(_DWORD *)(v312 + 80) = v311;
                        sub_1B0D0E714(v312, v311);
                        sub_1B0D1806C(*v305, v311);
                      }
                    }
                    uint64_t v313 = *(void *)(*v305 + 24);
                    if (v313) {
                      xmmword_1EB21CA50(v313);
                    }
                  }
                }
                sqlite3_step((sqlite3_stmt *)v305);
                uint64_t v6 = sqlite3_reset((sqlite3_stmt *)v305);
                if (!sub_1B0CC3F2C((uint64_t)v305, 1u))
                {
                  uint64_t v314 = *(void *)(*v305 + 24);
                  if (v314) {
                    xmmword_1EB21CA50(v314);
                  }
                }
                uint64_t v9 = v334;
              }
            }
          }
          break;
        }
LABEL_97:
        int v342 = a2;
        uint64_t v50 = 267;
        if (v40 < 0 || v40 > v31 << 32) {
          goto LABEL_541;
        }
        sqlite3_int64 v343 = v40;
        bzero((void *)v9, 0x328uLL);
        *(_DWORD *)(v9 + 712) = 1;
        if (v6) {
          goto LABEL_41;
        }
        *(void *)&v349[0] = 0;
        uint64_t v332 = v343 + 1;
        a2 = v342;
        uint64_t v24 = v341;
        if (sub_1B0D7D3B4((uint64_t *)a1, 8, (sqlite3_stmt **)v349, 0))
        {
          int __s1 = 0;
        }
        else
        {
          uint64_t v52 = *(sqlite3_stmt **)&v349[0];
          if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
          {
            uint64_t v53 = *((void *)v52 + 16);
            if ((*(_WORD *)(v53 + 20) & 0x9000) != 0)
            {
              sub_1B0D18980(v53, v332);
            }
            else
            {
              *(void *)uint64_t v53 = v332;
              *(_WORD *)(v53 + 20) = 4;
            }
            uint64_t v57 = *(void *)(*(void *)v52 + 24);
            if (v57) {
              xmmword_1EB21CA50(v57);
            }
          }
          uint64_t v58 = v10;
          sqlite3_step(v52);
          int v59 = sqlite3_column_int(v52, 0);
          uint64_t v60 = sqlite3_reset(v52);
          unsigned int v348 = v60;
          int __s1 = v59;
          if (v59)
          {
            uint64_t v6 = v60;
            if (!v32)
            {
              uint64_t v10 = v58;
              goto LABEL_134;
            }
            uint64_t v10 = v58;
            if (__s1 != 1) {
              goto LABEL_134;
            }
            int __s1 = 1;
          }
          else
          {
            int __s1 = 0;
            uint64_t v10 = v58;
          }
        }
        *(void *)&v349[0] = 0;
        uint64_t v51 = sub_1B0D7D3B4((uint64_t *)a1, 15, (sqlite3_stmt **)v349, 0);
        if (v51)
        {
          uint64_t v6 = v51;
LABEL_104:
          unsigned int v348 = v6;
          goto LABEL_42;
        }
        uint64_t v54 = *(sqlite3_stmt **)&v349[0];
        if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
        {
          uint64_t v55 = v343 + 2;
          uint64_t v56 = *((void *)v54 + 16);
          if ((*(_WORD *)(v56 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v56, v55);
          }
          else
          {
            *(void *)uint64_t v56 = v55;
            *(_WORD *)(v56 + 20) = 4;
          }
          uint64_t v61 = *(void *)(*(void *)v54 + 24);
          if (v61) {
            xmmword_1EB21CA50(v61);
          }
        }
        if (!sub_1B0CC3F2C((uint64_t)v54, 1u))
        {
          uint64_t v62 = (v332 & 0xFFFFFFFFFFFFFC00) + 1024;
          uint64_t v63 = *((void *)v54 + 16);
          if ((*(_WORD *)(v63 + 84) & 0x9000) != 0)
          {
            sub_1B0D18980(v63 + 64, v62);
          }
          else
          {
            *(void *)(v63 + 64) = v62;
            *(_WORD *)(v63 + 84) = 4;
          }
          uint64_t v64 = *(void *)(*(void *)v54 + 24);
          if (v64) {
            xmmword_1EB21CA50(v64);
          }
        }
        if (sqlite3_step(v54) == 100)
        {
          int v65 = sqlite3_column_type(v54, 0);
          uint64_t v6 = sqlite3_reset(v54);
          unsigned int v348 = v6;
          if (v65 == 5) {
            *(_DWORD *)(v9 + 712) |= 2u;
          }
        }
        else
        {
          uint64_t v6 = sqlite3_reset(v54);
          unsigned int v348 = v6;
        }
LABEL_134:
        if (v6) {
          goto LABEL_42;
        }
        *(void *)&v349[0] = 0;
        *(_OWORD *)uint64_t v341 = 0u;
        *(_OWORD *)(v341 + 16) = 0u;
        *(_OWORD *)(v341 + 32) = 0u;
        *(_OWORD *)(v341 + 48) = 0u;
        *(_OWORD *)(v341 + 64) = 0u;
        *(void *)(v341 + 80) = 0;
        if (sqlite3_initialize())
        {
          *(void *)uint64_t v341 = 0;
          uint64_t v6 = 7;
          goto LABEL_104;
        }
        int v66 = (void *)sub_1B0C7FC94(8 * v30);
        *(void *)uint64_t v341 = v66;
        if (!v66)
        {
          uint64_t v6 = 7;
          goto LABEL_104;
        }
        bzero(v66, 8 * v30);
        uint64_t v6 = sub_1B0D7D3B4((uint64_t *)a1, 12, (sqlite3_stmt **)v349, 0);
        if (v6) {
          goto LABEL_104;
        }
        unint64_t v67 = *(sqlite3_stmt **)&v349[0];
        if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
        {
          uint64_t v68 = *((void *)v67 + 16);
          if ((*(_WORD *)(v68 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v68, v343);
          }
          else
          {
            *(void *)uint64_t v68 = v343;
            *(_WORD *)(v68 + 20) = 4;
          }
          uint64_t v69 = *(void *)(*(void *)v67 + 24);
          if (v69) {
            xmmword_1EB21CA50(v69);
          }
        }
        uint64_t v70 = 0;
        unint64_t v71 = 0;
        while (1)
        {
          BOOL v72 = sqlite3_step(v67) != 100 || v71 >= v30;
          BOOL v73 = v72;
          BOOL __src = v73;
          if (v72) {
            break;
          }
          sqlite3_int64 v74 = sqlite3_column_int64(v67, 1);
          sqlite3_int64 v75 = sqlite3_column_int64(v67, 2);
          sqlite3_int64 v76 = sqlite3_column_int64(v67, 3);
          uint64_t v77 = v10;
          uint64_t v78 = sqlite3_column_blob(v67, 4);
          int v79 = sqlite3_column_bytes(v67, 4);
          int v80 = v78;
          uint64_t v10 = v77;
          uint64_t v9 = v334;
          unsigned int v81 = sub_1B0D7D1E8(v71, 0, v74, v75, v76, v80, v79, (uint64_t *)(*(void *)(v334 + 720) + v70));
          ++*(_DWORD *)(v334 + 728);
          ++v71;
          v70 += 8;
          if (v81)
          {
            unsigned int v82 = v81;
            goto LABEL_157;
          }
        }
        unsigned int v82 = 0;
LABEL_157:
        a1 = v339;
        uint64_t v24 = v341;
        unsigned int v83 = sqlite3_reset(v67);
        if (__src) {
          uint64_t v6 = v83;
        }
        else {
          uint64_t v6 = v82;
        }
        unsigned int v348 = v6;
        a2 = v342;
        if (v6) {
          goto LABEL_42;
        }
        if (*(_DWORD *)(v9 + 728) != v30)
        {
          uint64_t v6 = 0;
          goto LABEL_42;
        }
        *(void *)(v9 + 736) = v331;
        uint64_t v84 = sub_1B0D7D91C(v339, (uint64_t *)v341, *(const void **)(v9 + 696), *(_DWORD *)(v9 + 704));
        unsigned int v348 = v84;
        if (v84)
        {
          uint64_t v6 = v84;
          goto LABEL_42;
        }
        uint64_t v85 = sub_1B0D7E204(v339, v341);
        uint64_t v50 = v85;
        unsigned int v348 = v85;
        if (v85 != 100 && v85)
        {
          sub_1B0D7C0A8(v341);
          goto LABEL_541;
        }
        if (!v32 || (uint64_t v86 = (__s1 - 1), __s1 < 1))
        {
          *(void *)&v349[0] = 0;
          v352[0] = 0;
          uint64_t v6 = sub_1B0D7D3B4((uint64_t *)v339, 29, (sqlite3_stmt **)v349, 0);
          if (!v6)
          {
            unint64_t v90 = *(sqlite3_stmt **)&v349[0];
            if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
            {
              uint64_t v91 = *((void *)v90 + 16);
              if ((*(_WORD *)(v91 + 20) & 0x9000) != 0)
              {
                sub_1B0D18980(v91, v343);
              }
              else
              {
                *(void *)uint64_t v91 = v343;
                *(_WORD *)(v91 + 20) = 4;
              }
              uint64_t v94 = *(void *)(*(void *)v90 + 24);
              if (v94) {
                xmmword_1EB21CA50(v94);
              }
            }
            uint64_t v95 = *(int *)(v334 + 728);
            if (!sub_1B0CC3F2C((uint64_t)v90, 1u))
            {
              uint64_t v96 = *((void *)v90 + 16);
              if ((*(_WORD *)(v96 + 84) & 0x9000) != 0)
              {
                sub_1B0D18980(v96 + 64, v95);
              }
              else
              {
                *(void *)(v96 + 64) = v95;
                *(_WORD *)(v96 + 84) = 4;
              }
              uint64_t v119 = *(void *)(*(void *)v90 + 24);
              if (v119) {
                xmmword_1EB21CA50(v119);
              }
            }
            if (sqlite3_step(v90) == 100) {
              int v120 = sqlite3_column_int(v90, 0);
            }
            else {
              int v120 = 0;
            }
            uint64_t v6 = sqlite3_reset(v90);
            if (!v6)
            {
              uint64_t v6 = sub_1B0D7D3B4((uint64_t *)v339, 10, v352, 0);
              if (!v6)
              {
                uint64_t v121 = v352[0];
                if (sqlite3_step(v352[0]) == 100)
                {
                  sqlite3_int64 v122 = sqlite3_column_int64(v121, 0);
                  *(void *)(v334 + 24) = v122;
                  *(void *)(v334 + 32) = v122 + 16 * v120 - 1;
                }
                uint64_t v6 = sqlite3_reset(v121);
                if (!v6)
                {
                  uint64_t v6 = sub_1B0D91E50((uint64_t *)v339, *(void *)(v334 + 32), 0, 0);
                  if (!v6)
                  {
                    *(_DWORD *)(v334 + 16) = __s1;
                    uint64_t v123 = *(void *)(v334 + 24);
                    *(void *)(v334 + 96) = v123 + v120;
                    *(void *)(v334 + 136) = v123 + 2 * v120;
                    *(void *)(v334 + 176) = v123 + 3 * v120;
                    *(void *)(v334 + 216) = v123 + 4 * v120;
                    *(void *)(v334 + 256) = v123 + 5 * v120;
                    *(void *)(v334 + 296) = v123 + 6 * v120;
                    *(void *)(v334 + 336) = v123 + 7 * v120;
                    *(void *)(v334 + 376) = v123 + 8 * v120;
                    *(void *)(v334 + 8) = v343;
                    *(_DWORD *)uint64_t v334 = v120;
                    *(void *)(v334 + 56) = v123;
                    *(void *)(v334 + 416) = v123 + 9 * v120;
                    *(void *)(v334 + 456) = v123 + 10 * v120;
                    *(void *)(v334 + 496) = v123 + 11 * v120;
                    *(void *)(v334 + 536) = v123 + 12 * v120;
                    *(void *)(v334 + 576) = v123 + 13 * v120;
                    *(void *)(v334 + 616) = v123 + 14 * v120;
                    *(void *)(v334 + 656) = v123 - v120 + 16 * v120;
                  }
                }
              }
            }
          }
          goto LABEL_360;
        }
        __s1a = *(void **)(v9 + 776);
        int v87 = *(_DWORD *)(v9 + 784);
        v352[0] = 0;
        uint64_t v6 = sub_1B0D7D3B4((uint64_t *)v339, 32, v352, 0);
        if (!v6)
        {
          v88 = v352[0];
          if (!sub_1B0CC3F2C((uint64_t)v352[0], 0))
          {
            uint64_t v89 = *((void *)v88 + 16);
            if ((*(_WORD *)(v89 + 20) & 0x9000) != 0)
            {
              sub_1B0D18980(v89, v332);
            }
            else
            {
              *(void *)uint64_t v89 = v332;
              *(_WORD *)(v89 + 20) = 4;
            }
            uint64_t v92 = *(void *)(*(void *)v88 + 24);
            if (v92) {
              xmmword_1EB21CA50(v92);
            }
          }
          if (!sub_1B0CC3F2C((uint64_t)v88, 1u))
          {
            uint64_t v93 = *((void *)v88 + 16);
            if ((*(_WORD *)(v93 + 84) & 0x9000) != 0)
            {
              sub_1B0D18980(v93 + 64, v86);
            }
            else
            {
              *(void *)(v93 + 64) = v86;
              *(_WORD *)(v93 + 84) = 4;
            }
            uint64_t v97 = *(void *)(*(void *)v88 + 24);
            if (v97) {
              xmmword_1EB21CA50(v97);
            }
          }
          if (sqlite3_step(v88) == 100)
          {
            sqlite3_int64 v322 = sqlite3_column_int64(v88, 1);
            sqlite3_int64 v98 = sqlite3_column_int64(v88, 2);
            int v99 = sqlite3_column_text(v88, 3);
            if (v99)
            {
              int v100 = *v99;
              if ((v100 - 48) > 9)
              {
                uint64_t v104 = 0;
                uint64_t v102 = 0;
              }
              else
              {
                uint64_t v101 = 0;
                uint64_t v102 = 0;
                do
                {
                  uint64_t v102 = (v100 - 48) + 10 * v102;
                  unsigned int v103 = v101 + 1;
                  int v100 = v99[++v101];
                }
                while ((v100 - 48) < 0xA);
                uint64_t v104 = v103;
              }
              while (1)
              {
                int v108 = v99[v104];
                if (v108 != 32) {
                  break;
                }
                ++v104;
              }
              BOOL v109 = v108 == 45;
              if (v108 == 45) {
                int v110 = v104 + 1;
              }
              else {
                int v110 = v104;
              }
              uint64_t v111 = 1;
              if (v109) {
                uint64_t v111 = -1;
              }
              uint64_t v112 = v110;
              int v113 = v99[v110];
              if ((v113 - 48) > 9)
              {
                uint64_t v114 = 0;
              }
              else
              {
                uint64_t v114 = 0;
                v115 = &v99[v112 + 1];
                do
                {
                  uint64_t v114 = (v113 - 48) + 10 * v114;
                  int v116 = *v115++;
                  int v113 = v116;
                }
                while ((v116 - 48) < 0xA);
              }
              uint64_t v107 = v114 * v111;
              *(void *)(v334 + 40) = v107;
            }
            else
            {
              uint64_t v102 = 0;
              uint64_t v107 = *(void *)(v334 + 40);
            }
            if (v107 < 0)
            {
              *(void *)(v334 + 40) = -v107;
              uint64_t v107 = 1;
            }
            *(unsigned char *)(v334 + 48) = v107 == 0;
            int v117 = sqlite3_column_bytes(v88, 4);
            __srca = (char *)sqlite3_column_blob(v88, 4);
            if (!__srca)
            {
              sqlite3_reset(v88);
              if (v117) {
                uint64_t v6 = 7;
              }
              else {
                uint64_t v6 = 267;
              }
              goto LABEL_360;
            }
            *(void *)&v349[0] = 0;
            uint64_t v118 = sub_1B0D7D3B4((uint64_t *)v339, 34, (sqlite3_stmt **)v349, 0);
            if (v118)
            {
              uint64_t v6 = v118;
              sqlite3_reset(v88);
              goto LABEL_360;
            }
            uint64_t v124 = *(sqlite3_stmt **)&v349[0];
            if (!sub_1B0CC3F2C(*(uint64_t *)&v349[0], 0))
            {
              uint64_t v125 = *((void *)v124 + 16);
              if ((*(_WORD *)(v125 + 20) & 0x9000) != 0)
              {
                sub_1B0D18980(v125, v102);
              }
              else
              {
                *(void *)uint64_t v125 = v102;
                *(_WORD *)(v125 + 20) = 4;
              }
              uint64_t v126 = *(void *)(*(void *)v124 + 24);
              if (v126) {
                xmmword_1EB21CA50(v126);
              }
            }
            int v127 = sqlite3_step(v124);
            BOOL v128 = v127 == 100;
            uint64_t v6 = sqlite3_reset(v124);
            if (!v6 && v127 == 100)
            {
              v351 = 0;
              int v350 = 0;
              uint64_t v129 = sub_1B0D7D634(v339, v98, &v351, &v350);
              char v130 = v351;
              if (v129)
              {
                uint64_t v6 = v129;
                BOOL v128 = 1;
                goto LABEL_282;
              }
              memset((char *)v349 + 8, 0, 48);
              *(void *)&v349[0] = v351;
              DWORD2(v349[0]) = v350;
              if (v351)
              {
                if (*v351) {
                  int v131 = sub_1B0D7D81C(v351 + 1, (unint64_t *)&v349[1]) + 1;
                }
                else {
                  int v131 = 1;
                }
                HIDWORD(v349[0]) = v131;
                do
                  uint64_t v6 = sub_1B0D96078((uint64_t *)v349);
                while (!v6 && *(void *)&v349[0]);
              }
              else
              {
                uint64_t v6 = 0;
              }
              uint64_t v132 = *((void *)&v349[1] + 1);
              int v133 = v349[2];
              if (v87 >= SLODWORD(v349[2])) {
                int v134 = v349[2];
              }
              else {
                int v134 = v87;
              }
              if (*((void *)&v349[1] + 1)) {
                BOOL v135 = __s1a == 0;
              }
              else {
                BOOL v135 = 1;
              }
              if (!v135 && v134 != 0)
              {
                int v137 = memcmp(__s1a, *((const void **)&v349[1] + 1), v134);
                if (v137)
                {
                  if (v137 <= 0) {
                    BOOL v128 = 0;
                  }
                }
                else if (v133 >= v87)
                {
                  BOOL v128 = 0;
                }
                goto LABEL_275;
              }
              if (SLODWORD(v349[2]) >= v87) {
                BOOL v128 = 0;
              }
              if (*((void *)&v349[1] + 1))
              {
LABEL_275:
                char v138 = &off_1EB21C9E8;
                if (dword_1EB21C9C0)
                {
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v132);
                  --qword_1EB220150;
                  off_1EB21C9E8(v132);
                  uint64_t v132 = xmmword_1EB2201B0;
                  if (!(void)xmmword_1EB2201B0) {
                    goto LABEL_281;
                  }
                  char v138 = &xmmword_1EB21CA50;
                }
                (*v138)(v132);
              }
LABEL_281:
              char v130 = v351;
LABEL_282:
              if (v130)
              {
                uint64_t v139 = (void (**)(char *))&off_1EB21C9E8;
                if (!dword_1EB21C9C0) {
                  goto LABEL_288;
                }
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v130);
                --qword_1EB220150;
                off_1EB21C9E8(v130);
                char v130 = (char *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v139 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_288:
                  (*v139)(v130);
                }
              }
            }
            if (v6 || !v128)
            {
LABEL_359:
              uint64_t v106 = sqlite3_reset(v352[0]);
              if (v6) {
                goto LABEL_360;
              }
            }
            else
            {
              uint64_t v140 = *__srca;
              if ((v140 - 1) >= 0xF)
              {
                sqlite3_reset(v352[0]);
                uint64_t v6 = 267;
                goto LABEL_360;
              }
              if ((int)v102 - (int)v322 + 1 >= 0) {
                int v141 = v102 - v322 + 1;
              }
              else {
                int v141 = v102 - v322 + 16;
              }
              int v142 = v141 >> 4;
              *(_DWORD *)uint64_t v334 = v142;
              *(void *)(v334 + 24) = v322;
              *(void *)(v334 + 32) = v102;
              *(void *)(v334 + 8) = v343;
              *(_DWORD *)(v334 + 16) = v86;
              if (v140 <= 0xE)
              {
                unint64_t v143 = 0;
                uint64x2_t v144 = (uint64x2_t)vdupq_n_s64(14 - (unint64_t)v140);
                uint64_t v145 = (void *)(v327 + 40 * v140);
                sqlite3_int64 v146 = v322;
                do
                {
                  int32x2_t v147 = vmovn_s64((int64x2_t)vcgeq_u64(v144, (uint64x2_t)vorrq_s8((int8x16_t)vdupq_n_s64(v143), (int8x16_t)xmmword_1B0DE1490)));
                  if (v147.i8[0]) {
                    *uint64_t v145 = v142 + v140 * (uint64_t)v142 + v146;
                  }
                  if (v147.i8[4]) {
                    v145[5] = (v140 + 2) * (uint64_t)v142 + v146;
                  }
                  v143 += 2;
                  v145 += 10;
                  v146 += 2 * v142;
                }
                while (((16 - v140) & 0xFFFFFFFFFFFFFFFELL) != v143);
              }
              uint64_t v148 = v334 + 40 * v140;
              int v151 = *(_DWORD *)(v148 + 92);
              v150 = (int *)(v148 + 92);
              int v149 = v151;
              size_t v152 = (uint64_t *)(v150 - 3);
              v153 = *(void **)(v150 - 3);
              *(void *)(v150 - 9) = v322 + v142 * (int)v140;
              int v154 = *(_DWORD *)(v339 + 456);
              if (v117 > v154) {
                int v154 = v117;
              }
              int v155 = v154 + 20;
              if (v149 < v154 + 20)
              {
                if (sqlite3_initialize() || (uint64_t v156 = sub_1B0C8E1B8((uint64_t)v153, v155)) == 0)
                {
                  sqlite3_reset(v352[0]);
                  uint64_t v6 = 7;
                  goto LABEL_360;
                }
                v153 = (void *)v156;
                int *v150 = v155;
                *size_t v152 = v156;
              }
              memcpy(v153, __srca, v117);
              *(_DWORD *)(v334 + 40 * v140 + 88) = v117;
              uint64_t v157 = *v152 + v117;
              *(void *)uint64_t v157 = 0;
              *(void *)(v157 + 8) = 0;
              *(_DWORD *)(v157 + 16) = 0;
              if ((v140 & 0x80000000) == 0)
              {
                while (1)
                {
                  memset(v349, 0, 56);
                  long long v158 = *(unsigned char **)(v334 + 40 * v140 + 80);
                  if (!v158)
                  {
LABEL_338:
                    uint64_t v6 = 0;
                    goto LABEL_339;
                  }
                  int v159 = *(_DWORD *)(v334 + 40 * v140 + 88);
                  memset(&v349[1], 0, 40);
                  *(void *)&v349[0] = v158;
                  DWORD2(v349[0]) = v159;
                  if (*v158) {
                    int v160 = sub_1B0D7D81C(v158 + 1, (unint64_t *)&v349[1]) + 1;
                  }
                  else {
                    int v160 = 1;
                  }
                  HIDWORD(v349[0]) = v160;
                  uint64_t v161 = sub_1B0D96078((uint64_t *)v349);
                  uint64_t v6 = v161;
                  BOOL v162 = v161 == 0;
                  if (*(void *)&v349[0] && !v161)
                  {
                    do
                    {
                      uint64_t v163 = sub_1B0D96078((uint64_t *)v349);
                      BOOL v162 = v163 == 0;
                      if (*(void *)&v349[0]) {
                        BOOL v164 = v163 == 0;
                      }
                      else {
                        BOOL v164 = 0;
                      }
                    }
                    while (v164);
                    uint64_t v6 = v163;
                  }
                  if (!v162) {
                    goto LABEL_339;
                  }
                  v165 = (void **)(v334 + 40 * v140 + 64);
                  size_t v166 = LODWORD(v349[2]);
                  uint64_t v167 = v334 + 40 * v140;
                  int v169 = *(_DWORD *)(v167 + 76);
                  v168 = (_DWORD *)(v167 + 76);
                  if (v169 < SLODWORD(v349[2]))
                  {
                    v170 = *v165;
                    if (sqlite3_initialize() || (uint64_t v171 = sub_1B0C8E1B8((uint64_t)v170, (int)v166)) == 0)
                    {
                      uint64_t v6 = 7;
                      goto LABEL_339;
                    }
                    _DWORD *v168 = v166;
                    *v165 = (void *)v171;
                  }
                  if ((int)v166 >= 1) {
                    memcpy(*v165, *((const void **)&v349[1] + 1), v166);
                  }
                  *(_DWORD *)(v334 + 40 * v140 + 72) = v166;
                  if (v140 < 1) {
                    goto LABEL_338;
                  }
                  v351 = 0;
                  int v350 = 0;
                  unsigned int v172 = v140 - 1;
                  uint64_t v173 = v334 + 40 * (v140 - 1);
                  sqlite3_int64 v174 = *(void *)&v349[1];
                  *(void *)(v173 + 56) = *(void *)&v349[1];
                  uint64_t v175 = sub_1B0D7D634(v339, v174, &v351, &v350);
                  uint64_t v6 = v175;
                  int v176 = v350;
                  int v177 = *(_DWORD *)(v339 + 456);
                  if (v350 > v177) {
                    int v177 = v350;
                  }
                  if (!v175)
                  {
                    v178 = (void **)(v173 + 80);
                    int v179 = v177 + 20;
                    uint64_t v180 = v334 + 40 * v172;
                    int v182 = *(_DWORD *)(v180 + 92);
                    v181 = (_DWORD *)(v180 + 92);
                    v183 = *v178;
                    if (v182 < v177 + 20)
                    {
                      if (sqlite3_initialize() || (uint64_t v187 = sub_1B0C8E1B8((uint64_t)v183, v179)) == 0)
                      {
                        uint64_t v6 = 7;
                        v184 = v351;
                        if (!v351) {
                          goto LABEL_339;
                        }
                        goto LABEL_353;
                      }
                      v183 = (void *)v187;
                      _DWORD *v181 = v179;
                      *v178 = (void *)v187;
                    }
                    memcpy(v183, v351, v176);
                    uint64_t v6 = 0;
                    *(_DWORD *)(v334 + 40 * v172 + 88) = v176;
                    v188 = (char *)*v178 + v176;
                    *(void *)v188 = 0;
                    *((void *)v188 + 1) = 0;
                    *((_DWORD *)v188 + 4) = 0;
                  }
                  v184 = v351;
                  if (!v351) {
                    goto LABEL_339;
                  }
LABEL_353:
                  v189 = (void (**)(char *))&off_1EB21C9E8;
                  if (!dword_1EB21C9C0) {
                    goto LABEL_358;
                  }
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v184);
                  --qword_1EB220150;
                  off_1EB21C9E8(v184);
                  v184 = (char *)xmmword_1EB2201B0;
                  if ((void)xmmword_1EB2201B0)
                  {
                    v189 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_358:
                    (*v189)(v184);
                  }
LABEL_339:
                  uint64_t v185 = *((void *)&v349[1] + 1);
                  if (*((void *)&v349[1] + 1))
                  {
                    v186 = &off_1EB21C9E8;
                    if (dword_1EB21C9C0)
                    {
                      if ((void)xmmword_1EB2201B0) {
                        xmmword_1EB21CA40(xmmword_1EB2201B0);
                      }
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(v185);
                      --qword_1EB220150;
                      off_1EB21C9E8(v185);
                      uint64_t v185 = xmmword_1EB2201B0;
                      if (!(void)xmmword_1EB2201B0) {
                        goto LABEL_346;
                      }
                      v186 = &xmmword_1EB21CA50;
                    }
                    (*v186)(v185);
                  }
LABEL_346:
                  BOOL v25 = v140-- < 1;
                  if (v25 || v6) {
                    goto LABEL_359;
                  }
                }
              }
              BOOL v105 = v352[0];
LABEL_199:
              uint64_t v106 = sqlite3_reset(v105);
            }
            uint64_t v6 = v106;
            goto LABEL_360;
          }
          BOOL v105 = v88;
          goto LABEL_199;
        }
LABEL_360:
        unsigned int v348 = v6;
        if (v6) {
          goto LABEL_361;
        }
        if (!*(_DWORD *)v334)
        {
          uint64_t v6 = 0;
          goto LABEL_361;
        }
        if (!v50)
        {
LABEL_460:
          int v219 = *(_DWORD *)(v334 + 4);
LABEL_461:
          v342 += ~v219;
          uint64_t v279 = sub_1B0D95350(v339, v343, v341, &v347);
          unsigned int v348 = v279;
          if (v347)
          {
            sub_1B0D95F50((uint64_t)&v345, v343, v347, &v348);
            int v338 = 1;
            uint64_t v6 = v348;
            goto LABEL_362;
          }
          uint64_t v6 = v279;
          goto LABEL_464;
        }
        uint64_t v191 = v334;
        do
        {
          v192 = *(unsigned __int8 **)(v191 + 776);
          signed int v193 = *(_DWORD *)(v191 + 784);
          signed int v194 = *(_DWORD *)(v191 + 72);
          if (v194 >= v193) {
            uint64_t v195 = v193;
          }
          else {
            uint64_t v195 = v194;
          }
          if ((int)v195 < 1)
          {
            LODWORD(v195) = 0;
          }
          else
          {
            uint64_t v196 = 0;
            while (*(unsigned __int8 *)(*(void *)(v191 + 64) + v196) == v192[v196])
            {
              if (v195 == ++v196) {
                goto LABEL_377;
              }
            }
            LODWORD(v195) = v196;
          }
LABEL_377:
          unint64_t v197 = (v193 - v195);
          if ((int)v197 < 1)
          {
            uint64_t v6 = 267;
            goto LABEL_397;
          }
          int v198 = 0;
          v199 = *(const void **)(v191 + 792);
          int v200 = *(_DWORD *)(v191 + 800);
          unint64_t v201 = (int)v195;
          int v202 = v193 + v200 + 1;
          int v203 = v202 - v195;
          int v204 = v193 + v200 + 2;
          int v205 = v204 - v195;
          do
          {
            int v206 = v203;
            int v207 = v205;
            ++v198;
            ++v203;
            ++v205;
            BOOL v25 = v201 > 0x7F;
            v201 >>= 7;
          }
          while (v25);
          do
          {
            int v208 = v207;
            ++v206;
            ++v207;
            BOOL v25 = v197 > 0x7F;
            v197 >>= 7;
          }
          while (v25);
          unint64_t v209 = *(int *)(v191 + 800);
          do
          {
            ++v208;
            BOOL v25 = v209 > 0x7F;
            v209 >>= 7;
          }
          while (v25);
          signed int v210 = *(_DWORD *)(v191 + 88);
          int v211 = v210 + v208;
          if (v210 < 1 || v211 <= *(_DWORD *)(v339 + 456))
          {
            *(void *)(v191 + 40) += v208;
          }
          else
          {
            v318 = *(const void **)(v191 + 792);
            unint64_t v319 = *(int *)(v191 + 800);
            unint64_t v320 = *(int *)(v191 + 784);
            uint64_t v6 = sub_1B0D91E50((uint64_t *)v339, *(void *)(v191 + 56), *(char **)(v191 + 80), v210);
            ++*(_DWORD *)(v191 + 4);
            if (!v6)
            {
              unsigned int v220 = v195 + 1;
              unint64_t v221 = *(void *)(v191 + 56);
              uint64_t v222 = 1;
              int v323 = v195 + 1;
              while (1)
              {
                uint64_t v223 = v191 + 40 * v222;
                int v226 = *(_DWORD *)(v223 + 72);
                v225 = (_DWORD *)(v223 + 72);
                unsigned int v224 = v226;
                v321 = (void **)(v225 - 2);
                if (v226 >= (int)v220) {
                  uint64_t v227 = v220;
                }
                else {
                  uint64_t v227 = v224;
                }
                if ((int)v227 < 1)
                {
                  LODWORD(v227) = 0;
                }
                else
                {
                  uint64_t v228 = 0;
                  while (*(unsigned __int8 *)(*((void *)v225 - 1) + v228) == v192[v228])
                  {
                    if (v227 == ++v228) {
                      goto LABEL_418;
                    }
                  }
                  LODWORD(v227) = v228;
                }
LABEL_418:
                unint64_t v229 = v220 - v227;
                if ((int)v229 < 1)
                {
                  uint64_t v6 = 267;
                  goto LABEL_386;
                }
                v230 = (uint64_t *)(v225 - 4);
                unint64_t v231 = (int)v227;
                int v232 = v195 + 2 - v227;
                int v233 = v220 - v227;
                unint64_t v234 = v231;
                do
                {
                  int v235 = v232;
                  ++v233;
                  ++v232;
                  BOOL v25 = v234 > 0x7F;
                  v234 >>= 7;
                }
                while (v25);
                unint64_t v236 = v229;
                do
                {
                  ++v235;
                  BOOL v25 = v236 > 0x7F;
                  v236 >>= 7;
                }
                while (v25);
                __s1b = v225;
                uint64_t v237 = v191 + 40 * v222;
                unsigned int v240 = *(_DWORD *)(v237 + 88);
                v239 = (_DWORD *)(v237 + 88);
                unsigned int v238 = v240;
                if (!v224 || (signed int)(v238 + v235) <= *(_DWORD *)(v339 + 456)) {
                  break;
                }
                uint64_t v241 = v334 + 40 * v222;
                uint64_t v242 = sub_1B0D91E50((uint64_t *)v339, *v230, *(char **)(v241 + 80), v238);
                uint64_t v6 = v242;
                uint64_t v243 = 0;
                **(unsigned char **)(v241 + 80) = v222;
                uint64_t v244 = *(void *)(v241 + 80);
                unint64_t v245 = v221 + 1;
                do
                {
                  char v246 = v245;
                  *(unsigned char *)(v244 + v243++ + 1) = v245 | 0x80;
                  BOOL v25 = v245 > 0x7F;
                  v245 >>= 7;
                }
                while (v25);
                *(unsigned char *)(v244 + v243) = v246 & 0x7F;
                _DWORD *v239 = v243 + 1;
                unint64_t v221 = (*v230)++;
                _DWORD *__s1b = 0;
                unsigned int v220 = v195 + 1;
                if (v242) {
                  goto LABEL_455;
                }
                uint64_t v191 = v334;
                if (!v221) {
                  goto LABEL_386;
                }
                if (++v222 == 16)
                {
                  uint64_t v6 = 0;
                  goto LABEL_386;
                }
              }
              unint64_t v315 = v231;
              size_t v316 = v229;
              uint64_t v247 = v334 + 40 * v222;
              __srcb = (uint64_t *)(v247 + 80);
              v317 = (int *)(v247 + 88);
              if (!v238)
              {
                int v248 = *(_DWORD *)(v339 + 456);
                uint64_t v249 = v334 + 40 * v222;
                int v251 = *(_DWORD *)(v249 + 92);
                v250 = (_DWORD *)(v249 + 92);
                v252 = (unsigned char *)*__srcb;
                if (v251 < v248)
                {
                  if (sqlite3_initialize() || (uint64_t v253 = sub_1B0C8E1B8((uint64_t)v252, v248)) == 0)
                  {
LABEL_454:
                    uint64_t v6 = 7;
LABEL_455:
                    uint64_t v191 = v334;
                    goto LABEL_386;
                  }
                  v252 = (unsigned char *)v253;
                  _DWORD *v250 = v248;
                  uint64_t *__srcb = v253;
                }
                uint64_t v254 = 0;
                unsigned char *v252 = v222;
                v255 = (unsigned char *)*__srcb;
                do
                {
                  char v256 = v221;
                  v255[++v254] = v221 | 0x80;
                  BOOL v25 = v221 > 0x7F;
                  v221 >>= 7;
                }
                while (v25);
                v255[v254] = v256 & 0x7F;
                unsigned int v238 = v254 + 1;
                int *v317 = v254 + 1;
              }
              int v257 = v238 + v235;
              uint64_t v258 = v334 + 40 * v222;
              signed int v260 = *(_DWORD *)(v258 + 92);
              v259 = (_DWORD *)(v258 + 92);
              if (v260 < (int)(v238 + v235))
              {
                uint64_t v261 = *__srcb;
                if (sqlite3_initialize()) {
                  goto LABEL_454;
                }
                uint64_t v262 = sub_1B0C8E1B8(v261, v257);
                if (!v262) {
                  goto LABEL_454;
                }
                _DWORD *v259 = v257;
                uint64_t *__srcb = v262;
              }
              uint64_t v263 = v334 + 40 * v222;
              int v265 = *(_DWORD *)(v263 + 76);
              v264 = (_DWORD *)(v263 + 76);
              if (v265 <= (int)v195)
              {
                v277 = *v321;
                if (sqlite3_initialize()) {
                  goto LABEL_454;
                }
                uint64_t v278 = sub_1B0C8E1B8((uint64_t)v277, v323);
                if (!v278) {
                  goto LABEL_454;
                }
                _DWORD *v264 = v323;
                *v321 = (void *)v278;
              }
              uint64_t v266 = *__srcb;
              int v267 = *v317;
              if (*__s1b)
              {
                uint64_t v268 = 0;
                uint64_t v269 = v266 + v267;
                unint64_t v270 = v315;
                do
                {
                  char v271 = v270;
                  *(unsigned char *)(v269 + v268++) = v270 | 0x80;
                  BOOL v25 = v270 > 0x7F;
                  v270 >>= 7;
                }
                while (v25);
                *(unsigned char *)(v269 + v268 - 1) = v271 & 0x7F;
                int v267 = *v317 + v268;
                int *v317 = v267;
                uint64_t v266 = *__srcb;
              }
              uint64_t v272 = 0;
              uint64_t v273 = v266 + v267;
              unint64_t v274 = v316;
              do
              {
                char v275 = v274;
                *(unsigned char *)(v273 + v272++) = v274 | 0x80;
                BOOL v25 = v274 > 0x7F;
                v274 >>= 7;
              }
              while (v25);
              *(unsigned char *)(v273 + v272 - 1) = v275 & 0x7F;
              uint64_t v276 = *v317;
              int *v317 = v276 + v272;
              memcpy((void *)(*__srcb + v276 + v272), &v192[v315], v316);
              *v317 += v316;
              memcpy(*v321, v192, v323);
              uint64_t v6 = 0;
              _DWORD *__s1b = v323;
              uint64_t v191 = v334;
            }
LABEL_386:
            ++*(void *)(v191 + 56);
            *(_DWORD *)(v191 + 72) = 0;
            *(_DWORD *)(v191 + 88) = 0;
            unint64_t v212 = v320;
            do
            {
              int v211 = v204;
              ++v202;
              ++v204;
              BOOL v25 = v212 > 0x7F;
              v212 >>= 7;
            }
            while (v25);
            unint64_t v213 = v319;
            do
            {
              ++v211;
              BOOL v72 = v213 >= 0x80;
              v213 >>= 7;
            }
            while (v72);
            uint64_t v191 = v334;
            *(void *)(v334 + 40) += v211;
            if (v6) {
              goto LABEL_397;
            }
            signed int v210 = 0;
            int v200 = v319;
            signed int v193 = v320;
            v199 = v318;
          }
          if (*(_DWORD *)(v191 + 92) < v211)
          {
            int v214 = v200;
            v215 = v199;
            signed int v216 = v193;
            uint64_t v217 = *v330;
            if (sqlite3_initialize())
            {
              uint64_t v6 = 7;
LABEL_397:
              unsigned int v348 = v6;
              goto LABEL_404;
            }
            uint64_t v218 = sub_1B0C8E1B8(v217, v211);
            if (!v218)
            {
              uint64_t v6 = 7;
              uint64_t v191 = v334;
              goto LABEL_397;
            }
            uint64_t v191 = v334;
            *(_DWORD *)(v334 + 92) = v211;
            *(void *)(v334 + 80) = v218;
            signed int v210 = *(_DWORD *)(v334 + 88);
            signed int v193 = v216;
            v199 = v215;
            int v200 = v214;
          }
          if (!v210)
          {
            *(_DWORD *)(v191 + 88) = 1;
            **(unsigned char **)(v191 + 80) = 0;
          }
          uint64_t v6 = sub_1B0D962E4((uint64_t)v330, v329, v192, v193, v199, v200);
          unsigned int v348 = v6;
          if (!v6)
          {
            uint64_t v6 = sub_1B0D7E204(v339, v341);
            unsigned int v348 = v6;
          }
LABEL_404:
          int v219 = *(_DWORD *)(v191 + 4);
          if (v219 >= v342 && v6 == 100) {
            goto LABEL_461;
          }
        }
        while (v6 == 100);
        if (!v6) {
          goto LABEL_460;
        }
LABEL_361:
        if (v347)
        {
LABEL_362:
          int v190 = 0;
          *(void *)(v334 + 40) = -*(void *)(v334 + 40);
          goto LABEL_465;
        }
LABEL_464:
        int v190 = 1;
LABEL_465:
        uint64_t v10 = &qword_1EB21FB68[147];
        unsigned int v280 = 15;
        while (2)
        {
          uint64_t v281 = v280;
          if (*(int *)(v334 + 40 * v280 + 88) <= 0)
          {
            uint64_t v282 = *(void *)(v334 + 40 * v280 + 80);
            if (v282)
            {
              v283 = &off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_475;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v282);
              --qword_1EB220150;
              off_1EB21C9E8(v282);
              uint64_t v282 = xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                v283 = &xmmword_1EB21CA50;
LABEL_475:
                (*v283)(v282);
              }
            }
            uint64_t v284 = *(void *)(v334 + 40 * v281 + 64);
            if (v284)
            {
              v285 = &off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_466;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v284);
              --qword_1EB220150;
              off_1EB21C9E8(v284);
              uint64_t v284 = xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                v285 = &xmmword_1EB21CA50;
LABEL_466:
                (*v285)(v284);
              }
            }
            unsigned int v280 = v281 - 1;
            if (!v281) {
              goto LABEL_508;
            }
            continue;
          }
          break;
        }
        if (!v280)
        {
          if (!v6)
          {
            v288 = *(unsigned char **)(v334 + 120);
            if (*(int *)(v334 + 132) > 10) {
              goto LABEL_513;
            }
            if (!sqlite3_initialize())
            {
              uint64_t v293 = sub_1B0C8E1B8((uint64_t)v288, 11);
              if (v293)
              {
                v288 = (unsigned char *)v293;
                *(_DWORD *)(v334 + 132) = 11;
                *(void *)(v334 + 120) = v293;
LABEL_513:
                uint64_t v294 = 0;
                unsigned char *v288 = 1;
                uint64_t v295 = *(void *)(v334 + 120);
                unint64_t v296 = *(void *)(v334 + 56);
                do
                {
                  char v297 = v296;
                  *(unsigned char *)(v295 + v294++ + 1) = v296 | 0x80;
                  BOOL v25 = v296 > 0x7F;
                  v296 >>= 7;
                }
                while (v25);
                uint64_t v6 = 0;
                *(unsigned char *)(v295 + v294) = v297 & 0x7F;
                *(_DWORD *)(v334 + 128) = v294 + 1;
                goto LABEL_516;
              }
            }
            uint64_t v6 = 7;
          }
LABEL_516:
          uint64_t v281 = 1;
          goto LABEL_517;
        }
        if ((int)v280 >= 1)
        {
LABEL_517:
          uint64_t v298 = v281;
          v299 = v328;
          while (1)
          {
            if ((int)*v299 >= 1 && v6 == 0) {
              uint64_t v6 = sub_1B0D91E50((uint64_t *)v339, *((void *)v299 - 4), *((char **)v299 - 1), *v299);
            }
            uint64_t v301 = *((void *)v299 - 1);
            if (v301)
            {
              v302 = &off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_532;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v301);
              --qword_1EB220150;
              off_1EB21C9E8(v301);
              uint64_t v301 = xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0) {
                break;
              }
            }
LABEL_533:
            uint64_t v303 = *((void *)v299 - 3);
            if (v303)
            {
              v304 = &off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v303);
                --qword_1EB220150;
                off_1EB21C9E8(v303);
                uint64_t v303 = xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0) {
                  goto LABEL_519;
                }
                v304 = &xmmword_1EB21CA50;
              }
              (*v304)(v303);
            }
LABEL_519:
            v299 += 10;
            if (!--v298) {
              goto LABEL_484;
            }
          }
          v302 = &xmmword_1EB21CA50;
LABEL_532:
          (*v302)(v301);
          goto LABEL_533;
        }
LABEL_484:
        uint64_t v286 = v334;
        if (!v6)
        {
          if (*(unsigned char *)(v334 + 48)) {
            uint64_t v287 = 0;
          }
          else {
            uint64_t v287 = *(void *)(v334 + 40);
          }
          uint64_t v286 = v334;
          uint64_t v6 = sub_1B0D923DC((uint64_t *)v339, *(void *)(v334 + 8) + 1, *(_DWORD *)(v334 + 16), *(void *)(v334 + 24), *(void *)(v334 + 56), *(void *)(v334 + 32), v287, *(char **)(v334 + 40 * v281 + 80), *(_DWORD *)(v334 + 40 * v281 + 88));
        }
        uint64_t v289 = *(void *)(v286 + 40 * v281 + 80);
        if (v289)
        {
          v290 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_499;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v289);
          --qword_1EB220150;
          off_1EB21C9E8(v289);
          uint64_t v289 = xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            v290 = &xmmword_1EB21CA50;
LABEL_499:
            (*v290)(v289);
          }
        }
        uint64_t v291 = *(void *)(v334 + 40 * v281 + 64);
        if (v291)
        {
          v292 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_506;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v291);
          --qword_1EB220150;
          off_1EB21C9E8(v291);
          uint64_t v291 = xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            v292 = &xmmword_1EB21CA50;
LABEL_506:
            (*v292)(v291);
          }
        }
        unsigned int v348 = v6;
LABEL_508:
        uint64_t v9 = v334;
        if (!v190 || *(unsigned char *)(v334 + 48))
        {
          a1 = v339;
        }
        else
        {
          a1 = v339;
          sub_1B0D91998((uint64_t *)v339, v332, *(void *)(v334 + 40));
        }
LABEL_41:
        a2 = v342;
        uint64_t v24 = v341;
LABEL_42:
        sub_1B0D7C0A8(v24);
        if (v6) {
          BOOL v25 = 1;
        }
        else {
          BOOL v25 = a2 <= 0;
        }
        if (v25) {
          goto LABEL_542;
        }
      }
    }
  }
LABEL_6:
  uint64_t v11 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_11:
    (*v11)(v9);
    goto LABEL_12;
  }
  uint64_t v12 = v10[54];
  if (v12) {
    xmmword_1EB21CA40(v12);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
  --qword_1EB220150;
  off_1EB21C9E8(v9);
  uint64_t v9 = v10[54];
  if (v9)
  {
    uint64_t v11 = &xmmword_1EB21CA50;
    goto LABEL_11;
  }
LABEL_12:
  int v13 = v345;
  if (v345)
  {
    uint64_t v14 = (uint64_t (**)(char *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_18:
      (*v14)(v13);
      return v6;
    }
    uint64_t v15 = v10[54];
    if (v15) {
      xmmword_1EB21CA40(v15);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
    --qword_1EB220150;
    off_1EB21C9E8(v13);
    int v13 = (char *)v10[54];
    if (v13)
    {
      uint64_t v14 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
      goto LABEL_18;
    }
  }
  return v6;
}

uint64_t sub_1B0D95350(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  uint64_t v5 = a1;
  int v6 = *(_DWORD *)(a3 + 8);
  if (v6 < 1)
  {
    int v7 = 0;
    goto LABEL_127;
  }
  int v7 = 0;
  for (int i = *(_DWORD *)(a3 + 8); ; --i)
  {
    if (v6 < 1)
    {
      uint64_t v10 = 0;
      if (!MEMORY[0x28]) {
        break;
      }
      goto LABEL_11;
    }
    unint64_t v9 = 0;
    do
      uint64_t v10 = *(int **)(*(void *)a3 + 8 * v9++);
    while (*v10 != i - 1 && v9 < v6);
    if (!*((void *)v10 + 5)) {
      break;
    }
LABEL_11:
    int v12 = v7;
    int v13 = (const void *)*((void *)v10 + 10);
    int v14 = v10[18];
    uint64_t v15 = *v10;
    pStmt = 0;
    uint64_t v95 = 0;
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    unint64_t v90 = 0;
    sqlite3_int64 iRow = 0;
    uint64_t v16 = sub_1B0D7D3B4((uint64_t *)v5, 32, &v90, 0);
    if (!v16)
    {
      uint64_t v24 = v90;
      if (!sub_1B0CC3F2C((uint64_t)v90, 0))
      {
        uint64_t v25 = *((void *)v24 + 16);
        if ((*(_WORD *)(v25 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v25, a2);
        }
        else
        {
          *(void *)uint64_t v25 = a2;
          *(_WORD *)(v25 + 20) = 4;
        }
        uint64_t v26 = *(void *)(*(void *)v24 + 24);
        if (v26) {
          xmmword_1EB21CA50(v26);
        }
      }
      if (!sub_1B0CC3F2C((uint64_t)v24, 1u))
      {
        uint64_t v27 = *((void *)v24 + 16);
        if ((*(_WORD *)(v27 + 84) & 0x9000) != 0)
        {
          sub_1B0D18980(v27 + 64, v15);
        }
        else
        {
          *(void *)(v27 + 64) = v15;
          *(_WORD *)(v27 + 84) = 4;
        }
        uint64_t v28 = *(void *)(*(void *)v24 + 24);
        if (v28) {
          xmmword_1EB21CA50(v28);
        }
      }
      if (sqlite3_step(v24) != 100)
      {
        uint64_t v32 = sqlite3_reset(v24);
        uint64_t v33 = 0;
        goto LABEL_65;
      }
      uint64_t v85 = v15;
      uint64_t v29 = (char *)sqlite3_column_blob(v24, 4);
      int v30 = sqlite3_column_bytes(v24, 4);
      sqlite3_int64 v83 = sqlite3_column_int64(v24, 1);
      uint64_t v31 = v29;
      uint64_t v15 = v85;
      uint64_t v16 = sub_1B0D96530(v31, v30, (uint64_t)&pStmt, v13, v14, &iRow);
      uint64_t v32 = sqlite3_reset(v24);
      if (!v16)
      {
        uint64_t v33 = 0;
        if (v32) {
          goto LABEL_65;
        }
        sqlite3_int64 v34 = iRow;
        if (!iRow) {
          goto LABEL_65;
        }
        while (1)
        {
          uint64_t v33 = v34;
          uint64_t v89 = 0;
          int v88 = 0;
          uint64_t v16 = sub_1B0D7D634(v5, v34, &v89, &v88);
          if (v16 || (uint64_t v16 = sub_1B0D96530(v89, v88, (uint64_t)&v92, v13, v14, &iRow), v16))
          {
            uint64_t v35 = v89;
            if (!v89) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v16 = sub_1B0D91E50((uint64_t *)v5, v33, (char *)v92, v93);
            uint64_t v35 = v89;
            if (!v89) {
              goto LABEL_59;
            }
          }
          int v36 = (void (**)(char *))&off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v35);
            --qword_1EB220150;
            off_1EB21C9E8(v35);
            uint64_t v35 = (char *)xmmword_1EB2201B0;
            uint64_t v5 = a1;
            if (!(void)xmmword_1EB2201B0) {
              goto LABEL_59;
            }
            int v36 = (void (**)(char *))&xmmword_1EB21CA50;
          }
          (*v36)(v35);
LABEL_59:
          if (!v16)
          {
            sqlite3_int64 v34 = iRow;
            if (iRow) {
              continue;
            }
          }
          uint64_t v15 = v85;
          if (!v16)
          {
            uint64_t v89 = 0;
            uint64_t v32 = sub_1B0D7D3B4((uint64_t *)v5, 17, (sqlite3_stmt **)&v89, 0);
            if (!v32)
            {
              int v39 = (sqlite3_stmt *)v89;
              if (!sub_1B0CC3F2C((uint64_t)v89, 0))
              {
                uint64_t v40 = *((void *)v39 + 16);
                if ((*(_WORD *)(v40 + 20) & 0x9000) != 0)
                {
                  sub_1B0D18980(v40, v83);
                }
                else
                {
                  *(void *)uint64_t v40 = v83;
                  *(_WORD *)(v40 + 20) = 4;
                }
                uint64_t v57 = *(void *)(*(void *)v39 + 24);
                if (v57) {
                  xmmword_1EB21CA50(v57);
                }
              }
              if (!sub_1B0CC3F2C((uint64_t)v39, 1u))
              {
                uint64_t v58 = v33 - 1;
                uint64_t v59 = *((void *)v39 + 16);
                if ((*(_WORD *)(v59 + 84) & 0x9000) != 0)
                {
                  sub_1B0D18980(v59 + 64, v58);
                }
                else
                {
                  *(void *)(v59 + 64) = v58;
                  *(_WORD *)(v59 + 84) = 4;
                }
                uint64_t v60 = *(void *)(*(void *)v39 + 24);
                if (v60) {
                  xmmword_1EB21CA50(v60);
                }
              }
              sqlite3_step(v39);
              uint64_t v32 = sqlite3_reset(v39);
            }
LABEL_65:
            uint64_t v16 = v32;
            if (!v32)
            {
              uint64_t v89 = 0;
              uint64_t v16 = sub_1B0D7D3B4((uint64_t *)v5, 33, (sqlite3_stmt **)&v89, 0);
              if (!v16)
              {
                BOOL v37 = (uint64_t *)v89;
                if (!sub_1B0CC3F2C((uint64_t)v89, 0))
                {
                  uint64_t v38 = v37[16];
                  if ((*(_WORD *)(v38 + 20) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v38, v33);
                  }
                  else
                  {
                    *(void *)uint64_t v38 = v33;
                    *(_WORD *)(v38 + 20) = 4;
                  }
                  uint64_t v44 = *(void *)(*v37 + 24);
                  if (v44) {
                    xmmword_1EB21CA50(v44);
                  }
                }
                uint64_t v45 = v15;
                uint64_t v46 = v95;
                if ((v95 & 0x80000000) != 0)
                {
                  sub_1B0CE1978(98740);
                }
                else
                {
                  uint64_t v47 = (char *)pStmt;
                  if (!sub_1B0CC3F2C((uint64_t)v37, 1u))
                  {
                    if (v47)
                    {
                      unsigned int v48 = sub_1B0C79BBC(v37[16] + 64, v47, v46, 0, 0);
                      if (v48)
                      {
                        unsigned int v49 = v48;
                        uint64_t v50 = *v37;
                        *(_DWORD *)(v50 + 80) = v49;
                        sub_1B0D0E714(v50, v49);
                        sub_1B0D1806C(*v37, v49);
                      }
                    }
                    uint64_t v51 = *(void *)(*v37 + 24);
                    if (v51) {
                      xmmword_1EB21CA50(v51);
                    }
                  }
                }
                if (!sub_1B0CC3F2C((uint64_t)v37, 2u))
                {
                  uint64_t v52 = v37[16];
                  if ((*(_WORD *)(v52 + 148) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v52 + 128, a2);
                  }
                  else
                  {
                    *(void *)(v52 + 128) = a2;
                    *(_WORD *)(v52 + 148) = 4;
                  }
                  uint64_t v53 = *(void *)(*v37 + 24);
                  if (v53) {
                    xmmword_1EB21CA50(v53);
                  }
                }
                if (!sub_1B0CC3F2C((uint64_t)v37, 3u))
                {
                  uint64_t v54 = v37[16];
                  if ((*(_WORD *)(v54 + 212) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v54 + 192, v45);
                  }
                  else
                  {
                    *(void *)(v54 + 192) = v45;
                    *(_WORD *)(v54 + 212) = 4;
                  }
                  uint64_t v55 = *(void *)(*v37 + 24);
                  if (v55) {
                    xmmword_1EB21CA50(v55);
                  }
                }
                sqlite3_step((sqlite3_stmt *)v37);
                uint64_t v16 = sqlite3_reset((sqlite3_stmt *)v37);
                if (!sub_1B0CC3F2C((uint64_t)v37, 1u))
                {
                  uint64_t v56 = *(void *)(*v37 + 24);
                  if (v56) {
                    xmmword_1EB21CA50(v56);
                  }
                }
              }
            }
          }
          break;
        }
      }
    }
    uint64_t v17 = pStmt;
    if (pStmt)
    {
      uint64_t v18 = (void (**)(sqlite3_stmt *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_18;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v17);
      --qword_1EB220150;
      off_1EB21C9E8(v17);
      uint64_t v17 = (sqlite3_stmt *)xmmword_1EB2201B0;
      uint64_t v5 = a1;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v18 = (void (**)(sqlite3_stmt *))&xmmword_1EB21CA50;
LABEL_18:
        (*v18)(v17);
      }
    }
    uint64_t v19 = v92;
    if (!v92) {
      goto LABEL_26;
    }
    int v20 = (void (**)(sqlite3_stmt *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_25;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
    --qword_1EB220150;
    off_1EB21C9E8(v19);
    uint64_t v19 = (sqlite3_stmt *)xmmword_1EB2201B0;
    uint64_t v5 = a1;
    if ((void)xmmword_1EB2201B0)
    {
      int v20 = (void (**)(sqlite3_stmt *))&xmmword_1EB21CA50;
LABEL_25:
      (*v20)(v19);
    }
LABEL_26:
    int v7 = v12 + 1;
    if (i < 2) {
      goto LABEL_124;
    }
LABEL_86:
    if (v16) {
      goto LABEL_124;
    }
    int v6 = *(_DWORD *)(a3 + 8);
  }
  uint64_t v16 = sub_1B0D922BC((uint64_t *)v5, (uint64_t)v10);
  if (!v16)
  {
    uint64_t v21 = *v10;
    pStmt = 0;
    uint64_t v16 = sub_1B0D7D3B4((uint64_t *)v5, 30, &pStmt, 0);
    if (!v16)
    {
      uint64_t v22 = pStmt;
      if (!sub_1B0CC3F2C((uint64_t)pStmt, 0))
      {
        uint64_t v23 = *((void *)v22 + 16);
        if ((*(_WORD *)(v23 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v23, a2);
        }
        else
        {
          *(void *)uint64_t v23 = a2;
          *(_WORD *)(v23 + 20) = 4;
        }
        uint64_t v41 = *(void *)(*(void *)v22 + 24);
        if (v41) {
          xmmword_1EB21CA50(v41);
        }
      }
      if (!sub_1B0CC3F2C((uint64_t)v22, 1u))
      {
        uint64_t v42 = *((void *)v22 + 16);
        if ((*(_WORD *)(v42 + 84) & 0x9000) != 0)
        {
          sub_1B0D18980(v42 + 64, v21);
        }
        else
        {
          *(void *)(v42 + 64) = v21;
          *(_WORD *)(v42 + 84) = 4;
        }
        uint64_t v43 = *(void *)(*(void *)v22 + 24);
        if (v43) {
          xmmword_1EB21CA50(v43);
        }
      }
      sqlite3_step(v22);
      uint64_t v16 = sqlite3_reset(v22);
    }
  }
  *a4 = 0;
  if (i >= 2) {
    goto LABEL_86;
  }
LABEL_124:
  if (!v16)
  {
LABEL_127:
    if (v7 == *(_DWORD *)(a3 + 8))
    {
      uint64_t v16 = 0;
      goto LABEL_157;
    }
    pStmt = 0;
    uint64_t v92 = 0;
    uint64_t v61 = sub_1B0D7D3B4((uint64_t *)v5, 35, &pStmt, 0);
    if (v61)
    {
      uint64_t v16 = v61;
      uint64_t v62 = 0;
LABEL_150:
      *(unsigned char *)(v5 + 464) = 0;
      if (!v62) {
        goto LABEL_157;
      }
    }
    else
    {
      uint64_t v63 = pStmt;
      if (!sub_1B0CC3F2C((uint64_t)pStmt, 0))
      {
        uint64_t v64 = *((void *)v63 + 16);
        if ((*(_WORD *)(v64 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v64, a2);
        }
        else
        {
          *(void *)uint64_t v64 = a2;
          *(_WORD *)(v64 + 20) = 4;
        }
        uint64_t v65 = *(void *)(*(void *)v63 + 24);
        if (v65) {
          xmmword_1EB21CA50(v65);
        }
      }
      if (sqlite3_step(v63) == 100)
      {
        uint64_t v66 = 0;
        int v67 = 0;
        uint64_t v62 = 0;
        do
        {
          if (v66 >= v67)
          {
            if (sqlite3_initialize() || (v67 += 16, (uint64_t v69 = sub_1B0C8E1B8(v62, 4 * v67)) == 0))
            {
              sqlite3_reset(pStmt);
              uint64_t v16 = 7;
              goto LABEL_150;
            }
            uint64_t v62 = v69;
          }
          unsigned int v68 = v66 + 1;
          *(_DWORD *)(v62 + 4 * v66++) = sqlite3_column_int(v63, 0);
        }
        while (sqlite3_step(v63) == 100);
        uint64_t v63 = pStmt;
      }
      else
      {
        unsigned int v68 = 0;
        uint64_t v62 = 0;
      }
      uint64_t v70 = sqlite3_reset(v63);
      if (v70 || (uint64_t v70 = sub_1B0D7D3B4((uint64_t *)v5, 31, &v92, 0), v70))
      {
        uint64_t v16 = v70;
        goto LABEL_150;
      }
      BOOL v73 = v92;
      if (!sub_1B0CC3F2C((uint64_t)v92, 1u))
      {
        uint64_t v74 = *((void *)v73 + 16);
        if ((*(_WORD *)(v74 + 84) & 0x9000) != 0)
        {
          sub_1B0D18980(v74 + 64, a2);
        }
        else
        {
          *(void *)(v74 + 64) = a2;
          *(_WORD *)(v74 + 84) = 4;
        }
        uint64_t v75 = *(void *)(*(void *)v73 + 24);
        if (v75) {
          xmmword_1EB21CA50(v75);
        }
      }
      sqlite3_int64 v76 = (unsigned char *)(v5 + 464);
      *(unsigned char *)(v5 + 464) = 1;
      if (v68)
      {
        for (unint64_t j = 0; j < v68; ++j)
        {
          uint64_t v78 = *(unsigned int *)(v62 + 4 * j);
          if (j == v78)
          {
            uint64_t v16 = 0;
          }
          else
          {
            if (!sub_1B0CC3F2C((uint64_t)v73, 2u))
            {
              uint64_t v79 = *((void *)v73 + 16);
              if ((*(_WORD *)(v79 + 148) & 0x9000) != 0)
              {
                sub_1B0D18980(v79 + 128, (int)v78);
              }
              else
              {
                *(void *)(v79 + 128) = (int)v78;
                *(_WORD *)(v79 + 148) = 4;
              }
              uint64_t v80 = *(void *)(*(void *)v73 + 24);
              if (v80) {
                xmmword_1EB21CA50(v80);
              }
            }
            if (!sub_1B0CC3F2C((uint64_t)v73, 0))
            {
              uint64_t v81 = *((void *)v73 + 16);
              if ((*(_WORD *)(v81 + 20) & 0x9000) != 0)
              {
                sub_1B0D18980(v81, j);
              }
              else
              {
                *(void *)uint64_t v81 = j;
                *(_WORD *)(v81 + 20) = 4;
              }
              uint64_t v82 = *(void *)(*(void *)v73 + 24);
              if (v82) {
                xmmword_1EB21CA50(v82);
              }
            }
            sqlite3_step(v73);
            uint64_t v16 = sqlite3_reset(v73);
          }
          if (v16) {
            break;
          }
        }
        unsigned char *v76 = 0;
      }
      else
      {
        uint64_t v16 = 0;
        unsigned char *v76 = 0;
        if (!v62) {
          goto LABEL_157;
        }
      }
    }
    unint64_t v71 = (void (**)(uint64_t))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_156:
      (*v71)(v62);
      goto LABEL_157;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v62);
    --qword_1EB220150;
    off_1EB21C9E8(v62);
    uint64_t v62 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unint64_t v71 = (void (**)(uint64_t))&xmmword_1EB21CA50;
      goto LABEL_156;
    }
  }
LABEL_157:
  *a4 = v7;
  return v16;
}

uint64_t sub_1B0D95F50(uint64_t result, unint64_t a2, int a3, _DWORD *a4)
{
  if (!*a4)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(int *)(result + 8);
    uint64_t v8 = v7 + 20;
    if (*(_DWORD *)(result + 12) >= (int)v7 + 20) {
      goto LABEL_7;
    }
    uint64_t v10 = *(void *)result;
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8(v10, v8)) == 0)
    {
      *a4 = 7;
      return result;
    }
    *(_DWORD *)(v6 + 12) = v8;
    *(void *)uint64_t v6 = result;
    if (!*a4)
    {
LABEL_7:
      uint64_t v11 = 0;
      uint64_t v12 = *(void *)v6 + *(int *)(v6 + 8);
      do
      {
        char v13 = a2;
        *(unsigned char *)(v12 + v11++) = a2 | 0x80;
        BOOL v14 = a2 > 0x7F;
        a2 >>= 7;
      }
      while (v14);
      uint64_t v15 = 0;
      *(unsigned char *)(v12 + v11 - 1) = v13 & 0x7F;
      int v16 = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(v6 + 8) = v16 + v11;
      uint64_t v17 = *(void *)v6;
      unint64_t v18 = a3;
      uint64_t v19 = *(void *)v6 + v16 + (int)v11;
      do
      {
        char v20 = v18;
        *(unsigned char *)(v19 + v15++) = v18 | 0x80;
        BOOL v14 = v18 > 0x7F;
        v18 >>= 7;
      }
      while (v14);
      *(unsigned char *)(v17 + v16 + (int)v11 + v15 - 1) = v20 & 0x7F;
      *(_DWORD *)(v6 + 8) += v15;
    }
  }
  return result;
}

uint64_t sub_1B0D96078(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 8);
  uint64_t v3 = a1[2];
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4) {
    a1[2] = v3 + 1;
  }
  int v5 = *((_DWORD *)a1 + 2);
  int v6 = *((_DWORD *)a1 + 3);
  if (v6 >= v5)
  {
    uint64_t result = 0;
    *a1 = 0;
    return result;
  }
  uint64_t v7 = *a1;
  if (v2)
  {
    uint64_t v8 = (unsigned __int8 *)(v7 + v6);
    int v9 = *v8;
    if ((char)*v8 < 0)
    {
      int v9 = v9 & 0x7F | (v8[1] << 7);
      if ((char)v8[1] < 0)
      {
        int v9 = v9 & 0x3FFF | (v8[2] << 14);
        if ((char)v8[2] < 0)
        {
          int v9 = v9 & 0x1FFFFF | (v8[3] << 21);
          if ((char)v8[3] < 0)
          {
            int v9 = v9 & 0xFFFFFFF | ((v8[4] & 7) << 28);
            int v10 = 5;
          }
          else
          {
            int v10 = 4;
          }
        }
        else
        {
          int v10 = 3;
        }
      }
      else
      {
        int v10 = 2;
      }
    }
    else
    {
      int v10 = 1;
    }
    v6 += v10;
    *((_DWORD *)a1 + 3) = v6;
  }
  else
  {
    int v9 = 0;
  }
  uint64_t v12 = (unsigned __int8 *)(v7 + v6);
  unsigned int v13 = *v12;
  if ((char)*v12 < 0)
  {
    unsigned int v13 = v13 & 0x7F | (v12[1] << 7);
    if ((char)v12[1] < 0)
    {
      unsigned int v13 = v13 & 0x3FFF | (v12[2] << 14);
      if ((char)v12[2] < 0)
      {
        unsigned int v13 = v13 & 0x1FFFFF | (v12[3] << 21);
        if ((char)v12[3] < 0)
        {
          unsigned int v13 = v13 & 0xFFFFFFF | ((v12[4] & 7) << 28);
          int v14 = 5;
        }
        else
        {
          int v14 = 4;
        }
      }
      else
      {
        int v14 = 3;
      }
    }
    else
    {
      int v14 = 2;
    }
  }
  else
  {
    int v14 = 1;
  }
  int v15 = v14 + v6;
  *((_DWORD *)a1 + 3) = v15;
  if (v9 > v2) {
    return 267;
  }
  if (!v13 || (int)v13 > v5 - v15) {
    return 267;
  }
  unsigned int v17 = v13 + v9;
  uint64_t v18 = a1[3];
  if (*((_DWORD *)a1 + 9) >= (signed int)(v13 + v9))
  {
    if (!v18) {
      return 0;
    }
  }
  else
  {
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v19 = sub_1B0C8E1B8(v18, v13 + v9);
    if (!v19) {
      return 7;
    }
    uint64_t v18 = v19;
    *((_DWORD *)a1 + 9) = v17;
    a1[3] = v19;
    uint64_t v7 = *a1;
    int v15 = *((_DWORD *)a1 + 3);
  }
  memcpy((void *)(v18 + v9), (const void *)(v7 + v15), v13);
  *((_DWORD *)a1 + 8) = v17;
  unint64_t v20 = *((int *)a1 + 3) + (unint64_t)v13;
  *((_DWORD *)a1 + 3) = v20;
  if (a1[2]) {
    return 0;
  }
  uint64_t v21 = (unsigned char *)(*a1 + v20);
  if ((char)*v21 < 0)
  {
    int v23 = sub_1B0D7D5C4(v21, (int *)a1 + 12);
    LODWORD(v20) = *((_DWORD *)a1 + 3);
    int v22 = *((_DWORD *)a1 + 12);
  }
  else
  {
    int v22 = *v21;
    *((_DWORD *)a1 + 12) = v22;
    int v23 = 1;
  }
  int v24 = v20 + v23;
  *((_DWORD *)a1 + 3) = v24;
  if (*((_DWORD *)a1 + 2) - v24 < v22) {
    return 267;
  }
  uint64_t result = 0;
  a1[5] = *a1 + v24;
  *((_DWORD *)a1 + 3) = v22 + v24;
  return result;
}

uint64_t sub_1B0D962E4(uint64_t a1, uint64_t *a2, unsigned __int8 *__src, signed int a4, const void *a5, int a6)
{
  int v12 = *((_DWORD *)a2 + 2);
  unsigned int v13 = (unsigned __int8 *)*a2;
  if (*((_DWORD *)a2 + 3) >= a4)
  {
    unsigned int v15 = *((_DWORD *)a2 + 2);
  }
  else
  {
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v24 = sub_1B0C8E1B8((uint64_t)v13, a4);
    if (!v24) {
      return 7;
    }
    unsigned int v13 = (unsigned __int8 *)v24;
    *((_DWORD *)a2 + 3) = a4;
    *a2 = v24;
    unsigned int v15 = *((_DWORD *)a2 + 2);
  }
  if ((int)v15 >= a4) {
    uint64_t v16 = a4;
  }
  else {
    uint64_t v16 = v15;
  }
  if ((int)v16 < 1)
  {
    LODWORD(v16) = 0;
  }
  else
  {
    uint64_t v17 = 0;
    while (v13[v17] == __src[v17])
    {
      if (v16 == ++v17) {
        goto LABEL_15;
      }
    }
    LODWORD(v16) = v17;
  }
LABEL_15:
  if (a4 - (int)v16 < 1) {
    return 267;
  }
  memcpy(v13, __src, a4);
  *((_DWORD *)a2 + 2) = a4;
  if (v12)
  {
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)a1 + *(int *)(a1 + 8);
    unint64_t v20 = (int)v16;
    do
    {
      char v21 = v20;
      *(unsigned char *)(v19 + v18++) = v20 | 0x80;
      BOOL v22 = v20 > 0x7F;
      v20 >>= 7;
    }
    while (v22);
    *(unsigned char *)(v19 + v18 - 1) = v21 & 0x7F;
    int v23 = *(_DWORD *)(a1 + 8) + v18;
    *(_DWORD *)(a1 + 8) = v23;
  }
  else
  {
    int v23 = *(_DWORD *)(a1 + 8);
  }
  uint64_t v25 = 0;
  uint64_t v26 = *(void *)a1 + v23;
  unint64_t v27 = (a4 - v16);
  do
  {
    char v28 = v27;
    *(unsigned char *)(v26 + v25++) = v27 | 0x80;
    BOOL v22 = v27 > 0x7F;
    v27 >>= 7;
  }
  while (v22);
  *(unsigned char *)(v26 + v25 - 1) = v28 & 0x7F;
  uint64_t v29 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v29 + v25;
  memcpy((void *)(*(void *)a1 + v29 + v25), &__src[(int)v16], (a4 - v16));
  uint64_t v30 = *(int *)(a1 + 8) + (uint64_t)(a4 - (int)v16);
  *(_DWORD *)(a1 + 8) = v30;
  if (!a5) {
    return 0;
  }
  uint64_t v31 = 0;
  uint64_t v32 = *(void *)a1 + v30;
  unint64_t v33 = a6;
  do
  {
    char v34 = v33;
    *(unsigned char *)(v32 + v31++) = v33 | 0x80;
    BOOL v22 = v33 > 0x7F;
    v33 >>= 7;
  }
  while (v22);
  *(unsigned char *)(v32 + v31 - 1) = v34 & 0x7F;
  uint64_t v35 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v35 + v31;
  memcpy((void *)(*(void *)a1 + v35 + v31), a5, a6);
  uint64_t result = 0;
  *(_DWORD *)(a1 + 8) += a6;
  return result;
}

uint64_t sub_1B0D96530(char *a1, int a2, uint64_t a3, const void *a4, int a5, void *a6)
{
  v43[0] = 0;
  v43[1] = 0;
  if (a2 < 1) {
    return 267;
  }
  int v12 = *a1;
  if (*(_DWORD *)(a3 + 12) < a2)
  {
    unsigned int v13 = *(unsigned char **)a3;
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v15 = sub_1B0C8E1B8((uint64_t)v13, a2);
    if (!v15) {
      return 7;
    }
    *(_DWORD *)(a3 + 12) = a2;
    *(void *)a3 = v15;
  }
  *(_DWORD *)(a3 + 8) = 0;
  *(_OWORD *)int __s1 = 0u;
  long long v48 = 0u;
  uint64_t v49 = 0;
  uint64_t v44 = a1;
  int v45 = a2;
  if (*a1) {
    int v16 = sub_1B0D7D81C(a1 + 1, (unint64_t *)__s1) + 1;
  }
  else {
    int v16 = 1;
  }
  int v46 = v16;
  while (1)
  {
    uint64_t v14 = sub_1B0D96078((uint64_t *)&v44);
    if (v14 || !v44) {
      break;
    }
    uint64_t v19 = (unsigned __int8 *)__s1[1];
    signed int v20 = v48;
    if (*(_DWORD *)(a3 + 8))
    {
LABEL_14:
      uint64_t v18 = sub_1B0D962E4(a3, v43, v19, v20, *((const void **)&v48 + 1), v49);
      if (v18)
      {
        uint64_t v14 = v18;
        break;
      }
    }
    else
    {
      if ((int)v48 >= a5) {
        int v21 = a5;
      }
      else {
        int v21 = v48;
      }
      if (!a4 || (__s1[1] ? (v22 = v21 == 0) : (v22 = 1), v22 || (int v23 = memcmp(__s1[1], a4, v21)) == 0)) {
        int v23 = v20 - a5;
      }
      if (v12) {
        BOOL v24 = v23 == 0;
      }
      else {
        BOOL v24 = 0;
      }
      char v25 = v24;
      if ((v23 & 0x80000000) == 0 && (v25 & 1) == 0)
      {
        uint64_t v26 = __s1[0];
        **(unsigned char **)a3 = *a1;
        if (v26)
        {
          uint64_t v27 = 0;
          char v28 = *(unsigned char **)a3;
          unint64_t v29 = (unint64_t)v26;
          do
          {
            char v30 = v29;
            v28[++v27] = v29 | 0x80;
            BOOL v31 = v29 > 0x7F;
            v29 >>= 7;
          }
          while (v31);
          v28[v27] = v30 & 0x7F;
          int v17 = v27 + 1;
        }
        else
        {
          int v17 = 1;
        }
        *(_DWORD *)(a3 + 8) = v17;
        *a6 = v26;
        goto LABEL_14;
      }
    }
  }
  if (!*(_DWORD *)(a3 + 8))
  {
    uint64_t v32 = __s1[0];
    **(unsigned char **)a3 = *a1;
    if (v32)
    {
      uint64_t v33 = 0;
      char v34 = *(unsigned char **)a3;
      unint64_t v35 = (unint64_t)v32;
      do
      {
        char v36 = v35;
        v34[++v33] = v35 | 0x80;
        BOOL v31 = v35 > 0x7F;
        v35 >>= 7;
      }
      while (v31);
      v34[v33] = v36 & 0x7F;
      int v37 = v33 + 1;
    }
    else
    {
      int v37 = 1;
    }
    *(_DWORD *)(a3 + 8) = v37;
    *a6 = v32;
  }
  uint64_t v38 = __s1[1];
  if (__s1[1])
  {
    int v39 = (void (**)(void *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_54;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v38);
    --qword_1EB220150;
    off_1EB21C9E8(v38);
    uint64_t v38 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v39 = (void (**)(void *))&xmmword_1EB21CA50;
LABEL_54:
      (*v39)(v38);
    }
  }
  uint64_t v40 = v43[0];
  if (v43[0])
  {
    uint64_t v41 = (void (**)(uint64_t))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_61;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v40);
    --qword_1EB220150;
    off_1EB21C9E8(v40);
    uint64_t v40 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v41 = (void (**)(uint64_t))&xmmword_1EB21CA50;
LABEL_61:
      (*v41)(v40);
    }
  }
  return v14;
}

uint64_t sub_1B0D9688C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 461) != 2) {
    return 0;
  }
  int v2 = sqlite3_mprintf("%s_stat", *(const char **)(a1 + 40));
  if (v2)
  {
    uint64_t v3 = v2;
    int v4 = sqlite3_table_column_metadata(*(sqlite3 **)(a1 + 24), *(const char **)(a1 + 32), v2, 0, 0, 0, 0, 0, 0);
    int v5 = (uint64_t (**)(char *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
      --qword_1EB220150;
      off_1EB21C9E8(v3);
      uint64_t v3 = (char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_9;
      }
      int v5 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
    }
    (*v5)(v3);
LABEL_9:
    uint64_t result = 0;
    *(unsigned char *)(a1 + 461) = v4 == 0;
    return result;
  }
  return 7;
}

void sub_1B0D969B4(sqlite3_context *a1, int a2, uint64_t *a3)
{
  uint64_t v272 = *MEMORY[0x1E4F143B8];
  if (a2 >= 7)
  {
    if (a1)
    {
      *((_DWORD *)a1 + 9) = 1;
      uint64_t v4 = *(void *)a1;
      sub_1B0C79BBC(v4, "wrong number of arguments to function snippet()", -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
      return;
    }
    int v7 = 97407;
    goto LABEL_9;
  }
  int v257 = 0;
  if (sub_1B0D99D0C((uint64_t)a1, "snippet", *a3, &v257)) {
    return;
  }
  LODWORD(v8) = 15;
  LODWORD(v9) = -1;
  int v10 = "<b>...</b>";
  uint64_t v11 = "</b>";
  switch(a2)
  {
    case 2:
      goto LABEL_41;
    case 3:
      goto LABEL_33;
    case 4:
      goto LABEL_24;
    case 5:
      goto LABEL_19;
    case 6:
      uint64_t v12 = a3[5];
      if (!v12)
      {
        sub_1B0CE1978(89717);
        goto LABEL_18;
      }
      __int16 v13 = *(_WORD *)(v12 + 20);
      if ((v13 & 0x24) != 0)
      {
        double v8 = *(double *)v12;
        goto LABEL_19;
      }
      if ((v13 & 8) == 0)
      {
        if ((v13 & 0x12) != 0 && *(void *)(v12 + 8))
        {
          LODWORD(v8) = sub_1B0D186C0(v12);
          goto LABEL_19;
        }
LABEL_18:
        LODWORD(v8) = 0;
        goto LABEL_19;
      }
      double v132 = *(double *)v12;
      if (*(double *)v12 >= -9.22337204e18)
      {
        if (v132 <= 9.22337204e18) {
          *(void *)&double v8 = (uint64_t)v132;
        }
        else {
          LODWORD(v8) = -1;
        }
      }
      else
      {
        LODWORD(v8) = 0;
      }
LABEL_19:
      uint64_t v15 = a3[4];
      if (!v15)
      {
        sub_1B0CE1978(89717);
        goto LABEL_23;
      }
      __int16 v16 = *(_WORD *)(v15 + 20);
      if ((v16 & 0x24) != 0)
      {
        double v9 = *(double *)v15;
        goto LABEL_24;
      }
      if ((v16 & 8) == 0)
      {
        if ((v16 & 0x12) != 0 && *(void *)(v15 + 8))
        {
          LODWORD(v9) = sub_1B0D186C0(v15);
          goto LABEL_24;
        }
LABEL_23:
        LODWORD(v9) = 0;
        goto LABEL_24;
      }
      double v127 = *(double *)v15;
      if (*(double *)v15 >= -9.22337204e18)
      {
        if (v127 <= 9.22337204e18) {
          *(void *)&double v9 = (uint64_t)v127;
        }
        else {
          LODWORD(v9) = -1;
        }
      }
      else
      {
        LODWORD(v9) = 0;
      }
LABEL_24:
      uint64_t v17 = a3[3];
      if (v17)
      {
        int v18 = *(unsigned __int16 *)(v17 + 20);
        if ((~v18 & 0x202) != 0 || *(unsigned char *)(v17 + 22) != 1)
        {
          if (v18)
          {
            int v10 = 0;
            uint64_t v19 = a3[2];
            if (!v19) {
              goto LABEL_40;
            }
          }
          else
          {
            int v20 = LODWORD(v9);
            uint64_t v21 = sub_1B0D18254((int *)v17, 1);
            LODWORD(v9) = v20;
            int v10 = (const char *)v21;
            uint64_t v19 = a3[2];
            if (!v19) {
              goto LABEL_40;
            }
          }
        }
        else
        {
          int v10 = *(const char **)(v17 + 8);
          uint64_t v19 = a3[2];
          if (!v19) {
            goto LABEL_40;
          }
        }
      }
      else
      {
        int v10 = 0;
LABEL_33:
        uint64_t v19 = a3[2];
        if (!v19) {
          goto LABEL_40;
        }
      }
      int v22 = *(unsigned __int16 *)(v19 + 20);
      if ((~v22 & 0x202) == 0 && *(unsigned char *)(v19 + 22) == 1)
      {
        uint64_t v11 = *(const char **)(v19 + 8);
        goto LABEL_41;
      }
      if ((v22 & 1) == 0)
      {
        int v23 = LODWORD(v9);
        uint64_t v24 = sub_1B0D18254((int *)v19, 1);
        LODWORD(v9) = v23;
        uint64_t v11 = (const char *)v24;
        goto LABEL_41;
      }
LABEL_40:
      uint64_t v11 = 0;
LABEL_41:
      uint64_t v25 = a3[1];
      if (!v25) {
        goto LABEL_207;
      }
      int v26 = *(unsigned __int16 *)(v25 + 20);
      if ((~v26 & 0x202) != 0 || *(unsigned char *)(v25 + 22) != 1)
      {
        if ((v26 & 1) == 0)
        {
          int v27 = LODWORD(v9);
          uint64_t v28 = sub_1B0D18254((int *)v25, 1);
          LODWORD(v9) = v27;
          uint64_t v14 = (const char *)v28;
          goto LABEL_47;
        }
LABEL_207:
        sqlite3_result_error_nomem(a1);
        return;
      }
      uint64_t v14 = *(const char **)(v25 + 8);
LABEL_47:
      if (!v10 || !v11 || !v14) {
        goto LABEL_207;
      }
      if (!LODWORD(v8))
      {
        if (a1)
        {
          sub_1B0CEA530((uint64_t)a1, &byte_1B0DE9952, -1, 1u, 0);
          return;
        }
        int v7 = 97498;
LABEL_9:
        sub_1B0CE1978(v7);
        return;
      }
LABEL_51:
      int v255 = LODWORD(v9);
      unint64_t v29 = v257;
      if (sub_1B0D8E810(a1, (uint64_t)v257)) {
        return;
      }
      if (!v29[3])
      {
        if (a1)
        {
          BOOL v128 = &byte_1B0DE9952;
          uint64_t v129 = (uint64_t)a1;
          int v130 = 0;
          int v131 = 0;
LABEL_251:
          sub_1B0CEA530(v129, v128, v130, 1u, (uint64_t (*)(uint64_t))v131);
          return;
        }
LABEL_252:
        sub_1B0CE1978(97498);
        return;
      }
      int v226 = (char *)v10;
      uint64_t v227 = (char *)v14;
      v225 = (char *)v11;
      unint64_t v231 = a1;
      unint64_t v245 = v29;
      uint64_t v30 = *v29;
      if (SLODWORD(v8) <= -64) {
        int v31 = -64;
      }
      else {
        int v31 = LODWORD(v8);
      }
      if (v31 >= 64) {
        int v32 = 64;
      }
      else {
        int v32 = v31;
      }
      int v33 = v32 - 1;
      uint64_t v34 = 1;
      uint64_t v239 = *v29;
      int v35 = v255;
      int v229 = -v32;
      int v230 = v32;
      int v228 = v32 - 1;
      int64x2_t v236 = vdupq_n_s64(2uLL);
      int64x2_t v234 = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
      int8x16_t v235 = (int8x16_t)vdupq_n_s64(0x3FuLL);
      int v240 = -v32;
      if ((v32 & 0x80000000) == 0) {
        goto LABEL_60;
      }
      while (2)
      {
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        int8x8_t v38 = 0;
        int v39 = v245;
        uint64_t v232 = v34;
        do
        {
          uint64_t v233 = v36;
          uint64_t v40 = &v271[6 * v36 + 1];
          void *v40 = 0;
          v40[1] = 0;
          unsigned int v238 = v40;
          v40[2] = 0;
          if (*(int *)(v30 + 48) >= 1)
          {
            int v41 = 0;
            uint64_t v42 = 0xFFFFFFFFLL;
            while ((v35 & 0x80000000) == 0 && v41 != v35)
            {
              uint64_t v43 = v42;
LABEL_66:
              ++v41;
              uint64_t v42 = v43;
              if (v41 >= *(_DWORD *)(v30 + 48)) {
                goto LABEL_62;
              }
            }
            uint64_t v261 = 0;
            uint64_t v262 = 0;
            uint64_t v263 = 0;
            v264 = v39;
            uint64_t v265 = 0;
            uint64_t v44 = (_DWORD *)v39[3];
            v271[0] = 0;
            int v45 = sub_1B0D99FB8(v44, v271, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D99F98, (uint64_t)&v264);
            if (v45) {
              goto LABEL_234;
            }
            uint64_t v46 = v265;
            if (sqlite3_initialize())
            {
              int v45 = 7;
LABEL_234:
              uint64_t v133 = 0;
              int v134 = v231;
              goto LABEL_236;
            }
            int v253 = v42;
            uint64_t v47 = (char *)sub_1B0C7FC94(48 * (int)v46);
            if (!v47)
            {
              int v45 = 7;
              uint64_t v30 = v239;
              goto LABEL_234;
            }
            long long v48 = v47;
            bzero(v47, 48 * (int)v46);
            uint64_t v262 = v48;
            int v39 = v245;
            uint64_t v258 = (uint64_t **)v245;
            int v259 = v41;
            int v260 = v240;
            LODWORD(v261) = v46;
            LODWORD(v263) = -1;
            uint64_t v49 = (_DWORD *)v245[3];
            LODWORD(v264) = 0;
            int v45 = sub_1B0D99FB8(v49, &v264, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D99E7C, (uint64_t)&v258);
            int __s = v41;
            if (v45)
            {
              int v242 = 0;
              int v246 = 0;
              uint64_t v248 = 0;
              int8x8_t v50 = 0;
              uint64_t v43 = 0;
            }
            else
            {
              if ((int)v46 >= 1)
              {
                if (v46 >= 5)
                {
                  uint64_t v52 = v46 & 3;
                  if ((v46 & 3) == 0) {
                    uint64_t v52 = 4;
                  }
                  uint64_t v51 = v46 - v52;
                  int8x16_t v53 = 0uLL;
                  int8x16_t v54 = (int8x16_t)(unint64_t)v38;
                  uint64_t v55 = (int64x2_t *)(v262 + 120);
                  uint64_t v56 = v51;
                  int64x2_t v57 = (int64x2_t)xmmword_1B0DE1490;
                  do
                  {
                    int64x2_t v58 = v55[-3];
                    int64x2_t v59 = v55[-6];
                    int64x2_t v60 = v55[3];
                    int64x2_t v61 = *v55;
                    v55 += 12;
                    uint64x2_t v62 = (uint64x2_t)vdupq_n_s64(1uLL);
                    int8x16_t v54 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64(v62, (uint64x2_t)vandq_s8((int8x16_t)v57, v235)), (int8x16_t)vceqzq_s64(vzip1q_s64(v59, v58))), v54);
                    int8x16_t v53 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64(v62, (uint64x2_t)vandq_s8((int8x16_t)vaddq_s64(v57, v236), v235)), (int8x16_t)vceqzq_s64(vzip1q_s64(v61, v60))), v53);
                    int64x2_t v57 = vaddq_s64(v57, vdupq_n_s64(4uLL));
                    v56 -= 4;
                  }
                  while (v56);
                  int8x16_t v63 = vorrq_s8(v53, v54);
                  int8x8_t v38 = vorr_s8(*(int8x8_t *)v63.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL));
                }
                else
                {
                  uint64_t v51 = 0;
                }
                uint64_t v64 = (uint64_t *)&v262[48 * v51 + 24];
                do
                {
                  uint64_t v65 = *v64;
                  v64 += 6;
                  if (v65) {
                    uint64_t v66 = 1 << v51;
                  }
                  else {
                    uint64_t v66 = 0;
                  }
                  *(void *)&v38 |= v66;
                  ++v51;
                }
                while (v46 != v51);
              }
              LODWORD(v67) = 0;
              uint64_t v68 = 0;
              int8x8_t v69 = 0;
              int v70 = v263;
              uint64_t v71 = 0xFFFFFFFFLL;
              uint64_t v72 = v261;
              uint64_t v73 = v260;
LABEL_89:
              uint64_t v43 = v71;
              int8x8_t v50 = v69;
              uint64_t v248 = v68;
              int v246 = v67;
              LODWORD(v67) = v70;
              while ((v67 & 0x80000000) != 0)
              {
                LODWORD(v263) = 0;
                if ((int)v72 >= 1)
                {
                  uint64_t v94 = 0;
                  uint64_t v95 = v260;
                  do
                  {
                    sqlite3_int64 v98 = &v262[48 * v94];
                    int v100 = (unsigned __int8 *)*((void *)v98 + 3);
                    int v99 = (unsigned __int8 **)(v98 + 24);
                    uint64_t v96 = v100;
                    if (v100)
                    {
                      for (uint64_t i = (uint64_t)*(v99 - 1); ; i += (int)(v102 - 2))
                      {
                        if (i >= v95) {
                          goto LABEL_138;
                        }
                        unsigned int v102 = *v96;
                        if (v102 < 2) {
                          break;
                        }
                        if ((v102 & 0x80) != 0)
                        {
                          unsigned int v102 = v102 & 0x7F | (v96[1] << 7);
                          if ((char)v96[1] < 0)
                          {
                            unsigned int v102 = v102 & 0x3FFF | (v96[2] << 14);
                            if ((char)v96[2] < 0)
                            {
                              unsigned int v102 = v102 & 0x1FFFFF | (v96[3] << 21);
                              if ((char)v96[3] < 0)
                              {
                                unsigned int v102 = v102 & 0xFFFFFFF | ((v96[4] & 7) << 28);
                                uint64_t v101 = 5;
                              }
                              else
                              {
                                uint64_t v101 = 4;
                              }
                            }
                            else
                            {
                              uint64_t v101 = 3;
                            }
                          }
                          else
                          {
                            uint64_t v101 = 2;
                          }
                        }
                        else
                        {
                          uint64_t v101 = 1;
                        }
                        v96 += v101;
                      }
                      uint64_t v96 = 0;
                      uint64_t i = -1;
LABEL_138:
                      *(v99 - 1) = (unsigned __int8 *)i;
                      *int v99 = v96;
                    }
                    ++v94;
                  }
                  while (v94 != v72);
                  LODWORD(v67) = 0;
LABEL_155:
                  uint64_t v103 = 0;
                  int8x8_t v69 = 0;
                  uint64_t v68 = 0;
                  uint64_t v71 = 0;
                  uint64_t v104 = v260 + (uint64_t)(int)v67;
                  while (1)
                  {
                    BOOL v105 = &v262[48 * v103];
                    uint64_t v106 = (unsigned __int8 *)*((void *)v105 + 5);
                    if (v106)
                    {
                      uint64_t v107 = *(void *)&v262[48 * v103 + 32];
                      if (v107 < v104 && v107 >= (int)v67) {
                        break;
                      }
                    }
LABEL_157:
                    if (++v103 == v72) {
                      goto LABEL_91;
                    }
                  }
                  uint64_t v109 = *(unsigned int *)v105;
                  uint64_t v110 = v68 | (1 << v103);
                  while (2)
                  {
                    if (((v68 | v37) & (1 << v103)) != 0) {
                      uint64_t v71 = (v71 + 1);
                    }
                    else {
                      uint64_t v71 = (v71 + 1000);
                    }
                    if ((int)v109 >= 1)
                    {
                      unint64_t v113 = 1 << (v107 - v67);
                      if (v109 < 4)
                      {
                        uint64_t j = 0;
                        goto LABEL_178;
                      }
                      int8x16_t v115 = 0uLL;
                      int8x16_t v116 = (int8x16_t)(unint64_t)v69;
                      uint64x2_t v117 = (uint64x2_t)vdupq_n_s64(v113);
                      uint64_t v118 = v109 & 0xFFFFFFFC;
                      int64x2_t v119 = (int64x2_t)xmmword_1B0DE1490;
                      do
                      {
                        int8x16_t v116 = vorrq_s8((int8x16_t)vshlq_u64(v117, (uint64x2_t)vnegq_s64(v119)), v116);
                        int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u64(v117, (uint64x2_t)vsubq_s64(v234, v119)), v115);
                        int64x2_t v119 = vaddq_s64(v119, vdupq_n_s64(4uLL));
                        v118 -= 4;
                      }
                      while (v118);
                      int8x16_t v120 = vorrq_s8(v115, v116);
                      int8x8_t v69 = vorr_s8(*(int8x8_t *)v120.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v120, v120, 8uLL));
                      for (uint64_t j = v109 & 0xFFFFFFFC; v109 != j; ++j)
LABEL_178:
                        *(void *)&v69 |= v113 >> j;
                    }
                    unsigned int v121 = *v106;
                    if (v121 < 2) {
                      goto LABEL_156;
                    }
                    if ((v121 & 0x80) != 0)
                    {
                      unsigned int v121 = v121 & 0x7F | (v106[1] << 7);
                      if ((char)v106[1] < 0)
                      {
                        unsigned int v121 = v121 & 0x3FFF | (v106[2] << 14);
                        if ((char)v106[2] < 0)
                        {
                          unsigned int v121 = v121 & 0x1FFFFF | (v106[3] << 21);
                          if ((char)v106[3] < 0)
                          {
                            unsigned int v121 = v121 & 0xFFFFFFF | ((v106[4] & 7) << 28);
                            uint64_t v111 = 5;
                          }
                          else
                          {
                            uint64_t v111 = 4;
                          }
                        }
                        else
                        {
                          uint64_t v111 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v111 = 2;
                      }
                    }
                    else
                    {
                      uint64_t v111 = 1;
                    }
                    v106 += v111;
                    v107 += (int)(v121 - 2);
                    BOOL v112 = v107 >= v104 || v107 < (int)v67;
                    uint64_t v68 = v110;
                    if (v112)
                    {
LABEL_156:
                      uint64_t v68 = v110;
                      goto LABEL_157;
                    }
                    continue;
                  }
                }
                LODWORD(v67) = 0;
                uint64_t v71 = 0;
                uint64_t v68 = 0;
                int8x8_t v69 = 0;
LABEL_91:
                int v70 = v67;
                if ((int)v71 > (int)v43) {
                  goto LABEL_89;
                }
              }
              if ((int)v72 >= 1)
              {
                uint64_t v74 = v262 + 24;
                int v75 = 0x7FFFFFFF;
                uint64_t v76 = v72;
                do
                {
                  if (*v74 && *(v74 - 1) < v75) {
                    int v75 = *(v74 - 1);
                  }
                  v74 += 6;
                  --v76;
                }
                while (v76);
                if (v75 != 0x7FFFFFFF)
                {
                  uint64_t v77 = 0;
                  uint64_t v67 = v75 - v73 + 1;
                  LODWORD(v263) = v75 - v73 + 1;
                  uint64_t v78 = v75 + 1;
                  do
                  {
                    uint64_t v81 = v262;
                    uint64_t v82 = &v262[48 * v77];
                    uint64_t v85 = (unsigned __int8 *)*((void *)v82 + 3);
                    sqlite3_int64 v83 = (unsigned __int8 **)(v82 + 24);
                    uint64_t v84 = v85;
                    if (v85)
                    {
                      for (uint64_t k = (uint64_t)*(v83 - 1); ; k += (int)(v88 - 2))
                      {
                        if (k >= v78) {
                          goto LABEL_120;
                        }
                        unsigned int v88 = *v84;
                        if (v88 < 2) {
                          break;
                        }
                        if ((v88 & 0x80) != 0)
                        {
                          unsigned int v88 = v88 & 0x7F | (v84[1] << 7);
                          if ((char)v84[1] < 0)
                          {
                            unsigned int v88 = v88 & 0x3FFF | (v84[2] << 14);
                            if ((char)v84[2] < 0)
                            {
                              unsigned int v88 = v88 & 0x1FFFFF | (v84[3] << 21);
                              if ((char)v84[3] < 0)
                              {
                                unsigned int v88 = v88 & 0xFFFFFFF | ((v84[4] & 7) << 28);
                                uint64_t v87 = 5;
                              }
                              else
                              {
                                uint64_t v87 = 4;
                              }
                            }
                            else
                            {
                              uint64_t v87 = 3;
                            }
                          }
                          else
                          {
                            uint64_t v87 = 2;
                          }
                        }
                        else
                        {
                          uint64_t v87 = 1;
                        }
                        v84 += v87;
                      }
                      uint64_t v84 = 0;
                      uint64_t k = -1;
LABEL_120:
                      *(v83 - 1) = (unsigned __int8 *)k;
                      *sqlite3_int64 v83 = v84;
                    }
                    uint64_t v89 = &v81[48 * v77];
                    uint64_t v91 = (unsigned __int8 *)*((void *)v89 + 5);
                    unint64_t v90 = (unsigned __int8 **)(v89 + 40);
                    uint64_t v79 = v91;
                    if (v91)
                    {
                      for (uint64_t m = (uint64_t)*(v90 - 1); ; m += (int)(v93 - 2))
                      {
                        if (m >= v67) {
                          goto LABEL_103;
                        }
                        unsigned int v93 = *v79;
                        if (v93 < 2) {
                          break;
                        }
                        if ((v93 & 0x80) != 0)
                        {
                          unsigned int v93 = v93 & 0x7F | (v79[1] << 7);
                          if ((char)v79[1] < 0)
                          {
                            unsigned int v93 = v93 & 0x3FFF | (v79[2] << 14);
                            if ((char)v79[2] < 0)
                            {
                              unsigned int v93 = v93 & 0x1FFFFF | (v79[3] << 21);
                              if ((char)v79[3] < 0)
                              {
                                unsigned int v93 = v93 & 0xFFFFFFF | ((v79[4] & 7) << 28);
                                uint64_t v92 = 5;
                              }
                              else
                              {
                                uint64_t v92 = 4;
                              }
                            }
                            else
                            {
                              uint64_t v92 = 3;
                            }
                          }
                          else
                          {
                            uint64_t v92 = 2;
                          }
                        }
                        else
                        {
                          uint64_t v92 = 1;
                        }
                        v79 += v92;
                      }
                      uint64_t v79 = 0;
                      uint64_t m = -1;
LABEL_103:
                      *(v90 - 1) = (unsigned __int8 *)m;
                      *unint64_t v90 = v79;
                    }
                    ++v77;
                  }
                  while (v77 != v72);
                  goto LABEL_155;
                }
              }
              int v242 = v41;
            }
            int v35 = v255;
            sqlite3_int64 v122 = v262;
            if (v262)
            {
              uint64_t v123 = (uint64_t (**)(char *))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                int8x8_t v124 = v50;
                int v125 = v45;
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v122);
                --qword_1EB220150;
                off_1EB21C9E8(v122);
                sqlite3_int64 v122 = (char *)xmmword_1EB2201B0;
                int v39 = v245;
                int v35 = v255;
                int v45 = v125;
                if (!(void)xmmword_1EB2201B0) {
                  goto LABEL_197;
                }
                uint64_t v123 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
              }
              else
              {
                int8x8_t v124 = v50;
                int v125 = v45;
              }
              (*v123)(v122);
              int v35 = v255;
              int v45 = v125;
              int8x8_t v50 = v124;
            }
LABEL_197:
            if (v45)
            {
              uint64_t v133 = 0;
              int v134 = v231;
              uint64_t v30 = v239;
              goto LABEL_236;
            }
            uint64_t v30 = v239;
            int v41 = __s;
            if ((int)v43 <= v253)
            {
              uint64_t v43 = v253;
            }
            else
            {
              *(_DWORD *)unsigned int v238 = v242;
              *((_DWORD *)v238 + 1) = v246;
              v238[1] = v248;
              v238[2] = v50;
            }
            goto LABEL_66;
          }
LABEL_62:
          v37 |= *(void *)&v271[6 * v233 + 3];
          uint64_t v36 = v233 + 1;
        }
        while (v233 + 1 != v232);
        if (*(void *)&v38 != v37 && v232 != 4)
        {
          uint64_t v34 = v232 + 1;
          int v33 = v228;
          int v240 = v229;
          if (v230 < 0) {
            continue;
          }
LABEL_60:
          int v240 = (v33 + (int)v34) / (int)v34;
          continue;
        }
        break;
      }
      uint64_t v143 = 0;
      uint64_t v144 = 0;
      uint64_t v256 = 0;
      uint64_t v133 = 0;
      int v134 = v231;
      uint64_t v145 = v245;
      while (2)
      {
        uint64_t v247 = v143;
        sqlite3_int64 v146 = &v271[6 * v143 + 1];
        uint64_t v147 = *v145;
        int v268 = 0;
        unint64_t v148 = *((void *)v146 + 2);
        int v249 = v146[1];
        int v149 = *v146 + 1;
        v150 = sqlite3_column_text((sqlite3_stmt *)v145[2], v149);
        int v151 = (sqlite3_stmt *)v145[2];
        if (!v150)
        {
          if (sqlite3_column_type(v151, v149) == 5) {
            int v45 = 0;
          }
          else {
            int v45 = 7;
          }
          goto LABEL_380;
        }
        int v152 = sqlite3_column_bytes(v151, v149);
        uint64_t v237 = v147;
        v153 = *(uint64_t **)(v147 + 72);
        uint64_t v154 = *v153;
        uint64_t v155 = *((unsigned int *)v145 + 8);
        uint64_t v258 = 0;
        __sa = (char *)v150;
        int v241 = v152;
        int v156 = (*(uint64_t (**)(uint64_t *, const unsigned __int8 *))(v154 + 24))(v153, v150);
        if (v156)
        {
          int v224 = v156;
          goto LABEL_394;
        }
        *uint64_t v258 = v153;
        if (*(int *)v154 < 1)
        {
          uint64_t v254 = v258;
        }
        else
        {
          int v157 = (*(uint64_t (**)(uint64_t **, uint64_t))(v154 + 48))(v258, v155);
          uint64_t v254 = v258;
          if (v157)
          {
            int v224 = v157;
            (*(void (**)(uint64_t **))(v154 + 32))(v258);
LABEL_394:
            int v134 = v231;
            uint64_t v30 = v239;
            int v45 = v224;
            break;
          }
        }
        int v158 = v249;
        int v159 = 0;
        int v160 = 0;
        uint64_t v250 = v154;
        uint64_t v161 = v254;
        while (2)
        {
          v264 = 0;
          int v267 = -1;
          uint64_t v266 = 0;
          int v163 = (*(uint64_t (**)(uint64_t **, void **, int *, char *, uint64_t *, int *))(v154 + 40))(v161, &v264, &v267, (char *)&v266 + 4, &v266, &v268);
          if (v163)
          {
            int v162 = v163;
            if (v163 != 101) {
              goto LABEL_377;
            }
            int v211 = &__sa[v160];
            int v212 = strlen(v211);
            uint64_t v213 = v144;
            if ((int)v256 + v212 + 1 >= (int)v144)
            {
              if (sqlite3_initialize()) {
                goto LABEL_371;
              }
              uint64_t v220 = v212 + (uint64_t)(int)v144 + 100;
              uint64_t v221 = sub_1B0C8E1B8(v133, v220);
              if (!v221) {
                goto LABEL_371;
              }
              uint64_t v133 = v221;
              uint64_t v213 = v220;
            }
            memcpy((void *)(v133 + (int)v256), v211, v212);
            uint64_t v214 = (v256 + v212);
            goto LABEL_369;
          }
          int v164 = v268;
          if (v268 < v158)
          {
            int v162 = 0;
            goto LABEL_284;
          }
          if (v159)
          {
            uint64_t v165 = v256;
            goto LABEL_330;
          }
          int v243 = v160;
          if (!v148) {
            goto LABEL_306;
          }
          uint64_t v166 = 0;
          uint64_t v167 = *((unsigned int *)v145 + 8);
          int v168 = 1;
          do
          {
            int v169 = v168;
            unint64_t v170 = v148 >> v166++;
            ++v168;
          }
          while ((v170 & 1) == 0);
          int v171 = v240 - 1;
          do
          {
            --v169;
            unint64_t v172 = v148 >> v171--;
          }
          while ((v172 & 1) == 0);
          int v173 = v169 >= 0 ? v169 : v169 + 1;
          if (v169 >= 2)
          {
            uint64_t v174 = v144;
            v271[0] = 0;
            uint64_t v175 = *(uint64_t **)(v237 + 72);
            uint64_t v176 = *v175;
            uint64_t v258 = 0;
            int v177 = (*(uint64_t (**)(uint64_t *, char *, void, uint64_t ***))(v176 + 24))(v175, &__sa[SHIDWORD(v266)], (v241 - HIDWORD(v266)), &v258);
            if (v177)
            {
              int v223 = v177;
              goto LABEL_392;
            }
            *uint64_t v258 = v175;
            v178 = v258;
            if (*(int *)v176 >= 1)
            {
              int v179 = (*(uint64_t (**)(uint64_t **, uint64_t))(v176 + 48))(v258, v167);
              v178 = v258;
              if (v179)
              {
                int v223 = v179;
                (*(void (**)(uint64_t **))(v176 + 32))(v258);
                goto LABEL_392;
              }
            }
            int v180 = (v173 >> 1) + v240;
            do
            {
              int v181 = v271[0];
              if (v271[0] >= v180)
              {
                (*(void (**)(uint64_t **))(v176 + 32))(v178);
                goto LABEL_308;
              }
              uint64_t v258 = 0;
              uint64_t v270 = 0;
              int v269 = 0;
              int v182 = (*(uint64_t (**)(uint64_t **, uint64_t ***, char *, uint64_t *, int *, _DWORD *))(v176 + 40))(v178, &v258, (char *)&v270 + 4, &v270, &v269, v271);
            }
            while (!v182);
            v183 = *(void (**)(void))(v176 + 32);
            int v184 = v182;
            v183(v178);
            if (v184 != 101)
            {
              int v223 = v184;
              goto LABEL_392;
            }
LABEL_308:
            int v186 = ((v181 < v180) - v240 + v271[0]) & ~(((v181 < v180) - v240 + v271[0]) >> 31);
            v158 += v186;
            v148 >>= v186;
            uint64_t v185 = v247;
            uint64_t v161 = v254;
            int v160 = v243;
          }
          else
          {
LABEL_306:
            uint64_t v185 = v247;
          }
          if (!v185 && v158 < 1)
          {
            int v187 = HIDWORD(v266);
            if (HIDWORD(v266))
            {
              if (v266 < 0) {
                int v187 = strlen(__sa);
              }
              uint64_t v174 = v144;
              if ((int)v256 + v187 + 1 >= (int)v144)
              {
                if (sqlite3_initialize()) {
                  goto LABEL_385;
                }
                size_t v188 = v187;
                uint64_t v193 = sub_1B0C8E1B8(v133, v187 + (uint64_t)(int)v144 + 100);
                if (!v193) {
                  goto LABEL_385;
                }
                uint64_t v133 = v193;
                uint64_t v174 = v187 + (uint64_t)(int)v144 + 100;
              }
              else
              {
                size_t v188 = v187;
              }
              int v192 = v256;
              memcpy((void *)(v133 + (int)v256), __sa, v188);
              uint64_t v144 = v174;
LABEL_327:
              *(unsigned char *)(v133 + v187 + (uint64_t)v192) = 0;
              uint64_t v165 = v187 + (uint64_t)v192;
              uint64_t v161 = v254;
              int v160 = v243;
            }
            else
            {
              uint64_t v165 = v256;
            }
            int v164 = v268;
            uint64_t v145 = v245;
            uint64_t v154 = v250;
            if (v268 < v158)
            {
              uint64_t v256 = v165;
              int v162 = 0;
              int v159 = 1;
              goto LABEL_284;
            }
LABEL_330:
            if (v164 < v158 + v240)
            {
              char v194 = v164 - v158;
              if (v164 <= v158) {
                goto LABEL_337;
              }
              uint64_t v195 = &__sa[v160];
              int v196 = HIDWORD(v266) - v160;
              if (HIDWORD(v266) - v160 < 0) {
                int v196 = strlen(&__sa[v160]);
              }
              if ((int)v165 + v196 + 1 < (int)v144)
              {
                size_t v197 = v196;
                goto LABEL_336;
              }
              uint64_t v256 = v165;
              if (sqlite3_initialize()) {
                goto LABEL_359;
              }
              size_t v197 = v196;
              unsigned int v244 = v144;
              uint64_t v209 = sub_1B0C8E1B8(v133, v196 + (uint64_t)(int)v144 + 100);
              if (!v209) {
                goto LABEL_362;
              }
              uint64_t v133 = v209;
              uint64_t v144 = v196 + (uint64_t)(int)v144 + 100;
LABEL_336:
              memcpy((void *)(v133 + (int)v165), v195, v197);
              *(unsigned char *)(v133 + (int)v165 + (uint64_t)v196) = 0;
              uint64_t v165 = (int)v165 + (uint64_t)v196;
LABEL_337:
              uint64_t v198 = (1 << v194) & v148;
              if (!v198) {
                goto LABEL_340;
              }
              int v199 = strlen(v227);
              if ((int)v165 + v199 + 1 < (int)v144) {
                goto LABEL_339;
              }
              uint64_t v256 = v165;
              if (sqlite3_initialize()) {
                goto LABEL_359;
              }
              unsigned int v244 = v144;
              uint64_t v208 = sub_1B0C8E1B8(v133, v199 + (uint64_t)(int)v144 + 100);
              if (!v208) {
                goto LABEL_362;
              }
              uint64_t v133 = v208;
              uint64_t v144 = v199 + (uint64_t)(int)v144 + 100;
LABEL_339:
              memcpy((void *)(v133 + (int)v165), v227, v199);
              *(unsigned char *)(v133 + (int)v165 + (uint64_t)v199) = 0;
              uint64_t v165 = (int)v165 + (uint64_t)v199;
LABEL_340:
              int v200 = &__sa[SHIDWORD(v266)];
              int v201 = v266 - HIDWORD(v266);
              if ((int)v266 - HIDWORD(v266) < 0) {
                int v201 = strlen(&__sa[SHIDWORD(v266)]);
              }
              if ((int)v165 + v201 + 1 < (int)v144)
              {
                size_t v202 = v201;
                goto LABEL_344;
              }
              uint64_t v256 = v165;
              if (sqlite3_initialize()) {
                goto LABEL_359;
              }
              size_t v202 = v201;
              unsigned int v244 = v144;
              uint64_t v207 = sub_1B0C8E1B8(v133, v201 + (uint64_t)(int)v144 + 100);
              if (v207)
              {
                uint64_t v133 = v207;
                uint64_t v144 = v201 + (uint64_t)(int)v144 + 100;
LABEL_344:
                memcpy((void *)(v133 + (int)v165), v200, v202);
                uint64_t v203 = (int)v165 + (uint64_t)v201;
                *(unsigned char *)(v133 + v203) = 0;
                if (!v198)
                {
                  uint64_t v256 = v203;
                  int v162 = 0;
                  goto LABEL_360;
                }
                int v204 = strlen(v225);
                int v205 = v204;
                if ((int)v203 + v204 + 1 < (int)v144)
                {
                  size_t v206 = v204;
                  goto LABEL_347;
                }
                uint64_t v256 = v203;
                if (sqlite3_initialize())
                {
LABEL_359:
                  int v162 = 7;
                  goto LABEL_360;
                }
                size_t v206 = v205;
                uint64_t v210 = sub_1B0C8E1B8(v133, v205 + (uint64_t)(int)v144 + 100);
                if (v210)
                {
                  uint64_t v133 = v210;
                  uint64_t v144 = v205 + (uint64_t)(int)v144 + 100;
LABEL_347:
                  memcpy((void *)(v133 + v203), v225, v206);
                  int v162 = 0;
                  uint64_t v256 = (v203 + v205);
                  *(unsigned char *)(v133 + (int)v256) = 0;
LABEL_360:
                  uint64_t v145 = v245;
                }
                else
                {
                  int v162 = 7;
                  uint64_t v145 = v245;
                }
              }
              else
              {
LABEL_362:
                int v162 = 7;
                uint64_t v145 = v245;
                uint64_t v144 = v244;
              }
              uint64_t v154 = v250;
              uint64_t v161 = v254;
              int v159 = 1;
              int v160 = v266;
LABEL_284:
              if (v162) {
                goto LABEL_379;
              }
              continue;
            }
            uint64_t v256 = v165;
            uint64_t v213 = v144;
            if (v247 != v232 - 1)
            {
              int v162 = 0;
              goto LABEL_376;
            }
            int v215 = strlen(v226);
            int v216 = v215;
            if ((int)v165 + v215 + 1 < (int)v144)
            {
              size_t v217 = v215;
              goto LABEL_389;
            }
            if (!sqlite3_initialize())
            {
              size_t v217 = v216;
              uint64_t v222 = sub_1B0C8E1B8(v133, v216 + (uint64_t)(int)v144 + 100);
              if (v222)
              {
                uint64_t v133 = v222;
                uint64_t v213 = v216 + (uint64_t)(int)v144 + 100;
LABEL_389:
                memcpy((void *)(v133 + (int)v165), v226, v217);
                uint64_t v214 = (v165 + v216);
LABEL_369:
                uint64_t v256 = v214;
                int v162 = 0;
                *(unsigned char *)(v133 + (int)v214) = 0;
LABEL_376:
                uint64_t v144 = v213;
LABEL_377:
                uint64_t v145 = v245;
                goto LABEL_378;
              }
            }
LABEL_371:
            int v162 = 7;
            goto LABEL_376;
          }
          break;
        }
        int v189 = strlen(v226);
        int v187 = v189;
        if ((int)v256 + v189 + 1 < (int)v144)
        {
          size_t v190 = v189;
LABEL_321:
          int v192 = v256;
          memcpy((void *)(v133 + (int)v256), v226, v190);
          goto LABEL_327;
        }
        uint64_t v174 = v144;
        if (!sqlite3_initialize())
        {
          size_t v190 = v187;
          uint64_t v191 = sub_1B0C8E1B8(v133, v187 + (uint64_t)(int)v144 + 100);
          if (v191)
          {
            uint64_t v133 = v191;
            uint64_t v144 = v187 + (uint64_t)(int)v144 + 100;
            goto LABEL_321;
          }
        }
LABEL_385:
        int v223 = 7;
LABEL_392:
        uint64_t v145 = v245;
        int v162 = v223;
        uint64_t v144 = v174;
LABEL_378:
        uint64_t v154 = v250;
        uint64_t v161 = v254;
LABEL_379:
        uint64_t v218 = v161;
        int v219 = v162;
        (*(void (**)(uint64_t **))(v154 + 32))(v218);
        int v45 = v219;
        int v134 = v231;
        uint64_t v30 = v239;
LABEL_380:
        uint64_t v143 = v247 + 1;
        if (v247 + 1 < (unint64_t)v232 && !v45) {
          continue;
        }
        break;
      }
LABEL_236:
      BOOL v135 = *(void **)(v30 + 480);
      if (v135)
      {
        int v136 = v45;
        int v137 = (sqlite3_stmt *)v135[3];
        char v138 = (void *)v135[4];
        uint64_t v139 = v138[3];
        if (v139) {
          xmmword_1EB21CA40(v139);
        }
        sub_1B0D05C10(v138, v135);
        uint64_t v140 = v138[3];
        if (v140) {
          xmmword_1EB21CA50(v140);
        }
        sqlite3_finalize(v137);
        int v45 = v136;
      }
      *(void *)(v30 + 480) = 0;
      if (!v45)
      {
        if (v134)
        {
          int v131 = sqlite3_free;
          uint64_t v129 = (uint64_t)v134;
          BOOL v128 = (char *)v133;
          int v130 = -1;
          goto LABEL_251;
        }
        goto LABEL_252;
      }
      if (v134)
      {
        *((_DWORD *)v134 + 9) = v45;
        if (*(_WORD *)(*(void *)v134 + 20))
        {
          switch(v45)
          {
            case 516:
              int v141 = "abort due to ROLLBACK";
              break;
            case 101:
              int v141 = "no more rows available";
              break;
            case 100:
              int v141 = "another row available";
              break;
            default:
              if v45 > 0x1Cu || ((0x1410004uLL >> v45)) {
                int v141 = "unknown error";
              }
              else {
                int v141 = off_1E5FF0368[v45];
              }
              break;
          }
          sub_1B0CEA530((uint64_t)v134, v141, -1, 1u, 0);
        }
      }
      else
      {
        sub_1B0CE1978(97620);
      }
      if (v133)
      {
        int v142 = (void (**)(uint64_t))&off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_271;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v133);
        --qword_1EB220150;
        off_1EB21C9E8(v133);
        uint64_t v133 = xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          int v142 = (void (**)(uint64_t))&xmmword_1EB21CA50;
LABEL_271:
          (*v142)(v133);
        }
      }
      return;
    default:
      uint64_t v14 = "<b>";
      goto LABEL_51;
  }
}

void sub_1B0D9821C(_DWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  uint64_t v67 = 0;
  if (sub_1B0D99D0C((uint64_t)a1, "offsets", *a3, &v67)) {
    return;
  }
  uint64_t v4 = v67;
  if (sub_1B0D8E810(a1, v67)) {
    return;
  }
  int v5 = *(_DWORD **)(v4 + 24);
  if (!v5)
  {
    if (a1)
    {
      uint64_t v12 = &byte_1B0DE9952;
      uint64_t v13 = (uint64_t)a1;
      int v14 = 0;
      uint64_t v15 = 0;
LABEL_34:
      sub_1B0CEA530(v13, v12, v14, 1u, (uint64_t (*)(uint64_t))v15);
      return;
    }
LABEL_35:
    sub_1B0CE1978(97498);
    return;
  }
  uint64_t v6 = *(void *)v4;
  uint64_t v7 = **(void **)(*(void *)v4 + 72);
  long long v71 = 0u;
  long long v72 = 0u;
  BOOL __src = (void *)v4;
  uint64_t v74 = 0;
  LODWORD(v70) = 0;
  int v8 = sub_1B0D99FB8(v5, &v70, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D99F98, (uint64_t)&__src);
  if (v8)
  {
    int v9 = v8;
    int v10 = 0;
    LODWORD(v11) = 0;
    goto LABEL_12;
  }
  uint64_t v16 = SHIDWORD(v74);
  if (!sqlite3_initialize())
  {
    uint64_t v25 = (void *)sub_1B0C7FC94(24 * v16);
    if (v25)
    {
      int v26 = v25;
      bzero(v25, 24 * v16);
      *(void *)&long long v72 = *(void *)(v4 + 48);
      *((void *)&v72 + 1) = v26;
      *(void *)&long long v71 = v4;
      if (*(int *)(v6 + 48) < 1)
      {
        int v10 = 0;
        LODWORD(v11) = 0;
        int v9 = 0;
        goto LABEL_12;
      }
      int v27 = 0;
      uint64_t v11 = 0;
      int v10 = 0;
      int v62 = v16;
      uint64_t v63 = v6;
      uint64_t v28 = v16;
      uint64_t v29 = 0;
      uint64_t v61 = v28;
      while (1)
      {
        int v31 = v27;
        uint64_t v69 = 0;
        uint64_t v70 = 0;
        uint64_t v68 = 0;
        *((void *)&v71 + 1) = v27;
        int v32 = *(_DWORD **)(v4 + 24);
        LODWORD(__src) = 0;
        int v33 = sub_1B0D99FB8(v32, &__src, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D9A6E0, (uint64_t)&v71);
        if (v33)
        {
          int v9 = v33;
          goto LABEL_12;
        }
        int v65 = v31;
        int v34 = v31 + 1;
        int v35 = sqlite3_column_text(*(sqlite3_stmt **)(v4 + 16), v31 + 1);
        uint64_t v36 = sqlite3_column_bytes(*(sqlite3_stmt **)(v4 + 16), v34);
        if (v35)
        {
          int v64 = v34;
          uint64_t v37 = v29;
          uint64_t v38 = v11;
          uint64_t v66 = (uint64_t)v10;
          int v39 = *(uint64_t **)(v6 + 72);
          uint64_t v40 = *(unsigned int *)(v4 + 32);
          uint64_t v41 = *v39;
          BOOL __src = 0;
          int v42 = (*(uint64_t (**)(uint64_t *, const unsigned __int8 *, uint64_t, void **))(v41 + 24))(v39, v35, v36, &__src);
          if (v42)
          {
            int v9 = v42;
            int v10 = (char *)v66;
            goto LABEL_111;
          }
          void *__src = v39;
          uint64_t v43 = __src;
          if (*(int *)v41 < 1)
          {
            int v10 = (char *)v66;
          }
          else
          {
            int v44 = (*(uint64_t (**)(void *, uint64_t))(v41 + 48))(__src, v40);
            uint64_t v43 = __src;
            int v10 = (char *)v66;
            if (v44)
            {
              int v9 = v44;
              (*(void (**)(void *))(v41 + 32))(__src);
LABEL_111:
              LODWORD(v11) = v38;
              uint64_t v6 = v63;
              goto LABEL_12;
            }
          }
          uint64_t v6 = v63;
          int v45 = (*(uint64_t (**)(void *, uint64_t *, char *, uint64_t *, char *, uint64_t *))(v7 + 40))(v43, &v70, (char *)&v69 + 4, &v69, (char *)&v68 + 4, &v68);
          uint64_t v11 = v38;
          if (v45)
          {
            int v9 = v45;
            (*(void (**)(void *))(v7 + 32))(v43);
            if (v9 != 101) {
              goto LABEL_12;
            }
            uint64_t v29 = v37;
          }
          else
          {
            uint64_t v29 = v37;
            if (v62 >= 1)
            {
              while (1)
              {
                long long v48 = 0;
                int v49 = 0x7FFFFFFF;
                int8x8_t v50 = (unsigned __int8 **)*((void *)&v72 + 1);
                uint64_t v51 = v61;
                do
                {
                  if (*v50 && v50[1] - v50[2] < v49)
                  {
                    int v49 = *((_DWORD *)v50 + 2) - *((_DWORD *)v50 + 4);
                    long long v48 = v50;
                  }
                  v50 += 3;
                  --v51;
                }
                while (v51);
                if (!v48)
                {
                  int v10 = (char *)v66;
                  uint64_t v6 = v63;
                  goto LABEL_56;
                }
                uint64_t v52 = *v48;
                unsigned int v53 = **v48;
                if (v53 > 1)
                {
                  if ((v53 & 0x80) != 0)
                  {
                    unsigned int v53 = v53 & 0x7F | (v52[1] << 7);
                    if ((char)v52[1] < 0)
                    {
                      unsigned int v53 = v53 & 0x3FFF | (v52[2] << 14);
                      if ((char)v52[2] < 0)
                      {
                        unsigned int v53 = v53 & 0x1FFFFF | (v52[3] << 21);
                        if ((char)v52[3] < 0)
                        {
                          unsigned int v53 = v53 & 0xFFFFFFF | ((v52[4] & 7) << 28);
                          uint64_t v54 = 5;
                        }
                        else
                        {
                          uint64_t v54 = 4;
                        }
                      }
                      else
                      {
                        uint64_t v54 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v54 = 2;
                    }
                  }
                  else
                  {
                    uint64_t v54 = 1;
                  }
                  uint64_t v55 = &v48[1][v53 - 2];
                  *long long v48 = &v52[v54];
                  v48[1] = v55;
                }
                else
                {
                  *long long v48 = 0;
                }
                if ((int)v68 < v49)
                {
                  do
                  {
                    int v56 = (*(uint64_t (**)(void *, uint64_t *, char *, uint64_t *, char *, uint64_t *))(v7 + 40))(v43, &v70, (char *)&v69 + 4, &v69, (char *)&v68 + 4, &v68);
                    if (v56) {
                      BOOL v57 = 0;
                    }
                    else {
                      BOOL v57 = (int)v68 < v49;
                    }
                  }
                  while (v57);
                  int v9 = v56;
                  if (v56) {
                    break;
                  }
                }
                sqlite3_snprintf(64, (char *)&__src, "%d %d %d %d ", v65, -1431655765 * (((uint64_t)v48 - *((void *)&v72 + 1)) >> 3), v69, HIDWORD(v68) - v69);
                int v58 = strlen((const char *)&__src);
                int v59 = v58;
                if ((int)v11 + v58 + 1 < (int)v29)
                {
                  size_t v46 = v58;
                  uint64_t v47 = v66;
                }
                else
                {
                  int v10 = (char *)v66;
                  if (sqlite3_initialize()
                    || (v46 = v59, uint64_t v29 = v59 + (uint64_t)(int)v29 + 100, (v60 = sub_1B0C8E1B8(v66, v29)) == 0))
                  {
                    int v9 = 7;
                    goto LABEL_108;
                  }
                  uint64_t v47 = v60;
                }
                memcpy((void *)(v47 + (int)v11), &__src, v46);
                uint64_t v66 = v47;
                *(unsigned char *)(v47 + (int)v11 + (uint64_t)v59) = 0;
                uint64_t v11 = (int)v11 + (uint64_t)v59;
              }
              int v10 = (char *)v66;
              if (v56 != 101)
              {
LABEL_108:
                (*(void (**)(void *))(v7 + 32))(v43);
                uint64_t v6 = v63;
                goto LABEL_12;
              }
              uint64_t v6 = v63;
              if (*(void *)(v63 + 80)) {
                goto LABEL_56;
              }
              (*(void (**)(void *))(v7 + 32))(v43);
              int v9 = 267;
              goto LABEL_12;
            }
LABEL_56:
            (*(void (**)(void *))(v7 + 32))(v43);
          }
          int v27 = v64;
        }
        else
        {
          if (sqlite3_column_type(*(sqlite3_stmt **)(v4 + 16), v34) != 5) {
            goto LABEL_11;
          }
          int v27 = v34;
        }
        int v9 = 0;
        if (v27 >= *(_DWORD *)(v6 + 48)) {
          goto LABEL_12;
        }
      }
    }
  }
  int v10 = 0;
  LODWORD(v11) = 0;
  *((void *)&v72 + 1) = 0;
LABEL_11:
  int v9 = 7;
LABEL_12:
  uint64_t v17 = *((void *)&v72 + 1);
  if (*((void *)&v72 + 1))
  {
    int v18 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_18:
      (*v18)(v17);
      goto LABEL_19;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v17);
    --qword_1EB220150;
    off_1EB21C9E8(v17);
    uint64_t v17 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v18 = &xmmword_1EB21CA50;
      goto LABEL_18;
    }
  }
LABEL_19:
  uint64_t v19 = *(void **)(v6 + 480);
  if (v19)
  {
    int v20 = (sqlite3_stmt *)v19[3];
    uint64_t v21 = (void *)v19[4];
    uint64_t v22 = v21[3];
    if (v22) {
      xmmword_1EB21CA40(v22);
    }
    sub_1B0D05C10(v21, v19);
    uint64_t v23 = v21[3];
    if (v23) {
      xmmword_1EB21CA50(v23);
    }
    sqlite3_finalize(v20);
  }
  *(void *)(v6 + 480) = 0;
  if (!v9)
  {
    if (a1)
    {
      int v14 = v11 - 1;
      uint64_t v15 = sqlite3_free;
      uint64_t v13 = (uint64_t)a1;
      uint64_t v12 = v10;
      goto LABEL_34;
    }
    goto LABEL_35;
  }
  if (a1)
  {
    a1[9] = v9;
    if (*(_WORD *)(*(void *)a1 + 20))
    {
      switch(v9)
      {
        case 516:
          uint64_t v24 = "abort due to ROLLBACK";
          break;
        case 101:
          uint64_t v24 = "no more rows available";
          break;
        case 100:
          uint64_t v24 = "another row available";
          break;
        default:
          if v9 > 0x1Cu || ((0x1410004uLL >> v9)) {
            uint64_t v24 = "unknown error";
          }
          else {
            uint64_t v24 = off_1E5FF0368[v9];
          }
          break;
      }
      sub_1B0CEA530((uint64_t)a1, v24, -1, 1u, 0);
    }
  }
  else
  {
    sub_1B0CE1978(97620);
  }
  if (v10)
  {
    uint64_t v30 = (uint64_t (**)(char *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_53:
      (*v30)(v10);
      return;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    int v10 = (char *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v30 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
      goto LABEL_53;
    }
  }
}

void sub_1B0D989D0(_DWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v16 = 0;
  if (sub_1B0D99D0C((uint64_t)a1, "optimize", *a3, &v16)) {
    return;
  }
  uint64_t v4 = *v16;
  int v5 = sqlite3_exec(*(sqlite3 **)(*v16 + 24), "SAVEPOINT fts3", 0, 0, 0);
  if (v5)
  {
    uint64_t v6 = *(void **)(v4 + 480);
    if (!v6) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  int v12 = sub_1B0D90764(v4, 1);
  int v5 = v12;
  if (v12 != 101 && v12 != 0)
  {
    sqlite3_exec(*(sqlite3 **)(v4 + 24), "ROLLBACK TO fts3", 0, 0, 0);
    sqlite3_exec(*(sqlite3 **)(v4 + 24), "RELEASE fts3", 0, 0, 0);
    uint64_t v6 = *(void **)(v4 + 480);
    if (!v6) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  int v14 = sqlite3_exec(*(sqlite3 **)(v4 + 24), "RELEASE fts3", 0, 0, 0);
  if (v14) {
    int v5 = v14;
  }
  uint64_t v6 = *(void **)(v4 + 480);
  if (v6)
  {
LABEL_5:
    uint64_t v7 = (sqlite3_stmt *)v6[3];
    int v8 = (void *)v6[4];
    uint64_t v9 = v8[3];
    if (v9) {
      xmmword_1EB21CA40(v9);
    }
    sub_1B0D05C10(v8, v6);
    uint64_t v10 = v8[3];
    if (v10) {
      xmmword_1EB21CA50(v10);
    }
    sqlite3_finalize(v7);
  }
LABEL_10:
  *(void *)(v4 + 480) = 0;
  if (v5 == 101)
  {
    if (a1)
    {
      uint64_t v11 = "Index already optimal";
      goto LABEL_25;
    }
    goto LABEL_33;
  }
  if (!v5)
  {
    if (a1)
    {
      uint64_t v11 = "Index optimized";
LABEL_25:
      sub_1B0CEA530((uint64_t)a1, v11, -1, 1u, 0);
      return;
    }
LABEL_33:
    int v15 = 97498;
    goto LABEL_37;
  }
  if (a1)
  {
    a1[9] = v5;
    if ((*(_WORD *)(*(void *)a1 + 20) & 1) == 0) {
      return;
    }
    if (v5 == 516)
    {
      uint64_t v11 = "abort due to ROLLBACK";
    }
    else if (v5 == 100)
    {
      uint64_t v11 = "another row available";
    }
    else if v5 > 0x1Cu || ((0x1410004uLL >> v5))
    {
      uint64_t v11 = "unknown error";
    }
    else
    {
      uint64_t v11 = off_1E5FF0368[v5];
    }
    goto LABEL_25;
  }
  int v15 = 97620;
LABEL_37:

  sub_1B0CE1978(v15);
}

void sub_1B0D98C4C(uint64_t a1, int a2, uint64_t *a3)
{
  int8x16_t v120 = 0;
  if (sub_1B0D99D0C(a1, "matchinfo", *a3, &v120)) {
    return;
  }
  if (a2 < 2) {
    goto LABEL_9;
  }
  uint64_t v6 = a3[1];
  if (!v6) {
    goto LABEL_10;
  }
  int v7 = *(unsigned __int16 *)(v6 + 20);
  if ((~v7 & 0x202) == 0 && *(unsigned char *)(v6 + 22) == 1)
  {
    uint64_t v6 = *(void *)(v6 + 8);
    goto LABEL_10;
  }
  if (v7) {
LABEL_9:
  }
    uint64_t v6 = 0;
  else {
    uint64_t v6 = sub_1B0D18254((int *)v6, 1);
  }
LABEL_10:
  uint64_t v8 = (uint64_t)v120;
  if (v6) {
    uint64_t v9 = (const char *)v6;
  }
  else {
    uint64_t v9 = "pcx";
  }
  uint64_t v10 = (_DWORD *)v120[3];
  if (!v10)
  {
    if (a1)
    {
      sub_1B0CEA530(a1, &byte_1B0DE9952, 0, 0, 0);
    }
    else
    {
      sub_1B0CE1978(97366);
    }
    return;
  }
  uint64_t v11 = *v120;
  long long v122 = 0u;
  long long v123 = 0u;
  unsigned int v121 = v120;
  LODWORD(v122) = *(_DWORD *)(v11 + 48);
  int v12 = (char *)v120[15];
  if (!v12)
  {
LABEL_25:
    LODWORD(pStmt) = 0;
    LODWORD(v126) = 0;
    sub_1B0D99FB8(v10, &v126, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D9A894, (uint64_t)&pStmt);
    int v14 = (int)pStmt;
    *(_DWORD *)(v8 + 36) = pStmt;
    DWORD1(v122) = v14;
    char v15 = *v9;
    if (*v9)
    {
      uint64_t v16 = 0;
      int v17 = v122 + 31;
      if ((int)v122 < -31) {
        int v17 = v122 + 62;
      }
      uint64_t v18 = (v17 >> 5) * v14;
      int v19 = v122 * v14;
      uint64_t v20 = (int)v122 * v14;
      uint64_t v21 = 3 * v19;
      uint64_t v22 = (unsigned __int8 *)(v9 + 1);
      while (2)
      {
        uint64_t v126 = 0;
        uint64_t v23 = 1;
        switch(v15)
        {
          case 'a':
            uint64_t v23 = (int)v122;
            if (!*(unsigned char *)(v11 + 460)) {
              goto LABEL_58;
            }
            goto LABEL_30;
          case 'b':
            uint64_t v23 = v18;
            goto LABEL_30;
          case 'c':
          case 'p':
            goto LABEL_30;
          case 'l':
            uint64_t v23 = (int)v122;
            if (!*(unsigned char *)(v11 + 462)) {
              goto LABEL_58;
            }
            goto LABEL_30;
          case 'n':
            if (!*(unsigned char *)(v11 + 460)) {
              goto LABEL_58;
            }
            uint64_t v23 = 1;
LABEL_30:
            v16 += v23;
            int v24 = *v22++;
            char v15 = v24;
            if (v24) {
              continue;
            }
            goto LABEL_46;
          case 's':
            uint64_t v23 = (int)v122;
            goto LABEL_30;
          case 'x':
            uint64_t v23 = v21;
            goto LABEL_30;
          case 'y':
            uint64_t v23 = v20;
            goto LABEL_30;
          default:
LABEL_58:
            sub_1B0D7BFCC((char **)&v126, "unrecognized matchinfo request: %c", v15);
            int v35 = (char *)v126;
            if (a1)
            {
              *(_DWORD *)(a1 + 36) = 1;
              sub_1B0C79BBC(*(void *)a1, v35, -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
            }
            else
            {
              sub_1B0CE1978(97407);
            }
            if (!v35) {
              goto LABEL_235;
            }
            int v108 = (void (**)(char *))&off_1EB21C9E8;
            if (!dword_1EB21C9C0) {
              goto LABEL_230;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v35);
            --qword_1EB220150;
            off_1EB21C9E8(v35);
            int v35 = (char *)xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              int v108 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_230:
              (*v108)(v35);
            }
            break;
        }
        goto LABEL_235;
      }
    }
    uint64_t v16 = 0;
LABEL_46:
    uint64_t v119 = v11;
    size_t v25 = strlen(v9);
    if (sqlite3_initialize() || (v31 = 8 * v16 + 36, v32 = v25 + 1, (int v33 = (char *)sub_1B0C7FC94(v32 + v31)) == 0))
    {
      int v26 = 0;
      int v27 = 0;
      *(void *)(v8 + 120) = 0;
      *(_DWORD *)(v8 + 112) = 1;
      int v28 = 7;
      goto LABEL_203;
    }
    int v12 = v33;
    bzero(v33, v32 + v31);
    *((_DWORD *)v12 + 6) = 28;
    *(_DWORD *)&v12[4 * v16 + 28] = ((unint64_t)((v16 << 32) + 0x100000000) >> 30) + 28;
    *((_DWORD *)v12 + 1) = v16;
    *((void *)v12 + 2) = &v12[v31];
    memcpy(&v12[v31], v9, v32);
    char v29 = 0;
    *int v12 = 1;
    *(void *)(v8 + 120) = v12;
    *(_DWORD *)(v8 + 112) = 1;
    if (!v12[1]) {
      goto LABEL_54;
    }
    goto LABEL_49;
  }
  if (strcmp(*((const char **)v12 + 2), v9))
  {
    *int v12 = 0;
    if (!v12[1] && !v12[2])
    {
      uint64_t v13 = (uint64_t (**)(void *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
        --qword_1EB220150;
        off_1EB21C9E8(v12);
        int v12 = (char *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_24;
        }
        uint64_t v13 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
      }
      (*v13)(v12);
    }
LABEL_24:
    *(void *)(v8 + 120) = 0;
    uint64_t v10 = *(_DWORD **)(v8 + 24);
    goto LABEL_25;
  }
  uint64_t v119 = v11;
  char v29 = 1;
  if (!v12[1])
  {
LABEL_54:
    v12[1] = 1;
    uint64_t v34 = (uint64_t)(v12 + 28);
    goto LABEL_61;
  }
LABEL_49:
  if (v12[2])
  {
    uint64_t v30 = *((int *)v12 + 1);
    if (sqlite3_initialize() || (uint64_t v107 = (void *)sub_1B0C7FC94(4 * v30)) == 0)
    {
      int v26 = 0;
      int v27 = 0;
      int v28 = 7;
      goto LABEL_203;
    }
    uint64_t v34 = (uint64_t)v107;
    uint64_t v36 = (uint64_t (*)(uint64_t))sqlite3_free;
    if (*((_DWORD *)v12 + 2))
    {
      memcpy(v107, v12 + 28, 4 * *((int *)v12 + 1));
      uint64_t v36 = (uint64_t (*)(uint64_t))sqlite3_free;
    }
    goto LABEL_62;
  }
  v12[2] = 1;
  uint64_t v34 = (uint64_t)&v12[4 * *((int *)v12 + 1) + 32];
LABEL_61:
  uint64_t v36 = sub_1B0D9A8AC;
LABEL_62:
  int8x16_t v116 = v36;
  uint64_t v37 = 0;
  *((void *)&v123 + 1) = v34;
  DWORD1(v122) = *(_DWORD *)(v8 + 36);
  int v125 = 0;
  uint64x2_t v117 = (char *)v34;
  uint64_t v118 = *(uint64_t **)v8;
  pStmt = 0;
  uint64_t v38 = (_DWORD *)v34;
  while (1)
  {
    int v40 = v9[v37];
    if (!v9[v37]) {
      break;
    }
    LOBYTE(v123) = v9[v37];
    switch(v40)
    {
      case 'a':
        if (v29) {
          goto LABEL_180;
        }
        uint64_t v41 = pStmt;
        if (!pStmt)
        {
          int v48 = sub_1B0D8BEA4(v118, &pStmt);
          if (v48) {
            goto LABEL_109;
          }
          uint64_t v41 = pStmt;
        }
        int v42 = sqlite3_column_bytes(v41, 0);
        uint64_t v43 = sqlite3_column_blob(v41, 0);
        if (!v43) {
          goto LABEL_120;
        }
        int v44 = v43;
        uint64_t v126 = 0;
        unint64_t v45 = (unint64_t)&v43[v42];
        int v46 = sub_1B0D8BF88(v43, v45, &v126);
        uint64_t v47 = v126;
        int v48 = 267;
        if (v126 < 1 || v46 > v42) {
          goto LABEL_109;
        }
        int v125 = 0;
        if ((int)v122 < 1) {
          goto LABEL_180;
        }
        uint64_t v49 = 0;
        int8x8_t v50 = &v44[v46];
        while (1)
        {
          uint64_t v126 = 0;
          v50 += (int)sub_1B0D7D81C(v50, (unint64_t *)&v126);
          if ((unint64_t)v50 > v45) {
            break;
          }
          *(_DWORD *)(*((void *)&v123 + 1) + 4 * v49++) = (uint64_t)(v126 + ((unint64_t)v47 >> 1))
                                                          / v47;
          if (v49 >= (int)v122) {
            goto LABEL_180;
          }
        }
        int v125 = 267;
        goto LABEL_180;
      case 'b':
        int v51 = DWORD1(v122);
        int v52 = v122 + 62;
        if ((int)v122 >= -31) {
          int v52 = v122 + 31;
        }
        int v53 = v52 >> 5;
        goto LABEL_107;
      case 'c':
        if ((v29 & 1) == 0) {
          *uint64_t v38 = v122;
        }
        goto LABEL_180;
      case 'l':
        uint64_t v55 = *(void *)(v8 + 48);
        uint64_t v126 = 0;
        int v56 = sub_1B0D7D3B4(v118, 21, (sqlite3_stmt **)&v126, 0);
        BOOL v57 = (sqlite3_stmt *)v126;
        if (v56) {
          goto LABEL_178;
        }
        if (!sub_1B0CC3F2C(v126, 0))
        {
          uint64_t v58 = *((void *)v57 + 16);
          if ((*(_WORD *)(v58 + 20) & 0x9000) != 0)
          {
            sub_1B0D18980(v58, v55);
          }
          else
          {
            *(void *)uint64_t v58 = v55;
            *(_WORD *)(v58 + 20) = 4;
          }
          uint64_t v97 = *(void *)(*(void *)v57 + 24);
          if (v97) {
            xmmword_1EB21CA50(v97);
          }
        }
        if (sqlite3_step(v57) == 100 && sqlite3_column_type(v57, 0) == 4)
        {
          int v125 = 0;
          sqlite3_int64 v98 = sqlite3_column_blob(v57, 0);
          int v99 = sqlite3_column_bytes(v57, 0);
          if ((int)v122 < 1) {
            goto LABEL_179;
          }
          uint64_t v100 = 0;
          unint64_t v101 = (unint64_t)&v98[v99];
          while (1)
          {
            uint64_t v126 = 0;
            v98 += (int)sub_1B0D8BF88(v98, v101, &v126);
            if ((unint64_t)v98 > v101) {
              break;
            }
            *(_DWORD *)(*((void *)&v123 + 1) + 4 * v100++) = v126;
            if (v100 >= (int)v122) {
              goto LABEL_179;
            }
          }
          int v125 = 267;
        }
        else
        {
          int v56 = sqlite3_reset(v57);
          BOOL v57 = 0;
          if (!v56) {
            int v56 = 267;
          }
LABEL_178:
          int v125 = v56;
        }
LABEL_179:
        sqlite3_reset(v57);
        goto LABEL_180;
      case 'n':
        if (v29) {
          goto LABEL_180;
        }
        int v59 = pStmt;
        if (pStmt) {
          goto LABEL_91;
        }
        int v66 = sub_1B0D8BEA4(v118, &pStmt);
        if (v66)
        {
          int v63 = 0;
        }
        else
        {
          int v59 = pStmt;
LABEL_91:
          int v60 = sqlite3_column_bytes(v59, 0);
          uint64_t v61 = sqlite3_column_blob(v59, 0);
          if (v61)
          {
            uint64_t v126 = 0;
            int v62 = sub_1B0D8BF88(v61, (unint64_t)&v61[v60], &v126);
            int v63 = v126;
            if (v126 < 1 || v62 > v60)
            {
              int v63 = 0;
              int v66 = 267;
            }
            else
            {
              int v66 = 0;
            }
          }
          else
          {
            int v63 = 0;
            int v66 = 267;
          }
        }
        int v125 = v66;
        **((_DWORD **)&v123 + 1) = v63;
        goto LABEL_180;
      case 'p':
        if ((v29 & 1) == 0) {
          *uint64_t v38 = DWORD1(v122);
        }
        goto LABEL_180;
      case 's':
        uint64_t v126 = v8;
        uint64_t v127 = 0;
        uint64_t v67 = *(_DWORD **)(v8 + 24);
        int v128 = 0;
        int v125 = sub_1B0D99FB8(v67, &v128, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D99F98, (uint64_t)&v126);
        if (v125) {
          goto LABEL_180;
        }
        uint64_t v68 = *(int *)(v8 + 36);
        if (sqlite3_initialize() || (uint64_t v73 = (void *)sub_1B0C7FC94(32 * v68)) == 0)
        {
          int v125 = 7;
          goto LABEL_180;
        }
        uint64_t v74 = (uint64_t)v73;
        bzero(v73, 32 * v68);
        uint64_t v75 = *(_DWORD **)(v8 + 24);
        LODWORD(v126) = 0;
        sub_1B0D99FB8(v75, &v126, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D9AEE8, v74);
        uint64_t v76 = DWORD1(v122);
        if (SDWORD1(v122) >= 1)
        {
          int v77 = 0;
          uint64_t v78 = (_DWORD *)(v74 + 8);
          do
          {
            v77 -= *(_DWORD *)(*(void *)(*((void *)v78 - 1) + 32) + 80);
            _DWORD *v78 = v77;
            v78 += 8;
            --v76;
          }
          while (v76);
        }
        uint64_t v115 = v74;
        if ((int)v122 < 1) {
          goto LABEL_163;
        }
        uint64_t v79 = 0;
        uint64_t v80 = v74 + 16;
        uint64_t v114 = v74 + 16;
        break;
      case 'y':
        int v51 = v122;
        int v53 = DWORD1(v122);
LABEL_107:
        bzero(v38, 4 * v53 * v51);
        int v125 = sub_1B0D9A9AC(*(void *)(v8 + 24), &v121);
        goto LABEL_180;
      default:
        uint64_t v54 = *(_DWORD **)(v8 + 24);
        uint64_t v126 = v8;
        uint64_t v127 = 0;
        int v128 = 0;
        int v125 = sub_1B0D99FB8(v54, &v128, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D99F98, (uint64_t)&v126);
        if (v125) {
          goto LABEL_180;
        }
        if (v29) {
          goto LABEL_84;
        }
        if (!*(void *)(v8 + 40)) {
          goto LABEL_116;
        }
        uint64_t v69 = pStmt;
        if (pStmt) {
          goto LABEL_112;
        }
        int v48 = sub_1B0D8BEA4(v118, &pStmt);
        if (v48) {
          goto LABEL_109;
        }
        uint64_t v69 = pStmt;
LABEL_112:
        int v70 = sqlite3_column_bytes(v69, 0);
        long long v71 = sqlite3_column_blob(v69, 0);
        if (v71)
        {
          uint64_t v126 = 0;
          int v72 = sub_1B0D8BF88(v71, (unint64_t)&v71[v70], &v126);
          int v48 = 267;
          if (v126 < 1 || v72 > v70)
          {
LABEL_109:
            int v125 = v48;
          }
          else
          {
            *((void *)&v122 + 1) = v126;
LABEL_116:
            LODWORD(v126) = 0;
            int v125 = sub_1B0D99FB8(v54, &v126, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D9AB7C, (uint64_t)&v121);
            sub_1B0D8DFB8(v8, &v125);
            if (!v125)
            {
LABEL_84:
              LODWORD(v126) = 0;
              sub_1B0D99FB8(v54, &v126, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D9AE18, (uint64_t)&v121);
            }
          }
        }
        else
        {
LABEL_120:
          int v125 = 267;
        }
        goto LABEL_180;
    }
    while (SDWORD1(v122) < 1)
    {
      int v88 = 0;
LABEL_162:
      *(_DWORD *)(*((void *)&v123 + 1) + 4 * v79++) = v88;
      if (v79 >= (int)v122)
      {
LABEL_163:
        int v96 = 0;
        goto LABEL_192;
      }
    }
    uint64_t v81 = 0;
    int v82 = 0;
    uint64_t v83 = v80;
    while (1)
    {
      int v85 = sub_1B0D9A04C(v8, *(void *)(v83 - 16), v79, (char **)v83);
      if (v85)
      {
        int v96 = v85;
        goto LABEL_192;
      }
      uint64_t v86 = *(char **)v83;
      if (!*(void *)v83) {
        goto LABEL_131;
      }
      *(_DWORD *)(v83 + 8) = *(_DWORD *)(v83 - 8);
      uint64_t v126 = 0;
      int v87 = sub_1B0D7D81C(v86, (unint64_t *)&v126);
      if ((unint64_t)v126 <= 1) {
        break;
      }
      *(_DWORD *)(v83 + 8) = v126 + *(_DWORD *)(v83 + 8) - 2;
      *(void *)uint64_t v83 = &v86[v87];
      ++v82;
LABEL_131:
      ++v81;
      LODWORD(v84) = DWORD1(v122);
      v83 += 32;
      if (v81 >= SDWORD1(v122))
      {
        if (v82 >= 1)
        {
          int v88 = 0;
          uint64_t v89 = v115;
          if ((int)v84 <= 0) {
            goto LABEL_139;
          }
          while (2)
          {
            int v91 = 0;
            uint64_t v92 = 0;
            uint64_t v93 = v89;
            uint64_t v84 = v84;
            do
            {
              if (*(void *)(v93 + 16))
              {
                if (!v92 || *(_DWORD *)(v93 + 24) < *(_DWORD *)(v92 + 24)) {
                  uint64_t v92 = v93;
                }
                if (v91 && *(_DWORD *)(v93 + 24) != *(_DWORD *)(v93 - 8)) {
                  int v91 = 1;
                }
                else {
                  ++v91;
                }
                if (v91 > v88) {
                  int v88 = v91;
                }
              }
              else
              {
                int v91 = 0;
              }
              v93 += 32;
              --v84;
            }
            while (v84);
            if (v92)
            {
              uint64_t v126 = 0;
              uint64_t v94 = *(char **)(v92 + 16);
              int v95 = sub_1B0D7D81C(v94, (unint64_t *)&v126);
              if ((unint64_t)v126 <= 1)
              {
                *(void *)(v92 + 16) = 0;
                uint64_t v89 = v115;
                goto LABEL_139;
              }
              *(_DWORD *)(v92 + 24) = v126 + *(_DWORD *)(v92 + 24) - 2;
              *(void *)(v92 + 16) = &v94[v95];
              uint64_t v89 = v115;
            }
            else
            {
LABEL_139:
              BOOL v90 = __OFSUB__(v82--, 1);
              if ((v82 < 0) ^ v90 | (v82 == 0)) {
                goto LABEL_161;
              }
            }
            LODWORD(v84) = DWORD1(v122);
            continue;
          }
        }
        int v88 = 0;
LABEL_161:
        uint64_t v80 = v114;
        goto LABEL_162;
      }
    }
    *(void *)uint64_t v83 = 0;
    int v96 = 267;
LABEL_192:
    uint64_t v103 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v115);
      --qword_1EB220150;
      off_1EB21C9E8(v115);
      uint64_t v115 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v103 = &xmmword_1EB21CA50;
        goto LABEL_197;
      }
    }
    else
    {
LABEL_197:
      (*v103)(v115);
    }
    int v125 = v96;
LABEL_180:
    uint64_t v39 = 1;
    switch(v9[v37])
    {
      case 'a':
      case 'l':
      case 's':
        uint64_t v39 = (int)v122;
        break;
      case 'b':
        int v102 = v122 + 62;
        if ((int)v122 >= -31) {
          int v102 = v122 + 31;
        }
        uint64_t v39 = SDWORD1(v122) * (uint64_t)(v102 >> 5);
        break;
      case 'c':
      case 'n':
      case 'p':
        break;
      case 'y':
        uint64_t v39 = SDWORD1(v122) * (uint64_t)(int)v122;
        break;
      default:
        uint64_t v39 = 3 * (int)v122 * DWORD1(v122);
        break;
    }
    uint64_t v38 = (_DWORD *)(*((void *)&v123 + 1) + 4 * v39);
    *((void *)&v123 + 1) = v38;
    ++v37;
    int v28 = v125;
    if (v125) {
      goto LABEL_200;
    }
  }
  int v28 = 0;
LABEL_200:
  sqlite3_reset(pStmt);
  int v27 = v116;
  int v26 = v117;
  if ((v29 & 1) == 0)
  {
    uint64_t v104 = *(int **)(v8 + 120);
    v104[2] = 1;
    memcpy(&v104[v104[1] + 8], v104 + 7, 4 * v104[1]);
  }
  if (!v28)
  {
    uint64_t v11 = v119;
    if (!a1 || (int v106 = 4 * *(_DWORD *)(*(void *)(v8 + 120) + 4), v106 < 0)) {
      sub_1B0CE1978(97366);
    }
    else {
      sub_1B0CEA530(a1, v117, v106, 0, v116);
    }
    goto LABEL_235;
  }
LABEL_203:
  uint64_t v11 = v119;
  if (!a1)
  {
    sub_1B0CE1978(97620);
LABEL_210:
    if (v27) {
      goto LABEL_234;
    }
    goto LABEL_235;
  }
  *(_DWORD *)(a1 + 36) = v28;
  if ((*(_WORD *)(*(void *)a1 + 20) & 1) == 0) {
    goto LABEL_210;
  }
  switch(v28)
  {
    case 516:
      BOOL v105 = "abort due to ROLLBACK";
      break;
    case 101:
      BOOL v105 = "no more rows available";
      break;
    case 100:
      BOOL v105 = "another row available";
      break;
    default:
      if v28 > 0x1Cu || ((0x1410004uLL >> v28)) {
        BOOL v105 = "unknown error";
      }
      else {
        BOOL v105 = off_1E5FF0368[v28];
      }
      break;
  }
  sub_1B0CEA530(a1, v105, -1, 1u, 0);
  if (v27) {
LABEL_234:
  }
    v27((uint64_t)v26);
LABEL_235:
  uint64_t v109 = *(void **)(v11 + 480);
  if (v109)
  {
    uint64_t v110 = (sqlite3_stmt *)v109[3];
    uint64_t v111 = (void *)v109[4];
    uint64_t v112 = v111[3];
    if (v112) {
      xmmword_1EB21CA40(v112);
    }
    sub_1B0D05C10(v111, v109);
    uint64_t v113 = v111[3];
    if (v113) {
      xmmword_1EB21CA50(v113);
    }
    sqlite3_finalize(v110);
  }
  *(void *)(v11 + 480) = 0;
}

uint64_t sub_1B0D99D0C(uint64_t a1, const char *a2, uint64_t a3, void *a4)
{
  if (!a3)
  {
    sub_1B0CE1978(97118);
LABEL_8:
    *a4 = 0;
    goto LABEL_9;
  }
  if ((*(_WORD *)(a3 + 20) & 0xFBF) != 0xA01 || *(unsigned char *)(a3 + 23) != 112 || strcmp(*(const char **)a3, "fts3cursor")) {
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a3 + 8);
  *a4 = v8;
  if (v8) {
    return 0;
  }
LABEL_9:
  uint64_t v10 = sqlite3_mprintf("illegal first argument to %s", a2);
  if (a1)
  {
    *(_DWORD *)(a1 + 36) = 1;
    sub_1B0C79BBC(*(void *)a1, v10, -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
    if (!v10) {
      return 1;
    }
  }
  else
  {
    sub_1B0CE1978(97407);
    if (!v10) {
      return 1;
    }
  }
  uint64_t v11 = (void (**)(char *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    uint64_t v10 = (char *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      return 1;
    }
    uint64_t v11 = (void (**)(char *))&xmmword_1EB21CA50;
  }
  (*v11)(v10);
  return 1;
}

uint64_t sub_1B0D99E7C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  int v17 = 0;
  *(_DWORD *)(v4 + 48 * a2) = *(_DWORD *)(*(void *)(a1 + 32) + 80);
  uint64_t result = sub_1B0D9A04C(*(void *)a3, a1, *(_DWORD *)(a3 + 8), &v17);
  uint64_t v6 = (unsigned __int8 *)v17;
  if (v17)
  {
    *(void *)(v4 + 48 * a2 + 8) = v17;
    unsigned int v7 = *v6;
    if ((char)*v6 < 0)
    {
      unsigned int v11 = v7 & 0x7F | (v6[1] << 7);
      if ((char)v6[1] < 0)
      {
        unsigned int v12 = v11 & 0x3FFF | (v6[2] << 14);
        if ((char)v6[2] < 0)
        {
          unsigned int v13 = v12 & 0x1FFFFF | (v6[3] << 21);
          if ((char)v6[3] < 0)
          {
            unsigned int v14 = v13 & 0xFFFFFFF | ((v6[4] & 7) << 28);
            uint64_t v8 = 5;
            BOOL v9 = v14 >= 2;
            uint64_t v10 = v14 - 2;
            if (!v9) {
              return 267;
            }
          }
          else
          {
            uint64_t v8 = 4;
            BOOL v9 = v13 >= 2;
            uint64_t v10 = v13 - 2;
            if (!v9) {
              return 267;
            }
          }
        }
        else
        {
          uint64_t v8 = 3;
          BOOL v9 = v12 >= 2;
          uint64_t v10 = v12 - 2;
          if (!v9) {
            return 267;
          }
        }
      }
      else
      {
        uint64_t v8 = 2;
        BOOL v9 = v11 >= 2;
        uint64_t v10 = v11 - 2;
        if (!v9) {
          return 267;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
      BOOL v9 = v7 >= 2;
      uint64_t v10 = v7 - 2;
      if (!v9) {
        return 267;
      }
    }
    char v15 = &v6[v8];
    uint64_t v16 = (void *)(v4 + 48 * a2);
    v16[2] = v10;
    v16[3] = v15;
    v16[4] = v10;
    v16[5] = v15;
  }
  return result;
}

uint64_t sub_1B0D99F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a3 + 12) + *(_DWORD *)(*(void *)(a1 + 32) + 80);
  ++*(_DWORD *)(a3 + 8);
  *(_DWORD *)(a3 + 12) = v3;
  return 0;
}

uint64_t sub_1B0D99FB8(_DWORD *a1, _DWORD *a2, uint64_t (*a3)(_DWORD *, void, uint64_t), uint64_t a4)
{
  unsigned int v7 = a1;
  int v8 = *a1;
  if (*a1 == 5)
  {
LABEL_5:
    uint64_t result = a3(v7, *a2, a4);
    ++*a2;
  }
  else
  {
    while (1)
    {
      uint64_t result = sub_1B0D99FB8(*((void *)v7 + 2), a2, a3, a4);
      if (v8 == 2 || result) {
        break;
      }
      unsigned int v7 = (_DWORD *)*((void *)v7 + 3);
      int v8 = *v7;
      if (*v7 == 5) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1B0D9A04C(uint64_t a1, uint64_t a2, int a3, char **a4)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  *a4 = 0;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6 != a3 && v6 < *(_DWORD *)(v5 + 48)) {
    return 0;
  }
  uint64_t v10 = a2;
  unsigned int v12 = *(char **)(v4 + 40);
  uint64_t v51 = *(void *)(a2 + 40);
  int v52 = v12;
  if (v51 == *(void *)(a1 + 48) && !*(unsigned char *)(a2 + 48))
  {
LABEL_91:
    if (v12)
    {
      if (*v12 == 1) {
        goto LABEL_95;
      }
      int v42 = 0;
      while (v42 < a3)
      {
        unsigned int v45 = *v12;
        if (v45 >= 2)
        {
          do
          {
            unsigned int v47 = *++v12;
            unsigned int v46 = v47;
            int v48 = v45 & 0x80;
            LOBYTE(v45) = v47;
          }
          while (v47 & 0xFE | v48);
          unsigned int v45 = v46;
        }
        if (!v45) {
          return 0;
        }
LABEL_95:
        uint64_t v43 = (unsigned __int8 *)(v12 + 1);
        int v52 = v12 + 1;
        int v42 = v12[1];
        if (v12[1] < 0)
        {
          int v42 = v42 & 0x7F | (v12[2] << 7);
          if (v12[2] < 0)
          {
            int v42 = v42 & 0x3FFF | (v12[3] << 14);
            if (v12[3] < 0)
            {
              int v42 = v42 & 0x1FFFFF | (v12[4] << 21);
              if (v12[4] < 0)
              {
                int v42 = v42 & 0xFFFFFFF | ((v12[5] & 7) << 28);
                uint64_t v44 = 5;
              }
              else
              {
                uint64_t v44 = 4;
              }
            }
            else
            {
              uint64_t v44 = 3;
            }
          }
          else
          {
            uint64_t v44 = 2;
          }
        }
        else
        {
          uint64_t v44 = 1;
        }
        unsigned int v12 = (char *)&v43[v44];
        int v52 = v12;
      }
      uint64_t result = 0;
      if (!*v12) {
        unsigned int v12 = 0;
      }
      if (v42 != a3) {
        unsigned int v12 = 0;
      }
      *a4 = v12;
      return result;
    }
    return 0;
  }
  unsigned int v50 = 0;
  uint64_t v13 = *(void *)(a2 + 8);
  if (!v13) {
    return 0;
  }
  char v14 = 0;
  int v15 = 0;
  uint64_t v16 = *(unsigned __int8 *)(v5 + 463);
  do
  {
    if (*(_DWORD *)v13 == 4) {
      int v15 = 1;
    }
    if (*(_DWORD *)v13 == 1) {
      uint64_t v10 = v13;
    }
    if (*(unsigned char *)(v13 + 48)) {
      char v14 = 1;
    }
    uint64_t v13 = *(void *)(v13 + 8);
  }
  while (v13);
  if (!v15) {
    return 0;
  }
  uint64_t v17 = v10;
  if (*(unsigned char *)(v10 + 50))
  {
    uint64_t v17 = v10;
    do
      uint64_t v17 = *(void *)(v17 + 8);
    while (*(unsigned char *)(v17 + 50));
  }
  if (!*(_DWORD *)(v4 + 56))
  {
LABEL_29:
    if (v14)
    {
      while (!*(unsigned char *)(v17 + 48))
      {
        sub_1B0D8D508(a1, v17, (int *)&v50);
        uint64_t result = v50;
        if (v50) {
          return result;
        }
      }
    }
    if (!v10) {
      goto LABEL_88;
    }
    int v21 = 1;
    do
    {
      uint64_t v23 = v10;
      if (*(_DWORD *)v10 == 1) {
        uint64_t v23 = *(void *)(v10 + 24);
      }
      uint64_t v24 = *(void *)(v23 + 32);
      size_t v25 = *(char **)(v24 + 64);
      uint64_t v51 = *(void *)(v24 + 72);
      int v52 = v25;
      uint64_t v26 = *(int *)(v24 + 8);
      if (*(unsigned __int8 *)(a1 + 76) != v16)
      {
        if (v26)
        {
          if (v25) {
            BOOL v28 = (unint64_t)v25 <= *(void *)v24;
          }
          else {
            BOOL v28 = 0;
          }
        }
        else
        {
          BOOL v28 = 1;
        }
        unsigned __int8 v49 = v28;
        while (1)
        {
          if (v25)
          {
            uint64_t v29 = v51;
            uint64_t v30 = *(void *)(a1 + 48);
            BOOL v39 = v51 < v30;
            if (!v16) {
              BOOL v39 = v51 > v30;
            }
            int v33 = v49;
            if (!v39 || v49 != 0) {
              goto LABEL_81;
            }
          }
          else if (v49)
          {
LABEL_35:
            uint64_t v22 = v51;
            *(void *)(v24 + 64) = 0;
            *(void *)(v24 + 72) = v22;
            goto LABEL_36;
          }
          sub_1B0D7EF2C(v16, *(char **)v24, *(_DWORD *)(v24 + 8), &v52, &v51, (int *)&v53, &v49);
          size_t v25 = v52;
        }
      }
      if (v26) {
        BOOL v27 = (unint64_t)v25 >= *(void *)v24 + v26;
      }
      else {
        BOOL v27 = 1;
      }
      unsigned __int8 v49 = v27;
      while (1)
      {
LABEL_49:
        while (!v25)
        {
          if (v49) {
            goto LABEL_35;
          }
          uint64_t v38 = *(char **)v24;
          size_t v25 = &v38[(int)sub_1B0D7D81C(*(char **)v24, (unint64_t *)&v51)];
          int v52 = v25;
        }
        uint64_t v29 = v51;
        uint64_t v30 = *(void *)(a1 + 48);
        if (v51 == v30) {
          int v31 = 0;
        }
        else {
          int v31 = -1;
        }
        if (v51 > v30) {
          int v31 = 1;
        }
        int v32 = v16 ? -v31 : v31;
        int v33 = v49;
        if ((v32 & 0x80000000) == 0 || v49) {
          break;
        }
        int v34 = *v25;
        if (*v25)
        {
          do
          {
            unsigned int v35 = v34 & 0xFFFFFF80;
            int v36 = *++v25;
            int v34 = v36;
          }
          while (v35 | v36);
        }
        do
        {
          if ((unint64_t)++v25 >= *(void *)v24 + *(int *)(v24 + 8))
          {
            unsigned __int8 v49 = 1;
            int v52 = v25;
            goto LABEL_49;
          }
        }
        while (!*v25);
        uint64_t v53 = 0;
        v25 += (int)sub_1B0D7D81C(v25, (unint64_t *)&v53);
        uint64_t v37 = v53;
        if (v16) {
          uint64_t v37 = -v53;
        }
        v51 += v37;
        int v52 = v25;
      }
LABEL_81:
      *(void *)(v24 + 64) = v25;
      *(void *)(v24 + 72) = v29;
      if (v33) {
        BOOL v41 = 0;
      }
      else {
        BOOL v41 = v29 == v30;
      }
      if (!v41) {
LABEL_36:
      }
        int v21 = 0;
      uint64_t v10 = *(void *)(v10 + 16);
    }
    while (v10);
    if (!v21) {
      unsigned int v12 = 0;
    }
    else {
LABEL_88:
    }
      unsigned int v12 = *(char **)(v4 + 64);
    int v52 = v12;
    goto LABEL_91;
  }
  int v18 = *(unsigned __int8 *)(v17 + 48);
  sub_1B0D9A4B0(a1, v17, &v50);
  while (1)
  {
    uint64_t result = v50;
    if (v50) {
      return result;
    }
    int v20 = *(unsigned __int8 *)(v17 + 48);
    if (*(unsigned char *)(v17 + 48)) {
      goto LABEL_28;
    }
    sub_1B0D8D508(a1, v17, (int *)&v50);
    if (!v18 && *(void *)(v17 + 40) == v51)
    {
      uint64_t result = v50;
      if (v50) {
        return result;
      }
      int v20 = *(unsigned __int8 *)(v17 + 48);
LABEL_28:
      if (v20 == v18) {
        goto LABEL_29;
      }
      return 267;
    }
  }
}

uint64_t sub_1B0D9A4B0(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t *)result;
    while (1)
    {
      if (*a3) {
        return result;
      }
      uint64_t v7 = *(void *)(v4 + 32);
      if (v7) {
        break;
      }
LABEL_6:
      *(void *)(v4 + 40) = 0;
      *(_WORD *)(v4 + 48) = 0;
      uint64_t result = sub_1B0D9A4B0(v5, *(void *)(v4 + 16), a3);
      uint64_t v4 = *(void *)(v4 + 24);
      if (!v4) {
        return result;
      }
    }
    if (*(_DWORD *)(v7 + 32))
    {
      uint64_t v8 = *(void *)(v7 + 40);
      if (v8)
      {
        BOOL v9 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
          --qword_1EB220150;
          off_1EB21C9E8(v8);
          uint64_t v8 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_17;
          }
          BOOL v9 = &xmmword_1EB21CA50;
        }
        (*v9)(v8);
      }
    }
LABEL_17:
    *(void *)(v7 + 40) = 0;
    *(_DWORD *)(v7 + 48) = 0;
    *(_DWORD *)(v7 + 32) = 0;
    if (*(_DWORD *)(v7 + 56))
    {
      uint64_t v10 = *(unsigned int *)(v7 + 80);
      if ((int)v10 >= 1)
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          unsigned int v12 = *(uint64_t ***)(v7 + 40 * i + 120);
          if (v12)
          {
            *((_DWORD *)v12 + 3) = 0;
            *((_DWORD *)v12 + 11) = 1;
            uint64_t v13 = *((unsigned int *)v12 + 2);
            if ((int)v13 >= 1)
            {
              char v14 = *v12;
              do
              {
                *(void *)(*v14 + 112) = 0;
                uint64_t v15 = *v14++;
                *(_DWORD *)(v15 + 120) = 0;
                *(void *)(v15 + 128) = 0;
                --v13;
              }
              while (v13);
            }
          }
        }
      }
      uint64_t v16 = 0;
      uint64_t v17 = *v5;
      uint64_t v18 = v7 + 88;
      while (v16 < *(int *)(v7 + 80))
      {
        if (*(void *)(v18 + 32))
        {
          int v20 = 0;
          int v19 = 0;
          int v6 = sub_1B0D8B290(v17, v18, *(_DWORD *)(v7 + 84), &v20, &v19);
          if (!v6) {
            int v6 = sub_1B0D8B8E8(v17, v7, v16, v19, v20);
          }
        }
        else
        {
          int v6 = 0;
        }
        ++v16;
        v18 += 40;
        if (v6) {
          goto LABEL_4;
        }
      }
      int v6 = 0;
LABEL_4:
      *(_DWORD *)(v7 + 56) = 0;
      *a3 = v6;
    }
    *(void *)(v7 + 64) = 0;
    *(void *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = 0;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1B0D9A6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = 0;
  uint64_t result = sub_1B0D9A04C(*(void *)a3, a1, *(_DWORD *)(a3 + 8), &v30);
  uint64_t v6 = *(unsigned int *)(*(void *)(a1 + 32) + 80);
  uint64_t v7 = v30;
  if (v30)
  {
    int v8 = *v30;
    if (*v30 < 0)
    {
      int v8 = v8 & 0x7F | (v30[1] << 7);
      if (v30[1] < 0)
      {
        int v8 = v8 & 0x3FFF | (v30[2] << 14);
        if (v30[2] < 0)
        {
          int v8 = v8 & 0x1FFFFF | (v30[3] << 21);
          if (v30[3] < 0)
          {
            int v8 = v8 & 0xFFFFFFF | ((v30[4] & 7) << 28);
            uint64_t v9 = 5;
          }
          else
          {
            uint64_t v9 = 4;
          }
        }
        else
        {
          uint64_t v9 = 3;
        }
      }
      else
      {
        uint64_t v9 = 2;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    uint64_t v7 = &v30[v9];
    unint64_t v10 = v8 - 2;
    if ((int)v6 >= 1)
    {
LABEL_14:
      uint64_t v11 = *(void *)(a3 + 24);
      uint64_t v12 = *(int *)(a3 + 12);
      if (v6 >= 4)
      {
        uint64_t v13 = v6 & 0x7FFFFFFC;
        int32x2_t v15 = vdup_n_s32(v6);
        uint64_t v14 = (v6 & 0xFFFFFFFC) + v12;
        int64x2_t v16 = vdupq_n_s64((unint64_t)v7);
        int64x2_t v17 = vdupq_n_s64(v10);
        uint64_t v18 = (double *)(v11 + 24 * (int)v12);
        int32x2_t v19 = (int32x2_t)0x100000000;
        uint64_t v20 = v6 & 0xFFFFFFFC;
        do
        {
          int32x2_t v21 = vadd_s32(v15, (int32x2_t)vmvn_s8((int8x8_t)v19));
          *(void *)&v22.f64[0] = v21.i32[0];
          *(void *)&v22.f64[1] = v21.i32[1];
          float64x2_t v23 = v22;
          uint64_t v24 = v18 + 12;
          vst3q_f64(v18, *(float64x2x3_t *)v16.i8);
          size_t v25 = v18 + 6;
          int32x2_t v26 = vadd_s32(vsub_s32(v15, v19), (int32x2_t)0x200000002);
          *(void *)&v22.f64[0] = v26.i32[0];
          *(void *)&v22.f64[1] = v26.i32[1];
          v31.val[2] = v22;
          v31.val[0] = (float64x2_t)v16;
          v31.val[1] = (float64x2_t)v17;
          vst3q_f64(v25, v31);
          int32x2_t v19 = vadd_s32(v19, (int32x2_t)0x400000004);
          uint64_t v18 = v24;
          v20 -= 4;
        }
        while (v20);
        if (v13 == v6) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v13 = 0;
        uint64_t v14 = *(int *)(a3 + 12);
      }
      int v27 = ~v13 + v6;
      uint64_t v28 = v6 - v13;
      uint64_t v29 = (void *)(v11 + 24 * v14 + 16);
      LODWORD(v14) = v14 + v6 - v13;
      do
      {
        *(v29 - 1) = v10;
        void *v29 = v27;
        *(v29 - 2) = v7;
        --v27;
        v29 += 3;
        --v28;
      }
      while (v28);
LABEL_21:
      *(_DWORD *)(a3 + 12) = v14;
    }
  }
  else
  {
    unint64_t v10 = 0;
    if ((int)v6 >= 1) {
      goto LABEL_14;
    }
  }
  return result;
}

uint64_t sub_1B0D9A894(uint64_t a1, int a2, _DWORD *a3)
{
  *(_DWORD *)(a1 + 52) = a2;
  return 0;
}

uint64_t sub_1B0D9A8AC(uint64_t result)
{
  uint64_t v1 = (unsigned char *)(result - *(unsigned int *)(result - 4));
  if (v1 + 28 == (unsigned char *)result)
  {
    v1[1] = 0;
    if (*v1) {
      return result;
    }
  }
  else
  {
    v1[2] = 0;
    if (*v1) {
      return result;
    }
  }
  if (!v1[1] && !v1[2])
  {
    int v2 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v1);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v1);
      uint64_t v1 = (unsigned char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        return result;
      }
      int v2 = &xmmword_1EB21CA50;
    }
    int v3 = (uint64_t (*)(unsigned char *))*v2;
    return v3(v1);
  }
  return result;
}

uint64_t sub_1B0D9A9AC(uint64_t a1, uint64_t **a2)
{
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v4 = a1;
    while (*(void *)(v4 + 40) == (*a2)[6])
    {
      uint64_t v5 = *(void *)(v4 + 16);
      if (!v5)
      {
        uint64_t v6 = *(void *)(v4 + 32);
        uint64_t v7 = *(unsigned __int8 **)(v6 + 40);
        int v8 = *((unsigned __int8 *)a2 + 24);
        int v9 = *((_DWORD *)a2 + 2);
        int v10 = v9 + 31;
        if (v9 < -31) {
          int v10 = v9 + 62;
        }
        int v11 = v10 >> 5;
        if (v8 != 121) {
          int v9 = v11;
        }
        if (v7)
        {
          int v12 = 0;
          uint64_t v13 = **a2;
          int v14 = v9 * *(_DWORD *)(v4 + 52);
          while (1)
          {
            unsigned int v16 = *v7;
            if (v16 >= 2)
            {
              int v17 = 0;
              do
              {
                int v18 = v16 & 0x80;
                char v19 = *++v7;
                v17 += v18 == 0;
                LOBYTE(v16) = v19;
              }
              while (v19 & 0xFE | v18);
            }
            else
            {
              int v17 = 0;
            }
            int v20 = *(_DWORD *)(v6 + 84);
            if (v20 == v12 || v20 >= *(_DWORD *)(v13 + 48))
            {
              if (v8 == 121)
              {
                *((_DWORD *)a2[4] + v12 + v14) = v17;
              }
              else if (v17)
              {
                int v22 = 1 << v12;
                if (v12 >= -1) {
                  int v23 = v12 + 1;
                }
                else {
                  int v23 = v12 + 32;
                }
                *((_DWORD *)a2[4] + v14 + (v23 >> 5)) |= v22;
              }
            }
            if (*v7 != 1) {
              break;
            }
            uint64_t v24 = v7 + 1;
            int v12 = v7[1];
            if ((char)v7[1] < 0)
            {
              int v12 = v12 & 0x7F | (v7[2] << 7);
              if ((char)v7[2] < 0)
              {
                int v12 = v12 & 0x3FFF | (v7[3] << 14);
                if ((char)v7[3] < 0)
                {
                  int v12 = v12 & 0x1FFFFF | (v7[4] << 21);
                  if ((char)v7[4] < 0)
                  {
                    int v12 = v12 & 0xFFFFFFF | ((v7[5] & 7) << 28);
                    uint64_t v15 = 5;
                  }
                  else
                  {
                    uint64_t v15 = 4;
                  }
                }
                else
                {
                  uint64_t v15 = 3;
                }
              }
              else
              {
                uint64_t v15 = 2;
              }
            }
            else
            {
              uint64_t v15 = 1;
            }
            uint64_t v7 = &v24[v15];
            uint64_t result = 267;
            if (v12 >= *((_DWORD *)a2 + 2)) {
              return result;
            }
          }
        }
        return 0;
      }
      uint64_t result = sub_1B0D9A9AC(v5, a2);
      if (result) {
        return result;
      }
      uint64_t v4 = *(void *)(v4 + 24);
      if (*(unsigned char *)(v4 + 48)) {
        return 0;
      }
    }
  }
  return 0;
}

uint64_t sub_1B0D9AB7C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t **)a3;
  uint64_t v5 = *(void *)(a3 + 32);
  uint64_t v6 = 3 * a2 * *(_DWORD *)(a3 + 8);
  uint64_t v7 = **(void **)a3;
  if (*(unsigned char *)(a1 + 50) && **(_DWORD **)(a1 + 8) != 1)
  {
    if (*(int *)(v7 + 48) >= 1)
    {
      uint64_t v12 = 0;
      int v13 = *((_DWORD *)v4 + 22);
      int v14 = (_DWORD *)(v5 + 4 * v6 + 8);
      do
      {
        *(v14 - 1) = v13;
        *int v14 = v13;
        ++v12;
        v14 += 3;
      }
      while (v12 < *(int *)(v7 + 48));
    }
    return 0;
  }
  unsigned int v24 = 0;
  if (*(void *)(a1 + 56))
  {
LABEL_4:
    if (*(int *)(v7 + 48) >= 1)
    {
      uint64_t v8 = 0;
      int v9 = (_DWORD *)(v5 + 4 * v6 + 8);
      int v10 = (int *)(*(void *)(a1 + 56) + 8);
      do
      {
        *(v9 - 1) = *(v10 - 1);
        int v11 = *v10;
        v10 += 3;
        *int v9 = v11;
        v9 += 3;
        ++v8;
      }
      while (v8 < *(int *)(v7 + 48));
    }
    return 0;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = a1;
  if (v16)
  {
    uint64_t v17 = a1;
    do
    {
      uint64_t v18 = v16;
      if (*(_DWORD *)v16 != 1 && !*(unsigned char *)(v17 + 50)) {
        break;
      }
      uint64_t v16 = *(void *)(v16 + 8);
      uint64_t v17 = v18;
    }
    while (v16);
  }
  uint64_t v19 = v4[6];
  uint64_t v20 = *(void *)(v17 + 40);
  int v21 = *(unsigned __int8 *)(v17 + 48);
  int v25 = 0;
  uint64_t result = sub_1B0D99FB8((_DWORD *)v17, &v25, (uint64_t (*)(_DWORD *, void, uint64_t))sub_1B0D9AEF8, v7);
  unsigned int v24 = result;
  if (!result)
  {
    sub_1B0D9A4B0((uint64_t)v4, v17, &v24);
    uint64_t result = v24;
    if (!*((unsigned char *)v4 + 10) && !v24)
    {
      while (1)
      {
        if (!*((unsigned char *)v4 + 11)) {
          sqlite3_reset((sqlite3_stmt *)v4[2]);
        }
        sub_1B0D8D508((uint64_t)v4, v17, (int *)&v24);
        int v22 = *(unsigned __int8 *)(v17 + 48);
        *((unsigned char *)v4 + 10) = v22;
        *((unsigned char *)v4 + 11) = 1;
        *((_DWORD *)v4 + 28) = 1;
        v4[6] = *(void *)(v17 + 40);
        if (v22)
        {
          uint64_t result = v24;
          goto LABEL_35;
        }
        if (*(_DWORD *)v17 != 1) {
          break;
        }
        if (!sub_1B0D8DFB8((uint64_t)v4, (int *)&v24))
        {
          uint64_t result = v24;
          if (v24) {
            goto LABEL_35;
          }
          if (*((unsigned char *)v4 + 10))
          {
            uint64_t result = 0;
            goto LABEL_35;
          }
LABEL_31:
          sub_1B0D9AF70(v17, *(unsigned int *)(v7 + 48));
          uint64_t result = v24;
          if (*((unsigned char *)v4 + 10) || v24) {
            goto LABEL_35;
          }
        }
      }
      uint64_t result = v24;
      if (v24) {
        goto LABEL_35;
      }
      goto LABEL_31;
    }
LABEL_35:
    *((unsigned char *)v4 + 10) = 0;
    v4[6] = v19;
    if (v21)
    {
      *(unsigned char *)(v17 + 48) = v21;
LABEL_43:
      if (!result) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B0D9A4B0((uint64_t)v4, v17, &v24);
      while (1)
      {
        sub_1B0D8D508((uint64_t)v4, v17, (int *)&v24);
        if (*(unsigned char *)(v17 + 48)) {
          return 267;
        }
        uint64_t result = v24;
        if (*(void *)(v17 + 40) == v20 || v24 != 0) {
          goto LABEL_43;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B0D9AE18(uint64_t a1, int a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a3 + 8);
  if (v3 < 1) {
    return 0;
  }
  uint64_t v6 = 0;
  int v7 = v3 * a2;
  do
  {
    uint64_t v15 = 0;
    uint64_t result = sub_1B0D9A04C(*(void *)a3, a1, v6, &v15);
    if (v15 && (unsigned int v11 = *v15, v11 >= 2))
    {
      int v8 = 0;
      uint64_t v12 = v15 + 1;
      do
      {
        int v13 = v11 & 0x80;
        v8 += v13 == 0;
        char v14 = *v12++;
        LOBYTE(v11) = v14;
      }
      while (v14 & 0xFE | v13);
    }
    else
    {
      int v8 = 0;
    }
    *(_DWORD *)(*(void *)(a3 + 32) + 12 * (v7 + (int)v6++)) = v8;
  }
  while (v6 < *(int *)(a3 + 8) && result == 0);
  return result;
}

uint64_t sub_1B0D9AEE8(uint64_t a1, int a2, uint64_t a3)
{
  *(void *)(a3 + 32 * a2) = a1;
  return 0;
}

uint64_t sub_1B0D9AEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 56);
  if (v5) {
    goto LABEL_2;
  }
  uint64_t v7 = *(int *)(a3 + 48);
  if (sqlite3_initialize())
  {
    *(void *)(a1 + 56) = 0;
  }
  else
  {
    uint64_t v5 = (void *)sub_1B0C7FC94(12 * v7);
    *(void *)(a1 + 56) = v5;
    if (v5)
    {
LABEL_2:
      bzero(v5, 12 * *(int *)(a3 + 48));
      return 0;
    }
  }
  return 7;
}

uint64_t sub_1B0D9AF70(uint64_t result, uint64_t a2)
{
  if (result)
  {
    int v3 = (void *)result;
    do
    {
      uint64_t v4 = v3[4];
      if (v4)
      {
        uint64_t v5 = *(unsigned __int8 **)(v4 + 40);
        if (v5)
        {
          int v6 = 0;
          uint64_t v7 = v3[7];
          do
          {
            unsigned int v9 = *v5;
            if (v9 >= 2)
            {
              int v10 = 0;
              int v11 = 0;
              do
              {
                if (!v11) {
                  ++v10;
                }
                int v11 = v9 & 0x80;
                char v12 = *++v5;
                LOBYTE(v9) = v12;
              }
              while (v12 & 0xFE | v11);
            }
            else
            {
              int v10 = 0;
            }
            uint64_t v13 = 3 * v6;
            *(_DWORD *)(v7 + 4 * (int)v13 + 4) += v10;
            BOOL v14 = v10 == 0;
            uint64_t v15 = v7 + 4 * v13;
            int v16 = *(_DWORD *)(v15 + 8);
            if (!v14) {
              ++v16;
            }
            *(_DWORD *)(v15 + 8) = v16;
            if (!*v5) {
              break;
            }
            uint64_t v17 = v5 + 1;
            int v6 = v5[1];
            if ((char)v5[1] < 0)
            {
              int v6 = v6 & 0x7F | (v5[2] << 7);
              if ((char)v5[2] < 0)
              {
                int v6 = v6 & 0x3FFF | (v5[3] << 14);
                if ((char)v5[3] < 0)
                {
                  int v6 = v6 & 0x1FFFFF | (v5[4] << 21);
                  if ((char)v5[4] < 0)
                  {
                    int v6 = v6 & 0xFFFFFFF | ((v5[5] & 7) << 28);
                    uint64_t v8 = 5;
                  }
                  else
                  {
                    uint64_t v8 = 4;
                  }
                }
                else
                {
                  uint64_t v8 = 3;
                }
              }
              else
              {
                uint64_t v8 = 2;
              }
            }
            else
            {
              uint64_t v8 = 1;
            }
            uint64_t v5 = &v17[v8];
          }
          while (v6 < (int)a2);
        }
      }
      uint64_t result = sub_1B0D9AF70(v3[2], a2);
      int v3 = (void *)v3[3];
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1B0D9B0B8(sqlite3 *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, char **a6)
{
  uint64_t v51 = 0;
  uint64_t v11 = sqlite3_declare_vtab(a1, "CREATE TABLE x(input, token, start, end, position)");
  if (v11) {
    return v11;
  }
  uint64_t v12 = (a3 - 3);
  if (a3 == 3)
  {
    uint64_t v15 = 0;
    uint64_t v17 = "simple";
  }
  else
  {
    unsigned int v50 = a6;
    uint64_t v13 = (const char **)(a4 + 24);
    if (a3 >= 4)
    {
      LODWORD(v14) = 0;
      uint64_t v18 = v13;
      uint64_t v19 = (a3 - 3);
      do
      {
        uint64_t v20 = *v18++;
        LODWORD(v14) = v14 + strlen(v20) + 1;
        --v19;
      }
      while (v19);
      uint64_t v14 = (int)v14;
      if (sqlite3_initialize()) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v14 = 0;
      if (sqlite3_initialize())
      {
LABEL_5:
        uint64_t v15 = 0;
        goto LABEL_6;
      }
    }
    uint64_t v21 = sub_1B0C7FC94(v14 + 8 * (int)v12);
    uint64_t v15 = (const char **)v21;
    unsigned __int8 v49 = a5;
    if (a3 >= 4 && v21)
    {
      uint64_t v22 = 0;
      int v23 = (unsigned __int8 *)(v21 + 8 * (int)v12);
      do
      {
        int v25 = strlen(v13[v22]);
        v15[v22] = (const char *)v23;
        size_t v26 = v25 + 1;
        memcpy(v23, v13[v22], v26);
        int v27 = *v23;
        if ((v27 - 34) <= 0x3E && ((1 << (v27 - 34)) & 0x4200000000000021) != 0)
        {
          if (v27 == 91) {
            int v27 = 93;
          }
          int v29 = v23[1];
          if (v23[1])
          {
            uint64_t v30 = 0;
            int v31 = 1;
            while (1)
            {
              if (v29 == v27)
              {
                if (v23[v31 + 1] != v27)
                {
LABEL_15:
                  uint64_t v24 = v30;
                  goto LABEL_16;
                }
                v23[v30] = v27;
                v31 += 2;
              }
              else
              {
                v23[v30] = v29;
                ++v31;
              }
              ++v30;
              int v29 = v23[v31];
              if (!v23[v31]) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v24 = 0;
LABEL_16:
          v23[v24] = 0;
        }
        v23 += v26;
        ++v22;
      }
      while (v22 != v12);
    }
    else if (!v21)
    {
LABEL_6:
      uint64_t v16 = 0;
LABEL_7:
      uint64_t v11 = 7;
      goto LABEL_58;
    }
    if (a3 >= 4) {
      uint64_t v17 = *v15;
    }
    else {
      uint64_t v17 = "simple";
    }
    a5 = v49;
    a6 = v50;
  }
  int v32 = strlen(v17);
  if (a2 && *(void *)(a2 + 24))
  {
    uint64_t v33 = (v32 + 1);
    int v34 = sub_1B0D7D35C;
    if (*(unsigned char *)a2 == 1) {
      int v34 = sub_1B0C7E150;
    }
    int v35 = v34((char *)v17, v33);
    uint64_t v36 = *(void *)(a2 + 24);
    if (v36)
    {
      uint64_t v37 = (int *)(v36 + 16 * ((*(_DWORD *)(a2 + 16) - 1) & v35));
      int v40 = *v37;
      uint64_t v38 = v37 + 2;
      int v39 = v40;
      if (*(unsigned char *)a2 == 1) {
        BOOL v41 = sub_1B0C7E1B8;
      }
      else {
        BOOL v41 = sub_1B0D7D394;
      }
      while (v39)
      {
        uint64_t v38 = *(_DWORD **)v38;
        if (!v38) {
          break;
        }
        --v39;
        if (!((unsigned int (*)(void, void, const char *, uint64_t))v41)(*((void *)v38 + 3), v38[8], v17, v33))
        {
          uint64_t v16 = *((void *)v38 + 2);
          if (!v16) {
            break;
          }
          if (a3 <= 4) {
            int v42 = 0;
          }
          else {
            int v42 = v15 + 1;
          }
          if (a3 <= 4) {
            uint64_t v43 = 0;
          }
          else {
            uint64_t v43 = (a3 - 4);
          }
          uint64_t v44 = (*(uint64_t (**)(uint64_t, const char **, uint64_t *))(v16 + 8))(v43, v42, &v51);
          if (v44)
          {
            uint64_t v11 = v44;
            goto LABEL_58;
          }
          if (sqlite3_initialize()) {
            goto LABEL_7;
          }
          uint64_t v47 = sub_1B0C7FC94(40);
          if (!v47) {
            goto LABEL_7;
          }
          uint64_t v11 = 0;
          *(_OWORD *)uint64_t v47 = 0u;
          *(_OWORD *)(v47 + 16) = 0u;
          uint64_t v48 = v51;
          *(void *)(v47 + 24) = v16;
          *(void *)(v47 + 32) = v48;
          *a5 = v47;
          if (v15) {
            goto LABEL_61;
          }
          return v11;
        }
      }
    }
  }
  sub_1B0D7BFCC(a6, "unknown tokenizer: %s", v17);
  uint64_t v16 = 0;
  uint64_t v11 = 1;
LABEL_58:
  if (v51) {
    (*(void (**)(void))(v16 + 16))();
  }
  if (v15)
  {
LABEL_61:
    unsigned int v45 = (void (**)(const char **))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_66:
      (*v45)(v15);
      return v11;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v15);
    --qword_1EB220150;
    off_1EB21C9E8(v15);
    uint64_t v15 = (const char **)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v45 = (void (**)(const char **))&xmmword_1EB21CA50;
      goto LABEL_66;
    }
  }
  return v11;
}

uint64_t sub_1B0D9B484(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *a2;
  if ((int)v2 < 1)
  {
LABEL_8:
    a2[10] = 0;
    return 0;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = (unsigned char *)(*((void *)a2 + 1) + 5);
    uint64_t v5 = 8 * v2;
    while (!*v4 || *(_DWORD *)(v4 - 5) || *(v4 - 1) != 2)
    {
      v3 += 8;
      v4 += 12;
      if (v5 == v3) {
        goto LABEL_8;
      }
    }
    a2[10] = 1;
    uint64_t v6 = *((void *)a2 + 4) + v3;
    *(_DWORD *)uint64_t v6 = 1;
    *(unsigned char *)(v6 + 4) = 1;
    *((void *)a2 + 8) = 0x3FF0000000000000;
    return 0;
  }
}

uint64_t sub_1B0D9B504(uint64_t a1)
{
  uint64_t v1 = a1;
  (*(void (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 32));
  uint64_t v2 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_6;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v2 = &xmmword_1EB21CA50;
LABEL_6:
    (*v2)(v1);
  }
  return 0;
}

double sub_1B0D9B5BC(uint64_t a1, uint64_t *a2)
{
  if (!sqlite3_initialize())
  {
    uint64_t v4 = sub_1B0C7FC94(56);
    if (v4)
    {
      *(void *)(v4 + 48) = 0;
      double result = 0.0;
      *(_OWORD *)(v4 + 16) = 0u;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)uint64_t v4 = 0u;
      *a2 = v4;
    }
  }
  return result;
}

uint64_t sub_1B0D9B614(void *a1)
{
  uint64_t v1 = a1;
  if (a1[2])
  {
    (*(void (**)(void))(*(void *)(*a1 + 24) + 32))();
    v1[2] = 0;
  }
  uint64_t v2 = v1[1];
  if (v2)
  {
    uint64_t v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_9:
      (*v3)(v2);
      goto LABEL_10;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v3 = &xmmword_1EB21CA50;
      goto LABEL_9;
    }
  }
LABEL_10:
  v1[1] = 0;
  *((_DWORD *)v1 + 6) = 0;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = 0;
  uint64_t v4 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_15:
    (*v4)(v1);
    return 0;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = (void *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v4 = &xmmword_1EB21CA50;
    goto LABEL_15;
  }
  return 0;
}

uint64_t sub_1B0D9B764(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = *(void *)a1;
  unsigned int v9 = (void *)(a1 + 16);
  if (*(void *)(a1 + 16))
  {
    (*(void (**)(void))(*(void *)(v8 + 24) + 32))();
    *unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint64_t v11 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_9:
      (*v11)(v10);
      goto LABEL_10;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    uint64_t v10 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v11 = &xmmword_1EB21CA50;
      goto LABEL_9;
    }
  }
LABEL_10:
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 32) = 0;
  if (a2 != 1) {
    return 1;
  }
  uint64_t v12 = *a5;
  if (!*a5)
  {
    uint64_t v14 = 0;
    goto LABEL_22;
  }
  int v13 = *(unsigned __int16 *)(v12 + 20);
  if ((~v13 & 0x202) != 0 || *(unsigned char *)(v12 + 22) != 1)
  {
    if (v13)
    {
      uint64_t v14 = 0;
      __int16 v15 = *(_WORD *)(v12 + 20);
      if ((v15 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_32;
    }
    uint64_t v14 = (const void *)sub_1B0D18254((int *)v12, 1);
    uint64_t v12 = *a5;
    if (*a5)
    {
      __int16 v15 = *(_WORD *)(v12 + 20);
      if ((v15 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_32;
    }
LABEL_22:
    sub_1B0CE1978(91138);
    goto LABEL_23;
  }
  uint64_t v14 = *(const void **)(v12 + 8);
  __int16 v15 = *(_WORD *)(v12 + 20);
  if ((v15 & 2) == 0) {
    goto LABEL_35;
  }
LABEL_32:
  if (*(unsigned char *)(v12 + 22) == 1)
  {
    uint64_t v17 = *(unsigned int *)(v12 + 16);
    if (!sqlite3_initialize()) {
      goto LABEL_24;
    }
LABEL_42:
    *(void *)(a1 + 8) = 0;
    return 7;
  }
LABEL_35:
  if ((v15 & 0x10) != 0)
  {
    uint64_t v17 = *(unsigned int *)(v12 + 16);
    if ((v15 & 0x400) != 0) {
      uint64_t v17 = (*(_DWORD *)v12 + v17);
    }
    if (sqlite3_initialize()) {
      goto LABEL_42;
    }
    goto LABEL_24;
  }
  if (v15)
  {
LABEL_23:
    uint64_t v17 = 0;
    if (!sqlite3_initialize()) {
      goto LABEL_24;
    }
    goto LABEL_42;
  }
  uint64_t v17 = sub_1B0D18228(v12, 1);
  if (sqlite3_initialize()) {
    goto LABEL_42;
  }
LABEL_24:
  uint64_t v18 = (void *)sub_1B0C7FC94((int)v17 + 1);
  *(void *)(a1 + 8) = v18;
  if (!v18) {
    return 7;
  }
  if ((int)v17 >= 1)
  {
    memcpy(v18, v14, v17);
    uint64_t v18 = *(void **)(a1 + 8);
  }
  *((unsigned char *)v18 + (int)v17) = 0;
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, void *))(*(void *)(v8 + 24) + 24))(*(void *)(v8 + 32), *(void *)(a1 + 8), v17, v9);
  if (!result)
  {
    **(void **)(a1 + 16) = *(void *)(v8 + 32);
    return sub_1B0D9B9CC((uint64_t *)a1);
  }
  return result;
}

uint64_t sub_1B0D9B9CC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  ++*((_DWORD *)a1 + 6);
  uint64_t v3 = a1 + 4;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *, uint64_t, uint64_t *, uint64_t))(*(void *)(v2 + 24)
                                                                                                 + 40))(a1[2], a1 + 4, a1 + 5, (uint64_t)a1 + 44, a1 + 6, (uint64_t)a1 + 52);
  if (!result) {
    return result;
  }
  unsigned int v5 = result;
  if (a1[2])
  {
    (*(void (**)(void))(*(void *)(*a1 + 24) + 32))();
    a1[2] = 0;
  }
  uint64_t v6 = a1[1];
  if (v6)
  {
    uint64_t v7 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v6);
      --qword_1EB220150;
      off_1EB21C9E8(v6);
      uint64_t v6 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_11;
      }
      uint64_t v7 = &xmmword_1EB21CA50;
    }
    (*v7)(v6);
  }
LABEL_11:
  a1[1] = 0;
  *((_DWORD *)a1 + 6) = 0;
  v3[1] = 0;
  v3[2] = 0;
  if (v5 == 101) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = v5;
  }
  void *v3 = 0;
  return result;
}

BOOL sub_1B0D9BAF8(uint64_t a1)
{
  return *(void *)(a1 + 32) == 0;
}

uint64_t sub_1B0D9BB08(uint64_t a1, uint64_t *a2, int a3)
{
  switch(a3)
  {
    case 0:
      if (!a2) {
        goto LABEL_16;
      }
      uint64_t v3 = *(char **)(a1 + 8);
      uint64_t v4 = (uint64_t)a2;
      unsigned int v5 = v3;
      int v6 = -1;
      goto LABEL_8;
    case 1:
      if (a2)
      {
        int v6 = *(_DWORD *)(a1 + 40);
        uint64_t v8 = *(char **)(a1 + 32);
        uint64_t v4 = (uint64_t)a2;
        unsigned int v5 = v8;
LABEL_8:
        sub_1B0CEA530(v4, v5, v6, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
      }
      else
      {
LABEL_16:
        sub_1B0CE1978(97498);
      }
      return 0;
    case 2:
      if (!a2) {
        goto LABEL_15;
      }
      uint64_t v7 = *(int *)(a1 + 44);
      goto LABEL_13;
    case 3:
      if (!a2) {
        goto LABEL_15;
      }
      uint64_t v7 = *(int *)(a1 + 48);
      goto LABEL_13;
    default:
      if (a2)
      {
        uint64_t v7 = *(int *)(a1 + 52);
LABEL_13:
        uint64_t v9 = *a2;
        if ((*(_WORD *)(*a2 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v9, v7);
        }
        else
        {
          *(void *)uint64_t v9 = v7;
          *(_WORD *)(v9 + 20) = 4;
        }
      }
      else
      {
LABEL_15:
        sub_1B0CE1978(97431);
      }
      return 0;
  }
}

uint64_t sub_1B0D9BC08(uint64_t a1, void *a2)
{
  *a2 = *(int *)(a1 + 24);
  return 0;
}

uint64_t sub_1B0D9BC18(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5, char **a6)
{
  return sub_1B0DA0E64(1, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B0D9BC38(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5, char **a6)
{
  return sub_1B0DA0E64(0, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B0D9BC58(uint64_t a1, int *a2)
{
  uint64_t v2 = *(_DWORD **)(a1 + 24);
  if (v2[30])
  {
    *(void *)(a1 + 16) = sqlite3_mprintf("recursively defined fts5 content table");
    return 1;
  }
  int v5 = v2[6];
  int v6 = *a2;
  int v7 = sqlite3_initialize();
  uint64_t result = 7;
  if ((v6 & 0x80000000) == 0 && !v7)
  {
    char v8 = 1;
    uint64_t v9 = sub_1B0C7FC94((8 * v6) | 1u);
    if (!v9) {
      return 7;
    }
    uint64_t v10 = v9;
    *((void *)a2 + 6) = v9;
    a2[14] = 1;
    if (*a2 < 1)
    {
      int v14 = 0;
      int v17 = 0;
LABEL_45:
      int v28 = 0;
      int v29 = 0;
      goto LABEL_46;
    }
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    int v14 = 0;
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v45 = 0;
    while (1)
    {
      uint64_t v19 = *((void *)a2 + 1);
      int v20 = *(_DWORD *)(v19 + v11);
      int v21 = *(unsigned __int8 *)(v19 + v11 + 4);
      if (v21 != 64 && (v21 == 2 ? (BOOL v22 = v20 < v5) : (BOOL v22 = 1), v22))
      {
        if (*(unsigned char *)(v19 + v11 + 5))
        {
          if (v20 < 0 || v20 >= v5)
          {
LABEL_9:
            if (v15)
            {
              int v15 = 1;
            }
            else if (v21 == 2 && v20 < 0)
            {
              *(unsigned char *)(v10 + v17++) = 61;
              *(_DWORD *)(*((void *)a2 + 4) + v12) = ++v16;
              int v15 = 1;
            }
            goto LABEL_11;
          }
          int v23 = v2[31];
          if (v23 == 65)
          {
            if ((v21 - 65) > 1) {
              goto LABEL_9;
            }
          }
          else if (v23 != 66 || v21 != 66)
          {
            goto LABEL_9;
          }
          if (v21 == 65) {
            char v26 = 76;
          }
          else {
            char v26 = 71;
          }
          uint64_t v27 = v17 + 1;
          *(unsigned char *)(v10 + v17) = v26;
          int v44 = v14;
          sqlite3_snprintf(6, (char *)(v10 + v27), "%d", v20);
          v10 += strlen((const char *)(v10 + v27));
          int v14 = v44;
          *(_DWORD *)(*((void *)a2 + 4) + v12) = ++v16;
          int v17 = v27;
        }
      }
      else
      {
        if (!*(unsigned char *)(v19 + v11 + 5) || v20 < 0)
        {
          uint64_t result = 0;
          *((void *)a2 + 8) = 0x4A511B0EC57E649ALL;
          *(unsigned char *)(v10 + v17) = 0;
          return result;
        }
        if (v20 != v5 + 1)
        {
          uint64_t v24 = v17 + 1;
          *(unsigned char *)(v10 + v17) = 77;
          sqlite3_snprintf(6, (char *)(v10 + v24), "%d", v20);
          v10 += strlen((const char *)(v10 + v24));
          int v14 = 1;
          int v17 = v24;
LABEL_35:
          ++v16;
          uint64_t v25 = *((void *)a2 + 4) + v12;
          *(_DWORD *)uint64_t v25 = v16;
          *(unsigned char *)(v25 + 4) = 1;
          goto LABEL_11;
        }
        if (!v45)
        {
          *(unsigned char *)(v10 + v17++) = 114;
          int v45 = 1;
          goto LABEL_35;
        }
        int v45 = 1;
      }
LABEL_11:
      ++v13;
      uint64_t v18 = *a2;
      v12 += 8;
      v11 += 12;
      if (v13 >= v18)
      {
        if (v15)
        {
          char v8 = 0;
          goto LABEL_45;
        }
        if ((int)v18 < 1)
        {
          int v28 = 0;
          int v29 = 0;
        }
        else
        {
          uint64_t v33 = 0;
          uint64_t v34 = 0;
          uint64_t v35 = 0;
          int v29 = 0;
          int v28 = 0;
          do
          {
            uint64_t v36 = *((void *)a2 + 1);
            if ((*(_DWORD *)(v36 + v33) & 0x80000000) != 0)
            {
              uint64_t v37 = v36 + v33;
              if (*(unsigned char *)(v37 + 5))
              {
                HIDWORD(v38) = *(unsigned __int8 *)(v37 + 4);
                LODWORD(v38) = (HIDWORD(v38) << 24) - 0x4000000;
                switch((v38 >> 26))
                {
                  case 0u:
                  case 7u:
                    if (!v28)
                    {
                      int v28 = 1;
                      char v39 = 62;
                      goto LABEL_57;
                    }
                    break;
                  case 1u:
                  case 3u:
                    if (!v29)
                    {
                      int v29 = 1;
                      char v39 = 60;
LABEL_57:
                      *(unsigned char *)(v10 + v17++) = v39;
                      *(_DWORD *)(*((void *)a2 + 4) + v34) = ++v16;
                    }
                    break;
                  default:
                    break;
                }
              }
            }
            ++v35;
            v34 += 8;
            v33 += 12;
          }
          while (v35 < *a2);
        }
        char v8 = 1;
LABEL_46:
        int v30 = 0;
        *(unsigned char *)(v10 + v17) = 0;
        if (a2[4] == 1)
        {
          uint64_t v31 = *((void *)a2 + 3);
          if (*(_DWORD *)v31 != v2[6] + 1 || v14 == 0)
          {
            if (*(_DWORD *)v31 == -1)
            {
              int v30 = 64;
              goto LABEL_67;
            }
            int v30 = 0;
          }
          else
          {
            int v30 = 32;
LABEL_67:
            a2[15] = 1;
            if (*(unsigned char *)(v31 + 4)) {
              v30 |= 0x80u;
            }
          }
        }
        if (v8)
        {
          if (v29 && v28)
          {
            BOOL v40 = v14 == 0;
            double v41 = 500.0;
            double v42 = 250000.0;
          }
          else
          {
            BOOL v40 = v14 == 0;
            if (v29 | v28)
            {
              double v41 = 750.0;
              double v42 = 750000.0;
            }
            else
            {
              double v41 = 1000.0;
              double v42 = 1000000.0;
            }
          }
          if (v40) {
            double v41 = v42;
          }
          *((double *)a2 + 8) = v41;
        }
        else
        {
          double v43 = 100.0;
          if (!v14) {
            double v43 = 10.0;
          }
          *((double *)a2 + 8) = v43;
          if (!v14) {
            a2[20] |= 1u;
          }
        }
        uint64_t result = 0;
        a2[10] = v30;
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_1B0D9C130(uint64_t a1)
{
  return 0;
}

uint64_t sub_1B0D9C14C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t result = sub_1B0DA41D8(*(sqlite3 **)v2, 0, "DROP TABLE IF EXISTS %Q.'%q_data';DROP TABLE IF EXISTS %Q.'%q_idx';DROP TABLE IF EXISTS %Q.'%q_config';",
             *(void *)(v2 + 8),
             *(void *)(v2 + 16),
             *(void *)(v2 + 8),
             *(void *)(v2 + 16),
             *(void *)(v2 + 8),
             *(void *)(v2 + 16));
  if (!result)
  {
    if (!*(_DWORD *)(v2 + 88)
      || (uint64_t result = sub_1B0DA41D8(*(sqlite3 **)v2, 0, "DROP TABLE IF EXISTS %Q.'%q_docsize';",
                     *(void *)(v2 + 8),
                     *(void *)(v2 + 16)),
          !result))
    {
      if (*(_DWORD *)(v2 + 64)
        || (uint64_t result = sub_1B0DA41D8(*(sqlite3 **)v2, 0, "DROP TABLE IF EXISTS %Q.'%q_content';",
                       *(void *)(v2 + 8),
                       *(void *)(v2 + 16)),
            !result))
      {
        sub_1B0DA2FD4(a1);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B0D9C1FC(void *a1, void *a2)
{
  uint64_t v4 = a1[3];
  int v5 = *(void **)(a1[6] + 72);
  if (v5)
  {
    while ((void *)*v5 != a1)
    {
      int v5 = (void *)v5[1];
      if (!v5) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    uint64_t v6 = *(void *)(a1[5] + 8);
    if (sub_1B0DA6590(v6) != *(void *)(v6 + 136))
    {
      int v7 = *(_DWORD **)(v6 + 144);
      if (v7)
      {
        sub_1B0DA4EF8(v7);
        *(void *)(v6 + 144) = 0;
      }
    }
    uint64_t result = *(unsigned int *)(v6 + 60);
    *(_DWORD *)(v6 + 60) = 0;
    if (result)
    {
      uint64_t v9 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v10 = *(int *)(v4 + 24);
  if (sqlite3_initialize())
  {
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v11 = 4 * v10 + 184;
    uint64_t v12 = (void *)sub_1B0C7FC94(v11);
    uint64_t v9 = v12;
    if (v12)
    {
      uint64_t v13 = a1[6];
      bzero(v12, v11);
      uint64_t result = 0;
      v9[1] = *(void *)(v13 + 72);
      v9[2] = v9 + 23;
      *(void *)(v13 + 72) = v9;
      uint64_t v14 = *(void *)(v13 + 40) + 1;
      *(void *)(v13 + 40) = v14;
      v9[3] = v14;
      goto LABEL_14;
    }
  }
  uint64_t result = 7;
LABEL_14:
  *a2 = v9;
  return result;
}

uint64_t sub_1B0D9C2F4(uint64_t *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    uint64_t v2 = *a1;
    v3.n128_f64[0] = sub_1B0DA7520(a1);
    uint64_t v4 = (void *)(*(void *)(v2 + 48) + 72);
    do
    {
      int v5 = v4;
      uint64_t v6 = (uint64_t *)*v4;
      uint64_t v4 = (void *)(*v4 + 8);
    }
    while (v6 != v1);
    *int v5 = v1[1];
    int v7 = (void (**)(uint64_t *, __n128))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_9;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = (uint64_t *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v7 = (void (**)(uint64_t *, __n128))&xmmword_1EB21CA50;
LABEL_9:
      (*v7)(v1, v3);
    }
  }
  return 0;
}

uint64_t sub_1B0D9C3D4(uint64_t a1, unsigned int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 24);
  uint64_t v7 = *(void *)(v6 + 184);
  uint64_t v145 = 0;
  if (!*(_DWORD *)(v6 + 120))
  {
    uint64_t v134 = v7;
    uint64_t v14 = a1 + 32;
    if (*(_DWORD *)(a1 + 32))
    {
      sub_1B0DA7520((uint64_t *)a1);
      *(void *)(v14 + 144) = 0;
      *(_OWORD *)(v14 + 112) = 0u;
      *(_OWORD *)(v14 + 128) = 0u;
      *(_OWORD *)(v14 + 80) = 0u;
      *(_OWORD *)(v14 + 96) = 0u;
      *(_OWORD *)(v14 + 48) = 0u;
      *(_OWORD *)(v14 + 64) = 0u;
      *(_OWORD *)(v14 + 16) = 0u;
      *(_OWORD *)(v14 + 32) = 0u;
      *(_OWORD *)uint64_t v14 = 0u;
    }
    uint64_t v133 = (int *)v14;
    unsigned int v132 = a2;
    uint64_t v135 = a1;
    int v136 = (char **)(v5 + 16);
    *(void *)(v6 + 184) = v5 + 16;
    if (a4 >= 1)
    {
      uint64_t v15 = 0;
      int v16 = 0;
      uint64_t v138 = 0;
      uint64_t v139 = 0;
      uint64_t v140 = 0;
      uint64_t v141 = a5;
      uint64_t v137 = 0;
      uint64_t v144 = a3 + 1;
      uint64_t v17 = a4;
      uint64_t v142 = v6;
      uint64_t v143 = a4;
      while (2)
      {
        int v20 = *(char *)(a3 + v16++);
        switch(v20)
        {
          case '<':
            uint64_t v138 = *(void *)(a5 + 8 * v15);
            goto LABEL_9;
          case '=':
            uint64_t v140 = *(const sqlite3_value **)(a5 + 8 * v15);
            goto LABEL_9;
          case 'G':
          case 'L':
            uint64_t v21 = *(void *)(a5 + 8 * v15);
            if (!v21) {
              goto LABEL_25;
            }
            int v22 = *(unsigned __int16 *)(v21 + 20);
            if ((~v22 & 0x202) != 0 || *(unsigned char *)(v21 + 22) != 1)
            {
              if (v22) {
LABEL_25:
              }
                int v23 = 0;
              else {
                int v23 = (const char *)sub_1B0D18254((int *)v21, 1);
              }
            }
            else
            {
              int v23 = *(const char **)(v21 + 8);
            }
            int v26 = 0;
            int v27 = v20;
            char v28 = *(unsigned char *)(a3 + v16);
            int v29 = (unsigned __int8 *)(v144 + v16);
            do
            {
              int v26 = 10 * v26 + v28 - 48;
              int v30 = *v29++;
              char v28 = v30;
              ++v16;
            }
            while ((v30 - 48) < 0xA);
            if (!v23)
            {
              uint64_t v18 = v145;
              a5 = v141;
              uint64_t v17 = v143;
              goto LABEL_8;
            }
            int64_t v31 = strlen(v23);
            if (sqlite3_initialize())
            {
              uint64_t v18 = 0;
              uint64_t v8 = 7;
              goto LABEL_171;
            }
            uint64_t v32 = sub_1B0C7FC94((4 * v31) | 1);
            if (!v32)
            {
              uint64_t v18 = 0;
              uint64_t v8 = 7;
              uint64_t v6 = v142;
              goto LABEL_171;
            }
            uint64_t v33 = (unsigned __int8 *)v32;
            if (v27 == 71) {
              int v34 = 91;
            }
            else {
              int v34 = 0;
            }
            if (v27 == 71) {
              int v35 = 63;
            }
            else {
              int v35 = 37;
            }
            if (v27 == 71) {
              int v36 = 42;
            }
            else {
              int v36 = 95;
            }
            a5 = v141;
            v37.i64[0] = 0x100000001;
            v37.i64[1] = 0x100000001;
            v38.i64[0] = 0xC0C0C0C0C0C0C0C0;
            v38.i64[1] = 0xC0C0C0C0C0C0C0C0;
            v39.i64[0] = 0x8080808080808080;
            v39.i64[1] = 0x8080808080808080;
            if (v31 < 0) {
              goto LABEL_90;
            }
            uint64_t v40 = 0;
            int v41 = 0;
            int v42 = 0;
            int v43 = 0;
            do
            {
              if (v31 != v40)
              {
                int v44 = v23[v40];
                BOOL v45 = v34 == v44 || v36 == v44;
                if (!v45 && v35 != v44)
                {
                  ++v42;
                  goto LABEL_44;
                }
              }
              uint64_t v47 = (v42 - v41);
              if ((int)v47 >= 1)
              {
                if (v47 >= 8)
                {
                  if (v47 >= 0x20)
                  {
                    int32x4_t v50 = 0uLL;
                    uint64_t v48 = v47 & 0xFFFFFFE0;
                    int32x4_t v51 = 0uLL;
                    int v52 = (int8x16_t *)&v23[v41 + 16];
                    uint64_t v53 = v48;
                    int32x4_t v54 = 0uLL;
                    int32x4_t v55 = 0uLL;
                    int32x4_t v56 = 0uLL;
                    int32x4_t v57 = 0uLL;
                    int32x4_t v58 = 0uLL;
                    int32x4_t v59 = 0uLL;
                    do
                    {
                      uint8x16_t v60 = (uint8x16_t)vmvnq_s8(vceqq_s8(vandq_s8(v52[-1], v38), v39));
                      uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v60.i8);
                      uint16x8_t v62 = vmovl_high_u8(v60);
                      uint8x16_t v63 = (uint8x16_t)vmvnq_s8(vceqq_s8(vandq_s8(*v52, v38), v39));
                      uint16x8_t v64 = vmovl_u8(*(uint8x8_t *)v63.i8);
                      uint16x8_t v65 = vmovl_high_u8(v63);
                      int32x4_t v55 = vaddq_s32(v55, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v62), v37));
                      int32x4_t v54 = vaddq_s32(v54, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v62.i8), v37));
                      int32x4_t v51 = vaddq_s32(v51, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v61), v37));
                      int32x4_t v50 = vaddq_s32(v50, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v61.i8), v37));
                      int32x4_t v59 = vaddq_s32(v59, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v65), v37));
                      int32x4_t v58 = vaddq_s32(v58, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v65.i8), v37));
                      int32x4_t v57 = vaddq_s32(v57, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v64), v37));
                      int32x4_t v56 = vaddq_s32(v56, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v64.i8), v37));
                      v52 += 2;
                      v53 -= 32;
                    }
                    while (v53);
                    unsigned int v49 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v56, v50), vaddq_s32(v58, v54)), vaddq_s32(vaddq_s32(v57, v51), vaddq_s32(v59, v55))));
                    if (v48 == v47) {
                      goto LABEL_70;
                    }
                    if ((((_BYTE)v42 - (_BYTE)v41) & 0x18) == 0) {
                      goto LABEL_66;
                    }
                  }
                  else
                  {
                    unsigned int v49 = 0;
                    uint64_t v48 = 0;
                  }
                  uint64_t v66 = v48;
                  uint64_t v48 = v47 & 0xFFFFFFF8;
                  int32x4_t v67 = 0uLL;
                  int32x4_t v68 = (int32x4_t)v49;
                  uint64_t v69 = (int8x8_t *)&v23[v66 + v41];
                  uint64_t v70 = v66 - v48;
                  do
                  {
                    int8x8_t v71 = *v69++;
                    uint16x8_t v72 = vmovl_u8((uint8x8_t)vmvn_s8(vceq_s8(vand_s8(v71, (int8x8_t)0xC0C0C0C0C0C0C0C0), (int8x8_t)0x8080808080808080)));
                    int32x4_t v67 = vaddq_s32(v67, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v72), v37));
                    int32x4_t v68 = vaddq_s32(v68, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v72.i8), v37));
                    v70 += 8;
                  }
                  while (v70);
                  unsigned int v49 = vaddvq_s32(vaddq_s32(v68, v67));
                  if (v48 != v47) {
                    goto LABEL_66;
                  }
                }
                else
                {
                  uint64_t v48 = 0;
                  unsigned int v49 = 0;
LABEL_66:
                  uint64_t v73 = v47 - v48;
                  uint64_t v74 = &v23[v48 + v41];
                  do
                  {
                    char v75 = *v74++;
                    if ((v75 & 0xC0) != 0x80) {
                      ++v49;
                    }
                    --v73;
                  }
                  while (v73);
                }
LABEL_70:
                if (v49 >= 3)
                {
                  int v76 = v43 + 1;
                  v33[v43] = 34;
                  if (v42 <= v41)
                  {
                    LODWORD(v79) = v43 + 1;
                  }
                  else
                  {
                    uint64_t v77 = v42 - (uint64_t)v41;
                    uint64_t v78 = (unsigned __int8 *)&v23[v41];
                    do
                    {
                      uint64_t v79 = v76 + 1;
                      v33[v76] = *v78;
                      int v80 = *v78++;
                      if (v80 == 34)
                      {
                        v33[v79] = 34;
                        LODWORD(v79) = v76 + 2;
                      }
                      int v76 = v79;
                      --v77;
                    }
                    while (v77);
                  }
                  *(_WORD *)&v33[(int)v79] = 8226;
                  int v43 = v79 + 2;
                }
              }
              if (v34 == v23[v40])
              {
                int v81 = v23[v42 + 1] == 94 ? 3 : 2;
                v42 += v81;
                uint64_t v82 = v42;
                if (v31 > v42)
                {
                  while (v23[v82] != 93)
                  {
                    if (v31 <= ++v82)
                    {
                      LODWORD(v82) = v31;
                      break;
                    }
                  }
                  int v42 = v82;
                }
              }
              int v41 = ++v42;
LABEL_44:
              uint64_t v40 = v42;
            }
            while (v31 >= v42);
            if (v43 < 1)
            {
LABEL_90:
              uint64_t v8 = 0;
              uint64_t v145 = 0;
              uint64_t v17 = v143;
              goto LABEL_104;
            }
            unsigned int v83 = *(_DWORD *)(v142 + 92);
            if (v83)
            {
              if (v83 == 1) {
                int v26 = *(_DWORD *)(v142 + 24);
              }
              else {
                unsigned int v83 = 1;
              }
            }
            uint64_t v17 = v143;
            v33[v43] = 0;
            uint64_t v8 = sub_1B0DA87B0(v142, v83, v26, v33, &v145, *(void **)(v142 + 184));
LABEL_104:
            BOOL v90 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v33);
              --qword_1EB220150;
              off_1EB21C9E8(v33);
              uint64_t v33 = (unsigned __int8 *)xmmword_1EB2201B0;
              uint64_t v17 = v143;
              if ((void)xmmword_1EB2201B0)
              {
                BOOL v90 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
                goto LABEL_109;
              }
            }
            else
            {
LABEL_109:
              (*v90)(v33);
            }
            uint64_t v18 = v145;
            uint64_t v6 = v142;
            if (v8)
            {
LABEL_171:
              sub_1B0DA79A0(v18);
              *(void *)(v6 + 184) = v134;
              return v8;
            }
LABEL_8:
            uint64_t v19 = sub_1B0DA9538((uint64_t *)(a1 + 64), v18);
            uint64_t v145 = 0;
            if (v19) {
              goto LABEL_169;
            }
LABEL_9:
            if (++v15 == v17) {
              goto LABEL_117;
            }
            continue;
          case 'M':
            uint64_t v24 = *(void *)(a5 + 8 * v15);
            if (v24)
            {
              int v25 = *(unsigned __int16 *)(v24 + 20);
              if ((~v25 & 0x202) != 0 || *(unsigned char *)(v24 + 22) != 1)
              {
                if (v25) {
                  uint64_t v24 = 0;
                }
                else {
                  uint64_t v24 = sub_1B0D18254((int *)v24, 1);
                }
              }
              else
              {
                uint64_t v24 = *(void *)(v24 + 8);
              }
            }
            int v84 = 0;
            char v85 = *(unsigned char *)(a3 + v16);
            uint64_t v86 = (unsigned __int8 *)(v144 + v16);
            do
            {
              int v84 = 10 * v84 + v85 - 48;
              int v87 = *v86++;
              char v85 = v87;
              ++v16;
            }
            while ((v87 - 48) < 0xA);
            if (v24) {
              int v88 = (unsigned __int8 *)v24;
            }
            else {
              int v88 = (unsigned __int8 *)&byte_1B0DE9952;
            }
            if (*v88 != 42)
            {
              uint64_t v89 = sub_1B0DA87B0(v6, 0, v84, v88, &v145, v136);
              uint64_t v18 = v145;
              if (v89)
              {
                uint64_t v8 = v89;
                goto LABEL_171;
              }
              goto LABEL_8;
            }
            do
            {
              int v92 = *++v88;
              int v91 = v92;
            }
            while (v92 == 32);
            uint64_t v93 = 0;
            while ((v91 | 0x20) != 0x20)
            {
              uint64_t v94 = &v88[v93++];
              int v91 = v94[1];
            }
            int *v133 = 3;
            if (v93 != 2)
            {
              if (v93 == 5)
              {
                int v114 = *v88;
                if ((v114 & 0xFFFFFFDF) == 0x52)
                {
                  int v114 = v88[1];
                  if ((v114 & 0xFFFFFFDF) == 0x45)
                  {
                    int v114 = v88[2];
                    if ((v114 & 0xFFFFFFDF) == 0x41)
                    {
                      int v114 = v88[3];
                      if ((v114 & 0xFFFFFFDF) == 0x44)
                      {
                        int v114 = v88[4];
                        if ((v114 & 0xFFFFFFDF) == 0x53)
                        {
LABEL_261:
                          uint64_t v18 = 0;
                          uint64_t v8 = 0;
                          *(void *)(a1 + 88) = *(int *)(*(void *)(v5 + 32) + 112);
                          goto LABEL_171;
                        }
                        int v115 = 115;
                      }
                      else
                      {
                        int v115 = 100;
                      }
                    }
                    else
                    {
                      int v115 = 97;
                    }
                  }
                  else
                  {
                    int v115 = 101;
                  }
                }
                else
                {
                  int v115 = 114;
                }
                if (v115 == byte_1B0DE1758[v114]) {
                  goto LABEL_261;
                }
              }
              goto LABEL_262;
            }
            int v127 = *v88;
            if ((v127 & 0xFFFFFFDF) == 0x49)
            {
              int v127 = v88[1];
              if ((v127 & 0xFFFFFFDF) == 0x44) {
                goto LABEL_252;
              }
              int v128 = 100;
            }
            else
            {
              int v128 = 105;
            }
            if (v128 != byte_1B0DE1758[v127])
            {
LABEL_262:
              uint64_t v129 = sqlite3_mprintf("unknown special query: %.*s", v93, (const char *)v88);
              uint64_t v18 = 0;
              int v130 = (char **)(v5 + 16);
              goto LABEL_263;
            }
LABEL_252:
            uint64_t v18 = 0;
            uint64_t v8 = 0;
            *(void *)(a1 + 88) = *(void *)(a1 + 24);
            goto LABEL_171;
          case 'r':
            uint64_t v137 = *(void *)(a5 + 8 * v15);
            goto LABEL_9;
          default:
            uint64_t v139 = *(void *)(a5 + 8 * v15);
            goto LABEL_9;
        }
      }
    }
    uint64_t v137 = 0;
    uint64_t v138 = 0;
    uint64_t v139 = 0;
    uint64_t v140 = 0;
LABEL_117:
    int v95 = (v132 >> 7) & 1;
    *(_DWORD *)(a1 + 36) = v95;
    if (v140) {
      uint64_t v96 = (uint64_t)v140;
    }
    else {
      uint64_t v96 = v138;
    }
    if (v140) {
      uint64_t v97 = (uint64_t)v140;
    }
    else {
      uint64_t v97 = v139;
    }
    if ((v132 & 0x80) == 0)
    {
      sqlite3_int64 v98 = v133;
      if (v96)
      {
        __int16 v99 = *(_WORD *)(v96 + 20);
        if ((0x4000000040004uLL >> v99))
        {
          sub_1B0CEE968(v96, 0);
          __int16 v99 = *(_WORD *)(v96 + 20);
          if ((0x50505050uLL >> (v99 & 0x3F)))
          {
LABEL_127:
            if ((v99 & 0x24) != 0)
            {
              double v100 = *(double *)v96;
            }
            else if ((v99 & 8) != 0)
            {
              double v123 = *(double *)v96;
              if (*(double *)v96 >= -9.22337204e18)
              {
                if (v123 <= 9.22337204e18) {
                  *(void *)&double v100 = (uint64_t)v123;
                }
                else {
                  double v100 = NAN;
                }
              }
              else
              {
                double v100 = -0.0;
              }
            }
            else if ((v99 & 0x12) != 0 && *(void *)(v96 + 8))
            {
              double v100 = COERCE_DOUBLE(sub_1B0D186C0(v96));
            }
            else
            {
              double v100 = 0.0;
            }
LABEL_136:
            *(double *)(a1 + 48) = v100;
            if (v97)
            {
              __int16 v103 = *(_WORD *)(v97 + 20);
              if ((0x4000000040004uLL >> v103))
              {
                sub_1B0CEE968(v97, 0);
                __int16 v103 = *(_WORD *)(v97 + 20);
              }
              uint64_t v105 = v5;
              if ((0x50505050uLL >> (v103 & 0x3F)))
              {
                if ((v103 & 0x24) != 0)
                {
                  double v104 = *(double *)v97;
                  goto LABEL_154;
                }
                if ((v103 & 8) == 0)
                {
                  if ((v103 & 0x12) != 0 && *(void *)(v97 + 8)) {
                    double v104 = COERCE_DOUBLE(sub_1B0D186C0(v97));
                  }
                  else {
                    double v104 = 0.0;
                  }
                  goto LABEL_154;
                }
                double v125 = *(double *)v97;
                if (*(double *)v97 >= -9.22337204e18)
                {
                  if (v125 <= 9.22337204e18) {
                    *(void *)&double v104 = (uint64_t)v125;
                  }
                  else {
                    double v104 = NAN;
                  }
                  goto LABEL_154;
                }
              }
              double v104 = -0.0;
            }
            else
            {
              double v104 = -0.0;
              uint64_t v105 = v5;
            }
LABEL_154:
            *(double *)(v135 + 40) = v104;
            goto LABEL_155;
          }
        }
        else if ((0x50505050uLL >> (v99 & 0x3F)))
        {
          goto LABEL_127;
        }
      }
      double v100 = NAN;
      goto LABEL_136;
    }
    sqlite3_int64 v98 = v133;
    if (v96)
    {
      __int16 v101 = *(_WORD *)(v96 + 20);
      if ((0x4000000040004uLL >> v101))
      {
        sub_1B0CEE968(v96, 0);
        __int16 v101 = *(_WORD *)(v96 + 20);
        if ((0x50505050uLL >> (v101 & 0x3F)))
        {
LABEL_132:
          if ((v101 & 0x24) != 0)
          {
            uint64_t v102 = *(void *)v96;
          }
          else if ((v101 & 8) != 0)
          {
            double v124 = *(double *)v96;
            if (*(double *)v96 >= -9.22337204e18)
            {
              if (v124 <= 9.22337204e18) {
                uint64_t v102 = (uint64_t)v124;
              }
              else {
                uint64_t v102 = 0x7FFFFFFFFFFFFFFFLL;
              }
            }
            else
            {
              uint64_t v102 = 0x8000000000000000;
            }
          }
          else if ((v101 & 0x12) != 0 && *(void *)(v96 + 8))
          {
            uint64_t v102 = sub_1B0D186C0(v96);
          }
          else
          {
            uint64_t v102 = 0;
          }
LABEL_142:
          *(void *)(a1 + 40) = v102;
          if (!v97)
          {
            uint64_t v105 = v5;
            *(void *)(v135 + 48) = 0x8000000000000000;
            goto LABEL_155;
          }
          __int16 v106 = *(_WORD *)(v97 + 20);
          if ((0x4000000040004uLL >> v106))
          {
            sub_1B0CEE968(v97, 0);
            __int16 v106 = *(_WORD *)(v97 + 20);
          }
          uint64_t v105 = v5;
          if (((0x50505050uLL >> (v106 & 0x3F)) & 1) == 0) {
            goto LABEL_151;
          }
          if ((v106 & 0x24) != 0)
          {
            *(void *)(v135 + 48) = *(void *)v97;
          }
          else if ((v106 & 8) != 0)
          {
            double v126 = *(double *)v97;
            if (*(double *)v97 < -9.22337204e18)
            {
LABEL_151:
              *(void *)(v135 + 48) = 0x8000000000000000;
              goto LABEL_155;
            }
            if (v126 <= 9.22337204e18) {
              *(void *)(v135 + 48) = (uint64_t)v126;
            }
            else {
              *(void *)(v135 + 48) = 0x7FFFFFFFFFFFFFFFLL;
            }
          }
          else if ((v106 & 0x12) != 0 && *(void *)(v97 + 8))
          {
            *(void *)(v135 + 48) = sub_1B0D186C0(v97);
          }
          else
          {
            *(void *)(v135 + 48) = 0;
          }
LABEL_155:
          uint64_t v107 = *(void *)(v105 + 32);
          int v108 = sub_1B0DA5A0C(v107);
          sub_1B0DA4EF8(v108);
          uint64_t v8 = *(unsigned int *)(v107 + 60);
          *(_DWORD *)(v107 + 60) = 0;
          if (v8)
          {
LABEL_170:
            uint64_t v18 = 0;
            goto LABEL_171;
          }
          uint64_t v109 = *(void *)(v105 + 56);
          if (v109)
          {
            if (*(_DWORD *)(v109 + 36))
            {
              *(void *)(v135 + 48) = *(void *)(v109 + 40);
              uint64_t v110 = (void *)(v109 + 48);
            }
            else
            {
              *(void *)(v135 + 48) = *(void *)(v109 + 48);
              uint64_t v110 = (void *)(v109 + 40);
            }
            *(void *)(v135 + 40) = *v110;
            *(_DWORD *)(v135 + 32) = 2;
            *(void *)(v135 + 64) = *(void *)(v109 + 64);
            goto LABEL_168;
          }
          if (!*(void *)(v135 + 64))
          {
            if (!*(void *)(v6 + 72))
            {
              uint64_t v129 = sqlite3_mprintf("%s: table does not support scanning", *(const char **)(v6 + 16));
              uint64_t v18 = 0;
              int v130 = *(char ***)(v6 + 184);
LABEL_263:
              *int v130 = v129;
              uint64_t v8 = 1;
              goto LABEL_171;
            }
            if (v140) {
              int v116 = 6;
            }
            else {
              int v116 = 5;
            }
            int *v98 = v116;
            uint64_t v117 = *(void *)(v105 + 40);
            if (v140) {
              unsigned int v118 = 2;
            }
            else {
              unsigned int v118 = *(_DWORD *)(v135 + 36) != 0;
            }
            uint64_t v19 = sub_1B0DA55D8(*(uint64_t **)(v105 + 40), v118, (sqlite3_stmt **)(v135 + 56), v136);
            if (!v19)
            {
              *(void *)(v117 + 8 * v118 + 40) = 0;
              int v131 = *(sqlite3_stmt **)(v135 + 56);
              if (v140)
              {
                sqlite3_bind_value(v131, 1, v140);
              }
              else
              {
                sqlite3_bind_int64(v131, 1, *(void *)(v135 + 40));
                sqlite3_bind_int64(*(sqlite3_stmt **)(v135 + 56), 2, *(void *)(v135 + 48));
              }
              uint64_t v19 = sub_1B0D9D2F4((_DWORD *)v135);
            }
            goto LABEL_169;
          }
          if (!v137)
          {
            uint64_t v122 = *(void *)(v6 + 160);
            if (v122)
            {
              *(void *)(v135 + 96) = v122;
              *(void *)(v135 + 104) = *(void *)(v6 + 168);
            }
            else
            {
              *(void *)(v135 + 96) = "bm25";
              *(void *)(v135 + 104) = 0;
            }
            goto LABEL_246;
          }
          int v111 = *(unsigned __int16 *)(v137 + 20);
          if ((~v111 & 0x202) != 0 || *(unsigned char *)(v137 + 22) != 1)
          {
            if (v111) {
              goto LABEL_238;
            }
            uint64_t v112 = (unsigned __int8 *)sub_1B0D18254((int *)v137, 1);
          }
          else
          {
            uint64_t v112 = *(unsigned __int8 **)(v137 + 8);
          }
          uint64_t v146 = 0;
          uint64_t v147 = 0;
          if (v112)
          {
            uint64_t v119 = sub_1B0DA72D0(v112, &v147, &v146);
            if (v119 != 1)
            {
              uint64_t v8 = v119;
              if (v119) {
                goto LABEL_170;
              }
              uint64_t v121 = v146;
              uint64_t v120 = v147;
              goto LABEL_239;
            }
            goto LABEL_240;
          }
          LOWORD(v111) = *(_WORD *)(v137 + 20);
LABEL_238:
          uint64_t v112 = 0;
          uint64_t v121 = 0;
          uint64_t v120 = 0;
          if (((0xAAAAAAAAAAAAAAAALL >> v111) & 1) == 0)
          {
LABEL_239:
            *(void *)(v135 + 96) = v120;
            *(void *)(v135 + 104) = v121;
            *(_DWORD *)(v135 + 80) |= 0x10u;
LABEL_246:
            if ((v132 & 0x20) != 0)
            {
              *(_DWORD *)(v135 + 32) = 4;
              uint64_t v19 = sub_1B0DA9828(v105, v135);
              goto LABEL_169;
            }
            *(_DWORD *)(v135 + 32) = 1;
LABEL_168:
            uint64_t v19 = sub_1B0DA9744(v105, v135, v95);
LABEL_169:
            uint64_t v8 = v19;
            goto LABEL_170;
          }
LABEL_240:
          *(void *)(*(void *)v135 + 16) = sqlite3_mprintf("parse error in rank function: %s", (const char *)v112);
          uint64_t v8 = 1;
          goto LABEL_170;
        }
      }
      else if ((0x50505050uLL >> (v101 & 0x3F)))
      {
        goto LABEL_132;
      }
    }
    uint64_t v102 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_142;
  }
  *(void *)(v5 + 16) = sqlite3_mprintf("recursively defined fts5 content table");
  return 1;
}

uint64_t sub_1B0D9D2F4(_DWORD *a1)
{
  int v2 = a1[8];
  if (v2 <= 2)
  {
    if ((a1[20] & 0x20) == 0)
    {
      BOOL v3 = 0;
      uint64_t v4 = 0;
      goto LABEL_36;
    }
    int v6 = a1[9];
    uint64_t v7 = *((void *)a1 + 8);
    uint64_t v8 = *(void *)(v7 + 16);
    uint64_t v9 = *(void *)(v8 + 24);
    *(void *)uint64_t v7 = *(void *)(*(void *)a1 + 32);
    *(_DWORD *)(v7 + 24) = v6;
    uint64_t v10 = sub_1B0DAE404(v7, v8);
    if (v10)
    {
      uint64_t v4 = v10;
      BOOL v3 = 0;
      uint64_t v11 = *((void *)a1 + 8);
      goto LABEL_34;
    }
    if (*(_DWORD *)(v8 + 4)) {
      goto LABEL_15;
    }
    uint64_t v19 = *(void *)(v8 + 24);
    if (*(_DWORD *)(v7 + 24))
    {
      if (v19 <= v9) {
        goto LABEL_15;
      }
    }
    else if (v19 >= v9)
    {
LABEL_15:
      uint64_t v4 = 0;
LABEL_16:
      if (*(_DWORD *)(v8 + 8)) {
        BOOL v15 = v4 == 0;
      }
      else {
        BOOL v15 = 0;
      }
      if (v15)
      {
        do
        {
          uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v8 + 16))(v7, v8, 0, 0);
          if (*(_DWORD *)(v8 + 8)) {
            BOOL v17 = v16 == 0;
          }
          else {
            BOOL v17 = 0;
          }
        }
        while (v17);
        uint64_t v4 = v16;
      }
      uint64_t v11 = *((void *)a1 + 8);
      if (v4) {
        BOOL v3 = 0;
      }
      else {
        BOOL v3 = v9 != *(void *)(*(void *)(v11 + 16) + 24);
      }
LABEL_34:
      unsigned int v20 = a1[20] & 0xFFFFFF91;
      a1[20] = v20 | 0x4E;
      if (*(_DWORD *)(*(void *)(v11 + 16) + 4))
      {
        int v5 = v20 | 0x4F;
LABEL_43:
        a1[20] = v5;
        return v4;
      }
LABEL_36:
      if (v4 | v3) {
        return v4;
      }
      uint64_t v21 = *((void *)a1 + 8);
      uint64_t v22 = *((void *)a1 + 6);
      uint64_t v23 = *(void *)(v21 + 16);
      do
        uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v23 + 16))(v21, v23, 0, 0);
      while (*(_DWORD *)(v23 + 8));
      uint64_t v4 = v24;
      uint64_t v25 = *(void *)(v23 + 24);
      if (*(_DWORD *)(v21 + 24))
      {
        if (v25 >= v22)
        {
LABEL_42:
          int v5 = *(_DWORD *)(*(void *)(*((void *)a1 + 8) + 16) + 4) | a1[20] | 0x4E;
          goto LABEL_43;
        }
      }
      else if (v25 <= v22)
      {
        goto LABEL_42;
      }
      *(_DWORD *)(v23 + 4) = 1;
      goto LABEL_42;
    }
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v8, 1, v9);
    goto LABEL_16;
  }
  if (v2 != 4)
  {
    if (v2 != 3)
    {
      uint64_t v13 = *(void *)(*(void *)a1 + 24);
      ++*(_DWORD *)(v13 + 120);
      int v14 = sqlite3_step(*((sqlite3_stmt **)a1 + 7));
      --*(_DWORD *)(v13 + 120);
      if (v14 == 100) {
        return 0;
      }
      a1[20] |= 1u;
      uint64_t v4 = sqlite3_reset(*((sqlite3_stmt **)a1 + 7));
      if (v4)
      {
        uint64_t v18 = sqlite3_errmsg(*(sqlite3 **)v13);
        *(void *)(*(void *)a1 + 16) = sqlite3_mprintf("%s", v18);
      }
      return v4;
    }
    uint64_t v4 = 0;
    int v5 = a1[20] | 1;
    goto LABEL_43;
  }

  return sub_1B0DB4758((uint64_t)a1);
}

uint64_t sub_1B0D9D5AC(uint64_t a1)
{
  return *(_DWORD *)(a1 + 80) & 1;
}

uint64_t sub_1B0D9D5B8(uint64_t *a1, sqlite3_context *a2, int a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 24);
  int v8 = *((_DWORD *)a1 + 8);
  int v9 = *(_DWORD *)(v7 + 24);
  if (v8 == 3)
  {
    if (v9 == a3)
    {
      if (a2)
      {
        uint64_t v10 = a1[11];
LABEL_8:
        uint64_t v11 = *(void *)a2;
        if ((*(_WORD *)(*(void *)a2 + 20) & 0x9000) == 0)
        {
          uint64_t v16 = 0;
          *(void *)uint64_t v11 = v10;
          *(_WORD *)(v11 + 20) = 4;
          return v16;
        }
        sub_1B0D18980(v11, v10);
        return 0;
      }
LABEL_18:
      int v17 = 97441;
LABEL_19:
      sub_1B0CE1978(v17);
    }
    return 0;
  }
  if (v9 == a3)
  {
    if (a2)
    {
      uint64_t v10 = a1[3];
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  if (v9 + 1 != a3)
  {
    if (*(_DWORD *)(v7 + 64) != 1)
    {
      *(void *)(v7 + 184) = v6 + 16;
      uint64_t v16 = sub_1B0DB48DC(a1, 1);
      if (!v16)
      {
        uint64_t v23 = sqlite3_column_value((sqlite3_stmt *)a1[7], a3 + 1);
        sqlite3_result_value(a2, v23);
      }
      *(void *)(v7 + 184) = 0;
      return v16;
    }
    if (*(_DWORD *)(v7 + 68))
    {
      if (!a2)
      {
        int v17 = 97978;
        goto LABEL_19;
      }
      if (!*(void *)a2)
      {
        int v17 = 97255;
        goto LABEL_19;
      }
      if ((~*(unsigned __int16 *)(*(void *)a2 + 20) & 0x401) == 0)
      {
        uint64_t v19 = sqlite3_mprintf("cannot UPDATE a subset of columns on fts5 contentless-delete table: %s", *(const char **)(v7 + 16));
        *((_DWORD *)a2 + 9) = 1;
        sub_1B0C79BBC(*(void *)a2, v19, -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
        if (v19)
        {
          unsigned int v20 = (void (**)(char *))&off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
            --qword_1EB220150;
            off_1EB21C9E8(v19);
            uint64_t v19 = (char *)xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              return 0;
            }
            unsigned int v20 = (void (**)(char *))&xmmword_1EB21CA50;
          }
          (*v20)(v19);
        }
      }
    }
    return 0;
  }
  if (v8 != 1 && v8 != 4)
  {
    if (v8 != 2) {
      return 0;
    }
    uint64_t v21 = a1[8];
    if (v21) {
      int v22 = *(_DWORD *)(v21 + 28);
    }
    else {
      int v22 = 0;
    }
    int v34 = *(_DWORD *)(v7 + 92);
    if (v34)
    {
      if (v34 == 2)
      {
        if (v22 >= 2)
        {
          uint64_t v35 = 0;
          LODWORD(v36) = 0;
          int v37 = 0;
          int8x16_t v38 = 0;
          int v39 = v22;
          unint64_t v40 = (v22 - 1);
          while (1)
          {
            unsigned int v41 = 0;
            int v42 = 0;
            unsigned int v100 = 0;
            uint64_t v43 = a1[8];
            uint64_t v44 = *(void *)(*(void *)(v43 + 32) + 8 * v35);
            if (!*(_DWORD *)(*(void *)v44 + 4))
            {
              uint64_t v45 = *(void *)(*(void *)v44 + 24);
              if (v45 == *(void *)(*(void *)(v43 + 16) + 24) && *(int *)(v44 + 16) >= 1)
              {
                uint64_t v46 = *(void *)(v44 + 56);
                if (v46)
                {
                  int v42 = sub_1B0DAD644(v44 + 32, v45, v46 + 32, (uint64_t *)&pStmt, &v100);
                  unsigned int v41 = v100;
                }
                else
                {
                  int v42 = 0;
                  unsigned int v41 = *(_DWORD *)(*(void *)(v44 + 48) + 16);
                }
              }
              else
              {
                unsigned int v41 = 0;
                int v42 = 0;
              }
            }
            unint64_t v47 = (v37 + 9);
            if (v47 > v36)
            {
              if (v36) {
                LODWORD(v48) = v36;
              }
              else {
                LODWORD(v48) = 64;
              }
              unint64_t v48 = (int)v48;
              do
              {
                unint64_t v36 = v48;
                v48 *= 2;
              }
              while (v36 < v47);
              if (sqlite3_initialize()) {
                goto LABEL_152;
              }
              uint64_t v49 = sub_1B0C8E1B8((uint64_t)v38, v36);
              if (!v49) {
                goto LABEL_152;
              }
              int8x16_t v38 = (char *)v49;
            }
            int32x4_t v50 = (int8x8_t *)&v38[v37];
            if (v41 > 0x7F)
            {
              if (v41 >> 14)
              {
                int v51 = sub_1B0D1DC5C(v50, (int)v41);
              }
              else
              {
                v50->i8[0] = (v41 >> 7) | 0x80;
                v50->i8[1] = v41 & 0x7F;
                int v51 = 2;
              }
            }
            else
            {
              v50->i8[0] = v41;
              int v51 = 1;
            }
            v37 += v51;
            if (!v42 && ++v35 < v40) {
              continue;
            }
            goto LABEL_111;
          }
        }
        int v39 = v22;
        int v42 = 0;
        int8x16_t v38 = 0;
        int v37 = 0;
        LODWORD(v36) = 0;
LABEL_111:
        if (!v42 && v39 >= 1)
        {
          uint64_t v64 = 0;
          unint64_t v65 = v39;
          while (1)
          {
            pStmt = 0;
            unsigned int v100 = 0;
            uint64_t v66 = a1[8];
            uint64_t v67 = *(void *)(*(void *)(v66 + 32) + 8 * v64);
            if (*(_DWORD *)(*(void *)v67 + 4)
              || (uint64_t v68 = *(void *)(*(void *)v67 + 24), v68 != *(void *)(*(void *)(v66 + 16) + 24))
              || *(int *)(v67 + 16) < 1)
            {
              int v72 = 0;
            }
            else
            {
              uint64_t v69 = *(void *)(v67 + 56);
              if (v69)
              {
                p_pStmt = &pStmt;
                int8x8_t v71 = &v100;
                int v72 = sub_1B0DAD644(v67 + 32, v68, v69 + 32, (uint64_t *)&pStmt, &v100);
              }
              else
              {
                int v72 = 0;
                uint64_t v73 = *(void *)(v67 + 48);
                p_pStmt = (sqlite3_stmt **)(v73 + 8);
                int8x8_t v71 = (unsigned int *)(v73 + 16);
              }
              size_t v74 = *v71;
              if (v74)
              {
                char v75 = *p_pStmt;
                unint64_t v76 = (v74 + v37);
                if (v76 > v36)
                {
                  __srca = v75;
                  if (v36) {
                    LODWORD(v77) = v36;
                  }
                  else {
                    LODWORD(v77) = 64;
                  }
                  unint64_t v77 = (int)v77;
                  do
                  {
                    unint64_t v36 = v77;
                    v77 *= 2;
                  }
                  while (v36 < v76);
                  if (sqlite3_initialize()) {
                    break;
                  }
                  uint64_t v78 = sub_1B0C8E1B8((uint64_t)v38, v36);
                  if (!v78) {
                    break;
                  }
                  int8x16_t v38 = (char *)v78;
                  char v75 = __srca;
                }
                memcpy(&v38[v37], v75, v74);
                v37 += v74;
              }
            }
            if (!v72 && ++v64 < v65) {
              continue;
            }
            break;
          }
        }
      }
      else
      {
        int8x16_t v38 = 0;
        int v37 = 0;
      }
LABEL_152:
      if (a2 && (v37 & 0x80000000) == 0)
      {
        sub_1B0CEA530((uint64_t)a2, v38, v37, 0, (uint64_t (*)(uint64_t))sqlite3_free);
        return 0;
      }
      int v17 = 97366;
      goto LABEL_19;
    }
    int __src = v22;
    uint64_t v52 = (v22 - 1);
    if (v22 > 1)
    {
      uint64_t v53 = 0;
      unsigned int v54 = 0;
      int v37 = 0;
      int8x16_t v38 = 0;
      while (1)
      {
        uint64_t v56 = a1[8];
        int32x4_t v57 = *(_DWORD **)(*(void *)(v56 + 32) + 8 * v53);
        if (*(_DWORD *)(*(void *)v57 + 4)
          || *(void *)(*(void *)v57 + 24) != *(void *)(*(void *)(v56 + 16) + 24))
        {
          unsigned int v58 = 0;
        }
        else
        {
          unsigned int v58 = v57[4];
        }
        unint64_t v59 = (v37 + 9);
        if (v59 > v54)
        {
          if (v54) {
            LODWORD(v60) = v54;
          }
          else {
            LODWORD(v60) = 64;
          }
          unint64_t v60 = (int)v60;
          do
          {
            unint64_t v61 = v60;
            v60 *= 2;
          }
          while (v61 < v59);
          if (sqlite3_initialize()) {
            goto LABEL_89;
          }
          uint64_t v62 = sub_1B0C8E1B8((uint64_t)v38, v61);
          if (!v62) {
            goto LABEL_89;
          }
          int8x16_t v38 = (char *)v62;
          unsigned int v54 = v61;
        }
        uint8x16_t v63 = (int8x8_t *)&v38[v37];
        if (v58 <= 0x7F)
        {
          v63->i8[0] = v58;
          int v55 = 1;
        }
        else if (v58 >> 14)
        {
          int v55 = sub_1B0D1DC5C(v63, (int)v58);
        }
        else
        {
          v63->i8[0] = (v58 >> 7) | 0x80;
          v63->i8[1] = v58 & 0x7F;
          int v55 = 2;
        }
        v37 += v55;
LABEL_89:
        if (++v53 == v52) {
          goto LABEL_136;
        }
      }
    }
    int8x16_t v38 = 0;
    int v37 = 0;
    unsigned int v54 = 0;
LABEL_136:
    if (__src < 1) {
      goto LABEL_152;
    }
    uint64_t v79 = 0;
    uint64_t v80 = __src;
    while (1)
    {
      uint64_t v81 = a1[8];
      uint64_t v82 = *(void *)(*(void *)(v81 + 32) + 8 * v79);
      if (!*(_DWORD *)(*(void *)v82 + 4)
        && *(void *)(*(void *)v82 + 24) == *(void *)(*(void *)(v81 + 16) + 24))
      {
        size_t v83 = *(unsigned int *)(v82 + 16);
        if (v83)
        {
          int v84 = *(const void **)(v82 + 8);
          unint64_t v85 = (v83 + v37);
          if (v85 > v54)
          {
            __srcb = *(void **)(v82 + 8);
            if (v54) {
              LODWORD(v86) = v54;
            }
            else {
              LODWORD(v86) = 64;
            }
            unint64_t v86 = (int)v86;
            do
            {
              unint64_t v87 = v86;
              v86 *= 2;
            }
            while (v87 < v85);
            if (sqlite3_initialize()) {
              goto LABEL_139;
            }
            uint64_t v88 = sub_1B0C8E1B8((uint64_t)v38, v87);
            if (!v88) {
              goto LABEL_139;
            }
            int8x16_t v38 = (char *)v88;
            unsigned int v54 = v87;
            int v84 = __srcb;
          }
          memcpy(&v38[v37], v84, v83);
          v37 += v83;
        }
      }
LABEL_139:
      if (++v79 == v80) {
        goto LABEL_152;
      }
    }
  }
  uint64_t v13 = a1[14];
  if (v13) {
    goto LABEL_17;
  }
  unsigned int v100 = 0;
  uint64_t v24 = (const char *)a1[12];
  if (!a1[13]) {
    goto LABEL_171;
  }
  uint64_t v25 = (unsigned __int8 *)sub_1B0DA32B4(&v100, "SELECT %s", (const char *)a1[13]);
  if (!v25)
  {
    uint64_t v16 = v100;
    goto LABEL_170;
  }
  int v27 = v25;
  pStmt = 0;
  uint64_t v16 = sub_1B0C7EAC0(*(void *)v7, v25, 0xFFFFFFFFLL, 129, 0, &pStmt, 0, v26);
  char v28 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_48;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v27);
  --qword_1EB220150;
  off_1EB21C9E8(v27);
  int v27 = (unsigned __int8 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    char v28 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_48:
    (*v28)(v27);
  }
  if (v16) {
    goto LABEL_170;
  }
  int v29 = sqlite3_step(pStmt);
  int v30 = (unsigned __int16 *)pStmt;
  if (v29 != 100)
  {
    uint64_t v16 = sqlite3_finalize(pStmt);
    goto LABEL_170;
  }
  if (pStmt)
  {
    uint64_t v31 = *(void *)(*(void *)pStmt + 24);
    if (v31)
    {
      xmmword_1EB21CA40(v31);
      uint64_t v32 = *(void *)(*(void *)v30 + 24);
      int v33 = v30[130];
      if (v32) {
        xmmword_1EB21CA50(v32);
      }
    }
    else
    {
      int v33 = *((unsigned __int16 *)pStmt + 130);
    }
  }
  else
  {
    int v33 = 0;
  }
  *((_DWORD *)a1 + 30) = v33;
  if (!sqlite3_initialize())
  {
    uint64_t v89 = (void *)sub_1B0C7FC94((8 * v33));
    if (v89)
    {
      uint64_t v90 = (uint64_t)v89;
      bzero(v89, (8 * v33));
LABEL_165:
      a1[16] = v90;
      if (*((int *)a1 + 30) >= 1)
      {
        uint64_t v91 = 0;
        do
        {
          *(void *)(a1[16] + 8 * v91) = sqlite3_column_value(pStmt, v91);
          ++v91;
        }
        while (v91 < *((int *)a1 + 30));
      }
      uint64_t v16 = 0;
      goto LABEL_169;
    }
  }
  if (!v33)
  {
    uint64_t v90 = 0;
    goto LABEL_165;
  }
  a1[16] = 0;
  uint64_t v16 = 7;
LABEL_169:
  a1[17] = (uint64_t)pStmt;
LABEL_170:
  if (v16)
  {
LABEL_184:
    a1[14] = 0;
    return v16;
  }
LABEL_171:
  uint64_t v13 = *(void *)(*(void *)(v6 + 48) + 48);
  if (!v13)
  {
LABEL_183:
    *(void *)(v6 + 16) = sqlite3_mprintf("no such function: %s", v24);
    uint64_t v16 = 1;
    goto LABEL_184;
  }
  while (1)
  {
    int v92 = *(unsigned __int8 **)(v13 + 8);
    if (v24)
    {
      if (v92)
      {
        for (uint64_t i = v24; ; ++i)
        {
          uint64_t v94 = *(unsigned __int8 *)i;
          uint64_t v95 = *v92;
          if (v94 == v95)
          {
            if (!*i) {
              goto LABEL_182;
            }
          }
          else if (byte_1B0DE1758[v94] != byte_1B0DE1758[v95])
          {
            goto LABEL_174;
          }
          ++v92;
        }
      }
      goto LABEL_174;
    }
    if (!v92) {
      break;
    }
LABEL_174:
    uint64_t v13 = *(void *)(v13 + 40);
    if (!v13) {
      goto LABEL_183;
    }
  }
LABEL_182:
  a1[14] = v13;
LABEL_17:
  uint64_t v14 = *((unsigned int *)a1 + 30);
  uint64_t v15 = a1[16];
  a1[18] = v13;
  (*(void (**)(void *, uint64_t *, sqlite3_context *, uint64_t, uint64_t))(v13 + 24))(&unk_1F09A5D00, a1, a2, v14, v15);
  uint64_t v16 = 0;
  a1[18] = 0;
  return v16;
}

uint64_t sub_1B0D9DF38(uint64_t a1, sqlite3_int64 *a2)
{
  int v3 = *(_DWORD *)(a1 + 32);
  if ((v3 - 1) >= 2)
  {
    if (v3 == 3)
    {
      sqlite3_int64 v5 = 0;
      goto LABEL_9;
    }
    if (v3 != 4)
    {
      sqlite3_int64 v5 = sqlite3_column_int64(*(sqlite3_stmt **)(a1 + 56), 0);
      goto LABEL_9;
    }
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (v4) {
    sqlite3_int64 v5 = *(void *)(v4 + 8);
  }
  else {
    sqlite3_int64 v5 = *(void *)(*(void *)(*(void *)(a1 + 64) + 16) + 24);
  }
LABEL_9:
  *a2 = v5;
  return 0;
}

uint64_t sub_1B0D9DFB4(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  int v8 = *(uint64_t **)(a1 + 24);
  unsigned int v325 = 0;
  int v9 = v8;
  if (!*((_DWORD *)v8 + 34))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = sub_1B0DA5A0C(v13);
    sub_1B0DA4EF8(v14);
    uint64_t v15 = *(unsigned int *)(v13 + 60);
    *(_DWORD *)(v13 + 60) = 0;
    unsigned int v325 = v15;
    if (v15) {
      return v15;
    }
    int v9 = *(uint64_t **)(a1 + 24);
  }
  v9[23] = a1 + 16;
  for (uint64_t i = *(void *)(*(void *)(a1 + 48) + 72); i; uint64_t i = *(void *)(i + 8))
  {
    if (*(_DWORD *)(i + 32) == 1 && *(void *)i == a1) {
      *(_DWORD *)(i + 80) |= 0x20u;
    }
  }
  if (!*a3)
  {
    sub_1B0CE1978(97220);
    int v12 = 0;
    if (!*((_DWORD *)v8 + 16)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  __int16 v11 = *(_WORD *)(*a3 + 20);
  if (((0xAAAAAAAAAAAAAAAALL >> v11) & 1) == 0)
  {
    int v12 = byte_1B0DE186A[v11 & 0x3F];
    if (!*((_DWORD *)v8 + 16)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v16 = *((int *)v8 + 6) + 2;
  uint64_t v17 = a3[v16];
  if (v17)
  {
    if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v17 + 20)))
    {
      int v12 = 5;
      if (!*((_DWORD *)v8 + 16)) {
        goto LABEL_19;
      }
LABEL_18:
      if (!*((_DWORD *)v8 + 17))
      {
        int v21 = 4;
        if (v12 != 1) {
          goto LABEL_75;
        }
        goto LABEL_73;
      }
LABEL_19:
      uint64_t v18 = *v8;
      if (*v8)
      {
        int v19 = *(unsigned __int8 *)(v18 + 113);
        switch(v19)
        {
          case 186:
            goto LABEL_23;
          case 118:
            int v49 = *(unsigned __int8 *)(v18 + 108);
            if ((v49 - 1) < 5)
            {
              int v21 = byte_1B0DE1A6D[v49 - 1];
              if (v12 != 1) {
                goto LABEL_75;
              }
              goto LABEL_73;
            }
            goto LABEL_72;
          case 109:
LABEL_23:
            unsigned int v20 = "unopened";
            break;
          default:
            unsigned int v20 = "invalid";
            break;
        }
      }
      else
      {
        unsigned int v20 = "NULL";
      }
      sqlite3_log(21, "API call with %s database connection pointer", v20);
LABEL_72:
      sub_1B0CE1978(162440);
      int v21 = 0;
      if (v12 != 1) {
        goto LABEL_75;
      }
LABEL_73:
      if (*((_DWORD *)v8 + 16) == 1 && !*((_DWORD *)v8 + 17))
      {
        unint64_t v65 = "DELETE from";
        if (a2 > 1) {
          unint64_t v65 = "UPDATE";
        }
        *(void *)(a1 + 16) = sqlite3_mprintf("cannot %s contentless fts5 table: %s", v65, (const char *)v8[2]);
        uint64_t v15 = 1;
        goto LABEL_238;
      }
LABEL_75:
      if (a2 == 1)
      {
        uint64_t v50 = *a3;
        if (*a3)
        {
          __int16 v51 = *(_WORD *)(v50 + 20);
          if ((v51 & 0x24) != 0)
          {
            unint64_t v52 = *(void *)v50;
LABEL_86:
            uint64_t v56 = sub_1B0DB6A78(*(uint64_t **)(a1 + 40), v52, 0);
            goto LABEL_87;
          }
          if ((v51 & 8) != 0)
          {
            double v71 = *(double *)v50;
            if (*(double *)v50 >= -9.22337204e18)
            {
              if (v71 <= 9.22337204e18) {
                unint64_t v52 = (uint64_t)v71;
              }
              else {
                unint64_t v52 = 0x7FFFFFFFFFFFFFFFLL;
              }
            }
            else
            {
              unint64_t v52 = 0x8000000000000000;
            }
            goto LABEL_86;
          }
          if ((v51 & 0x12) != 0 && *(void *)(v50 + 8))
          {
            unint64_t v52 = sub_1B0D186C0(v50);
            goto LABEL_86;
          }
        }
        else
        {
          sub_1B0CE1978(89717);
        }
        unint64_t v52 = 0;
        goto LABEL_86;
      }
      uint64_t v53 = a3[1];
      if (!v53)
      {
        sub_1B0CE1978(97220);
        uint64_t v15 = 20;
        goto LABEL_238;
      }
      __int16 v54 = *(_WORD *)(v53 + 20);
      if ((0x4000000040004uLL >> v54))
      {
        sub_1B0CEE968(a3[1], 0);
        __int16 v54 = *(_WORD *)(v53 + 20);
      }
      char v55 = v54 & 0x3F;
      if (((0xAAAAAAAAFAFAFAFALL >> (v54 & 0x3F)) & 1) == 0)
      {
        uint64_t v15 = 20;
        goto LABEL_238;
      }
      if (v12 == 1)
      {
        uint64_t v58 = *a3;
        if (*a3)
        {
          __int16 v59 = *(_WORD *)(v58 + 20);
          if ((v59 & 0x24) != 0)
          {
            unint64_t v60 = *(void *)v58;
            goto LABEL_130;
          }
          if ((v59 & 8) != 0)
          {
            double v89 = *(double *)v58;
            if (*(double *)v58 >= -9.22337204e18)
            {
              if (v89 <= 9.22337204e18) {
                unint64_t v60 = (uint64_t)v89;
              }
              else {
                unint64_t v60 = 0x7FFFFFFFFFFFFFFFLL;
              }
            }
            else
            {
              unint64_t v60 = 0x8000000000000000;
            }
LABEL_130:
            uint64_t v73 = a3[1];
            if (v73)
            {
              __int16 v74 = *(_WORD *)(v73 + 20);
              if ((v74 & 0x24) != 0)
              {
                unint64_t v75 = *(void *)v73;
                goto LABEL_137;
              }
              if ((v74 & 8) != 0)
              {
                double v90 = *(double *)v73;
                if (*(double *)v73 >= -9.22337204e18)
                {
                  if (v90 <= 9.22337204e18) {
                    unint64_t v75 = (uint64_t)v90;
                  }
                  else {
                    unint64_t v75 = 0x7FFFFFFFFFFFFFFFLL;
                  }
                }
                else
                {
                  unint64_t v75 = 0x8000000000000000;
                }
                goto LABEL_137;
              }
              if ((v74 & 0x12) != 0 && *(void *)(v73 + 8))
              {
                unint64_t v75 = sub_1B0D186C0(v73);
LABEL_137:
                if (((0xFFFFFFFFAFAFAFAFLL >> v55) & 1) != 0 || v60 == v75)
                {
                  uint64_t v56 = sub_1B0DB6A78(*(uint64_t **)(a1 + 40), v60, 0);
                  if (v56) {
                    goto LABEL_87;
                  }
                  uint64_t v56 = sub_1B0DB76C8(*(uint64_t **)(a1 + 40), (uint64_t)a3, a4);
                  if (v56) {
                    goto LABEL_87;
                  }
                }
                else
                {
                  unint64_t v76 = *(uint64_t **)(a1 + 40);
                  if (v21 == 5)
                  {
                    unsigned int v325 = sub_1B0DB6A78(v76, v60, 0);
                    if (!v325) {
                      unsigned int v325 = sub_1B0DB6A78(*(uint64_t **)(a1 + 40), v75, 0);
                    }
                    sub_1B0DB7664(&v325, a1, (uint64_t)a3, a4);
                    int v57 = 1;
                    uint64_t v15 = v325;
                    goto LABEL_88;
                  }
                  uint64_t v15 = sub_1B0DB76C8(v76, (uint64_t)a3, a4);
                  if (v15) {
                    goto LABEL_238;
                  }
                  uint64_t v15 = sub_1B0DB6A78(*(uint64_t **)(a1 + 40), v60, 0);
                  if (v15) {
                    goto LABEL_238;
                  }
                }
                uint64_t v56 = sub_1B0DB79C0(*(void *)(a1 + 40), (uint64_t)a3, *a4);
LABEL_87:
                uint64_t v15 = v56;
                int v57 = 1;
                goto LABEL_88;
              }
            }
            else
            {
              sub_1B0CE1978(89717);
            }
            unint64_t v75 = 0;
            goto LABEL_137;
          }
          if ((v59 & 0x12) != 0 && *(void *)(v58 + 8))
          {
            unint64_t v60 = sub_1B0D186C0(v58);
            goto LABEL_130;
          }
        }
        else
        {
          sub_1B0CE1978(89717);
        }
        unint64_t v60 = 0;
        goto LABEL_130;
      }
      int v57 = 0;
      if (v21 != 5 || ((0x50505050uLL >> v55) & 1) == 0)
      {
LABEL_165:
        uint64_t v77 = sub_1B0DB76C8(*(uint64_t **)(a1 + 40), (uint64_t)a3, a4);
        if (v77) {
          uint64_t v15 = v77;
        }
        else {
          uint64_t v15 = sub_1B0DB79C0(*(void *)(a1 + 40), (uint64_t)a3, *a4);
        }
LABEL_88:
        if (v57 && !v15)
        {
          if (*((_DWORD *)v8 + 44) && *((_DWORD *)v8 + 32) == 4)
          {
            uint64_t v15 = sub_1B0DA52A8(*(uint64_t **)(a1 + 40), "version", 0, 5);
            if (!v15) {
              *((_DWORD *)v8 + 32) = 5;
            }
          }
          else
          {
            uint64_t v15 = 0;
          }
        }
        goto LABEL_238;
      }
      uint64_t v66 = a3[1];
      if (v66)
      {
        __int16 v67 = *(_WORD *)(v66 + 20);
        if ((v67 & 0x24) != 0)
        {
          unint64_t v68 = *(void *)v66;
          goto LABEL_164;
        }
        if ((v67 & 8) != 0)
        {
          double v93 = *(double *)v66;
          if (*(double *)v66 >= -9.22337204e18)
          {
            if (v93 <= 9.22337204e18) {
              unint64_t v68 = (uint64_t)v93;
            }
            else {
              unint64_t v68 = 0x7FFFFFFFFFFFFFFFLL;
            }
          }
          else
          {
            unint64_t v68 = 0x8000000000000000;
          }
LABEL_164:
          uint64_t v15 = sub_1B0DB6A78(*(uint64_t **)(a1 + 40), v68, 0);
          int v57 = 1;
          if (v15) {
            goto LABEL_88;
          }
          goto LABEL_165;
        }
        if ((v67 & 0x12) != 0 && *(void *)(v66 + 8))
        {
          unint64_t v68 = sub_1B0D186C0(v66);
          goto LABEL_164;
        }
      }
      else
      {
        sub_1B0CE1978(89717);
      }
      unint64_t v68 = 0;
      goto LABEL_164;
    }
  }
  else
  {
    sub_1B0CE1978(97220);
    uint64_t v16 = *((int *)v8 + 6) + 2;
  }
  uint64_t v22 = a3[v16];
  if (!v22) {
    goto LABEL_36;
  }
  int v23 = *(unsigned __int16 *)(v22 + 20);
  if ((~v23 & 0x202) == 0 && *(unsigned char *)(v22 + 22) == 1)
  {
    uint64_t v24 = *(char **)(v22 + 8);
    if (!*((_DWORD *)v8 + 16)) {
      goto LABEL_45;
    }
LABEL_37:
    if (v24)
    {
      uint64_t v25 = "delete";
      for (uint64_t j = v24; ; ++j)
      {
        uint64_t v27 = *(unsigned __int8 *)v25;
        uint64_t v28 = *j;
        if (v27 == v28)
        {
          if (!*v25)
          {
            if (!*((_DWORD *)v8 + 17))
            {
              uint64_t v72 = sub_1B0DB6990(a1, (uint64_t)a3);
              goto LABEL_192;
            }
            sub_1B0DB694C(a1, "'delete' may not be used with a contentless_delete=1 table");
            goto LABEL_150;
          }
        }
        else if (byte_1B0DE1758[v27] != byte_1B0DE1758[v28])
        {
          goto LABEL_45;
        }
        ++v25;
      }
    }
    uint64_t v29 = a3[*((int *)v8 + 6) + 3];
    int v326 = 0;
LABEL_120:
    uint64_t v69 = *(void *)(a1 + 32);
    uint64_t v70 = sub_1B0DA5A0C(v69);
    sub_1B0DA4EF8(v70);
    uint64_t v15 = *(unsigned int *)(v69 + 60);
    *(_DWORD *)(v69 + 60) = 0;
    if (v15) {
      goto LABEL_238;
    }
    uint64_t v15 = sub_1B0DA6B88(*(void *)(a1 + 24), v24, (sqlite3_value *)v29, &v326);
    if (v15) {
      goto LABEL_238;
    }
    if (v326)
    {
      uint64_t v15 = 1;
      goto LABEL_238;
    }
    uint64_t v72 = sub_1B0DA52A8(*(uint64_t **)(a1 + 40), v24, (const sqlite3_value *)v29, 0);
    goto LABEL_192;
  }
  if (v23)
  {
LABEL_36:
    uint64_t v24 = 0;
    if (!*((_DWORD *)v8 + 16)) {
      goto LABEL_45;
    }
    goto LABEL_37;
  }
  uint64_t v24 = (char *)sub_1B0D18254((int *)v22, 1);
  if (*((_DWORD *)v8 + 16)) {
    goto LABEL_37;
  }
LABEL_45:
  uint64_t v29 = a3[*((int *)v8 + 6) + 3];
  uint64_t v30 = *(void *)(a1 + 24);
  int v326 = 0;
  if (!v24) {
    goto LABEL_120;
  }
  uint64_t v31 = "delete-all";
  for (uint64_t k = v24; ; ++k)
  {
    uint64_t v33 = *(unsigned __int8 *)v31;
    uint64_t v34 = *k;
    if (v33 != v34) {
      break;
    }
    if (!*v31)
    {
      if (*(_DWORD *)(v30 + 64))
      {
        uint64_t v72 = sub_1B0DB7D20(*(void *)(a1 + 40));
        goto LABEL_192;
      }
      sub_1B0DB694C(a1, "'delete-all' may only be used with a contentless or external content fts5 table");
LABEL_150:
      uint64_t v15 = 1;
      goto LABEL_238;
    }
LABEL_48:
    ++v31;
  }
  if (byte_1B0DE1758[v33] == byte_1B0DE1758[v34]) {
    goto LABEL_48;
  }
  uint64_t v35 = "rebuild";
  for (uint64_t m = v24; ; ++m)
  {
    uint64_t v37 = *(unsigned __int8 *)v35;
    uint64_t v38 = *m;
    if (v37 == v38)
    {
      if (*v35) {
        goto LABEL_53;
      }
      if (*(_DWORD *)(v30 + 64) == 1)
      {
        sub_1B0DB694C(a1, "'rebuild' may not be used with a contentless fts5 table");
        goto LABEL_150;
      }
      uint64_t v86 = *(void *)(a1 + 40);
      long long v328 = 0uLL;
      uint64_t v87 = *(void *)v86;
      v335[0] = 0;
      sqlite3_int64 v332 = v86;
      uint64_t v333 = 0;
      uint64_t v88 = sub_1B0DB7D20(v86);
      if (v88 || (uint64_t v88 = sub_1B0DB5C58(v86, 1), v88))
      {
        uint64_t v15 = v88;
        sqlite3_reset(0);
        goto LABEL_238;
      }
      uint64_t v94 = sub_1B0DA55D8((uint64_t *)v86, 10, v335, 0);
      if (v94)
      {
        uint64_t v15 = v94;
        sqlite3_reset(v335[0]);
        goto LABEL_238;
      }
      unsigned int v103 = 0;
LABEL_241:
      double v104 = v335[0];
      int v105 = sqlite3_step(v335[0]);
      BOOL v106 = v105 == 100;
      if (v105 != 100)
      {
        uint64_t v15 = 0;
        goto LABEL_318;
      }
      sqlite3_int64 v107 = sqlite3_column_int64(v104, 0);
      uint64_t v108 = sub_1B0DB7E4C(*(uint64_t **)(v86 + 8), 0, v107);
      LODWORD(v333) = 0;
      if (v108)
      {
        uint64_t v15 = v108;
LABEL_317:
        ++*(void *)(v86 + 24);
        BOOL v106 = 1;
LABEL_318:
        uint64_t v146 = v328;
        if ((void)v328)
        {
          uint64_t v147 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_324;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v146);
          --qword_1EB220150;
          off_1EB21C9E8(v146);
          uint64_t v146 = xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            uint64_t v147 = &xmmword_1EB21CA50;
LABEL_324:
            (*v147)(v146);
          }
        }
        uint64_t v148 = sqlite3_reset(v335[0]);
        if (v106) {
          goto LABEL_238;
        }
        uint64_t v15 = v148;
        if (v148) {
          goto LABEL_238;
        }
        uint64_t v72 = sub_1B0DB8370((void *)v86);
LABEL_192:
        uint64_t v15 = v72;
        goto LABEL_238;
      }
      int v109 = 0;
      unsigned int v110 = 0;
      while (1)
      {
        if (v109 >= *(_DWORD *)(v87 + 24))
        {
          *((void *)&v328 + 1) = __PAIR64__(v103, v110);
          ++*(void *)(v86 + 24);
          uint64_t v122 = sub_1B0DB8150((uint64_t *)v86, v107, (uint64_t)&v328);
          if (v122)
          {
            uint64_t v15 = v122;
            BOOL v106 = 1;
            goto LABEL_318;
          }
          goto LABEL_241;
        }
        uint64_t v15 = 0;
        HIDWORD(v333) = 0;
        if (!*(unsigned char *)(*(void *)(v87 + 40) + v109))
        {
          uint64_t v113 = v335[0];
          uint64_t v15 = (uint64_t)sqlite3_column_text(v335[0], v109 + 1);
          uint64_t v114 = sqlite3_column_bytes(v113, v333 + 1);
          if (v15) {
            uint64_t v15 = (*(uint64_t (**)(void, sqlite3_int64 *, uint64_t, uint64_t, uint64_t, uint64_t (*)(_DWORD *, char, unsigned __int8 *, int)))(*(void *)(v87 + 112) + 16))(*(void *)(v87 + 104), &v332, 4, v15, v114, sub_1B0DB7FE0);
          }
        }
        unint64_t v115 = SHIDWORD(v333);
        unint64_t v116 = v110 + 9;
        if (v116 <= v103) {
          break;
        }
        if (v103) {
          LODWORD(v117) = v103;
        }
        else {
          LODWORD(v117) = 64;
        }
        unint64_t v117 = (int)v117;
        do
        {
          unint64_t v118 = v117;
          v117 *= 2;
        }
        while (v118 < v116);
        uint64_t v119 = v328;
        if (!sqlite3_initialize())
        {
          uint64_t v120 = sub_1B0C8E1B8(v119, v118);
          if (v120)
          {
            *(void *)&long long v328 = v120;
            unsigned int v103 = v118;
            goto LABEL_261;
          }
        }
        uint64_t v15 = 7;
LABEL_247:
        int v112 = v333;
        *(void *)(*(void *)(v86 + 32) + 8 * (int)v333) += SHIDWORD(v333);
        int v109 = v112 + 1;
        LODWORD(v333) = v112 + 1;
        if (v15) {
          goto LABEL_317;
        }
      }
      uint64_t v120 = v328;
LABEL_261:
      uint64_t v121 = (int8x8_t *)(v120 + (int)v110);
      if (v115 <= 0x7F)
      {
        v121->i8[0] = v115;
        int v111 = 1;
      }
      else if (v115 >> 14)
      {
        int v111 = sub_1B0D1DC5C(v121, v115);
      }
      else
      {
        v121->i8[0] = (v115 >> 7) | 0x80;
        v121->i8[1] = v115 & 0x7F;
        int v111 = 2;
      }
      v110 += v111;
      goto LABEL_247;
    }
    if (byte_1B0DE1758[v37] != byte_1B0DE1758[v38]) {
      break;
    }
LABEL_53:
    ++v35;
  }
  int v39 = "optimize";
  for (n = v24; ; ++n)
  {
    uint64_t v41 = *(unsigned __int8 *)v39;
    uint64_t v42 = *n;
    if (v41 != v42) {
      break;
    }
    if (!*v39)
    {
      uint64_t v78 = *(void *)(*(void *)(a1 + 40) + 8);
      sub_1B0DB85C0((_DWORD *)v78);
      uint64_t v79 = sub_1B0DA5A0C(v78);
      uint64_t v80 = *(_DWORD **)(v78 + 144);
      if (v80)
      {
        sub_1B0DA4EF8(v80);
        *(void *)(v78 + 144) = 0;
      }
      if (!v79) {
        goto LABEL_237;
      }
      uint64_t v81 = sub_1B0DBDF58(v78, v79);
      *(void *)&long long v328 = v81;
      sub_1B0DA4EF8(v79);
      if (!v81) {
        goto LABEL_237;
      }
      uint64_t v82 = 0;
      signed int v83 = -1;
      do
      {
        int v84 = *(_DWORD *)&v81[v82 + 36];
        v82 += 16;
        ++v83;
      }
      while (!v84);
      if (!*(_DWORD *)(v78 + 60))
      {
        do
        {
          uint64_t v81 = (char *)v328;
          if (*(int *)(v328 + v82 + 20) < 1) {
            goto LABEL_179;
          }
          LODWORD(v332) = 1000;
          sub_1B0DBC134(v78, (int **)&v328, v83, (int *)&v332);
        }
        while (!*(_DWORD *)(v78 + 60));
        uint64_t v81 = (char *)v328;
      }
LABEL_179:
      sub_1B0DA4564((unsigned __int8 *)v78, (uint64_t)v81);
      unint64_t v85 = v81;
      goto LABEL_236;
    }
LABEL_58:
    ++v39;
  }
  if (byte_1B0DE1758[v41] == byte_1B0DE1758[v42]) {
    goto LABEL_58;
  }
  uint64_t v43 = "merge";
  for (iuint64_t i = v24; ; ++ii)
  {
    uint64_t v45 = *(unsigned __int8 *)v43;
    uint64_t v46 = *ii;
    if (v45 == v46)
    {
      if (*v43) {
        goto LABEL_63;
      }
      if (v29)
      {
        __int16 v91 = *(_WORD *)(v29 + 20);
        if ((v91 & 0x24) != 0)
        {
          uint64_t v92 = *(void *)v29;
          goto LABEL_226;
        }
        if ((v91 & 8) != 0)
        {
          LODWORD(v95) = -1;
          if (*(double *)v29 <= 9.22337204e18) {
            uint64_t v95 = (uint64_t)*(double *)v29;
          }
          if (*(double *)v29 >= -9.22337204e18) {
            LODWORD(v92) = v95;
          }
          else {
            LODWORD(v92) = 0;
          }
LABEL_226:
          uint64_t v78 = *(void *)(*(void *)(a1 + 40) + 8);
          sub_1B0DB85C0((_DWORD *)v78);
          uint64_t v96 = (char *)sub_1B0DA5A0C(v78);
          *(void *)&long long v328 = v96;
          if (!v96)
          {
LABEL_237:
            uint64_t v15 = *(unsigned int *)(v78 + 60);
            *(_DWORD *)(v78 + 60) = 0;
            goto LABEL_238;
          }
          uint64_t v97 = v96;
          int v98 = *(_DWORD *)(*(void *)v78 + 148);
          __int16 v99 = *(_DWORD **)(v78 + 144);
          if (v99)
          {
            sub_1B0DA4EF8(v99);
            *(void *)(v78 + 144) = 0;
          }
          if ((v92 & 0x80000000) != 0)
          {
            unsigned int v100 = sub_1B0DBDF58(v78, v97);
            sub_1B0DA4EF8(v97);
            *(void *)&long long v328 = v100;
            if (!v100)
            {
              unint64_t v85 = 0;
LABEL_236:
              sub_1B0DA4EF8(v85);
              goto LABEL_237;
            }
            LODWORD(v92) = -(int)v92;
            int v98 = 1;
            uint64_t v97 = v100;
          }
          if (*((_DWORD *)v97 + 7))
          {
            int v101 = sub_1B0DBBEE4((_DWORD *)v78, (int **)&v328, v92, v98);
            uint64_t v97 = (char *)v328;
            if (v101) {
              sub_1B0DA4564((unsigned __int8 *)v78, v328);
            }
          }
          unint64_t v85 = v97;
          goto LABEL_236;
        }
        if ((v91 & 0x12) != 0 && *(void *)(v29 + 8))
        {
          LODWORD(v92) = sub_1B0D186C0(v29);
          goto LABEL_226;
        }
      }
      else
      {
        sub_1B0CE1978(89717);
      }
      LODWORD(v92) = 0;
      goto LABEL_226;
    }
    if (byte_1B0DE1758[v45] != byte_1B0DE1758[v46]) {
      break;
    }
LABEL_63:
    ++v43;
  }
  unint64_t v47 = "integrity-check";
  for (juint64_t j = v24; ; ++jj)
  {
    uint64_t v61 = *(unsigned __int8 *)v47;
    uint64_t v62 = *jj;
    if (v61 == v62) {
      break;
    }
    if (byte_1B0DE1758[v61] != byte_1B0DE1758[v62]) {
      goto LABEL_120;
    }
LABEL_105:
    ++v47;
  }
  if (*v47) {
    goto LABEL_105;
  }
  if (!v29)
  {
    sub_1B0CE1978(89717);
LABEL_215:
    int v64 = 0;
    goto LABEL_275;
  }
  __int16 v63 = *(_WORD *)(v29 + 20);
  if ((v63 & 0x24) != 0)
  {
    int v64 = *(_DWORD *)v29;
    goto LABEL_275;
  }
  if ((v63 & 8) == 0)
  {
    if ((v63 & 0x12) != 0 && *(void *)(v29 + 8))
    {
      int v64 = sub_1B0D186C0(v29);
      goto LABEL_275;
    }
    goto LABEL_215;
  }
  LODWORD(v123) = -1;
  if (*(double *)v29 <= 9.22337204e18) {
    uint64_t v123 = (uint64_t)*(double *)v29;
  }
  if (*(double *)v29 >= -9.22337204e18) {
    int v64 = v123;
  }
  else {
    int v64 = 0;
  }
LABEL_275:
  double v124 = *(uint64_t **)(a1 + 40);
  uint64_t v125 = *v124;
  uint64_t v327 = 0;
  long long v328 = 0u;
  long long v329 = 0u;
  uint64_t v330 = v125;
  uint64_t v126 = *(int *)(v125 + 24);
  if (sqlite3_initialize() || (int v127 = (void *)sub_1B0C7FC94(12 * v126)) == 0)
  {
    uint64_t v15 = 7;
    goto LABEL_238;
  }
  int v128 = v127;
  size_t v129 = *(int *)(v125 + 24);
  bzero(v127, v129 * 8);
  int v130 = *(_DWORD *)(v125 + 64);
  if (v130)
  {
    char v131 = 1;
    if (!v64 || v130 != 2)
    {
LABEL_333:
      int v149 = (_DWORD *)v124[1];
      uint64_t v150 = v329;
      int v301 = *(_DWORD *)(*(void *)v149 + 92);
      sqlite3_int64 v332 = 0;
      uint64_t v333 = 0;
      uint64_t v331 = 0;
      int v151 = sub_1B0DA5A0C((uint64_t)v149);
      if (!v151)
      {
        v324 = v149 + 15;
        goto LABEL_594;
      }
      uint64_t v298 = v150;
      v299 = v128;
      char v300 = v131;
      int v152 = v151[7];
      v302 = v151;
      if (v152 >= 1)
      {
        uint64_t v153 = 0;
        while (1)
        {
          unsigned int v310 = &v151[4 * v153 + 9];
          if (*v310 >= 1) {
            break;
          }
LABEL_337:
          if (++v153 >= v152) {
            goto LABEL_579;
          }
        }
        uint64_t v303 = v153;
        uint64_t v154 = 0;
        v309 = &v151[4 * v153 + 10];
        while (1)
        {
          int v156 = (unsigned int *)(*v309 + 56 * v154);
          uint64_t v157 = *(void *)v149;
          int v158 = *(_DWORD *)(*(void *)v149 + 128);
          uint64_t v334 = 0;
          unsigned int v159 = v156[1];
          v318 = v156 + 1;
          if (v159) {
            break;
          }
LABEL_343:
          if (++v154 >= *v310)
          {
            int v151 = v302;
            uint64_t v153 = v303;
            int v152 = v302[7];
            goto LABEL_337;
          }
        }
        uint64_t v313 = v154;
        uint64_t v306 = v156 + 2;
        unsigned int v319 = v156[2];
        int v160 = (unsigned __int8 *)sqlite3_mprintf("SELECT segid, term, (pgno>>1), (pgno&1) FROM %Q.'%q_idx' WHERE segid=%d ORDER BY 1, 2", *(void *)(v157 + 8), *(void *)(v157 + 16), *v156);
        int v162 = v160;
        v317 = v156;
        if (v149[15])
        {
          int v307 = v158;
          uint64_t v304 = v157;
          if (!v160) {
            goto LABEL_341;
          }
        }
        else
        {
          if (!v160)
          {
            v149[15] = 7;
LABEL_341:
            int v155 = sqlite3_finalize(v334);
            uint64_t v154 = v313;
            if (!v149[15]) {
              v149[15] = v155;
            }
            goto LABEL_343;
          }
          int v307 = v158;
          uint64_t v304 = v157;
          v149[15] = sub_1B0C7EAC0(**(void **)v149, v160, 0xFFFFFFFFLL, 133, 0, &v334, 0, v161);
        }
        int v163 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v162);
          --qword_1EB220150;
          off_1EB21C9E8(v162);
          int v162 = (unsigned __int8 *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0)
          {
LABEL_356:
            if (v149[15]) {
              goto LABEL_341;
            }
            uint64_t v164 = v159 - 1;
            while (2)
            {
              if (sqlite3_step(v334) != 100) {
                goto LABEL_341;
              }
              uint64_t v166 = sqlite3_column_blob(v334, 1);
              int v167 = sqlite3_column_bytes(v334, 1);
              uint64_t v165 = sqlite3_column_int(v334, 2);
              int v168 = sqlite3_column_int(v334, 3);
              if ((int)v165 < *v318)
              {
                uint64_t v165 = v164;
                goto LABEL_359;
              }
              int v311 = v168;
              int v169 = sub_1B0DA6708((uint64_t)v149, ((unint64_t)*v317 << 37) + (int)v165);
              if (!v169) {
                goto LABEL_341;
              }
              unint64_t v170 = v169;
              int v312 = v164;
              int v171 = v169[2];
              int v323 = v169;
              if (v171 >= 4)
              {
                signed int v172 = v169[3];
                if (v172 <= v171)
                {
                  unsigned int v314 = v165;
                  if (v171 <= v172)
                  {
                    if (v167
                      || (v171 == 4 ? (BOOL v177 = v172 == 4) : (BOOL v177 = 0),
                          v177 ? (BOOL v178 = *(_DWORD *)(v304 + 128) == 5) : (BOOL v178 = 0),
                          !v178))
                    {
                      v149[15] = 267;
                    }
                    goto LABEL_508;
                  }
                  int v173 = *(unsigned __int16 **)v169;
                  uint64_t v174 = (char *)(*(void *)v169 + v172);
                  unsigned int v175 = *v174;
                  if (*v174 < 0)
                  {
                    int v176 = v174[1];
                    if (v174[1] < 0)
                    {
                      int v179 = v174[2];
                      if (v179 < 0)
                      {
                        v335[0] = 0;
                        sub_1B0DA69F4(v174, (unint64_t *)v335);
                        unint64_t v170 = v323;
                        unsigned int v175 = (uint64_t)v335[0] & 0x7FFFFFFF;
                      }
                      else
                      {
                        unsigned int v175 = v179 & 0x7F | (v175 << 14) & 0x1FC07F | ((v176 & 0x7F) << 7);
                      }
                    }
                    else
                    {
                      unsigned int v175 = ((v175 & 0x7F) << 7) | v176;
                    }
                  }
                  unsigned int v180 = __rev16(*v173);
                  if ((int)v175 >= v172 || v175 <= v180) {
                    goto LABEL_400;
                  }
                  int v182 = (char *)v173 + v175;
                  int v183 = *v182;
                  if (*v182 < 0)
                  {
                    int v185 = v182[1];
                    if (v182[1] < 0)
                    {
                      int v186 = v182[2];
                      if (v186 < 0)
                      {
                        v335[0] = 0;
                        int v184 = sub_1B0DA69F4(v182, (unint64_t *)v335);
                        int v183 = (uint64_t)v335[0] & 0x7FFFFFFF;
                      }
                      else
                      {
                        int v183 = v186 & 0x7F | (v183 << 14) & 0x1FC07F | ((v185 & 0x7F) << 7);
                        int v184 = 3;
                      }
                    }
                    else
                    {
                      int v183 = ((v183 & 0x7F) << 7) | v185;
                      int v184 = 2;
                    }
                  }
                  else
                  {
                    int v184 = 1;
                  }
                  int v187 = v183 - v167;
                  if (v183 >= v167) {
                    size_t v188 = v167;
                  }
                  else {
                    size_t v188 = v183;
                  }
                  if ((int)v188 < 1 || (int v189 = memcmp((char *)v173 + v184 + v175, v166, v188)) == 0) {
                    int v189 = v187;
                  }
                  unint64_t v170 = v323;
                  if (v189 < 0) {
LABEL_400:
                  }
                    v149[15] = 267;
                  unsigned int v320 = 0;
                  int v190 = 0;
                  unsigned int v308 = 0;
                  uint64_t v191 = 0;
                  int v192 = 0;
                  __dst = 0;
                  sqlite3_int64 v322 = 0;
                  uint64_t v193 = qword_1EB21FB68 + 1176;
LABEL_404:
                  if (v149[15])
                  {
LABEL_494:
                    if (__dst)
                    {
                      int v240 = (void (**)(void *))&off_1EB21C9E8;
                      if (!dword_1EB21C9C0) {
                        goto LABEL_500;
                      }
                      uint64_t v241 = v193[54];
                      if (v241) {
                        xmmword_1EB21CA40(v241);
                      }
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(__dst);
                      --qword_1EB220150;
                      off_1EB21C9E8(__dst);
                      unint64_t v170 = v323;
                      __dst = (char *)v193[54];
                      if (__dst)
                      {
                        int v240 = (void (**)(void *))&xmmword_1EB21CA50;
LABEL_500:
                        (*v240)(__dst);
                        unint64_t v170 = v323;
                      }
                    }
                    uint64_t v165 = v314;
                    if (v322)
                    {
                      int v242 = (void (**)(void *))&off_1EB21C9E8;
                      if (!dword_1EB21C9C0) {
                        goto LABEL_507;
                      }
                      if ((void)xmmword_1EB2201B0) {
                        xmmword_1EB21CA40(xmmword_1EB2201B0);
                      }
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(v322);
                      --qword_1EB220150;
                      off_1EB21C9E8(v322);
                      unint64_t v170 = v323;
                      sqlite3_int64 v322 = (void *)xmmword_1EB2201B0;
                      if ((void)xmmword_1EB2201B0)
                      {
                        int v242 = (void (**)(void *))&xmmword_1EB21CA50;
LABEL_507:
                        (*v242)(v322);
                        unint64_t v170 = v323;
                      }
                    }
LABEL_508:
                    int v243 = &off_1EB21C9E8;
                    if (dword_1EB21C9C0)
                    {
                      int v244 = v312;
                      if ((void)xmmword_1EB2201B0)
                      {
                        xmmword_1EB21CA40(xmmword_1EB2201B0);
                        unint64_t v170 = v323;
                      }
                      unint64_t v245 = v170;
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(v170);
                      --qword_1EB220150;
                      off_1EB21C9E8(v245);
                      unint64_t v170 = (_DWORD *)xmmword_1EB2201B0;
                      if ((void)xmmword_1EB2201B0)
                      {
                        int v243 = &xmmword_1EB21CA50;
                        goto LABEL_514;
                      }
                    }
                    else
                    {
                      int v244 = v312;
LABEL_514:
                      (*v243)(v170);
                    }
                    if (v149[15]) {
                      goto LABEL_341;
                    }
                    if (v244 >= (int)v165 - 1) {
                      goto LABEL_533;
                    }
                    uint64_t v246 = v244 + 1;
                    while (2)
                    {
                      uint64_t v247 = sub_1B0DA6708((uint64_t)v149, v246 + ((unint64_t)*v317 << 37));
                      if (v247)
                      {
                        uint64_t v248 = v247;
                        if (v247[3] < v247[2]) {
                          v149[15] = 267;
                        }
                        if (v246 >= (int)(v319 + 1) && __rev16(**(unsigned __int16 **)v247)) {
                          v149[15] = 267;
                        }
                        int v249 = &off_1EB21C9E8;
                        if (dword_1EB21C9C0)
                        {
                          if ((void)xmmword_1EB2201B0) {
                            xmmword_1EB21CA40(xmmword_1EB2201B0);
                          }
                          qword_1EB220108[0] -= (int)off_1EB21C9F8(v248);
                          --qword_1EB220150;
                          off_1EB21C9E8(v248);
                          uint64_t v248 = (_DWORD *)xmmword_1EB2201B0;
                          if ((void)xmmword_1EB2201B0)
                          {
                            int v249 = &xmmword_1EB21CA50;
                            goto LABEL_529;
                          }
                        }
                        else
                        {
LABEL_529:
                          (*v249)(v248);
                        }
                      }
                      int v250 = v149[15];
                      if (v246 < (int)v165 - 1)
                      {
                        ++v246;
                        if (!v250) {
                          continue;
                        }
                      }
                      break;
                    }
                    uint64_t v165 = v314;
                    if (v250) {
                      goto LABEL_341;
                    }
LABEL_533:
                    if (!v311)
                    {
                      unsigned int v319 = *v306;
                      goto LABEL_359;
                    }
                    uint64_t v251 = *v317;
                    v252 = sub_1B0DB2348((uint64_t)v149, 0, v251, v165);
                    int v253 = v252;
                    unsigned int v319 = 0;
                    if (v149[15]) {
                      goto LABEL_572;
                    }
                    if (v252[5])
                    {
                      unsigned int v319 = 0;
                      goto LABEL_572;
                    }
                    uint64_t v254 = v251 << 37;
                    int v255 = v314;
                    while (2)
                    {
                      signed int v256 = v255 + 1;
                      int v255 = v253[7];
                      if (v256 >= v255)
                      {
                        unsigned int v319 = v256;
                        uint64_t v260 = v255;
                        uint64_t v258 = qword_1EB21FB68 + 1176;
                        goto LABEL_554;
                      }
                      uint64_t v257 = v256;
                      uint64_t v258 = &qword_1EB21FB68[147];
                      while (2)
                      {
                        uint64_t v261 = sub_1B0DA6708((uint64_t)v149, v254 + v257);
                        if (v261)
                        {
                          uint64_t v262 = v261;
                          if (__rev16(**(unsigned __int16 **)v261)) {
                            v149[15] = 267;
                          }
                          int v259 = &off_1EB21C9E8;
                          if (dword_1EB21C9C0)
                          {
                            if ((void)xmmword_1EB2201B0) {
                              xmmword_1EB21CA40(xmmword_1EB2201B0);
                            }
                            qword_1EB220108[0] -= (int)off_1EB21C9F8(v262);
                            --qword_1EB220150;
                            off_1EB21C9E8(v262);
                            uint64_t v262 = (_DWORD *)xmmword_1EB2201B0;
                            if (!(void)xmmword_1EB2201B0) {
                              goto LABEL_543;
                            }
                            int v259 = &xmmword_1EB21CA50;
                          }
                          (*v259)(v262);
                        }
LABEL_543:
                        ++v257;
                        uint64_t v260 = v253[7];
                        if (v257 < v260) {
                          continue;
                        }
                        break;
                      }
                      unsigned int v319 = v257;
                      int v255 = v253[7];
LABEL_554:
                      uint64_t v263 = sub_1B0DA6708((uint64_t)v149, v260 + v254);
                      if (v263)
                      {
                        v264 = v263;
                        v335[0] = 0;
                        unsigned int v265 = __rev16(**(unsigned __int16 **)v263);
                        if (v263[3] <= (signed int)v265
                          || (v307 != 5 || v265)
                          && ((uint64_t v266 = (sqlite3_stmt *)*((void *)v253 + 4),
                               sub_1B0DA69F4((char *)(*(void *)v263 + v265), (unint64_t *)v335),
                               v335[0] != v266)
                            ? (BOOL v267 = v307 != 5)
                            : (BOOL v267 = 0),
                              (uint64_t)v335[0] < (uint64_t)v266 || v267))
                        {
                          v149[15] = 267;
                        }
                        int v268 = &off_1EB21C9E8;
                        if (dword_1EB21C9C0)
                        {
                          uint64_t v269 = v258[54];
                          if (v269) {
                            xmmword_1EB21CA40(v269);
                          }
                          qword_1EB220108[0] -= (int)off_1EB21C9F8(v264);
                          --qword_1EB220150;
                          off_1EB21C9E8(v264);
                          v264 = (_DWORD *)v258[54];
                          if (v264)
                          {
                            int v268 = &xmmword_1EB21CA50;
                            goto LABEL_569;
                          }
                        }
                        else
                        {
LABEL_569:
                          (*v268)(v264);
                        }
                      }
                      sub_1B0DABC00((uint64_t)v149, v253, 0);
                      if (!v149[15] && !v253[5]) {
                        continue;
                      }
                      break;
                    }
LABEL_572:
                    sub_1B0DA8624(v253);
                    uint64_t v165 = v314;
LABEL_359:
                    uint64_t v164 = v165;
                    if (v149[15]) {
                      goto LABEL_341;
                    }
                    continue;
                  }
                  uint64_t v194 = *(void *)v170;
                  uint64_t v195 = (char *)(*(void *)v170 + v172);
                  int v196 = *v195;
                  if (*v195 < 0)
                  {
                    int v198 = v195[1];
                    if (v195[1] < 0)
                    {
                      int v199 = v195[2];
                      if (v199 < 0)
                      {
                        v335[0] = 0;
                        int v200 = v190;
                        int v201 = sub_1B0DA69F4(v195, (unint64_t *)v335);
                        int v190 = v200;
                        unint64_t v170 = v323;
                        int v197 = v201;
                        int v196 = (uint64_t)v335[0] & 0x7FFFFFFF;
                      }
                      else
                      {
                        int v196 = v199 & 0x7F | (v196 << 14) & 0x1FC07F | ((v198 & 0x7F) << 7);
                        int v197 = 3;
                      }
                    }
                    else
                    {
                      int v196 = ((v196 & 0x7F) << 7) | v198;
                      int v197 = 2;
                    }
                  }
                  else
                  {
                    int v197 = 1;
                  }
                  int v202 = v196 + v192;
                  int v203 = v170[3];
                  if (v196 + v192 < v203)
                  {
                    int v204 = (char *)(v194 + v202);
                    uint64_t v205 = *v204;
                    if (v192)
                    {
                      if ((v205 & 0x80) != 0)
                      {
                        unsigned int v208 = v204[1];
                        if (v204[1] < 0)
                        {
                          int v210 = v204[2];
                          if (v210 < 0)
                          {
                            v335[0] = 0;
                            int v212 = v197;
                            int v213 = v190;
                            unsigned int v206 = sub_1B0DA69F4(v204, (unint64_t *)v335);
                            int v190 = v213;
                            int v197 = v212;
                            unint64_t v170 = v323;
                            uint64_t v205 = (uint64_t)v335[0] & 0x7FFFFFFF;
                          }
                          else
                          {
                            uint64_t v205 = v210 & 0x7F | (v205 << 14) & 0x1FC07F | ((v208 & 0x7F) << 7);
                            unsigned int v206 = 3;
                          }
                        }
                        else
                        {
                          uint64_t v205 = ((v205 & 0x7F) << 7) | v208;
                          unsigned int v206 = 2;
                        }
                      }
                      else
                      {
                        unsigned int v206 = 1;
                      }
                      uint64_t v214 = v206 + (uint64_t)v202;
                      uint64_t v215 = v194 + v214;
                      unsigned int v216 = *(unsigned __int8 *)(v194 + v214);
                      if (*(char *)(v194 + v214) < 0)
                      {
                        int v218 = *(unsigned __int8 *)(v215 + 1);
                        if (*(char *)(v215 + 1) < 0)
                        {
                          int v219 = *(char *)(v215 + 2);
                          if (v219 < 0)
                          {
                            v335[0] = 0;
                            int v315 = v197;
                            int v220 = v190;
                            int v217 = sub_1B0DA69F4((char *)v215, (unint64_t *)v335);
                            int v190 = v220;
                            int v197 = v315;
                            unint64_t v170 = v323;
                            unsigned int v216 = (uint64_t)v335[0] & 0x7FFFFFFF;
                          }
                          else
                          {
                            unsigned int v216 = v219 & 0x7F | (v216 << 14) & 0x1FC07F | ((v218 & 0x7F) << 7);
                            int v217 = 3;
                          }
                        }
                        else
                        {
                          unsigned int v216 = ((v216 & 0x7F) << 7) | v218;
                          int v217 = 2;
                        }
                      }
                      else
                      {
                        int v217 = 1;
                      }
                      int v221 = v217 + v214;
                      if ((int)v205 > (int)v191 || (int)(v221 + v216) > v203)
                      {
                        v149[15] = 267;
                        uint64_t v205 = v191;
                        if (!v191) {
                          goto LABEL_402;
                        }
LABEL_466:
                        int v233 = v197;
                        if (v320 >= v205)
                        {
                          memcpy(v322, __dst, v205);
                          goto LABEL_475;
                        }
                        if (v320) {
                          LODWORD(v234) = v320;
                        }
                        else {
                          LODWORD(v234) = 64;
                        }
                        unint64_t v234 = (int)v234;
                        do
                        {
                          unint64_t v235 = v234;
                          v234 *= 2;
                        }
                        while (v235 < v205);
                        if (sqlite3_initialize() || (int64x2_t v236 = (void *)sub_1B0C8E1B8((uint64_t)v322, v235)) == 0)
                        {
                          int v190 = 0;
                          v149[15] = 7;
                        }
                        else
                        {
                          unsigned int v320 = v235;
                          sqlite3_int64 v322 = v236;
                          memcpy(v236, __dst, v205);
LABEL_475:
                          int v190 = v205;
                        }
                        unint64_t v170 = v323;
                        int v197 = v233;
LABEL_403:
                        v172 += v197;
                        uint64_t v191 = v205;
                        int v192 = v202;
                        uint64_t v193 = &qword_1EB21FB68[147];
                        if (v172 >= v170[2]) {
                          goto LABEL_494;
                        }
                        goto LABEL_404;
                      }
                      if (!v216) {
                        goto LABEL_453;
                      }
                      unint64_t v223 = v216 + v205;
                      int v316 = v197;
                      int v305 = v190;
                      if (v223 <= v308) {
                        goto LABEL_452;
                      }
                      if (v308) {
                        LODWORD(v224) = v308;
                      }
                      else {
                        LODWORD(v224) = 64;
                      }
                      unint64_t v224 = (int)v224;
                      do
                      {
                        unint64_t v225 = v224;
                        v224 *= 2;
                      }
                      while (v225 < v223);
                      if (!sqlite3_initialize())
                      {
                        uint64_t v226 = sub_1B0C8E1B8((uint64_t)__dst, v225);
                        if (v226)
                        {
                          unsigned int v308 = v225;
                          __dst = (char *)v226;
LABEL_452:
                          memcpy(&__dst[v205], (const void *)(v194 + v221), v216);
                          uint64_t v205 = v216 + v205;
                          unint64_t v170 = v323;
                          int v197 = v316;
                          int v190 = v305;
                          if (!v149[15])
                          {
LABEL_453:
                            int v227 = v205 - v190;
                            if ((int)v205 >= v190) {
                              size_t v228 = v190;
                            }
                            else {
                              size_t v228 = v205;
                            }
                            if ((int)v228 < 1
                              || (v229 = v197, v230 = memcmp(__dst, v322, v228), int v197 = v229, v170 = v323, !v230))
                            {
                              int v230 = v227;
                            }
                            if (v230 <= 0)
                            {
                              v149[15] = 267;
                              if (v205) {
                                goto LABEL_466;
                              }
LABEL_402:
                              int v190 = 0;
                              goto LABEL_403;
                            }
                          }
LABEL_465:
                          if (!v205) {
                            goto LABEL_402;
                          }
                          goto LABEL_466;
                        }
                      }
                      v149[15] = 7;
LABEL_490:
                      unint64_t v170 = v323;
                      int v197 = v316;
                      if (v205) {
                        goto LABEL_466;
                      }
                      goto LABEL_402;
                    }
                    if ((v205 & 0x80) != 0)
                    {
                      unsigned int v209 = v204[1];
                      if (v204[1] < 0)
                      {
                        int v211 = v204[2];
                        if (v211 < 0)
                        {
                          v335[0] = 0;
                          int v231 = v197;
                          unsigned int v207 = sub_1B0DA69F4(v204, (unint64_t *)v335);
                          int v197 = v231;
                          unint64_t v170 = v323;
                          uint64_t v205 = (uint64_t)v335[0] & 0x7FFFFFFF;
                        }
                        else
                        {
                          uint64_t v205 = v211 & 0x7F | (v205 << 14) & 0x1FC07F | ((v209 & 0x7F) << 7);
                          unsigned int v207 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v205 = ((v205 & 0x7F) << 7) | v209;
                        unsigned int v207 = 2;
                      }
                    }
                    else
                    {
                      unsigned int v207 = 1;
                    }
                    uint64_t v232 = v207 + (uint64_t)v202;
                    if ((int)v232 + (int)v205 <= v203)
                    {
                      if (!v205)
                      {
                        int v190 = 0;
                        goto LABEL_403;
                      }
                      int v316 = v197;
                      if (v308 >= v205)
                      {
                        memcpy(__dst, (const void *)(v194 + v232), v205);
                      }
                      else
                      {
                        if (v308) {
                          LODWORD(v237) = v308;
                        }
                        else {
                          LODWORD(v237) = 64;
                        }
                        unint64_t v237 = (int)v237;
                        do
                        {
                          unint64_t v238 = v237;
                          v237 *= 2;
                        }
                        while (v238 < v205);
                        if (sqlite3_initialize() || (uint64_t v239 = (char *)sub_1B0C8E1B8((uint64_t)__dst, v238)) == 0)
                        {
                          uint64_t v205 = 0;
                          int v190 = 0;
                          v149[15] = 7;
                          unint64_t v170 = v323;
                          int v197 = v316;
                          goto LABEL_403;
                        }
                        unsigned int v308 = v238;
                        __dst = v239;
                        memcpy(v239, (const void *)(v194 + v232), v205);
                      }
                      goto LABEL_490;
                    }
                  }
                  v149[15] = 267;
                  uint64_t v205 = v191;
                  goto LABEL_465;
                }
              }
              break;
            }
            v149[15] = 267;
            uint64_t v270 = &off_1EB21C9E8;
            if (!dword_1EB21C9C0)
            {
LABEL_578:
              (*v270)(v170);
              goto LABEL_341;
            }
            if ((void)xmmword_1EB2201B0)
            {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
              unint64_t v170 = v323;
            }
            char v271 = v170;
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v170);
            --qword_1EB220150;
            off_1EB21C9E8(v271);
            unint64_t v170 = (_DWORD *)xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              uint64_t v270 = &xmmword_1EB21CA50;
              goto LABEL_578;
            }
            goto LABEL_341;
          }
          int v163 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
        }
        (*v163)(v162);
        goto LABEL_356;
      }
LABEL_579:
      sub_1B0DDEDE0((uint64_t)v149, (uint64_t)v151, 0x20u, 0, 0xFFFFFFFF, 0, &v331);
      uint64_t v272 = v331;
      v324 = v149 + 15;
      uint64_t v273 = 0;
      if (v149[15])
      {
LABEL_580:
        sub_1B0DA8128(v272);
        char v274 = v300;
        if (*v324) {
          char v274 = 1;
        }
        if ((v274 & 1) == 0 && v273 != v298) {
          _DWORD *v324 = 267;
        }
        sub_1B0DA4EF8(v302);
        sqlite3_int64 v275 = v332;
        if (!v332) {
          goto LABEL_592;
        }
        uint64_t v276 = (void (**)(sqlite3_int64))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v275);
          --qword_1EB220150;
          off_1EB21C9E8(v275);
          sqlite3_int64 v275 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_592;
          }
          uint64_t v276 = (void (**)(sqlite3_int64))&xmmword_1EB21CA50;
        }
        (*v276)(v275);
LABEL_592:
        int v128 = v299;
LABEL_594:
        uint64_t v15 = *v324;
        _DWORD *v324 = 0;
        goto LABEL_627;
      }
      while (1)
      {
        if (*(unsigned char *)(v272 + 20)) {
          goto LABEL_580;
        }
        v335[0] = 0;
        LODWORD(v334) = 0;
        unsigned int v277 = *(unsigned __int16 *)(*(void *)(v272 + 88) + 4);
        uint64_t v278 = v272 + 136 * *(unsigned __int16 *)(*(void *)(v272 + 88) + 4);
        uint64_t v279 = *(void *)(v278 + 216);
        uint64_t v280 = *(unsigned int *)(v278 + 208);
        uint64_t v281 = *(char **)(v278 + 200);
        if (v301 != 1) {
          break;
        }
        if (!*(void *)(v272 + 136 * *(unsigned __int16 *)(*(void *)(v272 + 88) + 4) + 112)
          || *(_DWORD *)(v272 + 136 * *(unsigned __int16 *)(*(void *)(v272 + 88) + 4) + 224))
        {
          uint64_t v282 = 81 * v279;
          if ((int)v280 >= 1)
          {
            do
            {
              uint64_t v283 = *v281++;
              uint64_t v282 = 9 * v282 + v283;
              --v280;
            }
            while (v280);
          }
          v273 ^= v282;
        }
LABEL_597:
        sub_1B0DAB298((uint64_t)v149, v272, 0, 0);
        if (v149[15]) {
          goto LABEL_580;
        }
      }
      LODWORD(v333) = 0;
      sub_1B0DB3CC0(v149, v272 + 136 * v277 + 96, 0, (uint64_t)&v332);
      int v284 = v333;
      unint64_t v285 = (v333 + 4);
      if (v285 <= HIDWORD(v333))
      {
        uint64_t v290 = v332;
      }
      else
      {
        if (HIDWORD(v333)) {
          LODWORD(v286) = HIDWORD(v333);
        }
        else {
          LODWORD(v286) = 64;
        }
        unint64_t v286 = (int)v286;
        do
        {
          unint64_t v287 = v286;
          v286 *= 2;
        }
        while (v287 < v285);
        uint64_t v288 = v332;
        if (sqlite3_initialize() || (uint64_t v290 = sub_1B0C8E1B8(v288, v287)) == 0)
        {
          _DWORD *v324 = 7;
          int v289 = v333;
          goto LABEL_615;
        }
        HIDWORD(v333) = v287;
        sqlite3_int64 v332 = v290;
        int v284 = v333;
      }
      *(_DWORD *)(v290 + v284) = 0;
      int v289 = v333 + 4;
      LODWORD(v333) = v333 + 4;
LABEL_615:
      uint64_t v291 = v332;
      if (!sub_1B0DADA34(v332, v289, (int *)&v334, (uint64_t *)v335))
      {
        uint64_t v292 = 9 * v279;
        do
        {
          uint64_t v293 = v292
               + ((uint64_t)v335[0] >> 32)
               + ((uint64_t)v335[0] & 0x7FFFFFFF)
               + 8 * (v292 + ((uint64_t)v335[0] >> 32));
          if ((int)v280 >= 1)
          {
            uint64_t v294 = v281;
            uint64_t v295 = v280;
            do
            {
              uint64_t v296 = *v294++;
              uint64_t v293 = 9 * v293 + v296;
              --v295;
            }
            while (v295);
          }
          v273 ^= v293;
        }
        while (!sub_1B0DADA34(v291, v289, (int *)&v334, (uint64_t *)v335));
      }
      goto LABEL_597;
    }
  }
  uint64_t v15 = sub_1B0DA55D8(v124, 10, &v327, 0);
  if (v15) {
    goto LABEL_627;
  }
  unsigned int v132 = v327;
  if (sqlite3_step(v327) != 100)
  {
LABEL_310:
    uint64_t v15 = sqlite3_reset(v132);
    if (v15) {
      goto LABEL_627;
    }
    uint64_t v15 = sub_1B0DB5C58((uint64_t)v124, 0);
    if (v15) {
      goto LABEL_627;
    }
    uint64_t v143 = 0;
    uint64_t v15 = 267;
    while ((*(_DWORD *)(v125 + 24) & ~(*(int *)(v125 + 24) >> 31)) != v143)
    {
      uint64_t v144 = *(void *)(v124[4] + v143 * 8);
      uint64_t v145 = v128[v143++];
      if (v144 != v145) {
        goto LABEL_627;
      }
    }
    if (!*(_DWORD *)(v125 + 64))
    {
      sqlite3_int64 v332 = 0;
      uint64_t v15 = sub_1B0DBE604((uint64_t **)v124, (uint64_t)"content", &v332);
      if (v15) {
        goto LABEL_627;
      }
      if (v332 != v124[3]) {
        goto LABEL_635;
      }
    }
    if (*(_DWORD *)(v125 + 88))
    {
      sqlite3_int64 v332 = 0;
      uint64_t v15 = sub_1B0DBE604((uint64_t **)v124, (uint64_t)"docsize", &v332);
      if (v15) {
        goto LABEL_627;
      }
      if (v332 != v124[3])
      {
LABEL_635:
        uint64_t v15 = 267;
        goto LABEL_627;
      }
    }
    char v131 = 0;
    goto LABEL_333;
  }
  uint64_t v133 = (int *)&v128[v129];
  while (1)
  {
    sqlite3_int64 v134 = sqlite3_column_int64(v132, 0);
    *(void *)&long long v328 = v134;
    HIDWORD(v328) = 0;
    if (*(_DWORD *)(v125 + 88))
    {
      uint64_t v135 = sub_1B0DB676C(v124, v134, v133);
      if (v135) {
        break;
      }
    }
    if (*(_DWORD *)(v125 + 92) == 1)
    {
      if (sqlite3_initialize() || (int v136 = (void *)sub_1B0C7FC94(4096)) == 0)
      {
        *((void *)&v329 + 1) = 0;
        uint64_t v15 = 7;
        goto LABEL_626;
      }
      uint64_t v137 = v136;
      bzero(v136, 0x1000uLL);
      *((void *)&v329 + 1) = v137;
    }
    uint64_t v138 = 0;
    while (v138 < *(int *)(v125 + 24))
    {
      if (!*(unsigned char *)(*(void *)(v125 + 40) + v138))
      {
        *((void *)&v328 + 1) = v138;
        if (*(_DWORD *)(v125 + 92) != 2) {
          goto LABEL_300;
        }
        if (sqlite3_initialize() || (uint64_t v139 = (void *)sub_1B0C7FC94(4096)) == 0)
        {
          *((void *)&v329 + 1) = 0;
          uint64_t v15 = 7;
        }
        else
        {
          uint64_t v140 = v139;
          bzero(v139, 0x1000uLL);
          *((void *)&v329 + 1) = v140;
LABEL_300:
          uint64_t v141 = sqlite3_column_text(v132, (int)v138 + 1);
          uint64_t v142 = sqlite3_column_bytes(v132, v138 + 1);
          if (!v141
            || (uint64_t v15 = (*(uint64_t (**)(void, long long *, uint64_t, const unsigned __int8 *, uint64_t, uint64_t (*)(uint64_t, char, char *, int)))(*(void *)(v125 + 112) + 16))(*(void *)(v125 + 104), &v328, 4, v141, v142, sub_1B0DBE230), !v15))
          {
            if (*(_DWORD *)(v125 + 88))
            {
              if (HIDWORD(v328) == v133[v138]) {
                uint64_t v15 = 0;
              }
              else {
                uint64_t v15 = 267;
              }
            }
            else
            {
              uint64_t v15 = 0;
            }
          }
        }
        v128[v138] += SHIDWORD(v328);
        if (*(_DWORD *)(v125 + 92) == 2)
        {
          sub_1B0DBE484(*((uint64_t *)&v329 + 1));
          *((void *)&v329 + 1) = 0;
        }
        goto LABEL_292;
      }
      uint64_t v15 = 0;
LABEL_292:
      ++v138;
      if (v15) {
        goto LABEL_626;
      }
    }
    sub_1B0DBE484(*((uint64_t *)&v329 + 1));
    *((void *)&v329 + 1) = 0;
    if (sqlite3_step(v132) != 100) {
      goto LABEL_310;
    }
  }
  uint64_t v15 = v135;
LABEL_626:
  sub_1B0DBE484(*((uint64_t *)&v329 + 1));
  *((void *)&v329 + 1) = 0;
  sqlite3_reset(v132);
LABEL_627:
  char v297 = (uint64_t (**)(void *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v128);
    --qword_1EB220150;
    off_1EB21C9E8(v128);
    int v128 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      char v297 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
      goto LABEL_632;
    }
  }
  else
  {
LABEL_632:
    (*v297)(v128);
  }
LABEL_238:
  *(void *)(*(void *)(a1 + 24) + 184) = 0;
  return v15;
}

uint64_t sub_1B0DA0448(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 48) + 72);
  if (v1)
  {
    while (*v1 != a1)
    {
      uint64_t v1 = (void *)v1[1];
      if (!v1) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8);
    if (sub_1B0DA6590(v2) != *(void *)(v2 + 136))
    {
      int v3 = *(_DWORD **)(v2 + 144);
      if (v3)
      {
        sub_1B0DA4EF8(v3);
        *(void *)(v2 + 144) = 0;
      }
    }
    *(_DWORD *)(v2 + 60) = 0;
  }
  return 0;
}

uint64_t sub_1B0DA04B8(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 24) + 184) = a1 + 16;
  for (uint64_t i = *(void *)(*(void *)(a1 + 48) + 72); i; uint64_t i = *(void *)(i + 8))
  {
    if (*(_DWORD *)(i + 32) == 1 && *(void *)i == a1) {
      *(_DWORD *)(i + 80) |= 0x20u;
    }
  }
  uint64_t result = sub_1B0DBE998(*(uint64_t ***)(a1 + 40));
  *(void *)(*(void *)(a1 + 24) + 184) = 0;
  return result;
}

uint64_t sub_1B0DA0530()
{
  return 0;
}

uint64_t sub_1B0DA0538(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  *(_DWORD *)(v1 + 16) = 0;
  sub_1B0DA2F38(*(void *)(v1 + 8));
  return 0;
}

uint64_t sub_1B0DA0560(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t (**a4)(uint64_t a1, int a2, uint64_t *a3), void *a5)
{
  for (uint64_t i = *(void *)(*(void *)(a1 + 48) + 48); i; uint64_t i = *(void *)(i + 40))
  {
    uint64_t v6 = *(unsigned __int8 **)(i + 8);
    if (a3)
    {
      if (v6)
      {
        for (uint64_t j = a3; ; ++j)
        {
          uint64_t v8 = *j;
          uint64_t v9 = *v6;
          if (v8 == v9)
          {
            if (!*j) {
              goto LABEL_12;
            }
          }
          else if (byte_1B0DE1758[v8] != byte_1B0DE1758[v9])
          {
            break;
          }
          ++v6;
        }
      }
    }
    else if (!v6)
    {
LABEL_12:
      *a4 = sub_1B0DBEB78;
      *a5 = i;
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B0DA05EC(uint64_t a1, uint64_t a2)
{
  int v3 = *(uint64_t ***)(a1 + 40);
  uint64_t v4 = *v3;
  uint64_t result = sub_1B0DBE998(v3);
  if (!result)
  {
    uint64_t result = sub_1B0DA41D8((sqlite3 *)*v4, 0, "ALTER TABLE %Q.'%q_%s' RENAME TO '%q_%s';",
               v4[1],
               v4[2],
               "data",
               a2,
               "data");
    if (!result)
    {
      uint64_t result = sub_1B0DA41D8((sqlite3 *)*v4, 0, "ALTER TABLE %Q.'%q_%s' RENAME TO '%q_%s';",
                 v4[1],
                 v4[2],
                 "idx",
                 a2,
                 "idx");
      if (!result)
      {
        uint64_t result = sub_1B0DA41D8((sqlite3 *)*v4, 0, "ALTER TABLE %Q.'%q_%s' RENAME TO '%q_%s';",
                   v4[1],
                   v4[2],
                   "config",
                   a2,
                   "config");
        if (*((_DWORD *)v4 + 22) && !result) {
          uint64_t result = sub_1B0DA41D8((sqlite3 *)*v4, 0, "ALTER TABLE %Q.'%q_%s' RENAME TO '%q_%s';",
        }
                     v4[1],
                     v4[2],
                     "docsize",
                     a2,
                     "docsize");
        if (!(*((_DWORD *)v4 + 16) | result)) {
          return sub_1B0DA41D8((sqlite3 *)*v4, 0, "ALTER TABLE %Q.'%q_%s' RENAME TO '%q_%s';",
        }
                   v4[1],
                   v4[2],
                   "content",
                   a2,
                   "content");
      }
    }
  }
  return result;
}

uint64_t sub_1B0DA0720(uint64_t a1)
{
  for (uint64_t i = *(void *)(*(void *)(a1 + 48) + 72); i; uint64_t i = *(void *)(i + 8))
  {
    if (*(_DWORD *)(i + 32) == 1 && *(void *)i == a1) {
      *(_DWORD *)(i + 80) |= 0x20u;
    }
  }
  return sub_1B0DBE998(*(uint64_t ***)(a1 + 40));
}

uint64_t sub_1B0DA0764(uint64_t a1)
{
  for (uint64_t i = *(void *)(*(void *)(a1 + 48) + 72); i; uint64_t i = *(void *)(i + 8))
  {
    if (*(_DWORD *)(i + 32) == 1 && *(void *)i == a1) {
      *(_DWORD *)(i + 80) |= 0x20u;
    }
  }
  return sub_1B0DBE998(*(uint64_t ***)(a1 + 40));
}

uint64_t sub_1B0DA07A8(void *a1)
{
  for (uint64_t i = *(void *)(a1[6] + 72); i; uint64_t i = *(void *)(i + 8))
  {
    if (*(_DWORD *)(i + 32) == 1 && *(void **)i == a1) {
      *(_DWORD *)(i + 80) |= 0x20u;
    }
  }
  *(_DWORD *)(a1[3] + 136) = 0;
  uint64_t v2 = a1[5];
  *(_DWORD *)(v2 + 16) = 0;
  sub_1B0DA2F38(*(void *)(v2 + 8));
  return 0;
}

uint64_t sub_1B0DA0814(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = "config";
    for (uint64_t i = (unsigned char *)result; ; ++i)
    {
      uint64_t v3 = *i;
      uint64_t v4 = *(unsigned __int8 *)v1;
      if (v3 == v4)
      {
        if (!*i) {
          return 1;
        }
      }
      else if (byte_1B0DE1758[v3] != byte_1B0DE1758[v4])
      {
        sqlite3_int64 v5 = "content";
        for (uint64_t j = (unsigned char *)result; ; ++j)
        {
          uint64_t v7 = *j;
          uint64_t v8 = *(unsigned __int8 *)v5;
          if (v7 == v8)
          {
            if (!*j) {
              return 1;
            }
          }
          else if (byte_1B0DE1758[v7] != byte_1B0DE1758[v8])
          {
            uint64_t v9 = "data";
            for (uint64_t k = (unsigned char *)result; ; ++k)
            {
              uint64_t v11 = *k;
              uint64_t v12 = *(unsigned __int8 *)v9;
              if (v11 == v12)
              {
                if (!*k) {
                  return 1;
                }
              }
              else if (byte_1B0DE1758[v11] != byte_1B0DE1758[v12])
              {
                uint64_t v13 = "docsize";
                for (uint64_t m = (unsigned char *)result; ; ++m)
                {
                  uint64_t v15 = *m;
                  uint64_t v16 = *(unsigned __int8 *)v13;
                  if (v15 == v16)
                  {
                    if (!*m) {
                      return 1;
                    }
                  }
                  else if (byte_1B0DE1758[v15] != byte_1B0DE1758[v16])
                  {
                    for (n = "idx"; ; ++n)
                    {
                      uint64_t v18 = *(unsigned __int8 *)result;
                      uint64_t v19 = *(unsigned __int8 *)n;
                      if (v18 == v19)
                      {
                        if (!*(unsigned char *)result) {
                          return 1;
                        }
                      }
                      else if (byte_1B0DE1758[v18] != byte_1B0DE1758[v19])
                      {
                        return 0;
                      }
                      ++result;
                    }
                  }
                  ++v13;
                }
              }
              ++v9;
            }
          }
          ++v5;
        }
      }
      ++v1;
    }
  }
  return result;
}

uint64_t sub_1B0DA0974(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sqlite3_overload_function(*(sqlite3 **)(a1 + 32), a2, -1);
  if (!result)
  {
    size_t v11 = strlen(a2);
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v12 = (void *)sub_1B0C7FC94(v11 + 49);
    if (!v12)
    {
      return 7;
    }
    else
    {
      uint64_t v13 = v12;
      bzero(v12, v11 + 49);
      v13[1] = v13 + 6;
      memcpy(v13 + 6, a2, v11 + 1);
      uint64_t result = 0;
      void *v13 = a1;
      v13[2] = a3;
      v13[3] = a4;
      uint64_t v14 = *(void *)(a1 + 48);
      v13[4] = a5;
      v13[5] = v14;
      *(void *)(a1 + 48) = v13;
    }
  }
  return result;
}

uint64_t sub_1B0DA0A34(uint64_t a1, char *__s, uint64_t a3, uint64_t a4, uint64_t a5)
{
  size_t v10 = strlen(__s);
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v12 = (void *)sub_1B0C7FC94(v10 + 57);
  if (!v12) {
    return 7;
  }
  uint64_t v13 = v12;
  bzero(v12, v10 + 57);
  void *v13 = v13 + 7;
  memcpy(v13 + 7, __s, v10 + 1);
  v13[1] = a3;
  uint64_t v14 = *(void *)(a4 + 16);
  *((_OWORD *)v13 + 1) = *(_OWORD *)a4;
  v13[4] = v14;
  v13[5] = a5;
  uint64_t v15 = *(void *)(a1 + 56);
  v13[6] = v15;
  *(void *)(a1 + 56) = v13;
  uint64_t result = 0;
  if (!v15) {
    *(void *)(a1 + 64) = v13;
  }
  return result;
}

uint64_t sub_1B0DA0AF8(uint64_t a1, unsigned char *a2, void *a3, uint64_t a4)
{
  if (a2)
  {
    for (uint64_t i = *(unsigned __int8 **)(a1 + 56); i; uint64_t i = (unsigned __int8 *)*((void *)i + 6))
    {
      sqlite3_int64 v5 = *(unsigned __int8 **)i;
      if (*(void *)i)
      {
        for (uint64_t j = a2; ; ++j)
        {
          uint64_t v7 = *j;
          uint64_t v8 = *v5;
          if (v7 == v8)
          {
            if (!*j) {
              goto LABEL_11;
            }
          }
          else if (byte_1B0DE1758[v7] != byte_1B0DE1758[v8])
          {
            break;
          }
          ++v5;
        }
      }
    }
  }
  else
  {
    uint64_t i = *(unsigned __int8 **)(a1 + 64);
    if (i)
    {
LABEL_11:
      uint64_t result = 0;
      long long v10 = *((_OWORD *)i + 1);
      *(void *)(a4 + 16) = *((void *)i + 4);
      *(_OWORD *)a4 = v10;
      *a3 = *((void *)i + 1);
      return result;
    }
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  uint64_t result = 1;
  *(void *)(a4 + 16) = 0;
  return result;
}

uint64_t sub_1B0DA0B90(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    do
    {
      uint64_t v4 = (void (*)(void))v2[4];
      sqlite3_int64 v5 = (void *)v2[5];
      if (v4) {
        v4(v2[2]);
      }
      uint64_t v6 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108 -= (int)off_1EB21C9F8(v2);
        --qword_1EB220150;
        off_1EB21C9E8(v2);
        uint64_t v2 = (void *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_5;
        }
        uint64_t v6 = &xmmword_1EB21CA50;
      }
      (*v6)(v2);
LABEL_5:
      uint64_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = *(void **)(v1 + 56);
  if (!v3)
  {
LABEL_23:
    size_t v11 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v1);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v1);
      uint64_t v1 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        return result;
      }
      size_t v11 = &xmmword_1EB21CA50;
    }
    uint64_t v12 = *v11;
    return v12(v1);
  }
  do
  {
    uint64_t v8 = (void (*)(void))v3[5];
    uint64_t v9 = (void *)v3[6];
    if (v8) {
      v8(v3[1]);
    }
    long long v10 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_13;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v3);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v3);
    uint64_t v3 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      long long v10 = &xmmword_1EB21CA50;
LABEL_13:
      uint64_t result = (*v10)(v3);
    }
    uint64_t v3 = v9;
  }
  while (v9);
  if (v1) {
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1B0DA0D84(uint64_t result, uint64_t a2, uint64_t *a3)
{
  if (result && (uint64_t v4 = *(void *)(result + 8)) != 0)
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t v6 = *a3;
    if (!*a3)
    {
LABEL_4:
      return sub_1B0CE1978(97118);
    }
  }
  else
  {
    uint64_t result = sub_1B0CE1978(97932);
    uint64_t v5 = 0;
    uint64_t v6 = *a3;
    if (!v6) {
      goto LABEL_4;
    }
  }
  if ((*(_WORD *)(v6 + 20) & 0xFBF) == 0xA01 && *(unsigned char *)(v6 + 23) == 112)
  {
    uint64_t result = strcmp(*(const char **)v6, "fts5_api_ptr");
    if (!result)
    {
      uint64_t v7 = *(void **)(v6 + 8);
      if (v7) {
        void *v7 = v5;
      }
    }
  }
  return result;
}

void sub_1B0DA0E3C(uint64_t a1)
{
  if (a1) {
    sub_1B0CEA530(a1, "fts5: 2023-10-10 13:08:14 1b37c146ee9ebb7acd0160c0ab1fd11017a419fa8a3187386ed8cb32b709a6b1", -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
  }
  else {
    sub_1B0CE1978(97498);
  }
}

uint64_t sub_1B0DA0E64(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, char **a7)
{
  if (sqlite3_initialize())
  {
    uint64_t v14 = 0;
    goto LABEL_3;
  }
  uint64_t v17 = (_OWORD *)sub_1B0C7FC94(64);
  uint64_t v14 = v17;
  if (!v17) {
    goto LABEL_3;
  }
  v17[2] = 0u;
  v17[3] = 0u;
  *uint64_t v17 = 0u;
  v17[1] = 0u;
  unsigned int v213 = 0;
  if (sqlite3_initialize()) {
    goto LABEL_3;
  }
  uint64_t v18 = sub_1B0C7FC94(192);
  if (!v18) {
    goto LABEL_3;
  }
  uint64_t v19 = v18;
  *(_OWORD *)(v18 + 160) = 0u;
  *(_OWORD *)(v18 + 176) = 0u;
  *(_OWORD *)(v18 + 128) = 0u;
  *(_OWORD *)(v18 + 144) = 0u;
  *(_OWORD *)(v18 + 96) = 0u;
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_OWORD *)(v18 + 80) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(void *)uint64_t v18 = a2;
  *(_DWORD *)(v18 + 132) = -1;
  int __s = (char *)a4;
  if (sqlite3_initialize() || (unsigned int v20 = (char *)sub_1B0C7FC94(9 * a4)) == 0)
  {
    if (a4 > 0)
    {
      *(void *)(v19 + 32) = 0;
      *(void *)(v19 + 40) = 0;
LABEL_24:
      *(void *)(v19 + 8) = 0;
LABEL_25:
      *(void *)(v19 + 16) = 0;
      *(void *)(v19 + 88) = 1;
      goto LABEL_26;
    }
    unsigned int v208 = a7;
    int v21 = 0;
  }
  else
  {
    int v21 = v20;
    unsigned int v208 = a7;
    bzero(v20, 9 * a4);
  }
  uint64_t v22 = &v21[8 * a4];
  if (!v21) {
    uint64_t v22 = 0;
  }
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v22;
  int v23 = *(const char **)(a5 + 8);
  unsigned int v24 = strlen(v23);
  int v25 = sqlite3_initialize();
  if ((v24 & 0x80000000) != 0) {
    goto LABEL_24;
  }
  if (v25) {
    goto LABEL_24;
  }
  uint64_t v26 = (unsigned char *)sub_1B0C7FC94(v24 + 1);
  if (!v26) {
    goto LABEL_24;
  }
  uint64_t v27 = v26;
  memcpy(v26, v23, v24);
  v27[v24] = 0;
  *(void *)(v19 + 8) = v27;
  uint64_t v28 = *(const char **)(a5 + 16);
  unsigned int v29 = strlen(v28);
  int v30 = sqlite3_initialize();
  if ((v29 & 0x80000000) != 0) {
    goto LABEL_25;
  }
  if (v30) {
    goto LABEL_25;
  }
  uint64_t v31 = (unsigned char *)sub_1B0C7FC94(v29 + 1);
  if (!v31) {
    goto LABEL_25;
  }
  uint64_t v32 = v31;
  memcpy(v31, v28, v29);
  uint64_t v33 = 0;
  v32[v29] = 0;
  *(void *)(v19 + 16) = v32;
  *(void *)(v19 + 88) = 1;
  uint64_t v34 = v208;
  while (1)
  {
    uint64_t v35 = v32[v33];
    uint64_t v36 = aRank[v33];
    if (v35 != v36) {
      break;
    }
    if (!v32[v33])
    {
      uint64_t v37 = sqlite3_mprintf("reserved fts5 table name: %s");
      goto LABEL_33;
    }
LABEL_29:
    ++v33;
  }
  if (byte_1B0DE1758[v35] == byte_1B0DE1758[v36]) {
    goto LABEL_29;
  }
  int v206 = a1;
  if (a4 < 4)
  {
    if (*(_DWORD *)(v19 + 68) && *(_DWORD *)(v19 + 64) != 1) {
      goto LABEL_489;
    }
LABEL_479:
    int v167 = (void *)(v19 + 104);
    if (*(void *)(v19 + 104))
    {
      if (*(void *)(v19 + 72))
      {
LABEL_481:
        int v168 = *(char **)(v19 + 80);
        if (v168)
        {
LABEL_482:
          LODWORD(v212) = 0;
          long long v215 = 0uLL;
          sub_1B0DA3CA4((char *)&v212, (uint64_t)&v215, "T.%Q", v168);
          if (*(_DWORD *)(v19 + 64) != 1 && *(int *)(v19 + 24) >= 1)
          {
            uint64_t v169 = 0;
            do
            {
              if (*(_DWORD *)(v19 + 64) == 2) {
                sub_1B0DA3CA4((char *)&v212, (uint64_t)&v215, ", T.%Q", *(void *)(*(void *)(v19 + 32) + 8 * v169));
              }
              else {
                sub_1B0DA3CA4((char *)&v212, (uint64_t)&v215, ", T.c%d");
              }
              ++v169;
            }
            while (v169 < *(int *)(v19 + 24));
          }
          *(void *)(v19 + 96) = v215;
          uint64_t v15 = v212;
          if (v212) {
            goto LABEL_27;
          }
          v14[3] = v19;
          v14[6] = a3;
          LODWORD(v212) = 0;
          if (sqlite3_initialize() || (uint64_t v176 = sub_1B0C7FC94(152)) == 0)
          {
            uint64_t v170 = 0;
            v14[4] = 0;
            uint64_t v15 = 7;
LABEL_493:
            sub_1B0DA3F58(v170);
            v14[4] = 0;
            goto LABEL_4;
          }
          uint64_t v170 = v176;
          *(void *)(v176 + 144) = 0;
          *(_OWORD *)(v176 + 112) = 0u;
          *(_OWORD *)(v176 + 128) = 0u;
          *(_OWORD *)(v176 + 80) = 0u;
          *(_OWORD *)(v176 + 96) = 0u;
          *(_OWORD *)(v176 + 48) = 0u;
          *(_OWORD *)(v176 + 64) = 0u;
          *(_OWORD *)(v176 + 16) = 0u;
          *(_OWORD *)(v176 + 32) = 0u;
          *(_OWORD *)uint64_t v176 = 0u;
          v14[4] = v176;
          *(void *)uint64_t v176 = v19;
          *(_DWORD *)(v176 + 16) = 64;
          BOOL v177 = sub_1B0DA32B4(&v212, "%s_data", *(const char **)(v19 + 16));
          *(void *)(v170 + 8) = v177;
          if (a1 && v177)
          {
            uint64_t v178 = sub_1B0DA3E30(v19, (uint64_t)"data", (uint64_t)"id INTEGER PRIMARY KEY, block BLOB", 0, v34);
            if (v178
              || (uint64_t v178 = sub_1B0DA3E30(v19, (uint64_t)"idx", (uint64_t)"segid, term, pgno, PRIMARY KEY(segid, term)", 1, v34), v178))
            {
              uint64_t v15 = v178;
              goto LABEL_493;
            }
            int v192 = *(_DWORD **)(v170 + 144);
            if (v192)
            {
              sub_1B0DA4EF8(v192);
              *(void *)(v170 + 144) = 0;
            }
            uint64_t v193 = *(void *)(v170 + 24);
            if (v193)
            {
              sub_1B0DA5094(v193);
              *(_DWORD *)(v170 + 32) = 0;
              *(_DWORD *)(v170 + 56) = 0;
            }
            *(_DWORD *)(v170 + 52) = 0;
            long long v215 = 0u;
            long long v216 = 0u;
            long long v217 = 0u;
            if (*(_DWORD *)(*(void *)v170 + 68)) {
              *(void *)&long long v216 = 1;
            }
            sub_1B0DA42D0((unsigned __int8 *)v170, 1, &byte_1B0DE9952, 0);
            sub_1B0DA4564((unsigned __int8 *)v170, (uint64_t)&v215);
            uint64_t v15 = *(unsigned int *)(v170 + 60);
            *(_DWORD *)(v170 + 60) = 0;
            if (v15) {
              goto LABEL_493;
            }
          }
          else
          {
            uint64_t v15 = v212;
            if (v212) {
              goto LABEL_493;
            }
          }
          uint64_t v180 = v14[4];
          uint64_t v181 = *(int *)(v19 + 24);
          if (sqlite3_initialize())
          {
            uint64_t v15 = 7;
            v14[5] = 0;
            goto LABEL_4;
          }
          uint64_t v182 = 8 * v181 + 128;
          int v183 = (uint64_t *)sub_1B0C7FC94(v182);
          v14[5] = v183;
          if (!v183)
          {
LABEL_3:
            uint64_t v15 = 7;
            goto LABEL_4;
          }
          int v184 = v183;
          bzero(v183, v182);
          v184[4] = (uint64_t)(v184 + 16);
          uint64_t *v184 = v19;
          v184[1] = v180;
          if (!v206)
          {
LABEL_532:
            LODWORD(v215) = 0;
            int v186 = sub_1B0DA32B4(&v215, "CREATE TABLE x(");
            int v187 = v186;
            if (v186)
            {
              if (*(int *)(v19 + 24) >= 1)
              {
                int v187 = sub_1B0DA32B4(&v215, "%z%s%Q", v186, &byte_1B0DE9952, **(void **)(v19 + 32));
                if (v187)
                {
                  uint64_t v188 = 1;
                  do
                  {
                    if (v188 >= *(int *)(v19 + 24)) {
                      break;
                    }
                    int v187 = sub_1B0DA32B4(&v215, "%z%s%Q", v187, ", ", *(void *)(*(void *)(v19 + 32) + 8 * v188++));
                  }
                  while (v187);
                }
              }
            }
            int v189 = sub_1B0DA32B4(&v215, "%z, %Q HIDDEN, %s HIDDEN)", v187, *(void *)(v19 + 16), "rank");
            if (!v189)
            {
              uint64_t v15 = v215;
              goto LABEL_557;
            }
            int v190 = v189;
            uint64_t v15 = sqlite3_declare_vtab(*(sqlite3 **)v19, v189);
            uint64_t v191 = (uint64_t (**)(char *))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v190);
              --qword_1EB220150;
              off_1EB21C9E8(v190);
              int v190 = (char *)xmmword_1EB2201B0;
              if (!(void)xmmword_1EB2201B0)
              {
LABEL_557:
                if (v15) {
                  goto LABEL_4;
                }
                *(void *)(v19 + 184) = v34;
                uint64_t v195 = v14[4];
                int v196 = sub_1B0DA5A0C(v195);
                sub_1B0DA4EF8(v196);
                uint64_t v15 = *(unsigned int *)(v195 + 60);
                *(_DWORD *)(v195 + 60) = 0;
                sub_1B0DA2F38(v14[4]);
                *(void *)(v19 + 184) = 0;
                if (v15) {
                  goto LABEL_4;
                }
                goto LABEL_5;
              }
              uint64_t v191 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
            }
            (*v191)(v190);
            goto LABEL_557;
          }
          if (*(_DWORD *)(v19 + 64))
          {
LABEL_525:
            if (!*(_DWORD *)(v19 + 88)
              || (*(_DWORD *)(v19 + 68)
                ? (int v185 = "id INTEGER PRIMARY KEY, sz BLOB, origin INTEGER")
                : (int v185 = "id INTEGER PRIMARY KEY, sz BLOB"),
                  uint64_t v15 = sub_1B0DA3E30(v19, (uint64_t)"docsize", (uint64_t)v185, 0, v34),
                  !v15))
            {
              uint64_t v15 = sub_1B0DA3E30(v19, (uint64_t)"config", (uint64_t)"k PRIMARY KEY, v", 1, v34);
              if (!v15)
              {
                uint64_t v15 = sub_1B0DA52A8(v184, "version", 0, 4);
                if (!v15) {
                  goto LABEL_532;
                }
              }
            }
LABEL_555:
            sub_1B0DA54B8((uint64_t)v184);
            v14[5] = 0;
            goto LABEL_4;
          }
          int v194 = *(_DWORD *)(v19 + 24);
          if (sqlite3_initialize() || (__sa = (char *)sub_1B0C7FC94(10 * v194 + 32)) == 0)
          {
            uint64_t v15 = 7;
            goto LABEL_555;
          }
          int v197 = 10 * v194 + 32;
          sqlite3_snprintf(v197, __sa, "id INTEGER PRIMARY KEY");
          if (*(int *)(v19 + 24) >= 1)
          {
            int v198 = strlen(__sa);
            int v199 = 0;
            do
            {
              sqlite3_snprintf(v197 - v198, &__sa[v198], ", c%d", v199);
              v198 += strlen(&__sa[v198]);
              ++v199;
            }
            while (v199 < *(_DWORD *)(v19 + 24));
          }
          uint64_t v15 = sub_1B0DA3E30(v19, (uint64_t)"content", (uint64_t)__sa, 0, v34);
          int v200 = (void (**)(char *))&off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(__sa);
            --qword_1EB220150;
            off_1EB21C9E8(__sa);
            __sa = (char *)xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0)
            {
LABEL_570:
              if (v15) {
                goto LABEL_555;
              }
              goto LABEL_525;
            }
            int v200 = (void (**)(char *))&xmmword_1EB21CA50;
          }
          (*v200)(__sa);
          goto LABEL_570;
        }
        if (!sqlite3_initialize())
        {
          int v168 = (char *)sub_1B0C7FC94(6);
          if (v168)
          {
            strcpy(v168, "rowid");
            *(void *)(v19 + 80) = v168;
            goto LABEL_482;
          }
        }
        *(void *)(v19 + 80) = 0;
LABEL_26:
        uint64_t v15 = 7;
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v171 = *(void *)(a3 + 64);
      int v173 = *(uint64_t (**)(void, void, void, uint64_t))(v171 + 16);
      signed int v172 = (uint64_t (**)(uint64_t, uint64_t, int, void *))(v171 + 16);
      uint64_t v174 = v173(*(v172 - 1), 0, 0, v19 + 104);
      *(void *)(v19 + 112) = v172;
      if (v174)
      {
        uint64_t v15 = v174;
        *int v167 = 0;
        *(void *)(v19 + 112) = 0;
        goto LABEL_27;
      }
      if (*v172 == sub_1B0DA3A58)
      {
        if (*(_DWORD *)*v167) {
          int v175 = 65;
        }
        else {
          int v175 = 66;
        }
      }
      else
      {
        int v175 = 0;
      }
      *(_DWORD *)(v19 + 124) = v175;
      unsigned int v213 = 0;
      a1 = v206;
      if (*(void *)(v19 + 72)) {
        goto LABEL_481;
      }
    }
    if (*(_DWORD *)(v19 + 64))
    {
      if (!*(_DWORD *)(v19 + 88)) {
        goto LABEL_481;
      }
      int v179 = "docsize";
    }
    else
    {
      int v179 = "content";
    }
    *(void *)(v19 + 72) = sub_1B0DA32B4(&v213, "%Q.'%q_%s'", *(void *)(v19 + 8), *(void *)(v19 + 16), v179);
    uint64_t v15 = v213;
    if (v213) {
      goto LABEL_27;
    }
    goto LABEL_481;
  }
  uint64_t v205 = (void *)(v19 + 104);
  uint64_t v38 = 3;
  do
  {
    int v39 = *(char **)(a5 + 8 * v38);
    *(void *)&long long v215 = 0;
    int v212 = 0;
    int v211 = 0;
    unint64_t v40 = sub_1B0DA30B4(&v213, v39, (unsigned __int8 **)&v215, &v211);
    uint64_t v207 = v38;
    if (!v40)
    {
LABEL_40:
      uint64_t v15 = v213;
      if (v213) {
        goto LABEL_78;
      }
LABEL_75:
      int v57 = sqlite3_mprintf("parse error in \"%s\"");
LABEL_76:
      *unsigned int v208 = v57;
      uint64_t v15 = 1;
      goto LABEL_77;
    }
    do
    {
      int v42 = *v40++;
      int v41 = v42;
    }
    while (v42 == 32);
    if (v41 == 61)
    {
      if (v211) {
        goto LABEL_40;
      }
    }
    else
    {
      --v40;
    }
    uint64_t v43 = v40 - 1;
    do
    {
      int v45 = *++v43;
      int v44 = v45;
    }
    while (v45 == 32);
    if (v44)
    {
      unsigned int v214 = 0;
      uint64_t v46 = sub_1B0DA30B4(&v213, v43, (unsigned __int8 **)&v212, &v214);
      if (v46)
      {
        if (*v46) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v46;
        }
      }
      else
      {
        uint64_t v43 = 0;
      }
    }
    uint64_t v15 = v213;
    if (v213) {
      goto LABEL_78;
    }
    if (!v43) {
      goto LABEL_75;
    }
    uint64_t v47 = v215;
    if (v41 != 61)
    {
      uint64_t v34 = v208;
      if (!(void)v215)
      {
LABEL_98:
        if (!v212)
        {
          uint64_t v15 = 0;
          goto LABEL_110;
        }
        for (uint64_t i = 0; ; ++i)
        {
          uint64_t v69 = v212[i];
          uint64_t v70 = aUnindexed[i];
          if (v69 == v70)
          {
            if (!v212[i])
            {
              uint64_t v15 = 0;
              *(unsigned char *)(*(void *)(v19 + 40) + *(int *)(v19 + 24)) = 1;
LABEL_110:
              uint64_t v71 = *(void *)(v19 + 32);
              uint64_t v72 = *(int *)(v19 + 24);
              *(_DWORD *)(v19 + 24) = v72 + 1;
              *(void *)(v71 + 8 * v72) = v47;
              unsigned int v213 = v15;
              goto LABEL_160;
            }
          }
          else if (byte_1B0DE1758[v69] != byte_1B0DE1758[v70])
          {
            __int16 v67 = sqlite3_mprintf("unrecognized column option: %s");
            goto LABEL_109;
          }
        }
      }
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v61 = *(unsigned __int8 *)(v215 + j);
        uint64_t v62 = aRank[j];
        if (v61 == v62)
        {
          if (!*(unsigned char *)(v215 + j))
          {
LABEL_97:
            __int16 v67 = sqlite3_mprintf("reserved fts5 column name: %s");
LABEL_109:
            *unsigned int v208 = v67;
            uint64_t v15 = 1;
            goto LABEL_110;
          }
        }
        else if (byte_1B0DE1758[v61] != byte_1B0DE1758[v62])
        {
          __int16 v63 = (unsigned char *)v215;
          for (uint64_t k = "rowid"; ; ++k)
          {
            uint64_t v65 = *v63;
            uint64_t v66 = *(unsigned __int8 *)k;
            if (v65 == v66)
            {
              if (!*v63) {
                goto LABEL_97;
              }
            }
            else if (byte_1B0DE1758[v65] != byte_1B0DE1758[v66])
            {
              goto LABEL_98;
            }
            ++v63;
          }
        }
      }
    }
    if ((void)v215) {
      unint64_t v48 = (char *)v215;
    }
    else {
      unint64_t v48 = &byte_1B0DE9952;
    }
    if (v212) {
      int v49 = v212;
    }
    else {
      int v49 = &byte_1B0DE9952;
    }
    unsigned int v214 = 0;
    int v50 = strlen(v48);
    if (v50 < 0)
    {
      sub_1B0CE1978(35844);
      goto LABEL_118;
    }
    if (!v50) {
      goto LABEL_118;
    }
    uint64_t v51 = (v50 - 1);
    int v52 = *v48;
    unsigned int v53 = v52 & 0xFFFFFFDF;
    if ((v52 & 0xFFFFFFDF) != 0x50)
    {
      int v56 = 112;
      int v54 = *v48;
      goto LABEL_117;
    }
    if (v50 == 1) {
      goto LABEL_118;
    }
    int v54 = v48[1];
    if ((v54 & 0xFFFFFFDF) != 0x52)
    {
      int v56 = 114;
      goto LABEL_117;
    }
    char v55 = &aPrefix[v51];
    if (&aPrefix[v51] == "refix") {
      goto LABEL_118;
    }
    int v54 = v48[2];
    if ((v54 & 0xFFFFFFDF) != 0x45)
    {
      int v56 = 101;
LABEL_116:
      a1 = v206;
      goto LABEL_117;
    }
    a1 = v206;
    if (v55 == "efix") {
      goto LABEL_118;
    }
    int v54 = v48[3];
    if ((v54 & 0xFFFFFFDF) != 0x46)
    {
      int v56 = 102;
      goto LABEL_116;
    }
    a1 = v206;
    if (v55 == "fix") {
      goto LABEL_118;
    }
    int v54 = v48[4];
    if ((v54 & 0xFFFFFFDF) != 0x49)
    {
      int v56 = 105;
      goto LABEL_116;
    }
    a1 = v206;
    if (v55 == "ix") {
      goto LABEL_118;
    }
    int v54 = v48[5];
    if ((v54 & 0xFFFFFFDF) != 0x58)
    {
      int v56 = 120;
      goto LABEL_116;
    }
    a1 = v206;
    if (v55 == "x") {
      goto LABEL_118;
    }
    int v56 = 0;
    int v54 = v48[6];
LABEL_117:
    if (v56 != byte_1B0DE1758[v54])
    {
      if (v53 != 84)
      {
        int v83 = 116;
        int v81 = *v48;
        goto LABEL_177;
      }
      if (v50 == 1) {
        goto LABEL_178;
      }
      int v81 = v48[1];
      if ((v81 & 0xFFFFFFDF) != 0x4F)
      {
        int v83 = 111;
        goto LABEL_177;
      }
      uint64_t v82 = &aTokenize[v51];
      if (&aTokenize[v51] == "okenize") {
        goto LABEL_178;
      }
      int v81 = v48[2];
      if ((v81 & 0xFFFFFFDF) != 0x4B)
      {
        int v83 = 107;
        goto LABEL_177;
      }
      if (v82 == "kenize") {
        goto LABEL_178;
      }
      int v81 = v48[3];
      if ((v81 & 0xFFFFFFDF) != 0x45) {
        goto LABEL_173;
      }
      if (v82 == "enize") {
        goto LABEL_178;
      }
      int v81 = v48[4];
      if ((v81 & 0xFFFFFFDF) == 0x4E)
      {
        if (v82 == "nize") {
          goto LABEL_178;
        }
        int v81 = v48[5];
        if ((v81 & 0xFFFFFFDF) == 0x49)
        {
          if (v82 == "ize") {
            goto LABEL_178;
          }
          int v81 = v48[6];
          if ((v81 & 0xFFFFFFDF) == 0x5A)
          {
            if (v82 == "ze") {
              goto LABEL_178;
            }
            int v81 = v48[7];
            if ((v81 & 0xFFFFFFDF) == 0x45)
            {
              if (v82 != "e")
              {
                int v83 = 0;
                int v81 = v48[8];
                goto LABEL_177;
              }
LABEL_178:
              size_t v86 = strlen(v49);
              size_t v87 = v86 + 1;
              uint64_t v88 = 8 * (v86 + 1);
              if (sqlite3_initialize() || (uint64_t v92 = (const char **)sub_1B0C7FC94(v88)) == 0)
              {
                if (v88 > 0)
                {
                  uint64_t v15 = 7;
                  goto LABEL_299;
                }
                double v93 = 0;
              }
              else
              {
                double v93 = v92;
                bzero(v92, v88);
              }
              if (sqlite3_initialize() || (int v204 = (void *)sub_1B0C7FC94(2 * v87)) == 0)
              {
                int v204 = 0;
                if (v86 >= 0x7FFFFFFFFFFFFFFFLL) {
                  uint64_t v15 = 0;
                }
                else {
                  uint64_t v15 = 7;
                }
              }
              else
              {
                bzero(v204, 2 * v87);
                if (!v93)
                {
                  uint64_t v15 = 0;
                  goto LABEL_211;
                }
                if (*v205)
                {
                  *unsigned int v208 = sqlite3_mprintf("multiple tokenize=... directives");
                  uint64_t v15 = 1;
                  goto LABEL_204;
                }
                uint64_t v203 = 0;
                int v96 = *v49;
                uint64_t v97 = (unsigned __int8 *)v204;
                if (v96 == 32)
                {
                  do
                  {
                    int v98 = *++v49;
                    int v96 = v98;
                  }
                  while (v98 == 32);
                  goto LABEL_229;
                }
                while (v96)
                {
LABEL_229:
                  if (v96 == 39)
                  {
                    __int16 v99 = sub_1B0DA3890((unsigned __int8 *)v49);
                    if (!v99) {
                      goto LABEL_256;
                    }
                  }
                  else
                  {
                    uint64_t v100 = 0;
                    while ((v96 & 0x80) != 0 || byte_1B0DE690B[v96])
                      int v96 = v49[++v100];
                    if (!v100)
                    {
LABEL_256:
                      *unsigned int v208 = sqlite3_mprintf("parse error in tokenize directive");
                      uint64_t v15 = 1;
                      goto LABEL_203;
                    }
                    __int16 v99 = &v49[v100];
                  }
                  int64_t v101 = v99 - v49;
                  memcpy(v97, v49, v99 - v49);
                  v93[v203] = (const char *)v97;
                  int v102 = *v97;
                  if ((v102 - 34) <= 0x3E
                    && ((1 << (v102 - 34)) & 0x4200000000000021) != 0)
                  {
                    if (v102 == 91) {
                      int v102 = 93;
                    }
                    int v104 = v97[1];
                    if (v97[1])
                    {
                      uint64_t v105 = 0;
                      int v106 = 1;
                      while (1)
                      {
                        uint64_t v107 = v106 + 1;
                        if (v104 == v102)
                        {
                          if (v97[v107] != v102)
                          {
LABEL_250:
                            uint64_t v108 = v105;
                            goto LABEL_252;
                          }
                          LODWORD(v107) = v106 + 2;
                          LOBYTE(v104) = v102;
                        }
                        v97[v105++] = v104;
                        int v104 = v97[(int)v107];
                        int v106 = v107;
                        if (!v97[(int)v107]) {
                          goto LABEL_250;
                        }
                      }
                    }
                    uint64_t v108 = 0;
LABEL_252:
                    v97[v108] = 0;
                  }
                  int v49 = v99 - 1;
                  do
                  {
                    int v109 = *++v49;
                    int v96 = v109;
                  }
                  while (v109 == 32);
                  v97 += v101 + 1;
                  ++v203;
                }
                if (v203)
                {
                  unsigned int v110 = *v93;
                  if (*v93)
                  {
                    for (uint64_t m = *(unsigned __int8 **)(a3 + 56); m; uint64_t m = (unsigned __int8 *)*((void *)m + 6))
                    {
                      int v112 = *(unsigned __int8 **)m;
                      if (*(void *)m)
                      {
                        for (n = *v93; ; ++n)
                        {
                          uint64_t v114 = *(unsigned __int8 *)n;
                          uint64_t v115 = *v112;
                          if (v114 == v115)
                          {
                            if (!*n) {
                              goto LABEL_270;
                            }
                          }
                          else if (byte_1B0DE1758[v114] != byte_1B0DE1758[v115])
                          {
                            break;
                          }
                          ++v112;
                        }
                      }
                    }
                    goto LABEL_278;
                  }
                }
                uint64_t m = *(unsigned __int8 **)(a3 + 64);
LABEL_270:
                if (!m)
                {
                  unsigned int v110 = *v93;
LABEL_278:
                  uint64_t v121 = sqlite3_mprintf("no such tokenizer: %s", v110);
                  uint64_t v15 = 1;
                  goto LABEL_279;
                }
                unint64_t v118 = (unsigned __int8 *)*((void *)m + 2);
                unint64_t v117 = (uint64_t (**)(uint64_t, uint64_t, int, void *))(m + 16);
                unint64_t v116 = v118;
                if (v203) {
                  uint64_t v119 = (v203 - 1);
                }
                else {
                  uint64_t v119 = 0;
                }
                uint64_t v120 = ((uint64_t (*)(void, const char **, uint64_t, void *))v116)(*(v117 - 1), v93 + 1, v119, v205);
                *(void *)(v19 + 112) = v117;
                if (v120)
                {
                  uint64_t v15 = v120;
                  if (!v208)
                  {
LABEL_280:
                    *uint64_t v205 = 0;
                    *(void *)(v19 + 112) = 0;
                    goto LABEL_203;
                  }
                  uint64_t v121 = sqlite3_mprintf("error in tokenizer constructor");
LABEL_279:
                  *unsigned int v208 = v121;
                  goto LABEL_280;
                }
                if (*v117 == sub_1B0DA3A58)
                {
                  if (*(_DWORD *)*v205) {
                    int v135 = 65;
                  }
                  else {
                    int v135 = 66;
                  }
                }
                else
                {
                  int v135 = 0;
                }
                uint64_t v15 = 0;
                *(_DWORD *)(v19 + 124) = v135;
              }
LABEL_203:
              if (!v93) {
                goto LABEL_210;
              }
LABEL_204:
              uint64_t v94 = (void (**)(const char **))&off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v93);
                --qword_1EB220150;
                off_1EB21C9E8(v93);
                double v93 = (const char **)xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0)
                {
LABEL_210:
                  a1 = v206;
                  if (v204)
                  {
LABEL_211:
                    uint64_t v95 = (void (**)(void *))&off_1EB21C9E8;
                    if (dword_1EB21C9C0)
                    {
                      if ((void)xmmword_1EB2201B0) {
                        xmmword_1EB21CA40(xmmword_1EB2201B0);
                      }
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(v204);
                      --qword_1EB220150;
                      off_1EB21C9E8(v204);
                      int v204 = (void *)xmmword_1EB2201B0;
                      if (!(void)xmmword_1EB2201B0) {
                        goto LABEL_299;
                      }
                      uint64_t v95 = (void (**)(void *))&xmmword_1EB21CA50;
                    }
                    (*v95)(v204);
LABEL_299:
                    a1 = v206;
                  }
LABEL_77:
                  unsigned int v213 = v15;
LABEL_78:
                  uint64_t v58 = v215;
                  if (!(void)v215) {
                    goto LABEL_159;
                  }
LABEL_79:
                  __int16 v59 = &off_1EB21C9E8;
                  uint64_t v34 = v208;
                  if (dword_1EB21C9C0)
                  {
                    if ((void)xmmword_1EB2201B0) {
                      xmmword_1EB21CA40(xmmword_1EB2201B0);
                    }
                    qword_1EB220108[0] -= (int)off_1EB21C9F8(v58);
                    --qword_1EB220150;
                    off_1EB21C9E8(v58);
                    uint64_t v58 = xmmword_1EB2201B0;
                    if (!(void)xmmword_1EB2201B0)
                    {
                      uint64_t v34 = v208;
                      goto LABEL_160;
                    }
                    __int16 v59 = &xmmword_1EB21CA50;
                    uint64_t v34 = v208;
                  }
                  (*v59)(v58);
                  goto LABEL_160;
                }
                uint64_t v94 = (void (**)(const char **))&xmmword_1EB21CA50;
              }
              (*v94)(v93);
              goto LABEL_210;
            }
LABEL_173:
            int v83 = 101;
            goto LABEL_177;
          }
          int v83 = 122;
        }
        else
        {
          int v83 = 105;
        }
      }
      else
      {
        int v83 = 110;
      }
LABEL_177:
      if (v83 == byte_1B0DE1758[v81]) {
        goto LABEL_178;
      }
      if (v53 != 67)
      {
        int v91 = 99;
        int v89 = *v48;
        goto LABEL_282;
      }
      if (v50 == 1) {
        goto LABEL_283;
      }
      int v89 = v48[1];
      if ((v89 & 0xFFFFFFDF) != 0x4F)
      {
        int v91 = 111;
        goto LABEL_282;
      }
      double v90 = &aContent[v51];
      if (&aContent[v51] == "ontent")
      {
LABEL_283:
        if (!*(_DWORD *)(v19 + 64))
        {
          if (*v49)
          {
            *(_DWORD *)(v19 + 64) = 2;
            *(void *)(v19 + 72) = sub_1B0DA32B4(&v214, "%Q.%Q", *(void *)(v19 + 8), v49);
            uint64_t v15 = v214;
          }
          else
          {
            uint64_t v15 = 0;
            *(_DWORD *)(v19 + 64) = 1;
          }
          goto LABEL_299;
        }
        uint64_t v122 = sqlite3_mprintf("multiple content=... directives", v201, v202);
        goto LABEL_298;
      }
      int v89 = v48[2];
      if ((v89 & 0xFFFFFFDF) == 0x4E)
      {
        if (v90 == "ntent") {
          goto LABEL_283;
        }
        int v89 = v48[3];
        if ((v89 & 0xFFFFFFDF) != 0x54) {
          goto LABEL_261;
        }
        if (v90 == "tent") {
          goto LABEL_283;
        }
        int v89 = v48[4];
        if ((v89 & 0xFFFFFFDF) != 0x45)
        {
          int v91 = 101;
          goto LABEL_282;
        }
        if (v90 == "ent") {
          goto LABEL_283;
        }
        int v89 = v48[5];
        if ((v89 & 0xFFFFFFDF) == 0x4E)
        {
          if (v90 == "nt") {
            goto LABEL_283;
          }
          int v89 = v48[6];
          if ((v89 & 0xFFFFFFDF) == 0x54)
          {
            if (v90 != "t")
            {
              int v91 = 0;
              int v89 = v48[7];
LABEL_282:
              if (v91 == byte_1B0DE1758[v89]) {
                goto LABEL_283;
              }
              uint64_t v123 = 0;
              double v124 = v48 + 18;
              while (1)
              {
                if (v123 == 18)
                {
                  int v125 = 0;
                  goto LABEL_294;
                }
                int v125 = byte_1B0DE1758[aContentlessDel_1[v123]];
                if (v125 != byte_1B0DE1758[v48[v123]]) {
                  break;
                }
                if (v51 + 1 == ++v123) {
                  goto LABEL_295;
                }
              }
              double v124 = &v48[v123];
LABEL_294:
              if (v125 == byte_1B0DE1758[*v124])
              {
LABEL_295:
                int v126 = *v49;
                if ((v126 & 0xFE) == 0x30 && !v49[1])
                {
                  uint64_t v15 = 0;
                  *(_DWORD *)(v19 + 68) = v126 == 49;
                  goto LABEL_299;
                }
                uint64_t v122 = sqlite3_mprintf("malformed contentless_delete=... directive", v201, v202);
                goto LABEL_298;
              }
              if (v53 != 67)
              {
                int v131 = 99;
                int v127 = *v48;
                goto LABEL_331;
              }
              if (v50 == 1) {
                goto LABEL_365;
              }
              int v127 = v48[1];
              if ((v127 & 0xFFFFFFDF) != 0x4F)
              {
                int v131 = 111;
                goto LABEL_331;
              }
              int v128 = &aContentRowid[v51];
              if (&aContentRowid[v51] == "ontent_rowid") {
                goto LABEL_365;
              }
              int v127 = v48[2];
              if ((v127 & 0xFFFFFFDF) != 0x4E)
              {
                int v130 = 110;
                int v129 = v48[2];
                goto LABEL_364;
              }
              if (v128 == "ntent_rowid") {
                goto LABEL_365;
              }
              int v129 = v48[3];
              if ((v129 & 0xFFFFFFDF) == 0x54)
              {
                if (v128 == "tent_rowid") {
                  goto LABEL_365;
                }
                int v129 = v48[4];
                if ((v129 & 0xFFFFFFDF) != 0x45)
                {
                  int v130 = 101;
                  goto LABEL_364;
                }
                if (v128 == "ent_rowid") {
                  goto LABEL_365;
                }
                int v129 = v48[5];
                if ((v129 & 0xFFFFFFDF) != 0x4E)
                {
                  int v130 = 110;
                  goto LABEL_364;
                }
                if (v128 == "nt_rowid") {
                  goto LABEL_365;
                }
                int v129 = v48[6];
                if ((v129 & 0xFFFFFFDF) == 0x54)
                {
                  if (v128 == "t_rowid") {
                    goto LABEL_365;
                  }
                  int v129 = v48[7];
                  if (v129 == 95)
                  {
                    if (v128 == "_rowid") {
                      goto LABEL_365;
                    }
                    int v129 = v48[8];
                    if ((v129 & 0xFFFFFFDF) == 0x52)
                    {
                      if (v128 == "rowid") {
                        goto LABEL_365;
                      }
                      int v129 = v48[9];
                      if ((v129 & 0xFFFFFFDF) == 0x4F)
                      {
                        if (v128 == "owid") {
                          goto LABEL_365;
                        }
                        int v129 = v48[10];
                        if ((v129 & 0xFFFFFFDF) == 0x57)
                        {
                          if (v128 == "wid") {
                            goto LABEL_365;
                          }
                          int v129 = v48[11];
                          if ((v129 & 0xFFFFFFDF) == 0x49)
                          {
                            if (v128 == "id") {
                              goto LABEL_365;
                            }
                            int v129 = v48[12];
                            if ((v129 & 0xFFFFFFDF) == 0x44)
                            {
                              if (v128 != "d")
                              {
                                int v130 = 0;
                                int v129 = v48[13];
                                goto LABEL_364;
                              }
LABEL_365:
                              if (!*(void *)(v19 + 80))
                              {
                                unsigned int v136 = strlen(v49);
                                int v137 = sqlite3_initialize();
                                uint64_t v138 = 0;
                                uint64_t v15 = 7;
                                if ((v136 & 0x80000000) == 0 && !v137)
                                {
                                  uint64_t v139 = (unsigned char *)sub_1B0C7FC94(v136 + 1);
                                  uint64_t v138 = v139;
                                  if (v139)
                                  {
                                    memcpy(v139, v49, v136);
                                    uint64_t v15 = 0;
                                    v138[v136] = 0;
                                  }
                                }
                                *(void *)(v19 + 80) = v138;
                                goto LABEL_299;
                              }
                              uint64_t v122 = sqlite3_mprintf("multiple content_rowid=... directives", v201, v202);
                              goto LABEL_298;
                            }
                            int v130 = 100;
                          }
                          else
                          {
                            int v130 = 105;
                          }
                        }
                        else
                        {
                          int v130 = 119;
                        }
                      }
                      else
                      {
                        int v130 = 111;
                      }
                    }
                    else
                    {
                      int v130 = 114;
                    }
                  }
                  else
                  {
                    int v130 = 95;
                  }
LABEL_364:
                  if (v130 == byte_1B0DE1758[v129]) {
                    goto LABEL_365;
                  }
                  if (v51 == 1) {
                    goto LABEL_332;
                  }
                  if ((v127 & 0xFFFFFFDF) == 0x4C)
                  {
                    uint64_t v140 = &aColumnsize[v51];
                    if (&aColumnsize[v51] == "lumnsize") {
                      goto LABEL_332;
                    }
                    int v127 = v48[3];
                    if ((v127 & 0xFFFFFFDF) == 0x55)
                    {
                      if (v140 == "umnsize") {
                        goto LABEL_332;
                      }
                      int v127 = v48[4];
                      if ((v127 & 0xFFFFFFDF) == 0x4D)
                      {
                        if (v140 == "mnsize") {
                          goto LABEL_332;
                        }
                        int v127 = v48[5];
                        if ((v127 & 0xFFFFFFDF) == 0x4E)
                        {
                          if (v140 == "nsize") {
                            goto LABEL_332;
                          }
                          int v127 = v48[6];
                          if ((v127 & 0xFFFFFFDF) == 0x53)
                          {
                            if (v140 == "size") {
                              goto LABEL_332;
                            }
                            int v127 = v48[7];
                            if ((v127 & 0xFFFFFFDF) == 0x49)
                            {
                              if (v140 == "ize") {
                                goto LABEL_332;
                              }
                              int v127 = v48[8];
                              if ((v127 & 0xFFFFFFDF) == 0x5A)
                              {
                                if (v140 == "ze") {
                                  goto LABEL_332;
                                }
                                int v127 = v48[9];
                                if ((v127 & 0xFFFFFFDF) == 0x45)
                                {
                                  if (v140 != "e")
                                  {
                                    int v131 = 0;
                                    int v127 = v48[10];
                                    goto LABEL_331;
                                  }
LABEL_332:
                                  int v132 = *v49;
                                  if ((v132 & 0xFE) == 0x30 && !v49[1])
                                  {
                                    uint64_t v15 = 0;
                                    *(_DWORD *)(v19 + 88) = v132 == 49;
                                    goto LABEL_299;
                                  }
                                  uint64_t v122 = sqlite3_mprintf("malformed columnsize=... directive", v201, v202);
                                  goto LABEL_298;
                                }
                                int v131 = 101;
                              }
                              else
                              {
                                int v131 = 122;
                              }
                            }
                            else
                            {
                              int v131 = 105;
                            }
                          }
                          else
                          {
                            int v131 = 115;
                          }
                        }
                        else
                        {
                          int v131 = 110;
                        }
                      }
                      else
                      {
                        int v131 = 109;
                      }
                    }
                    else
                    {
                      int v131 = 117;
                    }
                  }
                  else
                  {
                    int v131 = 108;
                  }
LABEL_331:
                  if (v131 == byte_1B0DE1758[v127]) {
                    goto LABEL_332;
                  }
                  if (v53 == 68)
                  {
                    if (v50 == 1) {
                      goto LABEL_395;
                    }
                    int v52 = v48[1];
                    if ((v52 & 0xFFFFFFDF) == 0x45)
                    {
                      uint64_t v133 = &aDetail[v51];
                      if (v133 == "etail") {
                        goto LABEL_395;
                      }
                      int v52 = v48[2];
                      if ((v52 & 0xFFFFFFDF) == 0x54)
                      {
                        if (v133 == "tail") {
                          goto LABEL_395;
                        }
                        int v52 = v48[3];
                        if ((v52 & 0xFFFFFFDF) == 0x41)
                        {
                          if (v133 == "ail") {
                            goto LABEL_395;
                          }
                          int v52 = v48[4];
                          if ((v52 & 0xFFFFFFDF) == 0x49)
                          {
                            if (v133 == "il") {
                              goto LABEL_395;
                            }
                            int v52 = v48[5];
                            if ((v52 & 0xFFFFFFDF) == 0x4C)
                            {
                              if (v133 == "l") {
                                goto LABEL_395;
                              }
                              int v134 = 0;
                              int v52 = v48[6];
                            }
                            else
                            {
                              int v134 = 108;
                            }
                          }
                          else
                          {
                            int v134 = 105;
                          }
                        }
                        else
                        {
                          int v134 = 97;
                        }
                      }
                      else
                      {
                        int v134 = 116;
                      }
                    }
                    else
                    {
                      int v134 = 101;
                    }
                  }
                  else
                  {
                    int v134 = 100;
                  }
                  if (v134 != byte_1B0DE1758[v52])
                  {
                    uint64_t v122 = sqlite3_mprintf("unrecognized option: \"%.*s\"");
LABEL_298:
                    *unsigned int v208 = v122;
                    uint64_t v15 = 1;
                    goto LABEL_299;
                  }
LABEL_395:
                  int v141 = strlen(v49);
                  if (v141 < 0)
                  {
                    sub_1B0CE1978(35844);
                    sub_1B0CE1978(35844);
                    goto LABEL_466;
                  }
                  if (!v141)
                  {
LABEL_466:
                    uint64_t v122 = sqlite3_mprintf("malformed detail=... directive", v201, v202);
                    goto LABEL_298;
                  }
                  uint64_t v142 = (v141 - 1);
                  uint64_t v143 = *v49;
                  uint64_t v144 = &byte_1B0DE1758[v143];
                  int v145 = v143 & 0xFFFFFFDF;
                  if (v145 == 78)
                  {
                    if (v141 == 1) {
                      goto LABEL_413;
                    }
                    uint64_t v146 = v49[1];
                    if ((v146 & 0xFFFFFFDF) == 0x4F)
                    {
                      uint64_t v147 = &aNone[v142];
                      if (&aNone[v142] == "one") {
                        goto LABEL_413;
                      }
                      uint64_t v148 = v49[2];
                      if ((v148 & 0xFFFFFFDF) == 0x4E)
                      {
                        if (v147 == "ne") {
                          goto LABEL_413;
                        }
                        uint64_t v149 = v49[3];
                        if ((v149 & 0xFFFFFFDF) == 0x45)
                        {
                          if (v147 == "e") {
                            goto LABEL_413;
                          }
                          int v150 = 0;
                          int v151 = &byte_1B0DE1758[v49[4]];
                        }
                        else
                        {
                          int v151 = &byte_1B0DE1758[v149];
                          int v150 = 101;
                        }
                      }
                      else
                      {
                        int v151 = &byte_1B0DE1758[v148];
                        int v150 = 110;
                      }
                    }
                    else
                    {
                      int v151 = &byte_1B0DE1758[v146];
                      int v150 = 111;
                    }
                  }
                  else
                  {
                    int v150 = 110;
                    int v151 = v144;
                  }
                  if (v150 != *v151)
                  {
                    char v153 = 0;
                    int v152 = -1;
LABEL_415:
                    if (v145 == 70)
                    {
                      if (v141 == 1) {
                        goto LABEL_425;
                      }
                      uint64_t v154 = v49[1];
                      if ((v154 & 0xFFFFFFDF) == 0x55)
                      {
                        int v155 = &aFull[v142];
                        if (&aFull[v142] == "ull") {
                          goto LABEL_425;
                        }
                        uint64_t v156 = v49[2];
                        if ((v156 & 0xFFFFFFDF) == 0x4C)
                        {
                          if (v155 == "ll") {
                            goto LABEL_425;
                          }
                          uint64_t v156 = v49[3];
                          if ((v156 & 0xFFFFFFDF) == 0x4C)
                          {
                            if (v155 != "l")
                            {
                              int v157 = 0;
                              int v158 = &byte_1B0DE1758[v49[4]];
                              goto LABEL_429;
                            }
LABEL_425:
                            if ((v153 & 1) == 0)
                            {
                              uint64_t v15 = 0;
                              *(_DWORD *)(v19 + 92) = 0;
                              goto LABEL_299;
                            }
                            goto LABEL_466;
                          }
                        }
                        int v158 = &byte_1B0DE1758[v156];
                        int v157 = 108;
                      }
                      else
                      {
                        int v158 = &byte_1B0DE1758[v154];
                        int v157 = 117;
                      }
                    }
                    else
                    {
                      int v157 = 102;
                      int v158 = v144;
                    }
LABEL_429:
                    if (v157 == *v158) {
                      int v152 = 0;
                    }
                    else {
                      char v153 = 0;
                    }
                    if ((v153 & 1) == 0)
                    {
                      if (v145 == 67)
                      {
                        if (v141 == 1) {
                          goto LABEL_462;
                        }
                        uint64_t v159 = v49[1];
                        if ((v159 & 0xFFFFFFDF) == 0x4F)
                        {
                          int v160 = &aColumns[v142];
                          if (&aColumns[v142] == "olumns") {
                            goto LABEL_462;
                          }
                          uint64_t v161 = v49[2];
                          if ((v161 & 0xFFFFFFDF) == 0x4C)
                          {
                            if (v160 == "lumns") {
                              goto LABEL_462;
                            }
                            uint64_t v162 = v49[3];
                            if ((v162 & 0xFFFFFFDF) == 0x55)
                            {
                              if (v160 == "umns") {
                                goto LABEL_462;
                              }
                              uint64_t v163 = v49[4];
                              if ((v163 & 0xFFFFFFDF) == 0x4D)
                              {
                                if (v160 == "mns") {
                                  goto LABEL_462;
                                }
                                uint64_t v164 = v49[5];
                                if ((v164 & 0xFFFFFFDF) == 0x4E)
                                {
                                  if (v160 == "ns") {
                                    goto LABEL_462;
                                  }
                                  uint64_t v165 = v49[6];
                                  if ((v165 & 0xFFFFFFDF) == 0x53)
                                  {
                                    if (v160 == "s") {
                                      goto LABEL_462;
                                    }
                                    int v166 = 0;
                                    uint64_t v144 = &byte_1B0DE1758[v49[7]];
                                  }
                                  else
                                  {
                                    uint64_t v144 = &byte_1B0DE1758[v165];
                                    int v166 = 115;
                                  }
                                }
                                else
                                {
                                  uint64_t v144 = &byte_1B0DE1758[v164];
                                  int v166 = 110;
                                }
                              }
                              else
                              {
                                uint64_t v144 = &byte_1B0DE1758[v163];
                                int v166 = 109;
                              }
                            }
                            else
                            {
                              uint64_t v144 = &byte_1B0DE1758[v162];
                              int v166 = 117;
                            }
                          }
                          else
                          {
                            uint64_t v144 = &byte_1B0DE1758[v161];
                            int v166 = 108;
                          }
                        }
                        else
                        {
                          uint64_t v144 = &byte_1B0DE1758[v159];
                          int v166 = 111;
                        }
                      }
                      else
                      {
                        int v166 = 99;
                      }
                      if (v166 == *v144)
                      {
LABEL_462:
                        if (v152 < 0)
                        {
                          uint64_t v15 = 0;
                          *(_DWORD *)(v19 + 92) = 2;
                          goto LABEL_299;
                        }
                        goto LABEL_466;
                      }
                      *(_DWORD *)(v19 + 92) = v152;
                      if ((v152 & 0x80000000) == 0)
                      {
                        uint64_t v15 = 0;
                        goto LABEL_299;
                      }
                    }
                    goto LABEL_466;
                  }
LABEL_413:
                  int v152 = 1;
                  char v153 = 1;
                  goto LABEL_415;
                }
              }
              int v130 = 116;
              goto LABEL_364;
            }
            goto LABEL_283;
          }
LABEL_261:
          int v91 = 116;
          goto LABEL_282;
        }
      }
      int v91 = 110;
      goto LABEL_282;
    }
LABEL_118:
    uint64_t v73 = *(_OWORD **)(v19 + 56);
    if (!v73)
    {
      if (!sqlite3_initialize())
      {
        uint64_t v73 = (_OWORD *)sub_1B0C7FC94(124);
        if (v73)
        {
          *(_OWORD *)((char *)v73 + 108) = 0u;
          v73[5] = 0u;
          v73[6] = 0u;
          v73[3] = 0u;
          v73[4] = 0u;
          v73[1] = 0u;
          v73[2] = 0u;
          _OWORD *v73 = 0u;
          *(void *)(v19 + 56) = v73;
          goto LABEL_119;
        }
      }
      *(void *)(v19 + 56) = 0;
      uint64_t v15 = 7;
      goto LABEL_77;
    }
LABEL_119:
    for (iuint64_t i = 0; ; iuint64_t i = 1)
    {
      --v49;
      do
      {
        unsigned int v76 = *++v49;
        unsigned int v75 = v76;
      }
      while (v76 == 32);
      if (v75 != 44 || (ii & 1) == 0) {
        break;
      }
      do
      {
        unsigned int v77 = *++v49;
        unsigned int v75 = v77;
      }
      while (v77 == 32);
LABEL_126:
      if (v75 - 58 <= 0xFFFFFFF5)
      {
        int v57 = sqlite3_mprintf("malformed prefix=... directive", v201);
        goto LABEL_76;
      }
      uint64_t v78 = *(int *)(v19 + 48);
      if (v78 == 31)
      {
        int v57 = sqlite3_mprintf("too many prefix indexes (max %d)");
        goto LABEL_76;
      }
      int v79 = 0;
      do
      {
        if (v75 > 0x39) {
          break;
        }
        if (v79 > 999) {
          break;
        }
        int v79 = v75 + 10 * v79 - 48;
        int v80 = *++v49;
        unsigned int v75 = v80;
      }
      while (v80 > 47);
      if ((v79 - 1000) <= 0xFFFFFC18)
      {
        int v57 = sqlite3_mprintf("prefix length out of range (max 999)");
        goto LABEL_76;
      }
      *((_DWORD *)v73 + v78) = v79;
      ++*(_DWORD *)(v19 + 48);
    }
    if (v75) {
      goto LABEL_126;
    }
    uint64_t v15 = 0;
    unsigned int v213 = 0;
    uint64_t v58 = v215;
    if ((void)v215) {
      goto LABEL_79;
    }
LABEL_159:
    uint64_t v34 = v208;
LABEL_160:
    int v84 = (unsigned __int8 *)v212;
    if (v212)
    {
      unint64_t v85 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_166;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v84);
      --qword_1EB220150;
      off_1EB21C9E8(v84);
      int v84 = (unsigned __int8 *)xmmword_1EB2201B0;
      a1 = v206;
      if ((void)xmmword_1EB2201B0)
      {
        unint64_t v85 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_166:
        (*v85)(v84);
      }
    }
    if (v15) {
      break;
    }
    uint64_t v38 = v207 + 1;
  }
  while (v207 + 1 < (uint64_t)__s);
  if (v15) {
    goto LABEL_27;
  }
  if (!*(_DWORD *)(v19 + 68)) {
    goto LABEL_479;
  }
  if (*(_DWORD *)(v19 + 64) != 1)
  {
LABEL_489:
    uint64_t v37 = sqlite3_mprintf("contentless_delete=1 requires a contentless table", v201);
    goto LABEL_33;
  }
  if (*(_DWORD *)(v19 + 88)) {
    goto LABEL_479;
  }
  uint64_t v37 = sqlite3_mprintf("contentless_delete=1 is incompatible with columnsize=0");
LABEL_33:
  unsigned char *v34 = v37;
  uint64_t v15 = 1;
LABEL_27:
  sub_1B0DA3310(v19);
LABEL_4:
  sub_1B0DA2FD4((uint64_t)v14);
  uint64_t v14 = 0;
LABEL_5:
  *a6 = v14;
  return v15;
}

_DWORD *sub_1B0DA2F38(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    *(void *)(a1 + 64) = 0;
    uint64_t v3 = (sqlite3_stmt *)v2[3];
    uint64_t v4 = (void *)v2[4];
    uint64_t v5 = v4[3];
    if (v5) {
      xmmword_1EB21CA40(v5);
    }
    sub_1B0D05C10(v4, v2);
    uint64_t v6 = v4[3];
    if (v6) {
      xmmword_1EB21CA50(v6);
    }
    sqlite3_finalize(v3);
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (v7)
  {
    sub_1B0DA5094(v7);
    *(_DWORD *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 56) = 0;
  }
  *(_DWORD *)(a1 + 52) = 0;
  uint64_t result = *(_DWORD **)(a1 + 144);
  if (result)
  {
    uint64_t result = sub_1B0DA4EF8(result);
    *(void *)(a1 + 144) = 0;
  }
  return result;
}

uint64_t sub_1B0DA2FD4(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  sub_1B0DA3F58(*(void *)(result + 32));
  sub_1B0DA54B8(*(void *)(v1 + 40));
  sub_1B0DA3310(*(void *)(v1 + 24));
  uint64_t v2 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v2 = &xmmword_1EB21CA50;
LABEL_7:
    uint64_t v3 = *v2;
    return v3(v1);
  }
  return result;
}

char *sub_1B0DA30B4(_DWORD *a1, char *__s, unsigned __int8 **a3, _DWORD *a4)
{
  size_t v8 = strlen(__s);
  if (sqlite3_initialize())
  {
    *a4 = 0;
    *a3 = 0;
LABEL_3:
    uint64_t result = 0;
    *a1 = 7;
    return result;
  }
  size_t v10 = v8 + 1;
  size_t v11 = (unsigned __int8 *)sub_1B0C7FC94(v8 + 1);
  *a4 = 0;
  *a3 = 0;
  if (!v11) {
    goto LABEL_3;
  }
  uint64_t v12 = v11;
  memcpy(v11, __s, v10);
  int v13 = *v12;
  if ((v13 - 34) > 0x3E || ((1 << (v13 - 34)) & 0x4200000000000021) == 0)
  {
    for (uint64_t i = 0; __s[i] < 0 || byte_1B0DE690B[__s[i]]; ++i)
      ;
    if (i)
    {
      uint64_t result = &__s[i];
      v12[i] = 0;
      *a3 = v12;
      return result;
    }
  }
  else
  {
    if (v13 == 91) {
      int v15 = 93;
    }
    else {
      int v15 = *v12;
    }
    int v16 = v12[1];
    if (v12[1])
    {
      uint64_t v17 = 0;
      int v18 = 1;
      do
      {
        uint64_t v19 = v18 + 1;
        if (v16 == v15)
        {
          if (v12[v19] != v15) {
            goto LABEL_21;
          }
          v18 += 2;
          LOBYTE(v16) = v15;
        }
        else
        {
          ++v18;
        }
        v12[v17++] = v16;
        int v16 = v12[v18];
      }
      while (v12[v18]);
      LODWORD(v19) = v18;
    }
    else
    {
      LODWORD(v17) = 0;
      LODWORD(v19) = 1;
    }
LABEL_21:
    v12[v17] = 0;
    *a4 = 1;
    if (__s)
    {
      uint64_t result = &__s[(int)v19];
      *a3 = v12;
      return result;
    }
  }
  int v21 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
    --qword_1EB220150;
    off_1EB21C9E8(v12);
    uint64_t v12 = (unsigned __int8 *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      return 0;
    }
    int v21 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
  }
  (*v21)(v12);
  return 0;
}

char *sub_1B0DA32B4(_DWORD *a1, char *a2, ...)
{
  va_start(va, a2);
  if (*a1) {
    return 0;
  }
  uint64_t result = sqlite3_vmprintf(a2, va);
  if (!result) {
    *a1 = 7;
  }
  return result;
}

uint64_t sub_1B0DA3310(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*(void *)(result + 104)) {
    (*(void (**)(void))(*(void *)(result + 112) + 8))();
  }
  uint64_t v2 = *(void *)(v1 + 8);
  if (v2)
  {
    uint64_t v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_10:
      (*v3)(v2);
      goto LABEL_11;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v3 = &xmmword_1EB21CA50;
      goto LABEL_10;
    }
  }
LABEL_11:
  uint64_t v4 = *(void *)(v1 + 16);
  if (!v4) {
    goto LABEL_18;
  }
  uint64_t v5 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_17;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v4);
  --qword_1EB220150;
  off_1EB21C9E8(v4);
  uint64_t v4 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v5 = &xmmword_1EB21CA50;
LABEL_17:
    (*v5)(v4);
  }
LABEL_18:
  if (*(int *)(v1 + 24) >= 1)
  {
    for (uint64_t i = 0; i < *(int *)(v1 + 24); ++i)
    {
      uint64_t v7 = *(void *)(*(void *)(v1 + 32) + 8 * i);
      if (v7)
      {
        size_t v8 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v7);
          --qword_1EB220150;
          off_1EB21C9E8(v7);
          uint64_t v7 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            continue;
          }
          size_t v8 = &xmmword_1EB21CA50;
        }
        (*v8)(v7);
      }
    }
  }
  uint64_t v9 = *(void *)(v1 + 32);
  if (v9)
  {
    size_t v10 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_34:
      (*v10)(v9);
      goto LABEL_35;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v9);
    --qword_1EB220150;
    off_1EB21C9E8(v9);
    uint64_t v9 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      size_t v10 = &xmmword_1EB21CA50;
      goto LABEL_34;
    }
  }
LABEL_35:
  uint64_t v11 = *(void *)(v1 + 56);
  if (!v11) {
    goto LABEL_42;
  }
  uint64_t v12 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_41;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v11);
  --qword_1EB220150;
  off_1EB21C9E8(v11);
  uint64_t v11 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v12 = &xmmword_1EB21CA50;
LABEL_41:
    (*v12)(v11);
  }
LABEL_42:
  uint64_t v13 = *(void *)(v1 + 160);
  if (!v13) {
    goto LABEL_49;
  }
  uint64_t v14 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_48;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v13);
  --qword_1EB220150;
  off_1EB21C9E8(v13);
  uint64_t v13 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v14 = &xmmword_1EB21CA50;
LABEL_48:
    (*v14)(v13);
  }
LABEL_49:
  uint64_t v15 = *(void *)(v1 + 168);
  if (!v15) {
    goto LABEL_56;
  }
  int v16 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_55;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v15);
  --qword_1EB220150;
  off_1EB21C9E8(v15);
  uint64_t v15 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v16 = &xmmword_1EB21CA50;
LABEL_55:
    (*v16)(v15);
  }
LABEL_56:
  uint64_t v17 = *(void *)(v1 + 72);
  if (!v17) {
    goto LABEL_63;
  }
  int v18 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_62;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v17);
  --qword_1EB220150;
  off_1EB21C9E8(v17);
  uint64_t v17 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v18 = &xmmword_1EB21CA50;
LABEL_62:
    (*v18)(v17);
  }
LABEL_63:
  uint64_t v19 = *(void *)(v1 + 80);
  if (!v19) {
    goto LABEL_70;
  }
  unsigned int v20 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_69;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v19);
  --qword_1EB220150;
  off_1EB21C9E8(v19);
  uint64_t v19 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v20 = &xmmword_1EB21CA50;
LABEL_69:
    (*v20)(v19);
  }
LABEL_70:
  uint64_t v21 = *(void *)(v1 + 96);
  if (!v21) {
    goto LABEL_77;
  }
  uint64_t v22 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_76;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v21);
  --qword_1EB220150;
  off_1EB21C9E8(v21);
  uint64_t v21 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v22 = &xmmword_1EB21CA50;
LABEL_76:
    (*v22)(v21);
  }
LABEL_77:
  int v23 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_82:
    unsigned int v24 = *v23;
    return v24(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v23 = &xmmword_1EB21CA50;
    goto LABEL_82;
  }
  return result;
}

char *sub_1B0DA3890(unsigned __int8 *a1)
{
  int v1 = (char)*a1;
  int v2 = *a1;
  if (v1 <= 87)
  {
    if (v1 == 39)
    {
      uint64_t v3 = a1 + 1;
      while (1)
      {
        if (*v3 == 39)
        {
          int v18 = *++v3;
          if (v18 != 39) {
            break;
          }
        }
        if (!*++v3) {
          return 0;
        }
      }
      return v3;
    }
    if (v1 == 78)
    {
LABEL_5:
      uint64_t v3 = a1 + 4;
      if ((v2 & 0xFFFFFFDF) == 0x4E)
      {
        uint64_t v4 = (char *)(a1 + 1);
        if ((a1[1] & 0xDF) == 0x55)
        {
          uint64_t v4 = (char *)(a1 + 2);
          if ((a1[2] & 0xDF) == 0x4C)
          {
            int v5 = a1[3];
            a1 += 3;
            if ((v5 & 0xFFFFFFDF) == 0x4C) {
              return v3;
            }
            int v6 = 108;
            goto LABEL_42;
          }
          int v6 = 108;
        }
        else
        {
          int v6 = 117;
        }
        a1 = (unsigned __int8 *)v4;
      }
      else
      {
        int v6 = 110;
      }
LABEL_42:
      if (v6 == byte_1B0DE1758[*a1]) {
        return v3;
      }
      return 0;
    }
    goto LABEL_12;
  }
  if (v1 != 88 && v1 != 120)
  {
    if (v1 == 110) {
      goto LABEL_5;
    }
LABEL_12:
    if (v2 == 45 || (uint64_t v7 = a1, v2 == 43)) {
      uint64_t v7 = a1 + 1;
    }
    do
    {
      int v9 = *v7++;
      int v8 = v9;
    }
    while ((v9 - 58) > 0xFFFFFFF5);
    size_t v10 = (char *)(v7 - 1);
    if (v8 == 46 && *v7 - 58 >= 0xFFFFFFF6)
    {
      size_t v10 = (char *)v7;
      do
        int v11 = *++v10;
      while ((v11 - 58) > 0xFFFFFFF5);
    }
    if (v10 == (char *)a1) {
      return 0;
    }
    else {
      return v10;
    }
  }
  if (a1[1] != 39) {
    return 0;
  }
  for (uint64_t i = 0; ; ++i)
  {
    if ((a1[i + 2] - 48) >= 0xAu)
    {
      unsigned int v14 = a1[i + 2] - 39;
      if (v14 > 0x3F) {
        return 0;
      }
      if (((1 << v14) & 0xFC000000FC000000) == 0) {
        break;
      }
    }
  }
  if (a1[i + 2] != 39) {
    return 0;
  }
  char v15 = i + 2;
  uint64_t v16 = (uint64_t)&a1[i + 3];
  if (v15) {
    return 0;
  }
  else {
    return (char *)v16;
  }
}

uint64_t sub_1B0DA3A58(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  if (!sqlite3_initialize())
  {
    int v9 = (_DWORD *)sub_1B0C7FC94(4);
    uint64_t v7 = v9;
    if (!v9) {
      goto LABEL_3;
    }
    *int v9 = 1;
    if (a3 < 1) {
      goto LABEL_17;
    }
    uint64_t v10 = 0;
LABEL_8:
    int v11 = *(unsigned char **)(a2 + 8 * v10);
    if (!v11)
    {
LABEL_18:
      uint64_t v17 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_23;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v7);
      --qword_1EB220150;
      off_1EB21C9E8(v7);
      uint64_t v7 = (_DWORD *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v17 = &xmmword_1EB21CA50;
LABEL_23:
        (*v17)(v7);
        uint64_t v7 = 0;
      }
      uint64_t result = 1;
      goto LABEL_4;
    }
    uint64_t v12 = *(unsigned __int8 **)(a2 + ((8 * v10) | 8));
    for (uint64_t i = "case_sensitive"; ; ++i)
    {
      uint64_t v14 = *v11;
      uint64_t v15 = *(unsigned __int8 *)i;
      if (v14 == v15)
      {
        if (!*v11)
        {
          int v16 = *v12;
          if ((v16 & 0xFE) != 0x30 || v12[1]) {
            goto LABEL_18;
          }
          *int v9 = v16 == 48;
          v10 += 2;
          if ((int)v10 >= a3)
          {
LABEL_17:
            uint64_t result = 0;
            goto LABEL_4;
          }
          goto LABEL_8;
        }
      }
      else if (byte_1B0DE1758[v14] != byte_1B0DE1758[v15])
      {
        goto LABEL_18;
      }
      ++v11;
    }
  }
  uint64_t v7 = 0;
LABEL_3:
  uint64_t result = 7;
LABEL_4:
  *a4 = v7;
  return result;
}

uint64_t sub_1B0DA3BDC(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  int v2 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v2 = &xmmword_1EB21CA50;
LABEL_7:
    uint64_t v3 = *v2;
    return v3(v1);
  }
  return result;
}

char *sub_1B0DA3CA4(char *result, uint64_t a2, char *a3, ...)
{
  va_start(va, a3);
  if (*(_DWORD *)result) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t result = sqlite3_vmprintf(a3, va);
  if (!result)
  {
    *(_DWORD *)uint64_t v4 = 7;
    return result;
  }
  int v5 = result;
  int v6 = strlen(result);
  size_t v7 = (v6 + 1);
  if (v6 != -1)
  {
    int v8 = *(_DWORD *)(a2 + 8);
    unsigned int v9 = *(_DWORD *)(a2 + 12);
    unint64_t v10 = (v8 + v7);
    if (v10 <= v9)
    {
      uint64_t v14 = *(void *)a2;
LABEL_16:
      memcpy((void *)(v14 + v8), v5, v7);
      *(_DWORD *)(a2 + 8) += v7;
      goto LABEL_17;
    }
    if (v9) {
      LODWORD(v11) = *(_DWORD *)(a2 + 12);
    }
    else {
      LODWORD(v11) = 64;
    }
    unint64_t v11 = (int)v11;
    do
    {
      unint64_t v12 = v11;
      v11 *= 2;
    }
    while (v12 < v10);
    uint64_t v13 = *(void *)a2;
    if (!sqlite3_initialize())
    {
      uint64_t v14 = sub_1B0C8E1B8(v13, v12);
      if (v14)
      {
        *(_DWORD *)(a2 + 12) = v12;
        *(void *)a2 = v14;
        int v8 = *(_DWORD *)(a2 + 8);
        goto LABEL_16;
      }
    }
    *(_DWORD *)uint64_t v4 = 7;
  }
LABEL_17:
  --*(_DWORD *)(a2 + 8);
  uint64_t v15 = (uint64_t (**)(const void *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    return (char *)(*v15)(v5);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
  --qword_1EB220150;
  uint64_t result = (char *)off_1EB21C9E8(v5);
  int v5 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v15 = (uint64_t (**)(const void *))&xmmword_1EB21CA50;
    return (char *)(*v15)(v5);
  }
  return result;
}

uint64_t sub_1B0DA3E30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char **a5)
{
  int v8 = *(sqlite3 **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = " WITHOUT ROWID";
  if (!a4) {
    unint64_t v11 = &byte_1B0DE9952;
  }
  int v16 = 0;
  uint64_t v12 = sub_1B0DA41D8(v8, &v16, "CREATE TABLE %Q.'%q_%q'(%s)%s", v9, v10, a2, a3, v11);
  if (v16)
  {
    *a5 = sqlite3_mprintf("fts5: error creating shadow table %q_%s: %s", *(void *)(a1 + 16), a2, v16);
    uint64_t v13 = v16;
    if (v16)
    {
      uint64_t v14 = (void (**)(char *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0)
      {
LABEL_10:
        (*v14)(v13);
        return v12;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
      --qword_1EB220150;
      off_1EB21C9E8(v13);
      uint64_t v13 = (char *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v14 = (void (**)(char *))&xmmword_1EB21CA50;
        goto LABEL_10;
      }
    }
  }
  return v12;
}

uint64_t sub_1B0DA3F58(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  int v2 = *(_DWORD **)(result + 144);
  if (v2)
  {
    sub_1B0DA4EF8(v2);
    *(void *)(v1 + 144) = 0;
  }
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 72));
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 80));
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 88));
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 96));
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 104));
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 128));
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 120));
  uint64_t v3 = *(void *)(v1 + 24);
  if (!v3) {
    goto LABEL_18;
  }
  sub_1B0DA5094(*(void *)(v1 + 24));
  uint64_t v4 = *(void *)(v3 + 32);
  if (v4)
  {
    int v5 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
      --qword_1EB220150;
      off_1EB21C9E8(v4);
      uint64_t v4 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_12;
      }
      int v5 = &xmmword_1EB21CA50;
    }
    (*v5)(v4);
  }
LABEL_12:
  int v6 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_17:
    (*v6)(v3);
    goto LABEL_18;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
  --qword_1EB220150;
  off_1EB21C9E8(v3);
  uint64_t v3 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v6 = &xmmword_1EB21CA50;
    goto LABEL_17;
  }
LABEL_18:
  uint64_t v7 = *(void *)(v1 + 8);
  if (!v7) {
    goto LABEL_25;
  }
  int v8 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_24;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v7);
  --qword_1EB220150;
  off_1EB21C9E8(v7);
  uint64_t v7 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v8 = &xmmword_1EB21CA50;
LABEL_24:
    (*v8)(v7);
  }
LABEL_25:
  uint64_t v9 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_30:
    uint64_t v10 = *v9;
    return v10(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v9 = &xmmword_1EB21CA50;
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1B0DA41D8(sqlite3 *a1, char **a2, char *a3, ...)
{
  va_start(va, a3);
  int v5 = sqlite3_vmprintf(a3, va);
  if (!v5) {
    return 7;
  }
  int v6 = v5;
  uint64_t v7 = sqlite3_exec(a1, v5, 0, 0, a2);
  int v8 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
  --qword_1EB220150;
  off_1EB21C9E8(v6);
  int v6 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v8 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
LABEL_7:
    (*v8)(v6);
  }
  return v7;
}

unsigned __int8 *sub_1B0DA42D0(unsigned __int8 *result, uint64_t a2, char *a3, unsigned int a4)
{
  if (*((_DWORD *)result + 15)) {
    return result;
  }
  uint64_t v7 = result;
  int v8 = (uint64_t **)(result + 72);
  uint64_t v9 = (uint64_t *)*((void *)result + 9);
  if (!v9)
  {
    uint64_t result = (unsigned __int8 *)sqlite3_mprintf("REPLACE INTO '%q'.'%q_data'(id, block) VALUES(?,?)", *(void *)(*(void *)result + 8), *(void *)(*(void *)result + 16));
    uint64_t v12 = result;
    if (*((_DWORD *)v7 + 15))
    {
      if (!result) {
        return result;
      }
    }
    else
    {
      if (!result)
      {
        *((_DWORD *)v7 + 15) = 7;
        return result;
      }
      *((_DWORD *)v7 + 15) = sub_1B0C7EAC0(**(void **)v7, result, 0xFFFFFFFFLL, 133, 0, v8, 0, v11);
    }
    uint64_t v13 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
      --qword_1EB220150;
      uint64_t result = (unsigned __int8 *)off_1EB21C9E8(v12);
      uint64_t v12 = (unsigned __int8 *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_17;
      }
      uint64_t v13 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
    }
    uint64_t result = (unsigned __int8 *)(*v13)(v12);
LABEL_17:
    if (*((_DWORD *)v7 + 15)) {
      return result;
    }
    uint64_t v9 = *v8;
  }
  if (!sub_1B0CC3F2C((uint64_t)v9, 0))
  {
    uint64_t v10 = v9[16];
    if ((*(_WORD *)(v10 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v10, a2);
    }
    else
    {
      *(void *)uint64_t v10 = a2;
      *(_WORD *)(v10 + 20) = 4;
    }
    uint64_t v14 = *(void *)(*v9 + 24);
    if (v14) {
      xmmword_1EB21CA50(v14);
    }
  }
  if ((a4 & 0x80000000) != 0)
  {
    sub_1B0CE1978(98740);
  }
  else
  {
    uint64_t v15 = *v8;
    if (!sub_1B0CC3F2C((uint64_t)v15, 1u))
    {
      if (a3)
      {
        unsigned int v16 = sub_1B0C79BBC(v15[16] + 64, a3, a4, 0, 0);
        if (v16)
        {
          unsigned int v17 = v16;
          uint64_t v18 = *v15;
          *(_DWORD *)(v18 + 80) = v17;
          sub_1B0D0E714(v18, v17);
          sub_1B0D1806C(*v15, v17);
        }
      }
      uint64_t v19 = *(void *)(*v15 + 24);
      if (v19) {
        xmmword_1EB21CA50(v19);
      }
    }
  }
  sqlite3_step(*((sqlite3_stmt **)v7 + 9));
  *((_DWORD *)v7 + 15) = sqlite3_reset(*((sqlite3_stmt **)v7 + 9));
  uint64_t v20 = *((void *)v7 + 9);
  uint64_t result = (unsigned __int8 *)sub_1B0CC3F2C(v20, 1u);
  if (!result)
  {
    uint64_t result = *(unsigned __int8 **)(*(void *)v20 + 24);
    if (result)
    {
      uint64_t v21 = (uint64_t (*)(void))xmmword_1EB21CA50;
      return (unsigned __int8 *)v21();
    }
  }
  return result;
}

unsigned __int8 *sub_1B0DA4564(unsigned __int8 *result, uint64_t a2)
{
  if (*((_DWORD *)result + 15)) {
    return result;
  }
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(*(void *)result + 132);
  if (sqlite3_initialize() || (int v8 = (char *)sub_1B0C8E1B8(0, 64)) == 0)
  {
    int v5 = 0;
    signed int v6 = 0;
    unsigned int v7 = 0;
    *((_DWORD *)v3 + 15) = 7;
  }
  else
  {
    int v5 = v8;
    *(_DWORD *)int v8 = bswap32(v4 & ~(v4 >> 31));
    if (*(void *)(a2 + 16))
    {
      *((_DWORD *)v8 + 1) = 16777471;
      unsigned int v9 = 8;
    }
    else
    {
      unsigned int v9 = 4;
    }
    uint64_t v10 = (int8x8_t *)&v8[v9];
    unint64_t v11 = *(int *)(a2 + 28);
    if (v11 > 0x7F)
    {
      if (v11 >> 14)
      {
        int v12 = sub_1B0D1DC5C(v10, v11);
      }
      else
      {
        v10->i8[0] = (v11 >> 7) | 0x80;
        v10->i8[1] = v11 & 0x7F;
        int v12 = 2;
      }
    }
    else
    {
      v10->i8[0] = v11;
      int v12 = 1;
    }
    unsigned int v13 = v9 + v12;
    uint64_t v14 = (int8x8_t *)&v5[v13];
    unint64_t v15 = *(int *)(a2 + 24);
    if (v15 > 0x7F)
    {
      if (v15 >> 14)
      {
        int v16 = sub_1B0D1DC5C(v14, v15);
      }
      else
      {
        v14->i8[0] = (v15 >> 7) | 0x80;
        v14->i8[1] = v15 & 0x7F;
        int v16 = 2;
      }
    }
    else
    {
      v14->i8[0] = v15;
      int v16 = 1;
    }
    unsigned int v17 = v13 + v16;
    uint64_t v18 = (int8x8_t *)&v5[v17];
    unint64_t v19 = *(void *)(a2 + 8);
    if (v19 > 0x7F)
    {
      if (v19 >> 14)
      {
        int v20 = sub_1B0D1DC5C(v18, v19);
      }
      else
      {
        v18->i8[0] = (v19 >> 7) | 0x80;
        v18->i8[1] = v19 & 0x7F;
        int v20 = 2;
      }
    }
    else
    {
      v18->i8[0] = v19;
      int v20 = 1;
    }
    signed int v6 = v17 + v20;
    unsigned int v7 = 64;
  }
  if (*(int *)(a2 + 28) >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v93 = a2;
    do
    {
      unint64_t v22 = *(int *)(a2 + 16 * v21 + 32);
      unint64_t v23 = (v6 + 9);
      if (v23 > v7)
      {
        if (v7) {
          LODWORD(v24) = v7;
        }
        else {
          LODWORD(v24) = 64;
        }
        unint64_t v24 = (int)v24;
        do
        {
          unint64_t v25 = v24;
          v24 *= 2;
        }
        while (v25 < v23);
        if (sqlite3_initialize() || (uint64_t v26 = sub_1B0C8E1B8((uint64_t)v5, v25)) == 0)
        {
          *((_DWORD *)v3 + 15) = 7;
          goto LABEL_44;
        }
        int v5 = (char *)v26;
        unsigned int v7 = v25;
      }
      uint64_t v27 = (int8x8_t *)&v5[v6];
      if (v22 > 0x7F)
      {
        if (v22 >> 14)
        {
          int v28 = sub_1B0D1DC5C(v27, v22);
        }
        else
        {
          v27->i8[0] = (v22 >> 7) | 0x80;
          v27->i8[1] = v22 & 0x7F;
          int v28 = 2;
        }
      }
      else
      {
        v27->i8[0] = v22;
        int v28 = 1;
      }
      v6 += v28;
      LODWORD(v23) = v6 + 9;
LABEL_44:
      uint64_t v29 = a2 + 16 * v21;
      unint64_t v30 = *(int *)(v29 + 36);
      uint64_t v94 = (int *)(v29 + 36);
      if (v23 > v7)
      {
        if (v7) {
          LODWORD(v31) = v7;
        }
        else {
          LODWORD(v31) = 64;
        }
        unint64_t v31 = (int)v31;
        do
        {
          unint64_t v32 = v31;
          v31 *= 2;
        }
        while (v32 < v23);
        if (sqlite3_initialize() || (uint64_t v33 = sub_1B0C8E1B8((uint64_t)v5, v32)) == 0)
        {
          *((_DWORD *)v3 + 15) = 7;
          goto LABEL_60;
        }
        int v5 = (char *)v33;
        unsigned int v7 = v32;
      }
      uint64_t v34 = (int8x8_t *)&v5[v6];
      if (v30 > 0x7F)
      {
        if (v30 >> 14)
        {
          int v35 = sub_1B0D1DC5C(v34, v30);
        }
        else
        {
          v34->i8[0] = (v30 >> 7) | 0x80;
          v34->i8[1] = v30 & 0x7F;
          int v35 = 2;
        }
      }
      else
      {
        v34->i8[0] = v30;
        int v35 = 1;
      }
      v6 += v35;
LABEL_60:
      uint64_t v91 = v21;
      if (*v94 >= 1)
      {
        uint64_t v36 = v21;
        uint64_t v37 = 0;
        uint64_t v92 = (uint64_t *)(a2 + 16 * v36 + 40);
        do
        {
          uint64_t v39 = *v92;
          unint64_t v40 = *(int *)(*v92 + 56 * v37);
          unint64_t v41 = (v6 + 9);
          if (v41 > v7)
          {
            if (v7) {
              LODWORD(v42) = v7;
            }
            else {
              LODWORD(v42) = 64;
            }
            unint64_t v42 = (int)v42;
            do
            {
              unint64_t v43 = v42;
              v42 *= 2;
            }
            while (v43 < v41);
            if (sqlite3_initialize() || (uint64_t v44 = sub_1B0C8E1B8((uint64_t)v5, v43)) == 0)
            {
              *((_DWORD *)v3 + 15) = 7;
              goto LABEL_81;
            }
            int v5 = (char *)v44;
            unsigned int v7 = v43;
          }
          int v45 = (int8x8_t *)&v5[v6];
          if (v40 > 0x7F)
          {
            if (v40 >> 14)
            {
              int v46 = sub_1B0D1DC5C(v45, v40);
            }
            else
            {
              v45->i8[0] = (v40 >> 7) | 0x80;
              v45->i8[1] = v40 & 0x7F;
              int v46 = 2;
            }
          }
          else
          {
            v45->i8[0] = v40;
            int v46 = 1;
          }
          v6 += v46;
          LODWORD(v41) = v6 + 9;
LABEL_81:
          unint64_t v47 = *(int *)(v39 + 56 * v37 + 4);
          if (v41 > v7)
          {
            if (v7) {
              LODWORD(v48) = v7;
            }
            else {
              LODWORD(v48) = 64;
            }
            unint64_t v48 = (int)v48;
            do
            {
              unint64_t v49 = v48;
              v48 *= 2;
            }
            while (v49 < v41);
            if (sqlite3_initialize() || (uint64_t v50 = sub_1B0C8E1B8((uint64_t)v5, v49)) == 0)
            {
              *((_DWORD *)v3 + 15) = 7;
              goto LABEL_97;
            }
            int v5 = (char *)v50;
            unsigned int v7 = v49;
          }
          uint64_t v51 = (int8x8_t *)&v5[v6];
          if (v47 > 0x7F)
          {
            if (v47 >> 14)
            {
              int v52 = sub_1B0D1DC5C(v51, v47);
            }
            else
            {
              v51->i8[0] = (v47 >> 7) | 0x80;
              v51->i8[1] = v47 & 0x7F;
              int v52 = 2;
            }
          }
          else
          {
            v51->i8[0] = v47;
            int v52 = 1;
          }
          v6 += v52;
          LODWORD(v41) = v6 + 9;
LABEL_97:
          unint64_t v53 = *(int *)(v39 + 56 * v37 + 8);
          if (v41 > v7)
          {
            if (v7) {
              LODWORD(v54) = v7;
            }
            else {
              LODWORD(v54) = 64;
            }
            unint64_t v54 = (int)v54;
            do
            {
              unint64_t v55 = v54;
              v54 *= 2;
            }
            while (v55 < v41);
            if (sqlite3_initialize() || (uint64_t v56 = sub_1B0C8E1B8((uint64_t)v5, v55)) == 0)
            {
              *((_DWORD *)v3 + 15) = 7;
              goto LABEL_113;
            }
            int v5 = (char *)v56;
            unsigned int v7 = v55;
          }
          int v57 = (int8x8_t *)&v5[v6];
          if (v53 > 0x7F)
          {
            if (v53 >> 14)
            {
              int v58 = sub_1B0D1DC5C(v57, v53);
            }
            else
            {
              v57->i8[0] = (v53 >> 7) | 0x80;
              v57->i8[1] = v53 & 0x7F;
              int v58 = 2;
            }
          }
          else
          {
            v57->i8[0] = v53;
            int v58 = 1;
          }
          v6 += v58;
LABEL_113:
          if (!*(void *)(v93 + 16)) {
            goto LABEL_64;
          }
          unint64_t v59 = *(void *)(v39 + 56 * v37 + 16);
          unint64_t v60 = (v6 + 9);
          if (v60 > v7)
          {
            if (v7) {
              LODWORD(v61) = v7;
            }
            else {
              LODWORD(v61) = 64;
            }
            unint64_t v61 = (int)v61;
            do
            {
              unint64_t v62 = v61;
              v61 *= 2;
            }
            while (v62 < v60);
            if (sqlite3_initialize() || (uint64_t v63 = sub_1B0C8E1B8((uint64_t)v5, v62)) == 0)
            {
              *((_DWORD *)v3 + 15) = 7;
              goto LABEL_130;
            }
            int v5 = (char *)v63;
            unsigned int v7 = v62;
          }
          int v64 = (int8x8_t *)&v5[v6];
          if (v59 > 0x7F)
          {
            if (v59 >> 14)
            {
              int v65 = sub_1B0D1DC5C(v64, v59);
            }
            else
            {
              v64->i8[0] = (v59 >> 7) | 0x80;
              v64->i8[1] = v59 & 0x7F;
              int v65 = 2;
            }
          }
          else
          {
            v64->i8[0] = v59;
            int v65 = 1;
          }
          v6 += v65;
          LODWORD(v60) = v6 + 9;
LABEL_130:
          unint64_t v66 = *(void *)(v39 + 56 * v37 + 24);
          if (v60 > v7)
          {
            if (v7) {
              LODWORD(v67) = v7;
            }
            else {
              LODWORD(v67) = 64;
            }
            unint64_t v67 = (int)v67;
            do
            {
              unint64_t v68 = v67;
              v67 *= 2;
            }
            while (v68 < v60);
            if (sqlite3_initialize() || (uint64_t v69 = sub_1B0C8E1B8((uint64_t)v5, v68)) == 0)
            {
              *((_DWORD *)v3 + 15) = 7;
              goto LABEL_146;
            }
            int v5 = (char *)v69;
            unsigned int v7 = v68;
          }
          uint64_t v70 = (int8x8_t *)&v5[v6];
          if (v66 > 0x7F)
          {
            if (v66 >> 14)
            {
              int v71 = sub_1B0D1DC5C(v70, v66);
            }
            else
            {
              v70->i8[0] = (v66 >> 7) | 0x80;
              v70->i8[1] = v66 & 0x7F;
              int v71 = 2;
            }
          }
          else
          {
            v70->i8[0] = v66;
            int v71 = 1;
          }
          v6 += v71;
          LODWORD(v60) = v6 + 9;
LABEL_146:
          unint64_t v72 = *(int *)(v39 + 56 * v37 + 32);
          if (v60 > v7)
          {
            if (v7) {
              LODWORD(v73) = v7;
            }
            else {
              LODWORD(v73) = 64;
            }
            unint64_t v73 = (int)v73;
            do
            {
              unint64_t v74 = v73;
              v73 *= 2;
            }
            while (v74 < v60);
            if (sqlite3_initialize() || (uint64_t v75 = sub_1B0C8E1B8((uint64_t)v5, v74)) == 0)
            {
              *((_DWORD *)v3 + 15) = 7;
              goto LABEL_162;
            }
            int v5 = (char *)v75;
            unsigned int v7 = v74;
          }
          unsigned int v76 = (int8x8_t *)&v5[v6];
          if (v72 > 0x7F)
          {
            if (v72 >> 14)
            {
              int v77 = sub_1B0D1DC5C(v76, v72);
            }
            else
            {
              v76->i8[0] = (v72 >> 7) | 0x80;
              v76->i8[1] = v72 & 0x7F;
              int v77 = 2;
            }
          }
          else
          {
            v76->i8[0] = v72;
            int v77 = 1;
          }
          v6 += v77;
          LODWORD(v60) = v6 + 9;
LABEL_162:
          unint64_t v78 = *(void *)(v39 + 56 * v37 + 40);
          if (v60 <= v7) {
            goto LABEL_172;
          }
          if (v7) {
            LODWORD(v79) = v7;
          }
          else {
            LODWORD(v79) = 64;
          }
          unint64_t v79 = (int)v79;
          do
          {
            unint64_t v80 = v79;
            v79 *= 2;
          }
          while (v80 < v60);
          if (!sqlite3_initialize())
          {
            uint64_t v81 = sub_1B0C8E1B8((uint64_t)v5, v80);
            if (v81)
            {
              int v5 = (char *)v81;
              unsigned int v7 = v80;
LABEL_172:
              uint64_t v82 = (int8x8_t *)&v5[v6];
              if (v78 > 0x7F)
              {
                if (v78 >> 14)
                {
                  int v83 = sub_1B0D1DC5C(v82, v78);
                }
                else
                {
                  v82->i8[0] = (v78 >> 7) | 0x80;
                  v82->i8[1] = v78 & 0x7F;
                  int v83 = 2;
                }
              }
              else
              {
                v82->i8[0] = v78;
                int v83 = 1;
              }
              v6 += v83;
              LODWORD(v60) = v6 + 9;
              goto LABEL_178;
            }
          }
          *((_DWORD *)v3 + 15) = 7;
LABEL_178:
          unint64_t v84 = *(void *)(v39 + 56 * v37 + 48);
          if (v60 <= v7) {
            goto LABEL_188;
          }
          if (v7) {
            LODWORD(v85) = v7;
          }
          else {
            LODWORD(v85) = 64;
          }
          unint64_t v85 = (int)v85;
          do
          {
            unint64_t v86 = v85;
            v85 *= 2;
          }
          while (v86 < v60);
          if (!sqlite3_initialize())
          {
            uint64_t v87 = sub_1B0C8E1B8((uint64_t)v5, v86);
            if (v87)
            {
              int v5 = (char *)v87;
              unsigned int v7 = v86;
LABEL_188:
              uint64_t v88 = (int8x8_t *)&v5[v6];
              if (v84 <= 0x7F)
              {
                v88->i8[0] = v84;
                int v38 = 1;
              }
              else if (v84 >> 14)
              {
                int v38 = sub_1B0D1DC5C(v88, v84);
              }
              else
              {
                v88->i8[0] = (v84 >> 7) | 0x80;
                v88->i8[1] = v84 & 0x7F;
                int v38 = 2;
              }
              v6 += v38;
              goto LABEL_64;
            }
          }
          *((_DWORD *)v3 + 15) = 7;
LABEL_64:
          ++v37;
        }
        while (v37 < *v94);
      }
      uint64_t v21 = v91 + 1;
      a2 = v93;
    }
    while (v91 + 1 < *(int *)(v93 + 28));
  }
  uint64_t result = sub_1B0DA42D0(v3, 10, v5, v6);
  if (!v5) {
    return result;
  }
  int v89 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_198;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
  --qword_1EB220150;
  uint64_t result = (unsigned __int8 *)off_1EB21C9E8(v5);
  int v5 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v89 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
LABEL_198:
    double v90 = *v89;
    return (unsigned __int8 *)v90(v5);
  }
  return result;
}

_DWORD *sub_1B0DA4EF8(_DWORD *result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if ((*result)-- > 1) {
    return result;
  }
  if ((int)result[7] >= 1)
  {
    uint64_t v3 = 0;
    int v4 = (uint64_t *)(result + 10);
    do
    {
      uint64_t v5 = *v4;
      if (*v4)
      {
        signed int v6 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v5);
          --qword_1EB220150;
          off_1EB21C9E8(v5);
          uint64_t v5 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_7;
          }
          signed int v6 = &xmmword_1EB21CA50;
        }
        (*v6)(v5);
      }
LABEL_7:
      ++v3;
      v4 += 2;
    }
    while (v3 < (int)v1[7]);
  }
  unsigned int v7 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_19;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = (_DWORD *)off_1EB21C9E8(v1);
  uint64_t v1 = (_DWORD *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v7 = &xmmword_1EB21CA50;
LABEL_19:
    int v8 = (uint64_t (*)(_DWORD *))*v7;
    return (_DWORD *)v8(v1);
  }
  return result;
}

void sub_1B0DA5094(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 20);
  if (v2 > 0)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 8 * v3);
      if (v5) {
        break;
      }
LABEL_4:
      ++v3;
      uint64_t v4 = v2;
      if (v3 >= v2) {
        goto LABEL_15;
      }
    }
    while (1)
    {
      signed int v6 = (void *)*v5;
      unsigned int v7 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
        --qword_1EB220150;
        off_1EB21C9E8(v5);
        uint64_t v5 = (void *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_8;
        }
        unsigned int v7 = &xmmword_1EB21CA50;
      }
      (*v7)(v5);
LABEL_8:
      uint64_t v5 = v6;
      if (!v6)
      {
        int v2 = *(_DWORD *)(a1 + 20);
        goto LABEL_4;
      }
    }
  }
  uint64_t v4 = v2;
LABEL_15:
  bzero(*(void **)(a1 + 32), 8 * v4);
  *(_DWORD *)(a1 + 16) = 0;
}

uint64_t sub_1B0DA51B4(_DWORD *a1, uint64_t a2, unint64_t a3)
{
  int v5 = *(_DWORD *)(a2 + 8);
  unsigned int v6 = *(_DWORD *)(a2 + 12);
  unint64_t v7 = (v5 + 9);
  if (v7 <= v6)
  {
    uint64_t result = *(void *)a2;
  }
  else
  {
    if (v6) {
      LODWORD(v9) = *(_DWORD *)(a2 + 12);
    }
    else {
      LODWORD(v9) = 64;
    }
    unint64_t v9 = (int)v9;
    do
    {
      unint64_t v10 = v9;
      v9 *= 2;
    }
    while (v10 < v7);
    uint64_t v11 = *(void *)a2;
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8(v11, v10)) == 0)
    {
      *a1 = 7;
      return result;
    }
    *(_DWORD *)(a2 + 12) = v10;
    *(void *)a2 = result;
    int v5 = *(_DWORD *)(a2 + 8);
  }
  unsigned int v13 = (int8x8_t *)(result + v5);
  if (a3 > 0x7F)
  {
    if (a3 >> 14)
    {
      uint64_t result = sub_1B0D1DC5C(v13, a3);
    }
    else
    {
      v13->i8[0] = (a3 >> 7) | 0x80;
      v13->i8[1] = a3 & 0x7F;
      uint64_t result = 2;
    }
  }
  else
  {
    v13->i8[0] = a3;
    uint64_t result = 1;
  }
  *(_DWORD *)(a2 + 8) += result;
  return result;
}

uint64_t sub_1B0DA52A8(uint64_t *a1, char *a2, const sqlite3_value *a3, int a4)
{
  unint64_t v24 = 0;
  uint64_t v8 = sub_1B0DA55D8(a1, 9, &v24, 0);
  if (!v8)
  {
    unint64_t v10 = v24;
    sub_1B0CC3DB8((uint64_t *)v24, 1, a2, -1, 0, 1u);
    if (a3)
    {
      sqlite3_bind_value(v10, 2, a3);
    }
    else if (!sub_1B0CC3F2C((uint64_t)v10, 1u))
    {
      uint64_t v11 = *((void *)v10 + 16);
      if ((*(_WORD *)(v11 + 84) & 0x9000) != 0)
      {
        sub_1B0D18980(v11 + 64, a4);
      }
      else
      {
        *(void *)(v11 + 64) = a4;
        *(_WORD *)(v11 + 84) = 4;
      }
      uint64_t v12 = *(void *)(*(void *)v10 + 24);
      if (v12) {
        xmmword_1EB21CA50(v12);
      }
    }
    sqlite3_step(v10);
    uint64_t v8 = sqlite3_reset(v10);
    if (!sub_1B0CC3F2C((uint64_t)v10, 0))
    {
      uint64_t v13 = *(void *)(*(void *)v10 + 24);
      if (v13) {
        xmmword_1EB21CA50(v13);
      }
    }
    if (a3 && !v8)
    {
      uint64_t v14 = (uint64_t *)a1[1];
      int v15 = *(_DWORD *)(*a1 + 132) + 1;
      uint64_t v17 = *v14;
      int v16 = (const char *)v14[1];
      ppBlob = 0;
      v26[0] = HIBYTE(v15);
      v26[1] = BYTE2(v15);
      v26[2] = BYTE1(v15);
      v26[3] = v15;
      uint64_t v18 = sqlite3_blob_open(*(sqlite3 **)v17, *(const char **)(v17 + 8), v16, "block", 10, 1, &ppBlob);
      if (v18)
      {
        return v18;
      }
      else
      {
        sub_1B0CEF9D8((int *)ppBlob, v26, 4, 0, sub_1B0CEFC04);
        unint64_t v19 = ppBlob;
        if (!ppBlob) {
          goto LABEL_24;
        }
        int v20 = (sqlite3_stmt *)*((void *)ppBlob + 3);
        uint64_t v21 = (void *)*((void *)ppBlob + 4);
        uint64_t v22 = v21[3];
        if (v22) {
          xmmword_1EB21CA40(v22);
        }
        sub_1B0D05C10(v21, v19);
        uint64_t v23 = v21[3];
        if (v23) {
          xmmword_1EB21CA50(v23);
        }
        uint64_t v8 = sqlite3_finalize(v20);
        if (!v8)
        {
LABEL_24:
          uint64_t v8 = 0;
          *(_DWORD *)(*a1 + 132) = v15;
        }
      }
    }
  }
  return v8;
}

uint64_t sub_1B0DA54B8(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = (sqlite3_stmt **)result;
  sqlite3_finalize(*(sqlite3_stmt **)(result + 40));
  sqlite3_finalize(v1[6]);
  sqlite3_finalize(v1[7]);
  sqlite3_finalize(v1[8]);
  sqlite3_finalize(v1[9]);
  sqlite3_finalize(v1[10]);
  sqlite3_finalize(v1[11]);
  sqlite3_finalize(v1[12]);
  sqlite3_finalize(v1[13]);
  sqlite3_finalize(v1[14]);
  sqlite3_finalize(v1[15]);
  int v2 = (uint64_t (**)(sqlite3_stmt **))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = (sqlite3_stmt **)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v2 = (uint64_t (**)(sqlite3_stmt **))&xmmword_1EB21CA50;
LABEL_7:
    uint64_t v3 = *v2;
    return v3(v1);
  }
  return result;
}

uint64_t sub_1B0DA55D8(uint64_t *a1, int a2, sqlite3_stmt **a3, char **a4)
{
  int v5 = &a1[a2];
  uint64_t v7 = v5[5];
  unsigned int v6 = (sqlite3_stmt **)(v5 + 5);
  if (v7)
  {
    uint64_t v8 = 0;
    goto LABEL_36;
  }
  uint64_t v12 = a2;
  uint64_t v13 = *a1;
  switch(a2)
  {
    case 0:
    case 1:
      uint64_t v14 = sqlite3_mprintf(off_1E5FF0650[a2], *(void *)(v13 + 96), *(void *)(v13 + 72), *(void *)(v13 + 80), *(void *)(v13 + 80), *(void *)(v13 + 80));
      goto LABEL_21;
    case 2:
      uint64_t v14 = sqlite3_mprintf(off_1E5FF0650[a2], *(void *)(v13 + 96), *(void *)(v13 + 72), *(void *)(v13 + 80));
      goto LABEL_21;
    case 3:
    case 4:
      uint64_t v16 = *(unsigned int *)(v13 + 24);
      if (sqlite3_initialize()) {
        goto LABEL_35;
      }
      uint64_t v17 = sub_1B0C7FC94(2 * (int)v16 + 3);
      if (!v17) {
        goto LABEL_35;
      }
      uint64_t v18 = v17;
      if ((v16 & 0x80000000) != 0)
      {
        uint64_t v29 = -1;
        goto LABEL_50;
      }
      uint64_t v19 = v16 + 1;
      if (v16 < 7)
      {
        uint64_t v20 = 0;
        goto LABEL_47;
      }
      if (v16 >= 0x1F)
      {
        uint64_t v20 = v19 & 0xFFFFFFE0;
        uint64_t v30 = v17 + 32;
        uint64_t v31 = v20;
        do
        {
          qmemcpy((void *)(v30 - 32), "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,", 64);
          v30 += 64;
          v31 -= 32;
        }
        while (v31);
        if (v20 == v19) {
          goto LABEL_49;
        }
        if ((v19 & 0x18) == 0)
        {
LABEL_47:
          uint64_t v35 = v17 + 2 * v20 + 1;
          uint64_t v36 = v19 - v20;
          do
          {
            *(_WORD *)(v35 - 1) = 11327;
            v35 += 2;
            --v36;
          }
          while (v36);
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v20 = 0;
      }
      uint64_t v32 = v20;
      uint64_t v20 = v19 & 0xFFFFFFF8;
      uint64_t v33 = (_OWORD *)(v17 + 2 * v32);
      uint64_t v34 = v32 - v20;
      do
      {
        *v33++ = xmmword_1B0DE1680;
        v34 += 8;
      }
      while (v34);
      if (v20 != v19) {
        goto LABEL_47;
      }
LABEL_49:
      uint64_t v29 = 2 * (int)v19 - 1;
LABEL_50:
      *(unsigned char *)(v17 + v29) = 0;
      uint64_t v23 = (unsigned __int8 *)sqlite3_mprintf(off_1E5FF0650[v12], *(void *)(v13 + 8), *(void *)(v13 + 16), v17);
      uint64_t v37 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_55;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v18);
      --qword_1EB220150;
      off_1EB21C9E8(v18);
      uint64_t v18 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v37 = &xmmword_1EB21CA50;
LABEL_55:
        (*v37)(v18);
      }
LABEL_22:
      if (!v23)
      {
LABEL_35:
        uint64_t v8 = 7;
        goto LABEL_36;
      }
      ++*(_DWORD *)(*a1 + 120);
      if (a2 <= 2) {
        uint64_t v24 = 129;
      }
      else {
        uint64_t v24 = 133;
      }
      uint64_t v8 = sub_1B0C7EAC0(*(void *)v13, v23, 0xFFFFFFFFLL, v24, 0, v6, 0, v15);
      --*(_DWORD *)(*a1 + 120);
      unint64_t v25 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_31;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v23);
      --qword_1EB220150;
      off_1EB21C9E8(v23);
      uint64_t v23 = (unsigned __int8 *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        unint64_t v25 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_31:
        (*v25)(v23);
      }
      if (a4 && v8)
      {
        uint64_t v26 = sqlite3_errmsg(*(sqlite3 **)v13);
        *a4 = sqlite3_mprintf("%s", v26);
      }
LABEL_36:
      uint64_t v27 = *v6;
      *a3 = *v6;
      sqlite3_reset(v27);
      return v8;
    case 6:
      if (*(_DWORD *)(v13 + 68)) {
        uint64_t v21 = ",?";
      }
      else {
        uint64_t v21 = &byte_1B0DE9952;
      }
      uint64_t v14 = sqlite3_mprintf(off_1E5FF0650[a2], *(void *)(v13 + 8), *(void *)(v13 + 16), v21);
      goto LABEL_21;
    case 8:
      if (*(_DWORD *)(v13 + 68)) {
        uint64_t v22 = ",origin";
      }
      else {
        uint64_t v22 = &byte_1B0DE9952;
      }
      uint64_t v14 = sqlite3_mprintf(off_1E5FF0650[a2], v22, *(void *)(v13 + 8), *(void *)(v13 + 16));
      goto LABEL_21;
    case 10:
      uint64_t v14 = sqlite3_mprintf(off_1E5FF0650[a2], *(void *)(v13 + 96), *(void *)(v13 + 72));
      goto LABEL_21;
    default:
      uint64_t v14 = sqlite3_mprintf(off_1E5FF0650[a2], *(void *)(v13 + 8), *(void *)(v13 + 16));
LABEL_21:
      uint64_t v23 = (unsigned __int8 *)v14;
      goto LABEL_22;
  }
}

_DWORD *sub_1B0DA5A0C(uint64_t a1)
{
  if (*(void *)(a1 + 144) || (*(void *)(a1 + 136) = sub_1B0DA6590(a1), *(_DWORD *)(a1 + 60)))
  {
    if (!*(_DWORD *)(a1 + 60)) {
      goto LABEL_126;
    }
    return 0;
  }
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = sub_1B0DA6708(a1, 10);
  if (*(_DWORD *)(a1 + 60)) {
    goto LABEL_124;
  }
  int v5 = v4;
  uint64_t v6 = *(void *)v4 + (int)v4[2];
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(_DWORD *)(v6 + 16) = 0;
  uint64_t v7 = *(void *)v4;
  int v115 = v4[2];
  unsigned int v8 = **(_DWORD **)v4;
  LODWORD(v6) = *(_DWORD *)(*(void *)v4 + 4);
  BOOL v112 = v6 != 16777471;
  if (v6 == 16777471) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = 4;
  }
  uint64_t v10 = v7 + v9;
  unsigned int v11 = *(unsigned __int8 *)(v7 + v9);
  if (*(char *)(v7 + v9) < 0)
  {
    int v13 = *(unsigned __int8 *)(v10 + 1);
    if (*(char *)(v10 + 1) < 0)
    {
      int v14 = *(char *)(v10 + 2);
      if (v14 < 0)
      {
        unint64_t v118 = 0;
        unsigned int v12 = sub_1B0DA69F4((char *)v10, (unint64_t *)&v118);
        unsigned int v11 = v118 & 0x7FFFFFFF;
      }
      else
      {
        unsigned int v11 = v14 & 0x7F | (v11 << 14) & 0x1FC07F | ((v13 & 0x7F) << 7);
        unsigned int v12 = 3;
      }
    }
    else
    {
      unsigned int v11 = ((v11 & 0x7F) << 7) | v13;
      unsigned int v12 = 2;
    }
  }
  else
  {
    unsigned int v12 = 1;
  }
  unint64_t v15 = v12 + (unint64_t)v9;
  uint64_t v16 = v7 + v15;
  unsigned int v17 = *(unsigned __int8 *)(v7 + v15);
  unsigned int v110 = v8;
  if (*(char *)(v7 + v15) < 0)
  {
    int v19 = *(unsigned __int8 *)(v16 + 1);
    if (*(char *)(v16 + 1) < 0)
    {
      int v20 = *(char *)(v16 + 2);
      if (v20 < 0)
      {
        unint64_t v118 = 0;
        int v18 = sub_1B0DA69F4((char *)v16, (unint64_t *)&v118);
        unsigned int v17 = v118 & 0x7FFFFFFF;
      }
      else
      {
        unsigned int v17 = v20 & 0x7F | (v17 << 14) & 0x1FC07F | ((v19 & 0x7F) << 7);
        int v18 = 3;
      }
    }
    else
    {
      unsigned int v17 = ((v17 & 0x7F) << 7) | v19;
      int v18 = 2;
    }
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v21 = 0;
  int v22 = 267;
  if (v11 > 0x7D0 || v17 > 0x7D0)
  {
LABEL_116:
    *(_DWORD *)(a1 + 60) = v22;
    unint64_t v86 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_121;
    }
    goto LABEL_117;
  }
  unsigned int v113 = v17;
  if (sqlite3_initialize())
  {
    uint64_t v21 = 0;
    int v22 = 7;
    goto LABEL_116;
  }
  uint64_t v106 = v11 - 1;
  uint64_t v23 = (unint64_t *)sub_1B0C7FC94(16 * (int)v106 + 48);
  uint64_t v21 = v23;
  if (!v23)
  {
    int v22 = 7;
    goto LABEL_116;
  }
  uint64_t v102 = v3;
  unsigned int v24 = v18 + v15;
  bzero(v23, 16 * (int)v106 + 48);
  BOOL v25 = 1;
  *(_DWORD *)uint64_t v21 = 1;
  *((_DWORD *)v21 + 6) = v113;
  *((_DWORD *)v21 + 7) = v11;
  int v26 = sub_1B0DA69F4((char *)(v7 + v24), v21 + 1);
  int64_t v101 = v5;
  if (!v11)
  {
    int v45 = 0;
    unint64_t v107 = 0;
    unsigned int v29 = v113;
    goto LABEL_109;
  }
  uint64_t v27 = 0;
  unint64_t v107 = 0;
  int v28 = v24 + v26;
  unint64_t v105 = v11;
  unsigned int v29 = v113;
  unsigned int v103 = v21;
  while (1)
  {
    if (v28 >= v115)
    {
      BOOL v25 = 0;
      int v45 = 267;
      goto LABEL_109;
    }
    uint64_t v30 = (unsigned int *)&v21[2 * v27 + 4];
    uint64_t v31 = (char *)(v7 + v28);
    unsigned int v32 = *v31;
    if (*v31 < 0)
    {
      int v34 = v31[1];
      if (v31[1] < 0)
      {
        int v35 = v31[2];
        if (v35 < 0)
        {
          unint64_t v118 = 0;
          unsigned int v36 = v29;
          unsigned int v33 = sub_1B0DA69F4(v31, (unint64_t *)&v118);
          unsigned int v29 = v36;
          unsigned int v32 = v118 & 0x7FFFFFFF;
          unsigned int *v30 = v118 & 0x7FFFFFFF;
        }
        else
        {
          unsigned int v32 = v35 & 0x7F | (v32 << 14) & 0x1FC07F | ((v34 & 0x7F) << 7);
          unsigned int *v30 = v32;
          unsigned int v33 = 3;
        }
      }
      else
      {
        unsigned int v32 = ((v32 & 0x7F) << 7) | v34;
        unsigned int *v30 = v32;
        unsigned int v33 = 2;
      }
    }
    else
    {
      unsigned int *v30 = v32;
      unsigned int v33 = 1;
    }
    unint64_t v37 = v28 + (unint64_t)v33;
    uint64_t v38 = v7 + v37;
    unsigned int v39 = *(unsigned __int8 *)(v7 + v37);
    if (*(char *)(v7 + v37) < 0)
    {
      int v41 = *(unsigned __int8 *)(v38 + 1);
      if (*(char *)(v38 + 1) < 0)
      {
        int v42 = *(char *)(v38 + 2);
        if (v42 < 0)
        {
          unint64_t v118 = 0;
          unsigned int v43 = v29;
          int v40 = sub_1B0DA69F4((char *)v38, (unint64_t *)&v118);
          unsigned int v29 = v43;
          unsigned int v39 = v118 & 0x7FFFFFFF;
        }
        else
        {
          unsigned int v39 = v42 & 0x7F | (v39 << 14) & 0x1FC07F | ((v41 & 0x7F) << 7);
          int v40 = 3;
        }
      }
      else
      {
        unsigned int v39 = ((v39 & 0x7F) << 7) | v41;
        int v40 = 2;
      }
    }
    else
    {
      int v40 = 1;
    }
    if (v39 < v32)
    {
      int v45 = 267;
      goto LABEL_108;
    }
    uint64_t v111 = (uint64_t)&v21[2 * v27 + 4];
    unsigned int v114 = v29;
    int v28 = v40 + v37;
    if (!sqlite3_initialize())
    {
      unint64_t v47 = (void *)sub_1B0C7FC94(56 * v39);
      if (v47)
      {
        unint64_t v48 = v47;
        bzero(v47, 56 * v39);
        unint64_t v49 = (char *)&v21[2 * v27];
        *((void *)v49 + 5) = v48;
        uint64_t v50 = v49 + 40;
        *((_DWORD *)v50 - 1) = v39;
        if (v39)
        {
          uint64_t v51 = 0;
          uint64_t v108 = 56 * v39;
          unsigned int v29 = v114;
          int v104 = v50;
          unsigned int v109 = v39;
          while (v28 < v115)
          {
            uint64_t v52 = *v50;
            unint64_t v53 = (char *)(v7 + v28);
            int v54 = *v53;
            if (*v53 < 0)
            {
              int v56 = v53[1];
              if (v53[1] < 0)
              {
                int v57 = v53[2];
                if (v57 < 0)
                {
                  unint64_t v118 = 0;
                  unsigned int v55 = sub_1B0DA69F4(v53, (unint64_t *)&v118);
                  uint64_t v50 = v104;
                  unsigned int v29 = v114;
                  *(_DWORD *)(v52 + v51) = v118 & 0x7FFFFFFF;
                }
                else
                {
                  *(_DWORD *)(v52 + v51) = v57 & 0x7F | (v54 << 14) & 0x1FC07F | ((v56 & 0x7F) << 7);
                  unsigned int v55 = 3;
                }
              }
              else
              {
                *(_DWORD *)(v52 + v51) = ((v54 & 0x7F) << 7) | v56;
                unsigned int v55 = 2;
              }
            }
            else
            {
              *(_DWORD *)(v52 + v51) = v54;
              unsigned int v55 = 1;
            }
            unint64_t v58 = v28 + (unint64_t)v55;
            uint64_t v59 = v7 + v58;
            uint64_t v60 = v52 + v51;
            signed int v61 = *(unsigned __int8 *)(v7 + v58);
            if (*(char *)(v7 + v58) < 0)
            {
              int v63 = *(unsigned __int8 *)(v59 + 1);
              if (*(char *)(v59 + 1) < 0)
              {
                int v64 = *(char *)(v59 + 2);
                if (v64 < 0)
                {
                  unint64_t v118 = 0;
                  int v62 = sub_1B0DA69F4((char *)v59, (unint64_t *)&v118);
                  uint64_t v50 = v104;
                  unsigned int v29 = v114;
                  signed int v61 = v118 & 0x7FFFFFFF;
                  *(_DWORD *)(v60 + 4) = v118 & 0x7FFFFFFF;
                }
                else
                {
                  signed int v61 = v64 & 0x7F | (v61 << 14) & 0x1FC07F | ((v63 & 0x7F) << 7);
                  *(_DWORD *)(v60 + 4) = v61;
                  int v62 = 3;
                }
              }
              else
              {
                signed int v61 = ((v61 & 0x7F) << 7) | v63;
                *(_DWORD *)(v60 + 4) = v61;
                int v62 = 2;
              }
            }
            else
            {
              *(_DWORD *)(v60 + 4) = v61;
              int v62 = 1;
            }
            int v65 = v62 + v58;
            unint64_t v66 = (char *)(v7 + v62 + (int)v58);
            uint64_t v67 = v52 + v51;
            signed int v68 = *v66;
            if (*v66 < 0)
            {
              int v70 = v66[1];
              if (v66[1] < 0)
              {
                int v71 = v66[2];
                if (v71 < 0)
                {
                  unint64_t v118 = 0;
                  int v69 = sub_1B0DA69F4(v66, (unint64_t *)&v118);
                  uint64_t v50 = v104;
                  unsigned int v29 = v114;
                  signed int v68 = v118 & 0x7FFFFFFF;
                  *(_DWORD *)(v67 + 8) = v118 & 0x7FFFFFFF;
                }
                else
                {
                  signed int v68 = v71 & 0x7F | (v68 << 14) & 0x1FC07F | ((v70 & 0x7F) << 7);
                  *(_DWORD *)(v67 + 8) = v68;
                  int v69 = 3;
                }
              }
              else
              {
                signed int v68 = ((v68 & 0x7F) << 7) | v70;
                *(_DWORD *)(v67 + 8) = v68;
                int v69 = 2;
              }
            }
            else
            {
              *(_DWORD *)(v67 + 8) = v68;
              int v69 = 1;
            }
            int v28 = v69 + v65;
            if (!v112)
            {
              uint64_t v72 = v52 + v51;
              int v73 = v28 + sub_1B0DA69F4((char *)(v7 + v28), (unint64_t *)(v52 + v51 + 16));
              unint64_t v74 = (unint64_t *)(v52 + v51 + 24);
              int v75 = v73 + sub_1B0DA69F4((char *)(v7 + v73), v74);
              unsigned int v76 = (char *)(v7 + v75);
              int v77 = *v76;
              if ((v77 & 0x80) != 0)
              {
                int v79 = v76[1];
                if (v76[1] < 0)
                {
                  int v80 = v76[2];
                  if (v80 < 0)
                  {
                    unint64_t v118 = 0;
                    int v78 = sub_1B0DA69F4(v76, (unint64_t *)&v118);
                    *(_DWORD *)(v72 + 32) = v118 & 0x7FFFFFFF;
                  }
                  else
                  {
                    *(_DWORD *)(v72 + 32) = v80 & 0x7F | (v77 << 14) & 0x1FC07F | ((v79 & 0x7F) << 7);
                    int v78 = 3;
                  }
                }
                else
                {
                  *(_DWORD *)(v72 + 32) = ((v77 & 0x7F) << 7) | v79;
                  int v78 = 2;
                }
              }
              else
              {
                *(_DWORD *)(v72 + 32) = v77;
                int v78 = 1;
              }
              uint64_t v81 = v52 + v51;
              int v82 = v78 + v75 + sub_1B0DA69F4((char *)(v7 + v78 + v75), (unint64_t *)(v81 + 40));
              int v28 = v82 + sub_1B0DA69F4((char *)(v7 + v82), (unint64_t *)(v81 + 48));
              unint64_t v83 = v107;
              if (v107 <= *v74) {
                unint64_t v83 = *v74;
              }
              unint64_t v107 = v83;
              signed int v68 = *(_DWORD *)(v67 + 8);
              signed int v61 = *(_DWORD *)(v60 + 4);
              uint64_t v21 = v103;
              uint64_t v50 = v104;
              unsigned int v29 = v114;
            }
            unsigned int v39 = v109;
            if (v68 < v61) {
              break;
            }
            v51 += 56;
            if (v108 == v51)
            {
              int v45 = 0;
              goto LABEL_90;
            }
          }
          int v45 = 267;
        }
        else
        {
          int v45 = 0;
          unsigned int v29 = v114;
        }
LABEL_90:
        uint64_t v44 = (unint64_t *)v111;
        goto LABEL_91;
      }
    }
    unsigned int v29 = v114;
    uint64_t v44 = &v21[2 * v27 + 4];
    if (v39) {
      break;
    }
    int v45 = 0;
    int v46 = (char *)&v21[2 * v27];
    *((void *)v46 + 5) = 0;
    *((_DWORD *)v46 + 9) = 0;
LABEL_91:
    if (v27)
    {
      if (*((_DWORD *)v44 - 4) && v39 == 0) {
        int v45 = 267;
      }
    }
    if (v27 == v106 && *(_DWORD *)v44) {
      int v45 = 267;
    }
    v29 -= v39;
    BOOL v25 = v45 == 0;
    if (!v45 && ++v27 < v105) {
      continue;
    }
    goto LABEL_109;
  }
  int v45 = 7;
LABEL_108:
  BOOL v25 = 0;
  v21[2 * v27 + 5] = 0;
  v29 -= v39;
LABEL_109:
  if (v29 != 0 && v25) {
    int v22 = 267;
  }
  else {
    int v22 = v45;
  }
  int v5 = v101;
  if (!v112) {
    v21[2] = v107 + 1;
  }
  uint64_t v85 = v102;
  if (v22)
  {
    sub_1B0DA4EF8(v21);
    uint64_t v21 = 0;
    goto LABEL_116;
  }
  unsigned int v87 = bswap32(v110);
  *(_DWORD *)(a1 + 60) = 0;
  if (!*(_DWORD *)(v102 + 136) || *(_DWORD *)(v102 + 132) != v87)
  {
    unint64_t v118 = 0;
    int v117 = 0;
    *(_OWORD *)(v102 + 136) = xmmword_1B0DE1690;
    *(_DWORD *)(v102 + 152) = 0x100000;
    *(_DWORD *)(v102 + 180) = 10;
    uint64_t v88 = (unsigned __int8 *)sub_1B0DA32B4(&v117, "SELECT k, v FROM %Q.'%q_config'", *(void *)(v102 + 8), *(void *)(v102 + 16));
    if (v88)
    {
      double v90 = v88;
      int v22 = sub_1B0C7EAC0(*(void *)v102, v88, 0xFFFFFFFFLL, 128, 0, &v118, 0, v89);
      uint64_t v91 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0)
      {
LABEL_137:
        (*v91)(v90);
        goto LABEL_139;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v90);
      --qword_1EB220150;
      off_1EB21C9E8(v90);
      double v90 = (unsigned __int8 *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v91 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
        goto LABEL_137;
      }
    }
    else
    {
      int v22 = v117;
    }
LABEL_139:
    if (v22)
    {
      LODWORD(v92) = 0;
LABEL_167:
      if (v22 || (v92 & 0xFFFFFFFE) == 4)
      {
        *(_DWORD *)(v85 + 128) = v92;
        if (!v22) {
          *(_DWORD *)(v85 + 132) = v87;
        }
      }
      else
      {
        if (*(void *)(v85 + 184)) {
          **(void **)(v85 + 184) = sqlite3_mprintf("invalid fts5 file format (found %d, expected %d or %d) - run 'rebuild'", v92, 4, 5);
        }
        int v22 = 1;
      }
      goto LABEL_116;
    }
    if (sqlite3_step(v118) != 100)
    {
      LODWORD(v92) = 0;
LABEL_166:
      int v22 = sqlite3_finalize(v118);
      uint64_t v85 = v102;
      goto LABEL_167;
    }
    LODWORD(v92) = 0;
LABEL_145:
    uint64_t v93 = (unsigned __int8 *)sqlite3_column_text(v118, 0);
    uint64_t v94 = sqlite3_column_value(v118, 1);
    if (!v93)
    {
LABEL_143:
      sub_1B0DA6B88(v102, v93, v94, &v116);
      goto LABEL_144;
    }
    uint64_t v95 = v93;
    for (uint64_t i = "version"; ; ++i)
    {
      uint64_t v97 = *v95;
      uint64_t v98 = *(unsigned __int8 *)i;
      if (v97 == v98)
      {
        if (!*v95)
        {
          if (v94)
          {
            __int16 v99 = *((_WORD *)v94 + 10);
            if ((v99 & 0x24) != 0)
            {
              uint64_t v92 = *(void *)v94;
            }
            else if ((v99 & 8) != 0)
            {
              double v100 = *(double *)v94;
              if (*(double *)v94 >= -9.22337204e18)
              {
                if (v100 <= 9.22337204e18) {
                  uint64_t v92 = (uint64_t)v100;
                }
                else {
                  LODWORD(v92) = -1;
                }
              }
              else
              {
                LODWORD(v92) = 0;
              }
            }
            else if ((v99 & 0x12) != 0 && *((void *)v94 + 1))
            {
              LODWORD(v92) = sub_1B0D186C0((uint64_t)v94);
            }
            else
            {
              LODWORD(v92) = 0;
            }
          }
          else
          {
            sub_1B0CE1978(89717);
            LODWORD(v92) = 0;
          }
LABEL_144:
          if (sqlite3_step(v118) != 100) {
            goto LABEL_166;
          }
          goto LABEL_145;
        }
      }
      else if (byte_1B0DE1758[v97] != byte_1B0DE1758[v98])
      {
        goto LABEL_143;
      }
      ++v95;
    }
  }
  unint64_t v86 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_121:
    (*v86)(v5);
    goto LABEL_122;
  }
LABEL_117:
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
  --qword_1EB220150;
  off_1EB21C9E8(v5);
  int v5 = (_DWORD *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unint64_t v86 = &xmmword_1EB21CA50;
    goto LABEL_121;
  }
LABEL_122:
  if (*(_DWORD *)(a1 + 60))
  {
    sub_1B0DA4EF8(v21);
LABEL_124:
    uint64_t v21 = 0;
  }
  *(void *)(a1 + 144) = v21;
  if (*(_DWORD *)(a1 + 60)) {
    return 0;
  }
LABEL_126:
  uint64_t result = *(_DWORD **)(a1 + 144);
  ++*result;
  return result;
}

sqlite3_int64 sub_1B0DA6590(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 60)) {
    return 0;
  }
  uint64_t v4 = (sqlite3_stmt **)(a1 + 128);
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 128);
  if (v3) {
    goto LABEL_4;
  }
  int v5 = (unsigned __int8 *)sqlite3_mprintf("PRAGMA %Q.data_version", *(void *)(*(void *)a1 + 8));
  sqlite3_int64 v1 = (sqlite3_int64)v5;
  if (*(_DWORD *)(a1 + 60))
  {
    if (!v5) {
      return v1;
    }
  }
  else
  {
    if (!v5)
    {
      int v7 = 7;
LABEL_11:
      *(_DWORD *)(a1 + 60) = v7;
      return v1;
    }
    *(_DWORD *)(a1 + 60) = sub_1B0C7EAC0(**(void **)a1, v5, 0xFFFFFFFFLL, 133, 0, v4, 0, v6);
  }
  uint64_t v9 = (void (**)(sqlite3_int64))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_20;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  sqlite3_int64 v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v9 = (void (**)(sqlite3_int64))&xmmword_1EB21CA50;
LABEL_20:
    (*v9)(v1);
  }
  if (!*(_DWORD *)(a1 + 60))
  {
    uint64_t v3 = *v4;
LABEL_4:
    if (sqlite3_step(v3) == 100) {
      sqlite3_int64 v1 = sqlite3_column_int64(*v4, 0);
    }
    else {
      sqlite3_int64 v1 = 0;
    }
    int v7 = sqlite3_reset(*v4);
    goto LABEL_11;
  }
  return 0;
}

_DWORD *sub_1B0DA6708(uint64_t a1, sqlite3_int64 a2)
{
  if (!*(_DWORD *)(a1 + 60))
  {
    int v5 = (int **)(a1 + 64);
    uint64_t v6 = *(int **)(a1 + 64);
    if (v6)
    {
      *int v5 = 0;
      int v7 = sqlite3_blob_reopen((sqlite3_blob *)v6, a2);
      *int v5 = v6;
      if (v7)
      {
        *int v5 = 0;
        unsigned int v8 = (sqlite3_stmt *)*((void *)v6 + 3);
        uint64_t v9 = (void *)*((void *)v6 + 4);
        uint64_t v10 = v9[3];
        if (v10) {
          xmmword_1EB21CA40(v10);
        }
        sub_1B0D05C10(v9, v6);
        uint64_t v11 = v9[3];
        if (v11) {
          xmmword_1EB21CA50(v11);
        }
        sqlite3_finalize(v8);
        uint64_t v6 = *v5;
      }
      if (v7 == 4) {
        int v12 = 0;
      }
      else {
        int v12 = v7;
      }
      if (v12)
      {
LABEL_18:
        if (v12 == 1) {
          int v13 = 267;
        }
        else {
          int v13 = v12;
        }
        if (v13)
        {
          int v2 = 0;
          goto LABEL_37;
        }
        int v14 = *v5;
        if (*v5 && *((void *)v14 + 3))
        {
          uint64_t v15 = *v14;
          if (!sqlite3_initialize()) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v15 = 0;
          if (!sqlite3_initialize())
          {
LABEL_26:
            uint64_t v16 = (int)v15;
            uint64_t v17 = sub_1B0C7FC94((int)v15 + 36);
            int v2 = (_DWORD *)v17;
            if (v17)
            {
              *(_DWORD *)(v17 + 8) = v15;
              *(void *)uint64_t v17 = v17 + 16;
              int v13 = sub_1B0CEF9D8(*v5, (char *)(v17 + 16), v15, 0, sub_1B0CEFBDC);
              if (v13)
              {
                int v18 = &off_1EB21C9E8;
                if (dword_1EB21C9C0)
                {
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
                  --qword_1EB220150;
                  off_1EB21C9E8(v2);
                  int v2 = (_DWORD *)xmmword_1EB2201B0;
                  if (!(void)xmmword_1EB2201B0) {
                    goto LABEL_37;
                  }
                  int v18 = &xmmword_1EB21CA50;
                }
                (*v18)(v2);
                int v2 = 0;
              }
              else
              {
                *(unsigned char *)(*(void *)v2 + v16) = 0;
                *(unsigned char *)(v16 + *(void *)v2 + 1) = 0;
                v2[3] = __rev16(*(unsigned __int16 *)(*(void *)v2 + 2));
              }
LABEL_37:
              *(_DWORD *)(a1 + 60) = v13;
              ++*(_DWORD *)(a1 + 112);
              return v2;
            }
LABEL_36:
            int v13 = 7;
            goto LABEL_37;
          }
        }
        int v2 = 0;
        goto LABEL_36;
      }
    }
    else
    {
      int v12 = 0;
    }
    if (!v6) {
      int v12 = sqlite3_blob_open(**(sqlite3 ***)a1, *(const char **)(*(void *)a1 + 8), *(const char **)(a1 + 8), "block", a2, 0, (sqlite3_blob **)v5);
    }
    goto LABEL_18;
  }
  return 0;
}

uint64_t sub_1B0DA6954(char *a1, int *a2)
{
  int v3 = *a1;
  if (*a1 < 0)
  {
    int v5 = a1[1];
    if (a1[1] < 0)
    {
      int v6 = a1[2];
      if (v6 < 0)
      {
        unint64_t v7 = 0;
        uint64_t result = sub_1B0DA69F4(a1, &v7);
        *a2 = v7 & 0x7FFFFFFF;
      }
      else
      {
        *a2 = v6 & 0x7F | (v3 << 14) & 0x1FC07F | ((v5 & 0x7F) << 7);
        return 3;
      }
    }
    else
    {
      *a2 = ((v3 & 0x7F) << 7) | v5;
      return 2;
    }
  }
  else
  {
    *a2 = v3;
    return 1;
  }
  return result;
}

uint64_t sub_1B0DA69F4(char *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  if (*a1 < 0)
  {
    unsigned int v4 = a1[1];
    if (a1[1] < 0)
    {
      int v5 = a1[2];
      unsigned int v6 = v5 & 0x7F | (v2 << 14) & 0x1FFFFF;
      if (v5 < 0)
      {
        int v7 = (a1[3] | (v4 << 14)) & 0x1FC07F;
        if (a1[3] < 0)
        {
          unsigned int v8 = a1[4];
          int v9 = v8 | (v6 << 14);
          if (a1[4] < 0)
          {
            unsigned int v10 = v7 | (v6 << 7);
            int v11 = a1[5] | (v7 << 14);
            if (a1[5] < 0)
            {
              int v12 = a1[6] | (v9 << 14);
              if (a1[6] < 0)
              {
                int v13 = v12 & 0x1FC07F;
                int v14 = a1[7] | (v11 << 14);
                if (a1[7] < 0)
                {
                  unint64_t v15 = a1[8] | (v13 << 15) | (v14 << 8) & 0x1FC07F00u | ((unint64_t)((v8 >> 3) & 0xF | (16 * v10)) << 32);
                  uint64_t result = 9;
                }
                else
                {
                  unint64_t v15 = v14 & 0xF01FC07F | (v13 << 7) | ((unint64_t)(v10 >> 4) << 32);
                  uint64_t result = 8;
                }
                *a2 = v15;
              }
              else
              {
                uint64_t result = 7;
                *a2 = v12 & 0xF01FC07F | (v11 << 7) & 0xFE03F80 | ((unint64_t)(v10 >> 11) << 32);
              }
            }
            else
            {
              uint64_t result = 6;
              *a2 = v11 | (v9 << 7) & 0xFE03F80u | ((unint64_t)(v10 >> 18) << 32);
            }
          }
          else
          {
            uint64_t result = 5;
            *a2 = v9 | (v7 << 7) | ((unint64_t)(v6 >> 18) << 32);
          }
        }
        else
        {
          uint64_t result = 4;
          *a2 = v7 | (v6 << 7);
        }
      }
      else
      {
        uint64_t result = 3;
        *a2 = v6 | ((v4 & 0x7F) << 7);
      }
    }
    else
    {
      uint64_t result = 2;
      *a2 = ((v2 & 0x7F) << 7) | v4;
    }
  }
  else
  {
    uint64_t result = 1;
    *a2 = v2;
  }
  return result;
}

uint64_t sub_1B0DA6B88(uint64_t a1, unsigned char *a2, sqlite3_value *a3, _DWORD *a4)
{
  if (!a2) {
    goto LABEL_85;
  }
  int v7 = "pgsz";
  for (uint64_t i = a2; ; ++i)
  {
    uint64_t v9 = *i;
    uint64_t v10 = *(unsigned __int8 *)v7;
    if (v9 != v10) {
      break;
    }
    if (!*i)
    {
      if (a3)
      {
        __int16 v29 = *((_WORD *)a3 + 10);
        if ((0x4000000040004uLL >> v29))
        {
          sub_1B0CEE968((uint64_t)a3, 0);
          __int16 v29 = *((_WORD *)a3 + 10);
        }
        if ((0x50505050uLL >> (v29 & 0x3F)))
        {
          if ((v29 & 0x24) != 0)
          {
            uint64_t v38 = *(void *)a3;
          }
          else if ((v29 & 8) != 0)
          {
            double v50 = *(double *)a3;
            if (*(double *)a3 < -9.22337204e18 || v50 > 9.22337204e18) {
              goto LABEL_85;
            }
            uint64_t v38 = (uint64_t)v50;
          }
          else
          {
            if ((v29 & 0x12) == 0 || !*((void *)a3 + 1)) {
              goto LABEL_85;
            }
            LODWORD(v38) = sub_1B0D186C0((uint64_t)a3);
          }
          if ((v38 - 65537) > 0xFFFF001E)
          {
            uint64_t result = 0;
            *(_DWORD *)(a1 + 136) = v38;
            return result;
          }
        }
LABEL_85:
        uint64_t result = 0;
        *a4 = 1;
        return result;
      }
      goto LABEL_84;
    }
LABEL_4:
    ++v7;
  }
  if (byte_1B0DE1758[v9] == byte_1B0DE1758[v10]) {
    goto LABEL_4;
  }
  int v11 = "hashsize";
  for (uint64_t j = a2; ; ++j)
  {
    uint64_t v13 = *j;
    uint64_t v14 = *(unsigned __int8 *)v11;
    if (v13 != v14) {
      break;
    }
    if (!*j)
    {
      if (a3)
      {
        __int16 v34 = *((_WORD *)a3 + 10);
        if ((0x4000000040004uLL >> v34))
        {
          sub_1B0CEE968((uint64_t)a3, 0);
          __int16 v34 = *((_WORD *)a3 + 10);
        }
        if (((0x50505050uLL >> (v34 & 0x3F)) & 1) == 0) {
          goto LABEL_85;
        }
        if ((v34 & 0x24) != 0)
        {
          uint64_t v45 = *(void *)a3;
        }
        else if ((v34 & 8) != 0)
        {
          double v56 = *(double *)a3;
          if (*(double *)a3 < -9.22337204e18 || v56 > 9.22337204e18) {
            goto LABEL_85;
          }
          uint64_t v45 = (uint64_t)v56;
        }
        else
        {
          if ((v34 & 0x12) == 0 || !*((void *)a3 + 1)) {
            goto LABEL_85;
          }
          LODWORD(v45) = sub_1B0D186C0((uint64_t)a3);
        }
        if ((int)v45 <= 0) {
          goto LABEL_85;
        }
        uint64_t result = 0;
        *(_DWORD *)(a1 + 152) = v45;
        return result;
      }
      goto LABEL_84;
    }
LABEL_9:
    ++v11;
  }
  if (byte_1B0DE1758[v13] == byte_1B0DE1758[v14]) {
    goto LABEL_9;
  }
  unint64_t v15 = "automerge";
  for (uint64_t k = a2; ; ++k)
  {
    uint64_t v17 = *k;
    uint64_t v18 = *(unsigned __int8 *)v15;
    if (v17 == v18)
    {
      if (*k) {
        goto LABEL_14;
      }
      if (!a3) {
        goto LABEL_84;
      }
      __int16 v40 = *((_WORD *)a3 + 10);
      if ((0x4000000040004uLL >> v40))
      {
        sub_1B0CEE968((uint64_t)a3, 0);
        __int16 v40 = *((_WORD *)a3 + 10);
      }
      if (((0x50505050uLL >> (v40 & 0x3F)) & 1) == 0) {
        goto LABEL_85;
      }
      if ((v40 & 0x24) != 0)
      {
        uint64_t v47 = *(void *)a3;
LABEL_77:
        if (v47 >= 0x41) {
          goto LABEL_85;
        }
        if (v47 == 1) {
          LODWORD(v48) = 4;
        }
        else {
          LODWORD(v48) = v47;
        }
        goto LABEL_137;
      }
      if ((v40 & 8) != 0)
      {
        double v61 = *(double *)a3;
        if (*(double *)a3 >= -9.22337204e18)
        {
          if (v61 > 9.22337204e18) {
            goto LABEL_85;
          }
          uint64_t v47 = (uint64_t)v61;
          goto LABEL_77;
        }
      }
      else if ((v40 & 0x12) != 0)
      {
        uint64_t v48 = *((void *)a3 + 1);
        if (v48)
        {
          LODWORD(v47) = sub_1B0D186C0((uint64_t)a3);
          goto LABEL_77;
        }
LABEL_137:
        uint64_t result = 0;
        *(_DWORD *)(a1 + 140) = v48;
        return result;
      }
      LODWORD(v48) = 0;
      goto LABEL_137;
    }
    if (byte_1B0DE1758[v17] != byte_1B0DE1758[v18]) {
      break;
    }
LABEL_14:
    ++v15;
  }
  int v19 = "usermerge";
  for (uint64_t m = a2; ; ++m)
  {
    uint64_t v21 = *m;
    uint64_t v22 = *(unsigned __int8 *)v19;
    if (v21 != v22) {
      break;
    }
    if (!*m)
    {
      if (a3)
      {
        __int16 v46 = *((_WORD *)a3 + 10);
        if ((0x4000000040004uLL >> v46))
        {
          sub_1B0CEE968((uint64_t)a3, 0);
          __int16 v46 = *((_WORD *)a3 + 10);
        }
        if (((0x50505050uLL >> (v46 & 0x3F)) & 1) == 0) {
          goto LABEL_85;
        }
        if ((v46 & 0x24) != 0)
        {
          uint64_t v51 = *(void *)a3;
        }
        else if ((v46 & 8) != 0)
        {
          double v63 = *(double *)a3;
          if (*(double *)a3 < -9.22337204e18 || v63 > 9.22337204e18) {
            goto LABEL_85;
          }
          uint64_t v51 = (uint64_t)v63;
        }
        else
        {
          if ((v46 & 0x12) == 0 || !*((void *)a3 + 1)) {
            goto LABEL_85;
          }
          LODWORD(v51) = sub_1B0D186C0((uint64_t)a3);
        }
        if ((v51 - 17) <= 0xFFFFFFF0) {
          goto LABEL_85;
        }
        uint64_t result = 0;
        *(_DWORD *)(a1 + 148) = v51;
        return result;
      }
      goto LABEL_84;
    }
LABEL_19:
    ++v19;
  }
  if (byte_1B0DE1758[v21] == byte_1B0DE1758[v22]) {
    goto LABEL_19;
  }
  uint64_t v23 = "crisismerge";
  for (n = a2; ; ++n)
  {
    uint64_t v25 = *n;
    uint64_t v26 = *(unsigned __int8 *)v23;
    if (v25 == v26)
    {
      if (*n) {
        goto LABEL_24;
      }
      if (a3)
      {
        __int16 v49 = *((_WORD *)a3 + 10);
        if ((0x4000000040004uLL >> v49))
        {
          sub_1B0CEE968((uint64_t)a3, 0);
          __int16 v49 = *((_WORD *)a3 + 10);
        }
        if (((0x50505050uLL >> (v49 & 0x3F)) & 1) == 0) {
          goto LABEL_85;
        }
        if ((v49 & 0x24) != 0)
        {
          uint64_t v57 = *(void *)a3;
          goto LABEL_121;
        }
        if ((v49 & 8) != 0)
        {
          double v64 = *(double *)a3;
          if (*(double *)a3 >= -9.22337204e18)
          {
            if (v64 > 9.22337204e18) {
              goto LABEL_85;
            }
            uint64_t v57 = (uint64_t)v64;
LABEL_121:
            if ((v57 & 0x80000000) != 0) {
              goto LABEL_85;
            }
            if ((int)v57 >= 1999) {
              int v58 = 1999;
            }
            else {
              int v58 = v57;
            }
            if (v57 > 1) {
              goto LABEL_158;
            }
          }
        }
        else if ((v49 & 0x12) != 0 && *((void *)a3 + 1))
        {
          LODWORD(v57) = sub_1B0D186C0((uint64_t)a3);
          goto LABEL_121;
        }
        int v58 = 16;
LABEL_158:
        uint64_t result = 0;
        *(_DWORD *)(a1 + 144) = v58;
        return result;
      }
LABEL_84:
      sub_1B0CE1978(97220);
      goto LABEL_85;
    }
    if (byte_1B0DE1758[v25] != byte_1B0DE1758[v26]) {
      break;
    }
LABEL_24:
    ++v23;
  }
  uint64_t v27 = "deletemerge";
  for (iuint64_t i = a2; ; ++ii)
  {
    uint64_t v30 = *ii;
    uint64_t v31 = *(unsigned __int8 *)v27;
    if (v30 == v31)
    {
      if (*ii) {
        goto LABEL_32;
      }
      if (a3)
      {
        __int16 v52 = *((_WORD *)a3 + 10);
        if ((0x4000000040004uLL >> v52))
        {
          sub_1B0CEE968((uint64_t)a3, 0);
          __int16 v52 = *((_WORD *)a3 + 10);
        }
        if ((0x50505050uLL >> (v52 & 0x3F)))
        {
          int v53 = sqlite3_value_int(a3);
          if (v53 <= 0x64) {
            int v54 = v53;
          }
          else {
            int v54 = 0;
          }
          if (v53 >= 0) {
            int v55 = v54;
          }
          else {
            int v55 = 10;
          }
          goto LABEL_140;
        }
      }
      else
      {
        sub_1B0CE1978(97220);
      }
      *a4 = 1;
      int v55 = 10;
LABEL_140:
      uint64_t result = 0;
      *(_DWORD *)(a1 + 180) = v55;
      return result;
    }
    if (byte_1B0DE1758[v30] != byte_1B0DE1758[v31]) {
      break;
    }
LABEL_32:
    ++v27;
  }
  unsigned int v32 = "rank";
  for (juint64_t j = a2; ; ++jj)
  {
    uint64_t v35 = *jj;
    uint64_t v36 = *(unsigned __int8 *)v32;
    if (v35 == v36) {
      break;
    }
    if (byte_1B0DE1758[v35] != byte_1B0DE1758[v36])
    {
      for (kuint64_t k = "secure-delete"; ; ++kk)
      {
        uint64_t v41 = *a2;
        uint64_t v42 = *(unsigned __int8 *)kk;
        if (v41 == v42)
        {
          if (!*a2)
          {
            if (sqlite3_value_numeric_type(a3) == 1)
            {
              int v43 = sqlite3_value_int(a3);
              if ((v43 & 0x80000000) == 0)
              {
                int v44 = v43;
                uint64_t result = 0;
                *(_DWORD *)(a1 + 176) = v44 != 0;
                return result;
              }
            }
            goto LABEL_85;
          }
        }
        else if (byte_1B0DE1758[v41] != byte_1B0DE1758[v42])
        {
          goto LABEL_85;
        }
        ++a2;
      }
    }
LABEL_40:
    ++v32;
  }
  if (*jj) {
    goto LABEL_40;
  }
  if (!a3) {
    goto LABEL_147;
  }
  int v59 = *((unsigned __int16 *)a3 + 10);
  if ((~v59 & 0x202) == 0 && *((unsigned char *)a3 + 22) == 1)
  {
    uint64_t v60 = (unsigned __int8 *)*((void *)a3 + 1);
    goto LABEL_148;
  }
  if (v59) {
LABEL_147:
  }
    uint64_t v60 = 0;
  else {
    uint64_t v60 = (unsigned __int8 *)sub_1B0D18254((int *)a3, 1);
  }
LABEL_148:
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  uint64_t result = sub_1B0DA72D0(v60, &v66, &v65);
  if (result == 1) {
    goto LABEL_85;
  }
  if (!result)
  {
    sqlite3_free(*(void **)(a1 + 160));
    sqlite3_free(*(void **)(a1 + 168));
    uint64_t result = 0;
    uint64_t v62 = v65;
    *(void *)(a1 + 160) = v66;
    *(void *)(a1 + 168) = v62;
  }
  return result;
}

uint64_t sub_1B0DA72D0(unsigned __int8 *a1, void *a2, void *a3)
{
  *a2 = 0;
  *a3 = 0;
  if (!a1) {
    return 1;
  }
  int v5 = a1;
  unsigned int v6 = a1 - 1;
  do
  {
    int v8 = *v5++;
    unsigned __int8 v7 = v8;
    ++v6;
  }
  while (v8 == 32);
  size_t v9 = 0;
  while ((v7 & 0x80) != 0 || byte_1B0DE690B[v7])
    unsigned __int8 v7 = v5[v9++];
  if (!v9) {
    return 1;
  }
  if (sqlite3_initialize() || (int v12 = (void *)sub_1B0C7FC94(v9 + 1)) == 0)
  {
    if ((uint64_t)(v9 + 1) > 0) {
      return 7;
    }
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = v12;
    bzero(v12, v9 + 1);
    memcpy(v13, v5 - 1, v9);
  }
  uint64_t v14 = (char *)&v5[v9 - 2];
  uint64_t v15 = (uint64_t)&v6[v9];
  do
  {
    int v17 = *++v14;
    int v16 = v17;
    ++v15;
  }
  while (v17 == 32);
  if (v16 == 40)
  {
    do
    {
      int v19 = *++v14;
      int v18 = v19;
      ++v15;
    }
    while (v19 == 32);
    if (v18 == 41)
    {
LABEL_22:
      int v20 = 0;
LABEL_23:
      uint64_t v10 = 0;
      *a2 = v13;
      *a3 = v20;
      return v10;
    }
    uint64_t v21 = -v15;
    uint64_t v22 = v14;
    while (1)
    {
      do
      {
        uint64_t v23 = (unsigned __int8 *)v22;
        int v24 = *v22++;
      }
      while (v24 == 32);
      uint64_t v22 = sub_1B0DA3890(v23);
      if (!v22) {
        break;
      }
      size_t v25 = (size_t)&v22[v21];
      do
      {
        int v27 = *v22++;
        int v26 = v27;
        ++v25;
      }
      while (v27 == 32);
      if (v26 != 44)
      {
        if (v26 != 41) {
          break;
        }
        if (!sqlite3_initialize())
        {
          __int16 v29 = (void *)sub_1B0C7FC94(v25 + 1);
          if (v29)
          {
            int v20 = v29;
            bzero(v29, v25 + 1);
            memcpy(v20, v14, v25);
            goto LABEL_23;
          }
        }
        if ((uint64_t)(v25 + 1) <= 0) {
          goto LABEL_22;
        }
        uint64_t v10 = 7;
        goto LABEL_35;
      }
    }
  }
  uint64_t v10 = 1;
LABEL_35:
  if (v13)
  {
    int v28 = (void (**)(void *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
      --qword_1EB220150;
      off_1EB21C9E8(v13);
      uint64_t v13 = (void *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        return v10;
      }
      int v28 = (void (**)(void *))&xmmword_1EB21CA50;
    }
    (*v28)(v13);
  }
  return v10;
}

double sub_1B0DA7520(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[20];
  if (v3)
  {
    unsigned int v4 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v4)(v3);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
    --qword_1EB220150;
    off_1EB21C9E8(v3);
    uint64_t v3 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v4 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v5 = a1[22];
  if (!v5) {
    goto LABEL_15;
  }
  unsigned int v6 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_14;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
  --qword_1EB220150;
  off_1EB21C9E8(v5);
  uint64_t v5 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v6 = &xmmword_1EB21CA50;
LABEL_14:
    (*v6)(v5);
  }
LABEL_15:
  uint64_t v7 = a1[7];
  if (v7)
  {
    if (*((_DWORD *)a1 + 8) == 5) {
      uint64_t v8 = *((_DWORD *)a1 + 9) != 0;
    }
    else {
      uint64_t v8 = 2;
    }
    uint64_t v9 = *(void *)(v2 + 40) + 8 * v8;
    uint64_t v11 = *(void *)(v9 + 40);
    uint64_t v10 = (void *)(v9 + 40);
    if (!v11)
    {
      sqlite3_reset((sqlite3_stmt *)a1[7]);
      *uint64_t v10 = v7;
      int v12 = (sqlite3_stmt **)a1[9];
      if (!v12) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }
    sqlite3_finalize((sqlite3_stmt *)a1[7]);
  }
  int v12 = (sqlite3_stmt **)a1[9];
  if (!v12) {
    goto LABEL_28;
  }
LABEL_22:
  sqlite3_finalize(*v12);
  uint64_t v13 = (void (**)(sqlite3_stmt **))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_27:
    (*v13)(v12);
    goto LABEL_28;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
  --qword_1EB220150;
  off_1EB21C9E8(v12);
  int v12 = (sqlite3_stmt **)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v13 = (void (**)(sqlite3_stmt **))&xmmword_1EB21CA50;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v14 = a1 + 4;
  if (*((_DWORD *)a1 + 8) != 2) {
    sub_1B0DA79A0(a1[8]);
  }
  uint64_t v15 = (void *)a1[19];
  if (v15)
  {
    do
    {
      int v16 = (void (*)(void))v15[2];
      int v17 = (void *)v15[3];
      if (v16) {
        v16(v15[1]);
      }
      int v18 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v15);
        --qword_1EB220150;
        off_1EB21C9E8(v15);
        uint64_t v15 = (void *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_33;
        }
        int v18 = &xmmword_1EB21CA50;
      }
      (*v18)(v15);
LABEL_33:
      uint64_t v15 = v17;
    }
    while (v17);
  }
  sqlite3_finalize((sqlite3_stmt *)a1[17]);
  uint64_t v19 = a1[16];
  if (v19)
  {
    int v20 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_47:
      (*v20)(v19);
      goto LABEL_48;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
    --qword_1EB220150;
    off_1EB21C9E8(v19);
    uint64_t v19 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v20 = &xmmword_1EB21CA50;
      goto LABEL_47;
    }
  }
LABEL_48:
  if ((a1[10] & 0x10) == 0) {
    goto LABEL_63;
  }
  uint64_t v21 = a1[12];
  if (v21)
  {
    uint64_t v22 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_55:
      (*v22)(v21);
      goto LABEL_56;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v21);
    --qword_1EB220150;
    off_1EB21C9E8(v21);
    uint64_t v21 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v22 = &xmmword_1EB21CA50;
      goto LABEL_55;
    }
  }
LABEL_56:
  uint64_t v23 = a1[13];
  if (!v23) {
    goto LABEL_63;
  }
  int v24 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_62;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v23);
  --qword_1EB220150;
  off_1EB21C9E8(v23);
  uint64_t v23 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v24 = &xmmword_1EB21CA50;
LABEL_62:
    (*v24)(v23);
  }
LABEL_63:
  uint64_t v25 = *(void *)(v2 + 32);
  int v26 = *(void **)(v25 + 64);
  if (v26)
  {
    *(void *)(v25 + 64) = 0;
    int v27 = (sqlite3_stmt *)v26[3];
    int v28 = (void *)v26[4];
    uint64_t v29 = v28[3];
    if (v29) {
      xmmword_1EB21CA40(v29);
    }
    sub_1B0D05C10(v28, v26);
    uint64_t v30 = v28[3];
    if (v30) {
      xmmword_1EB21CA50(v30);
    }
    sqlite3_finalize(v27);
  }
  v14[18] = 0;
  double result = 0.0;
  *((_OWORD *)v14 + 7) = 0u;
  *((_OWORD *)v14 + 8) = 0u;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *((_OWORD *)v14 + 4) = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *(_OWORD *)uint64_t v14 = 0u;
  return result;
}

uint64_t sub_1B0DA79A0(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  sub_1B0DA7AEC(*(void *)(result + 16));
  uint64_t v2 = *(void *)(v1 + 32);
  if (v2)
  {
    uint64_t v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_8:
      (*v3)(v2);
      goto LABEL_9;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v3 = &xmmword_1EB21CA50;
      goto LABEL_8;
    }
  }
LABEL_9:
  unsigned int v4 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_14:
    uint64_t v5 = *v4;
    return v5(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  double result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v4 = &xmmword_1EB21CA50;
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1B0DA7AEC(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*(int *)(result + 40) >= 1)
  {
    uint64_t v2 = 0;
    do
      sub_1B0DA7AEC(*(void *)(v1 + 48 + 8 * v2++));
    while (v2 < *(int *)(v1 + 40));
  }
  sub_1B0DA7BE8(*(void *)(v1 + 32));
  uint64_t v3 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_10;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  double result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v3 = &xmmword_1EB21CA50;
LABEL_10:
    unsigned int v4 = *v3;
    return v4(v1);
  }
  return result;
}

uint64_t sub_1B0DA7BE8(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v2 = 0;
    do
      sub_1B0DA7D58(*(void *)(v1 + 24 + 8 * v2++));
    while (v2 < *(int *)(v1 + 16));
  }
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3)
  {
    unsigned int v4 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_11:
      (*v4)(v3);
      goto LABEL_12;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
    --qword_1EB220150;
    off_1EB21C9E8(v3);
    uint64_t v3 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v4 = &xmmword_1EB21CA50;
      goto LABEL_11;
    }
  }
LABEL_12:
  uint64_t v5 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_17:
    unsigned int v6 = *v5;
    return v6(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  double result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v5 = &xmmword_1EB21CA50;
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1B0DA7D58(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v29 = result;
    while (1)
    {
      uint64_t v3 = v1 + 32 * v2;
      uint64_t v4 = *(void *)(v3 + 40);
      if (v4)
      {
        uint64_t v5 = &off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_11;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
        --qword_1EB220150;
        off_1EB21C9E8(v4);
        uint64_t v4 = xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0) {
          break;
        }
      }
LABEL_12:
      uint64_t v6 = *(void *)(v3 + 48);
      if (v6)
      {
        uint64_t v7 = *(void *)(v6 + 24);
        sub_1B0DA8128(v6);
        uint64_t v8 = *(void **)(v7 + 64);
        if (v8)
        {
          *(void *)(v7 + 64) = 0;
          uint64_t v9 = (sqlite3_stmt *)v8[3];
          uint64_t v10 = (void *)v8[4];
          uint64_t v11 = v10[3];
          if (v11) {
            xmmword_1EB21CA40(v11);
          }
          sub_1B0D05C10(v10, v8);
          uint64_t v12 = v10[3];
          if (v12) {
            xmmword_1EB21CA50(v12);
          }
          sqlite3_finalize(v9);
        }
      }
      uint64_t v13 = *(void **)(v1 + 32 * v2 + 56);
      if (v13)
      {
        while (1)
        {
          uint64_t v14 = v13[2];
          uint64_t v15 = (void *)v13[3];
          if (v14)
          {
            uint64_t v16 = *(void *)(v14 + 24);
            sub_1B0DA8128(v14);
            int v17 = *(void **)(v16 + 64);
            if (v17)
            {
              *(void *)(v16 + 64) = 0;
              int v18 = (sqlite3_stmt *)v17[3];
              uint64_t v19 = (void *)v17[4];
              uint64_t v20 = v19[3];
              if (v20) {
                xmmword_1EB21CA40(v20);
              }
              sub_1B0D05C10(v19, v17);
              uint64_t v21 = v19[3];
              if (v21) {
                xmmword_1EB21CA50(v21);
              }
              sqlite3_finalize(v18);
            }
          }
          uint64_t v22 = v13[4];
          if (v22)
          {
            uint64_t v23 = &off_1EB21C9E8;
            if (!dword_1EB21C9C0) {
              goto LABEL_36;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v22);
            --qword_1EB220150;
            off_1EB21C9E8(v22);
            uint64_t v22 = xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0) {
              break;
            }
          }
LABEL_37:
          v13[4] = 0;
          v13[5] = 0;
          int v24 = &off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
            --qword_1EB220150;
            off_1EB21C9E8(v13);
            uint64_t v13 = (void *)xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              goto LABEL_22;
            }
            int v24 = &xmmword_1EB21CA50;
          }
          (*v24)(v13);
LABEL_22:
          uint64_t v13 = v15;
          if (!v15) {
            goto LABEL_4;
          }
        }
        uint64_t v23 = &xmmword_1EB21CA50;
LABEL_36:
        (*v23)(v22);
        goto LABEL_37;
      }
LABEL_4:
      ++v2;
      uint64_t v1 = v29;
      if (v2 >= *(int *)(v29 + 24)) {
        goto LABEL_42;
      }
    }
    uint64_t v5 = &xmmword_1EB21CA50;
LABEL_11:
    (*v5)(v4);
    goto LABEL_12;
  }
LABEL_42:
  if (*(int *)(v1 + 20) >= 1)
  {
    uint64_t v25 = *(void *)(v1 + 8);
    if (v25)
    {
      int v26 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v25);
        --qword_1EB220150;
        off_1EB21C9E8(v25);
        uint64_t v25 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_50;
        }
        int v26 = &xmmword_1EB21CA50;
      }
      (*v26)(v25);
    }
LABEL_50:
    *(void *)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  int v27 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_56:
    int v28 = *v27;
    return v28(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  double result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v27 = &xmmword_1EB21CA50;
    goto LABEL_56;
  }
  return result;
}

uint64_t sub_1B0DA8128(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*(int *)(result + 64) >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (void *)(result + 200);
    while (1)
    {
      uint64_t v4 = *v3;
      if (!*v3) {
        goto LABEL_13;
      }
      uint64_t v5 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_12;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
      --qword_1EB220150;
      off_1EB21C9E8(v4);
      uint64_t v4 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0) {
        break;
      }
LABEL_13:
      void *v3 = 0;
      v3[1] = 0;
      uint64_t v6 = *(v3 - 11);
      if (!v6) {
        goto LABEL_20;
      }
      uint64_t v7 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_19;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
      --qword_1EB220150;
      off_1EB21C9E8(v6);
      uint64_t v6 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v7 = &xmmword_1EB21CA50;
LABEL_19:
        (*v7)(v6);
      }
LABEL_20:
      uint64_t v8 = *(v3 - 10);
      if (!v8) {
        goto LABEL_27;
      }
      uint64_t v9 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_26;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
      --qword_1EB220150;
      off_1EB21C9E8(v8);
      uint64_t v8 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v9 = &xmmword_1EB21CA50;
LABEL_26:
        (*v9)(v8);
      }
LABEL_27:
      sub_1B0DA84A4(*(v3 - 8), *((_DWORD *)v3 - 14));
      sub_1B0DA8624((int *)*(v3 - 1));
      uint64_t v10 = *(v3 - 2);
      if (v10)
      {
        uint64_t v11 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
          --qword_1EB220150;
          off_1EB21C9E8(v10);
          uint64_t v10 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_5;
          }
          uint64_t v11 = &xmmword_1EB21CA50;
        }
        (*v11)(v10);
      }
LABEL_5:
      v3[3] = 0;
      *(_OWORD *)(v3 - 1) = 0u;
      *(_OWORD *)(v3 + 1) = 0u;
      *(_OWORD *)(v3 - 5) = 0u;
      *(_OWORD *)(v3 - 3) = 0u;
      *(_OWORD *)(v3 - 9) = 0u;
      *(_OWORD *)(v3 - 7) = 0u;
      *(_OWORD *)(v3 - 13) = 0u;
      *(_OWORD *)(v3 - 11) = 0u;
      ++v2;
      v3 += 17;
      if (v2 >= *(int *)(v1 + 64)) {
        goto LABEL_33;
      }
    }
    uint64_t v5 = &xmmword_1EB21CA50;
LABEL_12:
    (*v5)(v4);
    goto LABEL_13;
  }
LABEL_33:
  uint64_t v12 = *(void *)(v1 + 32);
  if (v12)
  {
    uint64_t v13 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_39:
      (*v13)(v12);
      goto LABEL_40;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
    --qword_1EB220150;
    off_1EB21C9E8(v12);
    uint64_t v12 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v13 = &xmmword_1EB21CA50;
      goto LABEL_39;
    }
  }
LABEL_40:
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  uint64_t v14 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_45:
    uint64_t v15 = *v14;
    return v15(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  double result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v14 = &xmmword_1EB21CA50;
    goto LABEL_45;
  }
  return result;
}

uint64_t sub_1B0DA84A4(uint64_t result, int a2)
{
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  if (a2 >= 1)
  {
    uint64_t v3 = a2;
    uint64_t v4 = (uint64_t *)result;
    do
    {
      uint64_t v5 = *v4;
      if (*v4)
      {
        uint64_t v6 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v5);
          --qword_1EB220150;
          off_1EB21C9E8(v5);
          uint64_t v5 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_5;
          }
          uint64_t v6 = &xmmword_1EB21CA50;
        }
        (*v6)(v5);
      }
LABEL_5:
      ++v4;
      --v3;
    }
    while (v3);
  }
  uint64_t v7 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_17;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v2);
  --qword_1EB220150;
  double result = off_1EB21C9E8(v2);
  uint64_t v2 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v7 = &xmmword_1EB21CA50;
LABEL_17:
    uint64_t v8 = *v7;
    return v8(v2);
  }
  return result;
}

int *sub_1B0DA8624(int *result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*result >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 2;
    do
    {
      uint64_t v4 = *(void *)&v1[v3];
      if (v4)
      {
        uint64_t v5 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v4);
          --qword_1EB220150;
          off_1EB21C9E8(v4);
          uint64_t v4 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_5;
          }
          uint64_t v5 = &xmmword_1EB21CA50;
        }
        (*v5)(v4);
      }
LABEL_5:
      ++v2;
      v3 += 8;
    }
    while (v2 < *v1);
  }
  uint64_t v6 = (uint64_t (**)(int *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_17;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  double result = (int *)off_1EB21C9E8(v1);
  uint64_t v1 = (int *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v6 = (uint64_t (**)(int *))&xmmword_1EB21CA50;
LABEL_17:
    uint64_t v7 = *v6;
    return (int *)v7(v1);
  }
  return result;
}

uint64_t sub_1B0DA87B0(uint64_t a1, unsigned int a2, int a3, unsigned __int8 *a4, uint64_t *a5, void *a6)
{
  *a5 = 0;
  *a6 = 0;
  long long v89 = 0u;
  long long v90 = 0u;
  uint64_t v91 = a2;
  if (sqlite3_initialize()) {
    return 7;
  }
  int v83 = a3;
  uint64_t v12 = sub_1B0C7FC94(2424);
  if (!v12) {
    return 7;
  }
  uint64_t v13 = (unsigned __int8 **)v12;
  uint64_t v81 = a6;
  *(_WORD *)(v12 + 16) = 0;
  unint64_t v85 = v12 + 16;
  *(void *)uint64_t v12 = v12 + 16;
  *(void *)(v12 + 2416) = v12 + 2392;
  uint64_t v82 = a1;
  uint64_t v88 = a1;
  while (2)
  {
    uint64_t v14 = (uint64_t)a4;
    for (uint64_t i = a4; ; ++i)
    {
      unsigned int v16 = (char)*i;
      uint64_t v17 = *i;
      if (v16 > 0x20 || ((1 << v17) & 0x100002600) == 0) {
        break;
      }
      ++v14;
    }
    unsigned int v19 = 10;
    uint64_t v20 = 1;
    LODWORD(v21) = 1;
    switch(*i)
    {
      case '""':
        uint64_t v22 = i;
        do
        {
          int v24 = v22 + 1;
          int v23 = v22[1];
          if (v23 == 34)
          {
            int v24 = v22 + 2;
            if (v22[2] != 34)
            {
              LODWORD(v21) = v22 - v14 + 2;
              uint64_t v20 = v21;
              unsigned int v19 = 9;
              goto LABEL_43;
            }
          }
          uint64_t v22 = v24;
        }
        while (v23);
        unsigned int v87 = (char *)a4;
        sub_1B0DA9AE0((char *)&v88, "unterminated string");
        goto LABEL_137;
      case '#':
      case '$':
      case '%':
      case '&':
      case '\'':
      case '.':
      case '/':
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
      case ';':
      case '<':
      case '=':
      case '>':
      case '?':
      case '@':
      case 'A':
      case 'B':
      case 'C':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
      case 'P':
      case 'Q':
      case 'R':
      case 'S':
      case 'T':
      case 'U':
      case 'V':
      case 'W':
      case 'X':
      case 'Y':
      case 'Z':
      case '[':
      case '\\':
      case ']':
      case '_':
      case 'a':
      case 'b':
      case 'c':
      case 'd':
      case 'e':
      case 'f':
      case 'g':
      case 'h':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'n':
      case 'o':
      case 'p':
      case 'q':
      case 'r':
      case 's':
      case 't':
      case 'u':
      case 'v':
      case 'w':
      case 'x':
      case 'y':
      case 'z':
      case '|':
        goto LABEL_19;
      case '(':
        goto LABEL_43;
      case ')':
        unsigned int v19 = 11;
        goto LABEL_42;
      case '*':
        unsigned int v19 = 15;
        goto LABEL_42;
      case '+':
        unsigned int v19 = 14;
        goto LABEL_42;
      case ',':
        unsigned int v19 = 13;
        goto LABEL_42;
      case '-':
        unsigned int v19 = 6;
        goto LABEL_42;
      case ':':
        unsigned int v19 = 5;
        goto LABEL_42;
      case '^':
        unsigned int v19 = 12;
        goto LABEL_42;
      case '{':
        unsigned int v19 = 7;
        goto LABEL_42;
      case '}':
        unsigned int v19 = 8;
        goto LABEL_42;
      default:
        if (!*i)
        {
          unsigned int v19 = 0;
LABEL_42:
          uint64_t v20 = 1;
          LODWORD(v21) = 1;
          goto LABEL_43;
        }
LABEL_19:
        if ((v16 & 0x80000000) != 0 || byte_1B0DE690B[v17])
        {
          uint64_t v21 = 0;
          do
          {
            while (1)
            {
              int v25 = (char)i[v21 + 1];
              if ((v25 & 0x80000000) == 0) {
                break;
              }
              ++v21;
            }
            ++v21;
          }
          while (byte_1B0DE690B[v25]);
          uint64_t v20 = v21;
          if (v21 == 2)
          {
            if (*(_WORD *)i == 21071) {
              unsigned int v19 = 1;
            }
            else {
              unsigned int v19 = 9;
            }
          }
          else if (v21 == 3)
          {
            int v26 = *(unsigned __int16 *)i;
            int v27 = i[2];
            if (v26 ^ 0x4F4E | v27 ^ 0x54) {
              int v28 = 9;
            }
            else {
              int v28 = 3;
            }
            if (v26 ^ 0x4E41 | v27 ^ 0x44) {
              unsigned int v19 = v28;
            }
            else {
              unsigned int v19 = 2;
            }
          }
          else
          {
            unsigned int v19 = 9;
          }
LABEL_43:
          uint64_t v86 = v20;
          unsigned int v87 = (char *)&i[(int)v21];
          goto LABEL_44;
        }
        unsigned int v87 = (char *)a4;
        sub_1B0DA9AE0((char *)&v88, "fts5: syntax error near \"%.1s\"");
LABEL_137:
        unsigned int v19 = 0;
        uint64_t v86 = 1;
LABEL_44:
        uint64_t v92 = 0;
        uint64_t v93 = 0;
        v13[1] = (unsigned __int8 *)&v88;
        uint64_t v29 = *v13;
        unsigned int v30 = **v13;
        uint64_t v31 = v19;
        break;
    }
    while (1)
    {
      if (v30 <= 0x22)
      {
        uint64_t v36 = byte_1B0DE69AC[v30] + v31;
        int v37 = byte_1B0DE69CF[v36];
        uint64_t v38 = (char *)&byte_1B0DE6A6B[v36];
        unsigned int v39 = (unsigned __int8 *)&unk_1B0DE6A48 + v30;
        if (v37 == v31) {
          unsigned int v39 = (unsigned __int8 *)v38;
        }
        unsigned int v30 = *v39;
      }
      if (v30 < 0x53) {
        break;
      }
      if (v30 != 105 && v30 != 110)
      {
        uint64_t v40 = (uint64_t)v13[1];
LABEL_59:
        switch(v30)
        {
          case 'S':
            *(void *)(v40 + 32) = *((void *)v29 + 1);
            goto LABEL_47;
          case 'T':
            uint64_t v41 = (uint64_t)sub_1B0DA9CB4((_DWORD *)v40, *((_DWORD **)v29 - 2));
            goto LABEL_93;
          case 'U':
          case '^':
            *((void *)v29 - 5) = *((void *)v29 - 2);
            goto LABEL_47;
          case 'V':
          case 'Y':
            uint64_t v32 = (uint64_t)sub_1B0DA9E1C((uint64_t *)v40, 0, (uint64_t)(v29 + 8));
            goto LABEL_46;
          case 'W':
            uint64_t v42 = sub_1B0DA9E1C((uint64_t *)v40, 0, (uint64_t)(v29 + 8));
            *((void *)v29 - 2) = v42;
            uint64_t v43 = (uint64_t)sub_1B0DA9CB4((_DWORD *)v40, v42);
            goto LABEL_95;
          case 'X':
            uint64_t v43 = (uint64_t)sub_1B0DA9E1C((uint64_t *)v40, *((unsigned int **)v29 - 2), (uint64_t)(v29 + 8));
            goto LABEL_95;
          case 'Z':
            int v44 = (_DWORD *)*((void *)v29 - 5);
            uint64_t v45 = (_DWORD *)*((void *)v29 + 1);
            uint64_t v46 = v40;
            int v47 = 2;
            goto LABEL_69;
          case '[':
            int v44 = (_DWORD *)*((void *)v29 - 5);
            uint64_t v45 = (_DWORD *)*((void *)v29 + 1);
            uint64_t v46 = v40;
            int v47 = 1;
            goto LABEL_69;
          case '\\':
            int v44 = (_DWORD *)*((void *)v29 - 5);
            uint64_t v45 = (_DWORD *)*((void *)v29 + 1);
            uint64_t v46 = v40;
            int v47 = 3;
LABEL_69:
            *((void *)v29 - 5) = sub_1B0DAA1C4(v46, v47, v44, v45, 0);
            goto LABEL_47;
          case ']':
            sub_1B0DA99D4((char *)v40, *((void *)v29 - 2), *((int **)v29 - 11));
            *((void *)v29 - 11) = *((void *)v29 - 2);
            goto LABEL_47;
          case 'a':
            uint64_t v48 = (_DWORD *)*((void *)v29 - 2);
            uint64_t v49 = *((void *)v29 + 1);
            if (*(_DWORD *)(v40 + 16))
            {
              uint64_t v50 = *((void *)v29 + 1);
              sub_1B0DA7AEC(*((void *)v29 - 2));
              sub_1B0DA7AEC(v50);
              *((void *)v29 - 2) = 0;
            }
            else
            {
              uint64_t v60 = (_DWORD *)*((void *)v29 - 2);
              if (*v48 == 2) {
                uint64_t v60 = *(_DWORD **)&v48[2 * v48[10] + 10];
              }
              if (*(_DWORD *)v49)
              {
                if (*v60)
                {
                  *((void *)v29 - 2) = sub_1B0DAA1C4(v40, 2, *((_DWORD **)v29 - 2), (_DWORD *)v49, 0);
                }
                else
                {
                  double v61 = (_DWORD *)*((void *)v29 + 1);
                  uint64_t v84 = (uint64_t)v60;
                  if (v60 != v48)
                  {
                    *(void *)&v48[2 * v48[10] + 10] = v49;
                    double v61 = v48;
                  }
                  uint64_t v62 = v61;
                  uint64_t v63 = *(int *)(*(void *)(v49 + 32) + 16);
                  uint64_t v64 = *(void *)(v40 + 24) + 8 * (*(_DWORD *)(v40 + 20) + ~v63);
                  memmove((void *)v64, (const void *)(v64 + 8), 8 * v63);
                  --*(_DWORD *)(v40 + 20);
                  sub_1B0DA7AEC(v84);
                  *((void *)v29 - 2) = v62;
                }
              }
              else
              {
                sub_1B0DA7AEC(*((void *)v29 + 1));
                --*(_DWORD *)(v40 + 20);
                *((void *)v29 - 2) = v48;
              }
            }
            goto LABEL_47;
          case 'b':
            uint64_t v32 = (uint64_t)sub_1B0DAA1C4(v40, 9, 0, 0, *((void *)v29 + 1));
            goto LABEL_46;
          case 'c':
            uint64_t v51 = sub_1B0DAA1C4(v40, 9, 0, 0, *((void *)v29 + 1));
            sub_1B0DA99D4((char *)v40, (uint64_t)v51, *((int **)v29 - 5));
            *((void *)v29 - 5) = v51;
            goto LABEL_47;
          case 'd':
          case 'g':
            uint64_t v32 = sub_1B0DAA4F0(v40, 0, *((void *)v29 + 1));
LABEL_46:
            *((void *)v29 + 1) = v32;
            goto LABEL_47;
          case 'e':
            uint64_t v52 = *((void *)v29 + 1);
            if (v52 && *(_DWORD *)(v52 + 24))
            {
              *(unsigned char *)(v52 + 33) = 1;
              uint64_t v52 = *((void *)v29 + 1);
            }
            *((void *)v29 - 2) = sub_1B0DAA4F0(v40, 0, v52);
            goto LABEL_47;
          case 'f':
            int v53 = (const char *)*((void *)v29 - 11);
            if (*((_DWORD *)v29 - 20) != 4 || *(_DWORD *)v53 != 1380009294) {
              sub_1B0DA9AE0((char *)v40, "fts5: syntax error near \"%.*s\"", *((_DWORD *)v29 - 20), v53);
            }
            int v54 = (int *)*((void *)v29 - 5);
            if (!v54) {
              goto LABEL_106;
            }
            uint64_t v55 = *((unsigned int *)v29 - 2);
            if (!v55)
            {
              int v57 = 10;
LABEL_105:
              *int v54 = v57;
              goto LABEL_106;
            }
            if ((int)v55 < 1)
            {
              int v57 = 0;
              goto LABEL_105;
            }
            uint64_t v56 = 0;
            int v57 = 0;
            int v58 = (const char *)*((void *)v29 - 2);
            while (1)
            {
              int v59 = v58[v56];
              if ((v59 - 48) >= 0xA) {
                break;
              }
              int v57 = v59 + 10 * v57 - 48;
              if (v55 == ++v56) {
                goto LABEL_105;
              }
            }
            sub_1B0DA9AE0((char *)v40, "expected integer, got \"%.*s\"", *((_DWORD *)v29 - 2), v58);
LABEL_106:
            *((void *)v29 - 11) = *((void *)v29 - 5);
            break;
          case 'h':
            uint64_t v43 = sub_1B0DAA4F0(v40, *((void *)v29 - 2), *((void *)v29 + 1));
            goto LABEL_95;
          case 'i':
            *((void *)v29 + 4) = 0;
            *((_DWORD *)v29 + 10) = 0;
            goto LABEL_47;
          case 'j':
            *((_OWORD *)v29 - 1) = *(_OWORD *)(v29 + 8);
            goto LABEL_47;
          case 'k':
            uint64_t v41 = sub_1B0DAA640((uint64_t *)v40, *((void *)v29 - 8), (uint64_t)(v29 - 16), *((_DWORD *)v29 + 2));
LABEL_93:
            *((void *)v29 - 8) = v41;
            goto LABEL_47;
          case 'l':
            uint64_t v43 = sub_1B0DAA640((uint64_t *)v40, 0, (uint64_t)(v29 - 16), *((_DWORD *)v29 + 2));
LABEL_95:
            *((void *)v29 - 2) = v43;
            goto LABEL_47;
          case 'm':
            *((_DWORD *)v29 + 2) = 1;
            goto LABEL_47;
          case 'n':
            *((_DWORD *)v29 + 8) = 0;
            goto LABEL_47;
          default:
            goto LABEL_47;
        }
        goto LABEL_47;
      }
      uint64_t v40 = (uint64_t)v13[1];
      if (v29 >= v13[302])
      {
        unint64_t j = v85;
        if ((unint64_t)v29 > v85)
        {
          do
          {
            void *v13 = v29 - 24;
            sub_1B0DA9B34(v29[1], (uint64_t *)v29 + 1);
            uint64_t v29 = *v13;
          }
          while ((unint64_t)*v13 > v85);
        }
        sub_1B0DA9AE0((char *)v40, "fts5: parser stack overflow");
        v13[1] = (unsigned __int8 *)v40;
        goto LABEL_120;
      }
      if (v30 - 83 <= 0x1B) {
        goto LABEL_59;
      }
LABEL_47:
      uint64_t v33 = v30 - 83;
      uint64_t v34 = byte_1B0DE6AD4[v33];
      uint64_t v35 = &v29[24 * byte_1B0DE6990[v33]];
      unsigned int v30 = byte_1B0DE6A6B[byte_1B0DE6AF0[*v35] + v34];
      v35[24] = v30;
      uint64_t v29 = v35 + 24;
      void *v13 = v29;
      v29[1] = v34;
    }
    if (v30 > 0x4F)
    {
      if (v30 == 81)
      {
        void *v13 = v29 - 24;
      }
      else
      {
        uint64_t v92 = v14;
        uint64_t v93 = v86;
        signed int v68 = (char *)v13[1];
        sub_1B0DA9AE0(v68, "fts5: syntax error near \"%.*s\"", v86, (const char *)i);
        v13[1] = (unsigned __int8 *)v68;
        sub_1B0DA9B34(v31, &v92);
      }
LABEL_128:
      unint64_t j = v85;
      a4 = (unsigned __int8 *)v87;
      if (!v31) {
        goto LABEL_139;
      }
LABEL_129:
      if (DWORD2(v89)) {
        goto LABEL_139;
      }
      continue;
    }
    break;
  }
  void *v13 = v29 + 24;
  if (v29 + 24 <= v13[302])
  {
    unsigned __int8 v67 = v30 + 31;
    if (v30 <= 0x22) {
      unsigned __int8 v67 = v30;
    }
    v29[24] = v67;
    v29[25] = v31;
    *((void *)v29 + 4) = v14;
    *((void *)v29 + 5) = v86;
    goto LABEL_128;
  }
  void *v13 = v29;
  uint64_t v65 = (char *)v13[1];
  for (j = v85; (unint64_t)*v13 > v85; uint64_t v29 = *v13)
  {
    void *v13 = v29 - 24;
    sub_1B0DA9B34(v29[1], (uint64_t *)v29 + 1);
  }
  sub_1B0DA9AE0(v65, "fts5: parser stack overflow");
  v13[1] = (unsigned __int8 *)v65;
LABEL_120:
  a4 = (unsigned __int8 *)v87;
  if (v31) {
    goto LABEL_129;
  }
LABEL_139:
  while (1)
  {
    int v69 = *v13;
    if ((unint64_t)*v13 <= j) {
      break;
    }
    void *v13 = v69 - 24;
    sub_1B0DA9B34(v69[1], (uint64_t *)v69 + 1);
  }
  int v70 = (void (**)(unsigned __int8 **))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
    --qword_1EB220150;
    off_1EB21C9E8(v13);
    uint64_t v13 = (unsigned __int8 **)xmmword_1EB2201B0;
    int v71 = v81;
    if ((void)xmmword_1EB2201B0)
    {
      int v70 = (void (**)(unsigned __int8 **))&xmmword_1EB21CA50;
      goto LABEL_146;
    }
  }
  else
  {
    int v71 = v81;
LABEL_146:
    (*v70)(v13);
  }
  if (*(_DWORD *)(v82 + 24) > v83 && *((void *)&v90 + 1) != 0 && DWORD2(v89) == 0)
  {
    if (sqlite3_initialize()) {
      goto LABEL_158;
    }
    unsigned int v76 = (int *)sub_1B0C7FC94(8);
    if (!v76) {
      goto LABEL_158;
    }
    *(void *)unsigned int v76 = 0;
    int *v76 = 1;
    v76[1] = v83;
    sub_1B0DA99D4((char *)&v88, *((uint64_t *)&v90 + 1), v76);
    if (DWORD2(v89)) {
      goto LABEL_159;
    }
LABEL_155:
    if (sqlite3_initialize())
    {
      *a5 = 0;
LABEL_158:
      DWORD2(v89) = 7;
      goto LABEL_159;
    }
    uint64_t v77 = sub_1B0C7FC94(40);
    *a5 = v77;
    if (!v77) {
      goto LABEL_158;
    }
    uint64_t v78 = v77;
    if (*((void *)&v90 + 1))
    {
      *(void *)(v77 + 16) = *((void *)&v90 + 1);
    }
    else
    {
      if (!DWORD2(v89))
      {
        if (!sqlite3_initialize())
        {
          uint64_t v80 = sub_1B0C7FC94(56);
          if (v80)
          {
            *(void *)(v80 + 48) = 0;
            *(_OWORD *)(v80 + 16) = 0u;
            *(_OWORD *)(v80 + 32) = 0u;
            *(_OWORD *)uint64_t v80 = 0u;
            *(void *)(v78 + 16) = v80;
            *(_DWORD *)(v80 + 4) = 1;
            goto LABEL_177;
          }
        }
        DWORD2(v89) = 7;
      }
      *(void *)(v78 + 16) = 0;
    }
LABEL_177:
    *(void *)uint64_t v78 = 0;
    *(void *)(v78 + 8) = v82;
    *(void *)(v78 + 32) = v90;
    int v79 = HIDWORD(v89);
    *(_DWORD *)(v78 + 24) = 0;
    *(_DWORD *)(v78 + 28) = v79;
    *(void *)&long long v90 = 0;
    goto LABEL_166;
  }
  if (!DWORD2(v89)) {
    goto LABEL_155;
  }
LABEL_159:
  sub_1B0DA7AEC(*((uint64_t *)&v90 + 1));
  uint64_t v74 = v90;
  if ((void)v90)
  {
    int v75 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_165;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v74);
    --qword_1EB220150;
    off_1EB21C9E8(v74);
    uint64_t v74 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v75 = &xmmword_1EB21CA50;
LABEL_165:
      (*v75)(v74);
    }
  }
LABEL_166:
  void *v71 = v89;
  return DWORD2(v89);
}

uint64_t sub_1B0DA9538(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  if (!a2 || (uint64_t v3 = *a1) == 0)
  {
    uint64_t v6 = 0;
    if (a2) {
      *a1 = a2;
    }
    return v6;
  }
  int v4 = *(_DWORD *)(v3 + 28);
  int v5 = *(_DWORD *)(a2 + 28);
  *(void *)(v3 + 16) = sub_1B0DAA1C4((uint64_t)&v18, 2, *(_DWORD **)(v3 + 16), *(_DWORD **)(a2 + 16), 0);
  *(void *)(v2 + 16) = 0;
  uint64_t v6 = v19;
  if (!v19)
  {
    uint64_t v7 = *(void *)(v3 + 32);
    if (sqlite3_initialize()
      || (int v8 = v5 + v4, (v9 = (char *)sub_1B0C8E1B8(v7, (8 * v8) & ~((8 * v8) >> 31))) == 0))
    {
      uint64_t v6 = 7;
    }
    else
    {
      uint64_t v10 = v9;
      memmove(&v9[8 * *(int *)(v2 + 28)], v9, 8 * *(int *)(v3 + 28));
      uint64_t v11 = *(unsigned int *)(v2 + 28);
      if ((int)v11 >= 1)
      {
        uint64_t v12 = 0;
        uint64_t v13 = 8 * v11;
        do
        {
          *(void *)&v10[v12] = *(void *)(*(void *)(v2 + 32) + v12);
          v12 += 8;
        }
        while (v13 != v12);
      }
      uint64_t v6 = 0;
      *(_DWORD *)(v3 + 28) = v8;
      *(void *)(v3 + 32) = v10;
    }
  }
  uint64_t v14 = *(void *)(v2 + 32);
  if (v14)
  {
    uint64_t v15 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v14);
      --qword_1EB220150;
      off_1EB21C9E8(v14);
      uint64_t v14 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_20;
      }
      uint64_t v15 = &xmmword_1EB21CA50;
    }
    (*v15)(v14);
  }
LABEL_20:
  unsigned int v16 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_25:
    (*v16)(v2);
    return v6;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
  --qword_1EB220150;
  off_1EB21C9E8(v2);
  uint64_t v2 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v16 = &xmmword_1EB21CA50;
    goto LABEL_25;
  }
  return v6;
}

uint64_t sub_1B0DA9744(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(v4 + 16);
  *(void *)uint64_t v4 = *(void *)(a1 + 32);
  *(_DWORD *)(v4 + 24) = a3;
  uint64_t result = sub_1B0DAE404(v4, v6);
  if (result) {
    goto LABEL_14;
  }
  if (*(_DWORD *)(v6 + 4)) {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  if (*(_DWORD *)(v4 + 24))
  {
    if (v8 > v5) {
      goto LABEL_8;
    }
LABEL_3:
    uint64_t result = 0;
    goto LABEL_10;
  }
  if (v8 >= v5) {
    goto LABEL_3;
  }
LABEL_8:
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v6, 1, v5);
LABEL_10:
  while (*(_DWORD *)(v6 + 8) && result == 0)
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v6 + 16))(v4, v6, 0, 0);
LABEL_14:
  *(_DWORD *)(a2 + 80) |= 0x4E | (*(_DWORD *)(*(void *)(v4 + 16) + 4) != 0);
  return result;
}

uint64_t sub_1B0DA9828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  if (v4) {
    int v5 = *(_DWORD *)(v4 + 28);
  }
  else {
    int v5 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v8 = (sqlite3_stmt **)sub_1B0C7FC94(4 * (v5 - 1) + 32);
  if (!v8) {
    return 7;
  }
  uint64_t v9 = v8;
  bzero(v8, 4 * (v5 - 1) + 32);
  *((_DWORD *)v9 + 6) = v5;
  uint64_t v7 = sub_1B0DB459C(v9, v6, v10, v11, v12, v13, v14, v15, *(void *)(v6 + 8));
  *(void *)(a2 + 72) = v9;
  if (v7 || (*(void *)(a1 + 56) = a2, uint64_t v7 = sub_1B0DB4758(a2), *(void *)(a1 + 56) = 0, v7))
  {
    sqlite3_finalize(*v9);
    unsigned int v16 = (uint64_t (**)(void *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
      --qword_1EB220150;
      off_1EB21C9E8(v9);
      uint64_t v9 = (sqlite3_stmt **)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_15;
      }
      unsigned int v16 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
    }
    (*v16)(v9);
LABEL_15:
    *(void *)(a2 + 72) = 0;
  }
  return v7;
}

uint64_t sub_1B0DA99D4(char *a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v7 = a3;
  if (*(_DWORD *)(*(void *)a1 + 92) == 1)
  {
    uint64_t result = (uint64_t)sub_1B0DA9AE0(a1, "fts5: column queries are not supported (detail=none)");
    if (!v3) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1B0DAE260((uint64_t)a1, a2, a3, &v7);
    uint64_t v3 = v7;
    if (!v7) {
      return result;
    }
  }
  int v5 = (uint64_t (**)(int *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_10;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v3);
  uint64_t v3 = (int *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v5 = (uint64_t (**)(int *))&xmmword_1EB21CA50;
LABEL_10:
    uint64_t v6 = *v5;
    return v6(v3);
  }
  return result;
}

char *sub_1B0DA9AE0(char *result, char *a2, ...)
{
  va_start(va, a2);
  if (!*((_DWORD *)result + 4))
  {
    uint64_t v2 = (uint64_t)result;
    uint64_t result = sqlite3_vmprintf(a2, va);
    *(void *)(v2 + 8) = result;
    *(_DWORD *)(v2 + 16) = 1;
  }
  return result;
}

uint64_t sub_1B0DA9B34(uint64_t result, uint64_t *a2)
{
  switch((int)result)
  {
    case 17:
    case 18:
    case 19:
      uint64_t v2 = *a2;
      return sub_1B0DA7AEC(v2);
    case 20:
    case 21:
      uint64_t v3 = *a2;
      if (!*a2) {
        return result;
      }
      uint64_t v4 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_11;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v3);
      uint64_t v3 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v4 = &xmmword_1EB21CA50;
LABEL_11:
        int v5 = *v4;
        return v5(v3);
      }
      return result;
    case 22:
    case 23:
      uint64_t v6 = *a2;
      return sub_1B0DA7BE8(v6);
    case 24:
      uint64_t v7 = *a2;
      return sub_1B0DA7D58(v7);
    default:
      return result;
  }
}

int *sub_1B0DA9CB4(_DWORD *a1, _DWORD *a2)
{
  if (a1[4]) {
    goto LABEL_2;
  }
  uint64_t v7 = *(int *)(*(void *)a1 + 24);
  if (sqlite3_initialize() || (uint64_t v8 = (int *)sub_1B0C7FC94(4 * v7 + 8)) == 0)
  {
    if ((int)v7 < -1)
    {
LABEL_2:
      uint64_t v3 = 0;
      goto LABEL_3;
    }
    uint64_t v3 = 0;
    a1[4] = 7;
LABEL_3:
    if (!a2) {
      return v3;
    }
    goto LABEL_4;
  }
  uint64_t v3 = v8;
  bzero(v8, 4 * v7 + 8);
  if ((int)v7 < 1) {
    goto LABEL_3;
  }
  int v9 = 0;
  int v10 = 0;
  do
  {
    if (v9 < *a2 && v10 == a2[v9 + 1])
    {
      ++v9;
    }
    else
    {
      uint64_t v11 = *v3;
      int *v3 = v11 + 1;
      v3[v11 + 1] = v10;
    }
    ++v10;
  }
  while (v7 != v10);
LABEL_4:
  uint64_t v4 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_9:
    (*v4)(a2);
    return v3;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(a2);
  --qword_1EB220150;
  off_1EB21C9E8(a2);
  a2 = (_DWORD *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v4 = &xmmword_1EB21CA50;
    goto LABEL_9;
  }
  return v3;
}

_DWORD *sub_1B0DA9E1C(uint64_t *a1, unsigned int *a2, uint64_t a3)
{
  if (*((_DWORD *)a1 + 4)) {
    goto LABEL_18;
  }
  int v5 = *(const char **)a3;
  unsigned int v6 = *(_DWORD *)(a3 + 8);
  if ((v6 & 0x80000000) != 0)
  {
    unsigned int v6 = strlen(*(const char **)a3);
    int v7 = sqlite3_initialize();
    if ((v6 & 0x80000000) != 0)
    {
LABEL_17:
      *((_DWORD *)a1 + 4) = 7;
      goto LABEL_18;
    }
  }
  else
  {
    int v7 = sqlite3_initialize();
  }
  if (v7) {
    goto LABEL_17;
  }
  uint64_t v8 = (char *)sub_1B0C7FC94(v6 + 1);
  if (!v8) {
    goto LABEL_17;
  }
  int v9 = v8;
  memcpy(v8, v5, v6);
  v9[v6] = 0;
  if (*((_DWORD *)a1 + 4)) {
    goto LABEL_18;
  }
  uint64_t v10 = *a1;
  int v11 = *(unsigned __int8 *)v9;
  if ((v11 - 34) <= 0x3E && ((1 << (v11 - 34)) & 0x4200000000000021) != 0)
  {
    if (v11 == 91) {
      int v13 = 93;
    }
    else {
      int v13 = *(unsigned __int8 *)v9;
    }
    int v14 = *((unsigned __int8 *)v9 + 1);
    if (v9[1])
    {
      uint64_t v15 = 0;
      int v16 = 1;
      while (1)
      {
        uint64_t v20 = v16 + 1;
        if (v14 == v13)
        {
          if (v9[v20] != v13) {
            goto LABEL_33;
          }
          LODWORD(v20) = v16 + 2;
          LOBYTE(v14) = v13;
        }
        v9[v15++] = v14;
        int v14 = v9[(int)v20];
        int v16 = v20;
        if (!v9[(int)v20]) {
          goto LABEL_33;
        }
      }
    }
    LODWORD(v15) = 0;
LABEL_33:
    v9[v15] = 0;
  }
  uint64_t v21 = *(unsigned int *)(v10 + 24);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = *(void *)(v10 + 32);
    while (1)
    {
      int v24 = *(unsigned char **)(v23 + 8 * v22);
      if (v24) {
        break;
      }
LABEL_36:
      if (++v22 == v21) {
        goto LABEL_44;
      }
    }
    for (uint64_t i = v9; ; ++i)
    {
      uint64_t v26 = *v24;
      uint64_t v27 = *(unsigned __int8 *)i;
      if (v26 == v27)
      {
        if (!*v24)
        {
          if (v22 == v21) {
            goto LABEL_44;
          }
LABEL_46:
          if (a2) {
            unsigned int v28 = *a2;
          }
          else {
            unsigned int v28 = 0;
          }
          if (sqlite3_initialize()
            || (uint64_t v30 = v28, v31 = (int)v28, (v32 = (_DWORD *)sub_1B0C8E1B8((uint64_t)a2, 4 * (int)v28 + 8)) == 0))
          {
            long long v18 = 0;
            *((_DWORD *)a1 + 4) = 7;
          }
          else
          {
            long long v18 = v32;
            if ((int)v30 < 1)
            {
              LODWORD(v33) = 0;
LABEL_67:
              if ((int)v30 > (int)v33)
              {
                do
                {
                  v32[v31 + 1] = v32[v31];
                  --v31;
                }
                while (v31 > (int)v33);
              }
              v32[v33 + 1] = v22;
              *uint64_t v32 = v30 + 1;
            }
            else
            {
              uint64_t v33 = 0;
              while (1)
              {
                int v34 = v32[v33 + 1];
                if (v34 == v22) {
                  break;
                }
                if (v34 > (int)v22) {
                  goto LABEL_67;
                }
                if (v30 == ++v33)
                {
                  LODWORD(v33) = v30;
                  goto LABEL_67;
                }
              }
            }
          }
          goto LABEL_51;
        }
      }
      else if (byte_1B0DE1758[v26] != byte_1B0DE1758[v27])
      {
        goto LABEL_36;
      }
      ++v24;
    }
  }
  LODWORD(v22) = 0;
  if (v21) {
    goto LABEL_46;
  }
LABEL_44:
  sub_1B0DA9AE0((char *)a1, "no such column: %s", v9);
  long long v18 = 0;
LABEL_51:
  uint64_t v29 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_56;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
  --qword_1EB220150;
  off_1EB21C9E8(v9);
  int v9 = (const char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v29 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_56:
    (*v29)((unsigned __int8 *)v9);
  }
  if (v18) {
    return v18;
  }
LABEL_18:
  if (a2)
  {
    uint64_t v17 = (uint64_t (**)(unsigned int *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(a2);
      --qword_1EB220150;
      off_1EB21C9E8(a2);
      a2 = (unsigned int *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        return 0;
      }
      uint64_t v17 = (uint64_t (**)(unsigned int *))&xmmword_1EB21CA50;
    }
    (*v17)(a2);
  }
  return 0;
}

_DWORD *sub_1B0DAA1C4(uint64_t a1, int a2, _DWORD *a3, _DWORD *a4, uint64_t a5)
{
  if (*(_DWORD *)(a1 + 16)) {
    goto LABEL_2;
  }
  if (a2 == 9 && !a5) {
    return 0;
  }
  if (a2 != 9 && !a3) {
    return a4;
  }
  if (a2 != 9 && !a4) {
    return a3;
  }
  if (a2 == 9)
  {
    if (*(_DWORD *)(a1 + 40) && *(int *)(*(void *)(a5 + 24) + 24) >= 2)
    {
      uint64_t v10 = sub_1B0DAA918(a1, a5);
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  if (a2 == 3)
  {
    int v12 = 2;
  }
  else
  {
    if ((a2 - 1) > 1)
    {
LABEL_24:
      int v12 = 0;
      goto LABEL_25;
    }
    if (*a3 == a2) {
      int v12 = a3[10] + 1;
    }
    else {
      int v12 = 2;
    }
    if (*a4 == a2) {
      int v12 = v12 + a4[10] - 1;
    }
  }
LABEL_25:
  if (sqlite3_initialize() || (int v13 = (void *)sub_1B0C7FC94(8 * (v12 - 1) + 56)) == 0)
  {
    if (v12 >= -5) {
      *(_DWORD *)(a1 + 16) = 7;
    }
    goto LABEL_2;
  }
  uint64_t v10 = (uint64_t)v13;
  bzero(v13, 8 * (v12 - 1) + 56);
  *(_DWORD *)uint64_t v10 = a2;
  *(void *)(v10 + 32) = a5;
  int v14 = sub_1B0DAB090;
  if (a2 == 1) {
    goto LABEL_42;
  }
  if (a2 == 2)
  {
    int v14 = sub_1B0DAB1F4;
LABEL_42:
    *(void *)(v10 + 16) = v14;
LABEL_43:
    sub_1B0DAAB68((_DWORD *)v10, a3);
    sub_1B0DAAB68((_DWORD *)v10, a4);
    if (*(int *)(v10 + 12) < 257) {
      return (_DWORD *)v10;
    }
    sub_1B0DA9AE0((char *)a1, "fts5 expression tree is too large (maximum depth %d)");
    goto LABEL_57;
  }
  if (a2 != 9)
  {
    *(void *)(v10 + 16) = sub_1B0DAB250;
    goto LABEL_43;
  }
  uint64_t v15 = sub_1B0DAADCC;
  if (*(_DWORD *)(a5 + 16) == 1)
  {
    uint64_t v16 = *(void *)(a5 + 24);
    uint64_t v15 = sub_1B0DAADCC;
    if (*(_DWORD *)(v16 + 24) == 1)
    {
      uint64_t v15 = sub_1B0DAADCC;
      if (!*(void *)(v16 + 56))
      {
        uint64_t v15 = sub_1B0DAADCC;
        if (!*(unsigned char *)(v16 + 33))
        {
          *(_DWORD *)uint64_t v10 = 4;
          uint64_t v15 = sub_1B0DAACB4;
        }
      }
    }
  }
  *(void *)(v10 + 16) = v15;
  int v17 = *(_DWORD *)(a5 + 16);
  if (v17 >= 1)
  {
    uint64_t v18 = a5 + 24;
    uint64_t v19 = *(unsigned int *)(a5 + 16);
    do
    {
      **(void **)uint64_t v18 = v10;
      if (!*(_DWORD *)(*(void *)v18 + 24))
      {
        *(void *)(v10 + 16) = 0;
        *(_DWORD *)uint64_t v10 = 0;
      }
      v18 += 8;
      --v19;
    }
    while (v19);
  }
  if (!*(_DWORD *)(*(void *)a1 + 92)
    || v17 == 1
    && (v20 = *(void *)(a5 + 24), int v21 = *(_DWORD *)(v20 + 24), v21 <= 1)
    && (v21 != 1 || !*(unsigned char *)(v20 + 33)))
  {
LABEL_17:
    if (v10) {
      return (_DWORD *)v10;
    }
    goto LABEL_2;
  }
  sub_1B0DA9AE0((char *)a1, "fts5: %s queries are not supported (detail!=full)");
LABEL_57:
  sqlite3_free((void *)v10);
LABEL_2:
  sub_1B0DA7AEC((uint64_t)a3);
  sub_1B0DA7AEC((uint64_t)a4);
  sub_1B0DA7BE8(a5);
  return 0;
}

uint64_t sub_1B0DAA4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 16)) {
    goto LABEL_2;
  }
  if (!a3) {
    return a2;
  }
  if (!a2)
  {
    if (sqlite3_initialize()) {
      goto LABEL_19;
    }
    int v12 = (_OWORD *)sub_1B0C7FC94(96);
    if (!v12) {
      goto LABEL_19;
    }
    uint64_t v5 = (uint64_t)v12;
    v12[4] = 0u;
    v12[5] = 0u;
    v12[2] = 0u;
    v12[3] = 0u;
    *int v12 = 0u;
    v12[1] = 0u;
LABEL_8:
    int v9 = *(_DWORD *)(v5 + 16);
    if (v9 >= 1)
    {
      uint64_t v10 = *(void *)(v5 + 8 * (v9 - 1) + 24);
      if (!*(_DWORD *)(a3 + 24))
      {
        sub_1B0DA7D58(a3);
        int v9 = *(_DWORD *)(v5 + 16) - 1;
        --*(_DWORD *)(a1 + 20);
        goto LABEL_21;
      }
      if (!*(_DWORD *)(v10 + 24))
      {
        sub_1B0DA7D58(v10);
        int v11 = *(_DWORD *)(a1 + 20);
        *(void *)(*(void *)(a1 + 24) + 8 * (v11 - 2)) = a3;
        *(_DWORD *)(a1 + 20) = v11 - 1;
        int v9 = *(_DWORD *)(v5 + 16) - 1;
      }
    }
    uint64_t v10 = a3;
LABEL_21:
    *(_DWORD *)(v5 + 16) = v9 + 1;
    *(void *)(v5 + 8 * v9 + 24) = v10;
    return v5;
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    uint64_t v5 = a2;
    goto LABEL_8;
  }
  if (!sqlite3_initialize())
  {
    uint64_t v5 = sub_1B0C8E1B8(a2, 8 * (v8 + 8) + 32);
    if (v5) {
      goto LABEL_8;
    }
  }
LABEL_19:
  *(_DWORD *)(a1 + 16) = 7;
LABEL_2:
  sub_1B0DA7BE8(a2);
  sub_1B0DA7D58(a3);
  return 0;
}

uint64_t sub_1B0DAA640(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7 = *a1;
  uint64_t v30 = (_OWORD *)a2;
  uint64_t v31 = 0;
  int v8 = *(const char **)a3;
  unsigned int v9 = *(_DWORD *)(a3 + 8);
  if ((v9 & 0x80000000) != 0) {
    unsigned int v9 = strlen(*(const char **)a3);
  }
  int v10 = sqlite3_initialize();
  int v11 = 7;
  if ((v9 & 0x80000000) != 0) {
    goto LABEL_33;
  }
  if (v10) {
    goto LABEL_33;
  }
  int v12 = (char *)sub_1B0C7FC94(v9 + 1);
  if (!v12) {
    goto LABEL_33;
  }
  int v13 = v12;
  memcpy(v12, v8, v9);
  v13[v9] = 0;
  if (a4) {
    uint64_t v14 = 3;
  }
  else {
    uint64_t v14 = 1;
  }
  int v15 = *v13;
  if ((v15 - 34) <= 0x3E && ((1 << (v15 - 34)) & 0x4200000000000021) != 0)
  {
    if (v15 == 91) {
      int v17 = 93;
    }
    else {
      int v17 = *v13;
    }
    int v18 = v13[1];
    if (v13[1])
    {
      uint64_t v19 = 0;
      int v20 = 1;
      while (1)
      {
        uint64_t v21 = v20 + 1;
        if (v18 == v17)
        {
          if (v13[v21] != v17) {
            goto LABEL_24;
          }
          LODWORD(v21) = v20 + 2;
          LOBYTE(v18) = v17;
        }
        v13[v19++] = v18;
        int v18 = v13[(int)v21];
        int v20 = v21;
        if (!v13[(int)v21]) {
          goto LABEL_24;
        }
      }
    }
    LODWORD(v19) = 0;
LABEL_24:
    v13[v19] = 0;
  }
  size_t v22 = strlen(v13);
  int v11 = (*(uint64_t (**)(void, _OWORD **, uint64_t, char *, size_t, uint64_t (*)(uint64_t, char, char *, int)))(*(void *)(v7 + 112) + 16))(*(void *)(v7 + 104), &v30, v14, v13, v22, sub_1B0DAE0CC);
  uint64_t v23 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_30;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
  --qword_1EB220150;
  off_1EB21C9E8(v13);
  int v13 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v23 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_30:
    (*v23)((unsigned __int8 *)v13);
  }
  if (v11 || (int v11 = v31) != 0)
  {
LABEL_33:
    *((_DWORD *)a1 + 4) = v11;
LABEL_34:
    sub_1B0DA7D58((uint64_t)v30);
    return 0;
  }
  if (!a2)
  {
    int v25 = *((_DWORD *)a1 + 5);
    if ((v25 & 7) == 0)
    {
      uint64_t v28 = a1[3];
      if (sqlite3_initialize() || (uint64_t v29 = sub_1B0C8E1B8(v28, 8 * (v25 + 8))) == 0)
      {
        *((_DWORD *)a1 + 4) = 7;
        goto LABEL_34;
      }
      a1[3] = v29;
      int v25 = *((_DWORD *)a1 + 5);
    }
    *((_DWORD *)a1 + 5) = v25 + 1;
  }
  uint64_t v26 = v30;
  if (v30)
  {
    uint64_t v27 = *((int *)v30 + 6);
    if (v27) {
      LOBYTE(v30[2 * v27]) = a4;
    }
  }
  else if (*((_DWORD *)a1 + 4))
  {
    uint64_t v26 = 0;
    uint64_t v30 = 0;
  }
  else if (sqlite3_initialize() || (uint64_t v26 = (_OWORD *)sub_1B0C7FC94(64)) == 0)
  {
    uint64_t v26 = 0;
    *((_DWORD *)a1 + 4) = 7;
    uint64_t v30 = 0;
  }
  else
  {
    v26[2] = 0u;
    v26[3] = 0u;
    *uint64_t v26 = 0u;
    v26[1] = 0u;
    uint64_t v30 = v26;
  }
  *(void *)(a1[3] + 8 * *((int *)a1 + 5) - 8) = v26;
  return (uint64_t)v30;
}

uint64_t sub_1B0DAA918(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 16)) {
    return 0;
  }
  uint64_t v6 = *(unsigned int *)(*(void *)(a2 + 24) + 24);
  size_t v7 = 8 * (int)v6 + 56;
  if (sqlite3_initialize() || (int v8 = (void *)sub_1B0C7FC94(v7)) == 0)
  {
    if ((int)v7 >= 1)
    {
      uint64_t v2 = 0;
      *(_DWORD *)(a1 + 16) = 7;
      return v2;
    }
    return 0;
  }
  uint64_t v2 = (uint64_t)v8;
  bzero(v8, v7);
  *(_DWORD *)uint64_t v2 = 2;
  *(_DWORD *)(v2 + 40) = v6;
  *(_DWORD *)(v2 + 12) = 1;
  *(void *)(v2 + 16) = sub_1B0DAB1F4;
  --*(_DWORD *)(a1 + 20);
  if ((int)v6 >= 1)
  {
    uint64_t v9 = 0;
    int v10 = (void *)(v2 + 48);
    uint64_t v11 = 32 * v6;
    do
    {
      if (!*(_DWORD *)(a1 + 16))
      {
        if (sqlite3_initialize() || (int v12 = (_OWORD *)sub_1B0C7FC94(64)) == 0)
        {
          *(_DWORD *)(a1 + 16) = 7;
        }
        else
        {
          uint64_t v13 = (uint64_t)v12;
          v12[2] = 0u;
          v12[3] = 0u;
          *int v12 = 0u;
          v12[1] = 0u;
          int v14 = *(_DWORD *)(a1 + 20);
          uint64_t v15 = *(void *)(a1 + 24);
          if ((v14 & 7) != 0) {
            goto LABEL_16;
          }
          if (!sqlite3_initialize())
          {
            uint64_t v22 = sub_1B0C8E1B8(v15, 8 * (v14 + 8));
            if (v22)
            {
              uint64_t v15 = v22;
              *(void *)(a1 + 24) = v22;
              int v14 = *(_DWORD *)(a1 + 20);
LABEL_16:
              *(_DWORD *)(a1 + 20) = v14 + 1;
              *(void *)(v15 + 8 * v14) = v13;
              *(_DWORD *)(v13 + 24) = 1;
              if (*(_DWORD *)(a1 + 16))
              {
                uint64_t v16 = 0;
              }
              else
              {
                int v17 = *(const char **)(*(void *)(a2 + 24) + v9 + 40);
                unsigned int v18 = strlen(v17);
                int v19 = sqlite3_initialize();
                if ((v18 & 0x80000000) != 0 || v19 || (int v20 = (unsigned char *)sub_1B0C7FC94(v18 + 1)) == 0)
                {
                  uint64_t v16 = 0;
                  *(_DWORD *)(a1 + 16) = 7;
                }
                else
                {
                  uint64_t v16 = v20;
                  memcpy(v20, v17, v18);
                  v16[v18] = 0;
                }
              }
              *(void *)(v13 + 40) = v16;
              uint64_t v21 = sub_1B0DAA4F0(a1, 0, v13);
              *int v10 = sub_1B0DAA1C4(a1, 9, 0, 0, v21);
              goto LABEL_11;
            }
          }
          *(_DWORD *)(a1 + 16) = 7;
          sub_1B0DA7D58(v13);
        }
      }
LABEL_11:
      v9 += 32;
      ++v10;
    }
    while (v11 != v9);
  }
  if (*(_DWORD *)(a1 + 16))
  {
    sub_1B0DA7AEC(v2);
    return 0;
  }
  else
  {
    sub_1B0DA7BE8(a2);
  }
  return v2;
}

_DWORD *sub_1B0DAAB68(_DWORD *result, _DWORD *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = result;
  uint64_t v4 = (int)result[10];
  if (*result == 3 || *a2 != *result)
  {
    result[10] = v4 + 1;
    *(void *)&result[2 * v4 + 12] = a2;
  }
  else
  {
    memcpy(&result[2 * v4 + 12], a2 + 12, 8 * a2[10]);
    v3[10] += v2[10];
    uint64_t v5 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_8:
      uint64_t result = (_DWORD *)(*v5)(v2);
      goto LABEL_10;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    uint64_t result = (_DWORD *)off_1EB21C9E8(v2);
    uint64_t v2 = (_DWORD *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v5 = &xmmword_1EB21CA50;
      goto LABEL_8;
    }
  }
LABEL_10:
  uint64_t v6 = (int)v3[10];
  if ((int)v4 < (int)v6)
  {
    int v7 = v3[3];
    int v8 = (uint64_t *)&v3[2 * v4 + 12];
    uint64_t v9 = v6 - v4;
    do
    {
      uint64_t v10 = *v8++;
      int v11 = *(_DWORD *)(v10 + 12);
      if (v7 <= v11 + 1) {
        int v7 = v11 + 1;
      }
      v3[3] = v7;
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_1B0DAACB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a2 + 32) + 24);
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(v7 + 24);
  if (a3)
  {
    do
    {
      sub_1B0DAB298(v8, v7, 1, a4);
      if (*(_DWORD *)(v8 + 60)) {
        break;
      }
      if (*(unsigned char *)(v7 + 20)) {
        break;
      }
      uint64_t v10 = *(void *)(v7 + 136 * *(unsigned __int16 *)(*(void *)(v7 + 88) + 4) + 216);
      int v11 = *(_DWORD *)(v7 + 68);
      if (!v11 && v10 >= a4) {
        break;
      }
    }
    while (!v11 || v10 > a4);
  }
  else
  {
    sub_1B0DAB298(*(void *)(v7 + 24), *(void *)(v6 + 48), 0, 0);
  }
  uint64_t v12 = *(void *)(v7 + 24);
  uint64_t result = *(unsigned int *)(v12 + 60);
  *(_DWORD *)(v12 + 60) = 0;
  if (result || *(unsigned char *)(v7 + 20))
  {
    BOOL v14 = 0;
    *(_DWORD *)(a2 + 4) = 1;
  }
  else
  {
    uint64_t v15 = *(void *)(*(void *)(a2 + 32) + 24);
    uint64_t v16 = *(void *)(v15 + 48);
    int v17 = *(_DWORD *)(v16 + 16);
    *(_DWORD *)(v15 + 16) = v17;
    if (!*(_DWORD *)(*(void *)(a1 + 8) + 92)) {
      *(void *)(v15 + 8) = *(void *)(v16 + 8);
    }
    *(void *)(a2 + 24) = *(void *)v16;
    BOOL v14 = v17 == 0;
  }
  *(_DWORD *)(a2 + 8) = v14;
  return result;
}

uint64_t sub_1B0DAADCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(*(void *)(a2 + 32) + 24);
  *(_DWORD *)(a2 + 8) = 0;
  if (*(void *)(v8 + 56))
  {
    int v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = v8 + 32;
    uint64_t v12 = v8 + 32;
    do
    {
      uint64_t v13 = *(uint64_t **)(v12 + 16);
      if (!*((unsigned char *)v13 + 20))
      {
        uint64_t v14 = *v13;
        if (v9 && *(_DWORD *)(a1 + 24) == v14 < v10)
        {
          int v9 = 1;
        }
        else
        {
          int v9 = 1;
          uint64_t v10 = v14;
        }
      }
      uint64_t v12 = *(void *)(v12 + 24);
    }
    while (v12);
    int v16 = 1;
    while (1)
    {
      int v17 = v16;
      uint64_t v18 = *(void *)(v11 + 16);
      if (!*(unsigned char *)(v18 + 20))
      {
        uint64_t v19 = *(void *)v18;
        if (*(void *)v18 == v10)
        {
          if (a3)
          {
LABEL_18:
            uint64_t v20 = v18 + 24;
            uint64_t v21 = *(void *)(v18 + 24);
            do
            {
              sub_1B0DAB298(v21, v18, 1, a4);
              if (*(_DWORD *)(v21 + 60)) {
                break;
              }
              if (*(unsigned char *)(v18 + 20)) {
                break;
              }
              uint64_t v22 = *(void *)(v18 + 136 * *(unsigned __int16 *)(*(void *)(v18 + 88) + 4) + 216);
              int v23 = *(_DWORD *)(v18 + 68);
              if (!v23 && v22 >= a4) {
                break;
              }
            }
            while (!v23 || v22 > a4);
          }
          else
          {
            uint64_t v20 = v18 + 24;
            sub_1B0DAB298(*(void *)(v18 + 24), *(void *)(v11 + 16), 0, 0);
          }
          uint64_t result = *(unsigned int *)(*(void *)v20 + 60);
          *(_DWORD *)(*(void *)v20 + 60) = 0;
          if (result) {
            goto LABEL_31;
          }
          if (*(unsigned char *)(*(void *)(v11 + 16) + 20)) {
            int v16 = v17;
          }
          else {
            int v16 = 0;
          }
          goto LABEL_10;
        }
        int v16 = 0;
        if (a3 && v19 != a4)
        {
          if (*(_DWORD *)(a1 + 24) == v19 > a4) {
            goto LABEL_18;
          }
          int v16 = 0;
        }
      }
LABEL_10:
      uint64_t v11 = *(void *)(v11 + 24);
      if (!v11)
      {
        uint64_t result = 0;
        int v17 = v16;
LABEL_31:
        uint64_t v7 = a1;
        uint64_t v6 = a2;
        *(_DWORD *)(a2 + 4) = (result | v17) != 0;
        if (!(result | v17))
        {
LABEL_46:
          return sub_1B0DAC808(v7, v6);
        }
        return result;
      }
    }
  }
  uint64_t v25 = *(void *)(v8 + 48);
  uint64_t v26 = *(void *)(v25 + 24);
  if (a3)
  {
    do
    {
      sub_1B0DAB298(v26, v25, 1, a4);
      if (*(_DWORD *)(v26 + 60)) {
        break;
      }
      if (*(unsigned char *)(v25 + 20)) {
        break;
      }
      uint64_t v27 = *(void *)(v25 + 136 * *(unsigned __int16 *)(*(void *)(v25 + 88) + 4) + 216);
      int v28 = *(_DWORD *)(v25 + 68);
      if (!v28 && v27 >= a4) {
        break;
      }
    }
    while (!v28 || v27 > a4);
  }
  else
  {
    sub_1B0DAB298(*(void *)(v25 + 24), *(void *)(v8 + 48), 0, 0);
  }
  uint64_t v29 = *(void *)(v25 + 24);
  uint64_t result = *(unsigned int *)(v29 + 60);
  *(_DWORD *)(v29 + 60) = 0;
  if (result)
  {
    *(_DWORD *)(v6 + 4) = 1;
  }
  else
  {
    BOOL v30 = *(unsigned char *)(v25 + 20) != 0;
    *(_DWORD *)(v6 + 4) = v30;
    if (!v30) {
      goto LABEL_46;
    }
  }
  return result;
}

uint64_t sub_1B0DAB090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = *(_DWORD *)(a2 + 40);
  if (v5 <= 0)
  {
    uint64_t v14 = *(void *)(a2 + 48);
    goto LABEL_29;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)(a2 + 24);
  do
  {
    uint64_t v11 = *(void *)(a2 + 48 + 8 * v9);
    if (*(_DWORD *)(v11 + 4)) {
      goto LABEL_3;
    }
    uint64_t v12 = *(void *)(v11 + 24);
    if (v12 != v10)
    {
      if (!a3) {
        goto LABEL_3;
      }
      if (*(_DWORD *)(a1 + 24))
      {
        if (v12 <= a4) {
          goto LABEL_3;
        }
      }
      else if (v12 >= a4)
      {
        goto LABEL_3;
      }
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(v11 + 16))(a1);
    if (result)
    {
      int v20 = 0;
      goto LABEL_30;
    }
    int v5 = *(_DWORD *)(a2 + 40);
LABEL_3:
    ++v9;
  }
  while (v9 < v5);
  uint64_t v14 = *(void *)(a2 + 48);
  if (v5 >= 2)
  {
    uint64_t v15 = v5 - 1;
    int v16 = (uint64_t *)(a2 + 56);
    while (2)
    {
      uint64_t v17 = *v16;
      if (*(_DWORD *)(*v16 + 4)) {
        goto LABEL_17;
      }
      if (!*(_DWORD *)(v14 + 4))
      {
        uint64_t v18 = *(void *)(v14 + 24);
        uint64_t v19 = *(void *)(v17 + 24);
        if (*(_DWORD *)(a1 + 24))
        {
          if (v18 > v19) {
            goto LABEL_17;
          }
          if (v18 >= v19)
          {
LABEL_26:
            if (*(_DWORD *)(v17 + 8)) {
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (v18 < v19) {
            goto LABEL_17;
          }
          if (v18 <= v19) {
            goto LABEL_26;
          }
        }
      }
      uint64_t v14 = *v16;
LABEL_17:
      ++v16;
      if (!--v15) {
        break;
      }
      continue;
    }
  }
LABEL_29:
  uint64_t result = 0;
  *(void *)(a2 + 24) = *(void *)(v14 + 24);
  int v21 = *(_DWORD *)(v14 + 4);
  int v20 = *(_DWORD *)(v14 + 8);
  *(_DWORD *)(a2 + 4) = v21;
LABEL_30:
  *(_DWORD *)(a2 + 8) = v20;
  return result;
}

uint64_t sub_1B0DAB1F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + 48) + 16))();
  if (result)
  {
    *(_DWORD *)(a2 + 8) = 0;
  }
  else
  {
    return sub_1B0DADD60(a1, a2);
  }
  return result;
}

uint64_t sub_1B0DAB250(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + 48) + 16))();
  if (result || (uint64_t result = sub_1B0DADFB0(a1, a2), result)) {
    *(_DWORD *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t sub_1B0DAB298(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  if (!*(_DWORD *)(result + 60))
  {
    uint64_t v5 = result;
    int v6 = a2 + 96;
    for (BOOL i = a3 == 0; ; BOOL i = 1)
    {
      uint64_t v8 = *(unsigned __int16 *)(*(void *)(a2 + 88) + 4);
      int v51 = 0;
      uint64_t v9 = a2 + 136 * v8;
      uint64_t v10 = v9 + 96;
      if (!i)
      {
        uint64_t v11 = *(void *)(a2 + 136 * v8 + 192);
        if (v11) {
          break;
        }
      }
      uint64_t v16 = a2 + 136 * v8;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v16 + 152))(v5, v9 + 96, &v51);
      uint64_t v17 = *(void *)(v16 + 112);
LABEL_16:
      if (v17) {
        BOOL v18 = v51 == 0;
      }
      else {
        BOOL v18 = 0;
      }
      if (!v18)
      {
LABEL_61:
        int v24 = *(_DWORD *)(a2 + 64) + v8;
LABEL_62:
        if (v24 >= 2)
        {
          do
          {
            if (*(_DWORD *)(v5 + 60)) {
              break;
            }
            int v24 = v24 >> 1;
            uint64_t result = sub_1B0DAC68C(a2, v24);
            if (result)
            {
              int v39 = result;
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a2 + 136 * (int)result + 152))(v5, a2 + 136 * (int)result + 96, 0);
              int v24 = *(_DWORD *)(a2 + 64) + v39;
            }
          }
          while (v24 > 1);
        }
        uint64_t v37 = a2 + 136 * *(unsigned __int16 *)(*(void *)(a2 + 88) + 4);
        uint64_t v38 = *(void *)(v37 + 112);
        *(unsigned char *)(a2 + 20) = v38 == 0;
        *(void *)(a2 + 80) = *(void *)(v37 + 216);
        if (!v38) {
          return result;
        }
        uint64_t v10 = v37 + 96;
        goto LABEL_65;
      }
      uint64_t v19 = *(void *)(a2 + 136 * v8 + 216);
      uint64_t v20 = *(void *)(a2 + 80);
      if (v19 == v20)
      {
        int v21 = *(_DWORD *)(a2 + 68);
LABEL_24:
        uint64_t v22 = v8 ^ 1;
        if (v21) {
          int64_t v23 = 0x8000000000000000;
        }
        else {
          int64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
        }
        *(void *)(a2 + 80) = v23;
        int v24 = *(_DWORD *)(a2 + 64) + v8;
        uint64_t v25 = *(void *)(a2 + 88);
        int v26 = v24;
        while (2)
        {
          if (v26 >= 0) {
            int v27 = v26;
          }
          else {
            int v27 = v26 + 1;
          }
          uint64_t v28 = v25 + 4 * (v27 >> 1);
          if (*(unsigned char *)(v28 + 2))
          {
            int64_t v29 = *(void *)(v10 + 120);
            int64_t v30 = *(void *)(a2 + 136 * v22 + 216);
            if (v29 == v30) {
              goto LABEL_62;
            }
            if (v21 == v30 > v29)
            {
              uint64_t v10 = a2 + 136 * v22 + 96;
              goto LABEL_36;
            }
            if (v21 == v30 > v23)
            {
LABEL_36:
              *(void *)(a2 + 80) = v30;
              int64_t v23 = v30;
            }
          }
          *(_WORD *)uint64_t v28 = -3855 * ((v10 - v6) >> 3);
          if ((v26 & 0xFFFFFFFE) == 2) {
            goto LABEL_65;
          }
          uint64_t v22 = *(unsigned __int16 *)(v25 + 4 * (((uint64_t)v27 >> 1) ^ 1));
          int v26 = v27 >> 1;
          continue;
        }
      }
      int v21 = v19 < v20;
      if (*(_DWORD *)(a2 + 68) == v21) {
        goto LABEL_24;
      }
LABEL_65:
      if (!*(unsigned char *)(a2 + 72) || *(_DWORD *)(v10 + 128))
      {
        uint64_t result = sub_1B0DAB7B4(a2);
        if (!result) {
          return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a2, v10);
        }
      }
      if (*(_DWORD *)(v5 + 60)) {
        return result;
      }
    }
    uint64_t v12 = a2 + 136 * v8;
    uint64_t v13 = (int *)(v12 + 108);
    int v49 = *(_DWORD *)(v12 + 104);
    if ((v49 & 2) != 0)
    {
      while (!*(_DWORD *)(v11 + 20) && *(void *)(v11 + 32) > a4)
      {
        uint64_t result = sub_1B0DAC288(v5, (_DWORD *)v11, 0);
        int v15 = *(_DWORD *)(v5 + 60);
        if (v15) {
          goto LABEL_40;
        }
      }
      int v15 = 0;
LABEL_40:
      int v31 = *(_DWORD *)(v11 + 28);
      if (v31 < *v13)
      {
        int *v13 = v31 + 1;
        uint64_t result = (uint64_t)sub_1B0DAB998((unsigned __int16 **)v5, (unsigned int **)v10);
LABEL_42:
        uint64_t v14 = (uint64_t (**)(uint64_t, uint64_t, void))(a2 + 136 * v8 + 152);
        goto LABEL_54;
      }
    }
    else
    {
      if (*(_DWORD *)(v11 + 20))
      {
        uint64_t v14 = (uint64_t (**)(uint64_t, uint64_t, void))(a2 + 136 * v8 + 152);
LABEL_53:
        uint64_t result = (*v14)(v5, v10, 0);
        goto LABEL_54;
      }
      if (*(void *)(v11 + 32) >= a4)
      {
        int v15 = 0;
        int v32 = *v13;
      }
      else
      {
        while (1)
        {
          int v32 = *(_DWORD *)(v11 + 28);
          uint64_t result = sub_1B0DABC00(v5, (_DWORD *)v11, 0);
          int v15 = *(_DWORD *)(v5 + 60);
          if (v15) {
            break;
          }
          if (*(_DWORD *)(v11 + 20) || *(void *)(v11 + 32) >= a4)
          {
            int v15 = 0;
            break;
          }
        }
      }
      if (v32 > *v13)
      {
        if (*(_DWORD *)(*(void *)v10 + 8) < v32)
        {
LABEL_51:
          *(_DWORD *)(v5 + 60) = 267;
          goto LABEL_42;
        }
        uint64_t v40 = a2 + 136 * v8;
        uint64_t v43 = *(void *)(v40 + 120);
        uint64_t v41 = (void *)(v40 + 120);
        uint64_t v42 = v43;
        if (v43)
        {
          uint64_t v48 = v41;
          int v44 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0)
          {
LABEL_78:
            uint64_t result = (*v44)(v42);
            uint64_t v41 = v48;
            goto LABEL_79;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v42);
          --qword_1EB220150;
          uint64_t result = off_1EB21C9E8(v42);
          uint64_t v42 = xmmword_1EB2201B0;
          uint64_t v41 = v48;
          if ((void)xmmword_1EB2201B0)
          {
            int v44 = &xmmword_1EB21CA50;
            goto LABEL_78;
          }
        }
LABEL_79:
        *uint64_t v41 = 0;
        int *v13 = v32 - 1;
        uint64_t v45 = (unsigned __int16 ***)(a2 + 136 * v8 + 112);
        while (!*(_DWORD *)(v5 + 60))
        {
          uint64_t result = sub_1B0DABEE4(v5, (unsigned int **)v10);
          uint64_t v46 = *v45;
          if (!*v45) {
            break;
          }
          unsigned int v47 = __rev16(**v46);
          if (v47)
          {
            if (v47 >= 4 && *((_DWORD *)v46 + 3) > (signed int)v47)
            {
              *(void *)(a2 + 136 * v8 + 128) = sub_1B0DA69F4((char *)*v46 + v47, (unint64_t *)(a2 + 136 * v8 + 216))+ v47;
              uint64_t result = sub_1B0DAC13C(v5, v10);
              goto LABEL_42;
            }
            goto LABEL_51;
          }
        }
        goto LABEL_42;
      }
    }
    uint64_t v14 = (uint64_t (**)(uint64_t, uint64_t, void))(a2 + 136 * v8 + 152);
    if (!v15) {
      goto LABEL_53;
    }
LABEL_54:
    uint64_t v33 = a2 + 136 * v8;
    uint64_t v35 = *(void *)(v33 + 112);
    int v34 = (uint64_t *)(v33 + 112);
    uint64_t v17 = v35;
    if (!v35) {
      goto LABEL_61;
    }
    while (1)
    {
      uint64_t v36 = v34[13];
      if ((v49 & 2) != 0)
      {
        if (v36 <= a4) {
          goto LABEL_16;
        }
      }
      else if (v36 >= a4)
      {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v5 + 60)) {
        goto LABEL_16;
      }
      uint64_t result = (*v14)(v5, v10, 0);
      uint64_t v17 = *v34;
      if (!*v34) {
        goto LABEL_61;
      }
    }
  }
  return result;
}

uint64_t sub_1B0DAB7B4(uint64_t a1)
{
  uint64_t v1 = a1 + 136 * *(unsigned __int16 *)(*(void *)(a1 + 88) + 4);
  if (!*(void *)(v1 + 112)) {
    return 0;
  }
  uint64_t v2 = a1 + 136 * *(unsigned __int16 *)(*(void *)(a1 + 88) + 4);
  unint64_t v5 = *(int *)(v2 + 144);
  uint64_t v4 = (int *)(v2 + 144);
  unint64_t v3 = v5;
  if (!v5) {
    return 0;
  }
  uint64_t v6 = a1 + 136 * *(unsigned __int16 *)(*(void *)(a1 + 88) + 4);
  uint64_t v8 = *(void *)(v6 + 136);
  uint64_t v7 = (void *)(v6 + 136);
  unint64_t v9 = v7[10];
  unint64_t v10 = v9 % v3;
  uint64_t v11 = *(unsigned __int8 ***)(v8 + ((uint64_t)((v9 % v3) << 32) >> 29));
  if (!v11)
  {
    uint64_t v12 = (int)v10;
    *(void *)(*v7 + 8 * (int)v10) = sub_1B0DA6708(*(void *)(a1 + 24), (int)v10+ ((unint64_t)(**(_DWORD **)(v1 + 96) + 0x10000) << 37));
    uint64_t v11 = *(unsigned __int8 ***)(*v7 + 8 * v12);
    if (!v11) {
      return 0;
    }
    unint64_t v3 = *v4;
    unint64_t v9 = v7[10];
  }
  uint64_t v13 = (uint64_t)*v11;
  int v14 = **v11;
  int v15 = *((_DWORD *)v11 + 2);
  if (v14 == 4) {
    char v16 = 2;
  }
  else {
    char v16 = 3;
  }
  if (v15 <= 16) {
    unint64_t v17 = 1;
  }
  else {
    unint64_t v17 = (v15 - 8) >> v16;
  }
  if (!v9) {
    return *(unsigned __int8 *)(v13 + 1);
  }
  unint64_t v18 = v9 / v3 % v17;
  uint64_t v19 = v13 + 8;
  if (v14 == 4)
  {
    uint64_t v20 = (int *)(v19 + 4 * v18);
    int v21 = *v20;
    if (*v20)
    {
      int v22 = v17 + 1;
      while (((v21 << 24) | ((unint64_t)*((unsigned __int8 *)v20 + 1) << 16) | ((unint64_t)*((unsigned __int8 *)v20 + 2) << 8) | *((unsigned __int8 *)v20 + 3)) != v9)
      {
        uint64_t result = 0;
        if (--v22)
        {
          LODWORD(v18) = ((int)v18 + 1) % v17;
          uint64_t v20 = (int *)(v19 + 4 * v18);
          int v21 = *v20;
          if (*v20) {
            continue;
          }
        }
        return result;
      }
      return 1;
    }
  }
  else
  {
    int v24 = (uint64_t *)(v19 + 8 * v18);
    uint64_t v25 = *v24;
    if (*v24)
    {
      int v26 = v17 + 1;
      while (((v25 << 56) | ((unint64_t)*((unsigned __int8 *)v24 + 1) << 48) | ((unint64_t)*((unsigned __int8 *)v24 + 2) << 40) | ((unint64_t)*((unsigned __int8 *)v24 + 3) << 32) | ((unint64_t)*((unsigned __int8 *)v24 + 4) << 24) | ((unint64_t)*((unsigned __int8 *)v24 + 5) << 16) | ((unint64_t)*((unsigned __int8 *)v24 + 6) << 8))
            + *((unsigned __int8 *)v24 + 7) != v9)
      {
        uint64_t result = 0;
        if (--v26)
        {
          LODWORD(v18) = ((int)v18 + 1) % v17;
          int v24 = (uint64_t *)(v19 + 8 * v18);
          uint64_t v25 = *v24;
          if (*v24) {
            continue;
          }
        }
        return result;
      }
      return 1;
    }
  }
  return 0;
}

unsigned __int16 **sub_1B0DAB998(unsigned __int16 **result, unsigned int **a2)
{
  unint64_t v3 = result;
  uint64_t v4 = a2[2];
  if (v4)
  {
    unint64_t v5 = (uint64_t (**)(unsigned int *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      uint64_t result = (unsigned __int16 **)(*v5)(v4);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
    --qword_1EB220150;
    uint64_t result = (unsigned __int16 **)off_1EB21C9E8(v4);
    uint64_t v4 = (unsigned int *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unint64_t v5 = (uint64_t (**)(unsigned int *))&xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  a2[2] = 0;
  if (v3[15]) {
    return result;
  }
  do
  {
    uint64_t v7 = *((int *)a2 + 3);
    if ((int)v7 <= *((_DWORD *)a2 + 16)) {
      break;
    }
    uint64_t v8 = v7 - 1;
    *((_DWORD *)a2 + 3) = v8;
    uint64_t result = (unsigned __int16 **)sub_1B0DA6708((uint64_t)v3, v8 + ((unint64_t)**a2 << 37));
    if (result)
    {
      unint64_t v9 = (unsigned int *)result;
      if (*((_DWORD *)a2 + 3) == *((_DWORD *)a2 + 16))
      {
        unint64_t v10 = (unsigned int *)*((int *)a2 + 17);
        if ((int)v10 < *((_DWORD *)result + 3)) {
          goto LABEL_29;
        }
      }
      else
      {
        unint64_t v10 = (unsigned int *)__rev16(**result);
        if (v10)
        {
          if (*((_DWORD *)result + 3) > (int)v10)
          {
LABEL_29:
            a2[2] = (unsigned int *)result;
            a2[4] = v10;
            goto LABEL_30;
          }
          v3[15] = 267;
        }
      }
      if (a2[2])
      {
        unint64_t v10 = a2[4];
        unint64_t v9 = a2[2];
LABEL_30:
        uint64_t result = (unsigned __int16 **)sub_1B0DA69F4((char *)v10 + *(void *)v9, (unint64_t *)a2 + 15);
        a2[4] = (unsigned int *)((char *)a2[4] + result);
        break;
      }
      uint64_t v6 = (uint64_t (**)(unsigned int *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
        --qword_1EB220150;
        uint64_t result = (unsigned __int16 **)off_1EB21C9E8(v9);
        unint64_t v9 = (unsigned int *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          continue;
        }
        uint64_t v6 = (uint64_t (**)(unsigned int *))&xmmword_1EB21CA50;
      }
      uint64_t result = (unsigned __int16 **)(*v6)(v9);
    }
  }
  while (!v3[15]);
  uint64_t v11 = a2[2];
  if (v11)
  {
    *((_DWORD *)a2 + 19) = v11[2] + 1;
    return (unsigned __int16 **)sub_1B0DAC4AC(v3, (uint64_t)a2);
  }
  return result;
}

uint64_t sub_1B0DABC00(uint64_t a1, _DWORD *a2, int a3)
{
  uint64_t v6 = a3;
  uint64_t v7 = (uint64_t)&a2[8 * a3 + 2];
  uint64_t result = sub_1B0DABD64(v7);
  if (!result) {
    return result;
  }
  if (a3 + 1 >= *a2) {
    return result;
  }
  uint64_t result = sub_1B0DABC00(a1, a2);
  if (*(_DWORD *)(v7 + 44)) {
    return result;
  }
  uint64_t v9 = *(void *)v7;
  if (*(void *)v7)
  {
    unint64_t v10 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
      --qword_1EB220150;
      off_1EB21C9E8(v9);
      uint64_t v9 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_12;
      }
      unint64_t v10 = &xmmword_1EB21CA50;
    }
    (*v10)(v9);
  }
LABEL_12:
  *(_OWORD *)uint64_t v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  uint64_t result = (uint64_t)sub_1B0DA6708(a1, (v6 << 31) + ((unint64_t)a2[1] << 37) + 0x1000000000 + *(int *)(v7 + 52));
  *(void *)uint64_t v7 = result;
  if (result)
  {
    return sub_1B0DABD64(v7);
  }
  return result;
}

uint64_t sub_1B0DABD64(uint64_t a1)
{
  uint64_t v2 = *(int **)a1;
  uint64_t v3 = *(int *)(a1 + 8);
  if (v3)
  {
    int v4 = *(_DWORD *)(a1 + 8);
    int v5 = v2[2];
    if ((int)v3 >= v5)
    {
LABEL_6:
      *(_DWORD *)(a1 + 12) = 1;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = *(void *)v2;
      uint64_t v8 = v3 << 32;
      uint64_t v9 = v7 + v3;
      int v10 = v3 - v5;
      while (!*(unsigned char *)(v9 + v6))
      {
        v8 += 0x100000000;
        if (!(v10 + ++v6)) {
          goto LABEL_6;
        }
      }
      unint64_t v21 = 0;
      *(_DWORD *)(a1 + 20) += v6 + 1;
      int v15 = sub_1B0DA69F4((char *)(v7 + (v8 >> 32)), &v21);
      *(void *)(a1 + 24) += v21;
      *(_DWORD *)(a1 + 8) = v15 + v4 + v6;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 8) = 1;
    uint64_t v11 = *(void *)v2;
    uint64_t v12 = (char *)(*(void *)v2 + 1);
    int v13 = *v12;
    if (*v12 < 0)
    {
      int v16 = *(unsigned __int8 *)(v11 + 2);
      if (*(char *)(v11 + 2) < 0)
      {
        int v17 = *(char *)(v11 + 3);
        if (v17 < 0)
        {
          unint64_t v21 = 0;
          char v18 = sub_1B0DA69F4(v12, &v21);
          *(_DWORD *)(a1 + 20) = v21 & 0x7FFFFFFF;
          unsigned int v14 = (v18 + 1);
        }
        else
        {
          *(_DWORD *)(a1 + 20) = v17 & 0x7F | (v13 << 14) & 0x1FC07F | ((v16 & 0x7F) << 7);
          unsigned int v14 = 4;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 20) = ((v13 & 0x7F) << 7) | v16;
        unsigned int v14 = 3;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 20) = v13;
      unsigned int v14 = 2;
    }
    *(_DWORD *)(a1 + 8) = v14;
    int v19 = *(_DWORD *)(a1 + 8) + sub_1B0DA69F4((char *)(v11 + v14), (unint64_t *)(a1 + 24));
    *(_DWORD *)(a1 + 8) = v19;
    *(_DWORD *)(a1 + 16) = v19;
  }
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1B0DABEE4(uint64_t result, unsigned int **a2)
{
  uint64_t v3 = result;
  int v4 = *a2;
  int v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = (uint64_t (**)(unsigned int *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      uint64_t result = (*v6)(v5);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v5);
    int v5 = (unsigned int *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v6 = (uint64_t (**)(unsigned int *))&xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v7 = *((int *)a2 + 3);
  *((_DWORD *)a2 + 3) = v7 + 1;
  uint64_t v8 = (uint64_t)a2[3];
  if (v8)
  {
    a2[2] = (unsigned int *)v8;
    a2[3] = 0;
    int v9 = *(_DWORD *)(v8 + 8);
    int v10 = *(_DWORD *)(v8 + 12);
    goto LABEL_10;
  }
  if ((int)v7 >= (int)v4[2]) {
    goto LABEL_23;
  }
  uint64_t result = (uint64_t)sub_1B0DA6708(v3, v7 + 1 + ((unint64_t)*v4 << 37));
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v8 = result;
  int v9 = *(_DWORD *)(result + 8);
  if (v9 < 4 || (int v10 = *(_DWORD *)(result + 12), v10 > v9))
  {
    *(_DWORD *)(v3 + 60) = 267;
    int v13 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v8);
      uint64_t v8 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_23;
      }
      int v13 = &xmmword_1EB21CA50;
    }
    uint64_t result = (*v13)(v8);
LABEL_23:
    a2[2] = 0;
    return result;
  }
  a2[2] = (unsigned int *)result;
LABEL_10:
  *((_DWORD *)a2 + 18) = v10;
  if (v10 >= v9)
  {
    *((_DWORD *)a2 + 19) = v9 + 1;
  }
  else
  {
    uint64_t v11 = (char *)(*(void *)v8 + v10);
    int v12 = *v11;
    if (*v11 < 0)
    {
      int v14 = v11[1];
      if (v11[1] < 0)
      {
        int v15 = v11[2];
        if (v15 < 0)
        {
          unint64_t v16 = 0;
          uint64_t result = sub_1B0DA69F4(v11, &v16);
          *((_DWORD *)a2 + 19) = v16 & 0x7FFFFFFF;
        }
        else
        {
          *((_DWORD *)a2 + 19) = v15 & 0x7F | (v12 << 14) & 0x1FC07F | ((v14 & 0x7F) << 7);
          uint64_t result = 3;
        }
      }
      else
      {
        *((_DWORD *)a2 + 19) = ((v12 & 0x7F) << 7) | v14;
        uint64_t result = 2;
      }
    }
    else
    {
      *((_DWORD *)a2 + 19) = v12;
      uint64_t result = 1;
    }
    *((_DWORD *)a2 + 18) = result + v10;
  }
  return result;
}

uint64_t sub_1B0DAC13C(uint64_t result, uint64_t a2)
{
  if (!*(_DWORD *)(result + 60))
  {
    uint64_t v3 = *(void *)(a2 + 32);
    if (*(_DWORD *)(*(void *)result + 92) == 1)
    {
      int v4 = *(_DWORD *)(a2 + 76);
      int v5 = *(uint64_t **)(a2 + 16);
      if (v4 >= *((_DWORD *)v5 + 3)) {
        int v4 = *((_DWORD *)v5 + 3);
      }
      *(unsigned char *)(a2 + 132) = 0;
      *(_DWORD *)(a2 + 128) = 1;
      if (v4 <= (int)v3 || (uint64_t v6 = *v5, *(unsigned char *)(*v5 + (int)v3)))
      {
        LODWORD(v7) = v3;
      }
      else
      {
        *(unsigned char *)(a2 + 132) = 1;
        uint64_t v7 = (int)v3 + 1;
        if ((int)v7 >= v4 || *(unsigned char *)(v6 + v7))
        {
          *(_DWORD *)(a2 + 128) = 0;
        }
        else
        {
          *(_DWORD *)(a2 + 128) = 1;
          LODWORD(v7) = v3 + 2;
        }
      }
    }
    else
    {
      uint64_t v8 = (char *)(**(void **)(a2 + 16) + (int)v3);
      unsigned int v9 = *v8;
      if (*v8 < 0)
      {
        int v10 = v8[1];
        if (v8[1] < 0)
        {
          int v11 = v8[2];
          if (v11 < 0)
          {
            unint64_t v12 = 0;
            uint64_t result = sub_1B0DA69F4(v8, &v12);
            unsigned int v9 = v12 & 0x7FFFFFFF;
          }
          else
          {
            unsigned int v9 = v11 & 0x7F | (v9 << 14) & 0x1FC07F | ((v10 & 0x7F) << 7);
            uint64_t result = 3;
          }
        }
        else
        {
          unsigned int v9 = ((v9 & 0x7F) << 7) | v10;
          uint64_t result = 2;
        }
      }
      else
      {
        uint64_t result = 1;
      }
      LODWORD(v7) = result + v3;
      *(unsigned char *)(a2 + 132) = v9 & 1;
      *(_DWORD *)(a2 + 128) = v9 >> 1;
    }
    *(void *)(a2 + 32) = (int)v7;
  }
  return result;
}

uint64_t sub_1B0DAC288(uint64_t result, _DWORD *a2, int a3)
{
  int v4 = a2;
  uint64_t v5 = result;
  uint64_t v6 = a3;
  uint64_t v7 = &a2[8 * a3];
  uint64_t v8 = v7 + 4;
  int v9 = v7[4];
  int v10 = (uint64_t *)(v7 + 2);
  if (v9 <= v7[6])
  {
    v7[5] = 1;
    goto LABEL_12;
  }
  uint64_t v20 = result;
  uint64_t v21 = a3;
  uint64_t v11 = *(void *)*v10;
  *uint64_t v8 = 0;
  sub_1B0DABD64((uint64_t)(v7 + 2));
  int v12 = *v8;
  int v13 = v7 + 7;
  int v14 = v7 + 8;
  while (1)
  {
    unint64_t v23 = 0;
    uint64_t v15 = v12;
    if (*(unsigned char *)(v11 + v12))
    {
      LODWORD(v16) = 0;
    }
    else
    {
      uint64_t v16 = 0;
      while (!*(unsigned __int8 *)(v11 + 1 + v12 + v16++))
        ;
      v12 += v16;
      v15 += v16;
    }
    uint64_t result = sub_1B0DA69F4((char *)(v11 + v15), &v23);
    v12 += result;
    if (v12 >= v9) {
      break;
    }
    *v13 += v16 + 1;
    *v14 += v23;
    *uint64_t v8 = v12;
  }
  uint64_t v6 = v21;
  int v4 = a2;
  uint64_t v5 = v20;
  if (a2[8 * v21 + 5])
  {
LABEL_12:
    if (a3 + 1 >= *v4) {
      return result;
    }
    uint64_t result = sub_1B0DAC288(v5, v4);
    if (v8[9]) {
      return result;
    }
    char v18 = (void *)*v10;
    if (!*v10) {
      goto LABEL_21;
    }
    int v19 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v18);
      --qword_1EB220150;
      off_1EB21C9E8(v18);
      char v18 = (void *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_21;
      }
      int v19 = &xmmword_1EB21CA50;
    }
    (*v19)(v18);
LABEL_21:
    *(_OWORD *)int v10 = 0u;
    *(_OWORD *)(v8 + 2) = 0u;
    uint64_t result = (uint64_t)sub_1B0DA6708(v5, (v6 << 31) + ((unint64_t)v4[1] << 37) + 0x1000000000 + (int)v8[11]);
    *int v10 = result;
    if (result)
    {
      do
        uint64_t result = sub_1B0DABD64((uint64_t)(v8 - 2));
      while (!result);
      v4[8 * v6 + 5] = 0;
    }
  }
  return result;
}

uint64_t sub_1B0DAC4AC(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = 0;
  int v4 = *(_DWORD *)(*(void *)a1 + 92);
  uint64_t v5 = *(uint64_t **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *v5;
  if (*((_DWORD *)v5 + 3) >= *(_DWORD *)(a2 + 76)) {
    int v8 = *(_DWORD *)(a2 + 76);
  }
  else {
    int v8 = *((_DWORD *)v5 + 3);
  }
  for (uint64_t i = *(void *)(a2 + 32); ; *(void *)(a2 + 32) = (int)i)
  {
    unint64_t v22 = 0;
    if (v4 == 1)
    {
      if ((int)i < v8 && !*(unsigned char *)(v7 + (int)i))
      {
        uint64_t v10 = (int)i + 1;
        if ((int)v10 >= v8)
        {
          LODWORD(i) = i + 1;
        }
        else if (*(unsigned char *)(v7 + v10))
        {
          LODWORD(i) = i + 1;
        }
        else
        {
          LODWORD(i) = i + 2;
        }
      }
    }
    else
    {
      uint64_t v11 = (char *)(v7 + (int)i);
      unsigned int v12 = *v11;
      if (*v11 < 0)
      {
        int v14 = v11[1];
        if (v11[1] < 0)
        {
          int v15 = v11[2];
          if (v15 < 0)
          {
            unint64_t v23 = 0;
            int v13 = sub_1B0DA69F4(v11, &v23);
            unsigned int v12 = v23 & 0x7FFFFFFF;
          }
          else
          {
            unsigned int v12 = v15 & 0x7F | (v12 << 14) & 0x1FC07F | ((v14 & 0x7F) << 7);
            int v13 = 3;
          }
        }
        else
        {
          unsigned int v12 = ((v12 & 0x7F) << 7) | v14;
          int v13 = 2;
        }
      }
      else
      {
        int v13 = 1;
      }
      LODWORD(i) = v13 + i + (v12 >> 1);
    }
    if ((int)i >= v8) {
      break;
    }
    int v16 = sub_1B0DA69F4((char *)(v7 + (int)i), &v22);
    *(void *)(a2 + 120) += v22;
    uint64_t v17 = *(int *)(a2 + 84);
    uint64_t v18 = *(void *)(a2 + 88);
    if (v3 >= v17)
    {
      if (sqlite3_initialize() || (uint64_t v19 = sub_1B0C8E1B8(v18, 4 * (v17 + 8))) == 0)
      {
        a1[15] = 7;
        break;
      }
      uint64_t v18 = v19;
      *(void *)(a2 + 88) = v19;
      *(_DWORD *)(a2 + 84) = v17 + 8;
      uint64_t v6 = *(void *)(a2 + 32);
    }
    *(_DWORD *)(v18 + 4 * v3) = v6;
    LODWORD(i) = i + v16;
    ++v3;
    LODWORD(v6) = i;
  }
  *(_DWORD *)(a2 + 80) = v3;

  return sub_1B0DAC13C((uint64_t)a1, a2);
}

uint64_t sub_1B0DAC68C(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 88);
  int v5 = *(_DWORD *)(a1 + 64) / 2;
  BOOL v6 = __OFSUB__(a2, v5);
  int v7 = a2 - v5;
  if (v7 < 0 != v6)
  {
    int v8 = *(unsigned __int16 *)(v4 + 8 * a2);
    uint64_t v9 = *(unsigned __int16 *)(v4 + 4 * ((2 * a2) | 1));
  }
  else
  {
    int v8 = 2 * v7;
    uint64_t v9 = (2 * v7) | 1u;
  }
  uint64_t v10 = v4 + 4 * a2;
  *(unsigned char *)(v10 + 2) = 0;
  uint64_t v11 = (unsigned char *)(v10 + 2);
  if (!*(void *)(a1 + 136 * v8 + 112)) {
    goto LABEL_20;
  }
  if (!*(void *)(a1 + 136 * (int)v9 + 112))
  {
    LOWORD(v9) = v8;
LABEL_20:
    *(_WORD *)(v4 + 4 * a2) = v9;
    return 0;
  }
  unsigned int v12 = *(_DWORD *)(a1 + 96 + 136 * v8 + 112);
  unsigned int v13 = *(_DWORD *)(a1 + 96 + 136 * (int)v9 + 112);
  if ((int)v12 >= (int)v13) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v12;
  }
  if ((int)v14 >= 1)
  {
    int v15 = memcmp(*(const void **)(a1 + 96 + 136 * v8 + 104), *(const void **)(a1 + 96 + 136 * (int)v9 + 104), v14);
    if (v15) {
      goto LABEL_18;
    }
  }
  int v15 = v12 - v13;
  if (v12 != v13) {
    goto LABEL_18;
  }
  *uint64_t v11 = 1;
  uint64_t v16 = *(void *)(a1 + 96 + 136 * v8 + 120);
  uint64_t v17 = *(void *)(a1 + 96 + 136 * (int)v9 + 120);
  if (v16 != v17)
  {
    if (*(_DWORD *)(a1 + 68) == v16 > v17) {
      int v15 = -1;
    }
    else {
      int v15 = 1;
    }
LABEL_18:
    if (v15 < 0) {
      LOWORD(v9) = v8;
    }
    goto LABEL_20;
  }
  *(unsigned char *)(a1 + 96 + 136 * v8 + 132) = *(unsigned char *)(a1 + 96 + 136 * (int)v9 + 132);
  return v9;
}

uint64_t sub_1B0DAC808(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v152 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(v3 + 24);
  int v5 = *(_DWORD *)(a1 + 24);
  if (*(void *)(v4 + 56))
  {
    int v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = v4 + 32;
    do
    {
      uint64_t v9 = *(void *)(v8 + 16);
      if (!*(unsigned char *)(v9 + 20))
      {
        uint64_t v10 = *(void *)v9;
        if (v6 && v5 == v10 < v7)
        {
          int v6 = 1;
        }
        else
        {
          int v6 = 1;
          uint64_t v7 = v10;
        }
      }
      uint64_t v8 = *(void *)(v8 + 24);
    }
    while (v8);
  }
  else
  {
    uint64_t v7 = **(void **)(v4 + 48);
  }
  int v11 = *(_DWORD *)(v3 + 16);
  uint64_t v144 = *(void *)(a2 + 32);
LABEL_11:
  if (v11 < 1) {
    goto LABEL_80;
  }
  uint64_t v12 = 0;
  int v13 = 1;
  while (1)
  {
    uint64_t v14 = *(void *)(v3 + 8 * v12 + 24);
    if (*(int *)(v14 + 24) >= 1) {
      break;
    }
LABEL_14:
    if (++v12 >= v11)
    {
      uint64_t v2 = a2;
      if (v13)
      {
LABEL_80:
        *(void *)(v2 + 24) = v7;
        uint64_t v45 = *(int **)(v2 + 32);
        if (*(_DWORD *)(*(void *)(a1 + 8) + 92))
        {
          int v46 = 0;
          uint64_t v47 = *((void *)v45 + 3);
          *(_DWORD *)(v47 + 16) = 0;
          uint64_t v48 = v47 + 32;
          do
          {
            uint64_t v50 = *(void *)(v48 + 16);
            if (!*(unsigned char *)(v50 + 20) && *(void *)v50 == v7 && *(int *)(v50 + 16) >= 1)
            {
              int v46 = 1;
              *(_DWORD *)(v47 + 16) = 1;
            }
            uint64_t v48 = *(void *)(v48 + 24);
          }
          while (v48);
          uint64_t v16 = 0;
LABEL_266:
          *(_DWORD *)(v2 + 8) = (v46 | v16) == 0;
          return v16;
        }
        uint64_t v51 = 0;
        uint64_t v142 = *(int **)(v2 + 32);
        while (2)
        {
          if (v51 >= v45[4])
          {
            uint64_t v16 = 0;
            goto LABEL_193;
          }
          uint64_t v52 = *(void *)&v45[2 * v51 + 6];
          uint64_t v53 = *(unsigned int *)(v52 + 24);
          uint64_t v145 = v51;
          if ((int)v53 <= 1)
          {
            if (*(void *)(v52 + 56) || *((void *)v45 + 1) || *(unsigned char *)(v52 + 33))
            {
              uint64_t v150 = 0;
              int v140 = *(unsigned __int8 *)(v52 + 33);
              uint64_t v55 = (char *)v151;
              *(_DWORD *)(v52 + 16) = 0;
              goto LABEL_103;
            }
            uint64_t v89 = *(void *)(v52 + 48);
            size_t v90 = *(unsigned int *)(v89 + 16);
            uint64_t v91 = *(const void **)(v89 + 8);
            *(_DWORD *)(v52 + 16) = 0;
            if (v90)
            {
              LODWORD(v92) = *(_DWORD *)(v52 + 20);
              uint64_t v93 = v51;
              if (v92 >= v90)
              {
                uint64_t v97 = 0;
                uint64_t v96 = *(void *)(v52 + 8);
              }
              else
              {
                if (!v92) {
                  LODWORD(v92) = 64;
                }
                unint64_t v92 = (int)v92;
                do
                {
                  unint64_t v94 = v92;
                  v92 *= 2;
                }
                while (v94 < v90);
                uint64_t v95 = *(void *)(v52 + 8);
                if (sqlite3_initialize() || (uint64_t v96 = sub_1B0C8E1B8(v95, v94)) == 0)
                {
                  LODWORD(v51) = v93 + 1;
                  uint64_t v16 = 7;
                  uint64_t v45 = v142;
                  goto LABEL_193;
                }
                *(_DWORD *)(v52 + 20) = v94;
                *(void *)(v52 + 8) = v96;
                uint64_t v97 = *(int *)(v52 + 16);
                uint64_t v45 = v142;
              }
              memcpy((void *)(v96 + v97), v91, v90);
              uint64_t v16 = 0;
              *(_DWORD *)(v52 + 16) += v90;
              uint64_t v51 = v93;
            }
            else
            {
              uint64_t v16 = 0;
            }
          }
          else
          {
            uint64_t v150 = 0;
            int v140 = *(unsigned __int8 *)(v52 + 33);
            *(_DWORD *)(v52 + 16) = 0;
            if (v53 >= 5)
            {
              if (!sqlite3_initialize())
              {
                uint64_t v54 = sub_1B0C7FC94(32 * v53);
                if (v54)
                {
                  uint64_t v55 = (char *)v54;
                  LODWORD(v53) = *(_DWORD *)(v52 + 24);
                  goto LABEL_103;
                }
              }
              uint64_t v16 = 7;
              LODWORD(v51) = v145;
LABEL_193:
              if (v45[4] != v51) {
                goto LABEL_265;
              }
              if (v51 == 1) {
                goto LABEL_195;
              }
              if ((int)v51 < 5)
              {
                memset(v151, 0, sizeof(v151));
                if (v16) {
                  goto LABEL_265;
                }
                uint64_t v146 = v151;
                if ((int)v51 < 1)
                {
                  while (1)
                  {
LABEL_211:
                    uint64_t v106 = v146;
                    uint64_t v107 = *((void *)v146 + 2);
                    int v108 = v142[4];
                    do
                    {
                      if (v108 < 1)
                      {
                        uint64_t v115 = v2;
LABEL_232:
                        int v117 = 0;
                        unint64_t v118 = (uint64_t *)v146 + 3;
                        goto LABEL_233;
                      }
                      uint64_t v109 = 0;
                      int v110 = 1;
                      do
                      {
                        uint64_t v111 = &v106[3 * v109];
                        uint64_t v112 = v107 - *v142 - *(int *)(*(void *)&v142[2 * v109 + 6] + 24);
                        uint64_t v113 = *((void *)v111 + 2);
                        if (v113 > v107 || v113 < v112)
                        {
                          while (v113 < v112)
                          {
                            *((void *)v111 + 2) = *((void *)v111 + 3);
                            if (sub_1B0DADA34(*(void *)v111, *((_DWORD *)v111 + 2), (int *)v111 + 3, (uint64_t *)v111 + 3))*((void *)v111 + 3) = 0x4000000000000000; {
                            uint64_t v113 = *((void *)v111 + 2);
                            }
                            if (v113 == 0x4000000000000000) {
                              goto LABEL_257;
                            }
                          }
                          int v110 = 0;
                          if (v113 > v107) {
                            uint64_t v107 = v113;
                          }
                          int v108 = v142[4];
                          uint64_t v106 = v146;
                        }
                        ++v109;
                      }
                      while (v109 < v108);
                    }
                    while (!v110);
                    uint64_t v115 = v2;
                    if (v108 < 1) {
                      goto LABEL_232;
                    }
                    uint64_t v116 = 0;
                    while (2)
                    {
                      uint64_t v122 = (uint64_t *)&v146[3 * v116];
                      uint64_t v123 = v122[2];
                      double v124 = v122 + 4;
                      uint64_t v125 = v122[5];
                      int v126 = *(_DWORD *)(v125 + 8);
                      if (!v126 || v123 != *v124)
                      {
                        unint64_t v127 = (v126 + 15);
                        LODWORD(v128) = *(_DWORD *)(v125 + 12);
                        if (v127 <= v128) {
                          goto LABEL_238;
                        }
                        if (!v128) {
                          LODWORD(v128) = 64;
                        }
                        unint64_t v128 = (int)v128;
                        do
                        {
                          unint64_t v129 = v128;
                          v128 *= 2;
                        }
                        while (v129 < v127);
                        uint64_t v130 = *(void *)v125;
                        if (!sqlite3_initialize())
                        {
                          uint64_t v131 = sub_1B0C8E1B8(v130, v129);
                          if (v131)
                          {
                            *(_DWORD *)(v125 + 12) = v129;
                            *(void *)uint64_t v125 = v131;
LABEL_238:
                            sub_1B0DADC38(v125, v124, v123);
                          }
                        }
                      }
                      ++v116;
                      uint64_t v121 = v142[4];
                      if (v116 < v121) {
                        continue;
                      }
                      break;
                    }
                    uint64_t v119 = *((void *)v146 + 3);
                    if ((int)v121 < 1)
                    {
                      int v117 = 0;
                    }
                    else
                    {
                      uint64_t v132 = 0;
                      int v117 = 0;
                      uint64_t v133 = (uint64_t *)v146 + 3;
                      do
                      {
                        uint64_t v135 = *v133;
                        v133 += 6;
                        uint64_t v134 = v135;
                        if (v135 < v119)
                        {
                          int v117 = v132;
                          uint64_t v119 = v134;
                        }
                        ++v132;
                      }
                      while (v142[4] != v132);
                      unint64_t v118 = (uint64_t *)&v146[3 * v117 + 1] + 1;
LABEL_233:
                      uint64_t v119 = *v118;
                    }
                    uint64_t v120 = &v146[3 * v117];
                    *((void *)v120 + 2) = v119;
                    if (sub_1B0DADA34(*(void *)v120, *((_DWORD *)v120 + 2), (int *)v120 + 3, (uint64_t *)v120 + 3))*((void *)v120 + 3) = 0x4000000000000000; {
                    uint64_t v2 = v115;
                    }
                    if (*((void *)v120 + 2) == 0x4000000000000000)
                    {
LABEL_257:
                      unsigned int v136 = v146;
                      int v137 = *(_DWORD *)(*((void *)v146 + 5) + 8);
                      if (v146 != v151)
                      {
                        uint64_t v138 = &off_1EB21C9E8;
                        if (!dword_1EB21C9C0) {
                          goto LABEL_263;
                        }
                        if ((void)xmmword_1EB2201B0) {
                          xmmword_1EB21CA40(xmmword_1EB2201B0);
                        }
                        qword_1EB220108[0] -= (int)off_1EB21C9F8(v146);
                        --qword_1EB220150;
                        off_1EB21C9E8(v146);
                        unsigned int v136 = (_OWORD *)xmmword_1EB2201B0;
                        if ((void)xmmword_1EB2201B0)
                        {
                          uint64_t v138 = &xmmword_1EB21CA50;
LABEL_263:
                          (*v138)(v136);
                        }
                      }
                      uint64_t v16 = 0;
                      if (v137 <= 0)
                      {
LABEL_265:
                        int v46 = 0;
                        goto LABEL_266;
                      }
LABEL_195:
                      int v46 = 1;
                      goto LABEL_266;
                    }
                  }
                }
              }
              else
              {
                if (v16) {
                  goto LABEL_265;
                }
                unsigned int v98 = v51;
                if (sqlite3_initialize() || (unint64_t v105 = (_OWORD *)sub_1B0C7FC94(48 * v98)) == 0)
                {
                  uint64_t v16 = 7;
                  goto LABEL_265;
                }
                uint64_t v146 = v105;
                bzero(v105, 48 * v98);
                if (v45[4] < 1) {
                  goto LABEL_211;
                }
              }
              uint64_t v99 = 0;
              double v100 = (uint64_t *)v146 + 3;
              do
              {
                uint64_t v101 = *(void *)&v142[2 * v99 + 6];
                uint64_t v102 = *(void *)(v101 + 8);
                int v103 = *(_DWORD *)(v101 + 16);
                *(_OWORD *)(v100 - 3) = 0u;
                *(_OWORD *)(v100 - 1) = 0u;
                *(v100 - 3) = v102;
                *((_DWORD *)v100 - 4) = v103;
                *(v100 - 1) = *v100;
                if (sub_1B0DADA34(v102, v103, (int *)v100 - 3, v100))
                {
                  uint64_t v104 = 0x4000000000000000;
                  *double v100 = 0x4000000000000000;
                }
                else
                {
                  uint64_t v104 = *v100;
                }
                *(v100 - 1) = v104;
                if (sub_1B0DADA34(*(v100 - 3), *((_DWORD *)v100 - 4), (int *)v100 - 3, v100)) {
                  *double v100 = 0x4000000000000000;
                }
                *(_DWORD *)(v101 + 16) = 0;
                v100[2] = v101 + 8;
                ++v99;
                v100 += 6;
              }
              while (v99 < v142[4]);
              goto LABEL_211;
            }
            uint64_t v55 = (char *)v151;
LABEL_103:
            bzero(v55, 32 * (int)v53);
            LODWORD(v56) = *(_DWORD *)(v52 + 24);
            if ((int)v56 < 1)
            {
LABEL_112:
              uint64_t v139 = (uint64_t *)(v52 + 8);
              do
              {
LABEL_113:
                uint64_t v67 = *((void *)v55 + 3);
                do
                {
                  if ((int)v56 < 1) {
                    break;
                  }
                  uint64_t v68 = 0;
                  int v69 = 1;
                  do
                  {
                    int v70 = &v55[32 * v68];
                    uint64_t v71 = v67 + v68;
                    uint64_t v72 = (uint64_t *)(v70 + 24);
                    if (*((void *)v70 + 3) != v67 + v68)
                    {
                      int v73 = v70 + 17;
                      while (1)
                      {
                        uint64_t v74 = *v72;
                        if (*v72 >= v71) {
                          break;
                        }
                        if (sub_1B0DADA34(*(void *)v70, *((_DWORD *)v70 + 2), (int *)v70 + 3, v72))
                        {
                          uint64_t v16 = 0;
                          unsigned char *v73 = 1;
                          goto LABEL_145;
                        }
                        if (*v73)
                        {
                          uint64_t v16 = 0;
LABEL_145:
                          uint64_t v2 = a2;
                          goto LABEL_148;
                        }
                      }
                      int v69 = 0;
                      if (v74 > v71) {
                        uint64_t v67 = v74 - v68;
                      }
                      LODWORD(v56) = *(_DWORD *)(v52 + 24);
                    }
                    ++v68;
                  }
                  while (v68 < (int)v56);
                  uint64_t v2 = a2;
                }
                while (!v69);
                if (!v140 || (v67 & 0x7FFFFFFF) == 0)
                {
                  LODWORD(v75) = *(_DWORD *)(v52 + 20);
                  unint64_t v76 = (*(_DWORD *)(v52 + 16) + 15);
                  if (v76 > v75)
                  {
                    if (!v75) {
                      LODWORD(v75) = 64;
                    }
                    unint64_t v75 = (int)v75;
                    do
                    {
                      unint64_t v77 = v75;
                      v75 *= 2;
                    }
                    while (v77 < v76);
                    uint64_t v78 = *v139;
                    if (sqlite3_initialize() || (uint64_t v79 = sub_1B0C8E1B8(v78, v77)) == 0)
                    {
                      uint64_t v16 = 7;
                      goto LABEL_148;
                    }
                    *(_DWORD *)(v52 + 20) = v77;
                    *(void *)(v52 + 8) = v79;
                  }
                  sub_1B0DADC38((uint64_t)v139, &v150, v67);
                  LODWORD(v56) = *(_DWORD *)(v52 + 24);
                }
              }
              while ((int)v56 < 1);
              uint64_t v80 = 0;
              uint64_t v81 = v55 + 12;
              while (1)
              {
                if (sub_1B0DADA34(*(void *)(v81 - 12), *((_DWORD *)v81 - 1), (int *)v81, (uint64_t *)(v81 + 12)))
                {
                  uint64_t v16 = 0;
                  v81[5] = 1;
                  goto LABEL_148;
                }
                if (v81[5]) {
                  break;
                }
                ++v80;
                uint64_t v56 = *(int *)(v52 + 24);
                v81 += 32;
                if (v80 >= v56) {
                  goto LABEL_113;
                }
              }
              uint64_t v16 = 0;
              goto LABEL_148;
            }
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            while (2)
            {
              int v149 = 0;
              uint64_t v148 = 0;
              uint64_t v59 = v52 + v57;
              if (!*(void *)(v52 + v57 + 56))
              {
                BOOL v62 = 0;
                uint64_t v64 = *(void *)(v59 + 48);
                uint64_t v61 = *(void *)(v64 + 8);
                uint64_t v148 = v61;
                int v63 = *(_DWORD *)(v64 + 16);
                int v149 = v63;
LABEL_109:
                uint64_t v65 = (uint64_t *)&v55[v57];
                *(_OWORD *)uint64_t v65 = 0u;
                *((_OWORD *)v65 + 1) = 0u;
                uint64_t *v65 = v61;
                *((_DWORD *)v65 + 2) = v63;
                if (sub_1B0DADA34(v61, v63, (int *)&v55[v57 + 12], (uint64_t *)&v55[v57 + 24]))
                {
                  uint64_t v16 = 0;
                  *((unsigned char *)v65 + 17) = 1;
                  *((unsigned char *)v65 + 16) = v62;
                  goto LABEL_148;
                }
                int v66 = *((unsigned __int8 *)v65 + 17);
                *((unsigned char *)v65 + 16) = v62;
                if (v66)
                {
                  uint64_t v16 = 0;
                  goto LABEL_148;
                }
                ++v58;
                uint64_t v56 = *(int *)(v52 + 24);
                v57 += 32;
                if (v58 >= v56) {
                  goto LABEL_112;
                }
                continue;
              }
              break;
            }
            v147[0] = 0;
            v147[1] = 0;
            uint64_t v60 = sub_1B0DAD644(v59 + 32, *(void *)(v2 + 24), (uint64_t)v147, &v148, &v149);
            uint64_t v61 = v148;
            if (!v60)
            {
              BOOL v62 = v148 == v147[0];
              int v63 = v149;
              goto LABEL_109;
            }
            uint64_t v16 = v60;
            if (!v148) {
              goto LABEL_148;
            }
            uint64_t v88 = (void (**)(uint64_t))&off_1EB21C9E8;
            if (!dword_1EB21C9C0) {
              goto LABEL_175;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v61);
            --qword_1EB220150;
            off_1EB21C9E8(v61);
            uint64_t v61 = xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              uint64_t v88 = (void (**)(uint64_t))&xmmword_1EB21CA50;
LABEL_175:
              (*v88)(v61);
            }
LABEL_148:
            int v82 = *(_DWORD *)(v52 + 16);
            if (*(int *)(v52 + 24) >= 1)
            {
              uint64_t v83 = 0;
              uint64_t v84 = v55 + 16;
              do
              {
                if (*v84)
                {
                  uint64_t v85 = *((void *)v84 - 2);
                  if (v85)
                  {
                    uint64_t v86 = &off_1EB21C9E8;
                    if (dword_1EB21C9C0)
                    {
                      if ((void)xmmword_1EB2201B0) {
                        xmmword_1EB21CA40(xmmword_1EB2201B0);
                      }
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(v85);
                      --qword_1EB220150;
                      off_1EB21C9E8(v85);
                      uint64_t v85 = xmmword_1EB2201B0;
                      if (!(void)xmmword_1EB2201B0) {
                        goto LABEL_151;
                      }
                      uint64_t v86 = &xmmword_1EB21CA50;
                    }
                    (*v86)(v85);
                  }
                }
LABEL_151:
                ++v83;
                v84 += 32;
              }
              while (v83 < *(int *)(v52 + 24));
            }
            uint64_t v45 = v142;
            if (v55 != (char *)v151)
            {
              unsigned int v87 = (uint64_t (**)(char *))&off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_165;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v55);
              --qword_1EB220150;
              off_1EB21C9E8(v55);
              uint64_t v55 = (char *)xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                unsigned int v87 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
LABEL_165:
                (*v87)(v55);
              }
            }
            uint64_t v51 = v145;
            if (v82 < 1) {
              goto LABEL_193;
            }
          }
          ++v51;
          if (v16) {
            goto LABEL_193;
          }
          continue;
        }
      }
      goto LABEL_11;
    }
  }
  uint64_t v15 = 0;
  while (1)
  {
    uint64_t v17 = v14 + 32 * v15;
    if (!*(void *)(v17 + 56))
    {
      uint64_t v36 = *(void *)(v17 + 48);
      uint64_t v37 = *(void *)v36;
      if (*(void *)v36 == v7 || *(unsigned char *)(v36 + 20)) {
        goto LABEL_18;
      }
      BOOL v38 = v5 != 0;
      if (v7 >= v37) {
        BOOL v38 = 0;
      }
      if ((v7 <= v37 || v5 != 0) && !v38)
      {
        int v13 = 0;
        uint64_t v7 = *(void *)v36;
        goto LABEL_18;
      }
      uint64_t v41 = *(void *)(v36 + 24);
      do
      {
        sub_1B0DAB298(v41, v36, 1, v7);
        if (*(_DWORD *)(v41 + 60)) {
          break;
        }
        if (*(unsigned char *)(v36 + 20)) {
          break;
        }
        uint64_t v42 = *(void *)(v36 + 136 * *(unsigned __int16 *)(*(void *)(v36 + 88) + 4) + 216);
        int v43 = *(_DWORD *)(v36 + 68);
        if (!v43 && v42 >= v7) {
          break;
        }
      }
      while (!v43 || v42 > v7);
      uint64_t v44 = *(void *)(v36 + 24);
      uint64_t v16 = *(unsigned int *)(v44 + 60);
      *(_DWORD *)(v44 + 60) = 0;
      if (!v16)
      {
        int v13 = *(unsigned __int8 *)(v36 + 20);
        if (!*(unsigned char *)(v36 + 20))
        {
          uint64_t v7 = *(void *)v36;
          goto LABEL_18;
        }
      }
      *(_DWORD *)(a2 + 4) = 1;
      return v16;
    }
    int v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = v17 + 32;
    uint64_t v21 = v17 + 32;
    do
    {
      unint64_t v22 = *(uint64_t **)(v21 + 16);
      if (!*((unsigned char *)v22 + 20))
      {
        uint64_t v23 = *v22;
        if (v18 && v5 == v23 < v19)
        {
          int v18 = 1;
        }
        else
        {
          int v18 = 1;
          uint64_t v19 = v23;
        }
      }
      uint64_t v21 = *(void *)(v21 + 24);
    }
    while (v21);
    if (v19 != v7) {
      break;
    }
LABEL_18:
    if (++v15 >= *(int *)(v14 + 24))
    {
      uint64_t v3 = v144;
      int v11 = *(_DWORD *)(v144 + 16);
      goto LABEL_14;
    }
  }
  uint64_t v24 = v20;
  while (1)
  {
    uint64_t v25 = *(void *)(v24 + 16);
    if (!*(unsigned char *)(v25 + 20))
    {
      BOOL v26 = v5 != 0;
      if (v7 >= *(void *)v25) {
        BOOL v26 = 0;
      }
      BOOL v27 = v7 > *(void *)v25 && v5 == 0;
      if (v27 || v26) {
        break;
      }
    }
    uint64_t v16 = 0;
LABEL_30:
    uint64_t v24 = *(void *)(v24 + 24);
    if (!v24) {
      goto LABEL_49;
    }
  }
  uint64_t v29 = *(void *)(v25 + 24);
  do
  {
    sub_1B0DAB298(v29, v25, 1, v7);
    if (*(_DWORD *)(v29 + 60)) {
      break;
    }
    if (*(unsigned char *)(v25 + 20)) {
      break;
    }
    uint64_t v30 = *(void *)(v25 + 136 * *(unsigned __int16 *)(*(void *)(v25 + 88) + 4) + 216);
    int v31 = *(_DWORD *)(v25 + 68);
    if (!v31 && v30 >= v7) {
      break;
    }
  }
  while (!v31 || v30 > v7);
  uint64_t v32 = *(void *)(v25 + 24);
  uint64_t v16 = *(unsigned int *)(v32 + 60);
  *(_DWORD *)(v32 + 60) = 0;
  if (!v16) {
    goto LABEL_30;
  }
LABEL_49:
  if (!v16)
  {
    int v33 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v34 = *(void *)(v20 + 16);
      if (!*(unsigned char *)(v34 + 20))
      {
        uint64_t v35 = *(void *)v34;
        if (v33 && v5 == v35 < v7)
        {
          int v33 = 1;
        }
        else
        {
          int v33 = 1;
          uint64_t v7 = v35;
        }
      }
      uint64_t v20 = *(void *)(v20 + 24);
    }
    while (v20);
    uint64_t v16 = 0;
    int v13 = 0;
    if (v33) {
      goto LABEL_18;
    }
  }
  *(void *)(a2 + 4) = 1;
  return v16;
}

uint64_t sub_1B0DAD644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _DWORD *a5)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    int v8 = 0;
    uint64_t v10 = (uint64_t *)v36;
    goto LABEL_26;
  }
  uint64_t v7 = a1;
  int v8 = 0;
  int v9 = 4;
  uint64_t v10 = (uint64_t *)v36;
  do
  {
    uint64_t v11 = *(void *)(v7 + 16);
    if (*(unsigned char *)(v11 + 20) || *(void *)v11 != a2 || !*(_DWORD *)(v11 + 16)) {
      goto LABEL_4;
    }
    if (v8 == v9)
    {
      if (sqlite3_initialize() || (uint64_t v12 = (uint64_t *)sub_1B0C7FC94((uint64_t)v9 << 6)) == 0)
      {
        uint64_t v18 = 7;
        goto LABEL_54;
      }
      int v13 = v12;
      memcpy(v12, v10, 32 * v9);
      v9 *= 2;
      if (v10 == (uint64_t *)v36 || !v10) {
        goto LABEL_20;
      }
      uint64_t v14 = (uint64_t (**)(uint64_t *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          ((void (*)(void))xmmword_1EB21CA40)();
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
        --qword_1EB220150;
        off_1EB21C9E8(v10);
        uint64_t v10 = (uint64_t *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_20;
        }
        uint64_t v14 = (uint64_t (**)(uint64_t *))&xmmword_1EB21CA50;
      }
      (*v14)(v10);
    }
    else
    {
      int v13 = v10;
    }
LABEL_20:
    uint64_t v15 = *(void *)(v11 + 8);
    int v16 = *(_DWORD *)(v11 + 16);
    uint64_t v17 = &v13[4 * v8];
    *(_OWORD *)uint64_t v17 = 0u;
    *((_OWORD *)v17 + 1) = 0u;
    *uint64_t v17 = v15;
    *((_DWORD *)v17 + 2) = v16;
    if (sub_1B0DADA34(v15, v16, (int *)v17 + 3, v17 + 3)) {
      *((unsigned char *)v17 + 17) = 1;
    }
    ++v8;
    uint64_t v10 = v13;
LABEL_4:
    uint64_t v7 = *(void *)(v7 + 24);
  }
  while (v7);
  if (v8 == 1)
  {
    uint64_t v18 = 0;
    *a4 = *v10;
    int v19 = *((_DWORD *)v10 + 2);
    goto LABEL_53;
  }
LABEL_26:
  uint64_t v35 = 0;
  *(_DWORD *)(a3 + 8) = 0;
  if (v8 < 1)
  {
    uint64_t v18 = 0;
    goto LABEL_51;
  }
  uint64_t v18 = 0;
  uint64_t v20 = -1;
  uint64_t v21 = v8;
  while (2)
  {
    uint64_t v23 = v20;
    uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v24 = v21;
    uint64_t v25 = v10 + 3;
    while (2)
    {
      if (!*((unsigned char *)v25 - 7))
      {
        uint64_t v26 = *v25;
        if (*v25 == v23)
        {
          if (sub_1B0DADA34(*(v25 - 3), *((_DWORD *)v25 - 4), (int *)v25 - 3, v25))
          {
            *((unsigned char *)v25 - 7) = 1;
            goto LABEL_34;
          }
          if (!*((unsigned char *)v25 - 7))
          {
            uint64_t v26 = *v25;
            goto LABEL_32;
          }
        }
        else
        {
LABEL_32:
          if (v26 < v20) {
            uint64_t v20 = v26;
          }
        }
      }
LABEL_34:
      v25 += 4;
      if (--v24) {
        continue;
      }
      break;
    }
    if (!v18 && v20 != 0x7FFFFFFFFFFFFFFFLL)
    {
      LODWORD(v27) = *(_DWORD *)(a3 + 12);
      unint64_t v28 = (*(_DWORD *)(a3 + 8) + 15);
      if (v28 > v27)
      {
        if (!v27) {
          LODWORD(v27) = 64;
        }
        unint64_t v27 = (int)v27;
        do
        {
          unint64_t v29 = v27;
          v27 *= 2;
        }
        while (v29 < v28);
        uint64_t v30 = *(void *)a3;
        if (sqlite3_initialize() || (uint64_t v22 = sub_1B0C8E1B8(v30, v29)) == 0)
        {
          uint64_t v18 = 7;
          continue;
        }
        *(_DWORD *)(a3 + 12) = v29;
        *(void *)a3 = v22;
      }
      sub_1B0DADC38(a3, &v35, v20);
      uint64_t v18 = 0;
      continue;
    }
    break;
  }
LABEL_51:
  if (!v18)
  {
    *a4 = *(void *)a3;
    int v19 = *(_DWORD *)(a3 + 8);
LABEL_53:
    *a5 = v19;
  }
LABEL_54:
  if (v10 != (uint64_t *)v36 && v10)
  {
    int v31 = (uint64_t (**)(uint64_t *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_61;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    uint64_t v10 = (uint64_t *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v31 = (uint64_t (**)(uint64_t *))&xmmword_1EB21CA50;
LABEL_61:
      (*v31)(v10);
    }
  }
  return v18;
}

uint64_t sub_1B0DADA34(uint64_t a1, int a2, int *a3, uint64_t *a4)
{
  uint64_t v5 = *a3;
  if ((int)v5 >= a2)
  {
LABEL_28:
    *a4 = -1;
    return 1;
  }
  uint64_t v8 = *a4;
  int v9 = (char *)(a1 + v5);
  unsigned int v10 = *v9;
  if (*v9 < 0)
  {
    int v12 = v9[1];
    if (v9[1] < 0)
    {
      int v13 = v9[2];
      if (v13 < 0)
      {
        unint64_t v28 = 0;
        int v11 = sub_1B0DA69F4(v9, &v28);
        unsigned int v10 = v28 & 0x7FFFFFFF;
      }
      else
      {
        unsigned int v10 = v13 & 0x7F | (v10 << 14) & 0x1FC07F | ((v12 & 0x7F) << 7);
        int v11 = 3;
      }
    }
    else
    {
      unsigned int v10 = ((v10 & 0x7F) << 7) | v12;
      int v11 = 2;
    }
  }
  else
  {
    int v11 = 1;
  }
  int v14 = v11 + v5;
  if (v10 > 1)
  {
    uint64_t v18 = v8 & 0x7FFFFFFF00000000 | (v10 + v8 + 2147483646) & 0x7FFFFFFF;
LABEL_30:
    uint64_t result = 0;
    *a4 = v18;
    goto LABEL_31;
  }
  if (v10)
  {
    uint64_t v15 = (char *)(a1 + v14);
    unint64_t v16 = *v15;
    if (*v15 < 0)
    {
      unsigned int v20 = v15[1];
      if (v15[1] < 0)
      {
        int v21 = v15[2];
        if (v21 < 0)
        {
          unint64_t v28 = 0;
          int v17 = sub_1B0DA69F4(v15, &v28);
          unint64_t v16 = v28 & 0x7FFFFFFF;
        }
        else
        {
          unint64_t v16 = v21 & 0x7F | (v16 << 14) & 0x1FC07F | ((v20 & 0x7F) << 7);
          int v17 = 3;
        }
      }
      else
      {
        unint64_t v16 = ((v16 & 0x7F) << 7) | v20;
        int v17 = 2;
      }
    }
    else
    {
      int v17 = 1;
    }
    int v22 = v17 + v14;
    uint64_t v23 = (char *)(a1 + v22);
    unsigned int v24 = *v23;
    if (*v23 < 0)
    {
      int v26 = v23[1];
      if (v23[1] < 0)
      {
        int v27 = v23[2];
        if (v27 < 0)
        {
          unint64_t v28 = 0;
          int v25 = sub_1B0DA69F4(v23, &v28);
          unsigned int v24 = v28 & 0x7FFFFFFF;
        }
        else
        {
          unsigned int v24 = v27 & 0x7F | (v24 << 14) & 0x1FC07F | ((v26 & 0x7F) << 7);
          int v25 = 3;
        }
      }
      else
      {
        unsigned int v24 = ((v24 & 0x7F) << 7) | v26;
        int v25 = 2;
      }
    }
    else
    {
      int v25 = 1;
    }
    if (v24 <= 1) {
      goto LABEL_28;
    }
    int v14 = v25 + v22;
    uint64_t v18 = (v16 << 32) | (v24 + 2147483646) & 0x7FFFFFFF;
    goto LABEL_30;
  }
  uint64_t result = 0;
LABEL_31:
  *a3 = v14;
  return result;
}

uint64_t sub_1B0DADC38(uint64_t result, uint64_t *a2, uint64_t a3)
{
  if (*a2 <= a3)
  {
    uint64_t v5 = result;
    uint64_t v6 = a3 & 0x7FFFFFFF00000000;
    if ((a3 & 0x7FFFFFFF00000000) == (*a2 & 0x7FFFFFFF00000000))
    {
      int v7 = *(_DWORD *)(result + 8);
      uint64_t v6 = *a2;
    }
    else
    {
      uint64_t v8 = *(void *)result;
      uint64_t v9 = *(int *)(result + 8);
      *(_DWORD *)(result + 8) = v9 + 1;
      *(unsigned char *)(v8 + v9) = 1;
      unsigned int v10 = (int8x8_t *)(*(void *)result + *(int *)(result + 8));
      if ((unint64_t)a3 >> 39)
      {
        if ((unint64_t)a3 >> 46)
        {
          int v11 = sub_1B0D1DC5C(v10, a3 >> 32);
        }
        else
        {
          v10->i8[0] = (HIDWORD(a3) >> 7) | 0x80;
          v10->i8[1] = BYTE4(a3) & 0x7F;
          int v11 = 2;
        }
      }
      else
      {
        v10->i8[0] = BYTE4(a3);
        int v11 = 1;
      }
      int v7 = *(_DWORD *)(v5 + 8) + v11;
      *(_DWORD *)(v5 + 8) = v7;
    }
    int v12 = (int8x8_t *)(*(void *)v5 + v7);
    unint64_t v13 = a3 - v6 + 2;
    if (v13 > 0x7F)
    {
      if (v13 >> 14)
      {
        uint64_t result = sub_1B0D1DC5C(v12, v13);
      }
      else
      {
        v12->i8[0] = (v13 >> 7) | 0x80;
        v12->i8[1] = v13 & 0x7F;
        uint64_t result = 2;
      }
    }
    else
    {
      v12->i8[0] = v13;
      uint64_t result = 1;
    }
    *(_DWORD *)(v5 + 8) += result;
    *a2 = a3;
  }
  return result;
}

uint64_t sub_1B0DADD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  LODWORD(v5) = *(_DWORD *)(a2 + 40);
  while (2)
  {
    *(_DWORD *)(a2 + 8) = 0;
    if ((int)v5 < 1) {
      goto LABEL_21;
    }
    int v6 = 1;
    uint64_t v7 = 6;
    uint64_t v8 = v4;
    do
    {
      uint64_t v10 = *(void *)(a2 + 8 * v7);
      uint64_t v11 = *(void *)(v10 + 24);
      if (*(_DWORD *)(a1 + 24))
      {
        if (v8 >= v11) {
          goto LABEL_10;
        }
      }
      else if (v8 <= v11)
      {
        goto LABEL_10;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 16))(a1, *(void *)(a2 + 8 * v7), 1, v8);
      if (result)
      {
        *(_DWORD *)(a2 + 8) = 0;
        return result;
      }
LABEL_10:
      if (*(_DWORD *)(v10 + 4))
      {
        sub_1B0DADE80(a2);
        uint64_t v4 = v8;
        goto LABEL_18;
      }
      uint64_t v4 = *(void *)(v10 + 24);
      if (v8 != v4) {
        int v6 = 0;
      }
      if (*(_DWORD *)(v10 + 8)) {
        *(_DWORD *)(a2 + 8) = 1;
      }
      uint64_t v5 = *(int *)(a2 + 40);
      uint64_t v9 = v7 - 5;
      ++v7;
      uint64_t v8 = v4;
    }
    while (v9 < v5);
    if (!v6) {
      continue;
    }
    break;
  }
LABEL_18:
  if (*(_DWORD *)(a2 + 8))
  {
    if (*(void *)(a1 + 16) != a2) {
      sub_1B0DADEE0(a2);
    }
  }
LABEL_21:
  uint64_t result = 0;
  *(void *)(a2 + 24) = v4;
  return result;
}

uint64_t sub_1B0DADE80(uint64_t result)
{
  *(void *)(result + 4) = 1;
  if (*(int *)(result + 40) >= 1)
  {
    uint64_t v1 = result;
    uint64_t v2 = 0;
    uint64_t v3 = result + 48;
    do
      uint64_t result = sub_1B0DADE80(*(void *)(v3 + 8 * v2++));
    while (v2 < *(int *)(v1 + 40));
  }
  return result;
}

uint64_t sub_1B0DADEE0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_DWORD *)result == 4 || *(_DWORD *)result == 9)
  {
    uint64_t v3 = *(void *)(result + 32);
    uint64_t v4 = *(unsigned int *)(v3 + 16);
    if ((int)v4 < 1) {
      return result;
    }
    if (v4 == 1)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = v4 & 0xFFFFFFFE;
      uint64_t v7 = (uint64_t *)(v3 + 32);
      uint64_t v8 = v5;
      do
      {
        uint64_t v9 = *v7;
        *(_DWORD *)(*(v7 - 1) + 16) = 0;
        *(_DWORD *)(v9 + 16) = 0;
        v7 += 2;
        v8 -= 2;
      }
      while (v8);
      if (v5 == v4) {
        return result;
      }
    }
    uint64_t v10 = (uint64_t *)(v3 + 8 * v5 + 24);
    uint64_t v11 = v4 - v5;
    do
    {
      uint64_t v12 = *v10++;
      *(_DWORD *)(v12 + 16) = 0;
      --v11;
    }
    while (v11);
    return result;
  }
  if (*(int *)(result + 40) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = sub_1B0DADEE0(*(void *)(v1 + 48 + 8 * v6++));
    while (v6 < *(int *)(v1 + 40));
  }
  return result;
}

uint64_t sub_1B0DADFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  while (1)
  {
    int v6 = *(_DWORD *)(v5 + 4);
    if (v6) {
      goto LABEL_17;
    }
    if (*(_DWORD *)(v4 + 4)) {
      goto LABEL_16;
    }
    uint64_t v7 = *(void *)(v5 + 24);
    uint64_t v8 = *(void *)(v4 + 24);
    if (!*(_DWORD *)(a1 + 24)) {
      break;
    }
    if (v7 > v8) {
      goto LABEL_16;
    }
    if (v7 < v8) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v9 = 0;
    if (*(_DWORD *)(v4 + 8)) {
      goto LABEL_18;
    }
LABEL_14:
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v5 + 16))(a1, v5, 0, 0);
    if (v10)
    {
      uint64_t v9 = v10;
      int v6 = *(_DWORD *)(v5 + 4);
      goto LABEL_19;
    }
  }
  if (v7 < v8)
  {
LABEL_16:
    int v6 = 0;
LABEL_17:
    uint64_t v9 = 0;
    goto LABEL_19;
  }
  if (v7 <= v8) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v4, 1);
  int v6 = *(_DWORD *)(v5 + 4);
  if (*(_DWORD *)(v4 + 4) | v6) {
    goto LABEL_19;
  }
  if (*(void *)(v5 + 24) == *(void *)(v4 + 24) && !*(_DWORD *)(v4 + 8)) {
    goto LABEL_14;
  }
LABEL_18:
  int v6 = 0;
LABEL_19:
  *(_DWORD *)(a2 + 4) = v6;
  int v11 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(v5 + 8);
  *(void *)(a2 + 24) = *(void *)(v5 + 24);
  if (v11) {
    sub_1B0DADEE0(v4);
  }
  return v9;
}

uint64_t sub_1B0DAE0CC(uint64_t a1, char a2, char *__s, int a4)
{
  uint64_t result = *(unsigned int *)(a1 + 8);
  if (!result)
  {
    uint64_t v7 = *(void *)a1;
    if (a4 >= 0x8000) {
      int v8 = 0x8000;
    }
    else {
      int v8 = a4;
    }
    if (v7)
    {
      int v9 = *(_DWORD *)(v7 + 24);
      if ((a2 & 1) != 0 && v9 >= 1)
      {
        if (!sqlite3_initialize())
        {
          size_t v10 = v8;
          uint64_t v11 = v8 + 49;
          uint64_t v12 = (void *)sub_1B0C7FC94(v11);
          if (v12)
          {
            unint64_t v13 = v12;
            bzero(v12, v11);
            v13[1] = v13 + 6;
            memcpy(v13 + 6, __s, v10);
            uint64_t result = 0;
            uint64_t v14 = v7 + 32 * *(int *)(v7 + 24);
            v13[3] = *(void *)(v14 + 24);
            *(void *)(v14 + 24) = v13;
LABEL_28:
            *(_DWORD *)(a1 + 8) = result;
            return result;
          }
        }
LABEL_15:
        uint64_t result = 7;
        goto LABEL_28;
      }
      if ((v9 & 7) != 0)
      {
        uint64_t v15 = *(void *)a1;
        goto LABEL_20;
      }
    }
    else
    {
      int v9 = 0;
    }
    if (sqlite3_initialize()) {
      goto LABEL_15;
    }
    uint64_t v16 = sub_1B0C8E1B8(v7, 32 * (v9 + 8) + 64);
    if (!v16) {
      goto LABEL_15;
    }
    uint64_t v15 = v16;
    if (!v7)
    {
      *(_OWORD *)(v16 + 32) = 0u;
      *(_OWORD *)(v16 + 48) = 0u;
      *(_OWORD *)uint64_t v16 = 0u;
      *(_OWORD *)(v16 + 16) = 0u;
    }
    *(void *)a1 = v16;
    *(_DWORD *)(v16 + 24) = v9;
LABEL_20:
    *(_DWORD *)(v15 + 24) = v9 + 1;
    uint64_t v17 = v15 + 32 * v9;
    *(_OWORD *)(v17 + 32) = 0u;
    *(_OWORD *)(v17 + 48) = 0u;
    if (v8 < 0) {
      int v8 = strlen(__s);
    }
    int v18 = sqlite3_initialize();
    int v19 = 0;
    uint64_t result = 7;
    if ((v8 & 0x80000000) == 0 && !v18)
    {
      unsigned int v20 = (unsigned char *)sub_1B0C7FC94((v8 + 1));
      int v19 = v20;
      if (v20)
      {
        memcpy(v20, __s, v8);
        uint64_t result = 0;
        v19[v8] = 0;
      }
      else
      {
        uint64_t result = 7;
      }
    }
    *(void *)(v15 + 32 * v9 + 40) = v19;
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1B0DAE260(uint64_t result, uint64_t a2, int *a3, void *a4)
{
  if (*(_DWORD *)(result + 16)) {
    return result;
  }
  uint64_t v7 = result;
  if (*(_DWORD *)a2 != 4 && *(_DWORD *)a2 != 9)
  {
    if (*(int *)(a2 + 40) >= 1)
    {
      uint64_t v18 = 0;
      do
        uint64_t result = sub_1B0DAE260(v7, *(void *)(a2 + 48 + 8 * v18++), a3, a4);
      while (v18 < *(int *)(a2 + 40));
    }
    return result;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  size_t v10 = *(int **)(v9 + 8);
  if (v10)
  {
    int v11 = *v10;
    if (*v10 < 1)
    {
      *size_t v10 = 0;
LABEL_27:
      *(_DWORD *)a2 = 0;
      *(void *)(a2 + 16) = 0;
      return result;
    }
    int v12 = 0;
    int v13 = 0;
    int v14 = 0;
    while (v13 < *a3)
    {
      int v15 = v10[v14 + 1];
      int v16 = a3[v13 + 1];
      if (v15 == v16)
      {
        uint64_t v17 = &v10[v12++];
        v17[1] = v15;
        ++v13;
        ++v14;
        int v11 = *v10;
        if (v14 >= *v10) {
          break;
        }
      }
      else
      {
        if (v15 > v16) {
          ++v13;
        }
        else {
          ++v14;
        }
        if (v14 >= v11) {
          break;
        }
      }
    }
    *size_t v10 = v12;
    if (!v12) {
      goto LABEL_27;
    }
  }
  else if (*a4)
  {
    *(void *)(v9 + 8) = a3;
    *a4 = 0;
  }
  else
  {
    if (a3)
    {
      int v19 = *a3;
      uint64_t result = sqlite3_initialize();
      if (result || (uint64_t v21 = 4 * (v19 - 1) + 8, (result = sub_1B0C7FC94(v21)) == 0))
      {
        unsigned int v20 = 0;
        if ((v19 & 0x80000000) == 0) {
          *(_DWORD *)(v7 + 16) = 7;
        }
      }
      else
      {
        unsigned int v20 = (void *)result;
        bzero((void *)result, v21);
        uint64_t result = (uint64_t)memcpy(v20, a3, v21);
      }
    }
    else
    {
      unsigned int v20 = 0;
    }
    *(void *)(v9 + 8) = v20;
  }
  return result;
}

uint64_t sub_1B0DAE404(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + 4) = 0;
  *(_DWORD *)(a2 + 8) = 0;
  int v4 = *(_DWORD *)a2;
  if (*(_DWORD *)a2 == 9 || v4 == 4)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    int v7 = *(_DWORD *)(v6 + 16);
    if (v7 < 1) {
      goto LABEL_28;
    }
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *(void *)(v6 + 8 * v8 + 24);
      int v10 = *(_DWORD *)(v9 + 24);
      if (!v10) {
        break;
      }
      if (v10 < 1) {
        goto LABEL_27;
      }
      uint64_t v45 = v8;
      uint64_t v46 = *(void *)(v6 + 8 * v8 + 24);
      uint64_t v11 = 0;
      do
      {
        int v12 = 0;
        uint64_t v47 = v11;
        int v13 = (unsigned char *)(v9 + 32 * v11 + 32);
        int v14 = v13;
        do
        {
          uint64_t v15 = *((void *)v14 + 2);
          if (v15)
          {
            uint64_t v16 = *(void *)(v15 + 24);
            sub_1B0DA8128(v15);
            uint64_t v17 = *(void **)(v16 + 64);
            if (v17)
            {
              *(void *)(v16 + 64) = 0;
              uint64_t v18 = (sqlite3_stmt *)v17[3];
              int v19 = (void *)v17[4];
              uint64_t v20 = v19[3];
              if (v20) {
                xmmword_1EB21CA40(v20);
              }
              sub_1B0D05C10(v19, v17);
              uint64_t v21 = v19[3];
              if (v21) {
                xmmword_1EB21CA50(v21);
              }
              sqlite3_finalize(v18);
            }
            *((void *)v14 + 2) = 0;
          }
          int v22 = strlen(*((const char **)v14 + 1));
          uint64_t v23 = sub_1B0DAE858(*(_DWORD **)a1, *((unsigned __int8 **)v14 + 1), v22, (*v13 != 0) | (2 * (*(_DWORD *)(a1 + 24) != 0)), *(void *)(v6 + 8), (uint64_t *)v14 + 2);
          if (v23) {
            return v23;
          }
          uint64_t v24 = *((void *)v14 + 2);
          int v14 = (unsigned char *)*((void *)v14 + 3);
          if (!*(unsigned char *)(v24 + 20)) {
            int v12 = 1;
          }
        }
        while (v14);
        if (!v12) {
          goto LABEL_52;
        }
        uint64_t v9 = v46;
        uint64_t v11 = v47 + 1;
      }
      while (v47 + 1 < *(int *)(v46 + 24));
      int v7 = *(_DWORD *)(v6 + 16);
      uint64_t v8 = v45;
LABEL_27:
      if (++v8 >= v7)
      {
LABEL_28:
        *(_DWORD *)(a2 + 4) = 0;
LABEL_53:
        switch(*(_DWORD *)a2)
        {
          case 1:
            uint64_t v35 = *(void *)(a2 + 48);
            uint64_t v36 = *(unsigned int *)(a2 + 40);
            if ((int)v36 < 2) {
              goto LABEL_80;
            }
            uint64_t v37 = v36 - 1;
            uint64_t v38 = a2 + 56;
            break;
          case 2:
            return sub_1B0DADD60(a1, a2);
          case 4:
            uint64_t v42 = *(void *)(*(void *)(a2 + 32) + 24);
            uint64_t v43 = *(void *)(v42 + 48);
            int v44 = *(_DWORD *)(v43 + 16);
            *(_DWORD *)(v42 + 16) = v44;
            if (!*(_DWORD *)(*(void *)(a1 + 8) + 92)) {
              *(void *)(v42 + 8) = *(void *)(v43 + 8);
            }
            uint64_t v25 = 0;
            *(void *)(a2 + 24) = *(void *)v43;
            *(_DWORD *)(a2 + 8) = v44 == 0;
            return v25;
          case 9:
            return sub_1B0DAC808(a1, a2);
          default:
            return sub_1B0DADFB0(a1, a2);
        }
        while (2)
        {
          uint64_t v39 = *(void *)v38;
          if (!*(_DWORD *)(*(void *)v38 + 4))
          {
            if (*(_DWORD *)(v35 + 4)) {
              goto LABEL_56;
            }
            uint64_t v40 = *(void *)(v35 + 24);
            uint64_t v41 = *(void *)(v39 + 24);
            if (*(_DWORD *)(a1 + 24))
            {
              if (v40 <= v41)
              {
                if (v40 < v41) {
                  goto LABEL_56;
                }
LABEL_66:
                if (!*(_DWORD *)(v39 + 8)) {
LABEL_56:
                }
                  uint64_t v35 = *(void *)v38;
              }
            }
            else if (v40 >= v41)
            {
              if (v40 <= v41) {
                goto LABEL_66;
              }
              goto LABEL_56;
            }
          }
          v38 += 8;
          if (!--v37)
          {
LABEL_80:
            uint64_t v25 = 0;
            *(void *)(a2 + 24) = *(void *)(v35 + 24);
            *(void *)(a2 + 4) = *(void *)(v35 + 4);
            return v25;
          }
          continue;
        }
      }
    }
LABEL_52:
    *(_DWORD *)(a2 + 4) = 1;
    return 0;
  }
  if (!*(void *)(a2 + 16))
  {
    uint64_t v25 = 0;
    *(_DWORD *)(a2 + 4) = 1;
    return v25;
  }
  LODWORD(v26) = *(_DWORD *)(a2 + 40);
  if ((int)v26 < 1)
  {
    int v27 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    int v27 = 0;
    uint64_t v28 = 6;
    do
    {
      uint64_t v29 = *(void *)(a2 + 8 * v28);
      uint64_t v30 = sub_1B0DAE404(a1, v29);
      v27 += *(_DWORD *)(v29 + 4);
      uint64_t v31 = v28 - 5;
      uint64_t v26 = *(int *)(a2 + 40);
      ++v28;
    }
    while (v31 < v26 && v30 == 0);
    uint64_t v25 = v30;
    int v4 = *(_DWORD *)a2;
  }
  uint64_t v33 = *(void *)(a2 + 48);
  *(void *)(a2 + 24) = *(void *)(v33 + 24);
  if (v4 == 1)
  {
    if (v26 == v27) {
LABEL_43:
    }
      sub_1B0DADE80(a2);
  }
  else
  {
    if (v4 != 2)
    {
      *(_DWORD *)(a2 + 4) = *(_DWORD *)(v33 + 4);
      if (!v25) {
        goto LABEL_49;
      }
      return v25;
    }
    if (v27 >= 1) {
      goto LABEL_43;
    }
  }
  if (!v25)
  {
LABEL_49:
    if (!*(_DWORD *)(a2 + 4)) {
      goto LABEL_53;
    }
    return 0;
  }
  return v25;
}

uint64_t sub_1B0DAE858(_DWORD *a1, unsigned __int8 *a2, int a3, int a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v9 = 0;
  uint64_t v11 = a1 + 15;
  uint64_t v10 = *(void *)a1;
  uint64_t v109 = 0;
  unint64_t v12 = (a3 + 1);
  if (a3 == -1) {
    goto LABEL_2;
  }
  uint64_t v20 = 64;
  do
  {
    unint64_t v21 = v20;
    v20 *= 2;
  }
  while (v21 < v12);
  if (sqlite3_initialize() || (uint64_t v23 = sub_1B0C8E1B8(0, v21)) == 0)
  {
    uint64_t result = 7;
    goto LABEL_108;
  }
  uint64_t v9 = (unsigned __int8 *)v23;
  if (a3 < 1)
  {
LABEL_2:
    uint64_t v106 = a5;
    int v13 = 0;
    int v14 = 0;
    int v15 = 0;
    if ((a4 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_3:
    uint64_t v16 = *(unsigned int *)(v10 + 48);
    if ((int)v16 < 1)
    {
      int v15 = 0;
      int v14 = 1;
    }
    else
    {
      uint64_t v17 = 0;
      int v15 = 0;
      int v14 = v16 + 1;
      while (1)
      {
        int v18 = *(_DWORD *)(*(void *)(v10 + 56) + 4 * v17);
        if (v18 == v13) {
          break;
        }
        ++v17;
        if (v18 == v13 + 1) {
          int v15 = v17;
        }
        if (v16 == v17) {
          goto LABEL_20;
        }
      }
      int v14 = v17 + 1;
    }
    goto LABEL_20;
  }
  memcpy((void *)(v23 + 1), a2, a3);
  uint64_t v106 = a5;
  if (a4)
  {
    int v87 = 0;
    int v13 = 0;
    do
    {
      LODWORD(v88) = v87 + 1;
      if (v87 + 1 < a3 && a2[v87] >= 0xC0u)
      {
        uint64_t v88 = (int)v88;
        while ((a2[v88] & 0xC0) == 0x80)
        {
          if (a3 == ++v88)
          {
            ++v13;
            goto LABEL_3;
          }
        }
      }
      ++v13;
      int v87 = v88;
    }
    while ((int)v88 < a3);
    goto LABEL_3;
  }
  int v14 = 0;
  int v15 = 0;
LABEL_20:
  if (v14 <= *(_DWORD *)(v10 + 48))
  {
    uint64_t v31 = sub_1B0DA5A0C((uint64_t)a1);
    *uint64_t v9 = v14 + 48;
    if (v31)
    {
      uint64_t v32 = v31;
      sub_1B0DAF488((uint64_t)a1, (uint64_t)v31, a4 | 0x10, v106, v9, v12, 0xFFFFFFFF, 0, &v109);
      sub_1B0DA4EF8(v32);
      uint64_t v33 = v109;
    }
    else
    {
      uint64_t v33 = 0;
    }
    uint64_t v34 = a6;
    goto LABEL_85;
  }
  uint64_t v24 = (uint64_t)a1;
  int v25 = *(_DWORD *)(*(void *)a1 + 92);
  uint64_t v26 = sub_1B0DB2954;
  if (v25 == 1) {
    uint64_t v26 = sub_1B0DB25AC;
  }
  uint64_t v101 = (void (*)(void, void, void, void))v26;
  if (v25 == 1) {
    int v27 = sub_1B0DB2944;
  }
  else {
    int v27 = sub_1B0DB33B0;
  }
  if (v25 == 1) {
    uint64_t v28 = 1;
  }
  else {
    uint64_t v28 = 15;
  }
  uint64_t v108 = v28;
  if (v25 == 1) {
    uint64_t v29 = 32;
  }
  else {
    uint64_t v29 = 120;
  }
  int v103 = v27;
  unint64_t v104 = v29;
  if (a1[15])
  {
    uint64_t v30 = 0;
  }
  else if (sqlite3_initialize() || (uint64_t v35 = (uint64_t *)sub_1B0C7FC94((16 * v104))) == 0)
  {
    uint64_t v30 = 0;
    *uint64_t v11 = 7;
  }
  else
  {
    uint64_t v30 = v35;
    bzero(v35, (16 * v104));
  }
  uint64_t v36 = sub_1B0DA5A0C((uint64_t)a1);
  uint64_t v37 = (uint64_t)v36;
  if (!v30 || !v36)
  {
    sub_1B0DA4EF8(v36);
    uint64_t v34 = a6;
    if (v30) {
      goto LABEL_74;
    }
    goto LABEL_80;
  }
  char v96 = a4;
  uint64_t v112 = 0;
  int v110 = 1;
  __src[0] = 0;
  __src[1] = 0;
  unint64_t v105 = v30;
  unsigned int v98 = v36;
  if (v15)
  {
    *uint64_t v9 = 48;
    sub_1B0DAF488((uint64_t)a1, (uint64_t)v36, 0x30u, v106, v9, v12, 0xFFFFFFFF, 0, (uint64_t *)&v112);
    uint64_t v38 = v112;
    sub_1B0DB0BF0((uint64_t)v11, (uint64_t)v112);
    if (a1[15])
    {
      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v39 = 0;
      do
      {
        if (*((unsigned char *)v38 + 20)) {
          break;
        }
        ((void (*)(void *, void *))v38[7])(v38, &v38[17 * *(unsigned __int16 *)(v38[11] + 4) + 12]);
        if (*((_DWORD *)v38 + 4))
        {
          v103((uint64_t)a1, *v38 - v39, (uint64_t)v38, (uint64_t)__src);
          uint64_t v39 = *v38;
        }
        sub_1B0DB353C((uint64_t)a1, (uint64_t)v38, &v113);
      }
      while (!a1[15]);
    }
    sub_1B0DA8128((uint64_t)v38);
    uint64_t v37 = (uint64_t)v98;
  }
  else
  {
    uint64_t v39 = 0;
  }
  *uint64_t v9 = v15 + 48;
  sub_1B0DAF488((uint64_t)a1, v37, 0x38u, v106, v9, v12, 0xFFFFFFFF, 0, (uint64_t *)&v112);
  uint64_t v40 = v112;
  sub_1B0DB0BF0((uint64_t)v11, (uint64_t)v112);
  uint64_t v107 = v11;
  uint64_t v97 = v9;
  if (!a1[15])
  {
    size_t __n = (int)v12;
    do
    {
      if (*((unsigned char *)v40 + 20)) {
        break;
      }
      uint64_t v65 = &v40[17 * *(unsigned __int16 *)(v40[11] + 4)];
      int v66 = *((_DWORD *)v65 + 52);
      uint64_t v67 = (const void *)v65[25];
      ((void (*)(void *, void *))v40[7])(v40, v65 + 12);
      if (v110)
      {
        if (v66 <= a3 || memcmp(v9, v67, __n)) {
          break;
        }
      }
      if (*((_DWORD *)v40 + 4))
      {
        if (*v40 <= v39)
        {
          int v68 = (int)__src[1];
          if (SLODWORD(__src[1]) >= 1)
          {
            unsigned int v69 = *v11;
            int v70 = v108;
            if (*v11)
            {
              uint64_t v39 = 0;
            }
            else
            {
              int v71 = 0;
              unsigned int v72 = v108;
              do
              {
                unint64_t v74 = v69;
                uint64_t v75 = v72;
                if ((unint64_t)v69 + 1 > v72) {
                  uint64_t v75 = v69 + 1;
                }
                unint64_t v76 = v75 - v69;
                unint64_t v77 = v76 & 0xFFFFFFFFFFFFFFFELL;
                uint64_t v78 = 2 * v69;
                uint64_t v79 = &v105[v78 + 3];
                uint64_t v80 = &v105[v78];
                unint64_t v81 = (v71 * v70 + v70);
                unint64_t v82 = v74;
                while (*((_DWORD *)v80 + 2))
                {
                  ++v82;
                  v80 += 2;
                  if (v82 >= v81)
                  {
                    if (v81 != v75) {
                      goto LABEL_125;
                    }
                    goto LABEL_137;
                  }
                }
                int v68 = 0;
                long long v83 = *(_OWORD *)__src;
                long long v113 = *(_OWORD *)__src;
                *(_OWORD *)int __src = *(_OWORD *)v80;
                *(_OWORD *)uint64_t v80 = v83;
                LODWORD(__src[1]) = 0;
                if (v81 != v82) {
                  goto LABEL_125;
                }
LABEL_137:
                v101(a1, __src, v108, &v105[2 * (v71 * v70)]);
                unint64_t v84 = v74;
                if (v76 < 2) {
                  goto LABEL_141;
                }
                unint64_t v84 = (v76 & 0xFFFFFFFFFFFFFFFELL) + v74;
                do
                {
                  *((_DWORD *)v79 - 4) = 0;
                  *(_DWORD *)uint64_t v79 = 0;
                  v79 += 4;
                  v77 -= 2;
                }
                while (v77);
                if (v76 != (v76 & 0xFFFFFFFFFFFFFFFELL))
                {
LABEL_141:
                  uint64_t v85 = &v105[2 * v84 + 1];
                  do
                  {
                    *(_DWORD *)uint64_t v85 = 0;
                    v85 += 2;
                    ++v84;
                  }
                  while (v84 < v81);
                }
                int v68 = (int)__src[1];
LABEL_125:
                ++v71;
                uint64_t v11 = v107;
                int v70 = v108;
                unsigned int v69 = v74 + v108;
                v72 += v108;
                if (*v107) {
                  BOOL v73 = 1;
                }
                else {
                  BOOL v73 = v68 == 0;
                }
              }
              while (!v73);
              uint64_t v39 = 0;
              uint64_t v9 = v97;
              uint64_t v24 = (uint64_t)a1;
            }
          }
        }
        uint64_t v40 = v112;
        v103(v24, *v112 - v39, (uint64_t)v112, (uint64_t)__src);
        uint64_t v39 = *v40;
      }
      else
      {
        uint64_t v40 = v112;
      }
      sub_1B0DB353C(v24, (uint64_t)v40, &v110);
    }
    while (!*(_DWORD *)(v24 + 60));
  }
  unint64_t v41 = 0;
  uint64_t v42 = v108;
  uint64_t v43 = v105;
  while (2)
  {
    if (!*v11) {
      v101(a1, __src, v42, &v105[2 * v41]);
    }
    unint64_t v45 = v41 + v42;
    uint64_t v46 = v43;
    do
    {
      uint64_t v47 = *v46;
      if (*v46)
      {
        uint64_t v48 = &off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_57;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v47);
        --qword_1EB220150;
        off_1EB21C9E8(v47);
        uint64_t v47 = xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          uint64_t v48 = &xmmword_1EB21CA50;
LABEL_57:
          (*v48)(v47);
        }
      }
      *uint64_t v46 = 0;
      v46[1] = 0;
      v46 += 2;
      ++v41;
    }
    while (v41 < v45);
    v43 += 2 * v108;
    unint64_t v41 = v45;
    BOOL v44 = v45 >= v104;
    uint64_t v11 = v107;
    uint64_t v42 = v108;
    if (!v44) {
      continue;
    }
    break;
  }
  sub_1B0DA8128((uint64_t)v112);
  uint64_t v9 = v97;
  if (*v107) {
    goto LABEL_66;
  }
  uint64_t v86 = SLODWORD(__src[1]);
  if (sqlite3_initialize() || (uint64_t v89 = (_DWORD *)sub_1B0C7FC94(v86 + 24)) == 0)
  {
    if ((int)v86 >= -23) {
      *uint64_t v107 = 7;
    }
  }
  else
  {
    size_t v90 = v89;
    bzero(v89, v86 + 24);
    *(void *)size_t v90 = v90 + 4;
    size_t v91 = SLODWORD(__src[1]);
    v90[2] = __src[1];
    v90[3] = v91;
    if (v91) {
      memcpy(v90 + 4, __src[0], v91);
    }
    if (!*v107)
    {
      if (sqlite3_initialize() || (uint64_t v93 = sub_1B0C7FC94(376)) == 0)
      {
        *uint64_t v107 = 7;
      }
      else
      {
        uint64_t v94 = v93;
        *(void *)(v93 + 368) = 0;
        *(_OWORD *)(v93 + 336) = 0u;
        *(_OWORD *)(v93 + 352) = 0u;
        *(_OWORD *)(v93 + 304) = 0u;
        *(_OWORD *)(v93 + 320) = 0u;
        *(_OWORD *)(v93 + 272) = 0u;
        *(_OWORD *)(v93 + 288) = 0u;
        *(_OWORD *)(v93 + 240) = 0u;
        *(_OWORD *)(v93 + 256) = 0u;
        *(_OWORD *)(v93 + 208) = 0u;
        *(_OWORD *)(v93 + 224) = 0u;
        *(_OWORD *)(v93 + 176) = 0u;
        *(_OWORD *)(v93 + 192) = 0u;
        *(_OWORD *)(v93 + 144) = 0u;
        *(_OWORD *)(v93 + 160) = 0u;
        *(_OWORD *)(v93 + 112) = 0u;
        *(_OWORD *)(v93 + 128) = 0u;
        *(_OWORD *)(v93 + 80) = 0u;
        *(_OWORD *)(v93 + 96) = 0u;
        *(_OWORD *)(v93 + 48) = 0u;
        *(_OWORD *)(v93 + 64) = 0u;
        *(_OWORD *)(v93 + 16) = 0u;
        *(_OWORD *)(v93 + 32) = 0u;
        *(_OWORD *)uint64_t v93 = 0u;
        *(_DWORD *)(v93 + 64) = 2;
        *(void *)(v93 + 88) = v93 + 368;
        *(void *)(v93 + 24) = a1;
        *(void *)(v93 + 56) = nullsub_14;
        *(_DWORD *)(v93 + 240) = 1;
        if ((int)v90[3] < 1)
        {
          *(unsigned char *)(v93 + 20) = 1;
        }
        else
        {
          *(void *)(v93 + 248) = v90;
          *(void *)(v93 + 264) = sub_1B0DA69F4(*(char **)v90, (unint64_t *)(v93 + 352));
          *(_DWORD *)(v94 + 308) = v90[2];
          *(_WORD *)(*(void *)(v94 + 88) + 4) = 1;
          if ((v96 & 2) != 0)
          {
            *(_DWORD *)(v94 + 68) = 1;
            *(_DWORD *)(v94 + 240) |= 2u;
            sub_1B0DAC4AC(a1, v94 + 232);
          }
          else
          {
            sub_1B0DAC13C((uint64_t)a1, v94 + 232);
          }
          size_t v90 = 0;
          uint64_t v11 = v107;
        }
        if ((*(unsigned char *)(v94 + 240) & 2) != 0)
        {
          uint64_t v95 = sub_1B0DB15D4;
        }
        else if (*(_DWORD *)(*(void *)a1 + 92) == 1)
        {
          uint64_t v95 = sub_1B0DB16A0;
        }
        else
        {
          uint64_t v95 = sub_1B0DB1ACC;
        }
        *(void *)(v94 + 288) = v95;
        uint64_t v109 = v94;
        if (!v90) {
          goto LABEL_66;
        }
      }
    }
    unint64_t v92 = (uint64_t (**)(void *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_172:
      (*v92)(v90);
      goto LABEL_66;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v90);
    --qword_1EB220150;
    off_1EB21C9E8(v90);
    size_t v90 = (_DWORD *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unint64_t v92 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
      goto LABEL_172;
    }
  }
LABEL_66:
  int v49 = __src[0];
  if (__src[0])
  {
    uint64_t v50 = (void (**)(void *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_72;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v49);
    --qword_1EB220150;
    off_1EB21C9E8(v49);
    int v49 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v50 = (void (**)(void *))&xmmword_1EB21CA50;
LABEL_72:
      (*v50)(v49);
    }
  }
  sub_1B0DA4EF8(v98);
  uint64_t v34 = a6;
  uint64_t v30 = v105;
LABEL_74:
  uint64_t v51 = (uint64_t (**)(void *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v30);
    --qword_1EB220150;
    off_1EB21C9E8(v30);
    uint64_t v30 = (uint64_t *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v51 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
      goto LABEL_79;
    }
  }
  else
  {
LABEL_79:
    (*v51)(v30);
  }
LABEL_80:
  uint64_t v33 = v109;
  if (v109)
  {
    sub_1B0DB0BF0((uint64_t)v11, v109);
    if (*v11)
    {
      uint64_t v52 = v9;
LABEL_87:
      uint64_t v53 = *(void *)(v33 + 24);
      sub_1B0DA8128(v33);
      uint64_t v54 = *(void **)(v53 + 64);
      if (v54)
      {
        *(void *)(v53 + 64) = 0;
        uint64_t v55 = (sqlite3_stmt *)v54[3];
        uint64_t v56 = (void *)v54[4];
        uint64_t v57 = v56[3];
        if (v57) {
          xmmword_1EB21CA40(v57);
        }
        sub_1B0D05C10(v56, v54);
        uint64_t v58 = v56[3];
        if (v58) {
          xmmword_1EB21CA50(v58);
        }
        sqlite3_finalize(v55);
      }
LABEL_93:
      uint64_t v109 = 0;
      uint64_t v59 = (void *)*((void *)a1 + 8);
      if (v59)
      {
        *((void *)a1 + 8) = 0;
        uint64_t v60 = (sqlite3_stmt *)v59[3];
        uint64_t v61 = (void *)v59[4];
        uint64_t v62 = v61[3];
        if (v62) {
          xmmword_1EB21CA40(v62);
        }
        sub_1B0D05C10(v61, v59);
        uint64_t v63 = v61[3];
        if (v63) {
          xmmword_1EB21CA50(v63);
        }
        sqlite3_finalize(v60);
      }
      uint64_t v33 = 0;
      uint64_t v9 = v52;
      goto LABEL_100;
    }
    if (*(void *)(v109 + 136 * *(unsigned __int16 *)(*(void *)(v109 + 88) + 4) + 112)) {
      (*(void (**)(uint64_t, uint64_t))(v109 + 56))(v109, v109 + 136 * *(unsigned __int16 *)(*(void *)(v109 + 88) + 4) + 96);
    }
  }
LABEL_85:
  if (*v11)
  {
    uint64_t v52 = v9;
    if (v33) {
      goto LABEL_87;
    }
    goto LABEL_93;
  }
LABEL_100:
  uint64_t *v34 = v33;
  if (v9)
  {
    uint64_t v64 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_106;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
    --qword_1EB220150;
    off_1EB21C9E8(v9);
    uint64_t v9 = (unsigned __int8 *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v64 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_106:
      (*v64)(v9);
    }
  }
  uint64_t result = *v11;
LABEL_108:
  *uint64_t v11 = 0;
  return result;
}

uint64_t sub_1B0DAF488(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4, unsigned __int8 *a5, unsigned int a6, unsigned int a7, int a8, uint64_t *a9)
{
  unint64_t v12 = a9;
  uint64_t v13 = result;
  int v15 = (int *)(result + 60);
  int v14 = *(_DWORD *)(result + 60);
  if (v14)
  {
    int v16 = 0;
  }
  else if ((a7 & 0x80000000) != 0)
  {
    if ((a3 & 0x40) != 0 || *(void *)(result + 24) == 0) {
      int v16 = *(_DWORD *)(a2 + 24);
    }
    else {
      int v16 = *(_DWORD *)(a2 + 24) + 1;
    }
  }
  else if (*(_DWORD *)(a2 + 16 * a7 + 36) >= a8)
  {
    int v16 = a8;
  }
  else
  {
    int v16 = *(_DWORD *)(a2 + 16 * a7 + 36);
  }
  int v18 = 2;
  do
  {
    unsigned int v19 = v18;
    v18 *= 2;
  }
  while ((int)v19 < v16);
  if (v14) {
    goto LABEL_305;
  }
  uint64_t v20 = 4 * v19 + 136 * (int)(v19 - 1) + 232;
  uint64_t result = sqlite3_initialize();
  if (result || (uint64_t result = sub_1B0C7FC94(v20)) == 0)
  {
    if (v20 >= 1) {
      *int v15 = 7;
    }
    goto LABEL_305;
  }
  uint64_t v21 = result;
  uint64_t v232 = v15;
  bzero((void *)result, v20);
  *(_DWORD *)(v21 + 64) = v19;
  *(void *)(v21 + 88) = v21 + 136 * v19 + 96;
  *(void *)(v21 + 24) = v13;
  *(void *)(v21 + 56) = nullsub_14;
  *a9 = v21;
  *(_DWORD *)(v21 + 68) = (a3 >> 1) & 1;
  *(unsigned char *)(v21 + 72) = (a3 & 0x10) != 0;
  *(void *)(v21 + 48) = a4;
  uint64_t v22 = v21;
  if ((a3 & 0x20) == 0) {
    sub_1B0DB0BF0((uint64_t)v15, v21);
  }
  if (*v15)
  {
LABEL_304:
    uint64_t result = sub_1B0DA8128(v22);
LABEL_305:
    *unint64_t v12 = 0;
    return result;
  }
  unint64_t v237 = (_DWORD *)v13;
  if ((a7 & 0x80000000) == 0)
  {
    if (v16 >= 1)
    {
      uint64_t v23 = v16 - 1;
      uint64_t v24 = v21 + 96;
      do
      {
        sub_1B0DB105C((_DWORD *)v13, *(void *)(a2 + 16 * a7 + 40) + 56 * v23--, v24);
        v24 += 136;
      }
      while (v23 != -1);
    }
    goto LABEL_303;
  }
  int v25 = 0;
  unint64_t v26 = a2 + 32;
  unint64_t v215 = a2 + 32 + 16 * *(int *)(a2 + 28);
  if ((a3 & 0x40) != 0)
  {
    int v27 = a5;
  }
  else
  {
    int v27 = a5;
    if (*(void *)(v13 + 24))
    {
      sub_1B0DB0D18(v13, a5, a6, a3, v21 + 96);
      int v27 = a5;
      int v25 = 1;
    }
  }
  if (v26 < v215)
  {
    int v233 = (uint64_t **)(v13 + 104);
    uint64_t v231 = v21;
    while (1)
    {
      uint64_t v28 = *(unsigned int *)(v26 + 4);
      if ((int)v28 >= 1) {
        break;
      }
LABEL_35:
      v26 += 16;
      if (v26 >= v215) {
        goto LABEL_303;
      }
    }
    uint64_t v29 = v25;
    uint64_t v30 = v232;
    unint64_t v235 = v26;
LABEL_40:
    uint64_t v31 = v28 - 1;
    uint64_t v32 = *(void *)(v26 + 8);
    unsigned int v33 = v28 - 1;
    uint64_t v34 = (unsigned int *)(v32 + 56 * (v28 - 1));
    uint64_t v35 = v22 + 136 * v29;
    uint64_t v36 = (unsigned int **)(v35 + 96);
    if (!v27)
    {
      sub_1B0DB105C(v237, v32 + 56 * v33, v35 + 96);
      goto LABEL_46;
    }
    *(void *)(v35 + 224) = 0;
    *(_OWORD *)(v35 + 192) = 0u;
    *(_OWORD *)(v35 + 208) = 0u;
    *(_OWORD *)(v35 + 160) = 0u;
    *(_OWORD *)(v35 + 176) = 0u;
    *(_OWORD *)(v35 + 128) = 0u;
    *(_OWORD *)(v35 + 144) = 0u;
    *(_OWORD *)uint64_t v36 = 0u;
    *(_OWORD *)(v35 + 112) = 0u;
    *uint64_t v36 = v34;
    if (*v233) {
      goto LABEL_55;
    }
    int v229 = (unsigned int **)(v35 + 96);
    uint64_t v37 = (unsigned __int8 *)sqlite3_mprintf("SELECT pgno FROM '%q'.'%q_idx' WHERE segid=? AND term<=? ORDER BY term DESC LIMIT 1", *(void *)(*(void *)v237 + 8), *(void *)(*(void *)v237 + 16));
    uint64_t v39 = v37;
    if (v237[15])
    {
      int v27 = a5;
      uint64_t v31 = v28 - 1;
      uint64_t v36 = v229;
      if (!v37) {
        goto LABEL_39;
      }
    }
    else
    {
      if (!v37)
      {
        int *v30 = 7;
        int v27 = a5;
        uint64_t v31 = v28 - 1;
        goto LABEL_39;
      }
      v237[15] = sub_1B0C7EAC0(**(void **)v237, v37, 0xFFFFFFFFLL, 133, 0, v233, 0, v38);
      uint64_t v31 = v28 - 1;
      uint64_t v36 = v229;
    }
    uint64_t v40 = (void (**)(unsigned __int8 *, unsigned __int8 *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v39);
      --qword_1EB220150;
      off_1EB21C9E8(v39);
      uint64_t v39 = (unsigned __int8 *)xmmword_1EB2201B0;
      int v27 = a5;
      uint64_t v22 = v231;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_55;
      }
      uint64_t v40 = (void (**)(unsigned __int8 *, unsigned __int8 *))&xmmword_1EB21CA50;
    }
    (*v40)(v39, v27);
    int v27 = a5;
LABEL_55:
    if (*v30) {
      goto LABEL_39;
    }
    unint64_t v41 = *v233;
    uint64_t v42 = (int)*v34;
    if (!sub_1B0CC3F2C((uint64_t)*v233, 0))
    {
      uint64_t v43 = v41[16];
      if ((*(_WORD *)(v43 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v43, v42);
      }
      else
      {
        *(void *)uint64_t v43 = v42;
        *(_WORD *)(v43 + 20) = 4;
      }
      uint64_t v44 = *(void *)(*v41 + 24);
      if (v44) {
        xmmword_1EB21CA50(v44);
      }
    }
    if ((a6 & 0x80000000) != 0)
    {
      sub_1B0CE1978(98740);
      uint64_t v22 = v231;
    }
    else
    {
      uint64_t v22 = v231;
      if (!sub_1B0CC3F2C((uint64_t)v41, 1u))
      {
        unsigned int v45 = sub_1B0C79BBC(v41[16] + 64, (char *)a5, a6, 0, 0);
        if (v45)
        {
          unsigned int v46 = v45;
          uint64_t v47 = *v41;
          *(_DWORD *)(v47 + 80) = v46;
          sub_1B0D0E714(v47, v46);
          sub_1B0D1806C(*v41, v46);
        }
        uint64_t v48 = *(void *)(*v41 + 24);
        uint64_t v22 = v231;
        if (v48) {
          xmmword_1EB21CA50(v48);
        }
      }
    }
    uint64_t v49 = v31;
    if (sqlite3_step((sqlite3_stmt *)v41) == 100)
    {
      int v50 = sqlite3_column_int((sqlite3_stmt *)v41, 0);
      int v51 = v50 >> 1;
      int v220 = v50 & 1;
    }
    else
    {
      int v220 = 0;
      int v51 = 1;
    }
    int *v30 = sqlite3_reset((sqlite3_stmt *)v41);
    if (!sub_1B0CC3F2C((uint64_t)v41, 1u))
    {
      uint64_t v52 = *(void *)(*v41 + 24);
      if (v52) {
        xmmword_1EB21CA50(v52);
      }
    }
    int v53 = *(_DWORD *)(v32 + 56 * v33 + 4);
    int v222 = v53;
    if (v51 > v53) {
      int v53 = v51;
    }
    uint64_t v54 = v22 + 136 * v29;
    *(_DWORD *)(v54 + 108) = v53 - 1;
    unint64_t v224 = (int *)(v54 + 108);
    uint64_t v55 = v237;
    sub_1B0DABEE4((uint64_t)v237, v36);
    uint64_t v58 = *(uint64_t **)(v54 + 112);
    uint64_t v57 = (void *)(v54 + 112);
    uint64_t v56 = v58;
    int v230 = v57;
    if (!v58) {
      goto LABEL_204;
    }
    uint64_t v59 = *v56;
    uint64_t v60 = *((unsigned int *)v56 + 2);
    uint64_t v61 = *((unsigned int *)v56 + 3);
    uint64_t v62 = (char *)(*v56 + v61);
    unsigned int v63 = *v62;
    if (*v62 < 0)
    {
      int v65 = v62[1];
      if (v62[1] < 0)
      {
        int v95 = v62[2];
        if (v95 < 0)
        {
          v238[0] = 0;
          uint64_t v111 = v60;
          int v218 = v56;
          int v64 = sub_1B0DA69F4(v62, v238);
          uint64_t v56 = v218;
          uint64_t v60 = v111;
          unsigned int v63 = v238[0] & 0x7FFFFFFF;
          if ((v238[0] & 0x7FFFFFFF) > v60)
          {
LABEL_80:
            uint64_t v30 = v232;
            *uint64_t v232 = 267;
            uint64_t v55 = v237;
            goto LABEL_204;
          }
        }
        else
        {
          unsigned int v63 = v95 & 0x7F | (v63 << 14) & 0x1FC07F | ((v65 & 0x7F) << 7);
          int v64 = 3;
          if (v63 > v60) {
            goto LABEL_80;
          }
        }
      }
      else
      {
        unsigned int v63 = ((v63 & 0x7F) << 7) | v65;
        int v64 = 2;
        if (v63 > v60) {
          goto LABEL_80;
        }
      }
    }
    else
    {
      int v64 = 1;
      if (v63 > v60) {
        goto LABEL_80;
      }
    }
    long long v216 = v56;
    int v225 = v51;
    uint64_t v227 = v49;
    unsigned int v66 = 0;
    unsigned int v67 = 0;
    unsigned int v68 = v64 + v61;
    unsigned int v69 = v63;
    int v70 = a5;
    while (1)
    {
      unsigned int v72 = (char *)(v59 + v63);
      unsigned int v73 = *v72;
      if (*v72 < 0)
      {
        int v75 = v72[1];
        if (v72[1] < 0)
        {
          int v77 = v72[2];
          if (v77 < 0)
          {
            v238[0] = 0;
            uint64_t v79 = v60;
            int v76 = sub_1B0DA69F4(v72, v238);
            uint64_t v60 = v79;
            int v70 = a5;
            unsigned int v73 = v238[0] & 0x7FFFFFFF;
          }
          else
          {
            unsigned int v73 = v77 & 0x7F | (v73 << 14) & 0x1FC07F | ((v75 & 0x7F) << 7);
            int v76 = 3;
          }
        }
        else
        {
          unsigned int v73 = ((v73 & 0x7F) << 7) | v75;
          int v76 = 2;
        }
        unsigned int v74 = v76 + v63;
      }
      else
      {
        unsigned int v74 = v63 + 1;
      }
      uint64_t v30 = v232;
      if (v66 < v67)
      {
LABEL_122:
        if ((a3 & 8) == 0) {
          goto LABEL_140;
        }
        goto LABEL_123;
      }
      if (v66 == v67)
      {
        LODWORD(v80) = a6 - v66;
        if (v73 >= a6 - v66) {
          uint64_t v80 = v80;
        }
        else {
          uint64_t v80 = v73;
        }
        if (v80)
        {
          uint64_t v81 = 0;
          while (*(unsigned __int8 *)(v59 + v74 + v81) == v70[v66 + v81])
          {
            if (v80 == ++v81) {
              goto LABEL_107;
            }
          }
          LODWORD(v80) = v81;
        }
LABEL_107:
        unsigned int v67 = v80 + v66;
        if (v80 + v66 == a6)
        {
          if ((a3 & 8) == 0 && v80 != v73)
          {
LABEL_140:
            double v100 = (void (**)(void))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              uint64_t v22 = v231;
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v216);
              --qword_1EB220150;
              off_1EB21C9E8(v216);
              uint64_t v55 = v237;
              uint64_t v49 = v227;
              uint64_t v57 = v230;
              int v51 = v225;
              if ((void)xmmword_1EB2201B0)
              {
                double v100 = (void (**)(void))&xmmword_1EB21CA50;
                goto LABEL_146;
              }
            }
            else
            {
              uint64_t v55 = v237;
              uint64_t v57 = v230;
              uint64_t v22 = v231;
              uint64_t v49 = v227;
              int v51 = v225;
LABEL_146:
              (*v100)();
            }
            *uint64_t v57 = 0;
            goto LABEL_204;
          }
LABEL_123:
          uint64_t v91 = v74;
          size_t v92 = v73;
          unint64_t v93 = v74 + (unint64_t)v73;
          if (v73) {
            BOOL v94 = v93 > v60;
          }
          else {
            BOOL v94 = 1;
          }
          if (!v94)
          {
            uint64_t v212 = v91;
            uint64_t v101 = v91 + v73;
            uint64_t v22 = v231;
            uint64_t v102 = v231 + 136 * v29;
            *(void *)(v102 + 128) = v101;
            int v103 = (_DWORD *)(v102 + 128);
            v103[8] = *v224;
            v103[9] = v101;
            unint64_t v104 = (uint64_t *)(v103 + 18);
            long long v217 = (uint64_t *)v103;
            v103[20] = 0;
            unsigned int v214 = v103 + 20;
            unsigned int v213 = v60;
            if (v66)
            {
              uint64_t v105 = v231 + 136 * v29;
              unsigned int v108 = *(_DWORD *)(v105 + 212);
              uint64_t v107 = (_DWORD *)(v105 + 212);
              LODWORD(v106) = v108;
              int v211 = (uint64_t *)(v103 + 18);
              if (v108 >= v66)
              {
                uint64_t v112 = 0;
                uint64_t v113 = *v104;
                size_t v114 = v66;
                goto LABEL_160;
              }
              if (!v106) {
                LODWORD(v106) = 64;
              }
              unint64_t v106 = (int)v106;
              do
              {
                unint64_t v109 = v106;
                v106 *= 2;
              }
              while (v109 < v66);
              uint64_t v209 = *v104;
              if (sqlite3_initialize() || (uint64_t v113 = sub_1B0C8E1B8(v209, v109)) == 0)
              {
                *uint64_t v232 = 7;
                signed int v110 = *v214;
                uint64_t v22 = v231;
              }
              else
              {
                *uint64_t v107 = v109;
                *int v211 = v113;
                uint64_t v112 = *v214;
                uint64_t v22 = v231;
                size_t v114 = v66;
LABEL_160:
                memcpy((void *)(v113 + v112), a5, v114);
                signed int v110 = *v214 + v66;
                *unsigned int v214 = v110;
              }
              unint64_t v104 = v211;
            }
            else
            {
              signed int v110 = 0;
            }
            unint64_t v115 = (v110 + v92);
            uint64_t v116 = v22 + 136 * v29;
            unsigned int v119 = *(_DWORD *)(v116 + 212);
            unint64_t v118 = (_DWORD *)(v116 + 212);
            unsigned int v117 = v119;
            uint64_t v57 = v230;
            if (v115 > v119)
            {
              size_t v210 = v92;
              if (v117) {
                LODWORD(v120) = v117;
              }
              else {
                LODWORD(v120) = 64;
              }
              unint64_t v120 = (int)v120;
              do
              {
                unint64_t v121 = v120;
                v120 *= 2;
              }
              while (v121 < v115);
              uint64_t v122 = v104;
              uint64_t v123 = *v104;
              if (sqlite3_initialize() || (uint64_t v124 = sub_1B0C8E1B8(v123, v121)) == 0)
              {
                uint64_t v30 = v232;
                *uint64_t v232 = 7;
                uint64_t v57 = v230;
                uint64_t v22 = v231;
              }
              else
              {
                *unint64_t v118 = v121;
                *uint64_t v122 = v124;
                signed int v110 = *v214;
                uint64_t v57 = v230;
                uint64_t v22 = v231;
                size_t v92 = v210;
LABEL_171:
                memcpy((void *)(v124 + v110), (const void *)(v59 + v212), v92);
                *v214 += v92;
                uint64_t v30 = v232;
              }
              if (v68 >= v213)
              {
                uint64_t v128 = *v57;
                *(_DWORD *)(v22 + 136 * v29 + 172) = *(_DWORD *)(*v57 + 8) + 1;
              }
              else
              {
                uint64_t v125 = (char *)(v59 + v68);
                int v126 = *v125;
                if (*v125 < 0)
                {
                  int v130 = v125[1];
                  if (v125[1] < 0)
                  {
                    int v132 = v125[2];
                    if (v132 < 0)
                    {
                      v238[0] = 0;
                      int v127 = sub_1B0DA69F4(v125, v238);
                      int v126 = v238[0] & 0x7FFFFFFF;
                    }
                    else
                    {
                      int v126 = v132 & 0x7F | (v126 << 14) & 0x1FC07F | ((v130 & 0x7F) << 7);
                      int v127 = 3;
                    }
                  }
                  else
                  {
                    int v126 = ((v126 & 0x7F) << 7) | v130;
                    int v127 = 2;
                  }
                }
                else
                {
                  int v127 = 1;
                }
                v68 += v127;
                *(_DWORD *)(v22 + 136 * v29 + 172) = v126 + v69;
                uint64_t v128 = *v57;
              }
              *(_DWORD *)(v22 + 136 * v29 + 168) = v68;
              uint64_t v138 = *v217;
              uint64_t v49 = v227;
              int v51 = v225;
              if (*v217 < *(int *)(v128 + 12))
              {
LABEL_202:
                *long long v217 = v138
                      + sub_1B0DA69F4((char *)(*(void *)v128 + v138), (unint64_t *)(v22 + 136 * v29 + 216));
                uint64_t v55 = v237;
              }
              else
              {
                while (1)
                {
                  uint64_t v55 = v237;
                  sub_1B0DABEE4((uint64_t)v237, v36);
                  uint64_t v128 = *v57;
                  if (!*v57) {
                    break;
                  }
                  if (*(int *)(v128 + 12) > 4)
                  {
                    uint64_t v138 = 4;
                    goto LABEL_202;
                  }
                }
                if (!*v30) {
                  int *v30 = 267;
                }
              }
              sub_1B0DAC13C((uint64_t)v55, (uint64_t)v36);
              goto LABEL_204;
            }
            uint64_t v124 = *v104;
            goto LABEL_171;
          }
LABEL_128:
          *uint64_t v232 = 267;
          uint64_t v55 = v237;
          uint64_t v57 = v230;
          uint64_t v22 = v231;
LABEL_129:
          uint64_t v49 = v227;
          int v51 = v225;
LABEL_204:
          if (*v30 | a3 & 8) {
            goto LABEL_205;
          }
          uint64_t v140 = v22 + 136 * v29;
          int v143 = *(_DWORD *)(v140 + 104);
          int v141 = (int *)(v140 + 104);
          int v142 = v143;
          char v144 = v143 | 1;
          *int v141 = v143 | 1;
          uint64_t v145 = *v57;
          if (!*v57) {
            goto LABEL_205;
          }
          if ((a3 & 2) != 0)
          {
            char v144 = v142 | 3;
            *int v141 = v142 | 3;
          }
          if (v51 >= v222)
          {
            if (v220)
            {
              int v146 = *(_DWORD *)(v22 + 136 * v29 + 160);
              if (v146 != *v224 || *(_DWORD *)(v22 + 136 * v29 + 172) >= *(_DWORD *)(v145 + 12)) {
                *(void *)(v22 + 136 * v29 + 192) = sub_1B0DB2348((uint64_t)v55, v144 & 2, **v36, v146);
              }
            }
          }
          if ((a3 & 2) == 0) {
            goto LABEL_205;
          }
          uint64_t v147 = *(void *)(v22 + 136 * v29 + 192);
          if (!v147 || *(_DWORD *)(*(void *)v55 + 128) != 4)
          {
            uint64_t v158 = *v224;
            uint64_t v149 = v49;
            if (*(_DWORD *)(v22 + 136 * v29 + 160) == v158) {
              uint64_t v159 = *(unsigned int *)(v22 + 136 * v29 + 164);
            }
            else {
              uint64_t v159 = 4;
            }
            uint64_t v160 = *v57;
            uint64_t v161 = (int)v159;
            uint64_t v162 = (int)v159 + 8;
            uint64_t v163 = v159 << 32;
            do
            {
              v163 += 0x100000000;
              if ((*(char *)(*(void *)*v57 + v161) & 0x80000000) == 0) {
                break;
              }
              BOOL v94 = v161++ < v162;
            }
            while (v94);
            uint64_t v164 = v22 + 136 * v29;
            *(void *)(v164 + 128) = v163 >> 32;
            if (*(_DWORD *)(v164 + 172) < *(_DWORD *)(v160 + 12) || *v30) {
              goto LABEL_302;
            }
            unint64_t v223 = 0;
            uint64_t v165 = *v36;
            int v166 = v158 + 1;
            uint64_t v226 = *v36;
            LODWORD(v228) = 0;
            while (2)
            {
              if (v158 >= (int)v165[2])
              {
LABEL_276:
                uint64_t v30 = v232;
                uint64_t v22 = v231;
                uint64_t v150 = v223;
                if (v223) {
                  goto LABEL_277;
                }
LABEL_302:
                uint64_t v49 = v149;
                sub_1B0DAC4AC(v55, (uint64_t)v36);
                goto LABEL_205;
              }
              int v168 = sub_1B0DA6708((uint64_t)v55, v158 + ((unint64_t)*v165 << 37) + 1);
              if (!v168) {
                goto LABEL_249;
              }
              uint64_t v169 = v168;
              uint64_t v170 = v149;
              int v171 = v168[2];
              if (v171 < 4 || (int v172 = v168[3], v172 > v171))
              {
                *uint64_t v232 = 267;
                int v173 = &off_1EB21C9E8;
                if (!dword_1EB21C9C0)
                {
                  int v167 = v237;
                  uint64_t v149 = v170;
                  goto LABEL_247;
                }
                int v167 = v237;
                uint64_t v149 = v170;
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v169);
                --qword_1EB220150;
                off_1EB21C9E8(v169);
                uint64_t v169 = (_DWORD *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  int v173 = &xmmword_1EB21CA50;
LABEL_247:
                  (*v173)(v169);
                }
                uint64_t v55 = v167;
                uint64_t v165 = v226;
LABEL_249:
                ++v166;
                ++v158;
                if (*v232) {
                  goto LABEL_276;
                }
                continue;
              }
              break;
            }
            BOOL v174 = __rev16(**(unsigned __int16 **)v168) == 0;
            if (v174) {
              int v175 = v228;
            }
            else {
              int v175 = v166;
            }
            LODWORD(v228) = v175;
            uint64_t v176 = v223;
            if (v174) {
              BOOL v177 = v168;
            }
            else {
              BOOL v177 = v223;
            }
            if (!v174) {
              uint64_t v176 = (unsigned __int16 **)v168;
            }
            unint64_t v223 = v176;
            if (v177)
            {
              uint64_t v178 = &off_1EB21C9E8;
              int v221 = v168[3];
              if (!dword_1EB21C9C0) {
                goto LABEL_273;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v177);
              --qword_1EB220150;
              off_1EB21C9E8(v177);
              BOOL v177 = (_DWORD *)xmmword_1EB2201B0;
              int v172 = v221;
              if ((void)xmmword_1EB2201B0)
              {
                uint64_t v178 = &xmmword_1EB21CA50;
LABEL_273:
                (*v178)(v177);
                int v172 = v221;
              }
            }
            BOOL v94 = v172 < v171;
            uint64_t v149 = v170;
            uint64_t v55 = v237;
            uint64_t v57 = v230;
            if (v94) {
              goto LABEL_276;
            }
            goto LABEL_249;
          }
          uint64_t v228 = *(int *)(v147 + 28);
          uint64_t v148 = (unsigned __int16 **)sub_1B0DA6708((uint64_t)v55, v228 + ((unint64_t)**v36 << 37));
          uint64_t v149 = v49;
          if (!v148) {
            goto LABEL_302;
          }
          uint64_t v150 = v148;
          int v151 = *((_DWORD *)v148 + 2);
          if (v151 < 4 || *((_DWORD *)v148 + 3) > v151)
          {
            int *v30 = 267;
            uint64_t v152 = (void (**)(unsigned __int16 **))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              char v153 = v148;
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v153);
              --qword_1EB220150;
              off_1EB21C9E8(v153);
              if (!(void)xmmword_1EB2201B0) {
                goto LABEL_302;
              }
              uint64_t v150 = (unsigned __int16 **)xmmword_1EB2201B0;
              uint64_t v152 = (void (**)(unsigned __int16 **))&xmmword_1EB21CA50;
            }
            (*v152)(v150);
            goto LABEL_302;
          }
LABEL_277:
          uint64_t v179 = *v57;
          if (v179)
          {
            uint64_t v180 = &off_1EB21C9E8;
            if (!dword_1EB21C9C0) {
              goto LABEL_283;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v179);
            --qword_1EB220150;
            off_1EB21C9E8(v179);
            uint64_t v179 = xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              uint64_t v180 = &xmmword_1EB21CA50;
LABEL_283:
              (*v180)(v179);
            }
          }
          uint64_t v181 = v55;
          void *v230 = v150;
          *unint64_t v224 = v228;
          unsigned int v182 = __rev16(**v150);
          if (*((_DWORD *)v150 + 3) >= (signed int)v182)
          {
            *(void *)(v22 + 136 * v29 + 128) = sub_1B0DA69F4((char *)*v150 + v182, (unint64_t *)(v22 + 136 * v29 + 216))+ v182;
            int v183 = *((_DWORD *)v150 + 2);
            uint64_t v184 = *((int *)v150 + 3);
            if ((int)v184 >= v183)
            {
              int v186 = v183 + 1;
              uint64_t v188 = v22 + 136 * v29;
            }
            else
            {
              int v185 = (char *)*v150 + v184;
              int v186 = *v185;
              if (*v185 < 0)
              {
                int v187 = v185[1];
                if (v185[1] < 0)
                {
                  int v190 = v185[2];
                  if (v190 < 0)
                  {
                    v238[0] = 0;
                    sub_1B0DA69F4(v185, v238);
                    int v186 = v238[0] & 0x7FFFFFFF;
                  }
                  else
                  {
                    int v186 = v190 & 0x7F | (v186 << 14) & 0x1FC07F | ((v187 & 0x7F) << 7);
                  }
                }
                else
                {
                  int v186 = ((v186 & 0x7F) << 7) | v187;
                }
              }
              uint64_t v188 = v22 + 136 * v29;
            }
            *(_DWORD *)(v188 + 172) = v186;
            uint64_t v55 = v181;
            goto LABEL_302;
          }
          uint64_t v49 = v149;
          int *v30 = 267;
          uint64_t v55 = v181;
LABEL_205:
          if ((*(unsigned char *)(v22 + 136 * v29 + 104) & 2) != 0)
          {
            *(void *)(v22 + 136 * v29 + 152) = sub_1B0DB15D4;
            uint64_t v31 = v49;
          }
          else
          {
            uint64_t v31 = v49;
            if (*(_DWORD *)(*(void *)v55 + 92) == 1) {
              uint64_t v139 = sub_1B0DB16A0;
            }
            else {
              uint64_t v139 = sub_1B0DB1ACC;
            }
            *(void *)(v22 + 136 * v29 + 152) = v139;
          }
          uint64_t v154 = (*v36)[8];
          int v27 = a5;
          if ((int)v154 >= 1 && !*v30)
          {
            if (sqlite3_initialize() || (int v155 = (void *)sub_1B0C7FC94(16 * v154)) == 0)
            {
              int *v30 = 7;
              uint64_t v22 = v231;
              int v27 = a5;
            }
            else
            {
              uint64_t v156 = v155;
              bzero(v155, 16 * v154);
              uint64_t v22 = v231;
              uint64_t v157 = v231 + 136 * v29;
              *(void *)(v157 + 136) = v156;
              *(_DWORD *)(v157 + 144) = v154;
LABEL_46:
              int v27 = a5;
            }
          }
LABEL_39:
          ++v29;
          BOOL v94 = v28 <= 1;
          uint64_t v28 = v31;
          unint64_t v26 = v235;
          if (v94)
          {
            int v25 = v29;
            unint64_t v12 = a9;
            goto LABEL_35;
          }
          goto LABEL_40;
        }
        if (v80 < v73 && *(unsigned __int8 *)(v59 + v80 + v74) > v70[v67]) {
          goto LABEL_122;
        }
      }
      if (v68 >= v60)
      {
        if ((a3 & 8) == 0) {
          goto LABEL_140;
        }
        while (1)
        {
          uint64_t v55 = v237;
          sub_1B0DABEE4((uint64_t)v237, v36);
          uint64_t v57 = v230;
          uint64_t v22 = v231;
          char v96 = (uint64_t *)*v230;
          uint64_t v49 = v227;
          int v51 = v225;
          if (!*v230) {
            goto LABEL_204;
          }
          LODWORD(v60) = *((_DWORD *)v96 + 2);
          uint64_t v97 = *((unsigned int *)v96 + 3);
          if ((int)v97 < (int)v60)
          {
            uint64_t v59 = *v96;
            unsigned int v98 = (char *)(*v96 + v97);
            unsigned int v69 = *v98;
            if (*v98 < 0)
            {
              int v129 = v98[1];
              if (v98[1] < 0)
              {
                int v131 = v98[2];
                if (v131 < 0)
                {
                  v238[0] = 0;
                  int v133 = v60;
                  int v134 = sub_1B0DA69F4(v98, v238);
                  LODWORD(v60) = v133;
                  int v99 = v134;
                  unsigned int v69 = v238[0] & 0x7FFFFFFF;
                }
                else
                {
                  unsigned int v69 = v131 & 0x7F | (v69 << 14) & 0x1FC07F | ((v129 & 0x7F) << 7);
                  int v99 = 3;
                }
              }
              else
              {
                unsigned int v69 = ((v69 & 0x7F) << 7) | v129;
                int v99 = 2;
              }
            }
            else
            {
              int v99 = 1;
            }
            uint64_t v57 = v230;
            if (v69 < 4 || v69 >= (uint64_t)(int)v97)
            {
              *uint64_t v232 = 267;
              uint64_t v55 = v237;
              uint64_t v22 = v231;
              goto LABEL_129;
            }
            uint64_t v135 = (char *)(v59 + v69);
            unsigned int v73 = *v135;
            if (*v135 < 0)
            {
              int v137 = v135[1];
              if (v135[1] < 0)
              {
                int v189 = v135[2];
                if (v189 < 0)
                {
                  v238[0] = 0;
                  int v191 = v60;
                  int v136 = sub_1B0DA69F4(v135, v238);
                  LODWORD(v60) = v191;
                  unsigned int v73 = v238[0] & 0x7FFFFFFF;
                }
                else
                {
                  unsigned int v73 = v189 & 0x7F | (v73 << 14) & 0x1FC07F | ((v137 & 0x7F) << 7);
                  int v136 = 3;
                }
              }
              else
              {
                unsigned int v73 = ((v73 & 0x7F) << 7) | v137;
                int v136 = 2;
              }
            }
            else
            {
              int v136 = 1;
            }
            unsigned int v66 = 0;
            unsigned int v68 = v99 + v97;
            unsigned int v74 = v136 + v69;
            goto LABEL_123;
          }
        }
      }
      unint64_t v82 = (char *)(v59 + v68);
      int v83 = *v82;
      if (*v82 < 0)
      {
        int v85 = v82[1];
        if (v82[1] < 0)
        {
          int v86 = v82[2];
          if (v86 < 0)
          {
            v238[0] = 0;
            uint64_t v87 = v60;
            int v84 = sub_1B0DA69F4(v82, v238);
            uint64_t v60 = v87;
            int v70 = a5;
            int v83 = v238[0] & 0x7FFFFFFF;
          }
          else
          {
            int v83 = v86 & 0x7F | (v83 << 14) & 0x1FC07F | ((v85 & 0x7F) << 7);
            int v84 = 3;
          }
        }
        else
        {
          int v83 = ((v83 & 0x7F) << 7) | v85;
          int v84 = 2;
        }
      }
      else
      {
        int v84 = 1;
      }
      v69 += v83;
      if (v69 >= v60) {
        goto LABEL_128;
      }
      v68 += v84;
      unsigned int v63 = v69 + 1;
      uint64_t v88 = (char *)(v59 + v69);
      unsigned int v66 = *v88;
      if (*v88 < 0)
      {
        int v71 = v88[1];
        if (v88[1] < 0)
        {
          int v78 = v88[2];
          if (v78 < 0)
          {
            v238[0] = 0;
            uint64_t v89 = v60;
            int v90 = sub_1B0DA69F4(v88, v238);
            uint64_t v60 = v89;
            int v70 = a5;
            unsigned int v66 = v238[0] & 0x7FFFFFFF;
            unsigned int v63 = v90 + v69;
          }
          else
          {
            unsigned int v66 = v78 & 0x7F | (v66 << 14) & 0x1FC07F | ((v71 & 0x7F) << 7);
            unsigned int v63 = v69 + 3;
          }
        }
        else
        {
          unsigned int v66 = ((v66 & 0x7F) << 7) | v71;
          unsigned int v63 = v69 + 2;
        }
      }
    }
  }
LABEL_303:
  if (*v232) {
    goto LABEL_304;
  }
  int v192 = *(_DWORD *)(v22 + 64);
  if (v192 >= 2)
  {
    do
    {
      int v193 = v192 - 1;
      int v194 = sub_1B0DAC68C(v22, v192 - 1);
      if (v194)
      {
        int v195 = v194;
        if (!*v232) {
          (*(void (**)(_DWORD *, uint64_t, void))(v22 + 136 * v194 + 152))(v237, v22 + 136 * v194 + 96, 0);
        }
        int v196 = *(_DWORD *)(v22 + 64);
        BOOL v197 = __OFADD__(v196, v195);
        int v198 = v196 + v195;
        if (v198 < 0 != v197) {
          ++v198;
        }
        int v199 = v198 >> 1;
        if (v198 >> 1 >= v193)
        {
          do
          {
            if (*v232) {
              break;
            }
            int v201 = sub_1B0DAC68C(v22, v199);
            uint64_t v202 = v22;
            if (v201)
            {
              int v203 = v201;
              (*(void (**)(_DWORD *, uint64_t, void))(v202 + 136 * v201 + 152))(v237, v202 + 136 * v201 + 96, 0);
              int v199 = *(_DWORD *)(v202 + 64) + v203;
            }
            int v200 = v199 >= 0 ? v199 : v199 + 1;
            int v199 = v200 >> 1;
            uint64_t v22 = v202;
          }
          while (v200 >> 1 >= v193);
        }
      }
      BOOL v94 = v192-- <= 2;
    }
    while (!v94);
  }
  unsigned int v204 = *(unsigned __int16 *)(*(void *)(v22 + 88) + 4);
  uint64_t v205 = v22 + 136 * *(unsigned __int16 *)(*(void *)(v22 + 88) + 4);
  uint64_t v206 = *(void *)(v205 + 112);
  *(unsigned char *)(v22 + 20) = v206 == 0;
  *(void *)(v22 + 80) = *(void *)(v205 + 216);
  if (*(unsigned char *)(v22 + 72) && !*v232 && v206 && !*(_DWORD *)(v22 + 136 * v204 + 224)
    || (uint64_t result = sub_1B0DAB7B4(v22), result))
  {
    return sub_1B0DAB298((uint64_t)v237, v22, 0, 0);
  }
  else if (!*(unsigned char *)(v22 + 20))
  {
    uint64_t v207 = v22 + 136 * *(unsigned __int16 *)(*(void *)(v22 + 88) + 4) + 96;
    unsigned int v208 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 56);
    return v208(v22, v207);
  }
  return result;
}

uint64_t sub_1B0DB0BF0(uint64_t result, uint64_t a2)
{
  if (!*(_DWORD *)result)
  {
    uint64_t v3 = **(void **)(a2 + 24);
    int v4 = *(_DWORD *)(v3 + 92);
    if (v4 == 1)
    {
      uint64_t v5 = sub_1B0DB3898;
LABEL_19:
      *(void *)(a2 + 56) = v5;
      return result;
    }
    uint64_t v6 = *(_DWORD **)(a2 + 48);
    if (!v6)
    {
      uint64_t v5 = sub_1B0DB38AC;
      goto LABEL_19;
    }
    if (!*v6)
    {
      uint64_t v5 = sub_1B0DB391C;
      goto LABEL_19;
    }
    if (!v4)
    {
      uint64_t v5 = sub_1B0DB3924;
      goto LABEL_19;
    }
    unint64_t v7 = *(unsigned int *)(v3 + 24);
    if ((int)v7 > 100)
    {
      uint64_t v5 = sub_1B0DB3C74;
      goto LABEL_19;
    }
    *(void *)(a2 + 56) = sub_1B0DB3B80;
    LODWORD(v8) = *(_DWORD *)(a2 + 44);
    if (v8 < v7)
    {
      uint64_t v9 = (_DWORD *)result;
      if (!v8) {
        LODWORD(v8) = 64;
      }
      unint64_t v8 = (int)v8;
      do
      {
        unint64_t v10 = v8;
        v8 *= 2;
      }
      while (v10 < v7);
      uint64_t v11 = *(void *)(a2 + 32);
      uint64_t result = sqlite3_initialize();
      if (result || (uint64_t result = sub_1B0C8E1B8(v11, v10)) == 0)
      {
        *uint64_t v9 = 7;
      }
      else
      {
        *(_DWORD *)(a2 + 44) = v10;
        *(void *)(a2 + 32) = result;
      }
    }
  }
  return result;
}

uint64_t sub_1B0DB0D18(uint64_t result, unsigned __int8 *__s2, int a3, char a4, uint64_t a5)
{
  unsigned int v7 = a3;
  unint64_t v8 = __s2;
  uint64_t v9 = result;
  uint64_t v10 = *(void *)(result + 24);
  if (!__s2 || (a4 & 8) != 0)
  {
    uint64_t result = sub_1B0DB11C0(*(void *)(result + 24), __s2, a3);
    *(_DWORD *)(v9 + 60) = result;
    uint64_t v13 = *(void *)(v9 + 24);
    uint64_t v14 = *(void *)(v13 + 24);
    if (!v14) {
      goto LABEL_21;
    }
    unint64_t v8 = (unsigned __int8 *)(v14 + 48);
    int v15 = strlen((const char *)(v14 + 48));
    sub_1B0DB1498((_DWORD *)v13, v14, 0);
    int v16 = *(_DWORD *)(v14 + 24);
    uint64_t result = strlen((const char *)(v14 + 48));
    if (*(_DWORD *)(v9 + 60)) {
      goto LABEL_21;
    }
    unsigned int v7 = result;
    uint64_t result = sqlite3_initialize();
    if (!result)
    {
      uint64_t result = sub_1B0C7FC94(16);
      if (result)
      {
        uint64_t v21 = result;
        int v22 = v16 - v15 - 49;
        *(void *)uint64_t result = &v8[v15 + 1];
        *(void *)(result + 8) = 0;
        goto LABEL_31;
      }
    }
    *(_DWORD *)(v9 + 60) = 7;
  }
  else
  {
    if (a3 < 1)
    {
      unsigned int v12 = 13;
    }
    else
    {
      unint64_t v11 = a3 + 1;
      unsigned int v12 = 13;
      do
        v12 ^= __s2[(v11-- - 2)] ^ (8 * v12);
      while (v11 > 1);
    }
    uint64_t v17 = *(void *)(*(void *)(v10 + 32) + 8 * (v12 % *(_DWORD *)(v10 + 20)));
    if (v17)
    {
      while (1)
      {
        if (*(_DWORD *)(v17 + 28) + 1 == v7)
        {
          uint64_t result = memcmp((const void *)(v17 + 48), v8, (int)v7);
          if (!result) {
            break;
          }
        }
        uint64_t v17 = *(void *)v17;
        if (!v17) {
          goto LABEL_19;
        }
      }
      uint64_t v18 = *(int *)(v17 + 24);
      uint64_t result = sqlite3_initialize();
      if (!result)
      {
        uint64_t v23 = v18 - (int)(v7 + 49);
        uint64_t result = sub_1B0C7FC94(v23 + 26);
        if (result)
        {
          uint64_t v21 = result;
          uint64_t v31 = result + (int)(-33 - v7);
          uint64_t v24 = result + 16;
          memcpy((void *)(result + 16), (const void *)(v17 + (int)(v7 + 49)), (int)v23);
          int v22 = sub_1B0DB1498((_DWORD *)v10, v17, v31) + v23;
          *(_DWORD *)(v9 + 60) = 0;
          *(void *)uint64_t v21 = v24;
          *(_DWORD *)(a5 + 8) |= 1u;
LABEL_31:
          *(_DWORD *)(a5 + 112) = 0;
          if (!v7) {
            goto LABEL_43;
          }
          LODWORD(v25) = *(_DWORD *)(a5 + 116);
          if (v25 >= v7)
          {
            uint64_t v29 = 0;
            uint64_t v30 = *(void *)(a5 + 104);
            size_t v26 = v7;
          }
          else
          {
            if (!v25) {
              LODWORD(v25) = 64;
            }
            unint64_t v25 = (int)v25;
            size_t v26 = v7;
            do
            {
              unint64_t v27 = v25;
              v25 *= 2;
            }
            while (v27 < v7);
            uint64_t v28 = *(void *)(a5 + 104);
            if (sqlite3_initialize() || (uint64_t v30 = sub_1B0C8E1B8(v28, v27)) == 0)
            {
              *(_DWORD *)(v9 + 60) = 7;
              goto LABEL_43;
            }
            *(_DWORD *)(a5 + 116) = v27;
            *(void *)(a5 + 104) = v30;
            uint64_t v29 = *(int *)(a5 + 112);
          }
          memcpy((void *)(v30 + v29), v8, v26);
          *(_DWORD *)(a5 + 112) += v7;
LABEL_43:
          *(_DWORD *)(v21 + 8) = v22;
          *(_DWORD *)(v21 + 12) = v22;
          *(void *)(a5 + 16) = v21;
          *(void *)(a5 + 32) = sub_1B0DA69F4(*(char **)v21, (unint64_t *)(a5 + 120));
          *(_DWORD *)(a5 + 76) = *(_DWORD *)(v21 + 8);
          if ((a4 & 2) != 0)
          {
            *(_DWORD *)(a5 + 8) |= 2u;
            uint64_t result = sub_1B0DAC4AC((_DWORD *)v9, a5);
          }
          else
          {
            uint64_t result = sub_1B0DAC13C(v9, a5);
          }
          goto LABEL_21;
        }
      }
      int v19 = 7;
    }
    else
    {
LABEL_19:
      int v19 = 0;
    }
    *(_DWORD *)(v9 + 60) = v19;
    *(_DWORD *)(a5 + 8) |= 1u;
  }
LABEL_21:
  if ((*(unsigned char *)(a5 + 8) & 2) != 0)
  {
    uint64_t v20 = sub_1B0DB15D4;
  }
  else if (*(_DWORD *)(*(void *)v9 + 92) == 1)
  {
    uint64_t v20 = sub_1B0DB16A0;
  }
  else
  {
    uint64_t v20 = sub_1B0DB1ACC;
  }
  *(void *)(a5 + 56) = v20;
  return result;
}

void sub_1B0DB105C(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a2 + 4) && !a1[15])
  {
    *(void *)(a3 + 128) = 0;
    *(_OWORD *)(a3 + 96) = 0u;
    *(_OWORD *)(a3 + 112) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    if ((*(unsigned char *)(a3 + 8) & 2) != 0)
    {
      uint64_t v5 = sub_1B0DB15D4;
    }
    else if (*(_DWORD *)(*(void *)a1 + 92) == 1)
    {
      uint64_t v5 = sub_1B0DB16A0;
    }
    else
    {
      uint64_t v5 = sub_1B0DB1ACC;
    }
    *(void *)(a3 + 56) = v5;
    *(void *)a3 = a2;
    *(_DWORD *)(a3 + 12) = *(_DWORD *)(a2 + 4) - 1;
    while (1)
    {
      sub_1B0DABEE4((uint64_t)a1, (unsigned int **)a3);
      if (a1[15]) {
        break;
      }
      uint64_t v6 = *(void *)(a3 + 16);
      if (!v6) {
        break;
      }
      if (*(_DWORD *)(v6 + 8) != 4)
      {
        *(void *)(a3 + 32) = 4;
        *(_DWORD *)(a3 + 72) = *(_DWORD *)(v6 + 12) + 1;
        sub_1B0DB20C8((uint64_t)a1, a3, 0);
        sub_1B0DAC13C((uint64_t)a1, a3);
        uint64_t v7 = *(unsigned int *)(*(void *)a3 + 32);
        if ((int)v7 >= 1 && !a1[15])
        {
          if (sqlite3_initialize() || (unint64_t v8 = (void *)sub_1B0C7FC94(16 * v7)) == 0)
          {
            a1[15] = 7;
          }
          else
          {
            uint64_t v9 = v8;
            bzero(v8, 16 * v7);
            *(void *)(a3 + 40) = v9;
            *(_DWORD *)(a3 + 48) = v7;
          }
        }
        return;
      }
    }
  }
}

uint64_t sub_1B0DB11C0(uint64_t a1, const void *a2, int a3)
{
  *(void *)(a1 + 24) = 0;
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v7 = (uint64_t *)sub_1B0C7FC94(256);
  if (!v7) {
    return 7;
  }
  unint64_t v8 = v7;
  *((_OWORD *)v7 + 14) = 0u;
  *((_OWORD *)v7 + 15) = 0u;
  *((_OWORD *)v7 + 12) = 0u;
  *((_OWORD *)v7 + 13) = 0u;
  *((_OWORD *)v7 + 10) = 0u;
  *((_OWORD *)v7 + 11) = 0u;
  *((_OWORD *)v7 + 8) = 0u;
  *((_OWORD *)v7 + 9) = 0u;
  *((_OWORD *)v7 + 6) = 0u;
  *((_OWORD *)v7 + 7) = 0u;
  *((_OWORD *)v7 + 4) = 0u;
  *((_OWORD *)v7 + 5) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  uint64_t v9 = *(unsigned int *)(a1 + 20);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      for (unint64_t j = *(uint64_t **)(*(void *)(a1 + 32) + 8 * i); j; unint64_t j = (uint64_t *)*j)
      {
        if (!a2 || *((_DWORD *)j + 7) + 1 >= a3 && !memcmp(j + 6, a2, a3))
        {
          j[1] = 0;
          uint64_t v12 = *v8;
          uint64_t v13 = (uint64_t)j;
          uint64_t v14 = v8;
          if (*v8)
          {
            uint64_t v15 = 0;
            uint64_t v13 = (uint64_t)j;
            do
            {
              uint64_t v29 = 0;
              int v16 = &v29;
              do
              {
                if (v13)
                {
                  if (v12)
                  {
                    uint64_t v17 = 48;
                    do
                    {
                      unsigned int v18 = *(unsigned __int8 *)(v13 + v17);
                      unsigned int v19 = *(unsigned __int8 *)(v12 + v17++);
                    }
                    while (v18 == v19);
                    if (v18 > v19)
                    {
                      uint64_t *v16 = v12;
                      int v16 = (uint64_t *)(v12 + 8);
                      uint64_t v12 = *(void *)(v12 + 8);
                    }
                    else
                    {
                      uint64_t *v16 = v13;
                      int v16 = (uint64_t *)(v13 + 8);
                      uint64_t v13 = *(void *)(v13 + 8);
                    }
                    uint64_t *v16 = 0;
                  }
                  else
                  {
                    uint64_t *v16 = v13;
                    uint64_t v13 = 0;
                  }
                }
                else
                {
                  uint64_t *v16 = v12;
                  uint64_t v12 = 0;
                }
              }
              while (v13 | v12);
              uint64_t v13 = v29;
              v8[v15++] = 0;
              uint64_t v14 = &v8[v15];
              uint64_t v12 = *v14;
            }
            while (*v14);
          }
          *uint64_t v14 = v13;
        }
      }
    }
  }
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  do
  {
    uint64_t v22 = 0;
    uint64_t v23 = v8[v20];
    uint64_t v29 = 0;
    if (v21 | v23)
    {
      uint64_t v24 = &v29;
      do
      {
        if (v21)
        {
          if (v23)
          {
            uint64_t v25 = 48;
            do
            {
              unsigned int v26 = *(unsigned __int8 *)(v21 + v25);
              unsigned int v27 = *(unsigned __int8 *)(v23 + v25++);
            }
            while (v26 == v27);
            if (v26 > v27)
            {
              uint64_t *v24 = v23;
              uint64_t v24 = (uint64_t *)(v23 + 8);
              uint64_t v23 = *(void *)(v23 + 8);
            }
            else
            {
              uint64_t *v24 = v21;
              uint64_t v24 = (uint64_t *)(v21 + 8);
              uint64_t v21 = *(void *)(v21 + 8);
            }
            uint64_t *v24 = 0;
          }
          else
          {
            uint64_t *v24 = v21;
            uint64_t v21 = 0;
          }
        }
        else
        {
          uint64_t *v24 = v23;
          uint64_t v23 = 0;
        }
      }
      while (v21 | v23);
      uint64_t v22 = v29;
    }
    ++v20;
    uint64_t v21 = v22;
  }
  while (v20 != 32);
  uint64_t v28 = (uint64_t (**)(uint64_t *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
    --qword_1EB220150;
    off_1EB21C9E8(v8);
    unint64_t v8 = (uint64_t *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_51;
    }
    uint64_t v28 = (uint64_t (**)(uint64_t *))&xmmword_1EB21CA50;
  }
  (*v28)(v8);
LABEL_51:
  uint64_t result = 0;
  *(void *)(a1 + 24) = v22;
  return result;
}

uint64_t sub_1B0DB1498(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a2 + 20);
  if (!v3) {
    return 0;
  }
  if (a3) {
    uint64_t v6 = a3;
  }
  else {
    uint64_t v6 = a2;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  if (*a1 == 1)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v8 = v7 + 1;
      *(unsigned char *)(v6 + v7) = 0;
      if (*(unsigned char *)(a2 + 33))
      {
        v7 += 2;
        *(unsigned char *)(v6 + v8) = 0;
      }
      else
      {
        ++v7;
      }
    }
  }
  else
  {
    int v10 = v7 + ~v3;
    unint64_t v11 = *(unsigned __int8 *)(a2 + 32) + 2 * v10;
    if ((int)v11 > 127)
    {
      if (v11 >= 0x4000)
      {
        if (v11 >> 28) {
          int v13 = 5;
        }
        else {
          int v13 = 4;
        }
        if (v11 >= 0x200000) {
          int v12 = v13;
        }
        else {
          int v12 = 3;
        }
      }
      else
      {
        int v12 = 2;
      }
      memmove((void *)(v6 + v12 + (int)v3), (const void *)(v3 + v6 + 1), v10);
      uint64_t v14 = (int8x8_t *)(v6 + *(int *)(a2 + 20));
      if (v11 >> 14)
      {
        sub_1B0D1DC5C(v14, v11);
      }
      else
      {
        v14->i8[0] = (v11 >> 7) | 0x80;
        v14->i8[1] = v11 & 0x7F;
      }
      int v7 = v7 + v12 - 1;
    }
    else
    {
      *(unsigned char *)(v6 + v3) = *(unsigned char *)(a2 + 32) + 2 * v10;
    }
  }
  uint64_t result = (v7 - *(_DWORD *)(a2 + 24));
  if (!a3)
  {
    *(_WORD *)(a2 + 32) = 0;
    *(_DWORD *)(a2 + 20) = 0;
    *(_DWORD *)(a2 + 24) = v7;
  }
  return result;
}

unsigned __int16 **sub_1B0DB15D4(unsigned __int16 **a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 80);
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5)
  {
    return sub_1B0DAB998(a1, (unsigned int **)a2);
  }
  else
  {
    uint64_t v7 = **(void **)(a2 + 16);
    unint64_t v10 = 0;
    *(_DWORD *)(a2 + 80) = v6;
    *(void *)(a2 + 32) = *(int *)(*(void *)(a2 + 88) + 4 * v6);
    sub_1B0DAC13C((uint64_t)a1, a2);
    int v8 = *(_DWORD *)(a2 + 32);
    if (*((_DWORD *)*a1 + 23) != 1) {
      v8 += *(_DWORD *)(a2 + 128);
    }
    uint64_t result = (unsigned __int16 **)sub_1B0DA69F4((char *)(v7 + v8), &v10);
    *(void *)(a2 + 120) -= v10;
  }
  return result;
}

uint64_t sub_1B0DB16A0(uint64_t result, uint64_t a2, _DWORD *a3)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(a2 + 32);
  if (*(void *)a2)
  {
    if (*(_DWORD *)(*(void *)(a2 + 16) + 12) <= v6)
    {
      uint64_t result = sub_1B0DABEE4(result, (unsigned int **)a2);
      if (*(_DWORD *)(v5 + 60)) {
        return result;
      }
      uint64_t v21 = *(void *)(a2 + 16);
      if (!v21) {
        return result;
      }
      *(void *)(a2 + 120) = 0;
      if (*(void *)a2)
      {
        while (1)
        {
          int v22 = *(_DWORD *)(v21 + 12);
          BOOL v7 = v22 < 5;
          if (v22 > 4) {
            break;
          }
          uint64_t result = sub_1B0DABEE4(v5, (unsigned int **)a2);
          if (*(_DWORD *)(v5 + 60)) {
            return result;
          }
          uint64_t v21 = *(void *)(a2 + 16);
          if (!v21) {
            return result;
          }
          *(void *)(a2 + 120) = 0;
          int v6 = 4;
          if (!*(void *)a2) {
            goto LABEL_5;
          }
        }
        int v6 = 4;
      }
      else
      {
        BOOL v7 = 1;
        int v6 = 4;
      }
    }
    else
    {
      BOOL v7 = 0;
    }
  }
  else
  {
    BOOL v7 = 1;
  }
LABEL_5:
  if (v6 >= *(_DWORD *)(a2 + 76))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0)
    {
      if (!v7)
      {
        uint64_t v25 = *(uint64_t **)(a2 + 16);
        uint64_t v26 = *v25;
        unsigned int v27 = (char *)(*v25 + *((int *)v25 + 3));
        int v28 = *v27;
        if (*v27 < 0)
        {
          int v29 = v27[1];
          if (v27[1] < 0)
          {
            int v32 = v27[2];
            if (v32 < 0)
            {
              unint64_t v38 = 0;
              sub_1B0DA69F4(v27, &v38);
              int v28 = v38 & 0x7FFFFFFF;
            }
            else
            {
              int v28 = v32 & 0x7F | (v28 << 14) & 0x1FC07F | ((v29 & 0x7F) << 7);
            }
          }
          else
          {
            int v28 = ((v28 & 0x7F) << 7) | v29;
          }
        }
        if (v6 == v28)
        {
          int v33 = 0;
        }
        else
        {
          uint64_t v34 = (char *)(v26 + v6);
          int v33 = *v34;
          if (*v34 < 0)
          {
            int v36 = v34[1];
            if (v34[1] < 0)
            {
              int v37 = v34[2];
              if (v37 < 0)
              {
                unint64_t v38 = 0;
                int v35 = sub_1B0DA69F4(v34, &v38);
                int v33 = v38 & 0x7FFFFFFF;
              }
              else
              {
                int v33 = v37 & 0x7F | (v33 << 14) & 0x1FC07F | ((v36 & 0x7F) << 7);
                int v35 = 3;
              }
            }
            else
            {
              int v33 = ((v33 & 0x7F) << 7) | v36;
              int v35 = 2;
            }
          }
          else
          {
            int v35 = 1;
          }
          v6 += v35;
        }
        *(void *)(a2 + 32) = v6;
        sub_1B0DB20C8(v5, a2, v33);
        if (!a3) {
          goto LABEL_61;
        }
LABEL_60:
        *a3 = 1;
        goto LABEL_61;
      }
      uint64_t v8 = *(void *)(v5 + 24);
      uint64_t v9 = *(void *)(*(void *)(v8 + 24) + 8);
      *(void *)(v8 + 24) = v9;
      if (v9)
      {
        unint64_t v10 = (const void *)(v9 + 48);
        int v11 = strlen((const char *)(v9 + 48));
        sub_1B0DB1498((_DWORD *)v8, v9, 0);
        int v12 = (char *)(v9 + 48 + v11 + 1);
        uint64_t v13 = *(void *)(a2 + 16);
        int v14 = *(_DWORD *)(v9 + 24) - v11 - 49;
        *(void *)uint64_t v13 = v12;
        *(_DWORD *)(v13 + 8) = v14;
        *(_DWORD *)(v13 + 12) = v14;
        *(_DWORD *)(a2 + 76) = v14;
        unsigned int v15 = strlen((const char *)(v9 + 48));
        unsigned int v16 = v15;
        *(_DWORD *)(a2 + 112) = 0;
        if (!v15) {
          goto LABEL_41;
        }
        LODWORD(v17) = *(_DWORD *)(a2 + 116);
        if (v17 >= v15)
        {
          uint64_t v30 = 0;
          uint64_t v31 = *(void *)(a2 + 104);
          size_t v18 = v16;
        }
        else
        {
          if (!v17) {
            LODWORD(v17) = 64;
          }
          unint64_t v17 = (int)v17;
          size_t v18 = v15;
          do
          {
            unint64_t v19 = v17;
            v17 *= 2;
          }
          while (v19 < v15);
          uint64_t v20 = *(void *)(a2 + 104);
          if (sqlite3_initialize() || (uint64_t v31 = sub_1B0C8E1B8(v20, v19)) == 0)
          {
            *(_DWORD *)(v5 + 60) = 7;
            goto LABEL_41;
          }
          *(_DWORD *)(a2 + 116) = v19;
          *(void *)(a2 + 104) = v31;
          uint64_t v30 = *(int *)(a2 + 112);
        }
        memcpy((void *)(v31 + v30), v10, v18);
        *(_DWORD *)(a2 + 112) += v16;
LABEL_41:
        *(void *)(a2 + 32) = sub_1B0DA69F4(v12, (unint64_t *)(a2 + 120));
        if (!a3) {
          goto LABEL_61;
        }
        goto LABEL_60;
      }
    }
    uint64_t v23 = *(void *)(a2 + 16);
    if (v23)
    {
      uint64_t v24 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v23);
        --qword_1EB220150;
        uint64_t result = off_1EB21C9E8(v23);
        uint64_t v23 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_33;
        }
        uint64_t v24 = &xmmword_1EB21CA50;
      }
      uint64_t result = (*v24)(v23);
    }
LABEL_33:
    *(void *)(a2 + 16) = 0;
    return result;
  }
  unint64_t v38 = 0;
  *(void *)(a2 + 32) = (int)(v6 + sub_1B0DA69F4((char *)(**(void **)(a2 + 16) + v6), &v38));
  *(void *)(a2 + 120) += v38;
LABEL_61:

  return sub_1B0DAC13C(v5, a2);
}

uint64_t sub_1B0DB1ACC(uint64_t result, uint64_t a2, _DWORD *a3)
{
  uint64_t v5 = result;
  int v6 = *(uint64_t **)(a2 + 16);
  uint64_t v7 = *((int *)v6 + 3);
  int v8 = *(_DWORD *)(a2 + 128) + *(_DWORD *)(a2 + 32);
  if (v8 >= (int)v7)
  {
    if (*(void *)a2)
    {
      LODWORD(v13) = 0;
      int v14 = 0;
      while (!v13)
      {
        uint64_t result = sub_1B0DABEE4(v5, (unsigned int **)a2);
        unsigned int v15 = *(unsigned __int16 ***)(a2 + 16);
        if (!v15) {
          return result;
        }
        unsigned int v16 = (char *)*v15;
        LODWORD(v13) = __rev16(**v15);
        int v17 = *((_DWORD *)v15 + 3);
        if (v13) {
          BOOL v18 = v17 <= (int)v13;
        }
        else {
          BOOL v18 = 1;
        }
        if (v18)
        {
          if (*((_DWORD *)v15 + 2) > v17)
          {
            unint64_t v19 = &v16[v17];
            LODWORD(v13) = *v19;
            if (*v19 < 0)
            {
              int v22 = v19[1];
              if (v19[1] < 0)
              {
                int v24 = v19[2];
                if (v24 < 0)
                {
                  unint64_t v57 = 0;
                  uint64_t result = sub_1B0DA69F4(v19, &v57);
                  LODWORD(v13) = v57 & 0x7FFFFFFF;
                }
                else
                {
                  LODWORD(v13) = v24 & 0x7F | (v13 << 14) & 0x1FC07F | ((v22 & 0x7F) << 7);
                  uint64_t result = 3;
                }
              }
              else
              {
                LODWORD(v13) = ((v13 & 0x7F) << 7) | v22;
                uint64_t result = 2;
              }
            }
            else
            {
              uint64_t result = 1;
            }
            *(void *)(a2 + 32) = v13;
            *(_DWORD *)(a2 + 72) = result + v17;
            *(_DWORD *)(a2 + 76) = v13;
            int v14 = 1;
          }
        }
        else
        {
          uint64_t result = sub_1B0DA69F4(&v16[v13], (unint64_t *)(a2 + 120));
          uint64_t v13 = (result + v13);
          *(void *)(a2 + 32) = v13;
          int v17 = *((_DWORD *)v15 + 3);
          if (*((_DWORD *)v15 + 2) > v17)
          {
            uint64_t v20 = (char *)*v15 + v17;
            int v21 = *v20;
            if (*v20 < 0)
            {
              int v23 = v20[1];
              if (v20[1] < 0)
              {
                int v25 = v20[2];
                if (v25 < 0)
                {
                  unint64_t v57 = 0;
                  uint64_t result = sub_1B0DA69F4(v20, &v57);
                  *(_DWORD *)(a2 + 76) = v57 & 0x7FFFFFFF;
                }
                else
                {
                  *(_DWORD *)(a2 + 76) = v25 & 0x7F | (v21 << 14) & 0x1FC07F | ((v23 & 0x7F) << 7);
                  uint64_t result = 3;
                }
              }
              else
              {
                *(_DWORD *)(a2 + 76) = ((v21 & 0x7F) << 7) | v23;
                uint64_t result = 2;
              }
            }
            else
            {
              *(_DWORD *)(a2 + 76) = v21;
              uint64_t result = 1;
            }
            *(_DWORD *)(a2 + 72) = result + v17;
            int v17 = *((_DWORD *)v15 + 3);
          }
        }
        if ((int)v13 > v17)
        {
          *(_DWORD *)(v5 + 60) = 267;
          return result;
        }
      }
      int v6 = *(uint64_t **)(a2 + 16);
      if (!v6) {
        return result;
      }
      int v11 = 0;
      if (v14)
      {
LABEL_80:
        if ((*(unsigned char *)(a2 + 8) & 1) == 0)
        {
          sub_1B0DB20C8(v5, a2, v11);
          uint64_t result = sub_1B0DAC13C(v5, a2);
          if (a3) {
            *a3 = 1;
          }
          return result;
        }
LABEL_83:
        uint64_t v56 = (uint64_t (**)(uint64_t *))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
          --qword_1EB220150;
          uint64_t result = off_1EB21C9E8(v6);
          int v6 = (uint64_t *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_89;
          }
          uint64_t v56 = (uint64_t (**)(uint64_t *))&xmmword_1EB21CA50;
        }
        uint64_t result = (*v56)(v6);
LABEL_89:
        *(void *)(a2 + 16) = 0;
        return result;
      }
      goto LABEL_47;
    }
    if (*(unsigned char *)(a2 + 8)) {
      goto LABEL_83;
    }
    uint64_t v29 = *(void *)(result + 24);
    uint64_t v30 = *(void *)(*(void *)(v29 + 24) + 8);
    *(void *)(v29 + 24) = v30;
    if (!v30) {
      goto LABEL_83;
    }
    uint64_t v31 = (const void *)(v30 + 48);
    int v32 = strlen((const char *)(v30 + 48));
    sub_1B0DB1498((_DWORD *)v29, v30, 0);
    int v33 = (char *)(v30 + 48 + v32 + 1);
    uint64_t v34 = *(void *)(a2 + 16);
    int v35 = *(_DWORD *)(v30 + 24) - v32;
    *(void *)uint64_t v34 = v33;
    *(_DWORD *)(v34 + 8) = v35 - 49;
    *(_DWORD *)(v34 + 12) = v35 - 49;
    *(_DWORD *)(a2 + 76) = v35 - 48;
    unsigned int v36 = strlen((const char *)(v30 + 48));
    unsigned int v37 = v36;
    *(_DWORD *)(a2 + 112) = 0;
    if (v36)
    {
      LODWORD(v38) = *(_DWORD *)(a2 + 116);
      if (v38 >= v36)
      {
        uint64_t v52 = 0;
        uint64_t v53 = *(void *)(a2 + 104);
        size_t v39 = v37;
      }
      else
      {
        if (!v38) {
          LODWORD(v38) = 64;
        }
        unint64_t v38 = (int)v38;
        size_t v39 = v36;
        do
        {
          unint64_t v40 = v38;
          v38 *= 2;
        }
        while (v40 < v36);
        uint64_t v41 = *(void *)(a2 + 104);
        if (sqlite3_initialize() || (uint64_t v53 = sub_1B0C8E1B8(v41, v40)) == 0)
        {
          *(_DWORD *)(v5 + 60) = 7;
          goto LABEL_74;
        }
        *(_DWORD *)(a2 + 116) = v40;
        *(void *)(a2 + 104) = v53;
        uint64_t v52 = *(int *)(a2 + 112);
      }
      memcpy((void *)(v53 + v52), v31, v39);
      *(_DWORD *)(a2 + 112) += v37;
    }
LABEL_74:
    uint64_t result = sub_1B0DA69F4(v33, (unint64_t *)(a2 + 120));
    uint64_t v42 = result;
    *(void *)(a2 + 32) = result;
    *a3 = 1;
    int v6 = *(uint64_t **)(a2 + 16);
    if (!v6) {
      return result;
    }
    goto LABEL_48;
  }
  uint64_t v9 = *v6;
  if (v8 < *(_DWORD *)(a2 + 76))
  {
    unint64_t v57 = 0;
    int v10 = sub_1B0DA69F4((char *)(v9 + v8), &v57);
    int v11 = 0;
    int v12 = 0;
    v8 += v10;
    *(void *)(a2 + 120) += v57;
    goto LABEL_79;
  }
  uint64_t v26 = v9 + v7;
  int v27 = *(char *)(v9 + v7);
  int v28 = *(unsigned __int8 *)(v9 + v7);
  if (v27 < 0)
  {
    int v45 = *(unsigned __int8 *)(v26 + 1);
    if (*(char *)(v26 + 1) < 0)
    {
      int v50 = *(char *)(v26 + 2);
      if (v50 < 0)
      {
        unint64_t v57 = 0;
        sub_1B0DA69F4((char *)v26, &v57);
        if (v8 == (v57 & 0x7FFFFFFF)) {
          goto LABEL_34;
        }
      }
      else if (v8 == (v50 & 0x7F | (v28 << 14) & 0x1FC07F | ((v45 & 0x7F) << 7)))
      {
        goto LABEL_34;
      }
    }
    else if (v8 == (((v28 & 0x7F) << 7) | v45))
    {
      goto LABEL_34;
    }
LABEL_53:
    unsigned int v46 = (char *)(v9 + v8);
    int v11 = *v46;
    if (*v46 < 0)
    {
      int v49 = v46[1];
      if (v46[1] < 0)
      {
        int v54 = v46[2];
        if (v54 < 0)
        {
          unint64_t v57 = 0;
          int v47 = sub_1B0DA69F4(v46, &v57);
          int v11 = v57 & 0x7FFFFFFF;
        }
        else
        {
          int v11 = v54 & 0x7F | (v11 << 14) & 0x1FC07F | ((v49 & 0x7F) << 7);
          int v47 = 3;
        }
      }
      else
      {
        int v11 = ((v11 & 0x7F) << 7) | v49;
        int v47 = 2;
      }
    }
    else
    {
      int v47 = 1;
    }
    v8 += v47;
    goto LABEL_78;
  }
  if (v8 != v28) {
    goto LABEL_53;
  }
LABEL_34:
  int v11 = 0;
LABEL_78:
  int v12 = 1;
LABEL_79:
  *(void *)(a2 + 32) = v8;
  if (v12) {
    goto LABEL_80;
  }
LABEL_47:
  uint64_t v42 = *(void *)(a2 + 32);
LABEL_48:
  uint64_t v43 = *v6;
  *(void *)(a2 + 32) = v42 + 1;
  uint64_t result = v43 + v42;
  unsigned int v44 = *(char *)(v43 + v42);
  if ((v44 & 0x80000000) != 0)
  {
    *(void *)(a2 + 32) = v42;
    unsigned int v44 = *(unsigned __int8 *)result;
    if (*(char *)result < 0)
    {
      int v51 = *(unsigned __int8 *)(result + 1);
      if (*(char *)(result + 1) < 0)
      {
        int v55 = *(char *)(result + 2);
        if (v55 < 0)
        {
          unint64_t v57 = 0;
          uint64_t result = sub_1B0DA69F4((char *)result, &v57);
          unsigned int v44 = v57 & 0x7FFFFFFF;
          uint64_t v48 = result;
        }
        else
        {
          unsigned int v44 = v55 & 0x7F | (v44 << 14) & 0x1FC07F | ((v51 & 0x7F) << 7);
          uint64_t v48 = 3;
        }
      }
      else
      {
        unsigned int v44 = ((v44 & 0x7F) << 7) | v51;
        uint64_t v48 = 2;
      }
    }
    else
    {
      uint64_t v48 = 1;
    }
    *(void *)(a2 + 32) = v48 + v42;
  }
  else
  {
    unsigned int v44 = v44;
  }
  *(unsigned char *)(a2 + 132) = v44 & 1;
  *(_DWORD *)(a2 + 128) = v44 >> 1;
  return result;
}

char *sub_1B0DB20C8(uint64_t a1, uint64_t a2, int a3)
{
  int v6 = *(uint64_t **)(a2 + 16);
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t result = (char *)(*v6 + v8);
  unsigned int v10 = *result;
  if (*result < 0)
  {
    int v12 = result[1];
    if (result[1] < 0)
    {
      int v13 = result[2];
      if (v13 < 0)
      {
        unint64_t v32 = 0;
        uint64_t result = (char *)sub_1B0DA69F4(result, &v32);
        unsigned int v10 = v32 & 0x7FFFFFFF;
        uint64_t v11 = result;
      }
      else
      {
        unsigned int v10 = v13 & 0x7F | (v10 << 14) & 0x1FC07F | ((v12 & 0x7F) << 7);
        uint64_t v11 = 3;
      }
    }
    else
    {
      unsigned int v10 = ((v10 & 0x7F) << 7) | v12;
      uint64_t v11 = 2;
    }
  }
  else
  {
    uint64_t v11 = 1;
  }
  uint64_t v14 = v11 + v8;
  size_t v15 = v10;
  uint64_t v16 = v14 + v10;
  if (v16 > *((int *)v6 + 3) || (v10 ? (BOOL v17 = *(_DWORD *)(a2 + 112) < a3) : (BOOL v17 = 1), v17))
  {
LABEL_14:
    *(_DWORD *)(a1 + 60) = 267;
    return result;
  }
  *(_DWORD *)(a2 + 112) = a3;
  unint64_t v18 = v10 + a3;
  LODWORD(v19) = *(_DWORD *)(a2 + 116);
  if (v18 <= v19)
  {
    uint64_t v22 = *(void *)(a2 + 104);
  }
  else
  {
    if (!v19) {
      LODWORD(v19) = 64;
    }
    unint64_t v19 = (int)v19;
    do
    {
      unint64_t v20 = v19;
      v19 *= 2;
    }
    while (v20 < v18);
    uint64_t v21 = *(void *)(a2 + 104);
    if (sqlite3_initialize() || (uint64_t v22 = sub_1B0C8E1B8(v21, v20)) == 0)
    {
      *(_DWORD *)(a1 + 60) = 7;
      goto LABEL_25;
    }
    *(_DWORD *)(a2 + 116) = v20;
    *(void *)(a2 + 104) = v22;
    a3 = *(_DWORD *)(a2 + 112);
  }
  memcpy((void *)(v22 + a3), (const void *)(v7 + v14), v15);
  *(_DWORD *)(a2 + 112) += v15;
LABEL_25:
  *(_DWORD *)(a2 + 64) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a2 + 68) = v16;
  *(void *)(a2 + 32) = v16;
  uint64_t v23 = *(int *)(a2 + 72);
  uint64_t v24 = *(void *)(a2 + 16);
  int v25 = *(_DWORD *)(v24 + 8);
  if ((int)v23 >= v25)
  {
    int v29 = v25 + 1;
  }
  else
  {
    uint64_t v26 = v7 + v23;
    int v27 = *(unsigned __int8 *)(v7 + v23);
    if (*(char *)(v7 + v23) < 0)
    {
      int v30 = *(unsigned __int8 *)(v26 + 1);
      if (*(char *)(v26 + 1) < 0)
      {
        int v31 = *(char *)(v26 + 2);
        if (v31 < 0)
        {
          unint64_t v32 = 0;
          int v28 = sub_1B0DA69F4((char *)v26, &v32);
          int v27 = v32 & 0x7FFFFFFF;
        }
        else
        {
          int v27 = v31 & 0x7F | (v27 << 14) & 0x1FC07F | ((v30 & 0x7F) << 7);
          int v28 = 3;
        }
      }
      else
      {
        int v27 = ((v27 & 0x7F) << 7) | v30;
        int v28 = 2;
      }
    }
    else
    {
      int v28 = 1;
    }
    int v29 = *(_DWORD *)(a2 + 76) + v27;
    *(_DWORD *)(a2 + 72) = v28 + v23;
  }
  *(_DWORD *)(a2 + 76) = v29;
  if (v16 < *(int *)(v24 + 12))
  {
LABEL_41:
    uint64_t result = (char *)sub_1B0DA69F4((char *)(*(void *)v24 + v16), (unint64_t *)(a2 + 120));
    *(void *)(a2 + 32) = v16 + result;
    return result;
  }
  uint64_t v16 = 4;
  while (1)
  {
    uint64_t result = (char *)sub_1B0DABEE4(a1, (unsigned int **)a2);
    uint64_t v24 = *(void *)(a2 + 16);
    if (!v24) {
      break;
    }
    if (*(int *)(v24 + 12) > 4) {
      goto LABEL_41;
    }
  }
  if (!*(_DWORD *)(a1 + 60)) {
    goto LABEL_14;
  }
  return result;
}

int *sub_1B0DB2348(uint64_t a1, int a2, uint64_t a3, int a4)
{
  if (*(_DWORD *)(a1 + 60))
  {
    int v4 = 0;
LABEL_30:
    sub_1B0DA8624(v4);
    return 0;
  }
  int v5 = a3;
  uint64_t v8 = 0;
  int v4 = 0;
  uint64_t v9 = (a3 << 37) + a4 + 0x1000000000;
  while (!sqlite3_initialize())
  {
    uint64_t v11 = sub_1B0C8E1B8((uint64_t)v4, 32 * v8 + 40);
    if (!v11) {
      break;
    }
    int v12 = (int *)v11;
    uint64_t v13 = v11 + 32 * v8;
    *(_OWORD *)(v13 + 24) = 0u;
    *(_OWORD *)(v13 + 8) = 0u;
    uint64_t v14 = sub_1B0DA6708(a1, v9 + (v8 << 31));
    *(void *)(v13 + 8) = v14;
    if (v14) {
      BOOL v15 = (**(unsigned char **)v14 & 1) == 0;
    }
    else {
      BOOL v15 = 0;
    }
    *int v12 = ++v8;
    int v10 = *(_DWORD *)(a1 + 60);
    int v4 = v12;
    if (v10 | v15) {
      goto LABEL_11;
    }
  }
  int v10 = 7;
  *(_DWORD *)(a1 + 60) = 7;
LABEL_11:
  if (v10) {
    goto LABEL_30;
  }
  v4[1] = v5;
  uint64_t v16 = *v4;
  if (a2)
  {
    if ((int)v16 >= 1)
    {
      while (1)
      {
        uint64_t v17 = v16--;
        while (!sub_1B0DABD64((uint64_t)&v4[8 * v16 + 2]))
          ;
        v4[8 * v16 + 5] = 0;
        if (v17 < 2) {
          break;
        }
        unint64_t v18 = &v4[8 * v16 - 6];
        uint64_t v19 = *(void *)v18;
        if (*(void *)v18)
        {
          unint64_t v20 = &off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
            --qword_1EB220150;
            off_1EB21C9E8(v19);
            uint64_t v19 = xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              goto LABEL_16;
            }
            unint64_t v20 = &xmmword_1EB21CA50;
          }
          (*v20)(v19);
        }
LABEL_16:
        *(_OWORD *)unint64_t v18 = 0u;
        *(_OWORD *)&v4[8 * v16 - 2] = 0u;
        *(void *)unint64_t v18 = sub_1B0DA6708(a1, (((v17 << 31) + 0x7FFFFFFF00000000) & 0x7FFFFFFF80000000)+ ((unint64_t)v4[1] << 37)+ v4[8 * v16 + 7]+ 0x1000000000);
        if (*(_DWORD *)(a1 + 60)) {
          goto LABEL_30;
        }
      }
    }
  }
  else if ((int)v16 >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = (uint64_t)(v4 + 2);
    do
    {
      sub_1B0DABD64(v22);
      ++v21;
      v22 += 32;
    }
    while (v21 < *v4);
  }
  if (*(_DWORD *)(a1 + 60)) {
    goto LABEL_30;
  }
  return v4;
}

uint64_t sub_1B0DB25AC(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = result;
  unint64_t v7 = (*(_DWORD *)(a4 + 8) + *((_DWORD *)a2 + 2));
  if (v7)
  {
    uint64_t v8 = 64;
    do
    {
      unint64_t v9 = v8;
      v8 *= 2;
    }
    while (v9 < v7);
    uint64_t result = sqlite3_initialize();
    if (result || (result = sub_1B0C8E1B8(0, v9), (uint64_t v26 = result) == 0))
    {
      *(_DWORD *)(v6 + 60) = 7;
      return result;
    }
  }
  else
  {
    uint64_t v26 = 0;
    LODWORD(v9) = 0;
  }
  if (!*(_DWORD *)(v6 + 60))
  {
    int v25 = a2;
    if (*((int *)a2 + 2) < 1)
    {
      int64_t v11 = 0;
      uint64_t v10 = 0xFFFFFFFFLL;
    }
    else
    {
      int64_t v27 = 0;
      uint64_t result = sub_1B0DA69F4((char *)*a2, (unint64_t *)&v27);
      uint64_t v10 = result;
      int64_t v11 = v27;
    }
    if (*(int *)(a4 + 8) < 1)
    {
      if ((v10 & 0x80000000) != 0)
      {
        int v15 = 0;
        goto LABEL_46;
      }
      int64_t v13 = 0;
      BOOL v14 = (int)v10 >= 0;
      int v12 = -1;
    }
    else
    {
      int64_t v27 = 0;
      int v12 = sub_1B0DA69F4(*(char **)a4, (unint64_t *)&v27);
      int64_t v13 = v27;
      BOOL v14 = (int)v10 >= 0;
    }
    int v15 = 0;
    int64_t v16 = 0;
    do
    {
      int64_t v17 = v11;
      int64_t v18 = v13;
      if (v14 && (v12 < 0 || v11 < v13))
      {
        uint64_t result = v26 + v15;
        unint64_t v21 = v11 - v16;
        if ((unint64_t)(v11 - v16) > 0x7F)
        {
          if (v21 >> 14)
          {
            uint64_t result = sub_1B0D1DC5C((int8x8_t *)result, v21);
            int v20 = result;
          }
          else
          {
            *(unsigned char *)uint64_t result = (v21 >> 7) | 0x80;
            *(unsigned char *)(result + 1) = v21 & 0x7F;
            int v20 = 2;
          }
        }
        else
        {
          *(unsigned char *)uint64_t result = v21;
          int v20 = 1;
        }
        if ((int)v10 >= *((_DWORD *)v25 + 2))
        {
          uint64_t v10 = 0xFFFFFFFFLL;
        }
        else
        {
          int64_t v27 = 0;
          uint64_t result = sub_1B0DA69F4((char *)(*v25 + v10), (unint64_t *)&v27);
          v10 += result;
          v11 += v27;
        }
        int64_t v13 = v18;
        int64_t v16 = v17;
      }
      else
      {
        uint64_t result = v26 + v15;
        unint64_t v19 = v13 - v16;
        if ((unint64_t)(v13 - v16) > 0x7F)
        {
          if (v19 >> 14)
          {
            uint64_t result = sub_1B0D1DC5C((int8x8_t *)result, v19);
            int v20 = result;
          }
          else
          {
            *(unsigned char *)uint64_t result = (v19 >> 7) | 0x80;
            *(unsigned char *)(result + 1) = v19 & 0x7F;
            int v20 = 2;
          }
        }
        else
        {
          *(unsigned char *)uint64_t result = v19;
          int v20 = 1;
        }
        if (v14 && v11 == v18)
        {
          if ((int)v10 >= *((_DWORD *)v25 + 2))
          {
            uint64_t v10 = 0xFFFFFFFFLL;
            int64_t v11 = v18;
          }
          else
          {
            int64_t v27 = 0;
            uint64_t result = sub_1B0DA69F4((char *)(*v25 + v10), (unint64_t *)&v27);
            v10 += result;
            int64_t v11 = v27 + v18;
          }
        }
        if (v12 >= *(_DWORD *)(a4 + 8))
        {
          int v12 = -1;
          int64_t v13 = v18;
        }
        else
        {
          int64_t v27 = 0;
          uint64_t result = sub_1B0DA69F4((char *)(*(void *)a4 + v12), (unint64_t *)&v27);
          v12 += result;
          int64_t v13 = v27 + v18;
        }
        int64_t v16 = v18;
      }
      v15 += v20;
      BOOL v14 = (int)v10 >= 0;
    }
    while ((v10 & 0x80000000) == 0 || (v12 & 0x80000000) == 0);
LABEL_46:
    uint64_t v22 = *v25;
    *int v25 = v26;
    *((_DWORD *)v25 + 2) = v15;
    *((_DWORD *)v25 + 3) = v9;
    if (!v22) {
      return result;
    }
    uint64_t v23 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v22);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v22);
      uint64_t v22 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        return result;
      }
      uint64_t v23 = &xmmword_1EB21CA50;
    }
    uint64_t v24 = *v23;
    return v24(v22);
  }
  return result;
}

uint64_t sub_1B0DB2944(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B0DA51B4((_DWORD *)(a1 + 60), a4, a2);
}

uint64_t sub_1B0DB2954(uint64_t a1, uint64_t *a2, int a3, uint64_t a4)
{
  v111[129] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (a3 + 1);
  __memset_chk();
  uint64_t result = (uint64_t)&v111[8 * (uint64_t)a3 + 1];
  v111[0] = result;
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  uint64_t v9 = *((unsigned int *)a2 + 2);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = *a2;
    *(void *)(result + 16) = *a2;
    *(void *)uint64_t result = v10 + v9;
    uint64_t result = sub_1B0DB3798(result);
  }
  if (a3 < 1) {
    return result;
  }
  uint64_t v105 = v7;
  uint64_t v11 = 0;
  int v12 = 0;
  int v109 = a3;
  uint64_t v13 = a3;
  do
  {
    int v15 = &v111[8 * v11 + 1];
    *(_OWORD *)int v15 = 0u;
    *((_OWORD *)v15 + 1) = 0u;
    uint64_t v16 = a4 + 16 * v11;
    int v19 = *(_DWORD *)(v16 + 8);
    int64_t v18 = (_DWORD *)(v16 + 8);
    uint64_t v17 = v19;
    if (v19 >= 1)
    {
      uint64_t v20 = *(void *)(a4 + 16 * v11);
      v15[2] = v20;
      *int v15 = v20 + v17;
      uint64_t result = sub_1B0DB3798((uint64_t)&v111[8 * v11 + 1]);
    }
    if (v15[2])
    {
      uint64_t v21 = v111[0];
      if (v111[0] && (uint64_t v22 = v15[1], v22 > *(void *)(v111[0] + 8)))
      {
        do
        {
          uint64_t v23 = v21;
          uint64_t v21 = *(void *)(v21 + 56);
        }
        while (v21 && v22 > *(void *)(v21 + 8));
        BOOL v14 = (void *)(v23 + 56);
      }
      else
      {
        BOOL v14 = v111;
      }
      v111[8 * v11 + 8] = v21;
      *BOOL v14 = v15;
    }
    v12 += *v18;
    ++v11;
  }
  while (v11 != v13);
  if (!v12) {
    return result;
  }
  unint64_t v24 = (v12 + 10 * v109 + *((_DWORD *)a2 + 2) + 9);
  if (v12 + 10 * v109 + *((_DWORD *)a2 + 2) == -9)
  {
    int v103 = a2;
    uint64_t v27 = 0;
    LODWORD(v26) = 0;
  }
  else
  {
    uint64_t v25 = 64;
    do
    {
      unint64_t v26 = v25;
      v25 *= 2;
    }
    while (v26 < v24);
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8(0, v26)) == 0)
    {
      *(_DWORD *)(a1 + 60) = 7;
      return result;
    }
    uint64_t v27 = result;
    int v103 = a2;
  }
  int v102 = v26;
  uint64_t v28 = v111[0];
  uint64_t v104 = v27;
  if (!v111[0])
  {
    int __src = 0;
    int v31 = 0;
    goto LABEL_159;
  }
  int __src = 0;
  LODWORD(v29) = 0;
  uint64_t v30 = 0;
  int v31 = 0;
  while (1)
  {
    uint64_t v34 = (int8x8_t *)(v27 + v31);
    unint64_t v35 = *(void *)(v28 + 8) - v30;
    if (v35 > 0x7F)
    {
      if (v35 >> 14)
      {
        uint64_t result = sub_1B0D1DC5C(v34, v35);
        uint64_t v28 = v111[0];
      }
      else
      {
        v34->i8[0] = (v35 >> 7) | 0x80;
        v34->i8[1] = v35 & 0x7F;
        uint64_t result = 2;
      }
    }
    else
    {
      v34->i8[0] = v35;
      uint64_t result = 1;
    }
    uint64_t v36 = v31 + (uint64_t)(int)result;
    uint64_t v30 = *(void *)(v28 + 8);
    uint64_t v37 = *(void *)(v28 + 56);
    if (v37)
    {
      if (v30 == *(void *)(v37 + 8)) {
        break;
      }
    }
    memcpy((void *)(v27 + (int)v36), *(const void **)(v28 + 16), *(int *)(v28 + 28) + (uint64_t)*(int *)(v28 + 24));
    int v31 = *(_DWORD *)(v28 + 24) + v36 + *(_DWORD *)(v28 + 28);
    uint64_t result = sub_1B0DB3798(v28);
    uint64_t v33 = *(void *)(v28 + 56);
    v111[0] = v33;
    if (!*(void *)(v28 + 16)) {
      goto LABEL_30;
    }
    if (v33 && (uint64_t v48 = *(void *)(v28 + 8), v48 > *(void *)(v33 + 8)))
    {
      do
      {
        uint64_t v49 = v33;
        uint64_t v33 = *(void *)(v33 + 56);
      }
      while (v33 && v48 > *(void *)(v33 + 8));
      unint64_t v32 = (uint64_t *)(v49 + 56);
    }
    else
    {
      unint64_t v32 = v111;
    }
    *(void *)(v28 + 56) = v33;
    *unint64_t v32 = v28;
LABEL_29:
    uint64_t v33 = v111[0];
LABEL_30:
    uint64_t v28 = v33;
    if (!v33) {
      goto LABEL_159;
    }
  }
  int v38 = 0;
  v111[0] = 0;
  int v39 = 8;
  do
  {
    if (*(void *)(v28 + 8) != v30) {
      break;
    }
    *(_DWORD *)(v28 + 40) = 0;
    *(void *)(v28 + 32) = 0;
    uint64_t v41 = *(void *)(v28 + 56);
    int v42 = *(_DWORD *)(v28 + 24);
    uint64_t v43 = *(void *)(v28 + 16) + *(int *)(v28 + 28);
    *(void *)(v28 + 48) = v43;
    uint64_t result = sub_1B0DADA34(v43, v42, (int *)(v28 + 40), (uint64_t *)(v28 + 32));
    int v44 = *(_DWORD *)(v28 + 24);
    uint64_t v45 = *(void *)(v28 + 32);
    if ((v45 & 0x8000000000000000) == 0)
    {
      uint64_t v46 = v111[0];
      if (v111[0] && v45 > *(void *)(v111[0] + 32))
      {
        do
        {
          uint64_t v47 = v46;
          uint64_t v46 = *(void *)(v46 + 56);
        }
        while (v46 && v45 > *(void *)(v46 + 32));
        unint64_t v40 = (uint64_t *)(v47 + 56);
      }
      else
      {
        unint64_t v40 = v111;
      }
      *(void *)(v28 + 56) = v46;
      uint64_t *v40 = v28;
    }
    v39 += v44 + 10;
    ++v38;
    uint64_t v28 = v41;
  }
  while (v41);
  uint64_t v50 = v111[0];
  if (!v111[0] || (uint64_t v51 = *(void *)(v111[0] + 56)) == 0)
  {
    int v97 = 267;
    goto LABEL_156;
  }
  unint64_t v52 = (v39 + 10 * v38);
  uint64_t v106 = v30;
  uint64_t v107 = v36;
  if (v29 >= v52)
  {
    int v54 = __src;
  }
  else
  {
    if (v29) {
      LODWORD(v53) = v29;
    }
    else {
      LODWORD(v53) = 64;
    }
    unint64_t v53 = (int)v53;
    do
    {
      unint64_t v29 = v53;
      v53 *= 2;
    }
    while (v29 < v52);
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8((uint64_t)__src, v29)) == 0)
    {
      int v97 = 7;
LABEL_156:
      uint64_t v98 = a1;
LABEL_157:
      *(_DWORD *)(v98 + 60) = v97;
      goto LABEL_158;
    }
    uint64_t v51 = *(void *)(v50 + 56);
    int v54 = (unsigned char *)result;
  }
  v111[0] = v51;
  unint64_t v55 = *(void *)(v50 + 32);
  if ((v55 & 0x8000000000000000) != 0)
  {
    int v58 = 0;
    unint64_t v55 = 0;
  }
  else
  {
    if ((v55 & 0x7FFFFFFF00000000) != 0)
    {
      *int v54 = 1;
      uint64_t v56 = (int8x8_t *)(v54 + 1);
      if (v55 >> 39)
      {
        if (v55 >> 46)
        {
          int v57 = sub_1B0D1DC5C(v56, HIDWORD(v55));
        }
        else
        {
          v54[1] = (v55 >> 39) | 0x80;
          v54[2] = BYTE4(v55) & 0x7F;
          int v57 = 2;
        }
      }
      else
      {
        v56->i8[0] = BYTE4(v55);
        int v57 = 1;
      }
      int v59 = v57 + 1;
    }
    else
    {
      int v59 = 0;
    }
    uint64_t v60 = (int8x8_t *)&v54[v59];
    if ((v55 & 0x80000000FFFFFFFFLL) > 0x7D)
    {
      if ((v55 & 0x80000000FFFFFFFFLL) > 0x3FFD)
      {
        int v61 = sub_1B0D1DC5C(v60, (v55 & 0x80000000FFFFFFFFLL) + 2);
      }
      else
      {
        v60->i8[0] = ((v55 + 2) >> 7) | 0x80;
        v60->i8[1] = (v55 + 2) & 0x7F;
        int v61 = 2;
      }
    }
    else
    {
      v60->i8[0] = v55 + 2;
      int v61 = 1;
    }
    int v58 = v59 + v61;
  }
  uint64_t result = sub_1B0DADA34(*(void *)(v50 + 48), *(_DWORD *)(v50 + 24), (int *)(v50 + 40), (uint64_t *)(v50 + 32));
  uint64_t v62 = *(void *)(v50 + 32);
  if ((v62 & 0x8000000000000000) == 0)
  {
    if (v51 && v62 > *(void *)(v51 + 32))
    {
      do
      {
        uint64_t v63 = v51;
        uint64_t v51 = *(void *)(v51 + 56);
      }
      while (v51 && v62 > *(void *)(v51 + 32));
      int v64 = (void *)(v63 + 56);
    }
    else
    {
      int v64 = v111;
    }
    *(void *)(v50 + 56) = v51;
    void *v64 = v50;
  }
  uint64_t v65 = v111[0];
  unsigned int v66 = (uint64_t *)(v111[0] + 56);
  int __src = v54;
  if (*(void *)(v111[0] + 56))
  {
    do
    {
      uint64_t v74 = *(void *)(v65 + 32);
      if ((uint64_t)v55 < v74)
      {
        if ((v74 & 0x7FFFFFFF00000000) != (v55 & 0x7FFFFFFF00000000))
        {
          uint64_t v75 = v58 + 1;
          v54[v58] = 1;
          int v76 = (int8x8_t *)&v54[v75];
          if ((unint64_t)v74 >> 39)
          {
            if ((unint64_t)v74 >> 46)
            {
              int v77 = sub_1B0D1DC5C(v76, v74 >> 32);
            }
            else
            {
              v76->i8[0] = (HIDWORD(v74) >> 7) | 0x80;
              v76->i8[1] = BYTE4(v74) & 0x7F;
              int v77 = 2;
            }
          }
          else
          {
            v76->i8[0] = BYTE4(v74);
            int v77 = 1;
          }
          int v58 = v75 + v77;
          unint64_t v55 = v74 & 0x7FFFFFFF00000000;
        }
        int v78 = (int8x8_t *)&v54[v58];
        unint64_t v79 = v74 - v55 + 2;
        if (v79 > 0x7F)
        {
          if (v79 >> 14)
          {
            int v80 = sub_1B0D1DC5C(v78, v79);
          }
          else
          {
            v78->i8[0] = (v79 >> 7) | 0x80;
            v78->i8[1] = v79 & 0x7F;
            int v80 = 2;
          }
        }
        else
        {
          v78->i8[0] = v79;
          int v80 = 1;
        }
        v58 += v80;
        unint64_t v55 = v74;
      }
      uint64_t result = sub_1B0DADA34(*(void *)(v65 + 48), *(_DWORD *)(v65 + 24), (int *)(v65 + 40), (uint64_t *)(v65 + 32));
      uint64_t v67 = *v66;
      v111[0] = *v66;
      uint64_t v81 = *(void *)(v65 + 32);
      if ((v81 & 0x8000000000000000) == 0)
      {
        if (v67 && v81 > *(void *)(v67 + 32))
        {
          do
          {
            uint64_t v82 = v67;
            uint64_t v67 = *(void *)(v67 + 56);
          }
          while (v67 && v81 > *(void *)(v67 + 32));
          unsigned int v73 = (void *)(v82 + 56);
        }
        else
        {
          unsigned int v73 = v111;
        }
        *unsigned int v66 = v67;
        void *v73 = v65;
        uint64_t v67 = v111[0];
      }
      unsigned int v66 = (uint64_t *)(v67 + 56);
      uint64_t v65 = v67;
    }
    while (*(void *)(v67 + 56));
  }
  else
  {
    uint64_t v67 = v111[0];
  }
  uint64_t v68 = *(void *)(v67 + 32);
  if ((uint64_t)v55 >= v68)
  {
    int v69 = v109;
    uint64_t v36 = v107;
  }
  else
  {
    int v69 = v109;
    if ((v68 & 0x7FFFFFFF00000000) != (v55 & 0x7FFFFFFF00000000))
    {
      uint64_t v70 = v58 + 1;
      v54[v58] = 1;
      int v71 = (int8x8_t *)&v54[v70];
      if ((unint64_t)v68 >> 39)
      {
        if ((unint64_t)v68 >> 46)
        {
          int v72 = sub_1B0D1DC5C(v71, v68 >> 32);
        }
        else
        {
          v71->i8[0] = (HIDWORD(v68) >> 7) | 0x80;
          v71->i8[1] = BYTE4(v68) & 0x7F;
          int v72 = 2;
        }
      }
      else
      {
        v71->i8[0] = BYTE4(v68);
        int v72 = 1;
      }
      int v58 = v70 + v72;
      unint64_t v55 = v68 & 0x7FFFFFFF00000000;
    }
    int v83 = (int8x8_t *)&v54[v58];
    unint64_t v84 = v68 - v55 + 2;
    if (v84 > 0x7F)
    {
      uint64_t v36 = v107;
      if (v84 >> 14)
      {
        uint64_t result = sub_1B0D1DC5C(v83, v84);
      }
      else
      {
        v83->i8[0] = (v84 >> 7) | 0x80;
        v83->i8[1] = v84 & 0x7F;
        uint64_t result = 2;
      }
    }
    else
    {
      v83->i8[0] = v84;
      uint64_t result = 1;
      uint64_t v36 = v107;
    }
    v58 += result;
  }
  size_t v85 = (*(_DWORD *)(v67 + 24) - *(_DWORD *)(v67 + 40));
  unsigned int v86 = v58 + v85;
  if (v58 + (int)v85 <= v39 - 8)
  {
    uint64_t v27 = v104;
    uint64_t v87 = (int8x8_t *)(v104 + v36);
    unint64_t v88 = (int)(2 * v86);
    if (2 * v86 > 0x7F)
    {
      if (v88 >> 14)
      {
        int v89 = sub_1B0D1DC5C(v87, v88);
      }
      else
      {
        v87->i8[0] = (v86 >> 6) | 0x80;
        v87->i8[1] = (2 * v86) & 0x7E;
        int v89 = 2;
      }
    }
    else
    {
      v87->i8[0] = 2 * v86;
      int v89 = 1;
    }
    uint64_t v90 = v89 + (uint64_t)(int)v36;
    uint64_t result = (uint64_t)memcpy((void *)(v104 + v90), __src, v58);
    int v31 = v58 + v90;
    if ((int)v85 >= 1)
    {
      uint64_t result = (uint64_t)memcpy((void *)(v104 + v31), (const void *)(*(void *)(v111[0] + 48) + *(int *)(v111[0] + 40)), v85);
      v31 += v85;
    }
    v111[0] = v28;
    if (v69 < 0)
    {
      uint64_t v33 = v28;
      uint64_t v30 = v106;
      goto LABEL_30;
    }
    uint64_t v91 = 0;
    uint64_t v30 = v106;
    do
    {
      unint64_t v93 = &v111[8 * v91 + 1];
      if (v93[2])
      {
        if (v93[1] == v106)
        {
          uint64_t result = sub_1B0DB3798((uint64_t)&v111[8 * v91 + 1]);
          if (v93[2])
          {
            uint64_t v94 = v111[0];
            if (v111[0] && (uint64_t v95 = v93[1], v95 > *(void *)(v111[0] + 8)))
            {
              do
              {
                uint64_t v96 = v94;
                uint64_t v94 = *(void *)(v94 + 56);
              }
              while (v94 && v95 > *(void *)(v94 + 8));
              size_t v92 = (void *)(v96 + 56);
            }
            else
            {
              size_t v92 = v111;
            }
            v111[8 * v91 + 8] = v94;
            *size_t v92 = v93;
          }
        }
      }
      ++v91;
    }
    while (v91 != v105);
    goto LABEL_29;
  }
  uint64_t v98 = a1;
  if (!*(_DWORD *)(a1 + 60))
  {
    int v97 = 267;
    goto LABEL_157;
  }
LABEL_158:
  int v31 = v36;
LABEL_159:
  uint64_t v99 = *v103;
  if (*v103)
  {
    double v100 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_165;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v99);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v99);
    uint64_t v99 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      double v100 = &xmmword_1EB21CA50;
LABEL_165:
      uint64_t result = (*v100)(v99);
    }
  }
  uint64_t *v103 = 0;
  v103[1] = 0;
  if (__src)
  {
    uint64_t v101 = (uint64_t (**)(void *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_172;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(__src);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(__src);
    int __src = (unsigned char *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v101 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
LABEL_172:
      uint64_t result = (*v101)(__src);
    }
  }
  *(void *)(v104 + v31) = 0;
  uint64_t *v103 = v104;
  *((_DWORD *)v103 + 2) = v31;
  *((_DWORD *)v103 + 3) = v102;
  return result;
}

uint64_t sub_1B0DB33B0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(_DWORD *)(result + 60))
  {
    size_t v7 = *(int *)(a3 + 16);
    int v8 = *(_DWORD *)(a4 + 8);
    unsigned int v9 = *(_DWORD *)(a4 + 12);
    unint64_t v10 = (v7 + v8 + 26);
    if (v10 <= v9)
    {
      uint64_t result = *(void *)a4;
    }
    else
    {
      uint64_t v11 = result;
      if (v9) {
        LODWORD(v12) = *(_DWORD *)(a4 + 12);
      }
      else {
        LODWORD(v12) = 64;
      }
      unint64_t v12 = (int)v12;
      do
      {
        unint64_t v13 = v12;
        v12 *= 2;
      }
      while (v13 < v10);
      uint64_t v14 = *(void *)a4;
      uint64_t result = sqlite3_initialize();
      if (result || (uint64_t result = sub_1B0C8E1B8(v14, v13)) == 0)
      {
        *(_DWORD *)(v11 + 60) = 7;
        return result;
      }
      *(_DWORD *)(a4 + 12) = v13;
      *(void *)a4 = result;
      int v8 = *(_DWORD *)(a4 + 8);
    }
    int v15 = (int8x8_t *)(result + v8);
    if (a2 > 0x7F)
    {
      if (a2 >> 14)
      {
        int v16 = sub_1B0D1DC5C(v15, a2);
      }
      else
      {
        v15->i8[0] = (a2 >> 7) | 0x80;
        v15->i8[1] = a2 & 0x7F;
        int v16 = 2;
      }
    }
    else
    {
      v15->i8[0] = a2;
      int v16 = 1;
    }
    uint64_t v17 = *(int *)(a4 + 8) + (uint64_t)v16;
    *(_DWORD *)(a4 + 8) = v17;
    int64_t v18 = (int8x8_t *)(*(void *)a4 + v17);
    unint64_t v19 = 2 * v7;
    if ((2 * v7) > 0x7F)
    {
      if (v19 >> 14)
      {
        int v20 = sub_1B0D1DC5C(v18, v19);
      }
      else
      {
        v18->i8[0] = (v7 >> 6) | 0x80;
        v18->i8[1] = v19 & 0x7E;
        int v20 = 2;
      }
    }
    else
    {
      v18->i8[0] = v19;
      int v20 = 1;
    }
    uint64_t v21 = *(int *)(a4 + 8) + (uint64_t)v20;
    *(_DWORD *)(a4 + 8) = v21;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)a4 + v21), *(const void **)(a3 + 8), v7);
    size_t v22 = *(int *)(a4 + 8) + v7;
    *(_DWORD *)(a4 + 8) = v22;
    *(void *)(*(void *)a4 + v22) = 0;
  }
  return result;
}

uint64_t sub_1B0DB353C(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (!*(_DWORD *)(result + 60))
  {
    uint64_t v5 = result;
    int v6 = a2 + 96;
    *a3 = 0;
    do
    {
      uint64_t v7 = *(unsigned __int16 *)(*(void *)(a2 + 88) + 4);
      uint64_t v8 = a2 + 136 * v7;
      uint64_t v9 = v8 + 96;
      int v27 = 0;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v8 + 152))(v5, v8 + 96, &v27);
      if (*(void *)(v8 + 112)) {
        BOOL v10 = v27 == 0;
      }
      else {
        BOOL v10 = 0;
      }
      if (v10)
      {
        uint64_t v16 = *(void *)(a2 + 136 * v7 + 216);
        uint64_t v17 = *(void *)(a2 + 80);
        if (v16 == v17)
        {
          int v18 = *(_DWORD *)(a2 + 68);
LABEL_26:
          uint64_t v20 = v7 ^ 1;
          if (v18) {
            int64_t v21 = 0x8000000000000000;
          }
          else {
            int64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
          }
          *(void *)(a2 + 80) = v21;
          int v11 = *(_DWORD *)(a2 + 64) + v7;
          uint64_t v12 = *(void *)(a2 + 88);
          int v22 = v11;
          while (2)
          {
            if (v22 >= 0) {
              int v23 = v22;
            }
            else {
              int v23 = v22 + 1;
            }
            uint64_t v24 = v12 + 4 * (v23 >> 1);
            if (*(unsigned char *)(v24 + 2))
            {
              int64_t v25 = *(void *)(v9 + 120);
              int64_t v26 = *(void *)(a2 + 136 * v20 + 216);
              if (v25 == v26) {
                goto LABEL_9;
              }
              if (v18 == v26 > v25)
              {
                uint64_t v9 = a2 + 136 * v20 + 96;
                goto LABEL_38;
              }
              if (v18 == v26 > v21)
              {
LABEL_38:
                *(void *)(a2 + 80) = v26;
                int64_t v21 = v26;
              }
            }
            *(_WORD *)uint64_t v24 = -3855 * ((v9 - v6) >> 3);
            if ((v22 & 0xFFFFFFFE) == 2) {
              goto LABEL_11;
            }
            uint64_t v20 = *(unsigned __int16 *)(v12 + 4 * (((uint64_t)v23 >> 1) ^ 1));
            int v22 = v23 >> 1;
            continue;
          }
        }
        int v18 = v16 < v17;
        if (*(_DWORD *)(a2 + 68) == v18) {
          goto LABEL_26;
        }
        uint64_t v12 = *(void *)(a2 + 88);
      }
      else
      {
        int v11 = *(_DWORD *)(a2 + 64) + v7;
LABEL_9:
        if (v11 >= 2)
        {
          do
          {
            if (*(_DWORD *)(v5 + 60)) {
              break;
            }
            int v11 = v11 >> 1;
            uint64_t result = sub_1B0DAC68C(a2, v11);
            if (result)
            {
              int v15 = result;
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a2 + 136 * (int)result + 152))(v5, a2 + 136 * (int)result + 96, 0);
              int v11 = *(_DWORD *)(a2 + 64) + v15;
            }
          }
          while (v11 > 1);
        }
        uint64_t v12 = *(void *)(a2 + 88);
        uint64_t v13 = a2 + 136 * *(unsigned __int16 *)(v12 + 4);
        *(unsigned char *)(a2 + 20) = *(void *)(v13 + 112) == 0;
        *(void *)(a2 + 80) = *(void *)(v13 + 216);
        *a3 = 1;
      }
LABEL_11:
      if (!*(_DWORD *)(v5 + 60))
      {
        unsigned int v19 = *(unsigned __int16 *)(v12 + 4);
        if (*(void *)(a2 + 136 * v19 + 112))
        {
          int v14 = *(_DWORD *)(a2 + 136 * v19 + 224);
          if (!v14) {
            continue;
          }
        }
      }
      uint64_t result = sub_1B0DAB7B4(a2);
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(v5 + 60);
    }
    while (!v14);
  }
  return result;
}

uint64_t sub_1B0DB3798(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = (char *)(*(void *)(result + 16) + *(int *)(result + 28) + *(int *)(result + 24));
  unint64_t v3 = *(void *)result;
  if ((unint64_t)v2 >= *(void *)result)
  {
    *(void *)(result + 16) = 0;
  }
  else
  {
    unint64_t v11 = 0;
    uint64_t result = sub_1B0DA69F4(v2, &v11);
    int v4 = &v2[result];
    *(void *)(v1 + 8) += v11;
    unsigned int v5 = *v4;
    if ((v5 & 0x80) != 0)
    {
      int v7 = v4[1];
      if (v4[1] < 0)
      {
        int v9 = v4[2];
        if (v9 < 0)
        {
          unint64_t v12 = 0;
          uint64_t result = sub_1B0DA69F4(v4, &v12);
          unsigned int v8 = v12 & 0x7FFFFFFF;
        }
        else
        {
          unsigned int v8 = v9 & 0x7F | (v5 << 14) & 0x1FC07F | ((v7 & 0x7F) << 7);
          uint64_t result = 3;
        }
      }
      else
      {
        unsigned int v8 = ((v5 & 0x7F) << 7) | v7;
        uint64_t result = 2;
      }
      unsigned int v6 = v8 >> 1;
      *(_DWORD *)(v1 + 24) = v6;
      *(_DWORD *)(v1 + 28) = result;
    }
    else
    {
      unsigned int v6 = v5 >> 1;
      *(_DWORD *)(v1 + 24) = v6;
      *(_DWORD *)(v1 + 28) = 1;
    }
    if ((unint64_t)&v4[v6] <= v3) {
      BOOL v10 = v4;
    }
    else {
      BOOL v10 = 0;
    }
    *(void *)(v1 + 16) = v10;
  }
  return result;
}

uint64_t sub_1B0DB3898(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = *(void *)(a2 + 120);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 128);
  return result;
}

uint64_t sub_1B0DB38AC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  *(void *)uint64_t result = *(void *)(a2 + 120);
  uint64_t v3 = *(int *)(a2 + 128);
  *(_DWORD *)(result + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = v4 + v3;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v5 <= *(int *)(v6 + 12))
  {
    uint64_t v7 = *(void *)v6 + v4;
  }
  else
  {
    *(_DWORD *)(result + 40) = 0;
    uint64_t result = sub_1B0DB3CC0(*(_DWORD **)(result + 24), a2, 0, result + 32);
    uint64_t v7 = *(void *)(v2 + 32);
  }
  *(void *)(v2 + 8) = v7;
  return result;
}

uint64_t sub_1B0DB391C(uint64_t result)
{
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1B0DB3924(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(unsigned int **)(result + 48);
  *(void *)uint64_t result = *(void *)(a2 + 120);
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a2 + 128);
  uint64_t v6 = *(uint64_t **)(a2 + 16);
  if (v4 + v5 <= *((int *)v6 + 3))
  {
    uint64_t v8 = *v6;
    uint64_t v9 = *(void *)(result + 24);
    *(_DWORD *)(result + 40) = 0;
    if (*(_DWORD *)(v9 + 60)) {
      return result;
    }
    if ((int)*v3 > 1)
    {
      LODWORD(v10) = *(_DWORD *)(result + 44);
      if (v10 < v5)
      {
        if (!v10) {
          LODWORD(v10) = 64;
        }
        unint64_t v10 = (int)v10;
        do
        {
          unint64_t v11 = v10;
          v10 *= 2;
        }
        while (v11 < v5);
        uint64_t v12 = *(void *)(result + 32);
        uint64_t result = sqlite3_initialize();
        if (result || (uint64_t result = sub_1B0C8E1B8(v12, v11)) == 0)
        {
          *(_DWORD *)(v9 + 60) = 7;
          return result;
        }
        *(_DWORD *)(v2 + 44) = v11;
        *(void *)(v2 + 32) = result;
      }
    }
    signed int v13 = 0;
    LODWORD(v14) = 0;
    int v15 = (unsigned __int8 *)(v8 + v4);
    unint64_t v16 = v8 + v4 + v5;
    uint64_t v17 = (char *)(v8 + v4);
    while (1)
    {
      uint64_t v14 = (int)v14;
      while (1)
      {
        signed int v18 = v3[v14 + 1];
        if (v18 >= v13) {
          break;
        }
        if (++v14 == *v3) {
          goto LABEL_3;
        }
      }
      if ((unint64_t)v15 >= v16)
      {
        BOOL v21 = 0;
        unsigned int v19 = (char *)v15;
      }
      else
      {
        unsigned int v19 = (char *)v15;
        do
        {
          int v20 = *v19;
          BOOL v21 = v20 == 1;
          if (v20 == 1) {
            break;
          }
          ++v19;
          if (v20 < 0)
          {
            do
              int v22 = *v19++;
            while (v22 < 0);
          }
        }
        while ((unint64_t)v19 < v16);
      }
      if (v18 == v13)
      {
        if (*v3 == 1)
        {
          *(void *)(v2 + 8) = v17;
          int v7 = v19 - v17;
          goto LABEL_4;
        }
        int v23 = v19 - v17;
        uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v2 + 32) + *(int *)(v2 + 40)), v17, v19 - v17);
        *(_DWORD *)(v2 + 40) += v23;
      }
      if (!v21) {
        goto LABEL_3;
      }
      int v15 = (unsigned __int8 *)(v19 + 2);
      signed int v13 = v19[1];
      uint64_t v17 = v19;
      if (v19[1] < 0)
      {
        int v24 = (char)*v15;
        int v25 = *v15;
        if (v24 < 0)
        {
          int v27 = v19[3];
          if (v27 < 0)
          {
            unint64_t v28 = 0;
            uint64_t result = sub_1B0DA69F4(v19 + 1, &v28);
            signed int v13 = v28 & 0x7FFFFFFF;
            uint64_t v26 = result;
          }
          else
          {
            signed int v13 = v27 & 0x7F | (v13 << 14) & 0x1FC07F | ((v25 & 0x7F) << 7);
            uint64_t v26 = 3;
          }
        }
        else
        {
          signed int v13 = ((v13 & 0x7F) << 7) | v25;
          uint64_t v26 = 2;
        }
        int v15 = (unsigned __int8 *)&v19[v26 + 1];
        uint64_t v17 = v19;
      }
    }
  }
  *(_DWORD *)(result + 40) = 0;
  uint64_t result = sub_1B0DB3CC0(*(_DWORD **)(result + 24), a2, v3, result + 32);
LABEL_3:
  *(void *)(v2 + 8) = *(void *)(v2 + 32);
  int v7 = *(_DWORD *)(v2 + 40);
LABEL_4:
  *(_DWORD *)(v2 + 16) = v7;
  return result;
}

uint64_t sub_1B0DB3B80(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a2 + 128);
  uint64_t v6 = *(uint64_t **)(a2 + 16);
  if (v4 + v5 <= *((int *)v6 + 3))
  {
    uint64_t v9 = *v6;
    unint64_t v10 = *(int **)(result + 48);
    uint64_t v13 = *v10;
    unint64_t v11 = v10 + 1;
    uint64_t v12 = v13;
    uint64_t v14 = *(unsigned char **)(result + 32);
    *(void *)uint64_t result = *(void *)(a2 + 120);
    if ((int)v5 >= 1)
    {
      char v15 = 0;
      int v16 = 0;
      uint64_t v17 = (unsigned __int8 *)(v9 + v4);
      signed int v18 = &v17[v5];
      unsigned int v19 = &v11[v12];
      do
      {
        int v20 = *v17++;
        int v16 = v16 + v20 - 2;
        while (*v11 < v16)
        {
          if (++v11 == v19) {
            goto LABEL_12;
          }
        }
        if (*v11 == v16)
        {
          *v14++ = v16 - v15 + 2;
          char v15 = v16;
        }
      }
      while (v17 < v18);
    }
LABEL_12:
    uint64_t v21 = *(void *)(result + 32);
    *(void *)(result + 8) = v21;
    int v8 = v14 - v21;
  }
  else
  {
    *(_DWORD *)(result + 40) = 0;
    uint64_t result = sub_1B0DB3CC0(*(_DWORD **)(result + 24), a2, *(unsigned int **)(result + 48), result + 32);
    uint64_t v7 = *(void *)(v3 + 32);
    *(void *)uint64_t v3 = *(void *)(a2 + 120);
    *(void *)(v3 + 8) = v7;
    int v8 = *(_DWORD *)(v3 + 40);
  }
  *(_DWORD *)(v3 + 16) = v8;
  return result;
}

uint64_t sub_1B0DB3C74(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t result = sub_1B0DB3CC0(*(_DWORD **)(a1 + 24), a2, *(unsigned int **)(a1 + 48), a1 + 32);
  uint64_t v5 = *(void *)(a1 + 32);
  *(void *)a1 = *(void *)(a2 + 120);
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a1 + 40);
  return result;
}

uint64_t sub_1B0DB3CC0(_DWORD *a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  int v8 = *(_DWORD *)(a2 + 128);
  int v9 = *(_DWORD *)(a4 + 8);
  unsigned int v10 = *(_DWORD *)(a4 + 12);
  unint64_t v11 = (v9 + v8 + 8);
  if (v11 <= v10)
  {
    uint64_t result = *(void *)a4;
  }
  else
  {
    if (v10) {
      LODWORD(v12) = *(_DWORD *)(a4 + 12);
    }
    else {
      LODWORD(v12) = 64;
    }
    unint64_t v12 = (int)v12;
    do
    {
      unint64_t v13 = v12;
      v12 *= 2;
    }
    while (v13 < v11);
    uint64_t v14 = *(void *)a4;
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8(v14, v13)) == 0)
    {
      a1[15] = 7;
      return result;
    }
    *(_DWORD *)(a4 + 12) = v13;
    *(void *)a4 = result;
    int v9 = *(_DWORD *)(a4 + 8);
    int v8 = *(_DWORD *)(a2 + 128);
  }
  *(void *)(result + v8 + v9) = 0;
  if (a3)
  {
    if (*(_DWORD *)(*(void *)a1 + 92))
    {
      uint64_t v21 = a3;
      uint64_t v22 = 0;
      uint64_t v20 = a4;
      int v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0DB4418;
    }
    else
    {
      uint64_t v21 = a3;
      uint64_t v22 = 0;
      uint64_t v20 = a4;
      uint64_t v17 = *a3;
      if ((int)v17 < 1)
      {
        LODWORD(v17) = 0;
      }
      else
      {
        signed int v18 = a3 + 1;
        while (*v18++)
        {
          if (!--v17) {
            goto LABEL_25;
          }
        }
        LODWORD(v17) = 1;
      }
LABEL_25:
      LODWORD(v22) = v17;
      int v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0DB4134;
    }
    return (uint64_t)sub_1B0DB3E4C((uint64_t)a1, (unsigned int **)a2, (uint64_t)&v20, v16);
  }
  else
  {
    return (uint64_t)sub_1B0DB3E4C((uint64_t)a1, (unsigned int **)a2, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0DB40DC);
  }
}

unsigned int *sub_1B0DB3E4C(uint64_t a1, unsigned int **a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a2;
  int v8 = 0;
  uint64_t v9 = *((int *)a2 + 32);
  unsigned int v10 = a2[2];
  unint64_t v11 = a2[4];
  uint64_t v12 = (uint64_t)v11 + *(void *)v10;
  uint64_t v13 = (int)v10[3] - (void)v11;
  if (v13 <= v9) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = v9;
  }
  uint64_t v15 = *((int *)a2 + 3);
  if (((_BYTE)a2[1] & 2) != 0) {
    int v16 = 0;
  }
  else {
    int v16 = v15 + 1;
  }
  int v17 = ~v15 + v16;
  for (uint64_t i = v15 + 1; ; ++i)
  {
    uint64_t result = (unsigned int *)a4(a1, a3, v12, v14);
    if (!v8) {
      goto LABEL_16;
    }
    uint64_t v20 = (uint64_t (**)(unsigned int *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_15;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
    --qword_1EB220150;
    uint64_t result = (unsigned int *)off_1EB21C9E8(v8);
    int v8 = (unsigned int *)xmmword_1EB2201B0;
    uint64_t v6 = a2;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v20 = (uint64_t (**)(unsigned int *))&xmmword_1EB21CA50;
LABEL_15:
      uint64_t result = (unsigned int *)(*v20)(v8);
    }
LABEL_16:
    LODWORD(v9) = v9 - v14;
    if ((int)v9 < 1) {
      return result;
    }
    if (!*v6)
    {
      *(_DWORD *)(a1 + 60) = 267;
      return result;
    }
    uint64_t result = sub_1B0DA6708(a1, i + ((unint64_t)**v6 << 37));
    if (!result) {
      return result;
    }
    int v8 = result;
    int v21 = result[2];
    if (v21 < 4) {
      break;
    }
    int v22 = result[3];
    if (v22 > v21) {
      break;
    }
    uint64_t v23 = *(void *)result;
    int v24 = v22 - 4;
    if ((int)v9 >= v24) {
      uint64_t v14 = v24;
    }
    else {
      uint64_t v14 = v9;
    }
    if (!v17)
    {
      v6[3] = result;
      int v8 = 0;
    }
    uint64_t v12 = v23 + 4;
    --v17;
  }
  *(_DWORD *)(a1 + 60) = 267;
  int v25 = (uint64_t (**)(unsigned int *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_31;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
  --qword_1EB220150;
  uint64_t result = (unsigned int *)off_1EB21C9E8(v8);
  int v8 = (unsigned int *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v25 = (uint64_t (**)(unsigned int *))&xmmword_1EB21CA50;
LABEL_31:
    uint64_t v26 = *v25;
    return (unsigned int *)v26(v8);
  }
  return result;
}

void *sub_1B0DB40DC(int a1, uint64_t a2, void *__src, size_t __n)
{
  if ((int)__n >= 1)
  {
    int v4 = __n;
    uint64_t result = memcpy((void *)(*(void *)a2 + *(int *)(a2 + 8)), __src, __n);
    *(_DWORD *)(a2 + 8) += v4;
  }
  return result;
}

void sub_1B0DB4134(uint64_t a1, uint64_t a2, char *a3, int a4)
{
  if (a4 >= 1)
  {
    v34[11] = v4;
    v34[12] = v5;
    if (*(_DWORD *)(a2 + 16) == 2)
    {
      int v9 = *a3;
      if (*a3 < 0)
      {
        int v11 = a3[1];
        if (a3[1] < 0)
        {
          int v12 = a3[2];
          if (v12 < 0)
          {
            v34[0] = 0;
            uint64_t v10 = sub_1B0DA69F4(a3, v34);
            int v9 = v34[0] & 0x7FFFFFFF;
          }
          else
          {
            int v9 = v12 & 0x7F | (v9 << 14) & 0x1FC07F | ((v11 & 0x7F) << 7);
            uint64_t v10 = 3;
          }
        }
        else
        {
          int v9 = ((v9 & 0x7F) << 7) | v11;
          uint64_t v10 = 2;
        }
      }
      else
      {
        uint64_t v10 = 1;
      }
      uint64_t v13 = *(unsigned int **)(a2 + 8);
      uint64_t v14 = *v13;
      if ((int)v14 < 1)
      {
LABEL_15:
        *(_DWORD *)(a2 + 16) = 0;
      }
      else
      {
        uint64_t v15 = (int *)(v13 + 1);
        while (1)
        {
          int v16 = *v15++;
          if (v16 == v9) {
            break;
          }
          if (!--v14) {
            goto LABEL_15;
          }
        }
        *(_DWORD *)(a2 + 16) = 1;
        *(unsigned char *)(**(void **)a2 + (int)(*(_DWORD *)(*(void *)a2 + 8))++) = 1;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v17 = 0;
    do
    {
      if ((int)v10 >= a4)
      {
        BOOL v20 = 0;
LABEL_27:
        if (!*(_DWORD *)(a2 + 16)) {
          goto LABEL_29;
        }
      }
      else
      {
        while (1)
        {
          int v19 = a3[(int)v10];
          BOOL v20 = v19 == 1;
          if (v19 == 1) {
            break;
          }
          int v21 = (unsigned __int8 *)&a3[(int)v10];
          do
          {
            int v22 = (char)*v21++;
            uint64_t v10 = (v10 + 1);
          }
          while (v22 < 0);
          if ((int)v10 >= a4) {
            goto LABEL_27;
          }
        }
        BOOL v20 = 1;
        if (!*(_DWORD *)(a2 + 16)) {
          goto LABEL_29;
        }
      }
      memcpy((void *)(**(void **)a2 + *(int *)(*(void *)a2 + 8)), &a3[(int)v17], (int)v10 - (int)v17);
      *(_DWORD *)(*(void *)a2 + 8) += v10 - v17;
LABEL_29:
      if (v20)
      {
        uint64_t v18 = (int)v10 + 1;
        if ((int)v18 >= a4)
        {
          *(_DWORD *)(a2 + 16) = 2;
        }
        else
        {
          uint64_t v23 = (unsigned __int8 *)&a3[v18];
          int v24 = a3[v18];
          if (a3[v18] < 0)
          {
            int v25 = v23[1];
            if ((char)v23[1] < 0)
            {
              int v27 = (char)v23[2];
              if (v27 < 0)
              {
                v34[0] = 0;
                int v26 = sub_1B0DA69F4((char *)v23, v34);
                int v24 = v34[0] & 0x7FFFFFFF;
              }
              else
              {
                int v24 = v27 & 0x7F | (v24 << 14) & 0x1FC07F | ((v25 & 0x7F) << 7);
                int v26 = 3;
              }
            }
            else
            {
              int v24 = ((v24 & 0x7F) << 7) | v25;
              int v26 = 2;
            }
            uint64_t v18 = (v26 + v18);
          }
          else
          {
            uint64_t v18 = (v10 + 2);
          }
          unint64_t v28 = *(unsigned int **)(a2 + 8);
          uint64_t v29 = *v28;
          if ((int)v29 < 1)
          {
LABEL_46:
            *(_DWORD *)(a2 + 16) = 0;
          }
          else
          {
            uint64_t v30 = (int *)(v28 + 1);
            while (1)
            {
              int v31 = *v30++;
              if (v31 == v24) {
                break;
              }
              if (!--v29) {
                goto LABEL_46;
              }
            }
            *(_DWORD *)(a2 + 16) = 1;
            unint64_t v32 = (unsigned __int8 *)&a3[(int)v10];
            int v33 = v18 - v10;
            memcpy((void *)(**(void **)a2 + *(int *)(*(void *)a2 + 8)), v32, v33);
            *(_DWORD *)(*(void *)a2 + 8) += v33;
            uint64_t v10 = v18;
          }
        }
      }
      else
      {
        uint64_t v18 = v10;
        uint64_t v10 = v17;
      }
      uint64_t v17 = v10;
      uint64_t v10 = v18;
    }
    while ((int)v18 < a4);
  }
}

void sub_1B0DB4418(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a4 >= 1)
  {
    v24[9] = v4;
    v24[10] = v5;
    uint64_t v9 = 0;
    do
    {
      uint64_t v11 = a3 + v9;
      int v12 = *(unsigned __int8 *)(a3 + v9);
      if (*(char *)(a3 + v9) < 0)
      {
        int v14 = *(unsigned __int8 *)(v11 + 1);
        if (*(char *)(v11 + 1) < 0)
        {
          int v15 = *(char *)(v11 + 2);
          if (v15 < 0)
          {
            v24[0] = 0;
            uint64_t v13 = sub_1B0DA69F4((char *)v11, v24);
            int v12 = v24[0] & 0x7FFFFFFF;
          }
          else
          {
            int v12 = v15 & 0x7F | (v12 << 14) & 0x1FC07F | ((v14 & 0x7F) << 7);
            uint64_t v13 = 3;
          }
        }
        else
        {
          int v12 = ((v12 & 0x7F) << 7) | v14;
          uint64_t v13 = 2;
        }
      }
      else
      {
        uint64_t v13 = 1;
      }
      int v16 = *(_DWORD *)(a2 + 16) + v12;
      int v17 = v16 - 2;
      *(_DWORD *)(a2 + 16) = v16 - 2;
      uint64_t v18 = *(unsigned int **)(a2 + 8);
      uint64_t v19 = *v18;
      if ((int)v19 >= 1)
      {
        BOOL v20 = (int *)(v18 + 1);
        while (1)
        {
          int v21 = *v20++;
          if (v21 == v17) {
            break;
          }
          if (!--v19) {
            goto LABEL_5;
          }
        }
        int v22 = (int8x8_t *)(**(void **)a2 + *(int *)(*(void *)a2 + 8));
        unsigned int v23 = v16 - *(_DWORD *)(a2 + 20);
        if (v23 <= 0x7F)
        {
          v22->i8[0] = v23;
          int v10 = 1;
        }
        else if (v23 >> 14)
        {
          int v10 = sub_1B0D1DC5C(v22, (int)v23);
        }
        else
        {
          v22->i8[0] = (v23 >> 7) | 0x80;
          v22->i8[1] = v23 & 0x7F;
          int v10 = 2;
        }
        *(_DWORD *)(*(void *)a2 + 8) += v10;
        *(_DWORD *)(a2 + 20) = v17;
      }
LABEL_5:
      v9 += v13;
    }
    while ((int)v9 < a4);
  }
}

uint64_t sub_1B0DB459C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = 0;
  if (sqlite3_initialize()) {
    goto LABEL_2;
  }
  uint64_t v21 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = (unsigned __int8 *)&v22;
  uint64_t v20 = 0x7FFFFFFD00000200;
  sqlite3_str_vappendf((sqlite3_str *)&v18, "SELECT rowid, rank FROM %Q.%Q ORDER BY %s(\"%w\"%s%s) %s", &a9);
  if (v19 && (v19[v21] = 0, HIDWORD(v20)) && (v21 & 0x40000000000) == 0)
  {
    int v14 = (unsigned __int8 *)sub_1B0D06044(&v18);
    if (!v14) {
      goto LABEL_2;
    }
  }
  else
  {
    int v14 = v19;
    if (!v19)
    {
LABEL_2:
      uint64_t v11 = 7;
      goto LABEL_3;
    }
  }
  uint64_t v11 = sub_1B0C7EAC0(*(void *)a2, v14, 0xFFFFFFFFLL, 129, 0, &v17, 0, v13);
  if (v11)
  {
    int v15 = sqlite3_errmsg(*(sqlite3 **)a2);
    **(void **)(a2 + 184) = sqlite3_mprintf("%s", v15);
  }
  int v16 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_17:
    (*v16)(v14);
    goto LABEL_3;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v14);
  --qword_1EB220150;
  off_1EB21C9E8(v14);
  int v14 = (unsigned __int8 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v16 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
    goto LABEL_17;
  }
LABEL_3:
  *a1 = v17;
  return v11;
}

uint64_t sub_1B0DB4758(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t result = sqlite3_step(*(sqlite3_stmt **)v2);
  if (result == 101)
  {
    int v17 = 3;
  }
  else
  {
    if (result != 100) {
      return result;
    }
    *(void *)(v2 + 8) = sqlite3_column_int64(*(sqlite3_stmt **)v2, 0);
    int v4 = sqlite3_column_bytes(*(sqlite3_stmt **)v2, 1);
    unint64_t v5 = (char *)sqlite3_column_blob(*(sqlite3_stmt **)v2, 1);
    if (v4 >= 1)
    {
      int v6 = (int)v5;
      uint64_t v7 = *(int *)(v2 + 24);
      if ((int)v7 < 2)
      {
        uint64_t v8 = 0;
        uint64_t v11 = v5;
      }
      else
      {
        uint64_t v8 = 0;
        int v9 = 0;
        uint64_t v10 = v7 - 1;
        uint64_t v11 = v5;
        do
        {
          int v13 = *v11;
          if (*v11 < 0)
          {
            int v14 = v11[1];
            if (v11[1] < 0)
            {
              int v15 = v11[2];
              if (v15 < 0)
              {
                unint64_t v18 = 0;
                unsigned int v16 = sub_1B0DA69F4(v11, &v18);
                int v13 = v18 & 0x7FFFFFFF;
                uint64_t v12 = v16;
              }
              else
              {
                int v13 = v15 & 0x7F | (v13 << 14) & 0x1FC07F | ((v14 & 0x7F) << 7);
                uint64_t v12 = 3;
              }
            }
            else
            {
              int v13 = ((v13 & 0x7F) << 7) | v14;
              uint64_t v12 = 2;
            }
          }
          else
          {
            uint64_t v12 = 1;
          }
          v11 += v12;
          v9 += v13;
          *(_DWORD *)(v2 + 28 + 4 * v8++) = v9;
        }
        while (v8 < v10);
      }
      *(_DWORD *)(v2 + 4 * v8 + 28) = v6 + v4 - v11;
      *(void *)(v2 + 16) = v11;
    }
    int v17 = 78;
  }
  uint64_t result = 0;
  *(_DWORD *)(a1 + 80) |= v17;
  return result;
}

uint64_t sub_1B0DB48DC(uint64_t *a1, int a2)
{
  uint64_t v3 = (sqlite3_stmt **)(a1 + 7);
  if (a1[7])
  {
    if ((a1[10] & 2) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v5 = *a1;
    if (*((_DWORD *)a1 + 8) == 5) {
      unsigned int v6 = *((_DWORD *)a1 + 9) != 0;
    }
    else {
      unsigned int v6 = 2;
    }
    uint64_t v7 = *(uint64_t **)(v5 + 40);
    uint64_t v8 = (char **)(v5 + 16);
    if (a2) {
      int v9 = v8;
    }
    else {
      int v9 = 0;
    }
    uint64_t v4 = sub_1B0DA55D8(v7, v6, v3, v9);
    if (v4) {
      return v4;
    }
    v7[v6 + 5] = 0;
    if ((a1[10] & 2) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *a1;
  sqlite3_reset((sqlite3_stmt *)a1[7]);
  uint64_t v11 = (void *)a1[7];
  uint64_t v12 = a1[9];
  if (v12) {
    int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    int v13 = (uint64_t *)(*(void *)(a1[8] + 16) + 24);
  }
  uint64_t v14 = *v13;
  if (!sub_1B0CC3F2C(a1[7], 0))
  {
    uint64_t v15 = v11[16];
    if ((*(_WORD *)(v15 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v15, v14);
    }
    else
    {
      *(void *)uint64_t v15 = v14;
      *(_WORD *)(v15 + 20) = 4;
    }
    uint64_t v16 = *(void *)(*v11 + 24);
    if (v16) {
      xmmword_1EB21CA50(v16);
    }
  }
  ++*(_DWORD *)(*(void *)(v10 + 24) + 120);
  int v17 = sqlite3_step(*v3);
  --*(_DWORD *)(*(void *)(v10 + 24) + 120);
  if (v17 == 100)
  {
    uint64_t v4 = 0;
    *((_DWORD *)a1 + 20) &= ~2u;
  }
  else
  {
    uint64_t v18 = sqlite3_reset(*v3);
    if (v18)
    {
      uint64_t v4 = v18;
      uint64_t v19 = *(void *)(v10 + 24);
      if (*(void *)(v19 + 184))
      {
        uint64_t v20 = sqlite3_errmsg(*(sqlite3 **)v19);
        **(void **)(*(void *)(v10 + 24) + 184) = sqlite3_mprintf("%s", v20);
      }
    }
    else
    {
      return 267;
    }
  }
  return v4;
}

uint64_t sub_1B0DB4AA0(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 144) + 16);
}

uint64_t sub_1B0DB4AAC(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(*(void *)a1 + 24) + 24);
}

uint64_t sub_1B0DB4ABC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t result = sub_1B0DB5C58(v3, 0);
  if (!result)
  {
    *a2 = *(void *)(v3 + 24);
    if (*(uint64_t *)(v3 + 24) >= 1) {
      return 0;
    }
    else {
      return 267;
    }
  }
  return result;
}

uint64_t sub_1B0DB4B0C(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t result = sub_1B0DB5C58((uint64_t)v5, 0);
  if (!result)
  {
    *a3 = 0;
    uint64_t v7 = *(unsigned int *)(*v5 + 24);
    if ((a2 & 0x80000000) == 0)
    {
      if ((int)v7 <= a2) {
        return 25;
      }
      uint64_t result = 0;
      *a3 = *(void *)(v5[4] + 8 * a2);
      return result;
    }
    if ((int)v7 >= 1)
    {
      unint64_t v8 = v5[4];
      if (v7 >= 8
        && (v8 + 8 * v7 > (unint64_t)a3 ? (BOOL v9 = v8 >= (unint64_t)(a3 + 1)) : (BOOL v9 = 1), v9))
      {
        uint64_t v10 = v7 & 0x7FFFFFFC;
        uint64_t v11 = (int64x2_t *)(v8 + 16);
        int64x2_t v12 = 0uLL;
        uint64_t v13 = v7 & 0xFFFFFFFC;
        int64x2_t v14 = 0uLL;
        do
        {
          int64x2_t v12 = vaddq_s64(v11[-1], v12);
          int64x2_t v14 = vaddq_s64(*v11, v14);
          v11 += 2;
          v13 -= 4;
        }
        while (v13);
        uint64_t v15 = vaddvq_s64(vaddq_s64(v14, v12));
        *a3 = v15;
        uint64_t v16 = v15;
        if (v10 == v7) {
          return 0;
        }
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v16 = 0;
      }
      uint64_t v17 = v7 - v10;
      uint64_t v18 = (uint64_t *)(v8 + 8 * v10);
      do
      {
        uint64_t v19 = *v18++;
        v16 += v19;
        *a3 = v16;
        --v17;
      }
      while (v17);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B0DB4C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2) {
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)a1 + 24) + 112)
  }
                                                                                          + 16))(*(void *)(*(void *)(*(void *)a1 + 24) + 104), a4, 8, a2, a3, a5);
  else {
    return 0;
  }
}

uint64_t sub_1B0DB4C58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64);
  if (v1) {
    return *(unsigned int *)(v1 + 28);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B0DB4C70(uint64_t a1, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 64);
  if (*(_DWORD *)(v2 + 28) <= (signed int)a2) {
    return 0;
  }
  else {
    return *(unsigned int *)(*(void *)(*(void *)(v2 + 32) + 8 * a2) + 24);
  }
}

uint64_t sub_1B0DB4C9C(uint64_t a1, _DWORD *a2)
{
  if ((*(unsigned char *)(a1 + 80) & 8) == 0 || (uint64_t result = sub_1B0DB5DCC(a1), !result))
  {
    uint64_t result = 0;
    *a2 = *(_DWORD *)(a1 + 172);
  }
  return result;
}

uint64_t sub_1B0DB4CE0(uint64_t a1, int a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  if ((*(unsigned char *)(a1 + 80) & 8) == 0 || (uint64_t result = sub_1B0DB5DCC(a1), !result))
  {
    if (a2 < 0 || *(_DWORD *)(a1 + 172) <= a2)
    {
      return 25;
    }
    else
    {
      uint64_t result = 0;
      uint64_t v11 = *(void *)(a1 + 176);
      int64x2_t v12 = (_DWORD *)(v11 + 12 * a2);
      *a3 = *v12;
      *a4 = *(_DWORD *)(v11 + 12 * a2 + 4);
      *a5 = v12[2];
    }
  }
  return result;
}

uint64_t sub_1B0DB4D7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 72);
  if (v1) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(void *)(*(void *)(*(void *)(a1 + 64) + 16) + 24);
  }
}

uint64_t sub_1B0DB4D9C(_DWORD *a1, int a2, const unsigned __int8 **a3, int *a4)
{
  if (*(_DWORD *)(*(void *)(*(void *)a1 + 24) + 64) == 1 || a1[8] == 3)
  {
    int v7 = 0;
    *a3 = 0;
LABEL_4:
    uint64_t result = 0;
    *a4 = v7;
    return result;
  }
  uint64_t result = sub_1B0DB48DC((uint64_t *)a1, 0);
  if (!result)
  {
    int v10 = a2 + 1;
    *a3 = sqlite3_column_text(*((sqlite3_stmt **)a1 + 7), v10);
    int v7 = sqlite3_column_bytes(*((sqlite3_stmt **)a1 + 7), v10);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1B0DB4E38(uint64_t a1, unsigned int a2, _DWORD *a3)
{
  uint64_t v6 = *(void *)(*(void *)a1 + 24);
  if ((*(unsigned char *)(a1 + 80) & 4) != 0)
  {
    if (*(_DWORD *)(v6 + 88))
    {
      uint64_t v9 = *(void *)(a1 + 72);
      if (v9) {
        int v10 = (uint64_t *)(v9 + 8);
      }
      else {
        int v10 = (uint64_t *)(*(void *)(*(void *)(a1 + 64) + 16) + 24);
      }
      uint64_t result = sub_1B0DB676C(*(uint64_t **)(*(void *)a1 + 40), *v10, *(int **)(a1 + 16));
      goto LABEL_29;
    }
    if (!*(void *)(v6 + 72))
    {
      int v16 = *(_DWORD *)(v6 + 24);
      if (v16 >= 1)
      {
        uint64_t v17 = 0;
        uint64_t v18 = *(void *)(v6 + 40);
        do
        {
          if (!*(unsigned char *)(v18 + v17))
          {
            *(_DWORD *)(*(void *)(a1 + 16) + 4 * v17) = -1;
            int v16 = *(_DWORD *)(v6 + 24);
          }
          ++v17;
        }
        while (v17 < v16);
      }
LABEL_28:
      uint64_t result = 0;
LABEL_29:
      *(_DWORD *)(a1 + 80) &= ~4u;
      if ((a2 & 0x80000000) == 0) {
        goto LABEL_3;
      }
      goto LABEL_30;
    }
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    while (1)
    {
      if (v12 >= *(int *)(v6 + 24)) {
        goto LABEL_28;
      }
      if (!*(unsigned char *)(*(void *)(v6 + 40) + v12))
      {
        uint64_t result = 0;
        uint64_t v13 = (_DWORD *)(*(void *)(a1 + 16) + v11);
        _DWORD *v13 = 0;
        if (*(_DWORD *)(*(void *)(*(void *)a1 + 24) + 64) == 1) {
          goto LABEL_13;
        }
        if (*(_DWORD *)(a1 + 32) != 3)
        {
          uint64_t result = sub_1B0DB48DC((uint64_t *)a1, 0);
          if (result) {
            goto LABEL_29;
          }
          int64x2_t v14 = sqlite3_column_text(*(sqlite3_stmt **)(a1 + 56), (int)v12 + 1);
          uint64_t v15 = sqlite3_column_bytes(*(sqlite3_stmt **)(a1 + 56), v12 + 1);
          if (v14)
          {
            uint64_t result = (*(uint64_t (**)(void, _DWORD *, uint64_t, const unsigned __int8 *, uint64_t, uint64_t (*)(_DWORD *, char)))(*(void *)(v6 + 112) + 16))(*(void *)(v6 + 104), v13, 8, v14, v15, sub_1B0DB6934);
            goto LABEL_13;
          }
        }
      }
      uint64_t result = 0;
LABEL_13:
      ++v12;
      v11 += 4;
      if (result) {
        goto LABEL_29;
      }
    }
  }
  uint64_t result = 0;
  if ((a2 & 0x80000000) == 0)
  {
LABEL_3:
    if (*(_DWORD *)(v6 + 24) <= (signed int)a2)
    {
      int v8 = 0;
      uint64_t result = 25;
    }
    else
    {
      int v8 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * a2);
    }
    *a3 = v8;
    return result;
  }
LABEL_30:
  *a3 = 0;
  if (*(int *)(v6 + 24) >= 1)
  {
    int v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = *(void *)(a1 + 16);
    do
    {
      v19 += *(_DWORD *)(v21 + 4 * v20);
      *a3 = v19;
      ++v20;
    }
    while (v20 < *(int *)(v6 + 24));
  }
  return result;
}

uint64_t sub_1B0DB5054(uint64_t a1, int a2, uint64_t a3, uint64_t (*a4)(void, void, void))
{
  int v8 = *(void **)a1;
  uint64_t v50 = 0;
  uint64_t v9 = sub_1B0D9C1FC(v8, &v50);
  uint64_t v10 = v50;
  if (v9) {
    goto LABEL_2;
  }
  *(_DWORD *)(v50 + 32) = 1;
  *(_OWORD *)(v10 + 40) = xmmword_1B0DE16A0;
  *(void *)uint64_t v10 = v8;
  uint64_t v12 = *(void *)(a1 + 64);
  v51[0] = 0;
  v51[1] = 0;
  uint64_t v13 = *(void *)(*(void *)(v12 + 32) + 8 * a2);
  if (sqlite3_initialize())
  {
    uint64_t v14 = 0;
LABEL_9:
    uint64_t v11 = 7;
    goto LABEL_10;
  }
  uint64_t v15 = sub_1B0C7FC94(40);
  uint64_t v14 = v15;
  if (!v15) {
    goto LABEL_9;
  }
  *(void *)(v15 + 32) = 0;
  *(_OWORD *)uint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  if (sqlite3_initialize() || (uint64_t v34 = (void *)sub_1B0C7FC94(8)) == 0)
  {
    *(void *)(v14 + 32) = 0;
    goto LABEL_9;
  }
  void *v34 = 0;
  *(void *)(v14 + 32) = v34;
  if (sqlite3_initialize() || (uint64_t v35 = sub_1B0C7FC94(56)) == 0)
  {
    *(void *)(v14 + 16) = 0;
    goto LABEL_9;
  }
  *(void *)(v35 + 48) = 0;
  *(_OWORD *)(v35 + 16) = 0u;
  *(_OWORD *)(v35 + 32) = 0u;
  *(_OWORD *)uint64_t v35 = 0u;
  *(void *)(v14 + 16) = v35;
  if (sqlite3_initialize() || (uint64_t v36 = sub_1B0C7FC94(40)) == 0)
  {
    *(void *)(*(void *)(v14 + 16) + 32) = 0;
    goto LABEL_9;
  }
  *(void *)(v36 + 32) = 0;
  *(_OWORD *)uint64_t v36 = 0u;
  *(_OWORD *)(v36 + 16) = 0u;
  *(void *)(*(void *)(v14 + 16) + 32) = v36;
  uint64_t v37 = *(int **)(*(void *)(*(void *)v13 + 32) + 8);
  if (!v37)
  {
    int v16 = (int *)(v13 + 24);
    if (*(_DWORD *)(v13 + 24))
    {
LABEL_12:
      uint64_t v48 = v12;
      uint64_t v49 = a4;
      uint64_t v17 = 0;
      while (v17 < *v16)
      {
        uint64_t v18 = v13 + 32 * v17;
        int v19 = strlen(*(const char **)(v18 + 40));
        uint64_t v20 = sub_1B0DAE0CC((uint64_t)v51, 0, *(char **)(v18 + 40), v19);
        for (uint64_t i = *(void *)(v18 + 56); i && v20 == 0; uint64_t i = *(void *)(i + 24))
        {
          int v23 = strlen(*(const char **)(i + 8));
          uint64_t v20 = sub_1B0DAE0CC((uint64_t)v51, 1, *(char **)(i + 8), v23);
        }
        uint64_t v11 = v20;
        if (!v20)
        {
          uint64_t v24 = v51[0] + 32 * v17;
          *(unsigned char *)(v24 + 32) = *(unsigned char *)(v18 + 32);
          *(unsigned char *)(v24 + 33) = *(unsigned char *)(v13 + 32 * v17 + 33);
        }
        ++v17;
        if (v20)
        {
          uint64_t v25 = v51[0];
          a4 = v49;
          goto LABEL_26;
        }
      }
      int v33 = (_OWORD *)v51[0];
      a4 = v49;
      if (v51[0])
      {
        uint64_t v12 = v48;
        goto LABEL_57;
      }
      uint64_t v25 = 0;
      uint64_t v11 = 0;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
  int v38 = a4;
  int v39 = *v37;
  if (sqlite3_initialize() || (v47 = 4 * (v39 - 1) + 8, (uint64_t v46 = (void *)sub_1B0C7FC94(v47)) == 0))
  {
    unint64_t v40 = 0;
    if (v39 >= 0) {
      uint64_t v11 = 7;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    unint64_t v40 = v46;
    bzero(v46, v47);
    memcpy(v40, v37, v47);
    uint64_t v11 = 0;
  }
  a4 = v38;
  *(void *)(*(void *)(*(void *)(v14 + 16) + 32) + 8) = v40;
LABEL_10:
  int v16 = (int *)(v13 + 24);
  if (*(_DWORD *)(v13 + 24))
  {
    if (!v11) {
      goto LABEL_12;
    }
LABEL_25:
    uint64_t v25 = 0;
    goto LABEL_26;
  }
  if (v11) {
    goto LABEL_25;
  }
LABEL_53:
  if (!sqlite3_initialize())
  {
    int v33 = (_OWORD *)sub_1B0C7FC94(64);
    if (v33)
    {
      v33[2] = 0u;
      v33[3] = 0u;
      *int v33 = 0u;
      v33[1] = 0u;
LABEL_57:
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v12;
      *(_DWORD *)(v14 + 28) = 1;
      **(void **)(v14 + 32) = v33;
      *(void *)(*(void *)(*(void *)(v14 + 16) + 32) + 24) = v33;
      uint64_t v41 = *(void *)(v14 + 16);
      *(_DWORD *)(*(void *)(v41 + 32) + 16) = 1;
      *(void *)int v33 = v41;
      if (*v16 != 1 || *(void *)(v13 + 56) || (int v42 = sub_1B0DAACB4, *(unsigned char *)(v13 + 33)))
      {
        int v42 = sub_1B0DAADCC;
        int v43 = 9;
      }
      else
      {
        int v43 = 4;
      }
      *(_DWORD *)uint64_t v41 = v43;
      *(void *)(v41 + 16) = v42;
      *(void *)(v10 + 64) = v14;
      uint64_t v10 = v50;
      goto LABEL_62;
    }
  }
  uint64_t v25 = 0;
  uint64_t v11 = 7;
LABEL_26:
  sub_1B0DA79A0(v14);
  sub_1B0DA7D58(v25);
  *(void *)(v10 + 64) = 0;
  if (v11) {
    goto LABEL_27;
  }
LABEL_62:
  uint64_t v9 = sub_1B0DA9744((uint64_t)v8, v10, 0);
  if (!v9)
  {
    while (1)
    {
      if (*(unsigned char *)(v10 + 80))
      {
        uint64_t v11 = 0;
        goto LABEL_27;
      }
      unsigned int v44 = a4(&unk_1F09A5D00, v10, a3);
      if (v44) {
        break;
      }
      uint64_t v45 = sub_1B0D9D2F4((_DWORD *)v10);
      if (v45)
      {
        uint64_t v11 = v45;
        goto LABEL_27;
      }
    }
    if (v44 == 101) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = v44;
    }
    goto LABEL_27;
  }
LABEL_2:
  uint64_t v11 = v9;
  if (!v10) {
    return v11;
  }
LABEL_27:
  uint64_t v26 = *(void *)v10;
  v27.n128_f64[0] = sub_1B0DA7520((uint64_t *)v10);
  unint64_t v28 = (void *)(*(void *)(v26 + 48) + 72);
  do
  {
    uint64_t v29 = v28;
    uint64_t v30 = *v28;
    unint64_t v28 = (void *)(*v28 + 8);
  }
  while (v30 != v10);
  void *v29 = *(void *)(v10 + 8);
  int v31 = (void (**)(uint64_t, __n128))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_34;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
  --qword_1EB220150;
  off_1EB21C9E8(v10);
  uint64_t v10 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v31 = (void (**)(uint64_t, __n128))&xmmword_1EB21CA50;
LABEL_34:
    (*v31)(v10, v27);
  }
  return v11;
}

uint64_t sub_1B0DB5510(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = *(void **)(a1 + 152);
  if (v6)
  {
    while (*v6 != *(void *)(a1 + 144))
    {
      uint64_t v6 = (void *)v6[3];
      if (!v6) {
        goto LABEL_4;
      }
    }
    int v8 = (void (*)(void))v6[2];
    if (v8) {
      v8(v6[1]);
    }
    goto LABEL_12;
  }
LABEL_4:
  if (!sqlite3_initialize())
  {
    uint64_t v9 = sub_1B0C7FC94(32);
    if (v9)
    {
      uint64_t v6 = (void *)v9;
      *(_OWORD *)uint64_t v9 = 0u;
      *(_OWORD *)(v9 + 16) = 0u;
      uint64_t v10 = *(void *)(a1 + 152);
      *(void *)uint64_t v9 = *(void *)(a1 + 144);
      *(void *)(v9 + 24) = v10;
      *(void *)(a1 + 152) = v9;
LABEL_12:
      uint64_t result = 0;
      v6[1] = a2;
      v6[2] = a3;
      return result;
    }
  }
  if (a3) {
    a3(a2);
  }
  return 7;
}

uint64_t sub_1B0DB55C0(uint64_t a1, int a2)
{
  uint64_t v2 = *(void **)(a1 + 152);
  if (!v2) {
    return 0;
  }
  while (*v2 != *(void *)(a1 + 144))
  {
    uint64_t v2 = (void *)v2[3];
    if (!v2) {
      return 0;
    }
  }
  uint64_t v5 = v2[1];
  uint64_t v4 = v2 + 1;
  uint64_t result = v5;
  if (a2)
  {
    void *v4 = 0;
    v4[1] = 0;
  }
  return result;
}

uint64_t sub_1B0DB55F8(uint64_t a1, int a2, char **a3, _DWORD *a4, int *a5)
{
  int v12 = 0;
  uint64_t v8 = sub_1B0DB6078(a1, a2, a3, &v12);
  uint64_t v9 = v8;
  if (!v8)
  {
    if (*a3) {
      uint64_t v10 = &(*a3)[v12];
    }
    else {
      uint64_t v10 = 0;
    }
    a3[1] = v10;
    *a4 = 0;
    *a5 = 0;
    sub_1B0DB5678(v8, a3, a4, a5);
  }
  return v9;
}

void sub_1B0DB5678(uint64_t a1, char **a2, _DWORD *a3, int *a4)
{
  uint64_t v6 = *a2;
  if (*a2 >= a2[1])
  {
    int v10 = -1;
    *a3 = -1;
  }
  else
  {
    int v8 = *v6;
    if (*v6 < 0)
    {
      int v11 = v6[1];
      if (v6[1] < 0)
      {
        int v12 = v6[2];
        if (v12 < 0)
        {
          unint64_t v26 = 0;
          unsigned int v13 = sub_1B0DA69F4(v6, &v26);
          int v8 = v26 & 0x7FFFFFFF;
          uint64_t v9 = v13;
        }
        else
        {
          int v8 = v12 & 0x7F | (v8 << 14) & 0x1FC07F | ((v11 & 0x7F) << 7);
          uint64_t v9 = 3;
        }
      }
      else
      {
        int v8 = ((v8 & 0x7F) << 7) | v11;
        uint64_t v9 = 2;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    uint64_t v14 = &v6[v9];
    *a2 = v14;
    if (v8 == 1)
    {
      int v15 = *v14;
      if (*v14 < 0)
      {
        int v18 = v14[1];
        if (v14[1] < 0)
        {
          int v19 = v14[2];
          if (v19 < 0)
          {
            unint64_t v26 = 0;
            unsigned int v20 = sub_1B0DA69F4(v14, &v26);
            int v15 = v26 & 0x7FFFFFFF;
            uint64_t v16 = v20;
          }
          else
          {
            int v15 = v19 & 0x7F | (v15 << 14) & 0x1FC07F | ((v18 & 0x7F) << 7);
            uint64_t v16 = 3;
          }
        }
        else
        {
          int v15 = ((v15 & 0x7F) << 7) | v18;
          uint64_t v16 = 2;
        }
      }
      else
      {
        uint64_t v16 = 1;
      }
      uint64_t v21 = &v14[v16];
      *a2 = v21;
      *a3 = v15;
      *a4 = 0;
      int v8 = *v21;
      if (*v21 < 0)
      {
        int v23 = v21[1];
        if (v21[1] < 0)
        {
          int v24 = v21[2];
          if (v24 < 0)
          {
            unint64_t v26 = 0;
            unsigned int v25 = sub_1B0DA69F4(v21, &v26);
            int v8 = v26 & 0x7FFFFFFF;
            uint64_t v22 = v25;
          }
          else
          {
            int v8 = v24 & 0x7F | (v8 << 14) & 0x1FC07F | ((v23 & 0x7F) << 7);
            uint64_t v22 = 3;
          }
        }
        else
        {
          int v8 = ((v8 & 0x7F) << 7) | v23;
          uint64_t v22 = 2;
        }
      }
      else
      {
        uint64_t v22 = 1;
      }
      int v17 = 0;
      *a2 = &v21[v22];
    }
    else
    {
      int v17 = *a4;
    }
    int v10 = v8 + v17 - 2;
  }
  *a4 = v10;
}

uint64_t sub_1B0DB5858(uint64_t a1, int a2, uint64_t *a3, int *a4)
{
  if (*(_DWORD *)(*(void *)(*(void *)a1 + 24) + 92) == 2)
  {
    uint64_t v7 = *(void *)(a1 + 72);
    LODWORD(v29) = 0;
    if (v7)
    {
      uint64_t v8 = v7 + 4 * a2;
      if (a2) {
        int v9 = *(_DWORD *)(v8 + 24);
      }
      else {
        int v9 = 0;
      }
      int v21 = *(_DWORD *)(v8 + 28) - v9;
      uint64_t v20 = *(void *)(v7 + 16) + v9;
      *a3 = v20;
    }
    else
    {
      uint64_t v16 = *(void *)(a1 + 64);
      uint64_t v17 = *(void *)(*(void *)(v16 + 32) + 8 * a2);
      if (*(_DWORD *)(*(void *)v17 + 4)
        || (uint64_t v18 = *(void *)(*(void *)v17 + 24), v18 != *(void *)(*(void *)(v16 + 16) + 24))
        || *(int *)(v17 + 16) < 1)
      {
        int v21 = 0;
        uint64_t v20 = 0;
        *a3 = 0;
      }
      else
      {
        uint64_t v19 = *(void *)(v17 + 56);
        if (v19)
        {
          uint64_t v10 = sub_1B0DAD644(v17 + 32, v18, v19 + 32, a3, &v29);
          if (v10) {
            return v10;
          }
          uint64_t v20 = *a3;
          int v21 = v29;
        }
        else
        {
          uint64_t v20 = *(void *)(*(void *)(v17 + 48) + 8);
          *a3 = v20;
          int v21 = *(_DWORD *)(*(void *)(v17 + 48) + 16);
        }
      }
    }
    uint64_t v22 = v20 + v21;
    if (v20) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    a3[1] = v23;
    *a4 = 0;
    sub_1B0DB5A80((char *)a1, (char **)a3, a4);
    return 0;
  }
  else
  {
    int v28 = 0;
    uint64_t v10 = sub_1B0DB6078(a1, a2, a3, &v28);
    if (!v10)
    {
      int v11 = (unsigned char *)*a3;
      int v12 = v28;
      uint64_t v13 = *a3 + v28;
      if (!*a3) {
        uint64_t v13 = 0;
      }
      a3[1] = v13;
      if (v12 <= 0)
      {
        *a4 = -1;
      }
      else if (*v11 == 1)
      {
        int v14 = v11[1];
        if ((char)v11[1] < 0)
        {
          int v25 = v11[2];
          if ((char)v11[2] < 0)
          {
            int v26 = (char)v11[3];
            if (v26 < 0)
            {
              unint64_t v29 = 0;
              char v27 = sub_1B0DA69F4(v11 + 1, &v29);
              *a4 = v29 & 0x7FFFFFFF;
              uint64_t v15 = (v27 + 1);
            }
            else
            {
              *a4 = v26 & 0x7F | (v14 << 14) & 0x1FC07F | ((v25 & 0x7F) << 7);
              uint64_t v15 = 4;
            }
          }
          else
          {
            *a4 = ((v14 & 0x7F) << 7) | v25;
            uint64_t v15 = 3;
          }
        }
        else
        {
          *a4 = v14;
          uint64_t v15 = 2;
        }
        *a3 = (uint64_t)&v11[v15];
      }
      else
      {
        *a4 = 0;
      }
    }
  }
  return v10;
}

char *sub_1B0DB5A80(char *result, char **a2, int *a3)
{
  if (*(_DWORD *)(*(void *)(*(void *)result + 24) + 92) != 2)
  {
    uint64_t v8 = *a2;
    unint64_t v9 = (unint64_t)a2[1];
    while ((unint64_t)v8 < v9)
    {
      int v11 = *v8;
      if (v11 == 1)
      {
        uint64_t result = v8 + 1;
        int v12 = v8[1];
        if (v8[1] < 0)
        {
          int v15 = v8[2];
          if (v8[2] < 0)
          {
            int v17 = v8[3];
            if (v17 < 0)
            {
              unint64_t v18 = 0;
              uint64_t result = (char *)sub_1B0DA69F4(result, &v18);
              *a3 = v18 & 0x7FFFFFFF;
              uint64_t v13 = ((_BYTE)result + 1);
            }
            else
            {
              *a3 = v17 & 0x7F | (v12 << 14) & 0x1FC07F | ((v15 & 0x7F) << 7);
              uint64_t v13 = 4;
            }
          }
          else
          {
            *a3 = ((v12 & 0x7F) << 7) | v15;
            uint64_t v13 = 3;
          }
        }
        else
        {
          *a3 = v12;
          uint64_t v13 = 2;
        }
        *a2 = &v8[v13];
        return result;
      }
      if (v11 < 0)
      {
        if (v8[1] < 0)
        {
          if (v8[2] < 0)
          {
            uint64_t result = (char *)sub_1B0DA69F4(v8, &v18);
            uint64_t v10 = result;
          }
          else
          {
            uint64_t v10 = 3;
          }
        }
        else
        {
          uint64_t v10 = 2;
        }
      }
      else
      {
        uint64_t v10 = 1;
      }
      v8 += v10;
      *a2 = v8;
    }
    goto LABEL_16;
  }
  uint64_t v5 = *a2;
  if (*a2 >= a2[1])
  {
LABEL_16:
    *a3 = -1;
    return result;
  }
  int v6 = *v5;
  if (*v5 < 0)
  {
    int v14 = v5[1];
    if (v5[1] < 0)
    {
      int v16 = v5[2];
      if (v16 < 0)
      {
        unint64_t v18 = 0;
        uint64_t result = (char *)sub_1B0DA69F4(v5, &v18);
        int v6 = v18 & 0x7FFFFFFF;
        uint64_t v7 = result;
      }
      else
      {
        int v6 = v16 & 0x7F | (v6 << 14) & 0x1FC07F | ((v14 & 0x7F) << 7);
        uint64_t v7 = 3;
      }
    }
    else
    {
      int v6 = ((v6 & 0x7F) << 7) | v14;
      uint64_t v7 = 2;
    }
  }
  else
  {
    uint64_t v7 = 1;
  }
  *a2 = &v5[v7];
  *a3 = v6 + *a3 - 2;
  return result;
}

uint64_t sub_1B0DB5C58(uint64_t a1, int a2)
{
  if (*(_DWORD *)(a1 + 16)) {
    return 0;
  }
  *(void *)(a1 + 24) = 0;
  uint64_t v5 = (unint64_t *)(a1 + 24);
  int v6 = *(_DWORD **)(a1 + 8);
  uint64_t v7 = *(char **)(a1 + 32);
  uint64_t v8 = *(int *)(*(void *)v6 + 24);
  bzero(v7, 8 * v8);
  unint64_t v9 = (char **)sub_1B0DA6708((uint64_t)v6, 1);
  uint64_t v10 = v9;
  if (v6[15])
  {
    if (!v9) {
      goto LABEL_22;
    }
  }
  else if (*((_DWORD *)v9 + 2))
  {
    unsigned int v11 = sub_1B0DA69F4(*v9, v5);
    if ((int)v8 >= 1 && *((_DWORD *)v10 + 2) > (int)v11)
    {
      uint64_t v13 = v11;
      uint64_t v14 = 1;
      do
      {
        v13 += sub_1B0DA69F4(&(*v10)[v13], (unint64_t *)v7);
        BOOL v15 = (int)v13 < *((_DWORD *)v10 + 2) && v14++ < v8;
        v7 += 8;
      }
      while (v15);
    }
  }
  int v16 = (uint64_t (**)(char **))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    uint64_t v10 = (char **)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_22;
    }
    int v16 = (uint64_t (**)(char **))&xmmword_1EB21CA50;
  }
  (*v16)(v10);
LABEL_22:
  uint64_t result = v6[15];
  v6[15] = 0;
  *(_DWORD *)(a1 + 16) = a2;
  return result;
}

uint64_t sub_1B0DB5DCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  if (v2) {
    uint64_t v3 = *(unsigned int *)(v2 + 28);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(unsigned int *)(*(void *)(*(void *)a1 + 24) + 24);
  uint64_t v5 = *(char **)(a1 + 160);
  if (!v5)
  {
    if (sqlite3_initialize() || (int v33 = (char *)sub_1B0C7FC94(32 * (int)v3)) == 0)
    {
      if ((int)v3 <= 0) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = 7;
      }
      *(void *)(a1 + 160) = 0;
      return result;
    }
    uint64_t v5 = v33;
    bzero(v33, 32 * (int)v3);
    *(void *)(a1 + 160) = v5;
  }
  uint64_t v6 = v3;
  if ((int)v3 >= 1)
  {
    unint64_t v7 = 0;
    uint64_t v8 = v5 + 12;
    do
    {
      uint64_t v36 = 0;
      int v35 = 0;
      uint64_t result = sub_1B0DB6078(a1, v7, &v36, &v35);
      if (result)
      {
        LODWORD(v15) = 0;
        goto LABEL_44;
      }
      uint64_t v10 = v36;
      int v11 = v35;
      *(_OWORD *)(v8 - 12) = 0u;
      *(_OWORD *)(v8 + 4) = 0u;
      *(void *)(v8 - 12) = v10;
      *((_DWORD *)v8 - 1) = v11;
      if (sub_1B0DADA34(v10, v11, (int *)v8, (uint64_t *)(v8 + 12))) {
        v8[5] = 1;
      }
      ++v7;
      v8 += 32;
    }
    while (v7 < v3);
  }
  if ((int)v3 < 1)
  {
    uint64_t result = 0;
    LODWORD(v15) = 0;
    goto LABEL_44;
  }
  uint64_t v12 = 0;
  uint64_t v13 = (unsigned __int8 *)(v5 + 17);
  while (1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = v12;
    int v16 = v13;
    uint64_t v17 = 0xFFFFFFFFLL;
    unint64_t v18 = v13;
    do
    {
      int v19 = *v18;
      v18 += 32;
      if (!v19 && ((v17 & 0x80000000) != 0 || *(void *)(v16 + 7) < *(void *)&v5[32 * v17 + 24])) {
        uint64_t v17 = v14;
      }
      ++v14;
      int v16 = v18;
    }
    while (v6 != v14);
    if ((v17 & 0x80000000) != 0)
    {
      uint64_t result = 0;
      goto LABEL_44;
    }
    ++v12;
    uint64_t v20 = *(int *)(a1 + 168);
    uint64_t v21 = *(void *)(a1 + 176);
    if (v15 + 1 >= v20) {
      break;
    }
LABEL_28:
    char v27 = (_DWORD *)(v21 + ((0x300000000 * v12 - 0x300000000) >> 30));
    int v28 = &v5[32 * v17];
    unint64_t v30 = *((void *)v28 + 3);
    unint64_t v29 = (uint64_t *)(v28 + 24);
    unint64_t v31 = HIDWORD(v30);
    *char v27 = v17;
    v27[1] = HIDWORD(v30);
    v27[2] = v30 & 0x7FFFFFFF;
    uint64_t result = 267;
    if ((v30 & 0x8000000000000000) != 0 || (int)v4 <= (int)v31)
    {
      LODWORD(v15) = v12;
      goto LABEL_44;
    }
    unint64_t v32 = &v5[32 * v17];
    if (sub_1B0DADA34(*(void *)v32, *((_DWORD *)v32 + 2), (int *)v32 + 3, v29)) {
      v32[17] = 1;
    }
  }
  int v34 = v15;
  uint64_t v22 = v3;
  uint64_t v23 = v13;
  uint64_t v24 = v4;
  if (v20) {
    int v25 = 2 * v20;
  }
  else {
    int v25 = 32;
  }
  if (!sqlite3_initialize())
  {
    uint64_t v26 = sub_1B0C8E1B8(v21, 12 * v25);
    if (v26)
    {
      uint64_t v21 = v26;
      *(void *)(a1 + 176) = v26;
      *(_DWORD *)(a1 + 168) = v25;
      uint64_t v4 = v24;
      uint64_t v13 = v23;
      uint64_t v3 = v22;
      goto LABEL_28;
    }
  }
  uint64_t result = 7;
  LODWORD(v15) = v34;
LABEL_44:
  *(_DWORD *)(a1 + 172) = v15;
  *(_DWORD *)(a1 + 80) &= ~8u;
  return result;
}

uint64_t sub_1B0DB6078(uint64_t a1, int a2, void *a3, _DWORD *a4)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  uint64_t v9 = *(void *)(a1 + 72);
  if ((*(unsigned char *)(a1 + 80) & 0x40) == 0)
  {
    uint64_t v10 = 0;
    if (!v9) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (!*(_DWORD *)(v8 + 92))
  {
    uint64_t v10 = 0;
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(int *)(v11 + 28);
  if (sqlite3_initialize() || (uint64_t v14 = (_DWORD *)sub_1B0C7FC94(16 * v12)) == 0)
  {
    uint64_t v10 = 7;
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  bzero(v14, 16 * *(int *)(v11 + 28));
  uint64_t v16 = *(unsigned int *)(v11 + 28);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = *(_DWORD ***)(v11 + 32);
    unint64_t v18 = v15 + 3;
    do
    {
      int v19 = *v17;
      if (v9
        || v19[4]
        && *(void *)(*(void *)v19 + 24) == *(void *)(*(void *)(v11 + 16) + 24)
        && !*(_DWORD *)(*(void *)v19 + 4))
      {
        v19[4] = 0;
      }
      else
      {
        _DWORD *v18 = 1;
      }
      v18 += 4;
      ++v17;
      --v16;
    }
    while (v16);
  }
  if (*(int *)(v8 + 24) < 1)
  {
    uint64_t v10 = 0;
    goto LABEL_60;
  }
  uint64_t v26 = 0;
  while (1)
  {
    if (*(_DWORD *)(*(void *)(*(void *)a1 + 24) + 64) == 1 || *(_DWORD *)(a1 + 32) == 3)
    {
      uint64_t v28 = 0;
      uint64_t v10 = 0;
      goto LABEL_45;
    }
    uint64_t v29 = sub_1B0DB48DC((uint64_t *)a1, 0);
    if (v29) {
      break;
    }
    uint64_t v10 = (uint64_t)sqlite3_column_text(*(sqlite3_stmt **)(a1 + 56), (int)v26 + 1);
    uint64_t v28 = sqlite3_column_bytes(*(sqlite3_stmt **)(a1 + 56), v26 + 1);
LABEL_45:
    uint64_t v30 = *(void *)(a1 + 64);
    v39[0] = v30;
    v39[1] = v15;
    v39[2] = (v26 << 32) - 1;
    uint64_t v31 = *(unsigned int *)(v30 + 28);
    if ((int)v31 >= 1)
    {
      uint64_t v32 = 0;
      uint64_t v33 = *(void *)(v30 + 32);
      do
      {
        int v35 = *(unsigned int **)(*(void *)(**(void **)(v33 + 8 * v32) + 32) + 8);
        if (v35)
        {
          uint64_t v34 = *v35;
          if ((int)v34 < 1)
          {
            LODWORD(v34) = 0;
            goto LABEL_48;
          }
          uint64_t v36 = (int *)(v35 + 1);
          while (1)
          {
            int v37 = *v36++;
            if (v26 == v37) {
              break;
            }
            if (!--v34) {
              goto LABEL_48;
            }
          }
        }
        LODWORD(v34) = v15[4 * v32 + 3] == 0;
LABEL_48:
        v15[4 * v32++ + 2] = v34;
      }
      while (v32 != v31);
    }
    if (v10) {
      uint64_t v10 = (*(uint64_t (**)(void, void *, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t *, char, const void *, int)))(*(void *)(v8 + 112) + 16))(*(void *)(v8 + 104), v39, 4, v10, v28, sub_1B0DB642C);
    }
    if (++v26 >= *(int *)(v8 + 24) || v10 != 0) {
      goto LABEL_60;
    }
  }
  uint64_t v10 = v29;
LABEL_60:
  int v38 = (uint64_t (**)(void *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v15);
    --qword_1EB220150;
    off_1EB21C9E8(v15);
    uint64_t v15 = (_DWORD *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v38 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
      goto LABEL_65;
    }
  }
  else
  {
LABEL_65:
    (*v38)(v15);
  }
LABEL_7:
  uint64_t v13 = *(void *)(a1 + 72);
  if (v13)
  {
    sub_1B0DB65A0(*(void *)(*(void *)(a1 + 64) + 16), *(void *)(v13 + 8));
    uint64_t v9 = *(void *)(a1 + 72);
  }
  else
  {
    uint64_t v9 = 0;
  }
LABEL_21:
  *(_DWORD *)(a1 + 80) &= ~0x40u;
  if (!v9) {
    goto LABEL_23;
  }
LABEL_22:
  if (!*(_DWORD *)(v8 + 92))
  {
    uint64_t v23 = v9 + 4 * a2;
    if (a2) {
      int v24 = *(_DWORD *)(v23 + 24);
    }
    else {
      int v24 = 0;
    }
    *a4 = *(_DWORD *)(v23 + 28) - v24;
    *a3 = *(void *)(v9 + 16) + v24;
    return v10;
  }
LABEL_23:
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(*(void *)(v20 + 32) + 8 * a2);
  if (*(_DWORD *)(*(void *)v21 + 4)
    || *(void *)(*(void *)v21 + 24) != *(void *)(*(void *)(v20 + 16) + 24))
  {
    int v22 = 0;
    *a3 = 0;
  }
  else
  {
    *a3 = *(void *)(v21 + 8);
    int v22 = *(_DWORD *)(v21 + 16);
  }
  *a4 = v22;
  return v10;
}

uint64_t sub_1B0DB642C(uint64_t *a1, char a2, const void *a3, int a4)
{
  uint64_t v6 = *a1;
  if (a4 >= 0x8000) {
    int v7 = 0x8000;
  }
  else {
    int v7 = a4;
  }
  if ((a2 & 1) == 0) {
    ++a1[2];
  }
  int v8 = *(_DWORD *)(v6 + 28);
  if (v8 < 1) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v21 = v6;
  while (1)
  {
    uint64_t v10 = a1[1];
    if (!*(_DWORD *)(v10 + 16 * v9 + 8)) {
      goto LABEL_9;
    }
    uint64_t v11 = *(void *)(*(void *)(v6 + 32) + 8 * v9);
    uint64_t v12 = v11 + 32;
    while (1)
    {
      int v13 = strlen(*(const char **)(v12 + 8));
      if ((v7 == v13 || v7 > v13 && *(unsigned char *)v12) && !memcmp(*(const void **)(v12 + 8), a3, v13)) {
        break;
      }
      uint64_t v12 = *(void *)(v12 + 24);
      if (!v12) {
        goto LABEL_9;
      }
    }
    uint64_t v14 = a1[2];
    LODWORD(v15) = *(_DWORD *)(v11 + 20);
    unint64_t v16 = (*(_DWORD *)(v11 + 16) + 15);
    if (v16 > v15) {
      break;
    }
LABEL_8:
    sub_1B0DADC38(v11 + 8, (uint64_t *)(v10 + 16 * v9), v14);
    int v8 = *(_DWORD *)(v6 + 28);
LABEL_9:
    if (++v9 >= v8) {
      return 0;
    }
  }
  if (!v15) {
    LODWORD(v15) = 64;
  }
  unint64_t v15 = (int)v15;
  do
  {
    unint64_t v17 = v15;
    v15 *= 2;
  }
  while (v17 < v16);
  uint64_t v18 = *(void *)(v11 + 8);
  if (!sqlite3_initialize())
  {
    uint64_t v19 = sub_1B0C8E1B8(v18, v17);
    if (v19)
    {
      *(_DWORD *)(v11 + 20) = v17;
      *(void *)(v11 + 8) = v19;
      uint64_t v6 = v21;
      goto LABEL_8;
    }
  }
  return 7;
}

uint64_t sub_1B0DB65A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  *(_DWORD *)(a1 + 4) = 0;
  switch(*(_DWORD *)a1)
  {
    case 1:
      if (*(int *)(a1 + 40) < 1) {
        goto LABEL_18;
      }
      uint64_t v5 = 0;
      LODWORD(v4) = 0;
      do
      {
        if (sub_1B0DB65A0(*(void *)(a1 + 48 + 8 * v5), a2)) {
          uint64_t v4 = 1;
        }
        else {
          uint64_t v4 = v4;
        }
        ++v5;
      }
      while (v5 < *(int *)(a1 + 40));
      break;
    case 2:
      if (*(int *)(a1 + 40) < 1) {
        goto LABEL_19;
      }
      uint64_t v6 = 6;
      do
      {
        if (!sub_1B0DB65A0(*(void *)(a1 + 8 * v6), a2)) {
          goto LABEL_17;
        }
        uint64_t v7 = v6 - 5;
        ++v6;
      }
      while (v7 < *(int *)(a1 + 40));
      goto LABEL_19;
    case 4:
    case 9:
      uint64_t v4 = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 24) + 16) > 0;
      break;
    default:
      if (sub_1B0DB65A0(*(void *)(a1 + 48), a2)
        && !sub_1B0DB65A0(*(void *)(a1 + 56), a2))
      {
LABEL_19:
        uint64_t v4 = 1;
      }
      else
      {
LABEL_17:
        sub_1B0DB66F8(a1);
LABEL_18:
        uint64_t v4 = 0;
      }
      break;
  }
  return v4;
}

uint64_t sub_1B0DB66F8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_DWORD *)result == 4 || *(_DWORD *)result == 9)
  {
    *(_DWORD *)(*(void *)(*(void *)(result + 32) + 24) + 16) = 0;
  }
  else if (*(int *)(result + 40) >= 1)
  {
    uint64_t v3 = 0;
    do
      uint64_t result = sub_1B0DB66F8(*(void *)(v1 + 48 + 8 * v3++));
    while (v3 < *(int *)(v1 + 40));
  }
  return result;
}

uint64_t sub_1B0DB676C(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(unsigned int *)(*a1 + 24);
  uint64_t v19 = 0;
  uint64_t result = sub_1B0DA55D8(a1, 8, &v19, 0);
  uint64_t v7 = v19;
  if (v19)
  {
    if (!sub_1B0CC3F2C((uint64_t)v19, 0))
    {
      uint64_t v8 = *((void *)v7 + 16);
      if ((*(_WORD *)(v8 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v8, a2);
      }
      else
      {
        *(void *)uint64_t v8 = a2;
        *(_WORD *)(v8 + 20) = 4;
      }
      uint64_t v9 = *(void *)(*(void *)v7 + 24);
      if (v9) {
        xmmword_1EB21CA50(v9);
      }
    }
    if (sqlite3_step(v7) == 100)
    {
      uint64_t v10 = (char *)sqlite3_column_blob(v7, 0);
      int v11 = sqlite3_column_bytes(v7, 0);
      if ((int)v5 < 1)
      {
        int v12 = 0;
LABEL_22:
        BOOL v18 = v12 != v11;
        goto LABEL_23;
      }
      int v12 = 0;
      while (v12 < v11)
      {
        uint64_t v14 = &v10[v12];
        int v15 = *v14;
        if (*v14 < 0)
        {
          int v16 = v14[1];
          if (v14[1] < 0)
          {
            int v17 = v14[2];
            if (v17 < 0)
            {
              unint64_t v20 = 0;
              int v13 = sub_1B0DA69F4(v14, &v20);
              *a3 = v20 & 0x7FFFFFFF;
            }
            else
            {
              *a3 = v17 & 0x7F | (v15 << 14) & 0x1FC07F | ((v16 & 0x7F) << 7);
              int v13 = 3;
            }
          }
          else
          {
            *a3 = ((v15 & 0x7F) << 7) | v16;
            int v13 = 2;
          }
        }
        else
        {
          *a3 = v15;
          int v13 = 1;
        }
        v12 += v13;
        ++a3;
        if (!--v5) {
          goto LABEL_22;
        }
      }
    }
    BOOL v18 = 1;
LABEL_23:
    LODWORD(result) = sqlite3_reset(v7);
    if (v18 && result == 0) {
      return 267;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t sub_1B0DB6934(_DWORD *a1, char a2)
{
  if ((a2 & 1) == 0) {
    ++*a1;
  }
  return 0;
}

char *sub_1B0DB694C(uint64_t a1, char *a2, ...)
{
  va_start(va, a2);
  uint64_t result = sqlite3_vmprintf(a2, va);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B0DB6990(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (!v3)
  {
    sub_1B0CE1978(97220);
    return 0;
  }
  __int16 v4 = *(_WORD *)(v3 + 20);
  if (((0x50505050uLL >> v4) & 1) == 0) {
    return 0;
  }
  if ((v4 & 0x24) != 0)
  {
    unint64_t v6 = *(void *)v3;
  }
  else if ((v4 & 8) != 0)
  {
    double v9 = *(double *)v3;
    if (*(double *)v3 >= -9.22337204e18)
    {
      if (v9 <= 9.22337204e18) {
        unint64_t v6 = (uint64_t)v9;
      }
      else {
        unint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
      }
    }
    else
    {
      unint64_t v6 = 0x8000000000000000;
    }
  }
  else if ((v4 & 0x12) != 0 && *(void *)(v3 + 8))
  {
    unint64_t v6 = sub_1B0D186C0(v3);
  }
  else
  {
    unint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t **)(a1 + 40);

  return sub_1B0DB6A78(v7, v6, a2 + 16);
}

uint64_t sub_1B0DB6A78(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v89 = *a1;
  uint64_t v101 = 0;
  uint64_t result = sub_1B0DB5C58((uint64_t)a1, 1);
  if (result) {
    return result;
  }
  uint64_t result = sub_1B0DB7E4C((uint64_t *)v5[1], 1, a2);
  if (result) {
    return result;
  }
  uint64_t v7 = *v5;
  uint64_t v87 = v5;
  unint64_t v88 = a2;
  if (!*(_DWORD *)(*v5 + 68))
  {
    uint64_t v103 = 0xFFFFFFFFLL;
    uint64_t v104 = 0;
    if (!a3)
    {
      uint64_t result = sub_1B0DA55D8(v5, 2, &v104, 0);
      if (result) {
        goto LABEL_176;
      }
      int v22 = v104;
      if (!sub_1B0CC3F2C((uint64_t)v104, 0))
      {
        uint64_t v23 = *((void *)v22 + 16);
        if ((*(_WORD *)(v23 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v23, a2);
        }
        else
        {
          *(void *)uint64_t v23 = a2;
          *(_WORD *)(v23 + 20) = 4;
        }
        uint64_t v75 = *(void *)(*(void *)v22 + 24);
        if (v75) {
          xmmword_1EB21CA50(v75);
        }
      }
      if (sqlite3_step(v22) != 100)
      {
        uint64_t result = sqlite3_reset(v22);
        if (result) {
          return result;
        }
        goto LABEL_183;
      }
    }
    uint64_t v10 = 0;
    int v102 = (sqlite3_stmt *)v5;
    while (1)
    {
      if (v10 + 1 > *(int *)(v7 + 24))
      {
        uint64_t v24 = v5[3];
        int v25 = v104;
        if (v24 <= 0)
        {
          sqlite3_reset(v104);
          return 267;
        }
        unsigned int v21 = 0;
        goto LABEL_50;
      }
      if (*(unsigned char *)(*(void *)(v7 + 40) + v10)) {
        goto LABEL_10;
      }
      int v11 = v104;
      if (v104)
      {
        uint64_t v12 = (uint64_t)sqlite3_column_text(v104, (int)v10 + 1);
        uint64_t v13 = sqlite3_column_bytes(v11, v10 + 1);
        goto LABEL_15;
      }
      if (!a3)
      {
LABEL_10:
        ++v10;
      }
      else
      {
        uint64_t v17 = *(void *)(a3 + 8 * v10);
        if (!v17)
        {
          uint64_t v12 = 0;
LABEL_33:
          sub_1B0CE1978(91138);
          uint64_t v14 = 0;
          goto LABEL_16;
        }
        int v18 = *(unsigned __int16 *)(v17 + 20);
        if ((~v18 & 0x202) != 0 || *(unsigned char *)(v17 + 22) != 1)
        {
          if (v18)
          {
            uint64_t v12 = 0;
          }
          else
          {
            uint64_t v12 = sub_1B0D18254((int *)v17, 1);
            uint64_t v17 = *(void *)(a3 + 8 * v10);
            if (!v17) {
              goto LABEL_33;
            }
            LOWORD(v18) = *(_WORD *)(v17 + 20);
          }
        }
        else
        {
          uint64_t v12 = *(void *)(v17 + 8);
        }
        if ((v18 & 2) != 0 && *(unsigned char *)(v17 + 22) == 1)
        {
          uint64_t v14 = *(unsigned int *)(v17 + 16);
          goto LABEL_16;
        }
        if ((v18 & 0x10) != 0)
        {
          uint64_t v14 = *(unsigned int *)(v17 + 16);
          if ((v18 & 0x400) != 0) {
            uint64_t v14 = (*(_DWORD *)v17 + v14);
          }
          goto LABEL_16;
        }
        if (v18)
        {
          uint64_t v14 = 0;
          goto LABEL_16;
        }
        uint64_t v13 = sub_1B0D18228(v17, 1);
LABEL_15:
        uint64_t v14 = v13;
LABEL_16:
        HIDWORD(v103) = 0;
        if (v12)
        {
          unsigned int v15 = (*(uint64_t (**)(void, sqlite3_stmt **, uint64_t, uint64_t, uint64_t, uint64_t (*)(_DWORD *, char, unsigned __int8 *, int)))(*(void *)(v7 + 112) + 16))(*(void *)(v7 + 104), &v102, 4, v12, v14, sub_1B0DB7FE0);
          int v16 = HIDWORD(v103);
        }
        else
        {
          int v16 = 0;
          unsigned int v15 = 0;
        }
        uint64_t v19 = v5[4];
        uint64_t v20 = *(void *)(v19 + 8 * v10) - v16;
        *(void *)(v19 + 8 * v10) = v20;
        if (v20 >= 0) {
          unsigned int v21 = v15;
        }
        else {
          unsigned int v21 = 267;
        }
        ++v10;
        if (v21)
        {
          uint64_t v24 = v5[3];
          int v25 = v104;
LABEL_50:
          a2 = v88;
          v5[3] = v24 - 1;
          LODWORD(result) = sqlite3_reset(v25);
          if (v21) {
            uint64_t result = v21;
          }
          else {
            uint64_t result = result;
          }
          if (result) {
            return result;
          }
LABEL_183:
          if (*(_DWORD *)(v89 + 88))
          {
            uint64_t result = sub_1B0DA55D8(v5, 7, &v101, 0);
            if (result) {
              return result;
            }
            int v76 = v101;
            if (!sub_1B0CC3F2C((uint64_t)v101, 0))
            {
              uint64_t v77 = *((void *)v76 + 16);
              if ((*(_WORD *)(v77 + 20) & 0x9000) != 0)
              {
                sub_1B0D18980(v77, a2);
              }
              else
              {
                *(void *)uint64_t v77 = a2;
                *(_WORD *)(v77 + 20) = 4;
              }
              uint64_t v78 = *(void *)(*(void *)v76 + 24);
              if (v78) {
                xmmword_1EB21CA50(v78);
              }
            }
            sqlite3_step(v76);
            uint64_t result = sqlite3_reset(v76);
            if (*(_DWORD *)(v89 + 64) | result) {
              return result;
            }
          }
          else if (*(_DWORD *)(v89 + 64))
          {
            return 0;
          }
          uint64_t result = sub_1B0DA55D8(v5, 5, &v101, 0);
          if (!result)
          {
            unint64_t v79 = v101;
            if (!sub_1B0CC3F2C((uint64_t)v101, 0))
            {
              uint64_t v80 = *((void *)v79 + 16);
              if ((*(_WORD *)(v80 + 20) & 0x9000) != 0)
              {
                sub_1B0D18980(v80, a2);
              }
              else
              {
                *(void *)uint64_t v80 = a2;
                *(_WORD *)(v80 + 20) = 4;
              }
              uint64_t v81 = *(void *)(*(void *)v79 + 24);
              if (v81) {
                xmmword_1EB21CA50(v81);
              }
            }
            sqlite3_step(v79);
            return sqlite3_reset(v79);
          }
          return result;
        }
      }
    }
  }
  int v102 = 0;
  uint64_t result = sub_1B0DA55D8(v5, 8, &v102, 0);
  if (result) {
    goto LABEL_176;
  }
  uint64_t v8 = v102;
  if (!sub_1B0CC3F2C((uint64_t)v102, 0))
  {
    uint64_t v9 = *((void *)v8 + 16);
    if ((*(_WORD *)(v9 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v9, a2);
    }
    else
    {
      *(void *)uint64_t v9 = a2;
      *(_WORD *)(v9 + 20) = 4;
    }
    uint64_t v26 = *(void *)(*(void *)v8 + 24);
    if (v26) {
      xmmword_1EB21CA50(v26);
    }
  }
  unint64_t v27 = sqlite3_step(v8) == 100 ? sqlite3_column_int64(v8, 1) : 0;
  uint64_t result = sqlite3_reset(v8);
  if (result || !v27) {
    goto LABEL_176;
  }
  uint64_t v28 = v5[1];
  uint64_t v29 = sub_1B0DA5A0C(v28);
  if (!v29) {
    goto LABEL_175;
  }
  uint64_t v82 = v29;
  uint64_t v30 = v29[7];
  if ((int)v30 < 1) {
    goto LABEL_174;
  }
  int v31 = 0;
  unint64_t v83 = HIDWORD(a2);
  unint64_t v84 = v27;
  uint64_t v94 = v28;
  while (2)
  {
    uint64_t v33 = v30 - 1;
    uint64_t v34 = v82[4 * (v30 - 1) + 9];
    if ((int)v34 < 1) {
      goto LABEL_67;
    }
    unint64_t v93 = (uint64_t *)&v82[4 * (v30 - 1) + 10];
    uint64_t v85 = v30;
    uint64_t v86 = v30 - 1;
    while (2)
    {
      uint64_t v36 = *v93;
      uint64_t v95 = v34 - 1;
      uint64_t v96 = v34;
      unsigned int v37 = v34 - 1;
      uint64_t v99 = *v93 + 56 * (v34 - 1);
      if (*(void *)(v99 + 16) > v27 || *(void *)(v36 + 56 * v37 + 24) < v27) {
        goto LABEL_73;
      }
      if (!v31) {
        ++*(void *)(v36 + 56 * v37 + 40);
      }
      ++*(_DWORD *)(v28 + 52);
      uint64_t v38 = v36 + 56 * v37;
      unint64_t v39 = *(unsigned int *)(v38 + 32);
      uint64_t v98 = (int *)(v38 + 32);
      int v90 = *(_DWORD *)(v38 + 32);
      if (v90 < 1)
      {
        int v97 = 0;
        int v42 = 4;
        int v43 = *(_DWORD *)(v38 + 32);
        uint64_t v100 = 0xFFFFFFFFLL;
        unsigned int v44 = v98;
        goto LABEL_86;
      }
      uint64_t v100 = a2 % v39;
      unint64_t v40 = (unsigned __int8 **)sub_1B0DA6708(v28, (a2 % v39) | ((unint64_t)(*(_DWORD *)v99 + 0x10000) << 37));
      if (!v40)
      {
LABEL_72:
        int v31 = 1;
        goto LABEL_73;
      }
      uint64_t v41 = v40;
      if (!sub_1B0DBE87C(v40, 0, *v98, a2))
      {
        uint64_t v74 = v41;
        sub_1B0DA42D0((unsigned __int8 *)v28, v100 | ((unint64_t)(*(_DWORD *)v99 + 0x10000) << 37), (char *)*v41, *((_DWORD *)v41 + 2));
        int v35 = (uint64_t (**)(unsigned __int8 **))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v41);
          --qword_1EB220150;
          off_1EB21C9E8(v41);
          uint64_t v74 = (unsigned __int8 **)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0)
          {
            int v31 = 1;
            goto LABEL_168;
          }
          int v35 = (uint64_t (**)(unsigned __int8 **))&xmmword_1EB21CA50;
          uint64_t v33 = v86;
        }
        (*v35)(v74);
        goto LABEL_72;
      }
      int v97 = v41;
      if (**v41 == 4) {
        int v42 = 4;
      }
      else {
        int v42 = 8;
      }
      int v43 = *v98;
      unsigned int v44 = v98;
LABEL_86:
      if (v83) {
        int v45 = 8;
      }
      else {
        int v45 = v42;
      }
      int v46 = (*(_DWORD *)(*(void *)v28 + 136) - 8) / v45;
      unsigned int v47 = 32;
      if (v46 <= 32) {
        int v46 = 32;
      }
      unsigned int v91 = v46;
      if (!v43
        || v43 == 1 && ((signed int v48 = 4 * bswap32(*((_DWORD *)*v97 + 1)), v48 <= 32) ? (v47 = 32) : (v47 = v48), v47 <= v91))
      {
        int v49 = 1;
      }
      else
      {
        int v49 = (2 * v43) | 1;
        unsigned int v47 = v91;
      }
      int v92 = v45;
      if (*(_DWORD *)(v28 + 60))
      {
LABEL_100:
        uint64_t v50 = 0;
        if (v49 < 1) {
          goto LABEL_101;
        }
      }
      else
      {
LABEL_104:
        if (sqlite3_initialize() || (uint64_t v51 = (void *)sub_1B0C7FC94(8 * v49)) == 0)
        {
          if (v49 < 1)
          {
            uint64_t v50 = 0;
            if (*(_DWORD *)(v28 + 60)) {
              goto LABEL_155;
            }
            goto LABEL_120;
          }
          uint64_t v50 = 0;
          *(_DWORD *)(v28 + 60) = 7;
        }
        else
        {
          uint64_t v50 = (uint64_t)v51;
          bzero(v51, 8 * v49);
          if (v49 < 1)
          {
LABEL_101:
            if (*(_DWORD *)(v28 + 60))
            {
LABEL_155:
              sub_1B0DA84A4(v50, v49);
              uint64_t v50 = 0;
              int v49 = 0;
              goto LABEL_160;
            }
            goto LABEL_120;
          }
        }
      }
      uint64_t v52 = 0;
      int v53 = v47 * v45;
      do
      {
        if (!*(_DWORD *)(v28 + 60))
        {
          if (sqlite3_initialize() || (int v54 = (_DWORD *)sub_1B0C7FC94(v53 + 24)) == 0)
          {
            if (v53 >= -23) {
              *(_DWORD *)(v28 + 60) = 7;
            }
          }
          else
          {
            unint64_t v55 = v54;
            bzero(v54, v53 + 24);
            v55[2] = v53 + 8;
            *(void *)unint64_t v55 = v55 + 4;
            *(void *)(v50 + 8 * v52) = v55;
          }
        }
        ++v52;
      }
      while (v49 != v52);
      if (*(_DWORD *)(v28 + 60)) {
        goto LABEL_155;
      }
      uint64_t v56 = 0;
      do
      {
        ***(unsigned char ***)(v50 + 8 * v56) = v92;
        uint64_t v57 = **(void **)(v50 + 8 * v56++);
        *(_DWORD *)(v57 + 4) = 0;
      }
      while (v49 != v56);
LABEL_120:
      uint64_t v58 = 0;
      while (v58 < *v44)
      {
        if (v58 == v100)
        {
          int v59 = 0;
          uint64_t v60 = v97;
          if (!v97) {
            goto LABEL_139;
          }
        }
        else
        {
          uint64_t v60 = sub_1B0DA6708(v28, v58 | ((unint64_t)(*(_DWORD *)v99 + 0x10000) << 37));
          int v59 = v60;
          if (!v60)
          {
LABEL_139:
            int v70 = 0;
            goto LABEL_146;
          }
        }
        int v61 = **(unsigned __int8 **)v60;
        if (v61 == 4) {
          int v62 = 4;
        }
        else {
          int v62 = 8;
        }
        uint64_t v63 = ((v60[2] - 8) / v62);
        if ((int)v63 < 1)
        {
          int v70 = 0;
          unsigned int v44 = v98;
          if (!v58) {
            goto LABEL_145;
          }
          goto LABEL_146;
        }
        uint64_t v64 = 0;
        while (1)
        {
          uint64_t v66 = *(void *)v60;
          if (v61 == 4)
          {
            unsigned int v67 = *(_DWORD *)(v66 + 4 * v64 + 8);
            if (!v67) {
              goto LABEL_132;
            }
            unint64_t v68 = bswap32(v67);
          }
          else
          {
            unint64_t v69 = *(void *)(v66 + 8 * v64 + 8);
            if (!v69) {
              goto LABEL_132;
            }
            unint64_t v68 = bswap64(v69);
          }
          int v65 = sub_1B0DBE87C(*(unsigned __int8 ***)(v50 + 8 * (v68 % v49)), 0, v49, v68);
          if (v65) {
            break;
          }
LABEL_132:
          if (v63 == ++v64)
          {
            int v70 = 0;
            goto LABEL_144;
          }
        }
        int v70 = v65;
LABEL_144:
        uint64_t v28 = v94;
        unsigned int v44 = v98;
        if (!v58) {
LABEL_145:
        }
          *(unsigned char *)(**(void **)v50 + 1) = *(unsigned char *)(*(void *)v60 + 1);
LABEL_146:
        if (v59)
        {
          int v71 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_121;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v59);
          --qword_1EB220150;
          off_1EB21C9E8(v59);
          int v59 = (_DWORD *)xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            int v71 = &xmmword_1EB21CA50;
LABEL_121:
            (*v71)(v59);
          }
        }
        ++v58;
        if (v70)
        {
          sub_1B0DA84A4(v50, v49);
          int v49 = (2 * v49) | 1;
          unsigned int v47 = v91;
          int v45 = v92;
          if (*(_DWORD *)(v28 + 60)) {
            goto LABEL_100;
          }
          goto LABEL_104;
        }
      }
      if (*(_DWORD *)(v28 + 60)) {
        goto LABEL_155;
      }
      sub_1B0DBE87C(*(unsigned __int8 ***)(v50 + 8 * (v88 % v49)), 1, v49, v88);
      if (v49 >= 1)
      {
        for (uint64_t i = 0; i != v49; ++i)
          sub_1B0DA42D0((unsigned __int8 *)v28, i | ((unint64_t)(*(_DWORD *)v99 + 0x10000) << 37), **(char ***)(v50 + 8 * i), *(_DWORD *)(*(void *)(v50 + 8 * i) + 8));
      }
      int *v98 = v49;
      sub_1B0DA4564((unsigned __int8 *)v28, *(void *)(v28 + 144));
LABEL_160:
      if (v90 >= 1)
      {
        unsigned int v73 = (uint64_t (**)(unsigned __int8 **))&off_1EB21C9E8;
        if (!dword_1EB21C9C0) {
          goto LABEL_166;
        }
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v97);
        --qword_1EB220150;
        off_1EB21C9E8(v97);
        int v97 = (unsigned __int8 **)xmmword_1EB2201B0;
        if ((void)xmmword_1EB2201B0)
        {
          unsigned int v73 = (uint64_t (**)(unsigned __int8 **))&xmmword_1EB21CA50;
LABEL_166:
          (*v73)(v97);
        }
      }
      sub_1B0DA84A4(v50, v49);
      int v31 = 1;
      uint64_t v5 = v87;
      a2 = v88;
      unint64_t v27 = v84;
      uint64_t v30 = v85;
LABEL_168:
      uint64_t v33 = v86;
LABEL_73:
      uint64_t v34 = v95;
      if (v96 > 1) {
        continue;
      }
      break;
    }
LABEL_67:
    BOOL v32 = v30 < 2;
    uint64_t v30 = v33;
    if (!v32) {
      continue;
    }
    break;
  }
LABEL_174:
  sub_1B0DA4EF8(v82);
LABEL_175:
  uint64_t result = *(unsigned int *)(v28 + 60);
  *(_DWORD *)(v28 + 60) = 0;
LABEL_176:
  if (!result) {
    goto LABEL_183;
  }
  return result;
}

uint64_t sub_1B0DB7664(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t result = sub_1B0DB76C8(*(uint64_t **)(a2 + 40), a3, a4);
    if (!result) {
      uint64_t result = sub_1B0DB79C0(*(void *)(a2 + 40), a3, *a4);
    }
  }
  *a1 = result;
  return result;
}

uint64_t sub_1B0DB76C8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a1;
  if (!*(_DWORD *)(*a1 + 64))
  {
    uint64_t v26 = 0;
    uint64_t v10 = sub_1B0DA55D8(a1, 3, &v26, 0);
    if (v10)
    {
      uint64_t v11 = *(void *)v6;
      if (*(void *)v6)
      {
LABEL_9:
        int v12 = *(unsigned __int8 *)(v11 + 113);
        switch(v12)
        {
          case 186:
            goto LABEL_12;
          case 118:
            uint64_t v23 = *(void *)(v11 + 56);
            goto LABEL_43;
          case 109:
LABEL_12:
            uint64_t v13 = "unopened";
            break;
          default:
            uint64_t v13 = "invalid";
            break;
        }
LABEL_42:
        sqlite3_log(21, "API call with %s database connection pointer", v13);
        sub_1B0CE1978(186263);
        uint64_t v23 = 0;
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v20 = v26;
      uint64_t v21 = 1;
      while (v21 <= *(int *)(v6 + 24) + 1)
      {
        uint64_t v22 = sqlite3_bind_value(v20, v21, *(const sqlite3_value **)(a2 + 8 * v21));
        ++v21;
        if (v22) {
          goto LABEL_38;
        }
      }
      sqlite3_step(v20);
      uint64_t v22 = sqlite3_reset(v20);
LABEL_38:
      uint64_t v10 = v22;
      uint64_t v11 = *(void *)v6;
      if (*(void *)v6) {
        goto LABEL_9;
      }
    }
    uint64_t v13 = "NULL";
    goto LABEL_42;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7)
  {
    __int16 v8 = *(_WORD *)(v7 + 20);
    if ((0x50505050uLL >> v8))
    {
      if ((v8 & 0x24) != 0)
      {
        uint64_t v9 = *(void *)v7;
      }
      else if ((v8 & 8) != 0)
      {
        double v25 = *(double *)v7;
        if (*(double *)v7 >= -9.22337204e18)
        {
          if (v25 <= 9.22337204e18) {
            uint64_t v9 = (uint64_t)v25;
          }
          else {
            uint64_t v9 = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v9 = 0x8000000000000000;
        }
      }
      else if ((v8 & 0x12) != 0 && *(void *)(v7 + 8))
      {
        uint64_t v9 = sub_1B0D186C0(v7);
      }
      else
      {
        uint64_t v9 = 0;
      }
      uint64_t v10 = 0;
      *a3 = v9;
      return v10;
    }
  }
  else
  {
    sub_1B0CE1978(97220);
    uint64_t v6 = *a1;
  }
  if (!*(_DWORD *)(v6 + 88)) {
    return 20;
  }
  uint64_t v26 = 0;
  uint64_t v10 = sub_1B0DA55D8(a1, 6, &v26, 0);
  if (!v10)
  {
    uint64_t v14 = v26;
    if (!sub_1B0CC3F2C((uint64_t)v26, 0))
    {
      uint64_t v15 = *(void *)(*(void *)v14 + 24);
      if (v15) {
        xmmword_1EB21CA50(v15);
      }
    }
    if (!sub_1B0CC3F2C((uint64_t)v14, 1u))
    {
      uint64_t v16 = *(void *)(*(void *)v14 + 24);
      if (v16) {
        xmmword_1EB21CA50(v16);
      }
    }
    sqlite3_step(v14);
    uint64_t v10 = sqlite3_reset(v14);
    if (!v10)
    {
      uint64_t v17 = *(void *)*a1;
      if (!v17)
      {
        uint64_t v19 = "NULL";
        goto LABEL_54;
      }
      int v18 = *(unsigned __int8 *)(v17 + 113);
      if (v18 == 186)
      {
LABEL_27:
        uint64_t v19 = "unopened";
LABEL_54:
        sqlite3_log(21, "API call with %s database connection pointer", v19);
        sub_1B0CE1978(186263);
        uint64_t v23 = 0;
        uint64_t v10 = 0;
        goto LABEL_43;
      }
      if (v18 != 118)
      {
        if (v18 != 109)
        {
          uint64_t v19 = "invalid";
          goto LABEL_54;
        }
        goto LABEL_27;
      }
      uint64_t v23 = *(void *)(v17 + 56);
      uint64_t v10 = 0;
LABEL_43:
      *a3 = v23;
    }
  }
  return v10;
}

uint64_t sub_1B0DB79C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v31 = a1;
  uint64_t v32 = 0;
  uint64_t v7 = sub_1B0DB5C58(a1, 1);
  if (v7)
  {
    uint64_t v8 = v7;
    LODWORD(v32) = 0;
    goto LABEL_4;
  }
  uint64_t v8 = sub_1B0DB7E4C(*(uint64_t **)(a1 + 8), 0, a3);
  LODWORD(v32) = 0;
  if (v8)
  {
LABEL_4:
    ++*(void *)(a1 + 24);
    uint64_t v9 = v29;
    if (v29) {
      goto LABEL_5;
    }
    return v8;
  }
  unsigned int v12 = 0;
  unsigned int v13 = 0;
  int v14 = 0;
  while (v14 < *(_DWORD *)(v6 + 24))
  {
    uint64_t v8 = 0;
    HIDWORD(v32) = 0;
    if (*(unsigned char *)(*(void *)(v6 + 40) + v14)) {
      goto LABEL_40;
    }
    uint64_t v17 = v14 + 2;
    uint64_t v18 = *(void *)(a2 + 8 * v17);
    if (!v18) {
      goto LABEL_27;
    }
    int v19 = *(unsigned __int16 *)(v18 + 20);
    if ((~v19 & 0x202) == 0 && *(unsigned char *)(v18 + 22) == 1)
    {
      uint64_t v8 = *(void *)(v18 + 8);
      uint64_t v20 = *(void *)(a2 + 8 * v17);
      if (!v20) {
        goto LABEL_25;
      }
      goto LABEL_28;
    }
    if (v19)
    {
LABEL_27:
      uint64_t v8 = 0;
      uint64_t v20 = *(void *)(a2 + 8 * v17);
      if (!v20)
      {
LABEL_25:
        sub_1B0CE1978(91138);
        uint64_t v21 = 0;
        if (v8) {
          goto LABEL_39;
        }
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v8 = sub_1B0D18254((int *)v18, 1);
      uint64_t v20 = *(void *)(a2 + 8 * ((int)v32 + 2));
      if (!v20) {
        goto LABEL_25;
      }
    }
LABEL_28:
    __int16 v22 = *(_WORD *)(v20 + 20);
    if ((v22 & 2) != 0 && *(unsigned char *)(v20 + 22) == 1)
    {
      uint64_t v21 = *(unsigned int *)(v20 + 16);
      if (v8) {
        goto LABEL_39;
      }
    }
    else if ((v22 & 0x10) != 0)
    {
      uint64_t v21 = *(unsigned int *)(v20 + 16);
      if ((*(_WORD *)(v20 + 20) & 0x400) != 0) {
        uint64_t v21 = (*(_DWORD *)v20 + v21);
      }
      if (v8) {
LABEL_39:
      }
        uint64_t v8 = (*(uint64_t (**)(void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)(_DWORD *, char, unsigned __int8 *, int)))(*(void *)(v6 + 112) + 16))(*(void *)(v6 + 104), &v31, 4, v8, v21, sub_1B0DB7FE0);
    }
    else if (v22)
    {
      uint64_t v21 = 0;
      if (v8) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v21 = sub_1B0D18228(v20, 1);
      if (v8) {
        goto LABEL_39;
      }
    }
LABEL_40:
    unint64_t v23 = SHIDWORD(v32);
    unint64_t v24 = v13 + 9;
    if (v24 <= v12)
    {
      uint64_t v27 = v29;
LABEL_49:
      uint64_t v28 = (int8x8_t *)(v27 + (int)v13);
      if (v23 <= 0x7F)
      {
        v28->i8[0] = v23;
        int v15 = 1;
      }
      else if (v23 >> 14)
      {
        int v15 = sub_1B0D1DC5C(v28, v23);
      }
      else
      {
        v28->i8[0] = (v23 >> 7) | 0x80;
        v28->i8[1] = v23 & 0x7F;
        int v15 = 2;
      }
      v13 += v15;
      goto LABEL_15;
    }
    if (v12) {
      LODWORD(v25) = v12;
    }
    else {
      LODWORD(v25) = 64;
    }
    unint64_t v25 = (int)v25;
    do
    {
      unint64_t v26 = v25;
      v25 *= 2;
    }
    while (v26 < v24);
    if (!sqlite3_initialize())
    {
      uint64_t v27 = sub_1B0C8E1B8(v29, v26);
      if (v27)
      {
        uint64_t v29 = v27;
        unsigned int v12 = v26;
        goto LABEL_49;
      }
    }
    uint64_t v8 = 7;
LABEL_15:
    int v16 = v32;
    *(void *)(*(void *)(a1 + 32) + 8 * (int)v32) += SHIDWORD(v32);
    int v14 = v16 + 1;
    LODWORD(v32) = v16 + 1;
    if (v8) {
      goto LABEL_4;
    }
  }
  unint64_t v30 = __PAIR64__(v12, v13);
  ++*(void *)(a1 + 24);
  uint64_t v8 = sub_1B0DB8150((uint64_t *)a1, a3, (uint64_t)&v29);
  uint64_t v9 = v29;
  if (!v29) {
    return v8;
  }
LABEL_5:
  uint64_t v10 = (void (**)(uint64_t))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
    --qword_1EB220150;
    off_1EB21C9E8(v9);
    uint64_t v9 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v10 = (void (**)(uint64_t))&xmmword_1EB21CA50;
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    (*v10)(v9);
  }
  return v8;
}

uint64_t sub_1B0DB7D20(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t result = sub_1B0DA41D8(*(sqlite3 **)v2, 0, "DELETE FROM %Q.'%q_data';DELETE FROM %Q.'%q_idx';",
             *(void *)(v2 + 8),
             *(void *)(v2 + 16),
             *(void *)(v2 + 8),
             *(void *)(v2 + 16));
  if (!result)
  {
    if (!*(_DWORD *)(v2 + 88)
      || (uint64_t result = sub_1B0DA41D8(*(sqlite3 **)v2, 0, "DELETE FROM %Q.'%q_docsize';",
                     *(void *)(v2 + 8),
                     *(void *)(v2 + 16)),
          !result))
    {
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(_DWORD **)(v4 + 144);
      if (v5)
      {
        sub_1B0DA4EF8(v5);
        *(void *)(v4 + 144) = 0;
      }
      uint64_t v6 = *(void *)(v4 + 24);
      if (v6)
      {
        sub_1B0DA5094(v6);
        *(_DWORD *)(v4 + 32) = 0;
        *(_DWORD *)(v4 + 56) = 0;
      }
      *(_DWORD *)(v4 + 52) = 0;
      long long v7 = 0u;
      long long v8 = 0u;
      long long v9 = 0u;
      if (*(_DWORD *)(*(void *)v4 + 68)) {
        *(void *)&long long v8 = 1;
      }
      sub_1B0DA42D0((unsigned __int8 *)v4, 1, &byte_1B0DE9952, 0);
      sub_1B0DA4564((unsigned __int8 *)v4, (uint64_t)&v7);
      uint64_t result = *(unsigned int *)(v4 + 60);
      *(_DWORD *)(v4 + 60) = 0;
      if (!result)
      {
        return sub_1B0DA52A8((uint64_t *)a1, "version", 0, 4);
      }
    }
  }
  return result;
}

uint64_t sub_1B0DB7E4C(uint64_t *a1, int a2, uint64_t a3)
{
  if (a1[3]) {
    goto LABEL_6;
  }
  uint64_t v6 = *a1;
  if (sqlite3_initialize()) {
    goto LABEL_3;
  }
  uint64_t v10 = sub_1B0C7FC94(40);
  a1[3] = v10;
  if (!v10) {
    goto LABEL_4;
  }
  uint64_t v11 = v10;
  *(void *)(v10 + 32) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(void *)(v10 + 8) = a1 + 4;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)(v6 + 92);
  *(_DWORD *)(v10 + 20) = 1024;
  if (sqlite3_initialize())
  {
    *(void *)(v11 + 32) = 0;
  }
  else
  {
    unsigned int v13 = (void *)sub_1B0C7FC94(0x2000);
    *(void *)(v11 + 32) = v13;
    if (v13)
    {
      bzero(v13, 0x2000uLL);
      int v7 = 0;
      goto LABEL_5;
    }
  }
  unsigned int v12 = &off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v11);
    --qword_1EB220150;
    off_1EB21C9E8(v11);
    uint64_t v11 = xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_3;
    }
    unsigned int v12 = &xmmword_1EB21CA50;
  }
  (*v12)(v11);
LABEL_3:
  a1[3] = 0;
LABEL_4:
  int v7 = 7;
LABEL_5:
  *((_DWORD *)a1 + 15) = v7;
LABEL_6:
  uint64_t v8 = a1[5];
  if (v8 > a3 || v8 == a3 && !*((_DWORD *)a1 + 12) || *((_DWORD *)a1 + 8) > *(_DWORD *)(*a1 + 152)) {
    sub_1B0DB85C0(a1);
  }
  a1[5] = a3;
  *((_DWORD *)a1 + 12) = a2;
  if (!a2) {
    ++*((_DWORD *)a1 + 14);
  }
  uint64_t result = *((unsigned int *)a1 + 15);
  *((_DWORD *)a1 + 15) = 0;
  return result;
}

uint64_t sub_1B0DB7FE0(_DWORD *a1, char a2, unsigned __int8 *__s2, int a4)
{
  uint64_t v5 = *(uint64_t **)(*(void *)a1 + 8);
  int v6 = a1[3];
  if (a2)
  {
    if (v6) {
      goto LABEL_6;
    }
    int v6 = 1;
  }
  else
  {
    ++v6;
  }
  a1[3] = v6;
LABEL_6:
  if (a4 >= 0x8000) {
    int v7 = 0x8000;
  }
  else {
    int v7 = a4;
  }
  unsigned int v8 = a1[2];
  signed int v9 = v6 - 1;
  uint64_t v10 = *v5;
  uint64_t result = sub_1B0DBD914((int *)v5[3], v5[5], v8, v6 - 1, 0x30u, __s2, v7);
  int v12 = *(_DWORD *)(v10 + 48);
  if (v12 >= 1 && result == 0)
  {
    uint64_t v14 = 0;
    do
    {
      int v15 = *(_DWORD *)(*(void *)(v10 + 56) + 4 * v14);
      if (v15 >= 1)
      {
        int v16 = 0;
        int v17 = 0;
        while (v17 < v7)
        {
          int v18 = v17 + 1;
          if (__s2[v17] >= 0xC0u)
          {
            if (v18 >= v7) {
              break;
            }
            int v19 = &__s2[v17 + 1];
            while (1)
            {
              char v20 = *v19++;
              if ((v20 & 0xC0) != 0x80) {
                break;
              }
              if (v7 == ++v18)
              {
                int v17 = v7;
                if (v16 + 1 == v15) {
                  goto LABEL_18;
                }
                goto LABEL_29;
              }
            }
          }
          int v17 = v18;
LABEL_18:
          if (++v16 == v15)
          {
            if (!v17) {
              break;
            }
            uint64_t result = sub_1B0DBD914((int *)v5[3], v5[5], v8, v9, v14 + 49, __s2, v17);
            int v12 = *(_DWORD *)(v10 + 48);
            goto LABEL_30;
          }
        }
      }
LABEL_29:
      uint64_t result = 0;
LABEL_30:
      ++v14;
    }
    while (v14 < v12 && !result);
  }
  return result;
}

uint64_t sub_1B0DB8150(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (!*(_DWORD *)(*a1 + 88)) {
    return 0;
  }
  unint64_t v23 = 0;
  uint64_t v6 = sub_1B0DA55D8(a1, 6, &v23, 0);
  if (!v6)
  {
    int v7 = (uint64_t *)v23;
    if (!sub_1B0CC3F2C((uint64_t)v23, 0))
    {
      uint64_t v8 = v7[16];
      if ((*(_WORD *)(v8 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v8, a2);
      }
      else
      {
        *(void *)uint64_t v8 = a2;
        *(_WORD *)(v8 + 20) = 4;
      }
      uint64_t v10 = *(void *)(*v7 + 24);
      if (v10) {
        xmmword_1EB21CA50(v10);
      }
    }
    if (!*(_DWORD *)(*a1 + 68)) {
      goto LABEL_22;
    }
    uint64_t v11 = a1[1];
    int v12 = sub_1B0DA5A0C(v11);
    if (v12)
    {
      uint64_t v13 = *((void *)v12 + 2);
      sub_1B0DA4EF8(v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v6 = *(unsigned int *)(v11 + 60);
    *(_DWORD *)(v11 + 60) = 0;
    if (!sub_1B0CC3F2C((uint64_t)v7, 2u))
    {
      uint64_t v14 = v7[16];
      if ((*(_WORD *)(v14 + 148) & 0x9000) != 0)
      {
        sub_1B0D18980(v14 + 128, v13);
      }
      else
      {
        *(void *)(v14 + 128) = v13;
        *(_WORD *)(v14 + 148) = 4;
      }
      uint64_t v15 = *(void *)(*v7 + 24);
      if (v15) {
        xmmword_1EB21CA50(v15);
      }
    }
    if (!v6)
    {
LABEL_22:
      uint64_t v16 = *(unsigned int *)(a3 + 8);
      if ((v16 & 0x80000000) != 0)
      {
        sub_1B0CE1978(98740);
      }
      else
      {
        int v17 = *(char **)a3;
        if (!sub_1B0CC3F2C((uint64_t)v7, 1u))
        {
          if (v17)
          {
            unsigned int v18 = sub_1B0C79BBC(v7[16] + 64, v17, v16, 0, 0);
            if (v18)
            {
              unsigned int v19 = v18;
              uint64_t v20 = *v7;
              *(_DWORD *)(v20 + 80) = v19;
              sub_1B0D0E714(v20, v19);
              sub_1B0D1806C(*v7, v19);
            }
          }
          uint64_t v21 = *(void *)(*v7 + 24);
          if (v21) {
            xmmword_1EB21CA50(v21);
          }
        }
      }
      sqlite3_step((sqlite3_stmt *)v7);
      uint64_t v6 = sqlite3_reset((sqlite3_stmt *)v7);
      if (!sub_1B0CC3F2C((uint64_t)v7, 1u))
      {
        uint64_t v22 = *(void *)(*v7 + 24);
        if (v22) {
          xmmword_1EB21CA50(v22);
        }
      }
    }
  }
  return v6;
}

uint64_t sub_1B0DB8370(void *a1)
{
  uint64_t v2 = *(unsigned int *)(*a1 + 24);
  unint64_t v3 = a1[3];
  if (sqlite3_initialize())
  {
    uint64_t v4 = 0;
LABEL_3:
    signed int v5 = 0;
    unsigned int v6 = 0;
    uint64_t v7 = 7;
    goto LABEL_4;
  }
  uint64_t v16 = (int8x8_t *)sub_1B0C8E1B8(0, 64);
  uint64_t v4 = (char *)v16;
  if (!v16) {
    goto LABEL_3;
  }
  if (v3 > 0x7F)
  {
    if (v3 >> 14)
    {
      signed int v5 = sub_1B0D1DC5C(v16, v3);
      uint64_t v7 = 0;
      unsigned int v6 = 64;
    }
    else
    {
      uint64_t v7 = 0;
      v16->i8[0] = (v3 >> 7) | 0x80;
      v16->i8[1] = v3 & 0x7F;
      unsigned int v6 = 64;
      signed int v5 = 2;
    }
  }
  else
  {
    uint64_t v7 = 0;
    v16->i8[0] = v3;
    unsigned int v6 = 64;
    signed int v5 = 1;
  }
LABEL_4:
  if ((int)v2 >= 1)
  {
    uint64_t v8 = 0;
    while (1)
    {
      unint64_t v10 = *(void *)(a1[4] + 8 * v8);
      unint64_t v11 = (v5 + 9);
      if (v11 <= v6) {
        goto LABEL_19;
      }
      LODWORD(v12) = v6 ? v6 : 64;
      unint64_t v12 = (int)v12;
      do
      {
        unint64_t v13 = v12;
        v12 *= 2;
      }
      while (v13 < v11);
      if (!sqlite3_initialize())
      {
        uint64_t v14 = sub_1B0C8E1B8((uint64_t)v4, v13);
        if (v14) {
          break;
        }
      }
      uint64_t v7 = 7;
LABEL_8:
      if (++v8 == v2) {
        goto LABEL_23;
      }
    }
    uint64_t v4 = (char *)v14;
    unsigned int v6 = v13;
LABEL_19:
    uint64_t v15 = (int8x8_t *)&v4[v5];
    if (v10 <= 0x7F)
    {
      v15->i8[0] = v10;
      int v9 = 1;
    }
    else if (v10 >> 14)
    {
      int v9 = sub_1B0D1DC5C(v15, v10);
    }
    else
    {
      v15->i8[0] = (v10 >> 7) | 0x80;
      v15->i8[1] = v10 & 0x7F;
      int v9 = 2;
    }
    v5 += v9;
    goto LABEL_8;
  }
LABEL_23:
  if (v7)
  {
    if (!v4) {
      return v7;
    }
  }
  else
  {
    uint64_t v17 = a1[1];
    sub_1B0DA42D0((unsigned __int8 *)v17, 1, v4, v5);
    uint64_t v7 = *(unsigned int *)(v17 + 60);
    *(_DWORD *)(v17 + 60) = 0;
    if (!v4) {
      return v7;
    }
  }
  unsigned int v18 = (void (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_35:
    (*v18)(v4);
    return v7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
  --qword_1EB220150;
  off_1EB21C9E8(v4);
  uint64_t v4 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v18 = (void (**)(char *))&xmmword_1EB21CA50;
    goto LABEL_35;
  }
  return v7;
}

_DWORD *sub_1B0DB85C0(_DWORD *result)
{
  uint64_t v1 = (uint64_t)result;
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  if (result[8] || result[13])
  {
    uint64_t v2 = *((void *)result + 3);
    int v95 = 0;
    unint64_t v3 = sub_1B0DA5A0C((uint64_t)result);
    uint64_t v96 = v3;
    uint64_t v4 = *(_DWORD **)(v1 + 144);
    if (v4)
    {
      sub_1B0DA4EF8(v4);
      *(void *)(v1 + 144) = 0;
    }
    if (!*(_DWORD *)(v2 + 16) || (signed int v5 = (int *)(v1 + 60), *(_DWORD *)(v1 + 60)))
    {
      int v6 = 0;
      goto LABEL_8;
    }
    if (v3[6] >= 2000)
    {
      int v6 = 0;
      *signed int v5 = 13;
      goto LABEL_8;
    }
    long long v111 = 0u;
    memset(v112, 0, sizeof(v112));
    long long v109 = 0u;
    long long v110 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long v105 = 0u;
    long long v106 = 0u;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    long long v98 = 0u;
    uint64_t v15 = v3[7];
    if ((int)v15 >= 1)
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        uint64_t v17 = &v3[4 * i];
        uint64_t v18 = v17[9];
        if ((int)v18 >= 1)
        {
          unsigned int v19 = (int *)*((void *)v17 + 5);
          do
          {
            int v20 = *v19;
            v19 += 14;
            unsigned int v21 = v20 - 1;
            if ((v20 - 1) <= 0x7CF) {
              *((_DWORD *)&v98 + (v21 >> 5)) |= 1 << v21;
            }
            --v18;
          }
          while (v18);
        }
      }
    }
    int v22 = -32;
    unint64_t v23 = (unsigned int *)&v98;
    do
    {
      unsigned int v25 = *v23++;
      unsigned int v24 = v25;
      v22 += 32;
    }
    while (v25 == -1);
    int v26 = 0;
    do
    {
      unsigned int v27 = v24 >> v26++;
      ++v22;
    }
    while ((v27 & 1) != 0);
    int v93 = *(_DWORD *)(*(void *)v1 + 136);
    uint64_t v28 = *(unsigned int *)(*(void *)v1 + 92);
    uint64_t v29 = *(unsigned int *)(*(void *)v1 + 176);
    *(void *)&long long v105 = 0;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    long long v98 = 0u;
    sub_1B0DB9020((uint64_t *)v1, (int *)&v98, v22);
    if (*(_DWORD *)(v1 + 60)
      || (int v30 = sub_1B0DB11C0(v2, 0, 0), (*v5 = v30) != 0)
      || (v81 = v29 == 0, (uint64_t v33 = *(void *)(v2 + 24)) == 0))
    {
LABEL_37:
      sub_1B0DA5094(v2);
      sub_1B0DBB0F4(v1, (uint64_t)&v98, &v95);
      int v6 = v95;
      if (v95 >= 1)
      {
        if (!v3[7])
        {
          sub_1B0DBB4BC((uint64_t)v5, &v96);
          unint64_t v3 = v96;
        }
        if (!*v5)
        {
          int v31 = v3[9];
          uint64_t v32 = *((void *)v3 + 5);
          if (sqlite3_initialize() || (uint64_t v75 = sub_1B0C8E1B8(v32, 56 * v31 + 56)) == 0)
          {
            *signed int v5 = 7;
          }
          else
          {
            uint64_t v76 = v75 + 56 * v3[9];
            *(void *)(v76 + 48) = 0;
            *(_OWORD *)(v76 + 16) = 0u;
            *(_OWORD *)(v76 + 32) = 0u;
            *(_OWORD *)uint64_t v76 = 0u;
            *((void *)v3 + 5) = v75;
            if (!*v5)
            {
              int v77 = v3[9];
              v3[9] = v77 + 1;
              uint64_t v78 = (int *)(v75 + 56 * v77);
              int *v78 = v22;
              v78[1] = 1;
              v78[2] = v6;
              unint64_t v79 = *((void *)v3 + 2);
              if (v79)
              {
                uint64_t v80 = (int64x2_t *)(v75 + 56 * v77);
                v80[1] = vdupq_n_s64(v79);
                v80[3].i64[0] = *(int *)(v1 + 56);
                *((void *)v3 + 2) = v79 + 1;
              }
              ++v3[6];
            }
          }
        }
        sub_1B0DBB7FC(v1, 0, (uint64_t)v3);
      }
LABEL_8:
      uint64_t v7 = *(void *)v1;
      if (!*(_DWORD *)(v1 + 60))
      {
        int v11 = *(_DWORD *)(v7 + 140);
        if (v11 >= 1)
        {
          if (!v3)
          {
LABEL_16:
            sub_1B0DA4564((unsigned __int8 *)v1, (uint64_t)v3);
            uint64_t result = sub_1B0DA4EF8(v3);
            *(_DWORD *)(v1 + 32) = 0;
            *(_DWORD *)(v1 + 52) = 0;
            *(_DWORD *)(v1 + 56) = 0;
            return result;
          }
          unint64_t v12 = *((void *)v3 + 1);
          unint64_t v13 = v12 + *(int *)(v1 + 52) + (uint64_t)v6;
          unint64_t v14 = *(int *)(v1 + 16);
          *((void *)v3 + 1) = v13;
          sub_1B0DBBEE4((_DWORD *)v1, &v96, v14 * (v13 / v14 - v12 / v14) * v3[7], v11);
          unint64_t v3 = v96;
          uint64_t v7 = *(void *)v1;
        }
      }
      int v8 = *(_DWORD *)(v7 + 144);
      *(void *)&long long v98 = v3;
      if (v3 && v3[7] >= 1)
      {
        if (!*(_DWORD *)(v1 + 60))
        {
          int v9 = 1;
          uint64_t v10 = 9;
          do
          {
            if (v3[v10] < v8) {
              break;
            }
            sub_1B0DBC134(v1, (int **)&v98, v9 - 1, 0);
            unint64_t v3 = (int *)v98;
            sub_1B0DBB7FC(v1, v9++, v98);
            v10 += 4;
          }
          while (!*(_DWORD *)(v1 + 60));
        }
        uint64_t v96 = v3;
      }
      goto LABEL_16;
    }
    uint64_t v83 = v2;
    unsigned int v82 = v28;
    unsigned int v86 = v29;
    while (1)
    {
      int v34 = strlen((const char *)(v33 + 48));
      sub_1B0DB1498((_DWORD *)v2, v33, 0);
      int __src = (char *)(v33 + 48 + v34 + 1);
      int v35 = *(_DWORD *)(v33 + 24) - v34;
      uint64_t v36 = (unsigned __int8 *)(v33 + 48);
      uint64_t v37 = (v35 - 49);
      unsigned int v38 = strlen((const char *)(v33 + 48));
      if (v29)
      {
        int v39 = *v5;
      }
      else
      {
        sub_1B0DB9334((_DWORD *)v1, (uint64_t)&v98, v38, v36);
        if (*(_DWORD *)(v1 + 60)) {
          goto LABEL_37;
        }
        if (v93 > DWORD2(v99) + DWORD2(v100) + (int)v37)
        {
          memcpy((void *)(v99 + SDWORD2(v99)), __src, (int)v37);
          DWORD2(v99) += v37;
          int v39 = *v5;
          goto LABEL_137;
        }
        int v39 = 0;
      }
      if (!v39 && (int)v37 >= 1)
      {
        unint64_t v84 = v36;
        unsigned int v85 = v38;
        uint64_t v90 = v37;
        LODWORD(v37) = 0;
        unint64_t v40 = 0;
        unint64_t v91 = 0;
        int v87 = v81;
        while (1)
        {
          unint64_t v94 = 0;
          unint64_t v46 = (int)v37 + (unint64_t)sub_1B0DA69F4(&__src[(int)v37], &v94);
          v91 += v94;
          if (!v29)
          {
            int v53 = 0;
            uint64_t v48 = v90;
            goto LABEL_72;
          }
          uint64_t v48 = v90;
          if (v28 == 1) {
            break;
          }
          if ((__src[v46] & 1) == 0) {
            goto LABEL_71;
          }
          unint64_t v92 = v40;
          uint64_t v41 = v28;
          uint64_t v42 = v29;
          int v43 = (char *)v36;
          unint64_t v44 = v46;
          int v45 = (unsigned __int8 *)v43;
          sub_1B0DB9794((unsigned __int8 *)v1, (uint64_t)v3, v43, v91);
          LODWORD(v46) = v44;
          if (!*(_DWORD *)(v1 + 60) && __src[v44] != 1)
          {
            int v53 = 0;
            uint64_t v36 = v45;
            uint64_t v29 = v42;
            uint64_t v28 = v41;
            unint64_t v40 = v92;
            goto LABEL_72;
          }
          LODWORD(v37) = v44 + 1;
          uint64_t v36 = v45;
          uint64_t v29 = v42;
          uint64_t v28 = v41;
          unint64_t v40 = v92;
LABEL_57:
          int v39 = *v5;
          if (*v5) {
            BOOL v47 = 0;
          }
          else {
            BOOL v47 = (int)v37 < (int)v90;
          }
          if (!v47) {
            goto LABEL_137;
          }
        }
        if ((int)v46 >= (int)v90 || __src[v46])
        {
LABEL_71:
          int v53 = 0;
          goto LABEL_72;
        }
        int v49 = (char *)v36;
        int v50 = v46;
        uint64_t v51 = (unsigned __int8 *)v49;
        sub_1B0DB9794((unsigned __int8 *)v1, (uint64_t)v3, v49, v91);
        int v52 = v50;
        uint64_t v37 = v50 + 1;
        if ((int)v37 >= (int)v90)
        {
          uint64_t v36 = v51;
LABEL_135:
          uint64_t v29 = v86;
          goto LABEL_57;
        }
        uint64_t v36 = v51;
        if (__src[v37]) {
          goto LABEL_135;
        }
        uint64_t v48 = 0;
        LODWORD(v46) = v52 + 2;
        int v53 = *v5;
        uint64_t v29 = v86;
LABEL_72:
        int v88 = v46;
        if (!(v53 | v87))
        {
          sub_1B0DB9334((_DWORD *)v1, (uint64_t)&v98, v85, v36);
          int v87 = 1;
        }
        if (BYTE9(v102))
        {
          *(_WORD *)long long v99 = bswap32(WORD4(v99)) >> 16;
          int v54 = (int8x8_t *)(v99 + SDWORD2(v99));
          unint64_t v40 = v91;
          if (v91 > 0x7F)
          {
            if (v91 >> 14)
            {
              int v55 = sub_1B0D1DC5C(v54, v91);
            }
            else
            {
              v54->i8[0] = (v91 >> 7) | 0x80;
              v54->i8[1] = v91 & 0x7F;
              int v55 = 2;
            }
          }
          else
          {
            v54->i8[0] = v91;
            int v55 = 1;
          }
          DWORD2(v99) += v55;
          BYTE9(v102) = 0;
          sub_1B0DBABBC(v1, (unsigned int *)&v98, v91);
        }
        else
        {
          unint64_t v56 = v91 - v40;
          unint64_t v40 = v91;
          uint64_t v57 = (int8x8_t *)(v99 + SDWORD2(v99));
          if (v56 > 0x7F)
          {
            if (v56 >> 14)
            {
              int v58 = sub_1B0D1DC5C(v57, v56);
            }
            else
            {
              v57->i8[0] = (v56 >> 7) | 0x80;
              v57->i8[1] = v56 & 0x7F;
              int v58 = 2;
            }
          }
          else
          {
            v57->i8[0] = v56;
            int v58 = 1;
          }
          DWORD2(v99) += v58;
        }
        if (*v5) {
          goto LABEL_37;
        }
        uint64_t v90 = v48;
        if (v28 == 1)
        {
          if (v88 >= (int)v48 || __src[v88])
          {
            LODWORD(v37) = v88;
          }
          else
          {
            uint64_t v63 = SDWORD2(v99);
            ++DWORD2(v99);
            *(unsigned char *)(v99 + v63) = 0;
            uint64_t v37 = v88 + 1;
            if ((int)v37 < (int)v90 && !__src[v37])
            {
              uint64_t v64 = SDWORD2(v99);
              ++DWORD2(v99);
              *(unsigned char *)(v99 + v64) = 0;
              LODWORD(v37) = v88 + 2;
            }
          }
          if (DWORD2(v100) + DWORD2(v99) >= v93) {
            sub_1B0DBAEB0(v1, (unsigned int *)&v98);
          }
          goto LABEL_57;
        }
        int v59 = &__src[v88];
        unsigned int v60 = *v59;
        if (*v59 < 0)
        {
          int v62 = v59[1];
          if (v59[1] < 0)
          {
            int v65 = v59[2];
            if (v65 < 0)
            {
              unint64_t v97 = 0;
              int v61 = sub_1B0DA69F4(&__src[v88], &v97);
              int v59 = &__src[v88];
              unsigned int v60 = v97 & 0x7FFFFFFF;
            }
            else
            {
              unsigned int v60 = v65 & 0x7F | (v60 << 14) & 0x1FC07F | ((v62 & 0x7F) << 7);
              int v61 = 3;
            }
          }
          else
          {
            unsigned int v60 = ((v60 & 0x7F) << 7) | v62;
            int v61 = 2;
          }
        }
        else
        {
          int v61 = 1;
        }
        size_t v66 = v61 + (v60 >> 1);
        if ((int)v66 + DWORD2(v99) + DWORD2(v100) <= v93)
        {
          memcpy((void *)(v99 + SDWORD2(v99)), v59, v66);
          DWORD2(v99) += v66;
LABEL_134:
          LODWORD(v37) = v66 + v88;
          unint64_t v40 = v91;
          uint64_t v2 = v83;
          uint64_t v36 = v84;
          uint64_t v28 = v82;
          goto LABEL_135;
        }
        int v67 = 0;
        while (2)
        {
          if (*v5) {
            goto LABEL_134;
          }
          uint64_t v68 = SDWORD2(v99);
          int v69 = v93 - (DWORD2(v99) + DWORD2(v100));
          int v70 = v66 - v67;
          if ((int)v66 - v67 > v69)
          {
            int v71 = (unsigned __int8 *)&v59[v67];
            if ((char)*v71 < 0)
            {
              if ((char)v71[1] < 0)
              {
                if ((char)v71[2] < 0)
                {
                  int v72 = sub_1B0DA69F4(&v59[v67], &v97);
                  int v59 = &__src[v88];
                  if (v72 >= v69) {
                    goto LABEL_122;
                  }
                  goto LABEL_127;
                }
                int v72 = 3;
                if (v69 > 3) {
                  goto LABEL_127;
                }
              }
              else
              {
                int v72 = 2;
                if (v69 > 2) {
                  goto LABEL_127;
                }
              }
LABEL_122:
              int v70 = v72;
            }
            else
            {
              int v72 = 1;
              if (v69 <= 1) {
                goto LABEL_122;
              }
              do
              {
LABEL_127:
                int v70 = v72;
                uint64_t v74 = (char *)&v71[v72];
                if (*v74 < 0)
                {
                  if (v74[1] < 0)
                  {
                    if (v74[2] < 0)
                    {
                      int v73 = sub_1B0DA69F4(v74, &v97);
                      int v59 = &__src[v88];
                    }
                    else
                    {
                      int v73 = 3;
                    }
                  }
                  else
                  {
                    int v73 = 2;
                  }
                }
                else
                {
                  int v73 = 1;
                }
                int v72 = v73 + v70;
              }
              while (v72 <= v69);
            }
          }
          memcpy((void *)(v99 + v68), &v59[v67], v70);
          DWORD2(v99) += v70;
          if (DWORD2(v100) + DWORD2(v99) >= v93) {
            sub_1B0DBAEB0(v1, (unsigned int *)&v98);
          }
          v67 += v70;
          signed int v5 = (int *)(v1 + 60);
          int v59 = &__src[v88];
          if (v67 >= (int)v66) {
            goto LABEL_134;
          }
          continue;
        }
      }
LABEL_137:
      if (!v39)
      {
        uint64_t v33 = *(void *)(*(void *)(v2 + 24) + 8);
        *(void *)(v2 + 24) = v33;
        if (v33) {
          continue;
        }
      }
      goto LABEL_37;
    }
  }
  return result;
}

void sub_1B0DB9020(uint64_t *a1, int *a2, int a3)
{
  unint64_t v5 = (*(_DWORD *)(*a1 + 136) + 20);
  *((void *)a2 + 14) = 0;
  *((_OWORD *)a2 + 5) = 0u;
  *((_OWORD *)a2 + 6) = 0u;
  *((_OWORD *)a2 + 3) = 0u;
  *((_OWORD *)a2 + 4) = 0u;
  *((_OWORD *)a2 + 1) = 0u;
  *((_OWORD *)a2 + 2) = 0u;
  *(_OWORD *)a2 = 0u;
  *a2 = a3;
  if (!*((_DWORD *)a1 + 15) && a2[21] <= 1)
  {
    uint64_t v6 = *((void *)a2 + 11);
    if (sqlite3_initialize() || (uint64_t v7 = sub_1B0C8E1B8(v6, 32)) == 0)
    {
      *((_DWORD *)a1 + 15) = 7;
    }
    else
    {
      uint64_t v8 = v7;
      bzero((void *)(v7 + 32 * a2[21]), 32 * (1 - a2[21]));
      *((void *)a2 + 11) = v8;
      a2[21] = 1;
    }
  }
  a2[2] = 1;
  *((unsigned char *)a2 + 74) = 1;
  a2[28] = 1;
  LODWORD(v9) = a2[11];
  if (v9 < v5)
  {
    if (!v9) {
      LODWORD(v9) = 64;
    }
    unint64_t v9 = (int)v9;
    do
    {
      unint64_t v10 = v9;
      v9 *= 2;
    }
    while (v10 < v5);
    uint64_t v11 = *((void *)a2 + 4);
    if (sqlite3_initialize() || (uint64_t v12 = sub_1B0C8E1B8(v11, v10)) == 0)
    {
      *((_DWORD *)a1 + 15) = 7;
    }
    else
    {
      a2[11] = v10;
      *((void *)a2 + 4) = v12;
    }
  }
  LODWORD(v13) = a2[7];
  if (v13 < v5)
  {
    if (!v13) {
      LODWORD(v13) = 64;
    }
    unint64_t v13 = (int)v13;
    do
    {
      unint64_t v14 = v13;
      v13 *= 2;
    }
    while (v14 < v5);
    uint64_t v15 = *((void *)a2 + 2);
    if (sqlite3_initialize() || (uint64_t v16 = sub_1B0C8E1B8(v15, v14)) == 0)
    {
      *((_DWORD *)a1 + 15) = 7;
    }
    else
    {
      a2[7] = v14;
      *((void *)a2 + 2) = v16;
    }
  }
  uint64_t v17 = a1 + 11;
  if (a1[11]) {
    goto LABEL_37;
  }
  uint64_t v18 = (unsigned __int8 *)sqlite3_mprintf("INSERT INTO '%q'.'%q_idx'(segid,term,pgno) VALUES(?,?,?)", *(void *)(*a1 + 8), *(void *)(*a1 + 16));
  int v20 = v18;
  if (*((_DWORD *)a1 + 15))
  {
    if (!v18) {
      return;
    }
  }
  else
  {
    if (!v18)
    {
      *((_DWORD *)a1 + 15) = 7;
      return;
    }
    *((_DWORD *)a1 + 15) = sub_1B0C7EAC0(*(void *)*a1, v18, 0xFFFFFFFFLL, 133, 0, a1 + 11, 0, v19);
  }
  unsigned int v21 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v20);
    --qword_1EB220150;
    off_1EB21C9E8(v20);
    int v20 = (unsigned __int8 *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_37;
    }
    unsigned int v21 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
  }
  (*v21)(v20);
LABEL_37:
  if (!*((_DWORD *)a1 + 15))
  {
    **((_DWORD **)a2 + 2) = 0;
    a2[6] = 4;
    int v22 = (void *)*v17;
    uint64_t v23 = *a2;
    if (!sub_1B0CC3F2C(*v17, 0))
    {
      uint64_t v24 = v22[16];
      if ((*(_WORD *)(v24 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v24, v23);
      }
      else
      {
        *(void *)uint64_t v24 = v23;
        *(_WORD *)(v24 + 20) = 4;
      }
      if (*(void *)(*v22 + 24))
      {
        unsigned int v25 = (void (*)(void))xmmword_1EB21CA50;
        v25();
      }
    }
  }
}

uint64_t sub_1B0DB9334(_DWORD *a1, uint64_t a2, unsigned int a3, unsigned __int8 *a4)
{
  signed int v8 = *(_DWORD *)(a2 + 56);
  if (v8 >= (int)a3) {
    uint64_t v9 = a3;
  }
  else {
    uint64_t v9 = v8;
  }
  unint64_t v10 = (uint64_t *)(a2 + 16);
  int v11 = *(_DWORD *)(a2 + 24);
  if ((signed int)(a3 + v11 + *(_DWORD *)(a2 + 40) + 2) >= *(_DWORD *)(*(void *)a1 + 136))
  {
    if (v11 >= 5)
    {
      uint64_t result = sub_1B0DBAEB0((uint64_t)a1, (unsigned int *)a2);
      if (a1[15]) {
        return result;
      }
      int v11 = *(_DWORD *)(a2 + 24);
    }
    unint64_t v13 = a3 + v11 + 20;
    LODWORD(v14) = *(_DWORD *)(a2 + 28);
    if (v13 > v14)
    {
      if (!v14) {
        LODWORD(v14) = 64;
      }
      unint64_t v14 = (int)v14;
      do
      {
        unint64_t v15 = v14;
        v14 *= 2;
      }
      while (v15 < v13);
      uint64_t v16 = *v10;
      if (sqlite3_initialize() || (uint64_t v17 = sub_1B0C8E1B8(v16, v15)) == 0)
      {
        a1[15] = 7;
      }
      else
      {
        *(_DWORD *)(a2 + 28) = v15;
        *(void *)(a2 + 16) = v17;
      }
    }
  }
  uint64_t v18 = (int8x8_t *)(*(void *)(a2 + 32) + *(int *)(a2 + 40));
  uint64_t v19 = *(int *)(a2 + 24);
  uint64_t v20 = *(int *)(a2 + 12);
  unint64_t v21 = v19 - v20;
  if ((v19 - v20) > 0x7F)
  {
    if (v21 >> 14)
    {
      int v22 = sub_1B0D1DC5C(v18, v21);
    }
    else
    {
      v18->i8[0] = (v21 >> 7) | 0x80;
      v18->i8[1] = v21 & 0x7F;
      int v22 = 2;
    }
  }
  else
  {
    v18->i8[0] = v21;
    int v22 = 1;
  }
  *(_DWORD *)(a2 + 40) += v22;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)(a2 + 24);
  if (!*(unsigned char *)(a2 + 74))
  {
    if ((int)v9 < 1)
    {
      LODWORD(v9) = 0;
    }
    else
    {
      uint64_t v24 = 0;
      while (*(unsigned __int8 *)(*(void *)(a2 + 48) + v24) == a4[v24])
      {
        if (v9 == ++v24) {
          goto LABEL_38;
        }
      }
      LODWORD(v9) = v24;
    }
LABEL_38:
    sub_1B0DA51B4(a1 + 15, (uint64_t)v10, (int)v9);
    int v23 = v9;
LABEL_39:
    unsigned int v27 = a1 + 15;
    uint64_t v28 = v23;
    uint64_t result = sub_1B0DA51B4(v27, (uint64_t)v10, (int)a3 - (uint64_t)v23);
    size_t v29 = a3 - v23;
    if (!v29) {
      goto LABEL_50;
    }
    int v30 = *(_DWORD *)(a2 + 24);
    unsigned int v31 = *(_DWORD *)(a2 + 28);
    unint64_t v32 = (v30 + v29);
    if (v32 <= v31)
    {
      uint64_t result = *v10;
    }
    else
    {
      if (v31) {
        LODWORD(v33) = *(_DWORD *)(a2 + 28);
      }
      else {
        LODWORD(v33) = 64;
      }
      unint64_t v33 = (int)v33;
      do
      {
        unint64_t v34 = v33;
        v33 *= 2;
      }
      while (v34 < v32);
      uint64_t v35 = *v10;
      uint64_t result = sqlite3_initialize();
      if (result || (uint64_t result = sub_1B0C8E1B8(v35, v34)) == 0)
      {
        *unsigned int v27 = 7;
        goto LABEL_50;
      }
      *(_DWORD *)(a2 + 28) = v34;
      *(void *)(a2 + 16) = result;
      int v30 = *(_DWORD *)(a2 + 24);
    }
    uint64_t result = (uint64_t)memcpy((void *)(result + v30), &a4[v28], v29);
    *(_DWORD *)(a2 + 24) += v29;
LABEL_50:
    *(_DWORD *)(a2 + 56) = 0;
    if (a3)
    {
      LODWORD(v36) = *(_DWORD *)(a2 + 60);
      if (v36 >= a3)
      {
        uint64_t v40 = 0;
        uint64_t result = *(void *)(a2 + 48);
        size_t v37 = a3;
LABEL_59:
        uint64_t result = (uint64_t)memcpy((void *)(result + v40), a4, v37);
        *(_DWORD *)(a2 + 56) += a3;
        goto LABEL_60;
      }
      if (!v36) {
        LODWORD(v36) = 64;
      }
      unint64_t v36 = (int)v36;
      size_t v37 = a3;
      do
      {
        unint64_t v38 = v36;
        v36 *= 2;
      }
      while (v38 < a3);
      uint64_t v39 = *(void *)(a2 + 48);
      uint64_t result = sqlite3_initialize();
      if (!result)
      {
        uint64_t result = sub_1B0C8E1B8(v39, v38);
        if (result)
        {
          *(_DWORD *)(a2 + 60) = v38;
          *(void *)(a2 + 48) = result;
          uint64_t v40 = *(int *)(a2 + 56);
          goto LABEL_59;
        }
      }
      *unsigned int v27 = 7;
    }
LABEL_60:
    *(unsigned char *)(a2 + 74) = 0;
    *(_WORD *)(a2 + 72) = 1;
    **(_DWORD **)(a2 + 88) = *(_DWORD *)(a2 + 8);
    return result;
  }
  if (*(_DWORD *)(a2 + 8) == 1)
  {
LABEL_24:
    int v23 = 0;
    goto LABEL_39;
  }
  unsigned int v25 = a3;
  if (*(_DWORD *)(a2 + 56))
  {
    if ((int)v9 < 1)
    {
      LODWORD(v9) = 0;
    }
    else
    {
      uint64_t v26 = 0;
      while (*(unsigned __int8 *)(*(void *)(a2 + 48) + v26) == a4[v26])
      {
        if (v9 == ++v26) {
          goto LABEL_67;
        }
      }
      LODWORD(v9) = v26;
    }
LABEL_67:
    unsigned int v25 = v9 + 1;
  }
  uint64_t result = sub_1B0DBBA84((uint64_t)a1, (unsigned int *)a2);
  if (a1[15]) {
    return result;
  }
  *(_DWORD *)(a2 + 104) = 0;
  if (!v25)
  {
    int v23 = 0;
    *(_DWORD *)(a2 + 112) = *(_DWORD *)(a2 + 8);
    goto LABEL_39;
  }
  LODWORD(v41) = *(_DWORD *)(a2 + 108);
  if (v41 >= v25)
  {
    uint64_t v45 = 0;
    uint64_t result = *(void *)(a2 + 96);
    size_t v42 = v25;
  }
  else
  {
    if (!v41) {
      LODWORD(v41) = 64;
    }
    unint64_t v41 = (int)v41;
    size_t v42 = v25;
    do
    {
      unint64_t v43 = v41;
      v41 *= 2;
    }
    while (v43 < v25);
    uint64_t v44 = *(void *)(a2 + 96);
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8(v44, v43)) == 0)
    {
      a1[15] = 7;
      *(_DWORD *)(a2 + 112) = *(_DWORD *)(a2 + 8);
      return result;
    }
    *(_DWORD *)(a2 + 108) = v43;
    *(void *)(a2 + 96) = result;
    uint64_t v45 = *(int *)(a2 + 104);
  }
  uint64_t result = (uint64_t)memcpy((void *)(result + v45), a4, v42);
  *(_DWORD *)(a2 + 104) += v25;
  int v46 = a1[15];
  *(_DWORD *)(a2 + 112) = *(_DWORD *)(a2 + 8);
  if (!v46) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1B0DB9794(unsigned __int8 *a1, uint64_t a2, char *__s, uint64_t a4)
{
  unsigned int v8 = strlen(__s);
  uint64_t v205 = 0;
  sub_1B0DAF488((uint64_t)a1, a2, 0x40u, 0, (unsigned __int8 *)__s, v8, 0xFFFFFFFF, 0, &v205);
  if (*((_DWORD *)a1 + 15)) {
    return sub_1B0DA8128(v205);
  }
  uint64_t v9 = v205;
  if (*(unsigned char *)(v205 + 20)) {
    return sub_1B0DA8128(v205);
  }
  if (*(void *)(v205 + 136 * *(unsigned __int16 *)(*(void *)(v205 + 88) + 4) + 216) < a4)
  {
    do
    {
      sub_1B0DAB298((uint64_t)a1, v9, 1, a4);
      if (*((_DWORD *)a1 + 15) || *(unsigned char *)(v9 + 20)) {
        return sub_1B0DA8128(v205);
      }
      uint64_t v11 = *(void *)(v9 + 136 * *(unsigned __int16 *)(*(void *)(v9 + 88) + 4) + 216);
      int v12 = *(_DWORD *)(v9 + 68);
    }
    while ((v12 || v11 < a4) && (!v12 || v11 > a4));
  }
  unsigned int v13 = *(unsigned __int16 *)(*(void *)(v9 + 88) + 4);
  if (*(void *)(v9 + 136 * *(unsigned __int16 *)(*(void *)(v9 + 88) + 4) + 216) != a4) {
    return sub_1B0DA8128(v205);
  }
  uint64_t v14 = v9 + 136 * *(unsigned __int16 *)(*(void *)(v9 + 88) + 4);
  uint64_t v16 = *(unsigned int **)(v14 + 96);
  unint64_t v15 = (unsigned int **)(v14 + 96);
  int v17 = *(_DWORD *)(*(void *)a1 + 92);
  uint64_t v18 = *v16;
  uint64_t v19 = (char **)v15[2];
  uint64_t v20 = *v19;
  int v21 = *((_DWORD *)v19 + 2);
  LODWORD(v19) = *((_DWORD *)v19 + 3);
  unint64_t v207 = 0;
  unint64_t v208 = 0;
  int v202 = (int)v19;
  int v199 = v21;
  int v22 = v21 - v19;
  if (sqlite3_initialize() || (uint64_t v24 = (char *)sub_1B0C7FC94(v22 + 16)) == 0)
  {
    if (v22 >= -15)
    {
      *((_DWORD *)a1 + 15) = 7;
      return sub_1B0DA8128(v205);
    }
    int v23 = 0;
  }
  else
  {
    int v23 = v24;
    bzero(v24, v22 + 16);
  }
  if (*((_DWORD *)a1 + 15)) {
    return sub_1B0DA8128(v205);
  }
  uint64_t v190 = v18;
  int v204 = v22;
  memcpy(v23, &v20[v202], v22);
  uint64_t v25 = v9 + 136 * v13;
  __len = (int *)(v25 + 160);
  uint64_t v26 = *(int *)(v25 + 108);
  int v191 = (int *)(v25 + 108);
  if (v26 == *(_DWORD *)(v25 + 160)) {
    signed int v27 = *(_DWORD *)(v9 + 136 * v13 + 164);
  }
  else {
    signed int v27 = __rev16(*(unsigned __int16 *)v20);
  }
  int64_t v28 = v27 + (unint64_t)sub_1B0DA69F4(&v20[v27], &v208);
  if (v17 == 1)
  {
    uint64_t v29 = *(void *)(v9 + 136 * v13 + 128);
    for (uint64_t i = (int)v28; v29 > (int)v28; uint64_t i = (int)v28)
    {
      if (v20[i]) {
        signed int v31 = v28;
      }
      else {
        signed int v31 = v28 + 1;
      }
      if (v20[v31]) {
        signed int v27 = v31;
      }
      else {
        signed int v27 = v31 + 1;
      }
      LODWORD(v28) = v27 + sub_1B0DA69F4(&v20[v27], &v208);
    }
    int v32 = v204;
    int v33 = *(_DWORD *)(v9 + 136 * v13 + 172);
    if ((int)v28 < v33 && !v20[i]) {
      LODWORD(v28) = v28 + 1;
    }
    if ((int)v28 < v33 && !v20[(int)v28]) {
      LODWORD(v28) = v28 + 1;
    }
  }
  else
  {
    unint64_t v34 = &v20[v28];
    unsigned int v35 = v20[v28];
    if (v20[v28] < 0)
    {
      int v37 = v34[1];
      if (v34[1] < 0)
      {
        int v38 = v34[2];
        if (v38 < 0)
        {
          v209[0] = 0;
          int v36 = sub_1B0DA69F4(v34, v209);
          unsigned int v35 = v209[0] & 0x7FFFFFFF;
        }
        else
        {
          unsigned int v35 = v38 & 0x7F | (v35 << 14) & 0x1FC07F | ((v37 & 0x7F) << 7);
          int v36 = 3;
        }
      }
      else
      {
        unsigned int v35 = ((v35 & 0x7F) << 7) | v37;
        int v36 = 2;
      }
    }
    else
    {
      int v36 = 1;
    }
    int v39 = v36 + v28;
    int64_t v28 = *(void *)(v9 + 136 * v13 + 128);
    while (v28 > v39)
    {
      signed int v27 = v39 + (v35 >> 1);
      int v40 = v27 + sub_1B0DA69F4(&v20[v27], &v208);
      unint64_t v41 = &v20[v40];
      unsigned int v35 = *v41;
      if ((v35 & 0x80) != 0)
      {
        int v42 = v41[1];
        if (v41[1] < 0)
        {
          int v43 = v41[2];
          if (v43 < 0)
          {
            v209[0] = 0;
            int v44 = sub_1B0DA69F4(v41, v209);
            unsigned int v35 = v209[0] & 0x7FFFFFFF;
            int v39 = v44 + v40;
          }
          else
          {
            unsigned int v35 = v43 & 0x7F | (v35 << 14) & 0x1FC07F | ((v42 & 0x7F) << 7);
            int v39 = v40 + 3;
          }
        }
        else
        {
          unsigned int v35 = ((v35 & 0x7F) << 7) | v42;
          int v39 = v40 + 2;
        }
      }
      else
      {
        int v39 = v40 + 1;
      }
    }
    LODWORD(v28) = *(_DWORD *)(v9 + 136 * v13 + 224) + v28;
    int v32 = v204;
  }
  int v201 = v23;
  if ((int)v28 >= v202)
  {
    if (*((_DWORD *)a1 + 15))
    {
LABEL_70:
      int v47 = 1;
      int v53 = v202;
      LODWORD(v28) = v202;
      goto LABEL_73;
    }
    unint64_t v79 = *v15;
    uint64_t v80 = v26 + 1;
    int __srca = *(_DWORD *)(*(void *)a1 + 92);
    unsigned int v193 = v13;
    while (1)
    {
      if (v80 > (int)v79[2]) {
        goto LABEL_70;
      }
      BOOL v81 = v79;
      uint64_t v82 = *v79;
      uint64_t v83 = sub_1B0DA6708((uint64_t)a1, v80 + (v82 << 37));
      if (!v83)
      {
        int v47 = 1;
        int v23 = v201;
        int v53 = v202;
        LODWORD(v28) = v202;
        int v32 = v204;
        unsigned int v13 = v193;
        goto LABEL_73;
      }
      unint64_t v84 = v83;
      unsigned int v85 = *(char **)v83;
      unsigned int v86 = __rev16(**(unsigned __int16 **)v83);
      if (v86)
      {
        int v47 = 0;
        goto LABEL_173;
      }
      uint64_t v87 = (int)v83[3];
      if (v87 != v83[2])
      {
        int v88 = &v85[v87];
        int v89 = v85[v87];
        unsigned int v86 = v89;
        if (v89 < 0)
        {
          int v90 = v88[1];
          if (v88[1] < 0)
          {
            int v91 = v88[2];
            if (v91 < 0)
            {
              v209[0] = 0;
              unint64_t v92 = v85;
              sub_1B0DA69F4(v88, v209);
              unsigned int v85 = v92;
              unsigned int v86 = v209[0] & 0x7FFFFFFF;
            }
            else
            {
              unsigned int v86 = v91 & 0x7F | (v86 << 14) & 0x1FC07F | ((v90 & 0x7F) << 7);
            }
          }
          else
          {
            unsigned int v86 = ((v86 & 0x7F) << 7) | v90;
          }
        }
        if (v86)
        {
          int v47 = 1;
LABEL_173:
          unsigned int v13 = v193;
          if (__srca == 1) {
            goto LABEL_278;
          }
          uint64_t v114 = (int)v84[3];
          if ((int)v86 >= (int)v114 || ((v115 = v84[2], v86 >= 4) ? (BOOL v116 = v115 < (int)v114) : (BOOL v116 = 1), v116))
          {
            *((_DWORD *)a1 + 15) = 267;
            goto LABEL_278;
          }
          __n_4 = v85;
          uint64_t v182 = v86 - 4;
          int __srcc = v84[2];
          if (v115 <= (int)v114)
          {
            int __na = 0;
            __srcd = 0;
          }
          else
          {
            int v176 = v84[3];
            unint64_t v118 = &v85[v114];
            unsigned int __n = v85[v114];
            if (v85[v114] < 0)
            {
              int v167 = v118[1];
              if (v118[1] < 0)
              {
                int v168 = v118[2];
                if (v168 < 0)
                {
                  v209[0] = 0;
                  int v175 = sub_1B0DA69F4(v118, v209);
                  unsigned int __n = v209[0] & 0x7FFFFFFF;
                }
                else
                {
                  unsigned int __n = v168 & 0x7F | (__n << 14) & 0x1FC07F | ((v167 & 0x7F) << 7);
                  int v175 = 3;
                }
              }
              else
              {
                unsigned int __n = ((__n & 0x7F) << 7) | v167;
                int v175 = 2;
              }
            }
            else
            {
              int v175 = 1;
            }
            if (__n < v86)
            {
              *((_DWORD *)a1 + 15) = 267;
LABEL_277:
              unsigned int v13 = v193;
LABEL_278:
              uint64_t v169 = &off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                int v23 = v201;
                int v53 = v202;
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v84);
                --qword_1EB220150;
                off_1EB21C9E8(v84);
                unint64_t v84 = (_DWORD *)xmmword_1EB2201B0;
                if ((void)xmmword_1EB2201B0)
                {
                  uint64_t v169 = &xmmword_1EB21CA50;
                  goto LABEL_284;
                }
              }
              else
              {
                int v23 = v201;
                int v53 = v202;
LABEL_284:
                (*v169)(v84);
              }
              LODWORD(v28) = v53;
              int v32 = v204;
              goto LABEL_73;
            }
            unsigned int v13 = v193;
            if (*((_DWORD *)a1 + 15)) {
              goto LABEL_278;
            }
            int v170 = __srcc - v176;
            if (sqlite3_initialize() || (__srcd = (int8x8_t *)sub_1B0C7FC94(v170 + 2)) == 0)
            {
              BOOL v116 = v170 < -1;
              unsigned int v13 = v193;
              if (!v116) {
                *((_DWORD *)a1 + 15) = 7;
              }
              goto LABEL_278;
            }
            int v177 = v175 + v176;
            bzero(__srcd, v170 + 2);
            unint64_t v171 = (int)(__n - v182);
            if (__n - v182 > 0x7F)
            {
              if (v171 >> 14)
              {
                int __na = sub_1B0D1DC5C(__srcd, v171);
              }
              else
              {
                __srcd->i8[0] = (v171 >> 7) | 0x80;
                __srcd->i8[1] = (__n - v182) & 0x7F;
                int __na = 2;
              }
            }
            else
            {
              __srcd->i8[0] = __n - v182;
              int __na = 1;
            }
            int v172 = v84[2];
            BOOL v173 = __OFSUB__(v172, v177);
            int v174 = v172 - v177;
            if (!((v174 < 0) ^ v173 | (v174 == 0)))
            {
              memcpy((char *)__srcd + __na, &__n_4[v177], v174);
              int __na = __na - v177 + v84[2];
            }
          }
          unsigned int v119 = &__n_4[v86];
          signed int v120 = v84[3] - v182;
          memmove(__n_4 + 4, v119, (int)v84[3] - v182 - 4);
          *((_WORD *)__n_4 + 1) = bswap32(v120) >> 16;
          if (__rev16(*(unsigned __int16 *)__n_4)) {
            *(_WORD *)__n_4 = 1024;
          }
          if (__na >= 1)
          {
            memcpy(&__n_4[v120], __srcd, __na);
            v120 += __na;
          }
          if (__srcd)
          {
            unint64_t v121 = (void (**)(int8x8_t *))&off_1EB21C9E8;
            if (!dword_1EB21C9C0) {
              goto LABEL_197;
            }
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(__srcd);
            --qword_1EB220150;
            off_1EB21C9E8(__srcd);
            __srcd = (int8x8_t *)xmmword_1EB2201B0;
            if ((void)xmmword_1EB2201B0)
            {
              unint64_t v121 = (void (**)(int8x8_t *))&xmmword_1EB21CA50;
LABEL_197:
              (*v121)(__srcd);
            }
          }
          sub_1B0DA42D0(a1, v80 + (v82 << 37), __n_4, v120);
          goto LABEL_277;
        }
      }
      LODWORD(v209[0]) = 0x4000000;
      if (__srca != 1) {
        sub_1B0DA42D0(a1, v80 + (v82 << 37), (char *)v209, 4u);
      }
      int v93 = &off_1EB21C9E8;
      int v23 = v201;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v84);
        --qword_1EB220150;
        off_1EB21C9E8(v84);
        unint64_t v84 = (_DWORD *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_112;
        }
        int v93 = &xmmword_1EB21CA50;
      }
      (*v93)(v84);
LABEL_112:
      ++v80;
      int v32 = v204;
      unint64_t v79 = v81;
      unsigned int v13 = v193;
      if (*((_DWORD *)a1 + 15)) {
        goto LABEL_70;
      }
    }
  }
  if (v32 < 1)
  {
    int v47 = 0;
  }
  else
  {
    int v45 = 0;
    uint64_t v46 = 0;
    int v47 = 0;
    do
    {
      int v49 = &v23[v46];
      int v50 = v23[v46];
      if (v23[v46] < 0)
      {
        int v51 = v49[1];
        if (v49[1] < 0)
        {
          int v52 = v49[2];
          if (v52 < 0)
          {
            v209[0] = 0;
            uint64_t v48 = sub_1B0DA69F4(v49, v209);
            int v50 = v209[0] & 0x7FFFFFFF;
          }
          else
          {
            int v50 = v52 & 0x7F | (v50 << 14) & 0x1FC07F | ((v51 & 0x7F) << 7);
            uint64_t v48 = 3;
          }
        }
        else
        {
          int v50 = ((v50 & 0x7F) << 7) | v51;
          uint64_t v48 = 2;
        }
        int v32 = v204;
      }
      else
      {
        uint64_t v48 = 1;
      }
      v46 += v48;
      v45 += v50;
      if (v45 == v28) {
        int v47 = 1;
      }
    }
    while ((int)v46 < v32);
  }
  int v53 = v202;
LABEL_73:
  if (v27 == bswap32(*(unsigned __int16 *)v20) >> 16)
  {
    if (!v47 && v28 != v53)
    {
LABEL_93:
      if (v28 == v53)
      {
        LODWORD(v28) = 0;
        int v66 = v53;
        if (!*((_DWORD *)a1 + 15)) {
          goto LABEL_234;
        }
      }
      else
      {
        int v66 = v28 + sub_1B0DA69F4(&v20[(int)v28], &v207);
        uint64_t v76 = (int8x8_t *)&v20[v27];
        unint64_t v77 = v207 + v208;
        if (v207 + v208 > 0x7F)
        {
          if (v77 >> 14)
          {
            int v78 = sub_1B0D1DC5C(v76, v77);
          }
          else
          {
            v76->i8[0] = (v77 >> 7) | 0x80;
            v76->i8[1] = v77 & 0x7F;
            int v78 = 2;
          }
        }
        else
        {
          v76->i8[0] = v77;
          int v78 = 1;
        }
        LODWORD(v28) = 0;
        v27 += v78;
        if (!*((_DWORD *)a1 + 15)) {
          goto LABEL_234;
        }
      }
      goto LABEL_263;
    }
    *(_WORD *)uint64_t v20 = 0;
  }
  if (!v47) {
    goto LABEL_93;
  }
  uint64_t v54 = v9 + 136 * v13;
  int v56 = *(_DWORD *)(v54 + 164);
  int v55 = (_DWORD *)(v54 + 164);
  if (v27 == v56 && *v191 == *__len)
  {
    if (v32 < 1)
    {
      signed int v65 = 0;
      int v57 = 0;
    }
    else
    {
      int v57 = 0;
      signed int v58 = 0;
      uint64_t v59 = 0;
      while (1)
      {
        unsigned int v60 = &v201[v59];
        int v61 = v201[v59];
        if (v201[v59] < 0)
        {
          int v63 = v60[1];
          if (v60[1] < 0)
          {
            int v64 = v60[2];
            if (v64 < 0)
            {
              v209[0] = 0;
              uint64_t v62 = sub_1B0DA69F4(v60, v209);
              int v61 = v209[0] & 0x7FFFFFFF;
            }
            else
            {
              int v61 = v64 & 0x7F | (v61 << 14) & 0x1FC07F | ((v63 & 0x7F) << 7);
              uint64_t v62 = 3;
            }
          }
          else
          {
            int v61 = ((v61 & 0x7F) << 7) | v63;
            uint64_t v62 = 2;
          }
          int v32 = v204;
        }
        else
        {
          uint64_t v62 = 1;
        }
        signed int v65 = v61 + v58;
        if (v61 + v58 > v27) {
          break;
        }
        v59 += v62;
        ++v57;
        v58 += v61;
        if ((int)v59 >= v32) {
          goto LABEL_153;
        }
      }
      signed int v65 = v58;
    }
LABEL_153:
    if (v28 == v202)
    {
      int v66 = v202;
      signed int v27 = v65;
      LODWORD(v28) = v65;
      int v23 = v201;
      int v53 = v202;
      if (!*((_DWORD *)a1 + 15)) {
        goto LABEL_234;
      }
      goto LABEL_263;
    }
    int v206 = 0;
    long long v109 = &v20[(int)v28];
    int v110 = *v109;
    if ((v110 & 0x80) != 0)
    {
      int v113 = v109[1];
      if (v109[1] < 0)
      {
        int v117 = v109[2];
        if (v117 < 0)
        {
          v209[0] = 0;
          unsigned int v111 = sub_1B0DA69F4(v109, v209);
          int v110 = v209[0] & 0x7FFFFFFF;
        }
        else
        {
          int v110 = v117 & 0x7F | (v110 << 14) & 0x1FC07F | ((v113 & 0x7F) << 7);
          unsigned int v111 = 3;
        }
      }
      else
      {
        int v110 = ((v110 & 0x7F) << 7) | v113;
        unsigned int v111 = 2;
      }
    }
    else
    {
      unsigned int v111 = 1;
    }
    unint64_t v122 = (int)v28 + (unint64_t)v111;
    uint64_t v123 = &v20[v122];
    int v124 = v20[v122];
    if (v20[v122] < 0)
    {
      int v126 = v123[1];
      if (v123[1] < 0)
      {
        int v127 = v123[2];
        if (v127 < 0)
        {
          v209[0] = 0;
          int v128 = v110;
          int v125 = sub_1B0DA69F4(v123, v209);
          int v110 = v128;
          int v124 = v209[0] & 0x7FFFFFFF;
        }
        else
        {
          int v124 = v127 & 0x7F | (v124 << 14) & 0x1FC07F | ((v126 & 0x7F) << 7);
          int v125 = 3;
        }
      }
      else
      {
        int v124 = ((v124 & 0x7F) << 7) | v126;
        int v125 = 2;
      }
    }
    else
    {
      int v125 = 1;
    }
    signed int v129 = v65;
    if (v57 != 1)
    {
      int __lenb = v125;
      int v130 = v122;
      int v131 = v124;
      int v132 = v110;
      int v133 = sub_1B0DA6954(&v20[v65], &v206);
      int v124 = v131;
      LODWORD(v122) = v130;
      int v110 = v132;
      signed int v129 = v133 + v65;
      int v125 = __lenb;
    }
    int v134 = v125 + v122;
    uint64_t v135 = &v20[v129];
    if (*v135 < 0)
    {
      if (v135[1] < 0)
      {
        if (v135[2] < 0)
        {
          int __lenc = v124;
          int v137 = v110;
          int v138 = v134;
          int v136 = sub_1B0DA69F4(v135, v209);
          int v134 = v138;
          int v124 = __lenc;
          int v110 = v137;
        }
        else
        {
          int v136 = 3;
        }
      }
      else
      {
        int v136 = 2;
      }
    }
    else
    {
      int v136 = 1;
    }
    int v139 = v136 + v129;
    int v140 = v206;
    if (v206 >= v110) {
      int v141 = v110;
    }
    else {
      int v141 = v206;
    }
    int v142 = v124 + v110 - v141;
    int v66 = v134 + v124;
    if (v139 + v142 > v202 || v66 > v202)
    {
      *((_DWORD *)a1 + 15) = 267;
      int v66 = v134;
      signed int v27 = v65;
LABEL_224:
      int v23 = v201;
      int v53 = v202;
      if (!*((_DWORD *)a1 + 15)) {
        goto LABEL_234;
      }
      goto LABEL_263;
    }
    int v183 = v134;
    unsigned int __lena = v124;
    int __srce = v110;
    int __n_4a = v141;
    if (v57 != 1) {
      v65 += sub_1B0D19E38((int8x8_t *)&v20[v65], v141);
    }
    uint64_t v144 = v65 + (uint64_t)(int)sub_1B0D19E38((int8x8_t *)&v20[v65], v142);
    uint64_t v145 = v9 + 136 * v13;
    if (__srce <= *(_DWORD *)(v145 + 208))
    {
      if (__srce > v140)
      {
        memcpy(&v20[v144], (const void *)(*(void *)(v145 + 200) + __n_4a), __srce - __n_4a);
        LODWORD(v144) = v144 + __srce - __n_4a;
      }
    }
    else
    {
      *((_DWORD *)a1 + 15) = 267;
    }
    int v23 = v201;
    memmove(&v20[(int)v144], &v20[v183], __lena);
    signed int v27 = v144 + __lena;
LABEL_233:
    int v53 = v202;
    if (!*((_DWORD *)a1 + 15)) {
      goto LABEL_234;
    }
    goto LABEL_263;
  }
  if (v27 != 4) {
    goto LABEL_168;
  }
  int __src = v55;
  uint64_t v67 = *v191;
  uint64_t v68 = (v67 << 32) - 0x100000000;
  uint64_t v192 = v190 << 37;
  uint64_t v69 = v67 - 1;
  do
  {
    uint64_t v71 = v68;
    uint64_t v72 = v69;
    if (v69 <= *__len) {
      break;
    }
    int v73 = sub_1B0DA6708((uint64_t)a1, v192 + v69);
    if (!v73) {
      break;
    }
    uint64_t v74 = v73;
    int v75 = v73[2];
    int v70 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v74);
      --qword_1EB220150;
      off_1EB21C9E8(v74);
      uint64_t v74 = (_DWORD *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_100;
      }
      int v70 = &xmmword_1EB21CA50;
    }
    (*v70)(v74);
LABEL_100:
    uint64_t v68 = v71 - 0x100000000;
    uint64_t v69 = v72 - 1;
  }
  while (v75 == 4);
  if (*__len != v72)
  {
    signed int v27 = 4;
    int v66 = v28;
    LODWORD(v28) = 0;
    goto LABEL_224;
  }
  sqlite3_int64 v94 = v192 + (v71 >> 32);
  int v95 = (char **)sub_1B0DA6708((uint64_t)a1, v94);
  int v23 = v201;
  if (!v95)
  {
    signed int v27 = 4;
    int v66 = v28;
    LODWORD(v28) = 0;
    goto LABEL_233;
  }
  uint64_t v96 = v95;
  uint64_t v97 = *((int *)v95 + 3);
  if (v97 == *__src)
  {
    __srcb = (void *)v94;
    unsigned int v98 = 0;
    signed int v99 = 0;
    long long v100 = *v95;
    long long v101 = &(*v95)[v97];
    int v194 = v95;
    int v102 = *((_DWORD *)v95 + 2) - v97;
    do
    {
      size_t v104 = v98;
      long long v105 = &v101[v98];
      int v106 = *v105;
      if (*v105 < 0)
      {
        int v107 = v105[1];
        if (v105[1] < 0)
        {
          int v108 = v105[2];
          if (v108 < 0)
          {
            v209[0] = 0;
            int v103 = sub_1B0DA69F4(v105, v209);
            int v106 = v209[0] & 0x7FFFFFFF;
          }
          else
          {
            int v106 = v108 & 0x7F | (v106 << 14) & 0x1FC07F | ((v107 & 0x7F) << 7);
            int v103 = 3;
          }
        }
        else
        {
          int v106 = ((v106 & 0x7F) << 7) | v107;
          int v103 = 2;
        }
      }
      else
      {
        int v103 = 1;
      }
      v99 += v106;
      unsigned int v98 = v103 + v104;
    }
    while (v103 + (int)v104 < v102);
    memmove(&v100[v99], v101, v104);
    uint64_t v96 = v194;
    *((_WORD *)*v194 + 1) = bswap32(v99) >> 16;
    sub_1B0DA42D0(a1, (uint64_t)__srcb, *v194, v99 + v104);
    if (!v104) {
      sub_1B0DBBCC8((char *)a1, v190, *__len);
    }
  }
  uint64_t v112 = (uint64_t (**)(char **))&off_1EB21C9E8;
  int v53 = v202;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v96);
    --qword_1EB220150;
    off_1EB21C9E8(v96);
    uint64_t v96 = (char **)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v112 = (uint64_t (**)(char **))&xmmword_1EB21CA50;
      goto LABEL_166;
    }
  }
  else
  {
LABEL_166:
    (*v112)(v96);
  }
  signed int v27 = 4;
LABEL_168:
  int v66 = v28;
  LODWORD(v28) = 0;
  if (!*((_DWORD *)a1 + 15))
  {
LABEL_234:
    memmove(&v20[v27], &v20[v66], v199 - v66);
    int v146 = v204;
    unsigned int v147 = v53 - (v66 - v27);
    *((_WORD *)v20 + 1) = bswap32(v147) >> 16;
    if (v204 < 1) {
      goto LABEL_260;
    }
    int v148 = v66 - v27;
    signed int v149 = 0;
    int v150 = 0;
    uint64_t v151 = 0;
    unsigned int v200 = v147;
    signed int v152 = v147;
    int v203 = v148;
    do
    {
      uint64_t v154 = &v23[v151];
      int v155 = v23[v151];
      if (v23[v151] < 0)
      {
        int v157 = v154[1];
        if (v154[1] < 0)
        {
          int v158 = v154[2];
          if (v158 < 0)
          {
            v209[0] = 0;
            unsigned int v159 = sub_1B0DA69F4(v154, v209);
            int v148 = v203;
            uint64_t v156 = v159;
            int v155 = v209[0] & 0x7FFFFFFF;
          }
          else
          {
            int v155 = v158 & 0x7F | (v155 << 14) & 0x1FC07F | ((v157 & 0x7F) << 7);
            uint64_t v156 = 3;
          }
        }
        else
        {
          int v155 = ((v155 & 0x7F) << 7) | v157;
          uint64_t v156 = 2;
        }
        int v146 = v204;
      }
      else
      {
        uint64_t v156 = 1;
      }
      v149 += v155;
      if (v149 != v28)
      {
        if (v149 <= v27) {
          int v160 = 0;
        }
        else {
          int v160 = v148;
        }
        int v161 = v149 - v160;
        uint64_t v162 = (int8x8_t *)&v20[v152];
        unint64_t v163 = v149 - v160 - v150;
        if ((v149 - v160 - v150) <= 0x7F)
        {
          v162->i8[0] = v149 - v160 - v150;
          int v153 = 1;
        }
        else if (v163 >> 14)
        {
          int v153 = sub_1B0D1DC5C(v162, v163);
          int v148 = v203;
          int v146 = v204;
        }
        else
        {
          v162->i8[0] = (v163 >> 7) | 0x80;
          v162->i8[1] = (v149 - v160 - v150) & 0x7F;
          int v153 = 2;
        }
        v152 += v153;
        int v150 = v161;
        int v23 = v201;
      }
      v151 += v156;
    }
    while ((int)v151 < v146);
    int v164 = *v191;
    if (v200 == v152)
    {
      uint64_t v165 = v190;
      if (v164 == 1)
      {
        unsigned int v147 = v200;
        goto LABEL_262;
      }
      sub_1B0DBBCC8((char *)a1, v190, v164);
      unsigned int v147 = v200;
LABEL_260:
      int v164 = *v191;
    }
    else
    {
      unsigned int v147 = v152;
    }
    uint64_t v165 = v190;
LABEL_262:
    sub_1B0DA42D0(a1, (v165 << 37) + v164, v20, v147);
  }
LABEL_263:
  if (v23)
  {
    int v166 = (void (**)(void *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_269;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v23);
    --qword_1EB220150;
    off_1EB21C9E8(v23);
    int v23 = (char *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v166 = (void (**)(void *))&xmmword_1EB21CA50;
LABEL_269:
      (*v166)(v23);
    }
  }
  return sub_1B0DA8128(v205);
}

uint64_t sub_1B0DBABBC(uint64_t result, unsigned int *a2, unint64_t a3)
{
  unint64_t v3 = (_DWORD *)(result + 60);
  if (!*(_DWORD *)(result + 60))
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    signed int v31 = a2 + 2;
    while (1)
    {
      uint64_t v11 = (int *)(*((void *)a2 + 11) + 32 * v7);
      int v12 = v11[6];
      int v13 = *(_DWORD *)(*(void *)v6 + 136);
      if (v12 >= v13) {
        break;
      }
      int v15 = 1;
      if (!v11[1])
      {
LABEL_4:
        unsigned int v8 = v11 - 8;
        if (!v7) {
          unsigned int v8 = (int *)v31;
        }
        unint64_t v9 = *v8;
        sub_1B0DA51B4(v3, (uint64_t)(v11 + 4), v12 >= v13);
        sub_1B0DA51B4(v3, (uint64_t)(v11 + 4), v9);
        unint64_t v10 = a3;
        goto LABEL_7;
      }
LABEL_14:
      unint64_t v10 = a3 - *((void *)v11 + 1);
LABEL_7:
      uint64_t result = sub_1B0DA51B4(v3, (uint64_t)(v11 + 4), v10);
      v11[1] = 1;
      *((void *)v11 + 1) = a3;
      ++v7;
      if (*v3 | v15) {
        return result;
      }
    }
    **((unsigned char **)v11 + 2) = 1;
    sub_1B0DA42D0((unsigned __int8 *)v6, (v7 << 31) + ((unint64_t)*a2 << 37) + 0x1000000000 + *v11, *((char **)v11 + 2), v11[6]);
    if (*(_DWORD *)(v6 + 60)) {
      goto LABEL_10;
    }
    uint64_t v17 = v7 + 2;
    uint64_t v14 = *((void *)a2 + 11);
    if ((int)a2[21] <= (int)v7 + 2)
    {
      if (sqlite3_initialize() || (uint64_t v26 = sub_1B0C8E1B8(v14, 32 * v17)) == 0)
      {
        _DWORD *v3 = 7;
LABEL_10:
        uint64_t v14 = *((void *)a2 + 11);
        uint64_t v11 = (int *)(v14 + 32 * v7);
        goto LABEL_11;
      }
      uint64_t v14 = v26;
      bzero((void *)(v26 + 32 * (int)a2[21]), 32 * (int)(v17 - a2[21]));
      *((void *)a2 + 11) = v14;
      a2[21] = v17;
      uint64_t v11 = (int *)(v14 + 32 * v7);
      if (*v3)
      {
LABEL_11:
        int v15 = 0;
        uint64_t v16 = v14 + 32 * v7;
        *(_DWORD *)(v16 + 24) = 0;
        *(_DWORD *)(v16 + 4) = 0;
        ++*v11;
        if (!v11[1]) {
          goto LABEL_4;
        }
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v11 = (int *)(v14 + 32 * v7);
    }
    if (v11[14]) {
      goto LABEL_11;
    }
    int v30 = (uint64_t *)(v11 + 12);
    unint64_t v32 = 0;
    uint64_t v18 = *(void *)(v14 + 32 * v7 + 16);
    char v19 = sub_1B0DA69F4((char *)(v18 + 1), &v32);
    sub_1B0DA69F4((char *)(v18 + (v19 + 1)), &v32);
    unint64_t v29 = v32;
    v11[8] = *v11;
    int v20 = v11[14];
    unsigned int v21 = v11[15];
    unint64_t v22 = (v20 + 9);
    if (v22 <= v21)
    {
      uint64_t v25 = (uint64_t)(v11 + 12);
      uint64_t v27 = *v30;
    }
    else
    {
      if (v21) {
        LODWORD(v23) = v11[15];
      }
      else {
        LODWORD(v23) = 64;
      }
      unint64_t v23 = (int)v23;
      do
      {
        unint64_t v24 = v23;
        v23 *= 2;
      }
      while (v24 < v22);
      uint64_t v28 = *v30;
      if (sqlite3_initialize() || (uint64_t v27 = sub_1B0C8E1B8(v28, v24)) == 0)
      {
        _DWORD *v3 = 7;
        uint64_t v25 = (uint64_t)(v11 + 12);
LABEL_35:
        sub_1B0DA51B4(v3, v25, *v11);
        sub_1B0DA51B4(v3, v25, v29);
        v11[9] = 1;
        *((void *)v11 + 5) = v29;
        goto LABEL_11;
      }
      v11[15] = v24;
      *((void *)v11 + 6) = v27;
      int v20 = v11[14];
      uint64_t v25 = (uint64_t)(v11 + 12);
    }
    *(unsigned char *)(v27 + v20) = 0;
    ++v11[14];
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_1B0DBAEB0(uint64_t a1, unsigned int *a2)
{
  *(_WORD *)(*((void *)a2 + 2) + 2) = bswap32(*((unsigned __int16 *)a2 + 12)) >> 16;
  if (*((unsigned char *)a2 + 74))
  {
    if (!*((unsigned char *)a2 + 73)) {
      goto LABEL_23;
    }
    uint64_t v4 = *((void *)a2 + 11);
    uint64_t v5 = *(unsigned int *)(v4 + 24);
    if ((int)v5 < 1) {
      goto LABEL_23;
    }
    unint64_t v6 = v5 + 9;
    unsigned int v7 = *(_DWORD *)(v4 + 28);
    if ((int)v5 + 9 <= v7)
    {
      uint64_t v19 = *(void *)(v4 + 16);
    }
    else
    {
      if (v7) {
        LODWORD(v8) = *(_DWORD *)(v4 + 28);
      }
      else {
        LODWORD(v8) = 64;
      }
      unint64_t v8 = (int)v8;
      do
      {
        unint64_t v9 = v8;
        v8 *= 2;
      }
      while (v9 < v6);
      uint64_t v10 = *(void *)(v4 + 16);
      if (sqlite3_initialize() || (uint64_t v19 = sub_1B0C8E1B8(v10, v9)) == 0)
      {
        *(_DWORD *)(a1 + 60) = 7;
LABEL_23:
        ++a2[20];
        goto LABEL_24;
      }
      *(_DWORD *)(v4 + 28) = v9;
      *(void *)(v4 + 16) = v19;
      LODWORD(v5) = *(_DWORD *)(v4 + 24);
    }
    *(unsigned char *)(v19 + (int)v5) = 0;
    ++*(_DWORD *)(v4 + 24);
    goto LABEL_23;
  }
  size_t v11 = a2[10];
  if (!v11) {
    goto LABEL_24;
  }
  int v12 = (const void *)*((void *)a2 + 4);
  signed int v13 = a2[6];
  unsigned int v14 = a2[7];
  unint64_t v15 = (v13 + v11);
  if (v15 <= v14)
  {
    uint64_t v25 = *((void *)a2 + 2);
  }
  else
  {
    if (v14) {
      LODWORD(v16) = a2[7];
    }
    else {
      LODWORD(v16) = 64;
    }
    unint64_t v16 = (int)v16;
    do
    {
      unint64_t v17 = v16;
      v16 *= 2;
    }
    while (v17 < v15);
    uint64_t v18 = *((void *)a2 + 2);
    if (sqlite3_initialize() || (uint64_t v25 = sub_1B0C8E1B8(v18, v17)) == 0)
    {
      *(_DWORD *)(a1 + 60) = 7;
      goto LABEL_24;
    }
    a2[7] = v17;
    *((void *)a2 + 2) = v25;
    signed int v13 = a2[6];
  }
  memcpy((void *)(v25 + v13), v12, v11);
  a2[6] += v11;
LABEL_24:
  sub_1B0DA42D0((unsigned __int8 *)a1, (int)a2[2] + ((unint64_t)*a2 << 37), *((char **)a2 + 2), a2[6]);
  a2[6] = 0;
  a2[10] = 0;
  LODWORD(v20) = a2[7];
  if (v20 >= 4)
  {
    uint64_t v24 = 0;
    uint64_t result = *((void *)a2 + 2);
LABEL_32:
    *(_DWORD *)(result + v24) = 0;
    a2[6] += 4;
    goto LABEL_33;
  }
  if (v20) {
    uint64_t v20 = v20;
  }
  else {
    uint64_t v20 = 64;
  }
  do
  {
    unint64_t v21 = v20;
    v20 *= 2;
  }
  while (v21 < 4);
  uint64_t v22 = *((void *)a2 + 2);
  uint64_t result = sqlite3_initialize();
  if (!result)
  {
    uint64_t result = sub_1B0C8E1B8(v22, v21);
    if (result)
    {
      a2[7] = v21;
      *((void *)a2 + 2) = result;
      uint64_t v24 = (int)a2[6];
      goto LABEL_32;
    }
  }
  *(_DWORD *)(a1 + 60) = 7;
LABEL_33:
  ++a2[2];
  a2[3] = 0;
  ++a2[19];
  *(_WORD *)((char *)a2 + 73) = 257;
  return result;
}

uint64_t sub_1B0DBB0F4(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (!*(_DWORD *)(result + 60))
  {
    uint64_t v5 = result;
    if (*(int *)(a2 + 24) >= 5) {
      uint64_t result = sub_1B0DBAEB0(result, (unsigned int *)a2);
    }
    *a3 = *(_DWORD *)(a2 + 8) - 1;
    if (*(int *)(a2 + 8) >= 2) {
      uint64_t result = sub_1B0DBBA84(v5, (unsigned int *)a2);
    }
  }
  uint64_t v6 = *(void *)(a2 + 48);
  if (v6)
  {
    unsigned int v7 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_12:
      uint64_t result = (*v7)(v6);
      goto LABEL_13;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v6);
    uint64_t v6 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v7 = &xmmword_1EB21CA50;
      goto LABEL_12;
    }
  }
LABEL_13:
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    goto LABEL_20;
  }
  unint64_t v9 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_19;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v8);
  uint64_t v8 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unint64_t v9 = &xmmword_1EB21CA50;
LABEL_19:
    uint64_t result = (*v9)(v8);
  }
LABEL_20:
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v10) {
    goto LABEL_27;
  }
  size_t v11 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_26;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v10);
  uint64_t v10 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    size_t v11 = &xmmword_1EB21CA50;
LABEL_26:
    uint64_t result = (*v11)(v10);
  }
LABEL_27:
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  uint64_t v12 = *(void *)(a2 + 96);
  if (!v12) {
    goto LABEL_34;
  }
  signed int v13 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_33;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v12);
  uint64_t v12 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    signed int v13 = &xmmword_1EB21CA50;
LABEL_33:
    uint64_t result = (*v13)(v12);
  }
LABEL_34:
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  if (*(int *)(a2 + 84) >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 16;
    do
    {
      unint64_t v16 = (uint64_t *)(*(void *)(a2 + 88) + v15);
      uint64_t v17 = *v16;
      if (*v16)
      {
        uint64_t v18 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v17);
          --qword_1EB220150;
          uint64_t result = off_1EB21C9E8(v17);
          uint64_t v17 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_37;
          }
          uint64_t v18 = &xmmword_1EB21CA50;
        }
        uint64_t result = (*v18)(v17);
      }
LABEL_37:
      uint64_t *v16 = 0;
      v16[1] = 0;
      ++v14;
      v15 += 32;
    }
    while (v14 < *(int *)(a2 + 84));
  }
  uint64_t v19 = *(void *)(a2 + 88);
  if (v19)
  {
    uint64_t v20 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_50:
      unint64_t v21 = *v20;
      return v21(v19);
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v19);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v19);
    uint64_t v19 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v20 = &xmmword_1EB21CA50;
      goto LABEL_50;
    }
  }
  return result;
}

uint64_t sub_1B0DBB4BC(uint64_t result, int **a2)
{
  if (*(_DWORD *)result) {
    return result;
  }
  unint64_t v3 = (_DWORD *)result;
  uint64_t v4 = *a2;
  if (**a2 >= 2)
  {
    int v5 = v4[7];
    uint64_t result = sqlite3_initialize();
    if (result || (v7 = 16 * (v5 - 1) + 48, (uint64_t result = sub_1B0C7FC94(v7)) == 0))
    {
      uint64_t v6 = 0;
      if (v5 >= -1) {
        _DWORD *v3 = 7;
      }
    }
    else
    {
      uint64_t v6 = (uint64_t *)result;
      bzero((void *)result, v7);
      uint64_t result = (uint64_t)memcpy(v6, v4, v7);
      uint64_t v8 = v4[7];
      if ((int)v8 >= 1)
      {
        if (v8 == 1)
        {
          uint64_t v9 = 0;
        }
        else
        {
          uint64_t v9 = v8 & 0xFFFFFFFE;
          uint64_t v10 = v6 + 7;
          uint64_t v11 = v9;
          do
          {
            *(v10 - 2) = 0;
            *uint64_t v10 = 0;
            v10 += 4;
            v11 -= 2;
          }
          while (v11);
          if (v9 == v8)
          {
LABEL_16:
            unint64_t v14 = 0;
            uint64_t v15 = 0;
            while (1)
            {
              unint64_t v16 = &v6[v14 / 2];
              if (*v3) {
                break;
              }
              uint64_t v17 = *((int *)v16 + 9);
              if (sqlite3_initialize() || (uint64_t v18 = (void *)sub_1B0C7FC94(56 * v17)) == 0)
              {
                if ((int)v17 >= 1) {
                  _DWORD *v3 = 7;
                }
                break;
              }
              uint64_t v19 = v18;
              bzero(v18, 56 * v17);
              v6[v14 / 2 + 5] = (uint64_t)v19;
              uint64_t result = (uint64_t)memcpy(v19, *(const void **)&v4[v14 + 10], 56 * v17);
              ++v15;
              v14 += 4;
              if (v15 >= v4[7]) {
                goto LABEL_21;
              }
            }
            v16[5] = 0;
            if (v4[7] >= 1)
            {
              uint64_t v22 = 0;
              unint64_t v23 = v6 + 5;
              do
              {
                uint64_t v24 = *v23;
                if (*v23)
                {
                  uint64_t v25 = &off_1EB21C9E8;
                  if (dword_1EB21C9C0)
                  {
                    if ((void)xmmword_1EB2201B0) {
                      xmmword_1EB21CA40(xmmword_1EB2201B0);
                    }
                    qword_1EB220108[0] -= (int)off_1EB21C9F8(v24);
                    --qword_1EB220150;
                    off_1EB21C9E8(v24);
                    uint64_t v24 = xmmword_1EB2201B0;
                    if (!(void)xmmword_1EB2201B0) {
                      goto LABEL_35;
                    }
                    uint64_t v25 = &xmmword_1EB21CA50;
                  }
                  (*v25)(v24);
                }
LABEL_35:
                ++v22;
                v23 += 2;
              }
              while (v22 < v4[7]);
            }
            uint64_t v26 = (uint64_t (**)(uint64_t *))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
              --qword_1EB220150;
              uint64_t result = off_1EB21C9E8(v6);
              uint64_t v6 = (uint64_t *)xmmword_1EB2201B0;
              if (!(void)xmmword_1EB2201B0) {
                goto LABEL_23;
              }
              uint64_t v26 = (uint64_t (**)(uint64_t *))&xmmword_1EB21CA50;
            }
            uint64_t result = (*v26)(v6);
LABEL_23:
            if (*v3) {
              return result;
            }
            uint64_t v4 = *a2;
            goto LABEL_25;
          }
        }
        uint64_t v12 = v8 - v9;
        signed int v13 = &v6[2 * v9 + 5];
        do
        {
          uint64_t *v13 = 0;
          v13 += 2;
          --v12;
        }
        while (v12);
        goto LABEL_16;
      }
LABEL_21:
      --*v4;
      *(_DWORD *)uint64_t v6 = 1;
    }
    *a2 = (int *)v6;
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v20 = v4[7];
  uint64_t result = sqlite3_initialize();
  if (result || (uint64_t result = sub_1B0C8E1B8((uint64_t)v4, 16 * v20 + 64)) == 0)
  {
    _DWORD *v3 = 7;
  }
  else
  {
    uint64_t v21 = result + 16 * v20;
    *(void *)(v21 + 32) = 0;
    *(void *)(v21 + 40) = 0;
    ++*(_DWORD *)(result + 28);
    *a2 = (int *)result;
  }
  return result;
}

uint64_t sub_1B0DBB7FC(uint64_t result, int a2, uint64_t a3)
{
  if (!*(_DWORD *)(result + 60))
  {
    int v3 = *(_DWORD *)(a3 + 16 * a2 + 36);
    if (v3)
    {
      int v4 = *(_DWORD *)(*(void *)(a3 + 16 * a2 + 40) + 56 * (v3 - 1) + 8)
         - *(_DWORD *)(*(void *)(a3 + 16 * a2 + 40) + 56 * (v3 - 1) + 4)
         + 1;
      int v5 = (void *)(a3 + 16 * a2 + 40);
      int v6 = a2;
      do
      {
        BOOL v7 = __OFSUB__(v6--, 1);
        if (v6 < 0 != v7)
        {
          int v12 = 0;
          int v13 = -1;
          goto LABEL_21;
        }
        uint64_t v8 = *((unsigned int *)v5 - 5);
        v5 -= 2;
      }
      while (!v8);
      if ((int)v8 < 1)
      {
        int v9 = 0;
      }
      else
      {
        int v9 = 0;
        uint64_t v10 = (_DWORD *)(*v5 + 8);
        do
        {
          int v11 = *v10 - *(v10 - 1);
          if (v11 >= v9) {
            int v9 = v11 + 1;
          }
          v10 += 14;
          --v8;
        }
        while (v8);
      }
      if (v9 < v4) {
        int v13 = -1;
      }
      else {
        int v13 = v6;
      }
      if (v9 >= v4) {
        int v12 = v9;
      }
      else {
        int v12 = 0;
      }
LABEL_21:
      BOOL v14 = v13 < 0;
      if (v13 < 0) {
        int v13 = a2;
      }
      if (v14) {
        int v15 = v4;
      }
      else {
        int v15 = v12;
      }
      if (!*(_DWORD *)(a3 + 16 * v13 + 32))
      {
        int v16 = v13 + 1;
        int v17 = *(_DWORD *)(a3 + 28);
        if (v13 + 1 < v17)
        {
          uint64_t v18 = a3 + 16 * v13;
          uint64_t v19 = (_DWORD *)(v18 + 36);
          uint64_t v20 = (uint64_t *)(v18 + 40);
          for (uint64_t i = v16; i < v17; ++i)
          {
            uint64_t v37 = a3 + 16 * i;
            if (*(_DWORD *)(v37 + 32)) {
              break;
            }
            uint64_t v21 = *(unsigned int *)(v37 + 36);
            int v38 = (_DWORD *)(v37 + 36);
            if ((int)v21 >= 1)
            {
              uint64_t v22 = (void *)(a3 + 16 * i + 40);
              uint64_t v23 = v21 + 1;
              while (1)
              {
                unsigned int v24 = v23 - 2;
                if (*(_DWORD *)(*v22 + 56 * v24 + 8) - *(_DWORD *)(*v22 + 56 * v24 + 4) + 1 > v15
                  || *(_DWORD *)(result + 60))
                {
                  return result;
                }
                uint64_t v25 = result;
                uint64_t v26 = a3;
                uint64_t v27 = v19;
                int v28 = *v19;
                unint64_t v29 = v20;
                uint64_t v30 = *v20;
                uint64_t result = sqlite3_initialize();
                if (result || (uint64_t result = sub_1B0C8E1B8(v30, 56 * v28 + 56)) == 0)
                {
                  *(_DWORD *)(v25 + 60) = 7;
                  return result;
                }
                uint64_t v31 = result;
                uint64_t v19 = v27;
                uint64_t result = (uint64_t)memmove((void *)(result + 56), (const void *)result, 56 * *v27);
                *(_OWORD *)uint64_t v31 = 0u;
                *(_OWORD *)(v31 + 16) = 0u;
                *(_OWORD *)(v31 + 32) = 0u;
                *(void *)(v31 + 48) = 0;
                uint64_t *v29 = v31;
                if (*(_DWORD *)(v25 + 60)) {
                  return result;
                }
                uint64_t v20 = v29;
                uint64_t result = v25;
                a3 = v26;
                uint64_t v32 = *v22 + 56 * v24;
                long long v33 = *(_OWORD *)v32;
                long long v34 = *(_OWORD *)(v32 + 16);
                long long v35 = *(_OWORD *)(v32 + 32);
                *(void *)(v31 + 48) = *(void *)(v32 + 48);
                *(_OWORD *)(v31 + 16) = v34;
                *(_OWORD *)(v31 + 32) = v35;
                *(_OWORD *)uint64_t v31 = v33;
                ++*v27;
                --*v38;
                if ((unint64_t)--v23 <= 1)
                {
                  int v17 = *(_DWORD *)(v26 + 28);
                  break;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B0DBBA84(uint64_t result, unsigned int *a2)
{
  if (a2[28])
  {
    uint64_t v3 = result;
    BOOL v4 = *(int *)(*((void *)a2 + 11) + 24) >= 1 && (int)a2[20] > 3;
    int v5 = a2[21];
    if (v5 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0x1000000000;
      do
      {
        uint64_t v9 = *((void *)a2 + 11);
        uint64_t v10 = v9 + v6;
        unsigned int v11 = *(_DWORD *)(v9 + v6 + 24);
        if (!v11) {
          break;
        }
        if (v4)
        {
          uint64_t result = (uint64_t)sub_1B0DA42D0((unsigned __int8 *)v3, v8 + *(int *)(v9 + v6) + ((unint64_t)*a2 << 37), *(char **)(v10 + 16), v11);
          int v5 = a2[21];
        }
        *(_DWORD *)(v10 + 24) = 0;
        *(_DWORD *)(v9 + v6 + 4) = 0;
        ++v7;
        v8 += 0x80000000;
        v6 += 32;
      }
      while (v7 < v5);
    }
    a2[20] = 0;
    if (*(_DWORD *)(v3 + 60)) {
      goto LABEL_32;
    }
    uint64_t v12 = a2[26];
    if ((int)v12 < 1)
    {
      BOOL v14 = (uint64_t *)(v3 + 88);
      if ((v12 & 0x80000000) != 0)
      {
        sub_1B0CE1978(98740);
LABEL_23:
        uint64_t v20 = (void *)*v14;
        uint64_t v21 = (int)a2[28];
        if (!sub_1B0CC3F2C(*v14, 2u))
        {
          unint64_t v22 = v4 | (unint64_t)(2 * v21);
          uint64_t v23 = v20[16];
          if ((*(_WORD *)(v23 + 148) & 0x9000) != 0)
          {
            sub_1B0D18980(v23 + 128, v22);
          }
          else
          {
            *(void *)(v23 + 128) = v22;
            *(_WORD *)(v23 + 148) = 4;
          }
          uint64_t v24 = *(void *)(*v20 + 24);
          if (v24) {
            xmmword_1EB21CA50(v24);
          }
        }
        sqlite3_step(*(sqlite3_stmt **)(v3 + 88));
        *(_DWORD *)(v3 + 60) = sqlite3_reset(*(sqlite3_stmt **)(v3 + 88));
        uint64_t v25 = *(void *)(v3 + 88);
        uint64_t result = sub_1B0CC3F2C(v25, 1u);
        if (!result)
        {
          uint64_t result = *(void *)(*(void *)v25 + 24);
          if (result) {
            uint64_t result = xmmword_1EB21CA50(result);
          }
        }
LABEL_32:
        a2[28] = 0;
        return result;
      }
      int v13 = &byte_1B0DE9952;
    }
    else
    {
      int v13 = (char *)*((void *)a2 + 12);
      BOOL v14 = (uint64_t *)(v3 + 88);
    }
    int v15 = (uint64_t *)*v14;
    if (!sub_1B0CC3F2C(*v14, 1u))
    {
      if (v13)
      {
        unsigned int v16 = sub_1B0C79BBC(v15[16] + 64, v13, v12, 0, 0);
        if (v16)
        {
          unsigned int v17 = v16;
          uint64_t v18 = *v15;
          *(_DWORD *)(v18 + 80) = v17;
          sub_1B0D0E714(v18, v17);
          sub_1B0D1806C(*v15, v17);
        }
      }
      uint64_t v19 = *(void *)(*v15 + 24);
      if (v19) {
        xmmword_1EB21CA50(v19);
      }
    }
    goto LABEL_23;
  }
  return result;
}

char *sub_1B0DBBCC8(char *result, int a2, int a3)
{
  if (a3 == 1) {
    return result;
  }
  int v5 = result;
  uint64_t v6 = (uint64_t *)(result + 120);
  if (*((void *)result + 15)) {
    goto LABEL_14;
  }
  uint64_t result = sqlite3_mprintf("DELETE FROM '%q'.'%q_idx' WHERE (segid, (pgno/2)) = (?1, ?2)", *(void *)(*(void *)result + 8), *(void *)(*(void *)result + 16));
  uint64_t v8 = result;
  if (*((_DWORD *)v5 + 15))
  {
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    if (!result)
    {
      *((_DWORD *)v5 + 15) = 7;
      if (*((_DWORD *)v5 + 15)) {
        return result;
      }
      goto LABEL_15;
    }
    *((_DWORD *)v5 + 15) = sub_1B0C7EAC0(**(void **)v5, (unsigned __int8 *)result, 0xFFFFFFFFLL, 133, 0, v6, 0, v7);
  }
  uint64_t v9 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_13:
    uint64_t result = (char *)(*v9)(v8);
    goto LABEL_14;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
  --qword_1EB220150;
  uint64_t result = (char *)off_1EB21C9E8(v8);
  uint64_t v8 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v9 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
    goto LABEL_13;
  }
LABEL_14:
  if (*((_DWORD *)v5 + 15)) {
    return result;
  }
LABEL_15:
  uint64_t v10 = (void *)*v6;
  if (!sub_1B0CC3F2C(*v6, 0))
  {
    uint64_t v11 = v10[16];
    if ((*(_WORD *)(v11 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v11, a2);
    }
    else
    {
      *(void *)uint64_t v11 = a2;
      *(_WORD *)(v11 + 20) = 4;
    }
    uint64_t v12 = *(void *)(*v10 + 24);
    if (v12) {
      xmmword_1EB21CA50(v12);
    }
  }
  int v13 = (void *)*v6;
  if (!sub_1B0CC3F2C((uint64_t)v13, 1u))
  {
    uint64_t v14 = v13[16];
    if ((*(_WORD *)(v14 + 84) & 0x9000) != 0)
    {
      sub_1B0D18980(v14 + 64, a3);
    }
    else
    {
      *(void *)(v14 + 64) = a3;
      *(_WORD *)(v14 + 84) = 4;
    }
    uint64_t v15 = *(void *)(*v13 + 24);
    if (v15) {
      xmmword_1EB21CA50(v15);
    }
  }
  sqlite3_step(*((sqlite3_stmt **)v5 + 15));
  uint64_t result = (char *)sqlite3_reset(*((sqlite3_stmt **)v5 + 15));
  *((_DWORD *)v5 + 15) = result;
  return result;
}

uint64_t sub_1B0DBBEE4(_DWORD *a1, int **a2, int a3, int a4)
{
  int v36 = a3;
  int v5 = *a2;
  long long v35 = *a2;
  if (a3 < 1 || (int v5 = v35, a1[15]))
  {
    uint64_t result = 0;
    goto LABEL_4;
  }
  uint64_t result = 0;
  while (1)
  {
    uint64_t v9 = v5[7];
    if ((int)v9 >= 1) {
      break;
    }
    signed int v12 = 0;
    if (a4 > 0) {
      goto LABEL_19;
    }
LABEL_38:
    if (v12 < 0) {
      goto LABEL_4;
    }
    sub_1B0DBC134((uint64_t)a1, &v35, v12, &v36);
    if (!a1[15] && !v35[4 * v12 + 8]) {
      sub_1B0DBB7FC((uint64_t)a1, v12 + 1, (uint64_t)v35);
    }
    if (v36 <= 0)
    {
      uint64_t result = 1;
      int v5 = v35;
      goto LABEL_4;
    }
    if (a4 == 1) {
      a4 = 2;
    }
    uint64_t result = 1;
    int v5 = v35;
    if (a1[15]) {
      goto LABEL_4;
    }
  }
  uint64_t v10 = 0;
  int v11 = 0;
  signed int v12 = 0;
  int v13 = v5 + 9;
  do
  {
    int v14 = *(v13 - 1);
    if (v14)
    {
      if (v14 > v11)
      {
        signed int v12 = v10;
        int v11 = a4;
      }
      if (v11 < a4) {
        goto LABEL_19;
      }
      goto LABEL_38;
    }
    int v16 = *v13;
    v13 += 4;
    int v15 = v16;
    if (v16 > v11)
    {
      signed int v12 = v10;
      int v11 = v15;
    }
    ++v10;
  }
  while (v9 != v10);
  if (v11 >= a4) {
    goto LABEL_38;
  }
LABEL_19:
  if (*(_DWORD *)(*(void *)a1 + 68))
  {
    int v17 = *(_DWORD *)(*(void *)a1 + 180);
    if ((int)v9 >= 1 && v17 >= 1)
    {
      uint64_t v19 = 0;
      int v20 = 0;
      signed int v12 = -1;
      while (1)
      {
        uint64_t v21 = &v5[4 * v19];
        uint64_t v22 = v21[9];
        if ((int)v22 >= 1) {
          break;
        }
LABEL_25:
        if (++v19 == v9) {
          goto LABEL_38;
        }
      }
      uint64_t v23 = (int64x2_t *)*((void *)v21 + 5);
      if (v22 == 1)
      {
        uint64_t v24 = 0;
        int64x2_t v25 = 0uLL;
      }
      else
      {
        uint64_t v24 = v22 & 0xFFFFFFFE;
        uint64_t v26 = v23 + 6;
        int64x2_t v27 = 0uLL;
        uint64_t v28 = v24;
        int64x2_t v29 = 0uLL;
        do
        {
          int64x2_t v30 = *(int64x2_t *)((char *)v26 - 56);
          int64x2_t v31 = *v26;
          v26 += 7;
          int64x2_t v29 = vaddq_s64(v30, v29);
          int64x2_t v27 = vaddq_s64(v31, v27);
          v28 -= 2;
        }
        while (v28);
        int64x2_t v25 = vaddq_s64(v27, v29);
        if (v24 == v22)
        {
LABEL_34:
          if (v25.i64[1] >= 1
            && v17 <= (int)(100 * v25.i64[0] / v25.i64[1])
            && v20 < (int)(100 * v25.i64[0] / v25.i64[1]))
          {
            signed int v12 = v19;
            int v20 = 100 * v25.i64[0] / v25.i64[1];
          }
          goto LABEL_25;
        }
      }
      uint64_t v32 = v22 - v24;
      long long v33 = &v23[2].u64[7 * v24 + 1];
      do
      {
        int64x2_t v34 = *(int64x2_t *)v33;
        v33 += 7;
        int64x2_t v25 = vaddq_s64(v34, v25);
        --v32;
      }
      while (v32);
      goto LABEL_34;
    }
  }
LABEL_4:
  *a2 = v5;
  return result;
}

double sub_1B0DBC134(uint64_t a1, int **a2, signed int a3, int *a4)
{
  BOOL v4 = a4;
  uint64_t v226 = *MEMORY[0x1E4F143B8];
  unint64_t v208 = *a2;
  uint64_t v224 = 0;
  if (a4) {
    int v201 = *a4;
  }
  else {
    int v201 = 0;
  }
  uint64_t v223 = 0;
  long long v8 = 0uLL;
  long long v221 = 0u;
  long long v222 = 0u;
  long long v219 = 0u;
  long long v220 = 0u;
  long long v217 = 0u;
  long long v218 = 0u;
  long long v216 = 0u;
  int v205 = *(_DWORD *)(*(void *)a1 + 92);
  if (v208[4 * a3 + 8])
  {
    int v204 = v208[4 * a3 + 8];
    uint64_t v215 = (uint64_t)&v208[4 * a3 + 8];
    uint64_t v9 = &v208[4 * a3];
    uint64_t v10 = (uint64_t)(v9 + 12);
    uint64_t v11 = *((void *)v9 + 7) + 56 * v9[13];
    int v13 = *(_DWORD *)(v11 - 56);
    uint64_t v12 = v11 - 56;
    sub_1B0DB9020((uint64_t *)a1, (int *)&v216, v13);
    DWORD2(v216) = *(_DWORD *)(v12 + 8) + 1;
    LODWORD(v223) = 0;
  }
  else
  {
    int v16 = (int *)(a1 + 60);
    int v15 = *(_DWORD *)(a1 + 60);
    if (v15)
    {
      int v17 = 0;
      uint64_t v18 = v208;
    }
    else
    {
      uint64_t v18 = v208;
      if (v208[6] < 2000)
      {
        memset(v225, 0, 252);
        uint64_t v166 = v208[7];
        if ((int)v166 >= 1)
        {
          for (uint64_t i = 0; i != v166; ++i)
          {
            int v168 = &v208[4 * i];
            uint64_t v169 = v168[9];
            if ((int)v169 >= 1)
            {
              int v170 = (int *)*((void *)v168 + 5);
              do
              {
                int v171 = *v170;
                v170 += 14;
                unsigned int v172 = v171 - 1;
                if ((v171 - 1) <= 0x7CF) {
                  *((_DWORD *)v225 + (v172 >> 5)) |= 1 << v172;
                }
                --v169;
              }
              while (v169);
            }
          }
        }
        int v17 = -32;
        BOOL v173 = (unsigned int *)v225;
        do
        {
          unsigned int v175 = *v173++;
          unsigned int v174 = v175;
          v17 += 32;
        }
        while (v175 == -1);
        int v176 = 0;
        do
        {
          unsigned int v177 = v174 >> v176++;
          ++v17;
        }
        while ((v177 & 1) != 0);
        int v15 = 0;
      }
      else
      {
        int v17 = 0;
        int v15 = 13;
        int *v16 = 13;
      }
    }
    if (v18[7] - 1 == a3)
    {
      sub_1B0DBB4BC(a1 + 60, a2);
      uint64_t v18 = *a2;
      int v15 = *v16;
    }
    unint64_t v208 = v18;
    if (v15) {
      return *(double *)&v8;
    }
    uint64_t v178 = &v18[4 * a3 + 4];
    uint64_t v181 = *((void *)v178 + 5);
    uint64_t v180 = (uint64_t *)(v178 + 10);
    uint64_t v179 = v181;
    uint64_t v182 = (int *)v180 - 1;
    int v183 = *((_DWORD *)v180 - 1);
    if (sqlite3_initialize() || (uint64_t v185 = sub_1B0C8E1B8(v179, 56 * v183 + 56)) == 0)
    {
      int *v16 = 7;
      return *(double *)&v8;
    }
    uint64_t v186 = v185 + 56 * *v182;
    *(void *)(v186 + 48) = 0;
    *(void *)&long long v8 = 0;
    *(_OWORD *)(v186 + 16) = 0u;
    *(_OWORD *)(v186 + 32) = 0u;
    *(_OWORD *)uint64_t v186 = 0u;
    *uint64_t v180 = v185;
    if (*v16) {
      return *(double *)&v8;
    }
    uint64_t v10 = (uint64_t)&v208[4 * a3 + 12];
    sub_1B0DB9020((uint64_t *)a1, (int *)&v216, v17);
    uint64_t v187 = *v180;
    int v188 = *v182;
    uint64_t v12 = *v180 + 56 * (*v182)++;
    *(_DWORD *)uint64_t v12 = v17;
    *(_DWORD *)(v12 + 4) = 1;
    ++v208[6];
    uint64_t v215 = (uint64_t)&v208[4 * a3 + 8];
    int v189 = *(_DWORD *)(v215 + 4);
    int v204 = v189;
    if (*((void *)v208 + 2))
    {
      uint64_t v190 = *(void *)&v208[4 * a3 + 10];
      uint64_t v191 = v187 + 56 * v188;
      *(void *)(v191 + 16) = *(void *)(v190 + 16);
      *(void *)(v191 + 24) = *(void *)(v190 + 56 * (v189 - 1) + 24);
    }
    BOOL v4 = a4;
  }
  if (*(_DWORD *)(v10 + 4) == 1)
  {
    uint64_t v14 = (uint64_t)v208;
    BOOL v196 = v208[7] == a3 + 2;
  }
  else
  {
    BOOL v196 = 0;
    uint64_t v14 = (uint64_t)v208;
  }
  uint64_t v193 = v10;
  sub_1B0DDEDE0(a1, v14, 0x20u, 0, a3, v204, &v224);
  if (!*(_DWORD *)(a1 + 60))
  {
    __s2 = 0;
    int v38 = 0;
    unsigned int v194 = 0;
    int v211 = 0;
    uint64_t v39 = v224;
    while (1)
    {
      if (*(unsigned char *)(v39 + 20)) {
        goto LABEL_13;
      }
      uint64_t v40 = *(unsigned __int16 *)(*(void *)(v39 + 88) + 4);
      uint64_t v41 = v39 + 136 * v40;
      size_t v42 = *(unsigned int *)(v41 + 208);
      int v43 = *(void **)(v41 + 200);
      if (v42 == v38 && (v38 < 1 || !memcmp(*(const void **)(v41 + 200), __s2, v38)))
      {
        int v214 = v38;
      }
      else
      {
        if (v4 && SHIDWORD(v220) > v201) {
          goto LABEL_13;
        }
        if (v42)
        {
          LODWORD(v44) = v194;
          if (v194 >= v42) {
            goto LABEL_76;
          }
          if (!v194) {
            LODWORD(v44) = 64;
          }
          unint64_t v44 = (int)v44;
          do
          {
            unint64_t v45 = v44;
            v44 *= 2;
          }
          while (v45 < v42);
          if (!sqlite3_initialize())
          {
            uint64_t v46 = sub_1B0C8E1B8((uint64_t)__s2, v45);
            if (v46)
            {
              __s2 = (void *)v46;
              unsigned int v194 = v45;
LABEL_76:
              memcpy(__s2, v43, v42);
              int v211 = 0;
              int v214 = v42;
              goto LABEL_77;
            }
          }
          int v214 = 0;
          int v211 = 0;
          *(_DWORD *)(a1 + 60) = 7;
        }
        else
        {
          int v214 = 0;
          int v211 = 0;
        }
      }
LABEL_77:
      uint64_t v47 = v39 + 136 * v40;
      int v49 = *(_DWORD *)(v47 + 224);
      uint64_t v48 = (int *)(v47 + 224);
      if (!v49 && (v196 || !*(unsigned char *)(v39 + 136 * v40 + 228))) {
        goto LABEL_56;
      }
      int v50 = *(_DWORD *)(a1 + 60);
      if (!(v50 | v211))
      {
        sub_1B0DB9334((_DWORD *)a1, (uint64_t)&v216, v42, (unsigned __int8 *)v43);
        int v50 = *(_DWORD *)(a1 + 60);
        int v211 = 1;
      }
      if (v50) {
        goto LABEL_109;
      }
      unint64_t v51 = *(void *)(v39 + 136 * *(unsigned __int16 *)(*(void *)(v39 + 88) + 4) + 216);
      signed int v52 = DWORD2(v217);
      if (DWORD2(v218) + DWORD2(v217) >= *(_DWORD *)(*(void *)a1 + 136))
      {
        sub_1B0DBAEB0(a1, (unsigned int *)&v216);
        signed int v52 = DWORD2(v217);
      }
      int v53 = BYTE9(v220);
      if (BYTE9(v220))
      {
        *(_WORD *)long long v217 = bswap32(v52) >> 16;
        sub_1B0DBABBC(a1, (unsigned int *)&v216, v51);
        int v53 = BYTE9(v220);
        signed int v52 = DWORD2(v217);
      }
      if (BYTE8(v220) | v53) {
        uint64_t v54 = 0;
      }
      else {
        uint64_t v54 = v220;
      }
      unint64_t v55 = (v52 + 9);
      if (v55 <= HIDWORD(v217))
      {
        uint64_t v59 = v217;
LABEL_100:
        unint64_t v60 = v51 - v54;
        int v61 = (int8x8_t *)(v59 + v52);
        if (v51 - v54 > 0x7F)
        {
          BOOL v4 = a4;
          if (v60 >> 14)
          {
            int v62 = sub_1B0D1DC5C(v61, v60);
          }
          else
          {
            v61->i8[0] = (v60 >> 7) | 0x80;
            v61->i8[1] = v60 & 0x7F;
            int v62 = 2;
          }
        }
        else
        {
          v61->i8[0] = v60;
          int v62 = 1;
          BOOL v4 = a4;
        }
        DWORD2(v217) += v62;
        goto LABEL_108;
      }
      if (HIDWORD(v217)) {
        LODWORD(v56) = HIDWORD(v217);
      }
      else {
        LODWORD(v56) = 64;
      }
      unint64_t v56 = (int)v56;
      do
      {
        unint64_t v57 = v56;
        v56 *= 2;
      }
      while (v57 < v55);
      uint64_t v58 = v217;
      if (!sqlite3_initialize())
      {
        uint64_t v59 = sub_1B0C8E1B8(v58, v57);
        if (v59)
        {
          HIDWORD(v217) = v57;
          *(void *)&long long v217 = v59;
          signed int v52 = DWORD2(v217);
          goto LABEL_100;
        }
      }
      *(_DWORD *)(a1 + 60) = 7;
      BOOL v4 = a4;
LABEL_108:
      *(void *)&long long v220 = v51;
      WORD4(v220) = 0;
LABEL_109:
      if (v205 != 1)
      {
        uint64_t v68 = *v48;
        uint64_t v69 = *(unsigned __int8 *)(v39 + 136 * v40 + 228);
        int v70 = DWORD2(v217);
        unint64_t v71 = (DWORD2(v217) + 9);
        if (v71 > HIDWORD(v217))
        {
          if (HIDWORD(v217)) {
            LODWORD(v72) = HIDWORD(v217);
          }
          else {
            LODWORD(v72) = 64;
          }
          unint64_t v72 = (int)v72;
          do
          {
            unint64_t v73 = v72;
            v72 *= 2;
          }
          while (v73 < v71);
          uint64_t v74 = v217;
          if (sqlite3_initialize() || (uint64_t v75 = sub_1B0C8E1B8(v74, v73)) == 0)
          {
            *(_DWORD *)(a1 + 60) = 7;
            int v38 = v214;
          }
          else
          {
            HIDWORD(v217) = v73;
            *(void *)&long long v217 = v75;
            int v70 = DWORD2(v217);
LABEL_128:
            unint64_t v76 = v69 + 2 * v68;
            unint64_t v77 = (int8x8_t *)(v75 + v70);
            if (v76 > 0x7F)
            {
              int v38 = v214;
              if (v76 >> 14)
              {
                int v78 = sub_1B0D1DC5C(v77, v76);
              }
              else
              {
                v77->i8[0] = (v76 >> 7) | 0x80;
                v77->i8[1] = v76 & 0x7F;
                int v78 = 2;
              }
            }
            else
            {
              v77->i8[0] = v76;
              int v78 = 1;
              int v38 = v214;
            }
            DWORD2(v217) += v78;
          }
          sub_1B0DB3E4C(a1, (unsigned int **)(v41 + 96), (uint64_t)&v216, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0DBD51C);
          goto LABEL_57;
        }
        uint64_t v75 = v217;
        goto LABEL_128;
      }
      if (!*(unsigned char *)(v39 + 136 * v40 + 228))
      {
LABEL_56:
        int v38 = v214;
        goto LABEL_57;
      }
      int v63 = DWORD2(v217);
      unint64_t v64 = (DWORD2(v217) + 9);
      if (v64 <= HIDWORD(v217))
      {
        uint64_t v79 = v217;
      }
      else
      {
        if (HIDWORD(v217)) {
          LODWORD(v65) = HIDWORD(v217);
        }
        else {
          LODWORD(v65) = 64;
        }
        unint64_t v65 = (int)v65;
        do
        {
          unint64_t v66 = v65;
          v65 *= 2;
        }
        while (v66 < v64);
        uint64_t v67 = v217;
        if (sqlite3_initialize() || (uint64_t v79 = sub_1B0C8E1B8(v67, v66)) == 0)
        {
          *(_DWORD *)(a1 + 60) = 7;
          goto LABEL_132;
        }
        HIDWORD(v217) = v66;
        *(void *)&long long v217 = v79;
        int v63 = DWORD2(v217);
      }
      *(unsigned char *)(v79 + v63) = 0;
      ++DWORD2(v217);
LABEL_132:
      if (*v48 < 1) {
        goto LABEL_56;
      }
      int v80 = DWORD2(v217);
      unint64_t v81 = (DWORD2(v217) + 9);
      int v38 = v214;
      if (v81 <= HIDWORD(v217))
      {
        uint64_t v85 = v217;
LABEL_144:
        *(unsigned char *)(v85 + v80) = 0;
        ++DWORD2(v217);
        goto LABEL_57;
      }
      if (HIDWORD(v217)) {
        LODWORD(v82) = HIDWORD(v217);
      }
      else {
        LODWORD(v82) = 64;
      }
      unint64_t v82 = (int)v82;
      do
      {
        unint64_t v83 = v82;
        v82 *= 2;
      }
      while (v83 < v81);
      uint64_t v84 = v217;
      if (!sqlite3_initialize())
      {
        uint64_t v85 = sub_1B0C8E1B8(v84, v83);
        if (v85)
        {
          HIDWORD(v217) = v83;
          *(void *)&long long v217 = v85;
          int v80 = DWORD2(v217);
          goto LABEL_144;
        }
      }
      *(_DWORD *)(a1 + 60) = 7;
LABEL_57:
      uint64_t v39 = v224;
      sub_1B0DAB298(a1, v224, 0, 0);
      if (*(_DWORD *)(a1 + 60)) {
        goto LABEL_13;
      }
    }
  }
  __s2 = 0;
LABEL_13:
  sub_1B0DBB0F4(a1, (uint64_t)&v216, (_DWORD *)(v12 + 8));
  uint64_t v19 = v224;
  uint64_t v213 = v224;
  if (*(_DWORD *)(a1 + 60) || *(unsigned char *)(v224 + 20))
  {
    if (v204 < 1)
    {
LABEL_42:
      int v33 = v204;
      int v34 = *(_DWORD *)(v215 + 4) - v204;
      if (v34)
      {
        memmove(*(void **)(v215 + 8), (const void *)(*(void *)(v215 + 8) + 56 * v204), 56 * v34);
        int v33 = *(_DWORD *)(v215 + 4);
      }
      BOOL v4 = a4;
      int v35 = v208[6] - v204;
      v208[6] = v35;
      *(_DWORD *)uint64_t v215 = 0;
      *(_DWORD *)(v215 + 4) = v33 - v204;
      uint64_t v36 = v213;
      if (!*(_DWORD *)(v12 + 8))
      {
        --*(_DWORD *)(v193 + 4);
        v208[6] = v35 - 1;
      }
      goto LABEL_46;
    }
    uint64_t v20 = 0;
    uint64_t v21 = (uint64_t *)(a1 + 96);
    while (1)
    {
      uint64_t v23 = (int *)(*(void *)(v215 + 8) + v20);
      *(void *)(v12 + 48) += *((void *)v23 + 6) - *((void *)v23 + 5);
      uint64_t v24 = *v23;
      sub_1B0DBD704(a1, v24 << 37, ((unint64_t)(v24 + 1) << 37) - 1);
      uint64_t v25 = v23[8];
      if (v25) {
        sub_1B0DBD704(a1, (unint64_t)(v24 + 0x10000) << 37, v25 + ((unint64_t)(v24 + 0x10000) << 37) - 1);
      }
      if (*v21) {
        goto LABEL_34;
      }
      uint64_t v26 = (unsigned __int8 *)sqlite3_mprintf("DELETE FROM '%q'.'%q_idx' WHERE segid=?", *(void *)(*(void *)a1 + 8), *(void *)(*(void *)a1 + 16));
      uint64_t v28 = v26;
      if (*(_DWORD *)(a1 + 60))
      {
        if (!v26) {
          goto LABEL_19;
        }
      }
      else
      {
        if (!v26)
        {
          int v22 = 7;
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 60) = sub_1B0C7EAC0(**(void **)a1, v26, 0xFFFFFFFFLL, 133, 0, (void *)(a1 + 96), 0, v27);
      }
      int64x2_t v29 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v28);
        --qword_1EB220150;
        off_1EB21C9E8(v28);
        uint64_t v28 = (unsigned __int8 *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_34;
        }
        int64x2_t v29 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
      }
      (*v29)(v28);
LABEL_34:
      if (*(_DWORD *)(a1 + 60)) {
        goto LABEL_19;
      }
      int64x2_t v30 = (void *)*v21;
      if (!sub_1B0CC3F2C(*v21, 0))
      {
        uint64_t v31 = v30[16];
        if ((*(_WORD *)(v31 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v31, v24);
        }
        else
        {
          *(void *)uint64_t v31 = v24;
          *(_WORD *)(v31 + 20) = 4;
        }
        uint64_t v32 = *(void *)(*v30 + 24);
        if (v32) {
          xmmword_1EB21CA50(v32);
        }
      }
      sqlite3_step((sqlite3_stmt *)*v21);
      int v22 = sqlite3_reset((sqlite3_stmt *)*v21);
LABEL_18:
      *(_DWORD *)(a1 + 60) = v22;
LABEL_19:
      v20 += 56;
      if (56 * v204 == v20) {
        goto LABEL_42;
      }
    }
  }
  int v86 = *(_DWORD *)(v224 + 64);
  if (v86 < 1) {
    goto LABEL_314;
  }
  unsigned int v202 = 0;
  uint64_t v87 = 0;
  uint64_t v206 = 0;
  while (!*(_DWORD *)(a1 + 60))
  {
    uint64_t v88 = v19 + 136 * v87;
    int v91 = *(unsigned int **)(v88 + 96);
    uint64_t v90 = v88 + 96;
    int v89 = v91;
    if (v91)
    {
      if (*(void *)(v19 + 136 * v87 + 112))
      {
        uint64_t v92 = v19 + 136 * v87;
        uint64_t v94 = *(int *)(v92 + 160);
        int v93 = (_DWORD *)(v92 + 160);
        uint64_t v95 = (int)v93[1];
        unint64_t v209 = (unint64_t)*v89 << 37;
        uint64_t v212 = v209 + v94;
        uint64_t v96 = sub_1B0DA6708(a1, v209 + v94);
        if (!v96)
        {
          BOOL v4 = a4;
          goto LABEL_287;
        }
        uint64_t v97 = v96;
        unint64_t v98 = v96[2];
        if ((int)v98 < 4 || (int v99 = v96[3], v99 > (int)v98))
        {
          *(_DWORD *)(a1 + 60) = 267;
          long long v100 = &off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            uint64_t v101 = xmmword_1EB2201B0;
            BOOL v4 = a4;
            if ((void)xmmword_1EB2201B0) {
              goto LABEL_169;
            }
            goto LABEL_170;
          }
          BOOL v4 = a4;
LABEL_286:
          (*v100)(v97);
          goto LABEL_287;
        }
        if ((int)v95 > v99)
        {
          *(_DWORD *)(a1 + 60) = 267;
          BOOL v4 = a4;
LABEL_283:
          long long v100 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_286;
          }
          uint64_t v101 = xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0) {
LABEL_169:
          }
            xmmword_1EB21CA40(v101);
LABEL_170:
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v97);
          --qword_1EB220150;
          off_1EB21C9E8(v97);
          uint64_t v97 = (_DWORD *)xmmword_1EB2201B0;
          if ((void)xmmword_1EB2201B0)
          {
            long long v100 = &xmmword_1EB21CA50;
            goto LABEL_286;
          }
LABEL_287:
          int v86 = *(_DWORD *)(v19 + 64);
          goto LABEL_160;
        }
        unsigned int v102 = v202;
        if (v98 > v202)
        {
          if (v202) {
            LODWORD(v103) = v202;
          }
          else {
            LODWORD(v103) = 64;
          }
          unint64_t v103 = (int)v103;
          do
          {
            unint64_t v104 = v103;
            v103 *= 2;
          }
          while (v104 < v98);
          if (sqlite3_initialize() || (uint64_t v105 = sub_1B0C8E1B8(v206, v104)) == 0)
          {
            *(_DWORD *)(a1 + 60) = 7;
            unsigned int v102 = v202;
          }
          else
          {
            unsigned int v102 = v104;
            uint64_t v206 = v105;
          }
        }
        unsigned int v203 = v102;
        if (v102 > 3)
        {
LABEL_195:
          *(_DWORD *)uint64_t v206 = 0;
          unsigned int v108 = 4;
        }
        else
        {
          if (v102) {
            uint64_t v106 = v102;
          }
          else {
            uint64_t v106 = 64;
          }
          do
          {
            unint64_t v107 = v106;
            v106 *= 2;
          }
          while (v107 < 4);
          if (!sqlite3_initialize())
          {
            uint64_t v109 = sub_1B0C8E1B8(v206, v107);
            if (v109)
            {
              unsigned int v203 = v107;
              uint64_t v206 = v109;
              goto LABEL_195;
            }
          }
          unsigned int v108 = 0;
          *(_DWORD *)(a1 + 60) = 7;
        }
        uint64_t v110 = v19 + 136 * v87;
        unint64_t v113 = *(int *)(v110 + 208);
        unsigned int v111 = (unsigned int *)(v110 + 208);
        unint64_t v112 = v113;
        unint64_t v114 = v108 | 9;
        if (v114 <= v203)
        {
LABEL_206:
          unsigned int v119 = (int8x8_t *)(v206 + v108);
          if (v112 > 0x7F)
          {
            if (v112 >> 14)
            {
              unint64_t v121 = v112;
              unsigned int v122 = v108;
              int v120 = sub_1B0D1DC5C(v119, v121);
              unsigned int v108 = v122;
            }
            else
            {
              v119->i8[0] = (v112 >> 7) | 0x80;
              v119->i8[1] = v112 & 0x7F;
              int v120 = 2;
            }
          }
          else
          {
            v119->i8[0] = v112;
            int v120 = 1;
          }
          signed int v117 = v120 + v108;
        }
        else
        {
          unsigned int v197 = v108;
          if (v203) {
            LODWORD(v115) = v203;
          }
          else {
            LODWORD(v115) = 64;
          }
          unint64_t v115 = (int)v115;
          do
          {
            unint64_t v116 = v115;
            v115 *= 2;
          }
          while (v116 < v114);
          if (!sqlite3_initialize())
          {
            uint64_t v118 = sub_1B0C8E1B8(v206, v116);
            if (v118)
            {
              unsigned int v203 = v116;
              uint64_t v206 = v118;
              uint64_t v19 = v213;
              unsigned int v108 = v197;
              goto LABEL_206;
            }
          }
          *(_DWORD *)(a1 + 60) = 7;
          uint64_t v19 = v213;
          signed int v117 = v197;
        }
        size_t v123 = *v111;
        if (v123)
        {
          int v124 = (const void *)*((void *)v111 - 1);
          unint64_t v125 = (v123 + v117);
          if (v125 <= v203) {
            goto LABEL_223;
          }
          int v195 = v124;
          signed int v198 = v117;
          if (v203) {
            LODWORD(v126) = v203;
          }
          else {
            LODWORD(v126) = 64;
          }
          unint64_t v126 = (int)v126;
          do
          {
            unint64_t v127 = v126;
            v126 *= 2;
          }
          while (v127 < v125);
          if (sqlite3_initialize() || (uint64_t v128 = sub_1B0C8E1B8(v206, v127)) == 0)
          {
            *(_DWORD *)(a1 + 60) = 7;
            uint64_t v19 = v213;
            signed int v117 = v198;
          }
          else
          {
            unsigned int v203 = v127;
            uint64_t v206 = v128;
            uint64_t v19 = v213;
            int v124 = v195;
            signed int v117 = v198;
LABEL_223:
            memcpy((void *)(v206 + v117), v124, v123);
            signed int v117 = v125;
          }
        }
        int v129 = v97[3];
        size_t v130 = (v129 - v95);
        if (v129 == v95) {
          goto LABEL_236;
        }
        uint64_t v131 = *(void *)v97;
        unint64_t v132 = (v130 + v117);
        if (v132 <= v203) {
          goto LABEL_235;
        }
        signed int v199 = v117;
        if (v203) {
          LODWORD(v133) = v203;
        }
        else {
          LODWORD(v133) = 64;
        }
        unint64_t v133 = (int)v133;
        do
        {
          unint64_t v134 = v133;
          v133 *= 2;
        }
        while (v134 < v132);
        if (sqlite3_initialize() || (uint64_t v136 = sub_1B0C8E1B8(v206, v134)) == 0)
        {
          *(_DWORD *)(a1 + 60) = 7;
          uint64_t v19 = v213;
          unsigned int v135 = v203;
          signed int v117 = v199;
        }
        else
        {
          unsigned int v203 = v134;
          uint64_t v206 = v136;
          uint64_t v19 = v213;
          signed int v117 = v199;
LABEL_235:
          memcpy((void *)(v206 + v117), (const void *)(v131 + v95), v130);
          signed int v117 = v132;
LABEL_236:
          unsigned int v135 = v203;
          if (!*(_DWORD *)(a1 + 60)) {
            *(_WORD *)(v206 + 2) = bswap32(v117) >> 16;
          }
        }
        unint64_t v137 = (v117 + 9);
        unsigned int v202 = v135;
        if (v137 <= v135)
        {
LABEL_246:
          *(unsigned char *)(v206 + v117) = 4;
          int v141 = v117 + 1;
        }
        else
        {
          signed int v138 = v117;
          if (v135) {
            LODWORD(v139) = v135;
          }
          else {
            LODWORD(v139) = 64;
          }
          unint64_t v139 = (int)v139;
          do
          {
            unint64_t v140 = v139;
            v139 *= 2;
          }
          while (v140 < v137);
          if (!sqlite3_initialize())
          {
            uint64_t v147 = sub_1B0C8E1B8(v206, v140);
            if (v147)
            {
              unsigned int v202 = v140;
              uint64_t v206 = v147;
              signed int v117 = v138;
              goto LABEL_246;
            }
          }
          *(_DWORD *)(a1 + 60) = 7;
          int v141 = v138;
        }
        unsigned int v200 = v141;
        if (*(_DWORD *)(v19 + 136 * v87 + 108) != *v93) {
          goto LABEL_282;
        }
        int v142 = *(_DWORD *)(v19 + 136 * v87 + 172);
        int v143 = v97[3];
        if (v142 >= v143) {
          goto LABEL_282;
        }
        uint64_t v144 = v19 + 136 * v87;
        int v146 = *(_DWORD *)(v144 + 168);
        uint64_t v145 = (int *)(v144 + 168);
        if (v146 > v97[2]) {
          goto LABEL_282;
        }
        unint64_t v148 = (v141 + 9);
        unsigned int v149 = v202;
        if (v148 <= v202)
        {
LABEL_263:
          unint64_t v154 = v141 + (uint64_t)(v142 + ~v143) - 4;
          int v155 = (int8x8_t *)(v206 + v141);
          unsigned int v202 = v149;
          if (v154 > 0x7F)
          {
            if (v154 >> 14)
            {
              int v157 = v141;
              int v156 = sub_1B0D1DC5C(v155, v154);
              int v141 = v157;
            }
            else
            {
              v155->i8[0] = (v154 >> 7) | 0x80;
              v155->i8[1] = v154 & 0x7F;
              int v156 = 2;
            }
          }
          else
          {
            v155->i8[0] = v154;
            int v156 = 1;
          }
          signed int v152 = v156 + v141;
        }
        else
        {
          if (v202) {
            LODWORD(v150) = v202;
          }
          else {
            LODWORD(v150) = 64;
          }
          unint64_t v150 = (int)v150;
          do
          {
            unint64_t v151 = v150;
            v150 *= 2;
          }
          while (v151 < v148);
          if (!sqlite3_initialize())
          {
            uint64_t v153 = sub_1B0C8E1B8(v206, v151);
            if (v153)
            {
              unsigned int v149 = v151;
              uint64_t v206 = v153;
              int v141 = v200;
              goto LABEL_263;
            }
          }
          *(_DWORD *)(a1 + 60) = 7;
          signed int v152 = v200;
        }
        int v158 = v97[2];
        uint64_t v159 = *v145;
        size_t v160 = (v158 - v159);
        if (v158 != v159)
        {
          uint64_t v161 = *(void *)v97;
          unint64_t v162 = (v160 + v152);
          if (v162 > v202)
          {
            unsigned int v200 = v152;
            if (v202) {
              LODWORD(v163) = v202;
            }
            else {
              LODWORD(v163) = 64;
            }
            unint64_t v163 = (int)v163;
            do
            {
              unint64_t v164 = v163;
              v163 *= 2;
            }
            while (v164 < v162);
            if (sqlite3_initialize() || (uint64_t v165 = sub_1B0C8E1B8(v206, v164)) == 0)
            {
              *(_DWORD *)(a1 + 60) = 7;
              uint64_t v19 = v213;
              goto LABEL_282;
            }
            unsigned int v202 = v164;
            uint64_t v206 = v165;
            uint64_t v19 = v213;
            signed int v152 = v200;
          }
          memcpy((void *)(v206 + v152), (const void *)(v161 + v159), v160);
          unsigned int v200 = v162;
          goto LABEL_282;
        }
        unsigned int v200 = v152;
LABEL_282:
        *(_DWORD *)(*(void *)v90 + 4) = *v93;
        sub_1B0DBD704(a1, v209 | 1, v212);
        sub_1B0DA42D0((unsigned __int8 *)a1, v212, (char *)v206, v200);
        BOOL v4 = a4;
        goto LABEL_283;
      }
      v89[1] = 0;
      v89[2] = 0;
    }
    BOOL v4 = a4;
LABEL_160:
    if (++v87 >= v86) {
      break;
    }
  }
  if (v206)
  {
    uint64_t v184 = (void (**)(uint64_t))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_313;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v206);
    --qword_1EB220150;
    off_1EB21C9E8(v206);
    uint64_t v206 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v184 = (void (**)(uint64_t))&xmmword_1EB21CA50;
LABEL_313:
      (*v184)(v206);
    }
  }
LABEL_314:
  *(_DWORD *)uint64_t v215 = v204;
  uint64_t v36 = v224;
LABEL_46:
  sub_1B0DA8128(v36);
  if (__s2)
  {
    uint64_t v37 = (void (**)(void *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_52;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(__s2);
    --qword_1EB220150;
    off_1EB21C9E8(__s2);
    __s2 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v37 = (void (**)(void *))&xmmword_1EB21CA50;
LABEL_52:
      (*v37)(__s2);
    }
  }
  if (v4) {
    *a4 -= HIDWORD(v220);
  }
  return *(double *)&v8;
}

uint64_t sub_1B0DBD51C(uint64_t result, uint64_t a2, char *__src, size_t __n)
{
  int v4 = __n;
  for (i = (_DWORD *)result; !i[15]; uint64_t result = sub_1B0DBAEB0((uint64_t)i, (unsigned int *)a2))
  {
    int v15 = *(_DWORD *)(a2 + 24);
    int v16 = *(_DWORD *)(a2 + 40) + v15;
    int v17 = *(_DWORD *)(*(void *)i + 136);
    if (v16 + v4 < v17) {
      break;
    }
    int v18 = v17 - v16;
    if (v17 - v16 < 1)
    {
      LODWORD(v14) = 0;
    }
    else
    {
      LODWORD(v14) = 0;
      do
      {
        unint64_t v24 = 0;
        size_t v14 = v14 + sub_1B0DA69F4(&__src[v14], &v24);
      }
      while ((int)v14 < v18);
      unint64_t v19 = (v14 + v15);
      LODWORD(v20) = *(_DWORD *)(a2 + 28);
      if (v19 <= v20)
      {
        uint64_t v23 = *(void *)(a2 + 16);
LABEL_26:
        memcpy((void *)(v23 + v15), __src, v14);
        *(_DWORD *)(a2 + 24) += v14;
        goto LABEL_13;
      }
      if (!v20) {
        LODWORD(v20) = 64;
      }
      unint64_t v20 = (int)v20;
      do
      {
        unint64_t v21 = v20;
        v20 *= 2;
      }
      while (v21 < v19);
      uint64_t v22 = *(void *)(a2 + 16);
      if (!sqlite3_initialize())
      {
        uint64_t v23 = sub_1B0C8E1B8(v22, v21);
        if (v23)
        {
          *(_DWORD *)(a2 + 28) = v21;
          *(void *)(a2 + 16) = v23;
          int v15 = *(_DWORD *)(a2 + 24);
          goto LABEL_26;
        }
      }
      i[15] = 7;
    }
LABEL_13:
    __src += v14;
    v4 -= v14;
  }
  if (v4 < 1) {
    return result;
  }
  int v8 = *(_DWORD *)(a2 + 24);
  unsigned int v9 = *(_DWORD *)(a2 + 28);
  unint64_t v10 = (v8 + v4);
  if (v10 <= v9)
  {
    uint64_t result = *(void *)(a2 + 16);
  }
  else
  {
    if (v9) {
      LODWORD(v11) = *(_DWORD *)(a2 + 28);
    }
    else {
      LODWORD(v11) = 64;
    }
    unint64_t v11 = (int)v11;
    do
    {
      unint64_t v12 = v11;
      v11 *= 2;
    }
    while (v12 < v10);
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t result = sqlite3_initialize();
    if (result || (uint64_t result = sub_1B0C8E1B8(v13, v12)) == 0)
    {
      i[15] = 7;
      return result;
    }
    *(_DWORD *)(a2 + 28) = v12;
    *(void *)(a2 + 16) = result;
    int v8 = *(_DWORD *)(a2 + 24);
  }
  uint64_t result = (uint64_t)memcpy((void *)(result + v8), __src, v4);
  *(_DWORD *)(a2 + 24) += v4;
  return result;
}

uint64_t sub_1B0DBD704(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!*(_DWORD *)(result + 60))
  {
    uint64_t v5 = result;
    uint64_t v6 = (uint64_t *)(result + 80);
    uint64_t v7 = *(void **)(result + 80);
    if (v7)
    {
LABEL_3:
      if (!sub_1B0CC3F2C((uint64_t)v7, 0))
      {
        uint64_t v8 = v7[16];
        if ((*(_WORD *)(v8 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v8, a2);
        }
        else
        {
          *(void *)uint64_t v8 = a2;
          *(_WORD *)(v8 + 20) = 4;
        }
        uint64_t v12 = *(void *)(*v7 + 24);
        if (v12) {
          xmmword_1EB21CA50(v12);
        }
      }
      uint64_t v13 = (void *)*v6;
      if (!sub_1B0CC3F2C(*v6, 1u))
      {
        uint64_t v14 = v13[16];
        if ((*(_WORD *)(v14 + 84) & 0x9000) != 0)
        {
          sub_1B0D18980(v14 + 64, a3);
        }
        else
        {
          *(void *)(v14 + 64) = a3;
          *(_WORD *)(v14 + 84) = 4;
        }
        uint64_t v15 = *(void *)(*v13 + 24);
        if (v15) {
          xmmword_1EB21CA50(v15);
        }
      }
      sqlite3_step((sqlite3_stmt *)*v6);
      uint64_t result = sqlite3_reset((sqlite3_stmt *)*v6);
      goto LABEL_29;
    }
    uint64_t result = (uint64_t)sqlite3_mprintf("DELETE FROM '%q'.'%q_data' WHERE id>=? AND id<=?", *(void *)(*(void *)result + 8), *(void *)(*(void *)result + 16));
    uint64_t v10 = result;
    if (*(_DWORD *)(v5 + 60))
    {
      if (!result) {
        return result;
      }
    }
    else
    {
      if (!result)
      {
        uint64_t result = 7;
LABEL_29:
        *(_DWORD *)(v5 + 60) = result;
        return result;
      }
      *(_DWORD *)(v5 + 60) = sub_1B0C7EAC0(**(void **)v5, (unsigned __int8 *)result, 0xFFFFFFFFLL, 133, 0, v6, 0, v9);
    }
    unint64_t v11 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v10);
      uint64_t v10 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_17;
      }
      unint64_t v11 = &xmmword_1EB21CA50;
    }
    uint64_t result = (*v11)(v10);
LABEL_17:
    if (*(_DWORD *)(v5 + 60)) {
      return result;
    }
    uint64_t v7 = (void *)*v6;
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_1B0DBD914(int *a1, unint64_t a2, unsigned int a3, signed int a4, unsigned __int8 a5, unsigned __int8 *__s2, int a7)
{
  uint64_t v10 = a1;
  int v11 = a5;
  uint64_t v12 = a1[5];
  BOOL v69 = *a1 == 0;
  if (a7 < 1)
  {
    int v14 = 13;
  }
  else
  {
    unint64_t v13 = a7 + 1;
    int v14 = 13;
    do
      v14 ^= __s2[(v13-- - 2)] ^ (8 * v14);
    while (v13 > 1);
  }
  uint64_t v15 = (a5 ^ (8 * v14) ^ v14) % v12;
  uint64_t v16 = *((void *)a1 + 4);
  uint64_t v17 = *(void *)(v16 + 8 * v15);
  if (v17)
  {
    while (*(unsigned __int8 *)(v17 + 48) != v11
         || *(_DWORD *)(v17 + 28) != a7
         || memcmp((const void *)(v17 + 49), __s2, a7))
    {
      uint64_t v17 = *(void *)v17;
      if (!v17) {
        goto LABEL_18;
      }
    }
    signed int v18 = a4;
    uint64_t v19 = *(int *)(v17 + 16);
    int v20 = *(_DWORD *)(v17 + 24);
    if ((int)v19 - v20 > 21)
    {
      uint64_t v22 = v17;
      goto LABEL_43;
    }
    if (!sqlite3_initialize())
    {
      uint64_t v21 = sub_1B0C8E1B8(v17, 2 * v19);
      if (v21)
      {
        uint64_t v22 = v21;
        *(_DWORD *)(v21 + 16) = 2 * v19;
        uint64_t v23 = (uint64_t *)(*((void *)v10 + 4) + 8 * v15);
        do
        {
          unint64_t v24 = v23;
          uint64_t v23 = (uint64_t *)*v23;
        }
        while (v23 != (uint64_t *)v17);
        uint64_t *v24 = v21;
        int v20 = *(_DWORD *)(v21 + 24);
LABEL_43:
        signed int v35 = v18;
        int v48 = -v20;
        uint64_t v49 = *(void *)(v22 + 40);
        unint64_t v50 = a2 - v49;
        if (a2 == v49)
        {
          unsigned int v36 = a3;
          if ((a3 & 0x80000000) != 0) {
            goto LABEL_75;
          }
        }
        else
        {
          sub_1B0DB1498(v10, v22, 0);
          unint64_t v51 = (int8x8_t *)(v22 + *(int *)(v22 + 24));
          if (v50 > 0x7F)
          {
            if (v50 >> 14)
            {
              int v52 = sub_1B0D1DC5C(v51, v50);
            }
            else
            {
              v51->i8[0] = (v50 >> 7) | 0x80;
              v51->i8[1] = v50 & 0x7F;
              int v52 = 2;
            }
          }
          else
          {
            v51->i8[0] = v50;
            int v52 = 1;
          }
          unsigned int v36 = a3;
          int v20 = *(_DWORD *)(v22 + 24) + v52;
          *(void *)(v22 + 40) = a2;
          *(_DWORD *)(v22 + 20) = v20;
          *(_DWORD *)(v22 + 24) = v20;
          int v60 = *v10;
          if (*v10 != 1)
          {
            *(_DWORD *)(v22 + 24) = ++v20;
            if (v60) {
              __int16 v61 = -1;
            }
            else {
              __int16 v61 = 0;
            }
            *(_WORD *)(v22 + 34) = v61;
            *(_DWORD *)(v22 + 36) = 0;
            int v60 = 1;
          }
          BOOL v69 = v60;
          if ((a3 & 0x80000000) != 0) {
            goto LABEL_75;
          }
        }
        goto LABEL_66;
      }
    }
    return 7;
  }
LABEL_18:
  uint64_t v25 = a7 + 1;
  if (v25 > 15) {
    uint64_t v26 = a7 + 1;
  }
  else {
    uint64_t v26 = 15;
  }
  if ((int)v12 <= 2 * v10[4])
  {
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v68 = v26;
    int v38 = (char *)sub_1B0C7FC94(16 * v12);
    if (!v38) {
      return 7;
    }
    uint64_t v39 = v38;
    unsigned int v40 = 2 * v12;
    bzero(v38, 16 * v12);
    uint64_t v41 = v10[5];
    int v66 = a4;
    uint64_t v67 = v10;
    if ((int)v41 < 1)
    {
      if (!v16) {
        goto LABEL_55;
      }
    }
    else
    {
      for (uint64_t i = 0; i != v41; ++i)
      {
        while (1)
        {
          uint64_t v45 = *(void *)(v16 + 8 * i);
          if (!v45) {
            break;
          }
          *(void *)(v16 + 8 * i) = *(void *)v45;
          int v46 = strlen((const char *)(v45 + 48));
          if (v46 < 1)
          {
            unsigned int v43 = 13;
          }
          else
          {
            unint64_t v47 = v46 + 1;
            unsigned int v43 = 13;
            do
              v43 ^= *(unsigned __int8 *)(v45 + 48 + (v47-- - 2)) ^ (8 * v43);
            while (v47 > 1);
          }
          uint64_t v44 = 8 * (v43 % v40);
          *(void *)uint64_t v45 = *(void *)&v39[v44];
          *(void *)&v39[v44] = v45;
        }
      }
    }
    int v53 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v16);
      --qword_1EB220150;
      off_1EB21C9E8(v16);
      uint64_t v16 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0)
      {
LABEL_55:
        uint64_t v10 = v67;
        v67[5] = v40;
        *((void *)v67 + 4) = v39;
        if (a7 < 1)
        {
          int v55 = 13;
          a4 = v66;
          uint64_t v26 = v68;
          uint64_t v25 = a7 + 1;
        }
        else
        {
          unint64_t v54 = a7 + 1;
          int v55 = 13;
          a4 = v66;
          uint64_t v26 = v68;
          uint64_t v25 = a7 + 1;
          do
            v55 ^= __s2[(v54-- - 2)] ^ (8 * v55);
          while (v54 > 1);
        }
        LODWORD(v15) = (v11 ^ (8 * v55) ^ v55) % v40;
        if (sqlite3_initialize()) {
          return 7;
        }
        goto LABEL_23;
      }
      int v53 = &xmmword_1EB21CA50;
    }
    (*v53)(v16);
    goto LABEL_55;
  }
  if (sqlite3_initialize()) {
    return 7;
  }
LABEL_23:
  uint64_t v27 = v26 + 113;
  uint64_t v28 = sub_1B0C7FC94(v27);
  if (!v28) {
    return 7;
  }
  uint64_t v22 = v28;
  signed int v29 = a4;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_OWORD *)(v28 + 32) = 0u;
  *(_OWORD *)uint64_t v28 = 0u;
  *(_DWORD *)(v28 + 16) = v27;
  *(unsigned char *)(v28 + 48) = v11;
  uint64_t v30 = v28 + 48;
  memcpy((void *)(v28 + 49), __s2, a7);
  *(_DWORD *)(v22 + 28) = a7;
  *(unsigned char *)(v30 + v25) = 0;
  uint64_t v31 = *((void *)v10 + 4);
  uint64_t v32 = 8 * v15;
  *(void *)uint64_t v22 = *(void *)(v31 + v32);
  *(void *)(v31 + v32) = v22;
  *(_DWORD *)(v22 + 24) = a7 + 50;
  ++v10[4];
  int v33 = (int8x8_t *)(v22 + a7 + 50);
  if (a2 > 0x7F)
  {
    unsigned int v36 = a3;
    if (a2 >> 14)
    {
      int v34 = sub_1B0D1DC5C(v33, a2);
    }
    else
    {
      v33->i8[0] = (a2 >> 7) | 0x80;
      v33->i8[1] = a2 & 0x7F;
      int v34 = 2;
    }
    signed int v35 = v29;
  }
  else
  {
    v33->i8[0] = a2;
    int v34 = 1;
    signed int v35 = v29;
    unsigned int v36 = a3;
  }
  int v20 = *(_DWORD *)(v22 + 24) + v34;
  *(void *)(v22 + 40) = a2;
  *(_DWORD *)(v22 + 20) = v20;
  *(_DWORD *)(v22 + 24) = v20;
  int v56 = *v10;
  if (*v10 == 1)
  {
    int v48 = 0;
    if ((v36 & 0x80000000) != 0)
    {
LABEL_75:
      *(unsigned char *)(v22 + 32) = 1;
      goto LABEL_99;
    }
  }
  else
  {
    int v48 = 0;
    *(_DWORD *)(v22 + 24) = ++v20;
    if (v56) {
      __int16 v57 = -1;
    }
    else {
      __int16 v57 = 0;
    }
    *(_WORD *)(v22 + 34) = v57;
    if ((v36 & 0x80000000) != 0) {
      goto LABEL_75;
    }
  }
LABEL_66:
  if (*v10 != 1)
  {
    if (*(__int16 *)(v22 + 34) != v36)
    {
      if (*v10)
      {
        *(_WORD *)(v22 + 34) = v36;
        signed int v35 = v36;
        goto LABEL_93;
      }
      *(_DWORD *)(v22 + 24) = v20 + 1;
      *(unsigned char *)(v22 + v20) = 1;
      uint64_t v58 = (int8x8_t *)(v22 + *(int *)(v22 + 24));
      if (v36 > 0x7F)
      {
        if (v36 >> 14)
        {
          int v59 = sub_1B0D1DC5C(v58, v36);
        }
        else
        {
          v58->i8[0] = (v36 >> 7) | 0x80;
          v58->i8[1] = v36 & 0x7F;
          int v59 = 2;
        }
      }
      else
      {
        v58->i8[0] = v36;
        int v59 = 1;
      }
      int v20 = *(_DWORD *)(v22 + 24) + v59;
      *(_DWORD *)(v22 + 24) = v20;
      *(_WORD *)(v22 + 34) = v36;
      *(_DWORD *)(v22 + 36) = 0;
    }
    if (!v69) {
      goto LABEL_99;
    }
LABEL_93:
    int v62 = (int8x8_t *)(v22 + v20);
    uint64_t v63 = v35 - (uint64_t)*(int *)(v22 + 36);
    unint64_t v64 = v63 + 2;
    if ((v63 + 2) > 0x7F)
    {
      if (v64 >> 14)
      {
        int v65 = sub_1B0D1DC5C(v62, v64);
      }
      else
      {
        v62->i8[0] = (v64 >> 7) | 0x80;
        v62->i8[1] = v64 & 0x7F;
        int v65 = 2;
      }
    }
    else
    {
      v62->i8[0] = v64;
      int v65 = 1;
    }
    int v20 = *(_DWORD *)(v22 + 24) + v65;
    *(_DWORD *)(v22 + 24) = v20;
    *(_DWORD *)(v22 + 36) = v35;
    goto LABEL_99;
  }
  *(unsigned char *)(v22 + 33) = 1;
LABEL_99:
  uint64_t result = 0;
  **((_DWORD **)v10 + 1) += v20 + v48;
  return result;
}

char *sub_1B0DBDF58(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[6];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v5 = a2[7];
  if ((int)v5 >= 1)
  {
    uint64_t v6 = 0;
    int v7 = v2 - 1;
    do
    {
      int v8 = a2[v6 + 9];
      if (v8 >= 1)
      {
        if (v8 == v2)
        {
          int v7 = a2[6];
          if (v2 != 1)
          {
LABEL_23:
            ++*a2;
            return (char *)v3;
          }
LABEL_21:
          if (v7 != 1 || *(_DWORD *)(*(void *)&a2[v6 + 10] + 32)) {
            goto LABEL_23;
          }
          return 0;
        }
        if (v8 == v7 && a2[v6 + 8] == v8)
        {
          if (v2 != 1) {
            goto LABEL_23;
          }
          goto LABEL_21;
        }
      }
      v6 += 4;
    }
    while (4 * v5 != v6);
  }
  if (*(_DWORD *)(a1 + 60)) {
    return 0;
  }
  if (!sqlite3_initialize())
  {
    int v11 = (char *)sub_1B0C7FC94(16 * ((int)v5 + 1) + 48);
    if (v11)
    {
      uint64_t v12 = v11;
      bzero(v11, 16 * ((int)v5 + 1) + 48);
      int v13 = v3[7];
      if (v13 < 63) {
        int v14 = v13 + 1;
      }
      else {
        int v14 = 64;
      }
      *((_DWORD *)v12 + 7) = v14;
      *(_DWORD *)uint64_t v12 = 1;
      *(_OWORD *)(v12 + 8) = *(_OWORD *)(v3 + 2);
      uint64_t v15 = v14 - 1;
      if (!*(_DWORD *)(a1 + 60))
      {
        if (!sqlite3_initialize())
        {
          uint64_t v17 = (void *)sub_1B0C7FC94(56 * v2);
          if (v17)
          {
            signed int v18 = v17;
            bzero(v17, 56 * v2);
            uint64_t v19 = &v12[16 * v15];
            *((void *)v19 + 5) = v18;
            int v20 = v19 + 40;
            uint64_t v21 = v3[7];
            if ((int)v21 >= 1)
            {
              int v22 = 0;
              do
              {
                unint64_t v24 = &v3[4 * (v21 - 1)];
                int v26 = v24[9];
                uint64_t v25 = v24 + 9;
                if (v26 >= 1)
                {
                  uint64_t v27 = 0;
                  uint64_t v28 = 0;
                  do
                  {
                    uint64_t v29 = *v20 + 56 * v22 + v27;
                    uint64_t v30 = (long long *)(*(void *)&v3[4 * (v21 - 1) + 10] + v27);
                    long long v31 = *v30;
                    long long v32 = v30[1];
                    long long v33 = v30[2];
                    *(void *)(v29 + 48) = *((void *)v30 + 6);
                    *(_OWORD *)(v29 + 16) = v32;
                    *(_OWORD *)(v29 + 32) = v33;
                    *(_OWORD *)uint64_t v29 = v31;
                    ++v28;
                    v27 += 56;
                  }
                  while (v28 < *v25);
                  v22 += v28;
                }
              }
              while (v21-- >= 2);
            }
            *(_DWORD *)&v12[16 * v15 + 36] = v2;
            *((_DWORD *)v12 + 6) = v2;
            return v12;
          }
        }
        if (v2 >= 1) {
          *(_DWORD *)(a1 + 60) = 7;
        }
      }
      *(void *)&v12[16 * v15 + 40] = 0;
      uint64_t v16 = (uint64_t (**)(void *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v12);
        --qword_1EB220150;
        off_1EB21C9E8(v12);
        uint64_t v12 = (char *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          return 0;
        }
        uint64_t v16 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
      }
      (*v16)(v12);
      return 0;
    }
  }
  if ((int)v5 < -3) {
    return 0;
  }
  uint64_t v3 = 0;
  *(_DWORD *)(a1 + 60) = 7;
  return (char *)v3;
}

uint64_t sub_1B0DBE230(uint64_t a1, char a2, char *__s2, int a4)
{
  uint64_t v7 = *(void *)(a1 + 24);
  if (a4 >= 0x8000) {
    uint64_t v8 = 0x8000;
  }
  else {
    uint64_t v8 = a4;
  }
  int v9 = *(_DWORD *)(a1 + 12);
  if (a2)
  {
    if (v9) {
      goto LABEL_9;
    }
    int v9 = 1;
  }
  else
  {
    ++v9;
  }
  *(_DWORD *)(a1 + 12) = v9;
LABEL_9:
  int v10 = *(_DWORD *)(*(void *)(a1 + 32) + 92);
  if (v10 == 2)
  {
    uint64_t v12 = 0;
    int v11 = *(_DWORD *)(a1 + 8);
  }
  else if (v10)
  {
    int v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    int v11 = v9 - 1;
    uint64_t v12 = *(int *)(a1 + 8);
  }
  int v31 = 0;
  uint64_t result = sub_1B0DBE73C(v7, 0, __s2, v8, &v31);
  if (!(result | v31))
  {
    uint64_t v14 = 9 * (9 * *(void *)a1 + v12 + v11 + 8 * (9 * *(void *)a1 + v12)) + 48;
    if (a4 >= 1)
    {
      uint64_t v15 = __s2;
      uint64_t v16 = v8;
      do
      {
        uint64_t v17 = *v15++;
        uint64_t v14 = 9 * v14 + v17;
        --v16;
      }
      while (v16);
    }
    *(void *)(a1 + 16) ^= v14;
  }
  if (!result)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v19 = *(void *)(a1 + 32);
      if (i >= *(int *)(v19 + 48)) {
        break;
      }
      int v20 = *(_DWORD *)(*(void *)(v19 + 56) + 4 * i);
      if (v20 >= 1)
      {
        int v21 = 0;
        int v22 = 0;
        while (v22 < (int)v8)
        {
          int v23 = v22 + 1;
          if (__s2[v22] >= 0xC0u)
          {
            if (v23 >= (int)v8) {
              break;
            }
            unint64_t v24 = &__s2[v22 + 1];
            while (1)
            {
              char v25 = *v24++;
              if ((v25 & 0xC0) != 0x80) {
                break;
              }
              if (v8 == ++v23)
              {
                int v22 = v8;
                if (v21 + 1 == v20) {
                  goto LABEL_27;
                }
                goto LABEL_21;
              }
            }
          }
          int v22 = v23;
LABEL_27:
          if (++v21 == v20)
          {
            if (!v22) {
              break;
            }
            uint64_t result = sub_1B0DBE73C(v7, (int)i + 1, __s2, v22, &v31);
            if (!v31)
            {
              uint64_t v26 = 9 * *(void *)a1 + v12 + v11 + 8 * (9 * *(void *)a1 + v12);
              uint64_t v27 = i + v26 + 8 * v26 + 49;
              if (v22 >= 1)
              {
                uint64_t v28 = v22;
                uint64_t v29 = __s2;
                do
                {
                  uint64_t v30 = *v29++;
                  uint64_t v27 = 9 * v27 + v30;
                  --v28;
                }
                while (v28);
              }
              *(void *)(a1 + 16) ^= v27;
            }
            goto LABEL_22;
          }
        }
      }
LABEL_21:
      uint64_t result = 0;
LABEL_22:
      if (result) {
        return result;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B0DBE484(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  for (uint64_t i = 0; i != 512; ++i)
  {
    uint64_t v3 = *(void *)(v1 + 8 * i);
    if (v3)
    {
      do
      {
        uint64_t v4 = *(void *)(v3 + 16);
        uint64_t v5 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108 -= (int)off_1EB21C9F8(v3);
          --qword_1EB220150;
          off_1EB21C9E8(v3);
          uint64_t v3 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_7;
          }
          uint64_t v5 = &xmmword_1EB21CA50;
        }
        (*v5)(v3);
LABEL_7:
        uint64_t v3 = v4;
      }
      while (v4);
    }
  }
  uint64_t v6 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_18:
    uint64_t v7 = *v6;
    return v7(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v6 = &xmmword_1EB21CA50;
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1B0DBE604(uint64_t **a1, uint64_t a2, sqlite3_int64 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (unsigned __int8 *)sqlite3_mprintf("SELECT count(*) FROM %Q.'%q_%s'", (*a1)[1], (*a1)[2], a2);
  if (!v5) {
    return 7;
  }
  uint64_t v7 = v5;
  pStmt = 0;
  uint64_t v8 = sub_1B0C7EAC0(*v4, v5, 0xFFFFFFFFLL, 128, 0, &pStmt, 0, v6);
  if (!v8)
  {
    if (sqlite3_step(pStmt) == 100) {
      *a3 = sqlite3_column_int64(pStmt, 0);
    }
    uint64_t v8 = sqlite3_finalize(pStmt);
  }
  int v9 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_11;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v7);
  --qword_1EB220150;
  off_1EB21C9E8(v7);
  uint64_t v7 = (unsigned __int8 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v9 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_11:
    (*v9)(v7);
  }
  return v8;
}

uint64_t sub_1B0DBE73C(uint64_t result, int a2, char *__s2, int a4, _DWORD *a5)
{
  *a5 = 0;
  if (result)
  {
    uint64_t v9 = result;
    if (a4 < 1)
    {
      int v11 = 13;
    }
    else
    {
      unint64_t v10 = a4 + 1;
      int v11 = 13;
      do
        v11 ^= __s2[(v10-- - 2)] ^ (8 * v11);
      while (v10 > 1);
    }
    uint64_t v12 = (a2 ^ (8 * v11) ^ v11) & 0x1FF;
    uint64_t v13 = *(void *)(result + 8 * v12);
    if (v13)
    {
      while (1)
      {
        if (*(_DWORD *)(v13 + 12) == a2 && *(_DWORD *)(v13 + 8) == a4)
        {
          uint64_t result = memcmp(*(const void **)v13, __s2, a4);
          if (!result) {
            break;
          }
        }
        uint64_t v13 = *(void *)(v13 + 16);
        if (!v13) {
          goto LABEL_8;
        }
      }
      *a5 = 1;
    }
    else
    {
LABEL_8:
      if (sqlite3_initialize() || (uint64_t v14 = (_DWORD *)sub_1B0C7FC94(a4 + 24)) == 0)
      {
        if (a4 <= -24) {
          return 0;
        }
        else {
          return 7;
        }
      }
      else
      {
        uint64_t v15 = v14;
        bzero(v14, a4 + 24);
        *(void *)uint64_t v15 = v15 + 6;
        v15[2] = a4;
        v15[3] = a2;
        memcpy(v15 + 6, __s2, a4);
        uint64_t result = 0;
        *((void *)v15 + 2) = *(void *)(v9 + 8 * v12);
        *(void *)(v9 + 8 * v12) = v15;
      }
    }
  }
  return result;
}

uint64_t sub_1B0DBE87C(unsigned __int8 **a1, int a2, int a3, unint64_t a4)
{
  uint64_t v4 = (uint64_t)*a1;
  int v5 = **a1;
  int v6 = *((_DWORD *)a1 + 2);
  if (v5 == 4) {
    char v7 = 2;
  }
  else {
    char v7 = 3;
  }
  if (v6 <= 16) {
    unint64_t v8 = 1;
  }
  else {
    unint64_t v8 = (v6 - 8) >> v7;
  }
  if (HIDWORD(a4) && v5 == 4) {
    return 2;
  }
  if (a4)
  {
    signed int v10 = bswap32(*(_DWORD *)(v4 + 4));
    if (a2 || v10 < (int)(v8 >> 1))
    {
      unsigned int v11 = a4 / a3 % v8;
      *(_DWORD *)(v4 + 4) = bswap32(v10 + 1);
      uint64_t v12 = (uint64_t)(*a1 + 8);
      if (v5 == 4)
      {
        int v13 = v8 + 1;
        while (*(_DWORD *)(v12 + 4 * v11))
        {
          unsigned int v11 = (v11 + 1) % v8;
          if (!--v13) {
            return 0;
          }
        }
        *(_DWORD *)(v12 + 4 * v11) = bswap32(a4);
        return 0;
      }
      else
      {
        int v14 = v8 + 1;
        while (*(void *)(v12 + 8 * v11))
        {
          unsigned int v11 = (v11 + 1) % v8;
          if (!--v14) {
            return 0;
          }
        }
        *(void *)(v12 + 8 * v11) = bswap64(a4);
        return 0;
      }
    }
    else
    {
      return 1;
    }
  }
  else
  {
    *(unsigned char *)(v4 + 1) = 1;
    return 0;
  }
}

uint64_t sub_1B0DBE998(uint64_t **a1)
{
  uint64_t v2 = **a1;
  if (v2)
  {
    int v3 = *(unsigned __int8 *)(v2 + 113);
    switch(v3)
    {
      case 186:
        goto LABEL_5;
      case 118:
        uint64_t v5 = *(void *)(v2 + 56);
        if (*((_DWORD *)a1 + 4)) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 109:
LABEL_5:
        uint64_t v4 = "unopened";
        break;
      default:
        uint64_t v4 = "invalid";
        break;
    }
  }
  else
  {
    uint64_t v4 = "NULL";
  }
  sqlite3_log(21, "API call with %s database connection pointer", v4);
  sub_1B0CE1978(186263);
  uint64_t v5 = 0;
  if (*((_DWORD *)a1 + 4))
  {
LABEL_11:
    uint64_t v6 = sub_1B0DB8370(a1);
    *((_DWORD *)a1 + 4) = 0;
    if (v6) {
      goto LABEL_19;
    }
  }
LABEL_12:
  char v7 = a1[1];
  sub_1B0DB85C0(v7);
  unint64_t v8 = (void *)v7[8];
  if (v8)
  {
    v7[8] = 0;
    uint64_t v9 = (sqlite3_stmt *)v8[3];
    signed int v10 = (void *)v8[4];
    uint64_t v11 = v10[3];
    if (v11) {
      xmmword_1EB21CA40(v11);
    }
    sub_1B0D05C10(v10, v8);
    uint64_t v12 = v10[3];
    if (v12) {
      xmmword_1EB21CA50(v12);
    }
    sqlite3_finalize(v9);
  }
  uint64_t v6 = *((unsigned int *)v7 + 15);
  *((_DWORD *)v7 + 15) = 0;
LABEL_19:
  uint64_t v13 = **a1;
  if (!v13)
  {
    uint64_t v15 = "NULL";
    goto LABEL_29;
  }
  int v14 = *(unsigned __int8 *)(v13 + 113);
  if (v14 == 186)
  {
LABEL_23:
    uint64_t v15 = "unopened";
LABEL_29:
    sqlite3_log(21, "API call with %s database connection pointer", v15);
    sub_1B0CE1978(186276);
    return v6;
  }
  if (v14 != 118)
  {
    if (v14 != 109)
    {
      uint64_t v15 = "invalid";
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  uint64_t v16 = *(void *)(v13 + 24);
  if (v16)
  {
    xmmword_1EB21CA40(v16);
    uint64_t v17 = *(void *)(v13 + 24);
    *(void *)(v13 + 56) = v5;
    if (v17) {
      xmmword_1EB21CA50(v17);
    }
  }
  else
  {
    *(void *)(v13 + 56) = v5;
  }
  return v6;
}

uint64_t sub_1B0DBEB78(uint64_t a1, int a2, uint64_t *a3)
{
  if (a1 && (uint64_t v6 = *(void *)(a1 + 8)) != 0)
  {
    char v7 = *(void ***)(v6 + 8);
    uint64_t v8 = *a3;
    if (!*a3)
    {
LABEL_4:
      sub_1B0CE1978(89717);
      goto LABEL_5;
    }
  }
  else
  {
    sub_1B0CE1978(97932);
    char v7 = 0;
    uint64_t v8 = *a3;
    if (!*a3) {
      goto LABEL_4;
    }
  }
  __int16 v10 = *(_WORD *)(v8 + 20);
  if ((v10 & 0x24) != 0)
  {
    double v9 = *(double *)v8;
    goto LABEL_18;
  }
  if ((v10 & 8) != 0)
  {
    uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    if (*(double *)v8 <= 9.22337204e18) {
      uint64_t v11 = (uint64_t)*(double *)v8;
    }
    if (*(double *)v8 >= -9.22337204e18) {
      double v9 = *(double *)&v11;
    }
    else {
      double v9 = -0.0;
    }
    goto LABEL_18;
  }
  if ((v10 & 0x12) != 0 && *(void *)(v8 + 8))
  {
    double v9 = COERCE_DOUBLE(sub_1B0D186C0(v8));
    goto LABEL_18;
  }
LABEL_5:
  double v9 = 0.0;
LABEL_18:
  uint64_t v12 = (*v7)[9];
  if (v12)
  {
    while (*(void *)(v12 + 24) != *(void *)&v9)
    {
      uint64_t v12 = *(void *)(v12 + 8);
      if (!v12) {
        goto LABEL_24;
      }
    }
    if (*(_DWORD *)(v12 + 32))
    {
      *(void *)(v12 + 144) = v7;
      uint64_t result = ((uint64_t (*)(void *, uint64_t, uint64_t, void, uint64_t *))v7[3])(&unk_1F09A5D00, v12, a1, (a2 - 1), a3 + 1);
      *(void *)(v12 + 144) = 0;
      return result;
    }
  }
LABEL_24:
  int v14 = sqlite3_mprintf("no such cursor: %lld", *(void *)&v9);
  if (a1)
  {
    *(_DWORD *)(a1 + 36) = 1;
    uint64_t result = sub_1B0C79BBC(*(void *)a1, v14, -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
    if (!v14) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1B0CE1978(97407);
    if (!v14) {
      return result;
    }
  }
  uint64_t v15 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_33;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v14);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v14);
  int v14 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v15 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
LABEL_33:
    uint64_t v16 = *v15;
    return v16(v14);
  }
  return result;
}

void sub_1B0DBEDB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t *a5)
{
  uint64_t v90 = 0;
  if (a4 != 5)
  {
    if (a3)
    {
      *(_DWORD *)(a3 + 36) = 1;
      uint64_t v13 = *(void *)a3;
      sub_1B0C79BBC(v13, "wrong number of arguments to function snippet()", -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
    }
    else
    {
      sub_1B0CE1978(97407);
    }
    return;
  }
  long long v88 = 0u;
  long long v89 = 0u;
  int v9 = (*(uint64_t (**)(uint64_t))(a1 + 16))(a2);
  memset(v91, 0, sizeof(v91));
  long long v92 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  uint64_t v10 = *a5;
  if (!*a5)
  {
    sub_1B0CE1978(89717);
    goto LABEL_10;
  }
  __int16 v11 = *(_WORD *)(v10 + 20);
  if ((v11 & 0x24) != 0)
  {
    double v12 = *(double *)v10;
    goto LABEL_11;
  }
  if ((v11 & 8) == 0)
  {
    if ((v11 & 0x12) != 0 && *(void *)(v10 + 8))
    {
      LODWORD(v12) = sub_1B0D186C0(v10);
      goto LABEL_11;
    }
LABEL_10:
    LODWORD(v12) = 0;
    goto LABEL_11;
  }
  double v66 = *(double *)v10;
  if (*(double *)v10 >= -9.22337204e18)
  {
    if (v66 <= 9.22337204e18) {
      *(void *)&double v12 = (uint64_t)v66;
    }
    else {
      LODWORD(v12) = -1;
    }
  }
  else
  {
    LODWORD(v12) = 0;
  }
LABEL_11:
  uint64_t v14 = a5[1];
  int v76 = v9;
  if (v14)
  {
    int v15 = *(unsigned __int16 *)(v14 + 20);
    if ((~v15 & 0x202) != 0 || *(unsigned char *)(v14 + 22) != 1)
    {
      if (v15) {
        uint64_t v14 = 0;
      }
      else {
        uint64_t v14 = sub_1B0D18254((int *)v14, 1);
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v14 + 8);
    }
  }
  if (v14) {
    uint64_t v16 = (char *)v14;
  }
  else {
    uint64_t v16 = &byte_1B0DE9952;
  }
  *((void *)&v92 + 1) = v16;
  uint64_t v17 = a5[2];
  if (v17)
  {
    int v18 = *(unsigned __int16 *)(v17 + 20);
    if ((~v18 & 0x202) != 0 || *(unsigned char *)(v17 + 22) != 1)
    {
      if (v18) {
        uint64_t v17 = 0;
      }
      else {
        uint64_t v17 = sub_1B0D18254((int *)v17, 1);
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v17 + 8);
    }
  }
  if (v17) {
    uint64_t v19 = (char *)v17;
  }
  else {
    uint64_t v19 = &byte_1B0DE9952;
  }
  *(void *)&long long v93 = v19;
  LODWORD(v92) = -1;
  uint64_t v20 = a5[3];
  if (v20)
  {
    int v21 = *(unsigned __int16 *)(v20 + 20);
    if ((~v21 & 0x202) != 0 || *(unsigned char *)(v20 + 22) != 1)
    {
      if (v21) {
        uint64_t v20 = 0;
      }
      else {
        uint64_t v20 = sub_1B0D18254((int *)v20, 1);
      }
    }
    else
    {
      uint64_t v20 = *(void *)(v20 + 8);
    }
  }
  if (v20) {
    int v22 = (char *)v20;
  }
  else {
    int v22 = &byte_1B0DE9952;
  }
  int __s = v22;
  uint64_t v23 = a5[4];
  if (v23)
  {
    __int16 v24 = *(_WORD *)(v23 + 20);
    if ((v24 & 0x24) != 0)
    {
      double v78 = *(double *)v23;
    }
    else if ((v24 & 8) != 0)
    {
      double v67 = *(double *)v23;
      if (*(double *)v23 >= -9.22337204e18)
      {
        if (v67 <= 9.22337204e18) {
          *(void *)&double v78 = (uint64_t)v67;
        }
        else {
          LODWORD(v78) = -1;
        }
      }
      else
      {
        LODWORD(v78) = 0;
      }
    }
    else if ((v24 & 0x12) != 0 && *(void *)(v23 + 8))
    {
      LODWORD(v78) = sub_1B0D186C0(v23);
    }
    else
    {
      LODWORD(v78) = 0;
    }
  }
  else
  {
    sub_1B0CE1978(89717);
    LODWORD(v78) = 0;
  }
  int v25 = (*(uint64_t (**)(uint64_t))(a1 + 48))(a2);
  int v26 = sqlite3_initialize();
  uint64_t v27 = 0;
  int v28 = 7;
  char v29 = 1;
  if (v25 >= 1 && !v26)
  {
    uint64_t v27 = (unsigned char *)sub_1B0C7FC94(v25);
    if (v27)
    {
      int v28 = (*(uint64_t (**)(uint64_t, char *))(a1 + 64))(a2, (char *)&v90 + 4);
      char v29 = 0;
    }
    else
    {
      char v29 = 1;
    }
  }
  long long v88 = 0u;
  long long v89 = 0u;
  uint64_t v75 = (_DWORD *)a3;
  char v74 = v29;
  unsigned int v80 = LODWORD(v12) & ~(SLODWORD(v12) >> 31);
  if (v9 >= 1)
  {
    int v83 = 0;
    int v79 = 0;
    uint64_t v30 = 0;
    int v77 = LODWORD(v12);
    unint64_t v81 = v27;
    size_t v82 = v25;
    int v31 = LODWORD(v78);
    while ((LODWORD(v12) & 0x80000000) == 0 && v30 != LODWORD(v12))
    {
LABEL_64:
      uint64_t v30 = (v30 + 1);
      if (v30 == v9) {
        goto LABEL_128;
      }
    }
    uint64_t v87 = 0;
    LODWORD(v88) = 0;
    DWORD2(v88) = 0;
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *))(a1 + 88))(a2, v30, (char *)&v89 + 8, (char *)&v87 + 4);
    if (!v32)
    {
      int v32 = (*(uint64_t (**)(uint64_t, void, void, long long *, void))(a1 + 40))(a2, *((void *)&v89 + 1), HIDWORD(v87), &v88, sub_1B0DC035C);
      if (!v32)
      {
        int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(a1 + 96))(a2, v30, &v87);
        if (!v32)
        {
          if (SHIDWORD(v90) < 1)
          {
            int v28 = 0;
            goto LABEL_64;
          }
          uint64_t v33 = 0;
          while (1)
          {
            uint64_t v85 = 0;
            uint64_t v86 = 0;
            int v84 = 0;
            int v35 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t *, char *))(a1 + 72))(a2, v33, (char *)&v86 + 4, &v86, (char *)&v85 + 4);
            int v28 = v35;
            if (v86 == v30)
            {
              if (SHIDWORD(v85) > (int)v87)
              {
                int v28 = 267;
                goto LABEL_64;
              }
              if (v35) {
                goto LABEL_64;
              }
              bzero(v27, v82);
              int v36 = sub_1B0DC04D8(a1, a2, v87, (uint64_t)v27, v30, SHIDWORD(v85), v31, &v84, &v85);
              if (v36)
              {
                int v28 = v36;
                goto LABEL_64;
              }
              if (v84 > v83)
              {
                int v79 = v85;
                unsigned int v80 = v30;
                LODWORD(v90) = v87;
                int v83 = v84;
              }
              int v28 = 0;
              int v37 = DWORD2(v88);
              if (DWORD2(v88) && (int)v87 > v31)
              {
                uint64_t v38 = 0;
                if (SDWORD2(v88) <= 1) {
                  int v37 = 1;
                }
                uint64_t v39 = (v37 - 1);
                while (v39 != v38)
                {
                  uint64_t v40 = v38 + 1;
                  int v41 = *(_DWORD *)(v89 + 4 + 4 * v38++);
                  if (v41 > SHIDWORD(v85))
                  {
                    uint64_t v39 = v40 - 1;
                    break;
                  }
                }
                if (*(_DWORD *)(v89 + 4 * v39) >= SHIDWORD(v85))
                {
                  int v28 = 0;
                }
                else
                {
                  bzero(v27, v82);
                  uint64_t v42 = *(int *)(v89 + 4 * v39);
                  uint64_t v95 = 0;
                  v96[0] = 0;
                  int v43 = (*(uint64_t (**)(uint64_t, uint64_t *))(a1 + 64))(a2, &v95);
                  if ((int)v95 >= 1 && v43 == 0)
                  {
                    int v45 = 0;
                    int v46 = 1;
                    do
                    {
                      int v28 = (*(uint64_t (**)(uint64_t, void, char *, void *, char *))(a1 + 72))(a2, (v46 - 1), (char *)v96 + 4, v96, (char *)&v95 + 4);
                      if (v28) {
                        BOOL v48 = 0;
                      }
                      else {
                        BOOL v48 = LODWORD(v96[0]) == v30;
                      }
                      if (v48 && SHIDWORD(v95) >= (int)v42 && SLODWORD(v78) + v42 > SHIDWORD(v95))
                      {
                        if (v81[SHIDWORD(v96[0])]) {
                          ++v45;
                        }
                        else {
                          v45 += 1000;
                        }
                        v81[SHIDWORD(v96[0])] = 1;
                        (*(void (**)(uint64_t))(a1 + 56))(a2);
                      }
                      if (v28) {
                        BOOL v47 = 0;
                      }
                      else {
                        BOOL v47 = v46 < (int)v95;
                      }
                      ++v46;
                    }
                    while (v47);
                    uint64_t v27 = v81;
                    int v9 = v76;
                  }
                  else
                  {
                    int v28 = v43;
                    int v45 = 0;
                  }
                  int v31 = LODWORD(v78);
                  int v50 = *(_DWORD *)(v89 + 4 * v39);
                  if (v50) {
                    int v51 = 100;
                  }
                  else {
                    int v51 = 120;
                  }
                  if (v28)
                  {
                    LODWORD(v12) = v77;
                  }
                  else
                  {
                    int v52 = v51 + v45;
                    LODWORD(v12) = v77;
                    if (v52 > v83)
                    {
                      int v28 = 0;
                      LODWORD(v90) = v87;
                      int v79 = v50;
                      unsigned int v80 = v30;
                      int v83 = v52;
                    }
                  }
                }
              }
            }
            uint64_t v33 = (v33 + 1);
            if (v28) {
              BOOL v34 = 0;
            }
            else {
              BOOL v34 = (int)v33 < SHIDWORD(v90);
            }
            if (!v34) {
              goto LABEL_64;
            }
          }
        }
      }
    }
    int v28 = v32;
    goto LABEL_129;
  }
  int v79 = 0;
  int v31 = LODWORD(v78);
LABEL_128:
  if (v28)
  {
LABEL_129:
    int v53 = v75;
    char v54 = v74;
    int v55 = v79;
    int v56 = v80;
    if (!*((void *)&v93 + 1)) {
      goto LABEL_166;
    }
    goto LABEL_134;
  }
  int v56 = v80;
  int v57 = (*(uint64_t (**)(uint64_t, void, char *, long long *))(a1 + 88))(a2, v80, (char *)&v93 + 8, &v94);
  int v53 = v75;
  char v54 = v74;
  int v55 = v79;
  if (!(v57 | v90)) {
    int v57 = (*(uint64_t (**)(uint64_t, void, uint64_t *))(a1 + 96))(a2, v80, &v90);
  }
  int v28 = v57;
  if (!*((void *)&v93 + 1)) {
    goto LABEL_166;
  }
LABEL_134:
  if (!v28) {
    int v28 = sub_1B0DC0690(a1, a2, v56, (uint64_t)v91);
  }
  HIDWORD(v91[2]) = v55;
  LODWORD(v92) = v31 + v55 - 1;
  if (v55 >= 1 && !v28)
  {
    size_t v58 = strlen(__s);
    *((void *)&v94 + 1) = sqlite3_mprintf("%z%.*s", *((void *)&v94 + 1), v58, __s);
    if (*((void *)&v94 + 1)) {
      int v28 = 0;
    }
    else {
      int v28 = 7;
    }
  }
LABEL_141:
  if ((HIDWORD(v91[1]) & 0x80000000) == 0 && SHIDWORD(v91[1]) < v55 && !v28)
  {
    *(void *)((char *)&v91[1] + 12) = -1;
    if (SDWORD1(v91[1]) >= SDWORD2(v91[1])) {
      goto LABEL_156;
    }
    while (1)
    {
      v96[0] = 0;
      HIDWORD(v95) = 0;
      int v28 = (*(uint64_t (**)(void))(*(void *)&v91[0] + 72))(*((void *)&v91[0] + 1));
      if (v28) {
        goto LABEL_141;
      }
      if (LODWORD(v96[0]) == LODWORD(v91[1]))
      {
        int v59 = HIDWORD(v95);
        int v60 = v59
            + (*(uint64_t (**)(void, void))(*(void *)&v91[0] + 56))(*((void *)&v91[0] + 1), HIDWORD(v96[0]))- 1;
        if ((HIDWORD(v91[1]) & 0x80000000) != 0)
        {
          HIDWORD(v91[1]) = HIDWORD(v95);
LABEL_147:
          LODWORD(v91[2]) = v60;
          goto LABEL_148;
        }
        if (SHIDWORD(v95) > SLODWORD(v91[2])) {
          goto LABEL_141;
        }
        if (v60 > SLODWORD(v91[2])) {
          goto LABEL_147;
        }
      }
LABEL_148:
      ++DWORD1(v91[1]);
      if (SDWORD1(v91[1]) >= SDWORD2(v91[1])) {
        goto LABEL_141;
      }
    }
  }
  if (!v28) {
LABEL_156:
  }
    int v28 = (*(uint64_t (**)(uint64_t, void, void, _OWORD *, uint64_t (*)(uint64_t, char, uint64_t, uint64_t, int, int)))(a1 + 40))(a2, *((void *)&v93 + 1), v94, v91, sub_1B0DC078C);
  if ((int)v92 < (int)v90 - 1)
  {
    if (v28) {
      goto LABEL_167;
    }
    __int16 v61 = __s;
    size_t v62 = strlen(__s);
LABEL_164:
    *((void *)&v94 + 1) = sqlite3_mprintf("%z%.*s", *((void *)&v94 + 1), v62, v61);
    if (*((void *)&v94 + 1)) {
      goto LABEL_173;
    }
    int v28 = 7;
LABEL_167:
    if (!v53)
    {
      sub_1B0CE1978(97620);
      goto LABEL_194;
    }
    v53[9] = v28;
    if ((*(_WORD *)(*(void *)v53 + 20) & 1) == 0) {
      goto LABEL_194;
    }
    switch(v28)
    {
      case 516:
        uint64_t v63 = "abort due to ROLLBACK";
        break;
      case 101:
        uint64_t v63 = "no more rows available";
        break;
      case 100:
        uint64_t v63 = "another row available";
        break;
      default:
        if v28 > 0x1Cu || ((0x1410004uLL >> v28)) {
          uint64_t v63 = "unknown error";
        }
        else {
          uint64_t v63 = off_1E5FF0368[v28];
        }
        break;
    }
    uint64_t v64 = (uint64_t)v53;
    uint64_t v65 = 0;
    goto LABEL_193;
  }
  if (!v28 && *((void *)&v93 + 1))
  {
    __int16 v61 = (char *)(*((void *)&v93 + 1) + SDWORD1(v94));
    size_t v62 = (v94 - DWORD1(v94));
    if ((int)v94 - DWORD1(v94) < 0) {
      size_t v62 = strlen((const char *)(*((void *)&v93 + 1) + SDWORD1(v94)));
    }
    goto LABEL_164;
  }
LABEL_166:
  if (v28) {
    goto LABEL_167;
  }
LABEL_173:
  if (!v53)
  {
    sub_1B0CE1978(97498);
    goto LABEL_194;
  }
  uint64_t v63 = (char *)*((void *)&v94 + 1);
  uint64_t v64 = (uint64_t)v53;
  uint64_t v65 = -1;
LABEL_193:
  sub_1B0CEA530(v64, v63, -1, 1u, (uint64_t (*)(uint64_t))v65);
LABEL_194:
  uint64_t v68 = *((void *)&v94 + 1);
  if (!*((void *)&v94 + 1)) {
    goto LABEL_201;
  }
  BOOL v69 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_200;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v68);
  --qword_1EB220150;
  off_1EB21C9E8(v68);
  uint64_t v68 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    BOOL v69 = &xmmword_1EB21CA50;
LABEL_200:
    (*v69)(v68);
  }
LABEL_201:
  if ((v54 & 1) == 0)
  {
    int v70 = (void (**)(void *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v27);
      --qword_1EB220150;
      off_1EB21C9E8(v27);
      uint64_t v27 = (unsigned char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_208;
      }
      int v70 = (void (**)(void *))&xmmword_1EB21CA50;
    }
    (*v70)(v27);
  }
LABEL_208:
  uint64_t v71 = v89;
  if (!(void)v89) {
    return;
  }
  unint64_t v72 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_214;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v71);
  --qword_1EB220150;
  off_1EB21C9E8(v71);
  uint64_t v71 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unint64_t v72 = &xmmword_1EB21CA50;
LABEL_214:
    (*v72)(v71);
  }
}

void sub_1B0DBF984(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, uint64_t *a5)
{
  if (a4 == 3)
  {
    uint64_t v9 = *a5;
    if (*a5)
    {
      __int16 v10 = *(_WORD *)(v9 + 20);
      if ((v10 & 0x24) != 0)
      {
        uint64_t v11 = *(void *)v9;
        goto LABEL_11;
      }
      if ((v10 & 8) != 0)
      {
        double v21 = *(double *)v9;
        if (*(double *)v9 >= -9.22337204e18)
        {
          if (v21 <= 9.22337204e18) {
            uint64_t v11 = (uint64_t)v21;
          }
          else {
            uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v11 = 0x8000000000000000;
        }
LABEL_11:
        long long v27 = 0u;
        long long v28 = 0u;
        long long v26 = 0u;
        memset(v25, 0, sizeof(v25));
        uint64_t v13 = a5[1];
        if (v13)
        {
          int v14 = *(unsigned __int16 *)(v13 + 20);
          if ((~v14 & 0x202) != 0 || *(unsigned char *)(v13 + 22) != 1)
          {
            if (v14) {
              uint64_t v13 = 0;
            }
            else {
              uint64_t v13 = sub_1B0D18254((int *)v13, 1);
            }
          }
          else
          {
            uint64_t v13 = *(void *)(v13 + 8);
          }
        }
        *((void *)&v26 + 1) = v13;
        uint64_t v15 = a5[2];
        if (v15)
        {
          int v16 = *(unsigned __int16 *)(v15 + 20);
          if ((~v16 & 0x202) != 0 || *(unsigned char *)(v15 + 22) != 1)
          {
            if (v16) {
              uint64_t v15 = 0;
            }
            else {
              uint64_t v15 = sub_1B0D18254((int *)v15, 1);
            }
          }
          else
          {
            uint64_t v15 = *(void *)(v15 + 8);
          }
        }
        *(void *)&long long v27 = v15;
        LODWORD(v26) = -1;
        int v17 = (*(uint64_t (**)(uint64_t, uint64_t, char *, long long *))(a1 + 88))(a2, v11, (char *)&v27 + 8, &v28);
        int v18 = v17;
        if (!*((void *)&v27 + 1)) {
          goto LABEL_58;
        }
        if (!v17)
        {
          int v18 = sub_1B0DC0690(a1, a2, v11, (uint64_t)v25);
          if (!v18)
          {
            int v19 = (*(uint64_t (**)(uint64_t, void, void, _OWORD *, uint64_t (*)(uint64_t, char, uint64_t, uint64_t, int, int)))(a1 + 40))(a2, *((void *)&v27 + 1), v28, v25, sub_1B0DC078C);
            int v18 = v19;
            if (v19 || !*((void *)&v27 + 1))
            {
              if (v19) {
                goto LABEL_51;
              }
            }
            else
            {
              size_t v20 = (v28 - DWORD1(v28));
              if ((int)v28 - DWORD1(v28) < 0) {
                size_t v20 = strlen((const char *)(*((void *)&v27 + 1) + SDWORD1(v28)));
              }
              *((void *)&v28 + 1) = sqlite3_mprintf("%z%.*s", *((void *)&v28 + 1), v20, *((void *)&v27 + 1) + SDWORD1(v28));
              if (!*((void *)&v28 + 1))
              {
                int v18 = 7;
                goto LABEL_51;
              }
            }
            if (a3) {
              sub_1B0CEA530((uint64_t)a3, *((char **)&v28 + 1), -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
            }
            else {
              sub_1B0CE1978(97498);
            }
            int v18 = 0;
          }
        }
LABEL_51:
        uint64_t v22 = *((void *)&v28 + 1);
        if (*((void *)&v28 + 1))
        {
          uint64_t v23 = &off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108 -= (int)off_1EB21C9F8(v22);
            --qword_1EB220150;
            off_1EB21C9E8(v22);
            uint64_t v22 = xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              goto LABEL_58;
            }
            uint64_t v23 = &xmmword_1EB21CA50;
          }
          (*v23)(v22);
        }
LABEL_58:
        if (v18)
        {
          if (a3)
          {
            a3[9] = v18;
            if (*(_WORD *)(*(void *)a3 + 20))
            {
              switch(v18)
              {
                case 516:
                  __int16 v24 = "abort due to ROLLBACK";
                  break;
                case 101:
                  __int16 v24 = "no more rows available";
                  break;
                case 100:
                  __int16 v24 = "another row available";
                  break;
                default:
                  if v18 > 0x1Cu || ((0x1410004uLL >> v18)) {
                    __int16 v24 = "unknown error";
                  }
                  else {
                    __int16 v24 = off_1E5FF0368[v18];
                  }
                  break;
              }
              sub_1B0CEA530((uint64_t)a3, v24, -1, 1u, 0);
            }
          }
          else
          {
            sub_1B0CE1978(97620);
          }
        }
        return;
      }
      if ((v10 & 0x12) != 0 && *(void *)(v9 + 8))
      {
        uint64_t v11 = sub_1B0D186C0(v9);
        goto LABEL_11;
      }
    }
    else
    {
      sub_1B0CE1978(89717);
    }
    uint64_t v11 = 0;
    goto LABEL_11;
  }
  if (a3)
  {
    a3[9] = 1;
    uint64_t v12 = *(void *)a3;
    sub_1B0C79BBC(v12, "wrong number of arguments to function highlight()", -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
  }
  else
  {
    sub_1B0CE1978(97407);
  }
}

void sub_1B0DBFDB4(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, uint64_t a5)
{
  int v47 = 0;
  __int16 v10 = (int *)(*(uint64_t (**)(uint64_t, void))(a1 + 120))(a2, 0);
  if (v10) {
    goto LABEL_2;
  }
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  int v20 = (*(uint64_t (**)(uint64_t))(a1 + 48))(a2);
  if (sqlite3_initialize() || (long long v26 = (int *)sub_1B0C7FC94(16 * v20 + 32)) == 0)
  {
    int v14 = 7;
    goto LABEL_46;
  }
  __int16 v10 = v26;
  bzero(v26, 16 * v20 + 32);
  *__int16 v10 = v20;
  *((void *)v10 + 2) = v10 + 8;
  *((void *)v10 + 3) = &v10[2 * v20 + 8];
  int v14 = (*(uint64_t (**)(uint64_t, uint64_t *))(a1 + 24))(a2, &v50);
  if (v14 || (int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(a1 + 32))(a2, 0xFFFFFFFFLL, &v49)) != 0)
  {
LABEL_30:
    long long v27 = (void (**)(void))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v10);
      --qword_1EB220150;
      off_1EB21C9E8(v10);
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_46;
      }
      long long v27 = (void (**)(void))&xmmword_1EB21CA50;
    }
    (*v27)();
    goto LABEL_46;
  }
  *((double *)v10 + 1) = (double)v49 / (double)v50;
  if (v20 >= 1)
  {
    uint64_t v44 = 0;
    while (1)
    {
      uint64_t v48 = 0;
      int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t (*)(uint64_t, uint64_t, void *)))(a1 + 104))(a2, v44, &v48, sub_1B0DC0B04);
      if (v45) {
        break;
      }
      double v46 = log(((double)(v50 - v48) + 0.5) / ((double)v48 + 0.5));
      if (v46 <= 0.0) {
        double v46 = 0.000001;
      }
      *(double *)(*((void *)v10 + 2) + 8 * v44++) = v46;
      if (v20 == v44) {
        goto LABEL_69;
      }
    }
    int v14 = v45;
    goto LABEL_30;
  }
LABEL_69:
  int v14 = (*(uint64_t (**)(uint64_t, int *, void (__cdecl *)(void *)))(a1 + 112))(a2, v10, sqlite3_free);
  if (v14) {
    goto LABEL_46;
  }
LABEL_2:
  uint64_t v11 = (float64x2_t *)*((void *)v10 + 3);
  bzero(v11, 8 * *v10);
  int v12 = (*(uint64_t (**)(uint64_t, int *))(a1 + 64))(a2, &v47);
  if (v12) {
    BOOL v13 = 1;
  }
  else {
    BOOL v13 = v47 < 1;
  }
  if (!v13)
  {
    uint64_t v21 = 0;
    while (1)
    {
      LODWORD(v50) = 0;
      LODWORD(v49) = 0;
      LODWORD(v48) = 0;
      int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t *, uint64_t *))(a1 + 72))(a2, v21, &v50, &v49, &v48);
      if (v23)
      {
        int v14 = v23;
        goto LABEL_46;
      }
      double v22 = 1.0;
      if ((int)v49 < a4)
      {
        uint64_t v24 = *(void *)(a5 + 8 * (int)v49);
        if (!v24)
        {
          sub_1B0CE1978(89752);
LABEL_23:
          double v22 = 0.0;
          goto LABEL_15;
        }
        __int16 v25 = *(_WORD *)(v24 + 20);
        if ((v25 & 8) != 0)
        {
          double v22 = *(double *)v24;
        }
        else
        {
          if ((v25 & 0x24) == 0)
          {
            if ((v25 & 0x12) != 0)
            {
              double v22 = sub_1B0D18684(v24);
              goto LABEL_15;
            }
            goto LABEL_23;
          }
          double v22 = (double)*(uint64_t *)v24;
        }
      }
LABEL_15:
      v11->f64[(int)v50] = v22 + v11->f64[(int)v50];
      uint64_t v21 = (v21 + 1);
      if ((int)v21 >= v47) {
        goto LABEL_8;
      }
    }
  }
  int v14 = v12;
  if (!v12)
  {
LABEL_8:
    LODWORD(v50) = 0;
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(a1 + 96))(a2, 0xFFFFFFFFLL, &v50);
    if (!v14)
    {
      uint64_t v15 = *v10;
      if ((int)v15 < 1)
      {
        double v19 = 0.0;
        goto LABEL_41;
      }
      int v16 = (float64x2_t *)*((void *)v10 + 2);
      double v17 = (double)(int)v50 * 0.75 / *((double *)v10 + 1) + 0.25;
      if (v15 >= 4)
      {
        uint64_t v18 = v15 & 0x7FFFFFFC;
        float64x2_t v28 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v17, 0);
        char v29 = v16 + 1;
        uint64_t v30 = v11 + 1;
        double v19 = 0.0;
        float64x2_t v31 = (float64x2_t)vdupq_n_s64(0x400199999999999AuLL);
        float64x2_t v32 = (float64x2_t)vdupq_n_s64(0x3FF3333333333333uLL);
        uint64_t v33 = v15 & 0xFFFFFFFC;
        do
        {
          float64x2_t v34 = vmulq_f64(v29[-1], vdivq_f64(vmulq_f64(v30[-1], v31), vmlaq_f64(v30[-1], v32, v28)));
          float64x2_t v35 = vmulq_f64(*v29, vdivq_f64(vmulq_f64(*v30, v31), vmlaq_f64(*v30, v32, v28)));
          double v19 = v19 + v34.f64[0] + v34.f64[1] + v35.f64[0] + v35.f64[1];
          v29 += 2;
          v30 += 2;
          v33 -= 4;
        }
        while (v33);
        if (v18 == v15)
        {
LABEL_41:
          if (a3)
          {
            uint64_t v42 = *(void *)a3;
            if ((*(_WORD *)(v42 + 20) & 0x9000) != 0) {
              sub_1B0D18138((int *)v42);
            }
            else {
              *(_WORD *)(v42 + 20) = 1;
            }
            *(double *)uint64_t v42 = -v19;
            *(_WORD *)(v42 + 20) = 8;
          }
          else
          {
            sub_1B0CE1978(97397);
          }
          return;
        }
      }
      else
      {
        uint64_t v18 = 0;
        double v19 = 0.0;
      }
      int v36 = &v11->f64[v18];
      int v37 = &v16->f64[v18];
      uint64_t v38 = v15 - v18;
      do
      {
        double v39 = *v37++;
        double v40 = v39;
        double v41 = *v36++;
        double v19 = v19 + v40 * (v41 * 2.2 / (v41 + v17 * 1.2));
        --v38;
      }
      while (v38);
      goto LABEL_41;
    }
  }
LABEL_46:
  if (a3)
  {
    a3[9] = v14;
    if (*(_WORD *)(*(void *)a3 + 20))
    {
      switch(v14)
      {
        case 516:
          int v43 = "abort due to ROLLBACK";
          break;
        case 101:
          int v43 = "no more rows available";
          break;
        case 100:
          int v43 = "another row available";
          break;
        default:
          if v14 > 0x1Cu || ((0x1410004uLL >> v14)) {
            int v43 = "unknown error";
          }
          else {
            int v43 = off_1E5FF0368[v14];
          }
          break;
      }
      sub_1B0CEA530((uint64_t)a3, v43, -1, 1u, 0);
    }
  }
  else
  {
    sub_1B0CE1978(97620);
  }
}

uint64_t sub_1B0DC035C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  if (a2) {
    return 0;
  }
  int v6 = *(_DWORD *)a1;
  if (*(int *)a1 < 1)
  {
    int v12 = (_DWORD *)(a1 + 8);
    int v11 = *(_DWORD *)(a1 + 8);
    int v19 = *(_DWORD *)(a1 + 4);
    if (v19 == v11)
    {
      if (v19) {
        int v14 = 2 * v19;
      }
      else {
        int v14 = 64;
      }
      uint64_t v20 = *(void *)(a1 + 16);
      if (sqlite3_initialize()) {
        goto LABEL_29;
      }
      uint64_t v16 = sub_1B0C8E1B8(v20, 4 * v14);
      if (!v16) {
        goto LABEL_29;
      }
      int v6 = 0;
LABEL_36:
      *(void *)(a1 + 16) = v16;
      *(_DWORD *)(a1 + 4) = v14;
      int v11 = *(_DWORD *)(a1 + 8);
      goto LABEL_32;
    }
    int v6 = 0;
LABEL_31:
    uint64_t v16 = *(void *)(a1 + 16);
LABEL_32:
    uint64_t v18 = 0;
    *int v12 = v11 + 1;
    *(_DWORD *)(v16 + 4 * v11) = v6;
    goto LABEL_33;
  }
  if (a5 >= 1)
  {
    uint64_t v7 = (a5 - 1);
    while (1)
    {
      unsigned int v8 = *(unsigned __int8 *)(*(void *)(a1 + 24) + v7);
      if (v8 > 0x20 || ((1 << v8) & 0x100002600) == 0) {
        break;
      }
      if (v7-- <= 0)
      {
        LODWORD(v7) = -1;
        break;
      }
    }
    if (v7 != a5 - 1 && (v8 == 58 || v8 == 46))
    {
      int v12 = (_DWORD *)(a1 + 8);
      int v11 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 4);
      if (v13 == v11)
      {
        if (v13) {
          int v14 = 2 * v13;
        }
        else {
          int v14 = 64;
        }
        uint64_t v15 = *(void *)(a1 + 16);
        if (sqlite3_initialize() || (uint64_t v16 = sub_1B0C8E1B8(v15, 4 * v14)) == 0)
        {
LABEL_29:
          uint64_t v18 = 7;
          goto LABEL_33;
        }
        goto LABEL_36;
      }
      goto LABEL_31;
    }
  }
  uint64_t v18 = 0;
LABEL_33:
  ++*(_DWORD *)a1;
  return v18;
}

uint64_t sub_1B0DC04D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7, _DWORD *a8, _DWORD *a9)
{
  int v9 = a7;
  uint64_t v15 = a9;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v16 = a7;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t *))(a1 + 64))(a2, &v38);
  BOOL v18 = (int)v38 >= 1 && v17 == 0;
  uint64_t v34 = v16;
  if (v18)
  {
    int v32 = a3;
    int v33 = v9;
    int v36 = 0;
    int v21 = 0;
    int v23 = -1;
    int v24 = 1;
    uint64_t v25 = v16 + a6;
    do
    {
      uint64_t v19 = (*(uint64_t (**)(uint64_t, void, char *, uint64_t *, char *))(a1 + 72))(a2, (v24 - 1), (char *)&v39 + 4, &v39, (char *)&v38 + 4);
      if (v19) {
        BOOL v27 = 0;
      }
      else {
        BOOL v27 = v39 == a5;
      }
      if (v27)
      {
        int v28 = HIDWORD(v38);
        BOOL v29 = SHIDWORD(v38) < a6 || v25 <= SHIDWORD(v38);
        if (!v29)
        {
          if (*(unsigned char *)(a4 + SHIDWORD(v39))) {
            ++v21;
          }
          else {
            v21 += 1000;
          }
          *(unsigned char *)(a4 + SHIDWORD(v39)) = 1;
          if (v23 < 0) {
            int v23 = v28;
          }
          int v36 = (*(uint64_t (**)(uint64_t))(a1 + 56))(a2) + v28;
        }
      }
      BOOL v29 = v24++ < (int)v38;
    }
    while (v29 && v19 == 0);
    int v9 = v33;
    uint64_t v15 = a9;
    int v20 = v32;
    int v22 = v36;
  }
  else
  {
    uint64_t v19 = v17;
    int v20 = a3;
    int v21 = 0;
    int v22 = 0;
    int v23 = -1;
  }
  *a8 = v21;
  if (v15)
  {
    uint64_t v30 = v23 - (v23 + v9 - v22) / 2;
    if (v30 + v34 > v20) {
      uint64_t v30 = v20 - v9;
    }
    *uint64_t v15 = v30 & ~(v30 >> 63);
  }
  return v19;
}

uint64_t sub_1B0DC0690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(void *)(a4 + 32) = 0;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 64))(a2, a4 + 24);
  if (!result)
  {
    *(void *)(a4 + 28) = -1;
    if (*(_DWORD *)(a4 + 20) >= *(_DWORD *)(a4 + 24)) {
      return 0;
    }
    while (1)
    {
      uint64_t result = (*(uint64_t (**)(void))(*(void *)a4 + 72))(*(void *)(a4 + 8));
      if (result) {
        return result;
      }
      if (!*(_DWORD *)(a4 + 16))
      {
        int v8 = (*(uint64_t (**)(void, void))(*(void *)a4 + 56))(*(void *)(a4 + 8), 0) - 1;
        if ((*(_DWORD *)(a4 + 28) & 0x80000000) != 0)
        {
          *(_DWORD *)(a4 + 28) = 0;
LABEL_6:
          *(_DWORD *)(a4 + 32) = v8;
          goto LABEL_7;
        }
        int v9 = *(_DWORD *)(a4 + 32);
        if (v9 < 0) {
          return 0;
        }
        if (v8 > v9) {
          goto LABEL_6;
        }
      }
LABEL_7:
      int v6 = *(_DWORD *)(a4 + 24);
      int v7 = *(_DWORD *)(a4 + 20) + 1;
      *(_DWORD *)(a4 + 20) = v7;
      if (v7 >= v6) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B0DC078C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  if (a2) {
    return 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = v9 + 1;
  int v10 = *(_DWORD *)(a1 + 48);
  if (v10 < 0) {
    goto LABEL_13;
  }
  int v11 = *(_DWORD *)(a1 + 44);
  if (v9 > v10 || v9 < v11) {
    return 0;
  }
  if (v11 && v9 == v11) {
    *(_DWORD *)(a1 + 84) = a5;
  }
LABEL_13:
  if (v9 == *(_DWORD *)(a1 + 28))
  {
    uint64_t v15 = *(void *)(a1 + 72);
    if (!v15) {
      goto LABEL_18;
    }
    uint64_t v16 = *(int *)(a1 + 84);
    uint64_t v17 = v15 + v16;
    size_t v18 = (a5 - v16);
    if (a5 - (int)v16 < 0) {
      size_t v18 = strlen((const char *)(v15 + v16));
    }
    uint64_t v19 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v18, v17);
    *(void *)(a1 + 88) = v19;
    if (!v19)
    {
      uint64_t v13 = 7;
    }
    else
    {
LABEL_18:
      uint64_t v13 = *(void *)(a1 + 56);
      if (v13)
      {
        size_t v20 = strlen(*(const char **)(a1 + 56));
        int v21 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v20, v13);
        *(void *)(a1 + 88) = v21;
        if (v21) {
          uint64_t v13 = 0;
        }
        else {
          uint64_t v13 = 7;
        }
      }
    }
    *(_DWORD *)(a1 + 84) = a5;
  }
  else
  {
    uint64_t v13 = 0;
  }
  if (v9 != *(_DWORD *)(a1 + 32)) {
    goto LABEL_56;
  }
  if ((*(_DWORD *)(a1 + 48) & 0x80000000) != 0) {
    goto LABEL_32;
  }
  if (*(_DWORD *)(a1 + 28) >= *(_DWORD *)(a1 + 44)) {
    goto LABEL_32;
  }
  if (v13) {
    goto LABEL_32;
  }
  uint64_t v22 = *(void *)(a1 + 56);
  if (!v22) {
    goto LABEL_32;
  }
  size_t v23 = strlen(*(const char **)(a1 + 56));
  int v24 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v23, v22);
  *(void *)(a1 + 88) = v24;
  if (v24)
  {
    uint64_t v13 = 0;
LABEL_32:
    long long v26 = (_DWORD *)(a1 + 84);
    uint64_t v25 = *(int *)(a1 + 84);
    if (v13) {
      goto LABEL_74;
    }
    uint64_t v27 = *(void *)(a1 + 72);
    if (!v27) {
      goto LABEL_74;
    }
    uint64_t v28 = v27 + v25;
    size_t v29 = (a6 - v25);
    if (a6 - (int)v25 < 0) {
      size_t v29 = strlen((const char *)(v27 + v25));
    }
    uint64_t v30 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v29, v28);
    *(void *)(a1 + 88) = v30;
    if (v30)
    {
LABEL_74:
      if (v13 || (uint64_t v31 = *(void *)(a1 + 64)) == 0)
      {
        *long long v26 = a6;
        if (v13) {
          goto LABEL_56;
        }
LABEL_42:
        *(void *)(a1 + 28) = -1;
        if (*(_DWORD *)(a1 + 20) >= *(_DWORD *)(a1 + 24))
        {
LABEL_43:
          uint64_t v13 = 0;
          goto LABEL_56;
        }
        while (1)
        {
          uint64_t v36 = (*(uint64_t (**)(void))(*(void *)a1 + 72))(*(void *)(a1 + 8));
          if (v36)
          {
            uint64_t v13 = v36;
            goto LABEL_56;
          }
          if (!*(_DWORD *)(a1 + 16))
          {
            int v37 = (*(uint64_t (**)(void, void))(*(void *)a1 + 56))(*(void *)(a1 + 8), 0) - 1;
            if ((*(_DWORD *)(a1 + 28) & 0x80000000) != 0)
            {
              *(_DWORD *)(a1 + 28) = 0;
LABEL_45:
              *(_DWORD *)(a1 + 32) = v37;
              goto LABEL_46;
            }
            int v38 = *(_DWORD *)(a1 + 32);
            if (v38 < 0) {
              goto LABEL_43;
            }
            if (v37 > v38) {
              goto LABEL_45;
            }
          }
LABEL_46:
          int v34 = *(_DWORD *)(a1 + 24);
          int v35 = *(_DWORD *)(a1 + 20) + 1;
          *(_DWORD *)(a1 + 20) = v35;
          if (v35 >= v34) {
            goto LABEL_43;
          }
        }
      }
      size_t v32 = strlen(*(const char **)(a1 + 64));
      int v33 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v32, v31);
      *(void *)(a1 + 88) = v33;
      if (v33)
      {
        *long long v26 = a6;
        goto LABEL_42;
      }
    }
    goto LABEL_55;
  }
  long long v26 = (_DWORD *)(a1 + 84);
LABEL_55:
  *long long v26 = a6;
  uint64_t v13 = 7;
LABEL_56:
  int v39 = *(_DWORD *)(a1 + 48);
  if ((v39 & 0x80000000) == 0 && v9 == v39)
  {
    if (!v13)
    {
      uint64_t v40 = *(void *)(a1 + 72);
      if (v40)
      {
        uint64_t v41 = *(int *)(a1 + 84);
        uint64_t v42 = v40 + v41;
        size_t v43 = (a6 - v41);
        if (a6 - (int)v41 < 0) {
          size_t v43 = strlen((const char *)(v40 + v41));
        }
        uint64_t v44 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v43, v42);
        *(void *)(a1 + 88) = v44;
        if (v44) {
          uint64_t v13 = 0;
        }
        else {
          uint64_t v13 = 7;
        }
      }
    }
    *(_DWORD *)(a1 + 84) = a6;
    if (v9 >= *(_DWORD *)(a1 + 28) && v9 < *(_DWORD *)(a1 + 32) && !v13)
    {
      uint64_t v45 = *(void *)(a1 + 64);
      if (v45)
      {
        size_t v46 = strlen(*(const char **)(a1 + 64));
        int v47 = sqlite3_mprintf("%z%.*s", *(void *)(a1 + 88), v46, v45);
        *(void *)(a1 + 88) = v47;
        if (v47) {
          return 0;
        }
        else {
          return 7;
        }
      }
    }
  }
  return v13;
}

uint64_t sub_1B0DC0B04(uint64_t a1, uint64_t a2, void *a3)
{
  return 0;
}

uint64_t sub_1B0DC0B18(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  if (a3) {
    return 1;
  }
  if (sqlite3_initialize())
  {
    uint64_t v7 = 0;
LABEL_4:
    uint64_t v8 = 7;
    goto LABEL_5;
  }
  uint64_t v10 = sub_1B0C7FC94(192);
  uint64_t v7 = v10;
  if (!v10) {
    goto LABEL_4;
  }
  *(_OWORD *)(v10 + 160) = 0u;
  *(_OWORD *)(v10 + 176) = 0u;
  *(_OWORD *)(v10 + 128) = 0u;
  *(_OWORD *)(v10 + 144) = 0u;
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 112) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(void *)(v10 + 136) = 0x100000040;
  if (sqlite3_initialize())
  {
    *(void *)(v7 + 128) = 0;
    goto LABEL_4;
  }
  uint64_t v11 = sub_1B0C7FC94(64);
  *(void *)(v7 + 128) = v11;
  int v12 = "L* N* Co";
  if (!v11 || a3 < 1) {
    goto LABEL_23;
  }
  uint64_t v13 = 0;
  while (2)
  {
    int v14 = *(unsigned char **)(a2 + 8 * v13);
    if (!v14) {
      goto LABEL_15;
    }
    for (uint64_t i = "categories"; ; ++i)
    {
      uint64_t v16 = *v14;
      uint64_t v17 = *(unsigned __int8 *)i;
      if (v16 == v17) {
        break;
      }
      if (byte_1B0DE1758[v16] != byte_1B0DE1758[v17]) {
        goto LABEL_15;
      }
LABEL_19:
      ++v14;
    }
    if (*v14) {
      goto LABEL_19;
    }
    int v12 = *(const char **)(a2 + ((8 * v13) | 8));
LABEL_15:
    v13 += 2;
    if ((int)v13 < a3) {
      continue;
    }
    break;
  }
LABEL_23:
  if (!v11) {
    goto LABEL_4;
  }
  int v18 = *(unsigned __int8 *)v12;
  if (*v12)
  {
    uint64_t v19 = (_DWORD *)(v7 + 176);
    size_t v20 = (unsigned char *)(v7 + 165);
    while (1)
    {
LABEL_27:
      if (!v18) {
        goto LABEL_93;
      }
      if (v18 != 32 && v18 != 9) {
        break;
      }
      int v21 = *(unsigned __int8 *)++v12;
      int v18 = v21;
    }
    *(unsigned char *)(v7 + 160) = 1;
    switch(*v12)
    {
      case 'C':
        uint64_t v8 = 1;
        switch(v12[1])
        {
          case 'c':
            *(unsigned char *)(v7 + 161) = 1;
            goto LABEL_93;
          case 'd':
          case 'e':
          case 'g':
          case 'h':
          case 'i':
          case 'j':
          case 'k':
          case 'l':
          case 'm':
          case 'p':
          case 'q':
          case 'r':
            goto LABEL_5;
          case 'f':
            *(unsigned char *)(v7 + 162) = 1;
            goto LABEL_93;
          case 'n':
            *(unsigned char *)(v7 + 163) = 1;
            goto LABEL_93;
          case 'o':
            *(unsigned char *)(v7 + 191) = 1;
            goto LABEL_93;
          case 's':
            *(unsigned char *)(v7 + 164) = 1;
            goto LABEL_93;
          default:
            if (v12[1] != 42) {
              goto LABEL_5;
            }
            *(unsigned char *)(v7 + 191) = 1;
            *(_DWORD *)(v7 + 161) = 16843009;
            break;
        }
        goto LABEL_93;
      case 'L':
        uint64_t v8 = 1;
        switch(v12[1])
        {
          case 'C':
            *(unsigned char *)(v7 + 190) = 1;
            goto LABEL_93;
          case 'D':
          case 'E':
          case 'F':
          case 'G':
          case 'H':
          case 'I':
          case 'J':
          case 'K':
          case 'L':
          case 'M':
          case 'N':
          case 'O':
          case 'P':
          case 'Q':
          case 'R':
          case 'S':
          case 'T':
          case 'U':
          case 'V':
          case 'W':
          case 'X':
          case 'Y':
          case 'Z':
          case '[':
          case '\\':
          case ']':
          case '^':
          case '_':
          case 'a':
          case 'b':
          case 'c':
          case 'd':
          case 'e':
          case 'f':
          case 'g':
          case 'h':
          case 'i':
          case 'j':
          case 'k':
          case 'n':
          case 'p':
          case 'q':
          case 'r':
          case 's':
            goto LABEL_5;
          case 'l':
            unsigned char *v20 = 1;
            goto LABEL_93;
          case 'm':
            *(unsigned char *)(v7 + 166) = 1;
            goto LABEL_93;
          case 'o':
            *(unsigned char *)(v7 + 167) = 1;
            goto LABEL_93;
          case 't':
            *(unsigned char *)(v7 + 168) = 1;
            goto LABEL_93;
          case 'u':
            *(unsigned char *)(v7 + 169) = 1;
            goto LABEL_93;
          default:
            if (v12[1] != 42) {
              goto LABEL_5;
            }
            *(unsigned char *)(v7 + 190) = 1;
            *(_DWORD *)size_t v20 = 16843009;
            *(unsigned char *)(v7 + 169) = 1;
            break;
        }
        goto LABEL_93;
      case 'M':
        int v22 = v12[1];
        uint64_t v8 = 1;
        if (v22 > 100)
        {
          if (v22 == 101)
          {
            *(unsigned char *)(v7 + 171) = 1;
            goto LABEL_93;
          }
          if (v22 == 110)
          {
            *(unsigned char *)(v7 + 172) = 1;
            goto LABEL_93;
          }
        }
        else
        {
          if (v22 == 42)
          {
            *(_WORD *)(v7 + 170) = 257;
            *(unsigned char *)(v7 + 172) = 1;
            goto LABEL_93;
          }
          if (v22 == 99)
          {
            *(unsigned char *)(v7 + 170) = 1;
            goto LABEL_93;
          }
        }
        goto LABEL_5;
      case 'N':
        int v23 = v12[1];
        uint64_t v8 = 1;
        if (v23 > 107)
        {
          if (v23 == 108)
          {
            *(unsigned char *)(v7 + 174) = 1;
            goto LABEL_93;
          }
          if (v23 == 111)
          {
            *(unsigned char *)(v7 + 175) = 1;
            goto LABEL_93;
          }
        }
        else
        {
          if (v23 == 42)
          {
            *(_WORD *)(v7 + 173) = 257;
            *(unsigned char *)(v7 + 175) = 1;
            goto LABEL_93;
          }
          if (v23 == 100)
          {
            *(unsigned char *)(v7 + 173) = 1;
            goto LABEL_93;
          }
        }
        goto LABEL_5;
      case 'P':
        uint64_t v8 = 1;
        switch(v12[1])
        {
          case '*':
            *(_DWORD *)(v7 + 179) = 16843009;
            *uint64_t v19 = 16843009;
            goto LABEL_93;
          case 'c':
            *(unsigned char *)uint64_t v19 = 1;
            goto LABEL_93;
          case 'd':
            *(unsigned char *)(v7 + 177) = 1;
            goto LABEL_93;
          case 'e':
            *(unsigned char *)(v7 + 178) = 1;
            goto LABEL_93;
          case 'f':
            *(unsigned char *)(v7 + 179) = 1;
            goto LABEL_93;
          case 'i':
            *(unsigned char *)(v7 + 180) = 1;
            goto LABEL_93;
          case 'o':
            *(unsigned char *)(v7 + 181) = 1;
            goto LABEL_93;
          case 's':
            *(unsigned char *)(v7 + 182) = 1;
            goto LABEL_93;
          default:
            goto LABEL_5;
        }
      case 'S':
        uint64_t v8 = 1;
        switch(v12[1])
        {
          case 'c':
            *(unsigned char *)(v7 + 183) = 1;
            goto LABEL_93;
          case 'd':
          case 'e':
          case 'f':
          case 'g':
          case 'h':
          case 'i':
          case 'j':
          case 'l':
          case 'n':
            goto LABEL_5;
          case 'k':
            *(unsigned char *)(v7 + 184) = 1;
            goto LABEL_93;
          case 'm':
            *(unsigned char *)(v7 + 185) = 1;
            goto LABEL_93;
          case 'o':
            *(unsigned char *)(v7 + 186) = 1;
            goto LABEL_93;
          default:
            if (v12[1] != 42) {
              goto LABEL_5;
            }
            *(_DWORD *)(v7 + 183) = 16843009;
            break;
        }
        goto LABEL_93;
      case 'Z':
        int v24 = v12[1];
        uint64_t v8 = 1;
        if (v24 <= 111)
        {
          if (v24 != 42)
          {
            if (v24 == 108)
            {
              *(unsigned char *)(v7 + 187) = 1;
              goto LABEL_93;
            }
LABEL_5:
            sub_1B0DC1474(v7);
            uint64_t v7 = 0;
            goto LABEL_6;
          }
          *(_WORD *)(v7 + 187) = 257;
LABEL_63:
          *(unsigned char *)(v7 + 189) = 1;
          goto LABEL_93;
        }
        if (v24 != 112)
        {
          if (v24 != 115) {
            goto LABEL_5;
          }
          goto LABEL_63;
        }
        *(unsigned char *)(v7 + 188) = 1;
LABEL_93:
        while (1)
        {
          int v18 = *(unsigned __int8 *)v12;
          if (!*v12) {
            break;
          }
          if (v18 == 9 || v18 == 32) {
            goto LABEL_27;
          }
          ++v12;
        }
        break;
      default:
        goto LABEL_93;
    }
  }
  int v25 = 0;
  long long v26 = word_1B0DE6B02;
  do
  {
    unsigned int v28 = (unsigned __int16)*v26++;
    char v27 = v28;
    int v29 = v25 + (v28 >> 5);
    if (v29 >= 128) {
      int v30 = 128;
    }
    else {
      int v30 = v29;
    }
    if (v25 < v30)
    {
      memset((void *)(v7 + v25), *(unsigned __int8 *)(v7 + 160 + (v27 & 0x1F)), (v30 + ~v25) + 1);
      int v25 = v30;
    }
  }
  while (v25 < 128);
  *(unsigned char *)uint64_t v7 = 0;
  if (a3 < 1)
  {
    uint64_t v8 = 0;
    goto LABEL_6;
  }
  uint64_t v31 = 0;
  while (2)
  {
    size_t v32 = *(unsigned char **)(a2 + 8 * v31);
    if (!v32) {
      goto LABEL_138;
    }
    int v33 = *(char **)(a2 + ((8 * v31) | 8));
    int v34 = *(unsigned char **)(a2 + 8 * v31);
    int v35 = "remove_diacritics";
    while (2)
    {
      uint64_t v36 = *v34;
      uint64_t v37 = *(unsigned __int8 *)v35;
      if (v36 == v37)
      {
        if (!*v34)
        {
          unsigned int v49 = *v33 - 48;
          if (v49 <= 2 && !v33[1])
          {
            uint64_t v8 = 0;
            *(_DWORD *)(v7 + 140) = v49;
            goto LABEL_134;
          }
LABEL_138:
          uint64_t v8 = 1;
          goto LABEL_5;
        }
        goto LABEL_109;
      }
      if (byte_1B0DE1758[v36] == byte_1B0DE1758[v37])
      {
LABEL_109:
        ++v34;
        ++v35;
        continue;
      }
      break;
    }
    int v38 = *(unsigned char **)(a2 + 8 * v31);
    for (unint64_t j = "tokenchars"; ; ++j)
    {
      uint64_t v40 = *v38;
      uint64_t v41 = *(unsigned __int8 *)j;
      if (v40 != v41) {
        break;
      }
      if (!*v38)
      {
        uint64_t v50 = v7;
        int v51 = 1;
        goto LABEL_133;
      }
LABEL_114:
      ++v38;
    }
    if (byte_1B0DE1758[v40] == byte_1B0DE1758[v41]) {
      goto LABEL_114;
    }
    uint64_t v42 = *(unsigned char **)(a2 + 8 * v31);
    for (uint64_t k = "separators"; ; ++k)
    {
      uint64_t v44 = *v42;
      uint64_t v45 = *(unsigned __int8 *)k;
      if (v44 == v45)
      {
        if (*v42) {
          goto LABEL_119;
        }
        uint64_t v50 = v7;
        int v51 = 0;
LABEL_133:
        uint64_t v8 = sub_1B0DC2C88(v50, v33, v51);
        goto LABEL_134;
      }
      if (byte_1B0DE1758[v44] != byte_1B0DE1758[v45]) {
        break;
      }
LABEL_119:
      ++v42;
    }
    for (uint64_t m = "categories"; ; ++m)
    {
      uint64_t v47 = *v32;
      uint64_t v48 = *(unsigned __int8 *)m;
      if (v47 == v48) {
        break;
      }
      if (byte_1B0DE1758[v47] != byte_1B0DE1758[v48]) {
        goto LABEL_138;
      }
LABEL_124:
      ++v32;
    }
    if (*v32) {
      goto LABEL_124;
    }
    uint64_t v8 = 0;
LABEL_134:
    if (!v8)
    {
      v31 += 2;
      if ((int)v31 < a3) {
        continue;
      }
    }
    break;
  }
  if (v8) {
    goto LABEL_5;
  }
LABEL_6:
  *a4 = v7;
  return v8;
}

uint64_t sub_1B0DC1474(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 152);
  if (v2)
  {
    int v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_8:
      (*v3)(v2);
      goto LABEL_9;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v3 = &xmmword_1EB21CA50;
      goto LABEL_8;
    }
  }
LABEL_9:
  uint64_t v4 = *(void *)(v1 + 128);
  if (!v4) {
    goto LABEL_16;
  }
  uint64_t v5 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_15;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v4);
  --qword_1EB220150;
  off_1EB21C9E8(v4);
  uint64_t v4 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v5 = &xmmword_1EB21CA50;
LABEL_15:
    (*v5)(v4);
  }
LABEL_16:
  int v6 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_21:
    uint64_t v7 = *v6;
    return v7(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v6 = &xmmword_1EB21CA50;
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1B0DC1628(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, int a5, uint64_t (*a6)(uint64_t, void, char *, void, uint64_t, void))
{
  int v6 = (int)a4;
  uint64_t v8 = &a4[a5];
  int v9 = *(char **)(a1 + 128);
  uint64_t v10 = word_1B0DE89DE;
  int v54 = *(_DWORD *)(a1 + 136);
  unint64_t v55 = (unint64_t)&v9[v54 - 6];
  uint64_t v11 = a4;
  do
  {
    if (v11 >= v8) {
      return 0;
    }
    while (1)
    {
      unsigned int v15 = *v11;
      if (((char)*v11 & 0x80000000) == 0)
      {
        if (*(unsigned char *)(a1 + *v11))
        {
          uint64_t v18 = (v11 - v6);
          uint64_t v19 = v9;
LABEL_50:
          if (v15 - 65 >= 0x1A) {
            char v26 = v15;
          }
          else {
            char v26 = v15 + 32;
          }
          *v19++ = v26;
          int v12 = v11 + 1;
          goto LABEL_54;
        }
        int v12 = v11 + 1;
        goto LABEL_15;
      }
      int v12 = v11 + 1;
      if (v15 >= 0xC0)
      {
        unsigned int v16 = byte_1B0DE211A[v15 - 192];
        if (v12 == v8)
        {
LABEL_4:
          int v12 = v8;
        }
        else
        {
          while (1)
          {
            char v17 = *v12;
            if ((*v12 & 0xC0) != 0x80) {
              break;
            }
            ++v12;
            unsigned int v16 = v17 & 0x3F | (v16 << 6);
            if (v12 == v8) {
              goto LABEL_4;
            }
          }
        }
        if (v16 >> 11 == 27 || v16 < 0x80 || v16 >> 1 == 0x7FFF) {
          unsigned int v15 = 65533;
        }
        else {
          unsigned int v15 = v16;
        }
      }
      if (sub_1B0DC2F40(a1, v15)) {
        break;
      }
LABEL_15:
      uint64_t v11 = v12;
      if (v12 >= v8) {
        return 0;
      }
    }
    uint64_t v18 = (v11 - v6);
    uint64_t v19 = v9;
    if ((int)v15 <= 127) {
      goto LABEL_26;
    }
LABEL_75:
    if (HIWORD(v15))
    {
      if (v15 - 66560 < 0x28) {
        v15 += 40;
      }
      goto LABEL_104;
    }
    while (1)
    {
      int v33 = 0;
      int v34 = *(_DWORD *)(a1 + 140);
      int v35 = 162;
      int v36 = -1;
      do
      {
        int v37 = v35 + v33;
        if (v35 + v33 < 0 != __OFADD__(v35, v33)) {
          ++v37;
        }
        int v38 = v37 >> 1;
        signed int v39 = *((unsigned __int16 *)&unk_1B0DE86B8 + 2 * v38);
        if ((int)v15 >= v39) {
          int v33 = v38 + 1;
        }
        else {
          int v35 = v38 - 1;
        }
        if ((int)v15 >= v39) {
          int v36 = v38;
        }
      }
      while (v35 >= v33);
      uint64_t v40 = (unsigned __int16 *)((char *)&unk_1B0DE86B8 + 4 * v36);
      int v41 = *v40;
      if (*((unsigned __int8 *)v40 + 3) + v41 > (int)v15)
      {
        int v42 = *((unsigned __int8 *)&unk_1B0DE86B8 + 4 * v36 + 2);
        if (((v15 ^ v41) & v42 & 1) == 0) {
          unsigned int v15 = (unsigned __int16)(*(_WORD *)((char *)&unk_1B0DE8944 + (v42 & 0xFE)) + v15);
        }
      }
      if (v34)
      {
        int v43 = 0;
        int v44 = 0;
        int v45 = 125;
        unsigned int v46 = (8 * v15) | 7;
        do
        {
          int v47 = v45 + v43;
          if (v45 + v43 < 0 != __OFADD__(v45, v43)) {
            ++v47;
          }
          int v48 = v47 >> 1;
          unsigned int v49 = v10[v48];
          if (v46 < v49) {
            int v45 = v48 - 1;
          }
          else {
            int v44 = v48;
          }
          if (v46 >= v49) {
            int v43 = v48 + 1;
          }
        }
        while (v45 >= v43);
        if ((v34 == 2 || (byte_1B0DE8ADA[v44] & 0x80000000) == 0) && (v10[v44] & 7) + (v10[v44] >> 3) >= (int)v15) {
          unsigned int v15 = byte_1B0DE8ADA[v44] & 0x7F;
        }
      }
LABEL_28:
      if (!v15)
      {
LABEL_54:
        if (v12 >= v8) {
          goto LABEL_55;
        }
        goto LABEL_37;
      }
      if (v15 <= 0x7F)
      {
        *v19++ = v15;
        if (v12 >= v8) {
          goto LABEL_55;
        }
        goto LABEL_37;
      }
      if (v15 <= 0x7FF)
      {
        *uint64_t v19 = (v15 >> 6) | 0xC0;
        v19[1] = v15 & 0x3F | 0x80;
        v19 += 2;
        if (v12 >= v8) {
          goto LABEL_55;
        }
        goto LABEL_37;
      }
      if (!HIWORD(v15))
      {
        *uint64_t v19 = (v15 >> 12) | 0xE0;
        v19[1] = (v15 >> 6) & 0x3F | 0x80;
        v19[2] = v15 & 0x3F | 0x80;
        v19 += 3;
        if (v12 >= v8) {
          goto LABEL_55;
        }
        goto LABEL_37;
      }
LABEL_104:
      *uint64_t v19 = (v15 >> 18) & 7 | 0xF0;
      v19[1] = (v15 >> 12) & 0x3F | 0x80;
      v19[2] = (v15 >> 6) & 0x3F | 0x80;
      v19[3] = v15 & 0x3F | 0x80;
      v19 += 4;
      if (v12 >= v8) {
        goto LABEL_55;
      }
LABEL_37:
      if ((unint64_t)v19 > v55)
      {
        size_t v20 = v10;
        uint64_t v21 = v18;
        if (sqlite3_initialize()) {
          return 7;
        }
        int v22 = (char *)sub_1B0C7FC94(2 * v54);
        if (!v22) {
          return 7;
        }
        int v9 = v22;
        int v23 = *(unsigned char **)(a1 + 128);
        uint64_t v19 = &v22[v19 - v23];
        memcpy(v22, v23, v54);
        uint64_t v24 = *(void *)(a1 + 128);
        if (v24)
        {
          int v25 = &off_1EB21C9E8;
          if (!dword_1EB21C9C0) {
            goto LABEL_45;
          }
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v24);
          --qword_1EB220150;
          off_1EB21C9E8(v24);
          uint64_t v24 = xmmword_1EB2201B0;
          int v25 = &xmmword_1EB21CA50;
          if ((void)xmmword_1EB2201B0) {
LABEL_45:
          }
            (*v25)(v24);
        }
        *(void *)(a1 + 128) = v9;
        *(_DWORD *)(a1 + 136) = 2 * v54;
        v54 *= 2;
        unint64_t v55 = (unint64_t)&v9[v54 - 6];
        uint64_t v18 = v21;
        uint64_t v10 = v20;
      }
      unsigned int v15 = *v12;
      if (((char)*v12 & 0x80000000) == 0) {
        break;
      }
      uint64_t v11 = v12 + 1;
      if (v15 < 0xC0)
      {
        uint64_t v30 = v18;
      }
      else
      {
        unsigned int v28 = byte_1B0DE211A[v15 - 192];
        if (v11 == v8)
        {
LABEL_62:
          uint64_t v11 = v8;
        }
        else
        {
          while (1)
          {
            char v29 = *v11;
            if ((*v11 & 0xC0) != 0x80) {
              break;
            }
            ++v11;
            unsigned int v28 = v29 & 0x3F | (v28 << 6);
            if (v11 == v8) {
              goto LABEL_62;
            }
          }
        }
        uint64_t v30 = v18;
        if (v28 >> 11 == 27 || v28 < 0x80 || v28 >> 1 == 0x7FFF) {
          unsigned int v15 = 65533;
        }
        else {
          unsigned int v15 = v28;
        }
      }
      if (sub_1B0DC2F40(a1, v15))
      {
        int v12 = v11;
        uint64_t v18 = v30;
        uint64_t v10 = word_1B0DE89DE;
        if ((int)v15 <= 127)
        {
LABEL_26:
          if (v15 - 65 < 0x1A) {
            v15 += 32;
          }
          goto LABEL_28;
        }
        goto LABEL_75;
      }
      uint64_t v18 = v30;
      if (v15 - 818 < 0xFFFFFFCE)
      {
        uint64_t v10 = word_1B0DE89DE;
        goto LABEL_56;
      }
      if (v15 >= 0x320) {
        char v50 = -32;
      }
      else {
        char v50 = 0;
      }
      if (v15 >= 0x320) {
        unsigned int v51 = 221688;
      }
      else {
        unsigned int v51 = 134389727;
      }
      uint64_t v10 = word_1B0DE89DE;
      if (((v51 >> (v15 + v50)) & 1) == 0) {
        goto LABEL_56;
      }
      int v12 = v11;
    }
    if (*(unsigned char *)(a1 + *v12))
    {
      uint64_t v11 = v12;
      goto LABEL_50;
    }
LABEL_55:
    uint64_t v11 = v12;
LABEL_56:
    LODWORD(result) = a6(a2, 0, v9, (v19 - v9), v18, (v12 - v6));
  }
  while (!result);
  if (result == 101) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1B0DC1BFC(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  if (a3) {
    goto LABEL_36;
  }
  if (sqlite3_initialize())
  {
    uint64_t v7 = 0;
    uint64_t result = 7;
  }
  else
  {
    int v9 = (_OWORD *)sub_1B0C7FC94(128);
    uint64_t v7 = v9;
    if (v9)
    {
      v9[6] = 0u;
      v9[7] = 0u;
      v9[4] = 0u;
      v9[5] = 0u;
      v9[2] = 0u;
      v9[3] = 0u;
      *int v9 = 0u;
      v9[1] = 0u;
      long long v10 = xmmword_1E9B51F88;
      long long v11 = unk_1E9B51F98;
      long long v12 = unk_1E9B51FB8;
      v9[2] = xmmword_1E9B51FA8;
      v9[3] = v12;
      *int v9 = v10;
      v9[1] = v11;
      long long v13 = xmmword_1E9B51FC8;
      long long v14 = unk_1E9B51FD8;
      long long v15 = unk_1E9B51FF8;
      v9[6] = xmmword_1E9B51FE8;
      v9[7] = v15;
      v9[4] = v13;
      v9[5] = v14;
      if (a3 < 1)
      {
LABEL_39:
        uint64_t result = 0;
        goto LABEL_38;
      }
      uint64_t v16 = 0;
LABEL_8:
      char v17 = *(unsigned char **)(a2 + 8 * v16);
      if (v17)
      {
        uint64_t v18 = *(unsigned char **)(a2 + ((8 * v16) | 8));
        uint64_t v19 = *(unsigned char **)(a2 + 8 * v16);
        for (uint64_t i = "tokenchars"; ; ++i)
        {
          uint64_t v21 = *v19;
          uint64_t v22 = *(unsigned __int8 *)i;
          if (v21 == v22)
          {
            if (!*v19)
            {
              unsigned int v29 = *v18;
              if (*v18)
              {
                uint64_t v30 = v18 + 1;
                do
                {
                  if ((v29 & 0x80) == 0) {
                    *((unsigned char *)v7 + v29) = 1;
                  }
                  unsigned int v31 = *v30++;
                  unsigned int v29 = v31;
                }
                while (v31);
              }
LABEL_7:
              v16 += 2;
              if ((int)v16 >= a3) {
                goto LABEL_39;
              }
              goto LABEL_8;
            }
          }
          else if (byte_1B0DE1758[v21] != byte_1B0DE1758[v22])
          {
            for (unint64_t j = "separators"; ; ++j)
            {
              uint64_t v24 = *v17;
              uint64_t v25 = *(unsigned __int8 *)j;
              if (v24 == v25)
              {
                if (!*v17)
                {
                  unsigned int v26 = *v18;
                  if (*v18)
                  {
                    char v27 = v18 + 1;
                    do
                    {
                      if ((v26 & 0x80) == 0) {
                        *((unsigned char *)v7 + v26) = 0;
                      }
                      unsigned int v28 = *v27++;
                      unsigned int v26 = v28;
                    }
                    while (v28);
                  }
                  goto LABEL_7;
                }
              }
              else if (byte_1B0DE1758[v24] != byte_1B0DE1758[v25])
              {
                goto LABEL_30;
              }
              ++v17;
            }
          }
          ++v19;
        }
      }
LABEL_30:
      size_t v32 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_35;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v7);
      --qword_1EB220150;
      off_1EB21C9E8(v7);
      uint64_t v7 = (_OWORD *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        size_t v32 = &xmmword_1EB21CA50;
LABEL_35:
        (*v32)(v7);
LABEL_36:
        uint64_t v7 = 0;
      }
      uint64_t result = 1;
    }
    else
    {
      uint64_t result = 7;
    }
  }
LABEL_38:
  *a4 = v7;
  return result;
}

uint64_t sub_1B0DC1E2C(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  uint64_t v2 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_7;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v2 = &xmmword_1EB21CA50;
LABEL_7:
    int v3 = *v2;
    return v3(v1);
  }
  return result;
}

uint64_t sub_1B0DC1EF4(uint64_t a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, int a11, uint64_t (*a12)(uint64_t, void, int8x16_t *, void, uint64_t, uint64_t))
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  int v52 = a11 - 1;
  if (a11 < 1) {
    return 0;
  }
  int v15 = 0;
  uint64_t v51 = a10 + 16;
  int v16 = 64;
  uint64_t v17 = a11;
  v18.n128_u64[0] = 0xBFBFBFBFBFBFBFBFLL;
  v18.n128_u64[1] = 0xBFBFBFBFBFBFBFBFLL;
  v19.n128_u64[0] = 0x1A1A1A1A1A1A1A1ALL;
  v19.n128_u64[1] = 0x1A1A1A1A1A1A1A1ALL;
  v20.i64[0] = 0x2020202020202020;
  v20.i64[1] = 0x2020202020202020;
  uint64_t v21 = (int8x16_t *)v55;
  while (1)
  {
    uint64_t v22 = v15;
    uint64_t v23 = a11 <= v15 + 1 ? (v15 + 1) : a11;
    while ((*(char *)(a10 + v22) & 0x80000000) == 0 && !*(unsigned char *)(a1 + *(unsigned __int8 *)(a10 + v22)))
    {
      if (++v22 >= v17)
      {
        uint64_t v22 = v23;
        break;
      }
    }
    if (v22 == a11) {
      break;
    }
    uint64_t v24 = (v22 + 1);
    int v25 = v22;
    uint64_t v26 = v24;
    if ((int)v24 < a11)
    {
      uint64_t v26 = (int)v24;
      int v25 = v22;
      do
      {
        if (*(char *)(a10 + v26) < 0)
        {
          int v27 = v26;
        }
        else
        {
          int v27 = v26;
          if (!*(unsigned char *)(a1 + *(unsigned __int8 *)(a10 + v26))) {
            goto LABEL_19;
          }
        }
        ++v26;
        int v25 = v27;
      }
      while (v17 != v26);
      int v25 = v52;
      uint64_t v26 = v17;
    }
LABEL_19:
    uint64_t v28 = (v26 - v22);
    if ((int)v28 <= v16) {
      goto LABEL_31;
    }
    if (v21 != (int8x16_t *)v55 && v21)
    {
      unsigned int v29 = (void (**)(int8x16_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v21);
        --qword_1EB220150;
        off_1EB21C9E8(v21);
        uint64_t v21 = (int8x16_t *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_28;
        }
        unsigned int v29 = (void (**)(int8x16_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))&xmmword_1EB21CA50;
      }
      (*v29)(v21, a3, a4, a5, a6, a7, a8, v18, v19);
    }
LABEL_28:
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v30 = sub_1B0C7FC94(2 * (int)v28);
    if (!v30) {
      return 7;
    }
    uint64_t v21 = (int8x16_t *)v30;
    int v16 = 2 * v28;
    v18.n128_u64[0] = 0xBFBFBFBFBFBFBFBFLL;
    v18.n128_u64[1] = 0xBFBFBFBFBFBFBFBFLL;
    v19.n128_u64[0] = 0x1A1A1A1A1A1A1A1ALL;
    v19.n128_u64[1] = 0x1A1A1A1A1A1A1A1ALL;
    v20.i64[0] = 0x2020202020202020;
    v20.i64[1] = 0x2020202020202020;
LABEL_31:
    if ((int)v28 >= 1)
    {
      if (v28 < 8 || (unint64_t)v21 - a10 - (int)v22 < 0x20)
      {
        uint64_t v31 = 0;
LABEL_35:
        uint64_t v32 = v28 - v31;
        int v33 = &v21->i8[v31];
        int v34 = (unsigned __int8 *)(a10 + v31 + (int)v22);
        do
        {
          int v36 = *v34++;
          char v35 = v36;
          char v37 = v36 + 32;
          if ((v36 - 65) < 0x1A) {
            char v35 = v37;
          }
          *v33++ = v35;
          --v32;
        }
        while (v32);
        goto LABEL_39;
      }
      if (v28 >= 0x20)
      {
        uint64_t v31 = v28 & 0x7FFFFFE0;
        uint64_t v40 = (int8x16_t *)(v51 + (int)v22);
        int v41 = v21 + 1;
        uint64_t v42 = v28 & 0xFFFFFFE0;
        do
        {
          int8x16_t v43 = vbslq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v19, (uint8x16_t)vaddq_s8(*v40, (int8x16_t)v18)), vaddq_s8(*v40, v20), *v40);
          v41[-1] = vbslq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v19, (uint8x16_t)vaddq_s8(v40[-1], (int8x16_t)v18)), vaddq_s8(v40[-1], v20), v40[-1]);
          *int v41 = v43;
          v40 += 2;
          v41 += 2;
          v42 -= 32;
        }
        while (v42);
        if (v31 == v28) {
          goto LABEL_39;
        }
        if ((((_BYTE)v26 - (_BYTE)v22) & 0x18) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v31 = 0;
      }
      uint64_t v44 = v31;
      uint64_t v31 = v28 & 0xFFFFFFF8;
      int v45 = (int8x8_t *)(a10 + v44 + (int)v22);
      unsigned int v46 = (int8x8_t *)&v21->i8[v44];
      uint64_t v47 = v44 - v31;
      do
      {
        int8x8_t v48 = *v45++;
        *v46++ = vbsl_s8((int8x8_t)vcgt_u8((uint8x8_t)0x1A1A1A1A1A1A1A1ALL, (uint8x8_t)vadd_s8(v48, (int8x8_t)0xBFBFBFBFBFBFBFBFLL)), vadd_s8(v48, (int8x8_t)0x2020202020202020), v48);
        v47 += 8;
      }
      while (v47);
      if (v31 != v28) {
        goto LABEL_35;
      }
    }
LABEL_39:
    unsigned int v38 = a12(a2, 0, v21, (v26 - v22), v22, v26);
    unsigned int v39 = v38;
    int v15 = v25 + 2;
    if (v25 + 2 < a11)
    {
      v18.n128_u64[0] = 0xBFBFBFBFBFBFBFBFLL;
      v18.n128_u64[1] = 0xBFBFBFBFBFBFBFBFLL;
      v19.n128_u64[0] = 0x1A1A1A1A1A1A1A1ALL;
      v19.n128_u64[1] = 0x1A1A1A1A1A1A1A1ALL;
      v20.i64[0] = 0x2020202020202020;
      v20.i64[1] = 0x2020202020202020;
      if (!v38) {
        continue;
      }
    }
    goto LABEL_54;
  }
  unsigned int v39 = 0;
LABEL_54:
  if (v21 != (int8x16_t *)v55 && v21)
  {
    char v50 = (uint64_t (**)(int8x16_t *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_61;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v21);
    --qword_1EB220150;
    off_1EB21C9E8(v21);
    uint64_t v21 = (int8x16_t *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      char v50 = (uint64_t (**)(int8x16_t *))&xmmword_1EB21CA50;
LABEL_61:
      (*v50)(v21);
    }
  }
  if (v39 == 101) {
    return 0;
  }
  else {
    return v39;
  }
}

uint64_t sub_1B0DC2328(uint64_t a1, const char **a2, int a3, void (***a4)(void))
{
  uint64_t v17 = 0;
  int v8 = a3 - 1;
  if (a3 < 1)
  {
    int v9 = "unicode61";
    if (sqlite3_initialize()) {
      goto LABEL_3;
    }
  }
  else
  {
    int v9 = *a2;
    if (sqlite3_initialize())
    {
LABEL_3:
      long long v10 = 0;
LABEL_4:
      uint64_t v11 = 7;
      goto LABEL_5;
    }
  }
  long long v13 = (void (**)(void))sub_1B0C7FC94(160);
  long long v10 = v13;
  if (!v13) {
    goto LABEL_4;
  }
  *((_OWORD *)v13 + 8) = 0u;
  *((_OWORD *)v13 + 9) = 0u;
  *((_OWORD *)v13 + 6) = 0u;
  *((_OWORD *)v13 + 7) = 0u;
  *((_OWORD *)v13 + 4) = 0u;
  *((_OWORD *)v13 + 5) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *((_OWORD *)v13 + 3) = 0u;
  *(_OWORD *)long long v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, const char *, uint64_t *, void (**)(void)))(a1 + 16))(a1, v9, &v17, v13);
  if (v11
    || (a3 <= 0 ? (int v14 = 0) : (int v14 = v8),
        v14 ? (int v15 = a2 + 1) : (int v15 = 0),
        uint64_t v11 = ((uint64_t (*)(uint64_t, const char **))*v10)(v17, v15),
        v11))
  {
    if (v10[3]) {
      v10[1]();
    }
    int v16 = (uint64_t (**)(void (**)(void)))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_23;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    long long v10 = (void (**)(void))xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v16 = (uint64_t (**)(void (**)(void)))&xmmword_1EB21CA50;
LABEL_23:
      (*v16)(v10);
      long long v10 = 0;
    }
  }
LABEL_5:
  *a4 = v10;
  return v11;
}

uint64_t sub_1B0DC24B8(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if (*(void *)(result + 24)) {
    (*(void (**)(void))(result + 8))();
  }
  uint64_t v2 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_9;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v2 = &xmmword_1EB21CA50;
LABEL_9:
    int v3 = *v2;
    return v3(v1);
  }
  return result;
}

uint64_t sub_1B0DC2590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[0] = a2;
  v7[1] = a6;
  v7[2] = a1 + 32;
  return (*(uint64_t (**)(void, void *, uint64_t, uint64_t, uint64_t, void))(a1 + 16))(*(void *)(a1 + 24), v7, a3, a4, a5, sub_1B0DC304C);
}

uint64_t sub_1B0DC25D4(int *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, int a5, uint64_t (*a6)(uint64_t, void, char *, void))
{
  *(void *)&v67[28] = *MEMORY[0x1E4F143B8];
  int v9 = &a4[a5];
  long long v10 = a4;
  while (1)
  {
    unsigned int v14 = *v10++;
    unsigned int v13 = v14;
    unsigned int v15 = v14 - 192;
    if (v14 >= 0xC0)
    {
      unsigned int v16 = byte_1B0DE211A[v15];
      if (v10 == v9)
      {
LABEL_8:
        long long v10 = v9;
      }
      else
      {
        while (1)
        {
          unsigned __int8 v17 = *v10;
          if ((*v10 & 0xC0) != 0x80) {
            break;
          }
          ++v10;
          unsigned int v16 = v17 & 0x3F | (v16 << 6);
          if (v10 == v9) {
            goto LABEL_8;
          }
        }
      }
      if (v16 >> 11 == 27 || v16 < 0x80 || v16 >> 1 == 0x7FFF) {
        unsigned int v13 = 65533;
      }
      else {
        unsigned int v13 = v16;
      }
    }
    if (!v13 || v10 >= v9) {
      return 0;
    }
    int v21 = *a1;
    if (*a1)
    {
      if ((int)v13 > 127)
      {
        if (HIWORD(v13))
        {
          if (v13 - 66560 < 0x28) {
            v13 += 40;
          }
          goto LABEL_47;
        }
        int v23 = 0;
        int v24 = 162;
        int v25 = -1;
        do
        {
          int v26 = v24 + v23;
          if (v24 + v23 < 0 != __OFADD__(v24, v23)) {
            ++v26;
          }
          int v27 = v26 >> 1;
          signed int v28 = *((unsigned __int16 *)&unk_1B0DE86B8 + 2 * v27);
          if ((int)v13 >= v28) {
            int v23 = v27 + 1;
          }
          else {
            int v24 = v27 - 1;
          }
          if ((int)v13 >= v28) {
            int v25 = v27;
          }
        }
        while (v24 >= v23);
        unsigned int v29 = (unsigned __int16 *)((char *)&unk_1B0DE86B8 + 4 * v25);
        int v30 = *v29;
        if (*((unsigned __int8 *)v29 + 3) + v30 > (int)v13)
        {
          int v31 = *((unsigned __int8 *)&unk_1B0DE86B8 + 4 * v25 + 2);
          if (((v13 ^ v30) & v31 & 1) == 0) {
            unsigned int v13 = (unsigned __int16)(*(_WORD *)((char *)&unk_1B0DE8944 + (v31 & 0xFE)) + v13);
          }
        }
      }
      else if (v13 - 65 < 0x1A)
      {
        v13 += 32;
      }
    }
    if (v13 <= 0x7F)
    {
      char v63 = v13;
      uint64_t v22 = &v64;
      goto LABEL_48;
    }
    if (v13 <= 0x7FF)
    {
      char v63 = (v13 >> 6) | 0xC0;
      char v64 = v13 & 0x3F | 0x80;
      uint64_t v22 = &v65;
      goto LABEL_48;
    }
    if (!HIWORD(v13))
    {
      char v63 = (v13 >> 12) | 0xE0;
      char v64 = (v13 >> 6) & 0x3F | 0x80;
      char v65 = v13 & 0x3F | 0x80;
      uint64_t v22 = &v66;
      goto LABEL_48;
    }
LABEL_47:
    char v63 = (v13 >> 18) & 7 | 0xF0;
    char v64 = (v13 >> 12) & 0x3F | 0x80;
    char v65 = (v13 >> 6) & 0x3F | 0x80;
    char v66 = v13 & 0x3F | 0x80;
    uint64_t v22 = v67;
LABEL_48:
    int v33 = v10 + 1;
    unsigned int v32 = *v10;
    if (v32 >= 0xC0)
    {
      unsigned int v32 = byte_1B0DE211A[v32 - 192];
      if (v33 == v9)
      {
LABEL_52:
        int v33 = v9;
      }
      else
      {
        while (1)
        {
          unsigned __int8 v34 = *v33;
          if ((*v33 & 0xC0) != 0x80) {
            break;
          }
          ++v33;
          unsigned int v32 = v34 & 0x3F | (v32 << 6);
          if (v33 == v9) {
            goto LABEL_52;
          }
        }
      }
      if (v32 >> 11 == 27 || v32 < 0x80 || v32 >> 1 == 0x7FFF) {
        unsigned int v32 = 65533;
      }
    }
    if (v32) {
      BOOL v37 = v33 >= v9;
    }
    else {
      BOOL v37 = 1;
    }
    if (v37) {
      return 0;
    }
    if (v21)
    {
      if ((int)v32 > 127)
      {
        if (HIWORD(v32))
        {
          if (v32 - 66560 < 0x28) {
            v32 += 40;
          }
          goto LABEL_90;
        }
        int v40 = 0;
        int v41 = 162;
        int v42 = -1;
        do
        {
          int v43 = v41 + v40;
          if (v41 + v40 < 0 != __OFADD__(v41, v40)) {
            ++v43;
          }
          int v44 = v43 >> 1;
          signed int v45 = *((unsigned __int16 *)&unk_1B0DE86B8 + 2 * v44);
          if ((int)v32 >= v45) {
            int v40 = v44 + 1;
          }
          else {
            int v41 = v44 - 1;
          }
          if ((int)v32 >= v45) {
            int v42 = v44;
          }
        }
        while (v41 >= v40);
        unsigned int v46 = (unsigned __int16 *)((char *)&unk_1B0DE86B8 + 4 * v42);
        int v47 = *v46;
        if (*((unsigned __int8 *)v46 + 3) + v47 > (int)v32)
        {
          int v48 = *((unsigned __int8 *)&unk_1B0DE86B8 + 4 * v42 + 2);
          if (((v32 ^ v47) & v48 & 1) == 0) {
            unsigned int v32 = (unsigned __int16)(*(_WORD *)((char *)&unk_1B0DE8944 + (v48 & 0xFE)) + v32);
          }
        }
      }
      else if (v32 - 65 < 0x1A)
      {
        v32 += 32;
      }
    }
    if (v32 <= 0x7F)
    {
      *uint64_t v22 = v32;
      unsigned int v38 = v22 + 1;
      goto LABEL_91;
    }
    if (v32 <= 0x7FF)
    {
      *uint64_t v22 = (v32 >> 6) | 0xC0;
      char v39 = v32 & 0x3F | 0x80;
      unsigned int v38 = v22 + 2;
      v22[1] = v39;
      goto LABEL_91;
    }
    if (!HIWORD(v32))
    {
      *uint64_t v22 = (v32 >> 12) | 0xE0;
      v22[1] = (v32 >> 6) & 0x3F | 0x80;
      char v49 = v32 & 0x3F | 0x80;
      unsigned int v38 = v22 + 3;
      v22[2] = v49;
      goto LABEL_91;
    }
LABEL_90:
    *uint64_t v22 = (v32 >> 18) & 7 | 0xF0;
    v22[1] = (v32 >> 12) & 0x3F | 0x80;
    v22[2] = (v32 >> 6) & 0x3F | 0x80;
    char v50 = v32 & 0x3F | 0x80;
    unsigned int v38 = v22 + 4;
    v22[3] = v50;
LABEL_91:
    unsigned int v51 = *v33;
    if (v51 < 0xC0)
    {
      if (!*v33) {
        return 0;
      }
    }
    else
    {
      unsigned int v52 = byte_1B0DE211A[v51 - 192];
      int v53 = v33 + 1;
      if (v53 == v9)
      {
        unsigned int v51 = byte_1B0DE211A[v51 - 192];
        if (v52 >> 1 == 0x7FFF) {
          goto LABEL_110;
        }
      }
      else
      {
        while ((*v53 & 0xC0) == 0x80)
        {
          unsigned int v51 = *v53++ & 0x3F | (v52 << 6);
          unsigned int v52 = v51;
          if (v53 == v9)
          {
            if (v51 >> 1 != 0x7FFF) {
              goto LABEL_102;
            }
            goto LABEL_110;
          }
        }
        unsigned int v51 = v52;
        if (v52 >> 1 == 0x7FFF) {
          goto LABEL_110;
        }
      }
LABEL_102:
      if (v51 < 0x80 || (v51 & 0xFFFFF800) == 0xD800)
      {
LABEL_110:
        unsigned int v51 = 65533;
        if (!v21) {
          goto LABEL_128;
        }
        goto LABEL_113;
      }
    }
    if (!v21) {
      goto LABEL_124;
    }
    if ((int)v51 <= 127)
    {
      if (v51 - 65 < 0x1A) {
        v51 += 32;
      }
      if (v51 <= 0x7F)
      {
LABEL_2:
        *unsigned int v38 = v51;
        int v11 = v38 + 1;
        goto LABEL_3;
      }
      goto LABEL_125;
    }
    if (HIWORD(v51))
    {
      if (v51 - 66560 < 0x28) {
        v51 += 40;
      }
LABEL_131:
      *unsigned int v38 = (v51 >> 18) & 7 | 0xF0;
      v38[1] = (v51 >> 12) & 0x3F | 0x80;
      v38[2] = (v51 >> 6) & 0x3F | 0x80;
      int v11 = v38 + 4;
      v38[3] = v51 & 0x3F | 0x80;
      goto LABEL_3;
    }
LABEL_113:
    int v54 = 0;
    int v55 = 162;
    int v56 = -1;
    do
    {
      int v57 = v55 + v54;
      if (v55 + v54 < 0 != __OFADD__(v55, v54)) {
        ++v57;
      }
      int v58 = v57 >> 1;
      unsigned int v59 = *((unsigned __int16 *)&unk_1B0DE86B8 + 2 * v58);
      if (v51 >= v59) {
        int v54 = v58 + 1;
      }
      else {
        int v55 = v58 - 1;
      }
      if (v51 >= v59) {
        int v56 = v58;
      }
    }
    while (v55 >= v54);
    int v60 = (unsigned __int16 *)((char *)&unk_1B0DE86B8 + 4 * v56);
    int v61 = *v60;
    if (*((unsigned __int8 *)v60 + 3) + v61 <= v51
      || (int v62 = *((unsigned __int8 *)&unk_1B0DE86B8 + 4 * v56 + 2), ((v51 ^ v61) & v62 & 1) != 0))
    {
LABEL_124:
      if (v51 <= 0x7F) {
        goto LABEL_2;
      }
      goto LABEL_125;
    }
    unsigned int v51 = (unsigned __int16)(*(_WORD *)((char *)&unk_1B0DE8944 + (v62 & 0xFE)) + v51);
    if (v51 <= 0x7F) {
      goto LABEL_2;
    }
LABEL_125:
    if (v51 > 0x7FF)
    {
      if (HIWORD(v51)) {
        goto LABEL_131;
      }
LABEL_128:
      *unsigned int v38 = (v51 >> 12) | 0xE0;
      v38[1] = (v51 >> 6) & 0x3F | 0x80;
      int v11 = v38 + 3;
      v38[2] = v51 & 0x3F | 0x80;
      goto LABEL_3;
    }
    *unsigned int v38 = (v51 >> 6) | 0xC0;
    int v11 = v38 + 2;
    v38[1] = v51 & 0x3F | 0x80;
LABEL_3:
    uint64_t result = a6(a2, 0, &v63, v11 - &v63);
    if (result) {
      return result;
    }
  }
}

uint64_t sub_1B0DC2C88(uint64_t a1, char *__s, int a3)
{
  uint64_t v4 = __s;
  int v6 = strlen(__s);
  if (v6 < 1) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 152);
  int v8 = *(_DWORD *)(a1 + 144);
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v10 = sub_1B0C8E1B8(v7, 4 * (v8 + v6));
  if (!v10) {
    return 7;
  }
  uint64_t v11 = v10;
  int v12 = *(_DWORD *)(a1 + 144);
  unsigned int v13 = &v4[v6];
  do
  {
    unsigned int v15 = *v4++;
    unsigned int v14 = v15;
    unsigned int v16 = v15 - 192;
    if (v15 < 0xC0)
    {
      if ((v14 & 0x80) == 0)
      {
        *(unsigned char *)(a1 + v14) = a3;
        continue;
      }
    }
    else
    {
      unsigned int v14 = byte_1B0DE211A[v16];
      if (v4 == v13)
      {
        uint64_t v4 = v13;
        if (v14 >> 1 == 0x7FFF) {
          goto LABEL_23;
        }
      }
      else
      {
        while (1)
        {
          char v17 = *v4;
          if ((*v4 & 0xC0) != 0x80) {
            break;
          }
          ++v4;
          unsigned int v14 = v17 & 0x3F | (v14 << 6);
          if (v4 == v13)
          {
            uint64_t v4 = v13;
            break;
          }
        }
        if (v14 >> 1 == 0x7FFF)
        {
LABEL_23:
          unsigned int v14 = 65533;
          goto LABEL_24;
        }
      }
      if (v14 < 0x80 || (v14 & 0xFFFFF800) == 0xD800) {
        goto LABEL_23;
      }
      if (v14 >> 20) {
        goto LABEL_38;
      }
    }
LABEL_24:
    unsigned int v18 = word_1B0DE78CC[HIWORD(v14)];
    unsigned int v19 = word_1B0DE78CC[HIWORD(v14) + 1];
    if (v19 <= v18) {
      goto LABEL_38;
    }
    unsigned int v20 = -1;
    do
    {
      unsigned int v21 = (v19 + v18) >> 1;
      unsigned int v22 = word_1B0DE78EE[v21];
      if ((unsigned __int16)v14 < v22) {
        unsigned int v19 = (v19 + v18) >> 1;
      }
      else {
        unsigned int v20 = (v19 + v18) >> 1;
      }
      if ((unsigned __int16)v14 >= v22) {
        unsigned int v18 = v21 + 1;
      }
    }
    while ((int)v19 > (int)v18);
    if ((v20 & 0x80000000) != 0
      || (uint64_t v23 = v20,
          int v24 = word_1B0DE78EE[v23],
          unsigned int v25 = (unsigned __int16)word_1B0DE6B02[v23],
          (unsigned __int16)v14 >= v24 + (v25 >> 5)))
    {
LABEL_38:
      unsigned int v26 = 0;
      goto LABEL_39;
    }
    unsigned int v26 = v25 & 0x1F;
    if (v26 == 30)
    {
      if (((_BYTE)v14 - (_BYTE)v24)) {
        unsigned int v26 = 5;
      }
      else {
        unsigned int v26 = 9;
      }
    }
LABEL_39:
    if (*(unsigned __int8 *)(a1 + v26 + 160) != a3)
    {
      if (v14 - 818 < 0xFFFFFFCE
        || (v14 >= 0x320 ? (char v27 = -32) : (char v27 = 0),
            v14 >= 0x320 ? (unsigned int v28 = 221688) : (unsigned int v28 = 134389727),
            ((v28 >> (v14 + v27)) & 1) == 0))
      {
        if (v12 < 1)
        {
          LODWORD(v29) = 0;
        }
        else
        {
          uint64_t v29 = 0;
          while (*(_DWORD *)(v11 + 4 * v29) <= v14)
          {
            if (v12 == ++v29)
            {
              LODWORD(v29) = v12;
              break;
            }
          }
        }
        int v30 = (unsigned int *)(v11 + 4 * v29);
        memmove((void *)(v11 + 4 * (v29 + 1)), v30, 4 * (v12 - (int)v29));
        unsigned int *v30 = v14;
        ++v12;
      }
    }
  }
  while (v4 < v13);
  uint64_t result = 0;
  *(void *)(a1 + 152) = v11;
  *(_DWORD *)(a1 + 144) = v12;
  return result;
}

uint64_t sub_1B0DC2F40(uint64_t a1, unsigned int a2)
{
  if (a2 >> 20) {
    goto LABEL_16;
  }
  unsigned int v2 = word_1B0DE78CC[HIWORD(a2)];
  unsigned int v3 = word_1B0DE78CC[HIWORD(a2) + 1];
  if (v3 <= v2) {
    goto LABEL_16;
  }
  unsigned int v4 = -1;
  do
  {
    unsigned int v5 = (v3 + v2) >> 1;
    unsigned int v6 = word_1B0DE78EE[v5];
    if ((unsigned __int16)a2 < v6) {
      unsigned int v3 = (v3 + v2) >> 1;
    }
    else {
      unsigned int v4 = (v3 + v2) >> 1;
    }
    if ((unsigned __int16)a2 >= v6) {
      unsigned int v2 = v5 + 1;
    }
  }
  while ((int)v3 > (int)v2);
  if ((v4 & 0x80000000) != 0
    || (uint64_t v7 = v4,
        int v8 = word_1B0DE78EE[v7],
        unsigned int v9 = (unsigned __int16)word_1B0DE6B02[v7],
        (unsigned __int16)a2 >= v8 + (v9 >> 5)))
  {
LABEL_16:
    unsigned int v10 = 0;
  }
  else
  {
    unsigned int v10 = v9 & 0x1F;
    if (v10 == 30)
    {
      if (((_BYTE)a2 - (_BYTE)v8)) {
        unsigned int v10 = 5;
      }
      else {
        unsigned int v10 = 9;
      }
    }
  }
  unsigned int v11 = *(unsigned __int8 *)(a1 + v10 + 160);
  int v12 = *(_DWORD *)(a1 + 144);
  BOOL v13 = __OFSUB__(v12, 1);
  int v14 = v12 - 1;
  if (v14 < 0 != v13) {
    return v11;
  }
  int v15 = 0;
  while (1)
  {
    int v16 = v15 + v14;
    if (v15 + v14 < 0 != __OFADD__(v15, v14)) {
      ++v16;
    }
    int v17 = v16 >> 1;
    int v18 = *(_DWORD *)(*(void *)(a1 + 152) + 4 * v17);
    if (v18 == a2) {
      break;
    }
    if (v18 >= (int)a2) {
      int v14 = v17 - 1;
    }
    else {
      int v15 = v17 + 1;
    }
    if (v14 < v15) {
      return v11;
    }
  }
  return v11 ^ 1;
}

uint64_t sub_1B0DC304C(uint64_t *a1, uint64_t a2, void *__src, uint64_t __n, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = __n;
  uint64_t v9 = a2;
  if ((__n - 65) < 0xFFFFFFC2)
  {
    uint64_t v11 = *a1;
    int v12 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))a1[1];
    goto LABEL_671;
  }
  BOOL v13 = (unsigned char *)a1[2];
  memcpy(v13, __src, __n);
  if (v13[(v8 - 1)] == 115)
  {
    uint64_t v14 = (v8 - 2);
    int v15 = v13[v14];
    if (v15 != 115)
    {
      if (v15 == 101)
      {
        if (v8 < 5)
        {
          if (v8 != 4) {
            goto LABEL_12;
          }
        }
        else if (v13[(v8 - 4)] == 115 && v13[(v8 - 3)] == 115)
        {
          goto LABEL_13;
        }
        if (v13[(v8 - 3)] == 105)
        {
LABEL_13:
          uint64_t v8 = v14;
          goto LABEL_14;
        }
      }
LABEL_12:
      uint64_t v14 = (v8 - 1);
      goto LABEL_13;
    }
  }
LABEL_14:
  uint64_t v16 = (v8 - 2);
  int v17 = (char)v13[v16];
  if (v17 == 101)
  {
    if (v8 < 4)
    {
      if (v8 != 3)
      {
        uint64_t v8 = 2;
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v42 = (v8 - 3);
      if (*(_WORD *)&v13[v42] == 25957 && v13[v42 + 2] == 100)
      {
        unsigned int v44 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
        char v45 = 1;
        BOOL v23 = v44 > 0xA;
        int v46 = (1 << v44) & 0x495;
        if (v23 || v46 == 0)
        {
          unsigned int v48 = 1;
          if (v8 == 4)
          {
            char v45 = 0;
          }
          else
          {
            uint64_t v218 = 1;
            while (1)
            {
              int v219 = v13[v218];
              unsigned int v220 = (((v219 - 97) >> 1) | (((_BYTE)v219 - 97) << 7));
              BOOL v23 = v220 > 0xA;
              int v221 = (1 << v220) & 0x495;
              BOOL v222 = v23 || v221 == 0;
              if (!v222 || v219 == 121) {
                break;
              }
              if (v42 == ++v218)
              {
                char v45 = 0;
                unsigned int v48 = v8 - 3;
                goto LABEL_65;
              }
            }
            char v45 = 1;
            unsigned int v48 = v218;
          }
        }
        else
        {
          unsigned int v48 = 0;
        }
LABEL_65:
        if ((int)(v48 + 1) >= (int)v42) {
          goto LABEL_19;
        }
        int v49 = v13[v48 + 1];
        unsigned int v50 = (((v49 - 97) >> 1) | (((_BYTE)v49 - 97) << 7));
        BOOL v23 = v50 > 0xA;
        int v51 = (1 << v50) & 0x495;
        if (!v23 && v51 != 0) {
          goto LABEL_70;
        }
        if (v49 != 121) {
          char v45 = 1;
        }
        if ((v45 & 1) == 0)
        {
LABEL_70:
          uint64_t v53 = v48 + 2;
          if ((int)v42 <= (int)v53) {
            goto LABEL_19;
          }
          int v54 = &v13[v53];
          while (1)
          {
            char v55 = *v54++;
            unsigned int v56 = (((v55 - 97) >> 1) | ((v55 - 97) << 7));
            BOOL v23 = v56 > 0xA;
            int v57 = (1 << v56) & 0x495;
            if (v23 || v57 == 0) {
              break;
            }
            LODWORD(v53) = v53 + 1;
            if ((int)v42 <= (int)v53) {
              goto LABEL_19;
            }
          }
        }
        *(_WORD *)&v13[v42] = 25957;
        uint64_t v8 = (v8 - 1);
        goto LABEL_19;
      }
    }
    if (*(_WORD *)&v13[v16] != 25701) {
      goto LABEL_19;
    }
    uint64_t v65 = 0;
    while (1)
    {
      int v66 = v13[v65];
      unsigned int v67 = (((v66 - 97) >> 1) | (((_BYTE)v66 - 97) << 7));
      BOOL v23 = v67 > 0xA;
      int v68 = (1 << v67) & 0x495;
      BOOL v69 = v23 || v68 == 0;
      if (!v69 || v65 && v66 == 121) {
        break;
      }
      if (v16 == ++v65) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    if (v17 != 110 || v8 < 4) {
      goto LABEL_19;
    }
    uint64_t v16 = (v8 - 3);
    if (*(_WORD *)&v13[v16] != 28265 || v13[v16 + 2] != 103) {
      goto LABEL_19;
    }
    uint64_t v60 = 0;
    while (1)
    {
      int v61 = v13[v60];
      unsigned int v62 = (((v61 - 97) >> 1) | (((_BYTE)v61 - 97) << 7));
      BOOL v23 = v62 > 0xA;
      int v63 = (1 << v62) & 0x495;
      BOOL v64 = v23 || v63 == 0;
      if (!v64 || v60 && v61 == 121) {
        break;
      }
      if (v16 == ++v60) {
        goto LABEL_19;
      }
    }
  }
  int v70 = &v13[(int)v16];
  int v73 = (char)*(v70 - 2);
  unint64_t v72 = v70 - 2;
  int v71 = v73;
  if (v73 == 105)
  {
    if ((int)v16 >= 3 && *(_WORD *)v72 == 31337)
    {
      char v74 = "ize";
      goto LABEL_367;
    }
  }
  else if (v71 == 98)
  {
    if ((int)v16 >= 3 && *(_WORD *)v72 == 27746)
    {
      char v74 = "ble";
      goto LABEL_367;
    }
  }
  else if (v71 == 97 && (int)v16 >= 3 && *(_WORD *)v72 == 29793)
  {
    char v74 = "ate";
LABEL_367:
    *(_WORD *)unint64_t v72 = *(_WORD *)v74;
    v72[2] = v74[2];
    uint64_t v8 = (v16 + 1);
    goto LABEL_19;
  }
  uint64_t v8 = (int)v16 - 1;
  int v150 = v13[v8];
  unsigned int v151 = (((v150 - 97) >> 1) | (((_BYTE)v150 - 97) << 7));
  BOOL v23 = v151 > 0xA;
  int v152 = (1 << v151) & 0x495;
  BOOL v153 = v23 || v152 == 0;
  if (!v153 || (v150 - 108) <= 0xE && ((1 << (v150 - 108)) & 0x4081) != 0 || v150 != v71)
  {
    if (!sub_1B0DC5464(v13, v16) || (int)v16 < 1 || (v150 - 122) > 0xFCu) {
      goto LABEL_276;
    }
    int v154 = 0;
    char v155 = 0;
    int v156 = v13;
    uint64_t v157 = v16;
    do
    {
      int v161 = *v156++;
      int v160 = v161;
      unsigned __int8 v162 = ((v161 - 97) >> 1) | (((_BYTE)v161 - 97) << 7);
      if (v162 < 0xBu && ((0x495u >> v162) & 1) != 0)
      {
        int v159 = 1;
      }
      else
      {
        if (v154) {
          BOOL v158 = v160 == 121;
        }
        else {
          BOOL v158 = 0;
        }
        int v159 = v158;
      }
      int v154 = v159 ^ 1;
      char v155 = v154 | (2 * v155);
      --v157;
    }
    while (v157);
    if ((v155 & 7) == 5)
    {
      uint64_t v8 = (v16 + 1);
      v13[(int)v16] = 101;
    }
    else
    {
LABEL_276:
      uint64_t v8 = v16;
    }
  }
LABEL_19:
  uint64_t v19 = (int)v8 - 1;
  if ((int)v8 > 1 && v13[v19] == 121)
  {
    uint64_t v20 = 0;
    while (1)
    {
      int v21 = v13[v20];
      unsigned int v22 = (((v21 - 97) >> 1) | (((_BYTE)v21 - 97) << 7));
      BOOL v23 = v22 > 0xA;
      int v24 = (1 << v22) & 0x495;
      BOOL v25 = v23 || v24 == 0;
      if (!v25 || v20 && v21 == 121) {
        break;
      }
      if (v19 == ++v20) {
        goto LABEL_31;
      }
    }
    v13[v19] = 105;
  }
LABEL_31:
  switch(v13[(int)v8 - 2])
  {
    case 'a':
      if ((int)v8 < 8)
      {
        if (v8 != 7) {
          goto LABEL_439;
        }
        goto LABEL_236;
      }
      uint64_t v26 = (v8 - 7);
      char v27 = &v13[v26];
      if (*(_DWORD *)&v13[v26] != 1869182049 || *(_DWORD *)&v13[v26 + 3] != 1818324591)
      {
LABEL_236:
        uint64_t v144 = (v8 - 6);
        uint64_t v145 = &v13[v144];
        BOOL v146 = *(_DWORD *)&v13[v144] == 1852795252 && *(_WORD *)&v13[v144 + 4] == 27745;
        if (v146 && sub_1B0DC5A60(v13, v144))
        {
          *uint64_t v145 = 1852795252;
          uint64_t v8 = (int)v8 - 2;
        }
        goto LABEL_439;
      }
      unsigned int v29 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v29 <= 0xA && (char v30 = 1, ((1 << v29) & 0x495) != 0))
      {
        unsigned int v31 = 0;
      }
      else
      {
        unsigned int v31 = 1;
        if (v8 == 8)
        {
          char v30 = 0;
        }
        else
        {
          uint64_t v379 = 1;
          while (1)
          {
            int v380 = v13[v379];
            unsigned int v381 = (((v380 - 97) >> 1) | (((_BYTE)v380 - 97) << 7));
            BOOL v23 = v381 > 0xA;
            int v382 = (1 << v381) & 0x495;
            BOOL v383 = v23 || v382 == 0;
            if (!v383 || v380 == 121) {
              break;
            }
            if (v26 == ++v379)
            {
              char v30 = 0;
              unsigned int v31 = v8 - 7;
              goto LABEL_41;
            }
          }
          char v30 = 1;
          unsigned int v31 = v379;
        }
      }
LABEL_41:
      if ((int)(v31 + 1) < (int)v26)
      {
        int v32 = v13[v31 + 1];
        unsigned int v33 = (((v32 - 97) >> 1) | (((_BYTE)v32 - 97) << 7));
        BOOL v23 = v33 > 0xA;
        int v34 = (1 << v33) & 0x495;
        if (!v23 && v34 != 0) {
          goto LABEL_46;
        }
        if (v32 != 121) {
          char v30 = 1;
        }
        if ((v30 & 1) == 0)
        {
LABEL_46:
          uint64_t v36 = v31 + 2;
          if ((int)v26 <= (int)v36) {
            goto LABEL_439;
          }
          BOOL v37 = &v13[v36];
          while (1)
          {
            char v38 = *v37++;
            unsigned int v39 = (((v38 - 97) >> 1) | ((v38 - 97) << 7));
            BOOL v23 = v39 > 0xA;
            int v40 = (1 << v39) & 0x495;
            if (v23 || v40 == 0) {
              break;
            }
            LODWORD(v36) = v36 + 1;
            if ((int)v26 <= (int)v36) {
              goto LABEL_439;
            }
          }
        }
        v27[2] = 101;
        __int16 v223 = 29793;
        goto LABEL_420;
      }
      goto LABEL_439;
    case 'c':
      if ((int)v8 < 5) {
        goto LABEL_439;
      }
      uint64_t v75 = (v8 - 4);
      if (*(_DWORD *)&v13[v75] != 1768124005)
      {
        if (*(_DWORD *)&v13[v75] == 1768124001 && sub_1B0DC5A60(v13, (int)v8 - 4)) {
          *(_DWORD *)&v13[v75] = 1701015137;
        }
        goto LABEL_439;
      }
      unsigned int v166 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v166 <= 0xA)
      {
        char v167 = 1;
        if (((1 << v166) & 0x495) != 0)
        {
          unsigned int v168 = 0;
          goto LABEL_291;
        }
      }
      unsigned int v168 = 1;
      if (v8 == 5)
      {
        char v167 = 0;
        goto LABEL_291;
      }
      uint64_t v399 = 1;
      while (1)
      {
        int v400 = v13[v399];
        unsigned int v401 = (((v400 - 97) >> 1) | (((_BYTE)v400 - 97) << 7));
        BOOL v23 = v401 > 0xA;
        int v402 = (1 << v401) & 0x495;
        BOOL v403 = v23 || v402 == 0;
        if (!v403 || v400 == 121) {
          break;
        }
        if (v75 == ++v399)
        {
          char v167 = 0;
          unsigned int v168 = v8 - 4;
          goto LABEL_291;
        }
      }
      char v167 = 1;
      unsigned int v168 = v399;
LABEL_291:
      if ((int)(v168 + 1) >= (int)v75) {
        goto LABEL_439;
      }
      int v169 = v13[v168 + 1];
      unsigned int v170 = (((v169 - 97) >> 1) | (((_BYTE)v169 - 97) << 7));
      BOOL v23 = v170 > 0xA;
      int v171 = (1 << v170) & 0x495;
      if (!v23 && v171 != 0) {
        goto LABEL_296;
      }
      if (v169 != 121) {
        char v167 = 1;
      }
      if ((v167 & 1) == 0)
      {
LABEL_296:
        uint64_t v173 = v168 + 2;
        if ((int)v75 <= (int)v173) {
          goto LABEL_439;
        }
        unsigned int v174 = &v13[v173];
        while (1)
        {
          char v175 = *v174++;
          unsigned int v176 = (((v175 - 97) >> 1) | ((v175 - 97) << 7));
          BOOL v23 = v176 > 0xA;
          int v177 = (1 << v176) & 0x495;
          if (v23 || v177 == 0) {
            break;
          }
          LODWORD(v173) = v173 + 1;
          if ((int)v75 <= (int)v173) {
            goto LABEL_439;
          }
        }
      }
      *(_DWORD *)&v13[v75] = 1701015141;
      goto LABEL_439;
    case 'e':
      if ((int)v8 < 5) {
        goto LABEL_439;
      }
      uint64_t v76 = (v8 - 4);
      int v77 = &v13[v76];
      if (*(_DWORD *)&v13[v76] != 1919253097) {
        goto LABEL_439;
      }
      unsigned int v78 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v78 <= 0xA)
      {
        char v79 = 1;
        if (((1 << v78) & 0x495) != 0)
        {
          unsigned int v80 = 0;
          goto LABEL_120;
        }
      }
      unsigned int v80 = 1;
      if (v8 == 5)
      {
        char v79 = 0;
        goto LABEL_120;
      }
      uint64_t v384 = 1;
      while (1)
      {
        int v385 = v13[v384];
        unsigned int v386 = (((v385 - 97) >> 1) | (((_BYTE)v385 - 97) << 7));
        BOOL v23 = v386 > 0xA;
        int v387 = (1 << v386) & 0x495;
        BOOL v388 = v23 || v387 == 0;
        if (!v388 || v385 == 121) {
          break;
        }
        if (v76 == ++v384)
        {
          char v79 = 0;
          unsigned int v80 = v8 - 4;
          goto LABEL_120;
        }
      }
      char v79 = 1;
      unsigned int v80 = v384;
LABEL_120:
      if ((int)(v80 + 1) >= (int)v76) {
        goto LABEL_439;
      }
      int v81 = v13[v80 + 1];
      unsigned int v82 = (((v81 - 97) >> 1) | (((_BYTE)v81 - 97) << 7));
      BOOL v23 = v82 > 0xA;
      int v83 = (1 << v82) & 0x495;
      if (v23 || v83 == 0)
      {
        if (v81 != 121) {
          char v79 = 1;
        }
        if (v79) {
          goto LABEL_410;
        }
      }
      uint64_t v85 = v80 + 2;
      if ((int)v76 <= (int)v85) {
        goto LABEL_439;
      }
      uint64_t v86 = &v13[v85];
      while (1)
      {
        char v87 = *v86++;
        unsigned int v88 = (((v87 - 97) >> 1) | ((v87 - 97) << 7));
        BOOL v23 = v88 > 0xA;
        int v89 = (1 << v88) & 0x495;
        if (v23 || v89 == 0) {
          break;
        }
        LODWORD(v85) = v85 + 1;
        if ((int)v76 <= (int)v85) {
          goto LABEL_439;
        }
      }
LABEL_410:
      v77[2] = 101;
      __int16 v224 = 31337;
      goto LABEL_415;
    case 'g':
      if ((int)v8 < 5) {
        goto LABEL_439;
      }
      uint64_t v91 = (v8 - 4);
      int v77 = &v13[v91];
      if (*(_DWORD *)&v13[v91] != 1768386412) {
        goto LABEL_439;
      }
      unsigned int v92 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v92 <= 0xA)
      {
        char v93 = 1;
        if (((1 << v92) & 0x495) != 0)
        {
          unsigned int v94 = 0;
          goto LABEL_138;
        }
      }
      unsigned int v94 = 1;
      if (v8 == 5)
      {
        char v93 = 0;
        goto LABEL_138;
      }
      uint64_t v389 = 1;
      while (1)
      {
        int v390 = v13[v389];
        unsigned int v391 = (((v390 - 97) >> 1) | (((_BYTE)v390 - 97) << 7));
        BOOL v23 = v391 > 0xA;
        int v392 = (1 << v391) & 0x495;
        BOOL v393 = v23 || v392 == 0;
        if (!v393 || v390 == 121) {
          break;
        }
        if (v91 == ++v389)
        {
          char v93 = 0;
          unsigned int v94 = v8 - 4;
          goto LABEL_138;
        }
      }
      char v93 = 1;
      unsigned int v94 = v389;
LABEL_138:
      if ((int)(v94 + 1) >= (int)v91) {
        goto LABEL_439;
      }
      int v95 = v13[v94 + 1];
      unsigned int v96 = (((v95 - 97) >> 1) | (((_BYTE)v95 - 97) << 7));
      BOOL v23 = v96 > 0xA;
      int v97 = (1 << v96) & 0x495;
      if (v23 || v97 == 0)
      {
        if (v95 != 121) {
          char v93 = 1;
        }
        if (v93) {
          goto LABEL_414;
        }
      }
      uint64_t v99 = v94 + 2;
      if ((int)v91 > (int)v99)
      {
        long long v100 = &v13[v99];
        while (1)
        {
          char v101 = *v100++;
          unsigned int v102 = (((v101 - 97) >> 1) | ((v101 - 97) << 7));
          BOOL v23 = v102 > 0xA;
          int v103 = (1 << v102) & 0x495;
          if (v23 || v103 == 0) {
            break;
          }
          LODWORD(v99) = v99 + 1;
          if ((int)v91 <= (int)v99) {
            goto LABEL_439;
          }
        }
LABEL_414:
        v77[2] = 103;
        __int16 v224 = 28524;
LABEL_415:
        *(_WORD *)int v77 = v224;
        uint64_t v8 = (int)v8 - 1;
      }
      goto LABEL_439;
    case 'l':
      uint64_t v105 = (v8 - 4);
      if ((int)v8 < 4) {
        goto LABEL_439;
      }
      uint64_t v106 = (v8 - 3);
      unint64_t v107 = &v13[v106];
      if (*(_WORD *)&v13[v106] != 27746 || v13[v106 + 2] != 105)
      {
        uint64_t v109 = (v8 - 5);
        if (v8 < 5) {
          goto LABEL_281;
        }
        if (*(_DWORD *)&v13[v105] == 1768713313)
        {
          if (sub_1B0DC5A60(v13, (int)v8 - 4))
          {
            *(_WORD *)&v13[v105] = 27745;
            uint64_t v8 = (int)v8 - 2;
          }
          goto LABEL_439;
        }
        if (v8 < 6)
        {
LABEL_281:
          if (*(_WORD *)v107 != 27749 || v107[2] != 105) {
            goto LABEL_439;
          }
          goto LABEL_286;
        }
        uint64_t v110 = &v13[v109];
        if (*(_DWORD *)&v13[v109] != 1819569765 || v13[v109 + 4] != 105)
        {
          if (*(_WORD *)v107 != 27749 || v107[2] != 105)
          {
            BOOL v113 = *(_DWORD *)v110 == 1819506031 && v110[4] == 105;
            if (v113 && sub_1B0DC5A60(v13, (int)v8 - 5))
            {
              v110[2] = 115;
              __int16 v114 = 30063;
              goto LABEL_358;
            }
            goto LABEL_439;
          }
LABEL_286:
          if (sub_1B0DC5A60(v13, v106))
          {
            *unint64_t v107 = 101;
            uint64_t v8 = (int)v8 - 2;
          }
          goto LABEL_439;
        }
        if (!sub_1B0DC5A60(v13, (int)v8 - 5)) {
          goto LABEL_439;
        }
        v110[2] = 116;
        __int16 v114 = 28261;
LABEL_358:
        *(_WORD *)uint64_t v110 = v114;
        uint64_t v8 = (int)v8 - 2;
        goto LABEL_439;
      }
      unsigned int v179 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v179 <= 0xA && (char v180 = 1, ((1 << v179) & 0x495) != 0))
      {
        unsigned int v181 = 0;
      }
      else
      {
        unsigned int v181 = 1;
        if (v8 == 4)
        {
          char v180 = 0;
        }
        else
        {
          uint64_t v404 = 1;
          while (1)
          {
            int v405 = v13[v404];
            unsigned int v406 = (((v405 - 97) >> 1) | (((_BYTE)v405 - 97) << 7));
            BOOL v23 = v406 > 0xA;
            int v407 = (1 << v406) & 0x495;
            BOOL v408 = v23 || v407 == 0;
            if (!v408 || v405 == 121) {
              break;
            }
            if (v106 == ++v404)
            {
              char v180 = 0;
              unsigned int v181 = v8 - 3;
              goto LABEL_307;
            }
          }
          char v180 = 1;
          unsigned int v181 = v404;
        }
      }
LABEL_307:
      if ((int)(v181 + 1) >= (int)v106) {
        goto LABEL_439;
      }
      int v182 = v13[v181 + 1];
      unsigned int v183 = (((v182 - 97) >> 1) | (((_BYTE)v182 - 97) << 7));
      BOOL v23 = v183 > 0xA;
      int v184 = (1 << v183) & 0x495;
      if (!v23 && v184 != 0) {
        goto LABEL_312;
      }
      if (v182 != 121) {
        char v180 = 1;
      }
      if ((v180 & 1) == 0)
      {
LABEL_312:
        uint64_t v186 = v181 + 2;
        if ((int)v106 <= (int)v186) {
          goto LABEL_439;
        }
        uint64_t v187 = &v13[v186];
        while (1)
        {
          char v188 = *v187++;
          unsigned int v189 = (((v188 - 97) >> 1) | ((v188 - 97) << 7));
          BOOL v23 = v189 > 0xA;
          int v190 = (1 << v189) & 0x495;
          if (v23 || v190 == 0) {
            break;
          }
          LODWORD(v186) = v186 + 1;
          if ((int)v106 <= (int)v186) {
            goto LABEL_439;
          }
        }
      }
      v107[2] = 101;
      *(_WORD *)unint64_t v107 = 27746;
      goto LABEL_439;
    case 'o':
      if ((int)v8 < 8)
      {
        if ((int)v8 < 6)
        {
          if (v8 != 5) {
            goto LABEL_439;
          }
          goto LABEL_278;
        }
LABEL_244:
        uint64_t v147 = (v8 - 5);
        unint64_t v148 = &v13[v147];
        if (*(_DWORD *)&v13[v147] == 1869182049 && v13[v147 + 4] == 110)
        {
          if (sub_1B0DC5A60(v13, v147))
          {
            v148[2] = 101;
            *(_WORD *)unint64_t v148 = 29793;
            uint64_t v8 = (int)v8 - 2;
          }
          goto LABEL_439;
        }
LABEL_278:
        uint64_t v163 = (v8 - 4);
        unint64_t v164 = &v13[v163];
        if (*(_DWORD *)&v13[v163] == 1919906913 && sub_1B0DC5A60(v13, v163))
        {
          v164[2] = 101;
          *(_WORD *)unint64_t v164 = 29793;
          uint64_t v8 = (int)v8 - 1;
        }
        goto LABEL_439;
      }
      uint64_t v115 = (v8 - 7);
      char v27 = &v13[v115];
      if (*(_DWORD *)&v13[v115] != 1952545385 || *(_DWORD *)&v13[v115 + 3] != 1852795252) {
        goto LABEL_244;
      }
      unsigned int v117 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v117 <= 0xA && (char v118 = 1, ((1 << v117) & 0x495) != 0))
      {
        unsigned int v119 = 0;
      }
      else
      {
        unsigned int v119 = 1;
        if (v8 == 8)
        {
          char v118 = 0;
        }
        else
        {
          uint64_t v394 = 1;
          while (1)
          {
            int v395 = v13[v394];
            unsigned int v396 = (((v395 - 97) >> 1) | (((_BYTE)v395 - 97) << 7));
            BOOL v23 = v396 > 0xA;
            int v397 = (1 << v396) & 0x495;
            BOOL v398 = v23 || v397 == 0;
            if (!v398 || v395 == 121) {
              break;
            }
            if (v115 == ++v394)
            {
              char v118 = 0;
              unsigned int v119 = v8 - 7;
              goto LABEL_183;
            }
          }
          char v118 = 1;
          unsigned int v119 = v394;
        }
      }
LABEL_183:
      if ((int)(v119 + 1) >= (int)v115) {
        goto LABEL_439;
      }
      int v120 = v13[v119 + 1];
      unsigned int v121 = (((v120 - 97) >> 1) | (((_BYTE)v120 - 97) << 7));
      BOOL v23 = v121 > 0xA;
      int v122 = (1 << v121) & 0x495;
      if (!v23 && v122 != 0) {
        goto LABEL_188;
      }
      if (v120 != 121) {
        char v118 = 1;
      }
      if ((v118 & 1) == 0)
      {
LABEL_188:
        uint64_t v124 = v119 + 2;
        if ((int)v115 <= (int)v124) {
          goto LABEL_439;
        }
        unint64_t v125 = &v13[v124];
        while (1)
        {
          char v126 = *v125++;
          unsigned int v127 = (((v126 - 97) >> 1) | ((v126 - 97) << 7));
          BOOL v23 = v127 > 0xA;
          int v128 = (1 << v127) & 0x495;
          if (v23 || v128 == 0) {
            break;
          }
          LODWORD(v124) = v124 + 1;
          if ((int)v115 <= (int)v124) {
            goto LABEL_439;
          }
        }
      }
      v27[2] = 101;
      __int16 v223 = 31337;
LABEL_420:
      *(_WORD *)char v27 = v223;
      uint64_t v8 = (v8 - 4);
      goto LABEL_439;
    case 's':
      if ((int)v8 < 6) {
        goto LABEL_439;
      }
      uint64_t v130 = (v8 - 5);
      if (*(_DWORD *)&v13[v130] != 1936288865 || v13[v130 + 4] != 109)
      {
        if (v8 < 8) {
          goto LABEL_439;
        }
        uint64_t v132 = (v8 - 7);
        unint64_t v133 = &v13[v132];
        if (*(_DWORD *)&v13[v132] == 1852143209 && *(_DWORD *)&v13[v132 + 3] == 1936942446)
        {
          if (!sub_1B0DC5A60(v13, v132)) {
            goto LABEL_439;
          }
          v133[2] = 101;
          __int16 v137 = 30313;
        }
        else if (*(_DWORD *)v133 == 1852601702 && *(_DWORD *)(v133 + 3) == 1936942446)
        {
          if (!sub_1B0DC5A60(v13, v132)) {
            goto LABEL_439;
          }
          v133[2] = 108;
          __int16 v137 = 30054;
        }
        else
        {
          BOOL v136 = *(_DWORD *)v133 == 1853060463 && *(_DWORD *)(v133 + 3) == 1936942446;
          if (!v136 || !sub_1B0DC5A60(v13, v132)) {
            goto LABEL_439;
          }
          v133[2] = 115;
          __int16 v137 = 30063;
        }
        *(_WORD *)unint64_t v133 = v137;
        uint64_t v8 = (v8 - 4);
        goto LABEL_439;
      }
      unsigned int v192 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
      if (v192 <= 0xA && (char v193 = 1, ((1 << v192) & 0x495) != 0))
      {
        unsigned int v194 = 0;
      }
      else
      {
        unsigned int v194 = 1;
        if (v8 == 6)
        {
          char v193 = 0;
        }
        else
        {
          uint64_t v409 = 1;
          while (1)
          {
            int v410 = v13[v409];
            unsigned int v411 = (((v410 - 97) >> 1) | (((_BYTE)v410 - 97) << 7));
            BOOL v23 = v411 > 0xA;
            int v412 = (1 << v411) & 0x495;
            BOOL v413 = v23 || v412 == 0;
            if (!v413 || v410 == 121) {
              break;
            }
            if (v130 == ++v409)
            {
              char v193 = 0;
              unsigned int v194 = v8 - 5;
              goto LABEL_323;
            }
          }
          char v193 = 1;
          unsigned int v194 = v409;
        }
      }
LABEL_323:
      if ((int)(v194 + 1) >= (int)v130) {
        goto LABEL_439;
      }
      int v195 = v13[v194 + 1];
      unsigned int v196 = (((v195 - 97) >> 1) | (((_BYTE)v195 - 97) << 7));
      BOOL v23 = v196 > 0xA;
      int v197 = (1 << v196) & 0x495;
      if (!v23 && v197 != 0) {
        goto LABEL_328;
      }
      if (v195 != 121) {
        char v193 = 1;
      }
      if ((v193 & 1) == 0)
      {
LABEL_328:
        uint64_t v199 = v194 + 2;
        if ((int)v130 <= (int)v199) {
          goto LABEL_439;
        }
        unsigned int v200 = &v13[v199];
        while (1)
        {
          char v201 = *v200++;
          unsigned int v202 = (((v201 - 97) >> 1) | ((v201 - 97) << 7));
          BOOL v23 = v202 > 0xA;
          int v203 = (1 << v202) & 0x495;
          if (v23 || v203 == 0) {
            break;
          }
          LODWORD(v199) = v199 + 1;
          if ((int)v130 <= (int)v199) {
            goto LABEL_439;
          }
        }
      }
      *(_WORD *)&v13[v130] = 27745;
LABEL_438:
      uint64_t v8 = (v8 - 3);
      goto LABEL_439;
    case 't':
      uint64_t v138 = (v8 - 6);
      if ((int)v8 < 6) {
        goto LABEL_439;
      }
      uint64_t v139 = (v8 - 5);
      uint64_t v110 = &v13[v139];
      if (*(_DWORD *)&v13[v139] == 1953066081 && v13[v139 + 4] == 105)
      {
        unsigned int v205 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
        if (v205 <= 0xA)
        {
          char v206 = 1;
          if (((1 << v205) & 0x495) != 0)
          {
            unsigned int v207 = 0;
            goto LABEL_339;
          }
        }
        unsigned int v207 = 1;
        if (v8 == 6)
        {
          char v206 = 0;
          goto LABEL_339;
        }
        uint64_t v414 = 1;
        while (1)
        {
          int v415 = v13[v414];
          unsigned int v416 = (((v415 - 97) >> 1) | (((_BYTE)v415 - 97) << 7));
          BOOL v23 = v416 > 0xA;
          int v417 = (1 << v416) & 0x495;
          BOOL v418 = v23 || v417 == 0;
          if (!v418 || v415 == 121) {
            break;
          }
          if (v139 == ++v414)
          {
            char v206 = 0;
            unsigned int v207 = v8 - 5;
            goto LABEL_339;
          }
        }
        char v206 = 1;
        unsigned int v207 = v414;
LABEL_339:
        if ((int)(v207 + 1) >= (int)v139) {
          goto LABEL_439;
        }
        int v208 = v13[v207 + 1];
        unsigned int v209 = (((v208 - 97) >> 1) | (((_BYTE)v208 - 97) << 7));
        BOOL v23 = v209 > 0xA;
        int v210 = (1 << v209) & 0x495;
        if (!v23 && v210 != 0) {
          goto LABEL_344;
        }
        if (v208 != 121) {
          char v206 = 1;
        }
        if ((v206 & 1) == 0)
        {
LABEL_344:
          uint64_t v212 = v207 + 2;
          if ((int)v139 <= (int)v212) {
            goto LABEL_439;
          }
          uint64_t v213 = &v13[v212];
          while (1)
          {
            char v214 = *v213++;
            unsigned int v215 = (((v214 - 97) >> 1) | ((v214 - 97) << 7));
            BOOL v23 = v215 > 0xA;
            int v216 = (1 << v215) & 0x495;
            if (v23 || v216 == 0) {
              break;
            }
            LODWORD(v212) = v212 + 1;
            if ((int)v139 <= (int)v212) {
              goto LABEL_439;
            }
          }
        }
        __int16 v143 = 27745;
LABEL_437:
        *(_WORD *)uint64_t v110 = v143;
        goto LABEL_438;
      }
      if (*(_DWORD *)v110 == 1953068649 && v110[4] == 105)
      {
        if (!sub_1B0DC5A60(v13, v139)) {
          goto LABEL_439;
        }
        v110[2] = 101;
        __int16 v114 = 30313;
        goto LABEL_358;
      }
      if (v8 < 7)
      {
        uint64_t v8 = 6;
        goto LABEL_439;
      }
      uint64_t v110 = &v13[v138];
      BOOL v142 = *(_DWORD *)&v13[v138] == 1768712546 && *(_WORD *)&v13[v138 + 4] == 26996;
      if (v142 && sub_1B0DC5A60(v13, (int)v8 - 6))
      {
        v110[2] = 101;
        __int16 v143 = 27746;
        goto LABEL_437;
      }
LABEL_439:
      uint64_t v225 = (int)v8 - 2;
      switch(v13[v225])
      {
        case 'a':
          if ((int)v8 < 5) {
            break;
          }
          uint64_t v226 = (v8 - 4);
          if (*(_DWORD *)&v13[v226] != 1818321769) {
            break;
          }
          unsigned int v227 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
          if (v227 <= 0xA)
          {
            char v228 = 1;
            if (((1 << v227) & 0x495) != 0)
            {
              unsigned int v229 = 0;
              goto LABEL_445;
            }
          }
          unsigned int v229 = 1;
          if (v8 == 5)
          {
            char v228 = 0;
            goto LABEL_445;
          }
          uint64_t v349 = 1;
          while (1)
          {
            int v350 = v13[v349];
            unsigned int v351 = (((v350 - 97) >> 1) | (((_BYTE)v350 - 97) << 7));
            BOOL v23 = v351 > 0xA;
            int v352 = (1 << v351) & 0x495;
            BOOL v353 = v23 || v352 == 0;
            if (!v353 || v350 == 121) {
              break;
            }
            if (v226 == ++v349)
            {
              char v228 = 0;
              unsigned int v229 = v8 - 4;
              goto LABEL_445;
            }
          }
          char v228 = 1;
          unsigned int v229 = v349;
LABEL_445:
          if ((int)(v229 + 1) >= (int)v226) {
            break;
          }
          int v230 = v13[v229 + 1];
          unsigned int v231 = (((v230 - 97) >> 1) | (((_BYTE)v230 - 97) << 7));
          BOOL v23 = v231 > 0xA;
          int v232 = (1 << v231) & 0x495;
          if (v23 || v232 == 0)
          {
            if (v230 != 121) {
              char v228 = 1;
            }
            if (v228) {
              goto LABEL_586;
            }
          }
          uint64_t v234 = v229 + 2;
          if ((int)v226 > (int)v234)
          {
            unint64_t v235 = &v13[v234];
            while (1)
            {
              char v236 = *v235++;
              unsigned int v237 = (((v236 - 97) >> 1) | ((v236 - 97) << 7));
              BOOL v23 = v237 > 0xA;
              int v238 = (1 << v237) & 0x495;
              if (v23 || v238 == 0) {
                break;
              }
              LODWORD(v234) = v234 + 1;
              if ((int)v226 <= (int)v234) {
                goto LABEL_599;
              }
            }
LABEL_586:
            *(_WORD *)&v13[v226] = 25449;
            goto LABEL_598;
          }
          break;
        case 's':
          if ((int)v8 < 5) {
            break;
          }
          uint64_t v225 = (v8 - 4);
          if (*(_DWORD *)&v13[v225] != 1936942446) {
            break;
          }
          unsigned int v240 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
          if (v240 <= 0xA)
          {
            char v241 = 1;
            if (((1 << v240) & 0x495) != 0)
            {
              unsigned int v242 = 0;
              goto LABEL_463;
            }
          }
          unsigned int v242 = 1;
          if (v8 == 5)
          {
            char v241 = 0;
            goto LABEL_463;
          }
          uint64_t v354 = 1;
          while (1)
          {
            int v355 = v13[v354];
            unsigned int v356 = (((v355 - 97) >> 1) | (((_BYTE)v355 - 97) << 7));
            BOOL v23 = v356 > 0xA;
            int v357 = (1 << v356) & 0x495;
            BOOL v358 = v23 || v357 == 0;
            if (!v358 || v355 == 121) {
              break;
            }
            if (v225 == ++v354)
            {
              char v241 = 0;
              unsigned int v242 = v8 - 4;
              goto LABEL_463;
            }
          }
          char v241 = 1;
          unsigned int v242 = v354;
LABEL_463:
          if ((int)(v242 + 1) >= (int)v225) {
            break;
          }
          int v243 = v13[v242 + 1];
          unsigned int v244 = (((v243 - 97) >> 1) | (((_BYTE)v243 - 97) << 7));
          BOOL v23 = v244 > 0xA;
          int v245 = (1 << v244) & 0x495;
          if (v23 || v245 == 0)
          {
            if (v243 != 121) {
              char v241 = 1;
            }
            if (v241) {
              goto LABEL_598;
            }
          }
          uint64_t v247 = v242 + 2;
          if ((int)v225 <= (int)v247) {
            break;
          }
          uint64_t v248 = &v13[v247];
          while (1)
          {
            char v249 = *v248++;
            unsigned int v250 = (((v249 - 97) >> 1) | ((v249 - 97) << 7));
            BOOL v23 = v250 > 0xA;
            int v251 = (1 << v250) & 0x495;
            if (v23 || v251 == 0) {
              goto LABEL_598;
            }
            LODWORD(v247) = v247 + 1;
            if ((int)v225 <= (int)v247) {
              goto LABEL_599;
            }
          }
        case 't':
          if ((int)v8 < 6) {
            break;
          }
          uint64_t v253 = (v8 - 5);
          uint64_t v254 = &v13[v253];
          if (*(_DWORD *)&v13[v253] == 1952539497 && v13[v253 + 4] == 101)
          {
            unsigned int v300 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
            if (v300 <= 0xA && (char v301 = 1, ((1 << v300) & 0x495) != 0))
            {
              unsigned int v302 = 0;
            }
            else
            {
              unsigned int v302 = 1;
              if (v8 == 6)
              {
                char v301 = 0;
              }
              else
              {
                uint64_t v374 = 1;
                while (1)
                {
                  int v375 = v13[v374];
                  unsigned int v376 = (((v375 - 97) >> 1) | (((_BYTE)v375 - 97) << 7));
                  BOOL v23 = v376 > 0xA;
                  int v377 = (1 << v376) & 0x495;
                  BOOL v378 = v23 || v377 == 0;
                  if (!v378 || v375 == 121) {
                    break;
                  }
                  if (v253 == ++v374)
                  {
                    char v301 = 0;
                    unsigned int v302 = v8 - 5;
                    goto LABEL_558;
                  }
                }
                char v301 = 1;
                unsigned int v302 = v374;
              }
            }
LABEL_558:
            if ((int)(v302 + 1) < (int)v253)
            {
              int v303 = v13[v302 + 1];
              unsigned int v304 = (((v303 - 97) >> 1) | (((_BYTE)v303 - 97) << 7));
              BOOL v23 = v304 > 0xA;
              int v305 = (1 << v304) & 0x495;
              if (v23 || v305 == 0)
              {
                if (v303 != 121) {
                  char v301 = 1;
                }
                if (v301) {
                  goto LABEL_487;
                }
              }
              uint64_t v307 = v302 + 2;
              if ((int)v253 > (int)v307)
              {
                unsigned int v308 = &v13[v307];
                while (1)
                {
                  char v309 = *v308++;
                  unsigned int v310 = (((v309 - 97) >> 1) | ((v309 - 97) << 7));
                  BOOL v23 = v310 > 0xA;
                  int v311 = (1 << v310) & 0x495;
                  if (v23 || v311 == 0) {
                    break;
                  }
                  LODWORD(v307) = v307 + 1;
                  if ((int)v253 <= (int)v307) {
                    goto LABEL_599;
                  }
                }
LABEL_487:
                *(_WORD *)uint64_t v254 = 25449;
                goto LABEL_488;
              }
            }
          }
          else
          {
            BOOL v256 = *(_DWORD *)v254 == 1953063785 && v254[4] == 105;
            if (v256 && sub_1B0DC5A60(v13, v253)) {
              goto LABEL_487;
            }
          }
          break;
        case 'u':
          if ((int)v8 < 4) {
            break;
          }
          uint64_t v225 = (v8 - 3);
          if (*(_WORD *)&v13[v225] != 30054 || v13[v225 + 2] != 108) {
            break;
          }
          unsigned int v258 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
          if (v258 <= 0xA)
          {
            char v259 = 1;
            if (((1 << v258) & 0x495) != 0)
            {
              unsigned int v260 = 0;
              goto LABEL_498;
            }
          }
          unsigned int v260 = 1;
          if (v8 == 4)
          {
            char v259 = 0;
            goto LABEL_498;
          }
          uint64_t v359 = 1;
          while (1)
          {
            int v360 = v13[v359];
            unsigned int v361 = (((v360 - 97) >> 1) | (((_BYTE)v360 - 97) << 7));
            BOOL v23 = v361 > 0xA;
            int v362 = (1 << v361) & 0x495;
            BOOL v363 = v23 || v362 == 0;
            if (!v363 || v360 == 121) {
              break;
            }
            if (v225 == ++v359)
            {
              char v259 = 0;
              unsigned int v260 = v8 - 3;
              goto LABEL_498;
            }
          }
          char v259 = 1;
          unsigned int v260 = v359;
LABEL_498:
          if ((int)(v260 + 1) >= (int)v225) {
            break;
          }
          int v261 = v13[v260 + 1];
          unsigned int v262 = (((v261 - 97) >> 1) | (((_BYTE)v261 - 97) << 7));
          BOOL v23 = v262 > 0xA;
          int v263 = (1 << v262) & 0x495;
          if (v23 || v263 == 0)
          {
            if (v261 != 121) {
              char v259 = 1;
            }
            if (v259) {
              goto LABEL_598;
            }
          }
          uint64_t v265 = v260 + 2;
          if ((int)v225 <= (int)v265) {
            break;
          }
          uint64_t v266 = &v13[v265];
          while (1)
          {
            char v267 = *v266++;
            unsigned int v268 = (((v267 - 97) >> 1) | ((v267 - 97) << 7));
            BOOL v23 = v268 > 0xA;
            int v269 = (1 << v268) & 0x495;
            if (v23 || v269 == 0) {
              goto LABEL_598;
            }
            LODWORD(v265) = v265 + 1;
            if ((int)v225 <= (int)v265) {
              goto LABEL_599;
            }
          }
        case 'v':
          if ((int)v8 < 6) {
            break;
          }
          uint64_t v225 = (v8 - 5);
          if (*(_DWORD *)&v13[v225] != 1986622561 || v13[v225 + 4] != 101) {
            break;
          }
          unsigned int v272 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
          if (v272 <= 0xA)
          {
            char v273 = 1;
            if (((1 << v272) & 0x495) != 0)
            {
              unsigned int v274 = 0;
              goto LABEL_520;
            }
          }
          unsigned int v274 = 1;
          if (v8 == 6)
          {
            char v273 = 0;
            goto LABEL_520;
          }
          uint64_t v364 = 1;
          while (1)
          {
            int v365 = v13[v364];
            unsigned int v366 = (((v365 - 97) >> 1) | (((_BYTE)v365 - 97) << 7));
            BOOL v23 = v366 > 0xA;
            int v367 = (1 << v366) & 0x495;
            BOOL v368 = v23 || v367 == 0;
            if (!v368 || v365 == 121) {
              break;
            }
            if (v225 == ++v364)
            {
              char v273 = 0;
              unsigned int v274 = v8 - 5;
              goto LABEL_520;
            }
          }
          char v273 = 1;
          unsigned int v274 = v364;
LABEL_520:
          if ((int)(v274 + 1) >= (int)v225) {
            break;
          }
          int v275 = v13[v274 + 1];
          unsigned int v276 = (((v275 - 97) >> 1) | (((_BYTE)v275 - 97) << 7));
          BOOL v23 = v276 > 0xA;
          int v277 = (1 << v276) & 0x495;
          if (v23 || v277 == 0)
          {
            if (v275 != 121) {
              char v273 = 1;
            }
            if (v273) {
              goto LABEL_598;
            }
          }
          uint64_t v279 = v274 + 2;
          if ((int)v225 > (int)v279)
          {
            uint64_t v280 = &v13[v279];
            while (1)
            {
              char v281 = *v280++;
              unsigned int v282 = (((v281 - 97) >> 1) | ((v281 - 97) << 7));
              BOOL v23 = v282 > 0xA;
              int v283 = (1 << v282) & 0x495;
              if (v23 || v283 == 0) {
                break;
              }
              LODWORD(v279) = v279 + 1;
              if ((int)v225 <= (int)v279) {
                goto LABEL_599;
              }
            }
LABEL_598:
            uint64_t v8 = v225;
          }
          break;
        case 'z':
          if ((int)v8 < 6) {
            break;
          }
          uint64_t v285 = (v8 - 5);
          if (*(_DWORD *)&v13[v285] != 2053729377 || v13[v285 + 4] != 101) {
            break;
          }
          unsigned int v287 = (((*v13 - 97) >> 1) | ((*v13 - 97) << 7));
          if (v287 <= 0xA)
          {
            char v288 = 1;
            if (((1 << v287) & 0x495) != 0)
            {
              unsigned int v289 = 0;
              goto LABEL_542;
            }
          }
          unsigned int v289 = 1;
          if (v8 == 6)
          {
            char v288 = 0;
            goto LABEL_542;
          }
          uint64_t v369 = 1;
          while (1)
          {
            int v370 = v13[v369];
            unsigned int v371 = (((v370 - 97) >> 1) | (((_BYTE)v370 - 97) << 7));
            BOOL v23 = v371 > 0xA;
            int v372 = (1 << v371) & 0x495;
            BOOL v373 = v23 || v372 == 0;
            if (!v373 || v370 == 121) {
              break;
            }
            if (v285 == ++v369)
            {
              char v288 = 0;
              unsigned int v289 = v8 - 5;
              goto LABEL_542;
            }
          }
          char v288 = 1;
          unsigned int v289 = v369;
LABEL_542:
          if ((int)(v289 + 1) >= (int)v285) {
            break;
          }
          int v290 = v13[v289 + 1];
          unsigned int v291 = (((v290 - 97) >> 1) | (((_BYTE)v290 - 97) << 7));
          BOOL v23 = v291 > 0xA;
          int v292 = (1 << v291) & 0x495;
          if (v23 || v292 == 0)
          {
            if (v290 != 121) {
              char v288 = 1;
            }
            if (v288) {
              goto LABEL_704;
            }
          }
          uint64_t v294 = v289 + 2;
          if ((int)v285 > (int)v294)
          {
            uint64_t v295 = &v13[v294];
            while (1)
            {
              char v296 = *v295++;
              unsigned int v297 = (((v296 - 97) >> 1) | ((v296 - 97) << 7));
              BOOL v23 = v297 > 0xA;
              int v298 = (1 << v297) & 0x495;
              if (v23 || v298 == 0) {
                break;
              }
              LODWORD(v294) = v294 + 1;
              if ((int)v285 <= (int)v294) {
                goto LABEL_599;
              }
            }
LABEL_704:
            *(_WORD *)&v13[v285] = 27745;
LABEL_488:
            uint64_t v8 = (v8 - 3);
          }
          break;
        default:
          break;
      }
LABEL_599:
      uint64_t v313 = (int)v8 - 2;
      switch(v13[v313])
      {
        case 'a':
          if ((int)v8 >= 3)
          {
            int v314 = *(unsigned __int16 *)&v13[v313];
            int v315 = 27745;
            goto LABEL_658;
          }
          goto LABEL_661;
        case 'c':
          if ((int)v8 >= 5)
          {
            uint64_t v316 = (v8 - 4);
            uint64_t v313 = v316;
            if (*(_DWORD *)&v13[v316] == 1701015137) {
              goto LABEL_659;
            }
            int v315 = *(_DWORD *)&v13[v316];
            int v314 = 1701015141;
            goto LABEL_658;
          }
          goto LABEL_661;
        case 'e':
          if ((int)v8 >= 3)
          {
            int v314 = *(unsigned __int16 *)&v13[v313];
            int v315 = 29285;
            goto LABEL_658;
          }
          goto LABEL_661;
        case 'i':
          if ((int)v8 >= 3)
          {
            int v314 = *(unsigned __int16 *)&v13[v313];
            int v315 = 25449;
            goto LABEL_658;
          }
          goto LABEL_661;
        case 'l':
          if ((int)v8 >= 5)
          {
            uint64_t v317 = (v8 - 4);
            uint64_t v313 = v317;
            if (*(_DWORD *)&v13[v317] == 1701601889) {
              goto LABEL_659;
            }
            int v315 = *(_DWORD *)&v13[v317];
            int v314 = 1701601897;
            goto LABEL_658;
          }
          goto LABEL_661;
        case 'n':
          if ((int)v8 < 4) {
            goto LABEL_661;
          }
          uint64_t v313 = (v8 - 3);
          v318 = (unsigned __int16 *)&v13[v313];
          if (*(_WORD *)&v13[v313] == 28257 && v13[v313 + 2] == 116) {
            goto LABEL_659;
          }
          if (v8 < 6)
          {
            if (v8 != 5)
            {
LABEL_692:
              int v347 = *v318;
              int v330 = *((unsigned __int8 *)v318 + 2);
              BOOL v331 = v347 == 28261;
              int v332 = 116;
              goto LABEL_693;
            }
          }
          else
          {
            uint64_t v320 = (v8 - 5);
            if (*(_DWORD *)&v13[v320] == 1852140901 && v13[v320 + 4] == 116)
            {
              uint64_t v313 = (v8 - 5);
              if (sub_1B0DC5764(v13, (int)v8 - 5)) {
                goto LABEL_660;
              }
              goto LABEL_661;
            }
          }
          if (*(_DWORD *)&v13[(v8 - 4)] != 1953391981) {
            goto LABEL_692;
          }
          uint64_t v313 = (v8 - 4);
          if (sub_1B0DC5764(v13, (int)v8 - 4)) {
LABEL_660:
          }
            uint64_t v8 = v313;
LABEL_661:
          uint64_t v336 = (int)v8 - 1;
          if (v13[v336] == 101)
          {
            if (sub_1B0DC5764(v13, (int)v8 - 1)) {
              goto LABEL_663;
            }
            if (sub_1B0DC5464(v13, (int)v8 - 1))
            {
              if ((int)v8 < 2 || v13[(int)v8 - 2] - 122 > 0xFFFFFFFC) {
                goto LABEL_663;
              }
              int v338 = 0;
              char v339 = 0;
              int v340 = v13;
              uint64_t v341 = v336;
              do
              {
                int v345 = *v340++;
                int v344 = v345;
                unsigned __int8 v346 = ((v345 - 97) >> 1) | (((_BYTE)v345 - 97) << 7);
                if (v346 < 0xBu && ((0x495u >> v346) & 1) != 0)
                {
                  int v343 = 1;
                }
                else
                {
                  if (v338) {
                    BOOL v342 = v344 == 121;
                  }
                  else {
                    BOOL v342 = 0;
                  }
                  int v343 = v342;
                }
                int v338 = v343 ^ 1;
                char v339 = v338 | (2 * v339);
                --v341;
              }
              while (v341);
              if ((v339 & 7) != 5) {
LABEL_663:
              }
                uint64_t v8 = (int)v8 - 1;
            }
          }
          if ((int)v8 >= 2 && v13[(v8 - 1)] == 108 && v13[(v8 - 2)] == 108)
          {
            if (sub_1B0DC5764(v13, (int)v8 - 1)) {
              uint64_t v8 = (v8 - 1);
            }
            else {
              uint64_t v8 = v8;
            }
          }
          uint64_t v11 = *a1;
          int v12 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))a1[1];
          a2 = v9;
          int __src = v13;
LABEL_671:
          return v12(v11, a2, __src, v8, a5, a6);
        case 'o':
          if ((int)v8 < 4)
          {
            if (v8 != 3) {
              goto LABEL_661;
            }
          }
          else
          {
            uint64_t v322 = (v8 - 3);
            if (*(_WORD *)&v13[v322] == 28521 && v13[v322 + 2] == 110)
            {
              if (v13[(v8 - 4)] - 115 <= 1)
              {
                uint64_t v313 = (v8 - 3);
                if (sub_1B0DC5764(v13, (int)v8 - 3)) {
                  goto LABEL_660;
                }
              }
              goto LABEL_661;
            }
          }
          int v314 = *(unsigned __int16 *)&v13[v313];
          int v315 = 30063;
LABEL_658:
          if (v314 != v315) {
            goto LABEL_661;
          }
LABEL_659:
          if (!sub_1B0DC5764(v13, v313)) {
            goto LABEL_661;
          }
          goto LABEL_660;
        case 's':
          if ((int)v8 < 4) {
            goto LABEL_661;
          }
          uint64_t v313 = (v8 - 3);
          int v324 = v13[v313 + 2];
          BOOL v325 = *(unsigned __int16 *)&v13[v313] == 29545;
          int v326 = 109;
          goto LABEL_649;
        case 't':
          if ((int)v8 < 4) {
            goto LABEL_661;
          }
          uint64_t v313 = (v8 - 3);
          uint64_t v327 = (unsigned __int16 *)&v13[v313];
          if (*(_WORD *)&v13[v313] != 29793 || v13[v313 + 2] != 101)
          {
            int v329 = *v327;
            int v330 = *((unsigned __int8 *)v327 + 2);
            BOOL v331 = v329 == 29801;
            int v332 = 105;
LABEL_693:
            if (!v331 || v330 != v332) {
              goto LABEL_661;
            }
          }
          goto LABEL_659;
        case 'u':
          if ((int)v8 < 4) {
            goto LABEL_661;
          }
          uint64_t v313 = (v8 - 3);
          int v324 = v13[v313 + 2];
          BOOL v325 = *(unsigned __int16 *)&v13[v313] == 30063;
          int v326 = 115;
          goto LABEL_649;
        case 'v':
          if ((int)v8 < 4) {
            goto LABEL_661;
          }
          uint64_t v313 = (v8 - 3);
          int v333 = *(unsigned __int16 *)&v13[v313];
          int v324 = v13[v313 + 2];
          int v334 = 30313;
          goto LABEL_648;
        case 'z':
          if ((int)v8 < 4) {
            goto LABEL_661;
          }
          uint64_t v313 = (v8 - 3);
          int v333 = *(unsigned __int16 *)&v13[v313];
          int v324 = v13[v313 + 2];
          int v334 = 31337;
LABEL_648:
          BOOL v325 = v333 == v334;
          int v326 = 101;
LABEL_649:
          BOOL v335 = v325 && v324 == v326;
          if (!v335 || !sub_1B0DC5764(v13, v313)) {
            goto LABEL_661;
          }
          goto LABEL_660;
        default:
          goto LABEL_661;
      }
    default:
      goto LABEL_439;
  }
}

uint64_t sub_1B0DC5464(unsigned char *a1, int a2)
{
  if (a2 < 1)
  {
    int v7 = 0;
    char v3 = 1;
  }
  else
  {
    unsigned int v2 = (((*a1 - 97) >> 1) | ((*a1 - 97) << 7));
    char v3 = 1;
    BOOL v4 = v2 > 0xA;
    int v5 = (1 << v2) & 0x495;
    if (v4 || v5 == 0)
    {
      int v7 = 1;
      if (a2 == 1)
      {
        char v3 = 0;
      }
      else
      {
        uint64_t v28 = 1;
        while (1)
        {
          int v29 = a1[v28];
          unsigned int v30 = (((v29 - 97) >> 1) | (((_BYTE)v29 - 97) << 7));
          BOOL v4 = v30 > 0xA;
          int v31 = (1 << v30) & 0x495;
          BOOL v32 = v4 || v31 == 0;
          if (!v32 || v29 == 121) {
            break;
          }
          if (a2 == ++v28)
          {
            char v3 = 0;
            int v7 = a2;
            goto LABEL_8;
          }
        }
        char v3 = 1;
        int v7 = v28;
      }
    }
    else
    {
      int v7 = 0;
    }
  }
LABEL_8:
  if (v7 + 1 >= a2) {
    return 0;
  }
  uint64_t v8 = v7;
  int v9 = a1[v7 + 1];
  unsigned int v10 = (((v9 - 97) >> 1) | (((_BYTE)v9 - 97) << 7));
  BOOL v4 = v10 > 0xA;
  int v11 = (1 << v10) & 0x495;
  if (!v4 && v11 != 0) {
    goto LABEL_13;
  }
  if (v9 != 121) {
    char v3 = 1;
  }
  if ((v3 & 1) == 0)
  {
LABEL_13:
    if (v7 + 2 >= a2) {
      return 0;
    }
    ++v7;
    BOOL v13 = &a1[v8 + 2];
    while (1)
    {
      char v14 = *v13++;
      unsigned int v15 = (((v14 - 97) >> 1) | ((v14 - 97) << 7));
      BOOL v4 = v15 > 0xA;
      int v16 = (1 << v15) & 0x495;
      if (v4 || v16 == 0) {
        break;
      }
      int v18 = v7 + 2;
      ++v7;
      if (v18 >= a2) {
        return 0;
      }
    }
  }
  uint64_t v20 = &a1[v7 + 2];
  uint64_t v21 = (a2 - (v7 + 2));
  if ((int)v21 < 1)
  {
    unsigned int v27 = 0;
    goto LABEL_43;
  }
  int v22 = *v20;
  unsigned int v23 = (((v22 - 97) >> 1) | (((_BYTE)v22 - 97) << 7));
  char v24 = 1;
  BOOL v4 = v23 > 0xA;
  int v25 = (1 << v23) & 0x495;
  if (!v4 && v25 != 0)
  {
    unsigned int v27 = 0;
    goto LABEL_44;
  }
  if (v22 != 121)
  {
    unsigned int v27 = 1;
    if (v21 != 1)
    {
      uint64_t v44 = 0;
      while (1)
      {
        int v45 = a1[v7 + 3 + v44];
        unsigned int v46 = (((v45 - 97) >> 1) | (((_BYTE)v45 - 97) << 7));
        BOOL v4 = v46 > 0xA;
        int v47 = (1 << v46) & 0x495;
        if (!v4 && v47 != 0)
        {
          unsigned int v27 = v44 + 1;
          goto LABEL_74;
        }
        if (v45 == 121) {
          break;
        }
        if (v21 - 1 == ++v44)
        {
          char v24 = 0;
          unsigned int v27 = a2 - (v7 + 2);
          goto LABEL_44;
        }
      }
      unsigned int v27 = v44 + 1;
      goto LABEL_74;
    }
LABEL_43:
    char v24 = 0;
    goto LABEL_44;
  }
  unsigned int v27 = 0;
LABEL_74:
  char v24 = 1;
LABEL_44:
  if ((int)(v27 + 1) >= (int)v21) {
    return 1;
  }
  uint64_t v33 = v27;
  int v34 = v20[v27 + 1];
  unsigned int v35 = (((v34 - 97) >> 1) | (((_BYTE)v34 - 97) << 7));
  if (v35 > 0xA || ((1 << v35) & 0x495) == 0)
  {
    char v43 = v34 == 121 ? v24 : 1;
    if (v43) {
      return 0;
    }
  }
  int v37 = v33 + 2;
  if ((int)v21 > (int)v33 + 2)
  {
    char v38 = &a1[v33 + 4 + v7];
    while (1)
    {
      char v39 = *v38++;
      unsigned int v40 = (((v39 - 97) >> 1) | ((v39 - 97) << 7));
      BOOL v4 = v40 > 0xA;
      int v41 = (1 << v40) & 0x495;
      if (v4 || v41 == 0) {
        break;
      }
      if ((int)v21 <= ++v37) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B0DC5764(unsigned char *a1, int a2)
{
  if (a2 < 1)
  {
    int v7 = 0;
    char v3 = 1;
  }
  else
  {
    unsigned int v2 = (((*a1 - 97) >> 1) | ((*a1 - 97) << 7));
    char v3 = 1;
    BOOL v4 = v2 > 0xA;
    int v5 = (1 << v2) & 0x495;
    if (v4 || v5 == 0)
    {
      int v7 = 1;
      if (a2 == 1)
      {
        char v3 = 0;
      }
      else
      {
        uint64_t v28 = 1;
        while (1)
        {
          int v29 = a1[v28];
          unsigned int v30 = (((v29 - 97) >> 1) | (((_BYTE)v29 - 97) << 7));
          BOOL v4 = v30 > 0xA;
          int v31 = (1 << v30) & 0x495;
          BOOL v32 = v4 || v31 == 0;
          if (!v32 || v29 == 121) {
            break;
          }
          if (a2 == ++v28)
          {
            char v3 = 0;
            int v7 = a2;
            goto LABEL_8;
          }
        }
        char v3 = 1;
        int v7 = v28;
      }
    }
    else
    {
      int v7 = 0;
    }
  }
LABEL_8:
  if (v7 + 1 >= a2) {
    return 0;
  }
  uint64_t v8 = v7;
  int v9 = a1[v7 + 1];
  unsigned int v10 = (((v9 - 97) >> 1) | (((_BYTE)v9 - 97) << 7));
  BOOL v4 = v10 > 0xA;
  int v11 = (1 << v10) & 0x495;
  if (!v4 && v11 != 0) {
    goto LABEL_13;
  }
  if (v9 != 121) {
    char v3 = 1;
  }
  if ((v3 & 1) == 0)
  {
LABEL_13:
    if (v7 + 2 >= a2) {
      return 0;
    }
    ++v7;
    BOOL v13 = &a1[v8 + 2];
    while (1)
    {
      char v14 = *v13++;
      unsigned int v15 = (((v14 - 97) >> 1) | ((v14 - 97) << 7));
      BOOL v4 = v15 > 0xA;
      int v16 = (1 << v15) & 0x495;
      if (v4 || v16 == 0) {
        break;
      }
      int v18 = v7 + 2;
      ++v7;
      if (v18 >= a2) {
        return 0;
      }
    }
  }
  uint64_t v20 = &a1[v7 + 2];
  uint64_t v21 = (a2 - (v7 + 2));
  if ((int)v21 < 1)
  {
    unsigned int v27 = 0;
    goto LABEL_43;
  }
  int v22 = *v20;
  unsigned int v23 = (((v22 - 97) >> 1) | (((_BYTE)v22 - 97) << 7));
  char v24 = 1;
  BOOL v4 = v23 > 0xA;
  int v25 = (1 << v23) & 0x495;
  if (!v4 && v25 != 0)
  {
    unsigned int v27 = 0;
    goto LABEL_44;
  }
  if (v22 != 121)
  {
    unsigned int v27 = 1;
    if (v21 != 1)
    {
      uint64_t v44 = 0;
      while (1)
      {
        int v45 = a1[v7 + 3 + v44];
        unsigned int v46 = (((v45 - 97) >> 1) | (((_BYTE)v45 - 97) << 7));
        BOOL v4 = v46 > 0xA;
        int v47 = (1 << v46) & 0x495;
        if (!v4 && v47 != 0)
        {
          unsigned int v27 = v44 + 1;
          goto LABEL_74;
        }
        if (v45 == 121) {
          break;
        }
        if (v21 - 1 == ++v44)
        {
          char v24 = 0;
          unsigned int v27 = a2 - (v7 + 2);
          goto LABEL_44;
        }
      }
      unsigned int v27 = v44 + 1;
      goto LABEL_74;
    }
LABEL_43:
    char v24 = 0;
    goto LABEL_44;
  }
  unsigned int v27 = 0;
LABEL_74:
  char v24 = 1;
LABEL_44:
  if ((int)(v27 + 1) >= (int)v21) {
    return 0;
  }
  int v33 = v20[v27 + 1];
  unsigned int v34 = (((v33 - 97) >> 1) | (((_BYTE)v33 - 97) << 7));
  BOOL v4 = v34 > 0xA;
  int v35 = (1 << v34) & 0x495;
  BOOL v36 = v4 || v35 == 0;
  if (!v36 || (v33 != 121 ? (char v43 = 1) : (char v43 = v24), (v43 & 1) == 0))
  {
    unsigned int v37 = v27 + 2;
    if ((int)v21 > (int)(v27 + 2))
    {
      char v38 = &a1[v27 + 4 + (uint64_t)v7];
      while (1)
      {
        char v39 = *v38++;
        unsigned int v40 = (((v39 - 97) >> 1) | ((v39 - 97) << 7));
        BOOL v4 = v40 > 0xA;
        int v41 = (1 << v40) & 0x495;
        if (v4 || v41 == 0) {
          break;
        }
        uint64_t result = 0;
        if ((int)v21 <= (int)++v37) {
          return result;
        }
      }
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B0DC5A60(unsigned char *a1, int a2)
{
  if (a2 < 1)
  {
    unsigned int v7 = 0;
    char v3 = 1;
  }
  else
  {
    unsigned int v2 = (((*a1 - 97) >> 1) | ((*a1 - 97) << 7));
    char v3 = 1;
    BOOL v4 = v2 > 0xA;
    int v5 = (1 << v2) & 0x495;
    if (v4 || v5 == 0)
    {
      unsigned int v7 = 1;
      if (a2 == 1)
      {
        char v3 = 0;
      }
      else
      {
        uint64_t v19 = 1;
        while (1)
        {
          int v20 = a1[v19];
          unsigned int v21 = (((v20 - 97) >> 1) | (((_BYTE)v20 - 97) << 7));
          BOOL v4 = v21 > 0xA;
          int v22 = (1 << v21) & 0x495;
          BOOL v23 = v4 || v22 == 0;
          if (!v23 || v20 == 121) {
            break;
          }
          if (a2 == ++v19)
          {
            char v3 = 0;
            unsigned int v7 = a2;
            goto LABEL_8;
          }
        }
        char v3 = 1;
        unsigned int v7 = v19;
      }
    }
    else
    {
      unsigned int v7 = 0;
    }
  }
LABEL_8:
  if ((int)(v7 + 1) >= a2) {
    return 0;
  }
  int v8 = a1[v7 + 1];
  unsigned int v9 = (((v8 - 97) >> 1) | (((_BYTE)v8 - 97) << 7));
  BOOL v4 = v9 > 0xA;
  int v10 = (1 << v9) & 0x495;
  if (!v4 && v10 != 0) {
    goto LABEL_13;
  }
  if (v8 != 121) {
    char v3 = 1;
  }
  if ((v3 & 1) == 0)
  {
LABEL_13:
    uint64_t v12 = v7 + 2;
    if ((int)v12 < a2)
    {
      BOOL v13 = &a1[v12];
      while (1)
      {
        char v14 = *v13++;
        unsigned int v15 = (((v14 - 97) >> 1) | ((v14 - 97) << 7));
        BOOL v4 = v15 > 0xA;
        int v16 = (1 << v15) & 0x495;
        if (v4 || v16 == 0) {
          break;
        }
        LODWORD(v12) = v12 + 1;
        if ((int)v12 >= a2) {
          return 0;
        }
      }
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B0DC5BD0(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *a2;
  if ((int)v2 <= 0)
  {
    int v11 = 0;
    *((void *)a2 + 8) = 0x412E848000000000;
  }
  else
  {
    uint64_t v3 = 0;
    BOOL v4 = (unsigned char *)(*((void *)a2 + 1) + 5);
    unsigned int v5 = -1;
    unsigned int v6 = -1;
    unsigned int v7 = -1;
    do
    {
      if (*v4 && !*(_DWORD *)(v4 - 5))
      {
        int v8 = *(v4 - 1);
        if (v8 == 2) {
          unsigned int v7 = v3;
        }
        if (v8 == 8 || v8 == 16) {
          unsigned int v5 = v3;
        }
        if (v8 == 32 || v8 == 4) {
          unsigned int v6 = v3;
        }
      }
      ++v3;
      v4 += 12;
    }
    while (v2 != v3);
    if ((v7 & 0x80000000) != 0)
    {
      *((void *)a2 + 8) = 0x412E848000000000;
      int v12 = 1;
      if ((v6 & 0x80000000) != 0)
      {
        int v11 = 0;
        uint64_t v13 = 0x411E848000000000;
        if ((v5 & 0x80000000) != 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(_DWORD *)(*((void *)a2 + 4) + 8 * v6) = 1;
        *((void *)a2 + 8) = 0x411E848000000000;
        int v11 = 2;
        uint64_t v13 = 0x410E848000000000;
        int v12 = 2;
        if ((v5 & 0x80000000) != 0) {
          goto LABEL_25;
        }
      }
      v11 |= 4u;
      *(_DWORD *)(*((void *)a2 + 4) + 8 * v5) = v12;
      *((void *)a2 + 8) = v13;
      goto LABEL_25;
    }
    int v11 = 1;
    *(_DWORD *)(*((void *)a2 + 4) + 8 * v7) = 1;
    *((void *)a2 + 8) = 0x4059000000000000;
  }
LABEL_25:
  if (a2[4] == 1)
  {
    uint64_t v14 = *((void *)a2 + 3);
    if (!*(_DWORD *)v14 && !*(unsigned char *)(v14 + 4)) {
      a2[15] = 1;
    }
  }
  a2[10] = v11;
  return 0;
}

uint64_t sub_1B0DC5D10(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    uint64_t v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DC5DC4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    uint64_t v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DC5E78(uint64_t a1, void *a2)
{
  unsigned int v19 = 0;
  pStmt = 0;
  if (!*(_DWORD *)(a1 + 60))
  {
    unsigned int v5 = (unsigned __int8 *)sub_1B0DA32B4(&v19, "SELECT t.%Q FROM %Q.%Q AS t WHERE t.%Q MATCH '*id'", *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 24), *(void *)(a1 + 24));
    if (!v5)
    {
      uint64_t v3 = v19;
      goto LABEL_11;
    }
    unsigned int v7 = v5;
    uint64_t v3 = sub_1B0C7EAC0(*(void *)(a1 + 40), v5, 0xFFFFFFFFLL, 128, 0, &pStmt, 0, v6);
    int v8 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v7);
      --qword_1EB220150;
      off_1EB21C9E8(v7);
      unsigned int v7 = (unsigned __int8 *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 60) = 1;
        if (pStmt
          && sqlite3_step(pStmt) == 100
          && (sqlite3_int64 v9 = sqlite3_column_int64(pStmt, 0), (v10 = *(uint64_t **)(*(void *)(a1 + 48) + 72)) != 0))
        {
          while (v10[3] != v9)
          {
            int v10 = (uint64_t *)v10[1];
            if (!v10) {
              goto LABEL_16;
            }
          }
          uint64_t v11 = *v10;
        }
        else
        {
LABEL_16:
          uint64_t v11 = 0;
        }
        *(_DWORD *)(a1 + 60) = 0;
        if (v3 <= 1)
        {
          if (v11)
          {
            for (uint64_t i = *(void *)(*(void *)(v11 + 48) + 72); i; uint64_t i = *(void *)(i + 8))
            {
              if (*(_DWORD *)(i + 32) == 1 && *(void *)i == v11) {
                *(_DWORD *)(i + 80) |= 0x20u;
              }
            }
            uint64_t v3 = sub_1B0DBE998(*(uint64_t ***)(v11 + 40));
            if (!v3)
            {
              uint64_t v13 = *(int *)(*(void *)(v11 + 24) + 24);
              if (!sqlite3_initialize())
              {
                int v16 = (void *)sub_1B0C7FC94(16 * v13 + 128);
                if (v16)
                {
                  uint64_t v14 = v16;
                  bzero(v16, 16 * v13 + 128);
                  uint64_t v3 = 0;
                  v14[1] = pStmt;
                  v14[2] = v11;
                  uint64_t v17 = (uint64_t)&v14[*(int *)(*(void *)(v11 + 24) + 24) + 16];
                  v14[9] = v14 + 16;
                  v14[10] = v17;
                  goto LABEL_32;
                }
              }
              if ((int)v13 <= -8) {
                uint64_t v3 = 0;
              }
              else {
                uint64_t v3 = 7;
              }
            }
          }
          else
          {
            uint64_t v3 = sqlite3_finalize(pStmt);
            pStmt = 0;
            if (!v3)
            {
              *(void *)(a1 + 16) = sqlite3_mprintf("no such fts5 table: %s.%s", *(const char **)(a1 + 32), *(const char **)(a1 + 24));
              uint64_t v3 = 1;
            }
          }
        }
        sqlite3_finalize(pStmt);
        uint64_t v14 = 0;
LABEL_32:
        *a2 = v14;
        return v3;
      }
      int v8 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
    }
    (*v8)(v7);
    goto LABEL_11;
  }
  *(void *)(a1 + 16) = sqlite3_mprintf("recursive definition for %s.%s", *(const char **)(a1 + 32), *(const char **)(a1 + 24));
  return 1;
}

uint64_t sub_1B0DC610C(uint64_t a1)
{
  uint64_t v1 = a1;
  sub_1B0DC7178(a1);
  uint64_t v2 = *(void *)(v1 + 96);
  if (v2)
  {
    uint64_t v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v3)(v2);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v3 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0;
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 8));
  BOOL v4 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_13:
    (*v4)(v1);
    return 0;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    BOOL v4 = &xmmword_1EB21CA50;
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_1B0DC624C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  int v8 = *(_DWORD *)(*(void *)a1 + 56);
  sub_1B0DC7178(a1);
  if (a2)
  {
    uint64_t v10 = *a5;
    unsigned int v9 = 1;
    if ((a2 & 2) != 0)
    {
LABEL_3:
      uint64_t v11 = a5[v9++];
      if ((a2 & 4) != 0) {
        goto LABEL_4;
      }
LABEL_11:
      uint64_t v12 = 0;
      if (v10) {
        goto LABEL_5;
      }
LABEL_12:
      if (v11)
      {
        int v15 = *(unsigned __int16 *)(v11 + 20);
        if ((~v15 & 0x202) != 0 || *(unsigned char *)(v11 + 22) != 1)
        {
          if (v15)
          {
            uint64_t v14 = 0;
            if ((v15 & 2) == 0) {
              goto LABEL_38;
            }
          }
          else
          {
            uint64_t v14 = (unsigned __int8 *)sub_1B0D18254((int *)v11, 1);
            LOWORD(v15) = *(_WORD *)(v11 + 20);
            if ((v15 & 2) == 0) {
              goto LABEL_38;
            }
          }
        }
        else
        {
          uint64_t v14 = *(unsigned __int8 **)(v11 + 8);
          if ((v15 & 2) == 0)
          {
LABEL_38:
            if ((v15 & 0x10) != 0)
            {
              int v17 = *(_DWORD *)(v11 + 16);
              if ((v15 & 0x400) != 0) {
                v17 += *(_DWORD *)v11;
              }
              if (!v12) {
                goto LABEL_70;
              }
            }
            else if (v15)
            {
              int v17 = 0;
              if (!v12) {
                goto LABEL_70;
              }
            }
            else
            {
              int v17 = sub_1B0D18228(v11, 1);
              if (!v12) {
                goto LABEL_70;
              }
            }
LABEL_45:
            int v18 = *(unsigned __int16 *)(v12 + 20);
            if ((~v18 & 0x202) != 0 || *(unsigned char *)(v12 + 22) != 1)
            {
              if (v18)
              {
                uint64_t v19 = 0;
                if ((v18 & 2) == 0) {
                  goto LABEL_55;
                }
              }
              else
              {
                uint64_t v19 = sub_1B0D18254((int *)v12, 1);
                LOWORD(v18) = *(_WORD *)(v12 + 20);
                if ((v18 & 2) == 0) {
                  goto LABEL_55;
                }
              }
            }
            else
            {
              uint64_t v19 = *(void *)(v12 + 8);
              if ((v18 & 2) == 0) {
                goto LABEL_55;
              }
            }
            if (*(unsigned char *)(v12 + 22) == 1)
            {
              int v20 = *(_DWORD *)(v12 + 16);
              goto LABEL_63;
            }
LABEL_55:
            if ((v18 & 0x10) != 0)
            {
              int v20 = *(_DWORD *)(v12 + 16);
              if ((v18 & 0x400) != 0) {
                v20 += *(_DWORD *)v12;
              }
            }
            else if (v18)
            {
              int v20 = 0;
            }
            else
            {
              int v20 = sub_1B0D18228(v12, 1);
            }
LABEL_63:
            *(_DWORD *)(a1 + 48) = v20;
            int v21 = sqlite3_initialize();
            if (v20 < 0 || v21)
            {
              *(void *)(a1 + 56) = 0;
            }
            else
            {
              int v22 = (void *)sub_1B0C7FC94((v20 + 1));
              *(void *)(a1 + 56) = v22;
              if (v22)
              {
                if (v19) {
                  BOOL v23 = (char *)v19;
                }
                else {
                  BOOL v23 = &byte_1B0DE9952;
                }
                memcpy(v22, v23, *(int *)(a1 + 48) + 1);
                goto LABEL_70;
              }
            }
            return 7;
          }
        }
        if (*(unsigned char *)(v11 + 22) != 1) {
          goto LABEL_38;
        }
        int v17 = *(_DWORD *)(v11 + 16);
        if (v12) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v14 = 0;
        int v17 = 0;
        if (v12) {
          goto LABEL_45;
        }
      }
LABEL_70:
      int v16 = 8;
      goto LABEL_71;
    }
  }
  else
  {
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    if ((a2 & 2) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  if ((a2 & 4) == 0) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v12 = a5[v9];
  if (!v10) {
    goto LABEL_12;
  }
LABEL_5:
  int v13 = *(unsigned __int16 *)(v10 + 20);
  if ((~v13 & 0x202) != 0 || *(unsigned char *)(v10 + 22) != 1)
  {
    if (v13)
    {
      uint64_t v14 = 0;
      if ((v13 & 2) == 0) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v14 = (unsigned __int8 *)sub_1B0D18254((int *)v10, 1);
      LOWORD(v13) = *(_WORD *)(v10 + 20);
      if ((v13 & 2) == 0) {
        goto LABEL_23;
      }
    }
LABEL_21:
    if (*(unsigned char *)(v10 + 22) == 1)
    {
      int v16 = 0;
      int v17 = *(_DWORD *)(v10 + 16);
      goto LABEL_71;
    }
    goto LABEL_23;
  }
  uint64_t v14 = *(unsigned __int8 **)(v10 + 8);
  if ((v13 & 2) != 0) {
    goto LABEL_21;
  }
LABEL_23:
  if ((v13 & 0x10) != 0)
  {
    int v17 = *(_DWORD *)(v10 + 16);
    int v16 = 0;
    if ((v13 & 0x400) != 0) {
      v17 += *(_DWORD *)v10;
    }
  }
  else if (v13)
  {
    int v16 = 0;
    int v17 = 0;
  }
  else
  {
    int v17 = sub_1B0D18228(v10, 1);
    int v16 = 0;
  }
LABEL_71:
  uint64_t v24 = *(void *)(*(void *)(a1 + 16) + 32);
  uint64_t result = sub_1B0DAE858((_DWORD *)v24, v14, v17, v16, 0, (uint64_t *)(a1 + 32));
  if (result) {
    return result;
  }
  uint64_t v26 = *(_DWORD **)(v24 + 144);
  ++*v26;
  *(void *)(a1 + 40) = v26;
  if (v8 == 2)
  {
    uint64_t result = sub_1B0DC72B4(a1);
    if (result) {
      return result;
    }
    if (!*(_DWORD *)(a1 + 24) && *(_DWORD *)(*(void *)(*(void *)(a1 + 16) + 24) + 92) != 1) {
      goto LABEL_76;
    }
    return 0;
  }
  if (*(_DWORD *)(a1 + 24)) {
    return 0;
  }
LABEL_76:

  return sub_1B0DC65C4(a1);
}

uint64_t sub_1B0DC65C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 144);
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 != v2;
  if (!v4) {
    return 4;
  }
  uint64_t v9 = *(void *)(v1 + 24);
  int v10 = *(_DWORD *)(v9 + 24);
  uint64_t v6 = (4 * v5);
  uint64_t v11 = *(void *)a1;
  ++*(void *)(a1 + 88);
  int v12 = *(_DWORD *)(v11 + 56);
  if (v12)
  {
    if (v12 == 2)
    {
      int v13 = *(_DWORD *)(v9 + 92);
      uint64_t v14 = *(void *)(a1 + 32);
      while (v13 == 1
           || sub_1B0DADA34(*(void *)(v14 + 8), *(_DWORD *)(v14 + 16), (int *)(a1 + 120), (uint64_t *)(a1 + 112)))
      {
        *(void *)(a1 + 112) = 0;
        *(_DWORD *)(a1 + 120) = 0;
        uint64_t v15 = sub_1B0DC73F4(*(void *)(a1 + 32));
        if (v15)
        {
          uint64_t v6 = v15;
          goto LABEL_50;
        }
        uint64_t v16 = sub_1B0DC72B4(a1);
        uint64_t v6 = v16;
        if (v13 == 1 || *(_DWORD *)(a1 + 24)) {
          return v6;
        }
        if (v16) {
          goto LABEL_50;
        }
      }
      return 0;
    }
  }
  else
  {
    uint64_t v17 = *(int *)(a1 + 64);
    if (v10 <= (int)v17 + 1) {
      int v18 = v17 + 1;
    }
    else {
      int v18 = v10;
    }
    uint64_t v19 = v17 + 1;
    do
    {
      if (v19 >= v10)
      {
        *(_DWORD *)(a1 + 64) = v18;
        goto LABEL_23;
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 80) + 8 * v19);
      LODWORD(v17) = v17 + 1;
      ++v19;
    }
    while (!v20);
    *(_DWORD *)(a1 + 64) = v17;
    if (v10 > (int)v17)
    {
      int v12 = 0;
      goto LABEL_25;
    }
  }
LABEL_23:
  uint64_t v21 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v21 + 20))
  {
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_25;
  }
  uint64_t v22 = v21 + 136 * *(unsigned __int16 *)(*(void *)(v21 + 88) + 4);
  int v23 = *(_DWORD *)(v22 + 208);
  uint64_t v24 = *(void *)(v22 + 200);
  size_t v25 = (v23 - 1);
  if (v24) {
    uint64_t v26 = (const void *)(v24 + 1);
  }
  else {
    uint64_t v26 = 0;
  }
  int v27 = *(_DWORD *)(a1 + 48);
  if ((v27 & 0x80000000) == 0)
  {
    int v28 = (int)v25 >= v27 ? *(_DWORD *)(a1 + 48) : v23 - 1;
    int v29 = memcmp(*(const void **)(a1 + 56), v26, v28);
    if (v29 < 0 || (!v29 ? (BOOL v30 = v27 < (int)v25) : (BOOL v30 = 0), v30))
    {
      uint64_t v6 = 0;
LABEL_50:
      *(_DWORD *)(a1 + 24) = 1;
      return v6;
    }
  }
  *(_DWORD *)(a1 + 104) = 0;
  if (!v25) {
    goto LABEL_61;
  }
  LODWORD(v31) = *(_DWORD *)(a1 + 108);
  if (v31 >= v25)
  {
    uint64_t v38 = 0;
    uint64_t v39 = *(void *)(a1 + 96);
LABEL_60:
    memcpy((void *)(v39 + v38), v26, v25);
    *(_DWORD *)(a1 + 104) += v25;
    goto LABEL_61;
  }
  if (!v31) {
    LODWORD(v31) = 64;
  }
  unint64_t v31 = (int)v31;
  do
  {
    unint64_t v32 = v31;
    v31 *= 2;
  }
  while (v32 < v25);
  uint64_t v33 = *(void *)(a1 + 96);
  if (!sqlite3_initialize())
  {
    uint64_t v39 = sub_1B0C8E1B8(v33, v32);
    if (v39)
    {
      *(_DWORD *)(a1 + 108) = v32;
      *(void *)(a1 + 96) = v39;
      uint64_t v38 = *(int *)(a1 + 104);
      goto LABEL_60;
    }
  }
  uint64_t v6 = 7;
LABEL_61:
  bzero(*(void **)(a1 + 72), 8 * v10);
  bzero(*(void **)(a1 + 80), 8 * v10);
  *(_DWORD *)(a1 + 64) = 0;
  if (v6) {
    return v6;
  }
  uint64_t v40 = *(void *)(a1 + 32);
  int v12 = *(_DWORD *)(v11 + 56);
  do
  {
    int v41 = *(_DWORD *)(*(void *)(*(void *)(a1 + 16) + 24) + 92);
    uint64_t v56 = 0;
    int v55 = 0;
    uint64_t v42 = *(void *)(v40 + 8);
    int v43 = *(_DWORD *)(v40 + 16);
    if (v12)
    {
      if (v12 != 1) {
        goto LABEL_77;
      }
      if (!v41 && !sub_1B0DADA34(*(void *)(v40 + 8), *(_DWORD *)(v40 + 16), &v55, &v56))
      {
        uint64_t v44 = *(void **)(a1 + 72);
        uint64_t v45 = *v44 + 1;
        do
          *uint64_t v44 = v45++;
        while (!sub_1B0DADA34(v42, v43, &v55, &v56));
      }
LABEL_76:
      ++**(void **)(a1 + 80);
      goto LABEL_77;
    }
    if (v41)
    {
      if (v41 != 2) {
        goto LABEL_76;
      }
      while (!sub_1B0DADA34(v42, v43, &v55, &v56))
      {
        if (v56 >= v10) {
          return 267;
        }
        ++*(void *)(*(void *)(a1 + 80) + 8 * v56);
      }
    }
    else if (!sub_1B0DADA34(*(void *)(v40 + 8), *(_DWORD *)(v40 + 16), &v55, &v56))
    {
      int v52 = -1;
      do
      {
        unint64_t v54 = HIDWORD(v56);
        if (v52 == HIDWORD(v56))
        {
          uint64_t v53 = v56 >> 32;
        }
        else
        {
          if (v10 <= SHIDWORD(v56)) {
            return 267;
          }
          uint64_t v53 = v56 >> 32;
          ++*(void *)(*(void *)(a1 + 80) + 8 * (v56 >> 32));
          int v52 = v54;
        }
        ++*(void *)(*(void *)(a1 + 72) + 8 * v53);
      }
      while (!sub_1B0DADA34(v42, v43, &v55, &v56));
    }
LABEL_77:
    uint64_t v46 = sub_1B0DC73F4(v40);
    uint64_t v6 = v46;
    int v12 = *(_DWORD *)(v11 + 56);
    if (v12 == 2) {
      goto LABEL_25;
    }
    if (v46) {
      return v6;
    }
    uint64_t v40 = *(void *)(a1 + 32);
    uint64_t v47 = v40 + 136 * *(unsigned __int16 *)(*(void *)(v40 + 88) + 4);
    int v48 = *(_DWORD *)(v47 + 208);
    uint64_t v49 = *(void *)(v47 + 200);
    size_t v50 = (v48 - 1);
    if (v49) {
      int v51 = (const void *)(v49 + 1);
    }
    else {
      int v51 = 0;
    }
  }
  while (v50 == *(_DWORD *)(a1 + 104)
       && (v48 < 2 || !memcmp(v51, *(const void **)(a1 + 96), v50))
       && !*(unsigned char *)(v40 + 20));
  uint64_t v6 = 0;
LABEL_25:
  if (!v6)
  {
    if (*(_DWORD *)(a1 + 24) | v12) {
      return 0;
    }
    int v34 = *(_DWORD *)(a1 + 64);
    if (v34 < v10)
    {
      int v35 = (void *)(*(void *)(a1 + 80) + 8 * v34);
      uint64_t v36 = v10 - (uint64_t)v34;
      while (!*v35++)
      {
        *(_DWORD *)(a1 + 64) = ++v34;
        if (!--v36)
        {
          int v34 = v10;
          break;
        }
      }
    }
    if (v34 == v10) {
      return 267;
    }
    else {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1B0DC6A80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1B0DC6A88(uint64_t a1, uint64_t a2, int a3)
{
  if (a3)
  {
    int v3 = *(_DWORD *)(*(void *)a1 + 56);
    if (v3 == 1)
    {
      if (a3 == 1) {
        int v8 = *(uint64_t **)(a1 + 80);
      }
      else {
        int v8 = *(uint64_t **)(a1 + 72);
      }
      goto LABEL_21;
    }
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 24);
    int v5 = *(_DWORD *)(v4 + 92);
    if (!v3)
    {
      if (a3 == 2)
      {
        uint64_t v10 = *(void *)(a1 + 80);
      }
      else
      {
        if (a3 == 1)
        {
          if (v5 != 1)
          {
            if (a2)
            {
              uint64_t v6 = *(void *)(v4 + 32);
              uint64_t v7 = *(int *)(a1 + 64);
LABEL_38:
              sub_1B0CEA530(a2, *(char **)(v6 + 8 * v7), -1, 1u, 0);
              return 0;
            }
            goto LABEL_39;
          }
          return 0;
        }
        uint64_t v10 = *(void *)(a1 + 72);
      }
      int v8 = (uint64_t *)(v10 + 8 * *(int *)(a1 + 64));
LABEL_21:
      uint64_t v9 = *v8;
      if (v9 < 1) {
        return 0;
      }
      if (a2) {
        goto LABEL_23;
      }
LABEL_25:
      int v12 = 97441;
LABEL_40:
      sub_1B0CE1978(v12);
      return 0;
    }
    if (a3 != 2)
    {
      if (a3 == 1)
      {
        if (!a2) {
          goto LABEL_25;
        }
        uint64_t v9 = **(void **)(a1 + 32);
      }
      else
      {
        if (v5) {
          return 0;
        }
        if (!a2)
        {
          int v12 = 97431;
          goto LABEL_40;
        }
        uint64_t v9 = *(void *)(a1 + 112) & 0x7FFFFFFFLL;
      }
LABEL_23:
      uint64_t v11 = *(void *)a2;
      if ((*(_WORD *)(*(void *)a2 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v11, v9);
      }
      else
      {
        *(void *)uint64_t v11 = v9;
        *(_WORD *)(v11 + 20) = 4;
      }
      return 0;
    }
    if (v5 == 2)
    {
      uint64_t v7 = *(unsigned int *)(a1 + 112);
    }
    else
    {
      if (v5) {
        return 0;
      }
      uint64_t v7 = *(unsigned int *)(a1 + 116);
    }
    if ((v7 & 0x80000000) == 0 && *(_DWORD *)(v4 + 24) > (int)v7)
    {
      if (a2)
      {
        uint64_t v6 = *(void *)(v4 + 32);
        goto LABEL_38;
      }
      goto LABEL_39;
    }
  }
  else
  {
    if (!a2)
    {
LABEL_39:
      int v12 = 97498;
      goto LABEL_40;
    }
    sub_1B0CEA530(a2, *(char **)(a1 + 96), *(_DWORD *)(a1 + 104), 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
  }
  return 0;
}

uint64_t sub_1B0DC6C28(uint64_t a1, void *a2)
{
  *a2 = *(void *)(a1 + 88);
  return 0;
}

uint64_t sub_1B0DC6C38(sqlite3 *a1, uint64_t a2, int a3, uint64_t a4, void *a5, char **a6)
{
  if (a3 == 6)
  {
    int v12 = *(const char **)(a4 + 8);
    if (strlen(v12) == 4)
    {
      BOOL v13 = *(_DWORD *)v12 == 1886217588;
      goto LABEL_5;
    }
  }
  BOOL v13 = 0;
  if (a3 != 5)
  {
LABEL_5:
    if (!v13)
    {
      uint64_t v14 = 0;
      *a6 = sqlite3_mprintf("wrong number of vtable arguments");
      uint64_t result = 1;
      goto LABEL_67;
    }
  }
  uint64_t v68 = a2;
  BOOL v16 = !v13;
  uint64_t v17 = 8;
  uint64_t v18 = 24;
  if (!v16) {
    uint64_t v17 = 24;
  }
  uint64_t v19 = *(const char **)(a4 + v17);
  uint64_t v20 = 32;
  if (!v16) {
    uint64_t v18 = 32;
  }
  uint64_t v21 = *(const char **)(a4 + v18);
  if (!v16) {
    uint64_t v20 = 40;
  }
  uint64_t v22 = *(const char **)(a4 + v20);
  int v23 = strlen(v19);
  int v24 = strlen(v21);
  unsigned int v25 = strlen(v22);
  int v26 = sqlite3_initialize();
  int v27 = 0;
  uint64_t result = 7;
  if ((v25 & 0x80000000) != 0 || v26) {
    goto LABEL_61;
  }
  int v67 = v23;
  int v28 = (unsigned __int8 *)sub_1B0C7FC94(v25 + 1);
  if (!v28)
  {
    int v27 = 0;
    uint64_t result = 7;
    goto LABEL_60;
  }
  int v29 = v28;
  memcpy(v28, v22, v25);
  v29[v25] = 0;
  int v30 = *v29;
  if ((v30 - 34) <= 0x3E && ((1 << (v30 - 34)) & 0x4200000000000021) != 0)
  {
    if (v30 == 91) {
      int v32 = 93;
    }
    else {
      int v32 = *v29;
    }
    int v33 = v29[1];
    if (v29[1])
    {
      uint64_t v34 = 0;
      int v35 = 1;
      while (1)
      {
        uint64_t v36 = v35 + 1;
        if (v33 == v32)
        {
          if (v29[v36] != v32) {
            goto LABEL_31;
          }
          LODWORD(v36) = v35 + 2;
          LOBYTE(v33) = v32;
        }
        v29[v34++] = v33;
        int v33 = v29[(int)v36];
        int v35 = v36;
        if (!v29[(int)v36]) {
          goto LABEL_31;
        }
      }
    }
    LODWORD(v34) = 0;
LABEL_31:
    v29[v34] = 0;
  }
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v38 = v29[i];
    uint64_t v39 = aCol[i];
    if (v38 != v39) {
      break;
    }
    if (!v29[i])
    {
      int v27 = 0;
      int v40 = 1;
      goto LABEL_51;
    }
LABEL_34:
    ;
  }
  if (byte_1B0DE1758[v38] == byte_1B0DE1758[v39]) {
    goto LABEL_34;
  }
  for (uint64_t j = 0; ; ++j)
  {
    uint64_t v42 = v29[j];
    uint64_t v43 = aRow_0[j];
    if (v42 != v43) {
      break;
    }
    if (!v29[j])
    {
      int v27 = 1;
      int v40 = 1;
      goto LABEL_51;
    }
LABEL_40:
    ;
  }
  if (byte_1B0DE1758[v42] == byte_1B0DE1758[v43]) {
    goto LABEL_40;
  }
  for (uint64_t k = 0; ; ++k)
  {
    uint64_t v45 = v29[k];
    uint64_t v46 = aInstance[k];
    if (v45 != v46) {
      break;
    }
    if (!v29[k])
    {
      int v40 = 1;
      int v27 = 2;
      goto LABEL_51;
    }
LABEL_46:
    ;
  }
  if (byte_1B0DE1758[v45] == byte_1B0DE1758[v46]) {
    goto LABEL_46;
  }
  int v27 = 0;
  int v40 = 0;
  *a6 = sqlite3_mprintf("fts5vocab: unknown table type: %Q", v29);
LABEL_51:
  uint64_t v47 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v29);
    --qword_1EB220150;
    off_1EB21C9E8(v29);
    int v29 = (unsigned __int8 *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v47 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
      goto LABEL_56;
    }
  }
  else
  {
LABEL_56:
    (*v47)(v29);
  }
  if (v40) {
    uint64_t result = sqlite3_declare_vtab(a1, off_1E5FF06A8[v27]);
  }
  else {
    uint64_t result = 1;
  }
LABEL_60:
  int v23 = v67;
LABEL_61:
  if (result)
  {
    uint64_t v14 = 0;
  }
  else
  {
    size_t v48 = v23 + 1;
    size_t v49 = v24 + 1;
    uint64_t v50 = v48 + v49 + 64;
    if (sqlite3_initialize() || (int v51 = (_DWORD *)sub_1B0C7FC94((int)v50)) == 0)
    {
      uint64_t v14 = 0;
      if (v50 << 32 <= 0) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = 7;
      }
    }
    else
    {
      uint64_t v14 = v51;
      bzero(v51, (int)v50);
      v14[14] = v27;
      *((void *)v14 + 5) = a1;
      *((void *)v14 + 6) = v68;
      *((void *)v14 + 3) = v14 + 16;
      *((void *)v14 + 4) = (char *)v14 + v49 + 64;
      memcpy(v14 + 16, v21, v49);
      memcpy((char *)v14 + v49 + 64, v19, v48);
      int v52 = (unsigned __int8 *)*((void *)v14 + 3);
      int v53 = *v52;
      if ((v53 - 34) <= 0x3E && ((1 << (v53 - 34)) & 0x4200000000000021) != 0)
      {
        if (v53 == 91) {
          int v55 = 93;
        }
        else {
          int v55 = *v52;
        }
        int v56 = v52[1];
        if (v52[1])
        {
          uint64_t v57 = 0;
          int v58 = 1;
          while (1)
          {
            uint64_t v59 = v58 + 1;
            if (v56 == v55)
            {
              if (v52[v59] != v55) {
                goto LABEL_83;
              }
              LODWORD(v59) = v58 + 2;
              LOBYTE(v56) = v55;
            }
            v52[v57++] = v56;
            int v56 = v52[(int)v59];
            int v58 = v59;
            if (!v52[(int)v59]) {
              goto LABEL_83;
            }
          }
        }
        LODWORD(v57) = 0;
LABEL_83:
        v52[v57] = 0;
      }
      uint64_t v60 = (unsigned __int8 *)*((void *)v14 + 4);
      int v61 = *v60;
      if ((v61 - 34) > 0x3E || ((1 << (v61 - 34)) & 0x4200000000000021) == 0)
      {
        uint64_t result = 0;
      }
      else
      {
        if (v61 == 91) {
          int v61 = 93;
        }
        int v63 = v60[1];
        if (v60[1])
        {
          uint64_t v64 = 0;
          int v65 = 1;
          while (1)
          {
            uint64_t v66 = v65 + 1;
            if (v63 == v61)
            {
              if (v60[v66] != v61) {
                goto LABEL_97;
              }
              LODWORD(v66) = v65 + 2;
              LOBYTE(v63) = v61;
            }
            v60[v64++] = v63;
            int v63 = v60[(int)v66];
            int v65 = v66;
            if (!v60[(int)v66]) {
              goto LABEL_97;
            }
          }
        }
        LODWORD(v64) = 0;
LABEL_97:
        uint64_t result = 0;
        v60[v64] = 0;
      }
    }
  }
LABEL_67:
  *a5 = v14;
  return result;
}

_DWORD *sub_1B0DC7178(uint64_t a1)
{
  int v3 = (void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 32);
  v3[7] = 0;
  if (v2)
  {
    uint64_t v4 = *(void *)(v2 + 24);
    sub_1B0DA8128(v2);
    int v5 = *(void **)(v4 + 64);
    if (v5)
    {
      *(void *)(v4 + 64) = 0;
      uint64_t v6 = (sqlite3_stmt *)v5[3];
      uint64_t v7 = (void *)v5[4];
      uint64_t v8 = v7[3];
      if (v8) {
        xmmword_1EB21CA40(v8);
      }
      sub_1B0D05C10(v7, v5);
      uint64_t v9 = v7[3];
      if (v9) {
        xmmword_1EB21CA50(v9);
      }
      sqlite3_finalize(v6);
    }
  }
  uint64_t result = *(_DWORD **)(a1 + 40);
  if (result) {
    uint64_t result = sub_1B0DA4EF8(result);
  }
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v11 = *(void *)(a1 + 56);
  if (v11)
  {
    int v12 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_16:
      uint64_t result = (_DWORD *)(*v12)(v11);
      goto LABEL_17;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v11);
    --qword_1EB220150;
    uint64_t result = (_DWORD *)off_1EB21C9E8(v11);
    uint64_t v11 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v12 = &xmmword_1EB21CA50;
      goto LABEL_16;
    }
  }
LABEL_17:
  *(_DWORD *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_1B0DC72B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 20))
  {
    uint64_t result = 0;
    *(_DWORD *)(a1 + 24) = 1;
    return result;
  }
  uint64_t v4 = v2 + 136 * *(unsigned __int16 *)(*(void *)(v2 + 88) + 4);
  int v5 = *(_DWORD *)(v4 + 208);
  uint64_t v6 = *(void *)(v4 + 200);
  size_t v7 = (v5 - 1);
  if (v6) {
    uint64_t v8 = (const void *)(v6 + 1);
  }
  else {
    uint64_t v8 = 0;
  }
  int v9 = *(_DWORD *)(a1 + 48);
  if ((v9 & 0x80000000) == 0)
  {
    int v10 = (int)v7 >= v9 ? *(_DWORD *)(a1 + 48) : v5 - 1;
    int v11 = memcmp(*(const void **)(a1 + 56), v8, v10);
    if (v11 < 0 || (!v11 ? (BOOL v12 = v9 < (int)v7) : (BOOL v12 = 0), v12)) {
      *(_DWORD *)(a1 + 24) = 1;
    }
  }
  *(_DWORD *)(a1 + 104) = 0;
  if (!v7) {
    return 0;
  }
  LODWORD(v13) = *(_DWORD *)(a1 + 108);
  if (v13 >= v7)
  {
    uint64_t v16 = 0;
    uint64_t v17 = *(void *)(a1 + 96);
  }
  else
  {
    if (!v13) {
      LODWORD(v13) = 64;
    }
    unint64_t v13 = (int)v13;
    do
    {
      unint64_t v14 = v13;
      v13 *= 2;
    }
    while (v14 < v7);
    uint64_t v15 = *(void *)(a1 + 96);
    if (sqlite3_initialize()) {
      return 7;
    }
    uint64_t v17 = sub_1B0C8E1B8(v15, v14);
    if (!v17) {
      return 7;
    }
    *(_DWORD *)(a1 + 108) = v14;
    *(void *)(a1 + 96) = v17;
    uint64_t v16 = *(int *)(a1 + 104);
  }
  memcpy((void *)(v17 + v16), v8, v7);
  uint64_t result = 0;
  *(_DWORD *)(a1 + 104) += v7;
  return result;
}

uint64_t sub_1B0DC73F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  sub_1B0DAB298(v2, a1, 0, 0);
  if (!*(_DWORD *)(v2 + 60))
  {
    uint64_t v5 = a1 + 136 * *(unsigned __int16 *)(*(void *)(a1 + 88) + 4);
    uint64_t v8 = *(void *)(v5 + 112);
    size_t v7 = (void *)(v5 + 112);
    uint64_t v6 = v8;
    if (v8)
    {
      if (**(unsigned char **)(a1 + 136 * *(unsigned __int16 *)(*(void *)(a1 + 88) + 4) + 200) != 48)
      {
        int v9 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
          --qword_1EB220150;
          off_1EB21C9E8(v6);
          uint64_t v6 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_11;
          }
          int v9 = &xmmword_1EB21CA50;
        }
        (*v9)(v6);
LABEL_11:
        void *v7 = 0;
        *(unsigned char *)(a1 + 20) = 1;
      }
    }
  }
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = *(unsigned int *)(v3 + 60);
  *(_DWORD *)(v3 + 60) = 0;
  return result;
}

void sub_1B0DC7510(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a3;
  if (!*(void *)a3)
  {
    int v13 = 89717;
LABEL_11:
    sub_1B0CE1978(v13);
    return;
  }
  __int16 v6 = *(_WORD *)(v4 + 20);
  if ((v6 & 0x24) != 0)
  {
    double v7 = *(double *)v4;
  }
  else if ((v6 & 8) != 0)
  {
    double v14 = *(double *)v4;
    if (*(double *)v4 < -9.22337204e18 || v14 > 9.22337204e18) {
      return;
    }
    *(void *)&double v7 = (uint64_t)v14;
  }
  else
  {
    if ((v6 & 0x12) == 0 || !*(void *)(v4 + 8)) {
      return;
    }
    LOBYTE(v7) = sub_1B0D186C0(v4);
  }
  if (LOBYTE(v7) - 6 < 0xFFFFFFFB) {
    return;
  }
  uint64_t v8 = (char *)sqlite3_value_blob(*(sqlite3_value **)(a3 + 8));
  if (!v8) {
    return;
  }
  uint64_t v9 = *(void *)(a3 + 8);
  if (!v9)
  {
    int v13 = 91138;
    goto LABEL_11;
  }
  int v10 = v8;
  __int16 v11 = *(_WORD *)(v9 + 20);
  if ((v11 & 2) != 0 && *(unsigned char *)(v9 + 22) == 1)
  {
    signed int v12 = *(_DWORD *)(v9 + 16);
  }
  else if ((v11 & 0x10) != 0)
  {
    signed int v12 = *(_DWORD *)(v9 + 16);
    if ((*(_WORD *)(v9 + 20) & 0x400) != 0) {
      v12 += *(_DWORD *)v9;
    }
  }
  else
  {
    if (v11) {
      return;
    }
    signed int v12 = sub_1B0D18228(*(void *)(a3 + 8), 1);
  }
  if (v12 >= 4 && v12 >= __rev16(*((unsigned __int16 *)v10 + 1)) * (8 * LOBYTE(v7) + 8))
  {
    if (sqlite3_initialize() || (uint64_t v17 = sub_1B0C7FC94(32)) == 0)
    {
      uint64_t v16 = &unk_1E9B51E88;
    }
    else
    {
      uint64_t v16 = (_DWORD *)v17;
      *(void *)uint64_t v17 = 0;
      *(void *)(v17 + 8) = 0;
      *(_DWORD *)(v17 + 16) = 0;
      *(void *)(v17 + 20) = 2147483645;
      *(_WORD *)(v17 + 28) = 0;
    }
    if (__rev16(*((unsigned __int16 *)v10 + 1)))
    {
      unint64_t v18 = 0;
      char v37 = 2 * LOBYTE(v7);
      unint64_t v19 = (2 * LOBYTE(v7));
      uint64_t v36 = (8 * LOBYTE(v7) + 8);
      do
      {
        unint64_t v20 = 0;
        uint64_t v21 = (unsigned __int8 *)&v10[(v18 * v36) | 4];
        unint64_t v22 = ((unint64_t)*v21 << 56) | ((unint64_t)v21[1] << 48) | ((unint64_t)v21[2] << 40) | ((unint64_t)v21[3] << 32) | ((unint64_t)v21[4] << 24) | ((unint64_t)v21[5] << 16) | ((unint64_t)v21[6] << 8);
        uint64_t v40 = 0;
        memset(v39, 0, sizeof(v39));
        unint64_t v38 = v22 + v21[7];
        int v23 = (unsigned int *)&v10[v18 * v36 + 12];
        do
        {
          int v24 = &v39[4 * v20 - 8];
          unsigned int v25 = *v23;
          unsigned int v26 = v23[1];
          v23 += 2;
          *((_DWORD *)v24 + 2) = bswap32(v25);
          *((_DWORD *)v24 + 3) = bswap32(v26);
          v20 += 2;
        }
        while (v20 < v19);
        if (v18)
        {
          uint64_t v27 = v16[6];
          if ((v27 + 1) >= v16[4])
          {
            sub_1B0CE62B0((uint64_t)v16, " ", 1u);
          }
          else
          {
            v16[6] = v27 + 1;
            *(unsigned char *)(*((void *)v16 + 1) + v27) = 32;
          }
        }
        sqlite3_str_appendf((sqlite3_str *)v16, "{%lld", v38);
        if (v37)
        {
          unint64_t v28 = v19;
          int v29 = (float *)v39;
          do
          {
            float v30 = *v29++;
            sqlite3_str_appendf((sqlite3_str *)v16, " %g", v30);
            --v28;
          }
          while (v28);
        }
        uint64_t v31 = v16[6];
        if ((v31 + 1) < v16[4])
        {
          v16[6] = v31 + 1;
          *(unsigned char *)(*((void *)v16 + 1) + v31) = 125;
        }
        else
        {
          sub_1B0CE62B0((uint64_t)v16, "}", 1u);
        }
        ++v18;
      }
      while (v18 < __rev16(*((unsigned __int16 *)v10 + 1)));
    }
    uint64_t v32 = *((unsigned __int8 *)v16 + 28);
    int v33 = sqlite3_str_finish((sqlite3_str *)v16);
    if (a1)
    {
      sub_1B0CEA530((uint64_t)a1, v33, -1, 1u, (uint64_t (*)(uint64_t))sqlite3_free);
      if (v32) {
        int v34 = v32;
      }
      else {
        int v34 = -1;
      }
      a1[9] = v34;
      if (*(_WORD *)(*(void *)a1 + 20))
      {
        if (v32 == 100)
        {
          int v35 = "another row available";
        }
        else if (v32 == 101)
        {
          int v35 = "no more rows available";
        }
        else if v32 > 0x1C || ((0x1410004uLL >> v32))
        {
          int v35 = "unknown error";
        }
        else
        {
          int v35 = off_1E5FF0368[v32];
        }
        sub_1B0CEA530((uint64_t)a1, v35, -1, 1u, 0);
      }
      return;
    }
    sub_1B0CE1978(97498);
    int v13 = 97620;
    goto LABEL_11;
  }
}

void sub_1B0DC797C(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  uint64_t v4 = *a3;
  if (!*a3)
  {
    sub_1B0CE1978(97220);
    goto LABEL_13;
  }
  __int16 v5 = *((_WORD *)v4 + 10);
  if (((0x1000000010001uLL >> v5) & 1) == 0)
  {
LABEL_13:
    if (a1)
    {
      *((_DWORD *)a1 + 9) = 1;
      uint64_t v8 = *(void *)a1;
      sub_1B0C79BBC(v8, "Invalid argument to rtreedepth()", -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
      return;
    }
    int v9 = 97407;
    goto LABEL_18;
  }
  if ((v5 & 2) != 0 && *((unsigned char *)v4 + 22) == 1)
  {
    int v7 = *((_DWORD *)v4 + 4);
    goto LABEL_12;
  }
  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 1) == 0)
    {
      int v7 = sub_1B0D18228((uint64_t)v4, 1);
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  int v7 = *((_DWORD *)v4 + 4);
  if ((*((_WORD *)v4 + 10) & 0x400) != 0) {
    v7 += *(_DWORD *)v4;
  }
LABEL_12:
  if (v7 <= 1) {
    goto LABEL_13;
  }
  int v10 = (unsigned __int16 *)sqlite3_value_blob(*a3);
  if (v10)
  {
    if (!a1)
    {
      int v9 = 97431;
LABEL_18:
      sub_1B0CE1978(v9);
      return;
    }
    uint64_t v11 = __rev16(*v10);
    uint64_t v12 = *(void *)a1;
    if ((*(_WORD *)(*(void *)a1 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v12, v11);
    }
    else
    {
      *(void *)uint64_t v12 = v11;
      *(_WORD *)(v12 + 20) = 4;
    }
  }
  else
  {
    sqlite3_result_error_nomem(a1);
  }
}

void sub_1B0DC7B00(_DWORD *a1, int a2, uint64_t *a3)
{
  if ((a2 - 3) <= 0xFFFFFFFD)
  {
    if (a1)
    {
      a1[9] = 1;
      uint64_t v4 = *(void *)a1;
      sub_1B0C79BBC(v4, "wrong number of arguments to function rtreecheck()", -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
    }
    else
    {
      sub_1B0CE1978(97407);
    }
    return;
  }
  uint64_t v7 = *a3;
  if (!*a3) {
    goto LABEL_17;
  }
  int v8 = *(unsigned __int16 *)(v7 + 20);
  if ((~v8 & 0x202) != 0 || *(unsigned char *)(v7 + 22) != 1)
  {
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = sub_1B0D18254((int *)v7, 1);
      if (a2 != 1) {
        goto LABEL_13;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v9 = 0;
    if (a2 != 1) {
      goto LABEL_13;
    }
LABEL_18:
    uint64_t v12 = "main";
    goto LABEL_25;
  }
  uint64_t v9 = *(void *)(v7 + 8);
  if (a2 == 1) {
    goto LABEL_18;
  }
LABEL_13:
  uint64_t v10 = a3[1];
  if (!v10) {
    goto LABEL_24;
  }
  int v11 = *(unsigned __int16 *)(v10 + 20);
  if ((~v11 & 0x202) != 0 || *(unsigned char *)(v10 + 22) != 1)
  {
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = (const char *)v9;
      uint64_t v9 = sub_1B0D18254((int *)v10, 1);
      goto LABEL_25;
    }
LABEL_24:
    uint64_t v12 = (const char *)v9;
    uint64_t v9 = 0;
    goto LABEL_25;
  }
  uint64_t v12 = (const char *)v9;
  uint64_t v9 = *(void *)(v10 + 8);
LABEL_25:
  if (!a1 || !*(void *)a1)
  {
    sub_1B0CE1978(97953);
    int v13 = 0;
    long long v55 = 0u;
    long long v56 = 0u;
    *(_OWORD *)pStmt = 0u;
    *(_OWORD *)unint64_t v54 = 0u;
    uint64_t v50 = 0;
    int v51 = v12;
    uint64_t v15 = "NULL";
    uint64_t v52 = v9;
    goto LABEL_33;
  }
  int v13 = *(sqlite3 **)(*(void *)a1 + 24);
  long long v55 = 0u;
  long long v56 = 0u;
  *(_OWORD *)pStmt = 0u;
  *(_OWORD *)unint64_t v54 = 0u;
  uint64_t v50 = v13;
  int v51 = v12;
  uint64_t v52 = v9;
  if (!v13)
  {
    uint64_t v15 = "NULL";
    goto LABEL_33;
  }
  int v14 = *((unsigned __int8 *)v13 + 113);
  if (v14 == 186)
  {
LABEL_31:
    uint64_t v15 = "unopened";
LABEL_33:
    sqlite3_log(21, "API call with %s database connection pointer", v15);
    sub_1B0CE1978(189277);
LABEL_34:
    int v16 = 1;
    goto LABEL_35;
  }
  if (v14 != 118)
  {
    if (v14 != 109)
    {
      uint64_t v15 = "invalid";
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  if (!*((unsigned char *)v13 + 101)) {
    goto LABEL_34;
  }
  int v16 = 0;
  DWORD2(v55) = sqlite3_exec(v13, "BEGIN", 0, 0, 0);
  if (DWORD2(v55))
  {
LABEL_43:
    int v23 = -1;
    goto LABEL_46;
  }
LABEL_35:
  uint64_t v17 = sub_1B0DC8270((uint64_t)&v50, "SELECT * FROM %Q.'%q_rowid'", v12, v9);
  if (!v17)
  {
    if (DWORD2(v55) == 7) {
      int v22 = 7;
    }
    else {
      int v22 = 0;
    }
    DWORD2(v55) = v22;
    goto LABEL_43;
  }
  unint64_t v18 = (unsigned __int16 *)v17;
  uint64_t v19 = *(void *)(*(void *)v17 + 24);
  if (v19)
  {
    xmmword_1EB21CA40(v19);
    uint64_t v20 = *(void *)(*(void *)v18 + 24);
    int v21 = v18[130];
    if (v20) {
      xmmword_1EB21CA50(v20);
    }
  }
  else
  {
    int v21 = v18[130];
  }
  sqlite3_finalize((sqlite3_stmt *)v18);
  int v23 = 1 - v21;
LABEL_46:
  uint64_t v24 = sub_1B0DC8270((uint64_t)&v50, "SELECT * FROM %Q.%Q", v12, v9);
  if (v24)
  {
    unsigned int v25 = (sqlite3_stmt *)v24;
    uint64_t v26 = *(void *)(*(void *)v24 + 24);
    if (v26)
    {
      xmmword_1EB21CA40(v26);
      uint64_t v27 = *(void *)(*(void *)v25 + 24);
      int v28 = *((unsigned __int16 *)v25 + 130);
      if (v27) {
        xmmword_1EB21CA50(v27);
      }
    }
    else
    {
      int v28 = *((unsigned __int16 *)v25 + 130);
    }
    int v29 = v23 + v28;
    if (v23 + v28 < 0 != __OFADD__(v23, v28)) {
      int v30 = v29 + 1;
    }
    else {
      int v30 = v23 + v28;
    }
    HIDWORD(pStmt[0]) = v30 >> 1;
    if (v29 > 1)
    {
      if (sqlite3_step(v25) == 100)
      {
        uint64_t v31 = *(void *)(*(void *)v25 + 24);
        if (v31) {
          xmmword_1EB21CA40(v31);
        }
        uint64_t v32 = *((void *)v25 + 20);
        if (v32 && *((unsigned __int16 *)v25 + 130) >= 2u)
        {
          int v33 = (uint64_t *)(v32 + 64);
        }
        else
        {
          uint64_t v34 = *(void *)v25;
          *(_DWORD *)(v34 + 80) = 25;
          sub_1B0D0E714(v34, 25);
          int v33 = &qword_1B0DE22A8;
        }
        __int16 v35 = *((_WORD *)v33 + 10);
        uint64_t v36 = *(void *)v25;
        unsigned int v37 = *((_DWORD *)v25 + 13);
        if (v37 || (int v38 = *(unsigned __int8 *)(v36 + 103), *(unsigned char *)(v36 + 103)))
        {
          int v38 = sub_1B0D1806C(v36, v37);
          uint64_t v36 = *(void *)v25;
        }
        char v39 = v35 & 0x3F;
        *((_DWORD *)v25 + 13) = v38;
        uint64_t v40 = *(void *)(v36 + 24);
        if (v40) {
          xmmword_1EB21CA50(v40);
        }
        LODWORD(pStmt[0]) = (0x50505050uLL >> v39) & 1;
      }
    }
    else
    {
      sub_1B0DC8388((char *)&v50, "Schema corrupt or not an rtree");
    }
    int v41 = sqlite3_finalize(v25);
    if (v41 != 11) {
      DWORD2(v55) = v41;
    }
  }
  if (SHIDWORD(pStmt[0]) >= 1)
  {
    if (!DWORD2(v55)) {
      sub_1B0DC842C((uint64_t)&v50, 0, 0, 1);
    }
    sub_1B0DC8904((uint64_t)&v50, "_rowid", (int)v55);
    sub_1B0DC8904((uint64_t)&v50, "_parent", SDWORD1(v55));
  }
  sqlite3_finalize(pStmt[1]);
  sqlite3_finalize(v54[0]);
  sqlite3_finalize(v54[1]);
  if (v16)
  {
    int v42 = DWORD2(v55);
    uint64_t v43 = (char *)v56;
    if (DWORD2(v55))
    {
LABEL_78:
      if (!a1)
      {
        sub_1B0CE1978(97620);
        goto LABEL_106;
      }
      a1[9] = v42;
      if ((*(_WORD *)(*(void *)a1 + 20) & 1) == 0) {
        goto LABEL_106;
      }
      switch(v42)
      {
        case 516:
          uint64_t v44 = "abort due to ROLLBACK";
          break;
        case 101:
          uint64_t v44 = "no more rows available";
          break;
        case 100:
          uint64_t v44 = "another row available";
          break;
        default:
          if v42 > 0x1Cu || ((0x1410004uLL >> v42)) {
            uint64_t v44 = "unknown error";
          }
          else {
            uint64_t v44 = off_1E5FF0368[v42];
          }
          break;
      }
      uint64_t v46 = (uint64_t)a1;
      uint64_t v47 = 0;
      goto LABEL_105;
    }
  }
  else
  {
    int v45 = sqlite3_exec(v13, "END", 0, 0, 0);
    int v42 = DWORD2(v55);
    if (!DWORD2(v55)) {
      int v42 = v45;
    }
    DWORD2(v55) = v42;
    uint64_t v43 = (char *)v56;
    if (v42) {
      goto LABEL_78;
    }
  }
  if (!a1)
  {
    sub_1B0CE1978(97498);
    goto LABEL_106;
  }
  if (v43) {
    uint64_t v44 = v43;
  }
  else {
    uint64_t v44 = "ok";
  }
  uint64_t v46 = (uint64_t)a1;
  uint64_t v47 = -1;
LABEL_105:
  sub_1B0CEA530(v46, v44, -1, 1u, (uint64_t (*)(uint64_t))v47);
LABEL_106:
  if (!v43) {
    return;
  }
  size_t v48 = (void (**)(char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_112;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v43);
  --qword_1EB220150;
  off_1EB21C9E8(v43);
  uint64_t v43 = (char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    size_t v48 = (void (**)(char *))&xmmword_1EB21CA50;
LABEL_112:
    size_t v49 = *v48;
    v49(v43);
  }
}

uint64_t sub_1B0DC818C(uint64_t result, uint64_t a2, int a3, void *a4)
{
  unint64_t v4 = 0;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(unsigned __int8 *)(result + 39) * (uint64_t)a3;
  *a4 = (((unint64_t)*(unsigned __int8 *)(v5 + v6 + 4) << 56) | ((unint64_t)*(unsigned __int8 *)(v5 + v6 + 5) << 48) | ((unint64_t)*(unsigned __int8 *)(v5 + v6 + 6) << 40) | ((unint64_t)*(unsigned __int8 *)(v5 + v6 + 7) << 32) | ((unint64_t)*(unsigned __int8 *)(v5 + v6 + 8) << 24) | ((unint64_t)*(unsigned __int8 *)(v5 + v6 + 9) << 16) | ((unint64_t)*(unsigned __int8 *)(v5 + v6 + 10) << 8))
      + *(unsigned __int8 *)(v5 + v6 + 11);
  uint64_t v7 = (unsigned int *)(v5 + (int)v6 + 12);
  do
  {
    int v8 = &a4[v4 / 2];
    *((_DWORD *)v8 + 2) = bswap32(*v7);
    *((_DWORD *)v8 + 3) = bswap32(v7[1]);
    v7 += 2;
    v4 += 2;
  }
  while (v4 < *(unsigned __int8 *)(result + 37));
  return result;
}

unint64_t sub_1B0DC8220(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = (unsigned __int8 *)(*(void *)(a2 + 24) + *(unsigned __int8 *)(a1 + 39) * (uint64_t)a3);
  return (((unint64_t)v3[4] << 56) | ((unint64_t)v3[5] << 48) | ((unint64_t)v3[6] << 40) | ((unint64_t)v3[7] << 32) | ((unint64_t)v3[8] << 24) | ((unint64_t)v3[9] << 16) | ((unint64_t)v3[10] << 8))
       + v3[11];
}

uint64_t sub_1B0DC8270(uint64_t a1, char *a2, ...)
{
  va_start(va, a2);
  v8[0] = 0;
  va_copy((va_list)&v8[1], va);
  uint64_t v3 = (unsigned __int8 *)sqlite3_vmprintf(a2, va);
  uint64_t v5 = v3;
  if (*(_DWORD *)(a1 + 64))
  {
    if (!v3) {
      return v8[0];
    }
  }
  else
  {
    if (!v3)
    {
      *(_DWORD *)(a1 + 64) = 7;
      return v8[0];
    }
    *(_DWORD *)(a1 + 64) = sub_1B0C7EAC0(*(void *)a1, v3, 0xFFFFFFFFLL, 128, 0, v8, 0, v4);
  }
  uint64_t v6 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_11;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v5);
  --qword_1EB220150;
  off_1EB21C9E8(v5);
  uint64_t v5 = (unsigned __int8 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v6 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_11:
    (*v6)(v5);
  }
  return v8[0];
}

char *sub_1B0DC8388(char *result, char *a2, ...)
{
  va_start(va, a2);
  if (!*((_DWORD *)result + 16))
  {
    uint64_t v2 = result;
    if (*((int *)result + 20) <= 99)
    {
      uint64_t result = sqlite3_vmprintf(a2, va);
      if (!result) {
        goto LABEL_7;
      }
      uint64_t v3 = *((void *)v2 + 9);
      uint64_t v4 = "\n";
      if (!v3) {
        uint64_t v4 = &byte_1B0DE9952;
      }
      uint64_t result = sqlite3_mprintf("%z%s%z", v3, v4, result);
      *((void *)v2 + 9) = result;
      if (!result) {
LABEL_7:
      }
        *((_DWORD *)v2 + 16) = 7;
      ++*((_DWORD *)v2 + 20);
    }
  }
  return result;
}

uint64_t sub_1B0DC842C(uint64_t result, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (*(_DWORD *)(result + 64)) {
    return result;
  }
  uint64_t v7 = result;
  int v8 = *(void **)(result + 32);
  if (!v8)
  {
    uint64_t result = sub_1B0DC8270(result, "SELECT data FROM %Q.'%q_node' WHERE nodeno=?", *(void *)(result + 8), *(void *)(result + 16));
    *(void *)(v7 + 32) = result;
    if (*(_DWORD *)(v7 + 64)) {
      return result;
    }
    int v8 = (void *)result;
  }
  if (!sub_1B0CC3F2C((uint64_t)v8, 0))
  {
    uint64_t v9 = v8[16];
    if ((*(_WORD *)(v9 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v9, a4);
    }
    else
    {
      *(void *)uint64_t v9 = a4;
      *(_WORD *)(v9 + 20) = 4;
    }
    uint64_t v10 = *(void *)(*v8 + 24);
    if (v10) {
      xmmword_1EB21CA50(v10);
    }
  }
  if (sqlite3_step(*(sqlite3_stmt **)(v7 + 32)) == 100)
  {
    unsigned int v11 = a2;
    int v12 = sqlite3_column_bytes(*(sqlite3_stmt **)(v7 + 32), 0);
    int v13 = sqlite3_column_blob(*(sqlite3_stmt **)(v7 + 32), 0);
    if (sqlite3_initialize() || (uint64_t v15 = (unsigned __int16 *)sub_1B0C7FC94(v12)) == 0)
    {
      int v12 = 0;
      int v14 = 0;
      *(_DWORD *)(v7 + 64) = 7;
    }
    else
    {
      int v14 = v15;
      memcpy(v15, v13, v12);
    }
    a2 = v11;
  }
  else
  {
    int v12 = 0;
    int v14 = 0;
  }
  uint64_t result = sqlite3_reset(*(sqlite3_stmt **)(v7 + 32));
  if (!*(_DWORD *)(v7 + 64))
  {
    *(_DWORD *)(v7 + 64) = result;
    if (!v14 && !result) {
      return (uint64_t)sub_1B0DC8388((char *)v7, "Node %lld missing from database", a4);
    }
  }
  if (!v14) {
    return result;
  }
  if (v12 > 3)
  {
    if (!a3)
    {
      a2 = __rev16(*v14);
      if (a2 >= 0x29)
      {
        sub_1B0DC8388((char *)v7, "Rtree depth out of range (%d)");
        goto LABEL_31;
      }
    }
    unsigned int v16 = __rev16(v14[1]);
    if ((int)(((8 * *(_DWORD *)(v7 + 28) + 8) * v16) | 4) > v12)
    {
      sub_1B0DC8388((char *)v7, "Node %lld is too small for cell count of %d (%d bytes)");
      goto LABEL_31;
    }
    if (!v16) {
      goto LABEL_31;
    }
    int v19 = 0;
    unsigned int v36 = a2 - 1;
    __int16 v35 = (char *)v14 + 19;
    int v38 = v14;
    int v39 = a2;
    unsigned int v37 = v16;
    while (1)
    {
      uint64_t v20 = *(int *)(v7 + 28);
      uint64_t v21 = 8 * v20 + 8;
      int v22 = v19;
      int v23 = (unsigned __int8 *)v14 + (int)v21 * (uint64_t)v19;
      uint64_t v40 = v23[4];
      uint64_t v41 = v23[5];
      uint64_t v42 = v23[6];
      uint64_t v43 = v23[7];
      uint64_t v44 = v23[8];
      uint64_t v45 = v23[9];
      uint64_t v46 = v23[10];
      uint64_t v47 = v23[11];
      if ((int)v20 >= 1) {
        break;
      }
LABEL_66:
      uint64_t v33 = (v40 << 56) | (v41 << 48) | (v42 << 40) | (v43 << 32) | (v44 << 24) | (v45 << 16) | (v46 << 8);
      uint64_t v34 = v33 + v47;
      if (v39 < 1)
      {
        sub_1B0DC89A8(v7, 1u, v33 + v47, a4);
        ++*(_DWORD *)(v7 + 56);
      }
      else
      {
        sub_1B0DC89A8(v7, 0, v33 + v47, a4);
        sub_1B0DC842C(v7, v36, v23 + 12, v34);
        ++*(_DWORD *)(v7 + 60);
      }
      int v14 = v38;
      int v19 = v22 + 1;
      if (v22 + 1 == v37) {
        goto LABEL_31;
      }
    }
    uint64_t v24 = 0;
    uint64_t v25 = a3 + 3;
    uint64_t v26 = &v35[v19 * v21];
    while (1)
    {
      float v27 = COERCE_FLOAT(bswap32(*(_DWORD *)(v26 - 7)));
      float v28 = COERCE_FLOAT(bswap32(*(_DWORD *)(v26 - 3)));
      if (*(_DWORD *)(v7 + 24)) {
        break;
      }
      if (v27 > v28) {
        goto LABEL_49;
      }
LABEL_50:
      if (a3)
      {
        float v29 = COERCE_FLOAT(bswap32(*(_DWORD *)(v25 - 3)));
        float v30 = COERCE_FLOAT(bswap32(*(_DWORD *)(v25 + 1)));
        if (*(_DWORD *)(v7 + 24))
        {
          if (SLODWORD(v27) >= SLODWORD(v29) && SLODWORD(v28) <= SLODWORD(v30)) {
            goto LABEL_46;
          }
        }
        else if (v27 >= v29 && v28 <= v30)
        {
          goto LABEL_46;
        }
        sub_1B0DC8388((char *)v7, "Dimension %d of cell %d on node %lld is corrupt relative to parent", v24, v22, a4);
      }
LABEL_46:
      v26 += 8;
      ++v24;
      v25 += 8;
      if (v24 >= *(int *)(v7 + 28)) {
        goto LABEL_66;
      }
    }
    if (SLODWORD(v27) <= SLODWORD(v28)) {
      goto LABEL_50;
    }
LABEL_49:
    sub_1B0DC8388((char *)v7, "Dimension %d of cell %d on node %lld is corrupt", v24, v22, a4);
    goto LABEL_50;
  }
  sub_1B0DC8388((char *)v7, "Node %lld is too small (%d bytes)");
LABEL_31:
  uint64_t v17 = (uint64_t (**)(unsigned __int16 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_36:
    unint64_t v18 = *v17;
    return v18(v14);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v14);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v14);
  int v14 = (unsigned __int16 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v17 = (uint64_t (**)(unsigned __int16 *))&xmmword_1EB21CA50;
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_1B0DC8904(uint64_t result, const char *a2, uint64_t a3)
{
  if (!*(_DWORD *)(result + 64))
  {
    uint64_t v5 = result;
    uint64_t result = sub_1B0DC8270(result, "SELECT count(*) FROM %Q.'%q%s'", *(void *)(result + 8), *(void *)(result + 16), a2);
    if (result)
    {
      uint64_t v6 = (sqlite3_stmt *)result;
      if (sqlite3_step((sqlite3_stmt *)result) == 100)
      {
        sqlite3_int64 v7 = sqlite3_column_int64(v6, 0);
        if (v7 != a3) {
          sub_1B0DC8388((char *)v5, "Wrong number of entries in %%%s table - expected %lld, actual %lld", a2, a3, v7);
        }
      }
      uint64_t result = sqlite3_finalize(v6);
      *(_DWORD *)(v5 + 64) = result;
    }
  }
  return result;
}

uint64_t sub_1B0DC89A8(uint64_t result, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = result;
  uint64_t v7 = result + 8 * a2;
  uint64_t v10 = *(sqlite3_stmt **)(v7 + 40);
  uint64_t v9 = (void *)(v7 + 40);
  int v8 = v10;
  if (v10)
  {
    if (*(_DWORD *)(result + 64)) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1B0DC8270(result, off_1E5FF06C0[a2], *(void *)(result + 8), *(void *)(result + 16));
    int v8 = (sqlite3_stmt *)result;
    *uint64_t v9 = result;
    if (*(_DWORD *)(v6 + 64)) {
      return result;
    }
  }
  if (!sub_1B0CC3F2C((uint64_t)v8, 0))
  {
    uint64_t v11 = *((void *)v8 + 16);
    if ((*(_WORD *)(v11 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v11, a3);
    }
    else
    {
      *(void *)uint64_t v11 = a3;
      *(_WORD *)(v11 + 20) = 4;
    }
    uint64_t v12 = *(void *)(*(void *)v8 + 24);
    if (v12) {
      xmmword_1EB21CA50(v12);
    }
  }
  int v13 = sqlite3_step(v8);
  if (v13 == 100)
  {
    if (sqlite3_column_int64(v8, 0) != a4) {
      sub_1B0DC8388((char *)v6, "Found (%lld -> %lld) in %s table, expected (%lld -> %lld)");
    }
  }
  else if (v13 == 101)
  {
    sub_1B0DC8388((char *)v6, "Mapping (%lld -> %lld) missing from %s table");
  }
  uint64_t result = sqlite3_reset(v8);
  if (!*(_DWORD *)(v6 + 64)) {
    *(_DWORD *)(v6 + 64) = result;
  }
  return result;
}

uint64_t sub_1B0DC8B28(sqlite3 *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, char **a6)
{
  return sub_1B0DCAA2C(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t sub_1B0DC8B30(sqlite3 *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, char **a6)
{
  return sub_1B0DCAA2C(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1B0DC8B38(uint64_t a1, unsigned int *a2)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  int8x16_t v4 = 0uLL;
  memset(v41, 0, 41);
  unint64_t v5 = *a2;
  if ((int)v5 >= 1)
  {
    uint64_t v6 = *((void *)a2 + 1);
    if (v5 >= 8)
    {
      uint64_t v7 = v5 & 0x7FFFFFF8;
      uint64_t v10 = (unsigned __int8 *)(v6 + 52);
      uint64_t v11 = v5 & 0xFFFFFFF8;
      int8x16_t v12 = 0uLL;
      do
      {
        v13.i16[0] = *(v10 - 48);
        v13.i16[1] = *(v10 - 36);
        v13.i16[2] = *(v10 - 24);
        v13.i16[3] = *(v10 - 12);
        v14.i16[0] = *v10;
        v14.i16[1] = v10[12];
        v14.i16[2] = v10[24];
        v14.i16[3] = v10[36];
        int16x4_t v15 = vceq_s16(v13, (int16x4_t)0x40004000400040);
        int16x4_t v16 = vceq_s16(v14, (int16x4_t)0x40004000400040);
        int8x16_t v4 = (int8x16_t)vsubw_s16((int32x4_t)vbicq_s8(v4, (int8x16_t)vmovl_s16(v15)), v15);
        int8x16_t v12 = (int8x16_t)vsubw_s16((int32x4_t)vbicq_s8(v12, (int8x16_t)vmovl_s16(v16)), v16);
        v10 += 96;
        v11 -= 8;
      }
      while (v11);
      int32x4_t v17 = (int32x4_t)vorrq_s8(v4, v12);
      int v8 = vmaxv_u16((uint16x4_t)vmovn_s32(vtstq_s32(v17, v17))) & 1;
      if (v7 == v5)
      {
LABEL_12:
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        int v9 = 0;
        int v23 = (unsigned __int8 *)(*((void *)a2 + 1) + 4);
        while (1)
        {
          if (v8)
          {
            if (v23[1]) {
              goto LABEL_15;
            }
          }
          else if (v23[1])
          {
            int v24 = *((_DWORD *)v23 - 1);
            if (v24 > 0) {
              goto LABEL_19;
            }
            if (*v23 == 2)
            {
              uint64_t v36 = *((void *)a2 + 4);
              if (v22)
              {
                if (v22 < 2)
                {
                  uint64_t v37 = 0;
                  goto LABEL_50;
                }
                uint64_t v37 = v22 & 0x7FFFFFFE;
                uint64_t v38 = v36 + 8;
                uint64_t v39 = v37;
                do
                {
                  *(_DWORD *)(v38 - 8) = 0;
                  *(_DWORD *)uint64_t v38 = 0;
                  *(unsigned char *)(v38 - 4) = 0;
                  *(unsigned char *)(v38 + 4) = 0;
                  v38 += 16;
                  v39 -= 2;
                }
                while (v39);
                if (v22 != v37)
                {
LABEL_50:
                  uint64_t v40 = (unsigned char *)(v36 + 8 * v37 + 4);
                  do
                  {
                    *((_DWORD *)v40 - 1) = 0;
                    unsigned char *v40 = 0;
                    v40 += 8;
                    ++v37;
                  }
                  while (v22 != v37);
                }
              }
              uint64_t result = 0;
              a2[10] = 1;
              *(_DWORD *)(v36 + v21) = 1;
              *(unsigned char *)(v36 + 8 * v22 + 4) = 1;
              *((void *)a2 + 8) = 0x403E000000000000;
              *((void *)a2 + 9) = 1;
              a2[20] = 1;
              return result;
            }
LABEL_15:
            int v24 = *((_DWORD *)v23 - 1);
            if (v24 >= 1)
            {
LABEL_19:
              if (v24 <= *(unsigned __int8 *)(a1 + 37))
              {
                int v25 = 0;
                char v26 = 65;
                switch(*v23)
                {
                  case 2u:
                    goto LABEL_23;
                  case 3u:
                  case 5u:
                  case 6u:
                  case 7u:
                  case 9u:
                  case 0xAu:
                  case 0xBu:
                  case 0xCu:
                  case 0xDu:
                  case 0xEu:
                  case 0xFu:
                  case 0x11u:
                  case 0x12u:
                  case 0x13u:
                  case 0x14u:
                  case 0x15u:
                  case 0x16u:
                  case 0x17u:
                  case 0x18u:
                  case 0x19u:
                  case 0x1Au:
                  case 0x1Bu:
                  case 0x1Cu:
                  case 0x1Du:
                  case 0x1Eu:
                  case 0x1Fu:
                    goto LABEL_27;
                  case 4u:
                    LOBYTE(v25) = 0;
                    char v26 = 69;
                    goto LABEL_23;
                  case 8u:
                    LOBYTE(v25) = 1;
                    char v26 = 66;
                    goto LABEL_23;
                  case 0x10u:
                    LOBYTE(v25) = 0;
                    char v26 = 67;
                    goto LABEL_23;
                  case 0x20u:
                    LOBYTE(v25) = 1;
                    char v26 = 68;
                    goto LABEL_23;
                  default:
                    goto LABEL_21;
                }
                goto LABEL_27;
              }
            }
            int v25 = *v23;
LABEL_21:
            if (v25 == 64)
            {
              LOBYTE(v25) = 1;
              char v26 = 70;
LABEL_23:
              float v27 = (char *)v41 + v9;
              *float v27 = v26;
              int v28 = v9 + 3;
              BOOL v29 = __OFADD__(v9, 2);
              v9 += 2;
              v27[1] = v24 + 47;
              if (v9 < 0 != v29) {
                int v30 = v28;
              }
              else {
                int v30 = v9;
              }
              uint64_t v31 = *((void *)a2 + 4) + v21;
              *(_DWORD *)uint64_t v31 = v30 >> 1;
              *(unsigned char *)(v31 + 4) = v25;
            }
          }
LABEL_27:
          if (++v22 < v5)
          {
            v21 += 8;
            v23 += 12;
            if (v9 < 40) {
              continue;
            }
          }
          a2[10] = 2;
          a2[14] = 1;
          if (v9 >= 1)
          {
            uint64_t v32 = sqlite3_mprintf("%s", (const char *)v41);
            *((void *)a2 + 6) = v32;
            if (!v32) {
              return 7;
            }
          }
          goto LABEL_39;
        }
      }
    }
    else
    {
      uint64_t v7 = 0;
      int v8 = 0;
    }
    unint64_t v18 = (unsigned __int8 *)(v6 + 12 * v7 + 4);
    unint64_t v19 = v5 - v7;
    do
    {
      int v20 = *v18;
      v18 += 12;
      if (v20 == 64) {
        int v8 = 1;
      }
      --v19;
    }
    while (v19);
    goto LABEL_12;
  }
  int v9 = 0;
  a2[10] = 2;
  a2[14] = 1;
LABEL_39:
  uint64_t result = 0;
  if (v9 >= 0) {
    int v34 = v9;
  }
  else {
    int v34 = v9 + 1;
  }
  uint64_t v35 = *(uint64_t *)(a1 + 72) >> (v34 >> 1);
  *((double *)a2 + 8) = (double)v35 * 6.0;
  *((void *)a2 + 9) = v35;
  return result;
}

uint64_t sub_1B0DC8F44(uint64_t a1)
{
  return 0;
}

uint64_t sub_1B0DC8F60(uint64_t a1)
{
  uint64_t v2 = sqlite3_mprintf("DROP TABLE '%q'.'%q_node';DROP TABLE '%q'.'%q_rowid';DROP TABLE '%q'.'%q_parent';",
         *(void *)(a1 + 48),
         *(void *)(a1 + 56),
         *(void *)(a1 + 48),
         *(void *)(a1 + 56),
         *(void *)(a1 + 48),
         *(void *)(a1 + 56));
  if (!v2) {
    return 7;
  }
  uint64_t v3 = v2;
  int8x16_t v4 = *(void **)(a1 + 112);
  if (v4 && !*(unsigned char *)(a1 + 40) && !*(_DWORD *)(a1 + 80))
  {
    *(void *)(a1 + 112) = 0;
    unint64_t v5 = (sqlite3_stmt *)v4[3];
    uint64_t v6 = (void *)v4[4];
    uint64_t v7 = v6[3];
    if (v7) {
      xmmword_1EB21CA40(v7);
    }
    sub_1B0D05C10(v6, v4);
    uint64_t v8 = v6[3];
    if (v8) {
      xmmword_1EB21CA50(v8);
    }
    sqlite3_finalize(v5);
  }
  uint64_t v9 = sqlite3_exec(*(sqlite3 **)(a1 + 24), v3, 0, 0, 0);
  uint64_t v10 = (void (**)(const char *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
    --qword_1EB220150;
    off_1EB21C9E8(v3);
    uint64_t v3 = (const char *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_16;
    }
    uint64_t v10 = (void (**)(const char *))&xmmword_1EB21CA50;
  }
  (*v10)(v3);
LABEL_16:
  if (!v9) {
    sub_1B0DCB6D8(a1);
  }
  return v9;
}

uint64_t sub_1B0DC90CC(uint64_t a1, uint64_t *a2)
{
  if (sqlite3_initialize())
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = sub_1B0C7FC94(296);
    if (v4)
    {
      uint64_t v5 = 0;
      *(void *)(v4 + 288) = 0;
      *(_OWORD *)(v4 + 256) = 0u;
      *(_OWORD *)(v4 + 272) = 0u;
      *(_OWORD *)(v4 + 224) = 0u;
      *(_OWORD *)(v4 + 240) = 0u;
      *(_OWORD *)(v4 + 192) = 0u;
      *(_OWORD *)(v4 + 208) = 0u;
      *(_OWORD *)(v4 + 160) = 0u;
      *(_OWORD *)(v4 + 176) = 0u;
      *(_OWORD *)(v4 + 128) = 0u;
      *(_OWORD *)(v4 + 144) = 0u;
      *(_OWORD *)(v4 + 96) = 0u;
      *(_OWORD *)(v4 + 112) = 0u;
      *(_OWORD *)(v4 + 64) = 0u;
      *(_OWORD *)(v4 + 80) = 0u;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
      *(_OWORD *)uint64_t v4 = 0u;
      *(_OWORD *)(v4 + 16) = 0u;
      ++*(_DWORD *)(a1 + 80);
      *(void *)uint64_t v4 = a1;
      goto LABEL_6;
    }
  }
  uint64_t v5 = 7;
LABEL_6:
  *a2 = v4;
  return v5;
}

uint64_t sub_1B0DC9158(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *a1;
  sub_1B0DCB8C8((uint64_t)a1);
  sqlite3_finalize((sqlite3_stmt *)v1[7]);
  uint64_t v3 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_6;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = (void *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v3 = &xmmword_1EB21CA50;
LABEL_6:
    (*v3)(v1);
  }
  int v4 = *(_DWORD *)(v2 + 80) - 1;
  *(_DWORD *)(v2 + 80) = v4;
  uint64_t v5 = *(void **)(v2 + 112);
  if (v5)
  {
    if (!*(unsigned char *)(v2 + 40) && v4 == 0)
    {
      *(void *)(v2 + 112) = 0;
      uint64_t v7 = (sqlite3_stmt *)v5[3];
      uint64_t v8 = (void *)v5[4];
      uint64_t v9 = v8[3];
      if (v9) {
        xmmword_1EB21CA40(v9);
      }
      sub_1B0D05C10(v8, v5);
      uint64_t v10 = v8[3];
      if (v10) {
        xmmword_1EB21CA50(v10);
      }
      sqlite3_finalize(v7);
    }
  }
  return 0;
}

uint64_t sub_1B0DC927C(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t *a5)
{
  uint64_t v10 = *(void *)a1;
  uint64_t v58 = 0;
  ++*(_DWORD *)(v10 + 64);
  sub_1B0DCB8C8(a1);
  *(_DWORD *)(a1 + 12) = a2;
  if (a2 == 1)
  {
    uint64_t v57 = 0;
    uint64_t v11 = *a5;
    if (*a5)
    {
      __int16 v12 = *(_WORD *)(v11 + 20);
      if ((v12 & 0x24) != 0)
      {
        uint64_t v13 = *(void *)v11;
        goto LABEL_14;
      }
      if ((v12 & 8) != 0)
      {
        double v48 = *(double *)v11;
        if (*(double *)v11 >= -9.22337204e18)
        {
          if (v48 <= 9.22337204e18) {
            uint64_t v13 = (uint64_t)v48;
          }
          else {
            uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v13 = 0x8000000000000000;
        }
LABEL_14:
        sqlite3_int64 v56 = 0;
        uint64_t v15 = *a5;
        if (*a5)
        {
          __int16 v17 = *(_WORD *)(v15 + 20);
          if ((0x4000000040004uLL >> v17))
          {
            sub_1B0CEE968(*a5, 0);
            __int16 v17 = *(_WORD *)(v15 + 20);
          }
          int v18 = byte_1B0DE186A[v17 & 0x3F];
          if (v18 == 1
            || v18 == 2
            && ((uint64_t v19 = *a5) == 0
              ? (sub_1B0CE1978(89752), double v21 = 0.0)
              : (__int16 v20 = *(_WORD *)(v19 + 20), (v20 & 8) != 0)
              ? (double v21 = *(double *)v19)
              : (v20 & 0x24) == 0
              ? ((v20 & 0x12) == 0
               ? (double v21 = 0.0)
               : (double v21 = sub_1B0D18684(v19)))
              : (double v21 = (double)*(uint64_t *)v19),
                v21 == (double)v13))
          {
            uint64_t v15 = sub_1B0DCBEE0(v10, v13, &v57, &v56);
            if (!v15)
            {
              uint64_t v49 = v57;
              if (v57)
              {
                uint64_t v50 = sub_1B0DCBFE8(a1, 0, 0.0);
                *(void *)(a1 + 88) = v49;
                *(void *)(v50 + 8) = v56;
                *(unsigned char *)(v50 + 17) = 1;
                uint64_t v51 = *(void *)(v49 + 24);
                uint64_t v52 = __rev16(*(unsigned __int16 *)(v51 + 2));
                if (v52)
                {
                  uint64_t v53 = 0;
                  unint64_t v54 = (unsigned __int8 *)(v51 + 5);
                  while ((((unint64_t)*(v54 - 1) << 56) | ((unint64_t)*v54 << 48) | ((unint64_t)v54[1] << 40) | ((unint64_t)v54[2] << 32) | ((unint64_t)v54[3] << 24) | ((unint64_t)v54[4] << 16) | ((unint64_t)v54[5] << 8))
                        + v54[6] != v13)
                  {
                    v54 += *(unsigned __int8 *)(v10 + 39);
                    if (v52 == ++v53) {
                      goto LABEL_98;
                    }
                  }
                  uint64_t v15 = 0;
                  *(unsigned char *)(v50 + 18) = v53;
                }
                else
                {
LABEL_98:
                  uint64_t v15 = 267;
                  *(unsigned char *)(v50 + 18) = 0;
                }
                goto LABEL_101;
              }
            }
          }
          else
          {
            uint64_t v15 = 0;
          }
        }
        else
        {
          sub_1B0CE1978(97220);
        }
        *(unsigned char *)(a1 + 8) = 1;
        goto LABEL_101;
      }
      if ((v12 & 0x12) != 0 && *(void *)(v11 + 8))
      {
        uint64_t v13 = sub_1B0D186C0(v11);
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B0CE1978(89717);
    }
    uint64_t v13 = 0;
    goto LABEL_14;
  }
  uint64_t v14 = sub_1B0DCC154(v10, 1, 0, &v58);
  uint64_t v15 = v14;
  if ((int)a4 < 1 || v14)
  {
    if (v14) {
      goto LABEL_101;
    }
LABEL_10:
    uint64_t v16 = sub_1B0DCBFE8(a1, (*(unsigned char *)(v10 + 44) + 1), 0.0);
    if (v16)
    {
      *(void *)(v16 + 8) = 1;
      *(_WORD *)(v16 + 17) = 1;
      *(void *)(a1 + 88) = v58;
      uint64_t v58 = 0;
      uint64_t v15 = sub_1B0DCC5D8(a1);
      goto LABEL_101;
    }
    return 7;
  }
  if (sqlite3_initialize())
  {
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 16) = a4;
    uint64_t v15 = 7;
    goto LABEL_101;
  }
  uint64_t v22 = (void *)sub_1B0C7FC94(24 * a4);
  *(void *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 16) = a4;
  if (!v22)
  {
LABEL_87:
    uint64_t v15 = 7;
    goto LABEL_101;
  }
  bzero(v22, 24 * a4);
  bzero((void *)(a1 + 128), 4 * *(int *)(v10 + 44) + 4);
  uint64_t v23 = 0;
  uint64_t v24 = 24 * a4;
  int v25 = (char *)(a3 + 1);
  while (1)
  {
    uint64_t v27 = *(void *)(a1 + 24);
    uint64_t v28 = *a5;
    if (*a5)
    {
      __int16 v29 = *(_WORD *)(v28 + 20);
      if ((0x4000000040004uLL >> v29))
      {
        sub_1B0CEE968(*a5, 0);
        __int16 v29 = *(_WORD *)(v28 + 20);
      }
      int v30 = byte_1B0DE186A[v29 & 0x3F];
    }
    else
    {
      sub_1B0CE1978(97220);
      int v30 = 0;
    }
    int v31 = *(v25 - 1);
    uint64_t v32 = (_DWORD *)(v27 + v23);
    v32[1] = v31;
    *uint64_t v32 = *v25 - 48;
    if (v31 >= 70) {
      break;
    }
    if (v30 == 2)
    {
      uint64_t v42 = *a5;
      if (*a5)
      {
        __int16 v43 = *(_WORD *)(v42 + 20);
        if ((v43 & 8) != 0)
        {
          double v44 = *(double *)v42;
        }
        else if ((v43 & 0x24) != 0)
        {
          double v44 = (double)*(uint64_t *)v42;
        }
        else if ((v43 & 0x12) != 0)
        {
          double v44 = sub_1B0D18684(v42);
        }
        else
        {
          double v44 = 0.0;
        }
      }
      else
      {
        sub_1B0CE1978(89752);
        double v44 = 0.0;
      }
      *(double *)(v27 + v23 + 8) = v44;
      goto LABEL_31;
    }
    if (v30 != 1)
    {
      *(void *)(v27 + v23 + 8) = 0;
      if (v30 == 5 || (v31 & 0xFFFFFFFE) != 0x42) {
        int v45 = 64;
      }
      else {
        int v45 = 63;
      }
LABEL_62:
      v32[1] = v45;
      goto LABEL_31;
    }
    uint64_t v39 = *a5;
    if (!*a5)
    {
      sub_1B0CE1978(89717);
LABEL_64:
      *(void *)(v27 + v23 + 8) = 0;
      goto LABEL_31;
    }
    __int16 v40 = *(_WORD *)(v39 + 20);
    if ((v40 & 0x24) != 0)
    {
      uint64_t v41 = *(void *)v39;
    }
    else if ((v40 & 8) != 0)
    {
      double v46 = *(double *)v39;
      if (*(double *)v39 < -9.22337204e18)
      {
        unint64_t v47 = 0xC3E0000000000000;
        goto LABEL_78;
      }
      if (v46 > 9.22337204e18)
      {
        unint64_t v47 = 0x43E0000000000000;
LABEL_78:
        *(void *)(v27 + v23 + 8) = v47;
LABEL_79:
        if (v31 == 69)
        {
          int v45 = 68;
        }
        else
        {
          if (v31 != 67) {
            goto LABEL_31;
          }
          int v45 = 66;
        }
        goto LABEL_62;
      }
      uint64_t v41 = (uint64_t)v46;
    }
    else
    {
      if ((v40 & 0x12) == 0 || !*(void *)(v39 + 8)) {
        goto LABEL_64;
      }
      uint64_t v41 = sub_1B0D186C0(v39);
    }
    *(double *)(v27 + v23 + 8) = (double)v41;
    if ((unint64_t)(v41 - 0x1000000000000) <= 0xFFFE000000000000)
    {
      int v31 = v32[1];
      goto LABEL_79;
    }
LABEL_31:
    ++a5;
    v23 += 24;
    v25 += 2;
    if (v24 == v23) {
      goto LABEL_10;
    }
  }
  uint64_t v33 = *a5;
  if (*a5)
  {
    if ((*(_WORD *)(v33 + 20) & 0xFBF) != 0xA01) {
      goto LABEL_110;
    }
    if (*(unsigned char *)(v33 + 23) != 112) {
      goto LABEL_110;
    }
    if (strcmp(*(const char **)v33, "RtreeMatchArg")) {
      goto LABEL_110;
    }
    int v34 = *(unsigned int **)(v33 + 8);
    if (!v34) {
      goto LABEL_110;
    }
    uint64_t v35 = *v34;
    if (sqlite3_initialize()) {
      goto LABEL_87;
    }
    uint64_t v36 = (_OWORD *)sub_1B0C7FC94(v35 + 112);
    if (!v36) {
      goto LABEL_87;
    }
    uint64_t v37 = v36;
    v36[5] = 0u;
    v36[6] = 0u;
    v36[3] = 0u;
    v36[4] = 0u;
    v36[1] = 0u;
    v36[2] = 0u;
    *uint64_t v36 = 0u;
    memcpy(v36 + 7, v34, *v34);
    *(void *)uint64_t v37 = *((void *)v37 + 18);
    *((_DWORD *)v37 + 2) = *((_DWORD *)v37 + 38);
    *((void *)v37 + 2) = (char *)v37 + 168;
    *((void *)v37 + 13) = *((void *)v37 + 20);
    uint64_t v38 = *((void *)v37 + 15);
    if (!v38)
    {
      v32[1] = 71;
      uint64_t v38 = *((void *)v37 + 16);
    }
    uint64_t v26 = v27 + v23;
    *(void *)(v26 + 8) = v38;
    *(void *)(v26 + 16) = v37;
    *((_DWORD *)v37 + 14) = *(unsigned __int8 *)(v10 + 37);
    *((void *)v37 + 6) = a1 + 128;
    *((_DWORD *)v37 + 16) = *(_DWORD *)(v10 + 44) + 1;
    goto LABEL_31;
  }
  sub_1B0CE1978(97118);
LABEL_110:
  uint64_t v15 = 1;
LABEL_101:
  sub_1B0DCBB38(v10, v58);
  sub_1B0DCB6D8(v10);
  return v15;
}

uint64_t sub_1B0DC9948(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 10))
  {
    *(unsigned char *)(a1 + 10) = 0;
    sqlite3_reset(*(sqlite3_stmt **)(a1 + 56));
  }
  sub_1B0DCCEF4(a1);

  return sub_1B0DCC5D8(a1);
}

uint64_t sub_1B0DC9998(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1B0DC99A0(uint64_t a1, uint64_t *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(unsigned __int8 *)(a1 + 9);
  if (*(unsigned char *)(a1 + 9))
  {
    uint64_t v13 = a1 + 64;
  }
  else if (*(_DWORD *)(a1 + 36))
  {
    uint64_t v13 = *(void *)(a1 + 48);
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = a1 + 8 * (1 - v12);
  uint64_t v17 = *(void *)(v14 + 88);
  uint64_t v15 = (uint64_t *)(v14 + 88);
  uint64_t v16 = v17;
  if (v17)
  {
    if (!v13) {
      return 0;
    }
  }
  else
  {
    if (v12 == 1) {
      __int16 v20 = (sqlite3_int64 *)(a1 + 72);
    }
    else {
      __int16 v20 = (sqlite3_int64 *)(*(void *)(a1 + 48) + 8);
    }
    uint64_t result = sub_1B0DCC154(*(void *)a1, *v20, 0, v15);
    if (result) {
      return result;
    }
    uint64_t v16 = *v15;
    if (!v13) {
      return 0;
    }
  }
  if (!a3)
  {
    if (a2)
    {
      uint64_t v22 = (unsigned __int8 *)(*(void *)(v16 + 24)
                              + *(unsigned __int8 *)(v11 + 39) * (unint64_t)*(unsigned __int8 *)(v13 + 18));
      unint64_t v23 = (((unint64_t)v22[4] << 56) | ((unint64_t)v22[5] << 48) | ((unint64_t)v22[6] << 40) | ((unint64_t)v22[7] << 32) | ((unint64_t)v22[8] << 24) | ((unint64_t)v22[9] << 16) | ((unint64_t)v22[10] << 8))
          + v22[11];
LABEL_22:
      uint64_t v25 = *a2;
      if ((*(_WORD *)(*a2 + 20) & 0x9000) == 0)
      {
        uint64_t result = 0;
        *(void *)uint64_t v25 = v23;
        *(_WORD *)(v25 + 20) = 4;
        return result;
      }
      sub_1B0D18980(*a2, v23);
      return 0;
    }
    int v26 = 97441;
LABEL_37:
    sub_1B0CE1978(v26);
    return 0;
  }
  int v18 = *(unsigned __int8 *)(v11 + 37);
  if (v18 >= a3)
  {
    uint64_t v24 = (unsigned __int8 *)(*(void *)(v16 + 24)
                            + *(unsigned __int8 *)(v11 + 39) * *(unsigned __int8 *)(v13 + 18)
                            + 4 * a3
                            + 8);
    unint64_t v23 = (*v24 << 24) | ((unint64_t)v24[1] << 16) | ((unint64_t)v24[2] << 8) | v24[3];
    if (*(unsigned char *)(v11 + 38))
    {
      if (a2) {
        goto LABEL_22;
      }
      int v26 = 97431;
    }
    else
    {
      if (a2)
      {
        float v36 = COERCE_FLOAT(_byteswap_ulong(*(_DWORD *)v24));
        uint64_t v37 = *a2;
        if ((*(_WORD *)(v37 + 20) & 0x9000) != 0) {
          sub_1B0D18138((int *)v37);
        }
        else {
          *(_WORD *)(v37 + 20) = 1;
        }
        uint64_t result = 0;
        *(double *)uint64_t v37 = v36;
        *(_WORD *)(v37 + 20) = 8;
        return result;
      }
      int v26 = 97397;
    }
    goto LABEL_37;
  }
  if (*(unsigned char *)(a1 + 10))
  {
LABEL_11:
    uint64_t v19 = sqlite3_column_value(*(sqlite3_stmt **)(a1 + 56), a3 - v18 + 1);
    sqlite3_result_value((sqlite3_context *)a2, v19);
    return 0;
  }
  uint64_t v27 = (sqlite3_stmt **)(a1 + 56);
  uint64_t v28 = *(sqlite3_stmt **)(a1 + 56);
  if (!v28)
  {
    uint64_t result = sub_1B0C7EAC0(*(void *)(v11 + 24), *(unsigned __int8 **)(v11 + 88), 0xFFFFFFFFLL, 128, 0, (void *)(a1 + 56), 0, a8);
    if (result) {
      return result;
    }
    uint64_t v28 = *v27;
  }
  __int16 v29 = (unsigned __int8 *)(*(void *)(v16 + 24)
                          + *(unsigned __int8 *)(v11 + 39) * (unint64_t)*(unsigned __int8 *)(v13 + 18));
  uint64_t v30 = v29[4];
  uint64_t v31 = v29[5];
  uint64_t v32 = v29[6];
  uint64_t v33 = v29[7];
  uint64_t v41 = v29[8];
  uint64_t v42 = v29[9];
  uint64_t v43 = v29[10];
  uint64_t v44 = v29[11];
  if (!sub_1B0CC3F2C((uint64_t)v28, 0))
  {
    uint64_t v34 = ((v30 << 56) | (v31 << 48) | (v32 << 40) | (v33 << 32) | (v41 << 24) | (v42 << 16) | (v43 << 8)) + v44;
    uint64_t v35 = *((void *)v28 + 16);
    if ((*(_WORD *)(v35 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v35, v34);
    }
    else
    {
      *(void *)uint64_t v35 = v34;
      *(_WORD *)(v35 + 20) = 4;
    }
    uint64_t v38 = *(void *)(*(void *)v28 + 24);
    if (v38) {
      xmmword_1EB21CA50(v38);
    }
  }
  int v39 = sqlite3_step(*v27);
  if (v39 == 100)
  {
    *(unsigned char *)(a1 + 10) = 1;
    int v18 = *(unsigned __int8 *)(v11 + 37);
    goto LABEL_11;
  }
  unsigned int v40 = v39;
  sqlite3_reset(*v27);
  if (v40 == 101) {
    return 0;
  }
  else {
    return v40;
  }
}

uint64_t sub_1B0DC9D30(uint64_t *a1, void *a2)
{
  uint64_t v4 = *((unsigned __int8 *)a1 + 9);
  if (*((unsigned char *)a1 + 9))
  {
    uint64_t v5 = a1 + 8;
  }
  else if (*((_DWORD *)a1 + 9))
  {
    uint64_t v5 = (uint64_t *)a1[6];
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = &a1[1 - v4];
  uint64_t v9 = v6[11];
  uint64_t v8 = v6 + 11;
  uint64_t v7 = v9;
  if (v9)
  {
    uint64_t result = 0;
LABEL_12:
    if (v5)
    {
      uint64_t v12 = (unsigned __int8 *)(*(void *)(v7 + 24)
                              + *(unsigned __int8 *)(*a1 + 39) * (unint64_t)*((unsigned __int8 *)v5 + 18));
      *a2 = (((unint64_t)v12[4] << 56) | ((unint64_t)v12[5] << 48) | ((unint64_t)v12[6] << 40) | ((unint64_t)v12[7] << 32) | ((unint64_t)v12[8] << 24) | ((unint64_t)v12[9] << 16) | ((unint64_t)v12[10] << 8))
          + v12[11];
    }
    return result;
  }
  if (v4 == 1) {
    uint64_t v11 = a1 + 9;
  }
  else {
    uint64_t v11 = (sqlite3_int64 *)(a1[6] + 8);
  }
  uint64_t result = sub_1B0DCC154(*a1, *v11, 0, v8);
  uint64_t v7 = *v8;
  if (!result) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1B0DC9E30(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  if (!*(_DWORD *)(a1 + 84))
  {
    uint64_t v5 = a4;
    ++*(_DWORD *)(a1 + 64);
    memset(v78, 0, sizeof(v78));
    if (a2 < 2)
    {
LABEL_76:
      uint64_t v4 = 0;
      char v39 = 1;
      goto LABEL_77;
    }
    if (a2 - 4 >= *(unsigned __int8 *)(a1 + 37)) {
      unint64_t v9 = *(unsigned __int8 *)(a1 + 37);
    }
    else {
      unint64_t v9 = (a2 - 4);
    }
    if (*(unsigned char *)(a1 + 38))
    {
      if ((int)v9 >= 1)
      {
        unint64_t v10 = 0;
        uint64_t v11 = a3 + 4;
        uint64_t v12 = (_DWORD *)((unint64_t)v78 | 0xC);
        while (1)
        {
          uint64_t v13 = *(v11 - 1);
          if (!v13) {
            break;
          }
          __int16 v14 = *(_WORD *)(v13 + 20);
          if ((v14 & 0x24) != 0)
          {
            double v15 = *(double *)v13;
            goto LABEL_15;
          }
          if ((v14 & 8) != 0)
          {
            double v19 = *(double *)v13;
            if (*(double *)v13 >= -9.22337204e18)
            {
              if (v19 <= 9.22337204e18) {
                *(void *)&double v15 = (uint64_t)v19;
              }
              else {
                LODWORD(v15) = -1;
              }
            }
            else
            {
              LODWORD(v15) = 0;
            }
          }
          else
          {
            if ((v14 & 0x12) == 0 || !*(void *)(v13 + 8)) {
              goto LABEL_14;
            }
            LODWORD(v15) = sub_1B0D186C0(v13);
          }
LABEL_15:
          *(v12 - 1) = LODWORD(v15);
          uint64_t v16 = *v11;
          if (!*v11)
          {
            sub_1B0CE1978(89717);
LABEL_19:
            LODWORD(v18) = 0;
            goto LABEL_20;
          }
          __int16 v17 = *(_WORD *)(v16 + 20);
          if ((v17 & 0x24) != 0)
          {
            double v18 = *(double *)v16;
            goto LABEL_20;
          }
          if ((v17 & 8) != 0)
          {
            double v20 = *(double *)v16;
            if (*(double *)v16 >= -9.22337204e18)
            {
              if (v20 <= 9.22337204e18) {
                *(void *)&double v18 = (uint64_t)v20;
              }
              else {
                LODWORD(v18) = -1;
              }
            }
            else
            {
              LODWORD(v18) = 0;
            }
          }
          else
          {
            if ((v17 & 0x12) == 0 || !*(void *)(v16 + 8)) {
              goto LABEL_19;
            }
            LODWORD(v18) = sub_1B0D186C0(v16);
          }
LABEL_20:
          *uint64_t v12 = LODWORD(v18);
          if (SLODWORD(v15) > SLODWORD(v18))
          {
            unsigned int v45 = v10 + 1;
            goto LABEL_101;
          }
          v10 += 2;
          v11 += 2;
          v12 += 2;
          if (v10 >= v9) {
            goto LABEL_74;
          }
        }
        sub_1B0CE1978(89717);
LABEL_14:
        LODWORD(v15) = 0;
        goto LABEL_15;
      }
    }
    else if ((int)v9 >= 1)
    {
      unint64_t v21 = 0;
      uint64_t v22 = a3 + 4;
      unint64_t v23 = (float *)((unint64_t)v78 | 0xC);
      while (1)
      {
        uint64_t v24 = *(v22 - 1);
        if (v24)
        {
          __int16 v25 = *(_WORD *)(v24 + 20);
          if ((v25 & 8) != 0)
          {
            double v26 = *(double *)v24;
          }
          else if ((v25 & 0x24) != 0)
          {
            double v26 = (double)*(uint64_t *)v24;
          }
          else if ((v25 & 0x12) != 0)
          {
            double v26 = sub_1B0D18684(v24);
          }
          else
          {
            double v26 = 0.0;
          }
        }
        else
        {
          sub_1B0CE1978(89752);
          double v26 = 0.0;
        }
        double v28 = 0.999999881;
        if (v26 < 0.0) {
          double v28 = 1.00000012;
        }
        float v29 = v26 * v28;
        float v27 = v26;
        if (v26 >= v27) {
          float v30 = v26;
        }
        else {
          float v30 = v29;
        }
        *(v23 - 1) = v30;
        uint64_t v31 = *v22;
        if (*v22)
        {
          __int16 v32 = *(_WORD *)(v31 + 20);
          if ((v32 & 8) != 0)
          {
            double v33 = *(double *)v31;
          }
          else if ((v32 & 0x24) != 0)
          {
            double v33 = (double)*(uint64_t *)v31;
          }
          else if ((v32 & 0x12) != 0)
          {
            double v33 = sub_1B0D18684(v31);
          }
          else
          {
            double v33 = 0.0;
          }
        }
        else
        {
          sub_1B0CE1978(89752);
          double v33 = 0.0;
        }
        double v35 = 1.00000012;
        if (v33 < 0.0) {
          double v35 = 0.999999881;
        }
        float v36 = v33 * v35;
        float v34 = v33;
        float v37 = v33 <= v34 ? v33 : v36;
        *unint64_t v23 = v37;
        if (v30 > v37) {
          break;
        }
        v21 += 2;
        v22 += 2;
        v23 += 2;
        if (v21 >= v9) {
          goto LABEL_74;
        }
      }
      unsigned int v45 = v21 + 1;
LABEL_101:
      unint64_t v47 = (void *)a1;
      goto LABEL_102;
    }
LABEL_74:
    uint64_t v38 = a3[2];
    if (v38)
    {
      uint64_t v5 = a4;
      if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v38 + 20))) {
        goto LABEL_76;
      }
    }
    else
    {
      sub_1B0CE1978(97220);
      uint64_t v38 = a3[2];
      uint64_t v5 = a4;
      if (!v38)
      {
        sub_1B0CE1978(89717);
        goto LABEL_105;
      }
    }
    __int16 v43 = *(_WORD *)(v38 + 20);
    if ((v43 & 0x24) != 0)
    {
      uint64_t v44 = *(void *)v38;
      goto LABEL_146;
    }
    if ((v43 & 8) != 0)
    {
      double v49 = *(double *)v38;
      if (*(double *)v38 >= -9.22337204e18)
      {
        if (v49 <= 9.22337204e18) {
          uint64_t v44 = (uint64_t)v49;
        }
        else {
          uint64_t v44 = 0x7FFFFFFFFFFFFFFFLL;
        }
      }
      else
      {
        uint64_t v44 = 0x8000000000000000;
      }
LABEL_146:
      *(void *)&v78[0] = v44;
      uint64_t v65 = *a3;
      if (*a3)
      {
        if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v65 + 20)))
        {
LABEL_165:
          BOOL v69 = *(void **)(a1 + 136);
          if (!sub_1B0CC3F2C((uint64_t)v69, 0))
          {
            uint64_t v70 = v69[16];
            if ((*(_WORD *)(v70 + 20) & 0x9000) != 0)
            {
              sub_1B0D18980(v70, v44);
            }
            else
            {
              *(void *)uint64_t v70 = v44;
              *(_WORD *)(v70 + 20) = 4;
            }
            uint64_t v71 = *(void *)(*v69 + 24);
            if (v71) {
              xmmword_1EB21CA50(v71);
            }
          }
          int v72 = sqlite3_step(*(sqlite3_stmt **)(a1 + 136));
          uint64_t v73 = sqlite3_reset(*(sqlite3_stmt **)(a1 + 136));
          if (v72 != 100) {
            goto LABEL_174;
          }
          if (sqlite3_vtab_on_conflict(*(sqlite3 **)(a1 + 24)) == 5)
          {
            uint64_t v73 = sub_1B0DCD340(a1, v44);
LABEL_174:
            uint64_t v4 = v73;
            char v39 = 0;
LABEL_77:
            uint64_t v40 = *a3;
            if (*a3)
            {
              if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v40 + 20)))
              {
                if (a2 < 2) {
                  goto LABEL_136;
                }
                goto LABEL_112;
              }
            }
            else
            {
              sub_1B0CE1978(97220);
              uint64_t v40 = *a3;
              if (!*a3)
              {
                sub_1B0CE1978(89717);
                goto LABEL_92;
              }
            }
            __int16 v41 = *(_WORD *)(v40 + 20);
            if ((v41 & 0x24) != 0)
            {
              uint64_t v42 = *(void *)v40;
              goto LABEL_111;
            }
            if ((v41 & 8) != 0)
            {
              double v46 = *(double *)v40;
              if (*(double *)v40 >= -9.22337204e18)
              {
                if (v46 <= 9.22337204e18) {
                  uint64_t v42 = (uint64_t)v46;
                }
                else {
                  uint64_t v42 = 0x7FFFFFFFFFFFFFFFLL;
                }
              }
              else
              {
                uint64_t v42 = 0x8000000000000000;
              }
LABEL_111:
              uint64_t v4 = sub_1B0DCD340(a1, v42);
              if (a2 < 2) {
                goto LABEL_136;
              }
LABEL_112:
              if (v4) {
                goto LABEL_136;
              }
              uint64_t v77 = 0;
              if ((v39 & 1) == 0)
              {
                *uint64_t v5 = *(void *)&v78[0];
LABEL_131:
                uint64_t v4 = sub_1B0DCD740(a1, (uint64_t)v78, 0, &v77);
                if (v4) {
                  goto LABEL_136;
                }
                *(_DWORD *)(a1 + 104) = -1;
                uint64_t v58 = v77;
                unsigned int v59 = sub_1B0DCDD80(a1, v77, v78, 0);
                unsigned int v60 = sub_1B0DCBB38(a1, v58);
                uint64_t v4 = v59 ? v59 : v60;
                if (v4) {
                  goto LABEL_136;
                }
                if (!*(unsigned char *)(a1 + 41))
                {
                  uint64_t v4 = 0;
                  goto LABEL_136;
                }
                unsigned int v62 = *(sqlite3_stmt **)(a1 + 184);
                uint64_t v63 = *v5;
                if (!sub_1B0CC3F2C((uint64_t)v62, 0))
                {
                  uint64_t v64 = *((void *)v62 + 16);
                  if ((*(_WORD *)(v64 + 20) & 0x9000) != 0)
                  {
                    sub_1B0D18980(v64, v63);
                  }
                  else
                  {
                    *(void *)uint64_t v64 = v63;
                    *(_WORD *)(v64 + 20) = 4;
                  }
                  uint64_t v74 = *(void *)(*(void *)v62 + 24);
                  if (v74) {
                    xmmword_1EB21CA50(v74);
                  }
                }
                if (*(unsigned char *)(a1 + 41))
                {
                  uint64_t v75 = 0;
                  do
                  {
                    sqlite3_bind_value(v62, v75 + 2, (const sqlite3_value *)a3[v75 + 3 + *(unsigned __int8 *)(a1 + 37)]);
                    ++v75;
                  }
                  while (v75 < *(unsigned __int8 *)(a1 + 41));
                }
                sqlite3_step(v62);
                uint64_t v48 = sqlite3_reset(v62);
                goto LABEL_103;
              }
              uint64_t v50 = *(void *)(a1 + 144);
              if (!sub_1B0CC3F2C(v50, 0))
              {
                uint64_t v51 = *(void *)(*(void *)v50 + 24);
                if (v51) {
                  xmmword_1EB21CA50(v51);
                }
              }
              uint64_t v52 = *(void *)(a1 + 144);
              if (!sub_1B0CC3F2C(v52, 1u))
              {
                uint64_t v53 = *(void *)(*(void *)v52 + 24);
                if (v53) {
                  xmmword_1EB21CA50(v53);
                }
              }
              sqlite3_step(*(sqlite3_stmt **)(a1 + 144));
              uint64_t v4 = sqlite3_reset(*(sqlite3_stmt **)(a1 + 144));
              uint64_t v54 = *(void *)(a1 + 24);
              if (v54)
              {
                int v55 = *(unsigned __int8 *)(v54 + 113);
                switch(v55)
                {
                  case 186:
                    goto LABEL_124;
                  case 118:
                    uint64_t v57 = *(void *)(v54 + 56);
                    goto LABEL_130;
                  case 109:
LABEL_124:
                    sqlite3_int64 v56 = "unopened";
                    break;
                  default:
                    sqlite3_int64 v56 = "invalid";
                    break;
                }
              }
              else
              {
                sqlite3_int64 v56 = "NULL";
              }
              sqlite3_log(21, "API call with %s database connection pointer", v56);
              sub_1B0CE1978(186263);
              uint64_t v57 = 0;
LABEL_130:
              *(void *)&v78[0] = v57;
              *uint64_t v5 = v57;
              if (v4) {
                goto LABEL_136;
              }
              goto LABEL_131;
            }
            if ((v41 & 0x12) != 0 && *(void *)(v40 + 8))
            {
              uint64_t v42 = sub_1B0D186C0(v40);
              goto LABEL_111;
            }
LABEL_92:
            uint64_t v42 = 0;
            goto LABEL_111;
          }
          unint64_t v47 = (void *)a1;
          unsigned int v45 = 0;
LABEL_102:
          uint64_t v48 = sub_1B0DCD1B4(v47, v45);
LABEL_103:
          uint64_t v4 = v48;
LABEL_136:
          sub_1B0DCB6D8(a1);
          return v4;
        }
      }
      else
      {
        sub_1B0CE1978(97220);
        uint64_t v65 = *a3;
        if (!*a3)
        {
          sub_1B0CE1978(89717);
          goto LABEL_157;
        }
      }
      __int16 v66 = *(_WORD *)(v65 + 20);
      if ((v66 & 0x24) != 0)
      {
        uint64_t v67 = *(void *)v65;
        goto LABEL_163;
      }
      if ((v66 & 8) != 0)
      {
        double v68 = *(double *)v65;
        if (*(double *)v65 >= -9.22337204e18)
        {
          if (v68 <= 9.22337204e18) {
            uint64_t v67 = (uint64_t)v68;
          }
          else {
            uint64_t v67 = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v67 = 0x8000000000000000;
        }
LABEL_163:
        if (v67 == v44)
        {
          uint64_t v4 = 0;
          char v39 = 0;
          goto LABEL_77;
        }
        goto LABEL_165;
      }
      if ((v66 & 0x12) != 0 && *(void *)(v65 + 8))
      {
        uint64_t v67 = sub_1B0D186C0(v65);
        goto LABEL_163;
      }
LABEL_157:
      uint64_t v67 = 0;
      goto LABEL_163;
    }
    if ((v43 & 0x12) != 0 && *(void *)(v38 + 8))
    {
      uint64_t v44 = sub_1B0D186C0(v38);
      goto LABEL_146;
    }
LABEL_105:
    uint64_t v44 = 0;
    goto LABEL_146;
  }
  return 518;
}

uint64_t sub_1B0DCA6C4(uint64_t a1)
{
  return 0;
}

uint64_t sub_1B0DCA6D8(uint64_t a1)
{
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t v1 = *(void **)(a1 + 112);
  if (v1 && !*(_DWORD *)(a1 + 80))
  {
    *(void *)(a1 + 112) = 0;
    uint64_t v2 = (sqlite3_stmt *)v1[3];
    uint64_t v3 = (void *)v1[4];
    uint64_t v4 = v3[3];
    if (v4) {
      xmmword_1EB21CA40(v4);
    }
    sub_1B0D05C10(v3, v1);
    uint64_t v5 = v3[3];
    if (v5) {
      xmmword_1EB21CA50(v5);
    }
    sqlite3_finalize(v2);
  }
  return 0;
}

uint64_t sub_1B0DCA758(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sqlite3_mprintf("ALTER TABLE %Q.'%q_node'   RENAME TO \"%w_node\";ALTER TABLE %Q.'%q_parent' RENAME TO \"%w_parent\";ALTER TABLE"
         " %Q.'%q_rowid'  RENAME TO \"%w_rowid\";",
         *(void *)(a1 + 48),
         *(void *)(a1 + 56),
         a2,
         *(void *)(a1 + 48),
         *(void *)(a1 + 56),
         a2,
         *(void *)(a1 + 48),
         *(void *)(a1 + 56),
         a2);
  if (!v3) {
    return 7;
  }
  uint64_t v4 = v3;
  uint64_t v5 = *(void **)(a1 + 112);
  if (v5 && !*(unsigned char *)(a1 + 40) && !*(_DWORD *)(a1 + 80))
  {
    *(void *)(a1 + 112) = 0;
    uint64_t v6 = (sqlite3_stmt *)v5[3];
    uint64_t v7 = (void *)v5[4];
    uint64_t v8 = v7[3];
    if (v8) {
      xmmword_1EB21CA40(v8);
    }
    sub_1B0D05C10(v7, v5);
    uint64_t v9 = v7[3];
    if (v9) {
      xmmword_1EB21CA50(v9);
    }
    sqlite3_finalize(v6);
  }
  uint64_t v10 = sqlite3_exec(*(sqlite3 **)(a1 + 24), v4, 0, 0, 0);
  uint64_t v11 = (void (**)(const char *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_15;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
  --qword_1EB220150;
  off_1EB21C9E8(v4);
  uint64_t v4 = (const char *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v11 = (void (**)(const char *))&xmmword_1EB21CA50;
LABEL_15:
    (*v11)(v4);
  }
  return v10;
}

uint64_t sub_1B0DCA8C0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t v3 = *(void **)(a1 + 112);
  if (v3 && !*(_DWORD *)(a1 + 80))
  {
    *(void *)(a1 + 112) = 0;
    uint64_t v4 = (sqlite3_stmt *)v3[3];
    uint64_t v5 = (void *)v3[4];
    uint64_t v6 = v5[3];
    if (v6) {
      xmmword_1EB21CA40(v6);
    }
    sub_1B0D05C10(v5, v3);
    uint64_t v7 = v5[3];
    if (v7) {
      xmmword_1EB21CA50(v7);
    }
    sqlite3_finalize(v4);
  }
  *(unsigned char *)(a1 + 40) = v2;
  return 0;
}

uint64_t sub_1B0DCA954(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = "node";
    for (uint64_t i = (unsigned char *)result; ; ++i)
    {
      uint64_t v3 = *i;
      uint64_t v4 = *(unsigned __int8 *)v1;
      if (v3 == v4)
      {
        if (!*i) {
          return 1;
        }
      }
      else if (byte_1B0DE1758[v3] != byte_1B0DE1758[v4])
      {
        uint64_t v5 = "parent";
        for (uint64_t j = (unsigned char *)result; ; ++j)
        {
          uint64_t v7 = *j;
          uint64_t v8 = *(unsigned __int8 *)v5;
          if (v7 == v8)
          {
            if (!*j) {
              return 1;
            }
          }
          else if (byte_1B0DE1758[v7] != byte_1B0DE1758[v8])
          {
            for (uint64_t k = "rowid"; ; ++k)
            {
              uint64_t v10 = *(unsigned __int8 *)result;
              uint64_t v11 = *(unsigned __int8 *)k;
              if (v10 == v11)
              {
                if (!*(unsigned char *)result) {
                  return 1;
                }
              }
              else if (byte_1B0DE1758[v10] != byte_1B0DE1758[v11])
              {
                return 0;
              }
              ++result;
            }
          }
          ++v5;
        }
      }
      ++v1;
    }
  }
  return result;
}

uint64_t sub_1B0DCAA2C(sqlite3 *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, char **a6, int a7)
{
  uint64_t v7 = a6;
  pStmt[8] = *(sqlite3_stmt **)MEMORY[0x1E4F143B8];
  if ((a3 - 104) <= 0xFFFFFF9D)
  {
    uint64_t v9 = 16;
    if (a3 > 5) {
      uint64_t v9 = 24;
    }
    *a6 = sqlite3_mprintf("%s", *(const char **)((char *)&unk_1E5FF06D0 + v9));
    return 1;
  }
  sqlite3_vtab_config(a1, 1, 1);
  size_t v16 = strlen(*(const char **)(a4 + 8));
  int v17 = strlen(*(const char **)(a4 + 16));
  if (sqlite3_initialize()) {
    return 7;
  }
  int v88 = a7;
  uint64_t v90 = a1;
  size_t v18 = v17;
  uint64_t v19 = (int)v16 + (uint64_t)v17 + 970;
  double v20 = (void *)sub_1B0C7FC94(v19);
  if (!v20) {
    return 7;
  }
  uint64_t v21 = (uint64_t)v20;
  char v87 = a5;
  bzero(v20, v19);
  *(_DWORD *)(v21 + 64) = 1;
  *(void *)uint64_t v21 = &unk_1EC526648;
  *(void *)(v21 + 48) = v21 + 968;
  *(void *)(v21 + 56) = v21 + 968 + ((uint64_t)((v16 << 32) + 0x100000000) >> 32);
  *(unsigned char *)(v21 + 38) = a2 != 0;
  memcpy((void *)(v21 + 968), *(const void **)(a4 + 8), (int)v16);
  memcpy((void *)(v21 + 968 + ((uint64_t)((v16 << 32) + 0x100000000) >> 32)), *(const void **)(a4 + 16), v18);
  int v89 = v7;
  if (sqlite3_initialize() || (uint64_t v23 = sub_1B0C7FC94(32)) == 0)
  {
    uint64_t v22 = (sqlite3_str *)&unk_1E9B51E88;
  }
  else
  {
    uint64_t v22 = (sqlite3_str *)v23;
    if (v90) {
      int v24 = *((_DWORD *)v90 + 34);
    }
    else {
      int v24 = 2147483645;
    }
    *(void *)uint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
    *(_DWORD *)(v23 + 16) = 0;
    *(_DWORD *)(v23 + 20) = v24;
    *(_DWORD *)(v23 + 24) = 0;
    *(_WORD *)(v23 + 28) = 0;
  }
  BOOL v25 = a2 != 0;
  double v26 = *(unsigned __int8 **)(a4 + 24);
  int v27 = sub_1B0C7FE7C(v26, (int *)pStmt);
  sqlite3_str_appendf(v22, "CREATE TABLE x(%.*s INT", v27, (const char *)v26);
  BOOL v28 = 1;
  uint64_t v29 = 4;
  while (1)
  {
    float v30 = *(unsigned __int8 **)(a4 + 8 * v29);
    if (*v30 != 43) {
      break;
    }
    ++*(unsigned char *)(v21 + 41);
    sub_1B0C7FE7C(v30 + 1, (int *)pStmt);
    sqlite3_str_appendf(v22, ",%.*s");
LABEL_17:
    BOOL v28 = ++v29 < (unint64_t)a3;
    if (a3 == v29) {
      goto LABEL_21;
    }
  }
  if (!*(unsigned char *)(v21 + 41))
  {
    ++*(unsigned char *)(v21 + 37);
    uint64_t v31 = off_1E5FF06F8[v25];
    pAutoinc = (int *)sub_1B0C7FE7C(v30, (int *)pStmt);
    sqlite3_str_appendf(v22, v31, pAutoinc, v30);
    goto LABEL_17;
  }
LABEL_21:
  sqlite3_str_appendf(v22, ");");
  __int16 v32 = sqlite3_str_finish(v22);
  double v33 = v90;
  if (!v32)
  {
    unsigned int v36 = 7;
    goto LABEL_48;
  }
  float v34 = v32;
  if (v28)
  {
    double v35 = sqlite3_mprintf("%s", "Auxiliary rtree columns must be last");
    unsigned int v36 = 1;
    goto LABEL_27;
  }
  unsigned int v36 = sqlite3_declare_vtab(v90, v32);
  if (v36)
  {
    float v37 = sqlite3_errmsg(v90);
    double v35 = sqlite3_mprintf("%s", v37);
LABEL_27:
    void *v7 = v35;
  }
  uint64_t v38 = (uint64_t (**)(char *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v34);
    --qword_1EB220150;
    off_1EB21C9E8(v34);
    float v34 = (char *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v38 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
      goto LABEL_33;
    }
  }
  else
  {
LABEL_33:
    (*v38)(v34);
  }
  if (!v36)
  {
    unsigned int v39 = *(unsigned __int8 *)(v21 + 37);
    *(unsigned char *)(v21 + 36) = *(unsigned char *)(v21 + 37) >> 1;
    if (v39 < 2)
    {
      uint64_t v40 = 2;
      goto LABEL_46;
    }
    if (v39 > 0xA)
    {
      uint64_t v40 = 3;
      goto LABEL_46;
    }
    if (v39)
    {
      uint64_t v40 = 1;
LABEL_46:
      unsigned int v45 = sqlite3_mprintf("%s", *((const char **)&unk_1E5FF06D0 + v40));
      unsigned int v36 = 0;
      goto LABEL_47;
    }
    *(unsigned char *)(v21 + 39) = 4 * v39 + 8;
    if (v88)
    {
      uint64_t v42 = (unsigned __int8 *)sqlite3_mprintf("PRAGMA %Q.page_size", *(void *)(v21 + 48));
      if (v42)
      {
        pStmt[0] = 0;
        unsigned int v43 = sub_1B0C7EAC0((uint64_t)v90, v42, 0xFFFFFFFFLL, 128, 0, pStmt, 0, v41);
        if (!v43)
        {
          if (sqlite3_step(pStmt[0]) == 100) {
            int v44 = sqlite3_column_int(pStmt[0], 0) - 64;
          }
          else {
            int v44 = -64;
          }
          unsigned int v36 = sqlite3_finalize(pStmt[0]);
          if (!v36)
          {
            int v52 = 51 * *(unsigned __int8 *)(v21 + 39) + 4;
            if (v52 >= v44) {
              int v52 = v44;
            }
            *(_DWORD *)(v21 + 32) = v52;
LABEL_61:
            double v49 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v42);
              --qword_1EB220150;
              off_1EB21C9E8(v42);
              uint64_t v42 = (unsigned __int8 *)xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                double v49 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
                goto LABEL_66;
              }
            }
            else
            {
LABEL_66:
              (*v49)(v42);
            }
            if (!v36)
            {
              uint64_t v50 = *(void *)(a4 + 8);
              uint64_t v86 = *(void *)(a4 + 16);
              *(void *)(v21 + 24) = v90;
              if (!v88) {
                goto LABEL_95;
              }
              if (sqlite3_initialize() || (uint64_t v53 = sub_1B0C7FC94(32)) == 0)
              {
                uint64_t v51 = (sqlite3_str *)&unk_1E9B51E88;
              }
              else
              {
                uint64_t v51 = (sqlite3_str *)v53;
                if (v90) {
                  int v54 = *((_DWORD *)v90 + 34);
                }
                else {
                  int v54 = 2147483645;
                }
                *(void *)uint64_t v53 = 0;
                *(void *)(v53 + 8) = 0;
                *(_DWORD *)(v53 + 16) = 0;
                *(_DWORD *)(v53 + 20) = v54;
                *(_DWORD *)(v53 + 24) = 0;
                *(_WORD *)(v53 + 28) = 0;
              }
              uint64_t v55 = v50;
              sqlite3_str_appendf(v51, "CREATE TABLE \"%w\".\"%w_rowid\"(rowid INTEGER PRIMARY KEY,nodeno", v50, v86);
              if (*(unsigned char *)(v21 + 41))
              {
                unsigned int v56 = 0;
                do
                  sqlite3_str_appendf(v51, ",a%d", v56++);
                while (v56 < *(unsigned __int8 *)(v21 + 41));
              }
              uint64_t v50 = v55;
              sqlite3_str_appendf(v51, ");CREATE TABLE \"%w\".\"%w_node\"(nodeno INTEGER PRIMARY KEY,data);", v55, v86);
              sqlite3_str_appendf(v51, "CREATE TABLE \"%w\".\"%w_parent\"(nodeno INTEGER PRIMARY KEY,parentnode);",
                v55,
                v86);
              sqlite3_str_appendf(v51, "INSERT INTO \"%w\".\"%w_node\"VALUES(1,zeroblob(%d))", v55, v86, *(unsigned int *)(v21 + 32));
              uint64_t v57 = sqlite3_str_finish(v51);
              if (!v57) {
                goto LABEL_157;
              }
              uint64_t v58 = v57;
              unsigned int v36 = sqlite3_exec(v90, v57, 0, 0, 0);
              unsigned int v59 = (uint64_t (**)(char *))&off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_93;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v58);
              --qword_1EB220150;
              off_1EB21C9E8(v58);
              uint64_t v58 = (char *)xmmword_1EB2201B0;
              uint64_t v50 = v55;
              if ((void)xmmword_1EB2201B0)
              {
                unsigned int v59 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
LABEL_93:
                (*v59)(v58);
              }
              uint64_t v7 = v89;
              if (v36) {
                goto LABEL_158;
              }
LABEL_95:
              pStmt[0] = (sqlite3_stmt *)(v21 + 120);
              pStmt[1] = (sqlite3_stmt *)(v21 + 128);
              pStmt[2] = (sqlite3_stmt *)(v21 + 136);
              pStmt[3] = (sqlite3_stmt *)(v21 + 144);
              pStmt[4] = (sqlite3_stmt *)(v21 + 152);
              pStmt[5] = (sqlite3_stmt *)(v21 + 160);
              pStmt[6] = (sqlite3_stmt *)(v21 + 168);
              pStmt[7] = (sqlite3_stmt *)(v21 + 176);
              int v60 = sqlite3_table_column_metadata(v90, *(const char **)(v21 + 48), "sqlite_stat1", 0, 0, 0, 0, 0, 0);
              if (v60)
              {
                unsigned int v36 = v60;
                *(void *)(v21 + 72) = 0x100000;
                if (v60 != 1) {
                  goto LABEL_130;
                }
LABEL_117:
                unint64_t v68 = 0;
                while (2)
                {
                  if (v68 != 3
                    || (BOOL v69 = "INSERT INTO\"%w\".\"%w_rowid\"(rowid,nodeno)VALUES(?1,?2)ON CONFLICT(rowid)DO UPDATE SET n"
                              "odeno=excluded.nodeno",
                        !*(unsigned char *)(v21 + 41)))
                  {
                    BOOL v69 = off_1E5FF0708[v68];
                  }
                  uint64_t v70 = (unsigned __int8 *)sqlite3_mprintf(v69, v50, v86);
                  if (!v70) {
                    goto LABEL_102;
                  }
                  int v72 = v70;
                  unsigned int v36 = sub_1B0C7EAC0((uint64_t)v90, v70, 0xFFFFFFFFLL, 133, 0, pStmt[v68], 0, v71);
                  uint64_t v73 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
                  if (dword_1EB21C9C0)
                  {
                    if ((void)xmmword_1EB2201B0) {
                      xmmword_1EB21CA40(xmmword_1EB2201B0);
                    }
                    qword_1EB220108[0] -= (int)off_1EB21C9F8(v72);
                    --qword_1EB220150;
                    off_1EB21C9E8(v72);
                    int v72 = (unsigned __int8 *)xmmword_1EB2201B0;
                    if ((void)xmmword_1EB2201B0)
                    {
                      uint64_t v73 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
                      goto LABEL_127;
                    }
                  }
                  else
                  {
LABEL_127:
                    (*v73)(v72);
                  }
                  if (v68 > 6) {
                    goto LABEL_103;
                  }
                  ++v68;
                  uint64_t v7 = v89;
                  if (v36) {
                    goto LABEL_130;
                  }
                  continue;
                }
              }
              int v61 = (unsigned __int8 *)sqlite3_mprintf("SELECT stat FROM %Q.sqlite_stat1 WHERE tbl = '%q_rowid'", *(void *)(v21 + 48), *(void *)(v21 + 56));
              if (v61)
              {
                uint64_t v63 = v61;
                uint64_t v91 = 0;
                unsigned int v64 = sub_1B0C7EAC0((uint64_t)v90, v61, 0xFFFFFFFFLL, 128, 0, &v91, 0, v62);
                if (v64)
                {
                  unsigned int v36 = v64;
                  sqlite3_int64 v65 = 100;
                }
                else
                {
                  if (sqlite3_step(v91) == 100) {
                    sqlite3_int64 v65 = sqlite3_column_int64(v91, 0);
                  }
                  else {
                    sqlite3_int64 v65 = 100;
                  }
                  unsigned int v36 = sqlite3_finalize(v91);
                }
                __int16 v66 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
                if (dword_1EB21C9C0)
                {
                  if ((void)xmmword_1EB2201B0) {
                    xmmword_1EB21CA40(xmmword_1EB2201B0);
                  }
                  qword_1EB220108[0] -= (int)off_1EB21C9F8(v63);
                  --qword_1EB220150;
                  off_1EB21C9E8(v63);
                  uint64_t v63 = (unsigned __int8 *)xmmword_1EB2201B0;
                  if ((void)xmmword_1EB2201B0)
                  {
                    __int16 v66 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
                    goto LABEL_113;
                  }
                }
                else
                {
LABEL_113:
                  (*v66)(v63);
                }
                uint64_t v67 = 100;
                if (v65 > 100) {
                  uint64_t v67 = v65;
                }
                *(void *)(v21 + 72) = v67;
                uint64_t v7 = v89;
                if (!v36) {
                  goto LABEL_117;
                }
              }
              else
              {
                *(void *)(v21 + 72) = 100;
LABEL_102:
                unsigned int v36 = 7;
LABEL_103:
                uint64_t v7 = v89;
              }
LABEL_130:
              if (!*(unsigned char *)(v21 + 41)) {
                goto LABEL_155;
              }
              uint64_t v74 = sqlite3_mprintf("SELECT * FROM \"%w\".\"%w_rowid\" WHERE rowid=?1", v50, v86);
              *(void *)(v21 + 88) = v74;
              if (!v74)
              {
                unsigned int v36 = 7;
                double v33 = v90;
                goto LABEL_158;
              }
              if (sqlite3_initialize() || (uint64_t v76 = sub_1B0C7FC94(32)) == 0)
              {
                uint64_t v75 = (sqlite3_str *)&unk_1E9B51E88;
              }
              else
              {
                uint64_t v75 = (sqlite3_str *)v76;
                if (v90) {
                  int v77 = *((_DWORD *)v90 + 34);
                }
                else {
                  int v77 = 2147483645;
                }
                *(void *)uint64_t v76 = 0;
                *(void *)(v76 + 8) = 0;
                *(_DWORD *)(v76 + 16) = 0;
                *(_DWORD *)(v76 + 20) = v77;
                *(_DWORD *)(v76 + 24) = 0;
                *(_WORD *)(v76 + 28) = 0;
              }
              double v33 = v90;
              sqlite3_str_appendf(v75, "UPDATE \"%w\".\"%w_rowid\"SET ", v50, v86);
              if (*(unsigned char *)(v21 + 41))
              {
                sqlite3_str_appendf(v75, "a%d=?%d", 0, 2);
                if (*(unsigned __int8 *)(v21 + 41) >= 2u)
                {
                  unsigned int v78 = 1;
                  do
                  {
                    uint64_t v79 = *((unsigned int *)v75 + 6);
                    if ((v79 + 1) < *((_DWORD *)v75 + 4))
                    {
                      *((_DWORD *)v75 + 6) = v79 + 1;
                      *(unsigned char *)(*((void *)v75 + 1) + v79) = 44;
                    }
                    else
                    {
                      sub_1B0CE62B0((uint64_t)v75, ",", 1u);
                    }
                    sqlite3_str_appendf(v75, "a%d=?%d", v78, v78 + 2);
                    ++v78;
                  }
                  while (v78 < *(unsigned __int8 *)(v21 + 41));
                }
              }
              sqlite3_str_appendf(v75, " WHERE rowid=?1");
              unsigned int v80 = (unsigned __int8 *)sqlite3_str_finish(v75);
              if (!v80)
              {
LABEL_157:
                unsigned int v36 = 7;
                uint64_t v7 = v89;
                goto LABEL_158;
              }
              unsigned int v82 = v80;
              unsigned int v36 = sub_1B0C7EAC0((uint64_t)v90, v80, 0xFFFFFFFFLL, 133, 0, (void *)(v21 + 184), 0, v81);
              int v83 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
              if (!dword_1EB21C9C0) {
                goto LABEL_153;
              }
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v82);
              --qword_1EB220150;
              off_1EB21C9E8(v82);
              unsigned int v82 = (unsigned __int8 *)xmmword_1EB2201B0;
              if ((void)xmmword_1EB2201B0)
              {
                int v83 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_153:
                (*v83)(v82);
              }
              uint64_t v7 = v89;
LABEL_155:
              double v33 = v90;
              if (!v36)
              {
                uint64_t v10 = 0;
                uint64_t *v87 = v21;
                return v10;
              }
LABEL_158:
              int v84 = sqlite3_errmsg(v33);
              unsigned int v45 = sqlite3_mprintf("%s", v84);
LABEL_47:
              void *v7 = v45;
            }
            goto LABEL_48;
          }
LABEL_60:
          uint64_t v48 = sqlite3_errmsg(v90);
          void *v7 = sqlite3_mprintf("%s", v48);
          if (v42) {
            goto LABEL_61;
          }
          goto LABEL_48;
        }
LABEL_58:
        unsigned int v36 = v43;
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v42 = (unsigned __int8 *)sqlite3_mprintf("SELECT length(data) FROM '%q'.'%q_node' WHERE nodeno = 1", *(void *)(v21 + 48), *(void *)(v21 + 56));
      if (v42)
      {
        pStmt[0] = 0;
        unsigned int v43 = sub_1B0C7EAC0((uint64_t)v90, v42, 0xFFFFFFFFLL, 128, 0, pStmt, 0, v47);
        if (!v43)
        {
          if (sqlite3_step(pStmt[0]) == 100) {
            *(_DWORD *)(v21 + 32) = sqlite3_column_int(pStmt[0], 0);
          }
          unsigned int v43 = sqlite3_finalize(pStmt[0]);
          if (!v43)
          {
            if (*(int *)(v21 + 32) > 447)
            {
              unsigned int v36 = 0;
            }
            else
            {
              void *v7 = sqlite3_mprintf("undersize RTree blobs in \"%q_node\"", *(void *)(v21 + 56));
              unsigned int v36 = 267;
            }
            goto LABEL_61;
          }
        }
        goto LABEL_58;
      }
    }
    unsigned int v36 = 7;
    goto LABEL_60;
  }
LABEL_48:
  if (v36 <= 1) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = v36;
  }
  sub_1B0DCB6D8(v21);
  return v10;
}

uint64_t sub_1B0DCB6D8(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 64) - 1;
  *(_DWORD *)(result + 64) = v1;
  if (v1) {
    return result;
  }
  uint64_t v2 = result;
  *(unsigned char *)(result + 40) = 0;
  uint64_t v3 = *(void **)(result + 112);
  if (v3 && !*(_DWORD *)(result + 80))
  {
    *(void *)(result + 112) = 0;
    uint64_t v4 = (sqlite3_stmt *)v3[3];
    uint64_t v5 = (void *)v3[4];
    uint64_t v6 = v5[3];
    if (v6) {
      xmmword_1EB21CA40(v6);
    }
    sub_1B0D05C10(v5, v3);
    uint64_t v7 = v5[3];
    if (v7) {
      xmmword_1EB21CA50(v7);
    }
    sqlite3_finalize(v4);
  }
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 120));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 128));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 136));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 144));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 152));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 160));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 168));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 176));
  sqlite3_finalize(*(sqlite3_stmt **)(v2 + 184));
  uint64_t v8 = *(void *)(v2 + 88);
  if (v8)
  {
    uint64_t v9 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_16:
      (*v9)(v8);
      goto LABEL_17;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
    --qword_1EB220150;
    off_1EB21C9E8(v8);
    uint64_t v8 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v9 = &xmmword_1EB21CA50;
      goto LABEL_16;
    }
  }
LABEL_17:
  uint64_t v10 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_22:
    uint64_t v11 = *v10;
    return v11(v2);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v2);
  uint64_t v2 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v10 = &xmmword_1EB21CA50;
    goto LABEL_22;
  }
  return result;
}

double sub_1B0DCB8C8(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    goto LABEL_22;
  }
  if (*(int *)(a1 + 16) < 1) {
    goto LABEL_15;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 16;
  do
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 24) + v5);
    if (v6)
    {
      uint64_t v7 = *(void (**)(void))(v6 + 32);
      if (v7) {
        v7(*(void *)(v6 + 24));
      }
      uint64_t v8 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_4;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
      --qword_1EB220150;
      off_1EB21C9E8(v6);
      uint64_t v6 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v8 = &xmmword_1EB21CA50;
LABEL_4:
        (*v8)(v6);
      }
    }
    ++v4;
    v5 += 24;
  }
  while (v4 < *(int *)(a1 + 16));
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
LABEL_15:
    uint64_t v9 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_20;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
    --qword_1EB220150;
    off_1EB21C9E8(v3);
    uint64_t v3 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v9 = &xmmword_1EB21CA50;
LABEL_20:
      (*v9)(v3);
    }
  }
  *(void *)(a1 + 24) = 0;
LABEL_22:
  sub_1B0DCBB38(v2, *(void *)(a1 + 88));
  sub_1B0DCBB38(v2, *(void *)(a1 + 96));
  sub_1B0DCBB38(v2, *(void *)(a1 + 104));
  sub_1B0DCBB38(v2, *(void *)(a1 + 112));
  sub_1B0DCBB38(v2, *(void *)(a1 + 120));
  uint64_t v10 = *(void *)(a1 + 48);
  if (v10)
  {
    uint64_t v11 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_28;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
    --qword_1EB220150;
    off_1EB21C9E8(v10);
    uint64_t v10 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v11 = &xmmword_1EB21CA50;
LABEL_28:
      (*v11)(v10);
    }
  }
  uint64_t v12 = *(void *)(a1 + 56);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(void *)(a1 + 288) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)a1 = v2;
  *(void *)(a1 + 56) = v12;
  return result;
}

uint64_t sub_1B0DCBB38(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = a2;
  int v3 = *(_DWORD *)(a2 + 16) - 1;
  *(_DWORD *)(a2 + 16) = v3;
  if (v3) {
    return 0;
  }
  --*(_DWORD *)(a1 + 84);
  if (*(void *)(a2 + 8) == 1) {
    *(_DWORD *)(a1 + 44) = -1;
  }
  if (!*(void *)a2 || (uint64_t v4 = sub_1B0DCBB38(a1), !v4)) {
    uint64_t v4 = sub_1B0DCBCA4(a1, v2);
  }
  uint64_t v7 = *(void *)(v2 + 8);
  if (v7)
  {
    uint64_t v8 = (void *)(a1 + 8 * (v7 % 0x61) + 192);
    do
    {
      uint64_t v9 = v8;
      uint64_t v10 = *v8;
      uint64_t v8 = (void *)(*v8 + 32);
    }
    while (v10 != v2);
    *uint64_t v9 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = 0;
  }
  uint64_t v11 = (void (**)(uint64_t))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_19:
    (*v11)(v2);
    return v4;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
  --qword_1EB220150;
  off_1EB21C9E8(v2);
  uint64_t v2 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v11 = (void (**)(uint64_t))&xmmword_1EB21CA50;
    goto LABEL_19;
  }
  return v4;
}

uint64_t sub_1B0DCBCA4(uint64_t a1, uint64_t a2)
{
  if (!*(_DWORD *)(a2 + 20)) {
    return 0;
  }
  uint64_t v4 = *(uint64_t **)(a1 + 120);
  uint64_t v5 = *(void *)(a2 + 8);
  int v6 = sub_1B0CC3F2C((uint64_t)v4, 0);
  if (v5)
  {
    if (v6) {
      goto LABEL_12;
    }
    uint64_t v7 = v4[16];
    if ((*(_WORD *)(v7 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v7, v5);
    }
    else
    {
      *(void *)uint64_t v7 = v5;
      *(_WORD *)(v7 + 20) = 4;
    }
  }
  else if (v6)
  {
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(*v4 + 24);
  if (v9) {
    xmmword_1EB21CA50(v9);
  }
LABEL_12:
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((v10 & 0x80000000) != 0)
  {
    sub_1B0CE1978(98740);
  }
  else
  {
    uint64_t v11 = *(char **)(a2 + 24);
    if (!sub_1B0CC3F2C((uint64_t)v4, 1u))
    {
      if (v11)
      {
        unsigned int v12 = sub_1B0C79BBC(v4[16] + 64, v11, v10, 0, 0);
        if (v12)
        {
          unsigned int v13 = v12;
          uint64_t v14 = *v4;
          *(_DWORD *)(v14 + 80) = v13;
          sub_1B0D0E714(v14, v13);
          sub_1B0D1806C(*v4, v13);
        }
      }
      uint64_t v15 = *(void *)(*v4 + 24);
      if (v15) {
        xmmword_1EB21CA50(v15);
      }
    }
  }
  sqlite3_step((sqlite3_stmt *)v4);
  *(_DWORD *)(a2 + 20) = 0;
  uint64_t v8 = sqlite3_reset((sqlite3_stmt *)v4);
  if (!sub_1B0CC3F2C((uint64_t)v4, 1u))
  {
    uint64_t v16 = *(void *)(*v4 + 24);
    if (v16) {
      xmmword_1EB21CA50(v16);
    }
  }
  if (!*(void *)(a2 + 8) && !v8)
  {
    uint64_t v17 = *(void *)(a1 + 24);
    if (v17)
    {
      int v18 = *(unsigned __int8 *)(v17 + 113);
      switch(v18)
      {
        case 186:
          goto LABEL_29;
        case 118:
          uint64_t v20 = *(void *)(v17 + 56);
LABEL_34:
          uint64_t v8 = 0;
          *(void *)(a2 + 8) = v20;
          uint64_t v21 = a1 + 8 * (v20 % 0x61);
          *(void *)(a2 + 32) = *(void *)(v21 + 192);
          *(void *)(v21 + 192) = a2;
          return v8;
        case 109:
LABEL_29:
          uint64_t v19 = "unopened";
          break;
        default:
          uint64_t v19 = "invalid";
          break;
      }
    }
    else
    {
      uint64_t v19 = "NULL";
    }
    sqlite3_log(21, "API call with %s database connection pointer", v19);
    sub_1B0CE1978(186263);
    uint64_t v20 = 0;
    goto LABEL_34;
  }
  return v8;
}

uint64_t sub_1B0DCBEE0(uint64_t a1, uint64_t a2, uint64_t *a3, sqlite3_int64 *a4)
{
  *a3 = 0;
  uint64_t v8 = *(void **)(a1 + 136);
  if (!sub_1B0CC3F2C((uint64_t)v8, 0))
  {
    uint64_t v9 = v8[16];
    if ((*(_WORD *)(v9 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v9, a2);
    }
    else
    {
      *(void *)uint64_t v9 = a2;
      *(_WORD *)(v9 + 20) = 4;
    }
    uint64_t v10 = *(void *)(*v8 + 24);
    if (v10) {
      xmmword_1EB21CA50(v10);
    }
  }
  int v11 = sqlite3_step(*(sqlite3_stmt **)(a1 + 136));
  unsigned int v12 = *(sqlite3_stmt **)(a1 + 136);
  if (v11 == 100)
  {
    sqlite3_int64 v13 = sqlite3_column_int64(v12, 0);
    if (a4) {
      *a4 = v13;
    }
    uint64_t v14 = sub_1B0DCC154(a1, v13, 0, a3);
    sqlite3_reset(*(sqlite3_stmt **)(a1 + 136));
    return v14;
  }
  else
  {
    return sqlite3_reset(v12);
  }
}

uint64_t sub_1B0DCBFE8(uint64_t a1, unsigned int a2, double a3)
{
  char v3 = a2;
  int v6 = *(unsigned __int8 *)(a1 + 9);
  if (*(unsigned char *)(a1 + 9))
  {
    uint64_t v7 = a1 + 64;
    ++*(_DWORD *)(a1 + 4 * a2 + 128);
  }
  else
  {
    if (!*(_DWORD *)(a1 + 36))
    {
      ++*(_DWORD *)(a1 + 4 * a2 + 128);
      goto LABEL_20;
    }
    uint64_t v7 = *(void *)(a1 + 48);
    ++*(_DWORD *)(a1 + 4 * a2 + 128);
    if (!v7) {
      goto LABEL_20;
    }
  }
  if (*(double *)v7 > a3 || *(double *)v7 == a3 && *(unsigned __int8 *)(v7 + 16) > a2)
  {
    if (v6)
    {
      uint64_t v8 = sub_1B0DCCD6C(a1, a2, a3);
      if (!v8) {
        return 0;
      }
      uint64_t v9 = v8;
      if ((int)(-1431655765 * ((v8 - *(void *)(a1 + 48)) >> 3)) > 3) {
        sub_1B0DCBB38(*(void *)a1, *(void *)(a1 + 88));
      }
      else {
        *(void *)(a1
      }
                  + 88
                  + ((uint64_t)(0xAAAAAAAB00000000 * ((v8 - *(void *)(a1 + 48)) >> 3) + 0x100000000) >> 29)) = *(void *)(a1 + 88);
      *(void *)(a1 + 88) = 0;
      long long v12 = *(_OWORD *)(a1 + 64);
      *(void *)(v9 + 16) = *(void *)(a1 + 80);
      *(_OWORD *)uint64_t v9 = v12;
    }
LABEL_20:
    *(double *)(a1 + 64) = a3;
    uint64_t v11 = a1 + 64;
    *(unsigned char *)(v11 + 16) = v3;
    *(unsigned char *)(v11 - 55) = 1;
    return v11;
  }

  return sub_1B0DCCD6C(a1, a2, a3);
}

uint64_t sub_1B0DCC154(uint64_t a1, sqlite3_int64 a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *(void *)(a1 + 8 * (a2 % 0x61) + 192);
  if (v8)
  {
    while (*(void *)(v8 + 8) != a2)
    {
      uint64_t v8 = *(void *)(v8 + 32);
      if (!v8) {
        goto LABEL_4;
      }
    }
    if (a3 && *(void *)v8 != a3) {
      return 267;
    }
    uint64_t v12 = 0;
    ++*(_DWORD *)(v8 + 16);
    goto LABEL_53;
  }
LABEL_4:
  uint64_t v9 = (sqlite3_blob **)(a1 + 112);
  uint64_t v10 = *(sqlite3_blob **)(a1 + 112);
  if (!v10) {
    goto LABEL_15;
  }
  *uint64_t v9 = 0;
  uint64_t v11 = sqlite3_blob_reopen(v10, a2);
  *uint64_t v9 = v10;
  if (!v11)
  {
    int v24 = *(_DWORD *)(a1 + 32);
    goto LABEL_41;
  }
  uint64_t v12 = v11;
  if (!*(unsigned char *)(a1 + 40) && !*(_DWORD *)(a1 + 80))
  {
    *uint64_t v9 = 0;
    sqlite3_int64 v13 = (sqlite3_stmt *)*((void *)v10 + 3);
    uint64_t v14 = (void *)*((void *)v10 + 4);
    uint64_t v15 = v14[3];
    if (v15) {
      xmmword_1EB21CA40(v15);
    }
    sub_1B0D05C10(v14, v10);
    uint64_t v16 = v14[3];
    if (v16) {
      xmmword_1EB21CA50(v16);
    }
    sqlite3_finalize(v13);
  }
  if (v12 != 7)
  {
    uint64_t v10 = *v9;
    if (*v9) {
      goto LABEL_24;
    }
LABEL_15:
    uint64_t v17 = sqlite3_mprintf("%s_node", *(const char **)(a1 + 56));
    if (!v17) {
      return 7;
    }
    int v18 = v17;
    LODWORD(v12) = sqlite3_blob_open(*(sqlite3 **)(a1 + 24), *(const char **)(a1 + 48), v17, "data", a2, 0, (sqlite3_blob **)(a1 + 112));
    uint64_t v19 = (uint64_t (**)(char *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v18);
      --qword_1EB220150;
      off_1EB21C9E8(v18);
      int v18 = (char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0)
      {
LABEL_22:
        uint64_t v10 = *v9;
        if (v12)
        {
          if (!v10)
          {
LABEL_31:
            uint64_t v8 = 0;
            if (v12 == 1) {
              uint64_t v12 = 267;
            }
            else {
              uint64_t v12 = v12;
            }
            goto LABEL_53;
          }
LABEL_24:
          if (!*(unsigned char *)(a1 + 40) && !*(_DWORD *)(a1 + 80))
          {
            *uint64_t v9 = 0;
            uint64_t v20 = (sqlite3_stmt *)*((void *)v10 + 3);
            uint64_t v21 = (void *)*((void *)v10 + 4);
            uint64_t v22 = v21[3];
            if (v22) {
              xmmword_1EB21CA40(v22);
            }
            sub_1B0D05C10(v21, v10);
            uint64_t v23 = v21[3];
            if (v23) {
              xmmword_1EB21CA50(v23);
            }
            sqlite3_finalize(v20);
          }
          goto LABEL_31;
        }
        int v24 = *(_DWORD *)(a1 + 32);
        if (!v10)
        {
          if (!v24) {
            goto LABEL_44;
          }
          goto LABEL_52;
        }
LABEL_41:
        uint64_t v25 = *((void *)v10 + 3);
        if (v25) {
          LODWORD(v25) = *(_DWORD *)v10;
        }
        if (v24 == v25)
        {
LABEL_44:
          if (sqlite3_initialize())
          {
            uint64_t v8 = 0;
            uint64_t v12 = 7;
            goto LABEL_53;
          }
          uint64_t v26 = sub_1B0C7FC94(v24 + 40);
          uint64_t v8 = v26;
          if (!v26)
          {
            uint64_t v12 = 7;
            goto LABEL_53;
          }
          ++*(_DWORD *)(a1 + 84);
          *(void *)uint64_t v26 = a3;
          *(void *)(v26 + 8) = a2;
          *(void *)(v26 + 16) = 1;
          *(void *)(v26 + 24) = v26 + 40;
          *(void *)(v26 + 32) = 0;
          uint64_t v27 = sub_1B0CEF9D8(*(int **)(a1 + 112), (char *)(v26 + 40), *(unsigned int *)(a1 + 32), 0, sub_1B0CEFBDC);
          uint64_t v12 = v27;
          if (a2 != 1 || v27)
          {
            if (v27)
            {
LABEL_59:
              --*(_DWORD *)(a1 + 84);
              float v30 = &off_1EB21C9E8;
              if (dword_1EB21C9C0)
              {
                if ((void)xmmword_1EB2201B0) {
                  xmmword_1EB21CA40(xmmword_1EB2201B0);
                }
                qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
                --qword_1EB220150;
                off_1EB21C9E8(v8);
                uint64_t v8 = xmmword_1EB2201B0;
                if (!(void)xmmword_1EB2201B0) {
                  goto LABEL_53;
                }
                float v30 = &xmmword_1EB21CA50;
              }
              (*v30)(v8);
              uint64_t v8 = 0;
LABEL_53:
              *a4 = v8;
              return v12;
            }
          }
          else
          {
            unsigned int v28 = __rev16(**(unsigned __int16 **)(v8 + 24));
            *(_DWORD *)(a1 + 44) = v28;
            if (v28 > 0x28)
            {
LABEL_58:
              uint64_t v12 = 267;
              goto LABEL_59;
            }
          }
          if ((*(_DWORD *)(a1 + 32) - 4) / *(unsigned __int8 *)(a1 + 39) >= (int)(bswap32(*(unsigned __int16 *)(*(void *)(v8 + 24) + 2)) >> 16))
          {
            if (a3) {
              ++*(_DWORD *)(a3 + 16);
            }
            uint64_t v12 = 0;
            uint64_t v31 = a1 + 8 * (*(_DWORD *)(v8 + 8) % 0x61u);
            *(void *)(v8 + 32) = *(void *)(v31 + 192);
            *(void *)(v31 + 192) = v8;
            goto LABEL_53;
          }
          goto LABEL_58;
        }
LABEL_52:
        uint64_t v8 = 0;
        uint64_t v12 = 267;
        goto LABEL_53;
      }
      uint64_t v19 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
    }
    (*v19)(v18);
    goto LABEL_22;
  }
  return v12;
}

uint64_t sub_1B0DCC5D8(uint64_t a1)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 38);
  uint64_t v4 = a1 + 64;
  uint64_t v51 = (sqlite3_int64 *)(a1 + 72);
  uint64_t v52 = *(void *)a1;
  uint64_t v53 = *(unsigned int *)(a1 + 16);
  uint64_t v50 = a1 + 64;
  while (1)
  {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 9);
    uint64_t v6 = v4;
    if (!*(unsigned char *)(a1 + 9) && (!*(_DWORD *)(a1 + 36) || (uint64_t v6 = *(void *)(a1 + 48)) == 0))
    {
      char v49 = 1;
      goto LABEL_98;
    }
    if (!*(unsigned char *)(v6 + 16))
    {
      char v49 = 0;
LABEL_98:
      uint64_t result = 0;
      *(unsigned char *)(a1 + 8) = v49;
      return result;
    }
    uint64_t v7 = a1 + 8 * (1 - v5);
    uint64_t v10 = *(void *)(v7 + 88);
    uint64_t v9 = (uint64_t *)(v7 + 88);
    uint64_t v8 = v10;
    if (!v10)
    {
      uint64_t v11 = v51;
      if (v5 != 1) {
        uint64_t v11 = (sqlite3_int64 *)(*(void *)(a1 + 48) + 8);
      }
      uint64_t result = sub_1B0DCC154(*(void *)a1, *v11, 0, v9);
      if (result) {
        return result;
      }
      uint64_t v8 = *v9;
    }
    uint64_t v13 = *(void *)(v8 + 24);
    unsigned int v14 = __rev16(*(unsigned __int16 *)(v13 + 2));
    unsigned int v15 = *(unsigned __int8 *)(v6 + 18);
    if (v14 > v15) {
      break;
    }
LABEL_90:
    if (v14 <= v15) {
      sub_1B0DCCEF4(a1);
    }
  }
  uint64_t v16 = (unsigned __int8 *)(v13 + *(unsigned __int8 *)(v6 + 18) * (unint64_t)*(unsigned __int8 *)(v2 + 39) + 4);
  uint64_t v17 = v16;
  while (2)
  {
    if ((int)v53 >= 1)
    {
      uint64_t v18 = 0;
      int v19 = 2;
      double v20 = -1.0;
      while (1)
      {
        uint64_t v21 = *(void *)(a1 + 24);
        int v22 = *(_DWORD *)(v21 + v18 + 4);
        if (v22 < 70)
        {
          int v25 = 4 * *(_DWORD *)(v21 + v18);
          if (*(unsigned char *)(v6 + 16) == 1)
          {
            float v26 = COERCE_FLOAT(bswap32(*(_DWORD *)&v17[v25 + 8]));
            double v27 = (double)SLODWORD(v26);
            if (v3 != 1) {
              double v27 = v26;
            }
            switch(v22)
            {
              case '?':
                goto LABEL_17;
              case '@':
                goto LABEL_73;
              case 'B':
                double v28 = *(double *)(v21 + v18 + 8);
                goto LABEL_64;
              case 'C':
                if (v27 >= *(double *)(v21 + v18 + 8)) {
                  goto LABEL_73;
                }
                goto LABEL_17;
              case 'D':
                if (v27 < *(double *)(v21 + v18 + 8)) {
                  goto LABEL_73;
                }
                goto LABEL_17;
              case 'E':
                if (v27 <= *(double *)(v21 + v18 + 8)) {
                  goto LABEL_73;
                }
                goto LABEL_17;
              default:
                if (v27 != *(double *)(v21 + v18 + 8)) {
                  goto LABEL_73;
                }
                goto LABEL_17;
            }
          }
          __int16 v32 = (unsigned int *)&v17[(v25 & 0x3F8) + 8];
          switch(v22)
          {
            case '?':
              goto LABEL_17;
            case '@':
              goto LABEL_73;
            case 'A':
              float v37 = COERCE_FLOAT(bswap32(*v32));
              double v38 = v37;
              if (v3 == 1) {
                double v38 = (double)SLODWORD(v37);
              }
              double v27 = *(double *)(v21 + v18 + 8);
              if (v27 < v38) {
                goto LABEL_73;
              }
              float v39 = COERCE_FLOAT(bswap32(v32[1]));
              double v28 = (double)SLODWORD(v39);
              if (v3 != 1) {
                double v28 = v39;
              }
LABEL_64:
              if (v27 > v28) {
                goto LABEL_73;
              }
              goto LABEL_17;
            case 'B':
            case 'C':
              float v33 = COERCE_FLOAT(bswap32(*v32));
              double v34 = (double)SLODWORD(v33);
              if (v3 != 1) {
                double v34 = v33;
              }
              if (*(double *)(v21 + v18 + 8) < v34) {
                goto LABEL_73;
              }
              goto LABEL_17;
            default:
              float v35 = COERCE_FLOAT(bswap32(v32[1]));
              double v36 = (double)SLODWORD(v35);
              if (v3 != 1) {
                double v36 = v35;
              }
              if (*(double *)(v21 + v18 + 8) > v36) {
                goto LABEL_73;
              }
              goto LABEL_17;
          }
        }
        uint64_t v23 = *(void *)(v21 + v18 + 16);
        if (v22 == 71 && *(unsigned char *)(v6 + 16) == 1) {
          *(void *)(v23 + 72) = (((unint64_t)*v17 << 56) | ((unint64_t)v17[1] << 48) | ((unint64_t)v17[2] << 40) | ((unint64_t)v17[3] << 32) | ((unint64_t)v17[4] << 24) | ((unint64_t)v17[5] << 16) | ((unint64_t)v17[6] << 8))
        }
                                + v17[7];
        if (v3 == 1)
        {
          switch(*(_DWORD *)(v23 + 56))
          {
            case 4:
              goto LABEL_27;
            case 6:
              goto LABEL_26;
            case 8:
              goto LABEL_25;
            case 0xA:
              double v63 = (double)(int)bswap32(*((_DWORD *)v17 + 11));
              double v62 = (double)(int)bswap32(*((_DWORD *)v17 + 10));
LABEL_25:
              double v61 = (double)(int)bswap32(*((_DWORD *)v17 + 9));
              double v60 = (double)(int)bswap32(*((_DWORD *)v17 + 8));
LABEL_26:
              double v59 = (double)(int)bswap32(*((_DWORD *)v17 + 7));
              double v58 = (double)(int)bswap32(*((_DWORD *)v17 + 6));
LABEL_27:
              double v57 = (double)(int)bswap32(*((_DWORD *)v17 + 5));
              double v56 = (double)(int)bswap32(*((_DWORD *)v17 + 4));
              break;
            default:
              break;
          }
          double v55 = (double)(int)bswap32(*((_DWORD *)v17 + 3));
          double v24 = (double)(int)bswap32(*((_DWORD *)v17 + 2));
        }
        else
        {
          switch(*(_DWORD *)(v23 + 56))
          {
            case 4:
              goto LABEL_38;
            case 6:
              goto LABEL_37;
            case 8:
              goto LABEL_36;
            case 0xA:
              double v63 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 11)));
              double v62 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 10)));
LABEL_36:
              double v61 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 9)));
              double v60 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 8)));
LABEL_37:
              double v59 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 7)));
              double v58 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 6)));
LABEL_38:
              double v57 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 5)));
              double v56 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 4)));
              break;
            default:
              break;
          }
          double v55 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 3)));
          double v24 = COERCE_FLOAT(bswap32(*((_DWORD *)v17 + 2)));
        }
        double v54 = v24;
        if (v22 == 70)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t))(v21 + v18 + 8))(v23);
          int v19 = 0;
          double v20 = 0.0;
          if (result) {
            return result;
          }
        }
        else
        {
          *(void *)(v23 + 40) = &v54;
          *(_DWORD *)(v23 + 60) = *(unsigned __int8 *)(v6 + 16) - 1;
          uint64_t v29 = *(void *)v6;
          *(void *)(v23 + 80) = *(void *)v6;
          *(void *)(v23 + 96) = v29;
          int v30 = *(unsigned __int8 *)(v6 + 17);
          *(_DWORD *)(v23 + 88) = v30;
          *(_DWORD *)(v23 + 92) = v30;
          uint64_t result = (*(uint64_t (**)(uint64_t))(v21 + v18 + 8))(v23);
          if (*(_DWORD *)(v23 + 92) < v19) {
            int v19 = *(_DWORD *)(v23 + 92);
          }
          if (*(double *)(v23 + 96) < v20 || v20 < 0.0) {
            double v20 = *(double *)(v23 + 96);
          }
          if (result) {
            return result;
          }
        }
        if (!v19) {
          break;
        }
LABEL_17:
        v18 += 24;
        if (24 * v53 == v18)
        {
          LOBYTE(v15) = *(unsigned char *)(v6 + 18);
          uint64_t v16 = v17;
          uint64_t v2 = v52;
          goto LABEL_77;
        }
      }
LABEL_73:
      LOBYTE(v15) = *(unsigned char *)(v6 + 18) + 1;
      *(unsigned char *)(v6 + 18) = v15;
      if (v14 > v15)
      {
        uint64_t v2 = v52;
        v17 += *(unsigned __int8 *)(v52 + 39);
        continue;
      }
      unsigned int v15 = v15;
      uint64_t v2 = v52;
LABEL_89:
      uint64_t v4 = v50;
      goto LABEL_90;
    }
    break;
  }
  double v20 = -1.0;
  LOBYTE(v19) = 2;
LABEL_77:
  unsigned __int8 v40 = v15 + 1;
  *(unsigned char *)(v6 + 18) = v15 + 1;
  char v41 = *(unsigned char *)(v6 + 16);
  unsigned __int8 v42 = v41 - 1;
  if (v41 == 1)
  {
    unint64_t v43 = *(void *)(v6 + 8);
    if (v14 > v40) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }
  unint64_t v43 = (((unint64_t)*v16 << 56) | ((unint64_t)v16[1] << 48) | ((unint64_t)v16[2] << 40) | ((unint64_t)v16[3] << 32) | ((unint64_t)v16[4] << 24) | ((unint64_t)v16[5] << 16) | ((unint64_t)v16[6] << 8))
      + v16[7];
  uint64_t v44 = *(unsigned int *)(a1 + 36);
  if ((int)v44 < 1)
  {
LABEL_82:
    LOBYTE(v15) = 0;
    if (v14 > v40)
    {
LABEL_84:
      if (v20 >= 0.0) {
        double v47 = v20;
      }
      else {
        double v47 = 0.0;
      }
      uint64_t v48 = sub_1B0DCBFE8(a1, v42, v47);
      if (!v48) {
        return 7;
      }
      *(unsigned char *)(v48 + 17) = v19;
      *(unsigned char *)(v48 + 18) = v15;
      unsigned int v15 = v15;
      *(void *)(v48 + 8) = v43;
      goto LABEL_89;
    }
LABEL_83:
    sub_1B0DCCEF4(a1);
    goto LABEL_84;
  }
  unsigned int v45 = (uint64_t *)(*(void *)(a1 + 48) + 8);
  while (1)
  {
    uint64_t v46 = *v45;
    v45 += 3;
    if (v46 == v43) {
      return 267;
    }
    if (!--v44) {
      goto LABEL_82;
    }
  }
}

uint64_t sub_1B0DCCD6C(uint64_t a1, char a2, double a3)
{
  int v6 = *(_DWORD *)(a1 + 36);
  uint64_t v7 = *(int *)(a1 + 32);
  if (v6 >= (int)v7)
  {
    uint64_t v23 = *(void *)(a1 + 48);
    if (sqlite3_initialize()) {
      return 0;
    }
    uint64_t v25 = 2 * v7 + 8;
    uint64_t v8 = sub_1B0C8E1B8(v23, 24 * v25);
    if (!v8) {
      return 0;
    }
    *(void *)(a1 + 48) = v8;
    *(_DWORD *)(a1 + 32) = v25;
    int v6 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 48);
  }
  *(_DWORD *)(a1 + 36) = v6 + 1;
  uint64_t v9 = v8 + 24 * v6;
  *(double *)uint64_t v9 = a3;
  *(unsigned char *)(v9 + 16) = a2;
  if (v6 >= 1)
  {
    do
    {
      unsigned int v14 = v6 - 1;
      unsigned int v15 = (v6 - 1) >> 1;
      uint64_t v16 = *(void *)(a1 + 48);
      uint64_t v17 = (long long *)(v16 + 24 * v15);
      if (*(double *)v9 >= *(double *)v17
        && (*(double *)v9 > *(double *)v17
         || *(unsigned __int8 *)(v9 + 16) >= *(unsigned __int8 *)(v16 + 24 * v15 + 16)))
      {
        break;
      }
      uint64_t v9 = v16 + 24 * v15;
      long long v18 = *v17;
      uint64_t v26 = *((void *)v17 + 2);
      uint64_t v19 = v16 + 24 * v6;
      uint64_t v20 = *(void *)(v19 + 16);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v19;
      *(void *)(v9 + 16) = v20;
      uint64_t v21 = *(void *)(a1 + 48) + 24 * v6;
      *(_OWORD *)uint64_t v21 = v18;
      *(void *)(v21 + 16) = v26;
      if (v6 <= 8)
      {
        if (v6 < 4)
        {
          uint64_t v10 = 8 * (v15 + 1);
          uint64_t v11 = a1 + 88;
          uint64_t v12 = *(void *)(a1 + 88 + v10);
          uint64_t v13 = 8 * (v6 + 1);
          *(void *)(v11 + v10) = *(void *)(a1 + 88 + v13);
          *(void *)(v11 + v13) = v12;
        }
        else
        {
          uint64_t v22 = a1 + 8 * (v15 + 1);
          sub_1B0DCBB38(*(void *)a1, *(void *)(v22 + 88));
          *(void *)(v22 + 88) = 0;
        }
      }
      int v6 = v14 >> 1;
    }
    while (v14 > 1);
  }
  return v9;
}

uint64_t sub_1B0DCCEF4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned __int8 *)(result + 9);
  uint64_t v3 = result + 8 * (1 - v2);
  uint64_t v6 = *(void *)(v3 + 88);
  uint64_t v5 = (void *)(v3 + 88);
  uint64_t v4 = v6;
  if (v6)
  {
    uint64_t result = sub_1B0DCBB38(*(void *)result, v4);
    *uint64_t v5 = 0;
    LODWORD(v2) = *(unsigned __int8 *)(v1 + 9);
  }
  if (v2)
  {
    uint64_t v7 = v1 + 4 * *(unsigned __int8 *)(v1 + 80);
    --*(_DWORD *)(v7 + 128);
    *(unsigned char *)(v1 + 9) = 0;
    return result;
  }
  uint64_t v8 = *(int *)(v1 + 36);
  if (v8)
  {
    uint64_t v9 = *(void *)(v1 + 48);
    uint64_t v10 = v1 + 4 * *(unsigned __int8 *)(v9 + 16);
    --*(_DWORD *)(v10 + 128);
    int v11 = v8 - 1;
    *(_DWORD *)(v1 + 36) = v8 - 1;
    uint64_t v12 = v9 + 24 * ((int)v8 - 1);
    uint64_t v13 = *(void *)(v12 + 16);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v12;
    *(void *)(v9 + 16) = v13;
    if ((int)v8 > 4
      || (uint64_t v14 = v1 + 8 * v8, *(void *)(v1 + 96) = *(void *)(v14 + 88), *(void *)(v14 + 88) = 0, (int)v8 >= 3))
    {
      int v15 = 0;
      int v16 = 0;
      int v17 = 1;
      do
      {
        int v23 = v15 + 2;
        uint64_t v24 = *(void *)(v1 + 48);
        uint64_t v25 = (long long *)(v24 + 24 * v16);
        if (v15 + 2 >= v11)
        {
          int v29 = v17;
          double v28 = *(double *)(v24 + 24 * v17);
        }
        else
        {
          uint64_t v26 = (long long *)(v24 + 24 * v23);
          double v27 = *(double *)v26;
          double v28 = *(double *)(v24 + 24 * v17);
          if (*(double *)v26 < v28
            || (int v29 = v17, *(double *)v26 <= v28)
            && *(unsigned __int8 *)(v24 + 24 * v23 + 16) < *(unsigned __int8 *)(v24 + 24 * v17 + 16))
          {
            if (v27 >= *(double *)v25
              && (v27 > *(double *)v25
               || *(unsigned __int8 *)(v24 + 24 * v23 + 16) >= *(unsigned __int8 *)(v24 + 24 * v16 + 16)))
            {
              return result;
            }
            long long v30 = *v25;
            uint64_t v31 = *((void *)v25 + 2);
            uint64_t v32 = *((void *)v26 + 2);
            *uint64_t v25 = *v26;
            *((void *)v25 + 2) = v32;
            uint64_t v33 = *(void *)(v1 + 48) + 24 * v23;
            *(_OWORD *)uint64_t v33 = v30;
            *(void *)(v33 + 16) = v31;
            if (v16 <= 3)
            {
              uint64_t v34 = v16 + 1;
              if (v23 < 4)
              {
                int v18 = v15 + 3;
                uint64_t v19 = 8 * (int)v34;
                uint64_t v20 = v1 + 88;
                uint64_t v21 = *(void *)(v1 + 88 + v19);
                uint64_t v22 = 8 * v18;
                *(void *)(v20 + v19) = *(void *)(v1 + 88 + v22);
                *(void *)(v20 + v22) = v21;
              }
              else
              {
                uint64_t v35 = v1 + 8 * v34;
                uint64_t result = sub_1B0DCBB38(*(void *)v1, *(void *)(v35 + 88));
                *(void *)(v35 + 88) = 0;
              }
            }
            int v17 = v23;
            goto LABEL_12;
          }
        }
        if (v28 >= *(double *)v25
          && (v28 > *(double *)v25
           || *(unsigned __int8 *)(v24 + 24 * v29 + 16) >= *(unsigned __int8 *)(v24 + 24 * v16 + 16)))
        {
          return result;
        }
        double v36 = (long long *)(v24 + 24 * v29);
        long long v37 = *v25;
        uint64_t v38 = *((void *)v25 + 2);
        uint64_t v39 = *((void *)v36 + 2);
        *uint64_t v25 = *v36;
        *((void *)v25 + 2) = v39;
        uint64_t v40 = *(void *)(v1 + 48) + 24 * v29;
        *(_OWORD *)uint64_t v40 = v37;
        *(void *)(v40 + 16) = v38;
        if (v16 <= 3)
        {
          uint64_t v41 = v16 + 1;
          if (v17 < 4)
          {
            uint64_t v43 = 8 * (int)v41;
            uint64_t v44 = v1 + 88;
            uint64_t v45 = *(void *)(v1 + 88 + v43);
            uint64_t v46 = 8 * v23;
            *(void *)(v44 + v43) = *(void *)(v1 + 88 + v46);
            *(void *)(v44 + v46) = v45;
          }
          else
          {
            uint64_t v42 = v1 + 8 * v41;
            uint64_t result = sub_1B0DCBB38(*(void *)v1, *(void *)(v42 + 88));
            *(void *)(v42 + 88) = 0;
          }
        }
LABEL_12:
        int v16 = v17;
        int v15 = 2 * v17;
        int v17 = (2 * v17) | 1;
      }
      while (v17 < v11);
    }
  }
  return result;
}

uint64_t sub_1B0DCD1B4(void *a1, unsigned int a2)
{
  pStmt = 0;
  uint64_t v4 = (unsigned __int8 *)sqlite3_mprintf("SELECT * FROM %Q.%Q", a1[6], a1[7]);
  if (!v4)
  {
    uint64_t v7 = 7;
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  uint64_t v7 = sub_1B0C7EAC0(a1[3], v4, 0xFFFFFFFFLL, 128, 0, &pStmt, 0, v5);
  uint64_t v8 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v6);
    --qword_1EB220150;
    off_1EB21C9E8(v6);
    uint64_t v6 = (unsigned __int8 *)xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_8;
    }
    uint64_t v8 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
  }
  (*v8)(v6);
LABEL_8:
  if (!v7)
  {
    if (a2)
    {
      sub_1B0CEBAA4((uint64_t *)pStmt, a2, 0, 0);
      sub_1B0CEBAA4((uint64_t *)pStmt, a2 + 1, 0, 0);
      uint64_t v9 = sqlite3_mprintf("rtree constraint failed: %s.(%s<=%s)");
    }
    else
    {
      sub_1B0CEBAA4((uint64_t *)pStmt, 0, 0, 0);
      uint64_t v9 = sqlite3_mprintf("UNIQUE constraint failed: %s.%s");
    }
    a1[2] = v9;
    uint64_t v7 = 19;
  }
LABEL_14:
  sqlite3_finalize(pStmt);
  return v7;
}

uint64_t sub_1B0DCD340(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  unsigned int v4 = sub_1B0DCC154(a1, 1, 0, &v30);
  if (!v4)
  {
    unsigned int v4 = sub_1B0DCBEE0(a1, a2, &v31, 0);
    if (!v4)
    {
      uint64_t v15 = v31;
      if (v31)
      {
        uint64_t v16 = *(void *)(v31 + 24);
        uint64_t v17 = __rev16(*(unsigned __int16 *)(v16 + 2));
        if (!v17)
        {
LABEL_36:
          sub_1B0DCBB38(a1, v31);
          unsigned int v4 = 267;
          goto LABEL_2;
        }
        uint64_t v18 = 0;
        uint64_t v19 = (unsigned __int8 *)(v16 + 5);
        while ((((unint64_t)*(v19 - 1) << 56) | ((unint64_t)*v19 << 48) | ((unint64_t)v19[1] << 40) | ((unint64_t)v19[2] << 32) | ((unint64_t)v19[3] << 24) | ((unint64_t)v19[4] << 16) | ((unint64_t)v19[5] << 8))
              + v19[6] != a2)
        {
          v19 += *(unsigned __int8 *)(a1 + 39);
          if (v17 == ++v18) {
            goto LABEL_36;
          }
        }
        unsigned int v4 = sub_1B0DCF754(a1, v31, v18, 0);
        unsigned int v20 = sub_1B0DCBB38(a1, v15);
        if (!v4) {
          unsigned int v4 = v20;
        }
      }
    }
    if (!v4)
    {
      uint64_t v21 = *(void **)(a1 + 152);
      if (!sub_1B0CC3F2C((uint64_t)v21, 0))
      {
        uint64_t v22 = v21[16];
        if ((*(_WORD *)(v22 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v22, a2);
        }
        else
        {
          *(void *)uint64_t v22 = a2;
          *(_WORD *)(v22 + 20) = 4;
        }
        uint64_t v23 = *(void *)(*v21 + 24);
        if (v23) {
          xmmword_1EB21CA50(v23);
        }
      }
      sqlite3_step(*(sqlite3_stmt **)(a1 + 152));
      unsigned int v4 = sqlite3_reset(*(sqlite3_stmt **)(a1 + 152));
      if (!v4)
      {
        if (*(int *)(a1 + 44) >= 1
          && (v24 = v30, uint64_t v25 = *(void *)(v30 + 24), __rev16(*(unsigned __int16 *)(v25 + 2)) == 1))
        {
          *(void *)&v32[0] = 0;
          unsigned int v26 = sub_1B0DCC154(a1, (((unint64_t)*(unsigned __int8 *)(v25 + 4) << 56) | ((unint64_t)*(unsigned __int8 *)(v25 + 5) << 48) | ((unint64_t)*(unsigned __int8 *)(v25 + 6) << 40) | ((unint64_t)*(unsigned __int8 *)(v25 + 7) << 32) | ((unint64_t)*(unsigned __int8 *)(v25 + 8) << 24) | ((unint64_t)*(unsigned __int8 *)(v25 + 9) << 16) | ((unint64_t)*(unsigned __int8 *)(v25 + 10) << 8))+ *(unsigned __int8 *)(v25 + 11), v30, (uint64_t *)v32);
          uint64_t v27 = *(void *)&v32[0];
          if (!v26) {
            unsigned int v26 = sub_1B0DCF98C(a1, *(uint64_t *)&v32[0], *(_DWORD *)(a1 + 44) - 1);
          }
          unsigned int v28 = sub_1B0DCBB38(a1, v27);
          if (v26) {
            unsigned int v4 = v26;
          }
          else {
            unsigned int v4 = v28;
          }
          if (!v4)
          {
            unsigned int v29 = *(_DWORD *)(a1 + 44) - 1;
            *(_DWORD *)(a1 + 44) = v29;
            **(_WORD **)(v24 + 24) = bswap32(v29) >> 16;
            *(_DWORD *)(v24 + 20) = 1;
          }
        }
        else
        {
          unsigned int v4 = 0;
        }
      }
    }
  }
LABEL_2:
  for (uint64_t i = *(void *)(a1 + 96); i; uint64_t i = *(void *)(a1 + 96))
  {
    if (!v4)
    {
      unsigned int v7 = __rev16(*(unsigned __int16 *)(*(void *)(i + 24) + 2));
      if (v7)
      {
        unsigned int v8 = 1;
        while (1)
        {
          uint64_t v33 = 0;
          memset(v32, 0, sizeof(v32));
          sub_1B0DC818C(a1, i, v8 - 1, v32);
          unsigned int v9 = sub_1B0DCD740(a1, (uint64_t)v32, *(_DWORD *)(i + 8), &v33);
          if (v9) {
            break;
          }
          uint64_t v10 = v33;
          unsigned int v11 = sub_1B0DCDD80(a1, v33, v32, *(_DWORD *)(i + 8));
          unsigned int v12 = sub_1B0DCBB38(a1, v10);
          if (v11) {
            unsigned int v4 = v11;
          }
          else {
            unsigned int v4 = v12;
          }
          if (v4) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v8 >= v7;
          }
          ++v8;
          if (v13) {
            goto LABEL_7;
          }
        }
        unsigned int v4 = v9;
      }
      else
      {
        unsigned int v4 = 0;
      }
    }
LABEL_7:
    *(void *)(a1 + 96) = *(void *)(i + 32);
    --*(_DWORD *)(a1 + 84);
    uint64_t v6 = (void (**)(uint64_t))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(i);
      --qword_1EB220150;
      off_1EB21C9E8(i);
      uint64_t i = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        continue;
      }
      uint64_t v6 = (void (**)(uint64_t))&xmmword_1EB21CA50;
    }
    (*v6)(i);
  }
  LODWORD(result) = sub_1B0DCBB38(a1, v30);
  if (v4) {
    return v4;
  }
  else {
    return result;
  }
}

uint64_t sub_1B0DCD740(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v75 = 0;
  uint64_t v8 = sub_1B0DCC154(a1, 1, 0, &v75);
  uint64_t v9 = v75;
  if (!v8)
  {
    int v11 = 0;
    unsigned int v12 = (const float *)(a2 + 8);
    uint64_t v13 = a2 + 12;
    int v69 = a3;
    while (1)
    {
      if (v11 >= *(_DWORD *)(a1 + 44) - a3)
      {
        uint64_t v10 = 0;
        goto LABEL_84;
      }
      unsigned int v14 = __rev16(*(unsigned __int16 *)(*(void *)(v9 + 24) + 2));
      long long v73 = 0u;
      *(_OWORD *)uint64_t v74 = 0u;
      long long v72 = 0u;
      uint64_t v71 = 0;
      int v70 = v11;
      sqlite3_int64 v15 = 0;
      if (v14) {
        break;
      }
LABEL_4:
      uint64_t v10 = sub_1B0DCC154(a1, v15, v9, &v71);
      sub_1B0DCBB38(a1, v9);
      uint64_t v9 = v71;
      a3 = v69;
      int v11 = v70 + 1;
      if (v10) {
        goto LABEL_84;
      }
    }
    int v16 = 0;
    double v17 = 0.0;
    double v18 = 0.0;
    while (1)
    {
      sub_1B0DC818C(a1, v9, v16, &v72);
      long long v76 = v72;
      long long v77 = v73;
      *(_OWORD *)unsigned int v78 = *(_OWORD *)v74;
      int v19 = *(unsigned __int8 *)(a1 + 38);
      int v20 = *(unsigned __int8 *)(a1 + 36);
      double v21 = 1.0;
      if (!*(unsigned char *)(a1 + 38))
      {
        switch(*(unsigned char *)(a1 + 36))
        {
          case 2:
            goto LABEL_25;
          case 3:
            goto LABEL_24;
          case 4:
            goto LABEL_23;
          case 5:
            double v21 = (float)(v78[3] - v78[2]);
LABEL_23:
            double v21 = v21 * (float)(v78[1] - v78[0]);
LABEL_24:
            double v21 = v21 * (float)(*((float *)&v77 + 3) - *((float *)&v77 + 2));
LABEL_25:
            double v21 = v21 * (float)(*((float *)&v77 + 1) - *(float *)&v77);
            break;
          default:
            break;
        }
        uint64_t v27 = *((void *)&v76 + 1);
        unint64_t v28 = *(unsigned __int8 *)(a1 + 37);
        if (v28 <= 2) {
          unint64_t v29 = 2;
        }
        else {
          unint64_t v29 = *(unsigned __int8 *)(a1 + 37);
        }
        if (v29 < 7)
        {
          unint64_t v45 = 0;
LABEL_45:
          char v49 = (float *)(v13 + 4 * v45);
          uint64_t v50 = (float *)&v76 + v45 + 3;
          do
          {
            if (*(v50 - 1) >= *(v49 - 1)) {
              int v51 = *((_DWORD *)v49 - 1);
            }
            else {
              int v51 = *((_DWORD *)v50 - 1);
            }
            float v52 = *v50;
            float v53 = *v49;
            v49 += 2;
            float v54 = v53;
            if (*v50 <= v53) {
              float v52 = v54;
            }
            *((_DWORD *)v50 - 1) = v51;
            *uint64_t v50 = v52;
            v45 += 2;
            v50 += 2;
          }
          while (v45 < v28);
        }
        else
        {
          unint64_t v44 = ((v29 - 1) >> 1) + 1;
          unint64_t v45 = 2 * (v44 & 0x7FFFFFFFFFFFFFFCLL);
          uint64_t v46 = v44 & 0x7FFFFFFFFFFFFFFCLL;
          double v47 = v12;
          uint64_t v48 = (float *)&v76 + 2;
          do
          {
            float32x4x2_t v79 = vld2q_f32(v48);
            float32x4x2_t v81 = vld2q_f32(v47);
            v47 += 8;
            v82.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v81.val[0], v79.val[0]), (int8x16_t)v79.val[0], (int8x16_t)v81.val[0]);
            v82.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v79.val[1], v81.val[1]), (int8x16_t)v79.val[1], (int8x16_t)v81.val[1]);
            vst2q_f32(v48, v82);
            v48 += 8;
            v46 -= 4;
          }
          while (v46);
          if (v44 != (v44 & 0x7FFFFFFFFFFFFFFCLL)) {
            goto LABEL_45;
          }
        }
        double v43 = (float)(*((float *)&v27 + 1) - *(float *)&v27);
        goto LABEL_53;
      }
      switch(*(unsigned char *)(a1 + 36))
      {
        case 2:
          goto LABEL_15;
        case 3:
          goto LABEL_14;
        case 4:
          goto LABEL_13;
        case 5:
          double v21 = (double)(SLODWORD(v78[3]) - (uint64_t)SLODWORD(v78[2]));
LABEL_13:
          double v21 = v21 * (double)(SLODWORD(v78[1]) - (uint64_t)SLODWORD(v78[0]));
LABEL_14:
          double v21 = v21 * (double)(SHIDWORD(v77) - (uint64_t)SDWORD2(v77));
LABEL_15:
          double v21 = v21 * (double)(SDWORD1(v77) - (uint64_t)(int)v77);
          break;
        default:
          break;
      }
      uint64_t v23 = SDWORD2(v76);
      uint64_t v22 = SHIDWORD(v76);
      unint64_t v24 = *(unsigned __int8 *)(a1 + 37);
      unint64_t v25 = v24 <= 2 ? 2 : *(unsigned __int8 *)(a1 + 37);
      if (v25 < 7) {
        break;
      }
      unint64_t v30 = ((v25 - 1) >> 1) + 1;
      unint64_t v26 = 2 * (v30 & 0x7FFFFFFFFFFFFFFCLL);
      uint64_t v31 = v30 & 0x7FFFFFFFFFFFFFFCLL;
      uint64_t v32 = (int32x4_t *)v12;
      uint64_t v33 = (int32x4_t *)((char *)&v76 + 8);
      do
      {
        int32x4_t v34 = v33[1];
        int32x4_t v35 = *v32;
        int32x4_t v36 = v32[1];
        v32 += 2;
        v80.val[0] = (float32x4_t)vuzp1q_s32(vminq_s32(*v33, v35), vminq_s32(v34, v36));
        v80.val[1] = (float32x4_t)vuzp2q_s32(vmaxq_s32(*v33, v35), vmaxq_s32(v34, v36));
        vst2q_f32((float *)v33->i32, v80);
        v33 += 2;
        v31 -= 4;
      }
      while (v31);
      if (v30 != (v30 & 0x7FFFFFFFFFFFFFFCLL)) {
        goto LABEL_35;
      }
LABEL_42:
      double v43 = (double)(v22 - v23);
LABEL_53:
      double v55 = v21 * v43;
      double v56 = 1.0;
      int v57 = v20 - 2;
      double v58 = 1.0;
      if (v19)
      {
        double v59 = 1.0;
        double v60 = 1.0;
        switch(v57)
        {
          case 0:
            goto LABEL_58;
          case 1:
            goto LABEL_57;
          case 2:
            goto LABEL_56;
          case 3:
            double v58 = (double)(SLODWORD(v78[3]) - (uint64_t)SLODWORD(v78[2]));
LABEL_56:
            double v59 = v58 * (double)(SLODWORD(v78[1]) - (uint64_t)SLODWORD(v78[0]));
LABEL_57:
            double v60 = v59 * (double)(SHIDWORD(v77) - (uint64_t)SDWORD2(v77));
LABEL_58:
            double v58 = v60 * (double)(SDWORD1(v77) - (uint64_t)(int)v77);
            break;
          default:
            break;
        }
        switch(v57)
        {
          case 0:
            goto LABEL_63;
          case 1:
            goto LABEL_62;
          case 2:
            goto LABEL_61;
          case 3:
            double v56 = (double)(SLODWORD(v74[3]) - (uint64_t)SLODWORD(v74[2]));
LABEL_61:
            double v56 = v56 * (double)(SLODWORD(v74[1]) - (uint64_t)SLODWORD(v74[0]));
LABEL_62:
            double v56 = v56 * (double)(SHIDWORD(v73) - (uint64_t)SDWORD2(v73));
LABEL_63:
            double v56 = v56 * (double)(SDWORD1(v73) - (uint64_t)(int)v73);
            break;
          default:
            break;
        }
        double v61 = v58 * (double)(SHIDWORD(v76) - (uint64_t)SDWORD2(v76));
        double v62 = (double)(SHIDWORD(v72) - (uint64_t)SDWORD2(v72));
      }
      else
      {
        double v63 = 1.0;
        double v64 = 1.0;
        switch(v57)
        {
          case 0:
            goto LABEL_69;
          case 1:
            goto LABEL_68;
          case 2:
            goto LABEL_67;
          case 3:
            double v58 = (float)(v78[3] - v78[2]);
LABEL_67:
            double v63 = v58 * (float)(v78[1] - v78[0]);
LABEL_68:
            double v64 = v63 * (float)(*((float *)&v77 + 3) - *((float *)&v77 + 2));
LABEL_69:
            double v58 = v64 * (float)(*((float *)&v77 + 1) - *(float *)&v77);
            break;
          default:
            break;
        }
        switch(v57)
        {
          case 0:
            goto LABEL_74;
          case 1:
            goto LABEL_73;
          case 2:
            goto LABEL_72;
          case 3:
            double v56 = (float)(v74[3] - v74[2]);
LABEL_72:
            double v56 = v56 * (float)(v74[1] - v74[0]);
LABEL_73:
            double v56 = v56 * (float)(*((float *)&v73 + 3) - *((float *)&v73 + 2));
LABEL_74:
            double v56 = v56 * (float)(*((float *)&v73 + 1) - *(float *)&v73);
            break;
          default:
            break;
        }
        double v61 = v58 * (float)(*((float *)&v76 + 3) - *((float *)&v76 + 2));
        double v62 = (float)(*((float *)&v72 + 3) - *((float *)&v72 + 2));
      }
      double v65 = v56 * v62;
      double v66 = v61 - v55;
      if (!v16 || v66 < v18 || (v66 == v18 ? (BOOL v67 = v65 < v17) : (BOOL v67 = 0), v67))
      {
        sqlite3_int64 v15 = v72;
        double v18 = v66;
        double v17 = v65;
      }
      if (++v16 == v14) {
        goto LABEL_4;
      }
    }
    unint64_t v26 = 0;
LABEL_35:
    long long v37 = (int *)(v13 + 4 * v26);
    uint64_t v38 = (int *)&v76 + v26 + 3;
    do
    {
      if (*(v38 - 1) >= *(v37 - 1)) {
        int v39 = *(v37 - 1);
      }
      else {
        int v39 = *(v38 - 1);
      }
      int v40 = *v38;
      int v42 = *v37;
      v37 += 2;
      int v41 = v42;
      if (*v38 <= v42) {
        int v40 = v41;
      }
      *(v38 - 1) = v39;
      *uint64_t v38 = v40;
      v26 += 2;
      v38 += 2;
    }
    while (v26 < v24);
    goto LABEL_42;
  }
  uint64_t v10 = v8;
LABEL_84:
  *a4 = v9;
  return v10;
}

uint64_t sub_1B0DCDD80(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v5 = (uint64_t)a3;
  uint64_t v330 = *MEMORY[0x1E4F143B8];
  if (a4 >= 1)
  {
    unint64_t v8 = (1372618415 * (unint64_t)*a3) >> 32;
    uint64_t v9 = *(uint64_t **)(a1
                     + 8
                     * (*a3
                      - 97 * ((v8 + ((*a3 - v8) >> 1)) >> 6))
                     + 192);
    if (v9)
    {
      while (v9[1] != *a3)
      {
        uint64_t v9 = (uint64_t *)v9[4];
        if (!v9) {
          goto LABEL_9;
        }
      }
      sub_1B0DCBB38(a1, *v9);
      if (a2) {
        ++*(_DWORD *)(a2 + 16);
      }
      *uint64_t v9 = a2;
    }
  }
LABEL_9:
  int v10 = *(unsigned __int8 *)(a1 + 39);
  int v11 = (*(_DWORD *)(a1 + 32) - 4) / v10;
  uint64_t v12 = *(void *)(a2 + 24);
  signed int v13 = __rev16(*(unsigned __int16 *)(v12 + 2));
  if (v13 < v11)
  {
    uint64_t v14 = (v13 * v10) + v12;
    *(void *)(v14 + 4) = bswap64(*(void *)v5);
    uint64_t v15 = v14 + 4;
    if (*(unsigned char *)(a1 + 37))
    {
      unint64_t v16 = 0;
      double v17 = (_DWORD *)(v15 + 8);
      do
        *v17++ = bswap32(*(_DWORD *)(v5 + 8 + 4 * v16++));
      while (v16 < *(unsigned __int8 *)(a1 + 37));
    }
    *(_WORD *)(*(void *)(a2 + 24) + 2) = bswap32(v13 + 1) >> 16;
    *(_DWORD *)(a2 + 20) = 1;
  }
  if (v13 != v11)
  {
    uint64_t v20 = sub_1B0DD0058((unsigned __int8 *)a1, (uint64_t *)a2, v5);
    if (v20) {
      return v20;
    }
    uint64_t v21 = *(void *)v5;
    uint64_t v22 = *(void *)(a2 + 8);
    if (a4)
    {
      return sub_1B0DD04DC(a1, v21, v22);
    }
    else
    {
      return sub_1B0DD03DC(a1, v21, v22);
    }
  }
  if (*(_DWORD *)(a1 + 104) >= a4)
  {
    uint64_t v18 = *(void *)(a2 + 24);
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 24);
    if (*(void *)(a2 + 8) != 1)
    {
      *(_DWORD *)(a1 + 104) = a4;
      *(void *)&long long v329 = 0;
      long long v327 = 0u;
      long long v328 = 0u;
      unsigned int v19 = *(unsigned __int16 *)(v18 + 2);
      if (sqlite3_initialize()) {
        return 7;
      }
      unsigned int v308 = a4;
      unint64_t v35 = __rev16(v19);
      uint64_t v36 = (v35 + 2) & 0x1FFFE;
      uint64_t v37 = sub_1B0C7FC94(v36 << 6);
      if (!v37) {
        return 7;
      }
      uint64_t v38 = v37;
      unsigned int v310 = (long long *)v5;
      uint64_t v39 = 0;
      uint64_t v40 = (v35 + 1);
      int v41 = (char *)(v37 + 48 * v36);
      uint64_t v317 = &v41[4 * v36];
      int v42 = (_OWORD *)(v37 + 48 * v35);
      uint64_t v43 = v37 + 12;
      do
      {
        while (1)
        {
          if (v39 == v35)
          {
            long long v44 = *v310;
            long long v45 = v310[2];
            v42[1] = v310[1];
            v42[2] = v45;
            *int v42 = v44;
          }
          else
          {
            sub_1B0DC818C(a1, a2, v39, (void *)(v38 + 48 * v39));
          }
          *(_DWORD *)&v41[4 * v39] = v39;
          uint64_t v46 = *(unsigned __int8 *)(a1 + 36);
          if (*(unsigned char *)(a1 + 36)) {
            break;
          }
          if (++v39 == v40) {
            goto LABEL_97;
          }
        }
        int v47 = *(unsigned __int8 *)(a1 + 38);
        uint64_t v48 = (float *)(v43 + 48 * v39);
        char v49 = (double *)&v327;
        uint64_t v50 = *(unsigned __int8 *)(a1 + 36);
        do
        {
          double v53 = *v49;
          if (v47)
          {
            double v51 = v53 + (double)*((int *)v48 - 1);
            double *v49 = v51;
            double v52 = (double)*(int *)v48;
          }
          else
          {
            double v51 = v53 + *(v48 - 1);
            double *v49 = v51;
            double v52 = *v48;
          }
          *v49++ = v51 + v52;
          v48 += 2;
          --v50;
        }
        while (v50);
        ++v39;
      }
      while (v39 != v40);
      double v61 = (double)(int)v40 + (double)(int)v40;
      if (v46 >= 4)
      {
        uint64_t v62 = v46 & 0xFC;
        float64x2_t v86 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v61, 0);
        char v87 = (float64x2_t *)&v328;
        uint64_t v88 = v62;
        do
        {
          float64x2_t v89 = vdivq_f64(*v87, v86);
          v87[-1] = vdivq_f64(v87[-1], v86);
          float64x2_t *v87 = v89;
          v87 += 2;
          v88 -= 4;
        }
        while (v88);
        if (v62 == v46)
        {
LABEL_97:
          uint64_t v92 = 0;
          uint64_t v93 = (uint64_t)&v317[4 * ((v35 + 2) & 0x1FFFE)];
          unsigned int v94 = (float *)(v38 + 12);
          do
          {
            *(void *)(v93 + 8 * v92) = 0;
            if (v46)
            {
              int v95 = *(unsigned __int8 *)(a1 + 38);
              double v96 = 0.0;
              int v97 = (double *)&v327;
              uint64_t v98 = v46;
              uint64_t v99 = v94;
              do
              {
                if (v95)
                {
                  double v100 = (double)*(int *)v99;
                  double v101 = (double)*((int *)v99 - 1);
                }
                else
                {
                  double v100 = *v99;
                  double v101 = *(v99 - 1);
                }
                double v102 = *v97++;
                double v96 = v96 + (v100 - v101 - v102) * (v100 - v101 - v102);
                *(double *)(v93 + 8 * v92) = v96;
                v99 += 2;
                --v98;
              }
              while (v98);
            }
            ++v92;
            v94 += 12;
          }
          while (v92 != v40);
          sub_1B0DD08BC(v41, v35 + 1, v93, v317);
          bzero((void *)(*(void *)(a2 + 24) + 2), *(int *)(a1 + 32) - 2);
          uint64_t v103 = 0;
          *(_DWORD *)(a2 + 20) = 1;
          while (1)
          {
            int v104 = *(unsigned __int8 *)(a1 + 39);
            int v105 = (*(_DWORD *)(a1 + 32) - 4) / v104;
            if (v103 >= (int)(((int)(((unint64_t)(1431655765 * v105) >> 32) - v105) >> 1)
                             + ((((unint64_t)(1431655765 * v105) >> 32) - v105) >> 31)
                             + v35))
              break;
            int v106 = *(_DWORD *)&v41[4 * v103];
            unint64_t v107 = (unint64_t *)(v38 + 48 * v106);
            uint64_t v108 = *(void *)(a2 + 24);
            signed int v109 = __rev16(*(unsigned __int16 *)(v108 + 2));
            if (v109 < v105)
            {
              uint64_t v110 = (v109 * v104) + v108;
              *(void *)(v110 + 4) = bswap64(*v107);
              uint64_t v111 = v110 + 4;
              if (*(unsigned char *)(a1 + 37))
              {
                unint64_t v112 = 0;
                BOOL v113 = (_DWORD *)(v111 + 8);
                uint64_t v114 = v38 + 8 + 48 * v106;
                do
                  *v113++ = bswap32(*(_DWORD *)(v114 + 4 * v112++));
                while (v112 < *(unsigned __int8 *)(a1 + 37));
              }
              *(_WORD *)(*(void *)(a2 + 24) + 2) = bswap32(v109 + 1) >> 16;
              *(_DWORD *)(a2 + 20) = 1;
            }
            uint64_t v115 = *v107;
            if (*v107 == *(void *)v310)
            {
              uint64_t v116 = *(void *)(a2 + 8);
              if (v308) {
                uint64_t v117 = sub_1B0DD04DC(a1, v115, v116);
              }
              else {
                uint64_t v117 = sub_1B0DD03DC(a1, v115, v116);
              }
              uint64_t v20 = v117;
              ++v103;
              if (v117) {
                goto LABEL_266;
              }
            }
            else
            {
              ++v103;
            }
          }
          uint64_t v20 = sub_1B0DCFBE4((unsigned __int8 *)a1, (uint64_t *)a2);
          if (!v20 && v35 >= v103)
          {
            unint64_t v118 = v103;
            while (1)
            {
              *(void *)&long long v324 = 0;
              uint64_t v119 = v38 + 48 * *(int *)&v41[4 * v118];
              uint64_t v120 = sub_1B0DCD740(a1, v119, v308, (uint64_t *)&v324);
              if (v120) {
                break;
              }
              uint64_t v121 = v324;
              unsigned int v122 = sub_1B0DCDD80(a1, v324, v119, v308);
              unsigned int v123 = sub_1B0DCBB38(a1, v121);
              if (v122) {
                uint64_t v20 = v122;
              }
              else {
                uint64_t v20 = v123;
              }
              if (v20) {
                BOOL v124 = 1;
              }
              else {
                BOOL v124 = v118 >= v35;
              }
              ++v118;
              if (v124) {
                goto LABEL_266;
              }
            }
            uint64_t v20 = v120;
          }
LABEL_266:
          int v232 = &off_1EB21C9E8;
          if (dword_1EB21C9C0)
          {
            if ((void)xmmword_1EB2201B0) {
              xmmword_1EB21CA40(xmmword_1EB2201B0);
            }
            qword_1EB220108[0] -= (int)off_1EB21C9F8(v38);
            --qword_1EB220150;
            off_1EB21C9E8(v38);
            uint64_t v38 = xmmword_1EB2201B0;
            if (!(void)xmmword_1EB2201B0) {
              return v20;
            }
            int v232 = &xmmword_1EB21CA50;
          }
          (*v232)(v38);
          return v20;
        }
      }
      else
      {
        uint64_t v62 = 0;
      }
      uint64_t v90 = (double *)&v327 + v62;
      uint64_t v91 = v46 - v62;
      do
      {
        *uint64_t v90 = *v90 / v61;
        ++v90;
        --v91;
      }
      while (v91);
      goto LABEL_97;
    }
  }
  unsigned int v24 = *(unsigned __int16 *)(v18 + 2);
  long long v322 = 0u;
  long long v323 = 0u;
  long long v320 = 0u;
  long long v321 = 0u;
  long long v318 = 0u;
  long long v319 = 0u;
  if (sqlite3_initialize())
  {
    unint64_t v25 = 0;
LABEL_27:
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v20 = 7;
    char v28 = 1;
    goto LABEL_28;
  }
  uint64_t v30 = __rev16(v24);
  uint64_t v31 = (v30 + 1);
  uint64_t v32 = sub_1B0C7FC94(52 * v31);
  unint64_t v25 = (void *)v32;
  if (!v32) {
    goto LABEL_27;
  }
  uint64_t v313 = 4 * v31;
  bzero((void *)(v32 + 48 * v31), 4 * v31);
  uint64_t v309 = (uint64_t)v25;
  int v307 = a4;
  unsigned int v316 = v30;
  if (v30)
  {
    uint64_t v33 = v5;
    for (uint64_t i = 0; i != v30; ++i)
    {
      sub_1B0DC818C(a1, a2, i, v25);
      v25 += 6;
    }
    uint64_t v5 = v33;
    unint64_t v25 = (void *)v309;
  }
  else
  {
    uint64_t v30 = 0;
  }
  bzero((void *)(*(void *)(a2 + 24) + 2), *(int *)(a1 + 32) - 2);
  *(_DWORD *)(a2 + 20) = 1;
  float v54 = &v25[6 * v30];
  long long v55 = *(_OWORD *)v5;
  long long v56 = *(_OWORD *)(v5 + 32);
  v54[1] = *(_OWORD *)(v5 + 16);
  v54[2] = v56;
  *float v54 = v55;
  if (*(void *)(a2 + 8) == 1)
  {
    uint64_t v57 = *(int *)(a1 + 32);
    if (sqlite3_initialize())
    {
      uint64_t v27 = 0;
    }
    else
    {
      double v63 = (void *)sub_1B0C7FC94(v57 + 40);
      uint64_t v27 = (uint64_t)v63;
      if (v63)
      {
        bzero(v63, *(int *)(a1 + 32) + 40);
        *(void *)(v27 + 24) = v27 + 40;
        ++*(_DWORD *)(a1 + 84);
        *(void *)uint64_t v27 = a2;
        *(void *)(v27 + 16) = 0x100000001;
        ++*(_DWORD *)(a2 + 16);
      }
    }
    uint64_t v64 = *(int *)(a1 + 32);
    if (sqlite3_initialize() || (double v66 = (uint64_t *)sub_1B0C7FC94(v64 + 40)) == 0)
    {
      double v60 = 0;
    }
    else
    {
      BOOL v67 = v66;
      bzero(v66, *(int *)(a1 + 32) + 40);
      double v60 = v67;
      v67[3] = (uint64_t)(v67 + 5);
      ++*(_DWORD *)(a1 + 84);
      *BOOL v67 = a2;
      v67[2] = 0x100000001;
      ++*(_DWORD *)(a2 + 16);
    }
    unsigned int v68 = *(_DWORD *)(a1 + 44) + 1;
    *(_DWORD *)(a1 + 44) = v68;
    *(_DWORD *)(a2 + 20) = 1;
    **(_WORD **)(a2 + 24) = bswap32(v68) >> 16;
  }
  else
  {
    uint64_t v58 = *(void *)a2;
    uint64_t v59 = *(int *)(a1 + 32);
    if (sqlite3_initialize())
    {
      uint64_t v27 = 0;
    }
    else
    {
      double v65 = (void *)sub_1B0C7FC94(v59 + 40);
      uint64_t v27 = (uint64_t)v65;
      if (v65)
      {
        bzero(v65, *(int *)(a1 + 32) + 40);
        *(void *)(v27 + 24) = v27 + 40;
        ++*(_DWORD *)(a1 + 84);
        *(void *)uint64_t v27 = v58;
        *(void *)(v27 + 16) = 0x100000001;
        if (v58) {
          ++*(_DWORD *)(v58 + 16);
        }
      }
    }
    ++*(_DWORD *)(a2 + 16);
    double v60 = (void *)a2;
  }
  char v28 = 0;
  uint64_t v20 = 7;
  if (!v60 || !v27)
  {
    uint64_t v26 = (uint64_t)v60;
    goto LABEL_28;
  }
  uint64_t v301 = (uint64_t)v60;
  bzero((void *)v60[3], *(int *)(a1 + 32));
  bzero(*(void **)(v27 + 24), *(int *)(a1 + 32));
  unsigned int v69 = *(unsigned __int8 *)(a1 + 36);
  if (sqlite3_initialize()) {
    goto LABEL_323;
  }
  unint64_t v70 = v313 + 8 + (v313 + 8) * (unint64_t)v69;
  uint64_t v71 = (void *)sub_1B0C7FC94(v70);
  if (!v71)
  {
LABEL_331:
    char v28 = 0;
    unint64_t v25 = (void *)v309;
    uint64_t v26 = v301;
    goto LABEL_28;
  }
  int v72 = *(unsigned __int8 *)(a1 + 36);
  long long v73 = v71;
  bzero(v71, v70);
  LODWORD(v74) = *(unsigned __int8 *)(a1 + 36);
  uint64_t v300 = v27;
  uint64_t v306 = v73;
  if (!*(unsigned char *)(a1 + 36))
  {
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    unint64_t v25 = (void *)v309;
    goto LABEL_274;
  }
  unint64_t v75 = 0;
  long long v76 = (char *)&v73[v72] + 4 * (v31 * v72);
  v77.i64[0] = 0x400000004;
  v77.i64[1] = 0x400000004;
  v78.i64[0] = 0x800000008;
  v78.i64[1] = 0x800000008;
  float32x4x2_t v79 = v73;
  do
  {
    float32x4x2_t v80 = (char *)&v73[v74] + 4 * v75 * v31;
    v73[v75] = v80;
    if (v316 < 7)
    {
      uint64_t v81 = 0;
      do
      {
LABEL_89:
        *((_DWORD *)&v79[v74] + v81) = v81;
        ++v81;
      }
      while (v31 != v81);
      goto LABEL_83;
    }
    uint64_t v82 = v74;
    uint64_t v83 = v31 & 0x1FFF8;
    int32x4_t v84 = (int32x4_t)xmmword_1B0DE1640;
    do
    {
      uint64_t v85 = (int32x4_t *)&v79[v82];
      *uint64_t v85 = v84;
      v85[1] = vaddq_s32(v84, v77);
      int32x4_t v84 = vaddq_s32(v84, v78);
      v82 += 4;
      v83 -= 8;
    }
    while (v83);
    uint64_t v81 = v31 & 0x1FFF8;
    if ((v31 & 0x1FFF8) != v31) {
      goto LABEL_89;
    }
LABEL_83:
    sub_1B0DD071C((float *)a1, v80, v31, v75++, v309, v76);
    unint64_t v74 = *(unsigned __int8 *)(a1 + 36);
    float32x4x2_t v79 = (void *)((char *)v79 + v313);
    long long v73 = v306;
    v77.i64[0] = 0x400000004;
    v77.i64[1] = 0x400000004;
    v78.i64[0] = 0x800000008;
    v78.i64[1] = 0x800000008;
  }
  while (v75 < v74);
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v311 = v5;
    uint64_t v125 = 0;
    int v126 = 0;
    int v127 = 0;
    int v128 = (*(_DWORD *)(a1 + 32) - 4) / *(unsigned __int8 *)(a1 + 39);
    uint64_t v314 = v128 / 3;
    int v302 = ((int)(((unint64_t)(1431655765 * v128) >> 32) - v128) >> 1)
         + ((((unint64_t)(1431655765 * v128) >> 32) - v128) >> 31)
         + v31;
    uint64_t v129 = v309 + 8;
    uint64_t v130 = v309 + 12;
    double v131 = 0.0;
    while (1)
    {
      int v304 = v127;
      int v305 = v126;
      unint64_t v315 = v74;
      uint64_t v134 = v314;
      uint64_t v303 = v125;
      if ((int)v314 <= v302) {
        break;
      }
      int v312 = 0;
      double v132 = 0.0;
LABEL_135:
      BOOL v133 = v132 < v131 || v303 == 0;
      if (v133) {
        int v127 = v303;
      }
      else {
        int v127 = v304;
      }
      long long v73 = v306;
      if (v133) {
        int v126 = v312;
      }
      else {
        int v126 = v305;
      }
      if (v133) {
        double v131 = v132;
      }
      uint64_t v125 = v303 + 1;
      unint64_t v74 = v315;
      if (v303 + 1 == v315)
      {
        uint64_t v230 = v127;
        uint64_t v231 = v126;
        uint64_t v5 = v311;
        goto LABEL_273;
      }
    }
    int v312 = 0;
    unsigned int v135 = (int *)v73[v125];
    BOOL v136 = (long long *)(v309 + 48 * *v135);
    __int16 v137 = (long long *)(v309 + 48 * v135[v30]);
    unint64_t v138 = *(unsigned __int8 *)(a1 + 37);
    if (v138 <= 2) {
      unint64_t v139 = 2;
    }
    else {
      unint64_t v139 = *(unsigned __int8 *)(a1 + 37);
    }
    unint64_t v140 = ((v139 - 1) >> 1) + 1;
    int v141 = *(unsigned __int8 *)(a1 + 38);
    uint64_t v142 = v140 & 0x7FFFFFFFFFFFFFFCLL;
    double v143 = 0.0;
    int v144 = v141;
    double v145 = 0.0;
    double v132 = 0.0;
    while (2)
    {
      long long v146 = *v136;
      long long v147 = v136[2];
      long long v328 = v136[1];
      long long v329 = v147;
      long long v327 = v146;
      long long v148 = *v137;
      long long v149 = v137[2];
      long long v325 = v137[1];
      long long v326 = v149;
      long long v324 = v148;
      if (v316 >= 2)
      {
        for (uint64_t j = 1; j != v30; ++j)
        {
          int v151 = v135[j];
          if (j >= v134)
          {
            if (!v144)
            {
              if (v139 >= 7)
              {
                unsigned int v189 = (const float *)(v129 + 48 * v151);
                uint64_t v190 = v140 & 0x7FFFFFFFFFFFFFFCLL;
                uint64_t v191 = (float *)&v324 + 2;
                do
                {
                  float32x4x2_t v337 = vld2q_f32(v191);
                  float32x4x2_t v339 = vld2q_f32(v189);
                  v189 += 8;
                  v343.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v339.val[0], v337.val[0]), (int8x16_t)v337.val[0], (int8x16_t)v339.val[0]);
                  v343.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v337.val[1], v339.val[1]), (int8x16_t)v337.val[1], (int8x16_t)v339.val[1]);
                  vst2q_f32(v191, v343);
                  v191 += 8;
                  v190 -= 4;
                }
                while (v190);
                unint64_t v155 = 2 * (v140 & 0x7FFFFFFFFFFFFFFCLL);
                if (v140 != v142) {
                  goto LABEL_202;
                }
              }
              else
              {
                unint64_t v155 = 0;
LABEL_202:
                unsigned int v192 = (float *)(v130 + 4 * v155 + 48 * v151);
                char v193 = (float *)&v324 + v155 + 3;
                do
                {
                  float v194 = *(v193 - 1);
                  if (v194 >= *(v192 - 1)) {
                    float v194 = *(v192 - 1);
                  }
                  *(v193 - 1) = v194;
                  float v195 = *v193;
                  float v196 = *v192;
                  v192 += 2;
                  float v197 = v196;
                  if (*v193 <= v196) {
                    float v195 = v197;
                  }
                  *char v193 = v195;
                  v193 += 2;
                  v155 += 2;
                }
                while (v155 < v138);
              }
LABEL_156:
              int v144 = 0;
              continue;
            }
            if (v139 < 7)
            {
              unint64_t v153 = 0;
LABEL_182:
              unsigned int v174 = (int *)(v130 + 4 * v153 + 48 * v151);
              char v175 = (int *)&v324 + v153 + 3;
              do
              {
                int v176 = *(v174 - 1);
                if (*(v175 - 1) < v176) {
                  int v176 = *(v175 - 1);
                }
                *(v175 - 1) = v176;
                int v177 = *v175;
                int v179 = *v174;
                v174 += 2;
                int v178 = v179;
                if (*v175 <= v179) {
                  int v177 = v178;
                }
                *char v175 = v177;
                v175 += 2;
                v153 += 2;
              }
              while (v153 < v138);
              continue;
            }
            unsigned int v168 = (int32x4_t *)(v129 + 48 * v151);
            uint64_t v169 = v140 & 0x7FFFFFFFFFFFFFFCLL;
            unsigned int v170 = (int32x4_t *)((char *)&v324 + 8);
            do
            {
              int32x4_t v171 = v170[1];
              int32x4_t v172 = *v168;
              int32x4_t v173 = v168[1];
              v168 += 2;
              v341.val[0] = (float32x4_t)vuzp1q_s32(vminq_s32(*v170, v172), vminq_s32(v171, v173));
              v341.val[1] = (float32x4_t)vuzp2q_s32(vmaxq_s32(*v170, v172), vmaxq_s32(v171, v173));
              vst2q_f32((float *)v170->i32, v341);
              v170 += 2;
              v169 -= 4;
            }
            while (v169);
            unint64_t v153 = 2 * (v140 & 0x7FFFFFFFFFFFFFFCLL);
            if (v140 != v142) {
              goto LABEL_182;
            }
          }
          else
          {
            if (!v141)
            {
              if (v139 >= 7)
              {
                char v180 = (const float *)(v129 + 48 * v151);
                uint64_t v181 = v140 & 0x7FFFFFFFFFFFFFFCLL;
                int v182 = (float *)&v327 + 2;
                do
                {
                  float32x4x2_t v336 = vld2q_f32(v182);
                  float32x4x2_t v338 = vld2q_f32(v180);
                  v180 += 8;
                  v342.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v338.val[0], v336.val[0]), (int8x16_t)v336.val[0], (int8x16_t)v338.val[0]);
                  v342.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v336.val[1], v338.val[1]), (int8x16_t)v336.val[1], (int8x16_t)v338.val[1]);
                  vst2q_f32(v182, v342);
                  v182 += 8;
                  v181 -= 4;
                }
                while (v181);
                unint64_t v154 = 2 * (v140 & 0x7FFFFFFFFFFFFFFCLL);
                if (v140 == v142) {
                  goto LABEL_156;
                }
              }
              else
              {
                unint64_t v154 = 0;
              }
              unsigned int v183 = (float *)(v130 + 4 * v154 + 48 * v151);
              int v184 = (float *)&v327 + v154 + 3;
              do
              {
                float v185 = *(v184 - 1);
                if (v185 >= *(v183 - 1)) {
                  float v185 = *(v183 - 1);
                }
                *(v184 - 1) = v185;
                float v186 = *v184;
                float v187 = *v183;
                v183 += 2;
                float v188 = v187;
                if (*v184 <= v187) {
                  float v186 = v188;
                }
                float *v184 = v186;
                v184 += 2;
                v154 += 2;
              }
              while (v154 < v138);
              goto LABEL_156;
            }
            if (v139 < 7)
            {
              unint64_t v152 = 0;
LABEL_172:
              unsigned __int8 v162 = (int *)(v130 + 4 * v152 + 48 * v151);
              uint64_t v163 = (int *)&v327 + v152 + 3;
              do
              {
                int v164 = *(v163 - 1);
                if (v164 >= *(v162 - 1)) {
                  int v164 = *(v162 - 1);
                }
                *(v163 - 1) = v164;
                int v165 = *v163;
                int v167 = *v162;
                v162 += 2;
                int v166 = v167;
                if (*v163 <= v167) {
                  int v165 = v166;
                }
                *uint64_t v163 = v165;
                v163 += 2;
                v152 += 2;
              }
              while (v152 < v138);
              int v144 = v141;
              continue;
            }
            int v156 = (int32x4_t *)(v129 + 48 * v151);
            uint64_t v157 = v140 & 0x7FFFFFFFFFFFFFFCLL;
            BOOL v158 = (int32x4_t *)((char *)&v327 + 8);
            do
            {
              int32x4_t v159 = v158[1];
              int32x4_t v160 = *v156;
              int32x4_t v161 = v156[1];
              v156 += 2;
              v340.val[0] = (float32x4_t)vuzp1q_s32(vminq_s32(*v158, v160), vminq_s32(v159, v161));
              v340.val[1] = (float32x4_t)vuzp2q_s32(vmaxq_s32(*v158, v160), vmaxq_s32(v159, v161));
              vst2q_f32((float *)v158->i32, v340);
              v158 += 2;
              v157 -= 4;
            }
            while (v157);
            unint64_t v152 = 2 * (v140 & 0x7FFFFFFFFFFFFFFCLL);
            int v144 = v141;
            if (v140 != v142) {
              goto LABEL_172;
            }
          }
        }
      }
      double v198 = 0.0;
      uint64_t v199 = (float *)&v327 + v138 + 1;
      unint64_t v200 = v138 + 2;
      do
      {
        if (v141)
        {
          double v201 = (double)*(int *)v199;
          double v202 = (double)*((int *)v199 - 1);
        }
        else
        {
          double v201 = *v199;
          double v202 = *(v199 - 1);
        }
        double v198 = v198 + v201 - v202;
        v200 -= 2;
        v199 -= 2;
      }
      while (v200 > 3);
      double v203 = 0.0;
      int v204 = (float *)&v324 + v138 + 1;
      unint64_t v205 = v138 + 2;
      do
      {
        if (v141)
        {
          double v206 = (double)*(int *)v204;
          double v207 = (double)*((int *)v204 - 1);
        }
        else
        {
          double v206 = *v204;
          double v207 = *(v204 - 1);
        }
        double v203 = v203 + v206 - v207;
        v205 -= 2;
        v204 -= 2;
      }
      while (v205 > 3);
      if (v138)
      {
        unint64_t v208 = 0;
        double v209 = 1.0;
        int v210 = (float *)&v327 + 3;
        int v211 = (float *)&v324 + 3;
        while (1)
        {
          if (v141)
          {
            int v212 = *((_DWORD *)v210 - 1);
            if (v212 <= *((_DWORD *)v211 - 1)) {
              int v212 = *((_DWORD *)v211 - 1);
            }
            double v213 = (double)v212;
            double v214 = (double)*(int *)v210;
            double v215 = (double)*(int *)v211;
            BOOL v216 = v214 < v215;
          }
          else
          {
            float v217 = *(v210 - 1);
            float v218 = *v211;
            if (v217 <= *(v211 - 1)) {
              float v217 = *(v211 - 1);
            }
            double v213 = v217;
            BOOL v216 = *v210 < v218;
            double v214 = *v210;
            double v215 = v218;
          }
          if (!v216) {
            double v214 = v215;
          }
          if (v214 < v213) {
            break;
          }
          double v209 = v209 * (v214 - v213);
          v208 += 2;
          v211 += 2;
          v210 += 2;
          if (v208 >= v138)
          {
            double v219 = 1.0;
            if (!v141) {
              goto LABEL_245;
            }
            goto LABEL_233;
          }
        }
        double v209 = 0.0;
        double v219 = 1.0;
        if (v141) {
          goto LABEL_233;
        }
LABEL_245:
        double v225 = 1.0;
        double v226 = 1.0;
        double v227 = 1.0;
        switch((int)v315)
        {
          case 2:
            goto LABEL_249;
          case 3:
            goto LABEL_248;
          case 4:
            goto LABEL_247;
          case 5:
            double v225 = (float)(*((float *)&v329 + 3) - *((float *)&v329 + 2));
LABEL_247:
            double v226 = v225 * (float)(*((float *)&v329 + 1) - *(float *)&v329);
LABEL_248:
            double v227 = v226 * (float)(*((float *)&v328 + 3) - *((float *)&v328 + 2));
LABEL_249:
            double v225 = v227 * (float)(*((float *)&v328 + 1) - *(float *)&v328);
            break;
          default:
            break;
        }
        switch((int)v315)
        {
          case 2:
            goto LABEL_254;
          case 3:
            goto LABEL_253;
          case 4:
            goto LABEL_252;
          case 5:
            double v219 = (float)(*((float *)&v326 + 3) - *((float *)&v326 + 2));
LABEL_252:
            double v219 = v219 * (float)(*((float *)&v326 + 1) - *(float *)&v326);
LABEL_253:
            double v219 = v219 * (float)(*((float *)&v325 + 3) - *((float *)&v325 + 2));
LABEL_254:
            double v219 = v219 * (float)(*((float *)&v325 + 1) - *(float *)&v325);
            break;
          default:
            break;
        }
        double v223 = v225 * (float)(*((float *)&v327 + 3) - *((float *)&v327 + 2));
        double v224 = (float)(*((float *)&v324 + 3) - *((float *)&v324 + 2));
      }
      else
      {
        double v209 = 1.0;
        double v219 = 1.0;
        if (!v141) {
          goto LABEL_245;
        }
LABEL_233:
        double v220 = 1.0;
        double v221 = 1.0;
        double v222 = 1.0;
        switch((int)v315)
        {
          case 2:
            goto LABEL_237;
          case 3:
            goto LABEL_236;
          case 4:
            goto LABEL_235;
          case 5:
            double v220 = (double)(SHIDWORD(v329) - (uint64_t)SDWORD2(v329));
LABEL_235:
            double v221 = v220 * (double)(SDWORD1(v329) - (uint64_t)(int)v329);
LABEL_236:
            double v222 = v221 * (double)(SHIDWORD(v328) - (uint64_t)SDWORD2(v328));
LABEL_237:
            double v220 = v222 * (double)(SDWORD1(v328) - (uint64_t)(int)v328);
            break;
          default:
            break;
        }
        switch((int)v315)
        {
          case 2:
            goto LABEL_242;
          case 3:
            goto LABEL_241;
          case 4:
            goto LABEL_240;
          case 5:
            double v219 = (double)(SHIDWORD(v326) - (uint64_t)SDWORD2(v326));
LABEL_240:
            double v219 = v219 * (double)(SDWORD1(v326) - (uint64_t)(int)v326);
LABEL_241:
            double v219 = v219 * (double)(SHIDWORD(v325) - (uint64_t)SDWORD2(v325));
LABEL_242:
            double v219 = v219 * (double)(SDWORD1(v325) - (uint64_t)(int)v325);
            break;
          default:
            break;
        }
        double v223 = v220 * (double)(SHIDWORD(v327) - (uint64_t)SDWORD2(v327));
        double v224 = (double)(SHIDWORD(v324) - (uint64_t)SDWORD2(v324));
      }
      double v228 = v209 + 0.0;
      double v229 = v223 + v219 * v224;
      if (v134 == v314 || v228 < v145 || v228 == v145 && v229 < v143)
      {
        double v145 = v228;
        double v143 = v229;
        int v312 = v134;
      }
      double v132 = v132 + v198 + v203;
      if (v302 + 1 == ++v134) {
        goto LABEL_135;
      }
      continue;
    }
  }
  uint64_t v230 = 0;
  uint64_t v231 = 0;
LABEL_273:
  unint64_t v25 = (void *)v309;
  uint64_t v27 = v300;
LABEL_274:
  uint64_t v233 = 0;
  uint64_t v234 = (int *)v73[v230];
  unint64_t v235 = (long long *)&v25[6 * *v234];
  long long v236 = *v235;
  long long v237 = v235[2];
  long long v322 = v235[1];
  long long v323 = v237;
  long long v321 = v236;
  int v238 = (long long *)&v25[6 * v234[v231]];
  long long v239 = *v238;
  long long v240 = v238[2];
  long long v319 = v238[1];
  long long v320 = v240;
  char v241 = v25 + 1;
  unsigned int v242 = (char *)v25 + 12;
  long long v318 = v239;
  int v243 = v307;
  while (2)
  {
    if (v233 >= v231) {
      uint64_t v244 = v27;
    }
    else {
      uint64_t v244 = v301;
    }
    if (v233 >= v231) {
      int v245 = &v318;
    }
    else {
      int v245 = &v321;
    }
    int v246 = *(_DWORD *)(v73[v230] + 4 * v233);
    int v247 = *(unsigned __int8 *)(a1 + 39);
    uint64_t v248 = *(void *)(v244 + 24);
    int v249 = __rev16(*(unsigned __int16 *)(v248 + 2));
    if (v249 < (*(_DWORD *)(a1 + 32) - 4) / v247)
    {
      uint64_t v250 = (v249 * v247) + v248;
      *(void *)(v250 + 4) = bswap64(v25[6 * v246]);
      uint64_t v251 = v250 + 4;
      if (*(unsigned char *)(a1 + 37))
      {
        unint64_t v252 = 0;
        uint64_t v253 = (_DWORD *)(v251 + 8);
        do
          *v253++ = bswap32(*((_DWORD *)&v241[6 * v246] + v252++));
        while (v252 < *(unsigned __int8 *)(a1 + 37));
      }
      *(_WORD *)(*(void *)(v244 + 24) + 2) = bswap32(v249 + 1) >> 16;
      *(_DWORD *)(v244 + 20) = 1;
    }
    unint64_t v254 = *(unsigned __int8 *)(a1 + 37);
    if (v254 <= 2) {
      unint64_t v255 = 2;
    }
    else {
      unint64_t v255 = *(unsigned __int8 *)(a1 + 37);
    }
    unint64_t v256 = ((v255 - 1) >> 1) + 1;
    if (*(unsigned char *)(a1 + 38))
    {
      if (v255 >= 7)
      {
        unint64_t v257 = 2 * (v256 & 0x7FFFFFFFFFFFFFFCLL);
        char v259 = (int32x4_t *)((char *)v245 + 8);
        unsigned int v260 = (int32x4_t *)&v241[6 * v246];
        uint64_t v261 = v256 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          int32x4_t v262 = v259[1];
          int32x4_t v263 = *v260;
          int32x4_t v264 = v260[1];
          v260 += 2;
          v334.val[0] = (float32x4_t)vuzp1q_s32(vminq_s32(*v259, v263), vminq_s32(v262, v264));
          v334.val[1] = (float32x4_t)vuzp2q_s32(vmaxq_s32(*v259, v263), vmaxq_s32(v262, v264));
          vst2q_f32((float *)v259->i32, v334);
          v259 += 2;
          v261 -= 4;
        }
        while (v261);
        if (v256 != (v256 & 0x7FFFFFFFFFFFFFFCLL)) {
          goto LABEL_298;
        }
      }
      else
      {
        unint64_t v257 = 0;
LABEL_298:
        uint64_t v265 = &v242[48 * v246 + 4 * v257];
        uint64_t v266 = (int *)v245 + v257 + 3;
        do
        {
          int v267 = *(v266 - 1);
          if (v267 >= *((_DWORD *)v265 - 1)) {
            int v267 = *((_DWORD *)v265 - 1);
          }
          *(v266 - 1) = v267;
          int v268 = *v266;
          int v270 = *(_DWORD *)v265;
          v265 += 8;
          int v269 = v270;
          if (*v266 <= v270) {
            int v268 = v269;
          }
          *uint64_t v266 = v268;
          v266 += 2;
          v257 += 2;
        }
        while (v257 < v254);
      }
    }
    else
    {
      if (v255 >= 7)
      {
        unint64_t v258 = 2 * (v256 & 0x7FFFFFFFFFFFFFFCLL);
        char v271 = (float *)v245 + 2;
        unsigned int v272 = (const float *)&v241[6 * v246];
        uint64_t v273 = v256 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float32x4x2_t v332 = vld2q_f32(v271);
          float32x4x2_t v333 = vld2q_f32(v272);
          v272 += 8;
          v335.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v333.val[0], v332.val[0]), (int8x16_t)v332.val[0], (int8x16_t)v333.val[0]);
          v335.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v332.val[1], v333.val[1]), (int8x16_t)v332.val[1], (int8x16_t)v333.val[1]);
          vst2q_f32(v271, v335);
          v271 += 8;
          v273 -= 4;
        }
        while (v273);
        if (v256 == (v256 & 0x7FFFFFFFFFFFFFFCLL)) {
          goto LABEL_275;
        }
      }
      else
      {
        unint64_t v258 = 0;
      }
      unsigned int v274 = (float *)&v242[48 * v246 + 4 * v258];
      int v275 = (float *)v245 + v258 + 3;
      do
      {
        float v276 = *(v275 - 1);
        if (v276 >= *(v274 - 1)) {
          float v276 = *(v274 - 1);
        }
        *(v275 - 1) = v276;
        float v277 = *v275;
        float v278 = *v274;
        v274 += 2;
        float v279 = v278;
        if (*v275 <= v278) {
          float v277 = v279;
        }
        *int v275 = v277;
        v275 += 2;
        v258 += 2;
      }
      while (v258 < v254);
    }
LABEL_275:
    if (++v233 != v31) {
      continue;
    }
    break;
  }
  uint64_t v280 = (uint64_t (**)(void *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_320;
  }
  if ((void)xmmword_1EB2201B0)
  {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
    long long v73 = v306;
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v73);
  --qword_1EB220150;
  off_1EB21C9E8(v73);
  long long v73 = (void *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v280 = (uint64_t (**)(void *))&xmmword_1EB21CA50;
LABEL_320:
    (*v280)(v73);
  }
  uint64_t v27 = v300;
  uint64_t v281 = sub_1B0DCBCA4(a1, v300);
  if (!v281)
  {
    unsigned int v282 = (uint64_t **)v301;
    uint64_t v283 = *(void *)(v301 + 8);
    if (!v283)
    {
      uint64_t v26 = v301;
      uint64_t v287 = sub_1B0DCBCA4(a1, v301);
      if (v287)
      {
        uint64_t v20 = v287;
        char v28 = 0;
        goto LABEL_28;
      }
      uint64_t v283 = *(void *)(v301 + 8);
      unsigned int v282 = (uint64_t **)v301;
    }
    *(void *)&long long v318 = *(void *)(v300 + 8);
    *(void *)&long long v321 = v283;
    int v284 = *v282;
    if (*(void *)(a2 + 8) == 1)
    {
      uint64_t v285 = (v307 + 1);
      uint64_t v286 = sub_1B0DCDD80(a1, *v282, &v321, v285);
      if (!v286)
      {
LABEL_336:
        uint64_t v281 = sub_1B0DCDD80(a1, *(void *)v300, &v318, v285);
        unint64_t v25 = (void *)v309;
        if (v281) {
          goto LABEL_322;
        }
        uint64_t v288 = *(void *)(v300 + 24);
        if (__rev16(*(unsigned __int16 *)(v288 + 2)))
        {
          unsigned int v289 = 0;
          int v290 = 0;
          if (v307) {
            unsigned int v291 = sub_1B0DD04DC;
          }
          else {
            unsigned int v291 = sub_1B0DD03DC;
          }
          uint64_t v27 = v300;
          while (1)
          {
            int v292 = (unsigned __int8 *)(v289 * *(unsigned __int8 *)(a1 + 39) + v288);
            unint64_t v293 = (((unint64_t)v292[4] << 56) | ((unint64_t)v292[5] << 48) | ((unint64_t)v292[6] << 40) | ((unint64_t)v292[7] << 32) | ((unint64_t)v292[8] << 24) | ((unint64_t)v292[9] << 16) | ((unint64_t)v292[10] << 8))
                 + v292[11];
            if (v307 >= 1)
            {
              for (uint64_t k = *(uint64_t **)(a1
                                    + 8
                                    * ((((v292[8] << 24) | (v292[9] << 16) | (v292[10] << 8)) + v292[11])
                                     % 0x61)
                                    + 192); k; uint64_t k = (uint64_t *)k[4])
              {
                if (k[1] == v293) {
                  break;
                }
              }
              uint64_t v295 = (uint64_t *)v300;
              do
              {
                if (v295 == k)
                {
                  char v28 = 0;
                  uint64_t v20 = 267;
                  unint64_t v25 = (void *)v309;
                  uint64_t v27 = v300;
                  uint64_t v26 = v301;
                  goto LABEL_28;
                }
                uint64_t v295 = (uint64_t *)*v295;
              }
              while (v295);
              if (k)
              {
                sub_1B0DCBB38(a1, *k);
                ++*(_DWORD *)(v300 + 16);
                *uint64_t k = v300;
              }
            }
            uint64_t v286 = v291(a1, v293, *(void *)(v300 + 8));
            if (v286) {
              goto LABEL_330;
            }
            if (v293 == *(void *)v5) {
              int v290 = 1;
            }
            ++v289;
            uint64_t v288 = *(void *)(v300 + 24);
            if (v289 >= bswap32(*(unsigned __int16 *)(v288 + 2)) >> 16)
            {
              int v243 = v307;
              unint64_t v25 = (void *)v309;
              uint64_t v26 = v301;
              if (*(void *)(a2 + 8) == 1) {
                goto LABEL_360;
              }
              if (v290) {
                goto LABEL_367;
              }
              goto LABEL_365;
            }
          }
        }
        uint64_t v26 = v301;
        if (*(void *)(a2 + 8) == 1)
        {
LABEL_360:
          if (__rev16(*(unsigned __int16 *)(*(void *)(v26 + 24) + 2)))
          {
            int v296 = 0;
            do
            {
              unint64_t v297 = sub_1B0DC8220(a1, v26, v296);
              uint64_t v298 = sub_1B0DD05DC(a1, v297, v26, v243);
              if (v298) {
                goto LABEL_366;
              }
            }
            while (++v296 < bswap32(*(unsigned __int16 *)(*(void *)(v26 + 24) + 2)) >> 16);
          }
        }
        else
        {
LABEL_365:
          uint64_t v298 = sub_1B0DD05DC(a1, *(void *)v5, v26, v243);
          uint64_t v26 = v301;
          if (v298)
          {
LABEL_366:
            uint64_t v20 = v298;
            char v28 = 0;
            uint64_t v27 = v300;
            goto LABEL_28;
          }
        }
LABEL_367:
        uint64_t v299 = sub_1B0DCBB38(a1, v300);
        if (v299)
        {
          uint64_t v20 = v299;
          char v28 = 0;
          uint64_t v27 = 0;
          uint64_t v26 = v301;
        }
        else
        {
          uint64_t v20 = sub_1B0DCBB38(a1, v301);
          char v28 = 0;
          uint64_t v26 = 0;
          uint64_t v27 = 0;
        }
        goto LABEL_28;
      }
    }
    else
    {
      LODWORD(v327) = 0;
      uint64_t v286 = sub_1B0DCFF6C(a1, v282, &v327);
      if (!v286)
      {
        sub_1B0DD0004(a1, (uint64_t)v284, (unint64_t *)&v321, v327);
        uint64_t v286 = sub_1B0DD0058((unsigned __int8 *)a1, v284, (uint64_t)&v321);
        if (!v286)
        {
          uint64_t v285 = (v307 + 1);
          goto LABEL_336;
        }
      }
    }
LABEL_330:
    uint64_t v20 = v286;
    goto LABEL_331;
  }
LABEL_322:
  uint64_t v20 = v281;
LABEL_323:
  char v28 = 0;
  uint64_t v26 = v301;
LABEL_28:
  sub_1B0DCBB38(a1, v27);
  sub_1B0DCBB38(a1, v26);
  if ((v28 & 1) == 0)
  {
    unint64_t v29 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_34;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v25);
    --qword_1EB220150;
    off_1EB21C9E8(v25);
    unint64_t v25 = (void *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unint64_t v29 = &xmmword_1EB21CA50;
LABEL_34:
      (*v29)(v25);
    }
  }
  return v20;
}

uint64_t sub_1B0DCF754(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unint64_t v8 = (uint64_t *)a2;
  while (1)
  {
    uint64_t v9 = v8[1];
    if (v9 == 1 || *v8) {
      break;
    }
    int v10 = *(void **)(a1 + 160);
    if (!sub_1B0CC3F2C((uint64_t)v10, 0))
    {
      uint64_t v11 = v10[16];
      if ((*(_WORD *)(v11 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v11, v9);
      }
      else
      {
        *(void *)uint64_t v11 = v9;
        *(_WORD *)(v11 + 20) = 4;
      }
      uint64_t v12 = *(void *)(*v10 + 24);
      if (v12) {
        xmmword_1EB21CA50(v12);
      }
    }
    if (sqlite3_step(*(sqlite3_stmt **)(a1 + 160)) != 100) {
      goto LABEL_16;
    }
    sqlite3_int64 v13 = sqlite3_column_int64(*(sqlite3_stmt **)(a1 + 160), 0);
    if (a2)
    {
      uint64_t v14 = (void *)a2;
      while (v14[1] != v13)
      {
        uint64_t v14 = (void *)*v14;
        if (!v14) {
          goto LABEL_15;
        }
      }
LABEL_16:
      unsigned int v15 = 0;
      goto LABEL_17;
    }
LABEL_15:
    unsigned int v15 = sub_1B0DCC154(a1, v13, 0, v8);
LABEL_17:
    LODWORD(result) = sqlite3_reset(*(sqlite3_stmt **)(a1 + 160));
    if (result) {
      uint64_t result = result;
    }
    else {
      uint64_t result = v15;
    }
    if (result) {
      return result;
    }
    unint64_t v8 = (uint64_t *)*v8;
    if (!v8) {
      return 267;
    }
  }
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = (char *)(v17 + *(unsigned __int8 *)(a1 + 39) * (uint64_t)a3 + 4);
  memmove(v18, &v18[*(unsigned __int8 *)(a1 + 39)], *(unsigned __int8 *)(a1 + 39) * (uint64_t)(int)(~a3 + (bswap32(*(unsigned __int16 *)(v17 + 2)) >> 16)));
  *(_WORD *)(*(void *)(a2 + 24) + 2) = bswap32((*(unsigned __int8 *)(*(void *)(a2 + 24) + 3) | (*(unsigned __int8 *)(*(void *)(a2 + 24) + 2) << 8))- 1) >> 16;
  *(_DWORD *)(a2 + 20) = 1;
  if (!*(void *)a2) {
    return 0;
  }
  unint64_t v19 = 1431655766 * ((*(_DWORD *)(a1 + 32) - 4) / *(unsigned __int8 *)(a1 + 39));
  if ((int)(HIDWORD(v19) + (v19 >> 63)) <= (int)(bswap32(*(unsigned __int16 *)(*(void *)(a2 + 24) + 2)) >> 16))
  {
    return sub_1B0DCFBE4((unsigned __int8 *)a1, (uint64_t *)a2);
  }
  else
  {
    return sub_1B0DCF98C(a1, a2, a4);
  }
}

uint64_t sub_1B0DCF98C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    uint64_t v8 = __rev16(*(unsigned __int16 *)(v7 + 2));
    if (!v8)
    {
LABEL_6:
      sub_1B0DCBB38(a1, 0);
      return 267;
    }
    uint64_t v9 = 0;
    int v10 = (unsigned __int8 *)(v7 + 5);
    while ((((unint64_t)*(v10 - 1) << 56) | ((unint64_t)*v10 << 48) | ((unint64_t)v10[1] << 40) | ((unint64_t)v10[2] << 32) | ((unint64_t)v10[3] << 24) | ((unint64_t)v10[4] << 16) | ((unint64_t)v10[5] << 8))
          + v10[6] != *(void *)(a2 + 8))
    {
      v10 += *(unsigned __int8 *)(a1 + 39);
      if (v8 == ++v9) {
        goto LABEL_6;
      }
    }
  }
  else
  {
    uint64_t v9 = 0xFFFFFFFFLL;
  }
  *(void *)a2 = 0;
  unsigned int v12 = sub_1B0DCF754(a1, v6, v9, (a3 + 1));
  LODWORD(result) = sub_1B0DCBB38(a1, v6);
  if (v12) {
    uint64_t result = v12;
  }
  else {
    uint64_t result = result;
  }
  if (!result)
  {
    sqlite3_int64 v13 = *(void **)(a1 + 128);
    uint64_t v14 = *(void *)(a2 + 8);
    if (!sub_1B0CC3F2C((uint64_t)v13, 0))
    {
      uint64_t v15 = v13[16];
      if ((*(_WORD *)(v15 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v15, v14);
      }
      else
      {
        *(void *)uint64_t v15 = v14;
        *(_WORD *)(v15 + 20) = 4;
      }
      uint64_t v16 = *(void *)(*v13 + 24);
      if (v16) {
        xmmword_1EB21CA50(v16);
      }
    }
    sqlite3_step(*(sqlite3_stmt **)(a1 + 128));
    uint64_t result = sqlite3_reset(*(sqlite3_stmt **)(a1 + 128));
    if (!result)
    {
      uint64_t v17 = *(void **)(a1 + 176);
      uint64_t v18 = *(void *)(a2 + 8);
      if (!sub_1B0CC3F2C((uint64_t)v17, 0))
      {
        uint64_t v19 = v17[16];
        if ((*(_WORD *)(v19 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v19, v18);
        }
        else
        {
          *(void *)uint64_t v19 = v18;
          *(_WORD *)(v19 + 20) = 4;
        }
        uint64_t v20 = *(void *)(*v17 + 24);
        if (v20) {
          xmmword_1EB21CA50(v20);
        }
      }
      sqlite3_step(*(sqlite3_stmt **)(a1 + 176));
      uint64_t result = sqlite3_reset(*(sqlite3_stmt **)(a1 + 176));
      if (!result)
      {
        uint64_t v21 = *(void *)(a2 + 8);
        if (v21)
        {
          uint64_t v22 = (void *)(a1 + 8 * (v21 % 0x61) + 192);
          do
          {
            uint64_t v23 = v22;
            uint64_t v24 = *v22;
            uint64_t v22 = (void *)(*v22 + 32);
          }
          while (v24 != a2);
          *uint64_t v23 = *(void *)(a2 + 32);
        }
        uint64_t result = 0;
        *(void *)(a2 + 8) = a3;
        *(void *)(a2 + 32) = *(void *)(a1 + 96);
        ++*(_DWORD *)(a2 + 16);
        *(void *)(a1 + 96) = a2;
      }
    }
  }
  return result;
}

uint64_t sub_1B0DCFBE4(unsigned __int8 *a1, uint64_t *a2)
{
  if (!*a2) {
    return 0;
  }
  uint64_t v49 = *a2;
  unint64_t v4 = 0;
  uint64_t v5 = (unsigned __int8 *)a2[3];
  int v6 = v5[2];
  int v7 = v5[3];
  uint64_t v53 = 0;
  memset(v52, 0, sizeof(v52));
  uint64_t v48 = a1[39];
  unint64_t v51 = (((unint64_t)v5[4] << 56) | ((unint64_t)v5[5] << 48) | ((unint64_t)v5[6] << 40) | ((unint64_t)v5[7] << 32) | ((unint64_t)v5[8] << 24) | ((unint64_t)v5[9] << 16) | ((unint64_t)v5[10] << 8))
      + v5[11];
  uint64_t v8 = (unsigned int *)(v5 + 12);
  unint64_t v9 = a1[37];
  do
  {
    int v10 = (char *)&v51 + 4 * v4;
    *((_DWORD *)v10 + 2) = bswap32(*v8);
    *((_DWORD *)v10 + 3) = bswap32(v8[1]);
    v8 += 2;
    v4 += 2;
  }
  while (v4 < v9);
  unsigned int v11 = v7 | (v6 << 8);
  if (v11 >= 2)
  {
    if (v9 <= 2) {
      unint64_t v12 = 2;
    }
    else {
      unint64_t v12 = v9;
    }
    unint64_t v13 = ((v12 - 1) >> 1) + 1;
    uint64_t v14 = v13 & 0x7FFFFFFFFFFFFFFCLL;
    for (int i = 1; i != v11; ++i)
    {
      memset(v50, 0, sizeof(v50));
      sub_1B0DC818C((uint64_t)a1, (uint64_t)a2, i, v50);
      if (a1[38])
      {
        if (v12 < 7)
        {
          unint64_t v16 = 0;
LABEL_18:
          uint64_t v24 = (int *)v50 + v16 + 3;
          unint64_t v25 = (int *)v52 + v16 + 1;
          do
          {
            int v26 = *(v25 - 1);
            if (v26 >= *(v24 - 1)) {
              int v26 = *(v24 - 1);
            }
            *(v25 - 1) = v26;
            int v27 = *v25;
            int v29 = *v24;
            v24 += 2;
            int v28 = v29;
            if (*v25 <= v29) {
              int v27 = v28;
            }
            *unint64_t v25 = v27;
            v25 += 2;
            v16 += 2;
          }
          while (v16 < v9);
          continue;
        }
        uint64_t v18 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        uint64_t v19 = (int32x4_t *)((char *)v50 + 8);
        uint64_t v20 = (int32x4_t *)v52;
        do
        {
          int32x4_t v21 = v20[1];
          int32x4_t v22 = *v19;
          int32x4_t v23 = v19[1];
          v19 += 2;
          v56.val[0] = (float32x4_t)vuzp1q_s32(vminq_s32(*v20, v22), vminq_s32(v21, v23));
          v56.val[1] = (float32x4_t)vuzp2q_s32(vmaxq_s32(*v20, v22), vmaxq_s32(v21, v23));
          vst2q_f32((float *)v20->i32, v56);
          v20 += 2;
          v18 -= 4;
        }
        while (v18);
        unint64_t v16 = 2 * (v13 & 0x7FFFFFFFFFFFFFFCLL);
        if (v13 != v14) {
          goto LABEL_18;
        }
      }
      else
      {
        if (v12 < 7)
        {
          unint64_t v17 = 0;
LABEL_28:
          uint64_t v33 = (float *)v50 + v17 + 3;
          int32x4_t v34 = (float *)v52 + v17 + 1;
          do
          {
            if (*(v34 - 1) >= *(v33 - 1)) {
              int v35 = *((_DWORD *)v33 - 1);
            }
            else {
              int v35 = *((_DWORD *)v34 - 1);
            }
            float v36 = *v34;
            float v37 = *v33;
            v33 += 2;
            float v38 = v37;
            if (*v34 <= v37) {
              float v36 = v38;
            }
            *((_DWORD *)v34 - 1) = v35;
            float *v34 = v36;
            v17 += 2;
            v34 += 2;
          }
          while (v17 < v9);
          continue;
        }
        uint64_t v30 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        uint64_t v31 = (const float *)v50 + 2;
        uint64_t v32 = (float *)v52;
        do
        {
          float32x4x2_t v54 = vld2q_f32(v32);
          float32x4x2_t v55 = vld2q_f32(v31);
          v31 += 8;
          v57.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v55.val[0], v54.val[0]), (int8x16_t)v54.val[0], (int8x16_t)v55.val[0]);
          v57.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v54.val[1], v55.val[1]), (int8x16_t)v54.val[1], (int8x16_t)v55.val[1]);
          vst2q_f32(v32, v57);
          v32 += 8;
          v30 -= 4;
        }
        while (v30);
        unint64_t v17 = 2 * (v13 & 0x7FFFFFFFFFFFFFFCLL);
        if (v13 != v14) {
          goto LABEL_28;
        }
      }
    }
  }
  uint64_t v39 = *(void *)(v49 + 24);
  uint64_t v40 = __rev16(*(unsigned __int16 *)(v39 + 2));
  if (!v40) {
    return 267;
  }
  unint64_t v41 = a2[1];
  int v42 = (unsigned __int8 *)(v39 + 5);
  uint64_t v43 = 0x400000000;
  while ((((unint64_t)*(v42 - 1) << 56) | ((unint64_t)*v42 << 48) | ((unint64_t)v42[1] << 40) | ((unint64_t)v42[2] << 32) | ((unint64_t)v42[3] << 24) | ((unint64_t)v42[4] << 16) | ((unint64_t)v42[5] << 8))
        + v42[6] != v41)
  {
    v42 += v48;
    v43 += v48 << 32;
    if (!--v40) {
      return 267;
    }
  }
  long long v45 = (void *)(v39 + (v43 >> 32));
  *long long v45 = bswap64(v41);
  if (a1[37])
  {
    unint64_t v46 = 0;
    int v47 = v45 + 1;
    do
      *v47++ = bswap32(*((_DWORD *)v52 + v46++));
    while (v46 < a1[37]);
  }
  *(_DWORD *)(v49 + 20) = 1;
  return sub_1B0DCFBE4(a1);
}

uint64_t sub_1B0DCFF6C(uint64_t a1, void *a2, _DWORD *a3)
{
  if (*a2)
  {
    uint64_t v3 = *(void *)(*a2 + 24);
    uint64_t v4 = __rev16(*(unsigned __int16 *)(v3 + 2));
    if (!v4) {
      return 267;
    }
    uint64_t v5 = 0;
    int v6 = (unsigned __int8 *)(v3 + 5);
    while ((((unint64_t)*(v6 - 1) << 56) | ((unint64_t)*v6 << 48) | ((unint64_t)v6[1] << 40) | ((unint64_t)v6[2] << 32) | ((unint64_t)v6[3] << 24) | ((unint64_t)v6[4] << 16) | ((unint64_t)v6[5] << 8))
          + v6[6] != a2[1])
    {
      v6 += *(unsigned __int8 *)(a1 + 39);
      if (v4 == ++v5) {
        return 267;
      }
    }
  }
  else
  {
    LODWORD(v5) = -1;
  }
  uint64_t result = 0;
  *a3 = v5;
  return result;
}

uint64_t sub_1B0DD0004(uint64_t result, uint64_t a2, unint64_t *a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 24) + *(unsigned __int8 *)(result + 39) * (uint64_t)a4;
  *(void *)(v4 + 4) = bswap64(*a3);
  uint64_t v5 = v4 + 4;
  if (*(unsigned char *)(result + 37))
  {
    unint64_t v6 = 0;
    int v7 = (_DWORD *)(v5 + 8);
    do
    {
      *v7++ = bswap32(*((_DWORD *)a3 + v6 + 2));
      ++v6;
    }
    while (v6 < *(unsigned __int8 *)(result + 37));
  }
  *(_DWORD *)(a2 + 20) = 1;
  return result;
}

uint64_t sub_1B0DD0058(unsigned __int8 *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  if (!*a2) {
    return 0;
  }
  uint64_t v5 = (uint64_t)a2;
  int v7 = 0;
  uint64_t v8 = (int32x4_t *)(a3 + 8);
  uint64_t v9 = a3 + 12;
  long long v10 = 0uLL;
  do
  {
    v54[1] = v10;
    v54[2] = v10;
    v54[0] = v10;
    if (v7 == 100) {
      return 267;
    }
    unsigned int v11 = (void *)v5;
    uint64_t v5 = v3;
    if (*v11)
    {
      uint64_t v12 = *(void *)(*v11 + 24);
      uint64_t v13 = __rev16(*(unsigned __int16 *)(v12 + 2));
      if (!v13) {
        return 267;
      }
      uint64_t v14 = 0;
      uint64_t v15 = v11[1];
      unint64_t v16 = (unsigned __int8 *)(v12 + 5);
      while ((((unint64_t)*(v16 - 1) << 56) | ((unint64_t)*v16 << 48) | ((unint64_t)v16[1] << 40) | ((unint64_t)v16[2] << 32) | ((unint64_t)v16[3] << 24) | ((unint64_t)v16[4] << 16) | ((unint64_t)v16[5] << 8))
            + v16[6] != v15)
      {
        v16 += a1[39];
        if (v13 == ++v14) {
          return 267;
        }
      }
    }
    else
    {
      LODWORD(v14) = -1;
    }
    sub_1B0DC818C((uint64_t)a1, v5, v14, v54);
    unint64_t v17 = a1[37];
    long long v10 = 0uLL;
    if (!a1[37]) {
      goto LABEL_39;
    }
    uint64_t v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = (char *)v54 + v18;
      uint64_t v21 = a3 + v18;
      if (a1[38] != 1) {
        break;
      }
      if (*(_DWORD *)(v21 + 8) < *((_DWORD *)v20 + 2)
        || *(_DWORD *)(a3 + v18 + 12) > *(_DWORD *)((char *)v54 + v18 + 12))
      {
        goto LABEL_21;
      }
LABEL_13:
      v19 += 2;
      v18 += 8;
      if (v19 >= v17) {
        goto LABEL_39;
      }
    }
    if (*(float *)(v21 + 8) >= *((float *)v20 + 2) && *(float *)(a3 + v18 + 12) <= *(float *)((char *)v54 + v18 + 12)) {
      goto LABEL_13;
    }
    if (a1[38])
    {
LABEL_21:
      unint64_t v22 = 2;
      if (v17 > 2) {
        unint64_t v22 = a1[37];
      }
      if (v22 >= 7)
      {
        unint64_t v24 = ((v22 - 1) >> 1) + 1;
        unint64_t v23 = 2 * (v24 & 0x7FFFFFFFFFFFFFFCLL);
        uint64_t v25 = v24 & 0x7FFFFFFFFFFFFFFCLL;
        int v26 = v8;
        int v27 = (int32x4_t *)((char *)v54 + 8);
        do
        {
          int32x4_t v28 = v27[1];
          int32x4_t v29 = *v26;
          int32x4_t v30 = v26[1];
          v26 += 2;
          v57.val[0] = (float32x4_t)vuzp1q_s32(vminq_s32(*v27, v29), vminq_s32(v28, v30));
          v57.val[1] = (float32x4_t)vuzp2q_s32(vmaxq_s32(*v27, v29), vmaxq_s32(v28, v30));
          vst2q_f32((float *)v27->i32, v57);
          v27 += 2;
          v25 -= 4;
        }
        while (v25);
        if (v24 == (v24 & 0x7FFFFFFFFFFFFFFCLL)) {
          goto LABEL_35;
        }
      }
      else
      {
        unint64_t v23 = 0;
      }
      uint64_t v31 = (int *)(v9 + 4 * v23);
      uint64_t v32 = (int *)v54 + v23 + 3;
      do
      {
        if (*(v32 - 1) >= *(v31 - 1)) {
          int v33 = *(v31 - 1);
        }
        else {
          int v33 = *(v32 - 1);
        }
        int v34 = *v32;
        int v36 = *v31;
        v31 += 2;
        int v35 = v36;
        if (*v32 <= v36) {
          int v34 = v35;
        }
        *(v32 - 1) = v33;
        *uint64_t v32 = v34;
        v23 += 2;
        v32 += 2;
      }
      while (v23 < v17);
      goto LABEL_35;
    }
    unint64_t v41 = 2;
    if (v17 > 2) {
      unint64_t v41 = a1[37];
    }
    if (v41 >= 7)
    {
      unint64_t v43 = ((v41 - 1) >> 1) + 1;
      unint64_t v42 = 2 * (v43 & 0x7FFFFFFFFFFFFFFCLL);
      uint64_t v44 = v43 & 0x7FFFFFFFFFFFFFFCLL;
      long long v45 = (const float *)v8;
      unint64_t v46 = (float *)v54 + 2;
      do
      {
        float32x4x2_t v55 = vld2q_f32(v46);
        float32x4x2_t v56 = vld2q_f32(v45);
        v45 += 8;
        v58.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v56.val[0], v55.val[0]), (int8x16_t)v55.val[0], (int8x16_t)v56.val[0]);
        v58.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v55.val[1], v56.val[1]), (int8x16_t)v55.val[1], (int8x16_t)v56.val[1]);
        vst2q_f32(v46, v58);
        v46 += 8;
        v44 -= 4;
      }
      while (v44);
      if (v43 == (v43 & 0x7FFFFFFFFFFFFFFCLL)) {
        goto LABEL_35;
      }
    }
    else
    {
      unint64_t v42 = 0;
    }
    int v47 = (float *)(v9 + 4 * v42);
    uint64_t v48 = (float *)v54 + v42 + 3;
    do
    {
      if (*(v48 - 1) >= *(v47 - 1)) {
        int v49 = *((_DWORD *)v47 - 1);
      }
      else {
        int v49 = *((_DWORD *)v48 - 1);
      }
      float v50 = *v48;
      float v51 = *v47;
      v47 += 2;
      float v52 = v51;
      if (*v48 <= v51) {
        float v50 = v52;
      }
      *((_DWORD *)v48 - 1) = v49;
      *uint64_t v48 = v50;
      v42 += 2;
      v48 += 2;
    }
    while (v42 < v17);
LABEL_35:
    uint64_t v37 = *(void *)(v5 + 24) + a1[39] * (uint64_t)(int)v14;
    *(void *)(v37 + 4) = bswap64(*(unint64_t *)&v54[0]);
    uint64_t v38 = v37 + 4;
    if (a1[37])
    {
      unint64_t v39 = 0;
      uint64_t v40 = (_DWORD *)(v38 + 8);
      do
      {
        *v40++ = bswap32(*((_DWORD *)v54 + v39 + 2));
        ++v39;
      }
      while (v39 < a1[37]);
    }
    *(_DWORD *)(v5 + 20) = 1;
LABEL_39:
    ++v7;
    uint64_t v3 = *(void *)v5;
  }
  while (*(void *)v5);
  return 0;
}

uint64_t sub_1B0DD03DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void **)(a1 + 144);
  if (!sub_1B0CC3F2C((uint64_t)v6, 0))
  {
    uint64_t v7 = v6[16];
    if ((*(_WORD *)(v7 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v7, a2);
    }
    else
    {
      *(void *)uint64_t v7 = a2;
      *(_WORD *)(v7 + 20) = 4;
    }
    uint64_t v8 = *(void *)(*v6 + 24);
    if (v8) {
      xmmword_1EB21CA50(v8);
    }
  }
  uint64_t v9 = *(void **)(a1 + 144);
  if (!sub_1B0CC3F2C((uint64_t)v9, 1u))
  {
    uint64_t v10 = v9[16];
    if ((*(_WORD *)(v10 + 84) & 0x9000) != 0)
    {
      sub_1B0D18980(v10 + 64, a3);
    }
    else
    {
      *(void *)(v10 + 64) = a3;
      *(_WORD *)(v10 + 84) = 4;
    }
    uint64_t v11 = *(void *)(*v9 + 24);
    if (v11) {
      xmmword_1EB21CA50(v11);
    }
  }
  sqlite3_step(*(sqlite3_stmt **)(a1 + 144));
  uint64_t v12 = *(sqlite3_stmt **)(a1 + 144);

  return sqlite3_reset(v12);
}

uint64_t sub_1B0DD04DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void **)(a1 + 168);
  if (!sub_1B0CC3F2C((uint64_t)v6, 0))
  {
    uint64_t v7 = v6[16];
    if ((*(_WORD *)(v7 + 20) & 0x9000) != 0)
    {
      sub_1B0D18980(v7, a2);
    }
    else
    {
      *(void *)uint64_t v7 = a2;
      *(_WORD *)(v7 + 20) = 4;
    }
    uint64_t v8 = *(void *)(*v6 + 24);
    if (v8) {
      xmmword_1EB21CA50(v8);
    }
  }
  uint64_t v9 = *(void **)(a1 + 168);
  if (!sub_1B0CC3F2C((uint64_t)v9, 1u))
  {
    uint64_t v10 = v9[16];
    if ((*(_WORD *)(v10 + 84) & 0x9000) != 0)
    {
      sub_1B0D18980(v10 + 64, a3);
    }
    else
    {
      *(void *)(v10 + 64) = a3;
      *(_WORD *)(v10 + 84) = 4;
    }
    uint64_t v11 = *(void *)(*v9 + 24);
    if (v11) {
      xmmword_1EB21CA50(v11);
    }
  }
  sqlite3_step(*(sqlite3_stmt **)(a1 + 168));
  uint64_t v12 = *(sqlite3_stmt **)(a1 + 168);

  return sqlite3_reset(v12);
}

uint64_t sub_1B0DD05DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a4) {
    uint64_t v7 = sub_1B0DD04DC;
  }
  else {
    uint64_t v7 = sub_1B0DD03DC;
  }
  if (a4 >= 1)
  {
    for (int i = *(uint64_t **)(a1 + 8 * (a2 % 0x61) + 192); i; int i = (uint64_t *)i[4])
    {
      if (i[1] == a2) {
        break;
      }
    }
    if (a3)
    {
      uint64_t v9 = (uint64_t *)a3;
      do
      {
        if (v9 == i) {
          return 267;
        }
        uint64_t v9 = (uint64_t *)*v9;
      }
      while (v9);
      if (!i) {
        goto LABEL_18;
      }
      uint64_t v12 = v7;
      sub_1B0DCBB38(a1, *i);
      uint64_t v7 = v12;
      if (a3) {
        ++*(_DWORD *)(a3 + 16);
      }
      goto LABEL_17;
    }
    if (i)
    {
      uint64_t v13 = v7;
      sub_1B0DCBB38(a1, *i);
      uint64_t v7 = v13;
LABEL_17:
      *int i = a3;
    }
  }
LABEL_18:
  uint64_t v10 = *(void *)(a3 + 8);

  return v7(a1, a2, v10);
}

float *sub_1B0DD071C(float *result, char *a2, unsigned int a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((int)a3 >= 2)
  {
    uint64_t v10 = result;
    signed int v11 = a3 >> 1;
    uint64_t v12 = a3 - (a3 >> 1);
    size_t v13 = 4 * (a3 >> 1);
    uint64_t v14 = &a2[v13];
    ((void (*)(void))sub_1B0DD071C)();
    sub_1B0DD071C(v10, v14, v12, a4, a5, a6);
    memcpy(a6, a2, v13);
    int v15 = 0;
    signed int v16 = 0;
    int v17 = *((unsigned __int8 *)v10 + 38);
    uint64_t v18 = 8 * (int)a4;
    uint64_t v19 = 4 * ((2 * (int)a4) | 1);
    while (1)
    {
      int v20 = *((_DWORD *)a6 + v16);
      uint64_t v21 = a5 + 48 * v20 + 8;
      unint64_t v22 = (float *)(v21 + v18);
      uint64_t result = (float *)(v21 + v19);
      int v23 = *(_DWORD *)&v14[4 * v15];
      uint64_t v24 = a5 + 48 * v23 + 8;
      uint64_t v25 = (float *)(v24 + v18);
      int v26 = (float *)(v24 + v19);
      if (v17)
      {
        double v27 = (double)*(int *)v22;
        double v28 = (double)*(int *)result;
        double v29 = (double)*(int *)v25;
        double v30 = (double)*(int *)v26;
        if (v16 == v11) {
          goto LABEL_13;
        }
LABEL_7:
        if (v15 != v12 && v27 >= v29 && (v27 != v29 || v28 >= v30)) {
          goto LABEL_13;
        }
        *(_DWORD *)&a2[4 * v15 + 4 * v16++] = v20;
        if (v16 >= v11) {
          goto LABEL_16;
        }
      }
      else
      {
        double v27 = *v22;
        double v28 = *result;
        double v29 = *v25;
        double v30 = *v26;
        if (v16 != v11) {
          goto LABEL_7;
        }
LABEL_13:
        *(_DWORD *)&a2[4 * v15++ + 4 * v16] = v23;
        if (v16 >= v11)
        {
LABEL_16:
          if (v15 >= (int)v12) {
            return result;
          }
        }
      }
    }
  }
  return result;
}

char *sub_1B0DD08BC(char *result, unsigned int a2, uint64_t a3, void *a4)
{
  if ((int)a2 >= 2)
  {
    unint64_t v6 = result;
    signed int v7 = a2 >> 1;
    uint64_t v8 = a2 - (a2 >> 1);
    size_t v9 = 4 * (a2 >> 1);
    uint64_t v10 = &result[v9];
    ((void (*)(void))sub_1B0DD08BC)();
    sub_1B0DD08BC(v10, v8, a3, a4);
    uint64_t result = (char *)memcpy(a4, v6, v9);
    signed int v11 = 0;
    int v12 = 0;
    while (1)
    {
      if (v11 == v7)
      {
        *((_DWORD *)v6 + v7 + v12) = *(_DWORD *)&v10[4 * v12];
        ++v12;
        signed int v11 = v7;
LABEL_12:
        if (v12 >= (int)v8) {
          return result;
        }
      }
      else
      {
        int v13 = *((_DWORD *)a4 + v11);
        if (v12 == v8)
        {
          *((_DWORD *)v6 + v11 + (int)v8) = v13;
          ++v11;
          int v12 = v8;
          if (v11 >= v7) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v14 = *(int *)&v10[4 * v12];
          uint64_t v15 = v11 + v12;
          if (*(double *)(a3 + 8 * v13) >= *(double *)(a3 + 8 * v14))
          {
            *((_DWORD *)v6 + v15) = v14;
            ++v12;
            if (v11 >= v7) {
              goto LABEL_12;
            }
          }
          else
          {
            *((_DWORD *)v6 + v15) = v13;
            if (++v11 >= v7) {
              goto LABEL_12;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B0DD09E8(sqlite3 *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, char **a6)
{
  if (a3 < 4)
  {
    int v12 = 0;
  }
  else
  {
    uint64_t v10 = *(const char **)(a4 + 24);
    signed int v16 = v10;
    uint64_t v17 = 0;
    if (v10) {
      int v11 = strlen(v10) & 0x3FFFFFFF;
    }
    else {
      int v11 = 0;
    }
    LODWORD(v17) = v11;
    int v13 = sub_1B0D35B18((uint64_t)a1, (uint64_t)&v16);
    if (v13 < 0)
    {
      *a6 = sqlite3_mprintf("no such database: %s", *(const char **)(a4 + 24));
      return 1;
    }
    int v12 = v13;
  }
  sqlite3_vtab_config(a1, 3);
  uint64_t result = sqlite3_declare_vtab(a1, "CREATE TABLE x( name       TEXT, path       TEXT, pageno     INTEGER, pagetype   TEXT, ncell      INTEGER, payload    INTEGER, unused     INTEGER, mx_payload INTEGER, pgoffset   INTEGER, pgsize     INTEGER, schema     TEXT HIDDEN, aggregate  BOOLEAN HIDDEN)");
  if (result)
  {
    uint64_t v15 = 0;
  }
  else
  {
    if (sqlite3_initialize())
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = sub_1B0C7FC94(40);
      if (v15)
      {
        uint64_t result = 0;
        *(_OWORD *)uint64_t v15 = 0u;
        *(_OWORD *)(v15 + 16) = 0u;
        *(void *)(v15 + 24) = a1;
        *(void *)(v15 + 32) = 0;
        *(_DWORD *)(v15 + 32) = v12;
        goto LABEL_16;
      }
    }
    uint64_t result = 7;
  }
LABEL_16:
  *a5 = v15;
  return result;
}

uint64_t sub_1B0DD0AF4(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *a2;
  if ((int)v2 < 1) {
    goto LABEL_22;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (unsigned char *)(*((void *)a2 + 1) + 5);
  unsigned int v5 = -1;
  unsigned int v6 = -1;
  unsigned int v7 = -1;
  do
  {
    if (*(v4 - 1) == 2)
    {
      if (!*v4) {
        return 19;
      }
      int v8 = *(_DWORD *)(v4 - 5);
      if (v8) {
        unsigned int v9 = v6;
      }
      else {
        unsigned int v9 = v3;
      }
      if (v8 == 10) {
        unsigned int v10 = v3;
      }
      else {
        unsigned int v10 = v7;
      }
      if (v8 == 10) {
        unsigned int v9 = v6;
      }
      if (v8 == 11)
      {
        unsigned int v5 = v3;
      }
      else
      {
        unsigned int v7 = v10;
        unsigned int v6 = v9;
      }
    }
    ++v3;
    v4 += 12;
  }
  while (v2 != v3);
  if ((v7 & 0x80000000) == 0)
  {
    uint64_t v11 = *((void *)a2 + 4) + 8 * v7;
    int v12 = 1;
    *(_DWORD *)uint64_t v11 = 1;
    *(unsigned char *)(v11 + 4) = 1;
    a2[10] |= 1u;
    if ((v6 & 0x80000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  int v12 = 0;
  if ((v6 & 0x80000000) == 0)
  {
LABEL_19:
    *(_DWORD *)(*((void *)a2 + 4) + 8 * v6) = ++v12;
    a2[10] |= 2u;
  }
LABEL_20:
  if ((v5 & 0x80000000) == 0)
  {
    *(_DWORD *)(*((void *)a2 + 4) + 8 * v5) = v12 + 1;
    a2[10] |= 4u;
  }
LABEL_22:
  *((void *)a2 + 8) = 0x3FF0000000000000;
  unsigned int v13 = a2[4];
  if (v13 == 2)
  {
    uint64_t v16 = *((void *)a2 + 3);
    if (!*(_DWORD *)v16 && !*(unsigned char *)(v16 + 4) && *(_DWORD *)(v16 + 8) == 1 && !*(unsigned char *)(v16 + 12)) {
      goto LABEL_36;
    }
    return 0;
  }
  if (v13 != 1) {
    return 0;
  }
  uint64_t v14 = *((void *)a2 + 3);
  if (*(_DWORD *)v14) {
    return 0;
  }
  if (*(unsigned char *)(v14 + 4)) {
    return 0;
  }
LABEL_36:
  uint64_t result = 0;
  a2[15] = 1;
  a2[10] |= 8u;
  return result;
}

uint64_t sub_1B0DD0C70(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    uint64_t v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DD0D24(uint64_t a1, void *a2)
{
  if (sqlite3_initialize()) {
    return 7;
  }
  unsigned int v5 = (_DWORD *)sub_1B0C7FC94(2152);
  if (!v5) {
    return 7;
  }
  unsigned int v6 = v5;
  bzero(v5, 0x868uLL);
  uint64_t result = 0;
  *(void *)unsigned int v6 = a1;
  v6[5] = *(_DWORD *)(a1 + 32);
  *a2 = v6;
  return result;
}

uint64_t sub_1B0DD0D8C(uint64_t a1)
{
  uint64_t v1 = a1;
  sub_1B0DD21E4(a1);
  sqlite3_finalize(*(sqlite3_stmt **)(v1 + 8));
  uint64_t v2 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_6;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v2 = &xmmword_1EB21CA50;
LABEL_6:
    (*v2)(v1);
  }
  return 0;
}

uint64_t sub_1B0DD0E44(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = *(void *)a1;
  sub_1B0DD21E4(a1);
  sqlite3_finalize(*(sqlite3_stmt **)(a1 + 8));
  *(void *)(a1 + 8) = 0;
  if ((a2 & 1) == 0)
  {
    unsigned int v9 = 0;
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(v8 + 32);
    if ((a2 & 2) == 0) {
      goto LABEL_3;
    }
    goto LABEL_40;
  }
  uint64_t v14 = *a5;
  if (!*a5) {
    goto LABEL_44;
  }
  int v15 = *(unsigned __int16 *)(v14 + 20);
  if ((~v15 & 0x202) != 0 || *(unsigned char *)(v14 + 22) != 1)
  {
    if (v15) {
      goto LABEL_44;
    }
    uint64_t v16 = sub_1B0D18254((int *)v14, 1);
    if (!v16) {
      goto LABEL_44;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(v14 + 8);
    if (!v16) {
      goto LABEL_44;
    }
  }
  uint64_t v17 = *(void *)(v8 + 24);
  int v18 = *(_DWORD *)(v17 + 40);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = (v18 - 1);
  if ((int)v20 < 0 != v19) {
    goto LABEL_44;
  }
  uint64_t v21 = (unsigned char **)(*(void *)(v17 + 32) + 32 * v20);
  while (1)
  {
    unint64_t v22 = *v21;
    if (*v21)
    {
      for (int i = (unsigned __int8 *)v16; ; ++i)
      {
        uint64_t v24 = *v22;
        uint64_t v25 = *i;
        if (v24 == v25)
        {
          if (!*v22)
          {
            *(_DWORD *)(a1 + 20) = v20;
            if ((v20 & 0x80000000) == 0)
            {
              unsigned int v9 = 1;
              if ((a2 & 2) == 0) {
                goto LABEL_3;
              }
LABEL_40:
              unsigned int v32 = v9 + 1;
              uint64_t v33 = a5[v9];
              if (v33)
              {
                int v34 = *(unsigned __int16 *)(v33 + 20);
                if ((~v34 & 0x202) == 0 && *(unsigned char *)(v33 + 22) == 1)
                {
                  uint64_t v10 = *(void *)(v33 + 8);
LABEL_48:
                  unsigned int v9 = v32;
                  if ((a2 & 4) == 0) {
                    goto LABEL_49;
                  }
LABEL_4:
                  uint64_t v11 = a5[v9];
                  if (v11)
                  {
                    __int16 v12 = *(_WORD *)(v11 + 20);
                    if ((v12 & 8) != 0)
                    {
                      double v13 = *(double *)v11;
                    }
                    else if ((v12 & 0x24) != 0)
                    {
                      double v13 = (double)*(uint64_t *)v11;
                    }
                    else if ((v12 & 0x12) != 0)
                    {
                      double v13 = sub_1B0D18684(v11);
                    }
                    else
                    {
                      double v13 = 0.0;
                    }
                  }
                  else
                  {
                    sub_1B0CE1978(89752);
                    double v13 = 0.0;
                  }
                  BOOL v31 = v13 != 0.0;
                  goto LABEL_50;
                }
                if ((v34 & 1) == 0)
                {
                  uint64_t v10 = sub_1B0D18254((int *)v33, 1);
                  goto LABEL_48;
                }
              }
              uint64_t v10 = 0;
              goto LABEL_48;
            }
LABEL_44:
            uint64_t v35 = 0;
            *(_DWORD *)(a1 + 20) = 0;
            *(unsigned char *)(a1 + 16) = 1;
            return v35;
          }
        }
        else if (byte_1B0DE1758[v24] != byte_1B0DE1758[v25])
        {
          break;
        }
        ++v22;
      }
    }
    if (!v20) {
      break;
    }
LABEL_25:
    v21 -= 4;
    BOOL v26 = (int)v20 <= 0;
    LODWORD(v20) = v20 - 1;
    if (v26) {
      goto LABEL_44;
    }
  }
  double v27 = "main";
  for (uint64_t j = (unsigned __int8 *)v16; ; ++j)
  {
    uint64_t v29 = *(unsigned __int8 *)v27;
    uint64_t v30 = *j;
    if (v29 == v30) {
      break;
    }
    if (byte_1B0DE1758[v29] != byte_1B0DE1758[v30]) {
      goto LABEL_25;
    }
LABEL_30:
    ++v27;
  }
  if (*v27) {
    goto LABEL_30;
  }
  unsigned int v9 = 1;
  *(_DWORD *)(a1 + 20) = 0;
  if ((a2 & 2) != 0) {
    goto LABEL_40;
  }
LABEL_3:
  uint64_t v10 = 0;
  if ((a2 & 4) != 0) {
    goto LABEL_4;
  }
LABEL_49:
  BOOL v31 = 0;
LABEL_50:
  *(unsigned char *)(a1 + 17) = v31;
  uint64_t v36 = *(void *)(v8 + 24);
  if (sqlite3_initialize() || (uint64_t v38 = sub_1B0C7FC94(32)) == 0)
  {
    uint64_t v37 = (sqlite3_str *)&unk_1E9B51E88;
  }
  else
  {
    uint64_t v37 = (sqlite3_str *)v38;
    if (v36) {
      int v39 = *(_DWORD *)(v36 + 136);
    }
    else {
      int v39 = 2147483645;
    }
    *(void *)uint64_t v38 = 0;
    *(void *)(v38 + 8) = 0;
    *(_DWORD *)(v38 + 16) = 0;
    *(_DWORD *)(v38 + 20) = v39;
    *(_DWORD *)(v38 + 24) = 0;
    *(_WORD *)(v38 + 28) = 0;
  }
  sqlite3_str_appendf(v37, "SELECT * FROM (SELECT 'sqlite_schema' AS name,1 AS rootpage,'table' AS type UNION ALL SELECT name,rootpage,type FROM \"%w\".sqlite_schema WHERE rootpage!=0)", *(void *)(*(void *)(*(void *)(v8 + 24) + 32) + 32 * *(int *)(a1 + 20)));
  if (v10) {
    sqlite3_str_appendf(v37, "WHERE name=%Q", v10);
  }
  if ((a2 & 8) != 0) {
    sqlite3_str_appendf(v37, " ORDER BY name");
  }
  uint64_t v40 = (unsigned __int8 *)sqlite3_str_finish(v37);
  if (!v40) {
    return 7;
  }
  unint64_t v42 = v40;
  uint64_t v35 = sub_1B0C7EAC0(*(void *)(v8 + 24), v40, 0xFFFFFFFFLL, 128, 0, (void *)(a1 + 8), 0, v41);
  unint64_t v43 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_67;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v42);
  --qword_1EB220150;
  off_1EB21C9E8(v42);
  unint64_t v42 = (unsigned __int8 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unint64_t v43 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_67:
    (*v43)(v42);
  }
  if (v35) {
    return v35;
  }
  *(_DWORD *)(a1 + 2072) = -1;

  return sub_1B0DD124C(a1);
}

uint64_t sub_1B0DD124C(uint64_t a1)
{
  uint64_t v148 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(*(void *)(*(void *)(*(void *)a1 + 24) + 32) + 32 * *(int *)(a1 + 20) + 8);
  uint64_t v138 = **(void **)(v2 + 8);
  uint64_t v3 = *(void *)(a1 + 2088);
  if (v3)
  {
    uint64_t v4 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
      --qword_1EB220150;
      off_1EB21C9E8(v3);
      uint64_t v3 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_8;
      }
      uint64_t v4 = &xmmword_1EB21CA50;
    }
    (*v4)(v3);
  }
LABEL_8:
  double v145 = (void *)(a1 + 2120);
  *(void *)(a1 + 2088) = 0;
  while (1)
  {
LABEL_9:
    uint64_t v5 = *(unsigned int *)(a1 + 2072);
    if ((v5 & 0x80000000) != 0)
    {
      *(_DWORD *)(a1 + 2112) = 0;
      *(void *)(a1 + 2144) = 0;
      *(void *)(a1 + 2104) = 0;
      *double v145 = 0;
      *(void *)(a1 + 2128) = 0;
      if (sqlite3_step(*(sqlite3_stmt **)(a1 + 8)) == 100
        && (sqlite3_int64 v31 = sqlite3_column_int64(*(sqlite3_stmt **)(a1 + 8), 1), *(_DWORD *)(v138 + 32)))
      {
        int v32 = v31;
        uint64_t v33 = sub_1B0DD2558(v2, v31, a1 + 24);
        *(_DWORD *)(a1 + 24) = v32;
        *(_DWORD *)(a1 + 40) = 0;
        if (!*(unsigned char *)(a1 + 17))
        {
          int v34 = sqlite3_mprintf("/");
          *(void *)(a1 + 48) = v34;
          if (v34) {
            uint64_t v33 = v33;
          }
          else {
            uint64_t v33 = 7;
          }
        }
        *(_DWORD *)(a1 + 2072) = 0;
        *(_DWORD *)(a1 + 2104) = 1;
        if (!v33) {
          goto LABEL_63;
        }
      }
      else
      {
        *(unsigned char *)(a1 + 16) = 1;
        return sqlite3_reset(*(sqlite3_stmt **)(a1 + 8));
      }
      return v33;
    }
    if (!*(unsigned char *)(a1 + 17))
    {
      *(_DWORD *)(a1 + 2112) = 0;
      *(void *)(a1 + 2144) = 0;
      *(void *)(a1 + 2104) = 0;
      *double v145 = 0;
      *(void *)(a1 + 2128) = 0;
    }
    uint64_t v6 = a1 + (v5 << 6);
    uint64_t v7 = v6 + 24;
    int v9 = *(_DWORD *)(v6 + 60);
    uint64_t v8 = (int *)(v6 + 60);
    uint64_t v11 = v8 - 5;
    int v10 = *(v8 - 5);
    if (v10 >= v9) {
      break;
    }
    uint64_t v12 = a1 + (v5 << 6);
    double v13 = (uint64_t *)(v12 + 72);
    uint64_t v134 = (uint64_t *)(v12 + 72);
    BOOL v136 = (unsigned int *)(v12 + 80);
    uint64_t v139 = v7;
    do
    {
      uint64_t v141 = v10;
      uint64_t v143 = *v13;
      uint64_t v14 = *v13 + 32 * v10;
      int v17 = *(_DWORD *)(v14 + 28);
      uint64_t v16 = (int *)(v14 + 28);
      int v15 = v17;
      int v18 = *(v16 - 5);
      while (v15 < v18)
      {
        if (!*(unsigned char *)(v2 + 17))
        {
          int v20 = *(_DWORD *)(*(void *)(v2 + 8) + 56);
          goto LABEL_25;
        }
        ++*(_DWORD *)(v2 + 20);
        if (*(unsigned char *)(v2 + 18))
        {
          int v20 = *(_DWORD *)(*(void *)(v2 + 8) + 56);
        }
        else
        {
          sub_1B0D12478(v2);
          int v20 = *(_DWORD *)(*(void *)(v2 + 8) + 56);
          if (!*(unsigned char *)(v2 + 17)) {
            goto LABEL_25;
          }
        }
        int v21 = *(_DWORD *)(v2 + 20) - 1;
        *(_DWORD *)(v2 + 20) = v21;
        if (!v21) {
          sub_1B0D12558(v2);
        }
LABEL_25:
        ++*(_DWORD *)(a1 + 2104);
        uint64_t v22 = *(void *)(*(void *)(*(void *)(*(void *)a1 + 24) + 32)
                        + 32 * *(int *)(*(void *)a1 + 32)
                        + 8);
        int v23 = *(int **)(v22 + 8);
        uint64_t v24 = *(void *)(*(void *)v23 + 72);
        unsigned int v25 = *(_DWORD *)(a1 + 2076);
        unint64_t v146 = v25;
        if (*(void *)v24)
        {
          if (!(*(unsigned int (**)(uint64_t, uint64_t, unint64_t *))(*(void *)v24 + 80))(v24, 230440, &v146))
          {
            uint64_t v27 = v147;
            *(void *)(a1 + 2136) = v146;
            *(void *)(a1 + 2144) += v27;
            goto LABEL_30;
          }
          int v23 = *(int **)(v22 + 8);
          unsigned int v25 = *(_DWORD *)(a1 + 2076);
        }
        uint64_t v26 = *(void *)(a1 + 2144) + v23[13];
        *(void *)(a1 + 2144) = v26;
        *(void *)(a1 + 2136) = v26 * (v25 - 1);
LABEL_30:
        uint64_t v28 = *v16;
        int v18 = *(v16 - 5);
        uint64_t v29 = *(void *)(a1 + 2128);
        if ((int)v28 >= v18 - 1)
        {
          uint64_t v19 = *(v16 - 1);
          *(void *)(a1 + 2128) = v29 + v19;
          *(void *)(a1 + 2120) += v20 - (int)v19 - 4;
        }
        else
        {
          *(void *)(a1 + 2128) = v29 + v20 - 4;
        }
        int v15 = v28 + 1;
        int *v16 = v28 + 1;
        if (!*(unsigned char *)(a1 + 17))
        {
          *(void *)(a1 + 2080) = sqlite3_column_text(*(sqlite3_stmt **)(a1 + 8), 0);
          *(_DWORD *)(a1 + 2076) = *(_DWORD *)(*(void *)(v143 + 32 * v141 + 16) + 4 * v28);
          *(void *)(a1 + 2096) = "overflow";
          int v128 = sqlite3_mprintf("%s%.3x+%.6x", *(const char **)(a1 + (v5 << 6) + 48), *v11, v28);
          *(void *)(a1 + 2088) = v128;
          if (v128) {
            return 0;
          }
          else {
            return 7;
          }
        }
      }
      uint64_t v30 = *v136;
      if (v30)
      {
        uint64_t v7 = v139;
        goto LABEL_44;
      }
      int v10 = *v11 + 1;
      *uint64_t v11 = v10;
      uint64_t v7 = v139;
      double v13 = v134;
    }
    while (v10 < *v8);
LABEL_45:
    uint64_t v37 = a1 + (v5 << 6);
    uint64_t v40 = *(void *)(v37 + 32);
    uint64_t v38 = (void *)(v37 + 32);
    uint64_t v39 = v40;
    sub_1B0DD23DC(v7);
    uint64_t v41 = v38[2];
    if (v41)
    {
      unint64_t v42 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_51;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v41);
      --qword_1EB220150;
      off_1EB21C9E8(v41);
      uint64_t v41 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        unint64_t v42 = &xmmword_1EB21CA50;
LABEL_51:
        (*v42)(v41);
      }
    }
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    *uint64_t v38 = v39;
    int v43 = *(_DWORD *)(a1 + 2072);
    *(_DWORD *)(a1 + 2072) = v43 - 1;
    if (*(unsigned char *)(a1 + 17) && v43 < 1) {
      return 0;
    }
  }
  uint64_t v30 = *(unsigned int *)(a1 + (v5 << 6) + 80);
  if (!v30) {
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v35 = *v11;
  int v36 = *v8;
  if ((int)v35 > *v8) {
    goto LABEL_45;
  }
  int v44 = *(_DWORD *)(a1 + 2072);
  *(_DWORD *)(a1 + 2072) = v44 + 1;
  if (v44 >= 31)
  {
    sub_1B0DD21E4(a1);
    return sub_1B0D1045C(229270);
  }
  if (v35 != v36) {
    uint64_t v30 = *(unsigned int *)(*(void *)(a1 + (v5 << 6) + 72) + 32 * v35 + 4);
  }
  *(_DWORD *)(v7 + 64) = v30;
  uint64_t v33 = sub_1B0DD2558(v2, v30, v7 + 64);
  ++*(_DWORD *)(a1 + 2104);
  *(_DWORD *)(v7 + 80) = 0;
  if (!*(unsigned char *)(a1 + 17))
  {
    long long v45 = sqlite3_mprintf("%s%.3x/", *(const char **)(a1 + (v5 << 6) + 48), *v11);
    *(void *)(v7 + 88) = v45;
    if (v45) {
      uint64_t v33 = v33;
    }
    else {
      uint64_t v33 = 7;
    }
  }
  ++*v11;
  if (v33) {
    return v33;
  }
LABEL_63:
  uint64_t v46 = *(int *)(a1 + 2072);
  uint64_t v47 = a1 + (v46 << 6);
  uint64_t v48 = sqlite3_column_text(*(sqlite3_stmt **)(a1 + 8), 0);
  int v49 = *(_DWORD *)(v47 + 24);
  uint64_t v142 = v47 + 24;
  *(void *)(a1 + 2080) = v48;
  *(_DWORD *)(a1 + 2076) = v49;
  uint64_t v50 = *(void *)(v47 + 32);
  uint64_t v51 = 100;
  if (v49 != 1) {
    uint64_t v51 = 0;
  }
  float v52 = (unsigned __int8 *)(v50 + v51);
  int v53 = *v52;
  *(unsigned char *)(v47 + 56) = v53;
  float32x4x2_t v54 = (unsigned char *)(v47 + 56);
  int v55 = v53 - 2;
  int v144 = 0;
  unsigned int v56 = 8;
  switch(v55)
  {
    case 0:
    case 3:
      int v144 = 1;
      unsigned int v56 = 12;
      goto LABEL_67;
    case 8:
    case 11:
LABEL_67:
      if (v49 == 1) {
        uint64_t v57 = v56 + 100;
      }
      else {
        uint64_t v57 = v56;
      }
      unsigned int v58 = __rev16(*(unsigned __int16 *)(v52 + 3));
      uint64_t v59 = a1 + (v46 << 6);
      *(_DWORD *)(v59 + 84) = 0;
      unsigned int v135 = (unsigned int *)(v59 + 84);
      uint64_t v137 = v57;
      *(_DWORD *)(v59 + 60) = v58;
      unint64_t v140 = (int *)(v59 + 60);
      uint64_t v60 = *(void *)(v2 + 8);
      int v61 = *(_DWORD *)(v60 + 52);
      int v62 = v52[7] - (v57 + 2 * v58) + (bswap32(*(unsigned __int16 *)(v52 + 5)) >> 16);
      unint64_t v63 = __rev16(*(unsigned __int16 *)(v52 + 1));
      break;
    default:
      goto LABEL_77;
  }
  while (v63)
  {
    if ((int)v63 < v61)
    {
      v62 += bswap32(*(unsigned __int16 *)(v50 + v63 + 2)) >> 16;
      unint64_t v64 = __rev16(*(unsigned __int16 *)(v50 + v63));
      BOOL v65 = v64 >= v63 + 4 || v64 == 0;
      unint64_t v63 = v64;
      if (v65) {
        continue;
      }
    }
    goto LABEL_77;
  }
  uint64_t v71 = a1 + (v46 << 6);
  *(_DWORD *)(v71 + 64) = v62;
  if (v144)
  {
    *(_DWORD *)(v71 + 80) = bswap32(*((_DWORD *)v52 + 2));
    if (!v58) {
      goto LABEL_78;
    }
  }
  else
  {
    *(_DWORD *)(v71 + 80) = 0;
    if (!v58) {
      goto LABEL_78;
    }
  }
  if (*(unsigned char *)(v2 + 17))
  {
    int v96 = *(_DWORD *)(v2 + 20) + 1;
    *(_DWORD *)(v2 + 20) = v96;
    if (*(unsigned char *)(v2 + 18))
    {
      int v130 = *(_DWORD *)(v60 + 56);
LABEL_116:
      int v97 = v96 - 1;
      *(_DWORD *)(v2 + 20) = v97;
      if (!v97) {
        sub_1B0D12558(v2);
      }
    }
    else
    {
      sub_1B0D12478(v2);
      int v130 = *(_DWORD *)(*(void *)(v2 + 8) + 56) - *(_DWORD *)(*(void *)(v2 + 8) + 52) + v61;
      if (*(unsigned char *)(v2 + 17))
      {
        int v96 = *(_DWORD *)(v2 + 20);
        goto LABEL_116;
      }
    }
  }
  else
  {
    int v130 = *(_DWORD *)(v60 + 56);
  }
  uint64_t v98 = *v140;
  if (sqlite3_initialize())
  {
    *(void *)(a1 + (v46 << 6) + 72) = 0;
    return 7;
  }
  uint64_t v99 = (void *)sub_1B0C7FC94(32 * v98 + 32);
  uint64_t v100 = a1 + (v46 << 6);
  *(void *)(v100 + 72) = v99;
  double v132 = (uint64_t *)(v100 + 72);
  if (!v99) {
    return 7;
  }
  bzero(v99, 32 * *v140 + 32);
  if (*v140 >= 1)
  {
    uint64_t v101 = 0;
    int v131 = v130 - 4;
    uint64_t v133 = v46;
    while (1)
    {
      uint64_t v102 = __rev16(*(unsigned __int16 *)(v50 + v137 + 2 * v101));
      if (v102 < v137 || (int)v102 >= v61) {
        break;
      }
      uint64_t v104 = *v132;
      if (v144)
      {
        *(_DWORD *)(v104 + 32 * v101 + 4) = bswap32(*(_DWORD *)(v50 + v102));
        LODWORD(v102) = v102 + 4;
      }
      int v105 = *v54;
      if (v105 != 5)
      {
        int v106 = (char *)(v50 + v102);
        unsigned int v107 = *v106;
        if ((v107 & 0x80) != 0)
        {
          int v109 = v106[1];
          if (v106[1] < 0)
          {
            int v110 = v106[2];
            if (v110 < 0)
            {
              unint64_t v146 = 0;
              int v108 = sub_1B0CAD43C(v106, &v146);
              if (HIDWORD(v146)) {
                unsigned int v107 = -1;
              }
              else {
                unsigned int v107 = v146;
              }
            }
            else
            {
              unsigned int v107 = v110 & 0x7F | (v107 << 14) & 0x1FC07F | ((v109 & 0x7F) << 7);
              int v108 = 3;
            }
          }
          else
          {
            unsigned int v107 = ((v107 & 0x7F) << 7) | v109;
            int v108 = 2;
          }
        }
        else
        {
          int v108 = 1;
        }
        unsigned int v111 = v102 + v108;
        if (v105 == 13) {
          v111 += sub_1B0CAD43C((char *)(v50 + v111), &v146);
        }
        if (v107 > *v135) {
          *unsigned int v135 = v107;
        }
        int v112 = 32 * (v130 - 12);
        if (v105 == 13) {
          int v112 = 32 * v130 - 384;
        }
        int v113 = ((v130 - 12) << 6) / 255 - 23;
        if (v105 == 13) {
          int v113 = v130 - 35;
        }
        unsigned int v114 = v112 / 255 - 23;
        int v115 = (int)(v107 - v114) % v131 + v114;
        if (v115 <= v113) {
          uint64_t v116 = v115;
        }
        else {
          uint64_t v116 = v114;
        }
        uint64_t v46 = v133;
        if ((v116 & 0x80000000) != 0) {
          break;
        }
        *(_DWORD *)(v104 + 32 * v101) = v116;
        int v117 = v107 - v116;
        if (v107 > v116)
        {
          uint64_t v46 = v133;
          if ((v107 & 0x80000000) != 0) {
            break;
          }
          uint64_t v118 = v116 + v111;
          if ((int)v118 + 4 > v130) {
            break;
          }
          uint64_t v119 = (v130 - 5 + v117) / v131;
          uint64_t v120 = v104 + 32 * v101;
          *(_DWORD *)(v120 + 24) = v117 - (v119 - 1) * v131;
          *(_DWORD *)(v120 + 8) = v119;
          if (sqlite3_initialize())
          {
            *(void *)(v120 + 16) = 0;
            return 7;
          }
          uint64_t v121 = (_DWORD *)sub_1B0C7FC94(4 * (int)v119);
          *(void *)(v120 + 16) = v121;
          unsigned int v122 = (void *)(v120 + 16);
          if (!v121) {
            return 7;
          }
          *uint64_t v121 = bswap32(*(_DWORD *)(v50 + v118));
          if ((int)v119 >= 2)
          {
            uint64_t v123 = 0;
            uint64_t v124 = v119 - 1;
            do
            {
              unint64_t v146 = 0;
              uint64_t v125 = (*(uint64_t (**)(void))(**(void **)(v2 + 8) + 288))();
              if (v125) {
                return v125;
              }
              uint64_t v126 = v146;
              *(_DWORD *)(*v122 + 4 * v123 + 4) = bswap32(**(_DWORD **)(v146 + 8));
              if ((*(unsigned char *)(v126 + 52) & 0x20) != 0)
              {
                uint64_t v127 = *(void *)(v126 + 40);
                --*(_DWORD *)(v127 + 152);
                *(void *)(v126 + 32) = *(void *)(v127 + 168);
                *(void *)(v127 + 168) = v126;
                (*(void (**)(void, void))(**(void **)(v127 + 72) + 144))(*(void *)(v127 + 72), *(void *)(v127 + 200) * (*(_DWORD *)(v126 + 48) - 1));
              }
              else
              {
                sub_1B0D0E3E8(v126);
              }
            }
            while (v124 != ++v123);
          }
        }
      }
      ++v101;
      uint64_t v46 = v133;
      if (v101 >= *v140) {
        goto LABEL_78;
      }
    }
LABEL_77:
    *float32x4x2_t v54 = 0;
    sub_1B0DD23DC(v142);
  }
LABEL_78:
  uint64_t v66 = *(void *)(*(void *)(*(void *)(*(void *)a1 + 24) + 32) + 32 * *(int *)(*(void *)a1 + 32) + 8);
  BOOL v67 = *(int **)(v66 + 8);
  uint64_t v68 = *(void *)(*(void *)v67 + 72);
  unsigned int v69 = *(_DWORD *)(a1 + 2076);
  unint64_t v146 = v69;
  if (*(void *)v68)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t *))(*(void *)v68 + 80))(v68, 230440, &v146))
    {
      BOOL v67 = *(int **)(v66 + 8);
      unsigned int v69 = *(_DWORD *)(a1 + 2076);
      goto LABEL_81;
    }
    uint64_t v72 = v147;
    *(void *)(a1 + 2136) = v146;
    *(void *)(a1 + 2144) += v72;
  }
  else
  {
LABEL_81:
    uint64_t v70 = *(void *)(a1 + 2144) + v67[13];
    *(void *)(a1 + 2144) = v70;
    *(void *)(a1 + 2136) = v70 * (v69 - 1);
  }
  long long v73 = "internal";
  switch(*v54)
  {
    case 2:
    case 5:
      break;
    case 0xA:
    case 0xD:
      long long v73 = "leaf";
      break;
    default:
      long long v73 = "corrupted";
      break;
  }
  *(void *)(a1 + 2096) = v73;
  uint64_t v74 = a1 + (v46 << 6);
  int v77 = *(_DWORD *)(v74 + 60);
  long long v76 = (int *)(v74 + 60);
  int v75 = v77;
  *(_DWORD *)(a1 + 2108) += v77;
  *(void *)(a1 + 2120) += v76[1];
  int v78 = v76[6];
  if (v78 > *(_DWORD *)(a1 + 2112)) {
    *(_DWORD *)(a1 + 2112) = v78;
  }
  if (*(unsigned char *)(a1 + 17))
  {
    uint64_t v33 = 0;
    if (v75 >= 1) {
      goto LABEL_93;
    }
LABEL_99:
    signed __int32 v82 = 0;
  }
  else
  {
    uint64_t v83 = sqlite3_mprintf("%s", *(const char **)(a1 + (v46 << 6) + 48));
    *(void *)(a1 + 2088) = v83;
    if (v83) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = 7;
    }
    int v75 = *v76;
    if (*v76 < 1) {
      goto LABEL_99;
    }
LABEL_93:
    float32x4x2_t v79 = *(int32x2_t **)(a1 + (v46 << 6) + 72);
    uint64_t v80 = v75;
    if (v75 >= 5)
    {
      uint64_t v84 = v75 & 3;
      if ((v80 & 3) == 0) {
        uint64_t v84 = 4;
      }
      uint64_t v81 = v80 - v84;
      int32x2_t v85 = 0;
      float64x2_t v86 = v79 + 8;
      uint64_t v87 = v81;
      int32x2_t v88 = 0;
      do
      {
        int32x2_t v89 = vzip1_s32(v86[-8], v86[-4]);
        int32x2_t v90 = v86[4];
        int32x2_t v91 = *v86;
        v86 += 16;
        int32x2_t v85 = vadd_s32(v89, v85);
        int32x2_t v88 = vadd_s32(vzip1_s32(v91, v90), v88);
        v87 -= 4;
      }
      while (v87);
      int32x2_t v92 = vadd_s32(v88, v85);
      signed __int32 v82 = vpadd_s32(v92, v92).u32[0];
    }
    else
    {
      uint64_t v81 = 0;
      signed __int32 v82 = 0;
    }
    uint64_t v93 = &v79[4 * v81];
    uint64_t v94 = v80 - v81;
    do
    {
      int v95 = v93->i32[0];
      v93 += 4;
      v82 += v95;
      --v94;
    }
    while (v94);
  }
  *(void *)(a1 + 2128) += v82;
  if (*(unsigned char *)(a1 + 17)) {
    goto LABEL_9;
  }
  return v33;
}

uint64_t sub_1B0DD1FC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1B0DD1FC8(uint64_t a1, uint64_t *a2, int a3)
{
  switch(a3)
  {
    case 0:
      if (!a2) {
        goto LABEL_32;
      }
      uint64_t v5 = *(char **)(a1 + 2080);
      goto LABEL_9;
    case 1:
      if (*(unsigned char *)(a1 + 17)) {
        return 0;
      }
      if (!a2) {
        goto LABEL_32;
      }
      uint64_t v5 = *(char **)(a1 + 2088);
LABEL_9:
      uint64_t v7 = (uint64_t)a2;
      uint64_t v8 = -1;
      goto LABEL_44;
    case 2:
      if (*(unsigned char *)(a1 + 17))
      {
        if (a2)
        {
          uint64_t v6 = *(int *)(a1 + 2104);
          goto LABEL_36;
        }
      }
      else if (a2)
      {
        uint64_t v6 = *(unsigned int *)(a1 + 2076);
        goto LABEL_36;
      }
LABEL_38:
      sub_1B0CE1978(97441);
      return 0;
    case 3:
      if (*(unsigned char *)(a1 + 17)) {
        return 0;
      }
      if (a2)
      {
        uint64_t v5 = *(char **)(a1 + 2096);
        goto LABEL_43;
      }
LABEL_32:
      sub_1B0CE1978(97498);
      break;
    case 4:
      if (!a2) {
        goto LABEL_38;
      }
      uint64_t v6 = *(int *)(a1 + 2108);
      goto LABEL_36;
    case 5:
      if (!a2) {
        goto LABEL_38;
      }
      uint64_t v6 = *(void *)(a1 + 2128);
      goto LABEL_36;
    case 6:
      if (!a2) {
        goto LABEL_38;
      }
      uint64_t v6 = *(void *)(a1 + 2120);
      goto LABEL_36;
    case 7:
      if (!a2) {
        goto LABEL_38;
      }
      uint64_t v6 = *(int *)(a1 + 2112);
      goto LABEL_36;
    case 8:
      if (*(unsigned char *)(a1 + 17)) {
        return 0;
      }
      if (!a2) {
        goto LABEL_38;
      }
      uint64_t v6 = *(void *)(a1 + 2136);
      goto LABEL_36;
    case 9:
      if (!a2) {
        goto LABEL_38;
      }
      uint64_t v6 = *(void *)(a1 + 2144);
      goto LABEL_36;
    case 10:
      if (a2)
      {
        if (*a2)
        {
          uint64_t v9 = *(void *)(*a2 + 24) + 32;
        }
        else
        {
          sub_1B0CE1978(97953);
          uint64_t v9 = 32;
        }
        uint64_t v5 = *(char **)(*(void *)v9 + 32 * *(int *)(a1 + 20));
LABEL_43:
        uint64_t v7 = (uint64_t)a2;
        uint64_t v8 = 0;
LABEL_44:
        sub_1B0CEA530(v7, v5, -1, 1u, (uint64_t (*)(uint64_t))v8);
      }
      else
      {
        sub_1B0CE1978(97953);
        sub_1B0CE1978(97498);
      }
      break;
    default:
      if (a2)
      {
        uint64_t v6 = *(unsigned __int8 *)(a1 + 17);
LABEL_36:
        uint64_t v10 = *a2;
        if ((*(_WORD *)(*a2 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v10, v6);
        }
        else
        {
          *(void *)uint64_t v10 = v6;
          *(_WORD *)(v10 + 20) = 4;
        }
      }
      else
      {
        sub_1B0CE1978(97431);
      }
      return 0;
  }
  return 0;
}

uint64_t sub_1B0DD21D4(uint64_t a1, void *a2)
{
  *a2 = *(unsigned int *)(a1 + 2076);
  return 0;
}

uint64_t sub_1B0DD21E4(uint64_t a1)
{
  for (uint64_t i = 0; i != 2048; i += 64)
  {
    uint64_t v3 = a1 + i;
    uint64_t v4 = *(void *)(a1 + i + 32);
    sub_1B0DD23DC(a1 + i + 24);
    uint64_t v5 = *(void *)(a1 + i + 48);
    if (v5)
    {
      uint64_t v6 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
        --qword_1EB220150;
        off_1EB21C9E8(v5);
        uint64_t v5 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_11;
        }
        uint64_t v6 = &xmmword_1EB21CA50;
      }
      (*v6)(v5);
    }
LABEL_11:
    *(_OWORD *)(a1 + i + 56) = 0u;
    *(_OWORD *)(a1 + i + 72) = 0u;
    *(_OWORD *)(a1 + i + 24) = 0u;
    *(_OWORD *)(a1 + i + 40) = 0u;
    *(void *)(v3 + 32) = v4;
    if (v4)
    {
      uint64_t v7 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_2;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
      --qword_1EB220150;
      off_1EB21C9E8(v4);
      uint64_t v4 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v7 = &xmmword_1EB21CA50;
LABEL_2:
        (*v7)(v4);
      }
    }
    *(void *)(v3 + 32) = 0;
  }
  uint64_t result = sqlite3_reset(*(sqlite3_stmt **)(a1 + 8));
  *(_DWORD *)(a1 + 2072) = 0;
  uint64_t v9 = *(void *)(a1 + 2088);
  if (v9)
  {
    uint64_t v10 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_23;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v9);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v9);
    uint64_t v9 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v10 = &xmmword_1EB21CA50;
LABEL_23:
      uint64_t result = (*v10)(v9);
    }
  }
  *(void *)(a1 + 2088) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1B0DD23DC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 48);
  if (!v2) {
    goto LABEL_19;
  }
  if (*(int *)(result + 36) < 1) {
    goto LABEL_13;
  }
  uint64_t v3 = 0;
  uint64_t v4 = 16;
  do
  {
    uint64_t v5 = *(void *)(*(void *)(v1 + 48) + v4);
    if (v5)
    {
      uint64_t v6 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_4;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108 -= (int)off_1EB21C9F8(v5);
      --qword_1EB220150;
      uint64_t result = off_1EB21C9E8(v5);
      uint64_t v5 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v6 = &xmmword_1EB21CA50;
LABEL_4:
        uint64_t result = (*v6)(v5);
      }
    }
    ++v3;
    v4 += 32;
  }
  while (v3 < *(int *)(v1 + 36));
  uint64_t v2 = *(void *)(v1 + 48);
  if (v2)
  {
LABEL_13:
    uint64_t v7 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_18;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v7 = &xmmword_1EB21CA50;
LABEL_18:
      uint64_t result = (*v7)(v2);
    }
  }
LABEL_19:
  *(_DWORD *)(v1 + 36) = 0;
  *(void *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1B0DD2558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(int **)(a1 + 8);
  size_t v5 = v4[13];
  if (*(void *)(a3 + 8)) {
    goto LABEL_2;
  }
  int v8 = sqlite3_initialize();
  if ((int)v5 < -255 || v8 != 0)
  {
    *(void *)(a3 + 8) = 0;
    return 7;
  }
  uint64_t v10 = sub_1B0C7FC94((v5 + 256));
  *(void *)(a3 + 8) = v10;
  if (!v10) {
    return 7;
  }
  uint64_t v11 = (_OWORD *)(v10 + v5);
  v11[14] = 0u;
  v11[15] = 0u;
  v11[12] = 0u;
  v11[13] = 0u;
  v11[10] = 0u;
  v11[11] = 0u;
  v11[8] = 0u;
  v11[9] = 0u;
  v11[6] = 0u;
  v11[7] = 0u;
  v11[4] = 0u;
  v11[5] = 0u;
  v11[2] = 0u;
  v11[3] = 0u;
  *uint64_t v11 = 0u;
  v11[1] = 0u;
  uint64_t v4 = *(int **)(a1 + 8);
LABEL_2:
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v4 + 288))();
  if (!result)
  {
    memcpy(*(void **)(a3 + 8), MEMORY[8], v5);
    return 0;
  }
  return result;
}

uint64_t sub_1B0DD2694(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t result = sqlite3_declare_vtab(a1, "CREATE TABLE x(key,value,type,atom,id,parent,fullkey,path,json HIDDEN,root HIDDEN)");
  if (!result)
  {
    if (sqlite3_initialize())
    {
      *a5 = 0;
      return 7;
    }
    int v8 = (void *)sub_1B0C7FC94(24);
    *a5 = v8;
    if (!v8) {
      return 7;
    }
    *int v8 = 0;
    v8[1] = 0;
    void v8[2] = 0;
    sqlite3_vtab_config(a1, 2);
    return 0;
  }
  return result;
}

uint64_t sub_1B0DD2704(uint64_t a1, uint64_t a2)
{
  v18[1] = *MEMORY[0x1E4F143B8];
  v18[0] = -1;
  int v2 = *(_DWORD *)a2;
  if (*(int *)a2 < 1)
  {
    int v4 = 0;
    int v3 = 0;
  }
  else
  {
    int v3 = 0;
    int v4 = 0;
    int v5 = 0;
    uint64_t v6 = (unsigned char *)(*(void *)(a2 + 8) + 5);
    do
    {
      int v7 = *(_DWORD *)(v6 - 5);
      BOOL v8 = __OFSUB__(v7, 8);
      int v9 = v7 - 8;
      if (v9 < 0 == v8)
      {
        int v10 = 1 << v9;
        if (*v6)
        {
          if (*(v6 - 1) == 2)
          {
            *((_DWORD *)v18 + v9) = v5;
            v3 |= v10;
          }
        }
        else
        {
          v4 |= v10;
        }
      }
      ++v5;
      v6 += 12;
    }
    while (v2 != v5);
  }
  if (*(int *)(a2 + 16) >= 1
    && (uint64_t v11 = *(void *)(a2 + 24), (*(_DWORD *)v11 & 0x80000000) != 0)
    && !*(unsigned char *)(v11 + 4))
  {
    *(_DWORD *)(a2 + 60) = 1;
    if ((v4 & ~v3) != 0) {
      return 19;
    }
  }
  else if ((v4 & ~v3) != 0)
  {
    return 19;
  }
  uint64_t v13 = LODWORD(v18[0]);
  if ((v18[0] & 0x80000000) != 0)
  {
    int v16 = 0;
  }
  else
  {
    *(void *)(a2 + 64) = 0x3FF0000000000000;
    uint64_t v14 = *(void *)(a2 + 32);
    uint64_t v15 = v14 + 8 * v13;
    int v16 = 1;
    *(_DWORD *)uint64_t v15 = 1;
    *(unsigned char *)(v15 + 4) = 1;
    if ((v18[0] & 0x8000000000000000) == 0)
    {
      uint64_t v17 = v14 + 8 * HIDWORD(v18[0]);
      *(_DWORD *)uint64_t v17 = 2;
      *(unsigned char *)(v17 + 4) = 1;
      int v16 = 3;
    }
  }
  uint64_t result = 0;
  *(_DWORD *)(a2 + 40) = v16;
  return result;
}

uint64_t sub_1B0DD285C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

double sub_1B0DD2910(uint64_t a1, void *a2)
{
  if (!sqlite3_initialize())
  {
    int v4 = (_OWORD *)sub_1B0C7FC94(128);
    if (v4)
    {
      double result = 0.0;
      v4[6] = 0u;
      v4[7] = 0u;
      v4[4] = 0u;
      v4[5] = 0u;
      v4[2] = 0u;
      v4[3] = 0u;
      _OWORD *v4 = 0u;
      v4[1] = 0u;
      *a2 = v4;
    }
  }
  return result;
}

uint64_t sub_1B0DD296C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    int v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v3)(v2);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v3 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  sub_1B0D733E8(v1 + 48);
  *(_DWORD *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  int v4 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_13:
    (*v4)(v1);
    return 0;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v4 = &xmmword_1EB21CA50;
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_1B0DD2AA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8)
  {
    int v9 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v9)(v8);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v8);
    --qword_1EB220150;
    off_1EB21C9E8(v8);
    uint64_t v8 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v9 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  int v10 = (unsigned int *)(a1 + 48);
  sub_1B0D733E8(a1 + 48);
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v11 = (void *)(a1 + 16);
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *a5;
  if (!*a5) {
    return 0;
  }
  int v13 = *(unsigned __int16 *)(v12 + 20);
  if ((~v13 & 0x202) != 0 || *(unsigned char *)(v12 + 22) != 1)
  {
    if (v13) {
      return 0;
    }
    uint64_t v14 = (const void *)sub_1B0D18254((int *)v12, 1);
    if (!v14) {
      return 0;
    }
  }
  else
  {
    uint64_t v14 = *(const void **)(v12 + 8);
    if (!v14) {
      return 0;
    }
  }
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)int v10 = 0u;
  *(_DWORD *)(a1 + 104) = 1;
  uint64_t v15 = *a5;
  if (!*a5)
  {
    sub_1B0CE1978(91138);
    goto LABEL_27;
  }
  __int16 v16 = *(_WORD *)(v15 + 20);
  if ((v16 & 0x12) == 0
    || (*(_WORD *)(v15 + 20) & 0x1000) == 0
    || *(uint64_t (**)(uint64_t))(v15 + 48) != sub_1B0D167E8)
  {
    if ((v16 & 2) != 0 && *(unsigned char *)(v15 + 22) == 1)
    {
      int v17 = *(_DWORD *)(v15 + 16);
      goto LABEL_28;
    }
    if ((v16 & 0x10) != 0)
    {
      int v17 = *(_DWORD *)(v15 + 16);
      if ((*(_WORD *)(v15 + 20) & 0x400) != 0) {
        v17 += *(_DWORD *)v15;
      }
      goto LABEL_28;
    }
    if ((v16 & 1) == 0)
    {
      int v17 = sub_1B0D18228(v15, 1);
      goto LABEL_28;
    }
LABEL_27:
    int v17 = 0;
LABEL_28:
    if (sqlite3_initialize() || (uint64_t v19 = (void *)sub_1B0C7FC94(v17 + 10)) == 0)
    {
      *(void *)(a1 + 64) = 0;
      return 7;
    }
    *uint64_t v19 = 1;
    int v20 = v19 + 1;
    *(void *)(a1 + 64) = v20;
    memcpy(v20, v14, v17 + 1);
    uint64_t v14 = *(const void **)(a1 + 64);
    goto LABEL_35;
  }
  ++*((void *)v14 - 1);
  *(void *)(a1 + 64) = v14;
LABEL_35:
  *(unsigned char *)(a1 + 100) = 1;
  *(void *)(a1 + 32) = v14;
  int v21 = sub_1B0D71EAC((unsigned int *)(a1 + 48), 0);
  if (*(unsigned char *)(a1 + 99)) {
    goto LABEL_54;
  }
  int v22 = v21 - 1;
  if (v21 < 1) {
    goto LABEL_54;
  }
  uint64_t v23 = (uint64_t)v14 + v21 - 1;
  do
  {
    int v25 = *(unsigned __int8 *)++v23;
    int v24 = v25;
    ++v22;
  }
  while (byte_1B0DE5D4C[v25]);
  if (v24)
  {
    v22 += sub_1B0D73104(v23);
    if (*((unsigned char *)v14 + v22)) {
      goto LABEL_54;
    }
    *(unsigned char *)(a1 + 101) = 1;
  }
  if (v22 <= 0)
  {
LABEL_54:
    sub_1B0D733E8(a1 + 48);
    if (*(unsigned char *)(a1 + 99))
    {
      uint64_t v18 = 7;
      goto LABEL_66;
    }
    uint64_t v29 = *(void *)(*(void *)a1 + 16);
    if (v29)
    {
      uint64_t v30 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v29);
        --qword_1EB220150;
        off_1EB21C9E8(v29);
        uint64_t v29 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_63;
        }
        uint64_t v30 = &xmmword_1EB21CA50;
      }
      (*v30)(v29);
    }
LABEL_63:
    sqlite3_int64 v31 = sqlite3_mprintf("malformed JSON");
    *(void *)(*(void *)a1 + 16) = v31;
    if (v31) {
      uint64_t v18 = 1;
    }
    else {
      uint64_t v18 = 7;
    }
LABEL_66:
    uint64_t v32 = *(void *)(a1 + 40);
    if (v32)
    {
      uint64_t v33 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v32);
        --qword_1EB220150;
        off_1EB21C9E8(v32);
        uint64_t v32 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_73;
        }
        uint64_t v33 = &xmmword_1EB21CA50;
      }
      (*v33)(v32);
    }
LABEL_73:
    sub_1B0D733E8(a1 + 48);
    *(_DWORD *)(a1 + 8) = 0;
    *uint64_t v11 = 0;
    *(unsigned char *)(a1 + 24) = 0;
    goto LABEL_74;
  }
  if (*(unsigned char *)(a1 + 25))
  {
    uint64_t v26 = *v10;
    if (sqlite3_initialize())
    {
      *(void *)(a1 + 80) = 0;
      goto LABEL_46;
    }
    uint64_t v34 = sub_1B0C7FC94(4 * v26);
    *(void *)(a1 + 80) = v34;
    if (!v34)
    {
LABEL_46:
      *(unsigned char *)(a1 + 99) = 1;
      uint64_t v27 = *(void *)(a1 + 40);
      if (v27)
      {
        uint64_t v28 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v27);
          --qword_1EB220150;
          off_1EB21C9E8(v27);
          uint64_t v27 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_53;
          }
          uint64_t v28 = &xmmword_1EB21CA50;
        }
        (*v28)(v27);
      }
LABEL_53:
      sub_1B0D733E8(a1 + 48);
      *(_DWORD *)(a1 + 8) = 0;
      *uint64_t v11 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      uint64_t v18 = 7;
LABEL_74:
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = 0;
      return v18;
    }
    sub_1B0DD3744(a1 + 48, 0, 0);
  }
  if (a2 != 3)
  {
    uint64_t v38 = *(unsigned __int8 **)(a1 + 56);
    uint64_t v39 = v38;
    goto LABEL_83;
  }
  uint64_t v51 = 0;
  uint64_t v35 = a5[1];
  if (!v35) {
    return 0;
  }
  int v36 = *(unsigned __int16 *)(v35 + 20);
  if ((~v36 & 0x202) != 0 || *(unsigned char *)(v35 + 22) != 1)
  {
    if (v36) {
      return 0;
    }
    uint64_t v37 = (char *)sub_1B0D18254((int *)v35, 1);
  }
  else
  {
    uint64_t v37 = *(char **)(v35 + 8);
  }
  if (!v37) {
    return 0;
  }
  uint64_t v45 = a5[1];
  if (!v45)
  {
    sub_1B0CE1978(91138);
LABEL_101:
    int v47 = 0;
    goto LABEL_102;
  }
  __int16 v46 = *(_WORD *)(v45 + 20);
  if ((v46 & 2) != 0 && *(unsigned char *)(v45 + 22) == 1)
  {
    int v47 = *(_DWORD *)(v45 + 16);
    goto LABEL_102;
  }
  if ((v46 & 0x10) == 0)
  {
    if ((v46 & 1) == 0)
    {
      int v47 = sub_1B0D18228(v45, 1);
      goto LABEL_102;
    }
    goto LABEL_101;
  }
  int v47 = *(_DWORD *)(v45 + 16);
  if ((*(_WORD *)(v45 + 20) & 0x400) != 0) {
    v47 += *(_DWORD *)v45;
  }
LABEL_102:
  if (sqlite3_initialize())
  {
    *(void *)(a1 + 40) = 0;
    return 7;
  }
  uint64_t v48 = v47 + 1;
  int v49 = (void *)sub_1B0C7FC94(v48);
  *(void *)(a1 + 40) = v49;
  if (!v49) {
    return 7;
  }
  memcpy(v49, v37, v48);
  if (*v37 != 36
    || (uint64_t v39 = (unsigned __int8 *)sub_1B0D73838(a1 + 48, 0, (char *)(*(void *)(a1 + 40) + 1), 0, &v51),
        (uint64_t v37 = v51) != 0))
  {
    sqlite3_free(*(void **)(*(void *)a1 + 16));
    *(void *)(*(void *)a1 + 16) = sqlite3_mprintf("JSON path error near '%q'", v37);
    sub_1B0DD367C(a1);
    if (*(void *)(*(void *)a1 + 16)) {
      return 1;
    }
    else {
      return 7;
    }
  }
  if (!v39) {
    return 0;
  }
  uint64_t v38 = *(unsigned __int8 **)(a1 + 56);
LABEL_83:
  unint64_t v40 = (unint64_t)(v39 - v38) >> 4;
  *(_DWORD *)(a1 + 12) = v40;
  *(_DWORD *)(a1 + 16) = v40;
  unsigned int v41 = *v39;
  *(unsigned char *)(a1 + 24) = v41;
  if (v41 < 7)
  {
    uint64_t v18 = 0;
    *(_DWORD *)(a1 + 20) = v40 + 1;
  }
  else
  {
    *((_DWORD *)v39 + 2) = 0;
    uint64_t v42 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 20) = v42 + 1 + *((_DWORD *)v39 + 1);
    if (*(unsigned char *)(a1 + 25))
    {
      uint64_t v43 = *(void *)(a1 + 56);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(v43 + 16 * *(unsigned int *)(*(void *)(a1 + 80) + 4 * v42));
      if (!v42) {
        return 0;
      }
      unsigned int v44 = v42 - 1;
      if ((*(unsigned char *)(v43 + 16 * v44 + 1) & 0x20) == 0) {
        return 0;
      }
      uint64_t v18 = 0;
      *(_DWORD *)uint64_t v11 = v44;
    }
    else
    {
      uint64_t v18 = 0;
      *(_DWORD *)uint64_t v11 = v42 + 1;
    }
  }
  return v18;
}

uint64_t sub_1B0DD31A0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 25))
  {
    int v8 = *(unsigned __int8 *)(a1 + 24);
    if (v8 == 8)
    {
      uint64_t v12 = *(void *)(a1 + 56);
      int v13 = *(_DWORD *)(a1 + 16);
      if (*(unsigned __int8 *)(v12 + 16 * (v13 + 1)) < 7u) {
        int v14 = 2;
      }
      else {
        int v14 = *(_DWORD *)(v12 + 16 * (v13 + 1) + 4) + 2;
      }
      int v15 = v14 + v13;
    }
    else
    {
      if (v8 != 7)
      {
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a1 + 20);
        return 0;
      }
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(unsigned int *)(a1 + 16);
      if (*(unsigned __int8 *)(v9 + 16 * v10) < 7u) {
        int v11 = 1;
      }
      else {
        int v11 = *(_DWORD *)(v9 + 16 * v10 + 4) + 1;
      }
      int v15 = v11 + v10;
    }
    *(_DWORD *)(a1 + 16) = v15;
    ++*(_DWORD *)(a1 + 8);
    return 0;
  }
  uint64_t v1 = *(void *)(a1 + 56);
  unsigned int v2 = *(_DWORD *)(a1 + 20);
  int v3 = *(_DWORD *)(a1 + 16) + ((*(unsigned __int8 *)(v1 + 16 * *(unsigned int *)(a1 + 16) + 1) >> 5) & 1);
  *(_DWORD *)(a1 + 16) = v3 + 1;
  ++*(_DWORD *)(a1 + 8);
  if (v3 + 1 >= v2) {
    return 0;
  }
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 80) + 4 * (v3 + 1));
  int v5 = *(unsigned __int8 *)(v1 + 16 * v4);
  *(unsigned char *)(a1 + 24) = v5;
  if (v5 != 7) {
    return 0;
  }
  uint64_t v6 = (_DWORD *)(v1 + 16 * v4 + 8);
  if (v4 == v3) {
    *uint64_t v6 = 0;
  }
  else {
    ++*v6;
  }
  return 0;
}

BOOL sub_1B0DD32CC(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) >= *(_DWORD *)(a1 + 20);
}

uint64_t sub_1B0DD32DC(uint64_t a1, sqlite3_context *a2, int a3)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = a1 + 48;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(unsigned int *)(a1 + 16);
  uint64_t v9 = v7 + 16 * v8;
  switch(a3)
  {
    case 0:
      if (!v8) {
        return 0;
      }
      int v10 = *(unsigned __int8 *)(a1 + 24);
      if (v10 == 7)
      {
        uint64_t v19 = (_DWORD *)(a1 + 8);
        if (*(unsigned char *)(a1 + 25))
        {
          if (!*v19) {
            return 0;
          }
          uint64_t v19 = (_DWORD *)(v7 + 16 * *(unsigned int *)(*(void *)(a1 + 80) + 4 * v8) + 8);
        }
        sqlite3_result_int64(a2, *v19);
      }
      else if (v10 == 8)
      {
        int v11 = (unsigned __int8 *)(v7 + 16 * v8);
        goto LABEL_10;
      }
      return 0;
    case 1:
      int v11 = (unsigned __int8 *)(v9 + 16 * (((unint64_t)*(unsigned __int8 *)(v7 + 16 * v8 + 1) >> 5) & 1));
      goto LABEL_10;
    case 2:
      if (!a2) {
        goto LABEL_32;
      }
      uint64_t v12 = off_1E5FF0320[*(unsigned __int8 *)(v9
                                             + 16
                                             * (((unint64_t)*(unsigned __int8 *)(v7 + 16 * v8 + 1) >> 5) & 1))];
      goto LABEL_31;
    case 3:
      int v11 = (unsigned __int8 *)(v9 + 16 * (((unint64_t)*(unsigned __int8 *)(v7 + 16 * v8 + 1) >> 5) & 1));
      if (*v11 <= 6u) {
LABEL_10:
      }
        sub_1B0D7580C(v6, (uint64_t)v11, a2);
      return 0;
    case 4:
      if (!a2) {
        goto LABEL_33;
      }
      uint64_t v13 = (((unint64_t)*(unsigned __int8 *)(v7 + 16 * v8 + 1) >> 5) & 1) + v8;
      goto LABEL_17;
    case 5:
      if (v8 <= *(_DWORD *)(a1 + 12) || !*(unsigned char *)(a1 + 25)) {
        return 0;
      }
      if (a2)
      {
        uint64_t v13 = *(unsigned int *)(*(void *)(a1 + 80) + 4 * v8);
LABEL_17:
        uint64_t v14 = *(void *)a2;
        if ((*(_WORD *)(*(void *)a2 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v14, v13);
        }
        else
        {
          *(void *)uint64_t v14 = v13;
          *(_WORD *)(v14 + 20) = 4;
        }
      }
      else
      {
LABEL_33:
        sub_1B0CE1978(97441);
      }
      return 0;
    case 6:
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      long long v25 = 0u;
      long long v26 = 0u;
      int v22 = a2;
      uint64_t v23 = (char *)&v25 + 2;
      long long v24 = xmmword_1B0DE1660;
      LOBYTE(v25) = 1;
      if (*(unsigned char *)(a1 + 25))
      {
        uint64_t v15 = a1;
LABEL_23:
        sub_1B0DD3860(v15, &v22, v8);
      }
      else
      {
        __int16 v16 = *(const void **)(a1 + 40);
        if (v16)
        {
          unsigned int v17 = strlen(*(const char **)(a1 + 40));
          if (v17)
          {
            uint64_t v18 = v17;
            if (v17 >= 0x64uLL)
            {
              sub_1B0D75028((uint64_t)&v22, v16, v17);
            }
            else
            {
              __memcpy_chk();
              *((void *)&v24 + 1) = v18;
            }
          }
        }
        else
        {
          *((void *)&v24 + 1) = 1;
          BYTE2(v25) = 36;
        }
        int v21 = *(unsigned __int8 *)(a1 + 24);
        if (v21 == 8)
        {
          sub_1B0DD39CC(&v22, v9);
        }
        else if (v21 == 7)
        {
          sub_1B0D75314(30, &v22, "[%d]", *(_DWORD *)(a1 + 8));
        }
      }
      sub_1B0D74B4C((uint64_t)&v22);
      return 0;
    case 7:
      if (!*(unsigned char *)(a1 + 25)) {
        goto LABEL_25;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      long long v25 = 0u;
      long long v26 = 0u;
      int v22 = a2;
      uint64_t v23 = (char *)&v25 + 2;
      long long v24 = xmmword_1B0DE1660;
      LOBYTE(v25) = 1;
      LODWORD(v8) = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v8);
      uint64_t v15 = a1;
      goto LABEL_23;
    case 8:
      if (!a2) {
        goto LABEL_32;
      }
      uint64_t v12 = *(char **)(a1 + 64);
      goto LABEL_31;
    default:
LABEL_25:
      if (a2)
      {
        if (*(void *)(a1 + 40)) {
          uint64_t v12 = *(char **)(a1 + 40);
        }
        else {
          uint64_t v12 = "$";
        }
LABEL_31:
        sub_1B0CEA530((uint64_t)a2, v12, -1, 1u, 0);
      }
      else
      {
LABEL_32:
        sub_1B0CE1978(97498);
      }
      return 0;
  }
}

uint64_t sub_1B0DD366C(uint64_t a1, void *a2)
{
  *a2 = *(unsigned int *)(a1 + 8);
  return 0;
}

uint64_t sub_1B0DD367C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    int v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v3)(v2);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v3 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t result = sub_1B0D733E8(a1 + 48);
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1B0DD3744(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(result + 8);
  uint64_t v6 = (unsigned __int8 *)(v5 + 16 * a2);
  *(_DWORD *)(*(void *)(result + 32) + 4 * a2) = a3;
  int v7 = *v6;
  if (v7 == 7)
  {
    uint64_t v14 = v5 + 16 * a2;
    int v16 = *(_DWORD *)(v14 + 4);
    uint64_t v15 = (_DWORD *)(v14 + 4);
    if (v16)
    {
      unsigned int v17 = 1;
      do
      {
        uint64_t result = sub_1B0DD3744(v4, v17 + a2, a2);
        unsigned int v19 = v17;
        if (v6[16 * v17] >= 7u) {
          int v18 = *(_DWORD *)&v6[16 * v17 + 4] + 1;
        }
        else {
          int v18 = 1;
        }
        v17 += v18;
      }
      while (v18 + v19 <= *v15);
    }
  }
  else if (v7 == 8)
  {
    uint64_t v8 = v5 + 16 * a2;
    int v10 = *(_DWORD *)(v8 + 4);
    uint64_t v9 = (unsigned int *)(v8 + 4);
    if (v10)
    {
      unsigned int v11 = 1;
      do
      {
        *(_DWORD *)(*(void *)(v4 + 32) + 4 * (v11 + a2)) = a2;
        uint64_t result = sub_1B0DD3744(v4, v11 + a2 + 1, a2);
        uint64_t v13 = &v6[16 * v11];
        if (v13[16] >= 7u) {
          int v12 = *((_DWORD *)v13 + 5) + 1;
        }
        else {
          int v12 = 1;
        }
        v11 += v12 + 1;
      }
      while (v11 <= *v9);
    }
  }
  return result;
}

uint64_t sub_1B0DD3860(uint64_t result, void *a2, unsigned int a3)
{
  if (a3)
  {
    uint64_t v5 = result;
    unsigned int v6 = *(_DWORD *)(*(void *)(result + 80) + 4 * a3);
    sub_1B0DD3860();
    uint64_t v7 = *(void *)(v5 + 56);
    if (*(unsigned char *)(v7 + 16 * v6) == 7)
    {
      return sub_1B0D75314(30, a2, "[%d]");
    }
    else
    {
      unint64_t v10 = v7 + 16 * a3 + 16 * (((unint64_t)*(unsigned __int8 *)(v7 + 16 * a3 + 1) >> 5) & 1);
      uint64_t v11 = *(void *)(v10 - 8);
      int v12 = *(_DWORD *)(v10 - 12);
      if ((*(unsigned char *)(v10 - 15) & 1) == 0 && v12 >= 3 && (byte_1B0DE196D[*(unsigned __int8 *)(v11 + 1)] & 2) != 0)
      {
        uint64_t v13 = (v12 - 1);
        uint64_t v14 = 2;
        if (v12 >= 4)
        {
          while ((byte_1B0DE196D[*(unsigned __int8 *)(v11 + v14)] & 6) != 0)
          {
            if (v13 == ++v14)
            {
              LODWORD(v14) = v12 - 1;
              break;
            }
          }
        }
        if (v14 == v13) {
          v12 -= 2;
        }
      }
      return sub_1B0D75314(v12 + 2, a2, ".%.*s");
    }
  }
  else
  {
    unint64_t v8 = a2[3];
    if (v8 >= a2[2])
    {
      return sub_1B0D752D0((uint64_t)a2, 36);
    }
    else
    {
      uint64_t v9 = a2[1];
      a2[3] = v8 + 1;
      *(unsigned char *)(v9 + v8) = 36;
    }
  }
  return result;
}

uint64_t sub_1B0DD39CC(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  int v3 = *(_DWORD *)(a2 + 4);
  if ((*(unsigned char *)(a2 + 1) & 1) == 0 && v3 >= 3 && (byte_1B0DE196D[*(unsigned __int8 *)(v2 + 1)] & 2) != 0)
  {
    uint64_t v4 = (v3 - 1);
    uint64_t v5 = 2;
    if (v3 >= 4)
    {
      while ((byte_1B0DE196D[*(unsigned __int8 *)(v2 + v5)] & 6) != 0)
      {
        if (v4 == ++v5)
        {
          LODWORD(v5) = v3 - 1;
          break;
        }
      }
    }
    if (v5 == v4)
    {
      v3 -= 2;
      ++v2;
    }
  }
  return sub_1B0D75314(v3 + 2, a1, ".%.*s", v3, (const char *)v2);
}

double sub_1B0DD3A74(uint64_t a1, uint64_t *a2)
{
  if (!sqlite3_initialize())
  {
    uint64_t v4 = sub_1B0C7FC94(128);
    if (v4)
    {
      double result = 0.0;
      *(_OWORD *)(v4 + 96) = 0u;
      *(_OWORD *)(v4 + 112) = 0u;
      *(_OWORD *)(v4 + 64) = 0u;
      *(_OWORD *)(v4 + 80) = 0u;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
      *(_OWORD *)uint64_t v4 = 0u;
      *(_OWORD *)(v4 + 16) = 0u;
      *a2 = v4;
      *(unsigned char *)(v4 + 25) = 1;
    }
  }
  return result;
}

double sub_1B0DD3AD8(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (!sqlite3_declare_vtab(a1, off_1E5FF0748[a2 != 0]))
  {
    if (sqlite3_initialize())
    {
      *a5 = 0;
    }
    else
    {
      uint64_t v9 = sub_1B0C7FC94(40);
      *a5 = v9;
      if (v9)
      {
        double result = 0.0;
        *(_OWORD *)uint64_t v9 = 0u;
        *(_OWORD *)(v9 + 16) = 0u;
        *(void *)(v9 + 24) = a1;
        *(void *)(v9 + 32) = 0;
        *(_DWORD *)(v9 + 32) = 2 * (a2 != 0);
      }
    }
  }
  return result;
}

uint64_t sub_1B0DD3B6C(uint64_t a1, unsigned int *a2)
{
  if (*(_DWORD *)(a1 + 32)) {
    int v2 = 4;
  }
  else {
    int v2 = 10;
  }
  *((void *)a2 + 8) = 0x4059000000000000;
  *((void *)a2 + 9) = 100;
  a2[10] = 0;
  uint64_t v3 = *a2;
  if ((int)v3 < 1) {
    return 19;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = 8 * v3;
  uint64_t result = 19;
  do
  {
    if (*(unsigned char *)(v5 + 5))
    {
      int v8 = *(unsigned __int8 *)(v5 + 4);
      if (v8 == 71)
      {
        if (*(_DWORD *)v5 == v2)
        {
          *(unsigned char *)(*((void *)a2 + 4) + v4 + 4) = 1;
          a2[10] = 1;
        }
      }
      else if (v8 == 2 && *(_DWORD *)v5 == (v2 | 1))
      {
        uint64_t result = 0;
        uint64_t v9 = *((void *)a2 + 4) + v4;
        *(unsigned char *)(v9 + 4) = 1;
        *(_DWORD *)uint64_t v9 = 1;
      }
    }
    v5 += 12;
    v4 += 8;
  }
  while (v6 != v4);
  return result;
}

uint64_t sub_1B0DD3C34(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

double sub_1B0DD3CE8(uint64_t a1, uint64_t *a2)
{
  if (!sqlite3_initialize())
  {
    uint64_t v5 = sub_1B0C7FC94(136);
    if (v5)
    {
      double result = 0.0;
      *(_OWORD *)(v5 + 80) = 0u;
      *(_OWORD *)(v5 + 96) = 0u;
      *(_WORD *)(v5 + 92) = 1;
      *(void *)(v5 + 128) = 0;
      *(_OWORD *)(v5 + 112) = 0u;
      *(_OWORD *)(v5 + 48) = 0u;
      *(_OWORD *)(v5 + 64) = 0u;
      *(_OWORD *)(v5 + 16) = 0u;
      *(_OWORD *)(v5 + 32) = 0u;
      *(_OWORD *)uint64_t v5 = 0u;
      *(void *)(v5 + 96) = *(void *)(a1 + 24);
      *(_DWORD *)(v5 + 104) = 0;
      *a2 = v5;
    }
  }
  return result;
}

uint64_t sub_1B0DD3D64(uint64_t a1)
{
  uint64_t v1 = a1;
  sub_1B0DD444C(a1);
  if (v1)
  {
    int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DD3E18(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int **a5)
{
  uint64_t v8 = *(void *)a1;
  sub_1B0DD444C(a1);
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 28) = a2 == 0;
  unint64_t v10 = *a5;
  if (!*a5)
  {
    sub_1B0CE1978(97220);
    unint64_t v10 = *a5;
    if (!*a5)
    {
      sub_1B0CE1978(97118);
      uint64_t v13 = 0;
      goto LABEL_23;
    }
LABEL_8:
    if ((v10[5] & 0xFBF) == 0xA01 && *((unsigned char *)v10 + 23) == 112 && !strcmp(*(const char **)v10, "stmt-pointer")) {
      uint64_t v13 = *((void *)v10 + 1);
    }
    else {
      uint64_t v13 = 0;
    }
LABEL_23:
    uint64_t v14 = 0;
    *(void *)(a1 + 8) = v13;
    if (!*(void *)(a1 + 8)) {
      goto LABEL_17;
    }
LABEL_24:
    sub_1B0DD3FC0((uint64_t *)a1);
    return v14;
  }
  int v11 = *((unsigned __int16 *)v10 + 10);
  if (((0x4000000040004uLL >> v11) & 1) == 0) {
    goto LABEL_8;
  }
  if ((~v11 & 0x202) == 0 && *((unsigned char *)v10 + 22) == 1)
  {
    int v12 = (unsigned __int8 *)*((void *)v10 + 1);
    if (!v12) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if ((v11 & 1) == 0)
  {
    int v12 = (unsigned __int8 *)sub_1B0D18254(*a5, 1);
    if (v12)
    {
LABEL_14:
      uint64_t v14 = sub_1B0C7EAC0(*(void *)(v8 + 24), v12, 0xFFFFFFFFLL, 128, 0, (void *)(a1 + 8), 0, v9);
      *(_DWORD *)(a1 + 24) = 1;
      if (!*(void *)(a1 + 8)) {
        goto LABEL_17;
      }
      goto LABEL_24;
    }
  }
LABEL_16:
  uint64_t v14 = 7;
  if (*(void *)(a1 + 8)) {
    goto LABEL_24;
  }
LABEL_17:
  if (*(_DWORD *)(v8 + 32)) {
    uint64_t v15 = "tables_used";
  }
  else {
    uint64_t v15 = "bytecode";
  }
  *(void *)(v8 + 16) = sqlite3_mprintf("argument to %s() is not a valid SQL statement", v15);
  return 1;
}

uint64_t sub_1B0DD3FC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[5];
  if (v3)
  {
    uint64_t v4 = &off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
      --qword_1EB220150;
      off_1EB21C9E8(v3);
      uint64_t v3 = xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0) {
        goto LABEL_8;
      }
      uint64_t v4 = &xmmword_1EB21CA50;
    }
    (*v4)(v3);
LABEL_8:
    a1[5] = 0;
  }
  if (a1[8])
  {
    a1[6] = 0;
    a1[7] = 0;
    a1[8] = 0;
  }
  if (*((_DWORD *)a1 + 7)) {
    uint64_t v5 = (uint64_t)(a1 + 9);
  }
  else {
    uint64_t v5 = 0;
  }
  if (sub_1B0D18CD8(a1[1], v5, *(unsigned int *)(v2 + 32), (int *)a1 + 4, (int *)a1 + 5, a1 + 4))
  {
    if ((*((_WORD *)a1 + 46) & 0x9000) != 0) {
      sub_1B0D18138((int *)a1 + 18);
    }
    else {
      *((_WORD *)a1 + 46) = 1;
    }
    a1[4] = 0;
  }
  return 0;
}

BOOL sub_1B0DD40EC(uint64_t a1)
{
  return *(void *)(a1 + 32) == 0;
}

uint64_t sub_1B0DD40FC(uint64_t *a1, sqlite3_context *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a3;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[4];
  uint64_t v13 = *((int *)a1 + 5);
  if (*(_DWORD *)(*a1 + 32))
  {
    if (a3 == 4)
    {
LABEL_3:
      if (*((_DWORD *)a1 + 4) != v13 + 1)
      {
        uint64_t v14 = *(void *)(v12 + 16);
        if (v14)
        {
          if (a2)
          {
            uint64_t v15 = (char *)(v14 + 3);
LABEL_46:
            sub_1B0CEA530((uint64_t)a2, v15, -1, 1u, 0);
          }
          else
          {
LABEL_47:
            sub_1B0CE1978(97498);
          }
        }
        else
        {
          sqlite3_result_text(a2, "(FK)", 4, 0);
        }
      }
      return 0;
    }
    if ((int)a3 <= 2 && !a1[6])
    {
      int v16 = *(_DWORD *)(v12 + 40 * (int)v13 + 8);
      unsigned int v17 = (uint64_t *)(*(void *)(*(void *)(v11 + 24) + 32) + 32 * *(int *)(v12 + 40 * (int)v13 + 12));
      uint64_t v18 = v17[3];
      a1[7] = *v17;
      unsigned int v19 = *(void **)(v18 + 16);
      if (v19)
      {
        while (1)
        {
          uint64_t v20 = v19[2];
          if (*(unsigned char *)(v20 + 63) != 1 && *(_DWORD *)(v20 + 40) == v16) {
            break;
          }
          unsigned int v19 = (void *)*v19;
          if (!v19) {
            goto LABEL_15;
          }
        }
        a1[8] = *(void *)v20;
        a1[6] = (uint64_t)"table";
      }
LABEL_15:
      if (!a1[8])
      {
        for (uint64_t i = *(void **)(v18 + 40); i; uint64_t i = (void *)*i)
        {
          uint64_t v25 = i[2];
          if (*(_DWORD *)(v25 + 88) == v16)
          {
            a1[8] = *(void *)v25;
            a1[6] = (uint64_t)"index";
          }
        }
      }
    }
    int v8 = a3 + 20;
  }
  int v21 = (unsigned __int8 *)(v12 + 40 * (int)v13);
  switch(v8)
  {
    case 0:
      if (!a2) {
        goto LABEL_52;
      }
      goto LABEL_50;
    case 1:
      if (!a2) {
        goto LABEL_47;
      }
      uint64_t v15 = off_1E5FEEFD0[*v21];
      goto LABEL_46;
    case 2:
      if (!a2) {
        goto LABEL_52;
      }
      uint64_t v13 = *(int *)(v12 + 40 * (int)v13 + 4);
      goto LABEL_50;
    case 3:
      if (!a2) {
        goto LABEL_52;
      }
      uint64_t v13 = *(int *)(v12 + 40 * (int)v13 + 8);
      goto LABEL_50;
    case 4:
      if (!a2) {
        goto LABEL_52;
      }
      uint64_t v13 = *(int *)(v12 + 40 * (int)v13 + 12);
      goto LABEL_50;
    case 5:
    case 7:
      uint64_t v15 = (char *)a1[5];
      if (!v15)
      {
        uint64_t v15 = (char *)sub_1B0D18FB4(*(void *)(v11 + 24), (uint64_t)v21, a3, a4, a5, a6, a7, a8);
        a1[5] = (uint64_t)v15;
      }
      if (v8 != 5) {
        return 0;
      }
      if (!a2) {
        goto LABEL_47;
      }
      goto LABEL_46;
    case 6:
      if (!a2) {
        goto LABEL_52;
      }
      uint64_t v13 = *(unsigned __int16 *)(v12 + 40 * (int)v13 + 2);
      goto LABEL_50;
    case 8:
      goto LABEL_3;
    case 9:
      if (!a2) {
        goto LABEL_52;
      }
      uint64_t v13 = *(int *)(v12 + 40 * (int)v13 + 24);
      goto LABEL_50;
    case 10:
      if (!a2) {
        goto LABEL_52;
      }
      uint64_t v13 = *(int *)(v12 + 40 * (int)v13 + 32);
      goto LABEL_50;
    case 20:
      if (!a2) {
        goto LABEL_47;
      }
      uint64_t v15 = (char *)a1[6];
      goto LABEL_46;
    case 21:
      if (!a2) {
        goto LABEL_47;
      }
      uint64_t v15 = (char *)a1[7];
      goto LABEL_46;
    case 22:
      if (!a2) {
        goto LABEL_47;
      }
      uint64_t v15 = (char *)a1[8];
      goto LABEL_46;
    case 23:
      if (a2)
      {
        uint64_t v13 = *v21 == 113;
LABEL_50:
        uint64_t v22 = *(void *)a2;
        if ((*(_WORD *)(*(void *)a2 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v22, v13);
        }
        else
        {
          *(void *)uint64_t v22 = v13;
          *(_WORD *)(v22 + 20) = 4;
        }
      }
      else
      {
LABEL_52:
        sub_1B0CE1978(97431);
      }
      break;
    default:
      return 0;
  }
  return 0;
}

uint64_t sub_1B0DD443C(uint64_t a1, void *a2)
{
  *a2 = *(int *)(a1 + 16);
  return 0;
}

void sub_1B0DD444C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v3)(v2);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v3 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  *(void *)(a1 + 40) = 0;
  __int16 v4 = *(_WORD *)(a1 + 92);
  if ((v4 & 0x9000) != 0 || *(_DWORD *)(a1 + 104))
  {
    sub_1B0D180E4(a1 + 72);
    __int16 v4 = *(_WORD *)(a1 + 92);
  }
  if ((v4 & 0x9000) == 0)
  {
    *(_WORD *)(a1 + 92) = 1;
    if (!*(_DWORD *)(a1 + 24)) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  sub_1B0D18138((int *)(a1 + 72));
  if (*(_DWORD *)(a1 + 24)) {
LABEL_13:
  }
    sqlite3_finalize(*(sqlite3_stmt **)(a1 + 8));
LABEL_14:
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = 0;
}

void sub_1B0DD4570()
{
  v0 = getenv("SQLITE_AUTO_PROFILE");
  if (v0)
  {
    uint64_t v1 = v0;
    BOOL v2 = 1;
    if (!strncasecmp("1", v0, 1uLL))
    {
      if (isatty(2)) {
        int v3 = 1;
      }
      else {
        int v3 = 2;
      }
    }
    else if (!strncasecmp("stderr", v1, 6uLL))
    {
      BOOL v2 = 1;
      int v3 = 1;
    }
    else
    {
      BOOL v2 = strncasecmp("syslog", v1, 6uLL) == 0;
      int v3 = 2 * v2;
    }
  }
  else
  {
    BOOL v2 = 0;
    int v3 = 0;
  }
  __int16 v4 = getenv("SQLITE_AUTO_TRACE");
  if (!v4)
  {
    BOOL v5 = 0;
LABEL_15:
    if (!v2 && !v5) {
      return;
    }
LABEL_20:
    if (!dyld_process_is_restricted()) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (!strncasecmp("1", v4, 1uLL))
  {
    if (isatty(2)) {
      LODWORD(v4) = 1;
    }
    else {
      LODWORD(v4) = 2;
    }
    goto LABEL_20;
  }
  if (strncasecmp("stderr", v4, 6uLL))
  {
    BOOL v5 = strncasecmp("syslog", v4, 6uLL) == 0;
    LODWORD(v4) = 2 * v5;
    goto LABEL_15;
  }
  LODWORD(v4) = 1;
  if (!dyld_process_is_restricted())
  {
LABEL_24:
    dword_1E9B52274 = v3;
    dword_1E9B52278 = (int)v4;
    return;
  }
LABEL_23:
  if (os_variant_allows_internal_security_policies()) {
    goto LABEL_24;
  }

  sqlite3_log(28, "Auto logging environment variable set, but process is restricted. Ignoring.");
}

void sub_1B0DD471C(uint64_t a1, char *a2, unint64_t a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (qword_1EB2202F8 != -1) {
    dispatch_once(&qword_1EB2202F8, &unk_1F09A5008);
  }
  BOOL v5 = qword_1EB2202C8;
  if (os_log_type_enabled((os_log_t)qword_1EB2202C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = &byte_1B0DE9952;
    if (a2) {
      uint64_t v6 = a2;
    }
    int v7 = 136315394;
    int v8 = v6;
    __int16 v9 = 2048;
    unint64_t v10 = a3 / 0xF4240;
    _os_log_impl(&dword_1B0C76000, v5, OS_LOG_TYPE_DEFAULT, "Query: %s\n Execution Time: %llu ms\n", (uint8_t *)&v7, 0x16u);
  }
}

void sub_1B0DD4824(uint64_t a1, char *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (qword_1EB2202F8 != -1) {
    dispatch_once(&qword_1EB2202F8, &unk_1F09A5008);
  }
  __int16 v4 = qword_1EB2202C8;
  if (os_log_type_enabled((os_log_t)qword_1EB2202C8, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = &byte_1B0DE9952;
    if (a2) {
      BOOL v5 = a2;
    }
    int v6 = 134218242;
    uint64_t v7 = a1;
    __int16 v8 = 2080;
    __int16 v9 = v5;
    _os_log_impl(&dword_1B0C76000, v4, OS_LOG_TYPE_DEFAULT, "TraceSQL(%p): %s\n", (uint8_t *)&v6, 0x16u);
  }
}

uint64_t sub_1B0DD4914(uint64_t a1)
{
  uint64_t v1 = a1;
  int v2 = *(_DWORD *)(a1 + 40);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      uint64_t v5 = *(void *)(v4 + 8 * i);
      if (v5)
      {
        if ((*(_WORD *)(v5 + 20) & 0x9000) != 0 || *(_DWORD *)(v5 + 32)) {
          sub_1B0D180E4(*(void *)(v4 + 8 * i));
        }
        sub_1B0D05C10(*(void **)(v5 + 24), (void *)v5);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
  }
  int v6 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_15;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v6 = &xmmword_1EB21CA50;
LABEL_15:
    __int16 v8 = *v6;
    return v8(v1);
  }
  return result;
}

uint64_t sub_1B0DD4A38(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (sqlite3_initialize())
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v10 = sub_1B0C7FC94(32);
    uint64_t v8 = v10;
    if (v10)
    {
      *(_OWORD *)uint64_t v10 = 0u;
      *(_OWORD *)(v10 + 16) = 0u;
      *(void *)(v10 + 24) = a2;
      uint64_t result = sqlite3_declare_vtab(a1, "CREATE TABLE x(value INTEGER PRIMARY KEY)");
      goto LABEL_6;
    }
  }
  uint64_t result = 7;
LABEL_6:
  *a5 = v8;
  return result;
}

uint64_t sub_1B0DD4AAC()
{
  return 0;
}

uint64_t sub_1B0DD4AB4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DD4B68(uint64_t a1, void *a2)
{
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v4 = sub_1B0C7FC94(16);
  if (!v4) {
    return 7;
  }
  uint64_t v5 = (void *)v4;
  uint64_t result = 0;
  *uint64_t v5 = 0;
  v5[1] = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1B0DD4BB4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DD4C68(uint64_t a1)
{
  *(_DWORD *)(a1 + 8) = 0;
  return 0;
}

uint64_t sub_1B0DD4C74(uint64_t a1)
{
  return 0;
}

BOOL sub_1B0DD4C88(_DWORD *a1)
{
  return a1[2] >= **(_DWORD **)(*(void *)a1 + 24);
}

uint64_t sub_1B0DD4CA4(unsigned int *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if ((v2 & 0x80000000) == 0)
  {
    uint64_t v3 = *(void *)(*(void *)a1 + 24);
    if ((int)v2 < *(_DWORD *)v3)
    {
      if (a2)
      {
        uint64_t v4 = *(void *)(*(void *)(v3 + 8) + 8 * v2);
        uint64_t v5 = *a2;
        if ((*(_WORD *)(*a2 + 20) & 0x9000) != 0)
        {
          sub_1B0D18980(v5, v4);
        }
        else
        {
          *(void *)uint64_t v5 = v4;
          *(_WORD *)(v5 + 20) = 4;
        }
      }
      else
      {
        sub_1B0CE1978(97441);
      }
    }
  }
  return 0;
}

uint64_t sub_1B0DD4D20(uint64_t a1, void *a2)
{
  *a2 = *(int *)(a1 + 8);
  return 0;
}

uint64_t sub_1B0DD4D30(uint64_t a1, int a2, sqlite3_value **a3)
{
  *a3 = sqlite3_column_value(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 12) + a2 + *(_DWORD *)(a1 + 8));
  return 0;
}

uint64_t sub_1B0DD4D70(uint64_t a1, int a2, sqlite3_value **a3)
{
  *a3 = sqlite3_column_value(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2);
  return 0;
}

uint64_t sub_1B0DD4DAC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 12);
  if (!v2)
  {
    uint64_t v2 = *(unsigned __int16 **)a1;
    if (*(void *)a1)
    {
      uint64_t v4 = *(void *)(*(void *)v2 + 24);
      if (v4)
      {
        xmmword_1EB21CA40(v4);
        uint64_t v5 = *(void *)(*(void *)v2 + 24);
        LODWORD(v2) = v2[130];
        if (v5) {
          xmmword_1EB21CA50(v5);
        }
      }
      else
      {
        LODWORD(v2) = v2[130];
      }
    }
  }
  return (v2 - *(_DWORD *)(a1 + 8));
}

uint64_t sub_1B0DD4E24()
{
  return 0;
}

double sub_1B0DD4E2C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v4 = 0;
  long long v75 = 0u;
  long long v76 = 0u;
  long long v74 = 0u;
  if (*(_DWORD *)(a3 + 36) || sub_1B0CFC2F4(a3, a4)) {
    return *(double *)&v4;
  }
  int v9 = *(_DWORD *)(a4 + 16) - *(_DWORD *)(a4 + 24);
  uint64_t v10 = a3 + 96;
  if (v9 != (*(unsigned int (**)(void))(a3 + 120))(*(void *)(a3 + 96)))
  {
    int v11 = 17;
    goto LABEL_7;
  }
  if (sub_1B0DD58DC(a3, 0, a4))
  {
    int v11 = 7;
LABEL_7:
    *(_DWORD *)(a3 + 36) = v11;
    return *(double *)&v4;
  }
  if (*(_DWORD *)(a4 + 20))
  {
    long long v4 = *(_OWORD *)v10;
    long long v12 = *(_OWORD *)(a3 + 112);
    long long v74 = *(_OWORD *)v10;
    long long v75 = v12;
    *(void *)&long long v76 = *(void *)(a3 + 128);
    *((void *)&v76 + 1) = a3;
    *(void *)(a3 + 112) = sub_1B0DD5AF4;
    *(void *)(a3 + 96) = &v74;
    *(void *)(a3 + 104) = sub_1B0DD5B8C;
    *(void *)(a3 + 120) = sub_1B0DD5C20;
    *(void *)(a3 + 128) = sub_1B0DD5C2C;
    if (!*(void *)(a3 + 72))
    {
      uint64_t v13 = sub_1B0CF1CE4(0);
      if (!v13) {
        goto LABEL_203;
      }
      uint64_t v14 = v13;
      sub_1B0C79BBC(v13, &byte_1B0DE9952, 0, 0, 0);
      *(void *)(a3 + 72) = v14;
    }
  }
  uint64_t v72 = (void *)(a3 + 96);
  if (*(_DWORD *)(a4 + 24))
  {
    unsigned int v15 = HIDWORD(a2) ^ a2 ^ (8 * a2);
LABEL_15:
    int v71 = v15 % *(_DWORD *)(a4 + 52);
    uint64_t v16 = *(void *)(*(void *)(a4 + 56) + 8 * v71);
    if (v16)
    {
      uint64_t v17 = 104;
      if (a1 == 18) {
        uint64_t v17 = 112;
      }
      uint64_t v73 = v17;
      while (1)
      {
        uint64_t v18 = *(unsigned __int8 **)(v16 + 16);
        if (!*(_DWORD *)(a4 + 24)) {
          break;
        }
        if (*v18 == 1 && bswap64(*(void *)(v18 + 1)) == a2) {
          goto LABEL_116;
        }
LABEL_19:
        uint64_t v16 = *(void *)(v16 + 24);
        if (!v16) {
          goto LABEL_183;
        }
      }
      int v19 = *(_DWORD *)(a4 + 16);
      if (v19 >= 1)
      {
        uint64_t v20 = 0;
        while (1)
        {
          if (!*(unsigned char *)(*(void *)(a4 + 40) + v20))
          {
            int v24 = *v18;
            int v21 = 1;
            if (*v18) {
              BOOL v25 = v24 == 5;
            }
            else {
              BOOL v25 = 1;
            }
            if (!v25 && v24 != 255)
            {
              if ((v24 - 1) < 2)
              {
                int v21 = 9;
              }
              else
              {
                int v26 = v18[1];
                if ((v26 & 0x80) != 0)
                {
                  int v36 = v18[2];
                  if ((char)v18[2] < 0)
                  {
                    int v44 = (char)v18[3];
                    if (v44 < 0)
                    {
                      int v78 = 0;
                      char v45 = sub_1B0CAD43C((char *)v18 + 1, (unint64_t *)&v78);
                      if ((unint64_t)v78 >> 32) {
                        int v26 = -1;
                      }
                      else {
                        int v26 = (int)v78;
                      }
                      int v27 = (v45 + 1);
                    }
                    else
                    {
                      int v26 = v44 & 0x7F | (v26 << 14) & 0x1FC07F | ((v36 & 0x7F) << 7);
                      int v27 = 4;
                    }
                  }
                  else
                  {
                    int v26 = ((v26 & 0x7F) << 7) | v36;
                    int v27 = 3;
                  }
                }
                else
                {
                  int v27 = 2;
                }
                int v21 = v27 + v26;
              }
            }
            v18 += v21;
            goto LABEL_28;
          }
          int v77 = 0;
          uint64_t v22 = v18 + 1;
          int v23 = *v18;
          (*(void (**)(void, uint64_t, sqlite3_value **))(a3 + v73))(*(void *)(a3 + 96), v20, &v77);
          if (v77)
          {
            if (byte_1B0DE186A[*((_WORD *)v77 + 10) & 0x3F] != v23) {
              goto LABEL_19;
            }
          }
          else
          {
            sub_1B0CE1978(97220);
            if (v23) {
              goto LABEL_19;
            }
          }
          if ((v23 - 1) > 1)
          {
            int v31 = *v22;
            if ((v31 & 0x80) != 0)
            {
              int v34 = v18[2];
              if ((char)v18[2] < 0)
              {
                int v35 = (char)v18[3];
                if (v35 < 0)
                {
                  int v78 = 0;
                  unsigned int v37 = sub_1B0CAD43C((char *)v18 + 1, (unint64_t *)&v78);
                  if ((unint64_t)v78 >> 32) {
                    int v31 = -1;
                  }
                  else {
                    int v31 = (int)v78;
                  }
                  uint64_t v32 = v37;
                }
                else
                {
                  int v31 = v35 & 0x7F | (v31 << 14) & 0x1FC07F | ((v34 & 0x7F) << 7);
                  uint64_t v32 = 3;
                }
              }
              else
              {
                int v31 = ((v31 & 0x7F) << 7) | v34;
                uint64_t v32 = 2;
              }
            }
            else
            {
              uint64_t v32 = 1;
            }
            if (!v77)
            {
              sub_1B0CE1978(91138);
              goto LABEL_87;
            }
            __int16 v38 = *((_WORD *)v77 + 10);
            if ((v38 & 2) != 0 && *((unsigned char *)v77 + 22) == 1)
            {
              int v39 = *((_DWORD *)v77 + 4);
              goto LABEL_88;
            }
            if ((v38 & 0x10) != 0)
            {
              int v39 = *((_DWORD *)v77 + 4);
              if ((*((_WORD *)v77 + 10) & 0x400) != 0) {
                v39 += *(_DWORD *)v77;
              }
            }
            else
            {
              if ((v38 & 1) == 0)
              {
                int v39 = sub_1B0D18228((uint64_t)v77, 1);
                goto LABEL_88;
              }
LABEL_87:
              int v39 = 0;
            }
LABEL_88:
            if (v39 != v31) {
              goto LABEL_19;
            }
            if (v23 == 3)
            {
              if (!v77) {
                goto LABEL_100;
              }
              int v40 = *((unsigned __int16 *)v77 + 10);
              if ((~v40 & 0x202) == 0 && *((unsigned char *)v77 + 22) == 1)
              {
                unsigned int v41 = (const void *)*((void *)v77 + 1);
                goto LABEL_101;
              }
              if (v40)
              {
LABEL_100:
                unsigned int v41 = 0;
              }
              else
              {
                uint64_t v42 = sub_1B0D18254((int *)v77, 1);
LABEL_95:
                unsigned int v41 = (const void *)v42;
              }
LABEL_101:
              uint64_t v43 = &v22[v32];
              if (v31 >= 1 && memcmp(v43, v41, v31)) {
                goto LABEL_19;
              }
              uint64_t v18 = &v43[v31];
              goto LABEL_104;
            }
            uint64_t v42 = (uint64_t)sqlite3_value_blob(v77);
            goto LABEL_95;
          }
          double v28 = COERCE_DOUBLE(bswap64(*(void *)(v18 + 1)));
          v18 += 9;
          if (v23 != 1)
          {
            if (v77)
            {
              __int16 v33 = *((_WORD *)v77 + 10);
              if ((v33 & 8) != 0)
              {
                *(void *)&long long v4 = *(void *)v77;
              }
              else if ((v33 & 0x24) != 0)
              {
                *(double *)&long long v4 = (double)*(uint64_t *)v77;
              }
              else if ((v33 & 0x12) != 0)
              {
                *(double *)&long long v4 = sub_1B0D18684((uint64_t)v77);
              }
              else
              {
                *(void *)&long long v4 = 0;
              }
            }
            else
            {
              sub_1B0CE1978(89752);
              *(void *)&long long v4 = 0;
            }
            if (*(double *)&v4 != v28) {
              goto LABEL_19;
            }
            goto LABEL_104;
          }
          if (!v77) {
            break;
          }
          __int16 v29 = *((_WORD *)v77 + 10);
          if ((v29 & 0x24) != 0)
          {
            uint64_t v30 = *(void *)v77;
            goto LABEL_57;
          }
          if ((v29 & 8) != 0)
          {
            *(void *)&long long v4 = *(void *)v77;
            if (*(double *)v77 >= -9.22337204e18)
            {
              if (*(double *)&v4 <= 9.22337204e18) {
                uint64_t v30 = (uint64_t)*(double *)&v4;
              }
              else {
                uint64_t v30 = 0x7FFFFFFFFFFFFFFFLL;
              }
            }
            else
            {
              uint64_t v30 = 0x8000000000000000;
            }
          }
          else
          {
            if ((v29 & 0x12) == 0 || !*((void *)v77 + 1)) {
              goto LABEL_56;
            }
            uint64_t v30 = sub_1B0D186C0((uint64_t)v77);
          }
LABEL_57:
          if (v30 != *(void *)&v28) {
            goto LABEL_19;
          }
LABEL_104:
          int v19 = *(_DWORD *)(a4 + 16);
LABEL_28:
          if (++v20 >= v19) {
            goto LABEL_116;
          }
        }
        sub_1B0CE1978(89717);
LABEL_56:
        uint64_t v30 = 0;
        goto LABEL_57;
      }
LABEL_116:
      if (*(unsigned char *)(v16 + 1))
      {
        uint64_t v10 = a3 + 96;
        if (!(*(unsigned int (**)(void))(a3 + 128))(*(void *)(a3 + 96)) && !*(_DWORD *)(a3 + 24)) {
          *(unsigned char *)(v16 + 1) = 0;
        }
      }
      else
      {
        uint64_t v10 = a3 + 96;
      }
LABEL_209:
      if (*(_DWORD *)(a3 + 16)) {
        int v11 = sub_1B0DD5F40(a1, a3, a4, v16);
      }
      else {
        int v11 = 0;
      }
      goto LABEL_216;
    }
LABEL_183:
    ++*(_DWORD *)(a4 + 48);
    uint64_t v60 = 32;
    int v78 = (sqlite3_value *)32;
    LODWORD(v61) = *(_DWORD *)(a4 + 24);
    uint64_t v10 = a3 + 96;
    if (*(_DWORD *)(a4 + 16) > (int)v61)
    {
      uint64_t v62 = 0;
      while (1)
      {
        int v77 = 0;
        unint64_t v63 = (void (**)(void, uint64_t, sqlite3_value **))(a3 + 104);
        if (a1 != 18
          || (unint64_t v63 = (void (**)(void, uint64_t, sqlite3_value **))(a3 + 112),
              *(unsigned char *)(*(void *)(a4 + 40) + v62)))
        {
          (*v63)(*v72, v62, &v77);
        }
        int v11 = sub_1B0DD5C38(0, v77, &v78);
        if (v11) {
          goto LABEL_216;
        }
        ++v62;
        uint64_t v61 = *(int *)(a4 + 24);
        if (v62 >= *(int *)(a4 + 16) - v61)
        {
          uint64_t v60 = (uint64_t)v78;
          break;
        }
      }
    }
    if (v61)
    {
      v60 += 9;
      int v78 = (sqlite3_value *)v60;
    }
    uint64_t v64 = sub_1B0CFD714(a3, v60);
    if (v64)
    {
      uint64_t v16 = v64;
      *(void *)&long long v4 = 0;
      *(_OWORD *)uint64_t v64 = 0u;
      *(_OWORD *)(v64 + 16) = 0u;
      *(void *)(v64 + 16) = v64 + 32;
      int v78 = 0;
      int v65 = *(_DWORD *)(a4 + 24);
      if (v65)
      {
        *(unsigned char *)(v64 + 32) = 1;
        *(unsigned char *)(v64 + 33) = HIBYTE(a2);
        *(unsigned char *)(v64 + 34) = BYTE6(a2);
        *(unsigned char *)(v64 + 35) = BYTE5(a2);
        *(unsigned char *)(v64 + 36) = BYTE4(a2);
        *(unsigned char *)(v64 + 37) = BYTE3(a2);
        *(unsigned char *)(v64 + 38) = BYTE2(a2);
        *(unsigned char *)(v64 + 39) = BYTE1(a2);
        *(unsigned char *)(v64 + 40) = a2;
        int v78 = (sqlite3_value *)9;
        int v65 = *(_DWORD *)(a4 + 24);
      }
      if (*(_DWORD *)(a4 + 16) > v65)
      {
        uint64_t v66 = 0;
        do
        {
          int v77 = 0;
          BOOL v67 = (void (**)(void, uint64_t, sqlite3_value **))(a3 + 104);
          if (a1 != 18
            || (BOOL v67 = (void (**)(void, uint64_t, sqlite3_value **))(a3 + 112),
                *(unsigned char *)(*(void *)(a4 + 40) + v66)))
          {
            (*v67)(*v72, v66, &v77);
          }
          sub_1B0DD5C38((uint64_t)v78 + *(void *)(v16 + 16), v77, &v78);
          ++v66;
        }
        while (v66 < *(int *)(a4 + 16) - (uint64_t)*(int *)(a4 + 24));
      }
      if (*(_DWORD *)(a3 + 24) || (*(unsigned int (**)(void))(a3 + 128))(*(void *)(a3 + 96))) {
        *(unsigned char *)(v16 + 1) = 1;
      }
      *(_DWORD *)(v16 + 8) = v78;
      *(unsigned char *)uint64_t v16 = a1;
      uint64_t v68 = *(void *)(a4 + 56);
      *(void *)(v16 + 24) = *(void *)(v68 + 8 * v71);
      *(void *)(v68 + 8 * v71) = v16;
      goto LABEL_209;
    }
LABEL_203:
    int v11 = 7;
    goto LABEL_216;
  }
  int v46 = *(_DWORD *)(a4 + 16);
  if (v46 < 1)
  {
    unsigned int v15 = 0;
    goto LABEL_15;
  }
  int v47 = 0;
  uint64_t v48 = 0;
  unsigned int v15 = 0;
  if (a1 == 18) {
    uint64_t v49 = 112;
  }
  else {
    uint64_t v49 = 104;
  }
  do
  {
    if (*(unsigned char *)(*(void *)(a4 + 40) + v48))
    {
      int v78 = 0;
      int v11 = (*(uint64_t (**)(void, uint64_t, sqlite3_value **))(a3 + v49))(*(void *)(a3 + 96), v48, &v78);
      if (v11) {
        goto LABEL_215;
      }
      if (v78)
      {
        int v50 = *((unsigned __int16 *)v78 + 10);
        char v51 = v50 & 0x3F;
        int v52 = byte_1B0DE186A[v50 & 0x3F];
        v15 ^= (8 * v15) ^ v52;
        if ((v52 - 1) <= 1)
        {
          if ((0x50505050uLL >> v51))
          {
            if ((v50 & 0x24) != 0)
            {
              uint64_t v54 = *(void *)v78;
            }
            else if ((v50 & 8) != 0)
            {
              *(void *)&long long v4 = *(void *)v78;
              uint64_t v56 = (uint64_t)*(double *)v78;
              if (*(double *)v78 > 9.22337204e18) {
                uint64_t v56 = 0x7FFFFFFFFFFFFFFFLL;
              }
              if (*(double *)&v4 >= -9.22337204e18) {
                uint64_t v54 = v56;
              }
              else {
                uint64_t v54 = 0x8000000000000000;
              }
            }
            else if ((v50 & 0x12) != 0 && *((void *)v78 + 1))
            {
              uint64_t v54 = sub_1B0D186C0((uint64_t)v78);
            }
            else
            {
              uint64_t v54 = 0;
            }
          }
          else
          {
            if ((v50 & 8) != 0)
            {
              *(void *)&long long v4 = *(void *)v78;
            }
            else if ((v50 & 0x24) != 0)
            {
              *(double *)&long long v4 = (double)*(uint64_t *)v78;
            }
            else if ((v50 & 0x12) != 0)
            {
              *(double *)&long long v4 = sub_1B0D18684((uint64_t)v78);
            }
            else
            {
              *(void *)&long long v4 = 0;
            }
            uint64_t v54 = v4;
          }
          v15 ^= HIDWORD(v54) ^ (8 * (v54 ^ (8 * v15) ^ v15)) ^ v54 ^ (8 * v15);
          goto LABEL_126;
        }
        if ((v52 - 3) <= 1)
        {
          if ((0x4000000040004uLL >> v51))
          {
            if ((~v50 & 0x202) == 0 && *((unsigned char *)v78 + 22) == 1)
            {
              int v55 = (unsigned __int8 *)*((void *)v78 + 1);
              goto LABEL_162;
            }
            if (v50)
            {
              int v55 = 0;
LABEL_162:
              if (v78)
              {
                __int16 v57 = *((_WORD *)v78 + 10);
                if ((v57 & 2) != 0 && *((unsigned char *)v78 + 22) == 1)
                {
                  LODWORD(v58) = *((_DWORD *)v78 + 4);
                  goto LABEL_171;
                }
                if ((v57 & 0x10) != 0)
                {
                  LODWORD(v58) = *((_DWORD *)v78 + 4);
                  if ((*((_WORD *)v78 + 10) & 0x400) != 0) {
                    LODWORD(v58) = *(_DWORD *)v78 + v58;
                  }
LABEL_171:
                  if (v55)
                  {
                    if ((int)v58 >= 1)
                    {
                      uint64_t v58 = v58;
                      do
                      {
                        int v59 = *v55++;
                        v15 ^= v59 ^ (8 * v15);
                        --v58;
                      }
                      while (v58);
                    }
                  }
                  else
                  {
                    int v11 = 7;
                    if (((0xFFFEFFFFFFFEFFFELL >> v51) & 1) != 0 || (int)v58 > 0) {
                      goto LABEL_215;
                    }
                  }
                  goto LABEL_126;
                }
                if ((v57 & 1) == 0)
                {
                  LODWORD(v58) = sub_1B0D18228((uint64_t)v78, 1);
                  goto LABEL_171;
                }
              }
              else
              {
                sub_1B0CE1978(91138);
              }
              LODWORD(v58) = 0;
              goto LABEL_171;
            }
            uint64_t v53 = sub_1B0D18254((int *)v78, 1);
          }
          else
          {
            uint64_t v53 = (uint64_t)sqlite3_value_blob(v78);
          }
          int v55 = (unsigned __int8 *)v53;
          goto LABEL_162;
        }
      }
      else
      {
        sub_1B0CE1978(97220);
        v15 ^= 8 * v15;
      }
      int v47 = 1;
LABEL_126:
      int v46 = *(_DWORD *)(a4 + 16);
    }
    ++v48;
  }
  while (v48 < v46);
  if (!v47) {
    goto LABEL_15;
  }
  int v11 = 0;
LABEL_215:
  uint64_t v10 = a3 + 96;
LABEL_216:
  if (*(_DWORD *)(a4 + 20))
  {
    *(void *)&long long v4 = v74;
    long long v69 = v75;
    *(_OWORD *)uint64_t v10 = v74;
    *(_OWORD *)(v10 + 16) = v69;
    *(void *)(v10 + 32) = v76;
  }
  if (v11) {
    goto LABEL_7;
  }
  return *(double *)&v4;
}

BOOL sub_1B0DD58DC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = *(int *)(a3 + 52);
  if (v6)
  {
    int v7 = (int)v6 >= 0 ? *(_DWORD *)(a3 + 52) : v6 + 1;
    if (*(_DWORD *)(a3 + 48) < v7 >> 1) {
      return 0;
    }
  }
  if (v6) {
    uint64_t v9 = 2 * v6;
  }
  else {
    uint64_t v9 = 256;
  }
  if (sqlite3_initialize())
  {
    if (!a1) {
      return *(_DWORD *)(a3 + 52) == 0;
    }
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v12 = sub_1B0C7FC94(8 * v9);
    uint64_t v10 = (char *)v12;
    if (!a1) {
      goto LABEL_18;
    }
    if (v12)
    {
      uint64_t v11 = (int)off_1EB21C9F8(v12);
      goto LABEL_17;
    }
  }
  uint64_t v11 = 0;
LABEL_17:
  *(void *)(a1 + 56) += v11;
LABEL_18:
  if (!v10) {
    return *(_DWORD *)(a3 + 52) == 0;
  }
  bzero(v10, 8 * v9);
  int v13 = *(_DWORD *)(a3 + 52);
  if (v13 >= 1)
  {
    for (uint64_t i = 0; i < v13; ++i)
    {
      uint64_t v15 = *(void *)(*(void *)(a3 + 56) + 8 * i);
      if (v15)
      {
        do
        {
          if (a2) {
            BOOL v16 = *(unsigned char *)v15 == 9;
          }
          else {
            BOOL v16 = 0;
          }
          int v17 = v16;
          int v18 = sub_1B0DD63A0(a3, v17, *(unsigned __int8 **)(v15 + 16), v9);
          uint64_t v19 = *(void *)(v15 + 24);
          uint64_t v20 = 8 * v18;
          *(void *)(v15 + 24) = *(void *)&v10[v20];
          *(void *)&v10[v20] = v15;
          uint64_t v15 = v19;
        }
        while (v19);
        int v13 = *(_DWORD *)(a3 + 52);
      }
    }
  }
  uint64_t v21 = *(void *)(a3 + 56);
  if (a1)
  {
    if (v21) {
      uint64_t v22 = (int)off_1EB21C9F8(*(void *)(a3 + 56));
    }
    else {
      uint64_t v22 = 0;
    }
    *(void *)(a1 + 56) -= v22;
  }
  if (!v21) {
    goto LABEL_44;
  }
  int v23 = &off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v21);
    --qword_1EB220150;
    off_1EB21C9E8(v21);
    uint64_t v21 = xmmword_1EB2201B0;
    if (!(void)xmmword_1EB2201B0) {
      goto LABEL_44;
    }
    int v23 = &xmmword_1EB21CA50;
  }
  (*v23)(v21);
LABEL_44:
  BOOL result = 0;
  *(_DWORD *)(a3 + 52) = v9;
  *(void *)(a3 + 56) = v10;
  return result;
}

uint64_t sub_1B0DD5AF4(uint64_t a1, uint64_t a2, void *a3)
{
  int v4 = a2;
  uint64_t v10 = 0;
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, uint64_t *))(a1 + 16))(*(void *)a1, a2, &v10);
  uint64_t v7 = v6;
  uint64_t v8 = v10;
  if (v4 == 1 && !v6)
  {
    if (v10)
    {
      if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v10 + 20))) {
        uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 72);
      }
    }
    else
    {
      sub_1B0CE1978(97220);
      uint64_t v8 = v10;
    }
  }
  *a3 = v8;
  return v7;
}

uint64_t sub_1B0DD5B8C(uint64_t a1, uint64_t a2, void *a3)
{
  int v4 = a2;
  uint64_t v10 = 0;
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, uint64_t *))(a1 + 8))(*(void *)a1, a2, &v10);
  uint64_t v7 = v6;
  uint64_t v8 = v10;
  if (v4 == 1 && !v6)
  {
    if (v10)
    {
      if ((0xAAAAAAAAAAAAAAAALL >> *(_WORD *)(v10 + 20))) {
        uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 72);
      }
    }
    else
    {
      sub_1B0CE1978(97220);
      uint64_t v8 = v10;
    }
  }
  *a3 = v8;
  return v7;
}

uint64_t sub_1B0DD5C20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))(*(void *)a1);
}

uint64_t sub_1B0DD5C2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))(*(void *)a1);
}

uint64_t sub_1B0DD5C38(uint64_t a1, sqlite3_value *a2, void *a3)
{
  if (!a2)
  {
    if (a1) {
      *(unsigned char *)a1 = 0;
    }
LABEL_13:
    uint64_t v10 = 1;
    uint64_t result = 0;
    if (!a3) {
      return result;
    }
    goto LABEL_64;
  }
  uint64_t v6 = *((_WORD *)a2 + 10) & 0x3F;
  int v7 = byte_1B0DE186A[v6];
  if (a1) {
    *(unsigned char *)a1 = v7;
  }
  if ((v7 - 1) >= 2)
  {
    if (v7 == 5) {
      goto LABEL_13;
    }
    if ((0x4000000040004uLL >> v6))
    {
      int v14 = *((unsigned __int16 *)a2 + 10);
      if ((~v14 & 0x202) == 0 && *((unsigned char *)a2 + 22) == 1)
      {
        uint64_t v15 = (const void *)*((void *)a2 + 1);
        __int16 v16 = *((_WORD *)a2 + 10);
        if ((v16 & 2) == 0) {
          goto LABEL_40;
        }
        goto LABEL_37;
      }
      if (v14)
      {
        uint64_t v15 = 0;
        __int16 v16 = *((_WORD *)a2 + 10);
        if ((v16 & 2) == 0) {
          goto LABEL_40;
        }
        goto LABEL_37;
      }
      uint64_t v12 = sub_1B0D18254((int *)a2, 1);
    }
    else
    {
      uint64_t v12 = (uint64_t)sqlite3_value_blob(a2);
    }
    uint64_t v15 = (const void *)v12;
    __int16 v16 = *((_WORD *)a2 + 10);
    if ((v16 & 2) == 0) {
      goto LABEL_40;
    }
LABEL_37:
    if (*((unsigned char *)a2 + 22) == 1)
    {
      int v17 = *((_DWORD *)a2 + 4);
      if (v15) {
        goto LABEL_51;
      }
      goto LABEL_47;
    }
LABEL_40:
    if ((v16 & 0x10) != 0)
    {
      int v17 = *((_DWORD *)a2 + 4);
      if ((v16 & 0x400) != 0) {
        v17 += *(_DWORD *)a2;
      }
      if (v15) {
        goto LABEL_51;
      }
    }
    else if (v16)
    {
      int v17 = 0;
      if (v15) {
        goto LABEL_51;
      }
    }
    else
    {
      int v17 = sub_1B0D18228((uint64_t)a2, 1);
      if (v15) {
        goto LABEL_51;
      }
    }
LABEL_47:
    uint64_t result = 7;
    if (((0xFFFEFFFFFFFEFFFELL >> v6) & 1) != 0 || v17 > 0) {
      return result;
    }
LABEL_51:
    if (v17 >= 0x80)
    {
      int v18 = 1;
      unint64_t v19 = v17;
      do
      {
        unint64_t v20 = v19 >> 14;
        v19 >>= 7;
        ++v18;
      }
      while (v20);
      if (!a1) {
        goto LABEL_63;
      }
      if (v17 >> 14)
      {
        sub_1B0D1DC5C((int8x8_t *)(a1 + 1), v17);
        if (v17 < 1) {
          goto LABEL_63;
        }
      }
      else
      {
        *(unsigned char *)(a1 + 1) = (v17 >> 7) | 0x80;
        *(unsigned char *)(a1 + 2) = v17 & 0x7F;
      }
    }
    else
    {
      if (!a1)
      {
        int v18 = 1;
        goto LABEL_63;
      }
      *(unsigned char *)(a1 + 1) = v17;
      int v18 = 1;
      if (v17 < 1)
      {
LABEL_63:
        uint64_t v10 = v17 + v18 + 1;
        uint64_t result = 0;
        if (!a3) {
          return result;
        }
        goto LABEL_64;
      }
    }
    memcpy((void *)(a1 + v18 + 1), v15, v17);
    goto LABEL_63;
  }
  if (a1)
  {
    __int16 v8 = *((_WORD *)a2 + 10);
    if ((0x50505050uLL >> v6))
    {
      if ((v8 & 0x24) != 0)
      {
        unint64_t v13 = *(void *)a2;
      }
      else if ((v8 & 8) != 0)
      {
        double v21 = *(double *)a2;
        if (*(double *)a2 >= -9.22337204e18)
        {
          if (v21 <= 9.22337204e18) {
            unint64_t v13 = (uint64_t)v21;
          }
          else {
            unint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          unint64_t v13 = 0x8000000000000000;
        }
      }
      else if ((v8 & 0x12) != 0 && *((void *)a2 + 1))
      {
        unint64_t v13 = sub_1B0D186C0((uint64_t)a2);
      }
      else
      {
        unint64_t v13 = 0;
      }
    }
    else
    {
      if ((v8 & 8) != 0)
      {
        double v9 = *(double *)a2;
      }
      else if ((v8 & 0x24) != 0)
      {
        double v9 = (double)*(uint64_t *)a2;
      }
      else if ((v8 & 0x12) != 0)
      {
        double v9 = sub_1B0D18684((uint64_t)a2);
      }
      else
      {
        double v9 = 0.0;
      }
      unint64_t v13 = *(void *)&v9;
    }
    *(void *)(a1 + 1) = bswap64(v13);
  }
  uint64_t v10 = 9;
  uint64_t result = 0;
  if (a3) {
LABEL_64:
  }
    *a3 += v10;
  return result;
}

uint64_t sub_1B0DD5F40(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = 2;
  if (*(unsigned char *)a4 == 18)
  {
    if (*(_DWORD *)(a3 + 24)) {
      uint64_t v37 = 11;
    }
    if (a1 != 9 && *(int *)(a3 + 16) >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        __int16 v38 = 0;
        (*(void (**)(void, uint64_t, sqlite3_value **))(a2 + 112))(*(void *)(a2 + 96), v7, &v38);
        sub_1B0DD5C38(0, v38, &v37);
        uint64_t v7 = (v7 + 1);
      }
      while ((int)v7 < *(_DWORD *)(a3 + 16));
    }
    goto LABEL_87;
  }
  if (a1 == 9)
  {
    uint64_t v8 = *(int *)(a4 + 8);
    uint64_t v37 = v8 + 2;
    uint64_t v9 = *(void *)(*(void *)a2 + 368);
    if (v9 && (*(_DWORD *)(v9 + 92) & 0x80000000) == 0)
    {
      uint64_t v10 = v8 + 2 + v8;
      goto LABEL_86;
    }
    goto LABEL_87;
  }
  uint64_t v11 = *(unsigned __int8 **)(a4 + 16);
  uint64_t v12 = *(int *)(a3 + 24);
  if (v12)
  {
    uint64_t v37 = 12;
    v11 += 9;
  }
  if ((int)v12 >= *(_DWORD *)(a3 + 16)) {
    goto LABEL_87;
  }
  while (1)
  {
    int v36 = 0;
    (*(void (**)(void, void, sqlite3_value **))(a2 + 112))(*(void *)(a2 + 96), (v12 - *(_DWORD *)(a3 + 24)), &v36);
    int v14 = v36;
    if (!v36) {
      return 7;
    }
    uint64_t v15 = v11 + 1;
    int v16 = *v11;
    if ((v16 - 1) >= 2)
    {
      if (v16 == 5)
      {
        int v20 = 0;
        unint64_t v21 = (0x5555555555555555uLL >> *((_WORD *)v36 + 10)) & 1;
        ++v11;
        goto LABEL_74;
      }
      int v22 = *v15;
      if ((v22 & 0x80) != 0)
      {
        int v25 = v11[2];
        if ((char)v11[2] < 0)
        {
          int v26 = (char)v11[3];
          if (v26 < 0)
          {
            __int16 v38 = 0;
            unsigned int v23 = sub_1B0CAD43C((char *)v11 + 1, (unint64_t *)&v38);
            if ((unint64_t)v38 >> 32) {
              int v22 = -1;
            }
            else {
              int v22 = (int)v38;
            }
          }
          else
          {
            int v22 = v26 & 0x7F | (v22 << 14) & 0x1FC07F | ((v25 & 0x7F) << 7);
            unsigned int v23 = 3;
          }
        }
        else
        {
          int v22 = ((v22 & 0x7F) << 7) | v25;
          unsigned int v23 = 2;
        }
      }
      else
      {
        unsigned int v23 = 1;
      }
      double v28 = &v15[v23];
      __int16 v29 = *((_WORD *)v14 + 10);
      if (byte_1B0DE186A[v29 & 0x3F] != v16) {
        goto LABEL_72;
      }
      if ((v29 & 2) != 0 && *((unsigned char *)v14 + 22) == 1)
      {
        if (v22 != *((_DWORD *)v14 + 4)) {
          goto LABEL_72;
        }
      }
      else if ((v29 & 0x10) != 0)
      {
        int v30 = *((_DWORD *)v14 + 4);
        if ((*((_WORD *)v14 + 10) & 0x400) != 0) {
          v30 += *(_DWORD *)v14;
        }
        if (v22 != v30) {
          goto LABEL_72;
        }
      }
      else if (v29)
      {
        if (v22) {
          goto LABEL_72;
        }
      }
      else if (v22 != sub_1B0D18228((uint64_t)v14, 1))
      {
        goto LABEL_72;
      }
      if (!v22 || (int v31 = sqlite3_value_blob(v36), !memcmp(v28, v31, v22)))
      {
        LODWORD(v21) = 0;
LABEL_73:
        int v20 = v23 + v22;
        uint64_t v11 = &v28[v22];
        goto LABEL_74;
      }
LABEL_72:
      LODWORD(v21) = 1;
      goto LABEL_73;
    }
    __int16 v17 = *((_WORD *)v36 + 10);
    if (byte_1B0DE186A[v17 & 0x3F] == v16)
    {
      double v18 = COERCE_DOUBLE(bswap64(*(void *)(v11 + 1)));
      if (v16 == 1)
      {
        if ((v17 & 0x24) != 0)
        {
          BOOL v19 = *(void *)&v18 == *(void *)v36;
        }
        else if ((v17 & 8) != 0)
        {
          double v27 = *(double *)v36;
          if (*(double *)v36 >= -9.22337204e18)
          {
            uint64_t v32 = v27 <= 9.22337204e18 ? (uint64_t)v27 : 0x7FFFFFFFFFFFFFFFLL;
            BOOL v19 = *(void *)&v18 == v32;
          }
          else
          {
            BOOL v19 = *(void *)&v18 == 0x8000000000000000;
          }
        }
        else
        {
          BOOL v19 = (v17 & 0x12) != 0 && *((void *)v36 + 1)
              ? *(void *)&v18 == sub_1B0D186C0((uint64_t)v36)
              : *(void *)&v18 == 0;
        }
      }
      else
      {
        if ((v17 & 8) != 0)
        {
          double v24 = *(double *)v36;
        }
        else if ((v17 & 0x24) != 0)
        {
          double v24 = (double)*(uint64_t *)v36;
        }
        else
        {
          double v24 = (v17 & 0x12) != 0 ? sub_1B0D18684((uint64_t)v36) : 0.0;
        }
        BOOL v19 = v24 == v18;
      }
      LODWORD(v21) = !v19;
    }
    else
    {
      LODWORD(v21) = 1;
    }
    v11 += 9;
    int v20 = 8;
LABEL_74:
    if (!v21)
    {
      if (*(unsigned char *)(*(void *)(a3 + 40) + v12)) {
        uint64_t v13 = v37 + v20 + 2;
      }
      else {
        uint64_t v13 = v37 + 2;
      }
      uint64_t v37 = v13;
      goto LABEL_19;
    }
    if (*(unsigned char *)(*(void *)(a3 + 40) + v12)) {
      break;
    }
    v37 += v20 + 1;
    sub_1B0DD5C38(0, v36, &v37);
LABEL_19:
    if (++v12 >= *(int *)(a3 + 16)) {
      goto LABEL_87;
    }
  }
  uint64_t v10 = *(int *)(a4 + 8) + 2;
LABEL_86:
  uint64_t v37 = v10;
LABEL_87:
  uint64_t v34 = *(int *)(a4 + 4);
  uint64_t result = 0;
  if (v37 > v34)
  {
    int v35 = v37 - v34;
    *(_DWORD *)(a4 + 4) = v37;
    *(void *)(a2 + 64) += v35;
  }
  return result;
}

uint64_t sub_1B0DD63A0(uint64_t a1, int a2, unsigned __int8 *a3, unsigned int a4)
{
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  if ((int)v5 >= 1)
  {
    uint64_t v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = *(void *)(a1 + 40);
    while (1)
    {
      int v12 = *a3;
      if (a2 && !*(unsigned char *)(v10 + v8)) {
        goto LABEL_5;
      }
      if (!*(unsigned char *)(v10 + v8))
      {
        int v11 = 1;
        if (*a3) {
          BOOL v15 = v12 == 5;
        }
        else {
          BOOL v15 = 1;
        }
        if (!v15 && v12 != 255)
        {
          if ((v12 - 1) < 2)
          {
            int v11 = 9;
          }
          else
          {
            int v16 = a3[1];
            if ((v16 & 0x80) != 0)
            {
              int v21 = a3[2];
              if ((char)a3[2] < 0)
              {
                int v25 = (char)a3[3];
                if (v25 < 0)
                {
                  unint64_t v28 = 0;
                  char v26 = sub_1B0CAD43C((char *)a3 + 1, &v28);
                  if (HIDWORD(v28)) {
                    int v16 = -1;
                  }
                  else {
                    int v16 = v28;
                  }
                  int v17 = (v26 + 1);
                }
                else
                {
                  int v16 = v25 & 0x7F | (v16 << 14) & 0x1FC07F | ((v21 & 0x7F) << 7);
                  int v17 = 4;
                }
              }
              else
              {
                int v16 = ((v16 & 0x7F) << 7) | v21;
                int v17 = 3;
              }
            }
            else
            {
              int v17 = 2;
            }
            int v11 = v17 + v16;
          }
        }
        a3 += v11;
        goto LABEL_5;
      }
      int v13 = a3[1];
      v9 ^= v12 ^ (8 * v9);
      if ((v12 - 1) > 1) {
        break;
      }
      unsigned int v14 = bswap32(*(_DWORD *)(a3 + 5)) ^ (8 * v9) ^ v9;
      unsigned int v9 = _byteswap_ulong(*(_DWORD *)(a3 + 1)) ^ (8 * v14) ^ v14;
      a3 += 9;
LABEL_5:
      if (++v8 == v5) {
        return v9 % a4;
      }
    }
    if ((v13 & 0x80) != 0)
    {
      int v19 = a3[2];
      if ((char)a3[2] < 0)
      {
        int v20 = (char)a3[3];
        if (v20 < 0)
        {
          unint64_t v28 = 0;
          unsigned int v22 = sub_1B0CAD43C((char *)a3 + 1, &v28);
          int v13 = v28;
          uint64_t v18 = v22;
          if (HIDWORD(v28))
          {
            int v13 = -1;
LABEL_31:
            a3 += v18 + v13 + 1;
            goto LABEL_5;
          }
        }
        else
        {
          int v13 = v20 & 0x7F | (v13 << 14) & 0x1FC07F | ((v19 & 0x7F) << 7);
          uint64_t v18 = 3;
        }
      }
      else
      {
        int v13 = ((v13 & 0x7F) << 7) | v19;
        uint64_t v18 = 2;
      }
    }
    else
    {
      uint64_t v18 = 1;
    }
    if (v13 >= 1)
    {
      uint64_t v23 = v13;
      double v24 = a3 + 1;
      do
      {
        v9 ^= v24[v18] ^ (8 * v9);
        ++v24;
        --v23;
      }
      while (v23);
    }
    goto LABEL_31;
  }
  unsigned int v9 = 0;
  return v9 % a4;
}

uint64_t sub_1B0DD65EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 368);
  if (v1) {
    return *(unsigned __int16 *)(v1 + 38);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B0DD6604(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 368);
  if (v1) {
    return *(unsigned int *)(*(void *)v1 + 368);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B0DD6620(uint64_t a1, int a2, uint64_t a3, _DWORD *a4)
{
  if (a2) {
    char v7 = 80;
  }
  else {
    char v7 = 84;
  }
  if (!*a4)
  {
    int v8 = *(_DWORD *)(a1 + 8);
    int v9 = *(_DWORD *)(a1 + 12);
    uint64_t v10 = v8;
    if (v8 < v9)
    {
      uint64_t v11 = *(void *)a1;
LABEL_7:
      *(_DWORD *)(a1 + 8) = v8 + 1;
      *(unsigned char *)(v11 + v10) = v7;
      goto LABEL_16;
    }
    if (!v9) {
      int v9 = 128;
    }
    uint64_t v12 = v9;
    do
    {
      uint64_t v13 = v12;
      v12 *= 2;
    }
    while (v12 <= v8);
    if (v13 >= 1073741696 && (uint64_t v12 = 2147483391, v8 >= 2147483391)
      || (uint64_t v14 = *(void *)a1, sqlite3_initialize())
      || (uint64_t v11 = sub_1B0C8E1B8(v14, v12)) == 0)
    {
      *a4 = 7;
    }
    else
    {
      *(void *)a1 = v11;
      *(_DWORD *)(a1 + 12) = v12;
      if (!*a4)
      {
        int v8 = *(_DWORD *)(a1 + 8);
        uint64_t v10 = v8;
        goto LABEL_7;
      }
    }
  }
LABEL_16:
  sub_1B0DD7990(a1, *(_DWORD *)(a3 + 16), a4);
  sub_1B0DD7AB8(a1, *(void **)(a3 + 40), *(unsigned int *)(a3 + 16), a4);
  BOOL v15 = *(char **)(a3 + 8);
  size_t v16 = strlen(v15) + 1;

  return sub_1B0DD7AB8(a1, v15, v16, a4);
}

uint64_t sub_1B0DD6760(uint64_t a1, int a2, uint64_t a3, unsigned __int8 *a4, int a5, int a6, uint64_t a7, uint64_t a8, void *a9)
{
  unsigned int v40 = 0;
  v39[0] = 0;
  v39[1] = 0;
  v38[0] = 0;
  v38[1] = 0;
  if (a5) {
    size_t v16 = "_rowid_, *";
  }
  else {
    size_t v16 = "*";
  }
  v37[0] = 0;
  v37[1] = 0;
  sub_1B0DD7BBC((uint64_t)v39, ", 1", &v40);
  if (a4)
  {
    int v17 = "sqlite_stat1";
    for (uint64_t i = a4; ; ++i)
    {
      uint64_t v19 = *(unsigned __int8 *)v17;
      uint64_t v20 = *i;
      if (v19 == v20)
      {
        if (!*v17)
        {
          sub_1B0DD7BBC((uint64_t)v39, " AND (?6 OR ?3 IS stat)", &v40);
          sub_1B0DD7BBC((uint64_t)v38, "tbl, idx", &v40);
          sub_1B0DD7BBC((uint64_t)v37, "?1, (CASE WHEN ?2=X'' THEN NULL ELSE ?2 END)", &v40);
          size_t v16 = "tbl, ?2, stat";
          goto LABEL_17;
        }
      }
      else if (byte_1B0DE1758[v19] != byte_1B0DE1758[v20])
      {
        break;
      }
      ++v17;
    }
  }
  if (a6 >= 1)
  {
    uint64_t v36 = a1;
    uint64_t v21 = 0;
    unsigned int v22 = &byte_1B0DE9952;
    do
    {
      while (!*(unsigned char *)(a8 + v21))
      {
        sub_1B0DD7E1C((char *)v39, &v40, " AND (?%d OR ?%d IS %w.%w)", (v21 + 1 + a6), v21 + 1, a4, *(void *)(a7 + 8 * v21));
        if (++v21 == a6) {
          goto LABEL_16;
        }
      }
      sub_1B0DD7BBC((uint64_t)v38, v22, &v40);
      sub_1B0DD7BBC((uint64_t)v37, v22, &v40);
      sub_1B0DD7CD4((uint64_t)v38, *(char **)(a7 + 8 * v21++), &v40);
      sub_1B0DD7E1C((char *)v37, &v40, "?%d", v21);
      unsigned int v22 = ", ";
    }
    while (v21 != a6);
LABEL_16:
    a1 = v36;
  }
LABEL_17:
  uint64_t v23 = v40;
  uint64_t v24 = v39[0];
  if (!v40)
  {
    int v25 = &byte_1B0DE9952;
    if (a2) {
      int v25 = (char *)v39[0];
    }
    char v26 = (unsigned __int8 *)sqlite3_mprintf("SELECT %s%s FROM %Q.%Q WHERE (%s) IS (%s)", v16, v25, a3, a4, v38[0], v37[0]);
    if (!v26)
    {
      uint64_t v23 = 7;
      if (!v24) {
        goto LABEL_34;
      }
      goto LABEL_28;
    }
    unint64_t v28 = v26;
    uint64_t v23 = sub_1B0C7EAC0(a1, v26, 0xFFFFFFFFLL, 128, 0, a9, 0, v27);
    __int16 v29 = (uint64_t (**)(unsigned __int8 *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_26;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v28);
    --qword_1EB220150;
    off_1EB21C9E8(v28);
    unint64_t v28 = (unsigned __int8 *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      __int16 v29 = (uint64_t (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_26:
      (*v29)(v28);
    }
  }
  if (!v24) {
    goto LABEL_34;
  }
LABEL_28:
  int v30 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_33:
    (*v30)(v24);
    goto LABEL_34;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v24);
  --qword_1EB220150;
  off_1EB21C9E8(v24);
  uint64_t v24 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v30 = &xmmword_1EB21CA50;
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v31 = v38[0];
  if (!v38[0]) {
    goto LABEL_41;
  }
  uint64_t v32 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_40;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v31);
  --qword_1EB220150;
  off_1EB21C9E8(v31);
  uint64_t v31 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v32 = &xmmword_1EB21CA50;
LABEL_40:
    (*v32)(v31);
  }
LABEL_41:
  uint64_t v33 = v37[0];
  if (v37[0])
  {
    uint64_t v34 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_47:
      (*v34)(v33);
      return v23;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v33);
    --qword_1EB220150;
    off_1EB21C9E8(v33);
    uint64_t v33 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v34 = &xmmword_1EB21CA50;
      goto LABEL_47;
    }
  }
  return v23;
}

uint64_t sub_1B0DD6BE0(sqlite3_stmt *a1, int a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 1) {
    return 0;
  }
  v27[9] = v4;
  v27[10] = v5;
  uint64_t v8 = 0;
  int v9 = *(char **)(a4 + 16);
  unint64_t v10 = a2;
  uint64_t v11 = v9;
  do
  {
    int v12 = *v11++;
    uint64_t result = 0;
    switch(v12)
    {
      case 0:
      case 5:
        break;
      case 1:
        if (!*(unsigned char *)(a3 + v8)) {
          goto LABEL_12;
        }
        uint64_t result = sqlite3_bind_int64(a1, v8 + 1, bswap64(*(void *)(v9 + 1)));
        uint64_t v11 = v9 + 9;
        break;
      case 2:
        if (*(unsigned char *)(a3 + v8))
        {
          uint64_t result = sqlite3_bind_double(a1, v8 + 1, COERCE_DOUBLE(bswap64(*(void *)(v9 + 1))));
          uint64_t v11 = v9 + 9;
        }
        else
        {
LABEL_12:
          uint64_t result = 0;
          uint64_t v11 = v9 + 9;
        }
        break;
      case 3:
        int v14 = *v11;
        if ((v14 & 0x80) != 0)
        {
          int v18 = v9[2];
          if (v9[2] < 0)
          {
            int v20 = v9[3];
            if (v20 < 0)
            {
              v27[0] = 0;
              unsigned int v22 = sub_1B0CAD43C(v11, v27);
              if (HIDWORD(v27[0])) {
                int v14 = -1;
              }
              else {
                int v14 = v27[0];
              }
              uint64_t v15 = v22;
            }
            else
            {
              int v14 = v20 & 0x7F | (v14 << 14) & 0x1FC07F | ((v18 & 0x7F) << 7);
              uint64_t v15 = 3;
            }
          }
          else
          {
            int v14 = ((v14 & 0x7F) << 7) | v18;
            uint64_t v15 = 2;
          }
        }
        else
        {
          uint64_t v15 = 1;
        }
        uint64_t v23 = &v11[v15];
        uint64_t v24 = v14;
        if (*(unsigned char *)(a3 + v8))
        {
          uint64_t result = sub_1B0CC3DB8((uint64_t *)a1, (int)v8 + 1, v23, v14, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL, 1u);
          uint64_t v11 = &v23[v24];
        }
        else
        {
          uint64_t result = 0;
          uint64_t v11 = &v23[v14];
        }
        break;
      default:
        int v16 = *v11;
        if ((v16 & 0x80) != 0)
        {
          int v19 = v9[2];
          if (v9[2] < 0)
          {
            int v21 = v9[3];
            if (v21 < 0)
            {
              v27[0] = 0;
              unsigned int v25 = sub_1B0CAD43C(v11, v27);
              if (HIDWORD(v27[0])) {
                int v16 = -1;
              }
              else {
                int v16 = v27[0];
              }
              uint64_t v17 = v25;
            }
            else
            {
              int v16 = v21 & 0x7F | (v16 << 14) & 0x1FC07F | ((v19 & 0x7F) << 7);
              uint64_t v17 = 3;
            }
          }
          else
          {
            int v16 = ((v16 & 0x7F) << 7) | v19;
            uint64_t v17 = 2;
          }
        }
        else
        {
          uint64_t v17 = 1;
        }
        char v26 = &v11[v17];
        if (*(unsigned char *)(a3 + v8))
        {
          if (v16 < 0) {
            uint64_t result = sub_1B0CE1978(98740);
          }
          else {
            uint64_t result = sub_1B0CC3DB8((uint64_t *)a1, (int)v8 + 1, v26, v16, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL, 0);
          }
        }
        else
        {
          uint64_t result = 0;
        }
        uint64_t v11 = &v26[v16];
        break;
    }
    if (++v8 >= v10) {
      break;
    }
    int v9 = v11;
  }
  while (!result);
  return result;
}

uint64_t sub_1B0DD6E6C(uint64_t result, sqlite3_stmt *a2, int iCol, _DWORD *a4)
{
  v21[1] = *MEMORY[0x1E4F143B8];
  if (*a4) {
    return result;
  }
  uint64_t v7 = result;
  uint64_t result = sqlite3_column_type(a2, iCol);
  int v8 = result;
  if (!*a4)
  {
    int v9 = *(_DWORD *)(v7 + 8);
    int v10 = *(_DWORD *)(v7 + 12);
    uint64_t v11 = v9;
    if (v9 < v10)
    {
      uint64_t result = *(void *)v7;
LABEL_5:
      *(_DWORD *)(v7 + 8) = v9 + 1;
      *(unsigned char *)(result + v11) = v8;
      goto LABEL_14;
    }
    if (!v10) {
      int v10 = 128;
    }
    uint64_t v12 = v10;
    do
    {
      uint64_t v13 = v12;
      v12 *= 2;
    }
    while (v12 <= v9);
    if (v13 >= 1073741696 && (uint64_t v12 = 2147483391, v9 >= 2147483391)
      || (uint64_t v14 = *(void *)v7, result = sqlite3_initialize(), result)
      || (uint64_t result = sub_1B0C8E1B8(v14, v12)) == 0)
    {
      *a4 = 7;
    }
    else
    {
      *(void *)uint64_t v7 = result;
      *(_DWORD *)(v7 + 12) = v12;
      if (!*a4)
      {
        int v9 = *(_DWORD *)(v7 + 8);
        uint64_t v11 = v9;
        goto LABEL_5;
      }
    }
  }
LABEL_14:
  if ((v8 - 1) > 1)
  {
    if ((v8 - 3) <= 1)
    {
      if (v8 == 4) {
        int v16 = (void *)sqlite3_column_blob(a2, iCol);
      }
      else {
        int v16 = (void *)sqlite3_column_text(a2, iCol);
      }
      uint64_t v17 = v16;
      uint64_t result = sqlite3_column_bytes(a2, iCol);
      size_t v18 = result;
      BOOL v20 = v8 == 4 && result == 0;
      if (v17 || v20)
      {
        sub_1B0DD7990(v7, result, a4);
        return sub_1B0DD7AB8(v7, v17, v18, a4);
      }
      else
      {
        *a4 = 7;
      }
    }
  }
  else
  {
    if (v8 == 1) {
      double v15 = COERCE_DOUBLE(sqlite3_column_int64(a2, iCol));
    }
    else {
      double v15 = sqlite3_column_double(a2, iCol);
    }
    v21[0] = bswap64(*(unint64_t *)&v15);
    return sub_1B0DD7AB8(v7, v21, 8uLL, a4);
  }
  return result;
}

uint64_t sub_1B0DD70AC(uint64_t a1, int a2, unsigned __int16 *a3, uint64_t a4, uint64_t a5)
{
  int __src = 0;
  unsigned int v62 = 0;
  size_t __n = 0;
  int v9 = *(unsigned __int8 **)(a4 + 16);
  int v11 = *(_DWORD *)(a1 + 8);
  int v10 = *(_DWORD *)(a1 + 12);
  uint64_t v12 = v11;
  int v58 = v11;
  if (v11 >= v10)
  {
    if (!v10) {
      int v10 = 128;
    }
    uint64_t v20 = v10;
    do
    {
      uint64_t v21 = v20;
      v20 *= 2;
    }
    while (v20 <= v11);
    if (v21 > 1073741695)
    {
      if (v11 > 2147483390) {
        goto LABEL_24;
      }
      uint64_t v20 = 2147483391;
    }
    uint64_t v22 = *(void *)a1;
    if (sqlite3_initialize()) {
      goto LABEL_24;
    }
    uint64_t v13 = sub_1B0C8E1B8(v22, v20);
    if (!v13) {
      goto LABEL_24;
    }
    *(void *)a1 = v13;
    *(_DWORD *)(a1 + 12) = v20;
    int v14 = *(_DWORD *)(a1 + 8);
    uint64_t v12 = v14;
  }
  else
  {
    uint64_t v13 = *(void *)a1;
    int v14 = v11;
  }
  *(_DWORD *)(a1 + 8) = v14 + 1;
  *(unsigned char *)(v13 + v12) = 23;
  char v15 = *(unsigned char *)(a4 + 1);
  int v16 = *(_DWORD *)(a1 + 8);
  int v17 = *(_DWORD *)(a1 + 12);
  uint64_t v18 = v16;
  if (v16 >= v17)
  {
    if (!v17) {
      int v17 = 128;
    }
    uint64_t v23 = v17;
    do
    {
      uint64_t v24 = v23;
      v23 *= 2;
    }
    while (v23 <= v16);
    if (v24 > 1073741695)
    {
      if (v16 > 2147483390) {
        goto LABEL_24;
      }
      uint64_t v23 = 2147483391;
    }
    uint64_t v25 = *(void *)a1;
    if (!sqlite3_initialize())
    {
      uint64_t v19 = sub_1B0C8E1B8(v25, v23);
      if (v19)
      {
        *(void *)a1 = v19;
        *(_DWORD *)(a1 + 12) = v23;
        int v16 = *(_DWORD *)(a1 + 8);
        uint64_t v18 = v16;
        goto LABEL_5;
      }
    }
LABEL_24:
    unsigned int v62 = 7;
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)a1;
LABEL_5:
  *(_DWORD *)(a1 + 8) = v16 + 1;
  *(unsigned char *)(v19 + v18) = v15;
LABEL_25:
  unint64_t v26 = 0;
  int v27 = 1;
  while (1)
  {
    if (!a3)
    {
      unint64_t v30 = 0;
      goto LABEL_35;
    }
    uint64_t v28 = *(void *)(*(void *)a3 + 24);
    if (!v28) {
      break;
    }
    xmmword_1EB21CA40(v28);
    uint64_t v29 = *(void *)(*(void *)a3 + 24);
    unint64_t v30 = a3[130];
    if (v29)
    {
      xmmword_1EB21CA50(v29);
      if (v26 >= v30) {
        goto LABEL_105;
      }
      goto LABEL_36;
    }
LABEL_35:
    if (v26 >= v30) {
      goto LABEL_105;
    }
LABEL_36:
    int v31 = *v9;
    if ((v31 - 1) < 2)
    {
      if (sqlite3_column_type((sqlite3_stmt *)a3, v26) != v31)
      {
        size_t v33 = 9;
LABEL_88:
        int v27 = 0;
        if (!a2) {
LABEL_26:
        }
          sub_1B0DD7AB8(a1, v9, v33, &v62);
LABEL_27:
        sub_1B0DD6E6C((uint64_t)&__src, (sqlite3_stmt *)a3, v26, &v62);
        goto LABEL_28;
      }
      double v32 = COERCE_DOUBLE(bswap64(*(void *)(v9 + 1)));
      if (v31 == 1)
      {
        size_t v33 = 9;
        if (*(void *)&v32 != sqlite3_column_int64((sqlite3_stmt *)a3, v26)) {
          goto LABEL_88;
        }
      }
      else
      {
        size_t v33 = 9;
        if (sqlite3_column_double((sqlite3_stmt *)a3, v26) != v32) {
          goto LABEL_88;
        }
      }
LABEL_90:
      BOOL v35 = 1;
      if (!a2) {
        goto LABEL_56;
      }
      goto LABEL_44;
    }
    if (v31 == 5)
    {
      int v34 = sqlite3_column_type((sqlite3_stmt *)a3, v26);
      size_t v33 = 1;
      BOOL v35 = v34 == 5;
      if (v34 == 5)
      {
        if (!a2) {
          goto LABEL_56;
        }
      }
      else
      {
        int v27 = 0;
        if (!a2) {
          goto LABEL_56;
        }
      }
      goto LABEL_44;
    }
    int v36 = v9[1];
    if ((v36 & 0x80) != 0)
    {
      int v41 = v9[2];
      if ((char)v9[2] < 0)
      {
        int v42 = (char)v9[3];
        if (v42 < 0)
        {
          unint64_t v63 = 0;
          int v37 = sub_1B0CAD43C((char *)v9 + 1, &v63);
          if (HIDWORD(v63)) {
            int v36 = -1;
          }
          else {
            int v36 = v63;
          }
        }
        else
        {
          int v36 = v42 & 0x7F | (v36 << 14) & 0x1FC07F | ((v41 & 0x7F) << 7);
          int v37 = 3;
        }
      }
      else
      {
        int v36 = ((v36 & 0x7F) << 7) | v41;
        int v37 = 2;
      }
    }
    else
    {
      int v37 = 1;
    }
    int v50 = v37 + 1;
    size_t v33 = (v37 + 1 + v36);
    if (sqlite3_column_type((sqlite3_stmt *)a3, v26) != v31 || v36 != sqlite3_column_bytes((sqlite3_stmt *)a3, v26)) {
      goto LABEL_88;
    }
    if (v36)
    {
      char v51 = sqlite3_column_blob((sqlite3_stmt *)a3, v26);
      if (memcmp(&v9[v50], v51, v36)) {
        goto LABEL_88;
      }
      goto LABEL_90;
    }
    BOOL v35 = 1;
    if (!a2)
    {
LABEL_56:
      if (!v35) {
        goto LABEL_26;
      }
      if (*(unsigned char *)(a5 + v26))
      {
        sub_1B0DD7AB8(a1, v9, v33, &v62);
        if (v62) {
          goto LABEL_28;
        }
        goto LABEL_59;
      }
      if (v62) {
        goto LABEL_28;
      }
      int v43 = *(_DWORD *)(a1 + 8);
      int v44 = *(_DWORD *)(a1 + 12);
      uint64_t v45 = v43;
      if (v43 < v44)
      {
        uint64_t v46 = *(void *)a1;
        goto LABEL_69;
      }
      if (!v44) {
        int v44 = 128;
      }
      uint64_t v52 = v44;
      do
      {
        uint64_t v53 = v52;
        v52 *= 2;
      }
      while (v52 <= v43);
      if (v53 > 1073741695)
      {
        if (v43 <= 2147483390)
        {
          uint64_t v52 = 2147483391;
          goto LABEL_101;
        }
LABEL_102:
        unsigned int v62 = 7;
        goto LABEL_28;
      }
LABEL_101:
      uint64_t v54 = *(void *)a1;
      if (sqlite3_initialize()) {
        goto LABEL_102;
      }
      uint64_t v46 = sub_1B0C8E1B8(v54, v52);
      if (!v46) {
        goto LABEL_102;
      }
      *(void *)a1 = v46;
      *(_DWORD *)(a1 + 12) = v52;
      int v43 = *(_DWORD *)(a1 + 8);
      uint64_t v45 = v43;
LABEL_69:
      *(_DWORD *)(a1 + 8) = v43 + 1;
      *(unsigned char *)(v46 + v45) = 0;
      if (v62) {
        goto LABEL_28;
      }
LABEL_59:
      int v38 = HIDWORD(__n);
      uint64_t v39 = (int)__n;
      if ((int)__n < SHIDWORD(__n))
      {
        unsigned int v40 = __src;
LABEL_61:
        LODWORD(__n) = v39 + 1;
        v40[v39] = 0;
        goto LABEL_28;
      }
      if (!HIDWORD(__n)) {
        int v38 = 128;
      }
      uint64_t v47 = v38;
      do
      {
        uint64_t v48 = v47;
        v47 *= 2;
      }
      while (v47 <= (int)__n);
      if (v48 > 1073741695)
      {
        if ((int)__n > 2147483390) {
          goto LABEL_102;
        }
        uint64_t v47 = 2147483391;
      }
      uint64_t v49 = __src;
      if (!sqlite3_initialize())
      {
        unsigned int v40 = (unsigned char *)sub_1B0C8E1B8((uint64_t)v49, v47);
        if (v40)
        {
          int __src = v40;
          HIDWORD(__n) = v47;
          goto LABEL_61;
        }
      }
      goto LABEL_102;
    }
LABEL_44:
    if (!v35 || *(unsigned char *)(a5 + v26)) {
      goto LABEL_27;
    }
    if (!v62) {
      goto LABEL_59;
    }
LABEL_28:
    v9 += (int)v33;
    ++v26;
  }
  if (v26 < a3[130]) {
    goto LABEL_36;
  }
LABEL_105:
  if (v27)
  {
    *(_DWORD *)(a1 + 8) = v58;
    int v55 = __src;
    if (!__src) {
      return v62;
    }
LABEL_109:
    uint64_t v56 = (void (**)(void *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v55);
      --qword_1EB220150;
      off_1EB21C9E8(v55);
      int v55 = (void *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v56 = (void (**)(void *))&xmmword_1EB21CA50;
        goto LABEL_114;
      }
    }
    else
    {
LABEL_114:
      (*v56)(v55);
    }
  }
  else
  {
    int v55 = __src;
    sub_1B0DD7AB8(a1, __src, __n, &v62);
    if (v55) {
      goto LABEL_109;
    }
  }
  return v62;
}

uint64_t sub_1B0DD76E4(uint64_t a1, int a2, uint64_t a3, int a4, unsigned char *a5)
{
  unsigned int v37 = 0;
  int v10 = *(_DWORD *)(a1 + 8);
  int v11 = *(_DWORD *)(a1 + 12);
  uint64_t v12 = v10;
  if (v10 >= v11)
  {
    if (!v11) {
      int v11 = 128;
    }
    uint64_t v19 = v11;
    do
    {
      uint64_t v20 = v19;
      v19 *= 2;
    }
    while (v19 <= v10);
    if (v20 > 1073741695)
    {
      if (v10 > 2147483390) {
        goto LABEL_25;
      }
      uint64_t v19 = 2147483391;
    }
    uint64_t v21 = *(void *)a1;
    if (sqlite3_initialize()) {
      goto LABEL_25;
    }
    uint64_t v13 = sub_1B0C8E1B8(v21, v19);
    if (!v13) {
      goto LABEL_25;
    }
    *(void *)a1 = v13;
    *(_DWORD *)(a1 + 12) = v19;
    int v10 = *(_DWORD *)(a1 + 8);
    uint64_t v12 = v10;
  }
  else
  {
    uint64_t v13 = *(void *)a1;
  }
  *(_DWORD *)(a1 + 8) = v10 + 1;
  *(unsigned char *)(v13 + v12) = 9;
  char v14 = *(unsigned char *)(a3 + 1);
  int v15 = *(_DWORD *)(a1 + 8);
  int v16 = *(_DWORD *)(a1 + 12);
  uint64_t v17 = v15;
  if (v15 < v16)
  {
    uint64_t v18 = *(void *)a1;
    goto LABEL_5;
  }
  if (!v16) {
    int v16 = 128;
  }
  uint64_t v22 = v16;
  do
  {
    uint64_t v23 = v22;
    v22 *= 2;
  }
  while (v22 <= v15);
  if (v23 > 1073741695)
  {
    if (v15 > 2147483390) {
      goto LABEL_25;
    }
    uint64_t v22 = 2147483391;
  }
  uint64_t v24 = *(void *)a1;
  if (sqlite3_initialize() || (uint64_t v18 = sub_1B0C8E1B8(v24, v22)) == 0)
  {
LABEL_25:
    unsigned int v37 = 7;
    if (!a2) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
  *(void *)a1 = v18;
  *(_DWORD *)(a1 + 12) = v22;
  int v15 = *(_DWORD *)(a1 + 8);
  uint64_t v17 = v15;
LABEL_5:
  *(_DWORD *)(a1 + 8) = v15 + 1;
  *(unsigned char *)(v18 + v17) = v14;
  if (a2)
  {
LABEL_26:
    if (a4 < 1) {
      return v37;
    }
    uint64_t v25 = *(char **)(a3 + 16);
    uint64_t v26 = a4;
    int v27 = v25;
    while (1)
    {
      int v29 = *v27++;
      int v28 = v29;
      if ((v29 - 1) < 2)
      {
        int v27 = v25 + 9;
      }
      else
      {
        if (v28) {
          BOOL v30 = v28 == 5;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          int v31 = *v27;
          if ((v31 & 0x80) != 0)
          {
            int v33 = v25[2];
            if (v25[2] < 0)
            {
              int v34 = v25[3];
              if (v34 < 0)
              {
                unint64_t v38 = 0;
                unsigned int v35 = sub_1B0CAD43C(v27, &v38);
                if (HIDWORD(v38)) {
                  int v31 = -1;
                }
                else {
                  int v31 = v38;
                }
                uint64_t v32 = v35;
              }
              else
              {
                int v31 = v34 & 0x7F | (v31 << 14) & 0x1FC07F | ((v33 & 0x7F) << 7);
                uint64_t v32 = 3;
              }
            }
            else
            {
              int v31 = ((v31 & 0x7F) << 7) | v33;
              uint64_t v32 = 2;
            }
          }
          else
          {
            uint64_t v32 = 1;
          }
          v27 += v32 + v31;
          if (!*a5) {
            goto LABEL_28;
          }
LABEL_38:
          sub_1B0DD7AB8(a1, v25, (v27 - v25), &v37);
          goto LABEL_28;
        }
      }
      if (*a5) {
        goto LABEL_38;
      }
LABEL_28:
      ++a5;
      uint64_t v25 = v27;
      if (!--v26) {
        return v37;
      }
    }
  }
LABEL_6:
  sub_1B0DD7AB8(a1, *(void **)(a3 + 16), *(unsigned int *)(a3 + 8), &v37);
  return v37;
}

uint64_t sub_1B0DD7990(uint64_t result, unsigned int a2, _DWORD *a3)
{
  if (*a3) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = *(int *)(result + 8);
  uint64_t v6 = *(int *)(result + 12);
  if (v5 + 9 > v6)
  {
    if (v6) {
      uint64_t v8 = *(int *)(result + 12);
    }
    else {
      uint64_t v8 = 128;
    }
    do
    {
      uint64_t v9 = v8;
      v8 *= 2;
    }
    while (v8 < v5 + 9);
    if (v9 >= 1073741696)
    {
      if ((int)v5 >= 2147483383) {
        goto LABEL_11;
      }
      uint64_t v8 = 2147483391;
    }
    uint64_t v10 = *(void *)result;
    uint64_t result = sqlite3_initialize();
    if (!result)
    {
      uint64_t result = sub_1B0C8E1B8(v10, v8);
      if (result)
      {
        *(void *)uint64_t v4 = result;
        *(_DWORD *)(v4 + 12) = v8;
        if (*a3) {
          return result;
        }
        uint64_t v5 = *(int *)(v4 + 8);
        goto LABEL_13;
      }
    }
LABEL_11:
    *a3 = 7;
    return result;
  }
  uint64_t result = *(void *)result;
LABEL_13:
  result += v5;
  if (a2 > 0x7F)
  {
    if (a2 >> 14)
    {
      uint64_t result = sub_1B0D1DC5C((int8x8_t *)result, (int)a2);
      int v11 = result;
    }
    else
    {
      *(unsigned char *)uint64_t result = (a2 >> 7) | 0x80;
      *(unsigned char *)(result + 1) = a2 & 0x7F;
      int v11 = 2;
    }
  }
  else
  {
    *(unsigned char *)uint64_t result = a2;
    int v11 = 1;
  }
  *(_DWORD *)(v4 + 8) += v11;
  return result;
}

uint64_t sub_1B0DD7AB8(uint64_t result, void *__src, size_t __n, _DWORD *a4)
{
  if ((int)__n >= 1 && !*a4)
  {
    int v5 = __n;
    uint64_t v7 = result;
    size_t v8 = __n;
    uint64_t v9 = *(int *)(result + 8);
    uint64_t v10 = *(int *)(result + 12);
    uint64_t v11 = v9 + __n;
    if (v11 <= v10)
    {
      uint64_t result = *(void *)result;
LABEL_13:
      uint64_t result = (uint64_t)memcpy((void *)(result + v9), __src, v8);
      *(_DWORD *)(v7 + 8) += v5;
      return result;
    }
    if (v10) {
      uint64_t v12 = *(int *)(result + 12);
    }
    else {
      uint64_t v12 = 128;
    }
    do
    {
      uint64_t v13 = v12;
      v12 *= 2;
    }
    while (v12 < v11);
    if (v13 >= 1073741696 && (uint64_t v12 = 2147483391, v11 > 2147483391)
      || (uint64_t v14 = *(void *)result, result = sqlite3_initialize(), result)
      || (uint64_t result = sub_1B0C8E1B8(v14, v12)) == 0)
    {
      *a4 = 7;
      return result;
    }
    *(void *)uint64_t v7 = result;
    *(_DWORD *)(v7 + 12) = v12;
    if (!*a4)
    {
      uint64_t v9 = *(int *)(v7 + 8);
      goto LABEL_13;
    }
  }
  return result;
}

uint64_t sub_1B0DD7BBC(uint64_t result, char *__s, _DWORD *a3)
{
  uint64_t v5 = result;
  if (__s)
  {
    uint64_t result = strlen(__s);
    unsigned int v6 = result & 0x3FFFFFFF;
    if (*a3) {
      return result;
    }
  }
  else
  {
    unsigned int v6 = 0;
    if (*a3) {
      return result;
    }
  }
  uint64_t v7 = *(int *)(v5 + 8);
  uint64_t v8 = *(int *)(v5 + 12);
  uint64_t v9 = v7 + v6 + 1;
  if (v9 <= v8)
  {
    uint64_t result = *(void *)v5;
LABEL_15:
    uint64_t result = (uint64_t)memcpy((void *)(result + v7), __s, v6);
    unint64_t v13 = *(int *)(v5 + 8) + (unint64_t)v6;
    *(_DWORD *)(v5 + 8) = v13;
    *(unsigned char *)(*(void *)v5 + v13) = 0;
    return result;
  }
  if (v8) {
    uint64_t v10 = *(int *)(v5 + 12);
  }
  else {
    uint64_t v10 = 128;
  }
  do
  {
    uint64_t v11 = v10;
    v10 *= 2;
  }
  while (v10 < v9);
  if (v11 >= 1073741696 && (uint64_t v10 = 2147483391, v9 > 2147483391)
    || (uint64_t v12 = *(void *)v5, result = sqlite3_initialize(), result)
    || (uint64_t result = sub_1B0C8E1B8(v12, v10)) == 0)
  {
    *a3 = 7;
    return result;
  }
  *(void *)uint64_t v5 = result;
  *(_DWORD *)(v5 + 12) = v10;
  if (!*a3)
  {
    uint64_t v7 = *(int *)(v5 + 8);
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1B0DD7CD4(uint64_t result, char *__s, _DWORD *a3)
{
  uint64_t v4 = __s;
  uint64_t v5 = result;
  if (__s)
  {
    uint64_t result = strlen(__s);
    uint64_t v6 = 2 * (result & 0x3FFFFFFF) + 4;
    if (*a3) {
      return result;
    }
  }
  else
  {
    uint64_t v6 = 4;
    if (*a3) {
      return result;
    }
  }
  uint64_t v7 = *(int *)(v5 + 8);
  uint64_t v8 = *(int *)(v5 + 12);
  uint64_t v9 = v6 + v7;
  if (v9 <= v8)
  {
    uint64_t result = *(void *)v5;
LABEL_15:
    unint64_t v13 = (unsigned char *)(result + v7);
    *(unsigned char *)(result + v7) = 34;
    while (1)
    {
      int v14 = *v4;
      if (v14 == 34)
      {
        v13[1] = 34;
        v13 += 2;
        LOBYTE(v14) = *v4;
      }
      else
      {
        if (!*v4)
        {
          v13[1] = 34;
          uint64_t v15 = *(void *)v5;
          uint64_t v16 = (uint64_t)&v13[-*(void *)v5 + 2];
          *(_DWORD *)(v5 + 8) = v16;
          *(unsigned char *)(v15 + (int)v16) = 0;
          return result;
        }
        ++v13;
      }
      ++v4;
      unsigned char *v13 = v14;
    }
  }
  if (v8) {
    uint64_t v10 = *(int *)(v5 + 12);
  }
  else {
    uint64_t v10 = 128;
  }
  do
  {
    uint64_t v11 = v10;
    v10 *= 2;
  }
  while (v10 < v9);
  if (v11 >= 1073741696 && (uint64_t v10 = 2147483391, v9 > 2147483391)
    || (uint64_t v12 = *(void *)v5, result = sqlite3_initialize(), result)
    || (uint64_t result = sub_1B0C8E1B8(v12, v10)) == 0)
  {
    *a3 = 7;
    return result;
  }
  *(void *)uint64_t v5 = result;
  *(_DWORD *)(v5 + 12) = v10;
  if (!*a3)
  {
    uint64_t v7 = *(int *)(v5 + 8);
    goto LABEL_15;
  }
  return result;
}

char *sub_1B0DD7E1C(char *result, _DWORD *a2, char *a3, ...)
{
  va_start(va, a3);
  if (!*a2)
  {
    uint64_t v4 = (uint64_t)result;
    uint64_t result = sqlite3_vmprintf(a3, va);
    if (result)
    {
      uint64_t v5 = result;
      sub_1B0DD7BBC(v4, result, a2);
      uint64_t v6 = (uint64_t (**)(char *))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        return (char *)(*v6)(v5);
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
      --qword_1EB220150;
      uint64_t result = (char *)off_1EB21C9E8(v5);
      uint64_t v5 = (char *)xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v6 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
        return (char *)(*v6)(v5);
      }
    }
    else
    {
      *a2 = 7;
    }
  }
  return result;
}

uint64_t sub_1B0DD7F10(uint64_t a1, int a2)
{
  if (*(void *)(a1 + 48) && !*(_DWORD *)(a1 + 64))
  {
    uint64_t result = 0;
    int v5 = *(_DWORD *)(a1 + 24);
    while (1)
    {
      uint64_t v8 = *(unsigned int *)(a1 + 8);
      if ((int)v8 + a2 < v5 || result != 0) {
        return result;
      }
      int v10 = dword_1E9B51ED8;
      int v19 = dword_1E9B51ED8;
      if (*(_DWORD *)a1)
      {
        LODWORD(v11) = *(_DWORD *)(a1 + 40);
      }
      else
      {
        LODWORD(v11) = *(_DWORD *)(a1 + 40);
        if (*(void *)(a1 + 48)) {
          BOOL v12 = (int)v8 < dword_1E9B51ED8;
        }
        else {
          BOOL v12 = 1;
        }
        if (!v12)
        {
          size_t v11 = (v11 - v8);
          if ((int)v11 >= 1)
          {
            memmove(*(void **)(a1 + 32), (const void *)(*(void *)(a1 + 32) + v8), v11);
            LODWORD(v11) = *(_DWORD *)(a1 + 40) - *(_DWORD *)(a1 + 8);
            int v10 = v19;
          }
          *(_DWORD *)(a1 + 40) = v11;
          *(_DWORD *)(a1 + 8) = 0;
          *(_DWORD *)(a1 + 24) = v11;
        }
      }
      uint64_t v14 = (int)v11;
      uint64_t v15 = (int)v11 + (uint64_t)v10;
      uint64_t v16 = *(int *)(a1 + 44);
      if (v15 <= v16)
      {
        uint64_t v13 = *(void *)(a1 + 32);
      }
      else
      {
        if (v16) {
          uint64_t v17 = *(int *)(a1 + 44);
        }
        else {
          uint64_t v17 = 128;
        }
        do
        {
          uint64_t v18 = v17;
          v17 *= 2;
        }
        while (v17 < v15);
        if (v18 >= 1073741696 && (uint64_t v17 = 2147483391, v15 > 2147483391)
          || (uint64_t v6 = *(void *)(a1 + 32), sqlite3_initialize())
          || (uint64_t v13 = sub_1B0C8E1B8(v6, v17)) == 0)
        {
          uint64_t result = 7;
          goto LABEL_8;
        }
        *(void *)(a1 + 32) = v13;
        *(_DWORD *)(a1 + 44) = v17;
        uint64_t v14 = *(int *)(a1 + 40);
      }
      uint64_t result = (*(uint64_t (**)(void, uint64_t, int *))(a1 + 48))(*(void *)(a1 + 56), v13 + v14, &v19);
      if (!v19)
      {
        *(_DWORD *)(a1 + 64) = 1;
        *(void *)(a1 + 16) = *(void *)(a1 + 32);
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 40);
        return result;
      }
      *(_DWORD *)(a1 + 40) += v19;
LABEL_8:
      int v7 = *(_DWORD *)(a1 + 64);
      *(void *)(a1 + 16) = *(void *)(a1 + 32);
      int v5 = *(_DWORD *)(a1 + 40);
      *(_DWORD *)(a1 + 24) = v5;
      if (v7) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1B0DD80DC(uint64_t a1, int a2, int *a3)
{
  if (a2 < 1)
  {
    uint64_t result = 0;
    int v6 = 0;
  }
  else
  {
    int v6 = 0;
    int v7 = 1;
    do
    {
      uint64_t result = sub_1B0DD7F10(a1, v6 + 10);
      if (result) {
        break;
      }
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v10 = *(int *)(a1 + 8);
      uint64_t v11 = v6 + 1;
      int v12 = *(unsigned __int8 *)(v9 + v10 + v6);
      if ((v12 - 3) > 1)
      {
        uint64_t result = 0;
        if ((v12 - 1) >= 2) {
          ++v6;
        }
        else {
          v6 += 9;
        }
      }
      else
      {
        uint64_t v13 = (char *)(v9 + v10 + v11);
        int v14 = *v13;
        if ((v14 & 0x80) != 0)
        {
          int v16 = v13[1];
          if (v13[1] < 0)
          {
            int v17 = v13[2];
            if (v17 < 0)
            {
              unint64_t v19 = 0;
              int v15 = sub_1B0CAD43C(v13, &v19);
              if (HIDWORD(v19)) {
                int v14 = -1;
              }
              else {
                int v14 = v19;
              }
            }
            else
            {
              int v14 = v17 & 0x7F | (v14 << 14) & 0x1FC07F | ((v16 & 0x7F) << 7);
              int v15 = 3;
            }
          }
          else
          {
            int v14 = ((v14 & 0x7F) << 7) | v16;
            int v15 = 2;
          }
        }
        else
        {
          int v15 = 1;
        }
        int v6 = v14 + v11 + v15;
        uint64_t result = sub_1B0DD7F10(a1, v6);
        if (result) {
          break;
        }
      }
    }
    while (v7++ < a2);
  }
  *a3 = v6;
  return result;
}

uint64_t sub_1B0DD8234(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  if (a5) {
    *a5 = 1;
  }
  if (a2 < 1) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v10 = a2;
  while (1)
  {
    if (a3 && !*(unsigned char *)(a3 + v9)) {
      goto LABEL_16;
    }
    uint64_t v11 = sub_1B0DD7F10(a1, 9);
    if (v11) {
      return v11;
    }
    uint64_t v12 = *(int *)(a1 + 8);
    if ((int)v12 >= *(_DWORD *)(a1 + 24))
    {
      int v29 = 233702;
      goto LABEL_59;
    }
    uint64_t v13 = *(void *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v12 + 1;
    unsigned int v14 = *(unsigned __int8 *)(v13 + v12);
    if (!*(unsigned char *)(v13 + v12))
    {
LABEL_16:
      uint64_t v20 = 0;
      goto LABEL_42;
    }
    if (a5) {
      *a5 = 0;
    }
    uint64_t v15 = sub_1B0C7FC94(64);
    if (!v15)
    {
      *(void *)(a4 + 8 * v9) = 0;
      return 7;
    }
    *(_OWORD *)(v15 + 32) = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
    *(_OWORD *)uint64_t v15 = 0u;
    *(_OWORD *)(v15 + 16) = 0u;
    *(void *)(v15 + 24) = 0;
    *(void *)(a4 + 8 * v9) = v15;
    *(_WORD *)(v15 + 20) = 1;
    uint64_t v16 = *(int *)(a1 + 8);
    int v17 = (char *)(*(void *)(a1 + 16) + v16);
    if (v14 - 3 > 1)
    {
      uint64_t v20 = 0;
      if (v14 <= 2) {
        goto LABEL_28;
      }
      goto LABEL_42;
    }
    unsigned int v18 = *v17;
    if ((v18 & 0x80) != 0)
    {
      int v21 = v17[1];
      if (v17[1] < 0)
      {
        int v22 = v17[2];
        if (v22 < 0)
        {
          unint64_t v34 = 0;
          int v19 = sub_1B0CAD43C(v17, &v34);
          if (HIDWORD(v34)) {
            unsigned int v18 = -1;
          }
          else {
            unsigned int v18 = v34;
          }
        }
        else
        {
          unsigned int v18 = v22 & 0x7F | (v18 << 14) & 0x1FC07F | ((v21 & 0x7F) << 7);
          int v19 = 3;
        }
      }
      else
      {
        unsigned int v18 = ((v18 & 0x7F) << 7) | v21;
        int v19 = 2;
      }
    }
    else
    {
      int v19 = 1;
    }
    *(_DWORD *)(a1 + 8) = v19 + v16;
    uint64_t v20 = sub_1B0DD7F10(a1, v18);
    if (v20)
    {
      if (v14 <= 2) {
        goto LABEL_28;
      }
      goto LABEL_42;
    }
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v26 = *(int *)(a1 + 8);
      if ((int)v18 <= *(_DWORD *)(a1 + 24) - (int)v26) {
        break;
      }
    }
    uint64_t v20 = sub_1B0D1045C(233722);
    if (v14 <= 2) {
      goto LABEL_28;
    }
LABEL_42:
    if (++v9 >= v10 || v20) {
      return v20;
    }
  }
  int __s = *(char **)(a1 + 16);
  uint64_t v33 = *(void *)(a4 + 8 * v9);
  if (sqlite3_initialize() || (int v27 = (char *)sub_1B0C7FC94(v18 + 1)) == 0)
  {
    uint64_t v20 = 7;
  }
  else
  {
    int v28 = &__s[v26];
    __sa = v27;
    memcpy(v27, v28, v18);
    if (v33) {
      sub_1B0C79BBC(v33, __sa, v18, v14 == 3, (uint64_t (*)(uint64_t))sqlite3_free);
    }
    uint64_t v20 = 0;
  }
  *(_DWORD *)(a1 + 8) += v18;
  if (v14 > 2) {
    goto LABEL_42;
  }
LABEL_28:
  if (*(_DWORD *)(a1 + 24) - *(_DWORD *)(a1 + 8) > 7)
  {
    uint64_t v23 = bswap64(*(void *)v17);
    if (v14 == 1)
    {
      uint64_t v24 = *(void *)(a4 + 8 * v9);
      if ((*(_WORD *)(v24 + 20) & 0x9000) != 0)
      {
        sub_1B0D18980(v24, v23);
      }
      else
      {
        *(void *)uint64_t v24 = v23;
        *(_WORD *)(v24 + 20) = 4;
      }
    }
    else
    {
      uint64_t v25 = *(void *)(a4 + 8 * v9);
      if ((*(_WORD *)(v25 + 20) & 0x9000) != 0) {
        sub_1B0D18138(*(int **)(a4 + 8 * v9));
      }
      else {
        *(_WORD *)(v25 + 20) = 1;
      }
      *(void *)uint64_t v25 = v23;
      *(_WORD *)(v25 + 20) = 8;
    }
    *(_DWORD *)(a1 + 8) += 8;
    goto LABEL_42;
  }
  int v29 = 233732;
LABEL_59:

  return sub_1B0D1045C(v29);
}

uint64_t sub_1B0DD85CC(uint64_t a1, _DWORD *a2)
{
  uint64_t result = sub_1B0DD7F10(a1, 9);
  if (result)
  {
    int v5 = 0;
    goto LABEL_3;
  }
  int v6 = (char *)(*(void *)(a1 + 16) + *(int *)(a1 + 8));
  unsigned int v7 = *v6;
  if ((v7 & 0x80) == 0)
  {
    int v5 = 1;
    goto LABEL_8;
  }
  int v8 = v6[1];
  if ((v6[1] & 0x80000000) == 0)
  {
    unsigned int v7 = ((v7 & 0x7F) << 7) | v8;
    int v5 = 2;
    goto LABEL_8;
  }
  int v12 = v6[2];
  if (v12 < 0)
  {
    unint64_t v13 = 0;
    int v5 = sub_1B0CAD43C(v6, &v13);
    unsigned int v7 = v13;
    if (HIDWORD(v13))
    {
LABEL_20:
      uint64_t result = sub_1B0D1045C(233780);
      goto LABEL_3;
    }
  }
  else
  {
    unsigned int v7 = v12 & 0x7F | (v7 << 14) & 0x1FC07F | ((v8 & 0x7F) << 7);
    int v5 = 3;
  }
  if (v7 > 0x10000) {
    goto LABEL_20;
  }
LABEL_8:
  v5 += v7;
LABEL_9:
  while (1)
  {
    uint64_t result = sub_1B0DD7F10(a1, v5 + 100);
    if (result) {
      break;
    }
    uint64_t v9 = *(int *)(a1 + 8);
    uint64_t v10 = *(int *)(a1 + 24);
    if ((int)v9 + v5 < (int)v10)
    {
      uint64_t v11 = v9 + v5;
      while (*(unsigned char *)(*(void *)(a1 + 16) + (int)v9 + v5))
      {
        ++v5;
        if (++v11 >= v10) {
          goto LABEL_9;
        }
      }
      uint64_t result = 0;
      break;
    }
  }
LABEL_3:
  *a2 = v5 + 1;
  return result;
}

uint64_t sub_1B0DD86FC(uint64_t result, sqlite3_value *a2, _DWORD *a3)
{
  if (!*a3)
  {
    uint64_t v5 = result;
    uint64_t v13 = 0;
    uint64_t result = sub_1B0DD5C38(0, a2, &v13);
    if (result)
    {
LABEL_3:
      *a3 = result;
      return result;
    }
    uint64_t v6 = *(int *)(v5 + 8);
    uint64_t v7 = *(int *)(v5 + 12);
    uint64_t v8 = v13 + v6;
    if (v13 + v6 <= v7)
    {
      uint64_t v12 = *(void *)v5;
    }
    else
    {
      if (v7) {
        uint64_t v9 = *(int *)(v5 + 12);
      }
      else {
        uint64_t v9 = 128;
      }
      do
      {
        uint64_t v10 = v9;
        v9 *= 2;
      }
      while (v9 < v8);
      if (v10 >= 1073741696 && (uint64_t v9 = 2147483391, v8 > 2147483391)
        || (uint64_t v11 = *(void *)v5, sqlite3_initialize())
        || (uint64_t v12 = sub_1B0C8E1B8(v11, v9)) == 0)
      {
        uint64_t result = 7;
        goto LABEL_3;
      }
      *(void *)uint64_t v5 = v12;
      *(_DWORD *)(v5 + 12) = v9;
      uint64_t v6 = *(int *)(v5 + 8);
    }
    uint64_t result = sub_1B0DD5C38(v12 + v6, a2, 0);
    *(_DWORD *)(v5 + 8) += v13;
  }
  return result;
}

uint64_t sub_1B0DD8804(sqlite3 *a1, int a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  int v6 = *(_DWORD *)(a4 + 96);
  if (v6)
  {
    uint64_t v11 = (void *)(a4 + 88);
    uint64_t v12 = qword_1EB21FB68 + 1176;
    while (1)
    {
      uint64_t v13 = *(void *)(a4 + 88);
      *uint64_t v11 = 0;
      v11[1] = 0;
      int v14 = *(_DWORD *)(a4 + 80);
      if (!sqlite3_initialize()) {
        break;
      }
      uint64_t v15 = 7;
      if (!v13) {
        goto LABEL_32;
      }
LABEL_26:
      uint64_t v26 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        uint64_t v27 = v12[54];
        if (v27) {
          xmmword_1EB21CA40(v27);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v13);
        --qword_1EB220150;
        off_1EB21C9E8(v13);
        uint64_t v13 = v12[54];
        if (!v13) {
          goto LABEL_32;
        }
        uint64_t v26 = &xmmword_1EB21CA50;
      }
      (*v26)(v13);
LABEL_32:
      if (v15) {
        return v15;
      }
      int v28 = *(_DWORD *)(a4 + 96);
      if (v28 >= v6) {
        *(_DWORD *)(a4 + 76) = 0;
      }
      int v6 = v28;
      if (!v28) {
        return 0;
      }
    }
    uint64_t v16 = sub_1B0C7FC94(152);
    if (!v16)
    {
      uint64_t v15 = 7;
      goto LABEL_25;
    }
    uint64_t v17 = v16;
    *(_OWORD *)(v16 + 64) = 0u;
    *(_OWORD *)(v16 + 80) = 0u;
    *(void *)(v16 + 144) = 0;
    *(_OWORD *)(v16 + 112) = 0u;
    *(_OWORD *)(v16 + 128) = 0u;
    *(_OWORD *)(v16 + 96) = 0u;
    *(_OWORD *)(v16 + 32) = 0u;
    *(_OWORD *)(v16 + 48) = 0u;
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(void *)(v16 + 16) = v13;
    *(_DWORD *)(v16 + 24) = v6;
    *(void *)(v16 + 48) = 0;
    *(void *)(v16 + 56) = 0;
    *(_DWORD *)(v16 + 64) = 1;
    *(_DWORD *)(v16 + 96) = 1;
    uint64_t v18 = *(int *)(a4 + 32);
    size_t v19 = 16 * v18;
    *(_DWORD *)(v16 + 88) = a2;
    *(_DWORD *)(v16 + 92) = v14;
    *(_DWORD *)(v16 + 120) = v18;
    *(void *)(v16 + 136) = *(void *)(a4 + 48);
    uint64_t v20 = *(int *)(v16 + 84);
    uint64_t v21 = 16 * v18 + *(int *)(v16 + 80);
    *(void *)(v16 + 112) = a3;
    if (v21 <= v20)
    {
      uint64_t v24 = *(void **)(v16 + 72);
    }
    else
    {
      if (v20) {
        uint64_t v22 = v20;
      }
      else {
        uint64_t v22 = 128;
      }
      do
      {
        uint64_t v23 = v22;
        v22 *= 2;
      }
      while (v22 < v21);
      if (v23 >= 1073741696 && (uint64_t v22 = 2147483391, v21 > 2147483391)
        || (uint64_t v30 = *(void *)(v16 + 72), sqlite3_initialize())
        || (uint64_t v24 = (void *)sub_1B0C8E1B8(v30, v22)) == 0)
      {
        *(void *)(v17 + 144) = *(void *)(v17 + 72);
        uint64_t v15 = 7;
LABEL_23:
        sqlite3changeset_finalize(v17);
LABEL_25:
        uint64_t v12 = &qword_1EB21FB68[147];
        if (!v13) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      *(void *)(v17 + 72) = v24;
      *(_DWORD *)(v17 + 84) = v22;
    }
    *(void *)(v17 + 144) = v24;
    bzero(v24, v19);
    while (sub_1B0CFE634(v17, 0, 0, 0) == 100)
    {
      uint64_t v25 = sub_1B0DD9224(a1, v17, a4, a5, a6);
      if (v25)
      {
        uint64_t v15 = v25;
        goto LABEL_23;
      }
    }
    uint64_t v15 = sqlite3changeset_finalize(v17);
    goto LABEL_25;
  }
  return 0;
}

uint64_t sub_1B0DD8AA8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 64);
  if (v2)
  {
    do
    {
      uint64_t v3 = *(void *)(v2 + 16);
      sqlite3_finalize(*(sqlite3_stmt **)v2);
      uint64_t v4 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v2);
        --qword_1EB220150;
        uint64_t result = off_1EB21C9E8(v2);
        uint64_t v2 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_4;
        }
        uint64_t v4 = &xmmword_1EB21CA50;
      }
      uint64_t result = (*v4)(v2);
LABEL_4:
      uint64_t v2 = v3;
    }
    while (v3);
  }
  *(void *)(v1 + 64) = 0;
  uint64_t v5 = *(void *)(v1 + 56);
  if (v5)
  {
    int v6 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_16:
      uint64_t result = (*v6)(v5);
      goto LABEL_17;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
    --qword_1EB220150;
    uint64_t result = off_1EB21C9E8(v5);
    uint64_t v5 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      int v6 = &xmmword_1EB21CA50;
      goto LABEL_16;
    }
  }
LABEL_17:
  *(void *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_1B0DD8BFC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B0DD6760(a1, *(unsigned __int8 *)(a2 + 122), (uint64_t)"main", "sqlite_stat1", *(_DWORD *)(a2 + 124), *(_DWORD *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), (void *)(a2 + 24));
  if (!result)
  {
    uint64_t result = sub_1B0C7EAC0(a1, "INSERT INTO main.sqlite_stat1 VALUES(?1, CASE WHEN length(?2)=0 AND typeof(?2)='blob' THEN NULL ELSE ?2 END, ?3)", 0xFFFFFFFFLL, 128, 0, (void *)(a2 + 16), 0, v5);
    if (!result)
    {
      return sub_1B0C7EAC0(a1, "DELETE FROM main.sqlite_stat1 WHERE tbl=?1 AND idx IS CASE WHEN length(?2)=0 AND typeof(?2)='blob' THEN NULL ELSE ?2 END AND (?4 OR stat IS ?3)", 0xFFFFFFFFLL, 128, 0, (void *)(a2 + 8), 0, v6);
    }
  }
  return result;
}

uint64_t sub_1B0DD8CC0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  unsigned int v20 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  sub_1B0DD7BBC((uint64_t)&v18, "DELETE FROM main.", &v20);
  sub_1B0DD7CD4((uint64_t)&v18, a2, &v20);
  sub_1B0DD7BBC((uint64_t)&v18, " WHERE ", &v20);
  int v8 = *(_DWORD *)(a3 + 32);
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    uint64_t v6 = &byte_1B0DE9952;
    do
    {
      while (*(unsigned char *)(*(void *)(a3 + 48) + v9))
      {
        ++v10;
        sub_1B0DD7BBC((uint64_t)&v18, v6, &v20);
        sub_1B0DD7CD4((uint64_t)&v18, *(char **)(*(void *)(a3 + 40) + 8 * v9), &v20);
        sub_1B0DD7BBC((uint64_t)&v18, " = ?", &v20);
        sqlite3_snprintf(23, __s, "%d", ++v9);
        sub_1B0DD7BBC((uint64_t)&v18, __s, &v20);
        int v8 = *(_DWORD *)(a3 + 32);
        uint64_t v6 = " AND ";
        if (v9 >= v8) {
          goto LABEL_6;
        }
      }
      ++v9;
    }
    while (v9 < v8);
LABEL_6:
    if (v10 < v8)
    {
      sub_1B0DD7BBC((uint64_t)&v18, " AND (?", &v20);
      sqlite3_snprintf(23, __s, "%d", *(_DWORD *)(a3 + 32) + 1);
      sub_1B0DD7BBC((uint64_t)&v18, __s, &v20);
      sub_1B0DD7BBC((uint64_t)&v18, " OR ", &v20);
      int v11 = *(_DWORD *)(a3 + 32);
      if (v11 >= 1)
      {
        uint64_t v12 = 0;
        uint64_t v13 = &byte_1B0DE9952;
        do
        {
          while (!*(unsigned char *)(*(void *)(a3 + 48) + v12))
          {
            sub_1B0DD7BBC((uint64_t)&v18, v13, &v20);
            sub_1B0DD7CD4((uint64_t)&v18, *(char **)(*(void *)(a3 + 40) + 8 * v12), &v20);
            sub_1B0DD7BBC((uint64_t)&v18, " IS ?", &v20);
            sqlite3_snprintf(23, __s, "%d", ++v12);
            sub_1B0DD7BBC((uint64_t)&v18, __s, &v20);
            int v11 = *(_DWORD *)(a3 + 32);
            uint64_t v13 = "AND ";
            if (v12 >= v11) {
              goto LABEL_14;
            }
          }
          ++v12;
        }
        while (v12 < v11);
      }
LABEL_14:
      sub_1B0DD7BBC((uint64_t)&v18, ")", &v20);
    }
  }
  uint64_t v14 = v20;
  uint64_t v15 = v18;
  if (!v20) {
    uint64_t v14 = sub_1B0C7EAC0(a1, v18, v19, 128, 0, (void *)(a3 + 8), 0, v7);
  }
  if (v15)
  {
    uint64_t v16 = (void (**)(unsigned __int8 *, char *))&off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_23:
      (*v16)(v15, v6);
      return v14;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v15);
    --qword_1EB220150;
    off_1EB21C9E8(v15);
    uint64_t v15 = (unsigned __int8 *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v16 = (void (**)(unsigned __int8 *, char *))&xmmword_1EB21CA50;
      goto LABEL_23;
    }
  }
  return v14;
}

uint64_t sub_1B0DD9020(uint64_t a1, char *a2, uint64_t a3)
{
  unsigned int v15 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_1B0DD7BBC((uint64_t)&v13, "INSERT INTO main.", &v15);
  sub_1B0DD7CD4((uint64_t)&v13, a2, &v15);
  sub_1B0DD7BBC((uint64_t)&v13, "(", &v15);
  if (*(int *)(a3 + 32) >= 1)
  {
    sub_1B0DD7CD4((uint64_t)&v13, **(char ***)(a3 + 40), &v15);
    if (*(int *)(a3 + 32) >= 2)
    {
      uint64_t v6 = 1;
      do
      {
        sub_1B0DD7BBC((uint64_t)&v13, ", ", &v15);
        sub_1B0DD7CD4((uint64_t)&v13, *(char **)(*(void *)(a3 + 40) + 8 * v6++), &v15);
      }
      while (v6 < *(int *)(a3 + 32));
    }
  }
  sub_1B0DD7BBC((uint64_t)&v13, ") VALUES(?", &v15);
  if (*(int *)(a3 + 32) > 1)
  {
    int v7 = 1;
    do
    {
      sub_1B0DD7BBC((uint64_t)&v13, ", ?", &v15);
      ++v7;
    }
    while (v7 < *(_DWORD *)(a3 + 32));
  }
  sub_1B0DD7BBC((uint64_t)&v13, ")", &v15);
  uint64_t v9 = v15;
  int v10 = v13;
  if (v15)
  {
    if (!v13) {
      return v9;
    }
  }
  else
  {
    uint64_t v9 = sub_1B0C7EAC0(a1, v13, v14, 128, 0, (void *)(a3 + 16), 0, v8);
    if (!v10) {
      return v9;
    }
  }
  int v11 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_17:
    (*v11)(v10);
    return v9;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
  --qword_1EB220150;
  off_1EB21C9E8(v10);
  int v10 = (unsigned __int8 *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    int v11 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
    goto LABEL_17;
  }
  return v9;
}

uint64_t sub_1B0DD9224(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v22 = 0;
  uint64_t v10 = sub_1B0DD945C(a2, a3, a4, a5, (_DWORD *)&v22 + 1, &v22);
  if (!v10)
  {
    if (v22) {
      return sub_1B0DD945C(a2, a3, a4, a5, 0, 0);
    }
    if (!HIDWORD(v22)) {
      return 0;
    }
    uint64_t v10 = sqlite3_exec(a1, "SAVEPOINT replace_op", 0, 0, 0);
    if (!v10)
    {
      unint64_t v13 = *(unsigned int *)(a3 + 32);
      if ((int)v13 <= 0)
      {
        sqlite3_bind_int64(*(sqlite3_stmt **)(a3 + 8), v13 + 1, 1);
        goto LABEL_32;
      }
      uint64_t v21 = *(sqlite3_stmt **)(a3 + 8);
      uint64_t v14 = 0;
      uint64_t v15 = *(void *)(a3 + 48);
      while (1)
      {
        if (v15 && !*(unsigned char *)(v15 + v14))
        {
          uint64_t v10 = 0;
        }
        else
        {
          int v16 = *(_DWORD *)(a2 + 124);
          BOOL v17 = v16 == 23 || v16 == 18;
          if (!v17
            || (v14 & 0x80000000) != 0
            || (int v18 = *(_DWORD *)(a2 + 120), v18 <= (int)v14)
            || (uint64_t v19 = *(void *)(*(void *)(a2 + 144) + 8 * ((int)v14 + v18))) == 0)
          {
            uint64_t v10 = sub_1B0D1045C(234851);
            BOOL v20 = 0;
            goto LABEL_29;
          }
          if (byte_1B0DE186A[*(_WORD *)(v19 + 20) & 0x3F] - 3 <= 1 && !*(void *)(v19 + 8))
          {
            BOOL v20 = 0;
            uint64_t v10 = 7;
LABEL_29:
            sqlite3_bind_int64(*(sqlite3_stmt **)(a3 + 8), *(_DWORD *)(a3 + 32) + 1, 1);
            if (v20)
            {
LABEL_32:
              sqlite3_step(*(sqlite3_stmt **)(a3 + 8));
              uint64_t v10 = sqlite3_reset(*(sqlite3_stmt **)(a3 + 8));
              if (!v10)
              {
                uint64_t v10 = sub_1B0DD945C(a2, a3, a4, a5, 0, 0);
                if (!v10) {
                  return sqlite3_exec(a1, "RELEASE replace_op", 0, 0, 0);
                }
              }
            }
            return v10;
          }
          uint64_t v10 = sqlite3_bind_value(v21, v14 + 1, (const sqlite3_value *)v19);
        }
        BOOL v20 = v10 == 0;
        if (!v10 && ++v14 < v13) {
          continue;
        }
        goto LABEL_29;
      }
    }
  }
  return v10;
}

uint64_t sub_1B0DD945C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, _DWORD *a5, _DWORD *a6)
{
  uint64_t v6 = a6;
  uint64_t v8 = a3;
  uint64_t v124 = *MEMORY[0x1E4F143B8];
  unint64_t v12 = *(unsigned int *)(a1 + 120);
  int v11 = *(_DWORD *)(a1 + 124);
  if (v11 == 23)
  {
    if (a6) {
      BOOL v14 = *(_DWORD *)(a1 + 88) != 0;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL v119 = v14;
    int v38 = v12 + 33;
    if ((int)v12 < -33) {
      int v38 = v12 + 64;
    }
    int v39 = v38 >> 5;
    unsigned int v40 = *(void **)(a2 + 56);
    if (v40) {
      goto LABEL_61;
    }
    int v64 = sqlite3_initialize();
    if ((int)v12 < -1 || v64)
    {
      *(void *)(a2 + 56) = 0;
    }
    else
    {
      unsigned int v40 = (void *)sub_1B0C7FC94((4 * v39));
      *(void *)(a2 + 56) = v40;
      if (v40)
      {
LABEL_61:
        uint64_t v118 = a4;
        size_t v41 = 4 * v39;
        bzero(v40, v41);
        int v42 = *(_DWORD *)(a1 + 120);
        if (v42 < 1) {
          return 11;
        }
        uint64_t v116 = v6;
        LODWORD(v43) = 0;
        char v44 = 0;
        uint64_t v45 = *(void *)(a1 + 144);
        uint64_t v17 = 11;
        while (1)
        {
          uint64_t v43 = (int)v43;
          uint64_t v46 = v42;
          uint64_t v47 = v45 + 8 * v42;
          while (!*(void *)(v47 + 8 * v43))
          {
            if (++v43 >= v46)
            {
              unsigned int v122 = v17;
              if ((v44 & 1) == 0)
              {
                uint64_t v53 = 0;
                goto LABEL_168;
              }
LABEL_70:
              if (v119) {
                *(_DWORD *)(*(void *)(a2 + 56) + 4 * ((int)v12 / 32)) |= 1 << v12;
              }
              uint64_t v48 = *(const void ***)(a2 + 64);
              int v113 = (sqlite3_stmt **)(a2 + 64);
              if (v48)
              {
                uint64_t v49 = *(const void **)(a2 + 56);
                unsigned int v50 = -1;
                char v51 = (uint64_t *)(a2 + 64);
                do
                {
                  uint64_t v52 = v51;
                  uint64_t v53 = (sqlite3_stmt *)v48;
                  if (!memcmp(v49, v48[1], 4 * v39))
                  {
                    uint64_t v17 = 0;
                    uint64_t *v52 = *((void *)v53 + 2);
                    *((void *)v53 + 2) = *v113;
                    *int v113 = v53;
                    goto LABEL_167;
                  }
                  char v51 = (uint64_t *)((char *)v53 + 16);
                  uint64_t v48 = (const void **)*((void *)v53 + 2);
                  ++v50;
                }
                while (v48);
                if (v50 >= 0xB)
                {
                  sqlite3_finalize(*(sqlite3_stmt **)v53);
                  uint64_t v54 = *v52;
                  if (*v52)
                  {
                    int v55 = &off_1EB21C9E8;
                    if (!dword_1EB21C9C0) {
                      goto LABEL_83;
                    }
                    if ((void)xmmword_1EB2201B0) {
                      xmmword_1EB21CA40(xmmword_1EB2201B0);
                    }
                    qword_1EB220108[0] -= (int)off_1EB21C9F8(v54);
                    --qword_1EB220150;
                    off_1EB21C9E8(v54);
                    uint64_t v54 = xmmword_1EB2201B0;
                    if ((void)xmmword_1EB2201B0)
                    {
                      int v55 = &xmmword_1EB21CA50;
LABEL_83:
                      (*v55)(v54);
                    }
                  }
                  uint64_t *v52 = 0;
                }
              }
              uint64_t v56 = (96 * v39);
              __int16 v57 = *(unsigned char **)(a1 + 112);
              if (!v57)
              {
                int v61 = -1;
                goto LABEL_130;
              }
              int v58 = "sqlite_stat1";
              while (2)
              {
                uint64_t v62 = *v57;
                uint64_t v63 = *(unsigned __int8 *)v58;
                if (v62 == v63)
                {
                  if (!*v57)
                  {
                    int v61 = 0;
LABEL_130:
                    int v80 = sqlite3_initialize();
                    uint64_t v17 = 7;
                    if ((int)v56 < 1) {
                      return v17;
                    }
                    if (v80) {
                      return v17;
                    }
                    uint64_t v81 = sub_1B0C7FC94(v56);
                    if (!v81) {
                      return v17;
                    }
                    uint64_t v53 = (sqlite3_stmt *)v81;
                    signed __int32 v82 = (void *)(v81 + 24);
                    uint64_t v120 = 0;
                    uint64_t v121 = 0;
                    *((void *)v53 + 1) = v82;
                    memcpy(v82, *(const void **)(a2 + 56), v41);
                    sub_1B0DD7BBC((uint64_t)&v120, "UPDATE main.", &v122);
                    sub_1B0DD7CD4((uint64_t)&v120, *(char **)(a1 + 112), &v122);
                    sub_1B0DD7BBC((uint64_t)&v120, " SET ", &v122);
                    int v83 = *(_DWORD *)(a1 + 120);
                    if (v83 >= 1)
                    {
                      uint64_t v84 = 0;
                      int32x2_t v85 = &byte_1B0DE9952;
                      int v86 = 1;
                      do
                      {
                        if (!*(unsigned char *)(*(void *)(a2 + 48) + v84)
                          && *(void *)(*(void *)(a1 + 144) + 8 * ((int)v84 + v83)))
                        {
                          sub_1B0DD7BBC((uint64_t)&v120, v85, &v122);
                          sub_1B0DD7CD4((uint64_t)&v120, *(char **)(*(void *)(a2 + 40) + 8 * v84), &v122);
                          sub_1B0DD7BBC((uint64_t)&v120, " = ?", &v122);
                          sqlite3_snprintf(23, __s, "%d", v86);
                          sub_1B0DD7BBC((uint64_t)&v120, __s, &v122);
                          int v83 = *(_DWORD *)(a1 + 120);
                          int32x2_t v85 = ", ";
                        }
                        ++v84;
                        v86 += 2;
                      }
                      while (v84 < v83);
                    }
                    sub_1B0DD7BBC((uint64_t)&v120, " WHERE ", &v122);
                    if (*(int *)(a1 + 120) >= 1)
                    {
                      uint64_t v88 = 0;
                      int32x2_t v89 = &byte_1B0DE9952;
                      int v90 = 2;
                      do
                      {
                        if (*(unsigned char *)(*(void *)(a2 + 48) + v88)
                          || !v119 && *(void *)(*(void *)(a1 + 144) + 8 * v88))
                        {
                          sub_1B0DD7BBC((uint64_t)&v120, v89, &v122);
                          if (v61 || v88 != 1)
                          {
                            sub_1B0DD7CD4((uint64_t)&v120, *(char **)(*(void *)(a2 + 40) + 8 * v88), &v122);
                            sub_1B0DD7BBC((uint64_t)&v120, " IS ?", &v122);
                            sqlite3_snprintf(23, __s, "%d", v90);
                            int32x2_t v91 = __s;
                          }
                          else
                          {
                            int32x2_t v91 = "idx IS CASE WHEN length(?4)=0 AND typeof(?4)='blob' THEN NULL ELSE ?4 END ";
                          }
                          sub_1B0DD7BBC((uint64_t)&v120, v91, &v122);
                          int32x2_t v89 = " AND ";
                        }
                        ++v88;
                        v90 += 2;
                      }
                      while (v88 < *(int *)(a1 + 120));
                    }
                    uint64_t v17 = v122;
                    if (v122
                      || (uint64_t v17 = sub_1B0C7EAC0(*(void *)a2, v120, v121, 128, 0, v53, 0, v87),
                          v17))
                    {
                      int32x2_t v92 = (void (**)(sqlite3_stmt *))&off_1EB21C9E8;
                      if (!dword_1EB21C9C0) {
                        goto LABEL_158;
                      }
                      if ((void)xmmword_1EB2201B0) {
                        xmmword_1EB21CA40(xmmword_1EB2201B0);
                      }
                      qword_1EB220108[0] -= (int)off_1EB21C9F8(v53);
                      --qword_1EB220150;
                      off_1EB21C9E8(v53);
                      uint64_t v53 = (sqlite3_stmt *)xmmword_1EB2201B0;
                      if ((void)xmmword_1EB2201B0)
                      {
                        int32x2_t v92 = (void (**)(sqlite3_stmt *))&xmmword_1EB21CA50;
LABEL_158:
                        (*v92)(v53);
                        uint64_t v53 = 0;
                      }
                      uint64_t v93 = v120;
                      if (v120)
                      {
LABEL_160:
                        uint64_t v94 = (void (**)(unsigned __int8 *))&off_1EB21C9E8;
                        if (!dword_1EB21C9C0) {
                          goto LABEL_165;
                        }
                        if ((void)xmmword_1EB2201B0) {
                          xmmword_1EB21CA40(xmmword_1EB2201B0);
                        }
                        qword_1EB220108[0] -= (int)off_1EB21C9F8(v93);
                        --qword_1EB220150;
                        off_1EB21C9E8(v93);
                        uint64_t v93 = (unsigned __int8 *)xmmword_1EB2201B0;
                        if ((void)xmmword_1EB2201B0)
                        {
                          uint64_t v94 = (void (**)(unsigned __int8 *))&xmmword_1EB21CA50;
LABEL_165:
                          (*v94)(v93);
                        }
                      }
                    }
                    else
                    {
                      *((void *)v53 + 2) = *v113;
                      *int v113 = v53;
                      uint64_t v93 = v120;
                      if (v120) {
                        goto LABEL_160;
                      }
                    }
                    if (v53) {
LABEL_167:
                    }
                      uint64_t v53 = *(sqlite3_stmt **)v53;
LABEL_168:
                    unsigned int v114 = v8;
                    BOOL v95 = v17 == 0;
                    if (!v17 && (int)v12 >= 1)
                    {
                      unint64_t v96 = 0;
                      int v97 = 2;
                      while (1)
                      {
                        uint64_t v98 = *(void *)(a1 + 144);
                        uint64_t v99 = *(void *)(v98 + 8 * v96);
                        uint64_t v100 = *(void *)(v98 + 8 * ((int)v96 + *(_DWORD *)(a1 + 120)));
                        if (*(unsigned char *)(*(void *)(a2 + 48) + v96)) {
                          break;
                        }
                        uint64_t v17 = 0;
                        if (!v119)
                        {
                          int v101 = v97;
                          if (v99) {
                            goto LABEL_176;
                          }
                        }
LABEL_181:
                        if (!v17 && v100)
                        {
                          if (byte_1B0DE186A[*(_WORD *)(v100 + 20) & 0x3F] - 3 <= 1
                            && !*(void *)(v100 + 8))
                          {
                            return 7;
                          }
                          uint64_t v17 = sqlite3_bind_value(v53, v97 - 1, (const sqlite3_value *)v100);
                        }
                        BOOL v95 = v17 == 0;
                        if (!v17)
                        {
                          ++v96;
                          v97 += 2;
                          if (v96 < v12) {
                            continue;
                          }
                        }
                        goto LABEL_188;
                      }
                      if (v99)
                      {
                        int v101 = 2 * v96 + 2;
LABEL_176:
                        if (byte_1B0DE186A[*(_WORD *)(v99 + 20) & 0x3F] - 3 <= 1 && !*(void *)(v99 + 8)) {
                          return 7;
                        }
                      }
                      else
                      {
                        sub_1B0CE1978(97220);
                        int v101 = v97;
                      }
                      uint64_t v17 = sqlite3_bind_value(v53, v101, (const sqlite3_value *)v99);
                      goto LABEL_181;
                    }
LABEL_188:
                    if (!v95) {
                      return v17;
                    }
                    sqlite3_step(v53);
                    uint64_t v102 = sqlite3_reset(v53);
                    if (v102)
                    {
                      uint64_t v17 = v102;
                      if (v102 != 19) {
                        return v17;
                      }
                      uint64_t v103 = 3;
                      uint64_t v104 = a2;
                      uint64_t v105 = a1;
                      int v106 = v8;
                      uint64_t v107 = v118;
                      int v108 = 0;
                      return sub_1B0DDA134(v103, v104, v105, v106, v107, v108);
                    }
                    uint64_t v109 = *(void *)a2;
                    if (*(void *)a2)
                    {
                      int v110 = *(unsigned __int8 *)(v109 + 113);
                      unsigned int v111 = v116;
                      if (v110 == 186) {
                        goto LABEL_196;
                      }
                      if (v110 == 118)
                      {
                        if (*(_DWORD *)(v109 + 120)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v110 == 109) {
LABEL_196:
                        }
                          int v112 = "unopened";
                        else {
                          int v112 = "invalid";
                        }
LABEL_209:
                        sqlite3_log(21, "API call with %s database connection pointer", v112);
                        sub_1B0CE1978(186291);
                      }
                      uint64_t v103 = 1;
                      uint64_t v104 = a2;
                      uint64_t v105 = a1;
                      int v106 = v114;
                      uint64_t v107 = v118;
                      int v108 = v111;
                      return sub_1B0DDA134(v103, v104, v105, v106, v107, v108);
                    }
                    int v112 = "NULL";
                    unsigned int v111 = v116;
                    goto LABEL_209;
                  }
                }
                else
                {
                  int v59 = byte_1B0DE1758[v62];
                  int v60 = byte_1B0DE1758[v63];
                  int v61 = v59 - v60;
                  if (v59 != v60) {
                    goto LABEL_130;
                  }
                }
                ++v57;
                ++v58;
                continue;
              }
            }
          }
          uint64_t v17 = 0;
          char v44 = 1;
          *(_DWORD *)(*(void *)(a2 + 56) + 4 * (v43 >> 5)) |= 1 << v43;
          int v42 = *(_DWORD *)(a1 + 120);
          LODWORD(v43) = v43 + 1;
          if ((int)v43 >= v42)
          {
            unsigned int v122 = 0;
            goto LABEL_70;
          }
        }
      }
    }
    return 7;
  }
  if (v11 != 9)
  {
    if (*(_DWORD *)(a2 + 72) && (uint64_t v16 = sub_1B0DDA628(a1, a2), v16))
    {
      uint64_t v17 = v16;
      if (v16 == 100)
      {
        sqlite3_reset(*(sqlite3_stmt **)(a2 + 24));
LABEL_125:
        uint64_t v70 = 3;
        uint64_t v71 = a2;
        uint64_t v72 = a1;
        uint64_t v73 = v8;
        uint64_t v74 = a4;
        long long v75 = a5;
        goto LABEL_126;
      }
    }
    else
    {
      int v18 = v8;
      uint64_t v19 = *(sqlite3_stmt **)(a2 + 16);
      if ((int)v12 >= 1)
      {
        uint64_t v117 = a4;
        unint64_t v20 = 0;
        do
        {
          int v23 = *(_DWORD *)(a1 + 124);
          BOOL v25 = v23 != 23 && v23 != 18 || v20 == 0x80000000;
          if (v25
            || (int v26 = *(_DWORD *)(a1 + 120), v26 <= (int)v20)
            || (uint64_t v27 = *(void *)(*(void *)(a1 + 144) + 8 * ((int)v20 + v26))) == 0)
          {
LABEL_54:
            return sub_1B0D1045C(234851);
          }
          if (byte_1B0DE186A[*(_WORD *)(v27 + 20) & 0x3F] - 3 <= 1 && !*(void *)(v27 + 8)) {
            return 7;
          }
          uint64_t v21 = sqlite3_bind_value(v19, ++v20, (const sqlite3_value *)v27);
          if (v21) {
            BOOL v22 = 1;
          }
          else {
            BOOL v22 = v20 >= v12;
          }
        }
        while (!v22);
        uint64_t v17 = v21;
        a4 = v117;
        if (v21) {
          return v17;
        }
        uint64_t v19 = *(sqlite3_stmt **)(a2 + 16);
      }
      sqlite3_step(v19);
      uint64_t v17 = sqlite3_reset(*(sqlite3_stmt **)(a2 + 16));
      uint64_t v8 = v18;
    }
    if (v17 != 19) {
      return v17;
    }
    goto LABEL_125;
  }
  if (*(_DWORD *)(a1 + 88)) {
    uint64_t v13 = *(void *)(a2 + 48);
  }
  else {
    uint64_t v13 = 0;
  }
  int v28 = *(sqlite3_stmt **)(a2 + 8);
  if ((int)v12 < 1)
  {
LABEL_50:
    if (v28)
    {
      uint64_t v34 = *(void *)(*(void *)v28 + 24);
      if (v34)
      {
        xmmword_1EB21CA40(v34);
        uint64_t v35 = *(void *)(*(void *)v28 + 24);
        int v36 = *((_DWORD *)v28 + 8);
        if (v35) {
          xmmword_1EB21CA50(v35);
        }
      }
      else
      {
        int v36 = *((_DWORD *)v28 + 8);
      }
    }
    else
    {
      int v36 = 0;
    }
    int v65 = *(sqlite3_stmt **)(a2 + 8);
    if (v36 <= (int)v12)
    {
      uint64_t v66 = v6;
    }
    else
    {
      uint64_t v66 = v6;
      if (v6) {
        BOOL v67 = v13 == 0;
      }
      else {
        BOOL v67 = 0;
      }
      sqlite3_int64 v68 = !v67;
      uint64_t v17 = sqlite3_bind_int64(v65, v12 + 1, v68);
      if (v17) {
        return v17;
      }
      int v65 = *(sqlite3_stmt **)(a2 + 8);
    }
    sqlite3_step(v65);
    uint64_t v69 = sqlite3_reset(*(sqlite3_stmt **)(a2 + 8));
    if (v69)
    {
      uint64_t v17 = v69;
      if (v69 != 19) {
        return v17;
      }
      uint64_t v70 = 3;
      uint64_t v71 = a2;
      uint64_t v72 = a1;
      uint64_t v73 = v8;
      uint64_t v74 = a4;
      long long v75 = 0;
      goto LABEL_126;
    }
    uint64_t v76 = *(void *)a2;
    if (*(void *)a2)
    {
      int v77 = *(unsigned __int8 *)(v76 + 113);
      int v78 = v66;
      switch(v77)
      {
        case 186:
          goto LABEL_119;
        case 118:
          if (*(_DWORD *)(v76 + 120)) {
            return 0;
          }
          goto LABEL_203;
        case 109:
LABEL_119:
          float32x4x2_t v79 = "unopened";
          break;
        default:
          float32x4x2_t v79 = "invalid";
          break;
      }
    }
    else
    {
      float32x4x2_t v79 = "NULL";
      int v78 = v66;
    }
    sqlite3_log(21, "API call with %s database connection pointer", v79);
    sub_1B0CE1978(186291);
LABEL_203:
    if (*(unsigned char *)(a2 + 122)) {
      return 0;
    }
    uint64_t v70 = 1;
    uint64_t v71 = a2;
    uint64_t v72 = a1;
    uint64_t v73 = v8;
    uint64_t v74 = a4;
    long long v75 = v78;
LABEL_126:
    return sub_1B0DDA134(v70, v71, v72, v73, v74, v75);
  }
  uint64_t v30 = 0;
  while (v13 && !*(unsigned char *)(v13 + v30))
  {
    uint64_t v17 = 0;
LABEL_33:
    if (++v30 >= v12) {
      goto LABEL_48;
    }
  }
  int v31 = *(_DWORD *)(a1 + 124);
  if (v31 != 23 && v31 != 9) {
    goto LABEL_54;
  }
  if ((v30 & 0x80000000) != 0) {
    goto LABEL_54;
  }
  if (*(_DWORD *)(a1 + 120) <= (int)v30) {
    goto LABEL_54;
  }
  uint64_t v33 = *(void *)(*(void *)(a1 + 144) + 8 * v30);
  if (!v33) {
    goto LABEL_54;
  }
  if (byte_1B0DE186A[*(_WORD *)(v33 + 20) & 0x3F] - 3 <= 1 && !*(void *)(v33 + 8)) {
    return 7;
  }
  uint64_t v17 = sqlite3_bind_value(v28, v30 + 1, (const sqlite3_value *)v33);
  if (!v17) {
    goto LABEL_33;
  }
LABEL_48:
  if (!v17)
  {
    uint64_t v8 = a3;
    int v28 = *(sqlite3_stmt **)(a2 + 8);
    uint64_t v6 = a6;
    goto LABEL_50;
  }
  return v17;
}

uint64_t sub_1B0DDA134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, _DWORD *a6)
{
  if (!a6)
  {
    int v54 = 0;
    goto LABEL_10;
  }
  uint64_t result = sub_1B0DDA628(a3, a2);
  int v54 = result;
  if (!result)
  {
LABEL_10:
    if (a1 == 3 && *(_DWORD *)(a2 + 76))
    {
      sub_1B0DD7AB8(a2 + 88, (void *)(*(void *)(a3 + 16) + *(int *)(a3 + 4)), (*(_DWORD *)(a3 + 8) - *(_DWORD *)(a3 + 4)), &v54);
      return 0;
    }
    int v17 = a4(a5, (a1 + 1), a3);
    if (v17 == 1) {
      return 21;
    }
    goto LABEL_21;
  }
  if (result == 100)
  {
    if (!*(unsigned char *)(a2 + 122)) {
      goto LABEL_19;
    }
    uint64_t v13 = *(unsigned __int16 **)(a2 + 24);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)v13 + 24);
      if (v14)
      {
        xmmword_1EB21CA40(v14);
        uint64_t v15 = *(void *)(*(void *)v13 + 24);
        int v16 = v13[130];
        if (v15) {
          xmmword_1EB21CA50(v15);
        }
      }
      else
      {
        int v16 = v13[130];
      }
    }
    else
    {
      int v16 = 0;
    }
    if (sqlite3_column_int((sqlite3_stmt *)v13, v16 - 1))
    {
      int v17 = 0;
    }
    else
    {
LABEL_19:
      *(void *)(a3 + 104) = *(void *)(a2 + 24);
      int v17 = a4(a5, a1, a3);
      *(void *)(a3 + 104) = 0;
    }
    uint64_t result = sqlite3_reset(*(sqlite3_stmt **)(a2 + 24));
    int v54 = result;
    if (!result)
    {
LABEL_21:
      switch(v17)
      {
        case 0:
          goto LABEL_25;
        case 2:
          return 4;
        case 1:
          *a6 = 1;
LABEL_25:
          unsigned int v55 = 0;
          if (!*(unsigned char *)(a2 + 121)) {
            return 0;
          }
          int v18 = *(_DWORD *)(a3 + 124);
          int v19 = *(_DWORD *)(a2 + 112);
          uint64_t v20 = v19;
          if (*(unsigned char *)(a2 + 120))
          {
            uint64_t v21 = (uint64_t *)(a2 + 104);
            BOOL v22 = v18 == 9;
            if (v18 == 9) {
              char v23 = 9;
            }
            else {
              char v23 = 18;
            }
            goto LABEL_30;
          }
          uint64_t v34 = *(char **)(a3 + 112);
          uint64_t v21 = (uint64_t *)(a2 + 104);
          int v35 = *(_DWORD *)(a2 + 116);
          if (v19 < v35)
          {
            uint64_t v36 = *v21;
LABEL_50:
            *(_DWORD *)(a2 + 112) = v19 + 1;
            *(unsigned char *)(v36 + v20) = 84;
LABEL_69:
            sub_1B0DD7990(a2 + 104, *(_DWORD *)(a2 + 32), &v55);
            sub_1B0DD7AB8(a2 + 104, *(void **)(a2 + 48), *(unsigned int *)(a2 + 32), &v55);
            int v43 = strlen(v34);
            sub_1B0DD7AB8(a2 + 104, v34, (v43 + 1), &v55);
            *(unsigned char *)(a2 + 120) = 1;
            uint64_t result = v55;
            BOOL v22 = v18 == 9;
            if (v18 == 9) {
              char v23 = 9;
            }
            else {
              char v23 = 18;
            }
            if (v55) {
              goto LABEL_73;
            }
            int v19 = *(_DWORD *)(a2 + 112);
            uint64_t v20 = v19;
LABEL_30:
            int v24 = *(_DWORD *)(a2 + 116);
            if (v19 >= v24)
            {
              if (!v24) {
                int v24 = 128;
              }
              uint64_t v31 = v24;
              do
              {
                uint64_t v32 = v31;
                v31 *= 2;
              }
              while (v31 <= v20);
              if (v32 > 1073741695)
              {
                if (v19 > 2147483390) {
                  goto LABEL_59;
                }
                uint64_t v31 = 2147483391;
              }
              uint64_t v33 = *v21;
              if (sqlite3_initialize()) {
                goto LABEL_59;
              }
              uint64_t v25 = sub_1B0C8E1B8(v33, v31);
              if (!v25) {
                goto LABEL_59;
              }
              *(void *)(a2 + 104) = v25;
              *(_DWORD *)(a2 + 116) = v31;
              int v19 = *(_DWORD *)(a2 + 112);
              uint64_t v20 = v19;
            }
            else
            {
              uint64_t v25 = *v21;
            }
            *(_DWORD *)(a2 + 112) = v19 + 1;
            *(unsigned char *)(v25 + v20) = v23;
            BOOL v26 = v17 == 1;
            int v28 = *(_DWORD *)(a2 + 112);
            int v27 = *(_DWORD *)(a2 + 116);
            uint64_t v29 = v28;
            if (v28 < v27)
            {
              uint64_t v30 = *v21;
LABEL_34:
              uint64_t result = 0;
              *(_DWORD *)(a2 + 112) = v28 + 1;
              *(unsigned char *)(v30 + v29) = v26;
LABEL_73:
              if (*(int *)(a2 + 32) < 1) {
                return result;
              }
              uint64_t v44 = 0;
              uint64_t v45 = 0;
              while (1)
              {
                if (v22 || v18 == 23 && *(unsigned char *)(*(void *)(a2 + 48) + v45))
                {
                  int v47 = *(_DWORD *)(a3 + 124);
                  BOOL v48 = v47 == 23 || v47 == 9;
                  if (v48 && v45 < *(int *)(a3 + 120))
                  {
                    uint64_t v49 = (sqlite3_value **)(*(void *)(a3 + 144) + v44);
LABEL_94:
                    uint64_t v46 = *v49;
                    goto LABEL_76;
                  }
                }
                else
                {
                  int v50 = *(_DWORD *)(a3 + 124);
                  if (v50 == 23 || v50 == 18)
                  {
                    uint64_t v52 = *(int *)(a3 + 120);
                    if (v45 < v52)
                    {
                      uint64_t v49 = (sqlite3_value **)(*(void *)(a3 + 144) + 8 * ((int)v45 + (int)v52));
                      goto LABEL_94;
                    }
                  }
                }
                uint64_t v46 = 0;
LABEL_76:
                sub_1B0DD86FC((uint64_t)v21, v46, &v55);
                ++v45;
                v44 += 8;
                if (v45 >= *(int *)(a2 + 32)) {
                  return v55;
                }
              }
            }
            if (!v27) {
              int v27 = 128;
            }
            uint64_t v37 = v27;
            do
            {
              uint64_t v38 = v37;
              v37 *= 2;
            }
            while (v37 <= v28);
            if (v38 > 1073741695)
            {
              if (v28 > 2147483390) {
                goto LABEL_59;
              }
              uint64_t v37 = 2147483391;
            }
            uint64_t v39 = *v21;
            if (!sqlite3_initialize())
            {
              uint64_t v53 = sub_1B0C8E1B8(v39, v37);
              if (v53)
              {
                uint64_t v30 = v53;
                *(void *)(a2 + 104) = v53;
                *(_DWORD *)(a2 + 116) = v37;
                int v28 = *(_DWORD *)(a2 + 112);
                uint64_t v29 = v28;
                goto LABEL_34;
              }
            }
LABEL_59:
            uint64_t result = 7;
            unsigned int v55 = 7;
            goto LABEL_73;
          }
          if (!v35) {
            int v35 = 128;
          }
          uint64_t v40 = v35;
          do
          {
            uint64_t v41 = v40;
            v40 *= 2;
          }
          while (v40 <= v19);
          if (v41 > 1073741695)
          {
            if (v19 > 2147483390) {
              goto LABEL_68;
            }
            uint64_t v40 = 2147483391;
          }
          uint64_t v42 = *v21;
          if (!sqlite3_initialize())
          {
            uint64_t v36 = sub_1B0C8E1B8(v42, v40);
            if (v36)
            {
              *(void *)(a2 + 104) = v36;
              *(_DWORD *)(a2 + 116) = v40;
              int v19 = *(_DWORD *)(a2 + 112);
              uint64_t v20 = v19;
              goto LABEL_50;
            }
          }
LABEL_68:
          unsigned int v55 = 7;
          goto LABEL_69;
      }
      return 21;
    }
  }
  return result;
}

uint64_t sub_1B0DDA628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(sqlite3_stmt **)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(*(void *)v4 + 24);
    if (v5) {
      xmmword_1EB21CA40(*(void *)(*(void *)v4 + 24));
    }
    int v6 = *((_DWORD *)v4 + 8);
    if (v6 >= 1)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = *((void *)v4 + 16);
      do
      {
        uint64_t v10 = v9 + v7;
        if ((*(_WORD *)(v9 + v7 + 20) & 0x9000) != 0 || *(_DWORD *)(v10 + 32))
        {
          sub_1B0D180E4(v10);
          uint64_t v9 = *((void *)v4 + 16);
          int v6 = *((_DWORD *)v4 + 8);
        }
        *(_WORD *)(v9 + v7 + 20) = 1;
        ++v8;
        v7 += 64;
      }
      while (v8 < v6);
    }
    if (*((_DWORD *)v4 + 93)) {
      *((_WORD *)v4 + 134) = *((_WORD *)v4 + 134) & 0xFFFC | 1;
    }
    if (v5) {
      xmmword_1EB21CA50(v5);
    }
  }
  unint64_t v12 = *(unsigned int *)(a1 + 120);
  int v11 = *(_DWORD *)(a1 + 124);
  if (v11 == 18) {
    uint64_t v13 = (void (*)(uint64_t, uint64_t, sqlite3_value **))sqlite3changeset_new;
  }
  else {
    uint64_t v13 = (void (*)(uint64_t, uint64_t, sqlite3_value **))sqlite3changeset_old;
  }
  if ((int)v12 < 1)
  {
    uint64_t result = 0;
    if (v11 == 9) {
      goto LABEL_55;
    }
    goto LABEL_34;
  }
  uint64_t v14 = 0;
  uint64_t v15 = *(void *)(a2 + 48);
  while (1)
  {
    if (v15 && !*(unsigned char *)(v15 + v14))
    {
      uint64_t result = 0;
      goto LABEL_21;
    }
    BOOL v22 = 0;
    v13(a1, v14, &v22);
    if (v22) {
      break;
    }
    uint64_t result = sub_1B0D1045C(234851);
    if (result) {
      goto LABEL_31;
    }
LABEL_21:
    if (++v14 >= v12) {
      goto LABEL_31;
    }
  }
  if (byte_1B0DE186A[*((_WORD *)v22 + 10) & 0x3F] - 3 > 1 || *((void *)v22 + 1))
  {
    uint64_t result = sqlite3_bind_value(v4, v14 + 1, v22);
    if (result) {
      goto LABEL_31;
    }
    goto LABEL_21;
  }
  uint64_t result = 7;
LABEL_31:
  if (v11 != 9)
  {
LABEL_34:
    if (!result && *(unsigned char *)(a2 + 122) && (int)v12 >= 1)
    {
      uint64_t v17 = 0;
      do
      {
        if (*(unsigned char *)(*(void *)(a2 + 48) + v17))
        {
          uint64_t result = 0;
          ++v17;
        }
        else
        {
          int v18 = *(_DWORD *)(a1 + 124);
          BOOL v19 = v18 == 23 || v18 == 18;
          if (v19 && (uint64_t v20 = *(int *)(a1 + 120), v17 < v20)) {
            uint64_t v21 = *(void *)(*(void *)(a1 + 144) + 8 * ((int)v20 + (int)v17));
          }
          else {
            uint64_t v21 = 0;
          }
          sqlite3_bind_int64(v4, v12 + ++v17, v21 == 0);
          if (v21)
          {
            if (byte_1B0DE186A[*(_WORD *)(v21 + 20) & 0x3F] - 3 <= 1 && !*(void *)(v21 + 8)) {
              return 7;
            }
            uint64_t result = sqlite3_bind_value(v4, v17, (const sqlite3_value *)v21);
            if (result) {
              break;
            }
          }
          else
          {
            uint64_t result = 0;
          }
        }
      }
      while (v17 < (uint64_t)v12);
    }
  }
LABEL_55:
  if (!result)
  {
    uint64_t result = sqlite3_step(v4);
    if (result != 100) {
      return sqlite3_reset(v4);
    }
  }
  return result;
}

uint64_t sub_1B0DDA904(uint64_t a1, int a2, char *__s1, int a4, char *__s2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  if ((int)v5 < 1) {
    return 1;
  }
  uint64_t v10 = *(unsigned __int8 **)(a1 + 40);
  while (!*v10++)
  {
    if (a2)
    {
      if (!a4) {
        goto LABEL_25;
      }
      goto LABEL_5;
    }
    int v16 = *__s1;
    int v17 = 1;
    if (*__s1) {
      BOOL v18 = v16 == 5;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18 || v16 == 255) {
      goto LABEL_24;
    }
    if ((v16 - 1) < 2)
    {
      int v17 = 9;
LABEL_24:
      __s1 += v17;
      if (!a4) {
        goto LABEL_25;
      }
      goto LABEL_5;
    }
    int v25 = __s1[1];
    if ((v25 & 0x80) != 0)
    {
      int v29 = __s1[2];
      if (__s1[2] < 0)
      {
        int v40 = __s1[3];
        if (v40 < 0)
        {
          unint64_t v44 = 0;
          char v42 = sub_1B0CAD43C(__s1 + 1, &v44);
          if (HIDWORD(v44)) {
            int v25 = -1;
          }
          else {
            int v25 = v44;
          }
          int v26 = (v42 + 1);
        }
        else
        {
          int v25 = v40 & 0x7F | (v25 << 14) & 0x1FC07F | ((v29 & 0x7F) << 7);
          int v26 = 4;
        }
      }
      else
      {
        int v25 = ((v25 & 0x7F) << 7) | v29;
        int v26 = 3;
      }
    }
    else
    {
      int v26 = 2;
    }
    __s1 += v26 + v25;
    if (!a4)
    {
LABEL_25:
      int v19 = *__s2;
      int v11 = 1;
      if (*__s2 && v19 != 5 && v19 != 255)
      {
        if ((v19 - 1) < 2)
        {
          int v11 = 9;
        }
        else
        {
          int v20 = __s2[1];
          if ((v20 & 0x80) != 0)
          {
            int v28 = __s2[2];
            if (__s2[2] < 0)
            {
              int v39 = __s2[3];
              if (v39 < 0)
              {
                unint64_t v44 = 0;
                char v41 = sub_1B0CAD43C(__s2 + 1, &v44);
                if (HIDWORD(v44)) {
                  int v20 = -1;
                }
                else {
                  int v20 = v44;
                }
                int v21 = (v41 + 1);
              }
              else
              {
                int v20 = v39 & 0x7F | (v20 << 14) & 0x1FC07F | ((v28 & 0x7F) << 7);
                int v21 = 4;
              }
            }
            else
            {
              int v20 = ((v20 & 0x7F) << 7) | v28;
              int v21 = 3;
            }
          }
          else
          {
            int v21 = 2;
          }
          int v11 = v21 + v20;
        }
      }
      __s2 += v11;
    }
LABEL_5:
    if (!--v5) {
      return 1;
    }
  }
  int v13 = *__s1;
  int v14 = 1;
  if (*__s1) {
    BOOL v15 = v13 == 5;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15 && v13 != 255)
  {
    if ((v13 - 1) >= 2)
    {
      int v22 = __s1[1];
      if ((v22 & 0x80) != 0)
      {
        int v24 = __s1[2];
        if (__s1[2] < 0)
        {
          int v27 = __s1[3];
          if (v27 < 0)
          {
            unint64_t v44 = 0;
            char v30 = sub_1B0CAD43C(__s1 + 1, &v44);
            if (HIDWORD(v44)) {
              int v22 = -1;
            }
            else {
              int v22 = v44;
            }
            int v23 = (v30 + 1);
          }
          else
          {
            int v22 = v27 & 0x7F | (v22 << 14) & 0x1FC07F | ((v24 & 0x7F) << 7);
            int v23 = 4;
          }
        }
        else
        {
          int v22 = ((v22 & 0x7F) << 7) | v24;
          int v23 = 3;
        }
      }
      else
      {
        int v23 = 2;
      }
      int v14 = v23 + v22;
    }
    else
    {
      int v14 = 9;
    }
  }
  int v31 = *__s2;
  int v32 = 1;
  if (*__s2) {
    BOOL v33 = v31 == 5;
  }
  else {
    BOOL v33 = 1;
  }
  if (v33 || v31 == 255) {
    goto LABEL_55;
  }
  if ((v31 - 1) < 2)
  {
    int v32 = 9;
LABEL_55:
    if (v14 != v32) {
      return 0;
    }
LABEL_56:
    if (memcmp(__s1, __s2, v14)) {
      return 0;
    }
    __s1 += v14;
    __s2 += v14;
    goto LABEL_5;
  }
  int v34 = __s2[1];
  if ((v34 & 0x80) != 0)
  {
    int v36 = __s2[2];
    if (__s2[2] < 0)
    {
      int v37 = __s2[3];
      if (v37 < 0)
      {
        unint64_t v44 = 0;
        char v38 = sub_1B0CAD43C(__s2 + 1, &v44);
        if (HIDWORD(v44)) {
          int v34 = -1;
        }
        else {
          int v34 = v44;
        }
        int v35 = (v38 + 1);
      }
      else
      {
        int v34 = v37 & 0x7F | (v34 << 14) & 0x1FC07F | ((v36 & 0x7F) << 7);
        int v35 = 4;
      }
    }
    else
    {
      int v34 = ((v34 & 0x7F) << 7) | v36;
      int v35 = 3;
    }
  }
  else
  {
    int v35 = 2;
  }
  if (v14 == v35 + v34) {
    goto LABEL_56;
  }
  return 0;
}

void **sub_1B0DDAC7C(void **result, int a2, char *__src, char *a4)
{
  uint64_t v4 = result;
  uint64_t v5 = (char *)*result;
  if (a2 >= 1)
  {
    int v8 = a2;
    while (1)
    {
      int v12 = *__src;
      LODWORD(v11) = 1;
      if (*__src) {
        BOOL v13 = v12 == 5;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13 || v12 == 255) {
        goto LABEL_13;
      }
      if ((v12 - 1) < 2) {
        break;
      }
      int v17 = __src[1];
      if ((v17 & 0x80) != 0)
      {
        int v20 = __src[2];
        if (__src[2] < 0)
        {
          int v22 = __src[3];
          if (v22 < 0)
          {
            unint64_t v25 = 0;
            char v24 = sub_1B0CAD43C(__src + 1, &v25);
            if (HIDWORD(v25)) {
              int v17 = -1;
            }
            else {
              int v17 = v25;
            }
            int v18 = (v24 + 1);
          }
          else
          {
            int v17 = v22 & 0x7F | (v17 << 14) & 0x1FC07F | ((v20 & 0x7F) << 7);
            int v18 = 4;
          }
        }
        else
        {
          int v17 = ((v17 & 0x7F) << 7) | v20;
          int v18 = 3;
        }
      }
      else
      {
        int v18 = 2;
      }
      LODWORD(v11) = v18 + v17;
      int v14 = *a4;
      if (*a4)
      {
LABEL_14:
        int v9 = 1;
        if (v14 != 5 && v14 != 255)
        {
          if ((v14 - 1) < 2)
          {
            int v9 = 9;
          }
          else
          {
            int v15 = a4[1];
            if ((v15 & 0x80) != 0)
            {
              int v19 = a4[2];
              if (a4[2] < 0)
              {
                int v21 = a4[3];
                if (v21 < 0)
                {
                  unint64_t v25 = 0;
                  char v23 = sub_1B0CAD43C(a4 + 1, &v25);
                  if (HIDWORD(v25)) {
                    int v15 = -1;
                  }
                  else {
                    int v15 = v25;
                  }
                  int v16 = (v23 + 1);
                }
                else
                {
                  int v15 = v21 & 0x7F | (v15 << 14) & 0x1FC07F | ((v19 & 0x7F) << 7);
                  int v16 = 4;
                }
              }
              else
              {
                int v15 = ((v15 & 0x7F) << 7) | v19;
                int v16 = 3;
              }
            }
            else
            {
              int v16 = 2;
            }
            int v9 = v16 + v15;
          }
        }
        uint64_t v10 = v9;
        uint64_t result = (void **)memcpy(v5, a4, v9);
        uint64_t v11 = (int)v11;
        goto LABEL_5;
      }
LABEL_39:
      uint64_t v11 = (int)v11;
      uint64_t result = (void **)memcpy(v5, __src, (int)v11);
      int v9 = 1;
      uint64_t v10 = (int)v11;
LABEL_5:
      v5 += v10;
      __src += v11;
      a4 += v9;
      if (!--v8) {
        goto LABEL_40;
      }
    }
    LODWORD(v11) = 9;
LABEL_13:
    int v14 = *a4;
    if (*a4) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_40:
  sqlite3_stmt *v4 = v5;
  return result;
}

uint64_t sub_1B0DDAE8C(unsigned char **a1, uint64_t a2, int a3, char *a4, char *a5, char *a6, char *a7)
{
  BOOL v33 = a5;
  int v34 = a4;
  int v31 = a7;
  int v32 = a6;
  int v12 = *a1;
  LODWORD(v13) = *(_DWORD *)(a2 + 16);
  if (a3) {
    goto LABEL_2;
  }
  if ((int)v13 < 1) {
    return 0;
  }
  int v28 = a7;
  uint64_t v22 = 0;
  int v23 = 0;
  do
  {
    size_t __n = 0;
    char v24 = sub_1B0DDB06C(&v34, &v33, (int *)&__n + 1);
    unint64_t v25 = sub_1B0DDB06C(&v32, &v31, (int *)&__n);
    size_t v26 = SHIDWORD(__n);
    if (*(unsigned char *)(*(void *)(a2 + 40) + v22)) {
      goto LABEL_19;
    }
    if (HIDWORD(__n) != __n || memcmp(v24, v25, SHIDWORD(__n)))
    {
      int v23 = 1;
LABEL_19:
      memcpy(v12, v24, v26);
      v12 += v26;
      goto LABEL_20;
    }
    *v12++ = 0;
LABEL_20:
    ++v22;
    uint64_t v13 = *(int *)(a2 + 16);
  }
  while (v22 < v13);
  a7 = v28;
  if (!v23) {
    return 0;
  }
LABEL_2:
  BOOL v33 = a5;
  int v34 = a4;
  int v31 = a7;
  int v32 = a6;
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    int v15 = a1;
    while (1)
    {
      size_t __n = 0;
      int v16 = sub_1B0DDB06C(&v34, &v33, (int *)&__n + 1);
      int v17 = sub_1B0DDB06C(&v32, &v31, (int *)&__n);
      if (a3) {
        break;
      }
      if (!*(unsigned char *)(*(void *)(a2 + 40) + v14))
      {
        int v18 = __n;
        int v20 = HIDWORD(__n);
        if (HIDWORD(__n) != __n) {
          goto LABEL_9;
        }
        int v21 = memcmp(v16, v17, SHIDWORD(__n));
        int v18 = v20;
        if (v21) {
          goto LABEL_9;
        }
      }
      *v12++ = 0;
LABEL_6:
      if (++v14 >= *(int *)(a2 + 16)) {
        goto LABEL_24;
      }
    }
    int v18 = __n;
LABEL_9:
    uint64_t v19 = v18;
    memcpy(v12, v17, v18);
    v12 += v19;
    goto LABEL_6;
  }
  int v15 = a1;
LABEL_24:
  *int v15 = v12;
  return 1;
}

char *sub_1B0DDB06C(char **a1, char **a2, int *a3)
{
  uint64_t v5 = *a1;
  int v6 = *a2;
  if (*a2)
  {
    int v8 = *v6;
    int v9 = 1;
    if (*v6)
    {
      uint64_t v10 = *a2;
      if (v8 != 5 && v8 != 255)
      {
        if ((v8 - 1) >= 2)
        {
          int v11 = v6[1];
          if ((v11 & 0x80) != 0)
          {
            int v13 = v6[2];
            if (v6[2] < 0)
            {
              int v14 = v6[3];
              if (v14 < 0)
              {
                unint64_t v25 = 0;
                char v15 = sub_1B0CAD43C(v6 + 1, &v25);
                if (HIDWORD(v25)) {
                  int v11 = -1;
                }
                else {
                  int v11 = v25;
                }
                int v12 = (v15 + 1);
              }
              else
              {
                int v11 = v14 & 0x7F | (v11 << 14) & 0x1FC07F | ((v13 & 0x7F) << 7);
                int v12 = 4;
              }
            }
            else
            {
              int v11 = ((v11 & 0x7F) << 7) | v13;
              int v12 = 3;
            }
          }
          else
          {
            int v12 = 2;
          }
          int v9 = v12 + v11;
        }
        else
        {
          int v9 = 9;
        }
      }
      *a3 = v9;
    }
    else
    {
      uint64_t v10 = 0;
    }
    *a2 = &v6[v9];
  }
  else
  {
    uint64_t v10 = 0;
  }
  int v16 = *v5;
  int v17 = 1;
  if (*v5) {
    BOOL v18 = v16 == 5;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18 && v16 != 255)
  {
    if ((v16 - 1) >= 2)
    {
      int v20 = v5[1];
      if ((v20 & 0x80) != 0)
      {
        int v22 = v5[2];
        if (v5[2] < 0)
        {
          int v23 = v5[3];
          if (v23 < 0)
          {
            unint64_t v25 = 0;
            char v24 = sub_1B0CAD43C(v5 + 1, &v25);
            if (HIDWORD(v25)) {
              int v20 = -1;
            }
            else {
              int v20 = v25;
            }
            int v21 = (v24 + 1);
          }
          else
          {
            int v20 = v23 & 0x7F | (v20 << 14) & 0x1FC07F | ((v22 & 0x7F) << 7);
            int v21 = 4;
          }
        }
        else
        {
          int v20 = ((v20 & 0x7F) << 7) | v22;
          int v21 = 3;
        }
      }
      else
      {
        int v21 = 2;
      }
      int v17 = v21 + v20;
      if (!v10) {
        goto LABEL_30;
      }
      goto LABEL_31;
    }
    int v17 = 9;
  }
  if (!v10)
  {
LABEL_30:
    *a3 = v17;
    uint64_t v10 = v5;
  }
LABEL_31:
  *a1 = &v5[v17];
  return v10;
}

uint64_t sub_1B0DDB24C(uint64_t result, int a2, char *__src, int a4, char *a5, int a6, _DWORD *a7)
{
  if (!*a7)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(int *)(result + 12);
    uint64_t v12 = *(int *)(result + 8) + (uint64_t)(a6 + a4);
    if (v12 <= v11) {
      goto LABEL_13;
    }
    if (v11) {
      uint64_t v14 = *(int *)(result + 12);
    }
    else {
      uint64_t v14 = 128;
    }
    do
    {
      uint64_t v15 = v14;
      v14 *= 2;
    }
    while (v14 < v12);
    if (v15 >= 1073741696 && (uint64_t v14 = 2147483391, v12 > 2147483391)
      || (uint64_t v16 = *(void *)result, result = sqlite3_initialize(), result)
      || (uint64_t result = sub_1B0C8E1B8(v16, v14)) == 0)
    {
      *a7 = 7;
      return result;
    }
    *(void *)uint64_t v10 = result;
    *(_DWORD *)(v10 + 12) = v14;
    if (!*a7)
    {
LABEL_13:
      uint64_t v17 = *(void *)v10;
      BOOL v18 = (char *)(*(void *)v10 + *(int *)(v10 + 8));
      if (a2 >= 1)
      {
        do
        {
          int v21 = *__src;
          LODWORD(v23) = 1;
          if (*__src) {
            BOOL v22 = v21 == 5;
          }
          else {
            BOOL v22 = 1;
          }
          if (!v22 && v21 != 255)
          {
            if ((v21 - 1) >= 2)
            {
              int v26 = __src[1];
              if ((v26 & 0x80) != 0)
              {
                int v28 = __src[2];
                if (__src[2] < 0)
                {
                  int v29 = __src[3];
                  if (v29 < 0)
                  {
                    unint64_t v38 = 0;
                    char v30 = sub_1B0CAD43C(__src + 1, &v38);
                    if (HIDWORD(v38)) {
                      int v26 = -1;
                    }
                    else {
                      int v26 = v38;
                    }
                    int v27 = (v30 + 1);
                  }
                  else
                  {
                    int v26 = v29 & 0x7F | (v26 << 14) & 0x1FC07F | ((v28 & 0x7F) << 7);
                    int v27 = 4;
                  }
                }
                else
                {
                  int v26 = ((v26 & 0x7F) << 7) | v28;
                  int v27 = 3;
                }
              }
              else
              {
                int v27 = 2;
              }
              LODWORD(v23) = v27 + v26;
            }
            else
            {
              LODWORD(v23) = 9;
            }
          }
          int v31 = *a5;
          int v19 = 1;
          if (*a5) {
            BOOL v32 = v31 == 5;
          }
          else {
            BOOL v32 = 1;
          }
          if (!v32 && v31 != 255)
          {
            if ((v31 - 1) < 2)
            {
              int v19 = 9;
            }
            else
            {
              int v33 = a5[1];
              if ((v33 & 0x80) != 0)
              {
                int v35 = a5[2];
                if (a5[2] < 0)
                {
                  int v36 = a5[3];
                  if (v36 < 0)
                  {
                    unint64_t v38 = 0;
                    char v37 = sub_1B0CAD43C(a5 + 1, &v38);
                    if (HIDWORD(v38)) {
                      int v33 = -1;
                    }
                    else {
                      int v33 = v38;
                    }
                    int v34 = (v37 + 1);
                  }
                  else
                  {
                    int v33 = v36 & 0x7F | (v33 << 14) & 0x1FC07F | ((v35 & 0x7F) << 7);
                    int v34 = 4;
                  }
                }
                else
                {
                  int v33 = ((v33 & 0x7F) << 7) | v35;
                  int v34 = 3;
                }
              }
              else
              {
                int v34 = 2;
              }
              int v19 = v34 + v33;
            }
          }
          if (v21 == 255 || v21 == 0)
          {
            uint64_t v24 = v19;
            uint64_t result = (uint64_t)memcpy(v18, a5, v19);
            uint64_t v23 = (int)v23;
            uint64_t v25 = v19;
          }
          else
          {
            uint64_t v23 = (int)v23;
            uint64_t result = (uint64_t)memcpy(v18, __src, (int)v23);
            uint64_t v24 = v19;
            uint64_t v25 = (int)v23;
          }
          v18 += v25;
          __src += v23;
          a5 += v24;
          --a2;
        }
        while (a2);
        uint64_t v17 = *(void *)v10;
      }
      *(_DWORD *)(v10 + 8) = v18 - v17;
    }
  }
  return result;
}

uint64_t sub_1B0DDB508(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = sqlite3_declare_vtab(a1, "CREATE TABLE x(value,pointer hidden,count hidden,ctype hidden)");
  if (!result)
  {
    if (sqlite3_initialize())
    {
      *a5 = 0;
      return 7;
    }
    uint64_t v7 = sub_1B0C7FC94(24);
    *a5 = v7;
    if (!v7) {
      return 7;
    }
    int v8 = (void *)v7;
    uint64_t result = 0;
    *int v8 = 0;
    v8[1] = 0;
    void v8[2] = 0;
  }
  return result;
}

uint64_t sub_1B0DDB56C(uint64_t a1, uint64_t a2)
{
  if (*(int *)a2 < 1) {
    goto LABEL_19;
  }
  unsigned int v2 = 0;
  uint64_t v3 = *(void *)(a2 + 8) + 5;
  unsigned int v4 = -1;
  unsigned int v5 = -1;
  unsigned int v6 = -1;
  uint64_t v7 = (unsigned __int8 *)v3;
  do
  {
    int v8 = *v7;
    v7 += 12;
    if (v8 && *(unsigned char *)(v3 - 1) == 2)
    {
      int v9 = *(_DWORD *)(v3 - 5);
      if (v9 == 1) {
        unsigned int v10 = v2;
      }
      else {
        unsigned int v10 = v6;
      }
      if (v9 == 2)
      {
        unsigned int v10 = v6;
        unsigned int v11 = v2;
      }
      else
      {
        unsigned int v11 = v5;
      }
      if (v9 == 3)
      {
        unsigned int v4 = v2;
      }
      else
      {
        unsigned int v6 = v10;
        unsigned int v5 = v11;
      }
    }
    ++v2;
    uint64_t v3 = (uint64_t)v7;
  }
  while (*(_DWORD *)a2 != v2);
  if ((v6 & 0x80000000) != 0)
  {
LABEL_19:
    *(void *)(a2 + 64) = 0x41DFFFFFFFC00000;
    *(void *)(a2 + 72) = 0x7FFFFFFFLL;
    *(_DWORD *)(a2 + 40) = 0;
  }
  else
  {
    uint64_t v12 = *(void *)(a2 + 32);
    uint64_t v13 = v12 + 8 * v6;
    *(_DWORD *)uint64_t v13 = 1;
    *(unsigned char *)(v13 + 4) = 1;
    *(void *)(a2 + 64) = 0x3FF0000000000000;
    *(void *)(a2 + 72) = 100;
    *(_DWORD *)(a2 + 40) = 1;
    if ((v5 & 0x80000000) == 0)
    {
      uint64_t v14 = v12 + 8 * v5;
      *(_DWORD *)uint64_t v14 = 2;
      *(unsigned char *)(v14 + 4) = 1;
      *(_DWORD *)(a2 + 40) = 2;
      if ((v4 & 0x80000000) == 0)
      {
        uint64_t v15 = v12 + 8 * v4;
        *(_DWORD *)uint64_t v15 = 3;
        *(unsigned char *)(v15 + 4) = 1;
        *(_DWORD *)(a2 + 40) = 3;
        return 0;
      }
    }
  }
  return 0;
}

uint64_t sub_1B0DDB668(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    unsigned int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

double sub_1B0DDB71C(uint64_t a1, uint64_t *a2)
{
  if (!sqlite3_initialize())
  {
    uint64_t v4 = sub_1B0C7FC94(40);
    if (v4)
    {
      *(void *)(v4 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)uint64_t v4 = 0u;
      *(_OWORD *)(v4 + 16) = 0u;
      *a2 = v4;
    }
  }
  return result;
}

uint64_t sub_1B0DDB770(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    unsigned int v2 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v2)(v1);
      return 0;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v1);
    --qword_1EB220150;
    off_1EB21C9E8(v1);
    uint64_t v1 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned int v2 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
  return 0;
}

uint64_t sub_1B0DDB824(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  int v8 = (void *)(a1 + 16);
  if (a2 - 2 >= 2)
  {
    if (a2 == 1)
    {
      uint64_t v14 = *a5;
      if (*a5)
      {
        if ((*(_WORD *)(v14 + 20) & 0xFBF) == 0xA01
          && *(unsigned char *)(v14 + 23) == 112
          && !strcmp(*(const char **)v14, "carray-bind"))
        {
          uint64_t v15 = *(void *)(v14 + 8);
          if (v15)
          {
            uint64_t v16 = *(int *)(v15 + 8);
            *(void *)(a1 + 16) = *(void *)v15;
            *(void *)(a1 + 24) = v16;
            char v17 = *(unsigned char *)(v15 + 12) & 7;
            goto LABEL_71;
          }
        }
      }
      else
      {
        sub_1B0CE1978(97118);
      }
    }
    goto LABEL_72;
  }
  uint64_t v9 = *a5;
  if (!*a5)
  {
    sub_1B0CE1978(97118);
LABEL_18:
    uint64_t v13 = 0;
    *int v8 = 0;
    goto LABEL_19;
  }
  if ((*(_WORD *)(v9 + 20) & 0xFBF) != 0xA01 || *(unsigned char *)(v9 + 23) != 112 || strcmp(*(const char **)v9, "carray")) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v9 + 8);
  *int v8 = v10;
  if (!v10)
  {
LABEL_54:
    uint64_t v13 = 0;
    goto LABEL_19;
  }
  uint64_t v11 = a5[1];
  if (!v11)
  {
    sub_1B0CE1978(89717);
    uint64_t v13 = 0;
    goto LABEL_19;
  }
  __int16 v12 = *(_WORD *)(v11 + 20);
  if ((v12 & 0x24) != 0)
  {
    uint64_t v13 = *(void *)v11;
    goto LABEL_19;
  }
  if ((v12 & 8) == 0)
  {
    if ((v12 & 0x12) != 0 && *(void *)(v11 + 8))
    {
      uint64_t v13 = sub_1B0D186C0(v11);
      goto LABEL_19;
    }
    goto LABEL_54;
  }
  double v33 = *(double *)v11;
  if (*(double *)v11 >= -9.22337204e18)
  {
    if (v33 <= 9.22337204e18) {
      uint64_t v13 = (uint64_t)v33;
    }
    else {
      uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    }
  }
  else
  {
    uint64_t v13 = 0x8000000000000000;
  }
LABEL_19:
  *(void *)(a1 + 24) = v13;
  if (a2 <= 2)
  {
    *(unsigned char *)(a1 + 32) = 0;
    goto LABEL_72;
  }
  uint64_t v18 = a5[2];
  if (!v18) {
    goto LABEL_36;
  }
  int v19 = *(unsigned __int16 *)(v18 + 20);
  if ((~v19 & 0x202) == 0 && *(unsigned char *)(v18 + 22) == 1)
  {
    uint64_t v18 = *(void *)(v18 + 8);
    if (!v18) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
  if (v19)
  {
    uint64_t v18 = 0;
    goto LABEL_36;
  }
  uint64_t v18 = sub_1B0D18254((int *)v18, 1);
  if (!v18)
  {
LABEL_36:
    *(void *)(*(void *)a1 + 16) = sqlite3_mprintf("unknown datatype: %Q", v18);
    return 1;
  }
LABEL_28:
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v21 = *(unsigned __int8 *)(v18 + i);
    uint64_t v22 = aInt32[i];
    if (v21 != v22) {
      break;
    }
    if (!*(unsigned char *)(v18 + i))
    {
      char v17 = 0;
      goto LABEL_71;
    }
LABEL_30:
    ;
  }
  if (byte_1B0DE1758[v21] == byte_1B0DE1758[v22]) {
    goto LABEL_30;
  }
  for (uint64_t j = 0; ; ++j)
  {
    uint64_t v25 = *(unsigned __int8 *)(v18 + j);
    uint64_t v26 = aInt64_0[j];
    if (v25 != v26) {
      break;
    }
    if (!*(unsigned char *)(v18 + j))
    {
      char v17 = 1;
      goto LABEL_71;
    }
LABEL_39:
    ;
  }
  if (byte_1B0DE1758[v25] == byte_1B0DE1758[v26]) {
    goto LABEL_39;
  }
  for (uint64_t k = 0; ; ++k)
  {
    uint64_t v28 = *(unsigned __int8 *)(v18 + k);
    uint64_t v29 = aDouble[k];
    if (v28 != v29) {
      break;
    }
    if (!*(unsigned char *)(v18 + k))
    {
      char v17 = 2;
      goto LABEL_71;
    }
LABEL_45:
    ;
  }
  if (byte_1B0DE1758[v28] == byte_1B0DE1758[v29]) {
    goto LABEL_45;
  }
  for (uint64_t m = 0; ; ++m)
  {
    uint64_t v31 = *(unsigned __int8 *)(v18 + m);
    uint64_t v32 = aChar_0[m];
    if (v31 != v32) {
      break;
    }
    if (!*(unsigned char *)(v18 + m))
    {
      char v17 = 3;
      goto LABEL_71;
    }
LABEL_57:
    ;
  }
  if (byte_1B0DE1758[v31] == byte_1B0DE1758[v32]) {
    goto LABEL_57;
  }
  for (uint64_t n = 0; ; ++n)
  {
    uint64_t v35 = *(unsigned __int8 *)(v18 + n);
    uint64_t v36 = aStructIovec[n];
    if (v35 == v36) {
      break;
    }
    if (byte_1B0DE1758[v35] != byte_1B0DE1758[v36]) {
      goto LABEL_36;
    }
LABEL_67:
    ;
  }
  if (*(unsigned char *)(v18 + n)) {
    goto LABEL_67;
  }
  char v17 = 4;
LABEL_71:
  *(unsigned char *)(a1 + 32) = v17;
LABEL_72:
  uint64_t result = 0;
  *(void *)(a1 + 8) = 1;
  return result;
}

uint64_t sub_1B0DDBBBC(uint64_t a1)
{
  return 0;
}

BOOL sub_1B0DDBBD0(uint64_t a1)
{
  return *(void *)(a1 + 8) > *(void *)(a1 + 24);
}

uint64_t sub_1B0DDBBE4(uint64_t a1, int **a2, int a3)
{
  if (a3 != 1)
  {
    if (a3 != 3)
    {
      if (a3 == 2)
      {
        uint64_t v3 = *(void *)(a1 + 24);
        if (a2)
        {
LABEL_5:
          uint64_t v4 = (uint64_t)*a2;
          if (((*a2)[5] & 0x9000) != 0)
          {
            sub_1B0D18980(v4, v3);
          }
          else
          {
            *(void *)uint64_t v4 = v3;
            *(_WORD *)(v4 + 20) = 4;
          }
          return 0;
        }
LABEL_18:
        int v11 = 97441;
      }
      else
      {
        switch(*(unsigned char *)(a1 + 32))
        {
          case 0:
            if (a2)
            {
              uint64_t v3 = *(int *)(*(void *)(a1 + 16) + 4 * *(void *)(a1 + 8) - 4);
              goto LABEL_5;
            }
            int v11 = 97431;
            break;
          case 1:
            if (!a2) {
              goto LABEL_18;
            }
            uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * *(void *)(a1 + 8) - 8);
            goto LABEL_5;
          case 2:
            if (!a2)
            {
              int v11 = 97397;
              break;
            }
            uint64_t v12 = *(void *)(*(void *)(a1 + 16) + 8 * *(void *)(a1 + 8) - 8);
            uint64_t v13 = *a2;
            if (((*a2)[5] & 0x9000) != 0) {
              sub_1B0D18138(*a2);
            }
            else {
              *((_WORD *)v13 + 10) = 1;
            }
            *(void *)uint64_t v13 = v12;
            *((_WORD *)v13 + 10) = 8;
            return 0;
          case 3:
            if (!a2) {
              goto LABEL_24;
            }
            uint64_t v14 = *(char **)(*(void *)(a1 + 16) + 8 * *(void *)(a1 + 8) - 8);
            uint64_t v6 = (uint64_t)a2;
            uint64_t v7 = v14;
            int v8 = -1;
            unsigned int v9 = 1;
            uint64_t v10 = -1;
            goto LABEL_9;
          case 4:
            if (a2)
            {
              uint64_t v16 = *(void *)(a1 + 16);
              uint64_t v17 = *(void *)(a1 + 8) - 1;
              int v8 = *(_DWORD *)(v16 + 16 * v17 + 8);
              if ((v8 & 0x80000000) == 0)
              {
                uint64_t v6 = (uint64_t)a2;
                uint64_t v7 = *(char **)(v16 + 16 * v17);
                unsigned int v9 = 0;
                uint64_t v10 = -1;
                goto LABEL_9;
              }
            }
            int v11 = 97366;
            break;
          default:
            uint64_t v3 = 0;
            if (!a2) {
              goto LABEL_18;
            }
            goto LABEL_5;
        }
      }
LABEL_25:
      sub_1B0CE1978(v11);
      return 0;
    }
    if (!a2)
    {
LABEL_24:
      int v11 = 97498;
      goto LABEL_25;
    }
    unsigned int v5 = off_1E5FF09B8[*(unsigned __int8 *)(a1 + 32)];
    uint64_t v6 = (uint64_t)a2;
    uint64_t v7 = v5;
    int v8 = -1;
    unsigned int v9 = 1;
    uint64_t v10 = 0;
LABEL_9:
    sub_1B0CEA530(v6, v7, v8, v9, (uint64_t (*)(uint64_t))v10);
  }
  return 0;
}

uint64_t sub_1B0DDBDFC(uint64_t a1, void *a2)
{
  *a2 = *(void *)(a1 + 8);
  return 0;
}

uint64_t sub_1B0DDBE10(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = (uint64_t *)a6;
  uint64_t v151 = *MEMORY[0x1E4F143B8];
  memset(v146, 0, sizeof(v146));
  long long v147 = 0u;
  long long v148 = 0u;
  memset(v149, 0, sizeof(v149));
  uint64_t v150 = 0;
  uint64_t v143 = 0;
  int v144 = 0;
  double v145 = 0;
  if ((int)a3 < 4)
  {
LABEL_101:
    sub_1B0DDD234((uint64_t)v146, "must specify either filename= or data= but not both", a3, a4, (uint64_t)a5, a6, a7, a8, v138);
    unsigned int v81 = 0;
    goto LABEL_121;
  }
  uint64_t v10 = a3;
  uint64_t v11 = 0xFFFFFFFFLL;
  int v142 = -99;
  uint64_t v12 = MEMORY[0x1E4F14390];
  for (uint64_t i = 3; i != v10; ++i)
  {
    uint64_t v14 = v11;
    uint64_t v15 = *(const char **)(a4 + 8 * i);
    uint64_t v16 = sub_1B0DDD2A4("filename", 8, v15);
    if (v16)
    {
      uint64_t v23 = 0;
      uint64_t v24 = "filename";
      goto LABEL_9;
    }
    uint64_t v16 = sub_1B0DDD2A4("data", 4, v15);
    if (v16)
    {
      uint64_t v23 = 1;
      uint64_t v24 = "data";
      goto LABEL_9;
    }
    uint64_t v16 = sub_1B0DDD2A4("schema", 6, v15);
    if (v16)
    {
      uint64_t v24 = "schema";
      uint64_t v23 = 2;
LABEL_9:
      LOBYTE(v149[0]) = 0;
      if ((&v143)[v23])
      {
        char v138 = (char)v24;
        uint64_t v25 = "more than one '%s' parameter";
      }
      else
      {
        uint64_t v26 = sqlite3_mprintf("%s", (const char *)v16);
        (&v143)[v23] = v26;
        if (v26)
        {
          int v27 = v26;
          for (size_t j = strlen(v26); j; --j)
          {
            uint64_t v29 = v27[j];
            if (v27[j] < 0)
            {
              if (!__maskrune(v29, 0x4000uLL)) {
                break;
              }
            }
            else if ((*(_DWORD *)(v12 + 4 * v29 + 60) & 0x4000) == 0)
            {
              break;
            }
          }
          v27[j] = 0;
          int v30 = *(unsigned __int8 *)v27;
          if (v30 == 39 || v30 == 34)
          {
            size_t v31 = strlen(v27);
            if (v31 >= 2)
            {
              unint64_t v32 = v31 - 1;
              if (v27[v31 - 1] == v30)
              {
                if (v32 < 2)
                {
                  uint64_t v51 = 0;
                }
                else
                {
                  uint64_t v33 = 0;
                  for (unint64_t k = 1; k < v32; ++k)
                  {
                    int v36 = v27[k];
                    if (v36 == v30)
                    {
                      if (v27[k + 1] == v30) {
                        ++k;
                      }
                      LOBYTE(v36) = v27[k];
                    }
                    unsigned int v35 = v33 + 1;
                    v27[v33++] = v36;
                  }
                  uint64_t v51 = v35;
                }
                v27[v51] = 0;
              }
            }
          }
LABEL_12:
          uint64_t v11 = v14;
          if (!LOBYTE(v149[0])) {
            continue;
          }
LABEL_120:
          unsigned int v81 = 0;
          int v8 = (uint64_t *)a6;
          goto LABEL_121;
        }
        uint64_t v25 = "out of memory";
      }
      sub_1B0DDD234((uint64_t)v146, v25, v17, v18, v19, v20, v21, v22, v138);
      goto LABEL_12;
    }
    char v37 = v15 - 1;
    unint64_t v38 = v15 + 8;
    do
    {
      int v40 = v38;
      uint64_t v41 = *((unsigned __int8 *)v37 + 1);
      if (v37[1] < 0) {
        int v39 = __maskrune(v41, 0x4000uLL);
      }
      else {
        int v39 = *(_DWORD *)(v12 + 4 * v41 + 60) & 0x4000;
      }
      ++v37;
      unint64_t v38 = v40 + 1;
    }
    while (v39);
    if (strncmp("header", v37, 6uLL))
    {
LABEL_40:
      char v42 = sub_1B0DDD2A4("columns", 7, v15);
      if (v42)
      {
        if (v142 < 1)
        {
          uint64_t v11 = v14;
          int v142 = atoi((const char *)v42);
          if (v142 <= 0)
          {
            int32x2_t v92 = "column= value must be positive";
            goto LABEL_119;
          }
          continue;
        }
        int32x2_t v92 = "more than one 'columns' parameter";
LABEL_119:
        sub_1B0DDD234((uint64_t)v146, v92, a3, a4, (uint64_t)a5, a6, a7, a8, v138);
      }
      else
      {
        sub_1B0DDD234((uint64_t)v146, "bad parameter: '%s'", a3, a4, (uint64_t)a5, a6, a7, a8, (char)v15);
      }
      goto LABEL_120;
    }
    int v43 = (char *)(v37 + 6);
    do
    {
      uint64_t v45 = (unsigned __int8 *)v43;
      uint64_t v46 = (unsigned __int8 *)v40;
      int v47 = *v43;
      if (v47 < 0) {
        int v44 = __maskrune(v47, 0x4000uLL);
      }
      else {
        int v44 = *(_DWORD *)(v12 + 4 * v47 + 60) & 0x4000;
      }
      int v43 = (char *)(v45 + 1);
      ++v40;
    }
    while (v44);
    if (!*v45)
    {
LABEL_76:
      uint64_t v11 = 1;
      goto LABEL_77;
    }
    if (*v45 != 61) {
      goto LABEL_40;
    }
    do
    {
      uint64_t v49 = v46;
      uint64_t v50 = v45[1];
      if ((char)v45[1] < 0) {
        int v48 = __maskrune(v50, 0x4000uLL);
      }
      else {
        int v48 = *(_DWORD *)(v12 + 4 * v50 + 60) & 0x4000;
      }
      ++v45;
      ++v46;
    }
    while (v48);
    uint64_t v52 = "yes";
    for (uint64_t m = v45; ; ++m)
    {
      uint64_t v54 = *(unsigned __int8 *)v52;
      uint64_t v55 = *m;
      if (v54 != v55) {
        break;
      }
      if (!*v52) {
        goto LABEL_76;
      }
LABEL_61:
      ++v52;
    }
    if (byte_1B0DE1758[v54] == byte_1B0DE1758[v55]) {
      goto LABEL_61;
    }
    uint64_t v56 = "on";
    for (uint64_t n = v45; ; ++n)
    {
      uint64_t v58 = *(unsigned __int8 *)v56;
      uint64_t v59 = *n;
      if (v58 != v59) {
        break;
      }
      if (!*v56) {
        goto LABEL_76;
      }
LABEL_67:
      ++v56;
    }
    if (byte_1B0DE1758[v58] == byte_1B0DE1758[v59]) {
      goto LABEL_67;
    }
    int v60 = "true";
    for (iuint64_t i = v45; ; ++ii)
    {
      uint64_t v62 = *(unsigned __int8 *)v60;
      uint64_t v63 = *ii;
      if (v62 != v63) {
        break;
      }
      if (!*v60) {
        goto LABEL_76;
      }
LABEL_73:
      ++v60;
    }
    if (byte_1B0DE1758[v62] == byte_1B0DE1758[v63]) {
      goto LABEL_73;
    }
    int v64 = *v45;
    if (v64 == 49 && !v45[1]) {
      goto LABEL_76;
    }
    int v65 = v49;
    int v66 = *v45;
    BOOL v67 = "no";
    while (2)
    {
      uint64_t v69 = *(unsigned __int8 *)v67;
      if (v69 == v66)
      {
        if (!v66) {
          goto LABEL_96;
        }
LABEL_83:
        ++v67;
        int v68 = *v65++;
        int v66 = v68;
        continue;
      }
      break;
    }
    if (byte_1B0DE1758[v69] == byte_1B0DE1758[v66]) {
      goto LABEL_83;
    }
    uint64_t v70 = v49;
    int v71 = *v45;
    uint64_t v72 = "off";
    while (2)
    {
      uint64_t v74 = *(unsigned __int8 *)v72;
      if (v74 == v71)
      {
        if (!v71) {
          goto LABEL_96;
        }
LABEL_88:
        ++v72;
        int v73 = *v70++;
        int v71 = v73;
        continue;
      }
      break;
    }
    if (byte_1B0DE1758[v74] == byte_1B0DE1758[v71]) {
      goto LABEL_88;
    }
    int v75 = *v45;
    uint64_t v76 = "false";
    while (2)
    {
      uint64_t v78 = *(unsigned __int8 *)v76;
      if (v78 == v75)
      {
        if (!v75) {
          goto LABEL_96;
        }
        goto LABEL_93;
      }
      if (byte_1B0DE1758[v78] == byte_1B0DE1758[v75])
      {
LABEL_93:
        ++v76;
        int v77 = *v49++;
        int v75 = v77;
        continue;
      }
      break;
    }
    if (v64 != 48 || v45[1]) {
      goto LABEL_40;
    }
LABEL_96:
    uint64_t v11 = 0;
LABEL_77:
    if ((v14 & 0x80000000) == 0)
    {
      int32x2_t v92 = "more than one 'header' parameter";
      goto LABEL_119;
    }
  }
  int v80 = v143;
  float32x4x2_t v79 = v144;
  int v8 = (uint64_t *)a6;
  if ((v143 != 0) != (v144 == 0)) {
    goto LABEL_101;
  }
  if ((v142 < 1 || v11 == 1) && sub_1B0DDD3AC((FILE **)v146, v143, v144))
  {
    unsigned int v81 = 0;
    goto LABEL_121;
  }
  if (sqlite3_initialize())
  {
    *a5 = 0;
    goto LABEL_108;
  }
  uint64_t v88 = sub_1B0C7FC94(56);
  *a5 = v88;
  if (!v88)
  {
LABEL_108:
    sub_1B0DDD234((uint64_t)v146, "out of memory", v82, v83, v84, v85, v86, v87, v138);
    unsigned int v81 = 7;
    goto LABEL_121;
  }
  uint64_t v90 = v88;
  *(void *)(v88 + 48) = 0;
  *(_OWORD *)(v88 + 16) = 0u;
  *(_OWORD *)(v88 + 32) = 0u;
  *(_OWORD *)uint64_t v88 = 0u;
  int32x2_t v91 = v145;
  if (!v145)
  {
    int v93 = v142;
    if (sqlite3_initialize() || (uint64_t v104 = sub_1B0C7FC94(32)) == 0)
    {
      uint64_t v94 = (sqlite3_str *)&unk_1E9B51E88;
    }
    else
    {
      uint64_t v94 = (sqlite3_str *)v104;
      *(void *)uint64_t v104 = 0;
      *(void *)(v104 + 8) = 0;
      *(_DWORD *)(v104 + 16) = 0;
      *(void *)(v104 + 20) = 2147483645;
      *(_WORD *)(v104 + 28) = 0;
    }
    sqlite3_str_appendf(v94, "CREATE TABLE x(");
    if (v142 < 0 && (int)v11 <= 0)
    {
      int v93 = 0;
      do
      {
        sub_1B0DDD4F8((uint64_t)v146, v105, v106, v107, v108, v109, v110, v111);
        ++v93;
      }
      while (v147 == 44);
    }
    if (v93 < 1 || (int)v11 > 0)
    {
      int v112 = 0;
      int v113 = v93;
      BOOL v115 = v93 < 0 && v11 != 0;
      uint64_t v116 = &byte_1B0DE9952;
      do
      {
        sub_1B0DDD4F8((uint64_t)v146, v105, v106, v107, v108, v109, v110, v111);
        int v118 = v113 > 0 && v112 < v113 || v115;
        if (v118 == 1)
        {
          char v138 = (char)v116;
          sqlite3_str_appendf(v94, "%s\"%w\" TEXT");
          ++v112;
          uint64_t v116 = ",";
        }
      }
      while (v147 == 44);
      if ((v113 & 0x80000000) == 0)
      {
        if (v112 < v113)
        {
          int v119 = v112 + 1;
          sqlite3_str_appendf(v94, "%sc%d TEXT", v116, v119);
          while (v113 != v119)
            sqlite3_str_appendf(v94, "%sc%d TEXT", ",", ++v119);
        }
        int v112 = v113;
      }
    }
    else
    {
      sqlite3_str_appendf(v94, "%sc%d TEXT", &byte_1B0DE9952, 0);
      if (v93 == 1)
      {
        int v112 = 1;
      }
      else
      {
        for (jsize_t j = 1; jj != v93; ++jj)
          sqlite3_str_appendf(v94, "%sc%d TEXT", ",", jj);
        int v112 = v93;
      }
    }
    *(_DWORD *)(v90 + 48) = v112;
    sqlite3_str_appendf(v94, ")");
    uint64_t v121 = sqlite3_str_finish(v94);
    double v145 = v121;
    if (v121)
    {
      int32x2_t v91 = v121;
      int v80 = v143;
      float32x4x2_t v79 = v144;
      goto LABEL_190;
    }
    sub_1B0DDD234((uint64_t)v146, "out of memory", v122, v123, v124, v125, v126, v127, v138);
    unsigned int v81 = 7;
LABEL_204:
    sub_1B0DDCA3C(v90);
LABEL_121:
    BOOL v95 = v143;
    if (!v143) {
      goto LABEL_128;
    }
    unint64_t v96 = (void (**)(const char *))&off_1EB21C9E8;
    if (dword_1EB21C9C0)
    {
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v95);
      --qword_1EB220150;
      off_1EB21C9E8(v95);
      BOOL v95 = (const char *)xmmword_1EB2201B0;
      if (!(void)xmmword_1EB2201B0)
      {
LABEL_128:
        int v97 = v144;
        if (!v144) {
          goto LABEL_135;
        }
        uint64_t v98 = (void (**)(FILE *))&off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v97);
          --qword_1EB220150;
          off_1EB21C9E8(v97);
          int v97 = (FILE *)xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0)
          {
LABEL_135:
            uint64_t v99 = v145;
            if (!v145) {
              goto LABEL_142;
            }
            uint64_t v100 = (uint64_t (**)(char *))&off_1EB21C9E8;
            if (dword_1EB21C9C0)
            {
              if ((void)xmmword_1EB2201B0) {
                xmmword_1EB21CA40(xmmword_1EB2201B0);
              }
              qword_1EB220108[0] -= (int)off_1EB21C9F8(v99);
              --qword_1EB220150;
              off_1EB21C9E8(v99);
              uint64_t v99 = (char *)xmmword_1EB2201B0;
              if (!(void)xmmword_1EB2201B0)
              {
LABEL_142:
                if (!LOBYTE(v149[0])) {
                  goto LABEL_151;
                }
                uint64_t v101 = *v8;
                if (*v8)
                {
                  uint64_t v102 = &off_1EB21C9E8;
                  if (dword_1EB21C9C0)
                  {
                    if ((void)xmmword_1EB2201B0) {
                      xmmword_1EB21CA40(xmmword_1EB2201B0);
                    }
                    qword_1EB220108[0] -= (int)off_1EB21C9F8(v101);
                    --qword_1EB220150;
                    off_1EB21C9E8(v101);
                    uint64_t v101 = xmmword_1EB2201B0;
                    if (!(void)xmmword_1EB2201B0) {
                      goto LABEL_150;
                    }
                    uint64_t v102 = &xmmword_1EB21CA50;
                  }
                  (*v102)(v101);
                }
LABEL_150:
                *int v8 = (uint64_t)sqlite3_mprintf("%s", (const char *)v149);
LABEL_151:
                sub_1B0DDD99C((uint64_t)v146);
                if (v81 <= 1) {
                  return 1;
                }
                else {
                  return v81;
                }
              }
              uint64_t v100 = (uint64_t (**)(char *))&xmmword_1EB21CA50;
            }
            (*v100)(v99);
            goto LABEL_142;
          }
          uint64_t v98 = (void (**)(FILE *))&xmmword_1EB21CA50;
        }
        (*v98)(v97);
        goto LABEL_135;
      }
      unint64_t v96 = (void (**)(const char *))&xmmword_1EB21CA50;
    }
    (*v96)(v95);
    goto LABEL_128;
  }
  if (v142 < 0)
  {
    do
    {
      sub_1B0DDD4F8((uint64_t)v146, v89, v82, v83, v84, v85, v86, v87);
      ++*(_DWORD *)(v90 + 48);
    }
    while (v147 == 44);
  }
  else
  {
    *(_DWORD *)(v88 + 48) = v142;
  }
LABEL_190:
  uint64_t v128 = 0;
  *(void *)(v90 + 24) = v80;
  *(void *)(v90 + 32) = v79;
  uint64_t v143 = 0;
  int v144 = 0;
  if (v11 == 1)
  {
    if (v79)
    {
      uint64_t v128 = SDWORD2(v147);
    }
    else
    {
      int v129 = MEMORY[0x1B3E9FE70](*(void *)&v146[0]);
      uint64_t v128 = v129 - (int)v148 + DWORD2(v147);
    }
  }
  *(void *)(v90 + 40) = v128;
  sub_1B0DDD99C((uint64_t)v146);
  int v130 = sqlite3_declare_vtab(a1, v91);
  if (v130)
  {
    unsigned int v81 = v130;
    sqlite3_errmsg(a1);
    sub_1B0DDD234((uint64_t)v146, "bad schema: '%s' - %s", v131, v132, v133, v134, v135, v136, (char)v91);
    goto LABEL_204;
  }
  uint64_t v137 = (void (**)(const char *))&off_1EB21C9E8;
  if (dword_1EB21C9C0)
  {
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v91);
    --qword_1EB220150;
    off_1EB21C9E8(v91);
    int32x2_t v91 = (const char *)xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v137 = (void (**)(const char *))&xmmword_1EB21CA50;
      goto LABEL_201;
    }
  }
  else
  {
LABEL_201:
    (*v137)(v91);
  }
  sqlite3_vtab_config(a1, 3);
  return 0;
}

uint64_t sub_1B0DDCA28(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 64) = 0x412E848000000000;
  return 0;
}

uint64_t sub_1B0DDCA3C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v3)(v2);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v3 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v4 = *(void *)(v1 + 32);
  if (!v4) {
    goto LABEL_15;
  }
  unsigned int v5 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_14;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v4);
  --qword_1EB220150;
  off_1EB21C9E8(v4);
  uint64_t v4 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    unsigned int v5 = &xmmword_1EB21CA50;
LABEL_14:
    (*v5)(v4);
  }
LABEL_15:
  uint64_t v6 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_20:
    (*v6)(v1);
    return 0;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v6 = &xmmword_1EB21CA50;
    goto LABEL_20;
  }
  return 0;
}

uint64_t sub_1B0DDCBD0(uint64_t a1, void *a2)
{
  int v4 = *(_DWORD *)(a1 + 48);
  if (sqlite3_initialize()) {
    return 7;
  }
  uint64_t v6 = 12 * v4 + 296;
  uint64_t v7 = (char *)sub_1B0C7FC94(v6);
  if (!v7) {
    return 7;
  }
  int v8 = v7;
  bzero(v7, v6);
  uint64_t v9 = (uint64_t)&v8[8 * *(int *)(a1 + 48) + 296];
  *((void *)v8 + 34) = v8 + 296;
  *((void *)v8 + 35) = v9;
  *a2 = v8;
  uint64_t result = sub_1B0DDD3AC((FILE **)v8 + 1, *(const char **)(a1 + 24), *(FILE **)(a1 + 32));
  if (result)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      uint64_t v11 = &off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v10);
        --qword_1EB220150;
        off_1EB21C9E8(v10);
        uint64_t v10 = xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_13;
        }
        uint64_t v11 = &xmmword_1EB21CA50;
      }
      (*v11)(v10);
    }
LABEL_13:
    *(void *)(a1 + 16) = sqlite3_mprintf("%s", v8 + 72);
    return 1;
  }
  return result;
}

uint64_t sub_1B0DDCD0C(uint64_t *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *a1;
  if (*(int *)(*a1 + 48) >= 1)
  {
    for (uint64_t i = 0; i < *(int *)(v2 + 48); ++i)
    {
      uint64_t v4 = *(void *)(v1[34] + 8 * i);
      if (v4)
      {
        unsigned int v5 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v4);
          --qword_1EB220150;
          off_1EB21C9E8(v4);
          uint64_t v4 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_4;
          }
          unsigned int v5 = &xmmword_1EB21CA50;
        }
        (*v5)(v4);
      }
LABEL_4:
      *(void *)(v1[34] + 8 * i) = 0;
      *(_DWORD *)(v1[35] + 4 * i) = 0;
    }
  }
  v6.n128_f64[0] = sub_1B0DDD99C((uint64_t)(v1 + 1));
  uint64_t v7 = (void (**)(uint64_t *, __n128))&off_1EB21C9E8;
  if (!dword_1EB21C9C0) {
    goto LABEL_16;
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108[0] -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  off_1EB21C9E8(v1);
  uint64_t v1 = (uint64_t *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    uint64_t v7 = (void (**)(uint64_t *, __n128))&xmmword_1EB21CA50;
LABEL_16:
    (*v7)(v1, v6);
  }
  return 0;
}

uint64_t sub_1B0DDCE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)a1;
  *(void *)(a1 + 288) = 0;
  uint64_t v10 = (FILE **)(a1 + 8);
  uint64_t v11 = *(int *)(a1 + 24);
  if ((int)v11 >= *(_DWORD *)(a1 + 28) - 1)
  {
    if (sub_1B0DDDB44(a1 + 8, 0)) {
      return 7;
    }
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    *(_DWORD *)(a1 + 24) = v11 + 1;
    *(unsigned char *)(v12 + v11) = 0;
  }
  uint64_t v14 = *(void *)(v9 + 40);
  if (*v10)
  {
    fseek(*v10, v14, 0);
    uint64_t v14 = 0;
    *(void *)(a1 + 56) = 0;
  }
  *(void *)(a1 + 48) = v14;
  sub_1B0DDCF24((uint64_t *)a1, v14, a3, a4, a5, a6, a7, a8);
  return 0;
}

uint64_t sub_1B0DDCF24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = 0;
  uint64_t v10 = (uint64_t)(a1 + 1);
  uint64_t v11 = *a1;
  while (1)
  {
    uint64_t v13 = sub_1B0DDD4F8(v10, a2, a3, a4, a5, a6, a7, a8);
    if (!v13)
    {
      if (v9) {
        goto LABEL_19;
      }
      a1[36] = -1;
      return 0;
    }
    if (v9 < *(_DWORD *)(v11 + 48)) {
      break;
    }
LABEL_4:
    if (*((_DWORD *)a1 + 10) != 44) {
      goto LABEL_19;
    }
  }
  uint64_t v14 = (const void *)v13;
  int v12 = *((_DWORD *)a1 + 6);
  if (*(_DWORD *)(a1[35] + 4 * v9) > v12)
  {
LABEL_3:
    memcpy(*(void **)(a1[34] + 8 * v9++), v14, v12 + 1);
    goto LABEL_4;
  }
  uint64_t v15 = *(void *)(a1[34] + 8 * v9);
  if (!sqlite3_initialize())
  {
    uint64_t v22 = sub_1B0C8E1B8(v15, v12 + 1);
    if (v22)
    {
      *(void *)(a1[34] + 8 * v9) = v22;
      *(_DWORD *)(a1[35] + 4 * v9) = *((_DWORD *)a1 + 6) + 1;
      int v12 = *((_DWORD *)a1 + 6);
      goto LABEL_3;
    }
  }
  sub_1B0DDD234(v10, "out of memory", v16, v17, v18, v19, v20, v21, v29);
  uint64_t v23 = *(void *)(v11 + 16);
  if (v23)
  {
    uint64_t v24 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_16;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v23);
    --qword_1EB220150;
    off_1EB21C9E8(v23);
    uint64_t v23 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v24 = &xmmword_1EB21CA50;
LABEL_16:
      (*v24)(v23);
    }
  }
  *(void *)(v11 + 16) = sqlite3_mprintf("%s", (const char *)a1 + 72);
LABEL_19:
  ++a1[36];
  if (v9 < *(_DWORD *)(v11 + 48))
  {
    for (uint64_t i = v9; i < *(int *)(v11 + 48); ++i)
    {
      uint64_t v26 = *(void *)(a1[34] + 8 * i);
      if (v26)
      {
        int v27 = &off_1EB21C9E8;
        if (dword_1EB21C9C0)
        {
          if ((void)xmmword_1EB2201B0) {
            xmmword_1EB21CA40(xmmword_1EB2201B0);
          }
          qword_1EB220108[0] -= (int)off_1EB21C9F8(v26);
          --qword_1EB220150;
          off_1EB21C9E8(v26);
          uint64_t v26 = xmmword_1EB2201B0;
          if (!(void)xmmword_1EB2201B0) {
            goto LABEL_22;
          }
          int v27 = &xmmword_1EB21CA50;
        }
        (*v27)(v26);
      }
LABEL_22:
      *(void *)(a1[34] + 8 * i) = 0;
      *(_DWORD *)(a1[35] + 4 * i) = 0;
    }
  }
  return 0;
}

uint64_t sub_1B0DDD1B0(uint64_t a1)
{
  return *(void *)(a1 + 288) >> 63;
}

uint64_t sub_1B0DDD1BC(void *a1, uint64_t a2, unsigned int a3)
{
  if ((a3 & 0x80000000) == 0 && *(_DWORD *)(*a1 + 48) > (signed int)a3)
  {
    uint64_t v3 = *(char **)(a1[34] + 8 * a3);
    if (v3)
    {
      if (a2) {
        sub_1B0CEA530(a2, v3, -1, 1u, (uint64_t (*)(uint64_t))0xFFFFFFFFFFFFFFFFLL);
      }
      else {
        sub_1B0CE1978(97498);
      }
    }
  }
  return 0;
}

uint64_t sub_1B0DDD224(uint64_t a1, void *a2)
{
  *a2 = *(void *)(a1 + 288);
  return 0;
}

void sub_1B0DDD234(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  int v9 = (unsigned char *)(a1 + 64);
  if (a2)
  {
    v10[0] = 0;
    v10[1] = a1 + 64;
    int v11 = 200;
    uint64_t v12 = 0;
    int v13 = 0;
    sqlite3_str_vappendf((sqlite3_str *)v10, a2, &a9);
    v9 += HIDWORD(v12);
  }
  else
  {
    sub_1B0CE1978(32992);
  }
  *int v9 = 0;
}

unsigned __int8 *sub_1B0DDD2A4(const char *a1, int a2, const char *a3)
{
  uint64_t v6 = MEMORY[0x1E4F14390];
  do
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 *)a3;
      if ((*a3 & 0x80000000) == 0) {
        break;
      }
      ++a3;
      if (!__maskrune(v7, 0x4000uLL)) {
        goto LABEL_5;
      }
    }
    ++a3;
  }
  while ((*(_DWORD *)(v6 + 4 * v7 + 60) & 0x4000) != 0);
  if (strncmp(a1, a3 - 1, a2)) {
    return 0;
  }
LABEL_5:
  int v8 = (unsigned __int8 *)&a3[a2 - 2];
  do
  {
    while (1)
    {
      uint64_t v9 = v8[1];
      if (((char)v8[1] & 0x80000000) == 0) {
        break;
      }
      ++v8;
      if (!__maskrune(v9, 0x4000uLL)) {
        goto LABEL_10;
      }
    }
    ++v8;
  }
  while ((*(_DWORD *)(v6 + 4 * v9 + 60) & 0x4000) != 0);
LABEL_10:
  if (*v8 != 61) {
    return 0;
  }
  do
  {
    while (1)
    {
      uint64_t v11 = v8[1];
      if (((char)v8[1] & 0x80000000) == 0) {
        break;
      }
      ++v8;
      if (!__maskrune(v11, 0x4000uLL)) {
        return v8;
      }
    }
    ++v8;
  }
  while ((*(_DWORD *)(v6 + 4 * v11 + 60) & 0x4000) != 0);
  return v8;
}

uint64_t sub_1B0DDD3AC(FILE **a1, const char *a2, FILE *__s)
{
  if (!a2)
  {
    a1[7] = __s;
    size_t v12 = strlen((const char *)__s);
    uint64_t result = 0;
    a1[6] = (FILE *)v12;
    return result;
  }
  if (sqlite3_initialize())
  {
    a1[7] = 0;
LABEL_4:
    sub_1B0DDD234((uint64_t)a1, "out of memory", v5, v6, v7, v8, v9, v10, v23);
    return 1;
  }
  uint64_t v13 = sub_1B0C7FC94(1024);
  a1[7] = (FILE *)v13;
  if (!v13) {
    goto LABEL_4;
  }
  uint64_t v14 = fopen(a2, "rb");
  *a1 = v14;
  if (!v14)
  {
    uint64_t v15 = a1[7];
    if (v15)
    {
      uint64_t v16 = (uint64_t (**)(FILE *))&off_1EB21C9E8;
      if (dword_1EB21C9C0)
      {
        if ((void)xmmword_1EB2201B0) {
          xmmword_1EB21CA40(xmmword_1EB2201B0);
        }
        qword_1EB220108[0] -= (int)off_1EB21C9F8(v15);
        --qword_1EB220150;
        off_1EB21C9E8(v15);
        uint64_t v15 = (FILE *)xmmword_1EB2201B0;
        if (!(void)xmmword_1EB2201B0) {
          goto LABEL_17;
        }
        uint64_t v16 = (uint64_t (**)(FILE *))&xmmword_1EB21CA50;
      }
      (*v16)(v15);
    }
LABEL_17:
    sub_1B0DDD99C((uint64_t)a1);
    sub_1B0DDD234((uint64_t)a1, "cannot open '%s' for reading", v17, v18, v19, v20, v21, v22, (char)a2);
    return 1;
  }
  return 0;
}

uint64_t sub_1B0DDD4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  while (1)
  {
    *(_DWORD *)(a1 + 16) = 0;
    unint64_t v9 = *(void *)(a1 + 40);
    if (v9 >= *(void *)(a1 + 48)) {
      break;
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *(void *)(a1 + 40) = v9 + 1;
    int v11 = *(unsigned __int8 *)(v10 + v9);
    if (v11 == 34) {
      goto LABEL_27;
    }
LABEL_6:
    if (v11 == -1)
    {
LABEL_26:
      uint64_t result = 0;
      *(_DWORD *)(a1 + 32) = -1;
      return result;
    }
    if (v11 != 239 || *(_DWORD *)(a1 + 28))
    {
      while (1)
      {
LABEL_75:
        if (v11 <= 44)
        {
          switch(v11)
          {
            case -1:
              goto LABEL_88;
            case 10:
              ++*(_DWORD *)(a1 + 24);
              int v41 = *(_DWORD *)(a1 + 16);
              BOOL v42 = __OFSUB__(v41, 1);
              int v43 = v41 - 1;
              if (v43 < 0 == v42 && *(unsigned char *)(*(void *)(a1 + 8) + v43) == 13) {
                *(_DWORD *)(a1 + 16) = v43;
              }
LABEL_88:
              *(_DWORD *)(a1 + 32) = v11;
              goto LABEL_89;
            case 44:
              goto LABEL_88;
          }
        }
        uint64_t v38 = *(int *)(a1 + 16);
        if ((int)v38 >= *(_DWORD *)(a1 + 20) - 1)
        {
          if (sub_1B0DDDB44(a1, v11)) {
            return 0;
          }
        }
        else
        {
          uint64_t v39 = *(void *)(a1 + 8);
          *(_DWORD *)(a1 + 16) = v38 + 1;
          *(unsigned char *)(v39 + v38) = v11;
        }
        unint64_t v40 = *(void *)(a1 + 40);
        if (v40 < *(void *)(a1 + 48))
        {
          uint64_t v37 = *(void *)(a1 + 56);
          *(void *)(a1 + 40) = v40 + 1;
          int v11 = *(unsigned __int8 *)(v37 + v40);
        }
        else
        {
          int v11 = -1;
          if (*(void *)a1) {
            int v11 = sub_1B0DDDAF4(a1);
          }
        }
      }
    }
    uint64_t v12 = *(int *)(a1 + 16);
    if ((int)v12 >= *(_DWORD *)(a1 + 20) - 1)
    {
      sub_1B0DDDB44(a1, v11);
    }
    else
    {
      uint64_t v13 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v12 + 1;
      *(unsigned char *)(v13 + v12) = v11;
    }
    unint64_t v14 = *(void *)(a1 + 40);
    if (v14 >= *(void *)(a1 + 48))
    {
      if (!*(void *)a1) {
        goto LABEL_73;
      }
      int v11 = sub_1B0DDDAF4(a1);
    }
    else
    {
      uint64_t v15 = *(void *)(a1 + 56);
      *(void *)(a1 + 40) = v14 + 1;
      int v11 = *(unsigned __int8 *)(v15 + v14);
    }
    if (v11 != 187) {
      goto LABEL_75;
    }
    uint64_t v16 = *(int *)(a1 + 16);
    if ((int)v16 >= *(_DWORD *)(a1 + 20) - 1)
    {
      sub_1B0DDDB44(a1, v11);
    }
    else
    {
      uint64_t v17 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v16 + 1;
      *(unsigned char *)(v17 + v16) = v11;
    }
    unint64_t v18 = *(void *)(a1 + 40);
    if (v18 >= *(void *)(a1 + 48))
    {
      if (!*(void *)a1)
      {
LABEL_73:
        int v11 = -1;
        goto LABEL_75;
      }
      int v11 = sub_1B0DDDAF4(a1);
    }
    else
    {
      uint64_t v19 = *(void *)(a1 + 56);
      *(void *)(a1 + 40) = v18 + 1;
      int v11 = *(unsigned __int8 *)(v19 + v18);
    }
    if (v11 != 191) {
      goto LABEL_75;
    }
    *(_DWORD *)(a1 + 28) = 1;
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (!*(void *)a1) {
    goto LABEL_26;
  }
  int v11 = sub_1B0DDDAF4(a1);
  if (v11 != 34) {
    goto LABEL_6;
  }
LABEL_27:
  int v21 = 0;
  int v22 = 0;
  int v23 = *(_DWORD *)(a1 + 24);
  while (1)
  {
    unint64_t v25 = *(void *)(a1 + 40);
    if (v25 >= *(void *)(a1 + 48))
    {
      if (!*(void *)a1) {
        goto LABEL_50;
      }
      int v27 = sub_1B0DDDAF4(a1);
    }
    else
    {
      uint64_t v26 = *(void *)(a1 + 56);
      *(void *)(a1 + 40) = v25 + 1;
      int v27 = *(unsigned __int8 *)(v26 + v25);
    }
    BOOL v28 = v21 == 34;
    if (v21 != 34 && v27 > 34)
    {
      int v22 = v21;
      int v21 = v27;
      goto LABEL_70;
    }
    if (v27 == 10) {
      goto LABEL_37;
    }
    char v29 = 0;
    if (v21 == 34 && v27 == 34)
    {
      unint64_t v30 = *(void *)(a1 + 40);
      if (v30 >= *(void *)(a1 + 48))
      {
        if (!*(void *)a1)
        {
          int v21 = 0;
LABEL_50:
          char v29 = 0;
          BOOL v28 = v21 == 34;
          int v27 = -1;
          goto LABEL_51;
        }
        int v21 = sub_1B0DDDAF4(a1);
        if (v21 > 34)
        {
LABEL_47:
          int v22 = 0;
          goto LABEL_70;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(a1 + 56);
        *(void *)(a1 + 40) = v30 + 1;
        int v21 = *(unsigned __int8 *)(v31 + v30);
        if (v21 > 0x22) {
          goto LABEL_47;
        }
      }
      BOOL v28 = 0;
      if (v21 != 10)
      {
        int v22 = 0;
        if (v21 == -1) {
          goto LABEL_98;
        }
        goto LABEL_70;
      }
      int v21 = 0;
LABEL_37:
      ++*(_DWORD *)(a1 + 24);
      char v29 = 1;
      int v27 = 10;
    }
LABEL_51:
    if (v27 == 44) {
      char v32 = 1;
    }
    else {
      char v32 = v29;
    }
    if (v28 && (v32 & 1) != 0) {
      goto LABEL_94;
    }
    if (v21 != 13 || v22 != 34) {
      char v29 = 0;
    }
    if (v29) {
      goto LABEL_94;
    }
    char v34 = !v28;
    char v35 = v27 == -1 ? v34 : 1;
    if ((v35 & 1) == 0) {
      break;
    }
    if (v27 == 13) {
      char v34 = 1;
    }
    if ((v34 & 1) == 0)
    {
      sub_1B0DDD234(a1, "line %d: unescaped %c character", a3, a4, a5, a6, a7, a8, *(_DWORD *)(a1 + 24));
      goto LABEL_89;
    }
    int v22 = v21;
    int v21 = v27;
    if (v27 == -1)
    {
LABEL_98:
      sub_1B0DDD234(a1, "line %d: unterminated %c-quoted field\n", a3, a4, a5, a6, a7, a8, v23);
      *(_DWORD *)(a1 + 32) = -1;
      goto LABEL_89;
    }
LABEL_70:
    uint64_t v36 = *(int *)(a1 + 16);
    if ((int)v36 < *(_DWORD *)(a1 + 20) - 1)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v36 + 1;
      *(unsigned char *)(v24 + v36) = v21;
    }
    else if (sub_1B0DDDB44(a1, v21))
    {
      return 0;
    }
  }
  LOBYTE(v27) = -1;
LABEL_94:
  uint64_t v45 = *(int *)(a1 + 16);
  uint64_t v46 = (unsigned __int8 *)(v45 + *(void *)(a1 + 8) - 1);
  int v47 = v45 - 1;
  do
  {
    *(_DWORD *)(a1 + 16) = v47;
    int v48 = *v46--;
    --v47;
  }
  while (v48 != 34);
  *(_DWORD *)(a1 + 32) = (char)v27;
LABEL_89:
  uint64_t v44 = *(void *)(a1 + 8);
  if (v44)
  {
    *(unsigned char *)(v44 + *(int *)(a1 + 16)) = 0;
    uint64_t result = *(void *)(a1 + 8);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 28) = 1;
  return result;
}

double sub_1B0DDD99C(uint64_t a1)
{
  uint64_t v2 = *(FILE **)a1;
  if (v2)
  {
    fclose(v2);
    uint64_t v3 = *(void *)(a1 + 56);
    if (v3)
    {
      uint64_t v4 = &off_1EB21C9E8;
      if (!dword_1EB21C9C0)
      {
LABEL_8:
        (*v4)(v3);
        goto LABEL_9;
      }
      if ((void)xmmword_1EB2201B0) {
        xmmword_1EB21CA40(xmmword_1EB2201B0);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v3);
      --qword_1EB220150;
      off_1EB21C9E8(v3);
      uint64_t v3 = xmmword_1EB2201B0;
      if ((void)xmmword_1EB2201B0)
      {
        uint64_t v4 = &xmmword_1EB21CA50;
        goto LABEL_8;
      }
    }
  }
LABEL_9:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    uint64_t v6 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_15:
      (*v6)(v5);
      goto LABEL_16;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v5);
    --qword_1EB220150;
    off_1EB21C9E8(v5);
    uint64_t v5 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      uint64_t v6 = &xmmword_1EB21CA50;
      goto LABEL_15;
    }
  }
LABEL_16:
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1B0DDDAF4(uint64_t a1)
{
  size_t v2 = fread(*(void **)(a1 + 56), 1uLL, 0x400uLL, *(FILE **)a1);
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  *(void *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v2;
  return **(char **)(a1 + 56);
}

uint64_t sub_1B0DDDB44(uint64_t a1, char a2)
{
  uint64_t v4 = *(int *)(a1 + 20);
  uint64_t v5 = *(void *)(a1 + 8);
  if (sqlite3_initialize() || (v13 = 2 * v4 + 100, (uint64_t v14 = sub_1B0C8E1B8(v5, v13)) == 0))
  {
    sub_1B0DDD234(a1, "out of memory", v6, v7, v8, v9, v10, v11, v17);
    return 1;
  }
  else
  {
    uint64_t v15 = v14;
    uint64_t result = 0;
    *(void *)(a1 + 8) = v15;
    uint64_t v16 = *(int *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v16 + 1;
    *(_DWORD *)(a1 + 20) = v13;
    *(unsigned char *)(v15 + v16) = a2;
  }
  return result;
}

int8x16_t *sub_1B0DDDBCC(uint64_t a1, int8x16_t *a2, int a3, int a4)
{
  char v4 = a4;
  *(void *)&v80[12] = *MEMORY[0x1E4F143B8];
  if (!a4)
  {
    if (*(unsigned char *)(a1 + 68)) {
      return a2;
    }
    if (*(void *)(a1 + 96)) {
      goto LABEL_8;
    }
LABEL_11:
    if (*(unsigned char *)(a1 + 70)) {
      return 0;
    }
    uint64_t v61 = (3 * *(_DWORD *)(a1 + 76));
    int v62 = sqlite3_initialize();
    if ((int)v61 >= 1 && v62 == 0)
    {
      uint64_t v64 = sub_1B0C7FC94(v61);
      *(void *)(a1 + 96) = v64;
      if (v64)
      {
        size_t v65 = *(unsigned int *)(a1 + 76);
        *(void *)(a1 + 104) = v64 + v65;
        int v66 = (void *)(v64 + v65 + v65);
        *(void *)(a1 + 88) = v66;
        bzero(v66, v65);
        goto LABEL_8;
      }
    }
    else
    {
      *(void *)(a1 + 96) = 0;
    }
    a2 = 0;
    *(unsigned char *)(a1 + 70) = 1;
    return a2;
  }
  if (*(unsigned char *)(a1 + 34 * (a4 & 1) + 1))
  {
    *(unsigned char *)(a1 + 68) = 1;
    return a2;
  }
  *(unsigned char *)(a1 + 68) = 0;
  if (!*(void *)(a1 + 96)) {
    goto LABEL_11;
  }
LABEL_8:
  int iv = a3;
  size_t v8 = *(unsigned __int8 *)(a1 + 69);
  if (*(unsigned char *)(a1 + 69))
  {
    if ((v4 & 4) != 0)
    {
      sqlite3_initialize();
      arc4random_buf(v80, v8);
      memcpy(&a2->i8[*(unsigned int *)(a1 + 80)], v80, *(unsigned __int8 *)(a1 + 69));
    }
    else
    {
      __memcpy_chk();
    }
  }
  uint64_t v9 = *(int *)(a1 + 72);
  if ((int)v9 >= 1) {
    bzero(&v80[-v9 + 12], *(unsigned int *)(a1 + 72));
  }
  dataOut = *(int8x16_t **)(a1 + 96);
  if ((v4 & 2) != 0)
  {
    uint64_t v11 = (unsigned __int8 *)(a1 + 34 * (v4 & 1));
    int v13 = *v11;
    uint64_t v12 = v11 + 2;
    if (v13 == 32) {
      size_t v14 = 32;
    }
    else {
      size_t v14 = 16;
    }
    CCCrypt(0, 0, 0, v12, v14, &iv, *(const void **)(a1 + 88), *(unsigned int *)(a1 + 76), dataOut, *(unsigned int *)(a1 + 76), 0);
    dataOut = *(int8x16_t **)(a1 + 96);
  }
  uint64_t v15 = a2;
  if ((v4 & 4) != 0) {
    uint64_t v15 = *(int8x16_t **)(a1 + 104);
  }
  unsigned int v16 = *(_DWORD *)(a1 + 80);
  if ((int)v16 < 9)
  {
    char v17 = (uint64_t *)dataOut;
    unint64_t v18 = (uint64_t *)a2;
    uint64_t v19 = (uint64_t *)v15;
    int v20 = *(_DWORD *)(a1 + 80);
    if ((a2 & 3) != 0) {
      goto LABEL_55;
    }
  }
  else
  {
    char v17 = (uint64_t *)dataOut;
    unint64_t v18 = (uint64_t *)a2;
    uint64_t v19 = (uint64_t *)v15;
    int v20 = *(_DWORD *)(a1 + 80);
    if ((((a2 | v15) | dataOut) & 7) == 0)
    {
      unsigned int v21 = v16 >= 0x10 ? v16 - 16 : 0;
      char v17 = (uint64_t *)dataOut;
      unint64_t v18 = (uint64_t *)a2;
      uint64_t v19 = (uint64_t *)v15;
      int v20 = *(_DWORD *)(a1 + 80);
      if (v21 < 0x41) {
        goto LABEL_35;
      }
      char v17 = (uint64_t *)dataOut;
      unint64_t v18 = (uint64_t *)a2;
      uint64_t v19 = (uint64_t *)v15;
      int v20 = *(_DWORD *)(a1 + 80);
      if ((unint64_t)((char *)v15 - (char *)dataOut) < 0x20) {
        goto LABEL_35;
      }
      char v17 = (uint64_t *)dataOut;
      unint64_t v18 = (uint64_t *)a2;
      uint64_t v19 = (uint64_t *)v15;
      int v20 = *(_DWORD *)(a1 + 80);
      if ((unint64_t)((char *)v15 - (char *)a2) < 0x20) {
        goto LABEL_35;
      }
      char v17 = (uint64_t *)dataOut;
      unint64_t v18 = (uint64_t *)a2;
      uint64_t v19 = (uint64_t *)v15;
      int v20 = *(_DWORD *)(a1 + 80);
      if ((unint64_t)((char *)v15 - (char *)dataOut) < 0x20) {
        goto LABEL_35;
      }
      uint64_t v22 = ((v21 + 7) >> 3) + 1;
      uint64_t v23 = v22 & 0x3FFFFFFC;
      char v17 = &dataOut->i64[v23];
      unint64_t v18 = &a2->i64[v23];
      uint64_t v19 = &v15->i64[v23];
      int v20 = v16 - 8 * (v22 & 0x3FFFFFFC);
      uint64_t v24 = v15 + 1;
      unint64_t v25 = a2 + 1;
      uint64_t v26 = dataOut + 1;
      uint64_t v27 = v22 & 0x3FFFFFFC;
      do
      {
        int8x16_t v28 = veorq_s8(*v26, *v25);
        v24[-1] = veorq_s8(v26[-1], v25[-1]);
        int8x16_t *v24 = v28;
        v24 += 2;
        v25 += 2;
        v26 += 2;
        v27 -= 4;
      }
      while (v27);
      if ((v22 & 0x3FFFFFFC) != v22)
      {
LABEL_35:
        unsigned int v29 = v20;
        do
        {
          uint64_t v31 = *v18++;
          uint64_t v30 = v31;
          uint64_t v32 = *v17++;
          *v19++ = v32 ^ v30;
          int v20 = v29 - 8;
          BOOL v33 = v29 > 0x10;
          v29 -= 8;
        }
        while (v33);
      }
    }
    if ((v18 & 3) != 0) {
      goto LABEL_55;
    }
  }
  if ((v17 & 3) == 0 && v20 >= 5)
  {
    unsigned int v34 = v20 - 8;
    if (v20 < 8) {
      unsigned int v34 = 0;
    }
    if (v34 < 0x29
      || (unint64_t)((char *)v19 - (char *)v17) < 0x20
      || (unint64_t)((char *)v19 - (char *)v18) < 0x20
      || (unint64_t)((char *)v19 - (char *)v17) < 0x20)
    {
      uint64_t v37 = v17;
      uint64_t v38 = v18;
      uint64_t v39 = v19;
    }
    else
    {
      uint64_t v35 = ((v34 + 3) >> 2) + 1;
      uint64_t v36 = 4 * (v35 & 0x7FFFFFF8);
      uint64_t v37 = (uint64_t *)((char *)v17 + v36);
      uint64_t v38 = (uint64_t *)((char *)v18 + v36);
      uint64_t v39 = (uint64_t *)((char *)v19 + v36);
      v20 -= 4 * (v35 & 0x7FFFFFF8);
      unint64_t v40 = (int8x16_t *)(v19 + 2);
      int v41 = (int8x16_t *)(v18 + 2);
      BOOL v42 = (int8x16_t *)(v17 + 2);
      uint64_t v43 = v35 & 0x7FFFFFF8;
      do
      {
        int8x16_t v44 = veorq_s8(*v42, *v41);
        v40[-1] = veorq_s8(v42[-1], v41[-1]);
        int8x16_t *v40 = v44;
        v40 += 2;
        v41 += 2;
        v42 += 2;
        v43 -= 8;
      }
      while (v43);
      char v17 = v37;
      unint64_t v18 = v38;
      uint64_t v19 = v39;
      if ((v35 & 0x7FFFFFF8) == v35)
      {
LABEL_56:
        uint64_t v49 = v20 - (v20 != 0);
        if (v49 < 7
          || (unint64_t)((char *)v19 - (char *)v17) < 0x20
          || (unint64_t)((char *)v19 - (char *)v18) < 0x20
          || (unint64_t)((char *)v19 - (char *)v17) < 0x20)
        {
          uint64_t v52 = v17;
          uint64_t v53 = v18;
          uint64_t v54 = v19;
        }
        else
        {
          uint64_t v50 = v49 + 1;
          if (v49 < 0x1F)
          {
            uint64_t v51 = 0;
            goto LABEL_84;
          }
          uint64_t v51 = v50 & 0x1FFFFFFE0;
          BOOL v67 = (int8x16_t *)(v19 + 2);
          int v68 = (int8x16_t *)(v18 + 2);
          uint64_t v69 = (int8x16_t *)(v17 + 2);
          uint64_t v70 = v50 & 0x1FFFFFFE0;
          do
          {
            int8x16_t v71 = veorq_s8(*v69, *v68);
            v67[-1] = veorq_s8(v69[-1], v68[-1]);
            *BOOL v67 = v71;
            v67 += 2;
            v68 += 2;
            v69 += 2;
            v70 -= 32;
          }
          while (v70);
          if (v50 == v51) {
            goto LABEL_65;
          }
          if ((v50 & 0x18) != 0)
          {
LABEL_84:
            v20 -= v50 & 0xFFFFFFF8;
            uint64_t v52 = (uint64_t *)((char *)v17 + (v50 & 0x1FFFFFFF8));
            uint64_t v53 = (uint64_t *)((char *)v18 + (v50 & 0x1FFFFFFF8));
            uint64_t v54 = (uint64_t *)((char *)v19 + (v50 & 0x1FFFFFFF8));
            uint64_t v72 = (int8x8_t *)((char *)v19 + v51);
            int v73 = (int8x8_t *)((char *)v18 + v51);
            uint64_t v74 = (int8x8_t *)((char *)v17 + v51);
            uint64_t v75 = v51 - (v50 & 0x1FFFFFFF8);
            do
            {
              int8x8_t v76 = *v73++;
              int8x8_t v77 = v76;
              int8x8_t v78 = *v74++;
              *v72++ = veor_s8(v78, v77);
              v75 += 8;
            }
            while (v75);
            if (v50 == (v50 & 0x1FFFFFFF8)) {
              goto LABEL_65;
            }
            goto LABEL_63;
          }
          uint64_t v54 = (uint64_t *)((char *)v19 + v51);
          uint64_t v53 = (uint64_t *)((char *)v18 + v51);
          uint64_t v52 = (uint64_t *)((char *)v17 + v51);
          v20 -= v51;
        }
LABEL_63:
        unsigned int v55 = v20 + 1;
        do
        {
          char v57 = *(unsigned char *)v53;
          uint64_t v53 = (uint64_t *)((char *)v53 + 1);
          char v56 = v57;
          char v58 = *(unsigned char *)v52;
          uint64_t v52 = (uint64_t *)((char *)v52 + 1);
          *(unsigned char *)uint64_t v54 = v58 ^ v56;
          uint64_t v54 = (uint64_t *)((char *)v54 + 1);
          --v55;
        }
        while (v55 > 1);
LABEL_65:
        unsigned int v16 = *(_DWORD *)(a1 + 80);
        goto LABEL_66;
      }
    }
    char v17 = v37;
    unint64_t v18 = v38;
    uint64_t v19 = v39;
    unsigned int v45 = v20;
    do
    {
      int v47 = *(_DWORD *)v18;
      unint64_t v18 = (uint64_t *)((char *)v18 + 4);
      int v46 = v47;
      int v48 = *(_DWORD *)v17;
      char v17 = (uint64_t *)((char *)v17 + 4);
      *(_DWORD *)uint64_t v19 = v48 ^ v46;
      uint64_t v19 = (uint64_t *)((char *)v19 + 4);
      int v20 = v45 - 4;
      BOOL v33 = v45 > 8;
      v45 -= 4;
    }
    while (v33);
    goto LABEL_56;
  }
LABEL_55:
  if (v20 >= 1) {
    goto LABEL_56;
  }
LABEL_66:
  unsigned int v59 = *(_DWORD *)(a1 + 76);
  if (v59 > v16) {
    memmove(&v15->i8[v16], &a2->i8[v16], v59 - v16);
  }
  if (a3 == 1)
  {
    v15[1].i8[0] ^= dataOut[1].u8[0];
    v15[1].i8[1] ^= dataOut[1].u8[1];
    v15[1].i8[2] ^= dataOut[1].u8[2];
    v15[1].i8[3] ^= dataOut[1].u8[3];
    v15[1].i8[4] ^= dataOut[1].u8[4];
    v15[1].i8[5] ^= dataOut[1].u8[5];
    v15[1].i8[6] ^= dataOut[1].u8[6];
    v15[1].i8[7] ^= dataOut[1].u8[7];
  }
  return v15;
}

uint64_t sub_1B0DDE1CC(uint64_t result, int a2, int a3)
{
  if (a3 >= 12) {
    unsigned __int8 v3 = 12;
  }
  else {
    unsigned __int8 v3 = a3;
  }
  *(unsigned char *)(result + 69) = v3;
  *(_DWORD *)(result + 76) = a2;
  *(_DWORD *)(result + 80) = a2 - a3;
  *(_DWORD *)(result + 72) = 12 - v3;
  return result;
}

uint64_t sub_1B0DDE1F0(uint64_t a1)
{
  uint64_t v1 = (_OWORD *)a1;
  uint64_t v2 = *(void *)(a1 + 96);
  if (v2)
  {
    unsigned __int8 v3 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0)
    {
LABEL_7:
      (*v3)(v2);
      goto LABEL_8;
    }
    if ((void)xmmword_1EB2201B0) {
      xmmword_1EB21CA40(xmmword_1EB2201B0);
    }
    qword_1EB220108 -= (int)off_1EB21C9F8(v2);
    --qword_1EB220150;
    off_1EB21C9E8(v2);
    uint64_t v2 = xmmword_1EB2201B0;
    if ((void)xmmword_1EB2201B0)
    {
      unsigned __int8 v3 = &xmmword_1EB21CA50;
      goto LABEL_7;
    }
  }
LABEL_8:
  v1[5] = 0u;
  v1[6] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  *uint64_t v1 = 0u;
  char v4 = &off_1EB21C9E8;
  if (!dword_1EB21C9C0)
  {
LABEL_13:
    uint64_t v6 = (uint64_t (*)(_OWORD *))*v4;
    return v6(v1);
  }
  if ((void)xmmword_1EB2201B0) {
    xmmword_1EB21CA40(xmmword_1EB2201B0);
  }
  qword_1EB220108 -= (int)off_1EB21C9F8(v1);
  --qword_1EB220150;
  uint64_t result = off_1EB21C9E8(v1);
  uint64_t v1 = (_OWORD *)xmmword_1EB2201B0;
  if ((void)xmmword_1EB2201B0)
  {
    char v4 = &xmmword_1EB21CA50;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1B0DDE344(unsigned char *a1)
{
  if (a1[16]) {
    return 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a1 + 56))();
  if (!result)
  {
    if (a1[9] != 5) {
      return 0;
    }
    uint64_t result = 0;
    a1[9] = 0;
  }
  return result;
}

uint64_t sub_1B0DDE4AC(uint64_t a1, int8x8_t *a2, unsigned int a3)
{
  v39[1] = *MEMORY[0x1E4F143B8];
  uint64_t v38 = 0;
  a2->i8[0] = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 48))(a1, &v38);
  if (result) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = v38 < 16;
  }
  if (!v7)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(*(void *)a1 + 16))(a1, v39, 4, v38 - 16);
    if (!result)
    {
      uint64_t v8 = bswap32(v39[0]);
      if (v8 >= a3) {
        return 0;
      }
      uint64_t result = 0;
      if (v8)
      {
        if (v38 - 16 >= v8)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(*(void *)a1 + 16))(a1, v39, 4, v38 - 12);
          if (!result)
          {
            unsigned int v9 = v39[0];
            uint64_t result = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(*(void *)a1 + 16))(a1, v39, 8, v38 - 8);
            if (!result)
            {
              if (v39[0] != 0xD763A120F905D5D9) {
                return 0;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t, int8x8_t *, uint64_t, uint64_t))(*(void *)a1 + 16))(a1, a2, v8, v38 - v8 - 16);
              if (!result)
              {
                unsigned int v10 = bswap32(v9);
                if (v8 < 8)
                {
                  uint64_t v11 = 0;
                  goto LABEL_26;
                }
                if (v8 >= 0x20)
                {
                  uint64_t v11 = v8 & 0xFFFFFFE0;
                  int32x4_t v12 = 0uLL;
                  int32x4_t v13 = (int32x4_t)v10;
                  size_t v14 = a2 + 2;
                  uint64_t v15 = v11;
                  int32x4_t v16 = 0uLL;
                  int32x4_t v17 = 0uLL;
                  int32x4_t v18 = 0uLL;
                  int32x4_t v19 = 0uLL;
                  int32x4_t v20 = 0uLL;
                  int32x4_t v21 = 0uLL;
                  do
                  {
                    int8x16_t v22 = *(int8x16_t *)v14[-2].i8;
                    int16x8_t v23 = vmovl_s8(*(int8x8_t *)v22.i8);
                    int16x8_t v24 = vmovl_high_s8(v22);
                    int16x8_t v25 = vmovl_s8(*v14);
                    int16x8_t v26 = vmovl_high_s8(*(int8x16_t *)v14->i8);
                    int32x4_t v17 = vsubw_high_s16(v17, v24);
                    int32x4_t v16 = vsubw_s16(v16, *(int16x4_t *)v24.i8);
                    int32x4_t v12 = vsubw_high_s16(v12, v23);
                    int32x4_t v13 = vsubw_s16(v13, *(int16x4_t *)v23.i8);
                    int32x4_t v21 = vsubw_high_s16(v21, v26);
                    int32x4_t v20 = vsubw_s16(v20, *(int16x4_t *)v26.i8);
                    int32x4_t v19 = vsubw_high_s16(v19, v25);
                    int32x4_t v18 = vsubw_s16(v18, *(int16x4_t *)v25.i8);
                    v14 += 4;
                    v15 -= 32;
                  }
                  while (v15);
                  unsigned int v10 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v18, v13), vaddq_s32(v20, v16)), vaddq_s32(vaddq_s32(v19, v12), vaddq_s32(v21, v17))));
                  if (v11 == v8) {
                    goto LABEL_28;
                  }
                  if ((v8 & 0x18) == 0)
                  {
LABEL_26:
                    unsigned int v34 = (char *)a2 + v11;
                    uint64_t v35 = v8 - v11;
                    do
                    {
                      int v36 = *v34++;
                      v10 -= v36;
                      --v35;
                    }
                    while (v35);
                    goto LABEL_28;
                  }
                }
                else
                {
                  uint64_t v11 = 0;
                }
                uint64_t v27 = v11;
                uint64_t v11 = v8 & 0xFFFFFFF8;
                int32x4_t v28 = 0uLL;
                int32x4_t v29 = (int32x4_t)v10;
                uint64_t v30 = (int8x8_t *)((char *)a2 + v27);
                uint64_t v31 = v27 - v11;
                do
                {
                  int8x8_t v32 = *v30++;
                  int16x8_t v33 = vmovl_s8(v32);
                  int32x4_t v28 = vsubw_high_s16(v28, v33);
                  int32x4_t v29 = vsubw_s16(v29, *(int16x4_t *)v33.i8);
                  v31 += 8;
                }
                while (v31);
                unsigned int v10 = vaddvq_s32(vaddq_s32(v29, v28));
                if (v11 != v8) {
                  goto LABEL_26;
                }
LABEL_28:
                uint64_t result = 0;
                if (v10) {
                  int v37 = 0;
                }
                else {
                  int v37 = v8;
                }
                a2->i8[v37] = 0;
                a2->i8[v37 + 1] = 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B0DDE754(uint64_t a1, int a2, _DWORD *a3, uint64_t *a4)
{
  char v4 = *(sqlite3 **)a1;
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  *a3 = 0;
  *a4 = 0;
  uint64_t v5 = *(unsigned int *)(a1 + 36);
  if (v5) {
    return v5;
  }
  uint64_t v9 = a1;
  uint64_t v5 = sqlite3_exec(*(sqlite3 **)a1, "SAVEPOINT changeset", 0, 0, 0);
  if (v5) {
    return v5;
  }
  char v58 = a3;
  unsigned int v59 = a4;
  if (!v4)
  {
    uint64_t v11 = "NULL";
    goto LABEL_12;
  }
  int v10 = *((unsigned __int8 *)v4 + 113);
  if (v10 == 186)
  {
LABEL_7:
    uint64_t v11 = "unopened";
LABEL_12:
    sqlite3_log(21, "API call with %s database connection pointer", v11);
    sub_1B0CE1978(186024);
    goto LABEL_13;
  }
  if (v10 != 118)
  {
    if (v10 != 109)
    {
      uint64_t v11 = "invalid";
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v12 = *((void *)v4 + 3);
  if (v12) {
    xmmword_1EB21CA40(v12);
  }
LABEL_13:
  uint64_t v13 = *(void *)(v9 + 88);
  if (!v13)
  {
    uint64_t v5 = 0;
    int v14 = 0;
    uint64_t v49 = a3;
    uint64_t v50 = v59;
    goto LABEL_102;
  }
  int v14 = 0;
  uint64_t v15 = &qword_1EB21FB68[147];
  int v64 = a2;
  uint64_t v60 = v9;
  uint64_t v61 = v4;
  do
  {
    if (!*(_DWORD *)(v13 + 48))
    {
      uint64_t v5 = 0;
      goto LABEL_36;
    }
    int32x4_t v16 = *(char **)(v13 + 8);
    int v69 = 0;
    uint64_t v67 = 0;
    int __s1 = 0;
    pStmt = 0;
    int v65 = 0;
    int32x4_t v17 = (BOOL *)&v65;
    if (!*(_DWORD *)(v9 + 32)) {
      int32x4_t v17 = 0;
    }
    unsigned int v70 = sub_1B0CFC460(0, v4, *(const char **)(v9 + 8), v16, &v69, 0, &v67, &__s1, v17);
    if (!v70)
    {
      size_t v18 = *(int *)(v13 + 16);
      if (v18 != v69 || *(_DWORD *)(v13 + 24) != v65 || memcmp(__s1, *(const void **)(v13 + 40), v18)) {
        unsigned int v70 = 17;
      }
    }
    sub_1B0DD6620((uint64_t)&v71, a2, v13, &v70);
    uint64_t v5 = v70;
    int v63 = v14;
    if (v70)
    {
      int v19 = v72;
LABEL_25:
      int v14 = v19;
      goto LABEL_26;
    }
    uint64_t v23 = sub_1B0DD6760((uint64_t)v4, 0, *(void *)(v9 + 8), (unsigned __int8 *)v16, v65, v69, v67, (uint64_t)__s1, &pStmt);
    uint64_t v5 = v23;
    unsigned int v70 = v23;
    int v19 = v72;
    int v24 = *(_DWORD *)(v13 + 52);
    if (v24 < 1 || v23) {
      goto LABEL_25;
    }
    int v62 = v72;
    uint64_t v25 = 0;
    int v26 = v69;
    uint64_t v27 = __s1;
    do
    {
      int32x4_t v28 = *(unsigned __int8 **)(*(void *)(v13 + 56) + 8 * v25);
      if (!v28)
      {
        int v29 = 0;
        goto LABEL_90;
      }
      do
      {
        uint64_t v30 = sub_1B0DD6BE0(pStmt, v26, (uint64_t)v27, (uint64_t)v28);
        unsigned int v70 = v30;
        if (v30) {
          break;
        }
        int v32 = sqlite3_step(pStmt);
        int v33 = *v28;
        if (v32 == 100)
        {
          if (v33 != 18)
          {
            uint64_t v39 = sub_1B0DD70AC((uint64_t)&v71, a2, (unsigned __int16 *)pStmt, (uint64_t)v28, (uint64_t)v27);
LABEL_59:
            uint64_t v5 = v39;
            unsigned int v70 = v39;
            if (v39) {
              goto LABEL_89;
            }
            goto LABEL_45;
          }
          LODWORD(v34) = HIDWORD(v72);
          uint64_t v35 = (int)v72;
          if ((int)v72 < SHIDWORD(v72))
          {
            uint64_t v36 = v71;
            goto LABEL_54;
          }
          if (HIDWORD(v72)) {
            int v40 = HIDWORD(v72);
          }
          else {
            int v40 = 128;
          }
          uint64_t v34 = v40;
          do
          {
            uint64_t v41 = v34;
            v34 *= 2;
          }
          while (v34 <= (int)v72);
          if (v41 > 1073741695 && (uint64_t v34 = 2147483391, (int)v72 > 2147483390)
            || (uint64_t v42 = v71, sqlite3_initialize())
            || (uint64_t v47 = sub_1B0C8E1B8(v42, v34)) == 0)
          {
            unsigned int v70 = 7;
            if (v26 < 1) {
              goto LABEL_44;
            }
          }
          else
          {
            uint64_t v36 = v47;
            uint64_t v71 = v47;
            HIDWORD(v72) = v34;
LABEL_54:
            uint64_t v37 = v35 + 1;
            LODWORD(v72) = v35 + 1;
            *(unsigned char *)(v36 + v35) = 18;
            unsigned __int8 v38 = v28[1];
            if ((int)v35 + 1 >= (int)v34)
            {
              if (v34) {
                int v43 = v34;
              }
              else {
                int v43 = 128;
              }
              uint64_t v44 = v43;
              do
              {
                uint64_t v45 = v44;
                v44 *= 2;
              }
              while (v44 <= v37);
              if (v45 <= 1073741695 || (uint64_t v44 = 2147483391, (int)v35 <= 2147483389))
              {
                if (!sqlite3_initialize())
                {
                  uint64_t v48 = sub_1B0C8E1B8(v36, v44);
                  if (v48)
                  {
                    uint64_t v36 = v48;
                    uint64_t v71 = v48;
                    HIDWORD(v72) = v44;
                    goto LABEL_55;
                  }
                }
              }
              unsigned int v70 = 7;
            }
            else
            {
LABEL_55:
              LODWORD(v72) = v35 + 2;
              *(unsigned char *)(v36 + v37) = v38;
            }
            a2 = v64;
            if (v26 < 1) {
              goto LABEL_44;
            }
          }
          for (int i = 0; i != v26; ++i)
            sub_1B0DD6E6C((uint64_t)&v71, pStmt, i, &v70);
          goto LABEL_44;
        }
        if (v33 != 18)
        {
          uint64_t v39 = sub_1B0DD76E4((uint64_t)&v71, a2, (uint64_t)v28, v26, v27);
          goto LABEL_59;
        }
LABEL_44:
        uint64_t v5 = v70;
        if (v70) {
          goto LABEL_89;
        }
LABEL_45:
        uint64_t v30 = sqlite3_reset(pStmt);
        unsigned int v70 = v30;
        int32x4_t v28 = (unsigned __int8 *)*((void *)v28 + 3);
        if (v30) {
          BOOL v31 = 1;
        }
        else {
          BOOL v31 = v28 == 0;
        }
      }
      while (!v31);
      uint64_t v5 = v30;
LABEL_89:
      int v24 = *(_DWORD *)(v13 + 52);
      int v29 = v5;
LABEL_90:
      ++v25;
    }
    while (v25 < v24 && !v29);
    int v14 = v72;
    uint64_t v9 = v60;
    char v4 = v61;
    uint64_t v15 = qword_1EB21FB68 + 1176;
    int v19 = v62;
LABEL_26:
    sqlite3_finalize(pStmt);
    if (v14 == v19) {
      int v14 = v63;
    }
    LODWORD(v72) = v14;
    uint64_t v20 = v67;
    if (v67)
    {
      int32x4_t v21 = (void (**)(uint64_t))&off_1EB21C9E8;
      if (!dword_1EB21C9C0) {
        goto LABEL_34;
      }
      uint64_t v22 = v15[54];
      if (v22) {
        xmmword_1EB21CA40(v22);
      }
      qword_1EB220108[0] -= (int)off_1EB21C9F8(v20);
      --qword_1EB220150;
      off_1EB21C9E8(v20);
      uint64_t v20 = v15[54];
      if (v20)
      {
        int32x4_t v21 = (void (**)(uint64_t))&xmmword_1EB21CA50;
LABEL_34:
        (*v21)(v20);
      }
    }
LABEL_36:
    if (v5) {
      break;
    }
    uint64_t v13 = *(void *)v13;
  }
  while (v13);
  uint64_t v49 = v58;
  uint64_t v50 = v59;
  if (!v5)
  {
LABEL_102:
    _DWORD *v49 = v14;
    *uint64_t v50 = v71;
    goto LABEL_103;
  }
  uint64_t v51 = v71;
  if (v71)
  {
    uint64_t v52 = &off_1EB21C9E8;
    if (!dword_1EB21C9C0) {
      goto LABEL_100;
    }
    uint64_t v53 = v15[54];
    if (v53) {
      xmmword_1EB21CA40(v53);
    }
    qword_1EB220108[0] -= (int)off_1EB21C9F8(v51);
    --qword_1EB220150;
    off_1EB21C9E8(v51);
    uint64_t v51 = v15[54];
    if (v51)
    {
      uint64_t v52 = &xmmword_1EB21CA50;
LABEL_100:
      (*v52)(v51);
    }
  }
LABEL_103:
  sqlite3_exec(v4, "RELEASE changeset", 0, 0, 0);
  if (!v4)
  {
    unsigned int v55 = "NULL";
    goto LABEL_112;
  }
  int v54 = *((unsigned __int8 *)v4 + 113);
  if (v54 == 186) {
    goto LABEL_107;
  }
  if (v54 == 118)
  {
    uint64_t v56 = *((void *)v4 + 3);
    if (v56) {
      xmmword_1EB21CA50(v56);
    }
  }
  else
  {
    if (v54 == 109) {
LABEL_107:
    }
      unsigned int v55 = "unopened";
    else {
      unsigned int v55 = "invalid";
    }
LABEL_112:
    sqlite3_log(21, "API call with %s database connection pointer", v55);
    sub_1B0CE1978(186024);
  }
  return v5;
}

uint64_t sub_1B0DDEDE0(uint64_t result, uint64_t a2, unsigned int a3, int a4, unsigned int a5, int a6, uint64_t *a7)
{
  uint64_t v11 = result;
  uint64_t v13 = (_DWORD *)(result + 60);
  int v12 = *(_DWORD *)(result + 60);
  if (v12)
  {
    int v14 = 0;
  }
  else if ((a5 & 0x80000000) != 0)
  {
    if ((a3 & 0x40) != 0 || *(void *)(result + 24) == 0) {
      int v14 = *(_DWORD *)(a2 + 24);
    }
    else {
      int v14 = *(_DWORD *)(a2 + 24) + 1;
    }
  }
  else if (*(_DWORD *)(a2 + 16 * a5 + 36) >= a6)
  {
    int v14 = a6;
  }
  else
  {
    int v14 = *(_DWORD *)(a2 + 16 * a5 + 36);
  }
  int v16 = 2;
  do
  {
    unsigned int v17 = v16;
    v16 *= 2;
  }
  while ((int)v17 < v14);
  if (v12) {
    goto LABEL_40;
  }
  uint64_t v18 = 4 * v17 + 136 * (int)(v17 - 1) + 232;
  uint64_t result = sqlite3_initialize();
  if (result || (uint64_t result = sub_1B0C7FC94(v18)) == 0)
  {
    if (v18 >= 1) {
      _DWORD *v13 = 7;
    }
    goto LABEL_40;
  }
  uint64_t v19 = result;
  bzero((void *)result, v18);
  *(_DWORD *)(v19 + 64) = v17;
  *(void *)(v19 + 88) = v19 + 136 * v17 + 96;
  *(void *)(v19 + 24) = v11;
  *(void *)(v19 + 56) = nullsub_14;
  *a7 = v19;
  *(_DWORD *)(v19 + 68) = (a3 >> 1) & 1;
  *(unsigned char *)(v19 + 72) = (a3 & 0x10) != 0;
  *(void *)(v19 + 48) = 0;
  if ((a3 & 0x20) == 0) {
    sub_1B0DB0BF0((uint64_t)v13, v19);
  }
  if (*v13) {
    goto LABEL_39;
  }
  if ((a5 & 0x80000000) != 0)
  {
    int v23 = 0;
    unint64_t v24 = a2 + 32;
    unint64_t v25 = a2 + 32 + 16 * *(int *)(a2 + 28);
    if ((a3 & 0x40) == 0 && *(void *)(v11 + 24))
    {
      sub_1B0DB0D18(v11, 0, a4, a3, v19 + 96);
      int v23 = 1;
    }
    for (; v24 < v25; v24 += 16)
    {
      uint64_t v26 = *(unsigned int *)(v24 + 4);
      if ((int)v26 >= 1)
      {
        unint64_t v27 = v26 + 1;
        uint64_t v28 = v19 + 96 + 136 * v23;
        v23 += v26;
        do
        {
          sub_1B0DB105C((_DWORD *)v11, *(void *)(v24 + 8) + 56 * (v27-- - 2), v28);
          v28 += 136;
        }
        while (v27 > 1);
      }
    }
  }
  else if (v14 >= 1)
  {
    uint64_t v20 = (void *)(a2 + 16 * a5 + 40);
    uint64_t v21 = v14 - 1;
    uint64_t v22 = v19 + 96;
    do
    {
      sub_1B0DB105C((_DWORD *)v11, *v20 + 56 * v21--, v22);
      v22 += 136;
    }
    while (v21 != -1);
  }
  if (*v13)
  {
LABEL_39:
    uint64_t result = sub_1B0DA8128(v19);
LABEL_40:
    *a7 = 0;
    return result;
  }
  int v29 = *(_DWORD *)(v19 + 64);
  if (v29 >= 2)
  {
    do
    {
      int v31 = sub_1B0DAC68C(v19, v29 - 1);
      if (v31)
      {
        int v32 = v31;
        if (!*v13) {
          (*(void (**)(uint64_t, uint64_t, void))(v19 + 136 * v31 + 152))(v11, v19 + 136 * v31 + 96, 0);
        }
        int v33 = *(_DWORD *)(v19 + 64);
        BOOL v34 = __OFADD__(v33, v32);
        int v35 = v33 + v32;
        if (v35 < 0 != v34) {
          ++v35;
        }
        while (1)
        {
          int v36 = v35 >> 1;
          if (v35 >> 1 < v29 - 1 || *v13) {
            break;
          }
          int v37 = sub_1B0DAC68C(v19, v36);
          if (v37)
          {
            int v38 = v37;
            (*(void (**)(uint64_t, uint64_t, void))(v19 + 136 * v37 + 152))(v11, v19 + 136 * v37 + 96, 0);
            int v36 = *(_DWORD *)(v19 + 64) + v38;
          }
          if (v36 >= 0) {
            int v35 = v36;
          }
          else {
            int v35 = v36 + 1;
          }
        }
      }
    }
    while (v29-- > 2);
  }
  unsigned int v39 = *(unsigned __int16 *)(*(void *)(v19 + 88) + 4);
  uint64_t v40 = v19 + 136 * *(unsigned __int16 *)(*(void *)(v19 + 88) + 4);
  uint64_t v41 = *(void *)(v40 + 112);
  *(unsigned char *)(v19 + 20) = v41 == 0;
  *(void *)(v19 + 80) = *(void *)(v40 + 216);
  if (*(unsigned char *)(v19 + 72) && !*v13 && v41 && !*(_DWORD *)(v19 + 136 * v39 + 224)
    || (uint64_t result = sub_1B0DAB7B4(v19), result))
  {
    return sub_1B0DAB298(v11, v19, 0, 0);
  }
  else if (!*(unsigned char *)(v19 + 20))
  {
    uint64_t v42 = v19 + 136 * *(unsigned __int16 *)(*(void *)(v19 + 88) + 4) + 96;
    int v43 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 56);
    return v43(v19, v42);
  }
  return result;
}

void sub_1B0DDF1F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t sub_1B0DDF210(sqlite3 *a1)
{
  uint64_t result = sqlite3_create_function(a1, "uuid", 0, 2097153, 0, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_1B0DDF2F8, 0, 0);
  if (!result)
  {
    uint64_t result = sqlite3_create_function(a1, "uuid_str", 1, 2099201, 0, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_1B0DDF3EC, 0, 0);
    if (!result)
    {
      return sqlite3_create_function(a1, "uuid_blob", 1, 2099201, 0, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_1B0DDF4C0, 0, 0);
    }
  }
  return result;
}

void sub_1B0DDF2F8(sqlite3_context *a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  sqlite3_randomness(16, P);
  uint64_t v2 = 0;
  char v9 = v9 & 0xF | 0x40;
  char v10 = v10 & 0x3F | 0x80;
  unsigned __int8 v3 = v7;
  unsigned int v4 = 1360;
  do
  {
    if (v4) {
      *v3++ = 45;
    }
    unint64_t v5 = P[v2];
    char v6 = a0123456789abcd_1[v5 >> 4];
    LOBYTE(v5) = a0123456789abcd_1[v5 & 0xF];
    char *v3 = v6;
    v3[1] = v5;
    v3 += 2;
    ++v2;
    v4 >>= 1;
  }
  while (v2 != 16);
  char *v3 = 0;
  sqlite3_result_text(a1, v7, 36, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
}

void sub_1B0DDF3EC(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  unsigned int v4 = (unsigned __int8 *)sub_1B0DDF538(*a3, (uint64_t)v11);
  if (v4)
  {
    uint64_t v5 = 0;
    char v6 = v10;
    unsigned int v7 = 1360;
    do
    {
      if (v7) {
        *v6++ = 45;
      }
      unint64_t v8 = v4[v5];
      char v9 = a0123456789abcd_1[v8 >> 4];
      LOBYTE(v8) = a0123456789abcd_1[v8 & 0xF];
      *char v6 = v9;
      v6[1] = v8;
      v6 += 2;
      ++v5;
      v7 >>= 1;
    }
    while (v5 != 16);
    *char v6 = 0;
    sqlite3_result_text(a1, v10, 36, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
  }
}

void sub_1B0DDF4C0(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  unsigned int v4 = sub_1B0DDF538(*a3, (uint64_t)v5);
  if (v4) {
    sqlite3_result_blob(a1, v4, 16, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
  }
}

const void *sub_1B0DDF538(sqlite3_value *a1, uint64_t a2)
{
  int v4 = sqlite3_value_type(a1);
  if (v4 != 4)
  {
    if (v4 == 3)
    {
      uint64_t v5 = sqlite3_value_text(a1);
      uint64_t v6 = 0;
      if (*v5 == 123) {
        unsigned int v7 = v5 + 1;
      }
      else {
        unsigned int v7 = v5;
      }
      uint64_t v8 = MEMORY[0x1E4F14390];
      while (1)
      {
        if (*v7 == 45) {
          ++v7;
        }
        uint64_t v9 = *v7;
        if ((*(_DWORD *)(v8 + 4 * v9 + 60) & 0x10000) == 0) {
          break;
        }
        uint64_t v10 = v7[1];
        if ((*(_DWORD *)(v8 + 4 * v10 + 60) & 0x10000) == 0) {
          break;
        }
        *(unsigned char *)(a2 + v6) = ((((char)(2 * v10) >> 7) & 0xF9) + v10) & 0xF | (16
                                                                                           * ((((char)(2 * v9) >> 7) & 0xF9)
                                                                                            + v9));
        v7 += 2;
        if (++v6 == 16)
        {
          uint64_t v11 = v7 + 1;
          if (*v7 != 125) {
            uint64_t v11 = v7;
          }
          if (*v11) {
            return 0;
          }
          else {
            return (const void *)a2;
          }
        }
      }
    }
    return 0;
  }
  if (sqlite3_value_bytes(a1) != 16) {
    return 0;
  }

  return sqlite3_value_blob(a1);
}

void sub_1B0DDF658()
{
  if (getenv("SQLITE_SQLLOG_DIR"))
  {
    if (os_variant_allows_internal_security_policies())
    {
      if (!sqlite3_config(21, sub_1B0DDF768, 0))
      {
        bzero(qword_1E9B52310, 0x2428uLL);
        dword_1E9B52320 = 1;
        if (getenv("SQLITE_SQLLOG_CONDITIONAL")) {
          dword_1E9B5231C = 1;
        }
      }
    }
    else if (qword_1E9B52308 != -1)
    {
      dispatch_once(&qword_1E9B52308, &unk_1F09A5F00);
    }
  }
}

void sub_1B0DDF730()
{
}

void sub_1B0DDF768(uint64_t a1, sqlite3 *a2, const char *a3, int a4)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  unsigned int v7 = sqlite3_mutex_alloc(2);
  uint64_t v8 = v7;
  if (!a4)
  {
    sqlite3_mutex_enter(v7);
    if (!qword_1E9B52310[0]) {
      qword_1E9B52310[0] = (uint64_t)sqlite3_mutex_alloc(1);
    }
    sqlite3_mutex_leave(v8);
    sqlite3_mutex_enter((sqlite3_mutex *)qword_1E9B52310[0]);
    if (dword_1E9B5272C) {
      goto LABEL_18;
    }
    if (dword_1E9B5231C && !sub_1B0DDFFC4(a2, "main", 0, __s))
    {
      int v25 = strlen(__s);
      if (v25 >= 505)
      {
        sqlite3_log(10, "sqllogTraceDb(): database name too long (%d bytes)", v25);
        goto LABEL_18;
      }
      *(void *)&__s[v25] = 0x676F6C6C71732DLL;
      if (access(__s, 0)) {
        goto LABEL_18;
      }
    }
    sqlite3_mutex_enter(v8);
    uint64_t v12 = dword_1E9B52318++;
    uint64_t v13 = &qword_1E9B52310[4 * v12];
    v13[136] = 0;
    v13[134] = (uint64_t)a2;
    LODWORD(v12) = dword_1E9B52724++;
    *((_DWORD *)v13 + 270) = v12;
    sqlite3_mutex_leave(v8);
    if (v13[136]) {
      goto LABEL_17;
    }
    if (!byte_1E9B52324)
    {
      uint64_t v26 = getenv("SQLITE_SQLLOG_DIR");
      if (!v26) {
        goto LABEL_18;
      }
      unint64_t v27 = v26;
      if (strlen(v26) - 502 < 0xFFFFFFFFFFFFFE00) {
        goto LABEL_18;
      }
      pid_t v28 = getpid();
      sqlite3_snprintf(512, &byte_1E9B52324, "%s/sqllog_%05d", v27, v28);
      sqlite3_snprintf(512, byte_1E9B52524, "%s.idx", &byte_1E9B52324);
      int v29 = getenv("SQLITE_SQLLOG_REUSE_FILES");
      if (v29) {
        dword_1E9B52320 = atoi(v29);
      }
      uint64_t v30 = fopen(byte_1E9B52524, "w");
      if (v30) {
        fclose(v30);
      }
    }
    int v14 = sqlite3_mprintf("%s_%05d.sql", &byte_1E9B52324, *((_DWORD *)v13 + 270));
    v13[136] = (uint64_t)fopen(v14, "w");
    sqlite3_free(v14);
    if (v13[136] || (sqlite3_log(10, "sqllogOpenlog(): Failed to open log file"), v13[136])) {
LABEL_17:
    }
      sub_1B0DDFC2C((uint64_t)(v13 + 133), "main", 0);
LABEL_18:
    sqlite3_mutex_leave((sqlite3_mutex *)qword_1E9B52310[0]);
    return;
  }
  int v9 = dword_1E9B52318;
  if (dword_1E9B52318 < 1)
  {
    uint64_t v11 = 0;
    int v9 = 0;
    if (a4 == 2)
    {
LABEL_23:
      sqlite3_mutex_enter(v7);
      int v15 = dword_1E9B52318;
      if (v9 < dword_1E9B52318)
      {
        int v16 = (FILE *)v11[3];
        if (v16)
        {
          fclose(v16);
          int v15 = dword_1E9B52318;
        }
        v11[1] = 0;
        v11[3] = 0;
        dword_1E9B52318 = --v15;
      }
      if (v15)
      {
        if (v9 < v15)
        {
          unint64_t v17 = (char *)&qword_1E9B52310[4 * v15] - (char *)v11 + 1064;
          if ((int)(v17 >> 5) >= 1) {
            memmove(v11, v11 + 4, v17 & 0x1FFFFFFFE0);
          }
        }
      }
      else
      {
        sqlite3_mutex_free((sqlite3_mutex *)qword_1E9B52310[0]);
        qword_1E9B52310[0] = 0;
      }
      uint64_t v18 = v8;
LABEL_33:
      sqlite3_mutex_leave(v18);
    }
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)&unk_1E9B52738;
    while ((sqlite3 *)v11[1] != a2)
    {
      ++v10;
      v11 += 4;
      if (dword_1E9B52318 == v10)
      {
        uint64_t v11 = &qword_1E9B52310[4 * (dword_1E9B52318 - 1) + 133];
        if (a4 == 2) {
          goto LABEL_23;
        }
        return;
      }
    }
    if (a4 == 2)
    {
      int v9 = v10;
      goto LABEL_23;
    }
    if (v11[3])
    {
      sqlite3_mutex_enter((sqlite3_mutex *)qword_1E9B52310[0]);
      if (!dword_1E9B5272C)
      {
        for (int i = a3; ; ++i)
        {
          int v20 = *(unsigned __int8 *)i;
          if ((v20 - 9) >= 5 && v20 != 32) {
            break;
          }
        }
        uint64_t v21 = 0;
        do
          unsigned int v22 = (i[v21++] & 0xDF) - 65;
        while (v22 < 0x1A);
        if (v21 == 7 && !sqlite3_strnicmp("ATTACH", i, 6))
        {
          sub_1B0DDFC2C((uint64_t)v11, 0, 1);
        }
        else
        {
          int v23 = (FILE *)v11[3];
          int v24 = dword_1E9B52730++;
          fprintf(v23, "%s; -- clock=%d\n", a3, v24);
        }
      }
      uint64_t v18 = (sqlite3_mutex *)qword_1E9B52310[0];
      goto LABEL_33;
    }
  }
}

void sub_1B0DDFC2C(uint64_t a1, const char *a2, int a3)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  if (sub_1B0DDFFC4(*(sqlite3 **)(a1 + 8), a2, zSourceName, __s)) {
    return;
  }
  if (__s[0])
  {
    if (dword_1E9B52320)
    {
      uint64_t v5 = fopen(byte_1E9B52524, "r");
      if (v5)
      {
        uint64_t v6 = v5;
        if (feof(v5))
        {
LABEL_6:
          unsigned int v7 = 0;
        }
        else
        {
          while (1)
          {
            if (fgets((char *)ppDb, 1029, v6))
            {
              char v37 = 0;
              int v14 = (char *)&v35 + 7;
              do
              {
                int v16 = *(unsigned __int8 *)++v14;
                int v15 = v16;
              }
              while ((v16 - 48) < 0xA);
              while (v15 == 32)
              {
                int v17 = *(unsigned __int8 *)++v14;
                int v15 = v17;
              }
              LODWORD(v18) = strlen(v14);
              if ((int)v18 >= 1)
              {
                uint64_t v18 = v18;
                while (1)
                {
                  uint64_t v19 = v18 - 1;
                  int v20 = v14[(v18 - 1)];
                  if ((v20 - 9) >= 5 && v20 != 32) {
                    break;
                  }
                  --v18;
                  if ((unint64_t)(v19 + 1) <= 1)
                  {
                    LODWORD(v18) = 0;
                    break;
                  }
                }
              }
              size_t v21 = (int)v18;
              if (strlen(__s) == (int)v18 && !memcmp(__s, v14, v21)) {
                break;
              }
            }
            if (feof(v6)) {
              goto LABEL_6;
            }
          }
          uint64_t v35 = 0;
          uint64_t v34 = 0;
          char v22 = (char)ppDb[0];
          if (LOBYTE(ppDb[0]) - 48 <= 9)
          {
            int v23 = (unsigned __int8 *)ppDb + 1;
            int v24 = &v34;
            do
            {
              *(unsigned char *)int v24 = v22;
              int v24 = (uint64_t *)((char *)v24 + 1);
              int v25 = *v23++;
              char v22 = v25;
            }
            while ((v25 - 48) < 0xA);
          }
          unsigned int v7 = sqlite3_mprintf("%s_%s.db", &byte_1E9B52324, (const char *)&v34);
        }
        if (ferror(v6)) {
          sqlite3_log(10, "sqllogFindFile(): error reading index file");
        }
        fclose(v6);
        if (v7) {
          goto LABEL_41;
        }
      }
      else
      {
        sqlite3_log(10, "sqllogFindFile(): error in fopen()");
      }
    }
    ppDb[0] = 0;
    int v8 = dword_1E9B52728++;
    unsigned int v7 = sqlite3_mprintf("%s_%02d.db", &byte_1E9B52324, v8);
    dword_1E9B5272C = 1;
    int v9 = sqlite3_open(v7, ppDb);
    if (v9)
    {
      int v10 = v9;
      dword_1E9B5272C = 0;
    }
    else
    {
      sqlite3_exec(ppDb[0], "PRAGMA synchronous = 0", 0, 0, 0);
      uint64_t v11 = sqlite3_backup_init(ppDb[0], "main", *(sqlite3 **)(a1 + 8), zSourceName);
      if (v11)
      {
        uint64_t v12 = v11;
        sqlite3_backup_step(v11, -1);
        int v13 = sqlite3_backup_finish(v12);
      }
      else
      {
        int v13 = sqlite3_errcode(ppDb[0]);
      }
      int v10 = v13;
      sqlite3_close(ppDb[0]);
      dword_1E9B5272C = 0;
      if (!v10)
      {
        int v29 = fopen(byte_1E9B52524, "a");
        if (v29)
        {
          uint64_t v30 = v29;
          fprintf(v29, "%d %s\n", v8, __s);
          fclose(v30);
        }
        goto LABEL_41;
      }
    }
    sqlite3_log(v10, "sqllogCopydb(): error backing up database");
  }
  else
  {
    unsigned int v7 = sqlite3_mprintf(&byte_1B0DE9952);
  }
LABEL_41:
  if (a3)
  {
    uint64_t v26 = dword_1E9B52730++;
    unint64_t v27 = sqlite3_mprintf("ATTACH '%q' AS '%q'; -- clock=%d\n", v7, zSourceName, v26);
  }
  else
  {
    unint64_t v27 = sqlite3_mprintf("-- Main database is '%q'\n", v7, v31);
  }
  pid_t v28 = v27;
  fputs(v27, *(FILE **)(a1 + 24));
  sqlite3_free(v28);
  sqlite3_free(v7);
}

uint64_t sub_1B0DDFFC4(sqlite3 *a1, const char *a2, void *a3, void *a4)
{
  ppStmt = 0;
  dword_1E9B5272C = 1;
  uint64_t v7 = sqlite3_prepare_v2(a1, "PRAGMA database_list", -1, &ppStmt, 0);
  if (v7)
  {
    uint64_t v8 = v7;
    dword_1E9B5272C = 0;
LABEL_10:
    sqlite3_log(v8, "sqllogFindAttached(): error in \"PRAGMA database_list\"");
    return v8;
  }
  while (sqlite3_step(ppStmt) == 100)
  {
    int v9 = sqlite3_column_text(ppStmt, 1);
    int v10 = sqlite3_column_bytes(ppStmt, 1);
    int v11 = v10;
    if (a3) {
      memcpy(a3, v9, v10 + 1);
    }
    uint64_t v12 = sqlite3_column_text(ppStmt, 2);
    int v13 = sqlite3_column_bytes(ppStmt, 2);
    memcpy(a4, v12, v13 + 1);
    if (a2)
    {
      if (strlen(a2) == v11 && !sqlite3_strnicmp(a2, (const char *)v9, v11)) {
        break;
      }
    }
  }
  uint64_t v8 = sqlite3_finalize(ppStmt);
  dword_1E9B5272C = 0;
  if (v8) {
    goto LABEL_10;
  }
  return v8;
}

void sub_1B0DE010C(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = __error();
  unsigned __int8 v3 = strerror(*v2);
  int v4 = 136315394;
  uint64_t v5 = a1;
  __int16 v6 = 2080;
  uint64_t v7 = v3;
  _os_log_fault_impl(&dword_1B0C76000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Failed to open temporary file at path %s: %s", (uint8_t *)&v4, 0x16u);
}

void sub_1B0DE01B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1B0DE01EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1B0DE0228(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v3 = 134218496;
  uint64_t v4 = a1;
  __int16 v5 = 1024;
  int v6 = a2;
  __int16 v7 = 2048;
  uint64_t v8 = a3;
  _os_log_fault_impl(&dword_1B0C76000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "seekAndWrite(%lld, %d): improbable offset+len for file with size hint %lld", (uint8_t *)&v3, 0x1Cu);
}

void sub_1B0DE02C0(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  int v4 = 134218496;
  uint64_t v5 = a2;
  __int16 v6 = 1024;
  int v7 = a3;
  __int16 v8 = 2048;
  uint64_t v9 = v3;
  _os_log_fault_impl(&dword_1B0C76000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "seekAndWrite(%lld, %d): improbable offset+len for file with observed size %lld", (uint8_t *)&v4, 0x1Cu);
}

void sub_1B0DE035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1B0DE0398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1B0DE03D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1B0DE0410(uint64_t a1, int a2, os_log_t log)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v3 = *(unsigned __int8 *)(a1 + 70);
  int v4 = *(unsigned __int8 *)(a1 + 66);
  v5[0] = 67109632;
  v5[1] = a2;
  __int16 v6 = 1024;
  int v7 = v3;
  __int16 v8 = 1024;
  int v9 = v4;
  _os_log_error_impl(&dword_1B0C76000, log, OS_LOG_TYPE_ERROR, "locking protocol: lockstate:%d, bShmUnreliable:%d, readOnly:%d", (uint8_t *)v5, 0x14u);
}

void sub_1B0DE04A8()
{
}

void sub_1B0DE04C4()
{
}

void sub_1B0DE04E0()
{
}

void sub_1B0DE04FC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = *(unsigned __int8 *)(a1 + 33);
  if (v3 <= 3 && ((uint64_t v5 = *(void *)(a1 + 40), v4 = a1 + 40, v5) || *(void *)(a2 + 16 * v3 + 64) == v4)) {
    __int16 v6 = "unpinned";
  }
  else {
    __int16 v6 = "pinned";
  }
  int v7 = 136446466;
  __int16 v8 = v6;
  __int16 v9 = 1024;
  int v10 = a3;
  _os_log_fault_impl(&dword_1B0C76000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "xRekey overwriting %{public}s page at index %d", (uint8_t *)&v7, 0x12u);
}

CCCryptorStatus CCCrypt(CCOperation op, CCAlgorithm alg, CCOptions options, const void *key, size_t keyLength, const void *iv, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return MEMORY[0x1F40C94A8](*(void *)&op, *(void *)&alg, *(void *)&options, key, keyLength, iv, dataIn, dataInLength);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9778](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9780](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9788](c, data, *(void *)&len);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

uint64_t __mac_syscall()
{
  return MEMORY[0x1F40C9C10]();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x1F40C9C18](*(void *)&a1, a2);
}

uint64_t __memcpy_chk()
{
  return MEMORY[0x1F40C9C28]();
}

uint64_t __memset_chk()
{
  return MEMORY[0x1F40C9C38]();
}

int __sprintf_chk(char *a1, int a2, size_t a3, const char *a4, ...)
{
  return MEMORY[0x1F40C9CA0](a1, *(void *)&a2, a3, a4);
}

uint64_t __strlcat_chk()
{
  return MEMORY[0x1F40C9CD0]();
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x1F40C9CD8]();
}

uint64_t _dispatch_is_fork_of_multithreaded_parent()
{
  return MEMORY[0x1F40C9D68]();
}

uint64_t _dispatch_is_multithreaded()
{
  return MEMORY[0x1F40C9D70]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

int access(const char *a1, int a2)
{
  return MEMORY[0x1F40CA210](a1, *(void *)&a2);
}

void arc4random_buf(void *__buf, size_t __nbytes)
{
}

int asprintf(char **a1, const char *a2, ...)
{
  return MEMORY[0x1F40CA440](a1, a2);
}

double atof(const char *a1)
{
  MEMORY[0x1F40CA498](a1);
  return result;
}

int atoi(const char *a1)
{
  return MEMORY[0x1F40CA4A8](a1);
}

uint64_t atoll(const char *a1)
{
  return MEMORY[0x1F40CA4C8](a1);
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return MEMORY[0x1F40CB438](*(void *)&a1, a2, a3);
}

int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
{
  return MEMORY[0x1F40CB880](from, to, state, *(void *)&flags);
}

char *__cdecl dirname_r(const char *a1, char *a2)
{
  return (char *)MEMORY[0x1F40CB910](a1, a2);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_set_context(dispatch_object_t object, void *context)
{
}

uint64_t dispatch_source_cancel_and_wait()
{
  return MEMORY[0x1F40CBC90]();
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x1F40CBCA0](source);
}

uintptr_t dispatch_source_get_handle(dispatch_source_t source)
{
  return MEMORY[0x1F40CBCA8](source);
}

void dispatch_source_set_event_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1F40CBDB8](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

uint64_t dyld_get_program_sdk_version()
{
  return MEMORY[0x1F40CBE28]();
}

uint64_t dyld_process_is_restricted()
{
  return MEMORY[0x1F40CBE98]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1F40CBEC8]();
}

int fclose(FILE *a1)
{
  return MEMORY[0x1F40CC050](a1);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x1F40CC058](*(void *)&a1, *(void *)&a2);
}

int fcopyfile(int from_fd, int to_fd, copyfile_state_t a3, copyfile_flags_t flags)
{
  return MEMORY[0x1F40CC060](*(void *)&from_fd, *(void *)&to_fd, a3, *(void *)&flags);
}

int feof(FILE *a1)
{
  return MEMORY[0x1F40CC098](a1);
}

int ferror(FILE *a1)
{
  return MEMORY[0x1F40CC0A0](a1);
}

int fgetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x1F40CC0E0](*(void *)&a1, a2, a3, a4, *(void *)&a5);
}

char *__cdecl fgets(char *a1, int a2, FILE *a3)
{
  return (char *)MEMORY[0x1F40CC100](a1, *(void *)&a2, a3);
}

int flock(int a1, int a2)
{
  return MEMORY[0x1F40CC160](*(void *)&a1, *(void *)&a2);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1F40CC1C0](__filename, __mode);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x1F40CC1D8](a1, a2);
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x1F40CC1F0](a1, a2);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1F40CC200](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fsctl(const char *a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x1F40CC288](a1, a2, a3, *(void *)&a4);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x1F40CC290](a1, a2, *(void *)&a3);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x1F40CC2B8](*(void *)&a1, a2);
}

int fstatfs(int a1, statfs *a2)
{
  return MEMORY[0x1F40CC2D0](*(void *)&a1, a2);
}

int fsync(int a1)
{
  return MEMORY[0x1F40CC2D8](*(void *)&a1);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x1F40CC2E0](a1);
}

int ftruncate(int a1, off_t a2)
{
  return MEMORY[0x1F40CC2F0](*(void *)&a1, a2);
}

int futimes(int a1, const timeval *a2)
{
  return MEMORY[0x1F40CC330](*(void *)&a1, a2);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1F40CC3B0](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1F40CC3B8]();
}

pid_t getpid(void)
{
  return MEMORY[0x1F40CC4A0]();
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x1F40CC4C0]();
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x1F40CC568](a1, a2);
}

uint64_t guarded_open_dprotected_np()
{
  return MEMORY[0x1F40CC5C0]();
}

uint64_t guarded_open_np()
{
  return MEMORY[0x1F40CC5C8]();
}

int isatty(int a1)
{
  return MEMORY[0x1F40CC6B0](*(void *)&a1);
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return (tm *)MEMORY[0x1F40CC870](a1, a2);
}

long double log(long double __x)
{
  MEMORY[0x1F40CC878](__x);
  return result;
}

long double log10(long double __x)
{
  MEMORY[0x1F40CC880](__x);
  return result;
}

long double log2(long double __x)
{
  MEMORY[0x1F40CC8A8](__x);
  return result;
}

off_t lseek(int a1, off_t a2, int a3)
{
  return MEMORY[0x1F40CC8F8](*(void *)&a1, a2, *(void *)&a3);
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x1F40CC930]();
}

malloc_zone_t *__cdecl malloc_create_zone(vm_size_t start_size, unsigned int flags)
{
  return (malloc_zone_t *)MEMORY[0x1F40CCB20](start_size, *(void *)&flags);
}

malloc_zone_t *malloc_default_zone(void)
{
  return (malloc_zone_t *)MEMORY[0x1F40CCB30]();
}

void malloc_set_zone_name(malloc_zone_t *zone, const char *name)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCBA8](ptr, size, type_id);
}

void *__cdecl malloc_type_valloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCBB0](size, type_id);
}

void *__cdecl malloc_type_zone_malloc(malloc_zone_t *zone, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCBC0](zone, size, type_id);
}

void *__cdecl malloc_type_zone_realloc(malloc_zone_t *zone, void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCBD8](zone, ptr, size, type_id);
}

void malloc_zone_free(malloc_zone_t *zone, void *ptr)
{
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD20](__b, *(void *)&__c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

int mincore(const void *a1, size_t a2, char *a3)
{
  return MEMORY[0x1F40CCDA0](a1, a2, a3);
}

int mkstemp(char *a1)
{
  return MEMORY[0x1F40CCE08](a1);
}

int nanosleep(const timespec *__rqtp, timespec *__rmtp)
{
  return MEMORY[0x1F40CCEA0](__rqtp, __rmtp);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1F40CD0E0](a1, *(void *)&a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1F40CD558](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1F40CD560](log, ptr);
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x1F40CD5F0](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x1F40CD610]();
}

uint64_t os_unfair_recursive_lock_trylock()
{
  return MEMORY[0x1F40CD618]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x1F40CD628]();
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x1F40CD630]();
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1F40CD648]();
}

void perror(const char *a1)
{
}

int pipe(int a1[2])
{
  return MEMORY[0x1F40CD760](a1);
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return MEMORY[0x1F40CD830](*(void *)&__fd, __buf, __nbyte, a4);
}

ssize_t pwrite(int __fd, const void *__buf, size_t __nbyte, off_t a4)
{
  return MEMORY[0x1F40CDBC0](*(void *)&__fd, __buf, __nbyte, a4);
}

void qsort(void *__base, size_t __nel, size_t __width, int (__cdecl *__compar)(const void *, const void *))
{
}

uint64_t random(void)
{
  return MEMORY[0x1F40CDC18]();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return MEMORY[0x1F40CDC50](*(void *)&a1, a2, a3);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x1F40CE080](__str, __size, __format);
}

void srandomdev(void)
{
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x1F40CE110](a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return MEMORY[0x1F40CE118](a1, a2);
}

int strcasecmp(const char *a1, const char *a2)
{
  return MEMORY[0x1F40CE138](a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1F40CE150](__s, *(void *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strcpy(char *__dst, const char *__src)
{
  return (char *)MEMORY[0x1F40CE168](__dst, __src);
}

size_t strcspn(const char *__s, const char *__charset)
{
  return MEMORY[0x1F40CE170](__s, __charset);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1F40CE178](__s1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

int strerror_r(int __errnum, char *__strerrbuf, size_t __buflen)
{
  return MEMORY[0x1F40CE190](*(void *)&__errnum, __strerrbuf, __buflen);
}

size_t strlcat(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1F40CE1A8](__dst, __source, __size);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1F40CE1B0](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int strncasecmp(const char *a1, const char *a2, size_t a3)
{
  return MEMORY[0x1F40CE1D8](a1, a2, a3);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1F40CE1F0](__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1F40CE1F8](__dst, __src, __n);
}

char *__cdecl strndup(const char *__s1, size_t __n)
{
  return (char *)MEMORY[0x1F40CE200](__s1, __n);
}

char *__cdecl strrchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1F40CE230](__s, *(void *)&__c);
}

size_t strspn(const char *__s, const char *__charset)
{
  return MEMORY[0x1F40CE250](__s, __charset);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x1F40CE258](__s1, __s2);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1F40CE2A0](__str, __endptr, *(void *)&__base);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1F40CE2C0](__str, __endptr, *(void *)&__base);
}

uint64_t sysconf(int a1)
{
  return MEMORY[0x1F40CE3B8](*(void *)&a1);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1F40CE3D0](a1, a2, a3, a4, a5);
}

time_t time(time_t *a1)
{
  return MEMORY[0x1F40CE588](a1);
}

int truncate(const char *a1, off_t a2)
{
  return MEMORY[0x1F40CE5B0](a1, a2);
}

int unlink(const char *a1)
{
  return MEMORY[0x1F40CE5E0](a1);
}

int utime(const char *a1, const utimbuf *a2)
{
  return MEMORY[0x1F40CE610](a1, a2);
}

void uuid_unparse(const uuid_t uu, uuid_string_t out)
{
}

kern_return_t vm_allocate(vm_map_t target_task, vm_address_t *address, vm_size_t size, int flags)
{
  return MEMORY[0x1F40CE6A8](*(void *)&target_task, address, size, *(void *)&flags);
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return MEMORY[0x1F40CE6C0](*(void *)&target_task, address, size);
}

kern_return_t vm_purgable_control(vm_map_t target_task, vm_address_t address, vm_purgable_t control, int *state)
{
  return MEMORY[0x1F40CE6E0](*(void *)&target_task, address, *(void *)&control, state);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return MEMORY[0x1F40CE928](*(void *)&__fd, __buf, __nbyte);
}

uint64_t xpc_copy_entitlement_for_self()
{
  return MEMORY[0x1F40CED30]();
}